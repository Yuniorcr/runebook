<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="sqlite">
    <body>
      <group id="sqlite">
        <trans-unit id="08b6cbcabbd6e71be72f53afc70af79412d77457" translate="yes" xml:space="preserve">
          <source>SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_8_2.html&quot;&gt;version 3.8.2&lt;/a&gt; (2013-12-06) or later is necessary in order to use a WITHOUT ROWID table. An attempt to open a database that contains one or more WITHOUT ROWID tables using an earlier version of SQLite will result in a &quot;malformed database schema&quot; error.</source>
          <target state="translated">SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_8_2.html&quot;&gt;версии 3.8.2&lt;/a&gt; (2013-12-06) или более поздней версии необходим для использования таблицы БЕЗ ROWID. Попытка открыть базу данных, содержащую одну или несколько таблиц БЕЗ ROWID с использованием более ранней версии SQLite, приведет к ошибке &amp;laquo;неверно сформированная схема базы данных&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="3e86e2833db1abf49e8061aaa2cd583e95133d97" translate="yes" xml:space="preserve">
          <source>SQLite &lt;a href=&quot;lang_select#crossjoin&quot;&gt;treats the CROSS JOIN operator specially&lt;/a&gt;. The CROSS JOIN operator is commutative in theory. But SQLite chooses to never reorder tables in a CROSS JOIN. This provides a mechanism by which the programmer can force SQLite to choose a particular loop nesting order.</source>
          <target state="translated">SQLite специально &lt;a href=&quot;lang_select#crossjoin&quot;&gt;обрабатывает оператор CROSS JOIN&lt;/a&gt; . Оператор CROSS JOIN в теории коммутативен. Но SQLite предпочитает никогда не изменять порядок таблиц в CROSS JOIN. Это обеспечивает механизм, с помощью которого программист может заставить SQLite выбрать определенный порядок вложения цикла.</target>
        </trans-unit>
        <trans-unit id="0bbb7536ee31c5a80721eae98fa10519f1ad8533" translate="yes" xml:space="preserve">
          <source>SQLite And 8+3 Filenames</source>
          <target state="translated">SQLite en 8+3 Filenamen</target>
        </trans-unit>
        <trans-unit id="e2d4ce9c3b2bbe3c99f8642fe06d326e27f53052" translate="yes" xml:space="preserve">
          <source>SQLite Archive</source>
          <target state="translated">SQLIETE-archief</target>
        </trans-unit>
        <trans-unit id="1c2e4c767e501295b07044a0be089e468b1c54e4" translate="yes" xml:space="preserve">
          <source>SQLite Archive Files</source>
          <target state="translated">SQLite Archiefbestanden</target>
        </trans-unit>
        <trans-unit id="d2b4826d6cd13e751ecf395b030c78611c772164" translate="yes" xml:space="preserve">
          <source>SQLite Archive smaller than ZIP</source>
          <target state="translated">SQLite Archief kleiner dan ZIP</target>
        </trans-unit>
        <trans-unit id="51574f80326ace266a8bf5040636cb259e147450" translate="yes" xml:space="preserve">
          <source>SQLite As An Application File Format</source>
          <target state="translated">SQLite als een Application File Format</target>
        </trans-unit>
        <trans-unit id="a2eb63f481d4cfa9928a76da8d2a3e4d7f83d8bb" translate="yes" xml:space="preserve">
          <source>SQLite As The Application File Format</source>
          <target state="translated">SQLite als het Application File Format</target>
        </trans-unit>
        <trans-unit id="4a3178c3074df690a5eb7e97c76ac53d45c44383" translate="yes" xml:space="preserve">
          <source>SQLite Assumptions About Powersafe Overwrite</source>
          <target state="translated">SQLite Veronderstellingen over Powersafe Overschrijven</target>
        </trans-unit>
        <trans-unit id="049b16eaba216715a3e362ab05145ec23c0b6c0b" translate="yes" xml:space="preserve">
          <source>SQLite Autoincrement</source>
          <target state="translated">SQLite Autoincrement</target>
        </trans-unit>
        <trans-unit id="08111684d7d4e09683b29110ad3d644fa9e33310" translate="yes" xml:space="preserve">
          <source>SQLite Backup API</source>
          <target state="translated">SQLite Backup API</target>
        </trans-unit>
        <trans-unit id="ad0e7df52748eecbc45730ba392651b98c724763" translate="yes" xml:space="preserve">
          <source>SQLite C/C++ Reference Guide</source>
          <target state="translated">SQLite C/C++Referentiegids</target>
        </trans-unit>
        <trans-unit id="c92de27dd7389ec46eb38a11b845ea569a381c7d" translate="yes" xml:space="preserve">
          <source>SQLite Changes From Version 3.4.2 To 3.5.0</source>
          <target state="translated">SQLite verandert van versie 3.4.2 naar 3.5.0</target>
        </trans-unit>
        <trans-unit id="25c3be734136db1baee77887da69941fe29aa884" translate="yes" xml:space="preserve">
          <source>SQLite Changes From Version 3.5.9 To 3.6.0</source>
          <target state="translated">SQLite verandert van versie 3.5.9 naar 3.6.0</target>
        </trans-unit>
        <trans-unit id="0444fc9f22bced4b2fff02fcfbe554ed7b1e5072" translate="yes" xml:space="preserve">
          <source>SQLite Database Speed Comparison</source>
          <target state="translated">SQLite Database Snelheidsvergelijking</target>
        </trans-unit>
        <trans-unit id="7b8f472af0032f55957a6dc12f85bfe03df14036" translate="yes" xml:space="preserve">
          <source>SQLite Documentation</source>
          <target state="translated">SQLite documentatie</target>
        </trans-unit>
        <trans-unit id="6ff713ff03124b24b867fcfe6378512d75f45ff5" translate="yes" xml:space="preserve">
          <source>SQLite FTS3 and FTS4 Extensions</source>
          <target state="translated">SQLite FTS3 en FTS4 uitbreidingen</target>
        </trans-unit>
        <trans-unit id="bb8dd4cb69443f463263e0baaae53f90fbc24c8e" translate="yes" xml:space="preserve">
          <source>SQLite FTS5 Extension</source>
          <target state="translated">SQLite FTS5 Uitbreiding</target>
        </trans-unit>
        <trans-unit id="2224f0faf91f0a51e1ba8f1cbb3ab37f2f712c36" translate="yes" xml:space="preserve">
          <source>SQLite File Database File Format</source>
          <target state="translated">SQLite Bestandsdatabase Bestandsformaat</target>
        </trans-unit>
        <trans-unit id="6eac80f01ebeadc3031650b9aefac516bf6e0bbd" translate="yes" xml:space="preserve">
          <source>SQLite File IO Specification</source>
          <target state="translated">SQLite Bestand IO Specificatie</target>
        </trans-unit>
        <trans-unit id="77914a1b06d12241c0755a61b1c00302dcab6be7" translate="yes" xml:space="preserve">
          <source>SQLite Foreign Key Support</source>
          <target state="translated">SQLite Foreign Key Support</target>
        </trans-unit>
        <trans-unit id="f65ccb959ceb3f4521413d9bdfa153476f97acaf" translate="yes" xml:space="preserve">
          <source>SQLite Frequently Asked Questions</source>
          <target state="translated">Часто задаваемые вопросы SQLite</target>
        </trans-unit>
        <trans-unit id="e852f86b5d09751d115407b22c097c26c15c6357" translate="yes" xml:space="preserve">
          <source>SQLite In 5 Minutes Or Less</source>
          <target state="translated">SQLite за 5 минут или меньше</target>
        </trans-unit>
        <trans-unit id="2fbb8bccf7dd8ebcb5b1089562fd0f1493f23b68" translate="yes" xml:space="preserve">
          <source>SQLite Is A Zero-Configuration Database</source>
          <target state="translated">SQLite-это база данных с нулевой конфигурацией.</target>
        </trans-unit>
        <trans-unit id="166abc8c6f5c5da769b2d025b705df20e04ef92a" translate="yes" xml:space="preserve">
          <source>SQLite Is Serverless</source>
          <target state="translated">SQLite бессерверный</target>
        </trans-unit>
        <trans-unit id="6b3190a178d6342f9ee76ff056763fdb914c2573" translate="yes" xml:space="preserve">
          <source>SQLite Is Transactional</source>
          <target state="translated">SQLite является транзакционным</target>
        </trans-unit>
        <trans-unit id="3ee672eb31b5447a08bacf0b40a3605a0b7bc619" translate="yes" xml:space="preserve">
          <source>SQLite Keywords</source>
          <target state="translated">ключевые слова SQLite</target>
        </trans-unit>
        <trans-unit id="a0504f17f4504d78de525defd78c85fa4ac14446" translate="yes" xml:space="preserve">
          <source>SQLite Library Footprint</source>
          <target state="translated">отпечаток библиотеки SQLite</target>
        </trans-unit>
        <trans-unit id="2b61cfd89697cf1e4c1606af934cf897a3a7e3c3" translate="yes" xml:space="preserve">
          <source>SQLite Runtime Status</source>
          <target state="translated">Статус выполнения SQLite</target>
        </trans-unit>
        <trans-unit id="d2298bad6251daf42a2fd57b3cda73107d61fb64" translate="yes" xml:space="preserve">
          <source>SQLite Session Module C/C++ Interface</source>
          <target state="translated">Модуль SQLite Session Module C/C++Интерфейс</target>
        </trans-unit>
        <trans-unit id="299b38a2c54499cac63ea1735d0f8e2caaea9a18" translate="yes" xml:space="preserve">
          <source>SQLite Shared-Cache Mode</source>
          <target state="translated">режим общего кэша SQLite</target>
        </trans-unit>
        <trans-unit id="677c15838e15871697707715489f6e66e916c277" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: aggregate-function-invocation</source>
          <target state="translated">Синтаксис SQLite:агрегат-функция-вызов</target>
        </trans-unit>
        <trans-unit id="4691dc8275b1b7dcdfb4a74a779f10a2ef5bbd95" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: alter-table-stmt</source>
          <target state="translated">Синтаксис SQLite:alter-table-stmt</target>
        </trans-unit>
        <trans-unit id="f5b6c872a84846a12015354c09cd6f7d86efd461" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: analyze-stmt</source>
          <target state="translated">Синтаксис SQLite:анализ-стмт</target>
        </trans-unit>
        <trans-unit id="684b2229f95587114a6593fd80991f4423d34aa8" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: attach-stmt</source>
          <target state="translated">Синтаксис SQLite:приложить-stmt</target>
        </trans-unit>
        <trans-unit id="f3514b2655ab967d1d4d9c40e5e30807c7435ade" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: begin-stmt</source>
          <target state="translated">Синтаксис SQLite:start-stmt</target>
        </trans-unit>
        <trans-unit id="c6cf986e37b92e0f71e4f25c33898b1f0f45dbcd" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: column-constraint</source>
          <target state="translated">Синтаксис SQLite:ограничение по столбцам</target>
        </trans-unit>
        <trans-unit id="eba9dd23d84d7e9bc75755c88603e6ac71390578" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: column-def</source>
          <target state="translated">Синтаксис SQLite:столбец-def</target>
        </trans-unit>
        <trans-unit id="ae4bf7f9ac99e8a57e0ac8bbb59715b46801a120" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: column-name-list</source>
          <target state="translated">Синтаксис SQLite:список названий колонок</target>
        </trans-unit>
        <trans-unit id="35991e0b4057b986eeadf0cc45c155dc0f91c65a" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: comment-syntax</source>
          <target state="translated">Синтаксис SQLite:комментарий-синтаксис</target>
        </trans-unit>
        <trans-unit id="f2e0ac0ef89c375d83c5b1384036f5b2516b9307" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: commit-stmt</source>
          <target state="translated">Синтаксис SQLite:коммит-шаблон</target>
        </trans-unit>
        <trans-unit id="95d23da3bee6078ef612231be1cfa8f10f805f2e" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: common-table-expression</source>
          <target state="translated">Синтаксис SQLite:общее-таблеточное выражение</target>
        </trans-unit>
        <trans-unit id="039c1612ed78696f89317565d7e41d051338a692" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: compound-operator</source>
          <target state="translated">Синтаксис SQLite:комбинированный оператор</target>
        </trans-unit>
        <trans-unit id="728336d6ce396fb5d1623d810ae16f2b0450b6c0" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: compound-select-stmt</source>
          <target state="translated">Синтаксис SQLite:соединение-выбор-штампы</target>
        </trans-unit>
        <trans-unit id="bb9e3604a676499a26de3609f97318d6f24b71ed" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: conflict-clause</source>
          <target state="translated">Синтаксис SQLite:конфликтная ситуация</target>
        </trans-unit>
        <trans-unit id="0443bffb822656183f2a577ef7880a0d4bd82031" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: create-index-stmt</source>
          <target state="translated">Синтаксис SQLite:креатив-индекс-штампель</target>
        </trans-unit>
        <trans-unit id="708dc5d9fd291c969b1bd2640875f8d92f5e9f11" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: create-table-stmt</source>
          <target state="translated">Синтаксис SQLite:создание-таблица-stmt</target>
        </trans-unit>
        <trans-unit id="303fde63f397da7c4f8cbb6017ecd31afaf4ddfb" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: create-trigger-stmt</source>
          <target state="translated">Синтаксис SQLite:create-trigger-stmt</target>
        </trans-unit>
        <trans-unit id="b8fb6d35aab37ca2af3cdac57b071efd02d6924c" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: create-view-stmt</source>
          <target state="translated">Синтаксис SQLite:сценарий создания</target>
        </trans-unit>
        <trans-unit id="b4889bbb657490dfcf4c3f5ba65751a10e51e723" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: create-virtual-table-stmt</source>
          <target state="translated">Синтаксис SQLite:создание-виртуальный-таблица-stmt</target>
        </trans-unit>
        <trans-unit id="76067026e43105f05d6bff642ac214381ad9922a" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: cte-table-name</source>
          <target state="translated">Синтаксис SQLite:имя cte-таблицы</target>
        </trans-unit>
        <trans-unit id="91e0a17a4c4f2bf18fcffb5ebc2e0e3a2cdf8562" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: delete-stmt</source>
          <target state="translated">Синтаксис SQLite:удалить-stmt</target>
        </trans-unit>
        <trans-unit id="9d4d0e69a4f08fa8640faffc0b2d4299f162f2b7" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: delete-stmt-limited</source>
          <target state="translated">Синтаксис SQLite:удаление-ограничение</target>
        </trans-unit>
        <trans-unit id="e90497d8998fdb3ccb26a77962c7bbcbf635bde9" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: detach-stmt</source>
          <target state="translated">Синтаксис SQLite:отстранение от работы</target>
        </trans-unit>
        <trans-unit id="91195854864f792e27abec14d3537b15c279bb14" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: drop-index-stmt</source>
          <target state="translated">Синтаксис SQLite:drop-index-stmt</target>
        </trans-unit>
        <trans-unit id="85347359e1b4766f91b51c95ced69b0f3029b8b0" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: drop-table-stmt</source>
          <target state="translated">Синтаксис SQLite:падение-таблица-stmt</target>
        </trans-unit>
        <trans-unit id="621be33c7e22655bf397c677d9a95ce0336e9ff0" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: drop-trigger-stmt</source>
          <target state="translated">Синтаксис SQLite:drop-trigger-stmt</target>
        </trans-unit>
        <trans-unit id="855719862278805238899aaa962a1d7f018de7d9" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: drop-view-stmt</source>
          <target state="translated">Синтаксис SQLite:drop-view-stmt</target>
        </trans-unit>
        <trans-unit id="067a126b6088641ddc4fdcfa3722e62011bb4f51" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: expr</source>
          <target state="translated">Синтаксис SQLite:expr</target>
        </trans-unit>
        <trans-unit id="9f140fca538ac6edd7ef2eee0de838e80a2d449e" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: factored-select-stmt</source>
          <target state="translated">Синтаксис SQLite:factored-select-stmt</target>
        </trans-unit>
        <trans-unit id="27f6b600e670fe7c00dc0b08eb62b4d324c84033" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: filter-clause</source>
          <target state="translated">Синтаксис SQLite:фильтр-причина</target>
        </trans-unit>
        <trans-unit id="ba88876d319af8f2577df00c41efe0395f45bff9" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: foreign-key-clause</source>
          <target state="translated">Синтаксис SQLite:внешне-клавишный синтаксис</target>
        </trans-unit>
        <trans-unit id="fd9de54f1cc00c8e574ac8953ad69298071208e7" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: frame-spec</source>
          <target state="translated">Синтаксис SQLite:frame-spec</target>
        </trans-unit>
        <trans-unit id="87d64c023e5e381103487db80f2868b5978714a7" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: indexed-column</source>
          <target state="translated">Синтаксис SQLite:индексированная колонка</target>
        </trans-unit>
        <trans-unit id="3d4594d2848b2394bbefe5ea8217cc7e3c76f672" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: insert-stmt</source>
          <target state="translated">Синтаксис SQLite:вставка-вставка</target>
        </trans-unit>
        <trans-unit id="8577db36921d583cdcad51a5c03a4f6e97bffb21" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: join-clause</source>
          <target state="translated">Синтаксис SQLite:соединение-поле</target>
        </trans-unit>
        <trans-unit id="aba100e55d4db0adbf63a3bb9f3710458e0d827e" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: join-constraint</source>
          <target state="translated">Синтаксис SQLite:ограничение на соединение</target>
        </trans-unit>
        <trans-unit id="16f1a5cc270acbe167090bf3cbafd62173aed97d" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: join-operator</source>
          <target state="translated">Синтаксис SQLite:объединенный оператор</target>
        </trans-unit>
        <trans-unit id="d0bc2ede668fa14ed80b38fa0115bfb1ec4cad31" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: literal-value</source>
          <target state="translated">Синтаксис SQLite:буквальное значение</target>
        </trans-unit>
        <trans-unit id="d05cc0fdc4cf9429206e8f1323d48eb520a03d21" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: numeric-literal</source>
          <target state="translated">Синтаксис SQLite:численно-литературный</target>
        </trans-unit>
        <trans-unit id="8bcdc034c5a8d5eea59002db151c0f81acb97578" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: ordering-term</source>
          <target state="translated">Синтаксис SQLite Синтаксис:срок заказа</target>
        </trans-unit>
        <trans-unit id="664b6cb7705a6e43244b1416c9701b0b2b507bca" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: over-clause</source>
          <target state="translated">Синтаксис SQLite:избыточная причина</target>
        </trans-unit>
        <trans-unit id="a238ba2cad4f605801c8b083f2572a2a958876d4" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: pragma-stmt</source>
          <target state="translated">Синтаксис SQLite:прагма-стмт</target>
        </trans-unit>
        <trans-unit id="81fe0e201877124c81cf3c039fede3b4583bfba3" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: pragma-value</source>
          <target state="translated">Синтаксис SQLite:прагматическое значение</target>
        </trans-unit>
        <trans-unit id="280eeaf5a048efcbfa18fbd4f149831662d48acd" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: qualified-table-name</source>
          <target state="translated">Синтаксис SQLite:квалифицированное имя-таблица</target>
        </trans-unit>
        <trans-unit id="e6ef0134a6bc4d48f79e0039c929d4d37c652dc3" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: raise-function</source>
          <target state="translated">Синтаксис SQLite:raise-функция</target>
        </trans-unit>
        <trans-unit id="3a40e3d3c18f61cfd21291d4b84660edf656ce99" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: recursive-cte</source>
          <target state="translated">Синтаксис SQLite:рекурсивный код</target>
        </trans-unit>
        <trans-unit id="c1d248b2a2ba6dd3ea14e6a9d4d79ed7f94444cf" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: reindex-stmt</source>
          <target state="translated">Синтаксис SQLite:реиндекс-штампель</target>
        </trans-unit>
        <trans-unit id="a13d31221e9d4037f421a6d37ea073fc63b695b8" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: release-stmt</source>
          <target state="translated">Синтаксис SQLite:релиз-стмт</target>
        </trans-unit>
        <trans-unit id="f08276238d08e10966ddb10944ae99158c816126" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: result-column</source>
          <target state="translated">Синтаксис SQLite:столбец результата</target>
        </trans-unit>
        <trans-unit id="69fe7851d9b587098d2b17109c11dc725ff51b70" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: rollback-stmt</source>
          <target state="translated">Синтаксис SQLite:обратная перемотка</target>
        </trans-unit>
        <trans-unit id="cec796a9d19402e6e453aa86dc4dd4a673b51a97" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: savepoint-stmt</source>
          <target state="translated">Синтаксис SQLite:точка экономии</target>
        </trans-unit>
        <trans-unit id="985f7fbb23c1934fca9c9349003183d72524c2d3" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: select-core</source>
          <target state="translated">Синтаксис SQLite:select-core</target>
        </trans-unit>
        <trans-unit id="ce29139f5831e2f5e82346f67a1f683a7627f040" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: select-stmt</source>
          <target state="translated">Синтаксис SQLite:select-stmt</target>
        </trans-unit>
        <trans-unit id="45300c89b269b19c7948d6c1e6bfc93bae6db7b3" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: signed-number</source>
          <target state="translated">Синтаксис SQLite:подписанный номер</target>
        </trans-unit>
        <trans-unit id="e2dddad4353873534c5a965851be336502d4f375" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: simple-function-invocation</source>
          <target state="translated">Синтаксис SQLite:простая функция-вызов</target>
        </trans-unit>
        <trans-unit id="e95eb7cbc0e5efb7cb3ea0b3ab2d164c6af1ea4b" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: simple-select-stmt</source>
          <target state="translated">Синтаксис SQLite:простой способ выбора</target>
        </trans-unit>
        <trans-unit id="4c0ec00be423bb27ec90eee0603c0c511827c050" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: sql-stmt</source>
          <target state="translated">Синтаксис SQLite:sql-stmt</target>
        </trans-unit>
        <trans-unit id="6c5ec49d95e64968ffbc676a4ac0c92a033fdbfe" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: sql-stmt-list</source>
          <target state="translated">Синтаксис SQLite:sql-список</target>
        </trans-unit>
        <trans-unit id="e9188ff0476af5124a331c5defa406d27d25456e" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: table-constraint</source>
          <target state="translated">Синтаксис SQLite:ограничения по таблицам</target>
        </trans-unit>
        <trans-unit id="3004d1bb7f3075c9abc745d7922ef925affb2fa1" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: table-or-subquery</source>
          <target state="translated">Синтаксис SQLite:таблица или подзапрос</target>
        </trans-unit>
        <trans-unit id="560c464a694343364d8c50f76894aebe3f735689" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: type-name</source>
          <target state="translated">Синтаксис SQLite:имя типа</target>
        </trans-unit>
        <trans-unit id="e649ec1aef1d598b439cb497e4a46afc39cbe73f" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: update-stmt</source>
          <target state="translated">Синтаксис SQLite:обновление-stmt</target>
        </trans-unit>
        <trans-unit id="06ff24e6ae0f0f3f737fc0fa722249611f0912bc" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: update-stmt-limited</source>
          <target state="translated">Синтаксис SQLite:с ограничением по времени обновления</target>
        </trans-unit>
        <trans-unit id="544b5efeb28fe81cb603bc870933ca21b5f35890" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: upsert-clause</source>
          <target state="translated">Синтаксис SQLite:всплеск-остановка</target>
        </trans-unit>
        <trans-unit id="71070233d1585db4326c0f6451968d1c320c6cb9" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: vacuum-stmt</source>
          <target state="translated">Синтаксис SQLite:вакуумный штурм</target>
        </trans-unit>
        <trans-unit id="f1d004a43cadf321c4e18f1bbca885f5f177b4a4" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: window-defn</source>
          <target state="translated">Синтаксис SQLite:window-defn</target>
        </trans-unit>
        <trans-unit id="2a465aee6a993a25486e8c76e81ed49d1553ea4b" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: window-function-invocation</source>
          <target state="translated">Синтаксис SQLite:функция-окноинвация</target>
        </trans-unit>
        <trans-unit id="3b530b8fa9b84d9671440411981b99fb1eeb4e3f" translate="yes" xml:space="preserve">
          <source>SQLite Syntax: with-clause</source>
          <target state="translated">Синтаксис SQLite:с причиной</target>
        </trans-unit>
        <trans-unit id="8bfbbc2e777cd02dc1cf2d883ae13c1f62982d58" translate="yes" xml:space="preserve">
          <source>SQLite Test Harness #3 (hereafter &quot;TH3&quot;) is one of &lt;a href=&quot;testing#harnesses&quot;&gt;three test harnesses&lt;/a&gt; used for testing SQLite. TH3 meets the following objectives:</source>
          <target state="translated">SQLite Test Harness # 3 (далее &amp;laquo;TH3&amp;raquo;) - это одна из &lt;a href=&quot;testing#harnesses&quot;&gt;трех тестовых программ,&lt;/a&gt; используемых для тестирования SQLite. TH3 выполняет следующие задачи:</target>
        </trans-unit>
        <trans-unit id="c4c0058559ad2757e2f42dec76caf9ac8c7164ae" translate="yes" xml:space="preserve">
          <source>SQLite Unlock-Notify API</source>
          <target state="translated">Разблокировка SQLite-уведомление API</target>
        </trans-unit>
        <trans-unit id="a028956a99a12bd048e1eeff4723ada12456d471" translate="yes" xml:space="preserve">
          <source>SQLite Version 3 Overview</source>
          <target state="translated">Обзор версии 3 SQLite</target>
        </trans-unit>
        <trans-unit id="bd96d83d414ccfb7bc5520b4ea64da03f619d463" translate="yes" xml:space="preserve">
          <source>SQLite Virtual File System</source>
          <target state="translated">Виртуальная файловая система SQLite</target>
        </trans-unit>
        <trans-unit id="6622991f94a6e3a971610a97b129a00df4671455" translate="yes" xml:space="preserve">
          <source>SQLite accepts both of the above. But, in an effort to be compatible with MySQL 3.x (which was one of the most widely used RDBMSes when SQLite was first being designed) SQLite will also interpret a double-quotes string as string literal if it does not match any valid identifier.</source>
          <target state="translated">SQLite принимает оба вышеперечисленных варианта.Но,чтобы быть совместимым с MySQL 3.x (которая была одной из наиболее широко используемых СУБД при разработке SQLite),SQLite также будет интерпретировать строку в двойных кавычках как строковый литерал,если она не совпадает с каким-либо допустимым идентификатором.</target>
        </trans-unit>
        <trans-unit id="7969bc0ef72affc99d4e83ba233f43547794f858" translate="yes" xml:space="preserve">
          <source>SQLite accomplishes these goals using the following techniques:</source>
          <target state="translated">SQLite достигает этих целей с помощью следующих методов:</target>
        </trans-unit>
        <trans-unit id="93485e58ca6a1adc30eee7bf094d9254f1bee763" translate="yes" xml:space="preserve">
          <source>SQLite adds new keywords from time to time when it takes on new features. So to prevent your code from being broken by future enhancements, you should normally quote any identifier that is an English language word, even if you do not have to.</source>
          <target state="translated">Время от времени SQLite добавляет новые ключевые слова,когда берет на себя новые функции.Поэтому,чтобы не допустить взлома вашего кода в результате будущих улучшений,вы должны,как правило,цитировать любой идентификатор,который является английским словом,даже если вам и не нужно.</target>
        </trans-unit>
        <trans-unit id="0c35a475a7114c76d3815adf2008d8ab3592758e" translate="yes" xml:space="preserve">
          <source>SQLite allocates space to hold all host parameters between 1 and the largest host parameter number used. Hence, an SQL statement that contains a host parameter like ?1000000000 would require gigabytes of storage. This could easily overwhelm the resources of the host machine. To prevent excessive memory allocations, the maximum value of a host parameter number is SQLITE_MAX_VARIABLE_NUMBER, which defaults to 999 for SQLite versions prior to 3.32.0 (2020-05-22) or 32766 for SQLite versions after 3.32.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1be33c93281691f32c1348190378d0671224738" translate="yes" xml:space="preserve">
          <source>SQLite allocates space to hold all host parameters between 1 and the largest host parameter number used. Hence, an SQL statement that contains a host parameter like ?1000000000 would require gigabytes of storage. This could easily overwhelm the resources of the host machine. To prevent excessive memory allocations, the maximum value of a host parameter number is SQLITE_MAX_VARIABLE_NUMBER, which defaults to 999.</source>
          <target state="translated">SQLite выделяет место для хранения всех параметров хоста между 1 и наибольшим номером используемого параметра хоста.Следовательно,SQL-оператору,содержащему такой параметр хоста,как ?1000000000,потребуются гигабайты памяти.Это может легко привести к перегрузке ресурсов хостовой машины.Для предотвращения чрезмерного выделения памяти максимальным значением номера параметра хоста является SQLITE_MAX_VARIABLE_NUMBER,который по умолчанию равен 999.</target>
        </trans-unit>
        <trans-unit id="028432208e1a28c564db5004c2abbc25db803bf5" translate="yes" xml:space="preserve">
          <source>SQLite allows &lt;a href=&quot;lang_expr#varparam&quot;&gt;bound parameters&lt;/a&gt; to appear in an SQL statement anywhere that a literal value is allowed. The values for these parameters are set using the &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_...()&lt;/a&gt; family of APIs.</source>
          <target state="translated">SQLite позволяет &lt;a href=&quot;lang_expr#varparam&quot;&gt;связанным параметрам&lt;/a&gt; появляться в операторе SQL везде, где разрешено буквальное значение. Значения для этих параметров устанавливаются с помощью семейства API &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind _... ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="278782a5b168582474220ea63200b84c038c9dc8" translate="yes" xml:space="preserve">
          <source>SQLite allows &lt;a href=&quot;nulls&quot;&gt;NULL values&lt;/a&gt; to be stored in PRIMARY KEY columns. However, the session extension ignores all such rows. No changes affecting rows with one or more NULL values in PRIMARY KEY columns are recorded by the sessions module.</source>
          <target state="translated">SQLite позволяет хранить &lt;a href=&quot;nulls&quot;&gt;значения NULL&lt;/a&gt; в столбцах PRIMARY KEY. Однако расширение сеанса игнорирует все такие строки. Никакие изменения, затрагивающие строки с одним или несколькими значениями NULL в столбцах PRIMARY KEY, не записываются модулем сеансов.</target>
        </trans-unit>
        <trans-unit id="884c046dfb4d83f0b2a502b3f7e63f5f14133cf1" translate="yes" xml:space="preserve">
          <source>SQLite allows NUL characters (ASCII 0x00, Unicode \u0000) in the middle of string values stored in the database. However, the use of NUL within strings can lead to surprising behaviors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebacbcb8bf95caa1ee114063133ab4b95b55473" translate="yes" xml:space="preserve">
          <source>SQLite allows a &lt;a href=&quot;lang_expr#varparam&quot;&gt;parameter&lt;/a&gt; wherever a string literal, numeric constant, or NULL is allowed. (Parameters may not be used for column or table names.) A &lt;a href=&quot;lang_expr#varparam&quot;&gt;parameter&lt;/a&gt; takes one of the following forms:</source>
          <target state="translated">SQLite позволяет использовать &lt;a href=&quot;lang_expr#varparam&quot;&gt;параметр&lt;/a&gt; везде, где разрешены строковый литерал, числовая константа или NULL. (Параметры не могут использоваться для имен столбцов или таблиц.) &lt;a href=&quot;lang_expr#varparam&quot;&gt;Параметр&lt;/a&gt; принимает одну из следующих форм:</target>
        </trans-unit>
        <trans-unit id="5fdab0901a13bb73134edf1f5b43792bfd020d0d" translate="yes" xml:space="preserve">
          <source>SQLite allows a single &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; to talk to two or more database files simultaneously through the use of the &lt;a href=&quot;lang_attach&quot;&gt;ATTACH DATABASE&lt;/a&gt; command. When multiple database files are modified within a single transaction, all files are updated atomically. In other words, either all of the database files are updated or else none of them are. Achieving an atomic commit across multiple database files is more complex that doing so for a single file. This section describes how SQLite works that bit of magic.</source>
          <target state="translated">SQLite позволяет одному &lt;a href=&quot;c3ref/sqlite3&quot;&gt;соединению&lt;/a&gt; с базой данных одновременно общаться с двумя или более файлами базы данных с помощью команды &lt;a href=&quot;lang_attach&quot;&gt;ATTACH DATABASE&lt;/a&gt; . Когда несколько файлов базы данных изменяются в рамках одной транзакции, все файлы обновляются атомарно. Другими словами, обновляются либо все файлы базы данных, либо ни один из них. Выполнение атомарной фиксации для нескольких файлов базы данных сложнее, чем для одного файла. В этом разделе описывается, как SQLite работает с этой магией.</target>
        </trans-unit>
        <trans-unit id="cc7a43eb476861ca4de0ab85bc340fdf021129ce" translate="yes" xml:space="preserve">
          <source>SQLite allows database files to have any desired filename extension, so an application can choose a custom filename extension for its own use, if desired. The &lt;a href=&quot;pragma#pragma_application_id&quot;&gt;application_id pragma&lt;/a&gt; can be used to set an &quot;Application ID&quot; integer in the database file so that tools like &lt;a href=&quot;http://www.darwinsys.com/file/&quot;&gt;file(1)&lt;/a&gt; can determine that the file is associated with your application and is not just a generic SQL database.</source>
          <target state="translated">SQLite позволяет файлам базы данных иметь любое желаемое расширение имени файла, поэтому приложение может при желании выбрать собственное расширение имени файла для собственного использования. &lt;a href=&quot;pragma#pragma_application_id&quot;&gt;Application_id прагма&lt;/a&gt; может использоваться , чтобы установить &amp;laquo;Application ID&amp;raquo; целое число в файле базы данных , так что инструменты , такие как &lt;a href=&quot;http://www.darwinsys.com/file/&quot;&gt;файл (1)&lt;/a&gt; можно определить , что файл связан с приложением и не только общая база данных SQL.</target>
        </trans-unit>
        <trans-unit id="7dd980880596b1666ea5094593b639d4cc0c7ac5" translate="yes" xml:space="preserve">
          <source>SQLite allows row values to be expressed in two ways:</source>
          <target state="translated">SQLite позволяет выразить значения строк двумя способами:</target>
        </trans-unit>
        <trans-unit id="72c273d6d02f4047a096d5a6faa4aee763a76338" translate="yes" xml:space="preserve">
          <source>SQLite allows you to store BLOB data in any column, even columns that are declared to hold some other type. BLOBs can even be used as PRIMARY KEYs.</source>
          <target state="translated">SQLite позволяет хранить BLOB-данные в любом столбце,даже в тех столбцах,которые объявлены как содержащие какой-то другой тип.BLOB-данные могут быть даже использованы в качестве PRIMARY KEY.</target>
        </trans-unit>
        <trans-unit id="8a29650667127162de04d158b912a78c7b191fe0" translate="yes" xml:space="preserve">
          <source>SQLite also allows two or more SELECT statements to be joined as peers using operators UNION, UNION ALL, INTERSECT, and EXCEPT. These compound select statements are implemented using transient tables. The implementation is slightly different for each operator, but the basic ideas are the same. For an example we will use the EXCEPT operator.</source>
          <target state="translated">SQLite также позволяет объединять два или более операторов SELECT,используя операторы UNION,UNION ALL,INTERSECT и EXCEPT.Эти составные операторы выбора реализуются с помощью переходных таблиц.Реализация несколько отличается для каждого оператора,но основные идеи одинаковы.Для примера будем использовать оператор EXCEPT.</target>
        </trans-unit>
        <trans-unit id="637b40631e98becd08eb5f7d6c42ce3df54984ba" translate="yes" xml:space="preserve">
          <source>SQLite also maintains a hard upper bound on the mmap_size. Attempts to increase the mmap_size above this hard upper bound (using &lt;a href=&quot;pragma#pragma_mmap_size&quot;&gt;PRAGMA mmap_size&lt;/a&gt;) will automatically cap the mmap_size at the hard upper bound. If the hard upper bound is zero, then memory mapped I/O is impossible. The hard upper bound can be set at compile-time using the &lt;a href=&quot;compile#max_mmap_size&quot;&gt;SQLITE_MAX_MMAP_SIZE&lt;/a&gt; macro. If &lt;a href=&quot;compile#max_mmap_size&quot;&gt;SQLITE_MAX_MMAP_SIZE&lt;/a&gt; is set to zero, then the code used to implement memory mapped I/O is omitted from the build. The hard upper bound is automatically set to zero on certain platforms (ex: OpenBSD) where memory mapped I/O does not work due to the lack of a unified buffer cache.</source>
          <target state="translated">SQLite также поддерживает жесткую верхнюю границу mmap_size. Попытки увеличить mmap_size выше этой жесткой верхней границы (с использованием &lt;a href=&quot;pragma#pragma_mmap_size&quot;&gt;PRAGMA mmap_size&lt;/a&gt; ) автоматически ограничивают mmap_size жесткой верхней границей. Если жесткая верхняя граница равна нулю, ввод-вывод с отображением памяти невозможен. Жесткая верхняя граница может быть установлена ​​во время компиляции с &lt;a href=&quot;compile#max_mmap_size&quot;&gt;помощью&lt;/a&gt; макроса SQLITE_MAX_MMAP_SIZE . Если &lt;a href=&quot;compile#max_mmap_size&quot;&gt;SQLITE_MAX_MMAP_SIZE&lt;/a&gt; установлен в ноль, то код, используемый для реализации ввода-вывода с отображением памяти, не включается в сборку. Жесткая верхняя граница автоматически устанавливается на ноль на определенных платформах (например, OpenBSD), где ввод-вывод с отображением памяти не работает из-за отсутствия унифицированного буферного кеша.</target>
        </trans-unit>
        <trans-unit id="a1b4fd5ebb0d7780ed8ecffd7a393ffca7213601" translate="yes" xml:space="preserve">
          <source>SQLite also supports continuous update. Instead of collecting changes in memory and then writing them to disk only on a File/Save action, changes can be written back to the disk as they occur. This avoids loss of work on a system crash or power failure. An &lt;a href=&quot;undoredo&quot;&gt;automated undo/redo stack&lt;/a&gt;, managed using triggers, can be kept in the on-disk database, meaning that undo/redo can occur across session boundaries.</source>
          <target state="translated">SQLite также поддерживает непрерывное обновление. Вместо того, чтобы собирать изменения в памяти и затем записывать их на диск только с помощью действия &amp;laquo;Файл / Сохранить&amp;raquo;, изменения можно записывать обратно на диск по мере их возникновения. Это позволяет избежать потери работы из-за сбоя системы или сбоя питания. &lt;a href=&quot;undoredo&quot;&gt;Автоматизированный Undo / Redo стек&lt;/a&gt; , управляемый с помощью триггеров, может быть сохранены в базе данных на диске, а это означает , что отмена / повтор может происходить через границу сеанса.</target>
        </trans-unit>
        <trans-unit id="329060624f510ae9922f24c62d601f675e2d16ed" translate="yes" xml:space="preserve">
          <source>SQLite also supports custom &lt;a href=&quot;vtab#tabfunc2&quot;&gt;table-valued functions&lt;/a&gt;, but they are implemented by a different mechanism that is not covered in this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac820d2c8ac9fabacbf33e56fbf0619b4b852375" translate="yes" xml:space="preserve">
          <source>SQLite always constructs the loops in the same order as the tables appear in the FROM clause of the SELECT statement. The left-most table becomes the outer loop and the right-most table becomes the inner loop. It is possible, in theory, to reorder the loops in some circumstances to speed the evaluation of the join. But SQLite does not attempt this optimization.</source>
          <target state="translated">SQLite всегда строит циклы в том же порядке,в каком таблицы появляются в пункте FROM оператора SELECT.Самая левая таблица становится внешним циклом,а самая правая-внутренним.Теоретически можно переупорядочить циклы при некоторых обстоятельствах,чтобы ускорить оценку соединения.Но SQLite не пытается провести такую оптимизацию.</target>
        </trans-unit>
        <trans-unit id="a6d2ae6a0c05e99e10243796d37bf281d92ff6ce" translate="yes" xml:space="preserve">
          <source>SQLite always converts numbers into double-precision (64-bit) floats for comparison purposes. This means that a long sequence of digits that differ only in insignificant digits will compare equal if they are in a numeric column but will compare unequal if they are in a text column. We have:</source>
          <target state="translated">SQLite всегда преобразует числа в 64-битные с плавающей точностью для сравнения.Это означает,что длинная последовательность цифр,отличающихся только незначительными цифрами,будет сравниваться равной,если они находятся в числовом столбце,но будет сравниваться неравномерно,если они находятся в текстовом.Так и есть:</target>
        </trans-unit>
        <trans-unit id="5149f6fd20b777693e945883aade1a453a85108d" translate="yes" xml:space="preserve">
          <source>SQLite assumes that a file deletion is atomic from the point of view of a user process. By this we mean that if SQLite requests that a file be deleted and the power is lost during the delete operation, once power is restored either the file will exist completely with all if its original content unaltered, or else the file will not be seen in the filesystem at all. If after power is restored the file is only partially deleted, if some of its data has been altered or erased, or the file has been truncated but not completely removed, then database corruption will likely result.</source>
          <target state="translated">SQLite предполагает,что удаление файла является атомарным с точки зрения пользовательского процесса.Под этим мы понимаем,что если SQLite попросит удалить файл и во время операции удаления будет потеряно питание,то после восстановления питания либо файл будет существовать полностью со всем,если его исходное содержимое не будет изменено,либо файл вообще не будет виден в файловой системе.Если после восстановления питания файл будет удален только частично,если часть его данных была изменена или стерта,или же файл был усечен,но не полностью удален,то,скорее всего,произойдет повреждение базы данных.</target>
        </trans-unit>
        <trans-unit id="47cc3cb9abff9d6022223d946bdf388c686ec2a8" translate="yes" xml:space="preserve">
          <source>SQLite assumes that file deletion is an atomic operation from the point of view of a user process. If power fails in the middle of a file deletion, then after power is restored SQLite expects to see either the entire file with all of its original data intact, or it expects not to find the file at all. Transactions may not be atomic on systems that do not work this way.</source>
          <target state="translated">SQLite предполагает,что удаление файлов является атомарной операцией с точки зрения пользовательского процесса.Если в середине процесса удаления файла происходит сбой питания,то после восстановления питания SQLite ожидает увидеть либо весь файл со всеми его исходными данными в целости и сохранности,либо ожидает,что файл не будет найден вообще.Транзакции могут быть не атомарными на системах,которые не работают таким образом.</target>
        </trans-unit>
        <trans-unit id="adec4e330b65c9b3e58a2c5af4b816aeb357f3e0" translate="yes" xml:space="preserve">
          <source>SQLite assumes that the detection and/or correction of bit errors caused by cosmic rays, thermal noise, quantum fluctuations, device driver bugs, or other mechanisms, is the responsibility of the underlying hardware and operating system. SQLite does not add any redundancy to the database file for the purpose of detecting corruption or I/O errors. SQLite assumes that the data it reads is exactly the same data that it previously wrote.</source>
          <target state="translated">SQLite предполагает,что за обнаружение и/или исправление битовых ошибок,вызванных космическими лучами,тепловым шумом,квантовыми колебаниями,ошибками драйвера устройства или другими механизмами,отвечает основное аппаратное обеспечение и операционная система.SQLite не добавляет избыточности в файл базы данных с целью обнаружения повреждений или ошибок ввода/вывода.SQLite предполагает,что прочитанные им данные в точности совпадают с данными,которые он записывал ранее.</target>
        </trans-unit>
        <trans-unit id="be735f717b7a7e354acc45a2112bfb053a9d4325" translate="yes" xml:space="preserve">
          <source>SQLite assumes that the operating system will buffer writes and that a write request will return before data has actually been stored in the mass storage device. SQLite further assumes that write operations will be reordered by the operating system. For this reason, SQLite does a &quot;flush&quot; or &quot;fsync&quot; operation at key points. SQLite assumes that the flush or fsync will not return until all pending write operations for the file that is being flushed have completed. We are told that the flush and fsync primitives are broken on some versions of Windows and Linux. This is unfortunate. It opens SQLite up to the possibility of database corruption following a power loss in the middle of a commit. However, there is nothing that SQLite can do to test for or remedy the situation. SQLite assumes that the operating system that it is running on works as advertised. If that is not quite the case, well then hopefully you will not lose power too often.</source>
          <target state="translated">SQLite предполагает,что операционная система будет буфером записи и что запрос на запись вернется до того,как данные действительно будут храниться в устройстве массового хранения.Далее SQLite предполагает,что операции записи будут переупорядочены операционной системой.По этой причине SQLite выполняет операцию &quot;флеш&quot; или &quot;фсинхронизация&quot; в ключевых точках.SQLite предполагает,что операция &quot;флеш&quot; или &quot;фсинхронизация&quot; не вернется до тех пор,пока не завершатся все отложенные операции записи для файла,который подлежит флеш-памяти.Нам сказали,что примитивы flush и fsync сломаны на некоторых версиях Windows и Linux.Это прискорбно.Это открывает SQLite до возможности повреждения базы данных после потери мощности в середине коммита.Однако SQLite ничего не может сделать для проверки или исправления ситуации.SQLite предполагает,что операционная система,на которой он работает,работает как рекламируется.Если это не совсем так,то,надеюсь,вы не будете слишком часто терять мощность.</target>
        </trans-unit>
        <trans-unit id="eac5840b276383c5ab7ffbc04386838e9a3a1b34" translate="yes" xml:space="preserve">
          <source>SQLite assumes that when a file grows in length that the new file space originally contains garbage and then later is filled in with the data actually written. In other words, SQLite assumes that the file size is updated before the file content. This is a pessimistic assumption and SQLite has to do some extra work to make sure that it does not cause database corruption if power is lost between the time when the file size is increased and when the new content is written. The xDeviceCharacteristics method of the &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; might indicate that the filesystem will always write the data before updating the file size. (This is the SQLITE_IOCAP_SAFE_APPEND property for those readers who are looking at the code.) When the xDeviceCharacteristics method indicates that files content is written before the file size is increased, SQLite can forego some of its pedantic database protection steps and thereby decrease the amount of disk I/O needed to perform a commit. The current implementation, however, makes no such assumptions for the default VFSes for Windows and Unix.</source>
          <target state="translated">SQLite предполагает, что при увеличении длины файла новое файловое пространство изначально содержит мусор, а затем заполняется фактически записанными данными. Другими словами, SQLite предполагает, что размер файла обновляется раньше, чем содержимое файла. Это пессимистическое предположение, и SQLite должен проделать некоторую дополнительную работу, чтобы убедиться, что он не приведет к повреждению базы данных при потере питания между моментом увеличения размера файла и записью нового содержимого. Метод xDeviceCharacteristics &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;может указывать на то, что файловая система всегда будет записывать данные перед обновлением размера файла. (Это свойство SQLITE_IOCAP_SAFE_APPEND для тех читателей, которые просматривают код.) Когда метод xDeviceCharacteristics указывает, что содержимое файлов записывается до увеличения размера файла, SQLite может отказаться от некоторых своих педантичных шагов по защите базы данных и тем самым уменьшить количество дисковый ввод-вывод, необходимый для выполнения фиксации. Однако текущая реализация не делает таких предположений для VFS по умолчанию для Windows и Unix.</target>
        </trans-unit>
        <trans-unit id="f72e7e6a8e3533bba6109b9b427868c41f828eab" translate="yes" xml:space="preserve">
          <source>SQLite attempts to use an index to satisfy the ORDER BY clause of a query when possible. When faced with the choice of using an index to satisfy WHERE clause constraints or satisfying an ORDER BY clause, SQLite does the same cost analysis described above and chooses the index that it believes will result in the fastest answer.</source>
          <target state="translated">SQLite пытается использовать индекс,чтобы по возможности удовлетворить предложение &quot;ЗАКАЗАТЬСЯ ПО ЗАКАЗЧИКУ&quot;.Столкнувшись с выбором использования индекса для удовлетворения ограничений по пунктам &quot;ГДЕ&quot; или &quot;ЗАКАЗЧИК ВА&quot;,SQLite проводит анализ стоимости,описанный выше,и выбирает индекс,который,по его мнению,приведет к самому быстрому ответу.</target>
        </trans-unit>
        <trans-unit id="c7b4924fe5a0590164a78695840bbbd42f195a38" translate="yes" xml:space="preserve">
          <source>SQLite automatically frees the memory allocated by sqlite3_aggregate_context() when the aggregate query concludes.</source>
          <target state="translated">SQLite автоматически освобождает память,выделенную функцией sqlite3_aggregate_context()при завершении агрегированного запроса.</target>
        </trans-unit>
        <trans-unit id="1b3055b66526cbbe45b4800a2c0d18f447b730c9" translate="yes" xml:space="preserve">
          <source>SQLite automatically increments the schema-version whenever the schema changes. As each SQL statement runs, the schema version is checked to ensure that the schema has not changed since the SQL statement was &lt;a href=&quot;c3ref/prepare&quot;&gt;prepared&lt;/a&gt;. Subverting this mechanism by using &quot;PRAGMA schema_version&quot; may cause SQL statement to run using an obsolete schema, which can lead to incorrect answers and/or &lt;a href=&quot;howtocorrupt#cfgerr&quot;&gt;database corruption&lt;/a&gt;.</source>
          <target state="translated">SQLite автоматически увеличивает версию схемы при каждом изменении схемы. При выполнении каждого оператора SQL версия схемы проверяется, чтобы убедиться, что схема не изменилась с момента &lt;a href=&quot;c3ref/prepare&quot;&gt;подготовки&lt;/a&gt; оператора SQL . Подрыв этого механизма с помощью &amp;laquo;PRAGMA schema_version&amp;raquo; может привести к запуску оператора SQL с использованием устаревшей схемы, что может привести к неправильным ответам и / или &lt;a href=&quot;howtocorrupt#cfgerr&quot;&gt;повреждению базы данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3020db6478f19a9532839179a12c2a9ed24e1db4" translate="yes" xml:space="preserve">
          <source>SQLite automatically serializes calls to the xInit method, so the xInit method need not be threadsafe. The xShutdown method is only called from &lt;a href=&quot;#sqlite3_initialize&quot;&gt;sqlite3_shutdown()&lt;/a&gt; so it does not need to be threadsafe either. All other methods must be threadsafe in multithreaded applications.</source>
          <target state="translated">SQLite автоматически сериализует вызовы метода xInit, поэтому метод xInit не обязательно должен быть потокобезопасным. Метод xShutdown вызывается только из &lt;a href=&quot;#sqlite3_initialize&quot;&gt;sqlite3_shutdown (),&lt;/a&gt; поэтому он не обязательно должен быть потокобезопасным. Все остальные методы должны быть потокобезопасными в многопоточных приложениях.</target>
        </trans-unit>
        <trans-unit id="adf570ddec15cfa93349d4a743e839e20376d5d4" translate="yes" xml:space="preserve">
          <source>SQLite automatically serializes calls to the xInit method, so the xInit method need not be threadsafe. The xShutdown method is only called from &lt;a href=&quot;initialize&quot;&gt;sqlite3_shutdown()&lt;/a&gt; so it does not need to be threadsafe either. All other methods must be threadsafe in multithreaded applications.</source>
          <target state="translated">SQLite автоматически сериализует вызовы метода xInit, поэтому метод xInit не обязательно должен быть потокобезопасным. Метод xShutdown вызывается только из &lt;a href=&quot;initialize&quot;&gt;sqlite3_shutdown (),&lt;/a&gt; поэтому он не обязательно должен быть потокобезопасным. Все остальные методы должны быть потокобезопасными в многопоточных приложениях.</target>
        </trans-unit>
        <trans-unit id="b53d5d709f2b8563b5c899f4b327d7464bad702f" translate="yes" xml:space="preserve">
          <source>SQLite can also do large and complex queries efficiently, just like client/server databases. But SQLite can do many smaller queries efficiently too. Application developers can use whichever technique works best for the task at hand.</source>
          <target state="translated">SQLite также может эффективно выполнять большие и сложные запросы,как и клиент/серверные базы данных.Но SQLite может эффективно выполнять и многие более мелкие запросы.Разработчики приложений могут использовать ту технику,которая лучше всего подходит для конкретной задачи.</target>
        </trans-unit>
        <trans-unit id="5e87caa697e0258d2993af3a32d9b7e8cb861e14" translate="yes" xml:space="preserve">
          <source>SQLite can be compiled with or without mutexes. When the &lt;a href=&quot;../compile#threadsafe&quot;&gt;SQLITE_THREADSAFE&lt;/a&gt; C preprocessor macro is 1 or 2, mutexes are enabled and SQLite is threadsafe. When the &lt;a href=&quot;../compile#threadsafe&quot;&gt;SQLITE_THREADSAFE&lt;/a&gt; macro is 0, the mutexes are omitted. Without the mutexes, it is not safe to use SQLite concurrently from more than one thread.</source>
          <target state="translated">SQLite может быть скомпилирован с мьютексами или без них. Когда &lt;a href=&quot;../compile#threadsafe&quot;&gt;макрос&lt;/a&gt; препроцессора SQLITE_THREADSAFE C равен 1 или 2, мьютексы включены, и SQLite является потокобезопасным. Когда макрос &lt;a href=&quot;../compile#threadsafe&quot;&gt;SQLITE_THREADSAFE&lt;/a&gt; равен 0, мьютексы опускаются. Без мьютексов небезопасно использовать SQLite одновременно из более чем одного потока.</target>
        </trans-unit>
        <trans-unit id="011026d39fd1e83a00c257ae9fee74aa8abebcc5" translate="yes" xml:space="preserve">
          <source>SQLite can be compiled with or without mutexes. When the &lt;a href=&quot;compile#threadsafe&quot;&gt;SQLITE_THREADSAFE&lt;/a&gt; C preprocessor macro is 1 or 2, mutexes are enabled and SQLite is threadsafe. When the &lt;a href=&quot;compile#threadsafe&quot;&gt;SQLITE_THREADSAFE&lt;/a&gt; macro is 0, the mutexes are omitted. Without the mutexes, it is not safe to use SQLite concurrently from more than one thread.</source>
          <target state="translated">SQLite может быть скомпилирован с мьютексами или без них. Когда &lt;a href=&quot;compile#threadsafe&quot;&gt;макрос&lt;/a&gt; препроцессора SQLITE_THREADSAFE C равен 1 или 2, мьютексы включены, и SQLite является потокобезопасным. Когда макрос &lt;a href=&quot;compile#threadsafe&quot;&gt;SQLITE_THREADSAFE&lt;/a&gt; равен 0, мьютексы опускаются. Без мьютексов небезопасно использовать SQLite одновременно из более чем одного потока.</target>
        </trans-unit>
        <trans-unit id="36cb69ad46f78c1ed8dd15f2baaaa36c57889f6a" translate="yes" xml:space="preserve">
          <source>SQLite can be configured to commit transactions by overwriting the journal header with zeros instead of deleting the journal file by setting the &quot;PERSIST&quot; journaling mode using the &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode&lt;/a&gt; PRAGMA. For example:</source>
          <target state="translated">SQLite можно настроить на фиксацию транзакций путем перезаписи заголовка журнала нулями вместо удаления файла журнала, установив режим ведения журнала &amp;laquo;PERSIST&amp;raquo; с помощью &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode&lt;/a&gt; PRAGMA. Например:</target>
        </trans-unit>
        <trans-unit id="80ddece7460eee85c8c3c249243bb3dbfbde484c" translate="yes" xml:space="preserve">
          <source>SQLite can be configured to invoke a callback function containing an error code and a terse error message whenever anomalies occur. This mechanism is very helpful in tracking obscure problems that occur rarely and in the field. Application developers are encouraged to take advantage of the error logging facility of SQLite in their products, as it is very low CPU and memory cost but can be a huge aid for debugging.</source>
          <target state="translated">SQLite можно настроить на вызов функции обратного вызова,содержащей код ошибки и краткое сообщение об ошибке при возникновении аномалий.Этот механизм очень полезен для отслеживания непонятных проблем,которые возникают редко и в поле.Разработчикам приложений рекомендуется использовать в своих продуктах функцию протоколирования ошибок SQLite,так как она имеет очень низкую стоимость процессора и памяти,но может стать огромным подспорьем при отладке.</target>
        </trans-unit>
        <trans-unit id="81616a9223e74e96edfa97f31284e6d7c2ededd0" translate="yes" xml:space="preserve">
          <source>SQLite can be configured to make page cache memory allocations from a separate and distinct memory pool of fixed-size slots. This can have two advantages:</source>
          <target state="translated">SQLite можно настроить на выделение кэш-памяти страниц из отдельного и отдельного пула памяти слотов фиксированного размера.Это может иметь два преимущества:</target>
        </trans-unit>
        <trans-unit id="872ca116186d75a484f48dbcd06ae645c30cfafb" translate="yes" xml:space="preserve">
          <source>SQLite can pull a similar trick for a descending ORDER BY:</source>
          <target state="translated">SQLite может провернуть подобный трюк для нисходящего ORDER BY:</target>
        </trans-unit>
        <trans-unit id="e65b704c4d79c568a9eb5907bffebebd829ede2d" translate="yes" xml:space="preserve">
          <source>SQLite can use row values in two contexts:</source>
          <target state="translated">SQLite может использовать значения строк в двух контекстах:</target>
        </trans-unit>
        <trans-unit id="0233fb6752b9903c64922ece01dc28610983e5af" translate="yes" xml:space="preserve">
          <source>SQLite commands are normally terminated by a semicolon. In the shell you can also use the word &quot;GO&quot; (case-insensitive) or a slash character &quot;/&quot; on a line by itself to end a command. These are used by SQL Server and Oracle, respectively. These won't work in &lt;b&gt;sqlite3_exec()&lt;/b&gt;, because the shell translates these into a semicolon before passing them to that function.</source>
          <target state="translated">Команды SQLite обычно заканчиваются точкой с запятой. В оболочке вы также можете использовать слово &amp;laquo;GO&amp;raquo; (без учета регистра) или косую черту &amp;laquo;/&amp;raquo; в отдельной строке для завершения команды. Они используются SQL Server и Oracle соответственно. Они не будут работать в &lt;b&gt;sqlite3_exec ()&lt;/b&gt; , потому что оболочка переводит их в точку с запятой перед передачей в эту функцию.</target>
        </trans-unit>
        <trans-unit id="c00500c2a2685e49d6f5ca17fcd6441b18a649d0" translate="yes" xml:space="preserve">
          <source>SQLite computes joins using nested loops, one loop for each table in the join. (Additional loops might be inserted for IN and OR operators in the WHERE clause. SQLite considers those too, but for simplicity we will ignore them in this essay.) One or more indexes might be used on each loop to speed the search, or a loop might be a &quot;full table scan&quot; that reads every row in the table. Thus query planning decomposes into two subtasks:</source>
          <target state="translated">SQLite вычисляет соединения,используя вложенные циклы,по одному циклу для каждой таблицы в соединении.(Дополнительные циклы могут быть вставлены для операторов IN и OR в пункте WHERE.SQLite тоже учитывает их,но для простоты мы проигнорируем их в этом эссе).Один или несколько индексов могут быть использованы в каждом цикле для ускорения поиска,или же циклом может быть &quot;полное сканирование таблицы&quot;,которое читает каждую строку в таблице.Таким образом,планирование запросов разбивается на две подзадачи:</target>
        </trans-unit>
        <trans-unit id="7974ee005c7bea20e8549f294a1e5c666d87f59c" translate="yes" xml:space="preserve">
          <source>SQLite computes the entry point for the extension based on the extension filename. To override this choice, simply add the name of the extension as a second argument to the &quot;.load&quot; command.</source>
          <target state="translated">SQLite вычисляет точку входа для расширения на основе имени файла расширения.Чтобы переопределить этот выбор,просто добавьте имя расширения в качестве второго аргумента в команду &quot;.load&quot;.</target>
        </trans-unit>
        <trans-unit id="e364fda4b28195b331863df02fe5a0c5e92edd6b" translate="yes" xml:space="preserve">
          <source>SQLite connections can open two kinds of transactions, read and write transactions. This is not done explicitly, a transaction is implicitly a read-transaction until it first writes to a database table, at which point it becomes a write-transaction.</source>
          <target state="translated">Соединения SQLite могут открывать два вида транзакций,читать и писать транзакции.Это не делается явно,транзакция неявно является транзакцией чтения до тех пор,пока она сначала не запишет в таблицу БД,после чего она становится транзакцией записи.</target>
        </trans-unit>
        <trans-unit id="bfb7f60f82c37c439853dbcce0278c6d68d992ca" translate="yes" xml:space="preserve">
          <source>SQLite considers NULL values to be smaller than any other values for sorting purposes. Hence, NULLs naturally appear at the beginning of an ASC order-by and at the end of a DESC order-by. This can be changed using the &quot;ASC NULLS LAST&quot; or &quot;DESC NULLS FIRST&quot; syntax.</source>
          <target state="translated">SQLite считает,что NULL-значения меньше любых других значений для целей сортировки.Следовательно,NULL-значения естественным образом появляются в начале ордера ASC-by и в конце ордера DESC-by.Это можно изменить,используя синтаксис &quot;ASC NULLS LAST&quot; или &quot;DESC NULLS FIRST&quot;.</target>
        </trans-unit>
        <trans-unit id="c3c65750b414698c230a01a96245ecd4d646ee27" translate="yes" xml:space="preserve">
          <source>SQLite contains a high-quality pseudo-random number generator (PRNG) used to select random &lt;a href=&quot;../lang_createtable#rowid&quot;&gt;ROWIDs&lt;/a&gt; when inserting new records into a table that already uses the largest possible &lt;a href=&quot;../lang_createtable#rowid&quot;&gt;ROWID&lt;/a&gt;. The PRNG is also used for the build-in random() and randomblob() SQL functions. This interface allows applications to access the same PRNG for other purposes.</source>
          <target state="translated">SQLite содержит высококачественный генератор псевдослучайных чисел (PRNG), используемый для выбора случайных &lt;a href=&quot;../lang_createtable#rowid&quot;&gt;ROWID&lt;/a&gt; при вставке новых записей в таблицу, которая уже использует максимально возможный &lt;a href=&quot;../lang_createtable#rowid&quot;&gt;ROWID&lt;/a&gt; . PRNG также используется для встроенных функций SQL random () и randomblob (). Этот интерфейс позволяет приложениям обращаться к одному и тому же ГПСЧ для других целей.</target>
        </trans-unit>
        <trans-unit id="2cb68dd5c1cbc6cb1c97029684bf4911536bda94" translate="yes" xml:space="preserve">
          <source>SQLite contains a high-quality pseudo-random number generator (PRNG) used to select random &lt;a href=&quot;../lang_createtable#rowid&quot;&gt;ROWIDs&lt;/a&gt; when inserting new records into a table that already uses the largest possible &lt;a href=&quot;../lang_createtable#rowid&quot;&gt;ROWID&lt;/a&gt;. The PRNG is also used for the built-in random() and randomblob() SQL functions. This interface allows applications to access the same PRNG for other purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f509851478b4c800f043c189999c977fd8cd102" translate="yes" xml:space="preserve">
          <source>SQLite contains a high-quality pseudo-random number generator (PRNG) used to select random &lt;a href=&quot;lang_createtable#rowid&quot;&gt;ROWIDs&lt;/a&gt; when inserting new records into a table that already uses the largest possible &lt;a href=&quot;lang_createtable#rowid&quot;&gt;ROWID&lt;/a&gt;. The PRNG is also used for the build-in random() and randomblob() SQL functions. This interface allows applications to access the same PRNG for other purposes.</source>
          <target state="translated">SQLite содержит высококачественный генератор псевдослучайных чисел (PRNG), используемый для выбора случайных &lt;a href=&quot;lang_createtable#rowid&quot;&gt;ROWID&lt;/a&gt; при вставке новых записей в таблицу, которая уже использует максимально возможный &lt;a href=&quot;lang_createtable#rowid&quot;&gt;ROWID&lt;/a&gt; . PRNG также используется для встроенных функций SQL random () и randomblob (). Этот интерфейс позволяет приложениям обращаться к одному и тому же ГПСЧ для других целей.</target>
        </trans-unit>
        <trans-unit id="0307ee063764cc9b4b9c8b2d1ac0ca31dc710f9b" translate="yes" xml:space="preserve">
          <source>SQLite contains a high-quality pseudo-random number generator (PRNG) used to select random &lt;a href=&quot;lang_createtable#rowid&quot;&gt;ROWIDs&lt;/a&gt; when inserting new records into a table that already uses the largest possible &lt;a href=&quot;lang_createtable#rowid&quot;&gt;ROWID&lt;/a&gt;. The PRNG is also used for the built-in random() and randomblob() SQL functions. This interface allows applications to access the same PRNG for other purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ee77bcaf1d66acd1a62c0df67a25f317b961f7" translate="yes" xml:space="preserve">
          <source>SQLite contains a pluggable &lt;a href=&quot;malloc&quot;&gt;memory allocation subsystem&lt;/a&gt;. The default implementation uses system malloc() and free(). However, if SQLite is compiled with &lt;a href=&quot;compile#memdebug&quot;&gt;SQLITE_MEMDEBUG&lt;/a&gt;, an alternative memory allocation wrapper (&lt;a href=&quot;malloc#memdebug&quot;&gt;memsys2&lt;/a&gt;) is inserted that looks for memory allocation errors at run-time. The memsys2 wrapper checks for memory leaks, of course, but also looks for buffer overruns, uses of uninitialized memory, and attempts to use memory after it has been freed. These same checks are also done by valgrind (and, indeed, Valgrind does them better) but memsys2 has the advantage of being much faster than Valgrind, which means the checks can be done more often and for longer tests.</source>
          <target state="translated">SQLite содержит подключаемую &lt;a href=&quot;malloc&quot;&gt;подсистему выделения памяти&lt;/a&gt; . Реализация по умолчанию использует системные malloc () и free (). Однако, если SQLite скомпилирован с &lt;a href=&quot;compile#memdebug&quot;&gt;SQLITE_MEMDEBUG&lt;/a&gt; , вставляется альтернативная оболочка выделения памяти ( &lt;a href=&quot;malloc#memdebug&quot;&gt;memsys2&lt;/a&gt; ), которая ищет ошибки выделения памяти во время выполнения. Оболочка memsys2, конечно, проверяет утечки памяти, но также ищет переполнение буфера, использование неинициализированной памяти и пытается использовать память после того, как она была освобождена. Эти же проверки также выполняются valgrind (и, действительно, Valgrind делает их лучше), но memsys2 имеет то преимущество, что он намного быстрее, чем Valgrind, что означает, что проверки могут выполняться чаще и для более длительных тестов.</target>
        </trans-unit>
        <trans-unit id="e70b3aaacfaf470c166676be17bd20f5d45f4693" translate="yes" xml:space="preserve">
          <source>SQLite contains a pluggable mutex subsystem. Depending on compile-time options, the default mutex system contains interfaces &lt;a href=&quot;c3ref/mutex_held&quot;&gt;sqlite3_mutex_held()&lt;/a&gt; and &lt;a href=&quot;c3ref/mutex_held&quot;&gt;sqlite3_mutex_notheld()&lt;/a&gt; that detect whether or not a particular mutex is held by the calling thread. These two interfaces are used extensively within assert() statements in SQLite to verify mutexes are held and released at all the right moments, in order to double-check that SQLite does work correctly in multi-threaded applications.</source>
          <target state="translated">SQLite содержит подключаемую подсистему мьютексов. В зависимости от параметров времени компиляции система мьютексов по умолчанию содержит интерфейсы &lt;a href=&quot;c3ref/mutex_held&quot;&gt;sqlite3_mutex_held ()&lt;/a&gt; и &lt;a href=&quot;c3ref/mutex_held&quot;&gt;sqlite3_mutex_notheld (),&lt;/a&gt; которые определяют, удерживается ли конкретный мьютекс вызывающим потоком. Эти два интерфейса широко используются в операторах assert () в SQLite для проверки того, что мьютексы удерживаются и освобождаются в нужные моменты, чтобы дважды проверить правильность работы SQLite в многопоточных приложениях.</target>
        </trans-unit>
        <trans-unit id="dabfcc2f753d723e8f1fdffc47c7886d69735236" translate="yes" xml:space="preserve">
          <source>SQLite contains its own implementation of the string formatting routine &quot;printf()&quot;, accessible via the following interfaces:</source>
          <target state="translated">SQLite содержит собственную реализацию рутины форматирования строк &quot;printf()&quot;,доступной через следующие интерфейсы:</target>
        </trans-unit>
        <trans-unit id="c93da66184cea55ccf1eb0a76557743722cd0c9e" translate="yes" xml:space="preserve">
          <source>SQLite creates a new rollback journal at the start of the first transaction within an exclusive locking mode session. But at the conclusion of the transaction, it does not delete the rollback journal. The rollback journal might be truncated, or its header might be zeroed (depending on what version of SQLite you are using) but the rollback journal is not deleted. The rollback journal is not deleted until exclusive access mode is exited.</source>
          <target state="translated">SQLite создает новый журнал отката при старте первой транзакции в эксклюзивном режиме блокировки.Но при завершении транзакции он не удаляет журнал отката.Журнал отката может быть усечен,или его заголовок может быть обнулен (в зависимости от того,какую версию SQLite вы используете),но журнал отката не удаляется.Журнал отката не удаляется до выхода из режима эксклюзивного доступа.</target>
        </trans-unit>
        <trans-unit id="1ff4a994995e43acece5539fc362ef2f8d57c451" translate="yes" xml:space="preserve">
          <source>SQLite current supports multiple simultaneous read transactions coming from separate database connections, possibly in separate threads or processes, but only one simultaneous write transaction.</source>
          <target state="translated">SQLite current поддерживает несколько одновременных транзакций чтения,поступающих из отдельных подключений к БД,возможно,в отдельных потоках или процессах,но только одну одновременную транзакцию записи.</target>
        </trans-unit>
        <trans-unit id="52550351bf043c480663244c5089f3b0a1af2f89" translate="yes" xml:space="preserve">
          <source>SQLite currently uses nine distinct types of temporary files:</source>
          <target state="translated">В настоящее время SQLite использует девять различных типов временных файлов:</target>
        </trans-unit>
        <trans-unit id="768d0612a89e99cfab38eb300c519c8884a3292a" translate="yes" xml:space="preserve">
          <source>SQLite database content can be viewed using a wide variety third-party tools.</source>
          <target state="translated">Содержимое баз данных SQLite можно просматривать с помощью различных инструментов сторонних разработчиков.</target>
        </trans-unit>
        <trans-unit id="be0dbc098faec242c7e0eb6b90f7b812b21e7a30" translate="yes" xml:space="preserve">
          <source>SQLite database files are &lt;a href=&quot;locrsf&quot;&gt;recommended by the US Library of Congress&lt;/a&gt; as a storage format for long-term preservation of digital content.</source>
          <target state="translated">Файлы базы данных SQLite &lt;a href=&quot;locrsf&quot;&gt;рекомендованы Библиотекой Конгресса США&lt;/a&gt; в качестве формата хранения для длительного хранения цифрового контента.</target>
        </trans-unit>
        <trans-unit id="94d38bbabdf14ff89a4cf80dbf6c1e905d82147b" translate="yes" xml:space="preserve">
          <source>SQLite database files are ordinary disk files that can be opened and written by ordinary user processes. A rogue process can open an SQLite database and fill it with corrupt data. Corrupt data might also be introduced into an SQLite database by bugs in the operating system or disk controller; especially bugs triggered by a power failure. There is nothing SQLite can do to defend against these kinds of problems.</source>
          <target state="translated">Файлы базы данных SQLite-это обычные дисковые файлы,которые могут быть открыты и записаны обычными пользовательскими процессами.Неавторизованный процесс может открыть базу данных SQLite и заполнить ее поврежденными данными.Поврежденные данные также могут быть введены в базу данных SQLite из-за ошибок в операционной системе или контроллере диска;особенно это касается ошибок,вызванных отключением питания.Нет ничего,что SQLite может сделать для защиты от такого рода проблем.</target>
        </trans-unit>
        <trans-unit id="9b12d3c769cd65d1fff0004d3dbd9ed7d36630a2" translate="yes" xml:space="preserve">
          <source>SQLite database files are ordinary disk files. That means that any process can open the file and overwrite it with garbage. There is nothing that the SQLite library can do to defend against this.</source>
          <target state="translated">Файлы базы данных SQLite являются обычными дисковыми файлами.Это означает,что любой процесс может открыть файл и перезаписать его мусором.Библиотека SQLite ничего не может сделать для защиты от этого.</target>
        </trans-unit>
        <trans-unit id="9b4a84c75e811d2fb173fe3d58bd4e6cbe30bdcc" translate="yes" xml:space="preserve">
          <source>SQLite defines certain &lt;a href=&quot;limits&quot;&gt;limits&lt;/a&gt; on its operation, such as the maximum number of columns in a table, the maximum length of an SQL statement, or the maximum value of an integer. The TCL and TH3 test suites both contains numerous tests that push SQLite right to the edge of its defined limits and verify that it performs correctly for all allowed values. Additional tests go beyond the defined limits and verify that SQLite correctly returns errors. The source code contains &lt;a href=&quot;testing#testcase&quot;&gt;testcase macros&lt;/a&gt; to verify that both sides of each boundary have been tested.</source>
          <target state="translated">SQLite определяет определенные &lt;a href=&quot;limits&quot;&gt;ограничения&lt;/a&gt; для своей работы, такие как максимальное количество столбцов в таблице, максимальная длина оператора SQL или максимальное значение целого числа. Наборы тестов TCL и TH3 содержат множество тестов, которые подталкивают SQLite прямо к краю определенных пределов и проверяют, правильно ли он работает для всех допустимых значений. Дополнительные тесты выходят за установленные пределы и проверяют, правильно ли SQLite возвращает ошибки. Исходный код содержит &lt;a href=&quot;testing#testcase&quot;&gt;макросы тестового примера,&lt;/a&gt; чтобы убедиться, что обе стороны каждой границы были протестированы.</target>
        </trans-unit>
        <trans-unit id="1ebe49ed011549b4b376ada76a7c80346e42783e" translate="yes" xml:space="preserve">
          <source>SQLite defines five constraint conflict resolution algorithms as follows:</source>
          <target state="translated">SQLite определяет пять алгоритмов разрешения конфликтов ограничений следующим образом:</target>
        </trans-unit>
        <trans-unit id="e63f24a3abefb779413eb11019f8b7c1a24ed4a7" translate="yes" xml:space="preserve">
          <source>SQLite depends on the underlying filesystem to do locking as the documentation says it will. But some filesystems contain bugs in their locking logic such that the locks do not always behave as advertised. This is especially true of network filesystems and NFS in particular. If SQLite is used on a filesystem where the locking primitives contain bugs, and if two or more threads or processes try to access the same database at the same time, then database corruption might result.</source>
          <target state="translated">SQLite зависит от базовой файловой системы,чтобы сделать блокировку,как говорится в документации.Но некоторые файловые системы содержат ошибки в логике блокировки так,что блокировки не всегда ведут себя как рекламируемые.Особенно это касается сетевых файловых систем и NFS в частности.Если SQLite используется на файловой системе,где примитивы блокировки содержат ошибки,и если два или более потока или процесса пытаются получить доступ к одной и той же базе данных одновременно,то это может привести к повреждению базы данных.</target>
        </trans-unit>
        <trans-unit id="84e20ec3709a6092a2fe5e0b3864b26d52798097" translate="yes" xml:space="preserve">
          <source>SQLite determines whether or not the</source>
          <target state="translated">SQLite определяет,будет ли</target>
        </trans-unit>
        <trans-unit id="047a8354791082378f7165112ad6a4371a7d6650" translate="yes" xml:space="preserve">
          <source>SQLite developers fix all bugs in SQLite as soon as they are reported, usually within a few hours. The fixes are immediately available on the &lt;a href=&quot;https://sqlite.org/src/timeline&quot;&gt;public SQLite source tree&lt;/a&gt;. If a bug seems like it might cause problems for existing applications, a new patch release for SQLite will be issued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f1115ba9f2179d3b543581df6ff78cc24d770e" translate="yes" xml:space="preserve">
          <source>SQLite developers follow the NASA principle of &quot;fly what you test and test what you fly&quot;. This principle is violated if this option is enabled for delivery but disabled for testing. But if this option is enabled during testing, not all branches are reachable. Therefore, the use of this compile-time option is discouraged.</source>
          <target state="translated">Разработчики SQLite следуют принципу NASA:&quot;Лети,что ты тестируешь,и проверяй,что ты летаешь&quot;.Этот принцип нарушается,если эта опция включена для доставки,но отключена для тестирования.Но если эта опция включена при тестировании,то доступны не все ветки.Поэтому использование этой опции во время компиляции не рекомендуется.</target>
        </trans-unit>
        <trans-unit id="c4f80e4b417989d34a30cd7b51ee661ffc0b6477" translate="yes" xml:space="preserve">
          <source>SQLite does &lt;u&gt;not&lt;/u&gt; have a sophisticated theorem prover with which to determine W&amp;rArr;X. Instead, SQLite uses two simple rules to find the common cases where W&amp;rArr;X is true, and it assumes all the other cases are false. The rules used by SQLite are these:</source>
          <target state="translated">SQLite &lt;u&gt;не&lt;/u&gt; имеет сложной программы доказательства теорем, с помощью которой можно было бы определить W&amp;rArr;X. Вместо этого SQLite использует два простых правила для поиска распространенных случаев, когда W&amp;rArr;X истинно, и предполагает, что все остальные случаи ложны. SQLite использует следующие правила:</target>
        </trans-unit>
        <trans-unit id="812f97d0b2305c9c697f76ed10e7be3a58d7abf1" translate="yes" xml:space="preserve">
          <source>SQLite does not assume that a &lt;b&gt;create file&lt;/b&gt; operation has actually modified the file-system records within persistent storage until after the file has been successfully</source>
          <target state="translated">SQLite не предполагает, что операция &lt;b&gt;создания файла&lt;/b&gt; фактически изменила записи файловой системы в постоянном хранилище до тех пор, пока файл не будет успешно завершен.</target>
        </trans-unit>
        <trans-unit id="03f904caa75ae48b8b97c8d68e12829b77d799cd" translate="yes" xml:space="preserve">
          <source>SQLite does not assume that the xFetch() method will work. If a call to xFetch() returns a NULL pointer (indicating that the requested page is not currently mapped into the applications address space) then SQLite silently falls back to using xRead(). An error is only reported if xRead() also fails.</source>
          <target state="translated">SQLite не предполагает,что метод xFetch()будет работать.Если вызов xFetch()возвращает указатель NULL (указывающий на то,что запрашиваемая страница в настоящее время не отображена в адресное пространство приложения),то SQLite беззвучно возвращается к использованию xRead().Об ошибке сообщается только в том случае,если xRead()также не работает.</target>
        </trans-unit>
        <trans-unit id="8388b88a9237299e6bc5f9efcad34bc3644e42d2" translate="yes" xml:space="preserve">
          <source>SQLite does not compete with client/server databases. SQLite competes with &lt;a href=&quot;http://man.he.net/man3/fopen&quot;&gt;fopen()&lt;/a&gt;.</source>
          <target state="translated">SQLite не конкурирует с базами данных клиент / сервер. SQLite конкурирует с &lt;a href=&quot;http://man.he.net/man3/fopen&quot;&gt;fopen ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4a676b7a2490751f91ae5727d82720cbc10b6a9" translate="yes" xml:space="preserve">
          <source>SQLite does not corrupt database files without external help. If your application crashes in the middle of an update, your data is safe. The database is safe even if your OS crashes or takes a power loss. The crash-resistance of SQLite has been extensively studied and tested and is attested by years of real-world experience by billions of users.</source>
          <target state="translated">SQLite не повреждает файлы базы данных без посторонней помощи.Если ваше приложение выйдет из строя в середине обновления,ваши данные будут в безопасности.База данных в безопасности,даже если ваша операционная система выйдет из строя или отключится от сети.Сопротивление SQLite к сбоям было тщательно изучено и протестировано и подтверждено многолетним реальным опытом миллиардов пользователей.</target>
        </trans-unit>
        <trans-unit id="10f8b576bd8d7de605fdbd1523853def318b0261" translate="yes" xml:space="preserve">
          <source>SQLite does not currently generate this result code. However, &lt;a href=&quot;appfunc&quot;&gt;application-defined SQL functions&lt;/a&gt; or &lt;a href=&quot;vtab&quot;&gt;virtual tables&lt;/a&gt;, or &lt;a href=&quot;vfs&quot;&gt;VFSes&lt;/a&gt;, or other extensions might cause this result code to be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32682669e98a22ab436457272a952e96b8984c62" translate="yes" xml:space="preserve">
          <source>SQLite does not currently generate this result code. However, &lt;a href=&quot;c3ref/create_function&quot;&gt;application-defined SQL functions&lt;/a&gt; or &lt;a href=&quot;vtab&quot;&gt;virtual tables&lt;/a&gt;, or &lt;a href=&quot;vfs&quot;&gt;VFSes&lt;/a&gt;, or other extensions might cause this result code to be returned.</source>
          <target state="translated">SQLite в настоящее время не генерирует этот код результата. Однако &lt;a href=&quot;c3ref/create_function&quot;&gt;определяемые приложением функции SQL&lt;/a&gt; или &lt;a href=&quot;vtab&quot;&gt;виртуальные таблицы&lt;/a&gt; , виртуальные &lt;a href=&quot;vfs&quot;&gt;файловые системы&lt;/a&gt; или другие расширения могут вызывать возврат этого кода результата.</target>
        </trans-unit>
        <trans-unit id="849cd253604893ceb116db699857d9c341985c8d" translate="yes" xml:space="preserve">
          <source>SQLite does not enforce the length of a VARCHAR. You can declare a VARCHAR(10) and SQLite will be happy to store a 500-million character string there. And it will keep all 500-million characters intact. Your content is never truncated. SQLite understands the column type of &quot;VARCHAR(</source>
          <target state="translated">SQLite не обеспечивает соблюдение длины VARCHAR.Вы можете объявить VARCHAR(10)и SQLite с удовольствием будет хранить там строку из 500 миллионов символов.И он сохранит все 500-миллионные символы в целости и сохранности.Ваше содержимое никогда не усекается.SQLite понимает тип столбца &quot;VARCHAR(</target>
        </trans-unit>
        <trans-unit id="a1926595d7ae5865ee5b67632895b9b864b1dde1" translate="yes" xml:space="preserve">
          <source>SQLite does not enforce this restriction. The output columns from an aggregate query can be arbitrary expressions that include columns not found in GROUP BY clause. This feature has two uses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cedfdcc8a476fe016f6e9e5112a567a29b98822a" translate="yes" xml:space="preserve">
          <source>SQLite does not execute CREATE INDEX or DROP TABLE as fast as the other databases. But this is not seen as a problem because those are infrequent operations.</source>
          <target state="translated">SQLite не выполняет CREATE INDEX или DROP TABLE так быстро,как другие базы данных.Но это не рассматривается как проблема,потому что это нечастые операции.</target>
        </trans-unit>
        <trans-unit id="43864158c682c4848f5d2752dd74608390472ba4" translate="yes" xml:space="preserve">
          <source>SQLite does not have a separate Boolean storage class. Instead, Boolean values are stored as integers 0 (false) and 1 (true).</source>
          <target state="translated">SQLite не имеет отдельного класса булевого хранения.Вместо этого булевы значения хранятся в виде целых чисел 0 (ложь)и 1 (истина).</target>
        </trans-unit>
        <trans-unit id="7b5bf507b529089c7d7e63ee38c65f8ff819e17f" translate="yes" xml:space="preserve">
          <source>SQLite does not have a storage class set aside for storing dates and/or times. Instead, the built-in &lt;a href=&quot;lang_datefunc&quot;&gt;Date And Time Functions&lt;/a&gt; of SQLite are capable of storing dates and times as TEXT, REAL, or INTEGER values:</source>
          <target state="translated">SQLite не имеет класса хранения, выделенного для хранения дат и / или времени. Вместо этого встроенные функции &lt;a href=&quot;lang_datefunc&quot;&gt;даты и времени&lt;/a&gt; SQLite могут сохранять дату и время как значения TEXT, REAL или INTEGER:</target>
        </trans-unit>
        <trans-unit id="d38a36f56dfc9a58300bf464f4bc506a55de48ac" translate="yes" xml:space="preserve">
          <source>SQLite does not have any file naming requirements and so the application can use any custom file suffix that it wants to help identify the file as &quot;belonging&quot; to the application. SQLite database files contain a 4-byte &lt;a href=&quot;fileformat2#appid&quot;&gt;Application ID&lt;/a&gt; in their headers that can be set to an application-defined value and then used to identify the &quot;type&quot; of the document for utility programs such as &lt;a href=&quot;http://linux.die.net/man/1/file&quot;&gt;file(1)&lt;/a&gt;, further enhancing the document metaphor.</source>
          <target state="translated">SQLite не имеет требований к именованию файлов, поэтому приложение может использовать любой настраиваемый суффикс файла, который помогает идентифицировать файл как &amp;laquo;принадлежащий&amp;raquo; приложению. Файлы базы данных SQLite содержат в своих заголовках 4-байтовый &lt;a href=&quot;fileformat2#appid&quot;&gt;идентификатор приложения,&lt;/a&gt; который может быть установлен в значение, определяемое приложением, а затем использоваться для определения &amp;laquo;типа&amp;raquo; документа для служебных программ, таких как &lt;a href=&quot;http://linux.die.net/man/1/file&quot;&gt;файл (1)&lt;/a&gt; , что дополнительно усиливает метафору документа. .</target>
        </trans-unit>
        <trans-unit id="e59c710100ff708b1aef0f21340b69db8c1733b8" translate="yes" xml:space="preserve">
          <source>SQLite does not impose any arbitrary limits on the tables in a join. It also allows a table to be joined with itself.</source>
          <target state="translated">SQLite не накладывает никаких произвольных ограничений на таблицы в соединении.Он также позволяет соединить таблицу с собой.</target>
        </trans-unit>
        <trans-unit id="d19b66e3a5f9904818e920e65d3e2c5788b19b7a" translate="yes" xml:space="preserve">
          <source>SQLite does not impose any naming requirements on database files. SQLite will happily work with a database file that has any filename extension or with no extension at all. When auxiliary files are needed for a &lt;a href=&quot;lockingv3#rollback&quot;&gt;rollback journal&lt;/a&gt; or a &lt;a href=&quot;wal&quot;&gt;write-ahead log&lt;/a&gt; or for one of the other kinds of &lt;a href=&quot;tempfiles&quot;&gt;temporary disk files&lt;/a&gt;, then the name for the auxiliary file is normally constructed by appending a suffix onto the end of the database file name. For example, if the original database is call &quot;&lt;code&gt;app.db&lt;/code&gt;&quot; then the &lt;a href=&quot;lockingv3#rollback&quot;&gt;rollback journal&lt;/a&gt; will be called &quot;&lt;code&gt;app.db-journal&lt;/code&gt;&quot; and the &lt;a href=&quot;wal&quot;&gt;write-ahead log&lt;/a&gt; will be called &quot;&lt;code&gt;app.db-wal&lt;/code&gt;&quot;. This approach to auxiliary file naming works great on systems that support long filenames. But on systems that impose 8+3 filename constraints, the auxiliary files do not fit the 8+3 format even though the original database file does.</source>
          <target state="translated">SQLite не предъявляет никаких требований к именованию файлов базы данных. SQLite будет без проблем работать с файлом базы данных, имеющим любое расширение имени файла или вообще без расширения. Когда вспомогательные файлы необходимы для &lt;a href=&quot;lockingv3#rollback&quot;&gt;журнала отката&lt;/a&gt; или журнала &lt;a href=&quot;wal&quot;&gt;упреждающей записи&lt;/a&gt; или для одного из других типов &lt;a href=&quot;tempfiles&quot;&gt;временных файлов на диске&lt;/a&gt; , тогда имя вспомогательного файла обычно создается путем добавления суффикса в конец имени файла базы данных. Например, если исходная база данных называется &amp;laquo; &lt;code&gt;app.db&lt;/code&gt; &amp;raquo;, то &lt;a href=&quot;lockingv3#rollback&quot;&gt;журнал отката&lt;/a&gt; будет называться &amp;laquo; &lt;code&gt;app.db-journal&lt;/code&gt; &amp;raquo;, а журнал &lt;a href=&quot;wal&quot;&gt;упреждающей записи&lt;/a&gt; будет называться &amp;laquo; &lt;code&gt;app.db-wal&lt;/code&gt; .&quot;. Этот подход к именованию вспомогательных файлов отлично работает в системах, которые поддерживают длинные имена файлов. Но в системах, которые налагают ограничения на имя файла 8 + 3, вспомогательные файлы не соответствуют формату 8 + 3, хотя исходный файл базы данных подходит.</target>
        </trans-unit>
        <trans-unit id="a73287a8fe8c79033c83c805463ed8e55719bac8" translate="yes" xml:space="preserve">
          <source>SQLite does not impose this restriction. The output columns from an aggregate query can be arbitrary expressions that include columns not found in GROUP BY clause. This feature has two uses:</source>
          <target state="translated">SQLite не накладывает это ограничение.Выходные столбцы из агрегированного запроса могут быть произвольными выражениями,включающими столбцы,не найденные в пункте GROUP BY.Эта функция имеет два применения:</target>
        </trans-unit>
        <trans-unit id="8555210284d36b3e1b8f8883b624896b86a18ab1" translate="yes" xml:space="preserve">
          <source>SQLite does not know about the upper-case/lower-case distinction for all unicode characters. SQL functions like upper() and lower() only work on ASCII characters. There are two reasons for this:</source>
          <target state="translated">SQLite не знает о различии в верхнем и нижнем регистре для всех символов юникода.Такие функции SQL как upper()и lower()работают только с ASCII символами.Этому есть две причины:</target>
        </trans-unit>
        <trans-unit id="eb92b3df474a6ac50c00c18c8f46d84276cd93dd" translate="yes" xml:space="preserve">
          <source>SQLite does not need to be &quot;installed&quot; before it is used. There is no &quot;setup&quot; procedure. There is no server process that needs to be started, stopped, or configured. There is no need for an administrator to create a new database instance or assign access permissions to users. SQLite uses no configuration files. Nothing needs to be done to tell the system that SQLite is running. No actions are required to recover after a system crash or power failure. There is nothing to troubleshoot.</source>
          <target state="translated">SQLite не нужно &quot;устанавливать&quot; перед его использованием.Процедура &quot;установки&quot; отсутствует.Нет серверного процесса,который нужно запустить,остановить или сконфигурировать.Нет необходимости в том,чтобы администратор создал новый экземпляр базы данных или назначил права доступа пользователям.SQLite не использует конфигурационные файлы.Не нужно ничего делать,чтобы сообщить системе,что SQLite запущен.Не требуется никаких действий для восстановления после сбоя системы или отключения электропитания.Нечего устранять неполадки.</target>
        </trans-unit>
        <trans-unit id="884bfc65b22f2d44e73c6eb276c85fdfbd7fe67c" translate="yes" xml:space="preserve">
          <source>SQLite does not support joins containing more than 64 tables. This limit arises from the fact that the SQLite code generator uses bitmaps with one bit per join-table in the query optimizer.</source>
          <target state="translated">SQLite не поддерживает соединения,содержащие более 64 таблиц.Это ограничение связано с тем,что генератор кода SQLite использует в оптимизаторе запросов растровые изображения с одним битом на каждую объединенную таблицу.</target>
        </trans-unit>
        <trans-unit id="32cceefcad6471cec76877d28300254ecd207a80" translate="yes" xml:space="preserve">
          <source>SQLite does not use reallocarray(). The reason is that reallocarray() is not useful to SQLite. It turns out that SQLite never does memory allocations that are the simple product of two integers. Instead, SQLite does allocations of the form &quot;X+C&quot; or &quot;N*X+C&quot; or &quot;M*N*X+C&quot; or &quot;N*X+M*Y+C&quot;, and so forth. The reallocarray() interface is not helpful in avoiding integer overflow in those cases.</source>
          <target state="translated">SQLite не использует reallocarray().Причина в том,что reallocarray()бесполезна для SQLite.Получается,что SQLite никогда не делает выделения памяти,которые являются простым продуктом двух целых чисел.Вместо этого SQLite делает выделения формы &quot;X+C&quot; или &quot;N*X+C&quot; или &quot;M*N*X+C&quot; или &quot;N*X+M*Y+C&quot; и так далее.Интерфейс reallocarray()в этих случаях не помогает избежать целочисленного переполнения.</target>
        </trans-unit>
        <trans-unit id="e572f2c7a3110182d89abded21495f7d514fd7ce" translate="yes" xml:space="preserve">
          <source>SQLite does not use the &lt;a href=&quot;https://git-scm.org&quot;&gt;Git&lt;/a&gt; version control system. SQLite uses &lt;a href=&quot;https://fossil-scm.org/&quot;&gt;Fossil&lt;/a&gt; instead, which is a version control system that was specifically designed and written to support SQLite.</source>
          <target state="translated">SQLite не использует систему контроля версий &lt;a href=&quot;https://git-scm.org&quot;&gt;Git&lt;/a&gt; . Вместо этого SQLite использует &lt;a href=&quot;https://fossil-scm.org/&quot;&gt;Fossil&lt;/a&gt; , систему контроля версий, специально разработанную и написанную для поддержки SQLite.</target>
        </trans-unit>
        <trans-unit id="f4fb8e959c9cf8676f0661c9123f7b84f2d8bef1" translate="yes" xml:space="preserve">
          <source>SQLite evaluates an SQL function by invoking callback routines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ed31deb6ad368a56d7944ce942ebcf9b2c51e9" translate="yes" xml:space="preserve">
          <source>SQLite follows interpretation (1), as does PostgreSQL, MySQL, Oracle, and Firebird. It is true that Informix and Microsoft SQL Server use interpretation (2), however we the SQLite developers hold that interpretation (1) is the most natural reading of the requirement and we also want to maximize compatibility with other SQL database engines, and most other database engines also go with (1), so that is what SQLite does.</source>
          <target state="translated">SQLite следует интерпретации (1),как и PostgreSQL,MySQL,Oracle и Firebird.Это правда,что Informix и Microsoft SQL Server используют интерпретацию (2),однако мы,разработчики SQLite,считаем,что интерпретация (1)является наиболее естественным чтением требования,и мы также хотим,чтобы максимизировать совместимость с другими движками баз данных SQL,и большинство других движков баз данных также идут с (1),так что это то,что SQLite делает.</target>
        </trans-unit>
        <trans-unit id="3c073597d6dda07cec7d805350d02b0ccb097124" translate="yes" xml:space="preserve">
          <source>SQLite generates the following VDBE code to handle this query:</source>
          <target state="translated">Для обработки этого запроса SQLite генерирует следующий код VDBE:</target>
        </trans-unit>
        <trans-unit id="b4d6b7ddedcd5672d5d5c1d0814e9f17af528341" translate="yes" xml:space="preserve">
          <source>SQLite guarantees that the zFilename parameter to xOpen is either a NULL pointer or string obtained from xFullPathname() with an optional suffix added. If a suffix is added to the zFilename parameter, it will consist of a single &quot;-&quot; character followed by no more than 11 alphanumeric and/or &quot;-&quot; characters. SQLite further guarantees that the string will be valid and unchanged until xClose() is called. Because of the previous sentence, the &lt;a href=&quot;#sqlite3_file&quot; id=&quot;sqlite3vfsxopen&quot;&gt;sqlite3_file&lt;/a&gt; can safely store a pointer to the filename if it needs to remember the filename for some reason. If the zFilename parameter to xOpen is a NULL pointer then xOpen must invent its own temporary name for the file. Whenever the xFilename parameter is NULL it will also be the case that the flags parameter will include &lt;a href=&quot;#SQLITE_OPEN_AUTOPROXY&quot;&gt;SQLITE_OPEN_DELETEONCLOSE&lt;/a&gt;.</source>
          <target state="translated">SQLite гарантирует, что параметр zFilename для xOpen является либо указателем NULL, либо строкой, полученной из xFullPathname () с добавленным необязательным суффиксом. Если к параметру zFilename добавлен суффикс, он будет состоять из одного символа &amp;laquo;-&amp;raquo;, за которым следует не более 11 буквенно-цифровых и / или &amp;laquo;-&amp;raquo; символов. SQLite также гарантирует, что строка будет действительной и неизменной до вызова xClose (). Из-за предыдущего предложения &lt;a href=&quot;#sqlite3_file&quot; id=&quot;sqlite3vfsxopen&quot;&gt;sqlite3_file&lt;/a&gt; может безопасно хранить указатель на имя файла, если ему по какой-то причине необходимо запомнить имя файла. Если параметр zFilename для xOpen является указателем NULL, тогда xOpen должен придумать собственное временное имя для файла.Если параметр xFilename имеет значение NULL, также будет случай, когда параметр flags будет включать &lt;a href=&quot;#SQLITE_OPEN_AUTOPROXY&quot;&gt;SQLITE_OPEN_DELETEONCLOSE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d519343efa0295e444925cd61c058c515076622f" translate="yes" xml:space="preserve">
          <source>SQLite guarantees that the zFilename parameter to xOpen is either a NULL pointer or string obtained from xFullPathname() with an optional suffix added. If a suffix is added to the zFilename parameter, it will consist of a single &quot;-&quot; character followed by no more than 11 alphanumeric and/or &quot;-&quot; characters. SQLite further guarantees that the string will be valid and unchanged until xClose() is called. Because of the previous sentence, the &lt;a href=&quot;file&quot; id=&quot;sqlite3vfsxopen&quot;&gt;sqlite3_file&lt;/a&gt; can safely store a pointer to the filename if it needs to remember the filename for some reason. If the zFilename parameter to xOpen is a NULL pointer then xOpen must invent its own temporary name for the file. Whenever the xFilename parameter is NULL it will also be the case that the flags parameter will include &lt;a href=&quot;c_open_autoproxy&quot;&gt;SQLITE_OPEN_DELETEONCLOSE&lt;/a&gt;.</source>
          <target state="translated">SQLite гарантирует, что параметр zFilename для xOpen является либо указателем NULL, либо строкой, полученной из xFullPathname () с добавленным необязательным суффиксом. Если к параметру zFilename добавлен суффикс, он будет состоять из одного символа &amp;laquo;-&amp;raquo;, за которым следует не более 11 буквенно-цифровых и / или &amp;laquo;-&amp;raquo; символов. SQLite также гарантирует, что строка будет действительной и неизменной до вызова xClose (). Из-за предыдущего предложения &lt;a href=&quot;file&quot; id=&quot;sqlite3vfsxopen&quot;&gt;sqlite3_file&lt;/a&gt; может безопасно хранить указатель на имя файла, если ему по какой-то причине необходимо запомнить имя файла. Если параметр zFilename для xOpen является указателем NULL, тогда xOpen должен придумать собственное временное имя для файла.Если параметр xFilename имеет значение NULL, также будет случай, когда параметр flags будет включать &lt;a href=&quot;c_open_autoproxy&quot;&gt;SQLITE_OPEN_DELETEONCLOSE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e30a11544b3b70ee38ad6d69bfc7966ff234f5f0" translate="yes" xml:space="preserve">
          <source>SQLite has a long-range vision. Planning is done with the assumption that SQLite will be used and supported through at least the year 2050. All code is written with the idea that it will one day be read and maintained by people not yet born. The code is carefully commented with an eye toward helping those future developers more easily understand the logic and the rationale behind the code.</source>
          <target state="translated">У SQLite есть дальновидность.Планируется,что SQLite будет использоваться и поддерживаться как минимум до 2050 года.Весь код написан с мыслью,что когда-нибудь его будут читать и поддерживать еще не рожденные люди.Код тщательно прокомментирован с целью помочь будущим разработчикам лучше понять логику и обоснование кода.</target>
        </trans-unit>
        <trans-unit id="aceade92bdc221158a6b3b9dee552d0622a51de1" translate="yes" xml:space="preserve">
          <source>SQLite has always been threadsafe in the sense that it is safe to use different SQLite database connections in different threads at the same time. The constraint was that the same database connection could not be used in two separate threads at once. SQLite version 3.5.0 relaxes this constraint.</source>
          <target state="translated">SQLite всегда был потокобезопасен в том смысле,что безопасно использовать различные соединения баз данных SQLite в разных потоках одновременно.Ограничением было то,что одно и то же подключение к базе данных не могло быть использовано в двух отдельных потоках одновременно.SQLite версии 3.5.0 снимает это ограничение.</target>
        </trans-unit>
        <trans-unit id="271f775dd6b6f73fbe141210d32e18aec79eee7a" translate="yes" xml:space="preserve">
          <source>SQLite has been used with great success as the on-disk file format for desktop applications such as version control systems, financial analysis tools, media cataloging and editing suites, CAD packages, record keeping programs, and so forth. The traditional File/Open operation calls sqlite3_open() to attach to the database file. Updates happen automatically as application content is revised so the File/Save menu option becomes superfluous. The File/Save_As menu option can be implemented using the &lt;a href=&quot;backup&quot;&gt;backup API&lt;/a&gt;.</source>
          <target state="translated">SQLite с большим успехом использовался как формат файлов на диске для настольных приложений, таких как системы контроля версий, инструменты финансового анализа, средства каталогизации и редактирования мультимедиа, пакеты САПР, программы для ведения документации и т. Д. Традиционная операция File / Open вызывает sqlite3_open () для присоединения к файлу базы данных. Обновления происходят автоматически по мере изменения содержимого приложения, поэтому пункт меню &amp;laquo;Файл / Сохранить&amp;raquo; становится излишним. Опцию меню File / Save_As можно реализовать с помощью &lt;a href=&quot;backup&quot;&gt;API резервного копирования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f55c294c2cf9b8417df5cbe3a3af491dd2f0fa77" translate="yes" xml:space="preserve">
          <source>SQLite has limited &lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE&lt;/a&gt; support that you can use to add a column to the end of a table or to change the name of a table. If you want to make more complex changes in the structure of a table, you will have to recreate the table. You can save existing data to a temporary table, drop the old table, create the new table, then copy the data back in from the temporary table.</source>
          <target state="translated">SQLite имеет ограниченную поддержку &lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE,&lt;/a&gt; которую вы можете использовать для добавления столбца в конец таблицы или для изменения имени таблицы. Если вы хотите внести более сложные изменения в структуру таблицы, вам придется воссоздать таблицу. Вы можете сохранить существующие данные во временную таблицу, удалить старую таблицу, создать новую таблицу, а затем скопировать данные обратно из временной таблицы.</target>
        </trans-unit>
        <trans-unit id="b73be04138313333850933822dba80a15ce2e139" translate="yes" xml:space="preserve">
          <source>SQLite has many built-in protections against database corruption. But many of these protections can be disabled by configuration options. If protections are disabled, database corruption may occur.</source>
          <target state="translated">SQLite имеет множество встроенных средств защиты от повреждения базы данных.Но многие из этих защит могут быть отключены опциями конфигурации.Если защита отключена,может произойти повреждение базы данных.</target>
        </trans-unit>
        <trans-unit id="bb603bba250f35273a32a5611b9cd000e44489f5" translate="yes" xml:space="preserve">
          <source>SQLite has more than 225 APIs. However, most of the APIs are optional and very specialized and can be ignored by beginners. The core API is small, simple, and easy to learn. This article summarizes the core API.</source>
          <target state="translated">SQLite имеет более 225 API.Однако большинство API являются необязательными и узкоспециализированными и могут быть проигнорированы новичками.Ядро API маленькое,простое и легкое в изучении.В этой статье кратко описано ядро API.</target>
        </trans-unit>
        <trans-unit id="8a4895c12238b138bb6c6286f8230fbb2f5cd9a6" translate="yes" xml:space="preserve">
          <source>SQLite has never made any promises about the names of columns in the result set of &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statement unless the column contains an AS clause. So this change to column name is technically not an incompatibility. SQLite is merely changing from one undefined behavior to another. Nevertheless, many applications depend on the unspecified column naming behavior of SQLite and so this change is discussed under the incompatible changes subheading.</source>
          <target state="translated">SQLite никогда не давал никаких обещаний по поводу имен столбцов в результирующем наборе &lt;a href=&quot;lang_select&quot;&gt;оператора SELECT,&lt;/a&gt; если только столбец не содержит предложение AS. Таким образом, это изменение имени столбца технически не является несовместимостью. SQLite просто меняет одно неопределенное поведение на другое. Тем не менее, многие приложения зависят от неопределенного поведения именования столбцов в SQLite, поэтому это изменение обсуждается в подзаголовке &amp;laquo;Несовместимые изменения&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="ca7acd3d88ffa5a3ae27ab37d2b4f9fba4b8da4f" translate="yes" xml:space="preserve">
          <source>SQLite has no DATETIME datatype. Instead, dates and times can be stored in any of these ways:</source>
          <target state="translated">SQLite не имеет типа данных DATETIME.Вместо этого,даты и время могут быть сохранены любым из этих способов:</target>
        </trans-unit>
        <trans-unit id="434827c14efeeadfcb2418a72c6305a40a35bf77" translate="yes" xml:space="preserve">
          <source>SQLite has parsed foreign key constraints for time out of mind, but added the ability to actually enforce those constraints much later, with &lt;a href=&quot;https://sqlite.org/releaselog/3_6_19.html&quot;&gt;version 3.6.19&lt;/a&gt; (2009-10-14). By the time foreign key constraint enforcement was added, there were already countless millions of databases in circulation that contained foreign key constraints, some of which were not correct. To avoid breaking those legacy databases, foreign key constraint enforcement is turned off by default in SQLite.</source>
          <target state="translated">SQLite проанализировал ограничения внешнего ключа на неопределенное время, но добавил возможность фактически применять эти ограничения намного позже, с &lt;a href=&quot;https://sqlite.org/releaselog/3_6_19.html&quot;&gt;версией 3.6.19&lt;/a&gt; (2009-10-14). К тому времени, когда было добавлено принудительное применение ограничений внешнего ключа, в обращении уже находились бесчисленные миллионы баз данных, содержащих ограничения внешнего ключа, некоторые из которых были неправильными. Чтобы избежать поломки этих устаревших баз данных, принудительное применение ограничений внешнего ключа по умолчанию отключено в SQLite.</target>
        </trans-unit>
        <trans-unit id="fe0e942db3fdd796752686c9b5c13e9ee369eca1" translate="yes" xml:space="preserve">
          <source>SQLite has the ability to load extensions (including new &lt;a href=&quot;appfunc&quot;&gt;application-defined SQL functions&lt;/a&gt;, &lt;a href=&quot;datatype3#collation&quot;&gt;collating sequences&lt;/a&gt;, &lt;a href=&quot;vtab&quot;&gt;virtual tables&lt;/a&gt;, and &lt;a href=&quot;vfs&quot;&gt;VFSes&lt;/a&gt;) at run-time. This feature allows the code for extensions to be developed and tested separately from the application and then loaded on an as-needed basis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e91ba3e2500969e52ba828deace82978255140" translate="yes" xml:space="preserve">
          <source>SQLite has the ability to load extensions (including new &lt;a href=&quot;c3ref/create_function&quot;&gt;application-defined SQL functions&lt;/a&gt;, &lt;a href=&quot;datatype3#collation&quot;&gt;collating sequences&lt;/a&gt;, &lt;a href=&quot;vtab&quot;&gt;virtual tables&lt;/a&gt;, and &lt;a href=&quot;vfs&quot;&gt;VFSes&lt;/a&gt;) at run-time. This feature allows the code for extensions to be developed and tested separately from the application and then loaded on an as-needed basis.</source>
          <target state="translated">SQLite может загружать расширения (в том числе новые &lt;a href=&quot;c3ref/create_function&quot;&gt;определяемые приложением функции SQL&lt;/a&gt; , &lt;a href=&quot;datatype3#collation&quot;&gt;последовательности сортировки&lt;/a&gt; , &lt;a href=&quot;vtab&quot;&gt;виртуальные таблицы&lt;/a&gt; и &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; ) во время выполнения. Эта функция позволяет разрабатывать и тестировать код для расширений отдельно от приложения, а затем загружать его по мере необходимости.</target>
        </trans-unit>
        <trans-unit id="0e4d010949f30fdc1e3ec9866eaf0049a35366ab" translate="yes" xml:space="preserve">
          <source>SQLite has the ability to set aside a small number of extra bytes at the end of every page for use by extensions. These extra bytes are used, for example, by the SQLite Encryption Extension to store a nonce and/or cryptographic checksum associated with each page. The &quot;reserved space&quot; size in the 1-byte integer at offset 20 is the number of bytes of space at the end of each page to reserve for extensions. This value is usually 0. The value can be odd.</source>
          <target state="translated">SQLite имеет возможность выделять небольшое количество лишних байт в конце каждой страницы для использования расширениями.Эти дополнительные байты используются,например,расширением SQLite Encryption Extension для хранения контрольной суммы,связанной с каждой страницей,нонце и/или криптографической контрольной суммы.Размер &quot;зарезервированного пространства&quot; в 1-байтовом целом смещении 20-это количество байтов пространства в конце каждой страницы для резервирования для использования расширениями.Обычно это значение равно 0.Значение может быть нечетным.</target>
        </trans-unit>
        <trans-unit id="9203406a48bcc380153eb0cdda332e02c86e380f" translate="yes" xml:space="preserve">
          <source>SQLite has the important property that transactions appear to be atomic even if the transaction is interrupted by an operating system crash or power failure.</source>
          <target state="translated">SQLite обладает важным свойством,заключающимся в том,что транзакции выглядят атомарными,даже если они прерваны сбоем операционной системы или отключением питания.</target>
        </trans-unit>
        <trans-unit id="be0a51ac8c3c19e2efc6a52feb047f00515d3213" translate="yes" xml:space="preserve">
          <source>SQLite has to do two binary searches to find the price of peaches using the method show above. But for a table with a large number of rows, this is still much faster than doing a full table scan.</source>
          <target state="translated">SQLite должен выполнить два бинарных поиска,чтобы найти цену персиков с помощью метода,показанного выше.Но для таблицы с большим количеством строк это все равно намного быстрее,чем выполнять полное сканирование таблицы.</target>
        </trans-unit>
        <trans-unit id="676af2e11cb2905c4dfb00ec08797f3ee68e158c" translate="yes" xml:space="preserve">
          <source>SQLite has traditionally assumed that a sector write is &lt;u&gt;not&lt;/u&gt; atomic. However, SQLite does always assume that a sector write is linear. By &quot;linear&quot; we mean that SQLite assumes that when writing a sector, the hardware begins at one end of the data and writes byte by byte until it gets to the other end. The write might go from beginning to end or from end to beginning. If a power failure occurs in the middle of a sector write it might be that part of the sector was modified and another part was left unchanged. The key assumption by SQLite is that if any part of the sector gets changed, then either the first or the last bytes will be changed. So the hardware will never start writing a sector in the middle and work towards the ends. We do not know if this assumption is always true but it seems reasonable.</source>
          <target state="translated">SQLite традиционно предполагал, что запись в сектор &lt;u&gt;не&lt;/u&gt; является атомарной. Однако SQLite всегда предполагает, что запись сектора линейна. Под &amp;laquo;линейным&amp;raquo; мы подразумеваем, что SQLite предполагает, что при записи сектора оборудование начинается с одного конца данных и записывает побайтно, пока не дойдет до другого конца. Запись может идти от начала до конца или от конца до начала. Если сбой питания происходит в середине записи сектора, возможно, эта часть сектора была изменена, а другая часть осталась неизменной. Ключевое предположение SQLite заключается в том, что если какая-либо часть сектора изменится, то будут изменены либо первый, либо последний байты. Таким образом, оборудование никогда не начнет писать сектор посередине и работать в направлении конца. Мы не знаем, всегда ли это предположение верно, но оно кажется разумным.</target>
        </trans-unit>
        <trans-unit id="6e2b79f10afe47ad0c40bb4a3ac913a6b768b679" translate="yes" xml:space="preserve">
          <source>SQLite helps applications avoid writer starvation. After any attempt to obtain a write-lock on a table fails (because one or more other connections are holding read-locks), all attempts to open new transactions on the shared-cache fail until one of the following is true:</source>
          <target state="translated">SQLite помогает приложениям избежать голодной смерти писателей.После неудачной попытки получить блокировку записи на таблицу (потому что одно или несколько других соединений удерживают блокировку чтения),все попытки открыть новые транзакции на разделяемом кэше завершаются неудачей до тех пор,пока не сбудется одно из следующих утверждений:</target>
        </trans-unit>
        <trans-unit id="402f5ca7372d4a9946847b5c208fa5c883a857e1" translate="yes" xml:space="preserve">
          <source>SQLite holds a write transaction open on the destination database file for the duration of the backup operation. The source database is read-locked only while it is being read; it is not locked continuously for the entire backup operation. Thus, the backup may be performed on a live source database without preventing other database connections from reading or writing to the source database while the backup is underway.</source>
          <target state="translated">SQLite содержит транзакцию записи,открытую в файле целевой базы данных на время выполнения операции резервного копирования.Исходная БД блокируется только на время чтения;она не блокируется непрерывно на время всей операции резервного копирования.Таким образом,резервное копирование может быть выполнено на живой исходной БД,не мешая другим соединениям БД с чтением или записью в исходную БД во время выполнения операции резервного копирования.</target>
        </trans-unit>
        <trans-unit id="cdc11b90ce34488ba86957f5c9e4b6d1abe96e13" translate="yes" xml:space="preserve">
          <source>SQLite holds the &lt;a href=&quot;#SQLITE_MUTEX_FAST&quot;&gt;SQLITE_MUTEX_STATIC_MAIN&lt;/a&gt; mutex when it invokes the xInit method, so the xInit method need not be threadsafe. The xShutdown method is only called from &lt;a href=&quot;#sqlite3_initialize&quot;&gt;sqlite3_shutdown()&lt;/a&gt; so it does not need to be threadsafe either. For all other methods, SQLite holds the &lt;a href=&quot;#SQLITE_MUTEX_FAST&quot;&gt;SQLITE_MUTEX_STATIC_MEM&lt;/a&gt; mutex as long as the &lt;a href=&quot;#sqliteconfigmemstatus&quot;&gt;SQLITE_CONFIG_MEMSTATUS&lt;/a&gt; configuration option is turned on (which it is by default) and so the methods are automatically serialized. However, if &lt;a href=&quot;#sqliteconfigmemstatus&quot;&gt;SQLITE_CONFIG_MEMSTATUS&lt;/a&gt; is disabled, then the other methods must be threadsafe or else make their own arrangements for serialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912f035cba3f20daf2c59df8d233e473805d19b3" translate="yes" xml:space="preserve">
          <source>SQLite holds the &lt;a href=&quot;#SQLITE_MUTEX_FAST&quot;&gt;SQLITE_MUTEX_STATIC_MASTER&lt;/a&gt; mutex when it invokes the xInit method, so the xInit method need not be threadsafe. The xShutdown method is only called from &lt;a href=&quot;#sqlite3_initialize&quot;&gt;sqlite3_shutdown()&lt;/a&gt; so it does not need to be threadsafe either. For all other methods, SQLite holds the &lt;a href=&quot;#SQLITE_MUTEX_FAST&quot;&gt;SQLITE_MUTEX_STATIC_MEM&lt;/a&gt; mutex as long as the &lt;a href=&quot;#sqliteconfigmemstatus&quot;&gt;SQLITE_CONFIG_MEMSTATUS&lt;/a&gt; configuration option is turned on (which it is by default) and so the methods are automatically serialized. However, if &lt;a href=&quot;#sqliteconfigmemstatus&quot;&gt;SQLITE_CONFIG_MEMSTATUS&lt;/a&gt; is disabled, then the other methods must be threadsafe or else make their own arrangements for serialization.</source>
          <target state="translated">SQLite содержит мьютекс &lt;a href=&quot;#SQLITE_MUTEX_FAST&quot;&gt;SQLITE_MUTEX_STATIC_MASTER,&lt;/a&gt; когда он вызывает метод xInit, поэтому метод xInit не обязательно должен быть потокобезопасным. Метод xShutdown вызывается только из &lt;a href=&quot;#sqlite3_initialize&quot;&gt;sqlite3_shutdown (),&lt;/a&gt; поэтому он не обязательно должен быть потокобезопасным. Для всех других методов SQLite содержит мьютекс &lt;a href=&quot;#SQLITE_MUTEX_FAST&quot;&gt;SQLITE_MUTEX_STATIC_MEM,&lt;/a&gt; пока &lt;a href=&quot;#sqliteconfigmemstatus&quot;&gt;включен&lt;/a&gt; параметр конфигурации SQLITE_CONFIG_MEMSTATUS (который включен по умолчанию), и поэтому методы автоматически сериализуются. Однако, если &lt;a href=&quot;#sqliteconfigmemstatus&quot;&gt;SQLITE_CONFIG_MEMSTATUS&lt;/a&gt; отключен, тогда другие методы должны быть потокобезопасными, иначе они должны принимать собственные меры для сериализации.</target>
        </trans-unit>
        <trans-unit id="79a19d02c026b02e8c1a0db8ac15db509fcdae53" translate="yes" xml:space="preserve">
          <source>SQLite holds the &lt;a href=&quot;c_mutex_fast&quot;&gt;SQLITE_MUTEX_STATIC_MAIN&lt;/a&gt; mutex when it invokes the xInit method, so the xInit method need not be threadsafe. The xShutdown method is only called from &lt;a href=&quot;initialize&quot;&gt;sqlite3_shutdown()&lt;/a&gt; so it does not need to be threadsafe either. For all other methods, SQLite holds the &lt;a href=&quot;c_mutex_fast&quot;&gt;SQLITE_MUTEX_STATIC_MEM&lt;/a&gt; mutex as long as the &lt;a href=&quot;c_config_covering_index_scan#sqliteconfigmemstatus&quot;&gt;SQLITE_CONFIG_MEMSTATUS&lt;/a&gt; configuration option is turned on (which it is by default) and so the methods are automatically serialized. However, if &lt;a href=&quot;c_config_covering_index_scan#sqliteconfigmemstatus&quot;&gt;SQLITE_CONFIG_MEMSTATUS&lt;/a&gt; is disabled, then the other methods must be threadsafe or else make their own arrangements for serialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd2489c20f80af95976208fb003fab254c1fa75" translate="yes" xml:space="preserve">
          <source>SQLite holds the &lt;a href=&quot;c_mutex_fast&quot;&gt;SQLITE_MUTEX_STATIC_MASTER&lt;/a&gt; mutex when it invokes the xInit method, so the xInit method need not be threadsafe. The xShutdown method is only called from &lt;a href=&quot;initialize&quot;&gt;sqlite3_shutdown()&lt;/a&gt; so it does not need to be threadsafe either. For all other methods, SQLite holds the &lt;a href=&quot;c_mutex_fast&quot;&gt;SQLITE_MUTEX_STATIC_MEM&lt;/a&gt; mutex as long as the &lt;a href=&quot;c_config_covering_index_scan#sqliteconfigmemstatus&quot;&gt;SQLITE_CONFIG_MEMSTATUS&lt;/a&gt; configuration option is turned on (which it is by default) and so the methods are automatically serialized. However, if &lt;a href=&quot;c_config_covering_index_scan#sqliteconfigmemstatus&quot;&gt;SQLITE_CONFIG_MEMSTATUS&lt;/a&gt; is disabled, then the other methods must be threadsafe or else make their own arrangements for serialization.</source>
          <target state="translated">SQLite содержит мьютекс &lt;a href=&quot;c_mutex_fast&quot;&gt;SQLITE_MUTEX_STATIC_MASTER,&lt;/a&gt; когда он вызывает метод xInit, поэтому метод xInit не обязательно должен быть потокобезопасным. Метод xShutdown вызывается только из &lt;a href=&quot;initialize&quot;&gt;sqlite3_shutdown (),&lt;/a&gt; поэтому он не обязательно должен быть потокобезопасным. Для всех других методов SQLite содержит мьютекс &lt;a href=&quot;c_mutex_fast&quot;&gt;SQLITE_MUTEX_STATIC_MEM,&lt;/a&gt; пока &lt;a href=&quot;c_config_covering_index_scan#sqliteconfigmemstatus&quot;&gt;включен&lt;/a&gt; параметр конфигурации SQLITE_CONFIG_MEMSTATUS (который включен по умолчанию), и поэтому методы автоматически сериализуются. Однако, если &lt;a href=&quot;c_config_covering_index_scan#sqliteconfigmemstatus&quot;&gt;SQLITE_CONFIG_MEMSTATUS&lt;/a&gt; отключен, тогда другие методы должны быть потокобезопасными, иначе они должны принимать собственные меры для сериализации.</target>
        </trans-unit>
        <trans-unit id="f91f212a3a30086dc5ca1eb656ef7423affc33b3" translate="yes" xml:space="preserve">
          <source>SQLite implements GROUP BY by ordering the output rows in the order suggested by the GROUP BY terms. Each output row is compared to the previous to see if it starts a new &quot;group&quot;. The ordering by GROUP BY terms is done in exactly the same way as the ordering by ORDER BY terms. A preexisting index is used if possible, but if no suitable index is available, a transient index is created.</source>
          <target state="translated">SQLite реализует GROUP BY,упорядочивая выходные строки в порядке,предложенном условиями GROUP BY.Каждая выходная строка сравнивается с предыдущей,чтобы увидеть,начинается ли новая &quot;группа&quot;.Заказ по условиям GROUP BY осуществляется точно так же,как и заказ по условиям ORDER BY.По возможности используется существующий индекс,но если подходящего индекса нет,создается переходный индекс.</target>
        </trans-unit>
        <trans-unit id="21ee3a1222ea37592ef106a68bea0de2b898dfe2" translate="yes" xml:space="preserve">
          <source>SQLite implements SQL functions using callbacks to C-language routines. Even the built-in SQL functions are implemented this way. Most of the built-in SQL functions (ex: &lt;a href=&quot;lang_corefunc#abs&quot;&gt;abs()&lt;/a&gt;, &lt;a href=&quot;lang_aggfunc#count&quot;&gt;count()&lt;/a&gt;, &lt;a href=&quot;lang_corefunc#substr&quot;&gt;substr()&lt;/a&gt;, and so forth) can be found in &lt;a href=&quot;https://sqlite.org/src/file/src/func.c&quot;&gt;func.c&lt;/a&gt; source file. Date and time conversion functions are found in &lt;a href=&quot;https://sqlite.org/src/file/src/date.c&quot;&gt;date.c&lt;/a&gt;. Some functions such as &lt;a href=&quot;lang_corefunc#coalesce&quot;&gt;coalesce()&lt;/a&gt; and &lt;a href=&quot;lang_corefunc#typeof&quot;&gt;typeof()&lt;/a&gt; are implemented as bytecode directly by the code generator.</source>
          <target state="translated">SQLite реализует функции SQL, используя обратные вызовы к процедурам языка C. Так реализованы даже встроенные функции SQL. Большинство встроенных функций SQL (например, &lt;a href=&quot;lang_corefunc#abs&quot;&gt;abs ()&lt;/a&gt; , &lt;a href=&quot;lang_aggfunc#count&quot;&gt;count ()&lt;/a&gt; , &lt;a href=&quot;lang_corefunc#substr&quot;&gt;substr ()&lt;/a&gt; и т. Д.) Можно найти в исходном файле &lt;a href=&quot;https://sqlite.org/src/file/src/func.c&quot;&gt;func.c.&lt;/a&gt; Дата и время преобразования функции находятся в &lt;a href=&quot;https://sqlite.org/src/file/src/date.c&quot;&gt;date.c&lt;/a&gt; . Некоторые функции, такие как &lt;a href=&quot;lang_corefunc#coalesce&quot;&gt;coalesce ()&lt;/a&gt; и &lt;a href=&quot;lang_corefunc#typeof&quot;&gt;typeof ()&lt;/a&gt; , реализуются как байт-код непосредственно генератором кода.</target>
        </trans-unit>
        <trans-unit id="44379bdc54f42e9de25ccca623147353d761d9c1" translate="yes" xml:space="preserve">
          <source>SQLite implements isolation and concurrency control (and atomicity) using transient journal files that appear in the same directory in as the database file. There are two major &quot;journal modes&quot;. The older &quot;rollback mode&quot; corresponds to using the &quot;DELETE&quot;, &quot;PERSIST&quot;, or &quot;TRUNCATE&quot; options to the &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode pragma&lt;/a&gt;. In rollback mode, changes are written directly into the database file, while simultaneously a separate rollback journal file is constructed that is able to restore the database to its original state if the transaction rolls back. Rollback mode (specifically DELETE mode, meaning that the rollback journal is deleted from disk at the conclusion of each transaction) is the current default behavior.</source>
          <target state="translated">SQLite реализует изоляцию и контроль параллелизма (и атомарность) с помощью временных файлов журнала, которые появляются в том же каталоге, что и файл базы данных. Есть два основных &amp;laquo;режима журнала&amp;raquo;. Более старый &amp;laquo;режим отката&amp;raquo; соответствует использованию параметров &amp;laquo;DELETE&amp;raquo;, &amp;laquo;PERSIST&amp;raquo; или &amp;laquo;TRUNCATE&amp;raquo; в &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;прагме journal_mode&lt;/a&gt; . В режиме отката изменения записываются непосредственно в файл базы данных, при этом одновременно создается отдельный файл журнала отката, который может восстановить базу данных в исходное состояние при откате транзакции. Режим отката (в частности, режим DELETE, означающий, что журнал отката удаляется с диска при завершении каждой транзакции) является текущим поведением по умолчанию.</target>
        </trans-unit>
        <trans-unit id="b9d44a427593aad3444fe54a299daaaadaee9c2b" translate="yes" xml:space="preserve">
          <source>SQLite implements most of the common features of SQL. Rather than try to list all the features of SQL that SQLite does support, it is much easier to list those that it does not. Unsupported features of SQL are shown below.</source>
          <target state="translated">SQLite реализует большинство общих возможностей SQL.Вместо того,чтобы пытаться перечислить все функции SQL,которые поддерживает SQLite,гораздо проще перечислить те,которых у него нет.Ниже приведены неподдерживаемые функции SQL.</target>
        </trans-unit>
        <trans-unit id="b3786d84dc62565b9805fcc978b2dc22f28e9c31" translate="yes" xml:space="preserve">
          <source>SQLite implements run-time extension loading using the xDlOpen(), xDlError(), xDlSym(), and xDlClose() methods of the &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object. These methods are implemented using the dlopen() library on unix (which explains why SQLite commonly need to be linked against the &quot;-ldl&quot; library on unix systems) and using LoadLibrary() API on Windows. In a custom &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; for unusual systems, these methods can all be omitted, in which case the run-time extension loading mechanism will not work (though you will still be able to statically link the extension code, assuming the entry pointers are uniquely named). SQLite can be compiled with &lt;a href=&quot;compile#omit_load_extension&quot;&gt;SQLITE_OMIT_LOAD_EXTENSION&lt;/a&gt; to omit the extension loading code from the build.</source>
          <target state="translated">SQLite реализует загрузку расширений времени выполнения с помощью методов xDlOpen (), xDlError (), xDlSym () и xDlClose () объекта &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; . Эти методы реализованы с использованием библиотеки dlopen () в unix (что объясняет, почему SQLite обычно необходимо связывать с библиотекой &amp;laquo;-ldl&amp;raquo; в системах unix) и с использованием LoadLibrary () API в Windows. В настраиваемой &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; для необычных систем все эти методы могут быть опущены, и в этом случае механизм загрузки расширения времени выполнения не будет работать (хотя вы все равно сможете статически связать код расширения, предполагая, что указатели входа имеют уникальное имя) . SQLite может быть скомпилирован с &lt;a href=&quot;compile#omit_load_extension&quot;&gt;SQLITE_OMIT_LOAD_EXTENSION,&lt;/a&gt; чтобы исключить код загрузки расширения из сборки.</target>
        </trans-unit>
        <trans-unit id="325b495e36e305c6da36491d23c9a45ddd677117" translate="yes" xml:space="preserve">
          <source>SQLite implements the ORDER BY clause using a special set of instructions to control an object called a sorter. In the inner-most loop of the query, where there would normally be a Callback instruction, instead a record is constructed that contains both callback parameters and a key. This record is added to the sorter (in a linked list). After the query loop finishes, the list of records is sorted and this list is walked. For each record on the list, the callback is invoked. Finally, the sorter is closed and memory is deallocated.</source>
          <target state="translated">SQLite реализует выражение ORDER BY,используя специальный набор инструкций для управления объектом,называемым сортировщиком.В самом внутреннем цикле запроса,где обычно находится инструкция Callback,вместо нее строится запись,содержащая как параметры обратного вызова,так и ключ.Эта запись добавляется в сортировщик (в связанном списке).После завершения цикла запросов,список записей сортируется,и этот список проходит.Для каждой записи в списке вызывается обратный вызов.Наконец,сортировщик закрывается,и память освобождается.</target>
        </trans-unit>
        <trans-unit id="7bbf56d81f309f0a9cbabc4cabc75bf4752d9e1b" translate="yes" xml:space="preserve">
          <source>SQLite implements the command &quot;&lt;b&gt;DELETE FROM table&lt;/b&gt;&quot; (without a WHERE clause) by dropping the table then recreating it. This is much faster than deleting the elements of the table individually. But it also means that the value returned from &lt;b&gt;sqlite_changes&lt;/b&gt; will be zero regardless of the number of elements that were originally in the table. If an accurate count of the number of elements deleted is necessary, use &quot;&lt;b&gt;DELETE FROM table WHERE 1&lt;/b&gt;&quot; instead.</source>
          <target state="translated">SQLite реализует команду &amp;laquo; &lt;b&gt;УДАЛИТЬ ИЗ таблицы&lt;/b&gt; &amp;raquo; (без предложения WHERE), удаляя таблицу, а затем воссоздавая ее. Это намного быстрее, чем удаление элементов таблицы по отдельности. Но это также означает, что значение, возвращаемое &lt;b&gt;sqlite_changes,&lt;/b&gt; будет равно нулю независимо от количества элементов, которые изначально были в таблице. Если необходим точный подсчет количества удаленных элементов, используйте вместо этого &amp;laquo; &lt;b&gt;УДАЛИТЬ ИЗ таблицы WHERE 1&lt;/b&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="9ab0efccb175242c24a04c63d7820adef1b32339" translate="yes" xml:space="preserve">
          <source>SQLite implements this interface by calling the xSleep() method of the default &lt;a href=&quot;#sqlite3_vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object. If the xSleep() method of the default VFS is not implemented correctly, or not implemented at all, then the behavior of sqlite3_sleep() may deviate from the description in the previous paragraphs.</source>
          <target state="translated">SQLite реализует этот интерфейс, вызывая метод xSleep () объекта &lt;a href=&quot;#sqlite3_vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; по умолчанию . Если метод xSleep () VFS по умолчанию не реализован правильно или не реализован вообще, то поведение sqlite3_sleep () может отличаться от описания в предыдущих абзацах.</target>
        </trans-unit>
        <trans-unit id="c1f2e714978760592edabd2996e80f8001082574" translate="yes" xml:space="preserve">
          <source>SQLite implements this interface by calling the xSleep() method of the default &lt;a href=&quot;vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object. If the xSleep() method of the default VFS is not implemented correctly, or not implemented at all, then the behavior of sqlite3_sleep() may deviate from the description in the previous paragraphs.</source>
          <target state="translated">SQLite реализует этот интерфейс, вызывая метод xSleep () объекта &lt;a href=&quot;vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; по умолчанию . Если метод xSleep () VFS по умолчанию не реализован правильно или не реализован вообще, то поведение sqlite3_sleep () может отличаться от описания в предыдущих абзацах.</target>
        </trans-unit>
        <trans-unit id="a283eba3413ed38200757b2476e06c81659c4de6" translate="yes" xml:space="preserve">
          <source>SQLite includes interfaces that can be used to extend its functionality. Such routines include:</source>
          <target state="translated">SQLite включает в себя интерфейсы,которые могут быть использованы для расширения его функциональности.Такие процедуры включают в себя:</target>
        </trans-unit>
        <trans-unit id="4393772680ef025bd2cd5b1596f363dde45e77fe" translate="yes" xml:space="preserve">
          <source>SQLite interfaces can be subdivided into three categories:</source>
          <target state="translated">Интерфейсы SQLite можно разделить на три категории:</target>
        </trans-unit>
        <trans-unit id="869311cd351a4162301e2c57a02fdd8d674a9eaa" translate="yes" xml:space="preserve">
          <source>SQLite invokes the xCreate() method to construct a new cache instance. SQLite will typically create one cache instance for each open database file, though this is not guaranteed. The first parameter, szPage, is the size in bytes of the pages that must be allocated by the cache. szPage will always a power of two. The second parameter szExtra is a number of bytes of extra storage associated with each page cache entry. The szExtra parameter will a number less than 250. SQLite will use the extra szExtra bytes on each page to store metadata about the underlying database page on disk. The value passed into szExtra depends on the SQLite version, the target platform, and how SQLite was compiled. The third argument to xCreate(), bPurgeable, is true if the cache being created will be used to cache database pages of a file stored on disk, or false if it is used for an in-memory database. The cache implementation does not have to do anything special based with the value of bPurgeable; it is purely advisory. On a cache where bPurgeable is false, SQLite will never invoke xUnpin() except to deliberately delete a page. In other words, calls to xUnpin() on a cache with bPurgeable set to false will always have the &quot;discard&quot; flag set to true. Hence, a cache created with bPurgeable false will never contain any unpinned pages.</source>
          <target state="translated">SQLite вызывает метод xCreate()для построения нового экземпляра кэша.Обычно SQLite создает один экземпляр кэша для каждого открытого файла базы данных,хотя это не гарантируется.Первый параметр,szPage,это размер в байтах страниц,которые должны быть выделены кэшем.szPage всегда будет иметь силу двойки.Второй параметр szExtra-это количество байтов дополнительного хранилища,связанное с каждым элементом кэша страниц.Параметр szExtra будет иметь число менее 250.SQLite будет использовать дополнительные байты szExtra на каждой странице для хранения метаданных о странице баз данных на диске.Значение,передаваемое в szExtra,зависит от версии SQLite,целевой платформы и того,как SQLite был скомпилирован.Третий аргумент к xCreate(),bPurgeable,равен true,если создаваемый кэш будет использоваться для кэширования страниц базы данных файла,хранящегося на диске,или false,если он используется для базы данных in-memory.Реализация кэша не обязана делать ничего особенного,основываясь на значении bPurgeable;она является чисто рекомендательной.В кэше,где значение bPurgeable ложное,SQLite никогда не вызовет xUnpin(),кроме как намеренно удалить страницу.Другими словами,вызовы xUnpin()в кэше,где bPurgeable установлено в false,всегда будут иметь флаг &quot;отбрасывать&quot;,установленный в true.Следовательно,кэш,созданный с bPurgeable false никогда не будет содержать никаких незапечатанных страниц.</target>
        </trans-unit>
        <trans-unit id="c8d91a4eacb25ed345770672b419f8de28814833" translate="yes" xml:space="preserve">
          <source>SQLite invokes the xShrink() method when it wants the page cache to free up as much of heap memory as possible. The page cache implementation is not obligated to free any memory, but well-behaved implementations should do their best.</source>
          <target state="translated">SQLite вызывает метод xShrink(),когда хочет,чтобы кэш страниц освободил как можно больше памяти кучи.Реализация кэша страниц не обязана освобождать какую-либо память,но хорошо себя зарекомендовавшие реализации должны делать все,что в их силах.</target>
        </trans-unit>
        <trans-unit id="e09baf70c513977bd9de806d34790308cc119db4" translate="yes" xml:space="preserve">
          <source>SQLite is &quot;stand-alone&quot; or &quot;self-contained&quot; in the sense that it has very few dependencies. It runs on any operating system, even stripped-down bare-bones embedded operating systems. SQLite uses no external libraries or interfaces (other than a few standard C-library calls described below). The entire SQLite library is encapsulated in a &lt;a href=&quot;amalgamation&quot;&gt;single source code file&lt;/a&gt; that requires no special facilities or tools to build.</source>
          <target state="translated">SQLite является &amp;laquo;автономным&amp;raquo; или &amp;laquo;самодостаточным&amp;raquo; в том смысле, что у него очень мало зависимостей. Он работает с любой операционной системой, даже с упрощенными встроенными операционными системами. SQLite не использует внешних библиотек или интерфейсов (кроме нескольких стандартных вызовов C-библиотеки, описанных ниже). Вся библиотека SQLite инкапсулирована в &lt;a href=&quot;amalgamation&quot;&gt;один файл исходного кода&lt;/a&gt; , для создания которого не требуются специальные средства или инструменты.</target>
        </trans-unit>
        <trans-unit id="1aa8dbd8175f3712e9167826d5f455eab9e98ea7" translate="yes" xml:space="preserve">
          <source>SQLite is &quot;typeless&quot;. This means that you can store any kind of data you want in any column of any table, regardless of the declared datatype of that column. (See the one exception to this rule in section 2.0 below.) This behavior is a feature, not a bug. A database is supposed to store and retrieve data and it should not matter to the database what format that data is in. The strong typing system found in most other SQL engines and codified in the SQL language spec is a misfeature - it is an example of the implementation showing through into the interface. SQLite seeks to overcome this misfeature by allowing you to store any kind of data into any kind of column and by allowing flexibility in the specification of datatypes.</source>
          <target state="translated">SQLite-&quot;безпечатный&quot;.Это означает,что вы можете хранить любые данные в любом столбце любой таблицы,независимо от объявленного типа данных этого столбца.(См.одно исключение из этого правила в разделе 2.0 ниже.)Такое поведение является особенностью,а не ошибкой.Предполагается,что БД должна хранить и извлекать данные,и для БД не имеет значения,в каком формате эти данные находятся.Сильная система набора текста,используемая в большинстве других SQL-движков и кодифицированная в спецификации языка SQL,является ошибкой-это пример реализации,показывающей насквозь в интерфейс.SQLite стремится преодолеть эту неточность,позволяя хранить любые данные в колонках любого типа и обеспечивая гибкость в спецификации типов данных.</target>
        </trans-unit>
        <trans-unit id="6db52ed99b096682e4bd1e419d2a2aa8458af934" translate="yes" xml:space="preserve">
          <source>SQLite is &lt;a href=&quot;https://sqlite.org/copyright.html&quot;&gt;open-source&lt;/a&gt; but it is not open-contribution. All the code in SQLite is written by a small team of experts. The project does not accept &quot;pull requests&quot; or patches from anonymous passers-by on the internet.</source>
          <target state="translated">SQLite имеет &lt;a href=&quot;https://sqlite.org/copyright.html&quot;&gt;открытый исходный код,&lt;/a&gt; но не является открытым. Весь код в SQLite написан небольшой командой экспертов. Проект не принимает &amp;laquo;пул-реквесты&amp;raquo; или патчи от анонимных прохожих в Интернете.</target>
        </trans-unit>
        <trans-unit id="b27dcc391997a09839d3385391811a8208d72225" translate="yes" xml:space="preserve">
          <source>SQLite is &lt;a href=&quot;testing&quot;&gt;very carefully tested&lt;/a&gt; to help ensure that it is as bug-free as possible. Among the many tests that are carried out for every SQLite version are tests that simulate power failures, I/O errors, and out-of-memory (OOM) errors and verify that no database corrupt occurs during any of these events. SQLite is also field-proven with approximately two billion active deployments with no serious problems.</source>
          <target state="translated">SQLite &lt;a href=&quot;testing&quot;&gt;очень тщательно протестирован,&lt;/a&gt; чтобы гарантировать, что он максимально свободен от ошибок. Среди множества тестов, которые выполняются для каждой версии SQLite, есть тесты, которые имитируют сбои питания, ошибки ввода-вывода и ошибки нехватки памяти (OOM) и проверяют, что во время любого из этих событий не происходит повреждения базы данных. SQLite также испытан на практике: около двух миллиардов активных развертываний без серьезных проблем.</target>
        </trans-unit>
        <trans-unit id="c11334f8a6d4c90017a71fe9095e22bfd142ceb6" translate="yes" xml:space="preserve">
          <source>SQLite is &lt;u&gt;not&lt;/u&gt; client/server, however. The SQLite database runs in the same process address space as the application. Queries do not involve message round-trips, only a function call. The latency of a single SQL query is far less in SQLite. Hence, using a large number of queries with SQLite is not the problem.</source>
          <target state="translated">Однако SQLite &lt;u&gt;не&lt;/u&gt; является клиент-серверным. База данных SQLite работает в том же адресном пространстве процесса, что и приложение. Запросы не включают передачу сообщений, а только вызов функции. Задержка одного SQL-запроса в SQLite намного меньше. Следовательно, использование большого количества запросов с SQLite не является проблемой.</target>
        </trans-unit>
        <trans-unit id="e4bea428b4572c3265babc195d636c85dd16cd7d" translate="yes" xml:space="preserve">
          <source>SQLite is ANSI-C source code. It must be compiled into machine code before it is useful. This article is a guide to the various ways of compiling SQLite.</source>
          <target state="translated">SQLite-это исходный код ANSI-C.Он должен быть скомпилирован в машинный код,прежде чем будет полезен.Данная статья представляет собой руководство по различным способам компиляции SQLite.</target>
        </trans-unit>
        <trans-unit id="a694ce58bf7379de2122bb1b8b62f901618b77c1" translate="yes" xml:space="preserve">
          <source>SQLite is Transactional</source>
          <target state="translated">SQLite является транзакционным</target>
        </trans-unit>
        <trans-unit id="41195481e984eee6b772c414244a4b448aca2f82" translate="yes" xml:space="preserve">
          <source>SQLite is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Library_(computing)&quot;&gt;software library&lt;/a&gt; that translates high-level disk I/O requests generated by an application into low-level I/O operations that can be carried out by the operating system. The application constructs high-level I/O requests using the &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL&quot;&gt;SQL language&lt;/a&gt;. SQLite translates each high-level SQL statement into a sequence of many low-level I/O requests (open a file, read a few bytes from a file, write a few bytes into a file, etc.) that do the work requested by the SQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446762c2ed93e56023348a911dcbc0d76c6f8cf2" translate="yes" xml:space="preserve">
          <source>SQLite is a &lt;a href=&quot;https://www.loc.gov/preservation/resources/rfs/&quot;&gt;Recommended Storage Format&lt;/a&gt; for datasets according to the &lt;a href=&quot;https://www.loc.gov/&quot;&gt;US Library of Congress&lt;/a&gt;. Further information:</source>
          <target state="translated">По данным &lt;a href=&quot;https://www.loc.gov/&quot;&gt;Библиотеки Конгресса США,&lt;/a&gt; SQLite - это &lt;a href=&quot;https://www.loc.gov/preservation/resources/rfs/&quot;&gt;рекомендуемый формат хранения&lt;/a&gt; для наборов данных . Дальнейшая информация:</target>
        </trans-unit>
        <trans-unit id="522312ab816ca3dd4464526e62012e35cc493c25" translate="yes" xml:space="preserve">
          <source>SQLite is a &lt;a href=&quot;serverless&quot;&gt;serverless&lt;/a&gt; software library, whereas the other systems are client-server based. With MySQL, PostgreSQL, SQL-Server, and others, the application sends a message containing some SQL over to a separate server thread or process. That separate thread or process performs the requested I/O, then send the results back to the application. But there is no separate thread or process with SQLite. SQLite runs in the same address space as the application, using the same program counter and heap storage. SQLite does no interprocess communication (IPC). When an application sends an SQL statement into SQLite (by invoking a the appropriate SQLite library subroutine), SQLite interprets the SQL in the same thread as the caller. When an SQLite API routine returns, it does not leave behind any background tasks that run separately from the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1971ee5b77707ce34ac0536f708076c112ecc8" translate="yes" xml:space="preserve">
          <source>SQLite is a C-library that runs in the same address space as the application that it serves. That means that stray pointers, buffer overruns, heap corruption, or other malfunctions in the application can corrupt internal SQLite data structure and ultimately result in a corrupt database file. Normally these kinds of problems manifest themselves as segfaults prior to any database corruption occurring, but there have been instances where application code errors have caused SQLite to malfunction subtly so as to corrupt the database file rather than panicking.</source>
          <target state="translated">SQLite-это C-библиотека,которая работает в том же адресном пространстве,что и приложение,которое она обслуживает.Это означает,что блуждающие указатели,переполнения буфера,куча повреждений или другие неполадки в приложении могут повредить внутреннюю структуру данных SQLite и,в конечном счете,привести к повреждению файла базы данных.Обычно такие проблемы проявляются в виде сегрегации перед тем,как произойдет какое-либо повреждение базы данных,но были случаи,когда ошибки в коде приложения приводили к тому,что SQLite тонко работал,чтобы не паниковать,а повредить файл базы данных.</target>
        </trans-unit>
        <trans-unit id="017a47b5545e38512155b34a1d9f857de667f2bb" translate="yes" xml:space="preserve">
          <source>SQLite is a Self Contained System</source>
          <target state="translated">SQLite-это автономная система.</target>
        </trans-unit>
        <trans-unit id="05e7f4b2364ae4b953b34f6c921b7a5ea3867f94" translate="yes" xml:space="preserve">
          <source>SQLite is a good solution for any situation that requires bundling diverse content into a self-contained and self-describing package for shipment across a network. Content is encoded in a &lt;a href=&quot;fileformat2&quot;&gt;well-defined, cross-platform, and stable file format&lt;/a&gt;. The encoding is efficient, and receivers can extract small subsets of the content without having to read and parse the entire file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663e24794b8ab537e46fb80090c661ea79493e74" translate="yes" xml:space="preserve">
          <source>SQLite is a good solution for any situation that requires bundling diverse content into a self-contained and self-describing package for shipment across a network. Content is encoding in a &lt;a href=&quot;fileformat2&quot;&gt;well-defined, cross-platform, and stable file format&lt;/a&gt;. The encoding is efficient, and receivers can extract small subsets of the content without having to read and parse the entire file.</source>
          <target state="translated">SQLite - хорошее решение для любой ситуации, когда требуется объединение разнородного контента в автономный пакет с самоописанием для отправки по сети. Контент кодируется в &lt;a href=&quot;fileformat2&quot;&gt;четко определенный, кроссплатформенный и стабильный формат файла&lt;/a&gt; . Кодирование является эффективным, и получатели могут извлекать небольшие подмножества контента без необходимости читать и анализировать весь файл.</target>
        </trans-unit>
        <trans-unit id="247c4a67391b665da341d6210067738ae06e1a54" translate="yes" xml:space="preserve">
          <source>SQLite is a high-reliability storage solution. It does not give problems. It just works.</source>
          <target state="translated">SQLite-это высоконадежное решение для хранения данных.Он не дает проблем.Просто работает.</target>
        </trans-unit>
        <trans-unit id="30822bd9c64d132478b5d1bdc08a62b48e9c0cb3" translate="yes" xml:space="preserve">
          <source>SQLite is able to limit the size of a database file to prevent the database file from growing too large and consuming too much disk space. The SQLITE_MAX_PAGE_COUNT parameter, which is normally set to 1073741823, is the maximum number of pages allowed in a single database file. An attempt to insert new data that would cause the database file to grow larger than this will return SQLITE_FULL.</source>
          <target state="translated">SQLite способен ограничить размер файла базы данных,чтобы предотвратить рост файла базы данных и потребление слишком большого дискового пространства.Параметр SQLITE_MAX_PAGE_COUNT,который обычно устанавливается в 1073741823,является максимальным количеством страниц,разрешенных в одном файле базы данных.Попытка вставить новые данные,из-за которых файл базы данных вырастет больше,чем это,вернет SQLITE_FULL.</target>
        </trans-unit>
        <trans-unit id="4cbf83ed4a424e770c465325d3f9d1b3f515ba13" translate="yes" xml:space="preserve">
          <source>SQLite is able to use multiple VFSes at the same time. Each individual database connection is associated with just one VFS. But if you have multiple database connections, each connection can be associated with a different VFS.</source>
          <target state="translated">SQLite может использовать несколько VFS одновременно.Каждое отдельное подключение к БД связано только с одной VFS.Но если у вас несколько подключений к БД,то каждое подключение может быть связано с другой VFS.</target>
        </trans-unit>
        <trans-unit id="c555b3320f8787c7d985cc510e097760a2ba67e1" translate="yes" xml:space="preserve">
          <source>SQLite is an example of a classic serverless database engine. With SQLite, there are no other processes, threads, machines, or other mechanisms (apart from host computer OS and filesystem) to help provide database services or implementation. There really is no server.</source>
          <target state="translated">SQLite является примером классического безсерверного движка баз данных.В SQLite нет других процессов,потоков,машин или других механизмов (кроме ОС хост-компьютера и файловой системы),которые могли бы помочь в предоставлении услуг баз данных или их реализации.На самом деле нет никакого сервера.</target>
        </trans-unit>
        <trans-unit id="2d318f0e33e483c7b8003ffacee251b811c3c5c9" translate="yes" xml:space="preserve">
          <source>SQLite is built from over one hundred files of C code and script spread across multiple directories. The implementation of SQLite is pure ANSI-C, but many of the C-language source code files are either generated or transformed by auxiliary C programs and AWK, SED, and TCL scripts prior to being incorporated into the finished SQLite library. Building the necessary C programs and transforming and/or creating the C-language source code for SQLite is a complex process.</source>
          <target state="translated">SQLite построен из более чем ста файлов C-кода и скриптов,распределенных по нескольким каталогам.Реализация SQLite является чистой ANSI-C,но многие файлы исходного кода на языке C либо генерируются,либо трансформируются вспомогательными программами на C и AWK,SED и TCL скриптами перед тем,как быть включенными в готовую библиотеку SQLite.Сборка необходимых программ на C и преобразование и/или создание исходного кода на C-языке для SQLite является сложным процессом.</target>
        </trans-unit>
        <trans-unit id="6746f394557b9dabd8af972d9d23d7f801fedd98" translate="yes" xml:space="preserve">
          <source>SQLite is built using a &lt;a href=&quot;https://en.wikipedia.org/wiki/DO-178B&quot;&gt;DO-178B&lt;/a&gt;-inspired process. The &lt;a href=&quot;testing&quot;&gt;testing standards&lt;/a&gt; for SQLite are among the highest for commercial software.</source>
          <target state="translated">SQLite построен с использованием процесса, вдохновленного &lt;a href=&quot;https://en.wikipedia.org/wiki/DO-178B&quot;&gt;DO-178B&lt;/a&gt; . Стандарты &lt;a href=&quot;testing&quot;&gt;тестирования&lt;/a&gt; для SQLite одни из самых высоких для коммерческого программного обеспечения.</target>
        </trans-unit>
        <trans-unit id="875a9efc25bbb30b8f5d1660336c59da880170b4" translate="yes" xml:space="preserve">
          <source>SQLite is competitive with, and usually faster than, blobs stored in separate files on disk, for both reading and writing.</source>
          <target state="translated">SQLite конкурирует и,как правило,быстрее,чем блобы,хранящиеся в отдельных файлах на диске,как для чтения,так и для записи.</target>
        </trans-unit>
        <trans-unit id="53b3a565f93669221f3865969fe660536421aef7" translate="yes" xml:space="preserve">
          <source>SQLite is designed to meet most developer's needs without any changes or customization. When changes are needed, they can normally be accomplished using start-time &lt;a href=&quot;c3ref/config&quot;&gt;(1)&lt;/a&gt; or runtime &lt;a href=&quot;c3ref/db_config&quot;&gt;(2)&lt;/a&gt;&lt;a href=&quot;c3ref/limit&quot;&gt;(3)&lt;/a&gt;&lt;a href=&quot;c3ref/vfs_find&quot;&gt;(4)&lt;/a&gt; configuration methods or via &lt;a href=&quot;compile&quot;&gt;compile-time options&lt;/a&gt;. It is very rare that an application developer will need to edit the SQLite source code in order to incorporate SQLite into a product.</source>
          <target state="translated">SQLite разработан для удовлетворения потребностей большинства разработчиков без каких-либо изменений или настроек. Когда требуются изменения, они обычно могут быть выполнены с использованием методов конфигурации времени начала &lt;a href=&quot;c3ref/config&quot;&gt;(1)&lt;/a&gt; или времени выполнения &lt;a href=&quot;c3ref/db_config&quot;&gt;(2) &lt;/a&gt;&lt;a href=&quot;c3ref/limit&quot;&gt;(3) &lt;/a&gt;&lt;a href=&quot;c3ref/vfs_find&quot;&gt;(4)&lt;/a&gt; или с помощью &lt;a href=&quot;compile&quot;&gt;параметров времени компиляции&lt;/a&gt; . Очень редко разработчику приложения требуется редактировать исходный код SQLite, чтобы включить SQLite в продукт.</target>
        </trans-unit>
        <trans-unit id="2b810dc63ad4381febba6bfa7d0698c8944220e9" translate="yes" xml:space="preserve">
          <source>SQLite is different in that it stores the schema in the &lt;a href=&quot;fileformat2#sqlite_master&quot;&gt;sqlite_master&lt;/a&gt; table as the original text of the CREATE statements that define the schema. Hence ALTER TABLE needs to revise the text of the CREATE statement. Doing so can be tricky for certain &quot;creative&quot; schema designs.</source>
          <target state="translated">SQLite отличается тем, что сохраняет схему в таблице &lt;a href=&quot;fileformat2#sqlite_master&quot;&gt;sqlite_master&lt;/a&gt; как исходный текст операторов CREATE, которые определяют схему. Следовательно, ALTER TABLE необходимо изменить текст оператора CREATE. Это может быть непросто для некоторых &amp;laquo;креативных&amp;raquo; схем.</target>
        </trans-unit>
        <trans-unit id="3ba0a35d8001d8dc075689278c2e501182c6877e" translate="yes" xml:space="preserve">
          <source>SQLite is different in that it stores the schema in the &lt;a href=&quot;schematab&quot;&gt;sqlite_schema&lt;/a&gt; table as the original text of the CREATE statements that define the schema. Hence ALTER TABLE needs to revise the text of the CREATE statement. Doing so can be tricky for certain &quot;creative&quot; schema designs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d9fd1ad4a17767c9b0eeee58f6c4cef761ec22" translate="yes" xml:space="preserve">
          <source>SQLite is expected to operate the same, and use exactly the same &lt;a href=&quot;fileformat2&quot;&gt;on-disk format&lt;/a&gt;, on all modern operating systems, on all modern computer architectures, and using all modern C compilers. The developers are constantly testing SQLite on as many diverse platforms as they can get their hands on.</source>
          <target state="translated">Ожидается, что SQLite будет работать одинаково и использовать точно такой же &lt;a href=&quot;fileformat2&quot;&gt;дисковый формат&lt;/a&gt; во всех современных операционных системах, на всех современных компьютерных архитектурах и с использованием всех современных компиляторов C. Разработчики постоянно тестируют SQLite на максимально возможном количестве платформ.</target>
        </trans-unit>
        <trans-unit id="0ae04c54b68c60010dff08d4f306e294deee8ba8" translate="yes" xml:space="preserve">
          <source>SQLite is in the Public Domain.</source>
          <target state="translated">SQLite находится в публичном домене.</target>
        </trans-unit>
        <trans-unit id="41978015003a28658fac35ad1aebf308a1d4bdc1" translate="yes" xml:space="preserve">
          <source>SQLite is much faster than direct writes to disk on Windows when anti-virus protection is turned on. Since anti-virus software is and should be on by default in Windows, that means that SQLite is generally much faster than direct disk writes on Windows.</source>
          <target state="translated">SQLite намного быстрее,чем прямая запись на диск под Windows при включенной антивирусной защите.Поскольку антивирусное программное обеспечение включено и должно быть включено по умолчанию в Windows,это означает,что SQLite,как правило,намного быстрее,чем прямая запись на диск под Windows.</target>
        </trans-unit>
        <trans-unit id="d2117a2a67d4eee0f3af565533d9cac9c29e3ebe" translate="yes" xml:space="preserve">
          <source>SQLite is normally very forgiving about mismatches between the type of a value and the declared type of the container in which that value is to be stored. For example, SQLite allows the application to store a large BLOB in a column with a declared type of BOOLEAN. But in a few cases, SQLite is strict about types. The SQLITE_MISMATCH error is returned in those few cases when the types do not match.</source>
          <target state="translated">SQLite,как правило,очень забывает о несоответствиях между типом значения и объявленным типом контейнера,в котором это значение должно храниться.Например,SQLite позволяет приложению хранить большой BLOB в столбце с объявленным типом BOOLEAN.Но в некоторых случаях SQLite строго относится к типам.Ошибка SQLITE_MISMATCH возвращается в тех немногих случаях,когда типы не совпадают.</target>
        </trans-unit>
        <trans-unit id="90d38f0f8852e6f3bc8f54ade94a7ff4da3d7a52" translate="yes" xml:space="preserve">
          <source>SQLite is not directly comparable to client/server SQL database engines such as MySQL, Oracle, PostgreSQL, or SQL Server since SQLite is trying to solve a different problem.</source>
          <target state="translated">SQLite не сравнится напрямую с такими движками баз данных SQL клиент/сервер,как MySQL,Oracle,PostgreSQL или SQL Server,так как SQLite пытается решить другую проблему.</target>
        </trans-unit>
        <trans-unit id="1435c0d28bf1363ba8e34333297e06f59701df95" translate="yes" xml:space="preserve">
          <source>SQLite is not particular about the text it receives and is more than happy to process text strings that are not normalized or even well-formed UTF-8 or UTF-16. Thus, programmers who want to store IS08859 data can do so using the UTF-8 interfaces. As long as no attempts are made to use a UTF-16 collating sequence or SQL function, the byte sequence of the text will not be modified in any way.</source>
          <target state="translated">SQLite не особо интересуется полученным текстом и с удовольствием обрабатывает текстовые строки,которые не нормализованы или даже хорошо сформированы в UTF-8 или UTF-16.Таким образом,программисты,желающие хранить данные IS08859,могут сделать это,используя интерфейсы UTF-8.До тех пор,пока не будет предпринято попыток использования коллизионной последовательности UTF-16 или SQL-функции,байтовая последовательность текста никак не будет изменена.</target>
        </trans-unit>
        <trans-unit id="79f629ab8f652eed86f8d0cea408ad231ec0a7de" translate="yes" xml:space="preserve">
          <source>SQLite is not particular about the text it receives and is more than happy to process text strings that are not normalized or even well-formed UTF-8 or UTF-16. Thus, programmers who want to store ISO8859 data can do so using the UTF-8 interfaces. As long as no attempts are made to use a UTF-16 collating sequence or SQL function, the byte sequence of the text will not be modified in any way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f069bbbe7e83bd0e5742fa278486eb680133a8" translate="yes" xml:space="preserve">
          <source>SQLite is not the perfect application file format for every situation. But in many cases, SQLite is a far better choice than either a custom file format, a pile-of-files, or a wrapped pile-of-files. SQLite is a high-level, stable, reliable, cross-platform, widely-deployed, extensible, performant, accessible, concurrent file format. It deserves your consideration as the standard file format on your next application design.</source>
          <target state="translated">SQLite не является идеальным форматом файла приложения для любой ситуации.Но во многих случаях SQLite является гораздо лучшим выбором,чем пользовательский формат файла,&quot;куча файлов&quot; или &quot;обернутая куча файлов&quot;.SQLite-это высокоуровневый,стабильный,надежный,кроссплатформенный,широко распространенный,расширяемый,производительный,доступный,параллельный формат файлов.Он заслуживает вашего рассмотрения в качестве стандартного формата файла на вашем следующем дизайне приложения.</target>
        </trans-unit>
        <trans-unit id="587085de5e94b94b24e4a564a72e1cd94941218f" translate="yes" xml:space="preserve">
          <source>SQLite is often &lt;a href=&quot;fasterthanfs&quot;&gt;faster than direct low-level I/O&lt;/a&gt;. This is counterintuitive. One would expect that a high-level interface such as SQLite would impose a run-time penalty. And, theoretically, that is correct. But in practice, SQL-based systems such as SQLite do so many behind-the-scenes optimizations that an application developer would never have time to create and maintain, that the SQL-based systems end up providing a net performance gain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9638ccd4cc256f849e2db07526c184593398229" translate="yes" xml:space="preserve">
          <source>SQLite is often used as the on-disk file format for desktop applications such as version control systems, financial analysis tools, media cataloging and editing suites, CAD packages, record keeping programs, and so forth. The traditional File/Open operation calls sqlite3_open() to attach to the database file. Updates happen automatically as application content is revised so the File/Save menu option becomes superfluous. The File/Save_As menu option can be implemented using the &lt;a href=&quot;backup&quot;&gt;backup API&lt;/a&gt;.</source>
          <target state="translated">SQLite часто используется в качестве формата файла на диске для настольных приложений, таких как системы контроля версий, инструменты финансового анализа, средства каталогизации и редактирования, пакеты САПР, программы для ведения документации и т. Д. Традиционная операция File / Open вызывает sqlite3_open () для присоединения к файлу базы данных. Обновления происходят автоматически по мере изменения содержимого приложения, поэтому пункт меню &amp;laquo;Файл / Сохранить&amp;raquo; становится излишним. Опцию меню File / Save_As можно реализовать с помощью &lt;a href=&quot;backup&quot;&gt;API резервного копирования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f01574bffbe492a08f6a39612436763f1dce6eab" translate="yes" xml:space="preserve">
          <source>SQLite is one of many open-source projects that OSS Fuzz tests. The &lt;a href=&quot;https://www.sqlite.org/src/file/test/ossfuzz.c&quot;&gt;test/ossfuzz.c&lt;/a&gt; source file in the SQLite repository is SQLite's interface to OSS fuzz.</source>
          <target state="translated">SQLite - один из многих проектов с открытым исходным кодом, которые тестирует OSS Fuzz. &lt;a href=&quot;https://www.sqlite.org/src/file/test/ossfuzz.c&quot;&gt;Тест / ossfuzz.c&lt;/a&gt; исходный файл в хранилище данных SQLite является интерфейс SQLite для ОСС пуха.</target>
        </trans-unit>
        <trans-unit id="bf60766f31de04598304b77a31a30aab178aeaf9" translate="yes" xml:space="preserve">
          <source>SQLite is one of the &lt;a href=&quot;https://sqlite.org/mostdeployed.html&quot;&gt;most used&lt;/a&gt; software libraries in the world. There are literally tens of billions of SQLite database files in use daily, on smartphones and gadgets and in desktop applications. SQLite is &lt;a href=&quot;testing&quot;&gt;carefully tested&lt;/a&gt; and proven reliable. It is not a component that needs much tuning or debugging, allowing developers to stay focused on application logic.</source>
          <target state="translated">SQLite - одна из &lt;a href=&quot;https://sqlite.org/mostdeployed.html&quot;&gt;наиболее часто используемых&lt;/a&gt; программных библиотек в мире. Буквально десятки миллиардов файлов базы данных SQLite ежедневно используются на смартфонах и гаджетах, а также в настольных приложениях. SQLite &lt;a href=&quot;testing&quot;&gt;тщательно протестирован&lt;/a&gt; и доказал свою надежность. Это не компонент, который требует особой настройки или отладки, позволяя разработчикам сосредоточиться на логике приложения.</target>
        </trans-unit>
        <trans-unit id="b472863a9267f026cee0ca0b35a15991ef89b036" translate="yes" xml:space="preserve">
          <source>SQLite is open source. This gives many people the idea that it is not well tested as commercial software and is perhaps unreliable. But that impression is false. SQLite has exhibited very high reliability in the field and a very low defect rate, especially considering how rapidly it is evolving. The quality of SQLite is achieved in part by careful code design and implementation. But extensive testing also plays a vital role in maintaining and improving the quality of SQLite. This document has summarized the testing procedures that every release of SQLite undergoes with the hope of inspiring confidence that SQLite is suitable for use in mission-critical applications.</source>
          <target state="translated">SQLite с открытым исходным кодом.Это дает многим людям понять,что он не очень хорошо протестирован как коммерческое программное обеспечение и,возможно,ненадежен.Но это впечатление ложное.SQLite продемонстрировал очень высокую надежность в работе и очень низкий процент брака,особенно если учесть,насколько быстро он развивается.Качество SQLite достигается отчасти благодаря тщательному проектированию и реализации кода.Но обширное тестирование также играет важную роль в поддержании и улучшении качества SQLite.В этом документе обобщены процедуры тестирования,которые проходят каждый выпуск SQLite с надеждой внушить уверенность в том,что SQLite подходит для использования в критически важных приложениях.</target>
        </trans-unit>
        <trans-unit id="dbc3c1fb569cecbb959acf32375d7a9409c9e7db" translate="yes" xml:space="preserve">
          <source>SQLite is required to &lt;b&gt;implement atomic and durable transactions&lt;/b&gt; (the 'A' and 'D' from the ACID acronym), even if an application, operating system or power failure occurs midway through or shortly after updating a database file.</source>
          <target state="translated">SQLite требуется для &lt;b&gt;реализации атомарных и устойчивых транзакций&lt;/b&gt; (&amp;laquo;A&amp;raquo; и &amp;laquo;D&amp;raquo; из аббревиатуры ACID), даже если сбой приложения, операционной системы или питания происходит в середине или вскоре после обновления файла базы данных.</target>
        </trans-unit>
        <trans-unit id="362f767a2655b7418135c488c8146a1c344658d9" translate="yes" xml:space="preserve">
          <source>SQLite is required to &lt;b&gt;implement isolated transactions&lt;/b&gt; (the 'I' from the ACID acronym).</source>
          <target state="translated">SQLite требуется для &lt;b&gt;реализации изолированных транзакций&lt;/b&gt; (&amp;laquo;I&amp;raquo; в аббревиатуре ACID).</target>
        </trans-unit>
        <trans-unit id="b642e02aa031422407ba1e2eb9a921d7af9484d1" translate="yes" xml:space="preserve">
          <source>SQLite is resilient in the face of corrupt inputs, including maliciously designed database files and SQL strings. Extensive fuzz-testing ensures that corrupt inputs will not lead to crashes or undefined behavior, but will instead cause sensible errors to be reported back to the application.</source>
          <target state="translated">SQLite устойчив к повреждениям на входных данных,включая вредоносно созданные файлы базы данных и строки SQL.Обширное нечёткое тестирование гарантирует,что повреждённые входные данные не приведут к сбоям или неопределённому поведению,а вместо этого будут приводить к тому,что в приложение будут возвращаться сообщения о разумных ошибках.</target>
        </trans-unit>
        <trans-unit id="80231535020620422bab08d0c25caafae2be3ab2" translate="yes" xml:space="preserve">
          <source>SQLite is resilient in the face of corrupt inputs, including maliciously designed database files and SQL strings. Extensive fuzz-testing ensures that corrupt inputs will not lead to crashes or undefined behavior, but will instead cause sensible errors to be reported back to the application. (&lt;a href=&quot;security&quot;&gt;More...&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5423cc6a7fa9f9530e2a51fe8a881bbb932c031" translate="yes" xml:space="preserve">
          <source>SQLite is slower at creating new indices. This is not a huge problem (since new indices are not created very often) but it is something that is being worked on. Hopefully, future versions of SQLite will do better here.</source>
          <target state="translated">SQLite медленнее создает новые индексы.Это не большая проблема (так как новые индексы создаются не очень часто),но это то,над чем работают.Надеюсь,что будущие версии SQLite здесь будут работать лучше.</target>
        </trans-unit>
        <trans-unit id="54a5009f6cdb462eb942bac870b07db8a1670fab" translate="yes" xml:space="preserve">
          <source>SQLite is slower than the other databases when it comes to dropping tables. This probably is because when SQLite drops a table, it has to go through and erase the records in the database file that deal with that table. MySQL and PostgreSQL, on the other hand, use separate files to represent each table so they can drop a table simply by deleting a file, which is much faster.</source>
          <target state="translated">SQLite медленнее других баз данных,когда речь заходит о выпадающих таблицах.Вероятно,это связано с тем,что когда SQLite бросает таблицу,он должен просмотреть и стереть записи в файле базы данных,которые имеют дело с этой таблицей.MySQL и PostgreSQL,с другой стороны,используют отдельные файлы для представления каждой таблицы,поэтому они могут бросить таблицу,просто удалив файл,что намного быстрее.</target>
        </trans-unit>
        <trans-unit id="d7366e08ffe20946fd76e62d62945bcc30d399f9" translate="yes" xml:space="preserve">
          <source>SQLite is threadsafe because it uses mutexes to serialize access to common data structures. However, the work of acquiring and releasing these mutexes will slow SQLite down slightly. Hence, if you do not need SQLite to be threadsafe, you should disable the mutexes for maximum performance. See the &lt;a href=&quot;threadsafe&quot;&gt;threading mode&lt;/a&gt; documentation for additional information.</source>
          <target state="translated">SQLite является потокобезопасным, поскольку он использует мьютексы для сериализации доступа к общим структурам данных. Однако работа по получению и освобождению этих мьютексов немного замедлит SQLite. Следовательно, если вам не нужно, чтобы SQLite был потокобезопасным, вы должны отключить мьютексы для максимальной производительности. Смотрите в &lt;a href=&quot;threadsafe&quot;&gt;режиме поточной&lt;/a&gt; документации для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="8cd3013ad5660f204f66ad31e2c31dd8240e6bb5" translate="yes" xml:space="preserve">
          <source>SQLite is threadsafe. We make this concession since many users choose to ignore the advice given in the previous paragraph. But in order to be thread-safe, SQLite must be compiled with the SQLITE_THREADSAFE preprocessor macro set to 1. Both the Windows and Linux precompiled binaries in the distribution are compiled this way. If you are unsure if the SQLite library you are linking against is compiled to be threadsafe you can call the &lt;a href=&quot;c3ref/threadsafe&quot;&gt;sqlite3_threadsafe()&lt;/a&gt; interface to find out.</source>
          <target state="translated">SQLite является потокобезопасным. Мы идем на эту уступку, поскольку многие пользователи предпочитают игнорировать советы, данные в предыдущем абзаце. Но для обеспечения многопоточности SQLite должен быть скомпилирован с макросом препроцессора SQLITE_THREADSAFE, установленным на 1. Таким образом компилируются предварительно скомпилированные двоичные файлы Windows и Linux в дистрибутиве. Если вы не уверены, что библиотека SQLite, с которой вы связываете, скомпилирована для обеспечения потоковой безопасности, вы можете вызвать интерфейс &lt;a href=&quot;c3ref/threadsafe&quot;&gt;sqlite3_threadsafe (),&lt;/a&gt; чтобы узнать.</target>
        </trans-unit>
        <trans-unit id="39eff500cd7ce6dc1730207961cc564613eaac4f" translate="yes" xml:space="preserve">
          <source>SQLite is transactional, meaning that multiple changes can be grouped together such that either all or none of them occur, and so that the changes can be rolled back if a problem is found prior to commit. This allows an application to make a change incrementally, then run various sanity and consistency checks on the resulting data prior to committing the changes to disk. The &lt;a href=&quot;http://www.fossil-scm.org/&quot;&gt;Fossil&lt;/a&gt; DVCS &lt;a href=&quot;http://www.fossil-scm.org/fossil/doc/tip/www/selfcheck.wiki&quot;&gt;uses this technique&lt;/a&gt; to verify that no repository history has been lost prior to each change.</source>
          <target state="translated">SQLite является транзакционным, что означает, что несколько изменений могут быть сгруппированы вместе, так что либо все, либо ни одно из них не произойдет, и чтобы изменения можно было откатить, если проблема обнаружена до фиксации. Это позволяет приложению вносить изменения постепенно, а затем запускать различные проверки работоспособности и непротиворечивости полученных данных перед фиксацией изменений на диске. &lt;a href=&quot;http://www.fossil-scm.org/&quot;&gt;Fossil&lt;/a&gt; DVCS &lt;a href=&quot;http://www.fossil-scm.org/fossil/doc/tip/www/selfcheck.wiki&quot;&gt;использует эту технику&lt;/a&gt; , чтобы убедиться , что никакая история хранилища не была потеряна до каждого изменения.</target>
        </trans-unit>
        <trans-unit id="431631b26b413c56876cd9120450d97fb29610b5" translate="yes" xml:space="preserve">
          <source>SQLite is typeless for the purpose of deciding what data is allowed to be stored in a column. But some notion of type comes into play when sorting and comparing data. For these purposes, a column or an expression can be one of two types: &lt;b&gt;numeric&lt;/b&gt; and &lt;b&gt;text&lt;/b&gt;. The sort or comparison may give different results depending on which type of data is being sorted or compared.</source>
          <target state="translated">SQLite не имеет типа, чтобы решить, какие данные разрешено хранить в столбце. Но при сортировке и сравнении данных в игру вступает некоторое понятие типа. Для этих целей столбец или выражение может быть одного из двух типов: &lt;b&gt;числовым&lt;/b&gt; и &lt;b&gt;текстовым&lt;/b&gt; . Сортировка или сравнение могут дать разные результаты в зависимости от того, какой тип данных сортируется или сравнивается.</target>
        </trans-unit>
        <trans-unit id="4a51a3f7b3710595af5efe3e3c4508040aaab8c5" translate="yes" xml:space="preserve">
          <source>SQLite is very flexible with regard to datatypes.</source>
          <target state="translated">SQLite очень гибкий в отношении типов данных.</target>
        </trans-unit>
        <trans-unit id="09d4e4b5b66b8b33e92f1d4cdf491ca8f18b646b" translate="yes" xml:space="preserve">
          <source>SQLite is very good at doing INSERTs within a transaction, which probably explains why it is so much faster than the other databases at this test.</source>
          <target state="translated">SQLite очень хорошо выполняет INSERT внутри транзакции,что,вероятно,объясняет,почему он намного быстрее,чем другие базы данных в этом тесте.</target>
        </trans-unit>
        <trans-unit id="f9422ec4c9c62f3dc785dbb76b2bd0e31c1307c2" translate="yes" xml:space="preserve">
          <source>SQLite is written in portable C code. Development work occurs on a mix of Linux, Mac, and Windows workstations. The developers use command-line tools and eschew integrated development environments (IDEs) whenever possible. All developers are expected to be fluent with the unix command-line.</source>
          <target state="translated">SQLite написан на переносном C-коде.Разработка ведется на смеси рабочих станций Linux,Mac и Windows.Разработчики используют инструменты командной строки и по возможности воздерживаются от интегрированных сред разработки (IDE).Все разработчики должны свободно работать с командной строкой unix.</target>
        </trans-unit>
        <trans-unit id="8e1e2d740adcf0319f2b64ec4840724790f32367" translate="yes" xml:space="preserve">
          <source>SQLite itself does not pay any attention to environment variables in this case, though presumably the GetTempPath() system call does. The search algorithm is different for CYGWIN builds. Check the source code for details.</source>
          <target state="translated">Сам SQLite в этом случае не обращает никакого внимания на переменные окружения,хотя,предположительно,это делает системный вызов GetTempPath().Алгоритм поиска для сборок CYGWIN отличается.Подробнее смотрите в исходном коде.</target>
        </trans-unit>
        <trans-unit id="04e08b220ef652d98be99d5e0babd01a982e4f55" translate="yes" xml:space="preserve">
          <source>SQLite itself is in the &lt;a href=&quot;https://sqlite.org/copyright.html&quot;&gt;public domain&lt;/a&gt; and can be used for any purpose. But TH3 is proprietary and requires a license.</source>
          <target state="translated">Сам SQLite находится в &lt;a href=&quot;https://sqlite.org/copyright.html&quot;&gt;открытом доступе&lt;/a&gt; и может использоваться для любых целей. Но TH3 проприетарный и требует лицензии.</target>
        </trans-unit>
        <trans-unit id="d3d3e9abb52e314e484928a8bc96db9c3ff377a7" translate="yes" xml:space="preserve">
          <source>SQLite just works.</source>
          <target state="translated">SQLite просто работает.</target>
        </trans-unit>
        <trans-unit id="721ec90166a13c1e4ac7e7556c93fcbe5d07f6e2" translate="yes" xml:space="preserve">
          <source>SQLite keeps track of the largest ROWID using an &lt;a href=&quot;fileformat2#intschema&quot;&gt;internal table&lt;/a&gt; named &quot;&lt;a href=&quot;fileformat2#seqtab&quot;&gt;sqlite_sequence&lt;/a&gt;&quot;. The sqlite_sequence table is created and initialized automatically whenever a normal table that contains an AUTOINCREMENT column is created. The content of the sqlite_sequence table can be modified using ordinary UPDATE, INSERT, and DELETE statements. But making modifications to this table will likely perturb the AUTOINCREMENT key generation algorithm. Make sure you know what you are doing before you undertake such changes. The sqlite_sequence table does not track ROWID changes associated with UPDATE statement, only INSERT statements.</source>
          <target state="translated">SQLite отслеживает самый большой ROWID, используя &lt;a href=&quot;fileformat2#intschema&quot;&gt;внутреннюю таблицу с&lt;/a&gt; именем &amp;laquo; &lt;a href=&quot;fileformat2#seqtab&quot;&gt;sqlite_sequence&lt;/a&gt; &amp;raquo;. Таблица sqlite_sequence создается и инициализируется автоматически всякий раз, когда создается обычная таблица, содержащая столбец AUTOINCREMENT. Содержимое таблицы sqlite_sequence можно изменить с помощью обычных операторов UPDATE, INSERT и DELETE. Но внесение изменений в эту таблицу, вероятно, нарушит алгоритм генерации ключа AUTOINCREMENT. Убедитесь, что вы знаете, что делаете, прежде чем предпринимать такие изменения. Таблица sqlite_sequence не отслеживает изменения ROWID, связанные с оператором UPDATE, только операторы INSERT.</target>
        </trans-unit>
        <trans-unit id="1fdbbf49537d5896499e4f580d89d3d977843a76" translate="yes" xml:space="preserve">
          <source>SQLite lets me insert a string into a database column of type integer!</source>
          <target state="translated">SQLite позволяет вставлять строку в столбец базы данных типа integer!</target>
        </trans-unit>
        <trans-unit id="e525cc6d45550b4b1a265dd25df50cc71c4474b0" translate="yes" xml:space="preserve">
          <source>SQLite limits the depth of recursion of triggers in order to prevent a statement involving recursive triggers from using an unbounded amount of memory.</source>
          <target state="translated">SQLite ограничивает глубину рекурсии триггеров,чтобы предотвратить использование рекурсивных триггеров неограниченным объемом памяти.</target>
        </trans-unit>
        <trans-unit id="bb5977c1cc25afeb2b0e4bd5a50680da96bdd766" translate="yes" xml:space="preserve">
          <source>SQLite makes a copy of the content of the &lt;a href=&quot;c3ref/mem_methods&quot;&gt;sqlite3_mem_methods&lt;/a&gt; object so the object can be modified after the &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; call returns.</source>
          <target state="translated">SQLite делает копию содержимого объекта &lt;a href=&quot;c3ref/mem_methods&quot;&gt;sqlite3_mem_methods,&lt;/a&gt; чтобы объект можно было изменить после возврата из вызова &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b1791cae0a6c7259639f6781e55e553d509ec456" translate="yes" xml:space="preserve">
          <source>SQLite makes no guarantees about the order of results if a SELECT omits the ORDER BY clause. Even so, the order of results does not change from one run to the next, and so many applications mistakenly come to depend on the arbitrary output order whatever that order happens to be. However, sometimes new versions of SQLite will contain optimizer enhancements that will cause the output order of queries without ORDER BY clauses to shift. When that happens, applications that depend on a certain output order might malfunction. By running the application multiple times with this pragma both disabled and enabled, cases where the application makes faulty assumptions about output order can be identified and fixed early, reducing problems that might be caused by linking against a different version of SQLite.</source>
          <target state="translated">SQLite не дает никаких гарантий относительно порядка результатов,если SELECT опускает пункт ORDER BY.Тем не менее,порядок результатов не меняется от одного запуска к другому,и поэтому многие приложения ошибочно полагаются на произвольный порядок вывода,каким бы ни был этот порядок.Однако иногда в новых версиях SQLite появляются улучшения в оптимизаторе,которые приводят к сдвигу порядка вывода запросов без пункта ORDER BY.Когда это произойдет,приложения,зависящие от определенного порядка вывода,могут выйти из строя.При многократном запуске приложения с такой прагмой,как отключенной,так и включенной,случаи,когда приложение делает ошибочные предположения о порядке вывода,могут быть идентифицированы и исправлены на ранней стадии,что уменьшает проблемы,которые могут быть вызваны линковкой с другой версией SQLite.</target>
        </trans-unit>
        <trans-unit id="e0ac4bc4025ad0a187612fd2738f58e087756b50" translate="yes" xml:space="preserve">
          <source>SQLite manipulates the contents of the file-system using a combination of the following four types of operation:</source>
          <target state="translated">SQLite манипулирует содержимым файловой системы,используя комбинацию следующих четырех типов операций:</target>
        </trans-unit>
        <trans-unit id="cd796a8c085bea850ea98c0f816e6ce6c1055032" translate="yes" xml:space="preserve">
          <source>SQLite may attempt to convert values between the storage classes INTEGER, REAL, and/or TEXT before performing a comparison. Whether or not any conversions are attempted before the comparison takes place depends on the type affinity of the operands.</source>
          <target state="translated">Перед проведением сравнения SQLite может попытаться преобразовать значения между классами хранения INTEGER,REAL и/или TEXT.Пытаются ли преобразования до проведения сравнения или нет,зависит от сродства типов операндов.</target>
        </trans-unit>
        <trans-unit id="86322113b50354d8e93e1a8d65dbbd7e579ef951" translate="yes" xml:space="preserve">
          <source>SQLite may make use of transient indices to implement SQL language features such as:</source>
          <target state="translated">SQLite может использовать переходные индексы для реализации таких возможностей языка SQL:</target>
        </trans-unit>
        <trans-unit id="692bd1d4aef60fc758b11851675895cb10aedde7" translate="yes" xml:space="preserve">
          <source>SQLite might also add one of the following flags to the xOpen method:</source>
          <target state="translated">SQLite также может добавить один из следующих флагов в метод xOpen:</target>
        </trans-unit>
        <trans-unit id="945af510f90e6578c1019b41a7ec0b83b8498700" translate="yes" xml:space="preserve">
          <source>SQLite might use a skip-scan on an index if it knows that the first one or more columns contain many duplication values. If there are too few duplicates in the left-most columns of the index, then it would be faster to simply step ahead to the next value, and thus do a full table scan, than to do a binary search on an index to locate the next left-column value.</source>
          <target state="translated">SQLite может использовать пропущенное сканирование индекса,если он знает,что первый столбец или несколько столбцов содержат много значений дублирования.Если в крайнем левом столбце индекса слишком мало дубликатов,то было бы быстрее просто перейти к следующему значению и таким образом выполнить полное табличное сканирование,чем выполнить двоичный поиск по индексу,чтобы найти следующее значение в левом столбце.</target>
        </trans-unit>
        <trans-unit id="ae7f6237fc49c4f40b5f79296508bbf096f1c300" translate="yes" xml:space="preserve">
          <source>SQLite must see the journal files in order to recover from a crash or power failure. If the &lt;a href=&quot;fileformat2#hotjrnl&quot;&gt;hot journal files&lt;/a&gt; are moved, deleted, or renamed after a crash or power failure, then automatic recovery will not work and the database may go corrupt.</source>
          <target state="translated">SQLite должен видеть файлы журнала для восстановления после сбоя или сбоя питания. Если &lt;a href=&quot;fileformat2#hotjrnl&quot;&gt;файлы горячего журнала&lt;/a&gt; перемещены, удалены или переименованы после сбоя или сбоя питания, автоматическое восстановление не будет работать, и база данных может быть повреждена.</target>
        </trans-unit>
        <trans-unit id="5e833260d531c8e2e412472ff105b04979b5cf7c" translate="yes" xml:space="preserve">
          <source>SQLite mutexes can also be disabled at run-time using the &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; interface. To completely disable all mutexing, the application can invoke:</source>
          <target state="translated">Мьютексы SQLite также можно отключить во время выполнения с помощью интерфейса &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config ()&lt;/a&gt; . Чтобы полностью отключить мьютексирование, приложение может вызвать:</target>
        </trans-unit>
        <trans-unit id="17328ec696bc91982c93295b65652b033f2ec296" translate="yes" xml:space="preserve">
          <source>SQLite needs to know if the native byte order of the target CPU is big-endian or little-ending. The SQLITE_BYTEORDER preprocessor is set to 4321 for big-endian machines and 1234 for little-endian machines, or it can be 0 to mean that the byte order must be determined at run-time. There are #ifdefs in the code that set SQLITE_BYTEORDER automatically for all common platforms and compilers. However, it may be advantageous to set SQLITE_BYTEORDER appropriately when compiling SQLite for obscure targets. If the target byte order cannot be determined at compile-time, then SQLite falls back to doing run-time checks, which always work, though with a small performance penalty.</source>
          <target state="translated">SQLite должен знать,какой порядок байт целевого процессора-большой или маленький.Препроцессор SQLITE_BYTEORDER установлен в 4321 для машин big-endian и в 1234 для машин little-endian,или 0,что означает,что порядок байт должен быть определен во время выполнения.В коде есть #ifdefs,которые автоматически устанавливают SQLITE_BYTEORDER для всех распространенных платформ и компиляторов.Однако при компиляции SQLite для непонятных целей может быть выгодно установить SQLITE_BYTEORDER соответствующим образом.Если целевой порядок байт не может быть определен во время компиляции,то SQLite возвращается к выполнению проверок во время выполнения,которые всегда работают,хотя и с небольшим штрафом за производительность.</target>
        </trans-unit>
        <trans-unit id="eec4b7f1b229092638c755d579865f53adc26ae9" translate="yes" xml:space="preserve">
          <source>SQLite never assumes atomic page writes &lt;em&gt;in its default configurations&lt;/em&gt;. But a custom &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; can set one of the &lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_ATOMIC&lt;/a&gt; bits in the result of the xDeviceCharacteristic() method and then SQLite will assume that page writes are atomic. The application must supply a custom VFS to accomplish this, however, since none of the standard VFSes will ever set any of the atomic bits in the xDeviceCharacteristics() vector.</source>
          <target state="translated">SQLite никогда не предполагает атомарные записи страниц &lt;em&gt;в своих конфигурациях по умолчанию&lt;/em&gt; . Но пользовательская &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; может установить один из битов &lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_ATOMIC&lt;/a&gt; в результате метода xDeviceCharacteristic (), и тогда SQLite будет считать, что запись страниц является атомарной. Однако для этого приложение должно предоставить настраиваемую VFS, поскольку ни одна из стандартных VFS никогда не будет устанавливать какие-либо атомарные биты в векторе xDeviceCharacteristics ().</target>
        </trans-unit>
        <trans-unit id="5e50c611c2a64f7dc9dc711887d5a6dcc24f10de" translate="yes" xml:space="preserve">
          <source>SQLite never assumes that database page writes are atomic, regardless of the PSOW setting.&lt;sup&gt;(1)&lt;/sup&gt; And hence SQLite is always able to automatically recover from torn pages induced by a crash. Enabling PSOW does not decrease SQLite's ability to recover from a torn page.</source>
          <target state="translated">SQLite никогда не предполагает, что записи страниц базы данных являются атомарными, независимо от настройки PSOW. &lt;sup&gt;(1)&lt;/sup&gt; И поэтому SQLite всегда может автоматически восстанавливаться после разорванных страниц, вызванных сбоем. Включение PSOW не снижает способность SQLite восстанавливаться после разорванной страницы.</target>
        </trans-unit>
        <trans-unit id="a73150dbd46d3caaecfb727306a8488e11089c46" translate="yes" xml:space="preserve">
          <source>SQLite normally stores all content in a single disk file. However, while performing a transaction, information necessary to recover the database following a crash or power failure is stored in auxiliary journal files. Such journal files are described as &lt;a href=&quot;fileformat2#hotjrnl&quot;&gt;&quot;hot&quot;&lt;/a&gt;. The journal files have the same name as the original database file with the addition of &lt;code&gt;-journal&lt;/code&gt; or &lt;code&gt;-wal&lt;/code&gt; suffix.</source>
          <target state="translated">SQLite обычно хранит все содержимое в одном файле на диске. Однако при выполнении транзакции информация, необходимая для восстановления базы данных после сбоя или сбоя питания, сохраняется во вспомогательных файлах журнала. Такие файлы журнала описываются как &lt;a href=&quot;fileformat2#hotjrnl&quot;&gt;&amp;laquo;горячие&amp;raquo;&lt;/a&gt; . Файлы журнала имеют то же имя, что и исходный файл базы данных, с добавлением суффикса &lt;code&gt;-journal&lt;/code&gt; или &lt;code&gt;-wal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c2764b7ab8c8fe2115410e837d5a49ba37682ad" translate="yes" xml:space="preserve">
          <source>SQLite now honors the UNIQUE keyword in CREATE UNIQUE INDEX. Primary keys are required to be unique.</source>
          <target state="translated">Теперь SQLite выполняет ключевое слово UNIQUE в CREATE UNIQUE INDEX.Первичные ключи должны быть уникальными.</target>
        </trans-unit>
        <trans-unit id="b528bcd272bd4532c5fdb40cce96437b126ffc1d" translate="yes" xml:space="preserve">
          <source>SQLite now implements all of its built-in functions using this interface. For additional information and examples on how to create new SQL functions, review the SQLite source code in the file &lt;b&gt;func.c&lt;/b&gt;.</source>
          <target state="translated">SQLite теперь реализует все свои встроенные функции с помощью этого интерфейса. Для получения дополнительной информации и примеров о том , как создавать новые функции SQL, обзор SQLite исходного кода в файл &lt;b&gt;func.c&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="741c17c0aae3a15bc76f9c3b0feb23ceb419b07b" translate="yes" xml:space="preserve">
          <source>SQLite only supports one writer at a time per database file. But in most cases, a write transaction only takes milliseconds and so multiple writers can simply take turns. SQLite will handle more write concurrency that many people suspect. Nevertheless, client/server database systems, because they have a long-running server process at hand to coordinate access, can usually handle far more write concurrency than SQLite ever will.</source>
          <target state="translated">SQLite поддерживает только один пишущий файл за один раз на файл базы данных.Но в большинстве случаев транзакция записи занимает только миллисекунды,и поэтому несколько пишущих машин могут просто делать по очереди.SQLite справится с большим количеством параллельных операций записи,о которых многие подозревают.Тем не менее,системы клиент/сервер СУБД,потому что у них под рукой длительный серверный процесс для координации доступа,обычно могут обрабатывать гораздо больше параллелей при записи,чем SQLite когда-либо сможет обрабатывать.</target>
        </trans-unit>
        <trans-unit id="5cbe82e83c540bf7ce2e1eadb8c5b0e3352775de" translate="yes" xml:space="preserve">
          <source>SQLite parses MATCH clauses (i.e. does not report a syntax error if you specify one), but does not enforce them. All foreign key constraints in SQLite are handled as if MATCH SIMPLE were specified.</source>
          <target state="translated">SQLite разбирает MATCH-опции (т.е.не сообщает об ошибке синтаксиса,если она указана),но не обеспечивает ее выполнение.Все ограничения внешних ключей в SQLite обрабатываются так,как если бы был указан MATCH-шаблон.</target>
        </trans-unit>
        <trans-unit id="c52abe2b4224c19357e2fb51b9983ebbf48e0915" translate="yes" xml:space="preserve">
          <source>SQLite parses expressions into a tree for processing. During code generation, SQLite walks this tree recursively. The depth of expression trees is therefore limited in order to avoid using too much stack space.</source>
          <target state="translated">SQLite разбирает выражения в дерево для обработки.Во время генерации кода SQLite рекурсивно обходит это дерево.Поэтому глубина деревьев выражений ограничена во избежание использования слишком большого пространства стека.</target>
        </trans-unit>
        <trans-unit id="52651f8e847f0d13fb28fbf85a29bff92a837a41" translate="yes" xml:space="preserve">
          <source>SQLite processes this by gathering all the output of query and then running that output through a sorter.</source>
          <target state="translated">SQLite обрабатывает это,собирая все выходные данные запроса и затем выполняя их через сортировщик.</target>
        </trans-unit>
        <trans-unit id="2e59e25078df47eeb568564146188c50381a8b44" translate="yes" xml:space="preserve">
          <source>SQLite promises to preserve the 15 most significant digits of a floating point value. However, it makes no guarantees about the accuracy of computations on floating point values, as no such guarantees are possible. Performing math on floating-point values introduces error. For example, consider what happens if you attempt to subtract two floating-point numbers of similar magnitude:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe52b85233b043a411af65af0db61d939caa292e" translate="yes" xml:space="preserve">
          <source>SQLite provides a number of enhancements to the SQL language not normally found in other database engines. The EXPLAIN keyword and manifest typing have already been mentioned above. SQLite also provides statements such as &lt;a href=&quot;lang_replace&quot;&gt;REPLACE&lt;/a&gt; and the &lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt; clause that allow for added control over the resolution of constraint conflicts. SQLite supports &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; and &lt;a href=&quot;lang_detach&quot;&gt;DETACH&lt;/a&gt; commands that allow multiple independent databases to be used together in the same query. And SQLite defines APIs that allows the user to add new &lt;a href=&quot;c3ref/create_function&quot;&gt;SQL functions&lt;/a&gt; and &lt;a href=&quot;c3ref/create_collation&quot;&gt;collating sequences&lt;/a&gt;.</source>
          <target state="translated">SQLite обеспечивает ряд улучшений языка SQL, которые обычно не встречаются в других механизмах баз данных. Ключевое слово EXPLAIN и типизация манифеста уже упоминались выше. SQLite также предоставляет такие операторы, как &lt;a href=&quot;lang_replace&quot;&gt;REPLACE&lt;/a&gt; и предложение &lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt; , которые обеспечивают дополнительный контроль над разрешением конфликтов ограничений. SQLite поддерживает команды &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; и &lt;a href=&quot;lang_detach&quot;&gt;DETACH,&lt;/a&gt; которые позволяют использовать несколько независимых баз данных вместе в одном запросе. SQLite определяет API-интерфейсы, которые позволяют пользователю добавлять новые &lt;a href=&quot;c3ref/create_function&quot;&gt;функции SQL&lt;/a&gt; и &lt;a href=&quot;c3ref/create_collation&quot;&gt;последовательности сортировки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="75b33c10e4ae0dc9caa69a9b718ca24a25cbfeba" translate="yes" xml:space="preserve">
          <source>SQLite provides isolation between operations in separate database connections. However, there is no isolation between operations that occur within the same database connection.</source>
          <target state="translated">SQLite обеспечивает изоляцию между операциями в отдельных соединениях БД.Однако никакой изоляции между операциями,происходящими внутри одного и того же соединения БД,нет.</target>
        </trans-unit>
        <trans-unit id="2a19562eb5d14931c391924201db74f2b2170510" translate="yes" xml:space="preserve">
          <source>SQLite provides the ability for advanced programmers to exercise control over the query plan chosen by the optimizer. One method for doing this is to fudge the &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; results in the &lt;a href=&quot;fileformat2#stat1tab&quot;&gt;sqlite_stat1&lt;/a&gt;, &lt;a href=&quot;fileformat2#stat3tab&quot;&gt;sqlite_stat3&lt;/a&gt;, and/or &lt;a href=&quot;fileformat2#stat4tab&quot;&gt;sqlite_stat4&lt;/a&gt; tables. That approach is not recommended except for the one scenario described in the next paragraph.</source>
          <target state="translated">SQLite предоставляет возможность опытным программистам контролировать план запроса, выбранный оптимизатором. Один из способов сделать это - &lt;a href=&quot;fileformat2#stat1tab&quot;&gt;подделать&lt;/a&gt; результаты &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; в таблицах sqlite_stat1 , &lt;a href=&quot;fileformat2#stat3tab&quot;&gt;sqlite_stat3&lt;/a&gt; и / или &lt;a href=&quot;fileformat2#stat4tab&quot;&gt;sqlite_stat4&lt;/a&gt; . Такой подход не рекомендуется, за исключением одного сценария, описанного в следующем абзаце.</target>
        </trans-unit>
        <trans-unit id="069bcc6cce5ca3be769be9d7d5d38ef69d29560b" translate="yes" xml:space="preserve">
          <source>SQLite provides these two interfaces for reporting on the status of the &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free()&lt;/a&gt;, and &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_realloc()&lt;/a&gt; routines, which form the built-in memory allocation subsystem.</source>
          <target state="translated">SQLite предоставляет эти два интерфейса для отчетов о состоянии подпрограмм &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free ()&lt;/a&gt; и &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_realloc ()&lt;/a&gt; , которые образуют встроенную подсистему распределения памяти.</target>
        </trans-unit>
        <trans-unit id="5be5efeb16b0a34b3e2605cf2967c7a9f9f4502b" translate="yes" xml:space="preserve">
          <source>SQLite provides these two interfaces for reporting on the status of the &lt;a href=&quot;free&quot;&gt;sqlite3_malloc()&lt;/a&gt;, &lt;a href=&quot;free&quot;&gt;sqlite3_free()&lt;/a&gt;, and &lt;a href=&quot;free&quot;&gt;sqlite3_realloc()&lt;/a&gt; routines, which form the built-in memory allocation subsystem.</source>
          <target state="translated">SQLite предоставляет эти два интерфейса для отчетов о состоянии подпрограмм &lt;a href=&quot;free&quot;&gt;sqlite3_malloc ()&lt;/a&gt; , &lt;a href=&quot;free&quot;&gt;sqlite3_free ()&lt;/a&gt; и &lt;a href=&quot;free&quot;&gt;sqlite3_realloc ()&lt;/a&gt; , которые образуют встроенную подсистему распределения памяти.</target>
        </trans-unit>
        <trans-unit id="796f29585c117f2d84f8816579b3c6eeec799286" translate="yes" xml:space="preserve">
          <source>SQLite queries an implementation for file-system characteristics using the xDeviceCharacteristics() and xSectorSize() methods of the database file file-handle. These two methods are only ever called on file-handles open on database files. They are not called for</source>
          <target state="translated">SQLite запрашивает реализацию характеристик файловой системы с помощью методов xDeviceCharacteristics()и xSectorSize()файл-руководства базы данных.Эти два метода никогда не вызываются только на файловых дескрипторах,открытых на файлах БД.Они не вызываются для</target>
        </trans-unit>
        <trans-unit id="1001eecb9650b8452d3fe909aaa11b4544423e7e" translate="yes" xml:space="preserve">
          <source>SQLite reads and writes small blobs (for example, thumbnail images) &lt;a href=&quot;#approx&quot;&gt;35% faster&amp;sup1;&lt;/a&gt; than the same blobs can be read from or written to individual files on disk using fread() or fwrite().</source>
          <target state="translated">SQLite читает и записывает маленькие капли (например, миниатюрные изображения) на &lt;a href=&quot;#approx&quot;&gt;35% быстрее&amp;sup1;,&lt;/a&gt; чем те же самые капли можно читать или записывать в отдельные файлы на диске с помощью fread () или fwrite ().</target>
        </trans-unit>
        <trans-unit id="35d70ea0800f08a06761cd47e896b93495f4c9c9" translate="yes" xml:space="preserve">
          <source>SQLite responds gracefully to system errors. Obscure out-of-memory and I/O errors are reported back up to the application. These error reporting paths are all carefully tested to ensure they will always work.</source>
          <target state="translated">SQLite изящно реагирует на системные ошибки.Неизвестные ошибки вне памяти и ошибки ввода/вывода сообщаются обратно в приложение.Все эти пути сообщения об ошибках тщательно проверяются,чтобы убедиться,что они всегда будут работать.</target>
        </trans-unit>
        <trans-unit id="23423829c41e2a290e377832f71a840c666910a0" translate="yes" xml:space="preserve">
          <source>SQLite seems to be a popular target for third-parties to fuzz. The developers hear about many attempts to fuzz SQLite and they do occasionally get bug reports found by independent fuzzers. All such reports are promptly fixed, so the product is improved and that the entire SQLite user community benefits. This mechanism of having many independent testers is similar to &lt;a href=&quot;https://en.wikipedia.org/wiki/Linus%27s_law&quot;&gt;Linus's law&lt;/a&gt;: &quot;given enough eyeballs, all bugs are shallow&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0c283f7e4e05e8236569bff26a222a275bf7f9" translate="yes" xml:space="preserve">
          <source>SQLite shall attempt to obtain an</source>
          <target state="translated">SQLite должен попытаться получить</target>
        </trans-unit>
        <trans-unit id="fc4b26fb3a3dbd3635c28a9c88ca506e8fda6086" translate="yes" xml:space="preserve">
          <source>SQLite shall ensure that a</source>
          <target state="translated">SQLite должен гарантировать,что</target>
        </trans-unit>
        <trans-unit id="68cdf5c9c482135a76a154ad68cc4116ae97dcc7" translate="yes" xml:space="preserve">
          <source>SQLite shall write the page data into the database file, using a single call to the xWrite method of the</source>
          <target state="translated">SQLite должен записать данные страницы в файл базы данных,используя единственный вызов метода xWrite из</target>
        </trans-unit>
        <trans-unit id="740a9f7c5b70a08a25f10f9d2fba2d5ac406ba97" translate="yes" xml:space="preserve">
          <source>SQLite should never crash, overflow a buffer, leak memory, or exhibit any other harmful behavior, even when presented with maliciously malformed SQL inputs or database files. SQLite should always detect erroneous inputs and raise an error, not crash or corrupt memory. Any malfunction caused by an SQL input or database file is considered a serious bug and will be promptly addressed when brought to the attention of the SQLite developers. SQLite is extensively fuzz-tested to help ensure that it is resistant to these kinds of errors.</source>
          <target state="translated">SQLite никогда не должен аварийно завершаться,переполнять буфер,утечка памяти или демонстрировать другое вредоносное поведение,даже если он представлен с вредоносными SQL входами или файлами базы данных.SQLite должен всегда обнаруживать ошибочные входы и вызывать ошибку,а не аварийное завершение работы или повреждение памяти.Любая неисправность,вызванная SQL-входом или файлом базы данных,считается серьезной ошибкой и будет оперативно устранена,когда она будет доведена до сведения разработчиков SQLite.В SQLite проводится тщательная проверка на размытость,чтобы убедиться,что он устойчив к подобного рода ошибкам.</target>
        </trans-unit>
        <trans-unit id="8394c39a29a6c802cb3baaa5a9c23f7e97f8a73c" translate="yes" xml:space="preserve">
          <source>SQLite solves this problem by using a</source>
          <target state="translated">SQLite решает эту задачу с помощью</target>
        </trans-unit>
        <trans-unit id="a17840ca9490a98d4558d4de1067d407ae4f9392" translate="yes" xml:space="preserve">
          <source>SQLite source code is managed using the &lt;a href=&quot;https://fossil-scm.org&quot;&gt;Fossil&lt;/a&gt; version control system. Fossil was written specifically to support SQLite development. Fossil provides both distributed version control and issue tracking.</source>
          <target state="translated">Исходный код SQLite управляется с помощью системы контроля версий &lt;a href=&quot;https://fossil-scm.org&quot;&gt;Fossil&lt;/a&gt; . Fossil был написан специально для поддержки разработки SQLite. Fossil обеспечивает как распределенный контроль версий, так и отслеживание проблем.</target>
        </trans-unit>
        <trans-unit id="fa87de437d401b498b7d8eb223dcf3f87cf0893d" translate="yes" xml:space="preserve">
          <source>SQLite sources are maintained on three geographically dispersed servers:</source>
          <target state="translated">Источники SQLite поддерживаются на трех географически распределенных серверах:</target>
        </trans-unit>
        <trans-unit id="e02e50c5282bb5b0a3a678ffe1050ddfbc21a817" translate="yes" xml:space="preserve">
          <source>SQLite stores an entire database within a single file, the format of which is described in the</source>
          <target state="translated">SQLite хранит всю базу данных в одном файле,формат которого описан в разделе</target>
        </trans-unit>
        <trans-unit id="e0f7d561a2c1be86ba2359c7d925b95b359fecaf" translate="yes" xml:space="preserve">
          <source>SQLite stores integer values in the 64-bit &lt;a href=&quot;https://en.wikipedia.org/wiki/Two%27s_complement&quot;&gt;twos-complement&lt;/a&gt; format. This gives a storage range of -9223372036854775808 to +9223372036854775807, inclusive. Integers within this range are exact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0b29ed9ca13970622475438234a3b6eb2529a8" translate="yes" xml:space="preserve">
          <source>SQLite strives to implement ORDER BY clauses using a preexisting index. If an appropriate index already exists, SQLite will walk the index, rather than the underlying table, to extract the requested information, and thus cause the rows to come out in the desired order. But if SQLite cannot find an appropriate index it will evaluate the query and store each row in a transient index whose data is the row data and whose key is the ORDER BY terms. After the query is evaluated, SQLite goes back and walks the transient index from beginning to end in order to output the rows in the desired order.</source>
          <target state="translated">SQLite стремится реализовать клаузулы ORDER BY с использованием уже существующего индекса.Если соответствующий индекс уже существует,SQLite будет ходить по индексу,а не по базовой таблице,чтобы извлечь запрашиваемую информацию,и таким образом вызвать вывод строк в желаемом порядке.Но если SQLite не может найти подходящий индекс,он будет оценивать запрос и хранить каждую строку в переходном индексе,данные которого являются данными строки и ключом которого являются термины ORDER BY.После того,как запрос оценен,SQLite возвращается назад и проходит по переходному индексу от начала до конца,чтобы вывести строки в нужном порядке.</target>
        </trans-unit>
        <trans-unit id="79801eb3ee90b8531950935fcb700e5d7936b51b" translate="yes" xml:space="preserve">
          <source>SQLite strives to keep error logger traffic low and only send messages to the error logger when there really is something wrong. Applications might further cull the error message traffic by deliberately ignore certain classes of error messages that they do not care about. For example, an application that makes frequent database schema changes might want to ignore all SQLITE_SCHEMA errors.</source>
          <target state="translated">SQLite стремится удерживать трафик логгера ошибок на низком уровне и посылать сообщения в логгер только тогда,когда действительно что-то не так.В дальнейшем приложения могут отсеивать трафик сообщений об ошибках,намеренно игнорируя определенные классы сообщений об ошибках,которые их не волнуют.Например,приложение,которое часто меняет схему базы данных,может захотеть проигнорировать все ошибки SQLITE_SCHEMA.</target>
        </trans-unit>
        <trans-unit id="76b7bc709cc1bfb344641faff586e57a6d874b11" translate="yes" xml:space="preserve">
          <source>SQLite strives to verify that every branch instruction makes a difference using &lt;a href=&quot;https://en.wikipedia.org/wiki/Mutation_testing&quot;&gt;mutation testing&lt;/a&gt;. &lt;a href=&quot;th3#muttest&quot;&gt;A script&lt;/a&gt; first compiles the SQLite source code into assembly language (using, for example, the -S option to gcc). Then the script steps through the generated assembly language and, one by one, changes each branch instruction into either an unconditional jump or a no-op, compiles the result, and verifies that the test suite catches the mutation.</source>
          <target state="translated">SQLite стремится проверить, что каждая инструкция ветвления имеет значение, используя &lt;a href=&quot;https://en.wikipedia.org/wiki/Mutation_testing&quot;&gt;тестирование мутаций&lt;/a&gt; . &lt;a href=&quot;th3#muttest&quot;&gt;Сценарий&lt;/a&gt; сначала компилирует исходный код SQLite на язык ассемблера (используя, например, параметр -S для gcc). Затем сценарий проходит через сгенерированный язык ассемблера и по очереди изменяет каждую инструкцию ветвления либо на безусловный переход, либо на бездействие, компилирует результат и проверяет, улавливает ли набор тестов мутацию.</target>
        </trans-unit>
        <trans-unit id="61116c736ec15bc5b4fb2fc6a87d1890ff944be5" translate="yes" xml:space="preserve">
          <source>SQLite supports a limited subset of ALTER TABLE. The ALTER TABLE command in SQLite allows the user to rename a table, to rename a column within a table, or to add a new column to an existing table.</source>
          <target state="translated">SQLite поддерживает ограниченное подмножество ALTER TABLE.Команда ALTER TABLE в SQLite позволяет пользователю переименовать таблицу,переименовать столбец внутри таблицы или добавить новый столбец в существующую таблицу.</target>
        </trans-unit>
        <trans-unit id="9fa3301d9a603d43c374c933699b5b685c255796" translate="yes" xml:space="preserve">
          <source>SQLite supports an unlimited number of simultaneous readers, but it will only allow one writer at any instant in time. For many situations, this is not a problem. Writers queue up. Each application does its database work quickly and moves on, and no lock lasts for more than a few dozen milliseconds. But there are some applications that require more concurrency, and those applications may need to seek a different solution.</source>
          <target state="translated">SQLite поддерживает неограниченное количество одновременных считывателей,но в любой момент времени разрешает только одну запись.Для многих ситуаций это не проблема.Писатели стоят в очереди.Каждое приложение быстро работает со своей базой данных и движется дальше,и ни один замок не длится более нескольких десятков миллисекунд.Но есть некоторые приложения,которые требуют больше параллельности,и этим приложениям,возможно,придется искать другое решение.</target>
        </trans-unit>
        <trans-unit id="362a3fd555302c4f1eaf77cb8e7f778518efb28e" translate="yes" xml:space="preserve">
          <source>SQLite supports five date and time functions as follows:</source>
          <target state="translated">SQLite поддерживает пять функций даты и времени следующим образом:</target>
        </trans-unit>
        <trans-unit id="91957f75e3d4e0fd1006ddb7500b87cbbf67b068" translate="yes" xml:space="preserve">
          <source>SQLite supports many &lt;a href=&quot;lang_corefunc&quot;&gt;simple&lt;/a&gt;, &lt;a href=&quot;lang_aggfunc&quot;&gt;aggregate&lt;/a&gt;, and &lt;a href=&quot;windowfunctions&quot;&gt;window&lt;/a&gt; SQL functions. For presentation purposes, simple functions are further subdivided into &lt;a href=&quot;lang_corefunc&quot;&gt;core functions&lt;/a&gt;, &lt;a href=&quot;lang_datefunc&quot;&gt;date-time functions&lt;/a&gt;, and &lt;a href=&quot;json1&quot;&gt;JSON functions&lt;/a&gt;. Applications can add new functions, written in C/C++, using the &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function()&lt;/a&gt; interface.</source>
          <target state="translated">SQLite поддерживает множество &lt;a href=&quot;lang_corefunc&quot;&gt;простых&lt;/a&gt; , &lt;a href=&quot;lang_aggfunc&quot;&gt;агрегатных&lt;/a&gt; и &lt;a href=&quot;windowfunctions&quot;&gt;оконных&lt;/a&gt; функций SQL. Для целей представления, простые функции подразделяются на &lt;a href=&quot;lang_corefunc&quot;&gt;основные функции&lt;/a&gt; , &lt;a href=&quot;lang_datefunc&quot;&gt;функции даты и времени&lt;/a&gt; , а также &lt;a href=&quot;json1&quot;&gt;функции JSON&lt;/a&gt; . Приложения могут добавлять новые функции, написанные на C / C ++, с помощью интерфейса &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8df117e71ae2eb15e7237b9f17e42a408d843570" translate="yes" xml:space="preserve">
          <source>SQLite supports multiple simultaneous read transactions coming from separate database connections, possibly in separate threads or processes, but only one simultaneous write transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2625e03f106cbbdee7f3db77e634d01593acaa" translate="yes" xml:space="preserve">
          <source>SQLite supports the ability of an application to specify an alternative memory allocator at run-time by filling in an instance of the &lt;a href=&quot;c3ref/mem_methods&quot;&gt;sqlite3_mem_methods&lt;/a&gt; object with pointers to the routines of the alternative implementation then registering the new alternative implementation using the &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; interface. For example:</source>
          <target state="translated">SQLite поддерживает возможность приложения указывать альтернативный распределитель памяти во время выполнения, заполняя экземпляр объекта &lt;a href=&quot;c3ref/mem_methods&quot;&gt;sqlite3_mem_methods&lt;/a&gt; указателями на подпрограммы альтернативной реализации, а затем регистрируя новую альтернативную реализацию с помощью интерфейса &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config ()&lt;/a&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="017fb6b291ff89e609d155a096555bd5bbe2c94f" translate="yes" xml:space="preserve">
          <source>SQLite supports the following 11 built-in window functions:</source>
          <target state="translated">SQLite поддерживает следующие 11 встроенных оконных функций:</target>
        </trans-unit>
        <trans-unit id="a02f0bb2b069910c39ea479587454cc5f38daf81" translate="yes" xml:space="preserve">
          <source>SQLite supports three different threading modes:</source>
          <target state="translated">SQLite поддерживает три различных режима потоковой обработки:</target>
        </trans-unit>
        <trans-unit id="4014b7a930ff3b73114947a465a719ff6e29de6d" translate="yes" xml:space="preserve">
          <source>SQLite tries to detect misuse and report the misuse using this result code. However, there is no guarantee that the detection of misuse will be successful. Misuse detection is probabilistic. Applications should never depend on an SQLITE_MISUSE return value.</source>
          <target state="translated">SQLite пытается обнаружить злоупотребление и сообщить о нем,используя данный код результата.Однако,нет никакой гарантии,что обнаружение неправильного использования будет успешным.Обнаружение неправильного использования является вероятностным.Приложения никогда не должны зависеть от возвращаемого значения SQLITE_MISUSE.</target>
        </trans-unit>
        <trans-unit id="84db0173921e2cbe9f6c615710bf66e073f79708" translate="yes" xml:space="preserve">
          <source>SQLite understands a real table to be a shadow table if all of the following are true:</source>
          <target state="translated">SQLite понимает реальную таблицу как теневую,если все нижеследующее верно:</target>
        </trans-unit>
        <trans-unit id="89cbe958d74b15f24f6e6b8bc29bafc1643a7f0d" translate="yes" xml:space="preserve">
          <source>SQLite understands most of the standard SQL language. But it does &lt;a href=&quot;omitted&quot;&gt;omit some features&lt;/a&gt; while at the same time adding a few features of its own. This document attempts to describe precisely what parts of the SQL language SQLite does and does not support. A list of &lt;a href=&quot;lang_keywords&quot;&gt;SQL keywords&lt;/a&gt; is also provided. The SQL language syntax is described by &lt;a href=&quot;syntaxdiagrams&quot;&gt;syntax diagrams&lt;/a&gt;.</source>
          <target state="translated">SQLite понимает большую часть стандартного языка SQL. Но он &lt;a href=&quot;omitted&quot;&gt;опускает некоторые функции&lt;/a&gt; и в то же время добавляет несколько собственных функций. Этот документ пытается точно описать, какие части языка SQL SQLite поддерживает и не поддерживает. Также предоставляется список &lt;a href=&quot;lang_keywords&quot;&gt;ключевых слов SQL&lt;/a&gt; . Синтаксис языка SQL описывается &lt;a href=&quot;syntaxdiagrams&quot;&gt;синтаксическими диаграммами&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76a4b937d814efc3107985206c3839b75a40d5c0" translate="yes" xml:space="preserve">
          <source>SQLite understands the following binary operators, in order from highest to lowest precedence:</source>
          <target state="translated">SQLite понимает следующие двоичные операторы по порядку от высшего до низшего приоритета:</target>
        </trans-unit>
        <trans-unit id="de40d61f7018c5b48e3c644cbaef8bf7d8b66fd1" translate="yes" xml:space="preserve">
          <source>SQLite uses &lt;a href=&quot;datatype3&quot;&gt;dynamic typing&lt;/a&gt;. Content can be stored as INTEGER, REAL, TEXT, BLOB, or as NULL.</source>
          <target state="translated">SQLite использует &lt;a href=&quot;datatype3&quot;&gt;динамическую типизацию&lt;/a&gt; . Содержимое может храниться как INTEGER, REAL, TEXT, BLOB или как NULL.</target>
        </trans-unit>
        <trans-unit id="2d9e9446caa946736bd5a01f0671ef69ec6cbe7e" translate="yes" xml:space="preserve">
          <source>SQLite uses &lt;code&gt;testcase()&lt;/code&gt; macros as described in the previous subsection to make sure that every condition in a bit-vector decision takes on every possible outcome. In this way, SQLite also achieves 100% MC/DC in addition to 100% branch coverage.</source>
          <target state="translated">SQLite использует макросы &lt;code&gt;testcase()&lt;/code&gt; как описано в предыдущем подразделе, чтобы гарантировать, что каждое условие в решении битового вектора принимает все возможные результаты. Таким образом, SQLite также обеспечивает 100% MC / DC в дополнение к 100% охвату ветвей.</target>
        </trans-unit>
        <trans-unit id="d2c828337726f1245db87b3b8499d82386b0261e" translate="yes" xml:space="preserve">
          <source>SQLite uses POSIX advisory locks to implement locking on Unix. On Windows it uses the LockFile(), LockFileEx(), and UnlockFile() system calls. SQLite assumes that these system calls all work as advertised. If that is not the case, then database corruption can result. One should note that POSIX advisory locking is known to be buggy or even unimplemented on many NFS implementations (including recent versions of Mac OS X) and that there are reports of locking problems for network filesystems under Windows. Your best defense is to not use SQLite for files on a network filesystem.</source>
          <target state="translated">SQLite использует POSIX-советствующие блокировки для реализации блокировки на Unix.На Windows он использует системные вызовы LockFile(),LockFileEx()и UnlockFile().SQLite предполагает,что все эти системные вызовы работают как рекламируемые.Если это не так,то это может привести к повреждению базы данных.Следует отметить,что POSIX-советование блокировки,как известно,является ошибочным или даже не реализованным на многих NFS реализациях (включая последние версии Mac OS X),и что есть сообщения о проблемах блокировки для сетевых файловых систем под Windows.Ваша лучшая защита-не использовать SQLite для файлов сетевых файловых систем.</target>
        </trans-unit>
        <trans-unit id="419f5d6983bf4618f2a5dc1a95258ff9924a25c1" translate="yes" xml:space="preserve">
          <source>SQLite uses a continuous integration process. The software is under constant enhancement and refinement. The latest trunk check-ins are frequently used internally for mission-critical operations.</source>
          <target state="translated">SQLite использует непрерывный процесс интеграции.Программное обеспечение постоянно совершенствуется и дорабатывается.Последние проверки магистральных каналов часто используются внутри организации для критически важных операций.</target>
        </trans-unit>
        <trans-unit id="1a0520919cdd7c57c0662d504d1dbd0da4f6ed1c" translate="yes" xml:space="preserve">
          <source>SQLite uses a cost-based query planner. When there are two or more ways of solving the same query, SQLite tries to estimate the total amount of time needed to run the query using each plan, and then uses the plan with the lowest estimated cost. A cost is computed mostly from the estimated time, and so this case could go either way depending on the table size and what WHERE clause constraints were available, and so forth. But generally speaking, the indexed sort would probably be chosen, if for no other reason, because it does not need to accumulate the entire result set in temporary storage before sorting and thus uses much less temporary storage.</source>
          <target state="translated">SQLite использует планировщик запросов на основе стоимости.При наличии двух и более способов решения одного и того же запроса SQLite пытается оценить общее время,необходимое для выполнения запроса по каждому плану,а затем использует план с наименьшими предполагаемыми затратами.Стоимость вычисляется в основном из расчетного времени,и поэтому этот случай может идти в любом направлении в зависимости от размера таблицы,а также от того,какие ограничения по пунктам WHERE были доступны,и так далее.Но в целом,индексированная сортировка,вероятно,будет выбрана,если не по какой-либо другой причине,потому что ей не нужно накапливать весь набор результатов во временном хранилище перед сортировкой и,таким образом,использовать гораздо меньше временного хранилища.</target>
        </trans-unit>
        <trans-unit id="db9d581a988a96a28e53beca39811ace9da326e2" translate="yes" xml:space="preserve">
          <source>SQLite uses a more general dynamic type system. In SQLite, the datatype of a value is associated with the value itself, not with its container. The dynamic type system of SQLite is backwards compatible with the more common static type systems of other database engines in the sense that SQL statements that work on statically typed databases should work the same way in SQLite. However, the dynamic typing in SQLite allows it to do things which are not possible in traditional rigidly typed databases.</source>
          <target state="translated">SQLite использует более общую систему динамических типов.В SQLite тип данных значения ассоциируется с самим значением,а не с его контейнером.Система динамических типов SQLite обратно совместима с более распространенными системами статических типов других движков баз данных в том смысле,что операторы SQL,работающие со статически типизированными базами данных,должны работать в SQLite аналогичным образом.Однако динамический набор текста в SQLite позволяет делать то,что невозможно в традиционных жестко типизированных БД.</target>
        </trans-unit>
        <trans-unit id="5e1b55e0fd7f9c8ac0ebdd30cf39af20d7f2d3b7" translate="yes" xml:space="preserve">
          <source>SQLite uses a page cache of recently read and written database pages. This page cache is used not just for the main database file but also for transient indices and tables stored in temporary files. If SQLite needs to use a temporary index or table and the &lt;a href=&quot;compile#temp_store&quot;&gt;SQLITE_TEMP_STORE&lt;/a&gt; compile-time parameter and the &lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;temp_store pragma&lt;/a&gt; are set to store temporary tables and index on disk, the information is still initially stored in memory in the page cache. The temporary file is not opened and the information is not truly written to disk until the page cache is full.</source>
          <target state="translated">SQLite использует кеш страницы недавно прочитанных и записанных страниц базы данных. Этот кеш страницы используется не только для основного файла базы данных, но также для временных индексов и таблиц, хранящихся во временных файлах. Если SQLite необходимо использовать временный индекс или таблицу, а параметр &lt;a href=&quot;compile#temp_store&quot;&gt;времени&lt;/a&gt; компиляции &lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;SQLITE_TEMP_STORE и прагма temp_store&lt;/a&gt; установлены для хранения временных таблиц и индекса на диске, информация по-прежнему изначально сохраняется в памяти в кэше страниц. Временный файл не открывается, и информация не записывается на диск до тех пор, пока не заполнится кеш страницы.</target>
        </trans-unit>
        <trans-unit id="b12c1b1b8cc61e32991a698cfd1267c2d0f89edd" translate="yes" xml:space="preserve">
          <source>SQLite uses an efficient &lt;a href=&quot;queryplanner-ng&quot;&gt;query planner algorithm&lt;/a&gt; and so even a large join can be &lt;a href=&quot;c3ref/prepare&quot;&gt;prepared&lt;/a&gt; quickly. Hence, there is no mechanism to raise or lower the limit on the number of tables in a join.</source>
          <target state="translated">SQLite использует эффективный &lt;a href=&quot;queryplanner-ng&quot;&gt;алгоритм планировщика запросов,&lt;/a&gt; поэтому даже большое соединение можно &lt;a href=&quot;c3ref/prepare&quot;&gt;подготовить&lt;/a&gt; быстро. Следовательно, нет механизма для повышения или понижения предела количества таблиц в объединении.</target>
        </trans-unit>
        <trans-unit id="2c5e93f52d20c084674804c93cc58302ab86f180" translate="yes" xml:space="preserve">
          <source>SQLite uses binary arithmetic and in binary, there is no way to write 9.95 in a finite number of bits. The closest to you can get to 9.95 in a 64-bit IEEE float (which is what SQLite uses) is 9.949999999999999289457264239899814128875732421875. So when you type &quot;9.95&quot;, SQLite really understands the number to be the much longer value shown above. And that value rounds down.</source>
          <target state="translated">SQLite использует двоичную арифметику,и в двоичном варианте невозможно записать 9.95 в конечное число битов.Ближайший к 9.95 в 64-битном IEEE float (именно его использует SQLite)-9.94999999999289457264239899814128875732421875.Таким образом,когда вы набираете &quot;9.95&quot;,SQLite действительно понимает,что это число является гораздо более длинным значением,показанным выше.И это значение округляется вниз.</target>
        </trans-unit>
        <trans-unit id="100c32205d77668106f751ddb49a630f21e7c164" translate="yes" xml:space="preserve">
          <source>SQLite uses dynamic memory allocation to obtain memory for storing various objects (ex: &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connections&lt;/a&gt; and &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt;) and to build a memory cache of the database file and to hold the results of queries. Much effort has gone into making the dynamic memory allocation subsystem of SQLite reliable, predictable, robust, secure, and efficient.</source>
          <target state="translated">SQLite использует динамическое распределение памяти для получения памяти для хранения различных объектов (например, &lt;a href=&quot;c3ref/sqlite3&quot;&gt;соединений с базой данных&lt;/a&gt; и &lt;a href=&quot;c3ref/stmt&quot;&gt;подготовленных операторов&lt;/a&gt; ), а также для создания кеш-памяти файла базы данных и для хранения результатов запросов. Много усилий было потрачено на то, чтобы сделать подсистему динамического распределения памяти SQLite надежной, предсказуемой, устойчивой, безопасной и эффективной.</target>
        </trans-unit>
        <trans-unit id="00d6ed4ddbc792f962a9c15a9bfff1ed56a12c03" translate="yes" xml:space="preserve">
          <source>SQLite uses dynamic run-time typing. So just because a column is declared to contain a particular type does not mean that the data stored in that column is of the declared type. SQLite is strongly typed, but the typing is dynamic not static. Type is associated with individual values, not with the containers used to hold those values.</source>
          <target state="translated">SQLite использует динамический набор текста во время выполнения.Поэтому то,что столбец объявлен как содержащий определенный тип,не означает,что данные,хранящиеся в этом столбце,имеют объявленный тип.SQLite сильно типизирует,но типизирование динамическое,а не статическое.Тип ассоциируется с индивидуальными значениями,а не с контейнерами,которые используются для хранения этих значений.</target>
        </trans-unit>
        <trans-unit id="e9c675b439e8b045a5761d6f6f634a6e3c87b0d8" translate="yes" xml:space="preserve">
          <source>SQLite uses file locks on the database file, and on the &lt;a href=&quot;wal&quot;&gt;write-ahead log&lt;/a&gt; or &lt;a href=&quot;wal&quot;&gt;WAL&lt;/a&gt; file, to coordinate access between concurrent processes. Without coordination, two threads or processes might try to make incompatible changes to a database file at the same time, resulting in database corruption.</source>
          <target state="translated">SQLite использует файловые блокировки для файла базы данных, а также для &lt;a href=&quot;wal&quot;&gt;журнала упреждающей записи&lt;/a&gt; или файла &lt;a href=&quot;wal&quot;&gt;WAL&lt;/a&gt; для координации доступа между параллельными процессами. Без координации два потока или процесса могут одновременно попытаться внести несовместимые изменения в файл базы данных, что приведет к повреждению базы данных.</target>
        </trans-unit>
        <trans-unit id="cfc489b7d0364b55c420255bebe8164eaf3143ec" translate="yes" xml:space="preserve">
          <source>SQLite uses filesystem locks to make sure that only one process and database connection is trying to modify the database at a time. The filesystem locking mechanism is implemented in the VFS layer and is different for every operating system. SQLite depends on this implementation being correct. If something goes wrong and two or more processes are able to write the same database file at the same time, severe damage can result.</source>
          <target state="translated">SQLite использует системные блокировки файловой системы,чтобы убедиться,что только один процесс и подключение к базе данных пытается модифицировать базу данных одновременно.Механизм блокировки файловой системы реализован на уровне VFS и различен для каждой операционной системы.SQLite зависит от правильности этой реализации.Если что-то пойдет не так и два или более процесса смогут записать один и тот же файл базы данных одновременно,это может привести к серьезному ущербу.</target>
        </trans-unit>
        <trans-unit id="7c5d3144ca7b57a8fe6bfa7c95d8cd76ffe8cc05" translate="yes" xml:space="preserve">
          <source>SQLite uses one of these integer values as the second argument to calls it makes to the xLock() and xUnlock() methods of an &lt;a href=&quot;#sqlite3_io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; object.</source>
          <target state="translated">SQLite использует одно из этих целочисленных значений в качестве второго аргумента для вызовов, которые он выполняет для методов xLock () и xUnlock () объекта &lt;a href=&quot;#sqlite3_io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06c37dcfbf68e2c7d0288d36eee6b01629eff86a" translate="yes" xml:space="preserve">
          <source>SQLite uses one of these integer values as the second argument to calls it makes to the xLock() and xUnlock() methods of an &lt;a href=&quot;io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; object.</source>
          <target state="translated">SQLite использует одно из этих целочисленных значений в качестве второго аргумента для вызовов, которые он выполняет для методов xLock () и xUnlock () объекта &lt;a href=&quot;io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6149cc0b8adc5f4defc7a195f4b03b55ce3c135" translate="yes" xml:space="preserve">
          <source>SQLite uses pthreads for its mutex implementation on Unix and SQLite requires a recursive mutex. Most modern pthread implementations support recursive mutexes, but not all do. For systems that do not support recursive mutexes, it is recommended that applications operate in single-threaded mode only. If this is not possible, SQLite provides an alternative recursive mutex implementation built on top of the standard &quot;fast&quot; mutexes of pthreads. This alternative implementation should work correctly as long as pthread_equal() is atomic and the processor has a coherent data cache. The alternative recursive mutex implementation is enabled by the following compiler command-line switch:</source>
          <target state="translated">SQLite использует pthreads для своей реализации мьютекса на Unix,а SQLite требует рекурсивного мьютекса.Большинство современных реализаций pthread поддерживают рекурсивные мьютексы,но не все.Для систем,которые не поддерживают рекурсивные мьютексы,рекомендуется,чтобы приложения работали только в однопоточном режиме.Если это невозможно,SQLite предоставляет альтернативную рекурсивную реализацию мьютекса,построенную поверх стандартных &quot;быстрых&quot; мьютексов pthreads.Эта альтернативная реализация должна корректно работать до тех пор,пока pthread_equal()является атомарной и процессор имеет когерентный кэш данных.Альтернативная рекурсивная реализация мьютекса включается следующим переключателем командной строки компилятора:</target>
        </trans-unit>
        <trans-unit id="b9e2e6b108a44c0d3f75ca74e3d41c51203f95b5" translate="yes" xml:space="preserve">
          <source>SQLite uses reader/writer locks to control access to the database. (Under Win95/98/ME which lacks support for reader/writer locks, a probabilistic simulation is used instead.) But use caution: this locking mechanism might not work correctly if the database file is kept on an NFS filesystem. This is because fcntl() file locking is broken on many NFS implementations. You should avoid putting SQLite database files on NFS if multiple processes might try to access the file at the same time. On Windows, Microsoft's documentation says that locking may not work under FAT filesystems if you are not running the Share.exe daemon. People who have a lot of experience with Windows tell me that file locking of network files is very buggy and is not dependable. If what they say is true, sharing an SQLite database between two or more Windows machines might cause unexpected problems.</source>
          <target state="translated">SQLite использует блокировки чтения/записи для контроля доступа к базе данных.(В Win95/98/ME,где отсутствует поддержка блокировок читателя/записывающего,вместо этого используется вероятностная симуляция).Но будьте осторожны:этот механизм блокировки может работать некорректно,если файл базы данных хранится на файловой системе NFS.Это связано с тем,что во многих реализациях NFS блокировка файлов fcntl()нарушена.Следует избегать размещения файлов базы данных SQLite на NFS,если несколько процессов могут попытаться получить доступ к файлу одновременно.В документации Microsoft сказано,что под файловой системой FAT блокировка может не работать,если вы не запустили демон Share.exe.Люди,имеющие большой опыт работы с Windows,говорят мне,что блокировка файлов в сети очень проблематична и ненадежна.Если то,что они говорят,правда,совместное использование базы данных SQLite между двумя или более машинами Windows может вызвать неожиданные проблемы.</target>
        </trans-unit>
        <trans-unit id="88bb033eaf6e37670d2db7d84f333ca9cade029c" translate="yes" xml:space="preserve">
          <source>SQLite uses the &quot;&lt;code&gt;file:&lt;/code&gt;&quot; URI syntax to identify database files. SQLite strives to interpret file: URIs in exactly the same way as popular web-browsers such as &lt;a href=&quot;http://www.mozilla.com/en-US/firefox/new/&quot;&gt;Firefox&lt;/a&gt;, &lt;a href=&quot;http://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt;, &lt;a href=&quot;http://www.apple.com/safari/&quot;&gt;Safari&lt;/a&gt;, &lt;a href=&quot;http://windows.microsoft.com/en-US/internet-explorer/products/ie/home&quot;&gt;Internet Explorer&lt;/a&gt;, and &lt;a href=&quot;http://www.opera.com/&quot;&gt;Opera&lt;/a&gt;, and command-line programs such as &lt;a href=&quot;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/start.mspx&quot;&gt;Windows &quot;start&quot;&lt;/a&gt; and the Mac OS-X &lt;a href=&quot;http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/open.1.html&quot;&gt;&quot;open&quot;&lt;/a&gt; command. A succinct summary of the URI parsing rules follows:</source>
          <target state="translated">SQLite использует синтаксис URI &quot; &lt;code&gt;file:&lt;/code&gt; &quot; для идентификации файлов базы данных. SQLite пытается интерпретировать URI файла точно так же, как популярные веб-браузеры, такие как &lt;a href=&quot;http://www.mozilla.com/en-US/firefox/new/&quot;&gt;Firefox&lt;/a&gt; , &lt;a href=&quot;http://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt; , &lt;a href=&quot;http://www.apple.com/safari/&quot;&gt;Safari&lt;/a&gt; , &lt;a href=&quot;http://windows.microsoft.com/en-US/internet-explorer/products/ie/home&quot;&gt;Internet Explorer&lt;/a&gt; и &lt;a href=&quot;http://www.opera.com/&quot;&gt;Opera&lt;/a&gt; , и программы командной строки, такие как &lt;a href=&quot;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/start.mspx&quot;&gt;Windows &quot;start&quot;&lt;/a&gt; и Mac OS-X &lt;a href=&quot;http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/open.1.html&quot;&gt;&quot;open &quot;&lt;/a&gt; команда. Ниже приводится краткое изложение правил синтаксического анализа URI:</target>
        </trans-unit>
        <trans-unit id="69d5ac42573f581392e9517041d99daa76b38636" translate="yes" xml:space="preserve">
          <source>SQLite uses the assumptions in this section to try to speed up reading from and writing to the database file.</source>
          <target state="translated">SQLite использует допущения,приведенные в этом разделе,чтобы попытаться ускорить чтение и запись в файл базы данных.</target>
        </trans-unit>
        <trans-unit id="d55089274731f4bfb9ebd084387b8f1d1faf31f7" translate="yes" xml:space="preserve">
          <source>SQLite uses the following terminology:</source>
          <target state="translated">SQLite использует следующую терминологию:</target>
        </trans-unit>
        <trans-unit id="0ee4041bd18f2412c9c45cca33a698969a142e88" translate="yes" xml:space="preserve">
          <source>SQLite uses the fsync() system call on Unix and the FlushFileBuffers() system call on w32 in order to sync the file system buffers onto disk oxide as shown in &lt;a href=&quot;#section_3_7&quot;&gt;step 3.7&lt;/a&gt; and &lt;a href=&quot;#section_3_10&quot;&gt;step 3.10&lt;/a&gt;. Unfortunately, we have received reports that neither of these interfaces works as advertised on many systems. We hear that FlushFileBuffers() can be completely disabled using registry settings on some Windows versions. Some historical versions of Linux contain versions of fsync() which are no-ops on some filesystems, we are told. Even on systems where FlushFileBuffers() and fsync() are said to be working, often the IDE disk control lies and says that data has reached oxide while it is still held only in the volatile control cache.</source>
          <target state="translated">SQLite использует системный вызов fsync () в Unix и системный вызов FlushFileBuffers () в w32 для синхронизации буферов файловой системы с оксидом диска, как показано в &lt;a href=&quot;#section_3_7&quot;&gt;шагах 3.7&lt;/a&gt; и &lt;a href=&quot;#section_3_10&quot;&gt;3.10&lt;/a&gt; . К сожалению, мы получили сообщения о том, что ни один из этих интерфейсов не работает так, как заявлено во многих системах. Мы слышали, что FlushFileBuffers () можно полностью отключить с помощью настроек реестра в некоторых версиях Windows. Некоторые исторические версии Linux содержат версии fsync (), которые, как нам говорят, не работают в некоторых файловых системах. Даже в системах, где, как утверждается, работают FlushFileBuffers () и fsync (), часто управление диском IDE лжет и сообщает, что данные достигли оксида, в то время как они все еще хранятся только в энергозависимом кэше управления.</target>
        </trans-unit>
        <trans-unit id="6362e589dd1fe9de49e118297201339e71a38ea0" translate="yes" xml:space="preserve">
          <source>SQLite uses the fsync() system call to flush data to the disk under Unix and it uses the FlushFileBuffers() to do the same under Windows. Once again, SQLite assumes that these operating system services function as advertised. But it has been reported that fsync() and FlushFileBuffers() do not always work correctly, especially with inexpensive IDE disks. Apparently some manufactures of IDE disks have controller chips that report that data has reached the disk surface when in fact the data is still in volatile cache memory in the disk drive electronics. There are also reports that Windows sometimes chooses to ignore FlushFileBuffers() for unspecified reasons. The author cannot verify any of these reports. But if they are true, it means that database corruption is a possibility following an unexpected power loss. These are hardware and/or operating system bugs that SQLite is unable to defend against.</source>
          <target state="translated">SQLite использует системный вызов fsync()для прошивки данных на диск под Unix и использует FlushFileBuffers()для того же самого под Windows.И снова SQLite предполагает,что эти сервисы операционной системы функционируют как рекламируемые.Но сообщалось,что fsync()и FlushFileBuffers()не всегда работают корректно,особенно с недорогими IDE-дисками.Видимо,у некоторых производителей IDE-дисков есть чипы контроллеров,которые сообщают,что данные достигли поверхности диска,когда на самом деле данные все еще находятся в энергонезависимой кэш-памяти в электронике дискового накопителя.Также есть сообщения о том,что Windows иногда предпочитает игнорировать FlushFileBuffers()по неуказанным причинам.Автор не может проверить ни одно из этих сообщений.Но если они верны,то это означает,что повреждение базы данных-это возможность после неожиданной потери питания.Это аппаратные ошибки и/или ошибки операционной системы,от которых SQLite не в состоянии защититься.</target>
        </trans-unit>
        <trans-unit id="32280f4c0ca13b9e9b050e36d2463beacf57a438" translate="yes" xml:space="preserve">
          <source>SQLite uses the path component of the URI as the name of the disk file which contains the database. If the path begins with a '/' character, then it is interpreted as an absolute path. If the path does not begin with a '/' (meaning that the authority section is omitted from the URI) then the path is interpreted as a relative path. On windows, the first component of an absolute path is a drive specification (e.g. &quot;C:&quot;).</source>
          <target state="translated">SQLite использует компонент пути URI в качестве имени дискового файла,содержащего базу данных.Если путь начинается со знака '/',то он интерпретируется как абсолютный путь.Если путь не начинается со знака '/' (что означает,что в URI опущена секция авторизации),то он интерпретируется как относительный путь.В окнах первым компонентом абсолютного пути является спецификация привода (например,&quot;C:&quot;).</target>
        </trans-unit>
        <trans-unit id="b4d974786d3ead21fc22643249354066187d79d8" translate="yes" xml:space="preserve">
          <source>SQLite uses the sqlite3_value object to represent all values that can be stored in a database table. SQLite uses dynamic typing for the values it stores. Values stored in sqlite3_value objects can be integers, floating point values, strings, BLOBs, or NULL.</source>
          <target state="translated">SQLite использует объект sqlite3_value для представления всех значений,которые могут храниться в таблице базы данных.SQLite использует динамический набор для значений,которые он хранит.Значения,хранящиеся в объектах sqlite3_value,могут быть целыми числами,значениями с плавающей точкой,строками,BLOB или NULL.</target>
        </trans-unit>
        <trans-unit id="3216e45fcb6dfe91aace5bfc00370029ab1bdf71" translate="yes" xml:space="preserve">
          <source>SQLite uses the xBestIndex method of a virtual table module to determine the best way to access the virtual table. The xBestIndex method has a prototype like this:</source>
          <target state="translated">SQLite использует метод xBestIndex виртуального модуля таблицы для определения наилучшего способа доступа к виртуальной таблице.Метод xBestIndex имеет такой прототип:</target>
        </trans-unit>
        <trans-unit id="a0489776d40de65aee092fe1c30e018ce2c473df" translate="yes" xml:space="preserve">
          <source>SQLite uses two defenses against this problem. In the first place, SQLite records the number of pages in the rollback journal in the header of the rollback journal. This number is initially zero. So during an attempt to rollback an incomplete (and possibly corrupt) rollback journal, the process doing the rollback will see that the journal contains zero pages and will thus make no changes to the database. Prior to a commit, the rollback journal is flushed to disk to ensure that all content has been synced to disk and there is no &quot;garbage&quot; left in the file, and only then is the page count in the header changed from zero to true number of pages in the rollback journal. The rollback journal header is always kept in a separate sector from any page data so that it can be overwritten and flushed without risking damage to a data page if a power outage occurs. Notice that the rollback journal is flushed to disk twice: once to write the page content and a second time to write the page count in the header.</source>
          <target state="translated">SQLite использует две защиты от этой проблемы.Во-первых,SQLite записывает количество страниц в журнале отката в заголовке журнала отката.Изначально это число равно нулю.Поэтому при попытке отката неполного (и,возможно,поврежденного)журнала отката,процесс,выполняющий откат,увидит,что журнал содержит нулевые страницы и,таким образом,не будет вносить никаких изменений в базу данных.Перед фиксацией журнал отката промывается на диск,чтобы убедиться,что все содержимое синхронизировано на диск и в файле не осталось &quot;мусора&quot;,и только после этого количество страниц в заголовке изменено с нуля на истинное количество страниц в журнале отката.Заголовок журнала отката всегда хранится в отдельном секторе от данных любой страницы,чтобы его можно было перезаписать и смыть без риска повреждения страницы данных в случае отключения электричества.Обратите внимание,что журнал отката дважды промывается на диск:один раз-для записи содержимого страницы и второй раз-для записи количества страниц в заголовок.</target>
        </trans-unit>
        <trans-unit id="d42ec8c41ede991363e3c5f0bdd1b5f73c156509" translate="yes" xml:space="preserve">
          <source>SQLite version</source>
          <target state="translated">версия SQLite</target>
        </trans-unit>
        <trans-unit id="6c1b4a4dcbf2aebc5bc149eaa5647521eb4221db" translate="yes" xml:space="preserve">
          <source>SQLite version 2.8 allowed multiple simultaneous readers or a single writer but not both. SQLite version 3.0 allows one process to begin writing the database while other processes continue to read. The writer must still obtain an exclusive lock on the database for a brief interval in order to commit its changes, but the exclusive lock is no longer required for the entire write operation. A &lt;a href=&quot;lockingv3&quot;&gt;more detailed report&lt;/a&gt; on the locking behavior of SQLite version 3.0 is available separately.</source>
          <target state="translated">SQLite версии 2.8 допускает одновременное использование нескольких считывателей или одного модуля записи, но не обоих одновременно. SQLite версии 3.0 позволяет одному процессу начать запись в базу данных, в то время как другие процессы продолжают читать. Писатель должен получить монопольную блокировку базы данных на короткий промежуток времени, чтобы зафиксировать свои изменения, но монопольная блокировка больше не требуется для всей операции записи. &lt;a href=&quot;lockingv3&quot;&gt;Более подробный отчет&lt;/a&gt; о стопорного поведении SQLite версии 3.0 поставляется отдельно.</target>
        </trans-unit>
        <trans-unit id="d94b9491c8be74ea2c30ca7aa647aa4aa14bb93b" translate="yes" xml:space="preserve">
          <source>SQLite version 2.8 had the feature that any type of data could be stored in any table column regardless of the declared type of that column. This feature is retained in version 3.0, though in a slightly modified form. Each table column will store any type of data, though columns have an affinity for the format of data defined by their declared datatype. When data is inserted into a column, that column will make an attempt to convert the data format into the column's declared type. All SQL database engines do this. The difference is that SQLite 3.0 will still store the data even if a format conversion is not possible.</source>
          <target state="translated">В SQLite версии 2.8 была реализована возможность хранения данных любого типа в любом столбце таблицы независимо от объявленного типа этого столбца.Эта возможность сохранена в версии 3.0,хотя и в слегка измененном виде.Каждый столбец таблицы будет хранить данные любого типа,хотя столбцы имеют сходство с форматом данных,определенным их объявленным типом.Когда данные вставляются в столбец,в этом столбце будет сделана попытка преобразования формата данных в объявленный тип столбца.Это делают все движки баз данных SQL.Разница заключается в том,что в SQLite 3.0 данные все равно будут храниться,даже если преобразование формата невозможно.</target>
        </trans-unit>
        <trans-unit id="cc60006fcf0499f5d27e14e08e37966af30b84e4" translate="yes" xml:space="preserve">
          <source>SQLite version 2.8 will continue to be supported with bug fixes for the foreseeable future. In order to allow SQLite version 2.8 and SQLite version 3.0 to peacefully coexist, the names of key files and APIs in SQLite version 3.0 have been changed to include the character &quot;3&quot;. For example, the include file used by C programs has been changed from &quot;sqlite.h&quot; to &quot;sqlite3.h&quot;. And the name of the shell program used to interact with databases has been changed from &quot;sqlite.exe&quot; to &quot;sqlite3.exe&quot;. With these changes, it is possible to have both SQLite 2.8 and SQLite 3.0 installed on the same system at the same time. And it is possible for the same C program to link against both SQLite 2.8 and SQLite 3.0 at the same time and to use both libraries at the same time.</source>
          <target state="translated">В обозримом будущем поддержка SQLite версии 2.8 будет продолжена с исправлениями ошибок.Для того чтобы SQLite версии 2.8 и SQLite версии 3.0 могли мирно сосуществовать,имена ключевых файлов и API в SQLite версии 3.0 были изменены на символ &quot;3&quot;.Например,включаемый файл,используемый программами на C,изменен с &quot;sqlite.h&quot; на &quot;sqlite3.h&quot;.А название оболочки программы,используемой для взаимодействия с базами данных,изменено с &quot;sqlite.exe&quot; на &quot;sqlite3.exe&quot;.С этими изменениями можно установить на одну и ту же систему одновременно и SQLite 2.8,и SQLite 3.0.Причем одна и та же программа на C может линковать одновременно и с SQLite 2.8,и с SQLite 3.0 и использовать обе библиотеки одновременно.</target>
        </trans-unit>
        <trans-unit id="9294985ea2869d413fc8305361b7fbc4273dc106" translate="yes" xml:space="preserve">
          <source>SQLite version 2.8 will deal with data in various formats internally, but when writing to the disk or interacting through its API, SQLite 2.8 always converts data into ASCII text. SQLite 3.0, in contrast, exposes its internal data representations to the user and stores binary representations to disk when appropriate. The exposing of non-ASCII representations was added in order to support BLOBs.</source>
          <target state="translated">SQLite версии 2.8 будет работать с данными в различных форматах внутренне,но при записи на диск или при взаимодействии через API,SQLite 2.8 всегда преобразует данные в ASCII текст.SQLite 3.0,напротив,раскрывает свои внутренние представления данных пользователю и хранит двоичные представления на диске,когда это необходимо.Для поддержки BLOB добавлено отображение не-ASCII-представлений.</target>
        </trans-unit>
        <trans-unit id="4aa319379218f233cb1b56ac0f70d481e776d1c7" translate="yes" xml:space="preserve">
          <source>SQLite version 3 has the usual set of SQL comparison operators including &quot;=&quot;, &quot;==&quot;, &quot;&amp;lt;&quot;, &quot;&amp;lt;=&quot;, &quot;&amp;gt;&quot;, &quot;&amp;gt;=&quot;, &quot;!=&quot;, &quot;&quot;, &quot;IN&quot;, &quot;NOT IN&quot;, &quot;BETWEEN&quot;, &quot;IS&quot;, and &quot;IS NOT&quot;, .</source>
          <target state="translated">SQLite версии 3 имеет обычный набор операторов сравнения SQL, включая &quot;=&quot;, &quot;==&quot;, &quot;&amp;lt;&quot;, &quot;&amp;lt;=&quot;, &quot;&amp;gt;&quot;, &quot;&amp;gt; =&quot;, &quot;! =&quot;, &quot;&quot;, &quot;IN&quot; , &quot;НЕ В&quot;, &quot;МЕЖДУ&quot;, &quot;ЕСТЬ&quot; и &quot;НЕТ&quot;,.</target>
        </trans-unit>
        <trans-unit id="a76401a1eda6f0ec422be63e7c58c505ecee397a" translate="yes" xml:space="preserve">
          <source>SQLite version 3 seeks to avoid writer starvation through the use of the PENDING lock. The PENDING lock allows existing readers to continue but prevents new readers from connecting to the database. So when a process wants to write a busy database, it can set a PENDING lock which will prevent new readers from coming in. Assuming existing readers do eventually complete, all SHARED locks will eventually clear and the writer will be given a chance to make its changes.</source>
          <target state="translated">SQLite версии 3 стремится избежать голодания писателя с помощью блокировки PENDING.Блокировка PENDING позволяет существующим считывателям продолжать работу,но не позволяет новым считывателям подключаться к базе данных.Таким образом,когда процесс хочет записать занятую базу данных,он может установить блокировку PENDING,которая будет препятствовать приходу новых читателей.Если предположить,что существующие читатели в конце концов завершат работу,то все блокировки SHARED со временем будут очищены,и писателю будет дан шанс внести свои изменения.</target>
        </trans-unit>
        <trans-unit id="eae91dc769edea8eecdb43451d72cf217325ea89" translate="yes" xml:space="preserve">
          <source>SQLite version 3.0 introduces important changes to the library, including:</source>
          <target state="translated">В SQLite версии 3.0 внесены важные изменения в библиотеку,в том числе:</target>
        </trans-unit>
        <trans-unit id="3f72a15b94cfd255cf997707c03d82c9e9918a44" translate="yes" xml:space="preserve">
          <source>SQLite version 3.0 is a new version of SQLite, derived from the SQLite 2.8.13 code base, but with an incompatible file format and API. SQLite version 3.0 was created to answer demand for the following features:</source>
          <target state="translated">SQLite версии 3.0-это новая версия SQLite,производная от кодовой базы SQLite 2.8.13,но с несовместимым форматом файлов и API.SQLite версии 3.0 был создан в ответ на спрос на следующие возможности:</target>
        </trans-unit>
        <trans-unit id="ccb4f474cdcf4df9f87f4000dec5a3f14ed4609b" translate="yes" xml:space="preserve">
          <source>SQLite version 3.0 is made possible in part by AOL developers supporting and embracing great Open-Source Software.</source>
          <target state="translated">SQLite версии 3.0 частично стал возможен благодаря разработчикам AOL,поддерживающим и использующим отличное Open-Source программное обеспечение.</target>
        </trans-unit>
        <trans-unit id="ef6b4fa665bce97a58d8cad0238042778638e4ea" translate="yes" xml:space="preserve">
          <source>SQLite version 3.22.0 (2018-01-22) contains 5290 assert() macros, 839 testcase() macros, 88 ALWAYS() macros, and 63 NEVER() macros.</source>
          <target state="translated">SQLite версии 3.22.0 (2018-01-22)содержит 5290 макросов assert(),839 макросов testcase(),88 макросов ALWAYS()и 63 макроса NEVER().</target>
        </trans-unit>
        <trans-unit id="c307004a0921076eb49a52bd8a91c6b52b2a1b6b" translate="yes" xml:space="preserve">
          <source>SQLite version 3.3.14 adds the concept of &quot;Exclusive Access Mode&quot;. In exclusive access mode, SQLite retains the exclusive database lock at the conclusion of each transaction. This prevents other processes from accessing the database, but in many deployments only a single process is using a database so this is not a serious problem. The advantage of exclusive access mode is that disk I/O can be reduced in three ways:</source>
          <target state="translated">В SQLite версии 3.3.14 добавлена концепция &quot;Режима эксклюзивного доступа&quot;.В режиме эксклюзивного доступа SQLite сохраняет эксклюзивную блокировку базы данных при заключении каждой транзакции.Это не позволяет другим процессам получить доступ к базе данных,но во многих случаях только один процесс использует базу данных,поэтому это не является серьезной проблемой.Преимущество режима эксклюзивного доступа заключается в том,что дисковый ввод/вывод может быть уменьшен тремя способами:</target>
        </trans-unit>
        <trans-unit id="fbb503554e7c282aedc13f070027736e1a10fc7b" translate="yes" xml:space="preserve">
          <source>SQLite version 3.5.0 (2007-09-04) introduces a new OS interface layer that is incompatible with all prior versions of SQLite. In addition, a few existing interfaces have been generalized to work across all database connections within a process rather than just all connections within a thread. The purpose of this article is to describe the changes to 3.5.0 in detail so that users of prior versions of SQLite can judge what, if any, effort will be required to upgrade to newer versions.</source>
          <target state="translated">SQLite версии 3.5.0 (2007-09-04)представляет новый уровень интерфейса операционной системы,который несовместим со всеми предыдущими версиями SQLite.Кроме того,несколько существующих интерфейсов были обобщены для работы со всеми подключениями к СУБД в рамках процесса,а не только со всеми подключениями в потоке.Цель данной статьи-подробно описать изменения в 3.5.0,чтобы пользователи предыдущих версий SQLite могли судить о том,какие усилия понадобятся для обновления до более новых версий,если таковые потребуются.</target>
        </trans-unit>
        <trans-unit id="70942f1687fac3fdda946d021fc48ca1143963c7" translate="yes" xml:space="preserve">
          <source>SQLite version 3.6.0 (2008-07-16) contains many changes. As is the custom with the SQLite project, most changes are fully backwards compatible. However, a few of the changes in version 3.6.0 are incompatible and might require modifications to application code and/or makefiles. This document is a briefing on the changes in SQLite 3.6.0 with special attention to the incompatible changes.</source>
          <target state="translated">SQLite версии 3.6.0 (2008-07-16)содержит множество изменений.Как и в проекте SQLite,большинство изменений полностью совместимы с предыдущими версиями.Тем не менее,некоторые изменения версии 3.6.0 несовместимы и могут потребовать изменения кода приложения и/или makefile.Данный документ представляет собой брифинг об изменениях в SQLite 3.6.0 с особым вниманием к несовместимым изменениям.</target>
        </trans-unit>
        <trans-unit id="da041872c2ed2b85c83a9be5e4c3422e0d89ff87" translate="yes" xml:space="preserve">
          <source>SQLite version 3.7.0 introduced a number of new enhancements to the SQLite database file format (such as but not limited to &lt;a href=&quot;wal&quot;&gt;WAL&lt;/a&gt;). The 3.7.0 release was a shake-out release for these new features. We expected to find problems and were not disappointed.</source>
          <target state="translated">Версия SQLite 3.7.0 представила ряд новых улучшений в формате файлов базы данных SQLite (таких как, помимо прочего, &lt;a href=&quot;wal&quot;&gt;WAL&lt;/a&gt; ). Релиз 3.7.0 был совершенно неожиданным для этих новых функций. Мы ожидали найти проблемы и не были разочарованы.</target>
        </trans-unit>
        <trans-unit id="31e4e9d6b69cabc107d20e4736663f7980b134d1" translate="yes" xml:space="preserve">
          <source>SQLite version 3.7.16.2 fixes a subtle race condition in the locking logic on Windows systems. When a database file is in need of recovery because the previous process writing to it crashed in the middle of a transaction and two or more processes try to open the that database at the same time, then the race condition might cause one of those processes to get a false indication that the recovery has already completed, allowing that process to continue using the database file without running recovery first. If that process writes to the file, then the file might go corrupt. This race condition had apparently existed in all prior versions of SQLite for Windows going back to 2004. But the race was very tight. Practically speaking, you need a fast multi-core machine in which you launch two processes to run recovery at the same moment on two separate cores. This defect was on Windows systems only and did not affect the posix OS interface.</source>
          <target state="translated">В SQLite версии 3.7.16.2 исправлено тонкое состояние гонки в логике блокировки на Windows системах.Когда файл базы данных нуждается в восстановлении из-за того,что предыдущий процесс,записывавший на него,разбился в середине транзакции,и два или более процессов пытаются открыть эту базу данных одновременно,состояние гонки может привести к тому,что один из этих процессов получит ложное сообщение о том,что восстановление уже завершено,что позволит этому процессу продолжить использование файла базы данных,не запустив восстановление в первую очередь.Если этот процесс запишет файл,то файл может быть поврежден.Это состояние гонки,по-видимому,существовало во всех предыдущих версиях SQLite для Windows,начиная с 2004 года.Но гонка была очень жесткой.Практически говоря,нужна быстрая многоядерная машина,на которой запускаются два процесса,чтобы запустить восстановление в один и тот же момент на двух отдельных ядрах.Этот дефект был только на Windows-системах и не повлиял на интерфейс позиционной операционной системы.</target>
        </trans-unit>
        <trans-unit id="06c5d06f2767343fefb84004cfe2451c3fbeba78" translate="yes" xml:space="preserve">
          <source>SQLite was originally coded in such a way that the answer to all questions in the chart below would be &quot;Yes&quot;. But the experiments run on other SQL engines showed that none of them worked this way. So SQLite was modified to work the same as Oracle, PostgreSQL, and DB2. This involved making NULLs indistinct for the purposes of the SELECT DISTINCT statement and for the UNION operator in a SELECT. NULLs are still distinct in a UNIQUE column. This seems somewhat arbitrary, but the desire to be compatible with other engines outweighed that objection.</source>
          <target state="translated">Изначально SQLite был закодирован таким образом,что ответ на все вопросы на диаграмме ниже был бы &quot;Да&quot;.Но эксперименты,проведенные на других SQL-движках,показали,что ни один из них так не работает.Поэтому SQLite был модифицирован для работы на том же уровне,что и Oracle,PostgreSQL и DB2.Это подразумевало,что NULLs были нечеткими для целей оператора SELECT DISTINCT и для оператора UNION в SELECT.NULLs по-прежнему различаются в колонке UNIQUE.Это представляется несколько произвольным,однако желание быть совместимым с другими двигателями перевешивает это возражение.</target>
        </trans-unit>
        <trans-unit id="cc2cc08c1f222d49bc97f5f39c7b9c91ad3731d6" translate="yes" xml:space="preserve">
          <source>SQLite was originally designed with a policy of avoiding arbitrary limits. Of course, every program that runs on a machine with finite memory and disk space has limits of some kind. But in SQLite, those limits were not well defined. The policy was that if it would fit in memory and you could count it with a 32-bit integer, then it should work.</source>
          <target state="translated">Изначально SQLite разрабатывался с учетом политики избежания произвольных ограничений.Конечно,каждая программа,которая запускается на машине с ограниченной памятью и дисковым пространством,имеет свои ограничения.Но в SQLite эти ограничения были плохо определены.Политика состояла в том,что если она помещается в память и можно считать ее 32-битным целым числом,то она должна работать.</target>
        </trans-unit>
        <trans-unit id="769cb93a3fb24f4ad929e24b9c4fe55eeec4efe2" translate="yes" xml:space="preserve">
          <source>SQLite was tested in the same configuration that it appears on the website. It was compiled with -O6 optimization and with the -DNDEBUG=1 switch which disables the many &quot;assert()&quot; statements in the SQLite code. The -DNDEBUG=1 compiler option roughly doubles the speed of SQLite.</source>
          <target state="translated">SQLite был протестирован в той же конфигурации,что и на сайте.Он был скомпилирован с оптимизацией -O6 и с ключом -DNDEBUG=1,который отключает многие операторы &quot;assert()&quot; в коде SQLite.Опция компилятора -DNDEBUG=1 примерно удваивает скорость SQLite.</target>
        </trans-unit>
        <trans-unit id="864e2447d8a13ac7ee35b071674f4476208c7306" translate="yes" xml:space="preserve">
          <source>SQLite will also add one of the following flags to the xOpen() call, depending on the object being opened:</source>
          <target state="translated">SQLite также добавит один из следующих флагов к вызову xOpen(),в зависимости от открываемого объекта:</target>
        </trans-unit>
        <trans-unit id="131d0be5dd7e4aa0858930ddc9451eb1f3423fe0" translate="yes" xml:space="preserve">
          <source>SQLite will also attempt to use indices to help satisfy GROUP BY clauses and the DISTINCT keyword. If the nested loops of the join can be arranged such that rows that are equivalent for the GROUP BY or for the DISTINCT are consecutive, then the GROUP BY or DISTINCT logic can determine if the current row is part of the same group or if the current row is distinct simply by comparing the current row to the previous row. This can be much faster than the alternative of comparing each row to all prior rows.</source>
          <target state="translated">SQLite также постарается использовать индексы для удовлетворения требований пунктов GROUP BY и ключевого слова DISTINCT.Если вложенные циклы соединения могут быть организованы таким образом,что строки,эквивалентные GROUP BY или DISTINCT,являются последовательными,то логика GROUP BY или DISTINCT может определить,является ли текущая строка частью одной группы,или текущая строка отличается от предыдущей,просто сравнив текущую строку с предыдущей.Это может быть намного быстрее,чем альтернатива сравнения каждого ряда со всеми предыдущими рядами.</target>
        </trans-unit>
        <trans-unit id="03ac5706e55e0f1ceba6bf4ddd17b581fa34f6ca" translate="yes" xml:space="preserve">
          <source>SQLite will always allocate at least mxPathname+1 bytes for the output buffer xFullPathname. The exact size of the output buffer is also passed as a parameter to both methods. If the output buffer is not large enough, &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_CANTOPEN&lt;/a&gt; should be returned. Since this is handled as a fatal error by SQLite, vfs implementations should endeavor to prevent this by setting mxPathname to a sufficiently large value.</source>
          <target state="translated">SQLite всегда будет выделять как минимум mxPathname + 1 байт для выходного буфера xFullPathname. Точный размер выходного буфера также передается в качестве параметра обоим методам. Если выходной буфер недостаточно велик, должен быть возвращен &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_CANTOPEN&lt;/a&gt; . Поскольку SQLite обрабатывает это как фатальную ошибку, реализации vfs должны попытаться предотвратить это, установив для mxPathname достаточно большое значение.</target>
        </trans-unit>
        <trans-unit id="a98d8800d0c61913767afcbc8c0b3400cddf5e5e" translate="yes" xml:space="preserve">
          <source>SQLite will always allocate at least mxPathname+1 bytes for the output buffer xFullPathname. The exact size of the output buffer is also passed as a parameter to both methods. If the output buffer is not large enough, &lt;a href=&quot;../rescode#cantopen&quot;&gt;SQLITE_CANTOPEN&lt;/a&gt; should be returned. Since this is handled as a fatal error by SQLite, vfs implementations should endeavor to prevent this by setting mxPathname to a sufficiently large value.</source>
          <target state="translated">SQLite всегда будет выделять как минимум mxPathname + 1 байт для выходного буфера xFullPathname. Точный размер выходного буфера также передается в качестве параметра обоим методам. Если выходной буфер недостаточно велик, должен быть возвращен &lt;a href=&quot;../rescode#cantopen&quot;&gt;SQLITE_CANTOPEN&lt;/a&gt; . Поскольку SQLite обрабатывает это как фатальную ошибку, реализации vfs должны попытаться предотвратить это, установив для mxPathname достаточно большое значение.</target>
        </trans-unit>
        <trans-unit id="1e33e35f6dabafac608ead478729b44348c338ef" translate="yes" xml:space="preserve">
          <source>SQLite will invoke the xMutexEnd() method when &lt;a href=&quot;#sqlite3_initialize&quot;&gt;sqlite3_shutdown()&lt;/a&gt; is called, but only if the prior call to xMutexInit returned SQLITE_OK. If xMutexInit fails in any way, it is expected to clean up after itself prior to returning.</source>
          <target state="translated">SQLite вызовет метод xMutexEnd () при вызове &lt;a href=&quot;#sqlite3_initialize&quot;&gt;sqlite3_shutdown ()&lt;/a&gt; , но только если предыдущий вызов xMutexInit вернул SQLITE_OK. Если xMutexInit каким-либо образом выйдет из строя, ожидается, что он очистится после себя перед возвратом.</target>
        </trans-unit>
        <trans-unit id="3e7a5d17c455846b0ec61394b33dc86a1c9321c1" translate="yes" xml:space="preserve">
          <source>SQLite will invoke the xMutexEnd() method when &lt;a href=&quot;initialize&quot;&gt;sqlite3_shutdown()&lt;/a&gt; is called, but only if the prior call to xMutexInit returned SQLITE_OK. If xMutexInit fails in any way, it is expected to clean up after itself prior to returning.</source>
          <target state="translated">SQLite вызовет метод xMutexEnd () при вызове &lt;a href=&quot;initialize&quot;&gt;sqlite3_shutdown ()&lt;/a&gt; , но только если предыдущий вызов xMutexInit вернул SQLITE_OK. Если xMutexInit каким-либо образом выйдет из строя, ожидается, что он очистится после себя перед возвратом.</target>
        </trans-unit>
        <trans-unit id="2f8ba8da1a2e441af20b1b20244a8ec294fc1a9c" translate="yes" xml:space="preserve">
          <source>SQLite will make this determination, but only if it has been compiled with &lt;a href=&quot;compile#enable_stat3&quot;&gt;SQLITE_ENABLE_STAT3&lt;/a&gt; or &lt;a href=&quot;compile#enable_stat4&quot;&gt;SQLITE_ENABLE_STAT4&lt;/a&gt;. The &lt;a href=&quot;compile#enable_stat3&quot;&gt;SQLITE_ENABLE_STAT3&lt;/a&gt; and &lt;a href=&quot;compile#enable_stat4&quot;&gt;SQLITE_ENABLE_STAT4&lt;/a&gt; options causes the &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; command to collect a histogram of column content in the &lt;a href=&quot;fileformat2#stat3tab&quot;&gt;sqlite_stat3&lt;/a&gt; or &lt;a href=&quot;fileformat2#stat4tab&quot;&gt;sqlite_stat4&lt;/a&gt; tables and to use this histogram to make a better guess at the best query to use for range constraints such as the above. The main difference between STAT3 and STAT4 is that STAT3 records histogram data for only the left-most column of an index whereas STAT4 records histogram data for all columns of an index. For single-column indexes, STAT3 and STAT4 work the same.</source>
          <target state="translated">SQLite сделает это определение, но только если он был скомпилирован с &lt;a href=&quot;compile#enable_stat3&quot;&gt;SQLITE_ENABLE_STAT3&lt;/a&gt; или &lt;a href=&quot;compile#enable_stat4&quot;&gt;SQLITE_ENABLE_STAT4&lt;/a&gt; . Параметры &lt;a href=&quot;compile#enable_stat3&quot;&gt;SQLITE_ENABLE_STAT3&lt;/a&gt; и &lt;a href=&quot;compile#enable_stat4&quot;&gt;SQLITE_ENABLE_STAT4&lt;/a&gt; заставляют команду &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; собирать гистограмму содержимого столбца в &lt;a href=&quot;fileformat2#stat3tab&quot;&gt;таблицах sqlite_stat3&lt;/a&gt; или &lt;a href=&quot;fileformat2#stat4tab&quot;&gt;sqlite_stat4&lt;/a&gt; и использовать эту гистограмму, чтобы лучше угадать лучший запрос для использования с ограничениями диапазона, такими как вышеупомянутые. Основное различие между STAT3 и STAT4 заключается в том, что STAT3 записывает данные гистограммы только для самого левого столбца индекса, тогда как STAT4 записывает данные гистограммы для всех столбцов индекса. Для индексов с одним столбцом STAT3 и STAT4 работают одинаково.</target>
        </trans-unit>
        <trans-unit id="0feeafe3441c848d4df17e7ab2118b3ce654ef9a" translate="yes" xml:space="preserve">
          <source>SQLite will never invoke xInit() more than once without an intervening call to xShutdown().</source>
          <target state="translated">SQLite никогда не будет вызывать xInit()более одного раза без промежуточного вызова xShutdown().</target>
        </trans-unit>
        <trans-unit id="8141933bded4b0433c5458cd8dc4b6c9aa50dccc" translate="yes" xml:space="preserve">
          <source>SQLite will normally invoke xFetch() with a createFlag of 0 or 1. SQLite will only use a createFlag of 2 after a prior call with a createFlag of 1 failed. In between the to xFetch() calls, SQLite may attempt to unpin one or more cache pages by spilling the content of pinned pages to disk and synching the operating system disk cache.</source>
          <target state="translated">SQLite обычно вызывает xFetch()с параметром createFlag 0 или 1.SQLite будет использовать createFlag of 2 только после предыдущего вызова с ошибкой createFlag of 1.В промежутке между вызовами xFetch()SQLite может попытаться распечатать одну или несколько страниц в кэше,пролив содержимое распечатанных страниц на диск и синхронизировав кэш диска операционной системы.</target>
        </trans-unit>
        <trans-unit id="8a0c63958ff91d6ac8d167ebbeb5d529f639eed1" translate="yes" xml:space="preserve">
          <source>SQLite will normally invoke xFetch() with a createFlag of 0 or 1. SQLite will only use a createFlag of 2 after a prior call with a createFlag of 1 failed. In between the xFetch() calls, SQLite may attempt to unpin one or more cache pages by spilling the content of pinned pages to disk and synching the operating system disk cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26bbe6f761c35b13c9b3c740596c8f4fafbb74f1" translate="yes" xml:space="preserve">
          <source>SQLite will normally work fine as the database backend to a website. But if the website is write-intensive or is so busy that it requires multiple servers, then consider using an enterprise-class client/server database engine instead of SQLite.</source>
          <target state="translated">Обычно SQLite прекрасно работает в качестве бэкэнда базы данных для веб-сайта.Но если сайт является ресурсоемким или настолько занят,что ему требуется несколько серверов,то подумайте об использовании движка базы данных корпоративного класса клиент/сервер вместо SQLite.</target>
        </trans-unit>
        <trans-unit id="11d8b5641b8ccc13250b43f6ec693456aaae006d" translate="yes" xml:space="preserve">
          <source>SQLite will still omit the sorting step. But in order for output to appear in the correct order, SQLite will do the table scan starting at the end and working toward the beginning, rather than starting at the beginning and working toward the end as shown in &lt;a href=&quot;#fig17&quot;&gt;figure 17&lt;/a&gt;.</source>
          <target state="translated">SQLite по-прежнему будет опускать этап сортировки. Но для того, чтобы вывод отображался в правильном порядке, SQLite будет сканировать таблицу, начиная с конца и двигаясь к началу, а не начиная с начала и продвигаясь к концу, как показано на &lt;a href=&quot;#fig17&quot;&gt;рисунке 17&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="db0bee01e01c7f06f53ced4aa077d1b69e3e443d" translate="yes" xml:space="preserve">
          <source>SQLite works best if you group multiple operations together into a single transaction.</source>
          <target state="translated">SQLite лучше всего работает,если сгруппировать несколько операций в одну транзакцию.</target>
        </trans-unit>
        <trans-unit id="5a4570a64a559f2380207d7ac2eae2dd4a188a0c" translate="yes" xml:space="preserve">
          <source>SQLite works by compiling SQL text into &lt;a href=&quot;opcode&quot;&gt;bytecode&lt;/a&gt;, then running that bytecode using a virtual machine.</source>
          <target state="translated">SQLite работает путем компиляции текста SQL в &lt;a href=&quot;opcode&quot;&gt;байт-код&lt;/a&gt; , а затем запуска этого байт-кода с помощью виртуальной машины.</target>
        </trans-unit>
        <trans-unit id="1c47334be07eef6e2c6868c4937b4803add8d7d3" translate="yes" xml:space="preserve">
          <source>SQLite works by translating SQL statements into bytecode and then running that bytecode in a virtual machine. This document describes how how the bytecode engine works.</source>
          <target state="translated">SQLite работает путем преобразования SQL выражений в байткод,а затем запускает этот байткод на виртуальной машине.Этот документ описывает,как работает механизм байткода.</target>
        </trans-unit>
        <trans-unit id="1ebaf35d34ab3b907a64e57112416a9de1a568a2" translate="yes" xml:space="preserve">
          <source>SQLite works by translating each SQL statement into bytecode and then running that bytecode. A &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; in SQLite is mostly just the bytecode needed to implement the corresponding SQL. The &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; interface is a compiler that translates SQL into bytecode. The &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; interface is the virtual machine that runs the bytecode contained within the &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt;.</source>
          <target state="translated">SQLite работает, переводя каждый оператор SQL в байт-код, а затем запускает этот байт-код. &lt;a href=&quot;c3ref/stmt&quot;&gt;Подготовленное заявление&lt;/a&gt; в SQLite в основном только байт - код , необходимые для реализации соответствующего SQL. Интерфейс &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2 ()&lt;/a&gt; - это компилятор, который переводит SQL в байт-код. Интерфейс &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step ()&lt;/a&gt; - это виртуальная машина, которая запускает байт-код, содержащийся в &lt;a href=&quot;c3ref/stmt&quot;&gt;подготовленном операторе&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="535be0580b8710df785d98333c6a0024a79e6b52" translate="yes" xml:space="preserve">
          <source>SQLite works great as the database engine for most low to medium traffic websites (which is to say, most websites). The amount of web traffic that SQLite can handle depends on how heavily the website uses its database. Generally speaking, any site that gets fewer than 100K hits/day should work fine with SQLite. The 100K hits/day figure is a conservative estimate, not a hard upper bound. SQLite has been demonstrated to work with 10 times that amount of traffic.</source>
          <target state="translated">SQLite отлично работает как движок базы данных для большинства сайтов с низким и средним трафиком (то есть для большинства сайтов).Объем веб-трафика,с которым SQLite может справиться,зависит от того,насколько сильно сайт использует свою базу данных.Вообще говоря,любой сайт,который получает менее 100K посещений в день,должен прекрасно работать с SQLite.Цифра 100K хитов в день является консервативной оценкой,а не жесткой верхней границей.SQLite показал,что работает в 10 раз больше трафика.</target>
        </trans-unit>
        <trans-unit id="878697a779b4f555e31be3e87a76fb2ec64adcb9" translate="yes" xml:space="preserve">
          <source>SQLite&amp;#x27;s Built-in printf()</source>
          <target state="translated">Встроенная функция printf () SQLite</target>
        </trans-unit>
        <trans-unit id="d809358342217ac1c9798a4536e992e30b5c1bbd" translate="yes" xml:space="preserve">
          <source>SQLite's Built-in printf()</source>
          <target state="translated">Встроенная функция SQLite Printf()</target>
        </trans-unit>
        <trans-unit id="77bf8cb88e1c9ff7655bff7a5cbb97288c41b450" translate="yes" xml:space="preserve">
          <source>SQLite, in contrast, stores all content in a &lt;a href=&quot;fileformat2&quot;&gt;single file on disk&lt;/a&gt;. That single file is something you can point to and say &quot;this is the database&quot;. It behaves as an object. An SQLite database file can be copied, renamed, sent as an email attachment, passed as the argument a POST HTTP request, or otherwise treated as other data object such as an image, document, or media file.</source>
          <target state="translated">SQLite, напротив, хранит все содержимое в &lt;a href=&quot;fileformat2&quot;&gt;одном файле на диске&lt;/a&gt; . Вы можете указать на этот единственный файл и сказать &amp;laquo;это база данных&amp;raquo;. Он ведет себя как объект. Файл базы данных SQLite можно скопировать, переименовать, отправить как вложение электронной почты, передать в качестве аргумента HTTP-запрос POST или иным образом обработать как другой объект данных, такой как изображение, документ или медиафайл.</target>
        </trans-unit>
        <trans-unit id="1d5e7b501f4c23aeddb2e1d173f4fc5a56622fde" translate="yes" xml:space="preserve">
          <source>SQLite, in contrast, use only the amount of disk space actually needed to store the information in a row. If you store a single character in a VARCHAR(100) column, then only a single byte of disk space is consumed. (Actually two bytes - there is some overhead at the beginning of each column to record its datatype and length.)</source>
          <target state="translated">SQLite,напротив,использует только тот объем дискового пространства,который действительно необходим для хранения информации в строке.Если вы храните один символ в столбце VARCHAR(100),то потребляется только один байт дискового пространства.(На самом деле два байта-в начале каждого столбца есть некоторые накладные расходы для записи его типа и длины).</target>
        </trans-unit>
        <trans-unit id="90a2c30d411105b1866a2fb7534e120d54c087c8" translate="yes" xml:space="preserve">
          <source>SQLite, like all SQL database engines, makes extensive use of malloc() (See the separate report on &lt;a href=&quot;malloc&quot;&gt;dynamic memory allocation in SQLite&lt;/a&gt; for additional detail.) On servers and workstations, malloc() never fails in practice and so correct handling of out-of-memory (OOM) errors is not particularly important. But on embedded devices, OOM errors are frighteningly common and since SQLite is frequently used on embedded devices, it is important that SQLite be able to gracefully handle OOM errors.</source>
          <target state="translated">SQLite, как и все механизмы баз данных SQL, широко использует malloc () ( дополнительные подробности см. В отдельном отчете о &lt;a href=&quot;malloc&quot;&gt;динамическом распределении памяти в SQLite&lt;/a&gt; ). На серверах и рабочих станциях malloc () никогда не дает сбоев на практике, что позволяет правильно обрабатывать исходящие данные. ошибки памяти (OOM) не особенно важны. Но на встроенных устройствах ошибки OOM пугающе распространены, и, поскольку SQLite часто используется на встроенных устройствах, важно, чтобы SQLite мог корректно обрабатывать ошибки OOM.</target>
        </trans-unit>
        <trans-unit id="b8aba37dd603a24e82fd4f1820189539d3d0a566" translate="yes" xml:space="preserve">
          <source>SQLite: Single File Database</source>
          <target state="translated">SQLite:однофайловая база данных</target>
        </trans-unit>
        <trans-unit id="8317c0736d9e6aaddc008372c034f2f63ca423a2" translate="yes" xml:space="preserve">
          <source>Safe languages are often touted for helping to prevent security vulnerabilities. True enough, but SQLite is not a particularly security-sensitive library. If an application is running untrusted and unverified SQL, then it already has much bigger security issues (SQL injection) that no &quot;safe&quot; language will fix.</source>
          <target state="translated">Безопасные языки часто используются для предотвращения уязвимостей безопасности.Это верно,но SQLite не является особенно чувствительной к безопасности библиотекой.Если приложение работает с недоверенным и непроверенным SQL,то у него уже есть гораздо более серьезные проблемы с безопасностью (SQL-инъекция),которые ни один &quot;безопасный&quot; язык не исправит.</target>
        </trans-unit>
        <trans-unit id="371ba39228ab4a1c3c189b797c7120e98ace4662" translate="yes" xml:space="preserve">
          <source>Safe languages insert additional machine branches to do things like verify that array accesses are in-bounds. In correct code, those branches are never taken. That means that the machine code cannot be 100% branch tested, which is an important component of SQLite's quality strategy.</source>
          <target state="translated">Безопасные языки вставляют дополнительные ветки машины для выполнения таких вещей,как проверка доступа к массивам.В корректном коде эти ветки никогда не берутся.Это означает,что машинный код не может быть проверен на 100% ветками,что является важной составляющей качественной стратегии SQLite.</target>
        </trans-unit>
        <trans-unit id="fcacd9319f45f058826102f8fd4d08b85a39ed32" translate="yes" xml:space="preserve">
          <source>Safe languages usually want to abort if they encounter an out-of-memory (OOM) situation. SQLite is designed to recover gracefully from an OOM. It is unclear how this could be accomplished in the current crop of safe languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6da187258d5af2ebae1cdb3cc862f47c52557f" translate="yes" xml:space="preserve">
          <source>Safe languages usually want to abort if they encounter an out-of-memory (OOM) situation. SQLite is designed to recovery gracefully from an OOM. It is unclear how this could be accomplished in the current crop of safe languages.</source>
          <target state="translated">Безопасные языки обычно хотят прервать работу,если они сталкиваются с ситуацией отсутствия памяти (OOM).SQLite разработан для грациозного восстановления из OOM.Неясно,как это может быть достигнуто в текущем урожае безопасных языков.</target>
        </trans-unit>
        <trans-unit id="cb8901e65be4e894ae11ab1d95f963f276b64fd4" translate="yes" xml:space="preserve">
          <source>Safe programming languages solve the easy problems: memory leaks, use-after-free errors, array overruns, etc. Safe languages provide no help beyond ordinary C code in solving the rather more difficult problem of computing a correct answer to an SQL statement.</source>
          <target state="translated">Безопасные языки программирования решают простые проблемы:утечки памяти,ошибки,связанные с использованием,переполнение массивов и т.д.Безопасные языки не помогают,кроме обычного кода на языке Си,решить достаточно сложную проблему вычисления правильного ответа на SQL-запрос.</target>
        </trans-unit>
        <trans-unit id="4c0b98b770b73c58eadb8af8b218e45dc7ebebbf" translate="yes" xml:space="preserve">
          <source>Safety-critical applications will usually want to modify the default lookaside memory configuration so that when the initial lookaside memory buffer is allocated during &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; the resulting memory allocation is not so large as to force the &lt;b&gt;n&lt;/b&gt; parameter to be too large. In order to keep &lt;b&gt;n&lt;/b&gt; under control, it is best to try to keep the largest memory allocation below 2 or 4 kilobytes. Hence, a reasonable default setup for the lookaside memory allocator might any one of the following:</source>
          <target state="translated">Приложения, критичные к безопасности, обычно хотят изменить конфигурацию резервной памяти по умолчанию, чтобы при выделении начального резервного буфера памяти во время &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open ()&lt;/a&gt; результирующее выделение памяти не было настолько большим, чтобы значение параметра &lt;b&gt;n&lt;/b&gt; было слишком большим. Чтобы держать &lt;b&gt;n&lt;/b&gt; под контролем, лучше всего попытаться удержать наибольшее выделение памяти ниже 2 или 4 килобайт. Следовательно, разумная настройка по умолчанию для дополнительного распределителя памяти может быть любой из следующих:</target>
        </trans-unit>
        <trans-unit id="eb272988295a04bfacb652f9f425c9751c1efcff" translate="yes" xml:space="preserve">
          <source>Salt-1 copied from the WAL header</source>
          <target state="translated">Соль-1 скопирована с заголовка Стены.</target>
        </trans-unit>
        <trans-unit id="8f07478edf0a13be2b8353393ce58be98c5cb042" translate="yes" xml:space="preserve">
          <source>Salt-1: random integer incremented with each checkpoint</source>
          <target state="translated">Соль-1:случайное целое число,увеличенное с каждой контрольно-пропускной точкой.</target>
        </trans-unit>
        <trans-unit id="fd8becc82bf3034e486b52e348505de06703eadf" translate="yes" xml:space="preserve">
          <source>Salt-2 copied from the WAL header</source>
          <target state="translated">Соль-2 скопирована с заголовка Стены.</target>
        </trans-unit>
        <trans-unit id="2251457c30eb39ac4f98ca1b3b449998bdfb08bd" translate="yes" xml:space="preserve">
          <source>Salt-2: a different random number for each checkpoint</source>
          <target state="translated">Соль-2:разное случайное число для каждого контрольно-пропускного пункта.</target>
        </trans-unit>
        <trans-unit id="2802d3bf84d06bd601abc4160930ee13b4ba8886" translate="yes" xml:space="preserve">
          <source>Same as INTEGER-&amp;gt;TEXT</source>
          <target state="translated">То же, что и INTEGER-&amp;gt; TEXT</target>
        </trans-unit>
        <trans-unit id="64fe7599a1466f63ea9b7dc136b08e0468a7bcfe" translate="yes" xml:space="preserve">
          <source>Save the pointer passed as the second argument as the extension function's &quot;auxiliary data&quot;. The pointer may then be retrieved by the current or any future invocation of the same fts5 extension function made as part of the same MATCH query using the xGetAuxdata() API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e164ee3e19bc05538690fe1a5205fe5b7956a433" translate="yes" xml:space="preserve">
          <source>Save the pointer passed as the second argument as the extension functions &quot;auxiliary data&quot;. The pointer may then be retrieved by the current or any future invocation of the same fts5 extension function made as part of the same MATCH query using the xGetAuxdata() API.</source>
          <target state="translated">В качестве второго аргумента сохранить указатель,переданный в качестве второго аргумента в функциях расширения &quot;вспомогательные данные&quot;.Затем указатель может быть получен текущим или любым будущим вызовом той же самой функции расширения fts5,сделанным в рамках того же MATCH-запроса с использованием API xGetAuxdata().</target>
        </trans-unit>
        <trans-unit id="c739de5dc59a519ecc88e91c12cee776ddb9f8ec" translate="yes" xml:space="preserve">
          <source>Savepoint</source>
          <target state="translated">Savepoint</target>
        </trans-unit>
        <trans-unit id="e74ed8e87da0851118fc159806fbe103dac70bbe" translate="yes" xml:space="preserve">
          <source>Savepoints</source>
          <target state="translated">Savepoints</target>
        </trans-unit>
        <trans-unit id="4bcd8d5b6d914b78fd787d6f4862352598ee3d05" translate="yes" xml:space="preserve">
          <source>Scalar SQL functions are implemented by a single callback in the &lt;b&gt;xFunc&lt;/b&gt; parameter to sqlite3_create_function(). The following code demonstrations the implementation of a &quot;noop(X)&quot; scalar SQL function that merely returns its argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae2c6197cf9bbcd1ad8c12e21c2553a379969bd" translate="yes" xml:space="preserve">
          <source>Scan all rows of realtab and for each row, find rows in tablevaluedfunc where param1 is equal to realtab.x</source>
          <target state="translated">Просканируйте все строки realtab и для каждой строки найдите строки в tablevaluedfunc,где параметр 1 равен realtab.x.</target>
        </trans-unit>
        <trans-unit id="81b10ed131cb8283236308eac51fe1690aaceea4" translate="yes" xml:space="preserve">
          <source>Scan all rows of tablevalued func and for each row find rows in realtab where x is equal to tablevaluedfunc.param1.</source>
          <target state="translated">Просканируйте все строки с функцией tablevalued и для каждой строки найдите строки в реалтабе,где x равен tablevaluedfunc.param1.</target>
        </trans-unit>
        <trans-unit id="54a7124a44e1230cb0e0f19e93fb0a0d583d3126" translate="yes" xml:space="preserve">
          <source>Schema S of &lt;a href=&quot;#sqlite3&quot;&gt;database connection&lt;/a&gt; D must be a &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt; database.</source>
          <target state="translated">Схема S &lt;a href=&quot;#sqlite3&quot;&gt;соединения&lt;/a&gt; D с базой данных должна быть базой данных в &lt;a href=&quot;wal&quot;&gt;режиме WAL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4938e6644f0ad52bc0448849639259b7608261fb" translate="yes" xml:space="preserve">
          <source>Schema S of &lt;a href=&quot;sqlite3&quot;&gt;database connection&lt;/a&gt; D must be a &lt;a href=&quot;../wal&quot;&gt;WAL mode&lt;/a&gt; database.</source>
          <target state="translated">Схема S &lt;a href=&quot;sqlite3&quot;&gt;соединения&lt;/a&gt; D с базой данных должна быть базой данных в &lt;a href=&quot;../wal&quot;&gt;режиме WAL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="783379b4d6a04cfdb7223b86944f535ee34f305b" translate="yes" xml:space="preserve">
          <source>Schema format number</source>
          <target state="translated">Номер формата схемы</target>
        </trans-unit>
        <trans-unit id="3818a04cadbc7e36a69fd1fddf0ec427879c13a3" translate="yes" xml:space="preserve">
          <source>Search application tips</source>
          <target state="translated">Советы по поиску приложений</target>
        </trans-unit>
        <trans-unit id="8f58d07a782f28f0be6c5eba33589bc58551ce12" translate="yes" xml:space="preserve">
          <source>Second Improvement: Split content into smaller pieces</source>
          <target state="translated">Второе усовершенствование:Разделить содержимое на более мелкие части</target>
        </trans-unit>
        <trans-unit id="ec79d2ea1a314df8f0b27d40fa827558108d418f" translate="yes" xml:space="preserve">
          <source>Second copy of the WAL Index Information</source>
          <target state="translated">Второй экземпляр Индекса WAL Информация</target>
        </trans-unit>
        <trans-unit id="f2c6b564bd8119e16a3e573a6f9e7c6d1ac7820f" translate="yes" xml:space="preserve">
          <source>Section</source>
          <target state="translated">Section</target>
        </trans-unit>
        <trans-unit id="abbdc2b8f6673a1b63bbd1262eceea1c936362ed" translate="yes" xml:space="preserve">
          <source>Sections of the database that are used more than once, or not at all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd835e731943b498ec1909cabc1e38a99b94296" translate="yes" xml:space="preserve">
          <source>Security and compatibilities enhancements to &lt;a href=&quot;fts3#f3tknzr&quot;&gt;fts3_tokenizer()&lt;/a&gt;:</source>
          <target state="translated">Улучшения безопасности и совместимости для &lt;a href=&quot;fts3#f3tknzr&quot;&gt;fts3_tokenizer ()&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8229f87bed66ece3cde105695968321f8308f48e" translate="yes" xml:space="preserve">
          <source>See &quot;&lt;a href=&quot;queryplanner-ng#fossilcasestudy&quot;&gt;The Fossil NGQP Upgrade Case Study&lt;/a&gt;&quot; for another real-world example of using CROSS JOIN to manually control the nesting order of a join. The &lt;a href=&quot;queryplanner-ng#howtofix&quot;&gt;query planner checklist&lt;/a&gt; found later in the same document provides further guidance on manual control of the query planner.</source>
          <target state="translated">&lt;a href=&quot;queryplanner-ng#fossilcasestudy&quot;&gt;Еще&lt;/a&gt; один реальный пример использования CROSS JOIN для ручного управления порядком вложенности соединения см. В разделе &amp;laquo; Пример обновления Fossil NGQP &amp;raquo;. Контрольный &lt;a href=&quot;queryplanner-ng#howtofix&quot;&gt;список планировщика запросов,&lt;/a&gt; приведенный далее в том же документе, содержит дополнительные инструкции по ручному управлению планировщиком запросов.</target>
        </trans-unit>
        <trans-unit id="c132fc8253da62def423dbfbc9e5cc8f879698fd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#dbstatpath&quot;&gt;description above&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1406da130a4d62c75c39d9868f5406eb3bf35f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#sqlite3_pcache_methods2&quot;&gt;sqlite3_pcache_methods2&lt;/a&gt; for additional information.</source>
          <target state="translated">См. &lt;a href=&quot;#sqlite3_pcache_methods2&quot;&gt;Sqlite3_pcache_methods2&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="b6719884b2a74c479ea6999c99dbf311d703b384" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://sqlite.org/'about.html'&quot;&gt;About SQLite&lt;/a&gt; for an overview of the SQLite software and what it does and how it is different.</source>
          <target state="translated">См. Раздел &amp;laquo; &lt;a href=&quot;https://sqlite.org/'about.html'&quot;&gt;О SQLite&amp;raquo;&lt;/a&gt; для обзора программного обеспечения SQLite, его функций и отличий.</target>
        </trans-unit>
        <trans-unit id="4a83862c5e73732d34809bc526149b8874a0b009" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;limits&quot;&gt;limits.html&lt;/a&gt; for a full discussion of the limits of SQLite.</source>
          <target state="translated">Полное обсуждение ограничений SQLite см. В &lt;a href=&quot;limits&quot;&gt;файле limits.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5702be68fafd67a2aafc342a3e205c709913ea24" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;pcache_methods2&quot;&gt;sqlite3_pcache_methods2&lt;/a&gt; for additional information.</source>
          <target state="translated">См. &lt;a href=&quot;pcache_methods2&quot;&gt;Sqlite3_pcache_methods2&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="67c5fd71325238ec1a4341afb9b6cba9315dbef4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;sharedcache&quot;&gt;SQLite Shared-Cache Mode&lt;/a&gt; for additional information.</source>
          <target state="translated">Дополнительную информацию см. В разделе &lt;a href=&quot;sharedcache&quot;&gt;Режим общего кэша SQLite&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61a08f389a25b863d0fca5015a2885ff6fd5c8cd" translate="yes" xml:space="preserve">
          <source>See Also:</source>
          <target state="translated">См.также:</target>
        </trans-unit>
        <trans-unit id="93901f63e20a4a7a74fbfdbc37b4075a185c71c6" translate="yes" xml:space="preserve">
          <source>See Also: &lt;a href=&quot;../backup&quot;&gt;Using the SQLite Online Backup API&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../backup&quot;&gt;Использование SQLite Online Backup API&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3af600b61585b909b60b4a99e040268e0c2a856f" translate="yes" xml:space="preserve">
          <source>See Also: &lt;a href=&quot;../sharedcache&quot;&gt;SQLite Shared-Cache Mode&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../sharedcache&quot;&gt;Режим общего кэша SQLite&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c1b1d19f5868cf4d3018fb518dcfa6d87cc98cd" translate="yes" xml:space="preserve">
          <source>See Also: &lt;a href=&quot;../unlock_notify&quot;&gt;Using the SQLite Unlock Notification Feature&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;../unlock_notify&quot;&gt;Использование функции уведомления о разблокировке SQLite&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7616c5088158f54a825d33709957167b8a16116d" translate="yes" xml:space="preserve">
          <source>See Also: &lt;a href=&quot;backup&quot;&gt;Using the SQLite Online Backup API&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;backup&quot;&gt;Использование SQLite Online Backup API&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f41977d4fff20685334fca06b182777534d39401" translate="yes" xml:space="preserve">
          <source>See Also: &lt;a href=&quot;sharedcache&quot;&gt;SQLite Shared-Cache Mode&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;sharedcache&quot;&gt;Режим общего кэша SQLite&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f9e82ef52e9fb93669665e75ad01f2483ef4742" translate="yes" xml:space="preserve">
          <source>See Also: &lt;a href=&quot;unlock_notify&quot;&gt;Using the SQLite Unlock Notification Feature&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;unlock_notify&quot;&gt;Использование функции уведомления о разблокировке SQLite&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="432cb254f15763b7805bdd86025f5f8cf43aec8f" translate="yes" xml:space="preserve">
          <source>See above.</source>
          <target state="translated">См.выше.</target>
        </trans-unit>
        <trans-unit id="383b0d124cc39b4f92b719a490622adb9db1929b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;pragma#pragma_checkpoint_fullfsync&quot;&gt;checkpoint_fullfsync&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;pragma#pragma_checkpoint_fullfsync&quot;&gt;checkpoint_fullfsync&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="588a701bb21ea6498fe1cee5a08846f3a6f8999b" translate="yes" xml:space="preserve">
          <source>See also lists of &lt;a href=&quot;objlist&quot;&gt;Objects&lt;/a&gt;, &lt;a href=&quot;constlist&quot;&gt;Constants&lt;/a&gt;, and &lt;a href=&quot;funclist&quot;&gt;Functions&lt;/a&gt;.</source>
          <target state="translated">См. Также списки &lt;a href=&quot;objlist&quot;&gt;объектов&lt;/a&gt; , &lt;a href=&quot;constlist&quot;&gt;констант&lt;/a&gt; и &lt;a href=&quot;funclist&quot;&gt;функций&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c2ab778a085857c109eb7e8e5a5333d9b57f676" translate="yes" xml:space="preserve">
          <source>See also requirements H35180 and H35210 above.</source>
          <target state="translated">См.также требования H35180 и H35210 выше.</target>
        </trans-unit>
        <trans-unit id="a69045200fe6eb4eefb6543d32d1c3986dee3e7a" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#sqlite3_commit_hook&quot;&gt;sqlite3_commit_hook()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_commit_hook&quot;&gt;sqlite3_rollback_hook()&lt;/a&gt;, and &lt;a href=&quot;#sqlite3_preupdate_count&quot;&gt;sqlite3_preupdate_hook()&lt;/a&gt; interfaces.</source>
          <target state="translated">См. Также интерфейсы &lt;a href=&quot;#sqlite3_commit_hook&quot;&gt;sqlite3_commit_hook ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_commit_hook&quot;&gt;sqlite3_rollback_hook ()&lt;/a&gt; и &lt;a href=&quot;#sqlite3_preupdate_count&quot;&gt;sqlite3_preupdate_hook ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ee912df6c5ce3441a9860f1d9730f7218ccc4b5" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#sqlite3_update_hook&quot;&gt;sqlite3_update_hook()&lt;/a&gt; interface.</source>
          <target state="translated">См. Также интерфейс &lt;a href=&quot;#sqlite3_update_hook&quot;&gt;sqlite3_update_hook ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="26d056bc4928cd96df481ba3bb3da36ee6f31042" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;../lang_corefunc#load_extension&quot;&gt;load_extension() SQL function&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;../lang_corefunc#load_extension&quot;&gt;функцию SQL load_extension ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="db4a83343835929e5d813cffa0b4f2b9793757ab" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;cintro&quot;&gt;Introduction To The SQLite C/C++ Interface&lt;/a&gt; for an introductory overview and roadmap to the dozens of SQLite interface functions.</source>
          <target state="translated">См. Также &lt;a href=&quot;cintro&quot;&gt;Введение в интерфейс SQLite C / C ++&lt;/a&gt; для вводного обзора и дорожной карты для десятков функций интерфейса SQLite.</target>
        </trans-unit>
        <trans-unit id="339862dc13bc1d57d7288f6688c75379763064fe" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;commit_hook&quot;&gt;sqlite3_commit_hook()&lt;/a&gt;, &lt;a href=&quot;commit_hook&quot;&gt;sqlite3_rollback_hook()&lt;/a&gt;, and &lt;a href=&quot;preupdate_count&quot;&gt;sqlite3_preupdate_hook()&lt;/a&gt; interfaces.</source>
          <target state="translated">См. Также интерфейсы &lt;a href=&quot;commit_hook&quot;&gt;sqlite3_commit_hook ()&lt;/a&gt; , &lt;a href=&quot;commit_hook&quot;&gt;sqlite3_rollback_hook ()&lt;/a&gt; и &lt;a href=&quot;preupdate_count&quot;&gt;sqlite3_preupdate_hook ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a86c99c5bddb628e2b84fed31d31db9e2daeedae" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;lang_corefunc#load_extension&quot;&gt;load_extension() SQL function&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;lang_corefunc#load_extension&quot;&gt;функцию SQL load_extension ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9551bbf4b06565a29addd67ff920566d10532258" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_application_id&quot;&gt;application_id pragma&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_schema_version&quot;&gt;schema_version pragma&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;pragma#pragma_schema_version&quot;&gt;прагмы &lt;/a&gt;&lt;a href=&quot;pragma#pragma_application_id&quot;&gt;application_id&lt;/a&gt; и schema_version .</target>
        </trans-unit>
        <trans-unit id="b61abea4b86316c9bf1e59bfa90fae500f63cc2b" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_application_id&quot;&gt;application_id pragma&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_user_version&quot;&gt;user_version pragma&lt;/a&gt;.</source>
          <target state="translated">Смотрите также &lt;a href=&quot;pragma#pragma_application_id&quot;&gt;APPLICATION_ID прагму&lt;/a&gt; и &lt;a href=&quot;pragma#pragma_user_version&quot;&gt;user_version прагму&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e8ceb2d0a12e5d383c6c33d1d4332e5b5c058b2" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_fullfsync&quot;&gt;fullfsync&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_checkpoint_fullfsync&quot;&gt;checkpoint_fullfsync&lt;/a&gt; pragmas.</source>
          <target state="translated">См. Также &lt;a href=&quot;pragma#pragma_fullfsync&quot;&gt;прагмы fullfsync&lt;/a&gt; и &lt;a href=&quot;pragma#pragma_checkpoint_fullfsync&quot;&gt;checkpoint_fullfsync&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ff63025923714eccfd1fedacdb3cbe9372c3a93" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_hard_heap_limit&quot;&gt;hard_heap_limit pragma&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303adc506bf547b9de95bc776aebd335c64bd8fc" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_quick_check&quot;&gt;PRAGMA quick_check&lt;/a&gt; command which does most of the checking of PRAGMA integrity_check but runs much faster.</source>
          <target state="translated">См. Также команду &lt;a href=&quot;pragma#pragma_quick_check&quot;&gt;PRAGMA quick_check,&lt;/a&gt; которая выполняет большую часть проверки целостности PRAGMA, но работает намного быстрее.</target>
        </trans-unit>
        <trans-unit id="48f81b34f529fa4aeb1d561e1f3508b8413b778f" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_soft_heap_limit&quot;&gt;soft_heap_limit pragma&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25a2daadf8d2856a4719203849a4c0af3fabe6d" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;pragma#pragma_user_version&quot;&gt;user_version pragma&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;pragma#pragma_user_version&quot;&gt;прагму user_version&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c007784e950bb7f56540883b26bce1ca576b693" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;quirks&quot;&gt;Quirks, Caveats, and Gotchas&lt;/a&gt; of SQLite.</source>
          <target state="translated">См. Также особенности &lt;a href=&quot;quirks&quot;&gt;, предостережения и нюансы&lt;/a&gt; SQLite.</target>
        </trans-unit>
        <trans-unit id="94811ce2c3eb27494bcc158d862a7722c04a876e" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;update_hook&quot;&gt;sqlite3_update_hook()&lt;/a&gt; interface.</source>
          <target state="translated">См. Также интерфейс &lt;a href=&quot;update_hook&quot;&gt;sqlite3_update_hook ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">См.также:</target>
        </trans-unit>
        <trans-unit id="22db3f40cf05b62413d309725844e929dbbe0d0d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#SQLITE_ABORT_ROLLBACK&quot;&gt;extended result code definitions&lt;/a&gt;</source>
          <target state="translated">См. Также: определения &lt;a href=&quot;#SQLITE_ABORT_ROLLBACK&quot;&gt;расширенного кода результата&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5824dbe2a36217f98b17445aa829e98c24d78c0" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#SQLITE_FCNTL_BEGIN_ATOMIC_WRITE&quot;&gt;file control opcodes&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;#SQLITE_FCNTL_BEGIN_ATOMIC_WRITE&quot;&gt;коды операций управления файлами&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a888d72c2aa71ea4f9e6a712bc7addf37488e84a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_bind_blob&quot;&gt;sqlite3_bind()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count()&lt;/a&gt;, and &lt;a href=&quot;#sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_bind_blob&quot;&gt;sqlite3_bind ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count ()&lt;/a&gt; и &lt;a href=&quot;#sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e55f94f79f49c504145ad61691b8c42ba593cff9" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_bind_blob&quot;&gt;sqlite3_bind()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count()&lt;/a&gt;, and &lt;a href=&quot;#sqlite3_bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_bind_blob&quot;&gt;sqlite3_bind ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count ()&lt;/a&gt; и &lt;a href=&quot;#sqlite3_bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6713e8fdaa1ea389a2f09e3a9c9374683ab6d6b0" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_bind_blob&quot;&gt;sqlite3_bind()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name()&lt;/a&gt;, and &lt;a href=&quot;#sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_bind_blob&quot;&gt;sqlite3_bind ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name ()&lt;/a&gt; и &lt;a href=&quot;#sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="11dc488cf1e9db5102b28629a96e4392dc29104c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name()&lt;/a&gt;, and &lt;a href=&quot;#sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name ()&lt;/a&gt; и &lt;a href=&quot;#sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8c6912b2b4045c6f070e0edaa93c0875be5fd821" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_blob_close&quot;&gt;sqlite3_blob_close()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_blob_reopen&quot;&gt;sqlite3_blob_reopen()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_blob_read&quot;&gt;sqlite3_blob_read()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_blob_bytes&quot;&gt;sqlite3_blob_bytes()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_blob_write&quot;&gt;sqlite3_blob_write()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_blob_close&quot;&gt;sqlite3_blob_close ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_blob_reopen&quot;&gt;sqlite3_blob_reopen ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_blob_read&quot;&gt;sqlite3_blob_read ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_blob_bytes&quot;&gt;sqlite3_blob_bytes ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_blob_write&quot;&gt;sqlite3_blob_write ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a3f665ed626f2acf9c339d54e23c6812da36531" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_blob_read&quot;&gt;sqlite3_blob_read()&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;#sqlite3_blob_read&quot;&gt;sqlite3_blob_read ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c57adf1e621a68c73c17c8b0ecd787edffeb3799" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_blob_write&quot;&gt;sqlite3_blob_write()&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;#sqlite3_blob_write&quot;&gt;sqlite3_blob_write ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e289aacb066a0de1940f21ad59b6642609ced4a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_collation_needed&quot;&gt;sqlite3_collation_needed()&lt;/a&gt; and &lt;a href=&quot;#sqlite3_collation_needed&quot;&gt;sqlite3_collation_needed16()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_collation_needed&quot;&gt;sqlite3_collation_needed ()&lt;/a&gt; и &lt;a href=&quot;#sqlite3_collation_needed&quot;&gt;sqlite3_collation_needed16 ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="513ba9fc0134937d2763a01c62173350a81c3bde" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_column_count&quot;&gt;sqlite3_column_count()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_column_count&quot;&gt;sqlite3_column_count ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf131b5c38b078229e14995e1d46c942918a4628" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_create_module&quot;&gt;sqlite3_create_module()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_create_module&quot;&gt;sqlite3_create_module ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="389c907363aca1a027a67a5b885a2319a4ec35ed" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_data_count&quot;&gt;sqlite3_data_count()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_data_count&quot;&gt;sqlite3_data_count ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0afc966be42fd6b30d673383499cb0059d1ed149" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_db_release_memory&quot;&gt;sqlite3_db_release_memory()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_db_release_memory&quot;&gt;sqlite3_db_release_memory ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81c3b36cbd377bb3ed1664b49ec3d43a5bc80371" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_db_status&quot;&gt;sqlite3_db_status ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10a7701e6ed3e748294878d5accec5c9e67c8652" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_drop_modules&quot;&gt;sqlite3_drop_modules()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_drop_modules&quot;&gt;sqlite3_drop_modules ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c38544cc50a3f638d9d29eb83eea228ba0b685b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_libversion&quot;&gt;sqlite3_libversion()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_libversion&quot;&gt;sqlite3_libversion_number()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_libversion&quot;&gt;sqlite3_sourceid()&lt;/a&gt;, &lt;a href=&quot;lang_corefunc#sqlite_version&quot;&gt;sqlite_version()&lt;/a&gt; and &lt;a href=&quot;lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_libversion&quot;&gt;sqlite3_libversion ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_libversion&quot;&gt;sqlite3_libversion_number ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_libversion&quot;&gt;sqlite3_sourceid ()&lt;/a&gt; , &lt;a href=&quot;lang_corefunc#sqlite_version&quot;&gt;sqlite_version ()&lt;/a&gt; и &lt;a href=&quot;lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58d0868f2357d36a8bd2095b2af1bb408179b89d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_mutex_held&quot;&gt;sqlite3_mutex_held()&lt;/a&gt; and &lt;a href=&quot;#sqlite3_mutex_held&quot;&gt;sqlite3_mutex_notheld()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_mutex_held&quot;&gt;sqlite3_mutex_held ()&lt;/a&gt; и &lt;a href=&quot;#sqlite3_mutex_held&quot;&gt;sqlite3_mutex_notheld ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a95fa8aab0e3bfa1d373ea225784189d0d07162" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_release_memory&quot;&gt;sqlite3_release_memory()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_release_memory&quot;&gt;sqlite3_release_memory ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="894a2c673c7c3998c0146ab1462bd48997eeefeb" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_reset_auto_extension&quot;&gt;sqlite3_reset_auto_extension()&lt;/a&gt; and &lt;a href=&quot;#sqlite3_cancel_auto_extension&quot;&gt;sqlite3_cancel_auto_extension()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_reset_auto_extension&quot;&gt;sqlite3_reset_auto_extension ()&lt;/a&gt; и &lt;a href=&quot;#sqlite3_cancel_auto_extension&quot;&gt;sqlite3_cancel_auto_extension ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c349eaf02fbc75040833b27273fe78ce351a8517" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_status&quot;&gt;sqlite3_status()&lt;/a&gt; and &lt;a href=&quot;#sqlite3_db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt;.</source>
          <target state="translated">Смотрите также &lt;a href=&quot;#sqlite3_status&quot;&gt;sqlite3_status ()&lt;/a&gt; и &lt;a href=&quot;#sqlite3_db_status&quot;&gt;sqlite3_db_status ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c4abfc13135b30c5ca35737473e62ae50fbba518" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_status&quot;&gt;sqlite3_status()&lt;/a&gt; and &lt;a href=&quot;#sqlite3_stmt_status&quot;&gt;sqlite3_stmt_status()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_status&quot;&gt;sqlite3_status ()&lt;/a&gt; и &lt;a href=&quot;#sqlite3_stmt_status&quot;&gt;sqlite3_stmt_status ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="74b0b0a73811f9aef63fb1988c2a0ccf696926fc" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_stmt_scanstatus_reset&quot;&gt;sqlite3_stmt_scanstatus_reset()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_stmt_scanstatus_reset&quot;&gt;sqlite3_stmt_scanstatus_reset ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64b2c6cde7a64226fbe2ef3634045cd57dde9aaa" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_strglob&quot;&gt;sqlite3_strglob()&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;#sqlite3_strglob&quot;&gt;sqlite3_strglob ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20e4f725a3076fc6b2bb57f870226dcb7c2cd741" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_strlike&quot;&gt;sqlite3_strlike()&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;#sqlite3_strlike&quot;&gt;sqlite3_strlike ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="435b8c7f1343e259185da08da01ab1604658c57c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_temp_directory&quot;&gt;sqlite3_temp_directory&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_temp_directory&quot;&gt;sqlite3_temp_directory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de67037e66e6bc2405fafd89b02748ccb563c8f4" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#sqlite3_update_hook&quot;&gt;sqlite3_update_hook()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;#sqlite3_update_hook&quot;&gt;sqlite3_update_hook ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="577203775c48a36ecdbe0e166cc73a6f94c49525" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../gencol&quot;&gt;gencol.html&lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81cf66782a01b719b906500422d08c6d8d672682" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang&quot;&gt;lang.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang&quot;&gt;lang.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c778a0f903e6e7a229a74dcc043ab7ce222f8e91" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang&quot;&gt;lang.html&lt;/a&gt;&lt;a href=&quot;../lang_explain&quot;&gt;lang_explain.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang&quot;&gt;lang.html &lt;/a&gt;&lt;a href=&quot;../lang_explain&quot;&gt;lang_explain.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a1623c388195369765189e361912596c2725840" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cca5d37155aa556de6dfac0b27a0e25fc7f06d7" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;&lt;a href=&quot;../pragma&quot;&gt;pragma.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6be53babfb0698dca91e0931b8046114c3258d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52bb34faf16293e7bf50504a84a6781db371ee0f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a14f661ac8c092f4fc1d99fc6d9d99e0d8ec786" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_conflict&quot;&gt;lang_conflict.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;../lang_conflict&quot;&gt;lang_conflict.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c07322809e26e45be23a95893f749e03af5c5ed5" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="938b9621b107714962482883b255c3d80c08b6e7" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_analyze&quot;&gt;lang_analyze.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_analyze&quot;&gt;lang_analyze.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="15598ecd618474aabf3591017c513af8de8a6a3b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0485f89bf00139a21000442b6a6990659cb64b16" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_comment&quot;&gt;lang_comment.html&lt;/a&gt;</source>
          <target state="translated">См. Также &lt;a href=&quot;../lang_comment&quot;&gt;lang_comment.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66948fd5b0afaf1cdc01aa29ecea4c1bfedab9de" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_corefunc#sqlite_version&quot;&gt;sqlite_version()&lt;/a&gt; and &lt;a href=&quot;../lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_corefunc#sqlite_version&quot;&gt;sqlite_version ()&lt;/a&gt; и &lt;a href=&quot;../lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee139ad90928eace8c30779bd5b6becd4f09c01d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79cd4e2359b15e6acab9aede873d664f2ede5a75" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2dfcbfb2abe59925659cc429708c6aec7eb406e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="658fb74ef352e297b395f96f857ceb7d3c615e2b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13d94bc3fd2a819178c3e4749e7aa371e596de86" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f527f9debd0e925c5e233506e62bf945cd29ee28" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;../lang_indexedby&quot;&gt;lang_indexedby.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;../lang_indexedby&quot;&gt;lang_indexedby.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21b664cff26300df1357262d6ec594fb9ee3555c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91b6c24c68f47aa751a5b5b8df600dcca07d313d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1033e8985d4463e32f19095fed06fce8ea5476c1" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9218f7d1d52e1191bd9b8fb6db8d70bf8dc438f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466d46beb84c6c8963a2f748f70f326309fffab5" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4aef55367a00e308dff9639c75772858c63ff83" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56e9b6723fb1585f18d7b60fce22ac17b792e417" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_createvtab&quot;&gt;lang_createvtab.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_createvtab&quot;&gt;lang_createvtab.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d13d914d08b8f92116b29032480e38cbe265479" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cdd1d8b761b061d5aeaf839bfb496966e3e11c8e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_detach&quot;&gt;lang_detach.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_detach&quot;&gt;lang_detach.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="716c85dad4326320b2465878481f19b320bc4abf" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_dropindex&quot;&gt;lang_dropindex.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_dropindex&quot;&gt;lang_dropindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c9246cf2807990b095780ac9e1b0dd561919984" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_droptable&quot;&gt;lang_droptable.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_droptable&quot;&gt;lang_droptable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f43b3a3c761c07b37c7c96d59a19f91da1c40c6" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_droptrigger&quot;&gt;lang_droptrigger.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_droptrigger&quot;&gt;lang_droptrigger.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59cd8724dea12b8ea965ab667c74e2d1d4fb024b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_dropview&quot;&gt;lang_dropview.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_dropview&quot;&gt;lang_dropview.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f03712d7de35eafa06ad69d4f67d162931ceee8e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="344cad8b96fcafcf74d42ebb4e8917a07994e94e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_reindex&quot;&gt;lang_reindex.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_reindex&quot;&gt;lang_reindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cafbbb26b01fe4aad5518dd3d8329918a47b638c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_savepoint&quot;&gt;lang_savepoint.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_savepoint&quot;&gt;lang_savepoint.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="194bd03307aa26e18f55046fce3dc35e20b6f469" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_savepoint&quot;&gt;lang_savepoint.html&lt;/a&gt;&lt;a href=&quot;../lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_savepoint&quot;&gt;lang_savepoint.html &lt;/a&gt;&lt;a href=&quot;../lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3bbc01924ed08271e9d7d2fafae0daf0758d4c29" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_select&quot;&gt;lang_select.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_select&quot;&gt;lang_select.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90a9a8514c72ec12bafb541c92e76fe75343369a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e20ee80f88a596c72e3b5175803d94c62b49d45" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="487a9f7edcc9acbd36e71269b10f3dabc3570792" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">Смотрите также: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb4119b7d69b4e6da177cbf6ff9c4d155ae67444" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;&lt;a href=&quot;../pragma&quot;&gt;pragma.html&lt;/a&gt;</source>
          <target state="translated">Смотрите также: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;../lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;../lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;../lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;../lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;../lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;../lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html &lt;/a&gt;&lt;a href=&quot;../pragma&quot;&gt;Прагма. html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="695ecd24fe66b529919da4afdf535e5125baa96e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;../lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;../lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0014eee39d17cd320cfc0ffbaab392f9f613f85" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29fadfcd5bcddd556613ead0e99dda8fc7fba83b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;../lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;../lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;../lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92b532e0d0d9df2c59df298af30c18a7e1da5dfe" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_vacuum&quot;&gt;lang_vacuum.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_vacuum&quot;&gt;lang_vacuum.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c013a0edc28859aa3e70e3276bdce16a070ed083" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../lang_with&quot;&gt;lang_with.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a7eea93b457a57fc7fe1137ef59827626192c5a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../pragma&quot;&gt;pragma.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../pragma&quot;&gt;pragma.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4c2bc470b47131356a55eedacd462eb96e84418" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../pragma#pragma_busy_timeout&quot;&gt;PRAGMA busy_timeout&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../pragma#pragma_busy_timeout&quot;&gt;PRAGMA busy_timeout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1fe4145cb7c50a0d418d258d06542a1f8cb0dd39" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../printf&quot;&gt;built-in printf()&lt;/a&gt;, &lt;a href=&quot;../lang_corefunc#printf&quot;&gt;printf() SQL function&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;../printf&quot;&gt;встроенная &lt;/a&gt;&lt;a href=&quot;../lang_corefunc#printf&quot;&gt;функция SQL &lt;/a&gt;printf () , printf ()</target>
        </trans-unit>
        <trans-unit id="53567bfae3ebbf8bd0c18510f50128b0fee6e144" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;bind_blob&quot;&gt;sqlite3_bind()&lt;/a&gt;, &lt;a href=&quot;bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count()&lt;/a&gt;, and &lt;a href=&quot;bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;bind_blob&quot;&gt;sqlite3_bind ()&lt;/a&gt; , &lt;a href=&quot;bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count ()&lt;/a&gt; и &lt;a href=&quot;bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="907bef21249483a496207cb807a74d758d2d3c63" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;bind_blob&quot;&gt;sqlite3_bind()&lt;/a&gt;, &lt;a href=&quot;bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count()&lt;/a&gt;, and &lt;a href=&quot;bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;bind_blob&quot;&gt;sqlite3_bind ()&lt;/a&gt; , &lt;a href=&quot;bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count ()&lt;/a&gt; и &lt;a href=&quot;bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8c1aadec23594d958a843556680b17a72abac74b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;bind_blob&quot;&gt;sqlite3_bind()&lt;/a&gt;, &lt;a href=&quot;bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name()&lt;/a&gt;, and &lt;a href=&quot;bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;bind_blob&quot;&gt;sqlite3_bind ()&lt;/a&gt; , &lt;a href=&quot;bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name ()&lt;/a&gt; и &lt;a href=&quot;bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6f45be66a2c5bcb3bc142d2c447ea57f0f20e31c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count()&lt;/a&gt;, &lt;a href=&quot;bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name()&lt;/a&gt;, and &lt;a href=&quot;bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count ()&lt;/a&gt; , &lt;a href=&quot;bind_parameter_name&quot;&gt;sqlite3_bind_parameter_name ()&lt;/a&gt; и &lt;a href=&quot;bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37c010f71fba70b74109bbdc2b1ce08d14015c48" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;blob_close&quot;&gt;sqlite3_blob_close()&lt;/a&gt;, &lt;a href=&quot;blob_reopen&quot;&gt;sqlite3_blob_reopen()&lt;/a&gt;, &lt;a href=&quot;blob_read&quot;&gt;sqlite3_blob_read()&lt;/a&gt;, &lt;a href=&quot;blob_bytes&quot;&gt;sqlite3_blob_bytes()&lt;/a&gt;, &lt;a href=&quot;blob_write&quot;&gt;sqlite3_blob_write()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;blob_close&quot;&gt;sqlite3_blob_close ()&lt;/a&gt; , &lt;a href=&quot;blob_reopen&quot;&gt;sqlite3_blob_reopen ()&lt;/a&gt; , &lt;a href=&quot;blob_read&quot;&gt;sqlite3_blob_read ()&lt;/a&gt; , &lt;a href=&quot;blob_bytes&quot;&gt;sqlite3_blob_bytes ()&lt;/a&gt; , &lt;a href=&quot;blob_write&quot;&gt;sqlite3_blob_write ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a3dbeda6bcc23b238fd884c3cfaafcc8fb5f1870" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;blob_read&quot;&gt;sqlite3_blob_read()&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;blob_read&quot;&gt;sqlite3_blob_read ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34c05c2c7478ddfc9595328b9ea47d96e84f4152" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;blob_write&quot;&gt;sqlite3_blob_write()&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;blob_write&quot;&gt;sqlite3_blob_write ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b21a0b7337431e9ee24e69d231fe8302762a853" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;c_abort_rollback&quot;&gt;extended result code definitions&lt;/a&gt;</source>
          <target state="translated">См. Также: определения &lt;a href=&quot;c_abort_rollback&quot;&gt;расширенного кода результата&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfe354170b5e869c7270b91ade687416a54c0183" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;c_fcntl_begin_atomic_write&quot;&gt;file control opcodes&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;c_fcntl_begin_atomic_write&quot;&gt;коды операций управления файлами&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37196415e76fa9d675c871c64b90e815741d0f92" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;collation_needed&quot;&gt;sqlite3_collation_needed()&lt;/a&gt; and &lt;a href=&quot;collation_needed&quot;&gt;sqlite3_collation_needed16()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;collation_needed&quot;&gt;sqlite3_collation_needed ()&lt;/a&gt; и &lt;a href=&quot;collation_needed&quot;&gt;sqlite3_collation_needed16 ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="879f7e7ea46313e2ea71652b9ca7565db57df9c6" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;column_count&quot;&gt;sqlite3_column_count()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;column_count&quot;&gt;sqlite3_column_count ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="319399ff5f7d4c689210338dddef1fb99518d24d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;compile#omit_automatic_index&quot;&gt;SQLITE_OMIT_AUTOMATIC_INDEX&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;compile#omit_automatic_index&quot;&gt;SQLITE_OMIT_AUTOMATIC_INDEX&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b23baf151295ad1d1fe5328bd71961f497879ab" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;create_module&quot;&gt;sqlite3_create_module()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;create_module&quot;&gt;sqlite3_create_module ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8661ec8b737499d91726c5f2f8d9c2e2296d1bc" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;data_count&quot;&gt;sqlite3_data_count()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;data_count&quot;&gt;sqlite3_data_count ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e1099949ad00bb15eb69a605f4b4b3bbfd1aff7" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;db_release_memory&quot;&gt;sqlite3_db_release_memory()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;db_release_memory&quot;&gt;sqlite3_db_release_memory ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bda4dfc70b5f71949880b44f021fef0f7b01aa87" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;db_status&quot;&gt;sqlite3_db_status ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb201238a04d02eb3cb27c3d4ccc509df3614a14" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;drop_modules&quot;&gt;sqlite3_drop_modules()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;drop_modules&quot;&gt;sqlite3_drop_modules ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2366873b192e78c89709e7d18ff2db2dcc967a55" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;gencol&quot;&gt;gencol.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html#tablecoldef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524073d1a4577e6b594022dd278f36bd2dba0d4a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang&quot;&gt;lang.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang&quot;&gt;lang.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bc17dac7d9752b7811c2a93ab58e831060d9b9d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang&quot;&gt;lang.html&lt;/a&gt;&lt;a href=&quot;lang_explain&quot;&gt;lang_explain.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang&quot;&gt;lang.html &lt;/a&gt;&lt;a href=&quot;lang_explain&quot;&gt;lang_explain.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e55f6b8a291e9bc6872ef07f19648c06a63c7f96" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger#raise&quot;&gt;lang_createtrigger.html#raise&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3094ad1d98461c25d851d9b58614f8484829a717" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#fromclause&quot;&gt;lang_select.html#fromclause&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a742de555ecf28aa329a8d657a04db2888df41b9" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html#recursivecte&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85abca3267512af73ec8afacb8584e803d672ab2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14529eb0437c823ab68b15a8cd5ba3d6d655b2d3" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;&lt;a href=&quot;pragma#syntax&quot;&gt;pragma.html#syntax&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199a3a4fc6414fdf6ed7493a3c4733ad2cdbdb41" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_expr#booleanexpr&quot;&gt;lang_expr.html#booleanexpr&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_expr#booleanexpr&quot;&gt;lang_expr.html # booleanexpr.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="caee65c71137c00f3261816c349b1186b87ab07f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d5357ce486345b38e495fdd052bc12b972eb613" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_altertable#altertabaddcol&quot;&gt;lang_altertable.html#altertabaddcol&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_altertable#altertabaddcol&quot;&gt;lang_altertable.html # altertabaddcol &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df7e64b5e3be337fc1f98f552de8d797b4c2b99a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_altertable#altertabaddcol&quot;&gt;lang_altertable.html#altertabaddcol&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html#tablecoldef&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_altertable#altertabaddcol&quot;&gt;lang_altertable.html # altertabaddcol &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html # tablecoldef&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83a5b6f8bb5171cdb36ccd5c1ba734c2c233150b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_conflict&quot;&gt;lang_conflict.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#notnullconst&quot;&gt;lang_createtable.html#notnullconst&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_conflict&quot;&gt;lang_conflict.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable#notnullconst&quot;&gt;lang_createtable.html # notnullconst&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6fcd1bfb338ad16eab298ffc4c9d868843b9b21" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html#tablecoldef&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html # tablecoldef&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a36b3fb23e6333db428ab6ad00263be2d938abe" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_analyze&quot;&gt;lang_analyze.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_analyze&quot;&gt;lang_analyze.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6b9466ba508d0dbec4f6c657f9fbfd7e620fc37" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a54b9974971120efa52636fcabe0715b49415a8" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_comment&quot;&gt;lang_comment.html&lt;/a&gt;</source>
          <target state="translated">См. Также &lt;a href=&quot;lang_comment&quot;&gt;lang_comment.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cb6c7d068dfff53d11c81dd36fe7afde23d11e5" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_corefunc#sqlite_version&quot;&gt;sqlite_version()&lt;/a&gt; and &lt;a href=&quot;lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_corefunc#sqlite_version&quot;&gt;sqlite_version ()&lt;/a&gt; и &lt;a href=&quot;lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0913f10eba8984cde458a594e9723dae1e7b43d4" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#primkeyconst&quot;&gt;lang_createtable.html#primkeyconst&lt;/a&gt;&lt;a href=&quot;lang_createtable#uniqueconst&quot;&gt;lang_createtable.html#uniqueconst&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7d4103ad522f08124a6ecef11b7bef6bb05216" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e9835eae374451ebfe2dabdb26ce73fec9a591b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d81d89904dc49fa50fb5551880967e2b9a7226cb" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#primkeyconst&quot;&gt;lang_createtable.html#primkeyconst&lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html#tablecoldef&lt;/a&gt;&lt;a href=&quot;lang_createtable#uniqueconst&quot;&gt;lang_createtable.html#uniqueconst&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable#primkeyconst&quot;&gt;lang_createtable.html # primkeyconst &lt;/a&gt;&lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;lang_createtable.html # tablecoldef &lt;/a&gt;&lt;a href=&quot;lang_createtable#uniqueconst&quot;&gt;lang_createtable.html # uniqueconst&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5aed25ab420fb0098c44d0bf5304a4aa707b088f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c514627329ad2c33195dc084716f51f489e5370e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e08547629c50834603a3c7451218441b495de5f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_indexedby&quot;&gt;lang_indexedby.html&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_indexedby&quot;&gt;lang_indexedby.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cba534e77f5dd456a33da03494144a81d39264cc" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfa4d667a255f0c6828f6b1f4d098bfa8323d6e2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html#recursivecte&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html # recursivecte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9614960e8904f53093287bbe50e05a997ac3824b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9b4f140896556a1fc2adbe8ac95c3f7dc29ba8a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eef9b3d74c59deea364b6f6ac6f20759d658b7f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_upsert&quot;&gt;lang_upsert.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39b25e28ca93d32b847b9c1af840e472af33477" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a07a8a7f1e0538e7658544150917395127562b6" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6d60ea259f137afddc03af15fbdb1094689ece4" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_createvtab&quot;&gt;lang_createvtab.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_createvtab&quot;&gt;lang_createvtab.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="724cccf74d74960b6796259fcacc12e153ae3f1a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f80c5c57cfc045f570327a845f8127410c55f865" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_detach&quot;&gt;lang_detach.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_detach&quot;&gt;lang_detach.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76e8ddefbc493145192fc193cef9e039c65a902e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_dropindex&quot;&gt;lang_dropindex.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_dropindex&quot;&gt;lang_dropindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="863b8e5b897ce238b67c5c8556989e2766293313" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_droptable&quot;&gt;lang_droptable.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_droptable&quot;&gt;lang_droptable.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf4b794db9d56879de07eb5f16a8bc2477ca90d4" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_droptrigger&quot;&gt;lang_droptrigger.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_droptrigger&quot;&gt;lang_droptrigger.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="702f2b35823dcfd93d045f7d778af2c45120abe7" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_dropview&quot;&gt;lang_dropview.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_dropview&quot;&gt;lang_dropview.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62511da10fbf7f958f155307ba6d4d102f35f3be" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_expr#booleanexpr&quot;&gt;lang_expr.html#booleanexpr&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_expr#booleanexpr&quot;&gt;lang_expr.html # booleanexpr.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="450581ca6e9de72c74dcb192b37f5747276658f1" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_expr#litvalue&quot;&gt;lang_expr.html#litvalue&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_expr#litvalue&quot;&gt;lang_expr.html # litvalue.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae501b11617c0c13b2d3f762254b4ff760b36123" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_reindex&quot;&gt;lang_reindex.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_reindex&quot;&gt;lang_reindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d27e4055359a8aeac2ce66818352ec73c032ea4" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_savepoint&quot;&gt;lang_savepoint.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_savepoint&quot;&gt;lang_savepoint.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7bb5ce5fe2a8f6a8de65bf4e7bd8b65d204d6093" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_savepoint&quot;&gt;lang_savepoint.html&lt;/a&gt;&lt;a href=&quot;lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_savepoint&quot;&gt;lang_savepoint.html &lt;/a&gt;&lt;a href=&quot;lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="076fe51a7e12da80f3c9d8927a2ca4548526aa30" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9f5995b5a48f0fca91e5e282ac6950660e6528d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html # &lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;complex lang_select.html # simpleselect.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d233e7ebdff319d51e7bd5e01dba623d32fa9ca0" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html # Complex&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cbbded1021d4435d1532c9af272fa7bccfd9c1d0" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html # simpleselect.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e964459d5f1a2e61a2e2cf50351a352d90c8e8f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_transaction&quot;&gt;lang_transaction.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="600ef78a6f3fb8794c7d469e740f494486a2ac18" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7f048f330189613480493245819630da7093938" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_update#upfrom&quot;&gt;lang_update.html#upfrom&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea152fe6b3f2ae351dd12abd4e8bbd78773fa59" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger#raise&quot;&gt;lang_createtrigger.html#raise&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">Смотрите также: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger#raise&quot;&gt;lang_createtrigger.html # рейза &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html # соединение &lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select .html # simpleselect &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b469ebdf9c6c7fd0d09e8c5ea21cd29a3c4e951" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#fromclause&quot;&gt;lang_select.html#fromclause&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">Смотрите также: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html # соединение &lt;/a&gt;&lt;a href=&quot;lang_select#fromclause&quot;&gt;lang_select.html # fromclause &lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select .html # simpleselect &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html &lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb12fe633d07848eb5eb066e9d5b752ffef1d5c2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html#recursivecte&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">Смотрите также: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html # соединение &lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html # simpleselect &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update .html &lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html # recursivecte &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bed845bd614c9a71113bf4e2612d286c51c5869c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">Смотрите также: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html # соединение &lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html # simpleselect &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update .html &lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e12f9a6f89dbcc84809953e2fd797afd11b684ab" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html&lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html&lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html&lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html&lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html&lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html#compound&lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html#simpleselect&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;&lt;a href=&quot;pragma#syntax&quot;&gt;pragma.html#syntax&lt;/a&gt;</source>
          <target state="translated">Смотрите также: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_aggfunc&quot;&gt;lang_aggfunc.html &lt;/a&gt;&lt;a href=&quot;lang_altertable&quot;&gt;lang_altertable.html &lt;/a&gt;&lt;a href=&quot;lang_attach&quot;&gt;lang_attach.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_createview&quot;&gt;lang_createview.html &lt;/a&gt;&lt;a href=&quot;lang_delete&quot;&gt;lang_delete.html &lt;/a&gt;&lt;a href=&quot;lang_expr&quot;&gt;lang_expr.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_select&quot;&gt;lang_select.html &lt;/a&gt;&lt;a href=&quot;lang_select#compound&quot;&gt;lang_select.html # соединение &lt;/a&gt;&lt;a href=&quot;lang_select#simpleselect&quot;&gt;lang_select.html # simpleselect &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update .html &lt;/a&gt;&lt;a href=&quot;lang_with&quot;&gt;lang_with.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html &lt;/a&gt;&lt;a href=&quot;pragma#syntax&quot;&gt;pragma.html # syntax&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a66f16d59067e2dbd5b05e42ceffc5ed1382738" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html&lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html&lt;/a&gt;&lt;a href=&quot;lang_createtable#primkeyconst&quot;&gt;lang_createtable.html#primkeyconst&lt;/a&gt;&lt;a href=&quot;lang_createtable#uniqueconst&quot;&gt;lang_createtable.html#uniqueconst&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_createindex&quot;&gt;lang_createindex.html &lt;/a&gt;&lt;a href=&quot;lang_createtable&quot;&gt;lang_createtable.html &lt;/a&gt;&lt;a href=&quot;lang_createtable#primkeyconst&quot;&gt;lang_createtable.html # primkeyconst &lt;/a&gt;&lt;a href=&quot;lang_createtable#uniqueconst&quot;&gt;lang_createtable.html # uniqueconst &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;partialindex&quot;&gt;partialindex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10943101e04a10c530372cbdc34663b3698984dc" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9086346182d6b8670bc03f1e0367b327298a39af" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html&lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html&lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html&lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_upsert&quot;&gt;lang_UPSERT.html &lt;/a&gt;&lt;a href=&quot;lang_createtrigger&quot;&gt;lang_createtrigger.html &lt;/a&gt;&lt;a href=&quot;lang_insert&quot;&gt;lang_insert.html &lt;/a&gt;&lt;a href=&quot;lang_update&quot;&gt;lang_update.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73bb61ec2320cac51957bb5504dbbbfced735f05" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_vacuum&quot;&gt;lang_vacuum.html&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_vacuum&quot;&gt;lang_vacuum.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d881dae8fea8469aae36dd2ee790aadd7154e19f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11284ab305581840484673ba82b0814730899f19" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_with&quot;&gt;lang_with.html&lt;/a&gt;&lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html#recursivecte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb5bc217d7c409f9004989bbcff9c4c5cf371c2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html#recursivecte&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;lang_with#recursivecte&quot;&gt;lang_with.html # recursivecte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa9202aad9353cf3bd304d5cebf941f8826269aa" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;libversion&quot;&gt;sqlite3_libversion()&lt;/a&gt;, &lt;a href=&quot;libversion&quot;&gt;sqlite3_libversion_number()&lt;/a&gt;, &lt;a href=&quot;libversion&quot;&gt;sqlite3_sourceid()&lt;/a&gt;, &lt;a href=&quot;../lang_corefunc#sqlite_version&quot;&gt;sqlite_version()&lt;/a&gt; and &lt;a href=&quot;../lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;libversion&quot;&gt;sqlite3_libversion ()&lt;/a&gt; , &lt;a href=&quot;libversion&quot;&gt;sqlite3_libversion_number ()&lt;/a&gt; , &lt;a href=&quot;libversion&quot;&gt;sqlite3_sourceid ()&lt;/a&gt; , &lt;a href=&quot;../lang_corefunc#sqlite_version&quot;&gt;sqlite_version ()&lt;/a&gt; и &lt;a href=&quot;../lang_corefunc#sqlite_source_id&quot;&gt;sqlite_source_id ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59473a97c323cc840c551bb609b5c7d0085ba6eb" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;mutex_held&quot;&gt;sqlite3_mutex_held()&lt;/a&gt; and &lt;a href=&quot;mutex_held&quot;&gt;sqlite3_mutex_notheld()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;mutex_held&quot;&gt;sqlite3_mutex_held ()&lt;/a&gt; и &lt;a href=&quot;mutex_held&quot;&gt;sqlite3_mutex_notheld ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="630f877a63f0639718e0dd30c5ba43ed3ce847e4" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep&lt;/a&gt;, &lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal&lt;/a&gt;, &lt;a href=&quot;opcode#Function&quot;&gt;Function&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32027cc4318d132c8299361aadd44d5d68a5d39" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep&lt;/a&gt;, &lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal&lt;/a&gt;, &lt;a href=&quot;opcode#PureFunc&quot;&gt;PureFunc&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4db38cc313bd0bbfdf49c1b12a83a1dee3351e3" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Clear&quot;&gt;Clear&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#Clear&quot;&gt;Очистить&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5545504df0c88112cd5943b39942072e292d1b27" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Destroy&quot;&gt;Destroy&lt;/a&gt;</source>
          <target state="translated">Также: &lt;a href=&quot;opcode#Destroy&quot;&gt;Уничтожить&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20c38d168152c392bc03b5b47997e5daa1c0d099" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#EndCoroutine&quot;&gt;EndCoroutine&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#EndCoroutine&quot;&gt;EndCoroutine&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08083583312e5bf15079e8c8852f8fa2944302ac" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotExists&quot;&gt;NotExists&lt;/a&gt;, &lt;a href=&quot;opcode#NoConflict&quot;&gt;NoConflict&lt;/a&gt;, &lt;a href=&quot;opcode#IfNoHope&quot;&gt;IfNoHope&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#Found&quot;&gt;Найдено&lt;/a&gt; , &lt;a href=&quot;opcode#NotExists&quot;&gt;NotExists&lt;/a&gt; , &lt;a href=&quot;opcode#NoConflict&quot;&gt;NoConflict&lt;/a&gt; , &lt;a href=&quot;opcode#IfNoHope&quot;&gt;IfNoHope.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="728b62ca2d8ad20f62ae93f93571e44c2d32c79b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, &lt;a href=&quot;opcode#NoConflict&quot;&gt;NoConflict&lt;/a&gt;, &lt;a href=&quot;opcode#SeekRowid&quot;&gt;SeekRowid&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt; , &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt; , &lt;a href=&quot;opcode#NoConflict&quot;&gt;NoConflict&lt;/a&gt; , &lt;a href=&quot;opcode#SeekRowid&quot;&gt;SeekRowid&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1fd951d3cf17be16c77767dc1e177d397520dea6" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, SeekGt, SeekGe, SeekLe</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt; , &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt; , SeekGt, SeekGe, SeekLe</target>
        </trans-unit>
        <trans-unit id="d6d2c334da88e15e756581a4f59c5b04ba796944" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, SeekGt, SeekGe, SeekLt</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt; , &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt; , SeekGt, SeekGe, SeekLt</target>
        </trans-unit>
        <trans-unit id="463d18a76e981873861ffff7fe5e29e0c6efda87" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, SeekLt, SeekGe, SeekLe</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt; , &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt; , SeekLt, SeekGe, SeekLe</target>
        </trans-unit>
        <trans-unit id="5e40d5e71843bb61f4bcfed5badcd97abfd6de6d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, SeekLt, SeekGt, SeekLe</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt; , &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt; , SeekLt, SeekGt, SeekLe</target>
        </trans-unit>
        <trans-unit id="a7f677a2db2a47580eeed83b42a807730b2d65e8" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Function&quot;&gt;Function&lt;/a&gt;, &lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep&lt;/a&gt;, &lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#Function&quot;&gt;Function&lt;/a&gt; , &lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep&lt;/a&gt; , &lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3e78d904f537e5ecc229d2e4161074c489fc983" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Function0&quot;&gt;Function0&lt;/a&gt;, &lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep&lt;/a&gt;, &lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#Function0&quot;&gt;Function0&lt;/a&gt; , &lt;a href=&quot;opcode#AggStep&quot;&gt;AggStep&lt;/a&gt; , &lt;a href=&quot;opcode#AggFinal&quot;&gt;AggFinal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27fe557b8f91eb0f3354ec57fe69933ee8436f35" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#InitCoroutine&quot;&gt;InitCoroutine&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#InitCoroutine&quot;&gt;InitCoroutine&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cea6a531330c212ca3ca25d87fa43558d171705c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt;, &lt;a href=&quot;opcode#NotExists&quot;&gt;NotExists&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt; , &lt;a href=&quot;opcode#Found&quot;&gt;Found&lt;/a&gt; , &lt;a href=&quot;opcode#NotExists&quot;&gt;NotExists&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab8929f50dfeea96d663b01dc70be8c6ea741b4c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, &lt;a href=&quot;opcode#NoConflict&quot;&gt;NoConflict&lt;/a&gt;, &lt;a href=&quot;opcode#NotExists&quot;&gt;NotExists&lt;/a&gt;. SeekGe</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt; , &lt;a href=&quot;opcode#NoConflict&quot;&gt;NoConflict&lt;/a&gt; , &lt;a href=&quot;opcode#NotExists&quot;&gt;NotExists&lt;/a&gt; . SeekGe</target>
        </trans-unit>
        <trans-unit id="df9b249fadb76a9e89f33c8e160d939f3e2edb65" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt;, &lt;a href=&quot;opcode#SeekHit&quot;&gt;SeekHit&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#NotFound&quot;&gt;NotFound&lt;/a&gt; , &lt;a href=&quot;opcode#SeekHit&quot;&gt;SeekHit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77125e42082bd4063983bc366f2a58ec8989ce3d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#OpenRead&quot;&gt;OpenRead&lt;/a&gt;, &lt;a href=&quot;opcode#OpenWrite&quot;&gt;OpenWrite&lt;/a&gt;</source>
          <target state="translated">Смотрите также: &lt;a href=&quot;opcode#OpenRead&quot;&gt;OpenRead&lt;/a&gt; , &lt;a href=&quot;opcode#OpenWrite&quot;&gt;OpenWrite&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42804456c026cdba0e420c9f8f25e7f6180f2cc2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#OpenRead&quot;&gt;OpenRead&lt;/a&gt;, &lt;a href=&quot;opcode#ReopenIdx&quot;&gt;ReopenIdx&lt;/a&gt;</source>
          <target state="translated">Смотрите также: &lt;a href=&quot;opcode#OpenRead&quot;&gt;OpenRead&lt;/a&gt; , &lt;a href=&quot;opcode#ReopenIdx&quot;&gt;ReopenIdx&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="585491e299c7017859c50fd2fe8c2f25dc1e9732" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#OpenWrite&quot;&gt;OpenWrite&lt;/a&gt;, &lt;a href=&quot;opcode#ReopenIdx&quot;&gt;ReopenIdx&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#OpenWrite&quot;&gt;OpenWrite&lt;/a&gt; , &lt;a href=&quot;opcode#ReopenIdx&quot;&gt;ReopenIdx&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4168a3bf16312be37846589fb27785a113af6811" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Prev&quot;&gt;Prev&lt;/a&gt;</source>
          <target state="translated">Смотрите также: &lt;a href=&quot;opcode#Prev&quot;&gt;Пред.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c516f46aa712315eea6584868cd627c02de7056" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;opcode#Rowid&quot;&gt;Rowid&lt;/a&gt;, &lt;a href=&quot;opcode#MakeRecord&quot;&gt;MakeRecord&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;opcode#Rowid&quot;&gt;Rowid&lt;/a&gt; , &lt;a href=&quot;opcode#MakeRecord&quot;&gt;MakeRecord&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f01472d4da0f8e936c195c67175f791d08d0adbf" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;pragma#pragma_busy_timeout&quot;&gt;PRAGMA busy_timeout&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;pragma#pragma_busy_timeout&quot;&gt;PRAGMA busy_timeout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d54723288e675ac0abb24e0dd779375fca23df6b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;pragma#pragma_table_xinfo&quot;&gt;PRAGMA table_xinfo&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;pragma#pragma_table_xinfo&quot;&gt;PRAGMA table_xinfo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfa2363ed594f2b2eede2b270349dfc67d7ebc18" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;pragma#syntax&quot;&gt;pragma.html#syntax&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;pragma#syntax&quot;&gt;pragma.html # syntax.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a4951221a904acb6ba86986765efc2037a09378" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;printf&quot;&gt;built-in printf()&lt;/a&gt;, &lt;a href=&quot;lang_corefunc#printf&quot;&gt;printf() SQL function&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;printf&quot;&gt;встроенная &lt;/a&gt;&lt;a href=&quot;lang_corefunc#printf&quot;&gt;функция SQL &lt;/a&gt;printf () , printf ()</target>
        </trans-unit>
        <trans-unit id="99bd38c265a6fb23dc830f7fe8c080eded5d7a07" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;release_memory&quot;&gt;sqlite3_release_memory()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;release_memory&quot;&gt;sqlite3_release_memory ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98b434bc0d8b8d185283486c42d9be672854146f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;rescode#busy_recovery&quot;&gt;SQLITE_BUSY_RECOVERY&lt;/a&gt; and &lt;a href=&quot;rescode#busy_snapshot&quot;&gt;SQLITE_BUSY_SNAPSHOT&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;rescode#busy_recovery&quot;&gt;SQLITE_BUSY_RECOVERY&lt;/a&gt; и &lt;a href=&quot;rescode#busy_snapshot&quot;&gt;SQLITE_BUSY_SNAPSHOT&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7299f9082103db8b34938e68ec91bd133f202916" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;reset_auto_extension&quot;&gt;sqlite3_reset_auto_extension()&lt;/a&gt; and &lt;a href=&quot;cancel_auto_extension&quot;&gt;sqlite3_cancel_auto_extension()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;reset_auto_extension&quot;&gt;sqlite3_reset_auto_extension ()&lt;/a&gt; и &lt;a href=&quot;cancel_auto_extension&quot;&gt;sqlite3_cancel_auto_extension ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa3c9ecf5456096c4af70cc1a45db8215c53ecad" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;status&quot;&gt;sqlite3_status()&lt;/a&gt; and &lt;a href=&quot;db_status&quot;&gt;sqlite3_db_status()&lt;/a&gt;.</source>
          <target state="translated">Смотрите также &lt;a href=&quot;status&quot;&gt;sqlite3_status ()&lt;/a&gt; и &lt;a href=&quot;db_status&quot;&gt;sqlite3_db_status ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81c9581d614ee93295a05913a13ce83a1c537800" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;status&quot;&gt;sqlite3_status()&lt;/a&gt; and &lt;a href=&quot;stmt_status&quot;&gt;sqlite3_stmt_status()&lt;/a&gt;.</source>
          <target state="translated">См. Также: &lt;a href=&quot;status&quot;&gt;sqlite3_status ()&lt;/a&gt; и &lt;a href=&quot;stmt_status&quot;&gt;sqlite3_stmt_status ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51bddd2f47aedb88c82ed00196f1d5f18d63b931" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;stmt_scanstatus_reset&quot;&gt;sqlite3_stmt_scanstatus_reset()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;stmt_scanstatus_reset&quot;&gt;sqlite3_stmt_scanstatus_reset ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5f9c8eaf62fde3d86c43f634a7ab02bd2fa6122" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;strglob&quot;&gt;sqlite3_strglob()&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;strglob&quot;&gt;sqlite3_strglob ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0933bf0a406419507f269f3297ab20733c0130b5" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;strlike&quot;&gt;sqlite3_strlike()&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;strlike&quot;&gt;sqlite3_strlike ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="673270029c9264ee605b8c3d4c2fd772ac5ed2ec" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;temp_directory&quot;&gt;sqlite3_temp_directory&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;temp_directory&quot;&gt;sqlite3_temp_directory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7a6a573f1a49c137144c2c0c0b973878be6af5b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;update_hook&quot;&gt;sqlite3_update_hook()&lt;/a&gt;</source>
          <target state="translated">См. Также: &lt;a href=&quot;update_hook&quot;&gt;sqlite3_update_hook ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b9de33ebd0cee270413e31ceb4bf9982bf25845" translate="yes" xml:space="preserve">
          <source>See also: SQL functions &lt;a href=&quot;../lang_corefunc#sqlite_compileoption_used&quot;&gt;sqlite_compileoption_used()&lt;/a&gt; and &lt;a href=&quot;../lang_corefunc#sqlite_compileoption_get&quot;&gt;sqlite_compileoption_get()&lt;/a&gt; and the &lt;a href=&quot;../pragma#pragma_compile_options&quot;&gt;compile_options pragma&lt;/a&gt;.</source>
          <target state="translated">См. Также: функции SQL &lt;a href=&quot;../lang_corefunc#sqlite_compileoption_used&quot;&gt;sqlite_compileoption_used ()&lt;/a&gt; и &lt;a href=&quot;../lang_corefunc#sqlite_compileoption_get&quot;&gt;sqlite_compileoption_get ()&lt;/a&gt; и &lt;a href=&quot;../pragma#pragma_compile_options&quot;&gt;прагму compile_options&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83dccf87582bc1362c408c238feac4693c82e492" translate="yes" xml:space="preserve">
          <source>See also: SQL functions &lt;a href=&quot;lang_corefunc#sqlite_compileoption_used&quot;&gt;sqlite_compileoption_used()&lt;/a&gt; and &lt;a href=&quot;lang_corefunc#sqlite_compileoption_get&quot;&gt;sqlite_compileoption_get()&lt;/a&gt; and the &lt;a href=&quot;pragma#pragma_compile_options&quot;&gt;compile_options pragma&lt;/a&gt;.</source>
          <target state="translated">См. Также: функции SQL &lt;a href=&quot;lang_corefunc#sqlite_compileoption_used&quot;&gt;sqlite_compileoption_used ()&lt;/a&gt; и &lt;a href=&quot;lang_corefunc#sqlite_compileoption_get&quot;&gt;sqlite_compileoption_get ()&lt;/a&gt; и &lt;a href=&quot;pragma#pragma_compile_options&quot;&gt;прагму compile_options&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61cca4e5d339d369ec47f24cb61df5080a8fe143" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../threadsafe&quot;&gt;threading mode&lt;/a&gt; documentation for additional information.</source>
          <target state="translated">Смотрите в &lt;a href=&quot;../threadsafe&quot;&gt;режиме поточной&lt;/a&gt; документации для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="6f095aa19ffa800ceddf0ec91e83f4521ad7e3e5" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../uri&quot;&gt;URI filename&lt;/a&gt; documentation for additional information.</source>
          <target state="translated">Смотрите &lt;a href=&quot;../uri&quot;&gt;имя файла URI&lt;/a&gt; документации для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="14bd56e01493d3e179ad29ee876d123ae68f7d39" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;assert&quot;&gt;Use Of assert in SQLite&lt;/a&gt; document for additional information about how SQLite uses assert().</source>
          <target state="translated">См. &lt;a href=&quot;assert&quot;&gt;В&lt;/a&gt; документе Использование assert в SQLite дополнительную информацию о том, как SQLite использует assert ().</target>
        </trans-unit>
        <trans-unit id="b7c31bb847b7fb9dd4bac9cc5dd5dc1c96846800" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;autoinc&quot;&gt;SQLite AUTOINCREMENT documentation&lt;/a&gt; for detailed instructions on what AUTOINCREMENT does and does not do in SQLite.</source>
          <target state="translated">См. &lt;a href=&quot;autoinc&quot;&gt;Документацию SQLite AUTOINCREMENT&lt;/a&gt; для получения подробных инструкций о том, что AUTOINCREMENT делает и не делает в SQLite.</target>
        </trans-unit>
        <trans-unit id="53b783989abda8014ea3d71299fadcaac3ac76a4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;datatype3&quot;&gt;Datatypes in SQLite Version 3&lt;/a&gt; document for a detailed discussion of the type system in SQLite.</source>
          <target state="translated">См. Документ &amp;laquo; &lt;a href=&quot;datatype3&quot;&gt;Типы данных в SQLite версии 3&amp;raquo;&lt;/a&gt; для подробного обсуждения системы типов в SQLite.</target>
        </trans-unit>
        <trans-unit id="b929f22f98901beb9b1139bf55e5ff321f37875f" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;howtocompile&quot;&gt;How To Compile SQLite&lt;/a&gt; document for instructions and hints on how to compile the program shown above.</source>
          <target state="translated">См. Документ &amp;laquo;Как компилировать &lt;a href=&quot;howtocompile&quot;&gt;SQLite&amp;raquo;&lt;/a&gt; для получения инструкций и советов о том, как скомпилировать программу, показанную выше.</target>
        </trans-unit>
        <trans-unit id="d23d8904a4dd8b2f59b61ec1f1d5eb8f80e47737" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;threadsafe&quot;&gt;threading mode&lt;/a&gt; documentation for additional information on aspects of using SQLite in a multithreaded environment.</source>
          <target state="translated">Смотрите в &lt;a href=&quot;threadsafe&quot;&gt;режиме поточной&lt;/a&gt; документацию для получения дополнительной информации по различным аспектам использования SQLite в многопоточной среде.</target>
        </trans-unit>
        <trans-unit id="a87fd9fe2045f5442c46fbc8912602fdbac0e8ba" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;threadsafe&quot;&gt;threading mode&lt;/a&gt; documentation for additional information.</source>
          <target state="translated">Смотрите в &lt;a href=&quot;threadsafe&quot;&gt;режиме поточной&lt;/a&gt; документации для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="30f1bf85315b67413bef1d018f3d407e1c5b8c20" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;uri&quot;&gt;URI filename&lt;/a&gt; documentation for additional information.</source>
          <target state="translated">Смотрите &lt;a href=&quot;uri&quot;&gt;имя файла URI&lt;/a&gt; документации для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="86902a781e00345ab7ead57f5c2f261448269986" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;vtablist&quot;&gt;list of virtual tables&lt;/a&gt; page for a longer list of actual virtual table implementations.</source>
          <target state="translated">См. Страницу со &lt;a href=&quot;vtablist&quot;&gt;списком виртуальных таблиц&lt;/a&gt; для более подробного списка фактических реализаций виртуальных таблиц.</target>
        </trans-unit>
        <trans-unit id="bd6efac597cb0708970fe4961b56a3edc46475fe" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;whentouse&quot;&gt;Appropriate Uses For SQLite&lt;/a&gt; document for additional information.</source>
          <target state="translated">Дополнительную информацию см. В документе &amp;laquo; &lt;a href=&quot;whentouse&quot;&gt;Соответствующее использование для SQLite&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07ba693c1bca5dde244a27275e6109ebcc9602e4" translate="yes" xml:space="preserve">
          <source>See the separate &lt;a href=&quot;lang_upsert&quot;&gt;UPSERT&lt;/a&gt; documentation for the additional trailing syntax that can cause an INSERT to behave as an UPDATE if the INSERT would otherwise violate a uniqueness constraint. The &lt;a href=&quot;lang_upsert&quot;&gt;upsert clause&lt;/a&gt; is not allowed on an &quot;INSERT ... DEFAULT VALUES&quot;.</source>
          <target state="translated">Смотрите отдельную &lt;a href=&quot;lang_upsert&quot;&gt;UPSERT&lt;/a&gt; документацию для дополнительного завершающим синтаксиса , который может привести к ВСТАВИТЬ вести себя как UPDATE , если INSERT иначе нарушают ограничение уникальности. Предложение &lt;a href=&quot;lang_upsert&quot;&gt;upsert&lt;/a&gt; недопустимо для &quot;INSERT ... DEFAULT VALUES&quot;.</target>
        </trans-unit>
        <trans-unit id="939683e9d52824a9f73508cf71bd83e60abff90a" translate="yes" xml:space="preserve">
          <source>See xPhraseFirst above.</source>
          <target state="translated">См.выше xPhraseFirst.</target>
        </trans-unit>
        <trans-unit id="4a932238dbfaf0b21024ff5809159c0de781840d" translate="yes" xml:space="preserve">
          <source>See xPhraseFirstColumn above.</source>
          <target state="translated">См.выше xPhraseFirstColumn.</target>
        </trans-unit>
        <trans-unit id="9f853fa8d7ff147b89090825d00dc78b2f44a321" translate="yes" xml:space="preserve">
          <source>SeekEnd</source>
          <target state="translated">SeekEnd</target>
        </trans-unit>
        <trans-unit id="9fadfc9b512132149df920b10f206da2333bd9fa" translate="yes" xml:space="preserve">
          <source>SeekGE</source>
          <target state="translated">SeekGE</target>
        </trans-unit>
        <trans-unit id="1087f36e7b18281af36dad7cdbb8cd08b7115d15" translate="yes" xml:space="preserve">
          <source>SeekGT</source>
          <target state="translated">SeekGT</target>
        </trans-unit>
        <trans-unit id="460ea4a32fd1274da2db98168e01568ac9ce63a6" translate="yes" xml:space="preserve">
          <source>SeekHit</source>
          <target state="translated">SeekHit</target>
        </trans-unit>
        <trans-unit id="0b4f0d008f842f314db6efb3fa8c1e4f9ad7e37b" translate="yes" xml:space="preserve">
          <source>SeekLE</source>
          <target state="translated">SeekLE</target>
        </trans-unit>
        <trans-unit id="5c9e6758b219b2706a95d7da88c60ef0eba6fe03" translate="yes" xml:space="preserve">
          <source>SeekLT</source>
          <target state="translated">SeekLT</target>
        </trans-unit>
        <trans-unit id="141e7ed653901b0f647fda720472fc6667150f0c" translate="yes" xml:space="preserve">
          <source>SeekRowid</source>
          <target state="translated">SeekRowid</target>
        </trans-unit>
        <trans-unit id="c6ed6b18512dd3401d381c337b03a01488f90762" translate="yes" xml:space="preserve">
          <source>Segment B-Tree Interior Node Format</source>
          <target state="translated">Формат узла интерьера сегмента B-дерева</target>
        </trans-unit>
        <trans-unit id="cc806c94f6fb1d331e8fb663d9d4f7e22793356b" translate="yes" xml:space="preserve">
          <source>Segment B-Tree Leaf Node Format</source>
          <target state="translated">Формат узла листа сегмента B-дерева</target>
        </trans-unit>
        <trans-unit id="fe4aff672a9c860addca0cf569e240d57055e4c7" translate="yes" xml:space="preserve">
          <source>Segment b-trees are prefix-compressed b+-trees. There is one segment b-tree for each row in the %_segdir table (see above). The root node of the segment b-tree is stored as a blob in the &quot;root&quot; field of the corresponding row of the %_segdir table. All other nodes (if any exist) are stored in the &quot;blob&quot; column of the %_segments table. Nodes within the %_segments table are identified by the integer value in the blockid field of the corresponding row. The following table describes the fields of the %_segdir table:</source>
          <target state="translated">Сегмент b-деревья-это деревья с префиксом b+.В таблице %_segdir для каждой строки имеется по одному b-дереву сегмента (см.выше).Корневой узел b-дерева сегмента хранится в виде блока в поле &quot;корень&quot; соответствующей строки таблицы %_segdir.Все остальные узлы (если таковые имеются)хранятся в столбце &quot;blob&quot; таблицы %_segdir.Узлы в таблице %_segments идентифицируются по целому значению в блоковом поле соответствующей строки.Следующая таблица описывает поля таблицы %_segdir:</target>
        </trans-unit>
        <trans-unit id="982d848bdbaf7ffda27f7d8aca752c82359ccf6f" translate="yes" xml:space="preserve">
          <source>Segment btree</source>
          <target state="translated">дерево сегмента</target>
        </trans-unit>
        <trans-unit id="40bf8b12088788ad70716eb1793e4cf249c09782" translate="yes" xml:space="preserve">
          <source>Separate INTEGER and REAL affinity</source>
          <target state="translated">Раздельное сродство INTEGER и REAL</target>
        </trans-unit>
        <trans-unit id="ba899678ef1e0fdd6b5eb799ee7abdd42cf175bf" translate="yes" xml:space="preserve">
          <source>Separating a database from its journal</source>
          <target state="translated">Отделение базы данных от ее журнала</target>
        </trans-unit>
        <trans-unit id="5c8f4e0e1a2281faf562976c2410f76c3d8fbc95" translate="yes" xml:space="preserve">
          <source>Sequence</source>
          <target state="translated">Sequence</target>
        </trans-unit>
        <trans-unit id="841936f1610c7b00e43fa53fbf75fb9b11abf32f" translate="yes" xml:space="preserve">
          <source>SequenceTest</source>
          <target state="translated">SequenceTest</target>
        </trans-unit>
        <trans-unit id="e12fccff7a8e896ad7cfa282736ffc4187cd7eaa" translate="yes" xml:space="preserve">
          <source>Serial Type</source>
          <target state="translated">Последовательный тип</target>
        </trans-unit>
        <trans-unit id="307ffd15fed4aa8193a8701f2970a48ccbc74bb4" translate="yes" xml:space="preserve">
          <source>Serial Type Codes Of The Record Format</source>
          <target state="translated">Коды последовательного типа формата записи</target>
        </trans-unit>
        <trans-unit id="b61faef97a33774dc6199c619a4461fc18672af3" translate="yes" xml:space="preserve">
          <source>Serial type</source>
          <target state="translated">Последовательный тип</target>
        </trans-unit>
        <trans-unit id="44bc81d8890afcfb324491bf1c0f95cb6563d3cc" translate="yes" xml:space="preserve">
          <source>Serialize a database</source>
          <target state="translated">Сериализовать базу данных</target>
        </trans-unit>
        <trans-unit id="90c4f08f792523112df74bc852026385bd4f8127" translate="yes" xml:space="preserve">
          <source>Session Object Handle</source>
          <target state="translated">Объектная ручка сеанса</target>
        </trans-unit>
        <trans-unit id="67e2e54aa75dbe4ba2529dc4e44d334d5c33427e" translate="yes" xml:space="preserve">
          <source>Session objects created using this function should be deleted using the &lt;a href=&quot;#sqlite3session_delete&quot;&gt;sqlite3session_delete()&lt;/a&gt; function before the database handle that they are attached to is itself closed. If the database handle is closed before the session object is deleted, then the results of calling any session module function, including &lt;a href=&quot;#sqlite3session_delete&quot;&gt;sqlite3session_delete()&lt;/a&gt; on the session object are undefined.</source>
          <target state="translated">Объекты сеанса, созданные с помощью этой функции, должны быть удалены с помощью функции &lt;a href=&quot;#sqlite3session_delete&quot;&gt;sqlite3session_delete ()&lt;/a&gt; до того, как дескриптор базы данных, к которой они прикреплены, будет закрыт сам. Если дескриптор базы данных закрыт до удаления объекта сеанса, то результаты вызова любой функции модуля сеанса, включая &lt;a href=&quot;#sqlite3session_delete&quot;&gt;sqlite3session_delete ()&lt;/a&gt; для объекта сеанса, не определены.</target>
        </trans-unit>
        <trans-unit id="36d7089db75a5bb06f2dd690097a4896b0ce0449" translate="yes" xml:space="preserve">
          <source>Session objects created using this function should be deleted using the &lt;a href=&quot;sqlite3session_delete&quot;&gt;sqlite3session_delete()&lt;/a&gt; function before the database handle that they are attached to is itself closed. If the database handle is closed before the session object is deleted, then the results of calling any session module function, including &lt;a href=&quot;sqlite3session_delete&quot;&gt;sqlite3session_delete()&lt;/a&gt; on the session object are undefined.</source>
          <target state="translated">Объекты сеанса, созданные с помощью этой функции, должны быть удалены с помощью функции &lt;a href=&quot;sqlite3session_delete&quot;&gt;sqlite3session_delete ()&lt;/a&gt; до того, как дескриптор базы данных, к которой они прикреплены, будет закрыт сам. Если дескриптор базы данных закрыт до удаления объекта сеанса, то результаты вызова любой функции модуля сеанса, включая &lt;a href=&quot;sqlite3session_delete&quot;&gt;sqlite3session_delete ()&lt;/a&gt; для объекта сеанса, не определены.</target>
        </trans-unit>
        <trans-unit id="ea1b131b3c13e62fbcb2b7e1d8113240624fdfe2" translate="yes" xml:space="preserve">
          <source>Session objects must be deleted before the database handle to which they are attached is closed. Refer to the documentation for &lt;a href=&quot;#sqlite3session_create&quot;&gt;sqlite3session_create()&lt;/a&gt; for details.</source>
          <target state="translated">Объекты сеанса должны быть удалены до закрытия дескриптора базы данных, к которому они прикреплены. За подробностями обращайтесь к документации по &lt;a href=&quot;#sqlite3session_create&quot;&gt;sqlite3session_create ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a0df1e5a24e2b0c00b060a82e0a73f3246a4f51" translate="yes" xml:space="preserve">
          <source>Session objects must be deleted before the database handle to which they are attached is closed. Refer to the documentation for &lt;a href=&quot;sqlite3session_create&quot;&gt;sqlite3session_create()&lt;/a&gt; for details.</source>
          <target state="translated">Объекты сеанса должны быть удалены до закрытия дескриптора базы данных, к которому они прикреплены. За подробностями обращайтесь к документации по &lt;a href=&quot;sqlite3session_create&quot;&gt;sqlite3session_create ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6adb93a894674d02e091209977b242c152440ac9" translate="yes" xml:space="preserve">
          <source>Set *pnInst to the total number of occurrences of all phrases within the query within the current row. Return SQLITE_OK if successful, or an error code (i.e. SQLITE_NOMEM) if an error occurs.</source>
          <target state="translated">Установите *pnInst для общего числа вхождений всех фраз внутри запроса в текущей строке.Возвращает SQLITE_OK в случае успеха,или код ошибки (т.е.SQLITE_NOMEM)в случае возникновения ошибки.</target>
        </trans-unit>
        <trans-unit id="efdec671fc0ce8bcb4bdb00d3f437085821cf12c" translate="yes" xml:space="preserve">
          <source>Set A Busy Timeout</source>
          <target state="translated">Установить тайм-аут</target>
        </trans-unit>
        <trans-unit id="b1a0dded912756ecf2b97f232c897007421fbf5d" translate="yes" xml:space="preserve">
          <source>Set Or Clear the Indirect Change Flag</source>
          <target state="translated">Установите или снимите флаг косвенного изменения</target>
        </trans-unit>
        <trans-unit id="3a493136e0eeea58ea401cab071add271017a5ae" translate="yes" xml:space="preserve">
          <source>Set a table filter on a Session Object</source>
          <target state="translated">Установить табличный фильтр на объект сеанса</target>
        </trans-unit>
        <trans-unit id="732b690730c3e6587386dab945ec7951b556c520" translate="yes" xml:space="preserve">
          <source>Set a table filter on a Session Object.</source>
          <target state="translated">Установите табличный фильтр на объект сеанса.</target>
        </trans-unit>
        <trans-unit id="1ac264a53518ed313b058a0a099912f2a35d826a" translate="yes" xml:space="preserve">
          <source>Set an upper bound on the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitworkerthreads&quot;&gt;SQLITE_LIMIT_WORKER_THREADS&lt;/a&gt;,N) setting that determines the maximum number of auxiliary threads that a single &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; will use to aid with CPU-intensive computations (mostly sorting). See also the &lt;a href=&quot;compile#default_worker_threads&quot;&gt;SQLITE_DEFAULT_WORKER_THREADS&lt;/a&gt; options.</source>
          <target state="translated">Установите верхнюю границу для параметра &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt; (db, &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitworkerthreads&quot;&gt;SQLITE_LIMIT_WORKER_THREADS&lt;/a&gt; , N), который определяет максимальное количество вспомогательных потоков, которые один &lt;a href=&quot;c3ref/stmt&quot;&gt;подготовленный оператор&lt;/a&gt; будет использовать для помощи в вычислениях, интенсивно использующих ЦП (в основном, сортировка). См. Также параметры &lt;a href=&quot;compile#default_worker_threads&quot;&gt;SQLITE_DEFAULT_WORKER_THREADS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="92f46b19209e84ffdca742022b56dfdca2dfb583" translate="yes" xml:space="preserve">
          <source>Set register P1 to have the value NULL as seen by the &lt;a href=&quot;opcode#MakeRecord&quot;&gt;MakeRecord&lt;/a&gt; instruction, but do not free any string or blob memory associated with the register, so that if the value was a string or blob that was previously copied using &lt;a href=&quot;opcode#SCopy&quot;&gt;SCopy&lt;/a&gt;, the copies will continue to be valid.</source>
          <target state="translated">Задайте регистру P1 значение NULL, как видно из инструкции &lt;a href=&quot;opcode#MakeRecord&quot;&gt;MakeRecord&lt;/a&gt; , но не освобождает никакую строку или блоб-память, связанную с регистром, так что если значение было строкой или &lt;a href=&quot;opcode#SCopy&quot;&gt;большим двоичным объектом&lt;/a&gt; , который был ранее скопирован с помощью SCopy , копии будут продолжаться быть действительным.</target>
        </trans-unit>
        <trans-unit id="cd7e5b09719a46bb1ffbc4c18faade6d76d5478d" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt; flag. This prevents ordinary SQL statements from deliberately corrupting the database file. SQLite should be proof against attacks that involve both malicious SQL inputs and a maliciously corrupted database file at the same time. Nevertheless, denying a script-only attacker access to corrupt database inputs provides an extra layer of defense.</source>
          <target state="translated">Установите флаг &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt; . Это предотвращает умышленное повреждение файла базы данных обычными операторами SQL. SQLite должен быть защищен от атак, в которых одновременно используются как вредоносные входные данные SQL, так и вредоносный файл базы данных. Тем не менее, запрет злоумышленнику, использующему только сценарий, в доступе к поврежденным входным данным базы данных, обеспечивает дополнительный уровень защиты.</target>
        </trans-unit>
        <trans-unit id="241b76cbed3f5655045e8aff832d7f03205ef4fe" translate="yes" xml:space="preserve">
          <source>Set the Last Insert Rowid value</source>
          <target state="translated">Установите значение Last Insert Rowid (Последняя вставка в строку)</target>
        </trans-unit>
        <trans-unit id="3a9eaa4fc5302f500031c0b5a5700811aa0eb0fe" translate="yes" xml:space="preserve">
          <source>Set the Last Insert Rowid value.</source>
          <target state="translated">Установите значение Last Insert Rowid (Последняя вставка строки).</target>
        </trans-unit>
        <trans-unit id="5a5c894fd85a90ba517e62438c5aff9b40ab8cb2" translate="yes" xml:space="preserve">
          <source>Set the SQLITE_DBCONFIG_RESET_DATABASE flag and then run &lt;a href=&quot;../lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; in order to reset a database back to an empty database with no schema and no content. The following process works even for a badly corrupted database file:</source>
          <target state="translated">Установите флаг SQLITE_DBCONFIG_RESET_DATABASE, а затем запустите &lt;a href=&quot;../lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; , чтобы сбросить базу данных обратно в пустую базу данных без схемы и содержимого. Следующий процесс работает даже для сильно поврежденного файла базы данных:</target>
        </trans-unit>
        <trans-unit id="5453fe3bee790f9b36f9a933f54e5899bdab502e" translate="yes" xml:space="preserve">
          <source>Set the SQLITE_DBCONFIG_RESET_DATABASE flag and then run &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; in order to reset a database back to an empty database with no schema and no content. The following process works even for a badly corrupted database file:</source>
          <target state="translated">Установите флаг SQLITE_DBCONFIG_RESET_DATABASE, а затем запустите &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; , чтобы сбросить базу данных обратно в пустую базу данных без схемы и содержимого. Следующий процесс работает даже для сильно поврежденного файла базы данных:</target>
        </trans-unit>
        <trans-unit id="61c4c40f9a1bb5c18ccdd11c74e4b4fffa0d66f4" translate="yes" xml:space="preserve">
          <source>Set the database auto-commit flag to P1 (1 or 0). If P2 is true, roll back any currently active btree transactions. If there are any active VMs (apart from this one), then a ROLLBACK fails. A COMMIT fails if there are active writing VMs or active VMs that use shared cache.</source>
          <target state="translated">Установите флаг автокоррекции базы данных в P1 (1 или 0).Если P2 равен true,откатите все активные в данный момент транзакции btree.Если есть активные ВМ (кроме этой),то ROLLBACK не работает.COMMIT дает сбой,если есть активные ВМ или активные ВМ,использующие общий кэш.</target>
        </trans-unit>
        <trans-unit id="d6cb86bbec6abe009ef2b13054a8bf71fb971e51" translate="yes" xml:space="preserve">
          <source>Set the default size limit (in bytes) for in-memory databases created using &lt;a href=&quot;c3ref/deserialize&quot;&gt;sqlite3_deserialize()&lt;/a&gt;. This is just the default. The limit can be changed at start-time using &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config&lt;/a&gt;(&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmemdbmaxsize&quot;&gt;SQLITE_CONFIG_MEMDB_MAXSIZE&lt;/a&gt;,N) or at run-time for individual databases using the &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlsizelimit&quot;&gt;SQLITE_FCNTL_SIZE_LIMIT&lt;/a&gt;&lt;a href=&quot;c3ref/file_control&quot;&gt;file-control&lt;/a&gt;. If no default is specified, 1073741824 is used.</source>
          <target state="translated">Установите ограничение размера по умолчанию (в байтах) для баз данных в памяти, созданных с помощью &lt;a href=&quot;c3ref/deserialize&quot;&gt;sqlite3_deserialize ()&lt;/a&gt; . Это просто значение по умолчанию. Предел можно изменить во время запуска с помощью &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config&lt;/a&gt; ( &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmemdbmaxsize&quot;&gt;SQLITE_CONFIG_MEMDB_MAXSIZE&lt;/a&gt; , N) или во время выполнения для отдельных баз данных с помощью &lt;a href=&quot;c3ref/c_fcntl_begin_atomic_write#sqlitefcntlsizelimit&quot;&gt;файлового элемента &lt;/a&gt;&lt;a href=&quot;c3ref/file_control&quot;&gt;управления &lt;/a&gt;SQLITE_FCNTL_SIZE_LIMIT . Если значение по умолчанию не указано, используется 1073741824.</target>
        </trans-unit>
        <trans-unit id="866d8eaf3728a827f036375926469bd93bf88bea" translate="yes" xml:space="preserve">
          <source>Set the permutation used by the &lt;a href=&quot;opcode#Compare&quot;&gt;Compare&lt;/a&gt; operator in the next instruction. The permutation is stored in the P4 operand.</source>
          <target state="translated">Задайте перестановку, используемую оператором &lt;a href=&quot;opcode#Compare&quot;&gt;сравнения&lt;/a&gt; в следующей инструкции. Перестановка сохраняется в операнде P4.</target>
        </trans-unit>
        <trans-unit id="ffc497dd2e0254996f63fed1801e825a18a0d70e" translate="yes" xml:space="preserve">
          <source>Set the seekHit flag on cursor P1 to the value in P2. The seekHit flag is used by the &lt;a href=&quot;opcode#IfNoHope&quot;&gt;IfNoHope&lt;/a&gt; opcode.</source>
          <target state="translated">Установите флаг seekHit на курсоре P1 на значение P2. Флаг seekHit используется &lt;a href=&quot;opcode#IfNoHope&quot;&gt;кодом&lt;/a&gt; операции IfNoHope .</target>
        </trans-unit>
        <trans-unit id="f917c903736a886e2bae7dda91eb93f9fc5b88f2" translate="yes" xml:space="preserve">
          <source>Set up a process-wide &lt;a href=&quot;errlog&quot;&gt;error log&lt;/a&gt;.</source>
          <target state="translated">Настройте &lt;a href=&quot;errlog&quot;&gt;журнал ошибок&lt;/a&gt; всего процесса .</target>
        </trans-unit>
        <trans-unit id="f899229bce65615b9a9aafe730afb3055fc1d664" translate="yes" xml:space="preserve">
          <source>Set up register P1 so that it will &lt;a href=&quot;opcode#Yield&quot;&gt;Yield&lt;/a&gt; to the coroutine located at address P3.</source>
          <target state="translated">Настройте регистр P1 так, чтобы он &lt;a href=&quot;opcode#Yield&quot;&gt;подчинялся&lt;/a&gt; сопрограмме, расположенной по адресу P3.</target>
        </trans-unit>
        <trans-unit id="c422fe10a5573aa6ba7e50d9c77e20ca08878af0" translate="yes" xml:space="preserve">
          <source>SetCookie</source>
          <target state="translated">SetCookie</target>
        </trans-unit>
        <trans-unit id="01b3682b02999bc0d6273ad2e8a1ce7b60079442" translate="yes" xml:space="preserve">
          <source>Sets the &quot;fired&quot; flag to true.</source>
          <target state="translated">Устанавливает флаг &quot;выстрел&quot; на правду.</target>
        </trans-unit>
        <trans-unit id="5f1906e535428a6ef107759522f33ae96d47ce23" translate="yes" xml:space="preserve">
          <source>Sets the default size of the &lt;a href=&quot;malloc#lookaside&quot;&gt;lookaside memory allocator&lt;/a&gt; memory pool to N entries of SZ bytes each. This setting can be modified at start-time using &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config&lt;/a&gt;(&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglookaside&quot;&gt;SQLITE_CONFIG_LOOKASIDE&lt;/a&gt;) and/or as each &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; is opened using &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config&lt;/a&gt;(db, &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfiglookaside&quot;&gt;SQLITE_DBCONFIG_LOOKASIDE&lt;/a&gt;).</source>
          <target state="translated">Устанавливает размер пула &lt;a href=&quot;malloc#lookaside&quot;&gt;памяти внешнего распределителя&lt;/a&gt; памяти по умолчанию равным N записям по SZ байтов каждая. Этот параметр можно изменить во время запуска с помощью &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config&lt;/a&gt; ( &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglookaside&quot;&gt;SQLITE_CONFIG_LOOKASIDE&lt;/a&gt; ) и / или при открытии каждого &lt;a href=&quot;c3ref/sqlite3&quot;&gt;соединения с базой данных&lt;/a&gt; с помощью &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config&lt;/a&gt; (db, &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfiglookaside&quot;&gt;SQLITE_DBCONFIG_LOOKASIDE&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f8f949c67297579c935535017d3f831289e19ac6" translate="yes" xml:space="preserve">
          <source>Setting &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous=OFF&lt;/a&gt; can cause the database to go corrupt if there is an operating-system crash or power failure, though this setting is safe from damage due to application crashes.</source>
          <target state="translated">Установка &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous = OFF&lt;/a&gt; может привести к повреждению базы данных в случае сбоя операционной системы или сбоя питания, хотя этот параметр безопасен от повреждения из-за сбоев приложения.</target>
        </trans-unit>
        <trans-unit id="aefdd1b85748c7d4a0d551399e2edc72cd30afa6" translate="yes" xml:space="preserve">
          <source>Setting &lt;a href=&quot;pragma#pragma_writable_schema&quot;&gt;PRAGMA writable_schema=ON&lt;/a&gt; and then changing the database schema using DML statements can render the database completely unreadable, if not done carefully.</source>
          <target state="translated">Установка &lt;a href=&quot;pragma#pragma_writable_schema&quot;&gt;PRAGMA Writable_schema = ON&lt;/a&gt; и последующее изменение схемы базы данных с помощью операторов DML может сделать базу данных полностью нечитаемой, если не сделать это осторожно.</target>
        </trans-unit>
        <trans-unit id="3fa000f3c0976d971f291c1208857c79532870ca" translate="yes" xml:space="preserve">
          <source>Setting The Result Of An SQL Function</source>
          <target state="translated">Установка результата функции SQL</target>
        </trans-unit>
        <trans-unit id="1d4603c6597b76da3d906d68cccdecf5180cbe08" translate="yes" xml:space="preserve">
          <source>Setting The Subtype Of An SQL Function</source>
          <target state="translated">Установка подтипа функции SQL</target>
        </trans-unit>
        <trans-unit id="16955fa7b436cf8874edb738f171a4d0ef509182" translate="yes" xml:space="preserve">
          <source>Setting fullfsync on a Mac will guarantee that data really does get pushed out to the disk platter on a flush. But the implementation of fullfsync involves resetting the disk controller. And so not only is it profoundly slow, it also slows down other unrelated disk I/O. So its use is not recommended.</source>
          <target state="translated">Установка fullfsync на Mac гарантирует,что данные действительно будут выталкиваться на дисковую тарелку с флеша.Но реализация fullfsync предполагает сброс контроллера диска.И поэтому он не только работает очень медленно,но и замедляет другие несвязанные дисковые входы/выходы.Поэтому его использование не рекомендуется.</target>
        </trans-unit>
        <trans-unit id="3eaa36d1b6e824ce1fa2d9dd603bd95da85fa485" translate="yes" xml:space="preserve">
          <source>Setting the automerge parameter to a non-zero value enables automatic incremental merging. This causes SQLite to do a small amount of inverted index merging after every INSERT operation. The amount of merging performed is designed so that the FTS3/4 table never reaches a point where it has 16 segments at the same level and hence has to do a large merge in order to complete an insert. In other words, automatic incremental merging is designed to prevent spiky INSERT performance.</source>
          <target state="translated">Установка параметра автоматики на ненулевое значение позволяет осуществлять автоматическое инкрементальное слияние.Это приводит к тому,что SQLite после каждой операции INSERT выполняет небольшое слияние инвертированных индексов.Количество выполненных слияний рассчитано таким образом,что таблица FTS3/4 никогда не достигает точки,когда она имеет 16 сегментов на одном уровне,и поэтому для завершения вставки необходимо выполнить большое слияние.Другими словами,автоматическое инкрементальное слияние спроектировано таким образом,чтобы предотвратить резкое повышение производительности INSERT.</target>
        </trans-unit>
        <trans-unit id="56f5ba775f4860afdbeef1efdf08d68cd3228bad" translate="yes" xml:space="preserve">
          <source>Setting the heap limits to zero disables the heap limiter mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d964c814943dd4cc633ef0ee8d21d48eb3735ca0" translate="yes" xml:space="preserve">
          <source>Setting this compile-time option prevents SQLite from being fully testable. Branch test coverage drops from 100% down to about 95%.</source>
          <target state="translated">Установка этого параметра времени компиляции не позволяет SQLite быть полностью тестируемым.Покрытие тестовой ветви снижается со 100% до 95%.</target>
        </trans-unit>
        <trans-unit id="00f0e8d6420ed50a38c6973317964bc318233512" translate="yes" xml:space="preserve">
          <source>Several new C-level objects are used by the virtual table implementation:</source>
          <target state="translated">При реализации виртуальной таблицы используется несколько новых объектов C-уровня:</target>
        </trans-unit>
        <trans-unit id="1b7d1cf980e975f4a1d8be50f6af0bb46a6caa32" translate="yes" xml:space="preserve">
          <source>Several obscure, unrelated bugs were found and fixed while implemented the integer primary key change of the previous bullet.</source>
          <target state="translated">Было найдено несколько непонятных,несвязанных ошибок,которые были исправлены при реализации изменения целочисленного первичного ключа предыдущего пульта.</target>
        </trans-unit>
        <trans-unit id="659f95a669a94f909d4f9c9e95d9d907e1cbadfa" translate="yes" xml:space="preserve">
          <source>Shadow tables are read/write by default. Shadow tables only become read-only when the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt; flag is set using &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt;. Shadow tables need to be read/write by default in order to maintain backwards compatibility. For example, the SQL text generated by the &lt;a href=&quot;cli#dump&quot;&gt;.dump&lt;/a&gt; command of the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; writes directly into shadow tables.</source>
          <target state="translated">По умолчанию теневые таблицы доступны для чтения и записи. Теневые таблицы становятся доступными только для чтения, только если &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;установлен&lt;/a&gt; флаг SQLITE_DBCONFIG_DEFENSIVE с помощью &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config ()&lt;/a&gt; . По умолчанию теневые таблицы должны быть доступны для чтения и записи, чтобы обеспечить обратную совместимость. Например, текст SQL, сгенерированный командой &lt;a href=&quot;cli#dump&quot;&gt;.dump интерфейса&lt;/a&gt; командной &lt;a href=&quot;cli&quot;&gt;строки,&lt;/a&gt; записывается непосредственно в теневые таблицы.</target>
        </trans-unit>
        <trans-unit id="19452421c69c545e0b50fcc00a18251f53c4e9f4" translate="yes" xml:space="preserve">
          <source>Shared cache is disabled by default. But this might change in future releases of SQLite. Applications that care about shared cache setting should set it explicitly.</source>
          <target state="translated">Общий кэш отключен по умолчанию.Но это может измениться в будущих релизах SQLite.Приложения,которые заботятся о настройке общего кэша,должны установить его явно.</target>
        </trans-unit>
        <trans-unit id="8e41d50ebd1af2b3254810c6333341257c85989e" translate="yes" xml:space="preserve">
          <source>Shared cache is disabled by default. It is recommended that it stay that way. In other words, do not use this routine. This interface continues to be provided for historical compatibility, but its use is discouraged. Any use of shared cache is discouraged. If shared cache must be used, it is recommended that shared cache only be enabled for individual database connections using the &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; interface with the &lt;a href=&quot;#SQLITE_OPEN_AUTOPROXY&quot;&gt;SQLITE_OPEN_SHAREDCACHE&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016f63b1afdc35c75766700d01c855e2a30457a4" translate="yes" xml:space="preserve">
          <source>Shared cache is disabled by default. It is recommended that it stay that way. In other words, do not use this routine. This interface continues to be provided for historical compatibility, but its use is discouraged. Any use of shared cache is discouraged. If shared cache must be used, it is recommended that shared cache only be enabled for individual database connections using the &lt;a href=&quot;open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; interface with the &lt;a href=&quot;c_open_autoproxy&quot;&gt;SQLITE_OPEN_SHAREDCACHE&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f477f800bdd5ba8c256608dea929d26bc988f65b" translate="yes" xml:space="preserve">
          <source>Shared libraries or DLLs can be used as &lt;a href=&quot;loadext&quot;&gt;loadable extensions&lt;/a&gt; to SQLite.</source>
          <target state="translated">Общие библиотеки или DLL могут использоваться как &lt;a href=&quot;loadext&quot;&gt;загружаемые расширения&lt;/a&gt; для SQLite.</target>
        </trans-unit>
        <trans-unit id="b6f715dc89839324b877f33d62ebb39393f6ca50" translate="yes" xml:space="preserve">
          <source>Shared-cache locks are released when a database connection concludes its current transaction, either by committing it or rolling it back.</source>
          <target state="translated">Блокировки общего кэша освобождаются,когда подключение к базе данных завершает свою текущую транзакцию,либо фиксируя ее,либо откатывая.</target>
        </trans-unit>
        <trans-unit id="1a3aca3d24b83cc38a4313e0315e88bcb9c21c92" translate="yes" xml:space="preserve">
          <source>Shared-cache mode changes the semantics of the locking model in some cases. The details are described by this document. A basic understanding of the normal SQLite locking model (see &lt;a href=&quot;lockingv3&quot;&gt;File Locking And Concurrency In SQLite Version 3&lt;/a&gt; for details) is assumed.</source>
          <target state="translated">В некоторых случаях режим общего кэша изменяет семантику модели блокировки. Подробности описаны в этом документе. Предполагается базовое понимание нормальной модели блокировки SQLite (подробности см. В разделе &amp;laquo; &lt;a href=&quot;lockingv3&quot;&gt;Блокировка и параллелизм файлов в SQLite версии 3&amp;raquo;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0a3f80e6eca574b532dbb5d0c3d9a7766e7bf84a" translate="yes" xml:space="preserve">
          <source>Shared-cache mode is enabled on a per-process basis. Using the C interface, the following API can be used to globally enable or disable shared-cache mode:</source>
          <target state="translated">Режим общего кэширования включается для каждого процесса.Используя C-интерфейс,можно использовать следующий API для глобального включения или отключения режима общего кэширования:</target>
        </trans-unit>
        <trans-unit id="f42662308d376fb67628511d59d090985566d2ae" translate="yes" xml:space="preserve">
          <source>Shared-memory files</source>
          <target state="translated">Файлы общей памяти</target>
        </trans-unit>
        <trans-unit id="c7114e495e770e3a02bbb164bf55e1f96da4aecc" translate="yes" xml:space="preserve">
          <source>Shift the integer value in register P2 to the left by the number of bits specified by the integer in register P1. Store the result in register P3. If either input is NULL, the result is NULL.</source>
          <target state="translated">Сдвинуть целое значение в регистре P2 влево на количество бит,заданное целым числом в регистре P1.Хранить результат в регистре P3.Если любой из входных данных равен NULL,то результат будет NULL.</target>
        </trans-unit>
        <trans-unit id="1886429e3c21f6dfa5e69e0091250e86426fb4f9" translate="yes" xml:space="preserve">
          <source>Shift the integer value in register P2 to the right by the number of bits specified by the integer in register P1. Store the result in register P3. If either input is NULL, the result is NULL.</source>
          <target state="translated">Сдвинуть вправо целое значение в регистре P2 на количество бит,заданное целым числом в регистре P1.Хранить результат в регистре P3.Если любой из входных данных равен NULL,то результат будет NULL.</target>
        </trans-unit>
        <trans-unit id="62341f589b9d3a0d923d18a2b4e7f7f2edda894e" translate="yes" xml:space="preserve">
          <source>ShiftLeft</source>
          <target state="translated">ShiftLeft</target>
        </trans-unit>
        <trans-unit id="2310b475647d9a4e74a4f5d5a47bfb27340ee08b" translate="yes" xml:space="preserve">
          <source>ShiftRight</source>
          <target state="translated">ShiftRight</target>
        </trans-unit>
        <trans-unit id="c8723bf8dd0f924a9f0d00bc2ddb22a9562a76b1" translate="yes" xml:space="preserve">
          <source>Shifting a negative number.</source>
          <target state="translated">Смещение отрицательного числа.</target>
        </trans-unit>
        <trans-unit id="8f0ca083402d5eb462b696e15e581aaadbeb113a" translate="yes" xml:space="preserve">
          <source>Shifting an N-bit integer by more than N bits.</source>
          <target state="translated">Смещение N-битного целого более чем на N бит.</target>
        </trans-unit>
        <trans-unit id="37dcc04149816924636682bd712a1a49f1dcb38f" translate="yes" xml:space="preserve">
          <source>Shifting by a negative amount.</source>
          <target state="translated">Смещение на отрицательную величину.</target>
        </trans-unit>
        <trans-unit id="d224675e61816beeffff3a83b33b759da2cf9109" translate="yes" xml:space="preserve">
          <source>Short answer: A column declared &lt;a href=&quot;lang_createtable#rowid&quot;&gt;INTEGER PRIMARY KEY&lt;/a&gt; will autoincrement.</source>
          <target state="translated">Краткий ответ: столбец, объявленный &lt;a href=&quot;lang_createtable#rowid&quot;&gt;INTEGER PRIMARY KEY,&lt;/a&gt; будет автоматически увеличиваться.</target>
        </trans-unit>
        <trans-unit id="66f7bc664b9d82f0b84142732a02328bc0cdf8d0" translate="yes" xml:space="preserve">
          <source>Show ASCII-art abstract syntax tree diagrams using the &quot;.selecttrace&quot; and &quot;.wheretrace&quot; commands in the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt; when compiled with &lt;a href=&quot;compile#debug&quot;&gt;SQLITE_DEBUG&lt;/a&gt;, SQLITE_ENABLE_SELECTTRACE, and SQLITE_ENABLE_WHERETRACE. Also provide the sqlite3TreeViewExpr() and sqlite3TreeViewSelect() entry points that can be invoked from with the debugger to show the parse tree when stopped at a breakpoint.</source>
          <target state="translated">Показать диаграммы абстрактного синтаксического дерева в стиле ASCII с помощью команд &amp;laquo;.selecttrace&amp;raquo; и &amp;laquo;.wheretrace&amp;raquo; в &lt;a href=&quot;cli&quot;&gt;оболочке командной строки&lt;/a&gt; при компиляции с &lt;a href=&quot;compile#debug&quot;&gt;SQLITE_DEBUG&lt;/a&gt; , SQLITE_ENABLE_SELECTTRACE и SQLITE_ENABLE_WHERETRACE. Также укажите точки входа sqlite3TreeViewExpr () и sqlite3TreeViewSelect (), которые можно вызывать с помощью отладчика для отображения дерева синтаксического анализа при остановке в точке останова.</target>
        </trans-unit>
        <trans-unit id="29bd1b65a367359ac801580f0f164ea797beea79" translate="yes" xml:space="preserve">
          <source>Show how many rows have changed on each table, but do not show the actual changes</source>
          <target state="translated">Показывать,сколько строк изменилось в каждой таблице,но не показывать фактических изменений.</target>
        </trans-unit>
        <trans-unit id="45c704a81c82ee8bb0729ae9984ab0b0befba88f" translate="yes" xml:space="preserve">
          <source>Show me your flowcharts and conceal your tables, and I shall continue to be mystified. Show me your tables, and I won't usually need your flowcharts; they'll be obvious.</source>
          <target state="translated">Покажите мне свои блок-схемы и спрячьте свои таблицы,и я буду продолжать мистифицироваться.Покажите мне ваши таблицы,и мне обычно не понадобятся ваши блок-схемы,они будут очевидны.</target>
        </trans-unit>
        <trans-unit id="eadcf1db0ff39fb6bc0246ade4beb9b3e9027520" translate="yes" xml:space="preserve">
          <source>Show only differences in the schema not the table content</source>
          <target state="translated">Показывать только различия в схеме,а не в содержании таблицы.</target>
        </trans-unit>
        <trans-unit id="584527d924d04a23c5c08d9fd085c97f73f6da07" translate="yes" xml:space="preserve">
          <source>Show only the differences in content for TABLE, not for the entire database</source>
          <target state="translated">Показывать только различия в контенте для TABLE,а не для всей базы данных.</target>
        </trans-unit>
        <trans-unit id="c2688d3833edc37bfcee14b5515c2bff49005d0c" translate="yes" xml:space="preserve">
          <source>Show the SQL that would be run to carry out the archive operation, but do not actually change anything.</source>
          <target state="translated">Покажите SQL,который будет запущен для выполнения операции архивации,но на самом деле ничего не меняйте.</target>
        </trans-unit>
        <trans-unit id="f2d6599ba5b081fd8b2869046769b3cd08250edc" translate="yes" xml:space="preserve">
          <source>Shun arrogance.</source>
          <target state="translated">Шунь заносчивость.</target>
        </trans-unit>
        <trans-unit id="df3f4b6cc3b45148ff40b29aba7af47fbd10c1fd" translate="yes" xml:space="preserve">
          <source>Signed integer overflow. (Signed integer overflow does &lt;u&gt;not&lt;/u&gt; necessarily wrap around, as most people expect.)</source>
          <target state="translated">Знаковое целочисленное переполнение. (Знаковое целочисленное переполнение &lt;u&gt;не&lt;/u&gt; обязательно повторяется, как ожидает большинство людей.)</target>
        </trans-unit>
        <trans-unit id="2e226f8ddc66c1a463dcf0a7c345c529980f966b" translate="yes" xml:space="preserve">
          <source>Silent &quot;d&quot; in words beginning with &quot;dj&quot;: djinn, Djikarta</source>
          <target state="translated">Молчаливое &quot;d&quot; в словах,начинающихся с &quot;dj&quot;:djinn,Djikarta</target>
        </trans-unit>
        <trans-unit id="aada0dd0ffeee0e21804c55732d58986c7fd3694" translate="yes" xml:space="preserve">
          <source>Silent &quot;g&quot; in words beginning with &quot;gn&quot;: gnarly, gnome, gnat</source>
          <target state="translated">Молчаливое &quot;г&quot; в словах,начинающихся с &quot;гн&quot;:гнарли,гном,мошка.</target>
        </trans-unit>
        <trans-unit id="fbaa2ec88597d6e84d9f667ee669d561de7dec36" translate="yes" xml:space="preserve">
          <source>Silent &quot;k&quot; in words beginning with &quot;kn&quot;: knight, Knuthson</source>
          <target state="translated">Молчаливое &quot;к&quot; в словах,начинающихся с &quot;к&quot;:рыцарь,Кнутсон.</target>
        </trans-unit>
        <trans-unit id="0f8ddc119a87ce25d1a07a2270fa7ab759fe3699" translate="yes" xml:space="preserve">
          <source>Silent &quot;p&quot; in words beginning with &quot;pn&quot;: pneumonia, pneumatic</source>
          <target state="translated">Молчаливое &quot;p&quot; в словах,начинающихся с &quot;pn&quot;:пневмония,пневматические</target>
        </trans-unit>
        <trans-unit id="9fea8d13746b11fa947fbc609fcc6f58d06a7902" translate="yes" xml:space="preserve">
          <source>Silent &quot;p&quot; in words beginning with &quot;ps&quot;: psalm, psyche</source>
          <target state="translated">Молчаливое &quot;п&quot; в словах,начинающихся с &quot;пс&quot;:псалом,психика</target>
        </trans-unit>
        <trans-unit id="f17200036eeba29904ebeaabba7f7630872e60fd" translate="yes" xml:space="preserve">
          <source>Silent &quot;p&quot; in words beginning with &quot;pt&quot;: pterodactyl, ptolemaic</source>
          <target state="translated">Молчаливое &quot;p&quot; в словах,начинающихся с &quot;pt&quot;:птеродактиль,птолемейка</target>
        </trans-unit>
        <trans-unit id="9d3bc03d8343d400c82a4a71a8abb03ff87c2249" translate="yes" xml:space="preserve">
          <source>Similarly, SQLite allows you to store a 2000-character string into a column of type VARCHAR(50). Other SQL implementations would either throw an error or truncate the string. SQLite stores the entire 2000-character string with no loss of information and without complaint.</source>
          <target state="translated">Аналогично,SQLite позволяет хранить 2000-символьную строку в столбце типа VARCHAR(50).Другие реализации SQL будут либо бросать ошибку,либо усекать строку.SQLite хранит всю 2000-символьную строку без потерь информации и без жалоб.</target>
        </trans-unit>
        <trans-unit id="8b91c3fa499f0d4214317846c7c43d756cfd2b0a" translate="yes" xml:space="preserve">
          <source>Similarly, a</source>
          <target state="translated">Аналогично</target>
        </trans-unit>
        <trans-unit id="5bca9444f10a42e6ae3d406bbcd7ca872ce4cd02" translate="yes" xml:space="preserve">
          <source>Similarly, in &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt;, the write-ahead log file is not truncated following a &lt;a href=&quot;wal#ckpt&quot;&gt;checkpoint&lt;/a&gt;. Instead, SQLite reuses the existing file for subsequent WAL entries since overwriting is faster than appending.</source>
          <target state="translated">Точно так же в &lt;a href=&quot;wal&quot;&gt;режиме WAL&lt;/a&gt; файл журнала упреждающей записи не усекается после &lt;a href=&quot;wal#ckpt&quot;&gt;контрольной точки&lt;/a&gt; . Вместо этого SQLite повторно использует существующий файл для последующих записей WAL, поскольку перезапись выполняется быстрее, чем добавление.</target>
        </trans-unit>
        <trans-unit id="bac336a356dc6f108086c2da32cf914ab388438e" translate="yes" xml:space="preserve">
          <source>Similarly, streaming API functions that return changesets (or patchsets) return them in chunks by way of a callback function instead of via a pointer to a single large buffer. In this case, a pair of parameters such as:</source>
          <target state="translated">Аналогично,потоковые функции API,возвращающие наборы изменений (или патч-сеты),возвращают их в кусках с помощью функции обратного вызова,а не с помощью указателя на один большой буфер.В этом случае пару параметров,например:</target>
        </trans-unit>
        <trans-unit id="7d579b15000cacebe667c23c91900124e0021ffe" translate="yes" xml:space="preserve">
          <source>Similarly, the following expressions have historically evaluated to TRUE when in fact NULL is also the correct answer here:</source>
          <target state="translated">Аналогичным образом,следующие выражения исторически оценивались до TRUE,в то время как на самом деле NULL также является правильным ответом здесь:</target>
        </trans-unit>
        <trans-unit id="8de10619f1c2dbf3cc29b124beee52534207f387" translate="yes" xml:space="preserve">
          <source>Simple Queries</source>
          <target state="translated">Простые запросы</target>
        </trans-unit>
        <trans-unit id="c820f89b614c85cd10dd51d0186cb9a23cd537b4" translate="yes" xml:space="preserve">
          <source>Simple SELECT</source>
          <target state="translated">Простой выбор</target>
        </trans-unit>
        <trans-unit id="2b5e01ecfaf01cf9d6fed2afce17a1e2ec85faaa" translate="yes" xml:space="preserve">
          <source>Simple Select Processing</source>
          <target state="translated">Простой выбор Обработка</target>
        </trans-unit>
        <trans-unit id="25bc3effd8fab2177bf75bccfaba476dd31d7e03" translate="yes" xml:space="preserve">
          <source>Simple fts queries</source>
          <target state="translated">Простые запросы</target>
        </trans-unit>
        <trans-unit id="d21c97069116b510ca5fd5d37452e567c518b5ee" translate="yes" xml:space="preserve">
          <source>Simple, easy to use &lt;a href=&quot;cintro&quot;&gt;API&lt;/a&gt;.</source>
          <target state="translated">Простой и удобный &lt;a href=&quot;cintro&quot;&gt;API&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20a696ed001fc7792dc03669a107ef6867be06cf" translate="yes" xml:space="preserve">
          <source>Simplified Application Development</source>
          <target state="translated">Упрощенная разработка приложений</target>
        </trans-unit>
        <trans-unit id="75e092657cf7286e756d1dede51480e5230b9edf" translate="yes" xml:space="preserve">
          <source>Simplify the design of the VDBE by restricting the number of sorters and lists to 1. In practice, no more than one sorter and one list was ever used anyhow.</source>
          <target state="translated">Упростите конструкцию VDBE,ограничив количество сортировщиков и списков до 1.На практике в любом случае использовалось не более одного сортировщика и одного списка.</target>
        </trans-unit>
        <trans-unit id="89151b192ec38384818e48383b1951487fe9cb56" translate="yes" xml:space="preserve">
          <source>Simply replace</source>
          <target state="translated">Просто замените</target>
        </trans-unit>
        <trans-unit id="de0928c2b632719ec80087729ff90db61c097100" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://sqlite.org/releaselog/3_13_0.html&quot;&gt;version 3.13.0&lt;/a&gt; (2016-05-18), the session extension has been included in the SQLite &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt; source distribution. By default, the session extension is disabled. To enable it, build with the following compiler switches:</source>
          <target state="translated">Начиная с &lt;a href=&quot;https://sqlite.org/releaselog/3_13_0.html&quot;&gt;версии 3.13.0&lt;/a&gt; ( 18.05.2016 ), расширение сеанса было включено в дистрибутив &lt;a href=&quot;amalgamation&quot;&gt;слияния&lt;/a&gt; источников SQLite . По умолчанию расширение сеанса отключено. Чтобы включить его, выполните сборку со следующими переключателями компилятора:</target>
        </trans-unit>
        <trans-unit id="eaa37de22579abc7084228906dd483ab965aacfb" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://sqlite.org/releaselog/3_5_0.html&quot;&gt;version 3.5.0&lt;/a&gt; (2007-09-04), SQLite has supported an interface called the &lt;a href=&quot;c3ref/vfs&quot;&gt;virtual file system&lt;/a&gt; or &quot;VFS&quot;. This object is somewhat misnamed since it is really an interface to the whole underlying operating system, not just the filesystem.</source>
          <target state="translated">Начиная с &lt;a href=&quot;https://sqlite.org/releaselog/3_5_0.html&quot;&gt;версии 3.5.0&lt;/a&gt; (2007-09-04), SQLite поддерживает интерфейс, называемый &lt;a href=&quot;c3ref/vfs&quot;&gt;виртуальной файловой системой&lt;/a&gt; или &amp;laquo;VFS&amp;raquo;. Этот объект несколько неверно назван, поскольку на самом деле он является интерфейсом для всей базовой операционной системы, а не только для файловой системы.</target>
        </trans-unit>
        <trans-unit id="c659e6cde59a26a5cc98604eaf1a60217b6d7297" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://sqlite.org/releaselog/3_6_18.html&quot;&gt;version 3.6.18&lt;/a&gt; (2009-09-11), SQLite source code has been stored in the &lt;a href=&quot;http://www.fossil-scm.org/&quot;&gt;Fossil configuration management system&lt;/a&gt;. The SQLITE_SOURCE_ID macro evaluates to a string which identifies a particular check-in of SQLite within its configuration management system. The SQLITE_SOURCE_ID string contains the date and time of the check-in (UTC) and a SHA1 or SHA3-256 hash of the entire source tree. If the source code has been edited in any way since it was last checked in, then the last four hexadecimal digits of the hash may be modified.</source>
          <target state="translated">Начиная с &lt;a href=&quot;https://sqlite.org/releaselog/3_6_18.html&quot;&gt;версии 3.6.18&lt;/a&gt; (2009-09-11), исходный код SQLite хранится в системе &lt;a href=&quot;http://www.fossil-scm.org/&quot;&gt;управления конфигурацией Fossil&lt;/a&gt; . Макрос SQLITE_SOURCE_ID оценивает строку, которая идентифицирует конкретную регистрацию SQLite в его системе управления конфигурацией. Строка SQLITE_SOURCE_ID содержит дату и время регистрации (UTC) и хэш SHA1 или SHA3-256 всего исходного дерева. Если исходный код был каким-либо образом отредактирован с момента последней регистрации, то могут быть изменены последние четыре шестнадцатеричные цифры хеш-кода.</target>
        </trans-unit>
        <trans-unit id="6ef82de3319be0d75e458ab4416694f2f8299790" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://sqlite.org/releaselog/3_7_0.html&quot;&gt;version 3.7.0&lt;/a&gt; (2010-07-21), SQLite also supports &quot;&lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt;&quot;. In WAL mode, changes are not written to the original database file. Instead, changes go into a separate &quot;write-ahead log&quot; or &quot;WAL&quot; file. Later, after the transaction commits, those changes will be moved from the WAL file back into the original database in an operation called &quot;checkpoint&quot;. WAL mode is enabled by running &quot;&lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;PRAGMA journal_mode=WAL&lt;/a&gt;&quot;.</source>
          <target state="translated">Начиная с &lt;a href=&quot;https://sqlite.org/releaselog/3_7_0.html&quot;&gt;версии 3.7.0&lt;/a&gt; ( 21.07.2010 ), SQLite также поддерживает &amp;laquo; &lt;a href=&quot;wal&quot;&gt;режим WAL&lt;/a&gt; &amp;raquo;. В режиме WAL изменения не записываются в исходный файл базы данных. Вместо этого изменения заносятся в отдельный &amp;laquo;журнал упреждающей записи&amp;raquo; или &amp;laquo;WAL&amp;raquo; файл. Позже, после фиксации транзакции, эти изменения будут перемещены из файла WAL обратно в исходную базу данных в ходе операции, называемой &amp;laquo;контрольная точка&amp;raquo;. Режим WAL включается запуском &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;PRAGMA journal_mode = WAL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="974a12d011bbc97d586f22e505d00eff41958058" translate="yes" xml:space="preserve">
          <source>Since SQLite always interprets any filename that does not begin with &quot;&lt;code&gt;file:&lt;/code&gt;&quot; as an ordinary filename regardless of the URI setting, and because it is very unusual to have an actual file begin with &quot;&lt;code&gt;file:&lt;/code&gt;&quot;, it is safe for most applications to enable URI processing even if URI filenames are not currently being used.</source>
          <target state="translated">Поскольку SQLite всегда интерпретирует любое имя файла, которое не начинается с &amp;laquo; &lt;code&gt;file:&lt;/code&gt; &amp;raquo;, как обычное имя файла независимо от настройки URI, и поскольку очень необычно иметь фактический файл, начинающийся с &amp;laquo; &lt;code&gt;file:&lt;/code&gt; &amp;raquo;, для большинства приложений безопасно включить обработку URI, даже если имена файлов URI в настоящее время не используются.</target>
        </trans-unit>
        <trans-unit id="6787bde414a9d9d049df11f55e9b93b41be95c03" translate="yes" xml:space="preserve">
          <source>Since SQLite databases are ordinary disk files, any malfunction in the filesystem can corrupt the database. Filesystems in modern operating systems are very reliable, but errors do still occur. For example, on 2013-10-01 the SQLite database that holds the &lt;a href=&quot;http://wiki.tcl-lang.org/&quot;&gt;Wiki for Tcl/Tk&lt;/a&gt; went corrupt a few days after the host computer was moved to a dodgy build of the (linux) kernel that had issues in the filesystem layer. In that event, the filesystem eventually became so badly corrupted that the machine was unusable, but the earliest symptom of trouble was the corrupted SQLite database.</source>
          <target state="translated">Поскольку базы данных SQLite являются обычными дисковыми файлами, любая неисправность в файловой системе может привести к повреждению базы данных. Файловые системы в современных операционных системах очень надежны, но ошибки все же возникают. Например, 01.10.2013 база данных SQLite, в которой хранится &lt;a href=&quot;http://wiki.tcl-lang.org/&quot;&gt;Wiki для Tcl / Tk,&lt;/a&gt; была повреждена через несколько дней после того, как главный компьютер был переведен на хитроумную сборку ядра (linux), которая имела проблемы на уровне файловой системы. В этом случае файловая система в конечном итоге была настолько сильно повреждена, что машина стала непригодной для использования, но самым ранним признаком проблемы была поврежденная база данных SQLite.</target>
        </trans-unit>
        <trans-unit id="c695a2f51c4b24da3c2784ee7cd9c9755809b7df" translate="yes" xml:space="preserve">
          <source>Since SQLite reads and writes an ordinary disk file, the only access permissions that can be applied are the normal file access permissions of the underlying operating system. The GRANT and REVOKE commands commonly found on client/server RDBMSes are not implemented because they would be meaningless for an embedded database engine.</source>
          <target state="translated">Поскольку SQLite читает и записывает обычный файл с диска,единственными разрешениями доступа,которые могут быть применены,являются обычные разрешения доступа к файлам базовой операционной системы.Команды GRANT и REVOKE,обычно встречающиеся на клиентских/серверных СУБД,не реализованы,так как они были бы бессмысленны для встроенного движка СУБД.</target>
        </trans-unit>
        <trans-unit id="59abdbce3144e8f85a07a8dfceb62a241d9b0167" translate="yes" xml:space="preserve">
          <source>Since an SQLite database is a more general format (it is designed to do much more than simply store a bunch of files) it is not as compact as either the ZIP Archive or Tarball formats. An SQLite Archive is usually about 1% larger than the equivalent ZIP Archive. Tarballs are compressed as a single unit rather than compressing each file separately as is done by both SQLite and ZIP Archives. For these reason, Tarballs tend to be smaller than either ZIP or SQLite Archives.</source>
          <target state="translated">Поскольку база данных SQLite является более общим форматом (она предназначена для выполнения гораздо большего,чем просто хранение кучи файлов),она не так компактна,как формат ZIP Archive или Tarball.SQLite Archive обычно на 1% больше,чем эквивалентный ZIP Archive.Tarballs сжимается как единое целое,а не как каждый файл в отдельности,как это делается в SQLite и ZIP архивах.По этой причине Tarballs обычно меньше,чем ZIP или SQLite архивы.</target>
        </trans-unit>
        <trans-unit id="4194b98c5f98c8eb76bc03b04a9e6fbf66db418a" translate="yes" xml:space="preserve">
          <source>Since database zFilename is a file on disk, then it may be accessed externally by another process. This means that when the call to sqlite3_backup_step() attempts to read from or write data to it, it may fail to obtain the required file lock. If this happens, this implementation will fail, returning SQLITE_BUSY immediately. The solution would be to register a busy-handler callback or timeout with &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; pFile using &lt;a href=&quot;c3ref/busy_handler&quot;&gt;sqlite3_busy_handler()&lt;/a&gt; or &lt;a href=&quot;c3ref/busy_timeout&quot;&gt;sqlite3_busy_timeout()&lt;/a&gt; as soon as it is opened. If it fails to obtain a required lock immediately, &lt;a href=&quot;c3ref/backup_finish#sqlite3backupstep&quot;&gt;sqlite3_backup_step()&lt;/a&gt; uses any registered busy-handler callback or timeout in the same way as &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; or &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec()&lt;/a&gt; does.</source>
          <target state="translated">Поскольку база данных zFilename представляет собой файл на диске, к ней может получить доступ извне другой процесс. Это означает, что когда вызов sqlite3_backup_step () пытается читать или записывать в него данные, он может не получить требуемую блокировку файла. Если это произойдет, эта реализация завершится ошибкой, немедленно вернув SQLITE_BUSY. Решением было бы зарегистрировать обратный вызов обработчика занятости или тайм-аут с &lt;a href=&quot;c3ref/sqlite3&quot;&gt;подключением к базе данных&lt;/a&gt; pFile с использованием &lt;a href=&quot;c3ref/busy_handler&quot;&gt;sqlite3_busy_handler ()&lt;/a&gt; или &lt;a href=&quot;c3ref/busy_timeout&quot;&gt;sqlite3_busy_timeout ()&lt;/a&gt; сразу после его открытия. Если не удается получить требуемую блокировку немедленно, &lt;a href=&quot;c3ref/backup_finish#sqlite3backupstep&quot;&gt;sqlite3_backup_step ()&lt;/a&gt; использует любой зарегистрированный обратный вызов обработчика занятости или тайм-аут так же, как &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step ()&lt;/a&gt; или &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="689371fa0cc7aa87af9ab6ee0314efa8f5ddaa1a" translate="yes" xml:space="preserve">
          <source>Since its inception on 2000-05-29, SQLite has been implemented in generic C. C was and continues to be the best language for implementing a software library like SQLite. There are no plans to recode SQLite in any other programming language at this time.</source>
          <target state="translated">С момента своего создания в 2000-05-29 годах SQLite был и остается лучшим языком для реализации такой программной библиотеки,как SQLite.В настоящее время не планируется перекодировать SQLite ни на какой другой язык программирования.</target>
        </trans-unit>
        <trans-unit id="e237e23641bdbe1625752d920a811e88f9bea9fa" translate="yes" xml:space="preserve">
          <source>Since the &quot;t2&quot; imposter table is a form of database corruption, the manual approach to creating imposter tables is not recommended. Actually, any use of imposter tables is discouraged for all but expert developers, but manually created imposter tables are especially discouraged because they are permanent.</source>
          <target state="translated">Поскольку imposter-таблица &quot;t2&quot; является формой повреждения БД,ручной подход к созданию imposter-таблиц не рекомендуется.На самом деле,любое использование imposter-таблиц не приветствуется всеми,кроме экспертов-разработчиков,но ручное создание imposter-таблиц особенно не приветствуется,так как они являются постоянными.</target>
        </trans-unit>
        <trans-unit id="0cc48f0c85bdbc88acc6ded1a2b33b3cefbcc949" translate="yes" xml:space="preserve">
          <source>Since the SQLite database file format was designed (in 2003) the default &lt;a href=&quot;pragma#pragma_page_size&quot;&gt;page size&lt;/a&gt; for new databases has been 1024 bytes. This was a reasonable choice in 2003. But on modern hardware, a 4096 byte page is a faster and better choice. So, beginning with SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_12_0.html&quot;&gt;version 3.12.0&lt;/a&gt; (2016-03-29)) the default page size for new database files has been increased to 4096 bytes.</source>
          <target state="translated">Поскольку формат файлов базы данных SQLite был разработан (в 2003 году), &lt;a href=&quot;pragma#pragma_page_size&quot;&gt;размер страницы&lt;/a&gt; по умолчанию для новых баз данных составлял 1024 байта. В 2003 году это был разумный выбор. Но на современном оборудовании страница размером 4096 байт является более быстрым и лучшим выбором. Итак, начиная с &lt;a href=&quot;https://sqlite.org/releaselog/3_12_0.html&quot;&gt;версии&lt;/a&gt; SQLite 3.12.0 (2016-03-29) размер страницы по умолчанию для новых файлов базы данных был увеличен до 4096 байт.</target>
        </trans-unit>
        <trans-unit id="054ac08de64845448b2fb9281541e1391100a214" translate="yes" xml:space="preserve">
          <source>Since the actions of &lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA optimize&lt;/a&gt; are determined to some extent by prior queries that have been evaluated on the same database connection, it is recommended that &lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA optimize&lt;/a&gt; be deferred until the database connection is closing and has thus had an opportunity to accumulate as much usage information as possible. It is also reasonable to set a timer to run &lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA optimize&lt;/a&gt; every few hours, or every few days, for database connections that stay open for a long time.</source>
          <target state="translated">Поскольку действия &lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA optimize&lt;/a&gt; в некоторой степени определяются предыдущими запросами, которые были оценены в том же соединении с базой данных, рекомендуется &lt;a href=&quot;pragma#pragma_optimize&quot;&gt;отложить PRAGMA optimize&lt;/a&gt; до тех пор, пока соединение с базой данных не закрывается и, таким образом, у него была возможность накопить как можно больше информации об использовании. насколько возможно. Также разумно установить таймер для запуска &lt;a href=&quot;pragma#pragma_optimize&quot;&gt;PRAGMA optimize&lt;/a&gt; каждые несколько часов или каждые несколько дней для соединений с базой данных, которые остаются открытыми в течение длительного времени.</target>
        </trans-unit>
        <trans-unit id="a35c2dbd798622212a3da41545074117af9096bd" translate="yes" xml:space="preserve">
          <source>Since the index is used to look up values in the table, it is important that the index and table be kept consistent. Now that there is an index on the examp table, we will have to update that index whenever data is inserted, deleted, or changed in the examp table. Remember the first example above where we were able to insert a new row into the &quot;examp&quot; table using 12 VDBE instructions. Now that this table is indexed, 19 instructions are required. The SQL statement is this:</source>
          <target state="translated">Поскольку индекс используется для поиска значений в таблице,важно,чтобы индекс и таблица были одинаковыми.Теперь,когда в таблице экзамена есть индекс,нам придется обновлять этот индекс всякий раз,когда данные вставляются,удаляются или изменяются в таблице экзамена.Вспомните первый пример выше,когда мы смогли вставить новую строку в таблицу &quot;экзамен&quot;,используя 12 инструкций VDBE.Теперь,когда эта таблица проиндексирована,требуется 19 инструкций.SQL-оператор таков:</target>
        </trans-unit>
        <trans-unit id="792d86f988c7b4533a9df91cbaad2f47d8254db5" translate="yes" xml:space="preserve">
          <source>Since the information is stored in the table in rowid order, SQLite can find the correct row using a binary search. If the table contains N element, the time required to look up the desired row is proportional to logN rather than being proportional to N as in a full table scan. If the table contains 10 million elements, that means the query will be on the order of N/logN or about 1 million times faster.</source>
          <target state="translated">Так как информация хранится в таблице в рядном порядке,SQLite может найти нужную строку с помощью бинарного поиска.Если таблица содержит N элементов,то время,необходимое для поиска нужной строки,пропорционально logN,а не пропорционально N,как при полном сканировании таблицы.Если таблица содержит 10 миллионов элементов,то это означает,что запрос будет по порядку N/logN или примерно в 1 миллион раз быстрее.</target>
        </trans-unit>
        <trans-unit id="f5b0a5f9338e5d6f0eb6749a38c57ac37eadf9c5" translate="yes" xml:space="preserve">
          <source>Since the information is stored in the table in rowid order, SQLite can find the correct row using a binary search. If the table contains N elements, the time required to look up the desired row is proportional to logN rather than being proportional to N as in a full table scan. If the table contains 10 million elements, that means the query will be on the order of N/logN or about 1 million times faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ff8f1fdae75cff7dbf44bfb613a96fb3fe71f5" translate="yes" xml:space="preserve">
          <source>Since this document was first written, the canonical SQLite source code has been moved from the venerable CVS system into a Fossil repository at &lt;a href=&quot;http://www.sqlite.org/src&quot;&gt;http://www.sqlite.org/src&lt;/a&gt;. This means that if you are working with canonical SQLite source code (as opposed to the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt; source code files, sqlite3.c and sqlite3.h) then you can create a private repository simply by cloning the official repository:</source>
          <target state="translated">С тех пор как этот документ был впервые написан, канонический исходный код SQLite был перемещен из почтенной системы CVS в репозиторий Fossil по адресу &lt;a href=&quot;http://www.sqlite.org/src&quot;&gt;http://www.sqlite.org/src&lt;/a&gt; . Это означает, что если вы работаете с каноническим исходным кодом SQLite (в отличие от файлов исходного кода &lt;a href=&quot;amalgamation&quot;&gt;объединения&lt;/a&gt; , sqlite3.c и sqlite3.h), вы можете создать частный репозиторий, просто клонировав официальный репозиторий:</target>
        </trans-unit>
        <trans-unit id="8b7c178a22b32f8642c754bb0ef6c8c8f9f96539" translate="yes" xml:space="preserve">
          <source>Since this document was originally written some of the database engines tested have been updated and users have been kind enough to send in corrections to the chart below. The original data showed a wide variety of behaviors, but over time the range of behaviors has converged toward the PostgreSQL/Oracle model. The only significant difference is that Informix and MS-SQL both treat NULLs as indistinct in a UNIQUE column.</source>
          <target state="translated">С момента написания этого документа некоторые из протестированных движков базы данных были обновлены,и пользователи были любезны прислать исправления к таблице ниже.Первоначальные данные показали широкий диапазон поведения,но со временем этот диапазон сместился в сторону модели PostgreSQL/Oracle.Единственное существенное различие заключается в том,что и Informix,и MS-SQL рассматривают NULL как нечеткие в колонке UNIQUE.</target>
        </trans-unit>
        <trans-unit id="a988ba929d7a7d98790e14aa91b1b4ee801c28ea" translate="yes" xml:space="preserve">
          <source>Since this interface is expected to be rarely used, it is only available if SQLite is compiled using the &lt;a href=&quot;../compile#enable_stmt_scanstatus&quot;&gt;SQLITE_ENABLE_STMT_SCANSTATUS&lt;/a&gt; compile-time option.</source>
          <target state="translated">Поскольку ожидается, что этот интерфейс будет использоваться редко, он доступен только в том случае, если SQLite скомпилирован с использованием параметра &lt;a href=&quot;../compile#enable_stmt_scanstatus&quot;&gt;времени&lt;/a&gt; компиляции SQLITE_ENABLE_STMT_SCANSTATUS .</target>
        </trans-unit>
        <trans-unit id="fc8856dbc189b149adcf35c14f2c019d6ca39cd2" translate="yes" xml:space="preserve">
          <source>Since this interface is expected to be rarely used, it is only available if SQLite is compiled using the &lt;a href=&quot;compile#enable_stmt_scanstatus&quot;&gt;SQLITE_ENABLE_STMT_SCANSTATUS&lt;/a&gt; compile-time option.</source>
          <target state="translated">Поскольку ожидается, что этот интерфейс будет использоваться редко, он доступен только в том случае, если SQLite скомпилирован с использованием параметра &lt;a href=&quot;compile#enable_stmt_scanstatus&quot;&gt;времени&lt;/a&gt; компиляции SQLITE_ENABLE_STMT_SCANSTATUS .</target>
        </trans-unit>
        <trans-unit id="69653584b18a40e580d58b62294b4d01dca91c5b" translate="yes" xml:space="preserve">
          <source>Since undefined and implementation-defined behavior is non-portable and can easily lead to incorrect answers, SQLite works very hard to avoid it. For example, when adding two integer column values together as part of an SQL statement, SQLite does not simply add them together using the C-language &quot;+&quot; operator. Instead, it first checks to make sure the addition will not overflow, and if it will, it does the addition using floating point instead.</source>
          <target state="translated">Так как неопределенное и реализованно-определенное поведение не переносится и может легко привести к неправильным ответам,SQLite очень усердно работает над тем,чтобы избежать этого.Например,при добавлении двух целочисленных значений столбцов вместе как части SQL-оператора,SQLite не просто складывает их вместе,используя оператор &quot;+&quot; на языке C.Вместо этого он сначала проверяет,не переполнится ли сложение,а если переполнится,то делает сложение с плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="9a1c7258f48d87f5562218d2ba5ba3886293704d" translate="yes" xml:space="preserve">
          <source>Single-File Documents</source>
          <target state="translated">Документы в одном файле</target>
        </trans-unit>
        <trans-unit id="7fd14cfbad52780046ab174d1c92328e62738415" translate="yes" xml:space="preserve">
          <source>Single-file Cross-platform Database</source>
          <target state="translated">Однофайловая кроссплатформенная база данных</target>
        </trans-unit>
        <trans-unit id="71d9f86ea2562e67aa07344919bbe26526606087" translate="yes" xml:space="preserve">
          <source>Situations Where A Client/Server RDBMS May Work Better</source>
          <target state="translated">Ситуации,когда СУБД &quot;Клиент/сервер&quot; может работать лучше.</target>
        </trans-unit>
        <trans-unit id="7606f77965da29221827e7ce60dd2a6316522a70" translate="yes" xml:space="preserve">
          <source>Situations Where SQLite Works Well</source>
          <target state="translated">Ситуации,в которых SQLite работает хорошо</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="23dd62e305cc04b400ea8b167918d45e391e1599" translate="yes" xml:space="preserve">
          <source>Size Of The SQLite Library</source>
          <target state="translated">Размер библиотеки SQLite</target>
        </trans-unit>
        <trans-unit id="23aa6e811d60088ebfe23efb308861aa99dcc44c" translate="yes" xml:space="preserve">
          <source>Size in bytes</source>
          <target state="translated">Размер в байтах</target>
        </trans-unit>
        <trans-unit id="866e161f09886804ed95702c5f38517afa748243" translate="yes" xml:space="preserve">
          <source>Size of a disk sector assumed by the process that wrote this journal.</source>
          <target state="translated">Размер сектора диска,принятый в процессе записи этого журнала.</target>
        </trans-unit>
        <trans-unit id="d67d90ae080b2ba6443535a1ba1538cce623c7a0" translate="yes" xml:space="preserve">
          <source>Size of associated data in bytes after it has been uncompressed (an integer).</source>
          <target state="translated">Размер связанных данных в байтах после их распаковки (целое число).</target>
        </trans-unit>
        <trans-unit id="af19d643ee98cb7aaa5189e1e80bb15629e35fe6" translate="yes" xml:space="preserve">
          <source>Size of pages in this journal.</source>
          <target state="translated">Размер страниц в этом журнале.</target>
        </trans-unit>
        <trans-unit id="594a08e2bfa114e1b1b2dd2a2473b57fc253e650" translate="yes" xml:space="preserve">
          <source>Size of the database file in pages.</source>
          <target state="translated">Размер файла базы данных в страницах.</target>
        </trans-unit>
        <trans-unit id="57e816514d2bd056545721fc5901b1263c953939" translate="yes" xml:space="preserve">
          <source>Size of the database file in pages. The &quot;in-header database size&quot;.</source>
          <target state="translated">Размер файла базы данных в страницах.Размер заголовочной базы данных.</target>
        </trans-unit>
        <trans-unit id="80dfcf68ced67397f8e69446b796772d4e573bd1" translate="yes" xml:space="preserve">
          <source>Skip NULL entries on range queries in &lt;a href=&quot;expridx&quot;&gt;indexes on expressions&lt;/a&gt;. Fix for ticket &lt;a href=&quot;https://www.sqlite.org/src/tktview/4baa46491212947&quot;&gt;4baa46491212947&lt;/a&gt;.</source>
          <target state="translated">Пропускать записи NULL в запросах диапазона в &lt;a href=&quot;expridx&quot;&gt;индексах по выражениям&lt;/a&gt; . Исправление для билета &lt;a href=&quot;https://www.sqlite.org/src/tktview/4baa46491212947&quot;&gt;4baa46491212947&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8597bf03434e274cab90656bf57bce61497b541d" translate="yes" xml:space="preserve">
          <source>Skip over leading spaces in text to numeric conversions.</source>
          <target state="translated">Пропустить лидирующие пробелы в преобразовании текста в цифры.</target>
        </trans-unit>
        <trans-unit id="44c1dff190859dd795700849185006cec261ef11" translate="yes" xml:space="preserve">
          <source>Small code &lt;a href=&quot;footprint&quot;&gt;footprint&lt;/a&gt;: less than 600KiB fully configured or much less with optional features omitted.</source>
          <target state="translated">Небольшой &lt;a href=&quot;footprint&quot;&gt;размер&lt;/a&gt; кода : менее 600 КБ при полной настройке или гораздо меньше без дополнительных функций.</target>
        </trans-unit>
        <trans-unit id="2d43535873c35c636399ec243f6c8a56398f45fc" translate="yes" xml:space="preserve">
          <source>Small edits only overwrite the parts of the file that change, reducing write time and wear on SSD drives.</source>
          <target state="translated">Маленькие правки перезаписывают только те части файла,которые изменяются,что сокращает время записи и износ SSD-накопителей.</target>
        </trans-unit>
        <trans-unit id="15cb3011196ef5ecfa387e72a64b6b9858775898" translate="yes" xml:space="preserve">
          <source>Smaller documents</source>
          <target state="translated">Более мелкие документы</target>
        </trans-unit>
        <trans-unit id="6085ef2b0d377636644056b25b8388fdb9315be1" translate="yes" xml:space="preserve">
          <source>Snapshots of official releases of SQLite source code can often be obtained directly from the &lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;download page&lt;/a&gt; of the SQLite website. Even if the specific version desired is not listed on the download page, the naming conventions are fairly clear and so programmers can often guess the name of an historical release and download it that way.</source>
          <target state="translated">Снимки официальных выпусков исходного кода SQLite часто можно получить прямо со &lt;a href=&quot;https://sqlite.org/download.html&quot;&gt;страницы загрузки&lt;/a&gt; веб-сайта SQLite. Даже если конкретная желаемая версия не указана на странице загрузки, соглашения об именах довольно ясны, и поэтому программисты часто могут угадать название исторической версии и загрузить ее таким образом.</target>
        </trans-unit>
        <trans-unit id="7745ac392b119ee893e25a699e3cdf853f08cced" translate="yes" xml:space="preserve">
          <source>So as not to open security holes in older applications that are unprepared to deal with &lt;a href=&quot;../loadext&quot;&gt;extension loading&lt;/a&gt;, and as a means of disabling &lt;a href=&quot;../loadext&quot;&gt;extension loading&lt;/a&gt; while evaluating user-entered SQL, the following API is provided to turn the &lt;a href=&quot;load_extension&quot;&gt;sqlite3_load_extension()&lt;/a&gt; mechanism on and off.</source>
          <target state="translated">Чтобы не открывать дыры в безопасности в старых приложениях, которые не подготовлены к &lt;a href=&quot;../loadext&quot;&gt;загрузке расширений&lt;/a&gt; , а также как средство отключения &lt;a href=&quot;../loadext&quot;&gt;загрузки расширений&lt;/a&gt; при оценке введенного пользователем SQL, предоставляется следующий API для включения и выключения механизма &lt;a href=&quot;load_extension&quot;&gt;sqlite3_load_extension ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="38b1dd3b3f9a942c8b562e364d61d2076822b07d" translate="yes" xml:space="preserve">
          <source>So as not to open security holes in older applications that are unprepared to deal with &lt;a href=&quot;loadext&quot;&gt;extension loading&lt;/a&gt;, and as a means of disabling &lt;a href=&quot;loadext&quot;&gt;extension loading&lt;/a&gt; while evaluating user-entered SQL, the following API is provided to turn the &lt;a href=&quot;#sqlite3_load_extension&quot;&gt;sqlite3_load_extension()&lt;/a&gt; mechanism on and off.</source>
          <target state="translated">Чтобы не открывать дыры в безопасности в старых приложениях, которые не подготовлены к &lt;a href=&quot;loadext&quot;&gt;загрузке расширений&lt;/a&gt; , а также как средство отключения &lt;a href=&quot;loadext&quot;&gt;загрузки расширений&lt;/a&gt; при оценке введенного пользователем SQL, предоставляется следующий API для включения и выключения механизма &lt;a href=&quot;#sqlite3_load_extension&quot;&gt;sqlite3_load_extension ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="16d0e08c9c27f821bc14542d2dfda5e1d13ecd69" translate="yes" xml:space="preserve">
          <source>So in the vast majority of cases, applications need not worry about the WAL file at all. SQLite will automatically take care of it. But it is possible to get SQLite into a state where the WAL file will grow without bound, causing excess disk space usage and slow queries speeds. The following bullets enumerate some of the ways that this can happen and how to avoid them.</source>
          <target state="translated">Поэтому в подавляющем большинстве случаев приложениям вообще не нужно беспокоиться о файле WAL.SQLite автоматически позаботится о нем.Но можно довести SQLite до такого состояния,когда файл WAL вырастет без ограничений,что приведет к избыточному использованию дискового пространства и замедлению скорости запросов.Следующие пункты перечисляют некоторые из способов,которыми это может произойти,и как их избежать.</target>
        </trans-unit>
        <trans-unit id="e294517ccb0b92866adadbcc46dbbe368da638fb" translate="yes" xml:space="preserve">
          <source>So instead of going by the standards documents, various popular SQL engines were tested to see how they handle NULLs. The idea was to make SQLite work like all the other engines. An SQL test script was developed and run by volunteers on various SQL RDBMSes and the results of those tests were used to deduce how each engine processed NULL values. The original tests were run in May of 2002. A copy of the test script is found at the end of this document.</source>
          <target state="translated">Поэтому вместо того,чтобы идти по документам стандартов,были протестированы различные популярные SQL-движки,чтобы посмотреть,как они справляются с NULL.Идея заключалась в том,чтобы заставить SQLite работать как все остальные движки.Скрипт для тестирования SQL был разработан и запущен добровольцами на различных СУБД SQL,и результаты этих тестов были использованы для того,чтобы определить,как каждый движок обрабатывает NULL-значения.Оригинальные тесты были запущены в мае 2002 года.Копия тестового скрипта находится в конце этого документа.</target>
        </trans-unit>
        <trans-unit id="cb3fd38b2086ae5409a50744fd4fc4e629f9ceb9" translate="yes" xml:space="preserve">
          <source>So let your take-away be this: read/write latency for SQLite is competitive with read/write latency of individual files on disk. Often SQLite is faster. Sometimes SQLite is almost as fast. Either way, this article disproves the common assumption that a relational database must be slower than direct filesystem I/O.</source>
          <target state="translated">Так что пусть ваша очередь будет такой:задержка чтения/записи для SQLite конкурирует с задержкой чтения/записи отдельных файлов на диске.Часто SQLite работает быстрее.Иногда SQLite почти так же быстр.В любом случае,эта статья опровергает распространенное предположение,что реляционная база данных должна быть медленнее,чем прямой ввод/вывод файловой системы.</target>
        </trans-unit>
        <trans-unit id="4e14f136c4639ca69349a007ce6b5be7651832a1" translate="yes" xml:space="preserve">
          <source>So that</source>
          <target state="translated">чтобы</target>
        </trans-unit>
        <trans-unit id="ed811e71ef3d05d3652d347ba0eec5bc9cfd6daf" translate="yes" xml:space="preserve">
          <source>So the implementation of DELETE is really in two loops. The first loop (instructions 5 through 11) locates the records that are to be deleted and saves their keys onto a temporary list, and the second loop (instructions 16 through 19) uses the key list to delete the records one by one.</source>
          <target state="translated">Так что реализация DELETE на самом деле находится в двух циклах.Первый цикл (команды 5-11)находит удаляемые записи и сохраняет их ключи во временный список,а второй цикл (команды 16-19)использует список ключей для удаления записей по одному.</target>
        </trans-unit>
        <trans-unit id="c4f70ed30e8ca5ddd05ca39e32d9f73108273525" translate="yes" xml:space="preserve">
          <source>So then, instead of storing all content for all slides in a single oversized XML file (&quot;content.xml&quot;), suppose there was a separate table for storing the content of each slide separately. The table schema might look something like this:</source>
          <target state="translated">Тогда,вместо того,чтобы хранить все содержимое для всех слайдов в одном большом XML-файле (&quot;content.xml&quot;),предположим,что существовала отдельная таблица для хранения содержимого каждого слайда в отдельности.Схема таблицы может выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="21a527776b915968f528d88d96579bf0b2cfc459" translate="yes" xml:space="preserve">
          <source>So which query plan is better? It turns out that the answer depends on what kind of data is found in the node and edge tables.</source>
          <target state="translated">Так какой план запросов лучше? Получается,что ответ зависит от того,какие данные найдены в узловых и краевых таблицах.</target>
        </trans-unit>
        <trans-unit id="15a7d8b50c8c0de15e18cf6f21d9c00564463215" translate="yes" xml:space="preserve">
          <source>So with this simple change, the ODP file now stores not just the most recent edit to the presentation, but a history of all historic edits. The user would normally want to see just the most recent edition of the presentation, but if desired, the user can now go backwards in time to see historical versions of the same presentation.</source>
          <target state="translated">Таким образом,с этим простым изменением ODP-файл теперь хранит не только самые последние правки презентации,но и историю всех исторических правок.Обычно пользователь хочет увидеть только самую последнюю версию презентации,но при желании он может теперь вернуться назад во времени,чтобы увидеть исторические версии той же самой презентации.</target>
        </trans-unit>
        <trans-unit id="1b3d75a6fea634203c91a87ee6d0199704a76d2e" translate="yes" xml:space="preserve">
          <source>So you can see that depending on how the data is structured in the table, either query plan 1 or query plan 2 might be better. Which plan does SQLite choose by default? As of version 3.6.18, without running &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt;, SQLite will choose option 2. But if the &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; command is run in order to gather statistics, a different choice might be made if the statistics indicate that the alternative is likely to run faster.</source>
          <target state="translated">Итак, вы можете видеть, что в зависимости от того, как данные структурированы в таблице, может быть лучше план запроса 1 или план запроса 2. Какой тарифный план выбирает SQLite по умолчанию? Начиная с версии 3.6.18, без запуска &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; , SQLite выберет опцию 2. Но если команда &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; запускается для сбора статистики, может быть сделан другой выбор, если статистика показывает, что альтернатива, вероятно, будет работать быстрее.</target>
        </trans-unit>
        <trans-unit id="ae83e266982fd9b4e55366971516ab44ce25fd32" translate="yes" xml:space="preserve">
          <source>So, SQLite is able to do one or two large and complex queries, or it can do many smaller and simpler queries. Both are efficient. An application can use either or both techniques, depending on what works best for the situation at hand.</source>
          <target state="translated">Таким образом,SQLite способен выполнять один или два больших и сложных запроса,или же он может выполнять много более мелких и простых запросов.Оба они эффективны.Приложение может использовать как одну,так и обе техники,в зависимости от того,что лучше всего работает в данной ситуации.</target>
        </trans-unit>
        <trans-unit id="bac7c0c462d374d0c622ef9a876ba7c2814954d0" translate="yes" xml:space="preserve">
          <source>So, for example, Android applications written in Java are able to invoke SQLite (through an adaptor). Maybe it would have been more convenient for Android if SQLite had been coded in Java as that would make the interface simpler. However, on iPhone applications are coded in Objective-C or Swift, neither of which have the ability to call libraries written in Java. Thus, SQLite would be unusable on iPhones had it been written in Java.</source>
          <target state="translated">Так,например,приложения для Android,написанные на Java,могут вызывать SQLite (через адаптер).Может быть,для Android было бы удобнее,если бы SQLite был закодирован на Java,так как это сделало бы интерфейс проще.Однако,на iPhone приложения кодируются в Objective-C или Swift,ни одно из которых не имеет возможности вызывать библиотеки,написанные на Java.Таким образом,SQLite был бы непригоден для использования на iPhone,если бы он был написан на Java.</target>
        </trans-unit>
        <trans-unit id="74dbcba5ce1ee9e465ff4640af1328df3383d188" translate="yes" xml:space="preserve">
          <source>So, for example, if you read on Wikipedia that the encoding for the minimum positive binary64 value is 0x0000000000000001, then you can find the corresponding floating point value like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a08fae7d5439605099534f2303acb989c7de8df" translate="yes" xml:space="preserve">
          <source>So, for example, if you wanted to see the compression efficiency (expressed as the size of the compressed content relative to the original uncompressed file size) for all files in the ZIP archive, sorted from most compressed to least compressed, you could run a query like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181a0af408b7a72e62f37951390087a73f4bc42a" translate="yes" xml:space="preserve">
          <source>So, for example, suppose a multi-thread process has two or more threads with separate SQLite database connections to the same database file. Then a third thread comes along and wants to read something out of that same database file on its own, without using the SQLite library. The third thread does an &lt;code&gt;open()&lt;/code&gt;, a &lt;code&gt;read()&lt;/code&gt; and then a &lt;code&gt;close()&lt;/code&gt;. One would think this would be harmless. But the &lt;code&gt;close()&lt;/code&gt; system call caused the locks held on the database by all the other threads to be dropped. Those other threads have no way of knowing that their locks have just been trashed (POSIX does not provide any mechanism to determine this) and so they keep on running under the assumption that their locks are still valid. This can lead to two or more threads or processes trying to write to the database at the same time, resulting in database corruption.</source>
          <target state="translated">Так, например, предположим, что многопоточный процесс имеет два или более потоков с отдельными подключениями базы данных SQLite к одному и тому же файлу базы данных. Затем появляется третий поток, который хочет прочитать что-то из того же файла базы данных самостоятельно, без использования библиотеки SQLite. Третий поток выполняет &lt;code&gt;open()&lt;/code&gt; , &lt;code&gt;read()&lt;/code&gt; а затем &lt;code&gt;close()&lt;/code&gt; . Казалось бы, это безвредно. Но &lt;code&gt;close()&lt;/code&gt; Системный вызов привел к снятию блокировок, удерживаемых в базе данных всеми другими потоками. Эти другие потоки не имеют возможности узнать, что их блокировки только что были сброшены (POSIX не предоставляет никакого механизма для определения этого), и поэтому они продолжают работать в предположении, что их блокировки все еще действительны. Это может привести к тому, что два или более потоков или процессов будут пытаться записать в базу данных одновременно, что приведет к повреждению базы данных.</target>
        </trans-unit>
        <trans-unit id="e67704da7c1255179aaf24e0803cc78b548dbe91" translate="yes" xml:space="preserve">
          <source>So, for example, suppose an application runs one query against an R-Tree like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7734444a7a6faac12d5a5f4324148513ca147ad7" translate="yes" xml:space="preserve">
          <source>So, for example, to move a polygon by some amount DX, DY without changing its shape, use:</source>
          <target state="translated">Так,например,чтобы переместить полигон на некоторое количество DX,DY без изменения его формы,используйте:</target>
        </trans-unit>
        <trans-unit id="e378604952476e70a532691c0957173825ab1905" translate="yes" xml:space="preserve">
          <source>So, in most real systems, an index should be created on the child key columns of each foreign key constraint. The child key index does not have to be (and usually will not be) a UNIQUE index. Returning again to the example in section 1, the complete database schema for efficient implementation of the foreign key constraint might be:</source>
          <target state="translated">Таким образом,в большинстве реальных систем индекс должен быть создан на дочерних столбцах каждого внешнего ключа-ограничения.Индекс дочернего ключа не обязательно должен быть (и,как правило,не будет)индексом UNIQUE.Возвращаясь к примеру в разделе 1,можно получить полную схему базы данных для эффективной реализации ограничения постороннего ключа:</target>
        </trans-unit>
        <trans-unit id="ae3d493e7575fd35c2f366541da3ece2a1661c2d" translate="yes" xml:space="preserve">
          <source>So-called &quot;REAL&quot; or floating point values are stored in the &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_754&quot;&gt;IEEE 754&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Double-precision_floating-point_format&quot;&gt;Binary-64&lt;/a&gt; format. This gives a range of positive values between approximately 1.7976931348623157e+308 and 4.9406564584124654e-324 with an equivalent range of negative values. A binary64 can also be 0.0 (and -0.0), positive and negative infinity and &quot;NaN&quot; or &quot;Not-a-Number&quot;. Floating point values are approximate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3db788b7daff3a78000d452682744db386479ec" translate="yes" xml:space="preserve">
          <source>SoftNull</source>
          <target state="translated">SoftNull</target>
        </trans-unit>
        <trans-unit id="36455d32e1724499e8736ccea81ccd08b26881c3" translate="yes" xml:space="preserve">
          <source>Solve Sudoku puzzles</source>
          <target state="translated">Решать головоломки Судоку</target>
        </trans-unit>
        <trans-unit id="ea9361715e601f0c6bb314bde2f85f47f8bc5402" translate="yes" xml:space="preserve">
          <source>Some &quot;safe&quot; languages (ex: Go) dislike the use of assert(). But the use of assert() is a vital part of keeping SQLite maintainable. The lack of assert() in Go is a show-stopper as far as the developers of SQLite are concerned. See the &lt;a href=&quot;assert&quot;&gt;The Use Of assert() In SQLite&lt;/a&gt; article for additional information.</source>
          <target state="translated">Некоторые &amp;laquo;безопасные&amp;raquo; языки (например, Go) не любят использование assert (). Но использование assert () - жизненно важная часть поддержки SQLite. Отсутствие assert () в Go является препятствием для разработчиков SQLite. См. Дополнительную информацию в статье &lt;a href=&quot;assert&quot;&gt;Использование assert () в SQLite&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82877b639e06578b26b7b6487eda6b76c0a0e3c6" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; statements do their work during sqlite3_prepare() rather than during sqlite3_step(). Those PRAGMA statements are unaffected by EXPLAIN. They operate the same with or without the EXPLAIN prefix. The set of PRAGMA statements that are unaffected by EXPLAIN can vary from one release to the next. Some PRAGMA statements operate during sqlite3_prepare() depending on their arguments. For consistent results, avoid using EXPLAIN on PRAGMA statements.</source>
          <target state="translated">Некоторые операторы &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; выполняют свою работу во время sqlite3_prepare (), а не во время sqlite3_step (). EXPLAIN не влияет на эти утверждения PRAGMA. Они работают одинаково с префиксом EXPLAIN или без него. Набор операторов PRAGMA, на которые не влияет EXPLAIN, может варьироваться от одного выпуска к другому. Некоторые операторы PRAGMA работают во время sqlite3_prepare () в зависимости от их аргументов. Для получения стабильных результатов избегайте использования EXPLAIN в операторах PRAGMA.</target>
        </trans-unit>
        <trans-unit id="5732042dba5cf74de37a47838012719f36ee8111" translate="yes" xml:space="preserve">
          <source>Some Example Triggers</source>
          <target state="translated">Некоторые примеры триггеров</target>
        </trans-unit>
        <trans-unit id="e2da6518510111d1ca6bc33d2d1e98dff9548bb8" translate="yes" xml:space="preserve">
          <source>Some SQL database engines provide non-standard &quot;hint&quot; mechanisms which can be used to give the query optimizer clues about what indices it should use for a particular statement. The INDEX BY clause of SQLite is &lt;em&gt;not&lt;/em&gt; a hinting mechanism and it should not be used as such. The INDEXED BY clause does not give the optimizer hints about which index to use; it gives the optimizer a requirement of which index to use. If the query optimizer is unable to use the index specified by the INDEX BY clause, then the query will fail with an error.</source>
          <target state="translated">Некоторые механизмы баз данных SQL предоставляют нестандартные механизмы &amp;laquo;подсказок&amp;raquo;, которые можно использовать, чтобы дать оптимизатору запросов подсказки о том, какие индексы он должен использовать для определенного оператора. Предложение INDEX BY SQLite &lt;em&gt;не&lt;/em&gt; является механизмом подсказок и не должно использоваться как таковое. Предложение INDEXED BY не дает оптимизатору подсказок о том, какой индекс использовать; он дает оптимизатору требование о том, какой индекс использовать. Если оптимизатор запросов не может использовать индекс, указанный в предложении INDEX BY, запрос завершится ошибкой.</target>
        </trans-unit>
        <trans-unit id="fbf443b96f0d9f6eac4bc80a9c5c544e6d64bd31" translate="yes" xml:space="preserve">
          <source>Some commentators say that SQLite is &quot;weakly typed&quot; and that other SQL databases are &quot;strongly typed&quot;. We consider these terms to be inaccurate and pejorative. We prefer to say that SQLite is &quot;flexibly typed&quot; and that other SQL databases are &quot;rigidly typed&quot;.</source>
          <target state="translated">Некоторые комментаторы говорят,что SQLite &quot;слабо набран&quot;,а другие базы данных SQL &quot;сильно набраны&quot;.Мы считаем эти термины неточными и уничижительными.Мы предпочитаем говорить,что SQLite &quot;гибко набран&quot;,а другие базы данных SQL &quot;жестко набраны&quot;.</target>
        </trans-unit>
        <trans-unit id="ffa0bb5b46a56bce712735328de2ecfd7898dd9a" translate="yes" xml:space="preserve">
          <source>Some devices are compelled to use an older filesystem with 8+3 filename restrictions for backwards compatibility, or due to other non-technical factors. In such situations, SQLite can be coerced into using auxiliary files that fit the 8+3 pattern as follows:</source>
          <target state="translated">Некоторые устройства вынуждены использовать старую файловую систему с ограничениями по имени файла 8+3 для обратной совместимости или из-за других нетехнических факторов.В таких ситуациях SQLite может быть вынужден использовать вспомогательные файлы,соответствующие шаблону 8+3,следующим образом:</target>
        </trans-unit>
        <trans-unit id="a1a4bdb9a86e43ef62782dbb2803e2ef7fef0a7a" translate="yes" xml:space="preserve">
          <source>Some example, cost table entries:</source>
          <target state="translated">Например,записи в таблице расходов:</target>
        </trans-unit>
        <trans-unit id="9234854e8f0cb7e3b23fa0273a95bcc8f4a8eaf9" translate="yes" xml:space="preserve">
          <source>Some examples will help illustrate the difference:</source>
          <target state="translated">Некоторые примеры помогут проиллюстрировать разницу:</target>
        </trans-unit>
        <trans-unit id="31941b285d3264077d66c50c29fee18d7a8c1f66" translate="yes" xml:space="preserve">
          <source>Some freelist pages contain critical data; specifically the locations of other freelist pages. But most freelist pages contain nothing useful. These latter freelist pages are called &quot;leaf&quot; pages. We are free to modify the content of a leaf freelist page in the database without changing the meaning of the database in any way.</source>
          <target state="translated">Некоторые страницы фрилиста содержат критические данные,в частности,расположение других страниц фрилиста.Но большинство страниц фрилиста не содержат ничего полезного.Эти последние страницы фрилиста называются &quot;страницами листа&quot;.Мы вольны изменять содержимое страницы фрилиста в базе данных,не изменяя значения базы данных ни в коем случае.</target>
        </trans-unit>
        <trans-unit id="6d4f98671a50a0a922d51c622597741cdfcd893a" translate="yes" xml:space="preserve">
          <source>Some future versions of SQLite may change to enable this feature by default.</source>
          <target state="translated">Некоторые будущие версии SQLite могут быть изменены для включения этой функции по умолчанию.</target>
        </trans-unit>
        <trans-unit id="2f4d80fea07d79c2b9292b009b4bc9dc70c5c271" translate="yes" xml:space="preserve">
          <source>Some heightened security settings (&lt;a href=&quot;#sqlitedbconfigtrustedschema&quot;&gt;SQLITE_DBCONFIG_TRUSTED_SCHEMA&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_trusted_schema&quot;&gt;PRAGMA trusted_schema=OFF&lt;/a&gt;) disable the use of SQL functions inside views and triggers and in schema structures such as &lt;a href=&quot;lang_createtable#ckconst&quot;&gt;CHECK constraints&lt;/a&gt;, &lt;a href=&quot;lang_createtable#dfltval&quot;&gt;DEFAULT clauses&lt;/a&gt;, &lt;a href=&quot;expridx&quot;&gt;expression indexes&lt;/a&gt;, &lt;a href=&quot;partialindex&quot;&gt;partial indexes&lt;/a&gt;, and &lt;a href=&quot;gencol&quot;&gt;generated columns&lt;/a&gt; unless the function is tagged with SQLITE_INNOCUOUS. Most built-in functions are innocuous. Developers are advised to avoid using the SQLITE_INNOCUOUS flag for application-defined functions unless the function has been carefully audited and found to be free of potentially security-adverse side-effects and information-leaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94760af1d8102735e05f237c89411fff0859308d" translate="yes" xml:space="preserve">
          <source>Some heightened security settings (&lt;a href=&quot;c_dbconfig_defensive#sqlitedbconfigtrustedschema&quot;&gt;SQLITE_DBCONFIG_TRUSTED_SCHEMA&lt;/a&gt; and &lt;a href=&quot;../pragma#pragma_trusted_schema&quot;&gt;PRAGMA trusted_schema=OFF&lt;/a&gt;) disable the use of SQL functions inside views and triggers and in schema structures such as &lt;a href=&quot;../lang_createtable#ckconst&quot;&gt;CHECK constraints&lt;/a&gt;, &lt;a href=&quot;../lang_createtable#dfltval&quot;&gt;DEFAULT clauses&lt;/a&gt;, &lt;a href=&quot;../expridx&quot;&gt;expression indexes&lt;/a&gt;, &lt;a href=&quot;../partialindex&quot;&gt;partial indexes&lt;/a&gt;, and &lt;a href=&quot;../gencol&quot;&gt;generated columns&lt;/a&gt; unless the function is tagged with SQLITE_INNOCUOUS. Most built-in functions are innocuous. Developers are advised to avoid using the SQLITE_INNOCUOUS flag for application-defined functions unless the function has been carefully audited and found to be free of potentially security-adverse side-effects and information-leaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc7150370b1275da7b22e0b3c0daa34955ce5a3" translate="yes" xml:space="preserve">
          <source>Some limits can be changed at run-time on a per-connection basis using the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit()&lt;/a&gt; interface with one of the &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitlength&quot;&gt;limit categories&lt;/a&gt; defined for that interface. Run-time limits are designed for applications that have multiple databases, some of which are for internal use only and others which can be influenced or controlled by potentially hostile external agents. For example, a web browser application might use an internal database to track historical page views but have one or more separate databases that are created and controlled by javascript applications that are downloaded from the internet. The &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit()&lt;/a&gt; interface allows internal databases managed by trusted code to be unconstrained while simultaneously placing tight limitations on databases created or controlled by untrusted external code in order to help prevent a denial of service attack.</source>
          <target state="translated">Некоторые ограничения могут быть изменены во время выполнения для каждого соединения с помощью интерфейса &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit ()&lt;/a&gt; с одной из &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitlength&quot;&gt;категорий ограничений,&lt;/a&gt; определенных для этого интерфейса. Ограничения времени выполнения предназначены для приложений с несколькими базами данных, некоторые из которых предназначены только для внутреннего использования, а другие могут контролироваться или контролироваться потенциально враждебными внешними агентами. Например, приложение веб-браузера может использовать внутреннюю базу данных для отслеживания исторических просмотров страниц, но иметь одну или несколько отдельных баз данных, которые создаются и контролируются приложениями javascript, загружаемыми из Интернета. &lt;a href=&quot;c3ref/limit&quot;&gt;Sqlite3_limit ()&lt;/a&gt;Интерфейс позволяет не ограничивать внутренние базы данных, управляемые доверенным кодом, одновременно накладывая жесткие ограничения на базы данных, созданные или контролируемые ненадежным внешним кодом, чтобы помочь предотвратить атаку отказа в обслуживании.</target>
        </trans-unit>
        <trans-unit id="27f0f8e3878344df85d2a4246c11bee1e47d7640" translate="yes" xml:space="preserve">
          <source>Some older versions of Linux used the LinuxThreads library for thread support. LinuxThreads is similar to Pthreads, but is subtly different with respect to handling of POSIX advisory locks. SQLite versions 2.2.3 through 3.6.23 recognized that LinuxThreads were being used at runtime and took appropriate action to work around the non-standard behavior of LinuxThreads. But most modern Linux implementations make use of the newer, and correct, NPTL implementation of Pthreads. Beginning with SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_7_0.html&quot;&gt;version 3.7.0&lt;/a&gt; (2010-07-21), the use of NPTL is assumed. No checks are made. Hence, recent versions of SQLite will subtly malfunction and may corrupt database files if used in multi-threaded application that run on older linux systems that make use of LinuxThreads.</source>
          <target state="translated">Некоторые старые версии Linux использовали библиотеку LinuxThreads для поддержки потоков. LinuxThreads похож на Pthreads, но немного отличается в отношении обработки рекомендательных блокировок POSIX. SQLite версий с 2.2.3 по 3.6.23 распознал, что LinuxThreads использовался во время выполнения, и предпринял соответствующие действия, чтобы обойти нестандартное поведение LinuxThreads. Но большинство современных реализаций Linux используют более новую и правильную реализацию NPTL для потоков Pthreads. Начиная с &lt;a href=&quot;https://sqlite.org/releaselog/3_7_0.html&quot;&gt;версии&lt;/a&gt; SQLite 3.7.0 ( 21.07.2010 ) предполагается использование NPTL. Никаких проверок не производится. Следовательно, последние версии SQLite будут работать с небольшими сбоями и могут повредить файлы базы данных, если они используются в многопоточном приложении, которое работает в старых системах Linux, использующих LinuxThreads.</target>
        </trans-unit>
        <trans-unit id="0bef87b7bc572b2934b8ea6d4c58c70ed7dd3633" translate="yes" xml:space="preserve">
          <source>Some older versions of SQLite (prior to version 2.4.0) would show decreasing performance after a sequence of DELETEs followed by new INSERTs. As this test shows, the problem has now been resolved.</source>
          <target state="translated">Некоторые старые версии SQLite (до версии 2.4.0)показали бы снижение производительности после последовательности DELETE,за которой следовали бы новые INSERT.Как показывает этот тест,теперь проблема решена.</target>
        </trans-unit>
        <trans-unit id="4b536a604954c308bdf6df6ee3bb8ed7c841aa8c" translate="yes" xml:space="preserve">
          <source>Some opcodes are self-altering. For example, the &lt;a href=&quot;opcode#Init&quot;&gt;Init&lt;/a&gt; opcode (which is always the first opcode in every bytecode program) increments its P1 operand. Subsequent &lt;a href=&quot;opcode#Once&quot;&gt;Once&lt;/a&gt; opcodes compare their P1 operands to the P1 value for the &lt;a href=&quot;opcode#Init&quot;&gt;Init&lt;/a&gt; opcode in order to determine if the one-time initialization code that follows should be skipped. Another example is the &lt;a href=&quot;opcode#String8&quot;&gt;String8&lt;/a&gt; opcode which converts its P4 operand from UTF-8 into the correct database string encoding, then converts itself into a &lt;a href=&quot;opcode#String&quot;&gt;String&lt;/a&gt; opcode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52125a8361f282383783887e4dc2c4cfed4a215d" translate="yes" xml:space="preserve">
          <source>Some opcodes are self-altering. For example, the &lt;a href=&quot;opcode#Init&quot;&gt;Init&lt;/a&gt; opcode (which is always the first opcode run a bytecode program) increments its P1 operand. Subsequent &lt;a href=&quot;opcode#Once&quot;&gt;Once&lt;/a&gt; opcodes compare their P1 operands to the P1 value for the &lt;a href=&quot;opcode#Init&quot;&gt;Init&lt;/a&gt; opcode in order to determine if the one-time initialization code that follows should be skipped. Another example is the &lt;a href=&quot;opcode#String8&quot;&gt;String8&lt;/a&gt; opcode which converts its P4 operand from UTF-8 into the correct database string encoding, then converts itself into a &lt;a href=&quot;opcode#String&quot;&gt;String&lt;/a&gt; opcode.</source>
          <target state="translated">Некоторые коды операций изменяются автоматически. Например, код операции &lt;a href=&quot;opcode#Init&quot;&gt;Init&lt;/a&gt; (который всегда является первым кодом операции запуска программы с байт-кодом) увеличивает свой операнд P1. Последующий &lt;a href=&quot;opcode#Once&quot;&gt;После&lt;/a&gt; опкодов сравнение их P1 операндов к значению P1 для &lt;a href=&quot;opcode#Init&quot;&gt;инициализации&lt;/a&gt; опкода для того , чтобы определить , является ли один-временным код инициализации , который следует следует пропустить. Другой пример - код операции &lt;a href=&quot;opcode#String8&quot;&gt;String8,&lt;/a&gt; который преобразует свой операнд P4 из UTF-8 в правильную кодировку строки базы данных, а затем преобразует себя в код операции &lt;a href=&quot;opcode#String&quot;&gt;String&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="426e64b4a66f4f7807aa6667039b81573979fe2a" translate="yes" xml:space="preserve">
          <source>Some opcodes use all five operands. Some opcodes use one or two. Some opcodes use none of the operands.</source>
          <target state="translated">Некоторые опкоды используют все пять операндов.Некоторые опкоды используют один или два.Некоторые опкоды не используют ни одного из операндов.</target>
        </trans-unit>
        <trans-unit id="18b335ac36fb2d38cd00024b326c89df9316f364" translate="yes" xml:space="preserve">
          <source>Some or all of these restrictions may be removed in the future.</source>
          <target state="translated">Некоторые или все эти ограничения могут быть сняты в будущем.</target>
        </trans-unit>
        <trans-unit id="b476a9e69a79b5371957fc7b1a40c95e375aeff4" translate="yes" xml:space="preserve">
          <source>Some other SQL database engines advise developers to store blobs in separate files and then store the filename in the database. In that case, where the database must first be consulted to find the filename before opening and reading the file, simply storing the entire blob in the database gives much faster read and write performance with SQLite. See the &lt;a href=&quot;intern-v-extern-blob&quot;&gt;Internal Versus External BLOBs&lt;/a&gt; article for more information.</source>
          <target state="translated">Некоторые другие движки баз данных SQL рекомендуют разработчикам хранить большие двоичные объекты в отдельных файлах, а затем сохранять имя файла в базе данных. В том случае, когда необходимо сначала проконсультироваться с базой данных, чтобы найти имя файла перед открытием и чтением файла, простое сохранение всего большого двоичного объекта в базе данных дает гораздо более высокую производительность чтения и записи с помощью SQLite. См. Статью о &lt;a href=&quot;intern-v-extern-blob&quot;&gt;внутренних и внешних больших двоичных объектах&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="e94448e3ce0b80c02ec3cf58a3a89e81bfc4e794" translate="yes" xml:space="preserve">
          <source>Some other database constraint, for example a UNIQUE or CHECK constraint, may be violated when the new row is inserted.</source>
          <target state="translated">Некоторые другие ограничения БД,например,UNIQUE или CHECK,могут быть нарушены при вставке новой строки.</target>
        </trans-unit>
        <trans-unit id="d87a22bd6e23f0cc806f999949a67d71c38a0517" translate="yes" xml:space="preserve">
          <source>Some other database constraint, for example a UNIQUE or CHECK constraint, may be violated when the row is updated.</source>
          <target state="translated">Некоторые другие ограничения БД,например UNIQUE или CHECK,могут быть нарушены при обновлении строки.</target>
        </trans-unit>
        <trans-unit id="a803eb726af2b55f4a3a45a5ec6b4038451fda8a" translate="yes" xml:space="preserve">
          <source>Some other ways in which FTS5 differs from FTS3/4 are:</source>
          <target state="translated">Есть и другие отличия FTS5 от FTS3/4:</target>
        </trans-unit>
        <trans-unit id="e2d6bed42aa0aeee6bb3a36da7e69907ed2fed99" translate="yes" xml:space="preserve">
          <source>Some people say that we should eliminate all warnings because benign warnings mask real warnings that might arise in future changes. This is true enough. But in reply, the developers observe that all warnings have already been fixed in the builds used for SQLite development (various versions of GCC, MSVC, and clang). Compiler warnings usually only arise from compilers or compile-time options that the SQLite developers do not use themselves.</source>
          <target state="translated">Некоторые люди говорят,что мы должны устранить все предупреждения,потому что доброкачественные предупреждения маскируют реальные предупреждения,которые могут возникнуть при будущих изменениях.Это достаточно верно.Но в ответ разработчики отмечают,что все предупреждения уже исправлены в сборках,используемых для разработки SQLite (различные версии GCC,MSVC,clang).Предупреждения компилятора,как правило,выдаются только компиляторами или опциями времени компиляции,которые сами разработчики SQLite не используют.</target>
        </trans-unit>
        <trans-unit id="8711937cd8478cc6ecffffaffa9bef747431485f" translate="yes" xml:space="preserve">
          <source>Some people view RELEASE as the equivalent of COMMIT for a SAVEPOINT. This is an acceptable point of view as long as one remembers that the changes committed by an inner transaction might later be undone by a rollback in an outer transaction.</source>
          <target state="translated">Некоторые люди рассматривают RELEASE как эквивалент COMMIT для SAVEPOINT.Это приемлемая точка зрения,если помнить,что изменения,совершенные внутренней транзакцией,могут быть впоследствии отменены откатом во внешней транзакции.</target>
        </trans-unit>
        <trans-unit id="0c7ab5e876e4a01802f6862f91dcb4e0c53f5563" translate="yes" xml:space="preserve">
          <source>Some pragmas take effect during the SQL compilation stage, not the execution stage. This means if using the C-language &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt;, &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt;, &lt;a href=&quot;c3ref/finalize&quot;&gt;sqlite3_finalize()&lt;/a&gt; API (or similar in a wrapper interface), the pragma may run during the &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; call, not during the &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; call as normal SQL statements do. Or the pragma might run during sqlite3_step() just like normal SQL statements. Whether or not the pragma runs during sqlite3_prepare() or sqlite3_step() depends on the pragma and on the specific release of SQLite.</source>
          <target state="translated">Некоторые прагмы вступают в силу на этапе компиляции SQL, а не на этапе выполнения. Это означает, что при использовании API &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare ()&lt;/a&gt; , &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step ()&lt;/a&gt; , &lt;a href=&quot;c3ref/finalize&quot;&gt;sqlite3_finalize ()&lt;/a&gt; на языке C (или аналогичного в интерфейсе оболочки) прагма может выполняться во время вызова &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare ()&lt;/a&gt; , а не во время вызова &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step ()&lt;/a&gt; как обычный SQL заявления делаю. Или прагма может выполняться во время sqlite3_step (), как обычные операторы SQL. Будет ли прагма выполняться во время sqlite3_prepare () или sqlite3_step (), зависит от прагмы и от конкретной версии SQLite.</target>
        </trans-unit>
        <trans-unit id="16b35f88ff5fdb19b220d3f1fb964fe543a7595b" translate="yes" xml:space="preserve">
          <source>Some programmers cannot imagine developing a complex system like SQLite in a language that is not &quot;object oriented&quot;. So why is SQLite not coded in C++ or Java?</source>
          <target state="translated">Некоторые программисты не могут представить себе разработку такой сложной системы,как SQLite,на языке,который не является &quot;объектно-ориентированным&quot;.Так почему же SQLite не закодирован на C++или Java?</target>
        </trans-unit>
        <trans-unit id="b34c6a5bd79eb90989f1ccbc7f5ec2a47398a0d5" translate="yes" xml:space="preserve">
          <source>Some query parameters are interpreted by the SQLite core and used to modify the characteristics of the new connection. All query parameters are always passed through into the xOpen method of the &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; even if they are previously read and interpreted by the SQLite core.</source>
          <target state="translated">Некоторые параметры запроса интерпретируются ядром SQLite и используются для изменения характеристик нового соединения. Все параметры запроса всегда передаются в метод xOpen &lt;a href=&quot;vfs&quot;&gt;VFS,&lt;/a&gt; даже если они ранее считывались и интерпретировались ядром SQLite.</target>
        </trans-unit>
        <trans-unit id="dfe466f14dd2cc6407106f618ec85911c7fcc3f4" translate="yes" xml:space="preserve">
          <source>Some readers might be reluctant to consider SQLite as an application file format because they have been inculcated with the idea that all SQL database schemas must be factored into third normal form and store only small primitive data types such as strings and integers. Certainly relational theory is important and designers should strive to understand it. But, as demonstrated above, it is often quite acceptable to store complex information as XML or JSON in text fields of a database. Do what works, not what your database professor said you ought to do.</source>
          <target state="translated">Некоторые читатели могут неохотно рассматривать SQLite в качестве формата файла приложения,поскольку им пришла в голову идея,что все схемы баз данных SQL должны быть переведены в третью нормальную форму и хранить только небольшие примитивные типы данных,такие как строки и целые числа.Безусловно,реляционная теория важна,и проектировщики должны стремиться ее понять.Но,как было показано выше,часто вполне допустимо хранить сложную информацию в виде XML или JSON в текстовых полях базы данных.Делайте то,что работает,а не то,что сказал профессор БД.</target>
        </trans-unit>
        <trans-unit id="da24c123adee2fd8a84517f276f1059ec16db37d" translate="yes" xml:space="preserve">
          <source>Some readers might resist using SQLite as an application file format due to prior exposure to enterprise SQL databases and the caveats and limitations of those other systems. For example, many enterprise database engines advise against storing large strings or BLOBs in the database and instead suggest that large strings and BLOBs be stored as separate files and the filename stored in the database. But SQLite is not like that. Any column of an SQLite database can hold a string or BLOB up to about a gigabyte in size. And for strings and BLOBs of 100 kilobytes or less, &lt;a href=&quot;intern-v-extern-blob&quot;&gt;I/O performance is better&lt;/a&gt; than using separate files.</source>
          <target state="translated">Некоторые читатели могут сопротивляться использованию SQLite в качестве формата файла приложения из-за предшествующего знакомства с корпоративными базами данных SQL, а также предостережений и ограничений этих других систем. Например, многие механизмы корпоративных баз данных не рекомендуют хранить в базе данных большие строки или большие двоичные объекты и вместо этого предлагают хранить большие строки и большие двоичные объекты как отдельные файлы, а имя файла - в базе данных. Но SQLite не такой. Любой столбец базы данных SQLite может содержать строку или большой двоичный объект размером до гигабайта. А для строк и больших двоичных объектов размером 100 килобайт или меньше производительность &lt;a href=&quot;intern-v-extern-blob&quot;&gt;ввода-вывода лучше,&lt;/a&gt; чем при использовании отдельных файлов.</target>
        </trans-unit>
        <trans-unit id="4623126273e781b93958cb9c59802c9b42b20a62" translate="yes" xml:space="preserve">
          <source>Some sanity checking code was removed from the inner loop of vdbe.c to help the library to run a little faster. The code is only removed if you compile with -DNDEBUG.</source>
          <target state="translated">Некоторое количество кода проверки вменяемости было удалено из внутреннего цикла vdbe.c,чтобы помочь библиотеке работать немного быстрее.Код удаляется только в том случае,если вы скомпилируете его с помощью -DNDEBUG.</target>
        </trans-unit>
        <trans-unit id="fdb2b13b24f119a63e7d35aeab7a0a13260e1127" translate="yes" xml:space="preserve">
          <source>Some systems (for example, Windows 95) do not support the operation implemented by sqlite3_mutex_try(). On those systems, sqlite3_mutex_try() will always return SQLITE_BUSY. The SQLite core only ever uses sqlite3_mutex_try() as an optimization so this is acceptable behavior.</source>
          <target state="translated">Некоторые системы (например,Windows 95)не поддерживают операцию,реализованную функцией sqlite3_mutex_try().На этих системах функция sqlite3_mutex_try()всегда возвращает SQLITE_BUSY.Ядро SQLite всегда использует sqlite3_mutex_try()только для оптимизации,поэтому такое поведение является приемлемым.</target>
        </trans-unit>
        <trans-unit id="3594c70c212410200cff937ed0dc1d8804fee77c" translate="yes" xml:space="preserve">
          <source>Some virtual table implementations (ex: &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;, &lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt;, and &lt;a href=&quot;rtree&quot;&gt;RTREE&lt;/a&gt;) make use of real (non-virtual) database tables to store content. For example, when content is inserted into the FTS3 virtual table, the data is ultimately stored in real tables named &quot;%_content&quot;, &quot;%_segdir&quot;, &quot;%_segments&quot;, &quot;%_stat&quot;, and &quot;%_docsize&quot; where &quot;%&quot; is the name of the original virtual table. This auxiliary real tables that store content for a virtual table are called &quot;shadow tables&quot;. See (&lt;a href=&quot;fts3#*shadowtab&quot;&gt;1&lt;/a&gt;), (&lt;a href=&quot;fts5#appendix_b&quot;&gt;2&lt;/a&gt;), and (&lt;a href=&quot;rtree#xshadow&quot;&gt;3&lt;/a&gt;) for additional information.</source>
          <target state="translated">Некоторые реализации виртуальных таблиц (например, &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt; , &lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt; и &lt;a href=&quot;rtree&quot;&gt;RTREE&lt;/a&gt; ) используют реальные (не виртуальные) таблицы базы данных для хранения содержимого. Например, когда содержимое вставляется в виртуальную таблицу FTS3, данные в конечном итоге сохраняются в реальных таблицах с именами &amp;laquo;% _content&amp;raquo;, &amp;laquo;% _segdir&amp;raquo;, &amp;laquo;% _segments&amp;raquo;, &amp;laquo;% _stat&amp;raquo; и &amp;laquo;% _docsize&amp;raquo;, где &amp;laquo;% &quot;- это имя исходной виртуальной таблицы. Эти вспомогательные реальные таблицы, в которых хранится содержимое виртуальной таблицы, называются &amp;laquo;теневыми таблицами&amp;raquo;. См. ( &lt;a href=&quot;fts3#*shadowtab&quot;&gt;1&lt;/a&gt; ), ( &lt;a href=&quot;fts5#appendix_b&quot;&gt;2&lt;/a&gt; ) и ( &lt;a href=&quot;rtree#xshadow&quot;&gt;3&lt;/a&gt; ) для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="ac3c1999dd15ec935e4c05fd2cbb35a8f0236c55" translate="yes" xml:space="preserve">
          <source>Some virtual table implementations may INSERT rows into rowid tables as part of committing a transaction (e.g. to flush data accumulated in memory to disk). In this case subsequent calls to this function return the rowid associated with these internal INSERT operations, which leads to unintuitive results. Virtual table implementations that do write to rowid tables in this way can avoid this problem by restoring the original rowid value using &lt;a href=&quot;#sqlite3_set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid()&lt;/a&gt; before returning control to the user.</source>
          <target state="translated">Некоторые реализации виртуальных таблиц могут ВСТАВЛЯТЬ строки в таблицы rowid как часть фиксации транзакции (например, для сброса данных, накопленных в памяти, на диск). В этом случае последующие вызовы этой функции возвращают идентификатор строки, связанный с этими внутренними операциями INSERT, что приводит к неинтуитивным результатам. Реализации виртуальных таблиц, которые делают запись в таблицы rowid таким образом, могут избежать этой проблемы, восстанавливая исходное значение &lt;a href=&quot;#sqlite3_set_last_insert_rowid&quot;&gt;rowid&lt;/a&gt; с помощью sqlite3_set_last_insert_rowid () перед возвратом управления пользователю.</target>
        </trans-unit>
        <trans-unit id="bf0309e04b01e09dca18924e050475fbb9284235" translate="yes" xml:space="preserve">
          <source>Some virtual table implementations may INSERT rows into rowid tables as part of committing a transaction (e.g. to flush data accumulated in memory to disk). In this case subsequent calls to this function return the rowid associated with these internal INSERT operations, which leads to unintuitive results. Virtual table implementations that do write to rowid tables in this way can avoid this problem by restoring the original rowid value using &lt;a href=&quot;set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid()&lt;/a&gt; before returning control to the user.</source>
          <target state="translated">Некоторые реализации виртуальных таблиц могут ВСТАВЛЯТЬ строки в таблицы rowid как часть фиксации транзакции (например, для сброса данных, накопленных в памяти, на диск). В этом случае последующие вызовы этой функции возвращают идентификатор строки, связанный с этими внутренними операциями INSERT, что приводит к неинтуитивным результатам. Реализации виртуальных таблиц, которые делают запись в таблицы rowid таким образом, могут избежать этой проблемы, восстанавливая исходное значение &lt;a href=&quot;set_last_insert_rowid&quot;&gt;rowid&lt;/a&gt; с помощью sqlite3_set_last_insert_rowid () перед возвратом управления пользователю.</target>
        </trans-unit>
        <trans-unit id="37863aa03861c512ad1c77afb4b6689cfad7493b" translate="yes" xml:space="preserve">
          <source>Some virtual tables exist automatically in the &quot;main&quot; schema of every database connection in which their module is registered, even without a &lt;a href=&quot;lang_createvtab&quot;&gt;CREATE VIRTUAL TABLE&lt;/a&gt; statement. Such virtual tables are called &quot;eponymous virtual tables&quot;. To use an eponymous virtual table, simply use the module name as if it were a table. Eponymous virtual tables exist in the &quot;main&quot; schema only, so they will not work if prefixed with a different schema name.</source>
          <target state="translated">Некоторые виртуальные таблицы автоматически существуют в &amp;laquo;основной&amp;raquo; схеме каждого соединения с базой данных, в котором зарегистрирован их модуль, даже без оператора &lt;a href=&quot;lang_createvtab&quot;&gt;CREATE VIRTUAL TABLE&lt;/a&gt; . Такие виртуальные таблицы называются &amp;laquo;одноименными виртуальными таблицами&amp;raquo;. Чтобы использовать одноименную виртуальную таблицу, просто используйте имя модуля, как если бы это была таблица. Одноименные виртуальные таблицы существуют только в &amp;laquo;основной&amp;raquo; схеме, поэтому они не будут работать, если им присвоено другое имя схемы.</target>
        </trans-unit>
        <trans-unit id="0235dde661a1106f01332ba53a569381817a7286" translate="yes" xml:space="preserve">
          <source>Someone (or some process) might rename the database file but fail to also rename its associated journal.</source>
          <target state="translated">Кто-то (или какой-то процесс)может переименовать файл базы данных,но не сможет переименовать и связанный с ним журнал.</target>
        </trans-unit>
        <trans-unit id="4532d3d7be4feca574a6f6430b43e863945ec230" translate="yes" xml:space="preserve">
          <source>Sometimes &lt;b&gt;sqlite_exec()&lt;/b&gt; would return SQLITE_PROTOCOL when it should have returned SQLITE_BUSY.</source>
          <target state="translated">Иногда &lt;b&gt;sqlite_exec ()&lt;/b&gt; возвращал SQLITE_PROTOCOL, хотя должен был возвращать SQLITE_BUSY.</target>
        </trans-unit>
        <trans-unit id="dc0c06ae51aa05a33354304329c9c25f09e5959c" translate="yes" xml:space="preserve">
          <source>Sometimes SQLite uses compile-time evaluatable assert() statements. Consider the code at &lt;a href=&quot;https://sqlite.org/src/artifact/c1e97e4c6f?ln=2130-2138&quot;&gt;https://sqlite.org/src/artifact/c1e97e4c6f?ln=2130-2138&lt;/a&gt;. Four assert() statements verify the values for compile-time constants so that the reader can quickly check the validity of the if-statement that follows, without having to look up the constant values in a separate header file.</source>
          <target state="translated">Иногда SQLite использует вычисляемые операторы assert () во время компиляции. Рассмотрим код на &lt;a href=&quot;https://sqlite.org/src/artifact/c1e97e4c6f?ln=2130-2138&quot;&gt;https://sqlite.org/src/artifact/c1e97e4c6f?ln=2130-2138&lt;/a&gt; . Четыре оператора assert () проверяют значения констант времени компиляции, чтобы читатель мог быстро проверить правильность следующего оператора if без необходимости искать значения констант в отдельном файле заголовка.</target>
        </trans-unit>
        <trans-unit id="e72dc8159e740969eabd99a1be0aa498a87e7c0f" translate="yes" xml:space="preserve">
          <source>Sometimes a LEFT JOIN can be completely omitted from a query without changing the result. This can happen if all of the following are true:</source>
          <target state="translated">Иногда LEFT JOIN может быть полностью опущен из запроса без изменения результата.Это может произойти,если все нижеследующее верно:</target>
        </trans-unit>
        <trans-unit id="3f8fa5c7b1abe4111bb41632dd1fff37e6c00e99" translate="yes" xml:space="preserve">
          <source>Sometimes a LEFT JOIN can be converted into an ordinary JOIN, if there are terms in the WHERE clause that guarantee that the two joins will give identical results. In particular, if any column in the right-hand table of the LEFT JOIN must be non-NULL in order for the WHERE clause to be true, then the LEFT JOIN is demoted to an ordinary JOIN.</source>
          <target state="translated">Иногда LEFT JOIN может быть конвертирован в обычное JOIN,если в пункте WHERE есть условия,гарантирующие,что два соединения дадут одинаковый результат.В частности,если любой столбец в правой таблице ЛЕВОГО СОГЛАШЕНИЯ должен быть НЕРНЫМ,чтобы условие WHERE было верным,тогда ЛЕВОЕ СОГЛАШЕНИЕ понижается до обычного СОГЛАШЕНИЯ.</target>
        </trans-unit>
        <trans-unit id="f090235439a288798f47de0b5a65b1ea028dc3f6" translate="yes" xml:space="preserve">
          <source>Sometimes a power failure will cause a filesystem to be corrupted such that recently changed filenames are forgotten and the file is moved into a &quot;/lost+found&quot; directory. When that happens, the hot journal will not be found and recovery will not occur. SQLite tries to prevent this by opening and syncing the directory containing the rollback journal at the same time it syncs the journal file itself. However, the movement of files into /lost+found can be caused by unrelated processes creating unrelated files in the same directory as the main database file. And since this is out from under the control of SQLite, there is nothing that SQLite can do to prevent it. If you are running on a system that is vulnerable to this kind of filesystem namespace corruption (most modern journalling filesystems are immune, we believe) then you might want to consider putting each SQLite database file in its own private subdirectory.</source>
          <target state="translated">Иногда сбой электропитания приводит к повреждению файловой системы,так что недавно измененные имена файлов забываются,и файл перемещается в каталог &quot;/lost+found&quot;.В этом случае горячий журнал не будет найден и восстановление не произойдет.SQLite пытается предотвратить это,открывая и синхронизируя каталог,содержащий журнал отката,одновременно синхронизируя сам файл журнала.Однако,перемещение файлов в /lost+found может быть вызвано несвязанными процессами создания несвязанных файлов в той же директории,что и основной файл БД.А так как это находится вне контроля SQLite,то нет ничего,что SQLite может сделать,чтобы предотвратить это.Если вы работаете на системе,которая уязвима к такого рода повреждениям пространства имен файловой системы (мы полагаем,что большинство современных файловых систем журналов защищены от них),то,возможно,вам стоит подумать о том,чтобы поместить каждый файл базы данных SQLite в свою собственную закрытую поддиректорию.</target>
        </trans-unit>
        <trans-unit id="3f9f858786d7c98364aee861ef2804edc03f7313" translate="yes" xml:space="preserve">
          <source>Sometimes applications encounter this error even though there is an abundance of primary disk space because the error occurs when writing into &lt;a href=&quot;tempfiles&quot;&gt;temporary disk files&lt;/a&gt; on a system where temporary files are stored on a separate partition with much less space that the primary disk.</source>
          <target state="translated">Иногда приложения сталкиваются с этой ошибкой, даже если первичного дискового пространства много, потому что ошибка возникает при записи во &lt;a href=&quot;tempfiles&quot;&gt;временные файлы&lt;/a&gt; на диске в системе, где временные файлы хранятся в отдельном разделе с гораздо меньшим пространством, чем на основном диске.</target>
        </trans-unit>
        <trans-unit id="fff8b7e3376a922064133232ffd6552acd46f238" translate="yes" xml:space="preserve">
          <source>Sometimes compile-time assert() statements are used to verify that SQLite has been correctly compiled. For example, the code at &lt;a href=&quot;https://sqlite.org/src/artifact/c1e97e4c6f?ln=157&quot;&gt;https://sqlite.org/src/artifact/c1e97e4c6f?ln=157&lt;/a&gt; verifies that the SQLITE_PTRSIZE preprocessor macro is set correctly for the target architecture.</source>
          <target state="translated">Иногда операторы assert () во время компиляции используются для проверки правильности компиляции SQLite. Например, код на &lt;a href=&quot;https://sqlite.org/src/artifact/c1e97e4c6f?ln=157&quot;&gt;https://sqlite.org/src/artifact/c1e97e4c6f?ln=157&lt;/a&gt; проверяет правильность установки макроса препроцессора SQLITE_PTRSIZE для целевой архитектуры.</target>
        </trans-unit>
        <trans-unit id="d7e0873ee1e2576915056da7a06e2b494b2dd17f" translate="yes" xml:space="preserve">
          <source>Sometimes only part of an ORDER BY clause can be satisfied using indexes. Consider, for example, the following query:</source>
          <target state="translated">Иногда с помощью индексов может быть удовлетворена только часть пункта ЗАКАЗАТЬ ПО ЗАКАЗЧИКУ.Рассмотрим,например,следующий запрос:</target>
        </trans-unit>
        <trans-unit id="08e9765fc44bda2fdb0012e4541cc28a30458938" translate="yes" xml:space="preserve">
          <source>Sometimes operating systems will exhibit non-standard behavior which can lead to problems. Sometimes this non-standard behavior is deliberate, and sometimes it is a mistake in the implementation. But in any event, if the operating performs differently from they way SQLite expects it to perform, the possibility of database corruption exists.</source>
          <target state="translated">Иногда операционные системы проявляют нестандартное поведение,которое может привести к проблемам.Иногда такое нестандартное поведение является преднамеренным,а иногда и ошибкой в реализации.Но в любом случае,если операция работает не так,как ожидает SQLite,существует вероятность повреждения базы данных.</target>
        </trans-unit>
        <trans-unit id="60f1e4ae24175645a79034bd7c885a1e7d0f09d3" translate="yes" xml:space="preserve">
          <source>Sometimes the use of row values just makes the SQL easier to read and write. Consider the following two UPDATE statements:</source>
          <target state="translated">Иногда использование значений строк просто делает SQL более удобным для чтения и записи.Рассмотрим два следующих оператора UPDATE:</target>
        </trans-unit>
        <trans-unit id="24e2bab9e04a22b3a6d58f84b00743d3fb69e859" translate="yes" xml:space="preserve">
          <source>Sometimes when this error code is encountered, the &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; routine will convert the error into &lt;a href=&quot;rescode#error_retry&quot;&gt;SQLITE_ERROR_RETRY&lt;/a&gt; and try again to prepare the SQL statement using a different query plan that does not require the use of the unknown collating sequence.</source>
          <target state="translated">Иногда, когда встречается этот код ошибки, процедура &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2 ()&lt;/a&gt; преобразует ошибку в &lt;a href=&quot;rescode#error_retry&quot;&gt;SQLITE_ERROR_RETRY&lt;/a&gt; и снова пытается подготовить оператор SQL, используя другой план запроса, который не требует использования неизвестной последовательности сортировки.</target>
        </trans-unit>
        <trans-unit id="adc4e96a478be02a8147b100bd68113f38b89f80" translate="yes" xml:space="preserve">
          <source>Sort</source>
          <target state="translated">Sort</target>
        </trans-unit>
        <trans-unit id="5601af90fba7fe38466b58c08c018711849b8855" translate="yes" xml:space="preserve">
          <source>Sort order</source>
          <target state="translated">Сортировочный заказ</target>
        </trans-unit>
        <trans-unit id="74ab25d1e3d8ae1cb528685baf2d71b92460809e" translate="yes" xml:space="preserve">
          <source>SorterCompare</source>
          <target state="translated">SorterCompare</target>
        </trans-unit>
        <trans-unit id="e274ec5d63c6eab4a322b40fa92da953e269dcf5" translate="yes" xml:space="preserve">
          <source>SorterData</source>
          <target state="translated">SorterData</target>
        </trans-unit>
        <trans-unit id="84dc5b8de2832faa332b637acd50721fb4db3efe" translate="yes" xml:space="preserve">
          <source>SorterInsert</source>
          <target state="translated">SorterInsert</target>
        </trans-unit>
        <trans-unit id="2737748d72de05dcf6eba2817820522a4badd0ec" translate="yes" xml:space="preserve">
          <source>SorterNext</source>
          <target state="translated">SorterNext</target>
        </trans-unit>
        <trans-unit id="efe2a2f235ed328025a0db49a289c00d154bb3ba" translate="yes" xml:space="preserve">
          <source>SorterOpen</source>
          <target state="translated">SorterOpen</target>
        </trans-unit>
        <trans-unit id="58a2d7ee050bba205b0d21e366ed8ecfcceedf59" translate="yes" xml:space="preserve">
          <source>SorterSort</source>
          <target state="translated">SorterSort</target>
        </trans-unit>
        <trans-unit id="7dadfa55de2cffb43bdf1a8f139a4a743a9af71b" translate="yes" xml:space="preserve">
          <source>Sorting is accomplished by writing records into a sorting index, then rewinding that index and playing it back from beginning to end. We use the &lt;a href=&quot;opcode#Sort&quot;&gt;Sort&lt;/a&gt; opcode instead of &lt;a href=&quot;opcode#Rewind&quot;&gt;Rewind&lt;/a&gt; to do the rewinding so that the global variable will be incremented and regression tests can determine whether or not the optimizer is correctly optimizing out sorts.</source>
          <target state="translated">Сортировка выполняется путем записи записей в индекс сортировки, затем перемотки этого индекса и воспроизведения его от начала до конца. Мы используем код операции &lt;a href=&quot;opcode#Sort&quot;&gt;Sort&lt;/a&gt; вместо &lt;a href=&quot;opcode#Rewind&quot;&gt;Rewind,&lt;/a&gt; чтобы выполнить перемотку, чтобы глобальная переменная была увеличена, а регрессионные тесты могли определить, правильно ли оптимизатор оптимизирует сортировку.</target>
        </trans-unit>
        <trans-unit id="94c08b606385251adc6f9a4723f760124243a4d3" translate="yes" xml:space="preserve">
          <source>Sorting subsets of the result</source>
          <target state="translated">Сортировка подмножеств результата</target>
        </trans-unit>
        <trans-unit id="516e89309d994acf5d94c4a4907b3ff4a8e53a80" translate="yes" xml:space="preserve">
          <source>Source Of Data In A Query Result</source>
          <target state="translated">Источник данных в результате запроса</target>
        </trans-unit>
        <trans-unit id="cfbc658da4e64bd6eef7ec70eab5adab3d14a41a" translate="yes" xml:space="preserve">
          <source>Source code for several useful extensions can be found in the &lt;a href=&quot;http://www.sqlite.org/src/tree?name=ext/misc&amp;amp;ci=trunk&quot;&gt;ext/misc&lt;/a&gt; subdirectory of the SQLite source tree. You can use these extensions as-is, or as a basis for creating your own custom extensions to address your own particular needs.</source>
          <target state="translated">Исходный код для нескольких полезных расширений можно найти в подкаталоге &lt;a href=&quot;http://www.sqlite.org/src/tree?name=ext/misc&amp;amp;ci=trunk&quot;&gt;ext / misc&lt;/a&gt; дерева исходных текстов SQLite. Вы можете использовать эти расширения как есть или в качестве основы для создания ваших собственных расширений для удовлетворения ваших конкретных потребностей.</target>
        </trans-unit>
        <trans-unit id="64243b8fe27d8786b74ebe9ad360b0c831315629" translate="yes" xml:space="preserve">
          <source>Sources are in the &lt;a href=&quot;https://sqlite.org/copyright.html&quot;&gt;public domain&lt;/a&gt;. Use for any purpose.</source>
          <target state="translated">Источники находятся в &lt;a href=&quot;https://sqlite.org/copyright.html&quot;&gt;открытом доступе&lt;/a&gt; . Используйте для любых целей.</target>
        </trans-unit>
        <trans-unit id="bdb7e396773f80244c6756a8ac8a3ba107260e6f" translate="yes" xml:space="preserve">
          <source>Spatial indices using &lt;a href=&quot;rtree&quot;&gt;R-Trees&lt;/a&gt;</source>
          <target state="translated">Пространственные индексы с использованием &lt;a href=&quot;rtree&quot;&gt;R-деревьев&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f329318e826b6123bdadb48df921310c8b500b7" translate="yes" xml:space="preserve">
          <source>Speak no useless words or words that move to laughter.</source>
          <target state="translated">Не говори бесполезных слов или слов,которые движутся к смеху.</target>
        </trans-unit>
        <trans-unit id="9cda32c171792b8ebd4697561ad451beebb8dd76" translate="yes" xml:space="preserve">
          <source>Special INSERT operates can be used to issue commands to FTS3 and FTS4 tables. Every FTS3 and FTS4 has a hidden, read-only column which is the same name as the table itself. INSERTs into this hidden column are interpreted as commands to the FTS3/4 table. For a table with the name &quot;xyz&quot; the following commands are supported:</source>
          <target state="translated">Для выдачи команд к таблицам FTS3 и FTS4 можно использовать специальные операции INSERT.Каждый FTS3 и FTS4 имеет скрытый,доступный только для чтения столбец,который имеет то же имя,что и сама таблица.INSERT в этот скрытый столбец интерпретируется как команды к таблице FTS3/4.Для таблицы с именем &quot;xyz&quot; поддерживаются следующие команды:</target>
        </trans-unit>
        <trans-unit id="5c62a06b3206449dc4ac80333e6db0c204db7ba5" translate="yes" xml:space="preserve">
          <source>Special processing occurs when the aggregate function is either &lt;a href=&quot;lang_aggfunc#maxggunc&quot;&gt;min()&lt;/a&gt; or &lt;a href=&quot;lang_aggfunc#minggunc&quot;&gt;max()&lt;/a&gt;. Example:</source>
          <target state="translated">Специальная обработка происходит, когда агрегатной функцией является &lt;a href=&quot;lang_aggfunc#maxggunc&quot;&gt;min ()&lt;/a&gt; или &lt;a href=&quot;lang_aggfunc#minggunc&quot;&gt;max ()&lt;/a&gt; . Пример:</target>
        </trans-unit>
        <trans-unit id="6937900c4a39aa0fb125a152dfd5d62be4f8822d" translate="yes" xml:space="preserve">
          <source>Special sqlite_stat1 Handling</source>
          <target state="translated">Специальная обработка sqlite_stat1</target>
        </trans-unit>
        <trans-unit id="1e4c6816e6235fac1910f655a4449098f3bab054" translate="yes" xml:space="preserve">
          <source>Special versions of the SQLite amalgamation that do work with a predetermined set of SQLITE_OMIT_* options can be generated. To do so, make a copy of the Makefile.linux-gcc makefile template in the canonical source code distribution. Change the name of your copy to simply &quot;Makefile&quot;. Then edit &quot;Makefile&quot; to set up appropriate compile-time options. Then type:</source>
          <target state="translated">Могут быть сгенерированы специальные версии слияния SQLite,которые работают с предопределенным набором опций SQLITE_OMIT_*.Для этого сделайте копию makefile шаблона Makefile.linux-gcc в каноническом дистрибутиве исходных текстов.Измените имя своей копии на просто &quot;Makefile&quot;.Затем отредактируйте &quot;Makefile&quot;,чтобы установить соответствующие опции времени компиляции.Затем введите:</target>
        </trans-unit>
        <trans-unit id="348842ed415067bf469c3c07cbca8231199b183f" translate="yes" xml:space="preserve">
          <source>Specialized applications for which the default implementation of shared memory is unacceptable can devise alternative methods via a custom &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;. For example, if it is known that a particular database will only be accessed by threads within a single process, the wal-index can be implemented using heap memory instead of true shared memory.</source>
          <target state="translated">Специализированные приложения, для которых реализация разделяемой памяти по умолчанию неприемлема, могут разработать альтернативные методы с помощью специальной &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; . Например, если известно, что к конкретной базе данных будут обращаться только потоки в рамках одного процесса, то wal-index может быть реализован с использованием памяти кучи вместо истинной разделяемой памяти.</target>
        </trans-unit>
        <trans-unit id="a647b0621c3756491eb85db442ab54ae4811cd09" translate="yes" xml:space="preserve">
          <source>Specific pragma statements may be removed and others added in future releases of SQLite. There is no guarantee of backwards compatibility.</source>
          <target state="translated">Конкретные прагматические выражения могут быть удалены,а другие добавлены в будущие релизы SQLite.Гарантия обратной совместимости отсутствует.</target>
        </trans-unit>
        <trans-unit id="32a894085a5589da14805f40b5e5ec42d34bdb30" translate="yes" xml:space="preserve">
          <source>Specify an alternative malloc implementation using the &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmalloc&quot;&gt;SQLITE_CONFIG_MALLOC&lt;/a&gt; verb with the &lt;a href=&quot;c3ref/mem_methods&quot;&gt;sqlite3_mem_methods&lt;/a&gt; object.</source>
          <target state="translated">Укажите альтернативную реализацию malloc, используя команду &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmalloc&quot;&gt;SQLITE_CONFIG_MALLOC&lt;/a&gt; с объектом &lt;a href=&quot;c3ref/mem_methods&quot;&gt;sqlite3_mem_methods&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7969816e7b05b7f6c6da58d9c3d55a797859dc5f" translate="yes" xml:space="preserve">
          <source>Specify an alternative mutex implementation using the &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmutex&quot;&gt;SQLITE_CONFIG_MUTEX&lt;/a&gt; verb with the &lt;a href=&quot;c3ref/mutex_methods&quot;&gt;sqlite3_mutex_methods&lt;/a&gt; object.</source>
          <target state="translated">Укажите альтернативную реализацию мьютекса, используя команду &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmutex&quot;&gt;SQLITE_CONFIG_MUTEX&lt;/a&gt; с объектом &lt;a href=&quot;c3ref/mutex_methods&quot;&gt;sqlite3_mutex_methods&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7d9e8c303af8fa2eba928e74e37e3e2d5b8ccc2" translate="yes" xml:space="preserve">
          <source>Specify an application-defined page cache.</source>
          <target state="translated">Укажите кэш страниц,определяемый приложением.</target>
        </trans-unit>
        <trans-unit id="675036f344331d67d2ac3929e1284013b1817b31" translate="yes" xml:space="preserve">
          <source>Specifying a new page size does not change the page size immediately. Instead, the new page size is remembered and is used to set the page size when the database is first created, if it does not already exist when the page_size pragma is issued, or at the next &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; command that is run on the same database connection while not in &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt;.</source>
          <target state="translated">Указание нового размера страницы не приводит к немедленному изменению размера страницы. Вместо этого новый размер страницы запоминается и используется для установки размера страницы при первом создании базы данных, если он еще не существует, когда выдается прагма page_size, или при следующей команде &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM,&lt;/a&gt; которая запускается в том же соединении с базой данных. пока не в &lt;a href=&quot;wal&quot;&gt;режиме WAL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dfdc7dcd44b7642ef54261a530f0a8d271e92800" translate="yes" xml:space="preserve">
          <source>Specifying an explicit value for the rowid field as part of an INSERT statement is not supported. Any value supplied is ignored.</source>
          <target state="translated">Указание явного значения для строкового поля как части оператора INSERT не поддерживается.Любое заданное значение игнорируется.</target>
        </trans-unit>
        <trans-unit id="ff83e10cd15a3b1a3684d12025d600161e1e03fe" translate="yes" xml:space="preserve">
          <source>Specifying an unknown parameter in the query component of a URI is not an error. Future versions of SQLite might understand additional query parameters. See &quot;&lt;a href=&quot;../uri#coreqp&quot;&gt;query parameters with special meaning to SQLite&lt;/a&gt;&quot; for additional information.</source>
          <target state="translated">Указание неизвестного параметра в компоненте запроса URI не является ошибкой. В будущих версиях SQLite могут быть понятны дополнительные параметры запроса. См. &amp;laquo; &lt;a href=&quot;../uri#coreqp&quot;&gt;Параметры запроса со специальным значением для SQLite&lt;/a&gt; &amp;raquo; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="ca08c5f93bc177c41e9e1cbac8bb1b05f691f402" translate="yes" xml:space="preserve">
          <source>Specifying an unknown parameter in the query component of a URI is not an error. Future versions of SQLite might understand additional query parameters. See &quot;&lt;a href=&quot;uri#coreqp&quot;&gt;query parameters with special meaning to SQLite&lt;/a&gt;&quot; for additional information.</source>
          <target state="translated">Указание неизвестного параметра в компоненте запроса URI не является ошибкой. В будущих версиях SQLite могут быть понятны дополнительные параметры запроса. См. &amp;laquo; &lt;a href=&quot;uri#coreqp&quot;&gt;Параметры запроса со специальным значением для SQLite&lt;/a&gt; &amp;raquo; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="b5466deac546a32beeffc729c74a6e5fd300f895" translate="yes" xml:space="preserve">
          <source>Specifying three arguments when creating an fts5vocab table in any database other than &quot;temp&quot; results in an error.</source>
          <target state="translated">Указание трех аргументов при создании таблицы fts5vocab в любой базе данных,отличной от &quot;temp&quot;,приводит к ошибке.</target>
        </trans-unit>
        <trans-unit id="076b62c1c3d09beab9691ee6f442faa2e62ef7a7" translate="yes" xml:space="preserve">
          <source>Speed improvements</source>
          <target state="translated">Улучшение скорости</target>
        </trans-unit>
        <trans-unit id="65d5a13bd4511e6816f18d10b6fcf53288c30d62" translate="yes" xml:space="preserve">
          <source>Speed improvements and library footprint reductions.</source>
          <target state="translated">Улучшение скорости и уменьшение площади библиотеки.</target>
        </trans-unit>
        <trans-unit id="886fdbf5bb356c1170f6be819f95ecf4cc1461e3" translate="yes" xml:space="preserve">
          <source>Speed improvements in the VDBE.</source>
          <target state="translated">Улучшение скорости в VDBE.</target>
        </trans-unit>
        <trans-unit id="67d42db811b80e228f8d1a0a01dc2cacac3b1009" translate="yes" xml:space="preserve">
          <source>Speed improvements in the btree and pager layers.</source>
          <target state="translated">Улучшение скорости в слоях btree и pager.</target>
        </trans-unit>
        <trans-unit id="0da1385bd95c04e2cef432911cc39014873cc087" translate="yes" xml:space="preserve">
          <source>Speed improvements: Do not do synchronous updates on TEMP tables.</source>
          <target state="translated">Улучшение скорости:Не делайте синхронных обновлений таблиц TEMP.</target>
        </trans-unit>
        <trans-unit id="77d342a78b198923e433b8a1315c81a6ffbf9833" translate="yes" xml:space="preserve">
          <source>Split amalgamation</source>
          <target state="translated">Слияние в одно целое</target>
        </trans-unit>
        <trans-unit id="1dac9d1634f1fa754c9cb08212550ad68bf6b1f7" translate="yes" xml:space="preserve">
          <source>Split the pager subsystem into separate pager and pcache subsystems.</source>
          <target state="translated">Разделить подсистему пейджера на отдельные подсистемы пейджера и кэша.</target>
        </trans-unit>
        <trans-unit id="1bb46447f9362d79f903651b48710b55ec51dd8a" translate="yes" xml:space="preserve">
          <source>Splitting content into smaller pieces also helps File/Save operations to go faster. Instead of having to write back the content of all pages when doing a File/Save, the application only has to write back those pages that have actually changed.</source>
          <target state="translated">Разделение содержимого на более мелкие части также помогает быстрее выполнять операции &quot;Файл/Сохранить&quot;.Вместо того,чтобы при выполнении операции Файл/Сохранение записывать обратно содержимое всех страниц,приложение должно записывать обратно только те страницы,которые действительно изменились.</target>
        </trans-unit>
        <trans-unit id="f0b1c55ba41f5df4c296b1603dd8662a874ad05f" translate="yes" xml:space="preserve">
          <source>SqlExec</source>
          <target state="translated">SqlExec</target>
        </trans-unit>
        <trans-unit id="21ba7365f757b4f24cbf08b5870a91de5cd965d8" translate="yes" xml:space="preserve">
          <source>Sqldiff --rbu</source>
          <target state="translated">Склдифф...</target>
        </trans-unit>
        <trans-unit id="785ca9526809c90e3417966be7d5844fd2a0c5c8" translate="yes" xml:space="preserve">
          <source>Stability</source>
          <target state="translated">Stability</target>
        </trans-unit>
        <trans-unit id="d96e5b2dd07c1733b2b013bd82922c22baade37d" translate="yes" xml:space="preserve">
          <source>Stable</source>
          <target state="translated">Stable</target>
        </trans-unit>
        <trans-unit id="ed9cb8071fd38e38b556df67e342f21ef7bd62db" translate="yes" xml:space="preserve">
          <source>Stable interfaces will be maintained indefinitely in a backwards compatible way. An application that uses only stable interfaces should always be able to relink against a newer version of SQLite without any changes.</source>
          <target state="translated">Стабильные интерфейсы будут поддерживаться бесконечно в обратно совместимом виде.Приложение,использующее только стабильные интерфейсы,всегда должно быть в состоянии безо всяких изменений перейти на новую версию SQLite.</target>
        </trans-unit>
        <trans-unit id="9d69ca23f60003536eb90ef7c1a45510967cd2a5" translate="yes" xml:space="preserve">
          <source>Stale file descriptor</source>
          <target state="translated">Дескриптор устаревших файлов</target>
        </trans-unit>
        <trans-unit id="aaf4ee63c814f2ac7a90ca00e168f99ba47070e5" translate="yes" xml:space="preserve">
          <source>Standard File Control Opcodes</source>
          <target state="translated">Стандартные опкоды управления файлами</target>
        </trans-unit>
        <trans-unit id="0271f691eaa2014cfdc1f8a7ed1187c67c1f03ee" translate="yes" xml:space="preserve">
          <source>Standard Query Syntax Precedence</source>
          <target state="translated">Преобладание синтаксиса стандартных запросов</target>
        </trans-unit>
        <trans-unit id="62af2c2f7d7a242deb88ffff88441215850f0cf0" translate="yes" xml:space="preserve">
          <source>Standard builds include the default &quot;unix&quot; or &quot;win32&quot; VFSes. But if you use the -DOS_OTHER=1 compile-time option, then SQLite is built without a default VFS. In that case, the application must register at least one VFS prior to calling &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt;. This is the approach that embedded applications should use. Rather than modifying the SQLite source to insert an alternative OS layer as was done in prior releases of SQLite, instead compile an unmodified SQLite source file (preferably the amalgamation) with the -DOS_OTHER=1 option, then invoke &lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register()&lt;/a&gt; to define the interface to the underlying filesystem prior to creating any database connections.</source>
          <target state="translated">Стандартные сборки включают VFS по умолчанию &quot;unix&quot; или &quot;win32&quot;. Но если вы используете параметр времени компиляции -DOS_OTHER = 1, то SQLite будет построен без VFS по умолчанию. В этом случае приложение должно зарегистрировать хотя бы одну VFS перед вызовом &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open ()&lt;/a&gt; . Это подход, который должны использовать встроенные приложения. Вместо того, чтобы изменять исходный код SQLite для вставки альтернативного уровня ОС, как это делалось в предыдущих выпусках SQLite, вместо этого скомпилируйте неизмененный исходный файл SQLite (желательно объединение) с параметром -DOS_OTHER = 1, затем вызовите &lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register ()&lt;/a&gt; для определения интерфейса к базовой файловой системе перед созданием любых подключений к базе данных.</target>
        </trans-unit>
        <trans-unit id="f4bb77fea34e91bf036ddd54845284d1cf9ef7e7" translate="yes" xml:space="preserve">
          <source>Standard builds of SQLite for Unix or Windows come with a single VFS named &quot;unix&quot; or &quot;win32&quot;, as appropriate. This one VFS is also the default. So if you are using the legacy open functions, everything will continue to operate as it has before. The change is that an application now has the flexibility of adding new VFS modules to implement a customized OS layer. The &lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register()&lt;/a&gt; API can be used to tell SQLite about one or more application-defined VFS modules:</source>
          <target state="translated">Стандартные сборки SQLite для Unix или Windows поставляются с одной VFS с именем &amp;laquo;unix&amp;raquo; или &amp;laquo;win32&amp;raquo;, в зависимости от ситуации. Эта VFS также используется по умолчанию. Поэтому, если вы используете устаревшие открытые функции, все будет продолжать работать, как и раньше. Изменение заключается в том, что приложение теперь имеет возможность добавлять новые модули VFS для реализации настраиваемого уровня ОС. &lt;a href=&quot;c3ref/vfs_find&quot;&gt;Sqlite3_vfs_register ()&lt;/a&gt; API может быть использован , чтобы сказать SQLite об одном или нескольких модулей VFS определенных приложением:</target>
        </trans-unit>
        <trans-unit id="d9cadaed061bc7503c3155b4851296844f6b19b6" translate="yes" xml:space="preserve">
          <source>Start a read transaction on an historical snapshot</source>
          <target state="translated">Начните чтение с исторического моментального снимка.</target>
        </trans-unit>
        <trans-unit id="789445bbe2e230b404b0877611cb047ff79a2a8a" translate="yes" xml:space="preserve">
          <source>Start a transaction.</source>
          <target state="translated">Начать сделку.</target>
        </trans-unit>
        <trans-unit id="5ad3ad0c5dcdfd16f6c5507085aa11afef993658" translate="yes" xml:space="preserve">
          <source>Start the &lt;b&gt;sqlite3&lt;/b&gt; program by typing &quot;sqlite3&quot; at the command prompt, optionally followed by the name the file that holds the SQLite database (or &lt;a href=&quot;#zipdb&quot;&gt;ZIP archive&lt;/a&gt;). If the named file does not exist, a new database file with the given name will be created automatically. If no database file is specified on the command-line, a temporary database is created, then deleted when the &quot;sqlite3&quot; program exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65d3b5410040822706753355b83a262ca2b3805" translate="yes" xml:space="preserve">
          <source>Start the &lt;b&gt;sqlite3&lt;/b&gt; program by typing &quot;sqlite3&quot; at the command prompt, optionally followed by the name the file that holds the SQLite database. If the named file does not exist, a new database file with the given name will be created automatically. If no database file is specified on the command-line, a temporary database is created, then deleted when the &quot;sqlite3&quot; program exits.</source>
          <target state="translated">Запустите программу &lt;b&gt;sqlite3&lt;/b&gt; , набрав &amp;laquo;sqlite3&amp;raquo; в командной строке, за которым, при желании, следует имя файла, содержащего базу данных SQLite. Если названный файл не существует, новый файл базы данных с данным именем будет создан автоматически. Если в командной строке не указан файл базы данных, создается временная база данных, которая удаляется при выходе из программы &amp;laquo;sqlite3&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="9eb60319509fec567263f40a7e8bf18c02dfd219" translate="yes" xml:space="preserve">
          <source>Starting with &lt;a href=&quot;https://sqlite.org/releaselog/3_3_0.html&quot;&gt;version 3.3.0&lt;/a&gt; (2006-01-11), SQLite includes a special &quot;shared-cache&quot; mode (disabled by default) intended for use in embedded servers. If shared-cache mode is enabled and a thread establishes multiple connections to the same database, the connections share a single data and schema cache. This can significantly reduce the quantity of memory and IO required by the system.</source>
          <target state="translated">Начиная с &lt;a href=&quot;https://sqlite.org/releaselog/3_3_0.html&quot;&gt;версии 3.3.0&lt;/a&gt; (11 января 2006 г.), SQLite включает специальный режим &amp;laquo;общего кэша&amp;raquo; (отключен по умолчанию), предназначенный для использования во встроенных серверах. Если включен режим общего кэша и поток устанавливает несколько соединений с одной и той же базой данных, соединения совместно используют один кеш данных и схемы. Это может значительно уменьшить объем памяти и операций ввода-вывода, необходимых для системы.</target>
        </trans-unit>
        <trans-unit id="023a31bfb8ddab03b504852064e49a20e7d9d830" translate="yes" xml:space="preserve">
          <source>Startup time is reduced by allowing the application to read in only the content shown for the initial screen. This largely eliminates the need to show a progress bar when opening a new document. The document just pops up immediately, further enhancing the user experience.</source>
          <target state="translated">Время запуска сокращается,позволяя приложению считывать только содержимое,отображаемое на начальном экране.Это в значительной степени устраняет необходимость показывать индикатор выполнения при открытии нового документа.Документ просто всплывает мгновенно,что еще больше повышает удобство работы с ним.</target>
        </trans-unit>
        <trans-unit id="ec7c6f024748b0b4ca685edf7c9c36a22ff2bd48" translate="yes" xml:space="preserve">
          <source>Statement Rollback</source>
          <target state="translated">Отмотка выписки</target>
        </trans-unit>
        <trans-unit id="b1c7b81be5c9efcc042ff8389d0cd187913125cb" translate="yes" xml:space="preserve">
          <source>Statement Transactions</source>
          <target state="translated">Отчетные операции</target>
        </trans-unit>
        <trans-unit id="a90f613a0e148cacdfc6a3c9d8b61b95e2acb93e" translate="yes" xml:space="preserve">
          <source>Statement journal</source>
          <target state="translated">Журнал отчётности</target>
        </trans-unit>
        <trans-unit id="eb1040e934c3b0c196798a9d1961f27355d86e45" translate="yes" xml:space="preserve">
          <source>Statement journals</source>
          <target state="translated">Отчетные журналы</target>
        </trans-unit>
        <trans-unit id="ff8ba443e0e2998259e771cf2ecb0604dd034de1" translate="yes" xml:space="preserve">
          <source>Static analysis has not been helpful in finding bugs in SQLite. Static analysis has found a few bugs in SQLite, but those are the exceptions. More bugs have been introduced into SQLite while trying to get it to compile without warnings than have been found by static analysis.</source>
          <target state="translated">Статический анализ не помог найти ошибки в SQLite.Статический анализ нашел несколько ошибок в SQLite,но это исключение.Больше ошибок было внесено в SQLite при попытке заставить его скомпилироваться без предупреждений,чем было найдено статическим анализом.</target>
        </trans-unit>
        <trans-unit id="680999abb1389f8c322acbd6c1aa5dbe84be6521" translate="yes" xml:space="preserve">
          <source>Static analysis means analyzing source code at compile-time to check for correctness. Static analysis includes compiler warning messages and more in-depth analysis engines such as the &lt;a href=&quot;http://clang-analyzer.llvm.org/&quot;&gt;Clang Static Analyzer&lt;/a&gt;. SQLite compiles without warnings on GCC and Clang using the -Wall and -Wextra flags on Linux and Mac and on MSVC on Windows. No valid warnings are generated by the Clang Static Analyzer tool &quot;scan-build&quot; either (though recent versions of clang seem to generate many false-positives.) Nevertheless, some warnings might be generated by other static analyzers. Users are encouraged not to stress over these warnings and to instead take solace in the intense testing of SQLite described above.</source>
          <target state="translated">Статический анализ означает анализ исходного кода во время компиляции для проверки правильности. Статический анализ включает предупреждающие сообщения компилятора и механизмы более глубокого анализа, такие как &lt;a href=&quot;http://clang-analyzer.llvm.org/&quot;&gt;Clang Static Analyzer&lt;/a&gt; . SQLite компилируется без предупреждений в GCC и Clang с использованием флагов -Wall и -Wextra в Linux и Mac и MSVC в Windows. Инструмент &quot;сканирование-сборка&quot; Clang Static Analyzer также не генерирует никаких допустимых предупреждений (хотя последние версии clang, похоже, генерируют много ложных срабатываний). Тем не менее, некоторые предупреждения могут быть сгенерированы другими статическими анализаторами. Пользователям рекомендуется не беспокоиться из-за этих предупреждений и вместо этого найти утешение в интенсивном тестировании SQLite, описанном выше.</target>
        </trans-unit>
        <trans-unit id="5e49731cc0b88e4893c23ef28a83ddda3bfb212a" translate="yes" xml:space="preserve">
          <source>Statistics gathered by ANALYZE are not automatically updated as the content of the database changes. If the content of the database changes significantly, or if the database schema changes, then one should consider rerunning the ANALYZE command in order to update the statistics.</source>
          <target state="translated">Статистика,собранная ANALYZE,не обновляется автоматически по мере изменения содержимого базы данных.Если содержимое БД существенно изменяется,или если изменяется схема БД,то для обновления статистики следует подумать о повторном запуске команды ANALYZE.</target>
        </trans-unit>
        <trans-unit id="06d77b9bb2436857be2774ccf495a6735714ef3f" translate="yes" xml:space="preserve">
          <source>Statistics might not be available for all loops in all statements. In cases where there exist loops with no available statistics, this function behaves as if the loop did not exist - it returns non-zero and leave the variable that pOut points to unchanged.</source>
          <target state="translated">Статистика может быть доступна не для всех циклов во всех утверждениях.В тех случаях,когда существуют циклы без доступной статистики,эта функция ведет себя так,как будто цикла не было-она возвращает ненулевое значение и оставляет переменную,на которую указывает pOut,без изменений.</target>
        </trans-unit>
        <trans-unit id="bc97dbd639562aa95bfaa677d2f8dc3487a559db" translate="yes" xml:space="preserve">
          <source>Stats pragma</source>
          <target state="translated">статистическая прагматика</target>
        </trans-unit>
        <trans-unit id="df542e628beff2a0b73ed1e479f1091511d9cd6a" translate="yes" xml:space="preserve">
          <source>Status Of A Dynamic String</source>
          <target state="translated">Статус динамической струны</target>
        </trans-unit>
        <trans-unit id="6872312ea81433049bd70deac565b5d633fd6998" translate="yes" xml:space="preserve">
          <source>Status Parameters</source>
          <target state="translated">Параметры статуса</target>
        </trans-unit>
        <trans-unit id="2adc22e7dbafa333d0e47ced61c20bab368c7387" translate="yes" xml:space="preserve">
          <source>Status Parameters for database connections</source>
          <target state="translated">Статус Параметры для подключения к базе данных</target>
        </trans-unit>
        <trans-unit id="8499ef2845b7984472eeaa5eec92eef3c3ddc5e1" translate="yes" xml:space="preserve">
          <source>Status Parameters for prepared statements</source>
          <target state="translated">Статус Параметры подготовленных отчетов</target>
        </trans-unit>
        <trans-unit id="f04daddc4070fdc058ac9e443c8962cff2f5d578" translate="yes" xml:space="preserve">
          <source>Sticky &lt;a href=&quot;rescode#full&quot;&gt;SQLITE_FULL&lt;/a&gt; or &lt;a href=&quot;rescode#ioerr&quot;&gt;SQLITE_IOERR&lt;/a&gt; errors in the pager are reset when a new transaction is started.</source>
          <target state="translated">Sticky &lt;a href=&quot;rescode#full&quot;&gt;SQLITE_FULL&lt;/a&gt; или &lt;a href=&quot;rescode#ioerr&quot;&gt;SQLITE_IOERR&lt;/a&gt; ошибка в пейджере сбрасывается при запуске новой транзакции.</target>
        </trans-unit>
        <trans-unit id="dd4fde80455d82361972cd992928272cdd38d544" translate="yes" xml:space="preserve">
          <source>Storage class</source>
          <target state="translated">Класс хранения</target>
        </trans-unit>
        <trans-unit id="0adf951cb70d6bfcdd293ee933bb14acec2e8923" translate="yes" xml:space="preserve">
          <source>Storage space for &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; objects.</source>
          <target state="translated">Место для хранения объектов &lt;a href=&quot;c3ref/sqlite3&quot;&gt;подключения&lt;/a&gt; к базе данных .</target>
        </trans-unit>
        <trans-unit id="fbf3f676fb55796ce1a966642440eafe303dfddd" translate="yes" xml:space="preserve">
          <source>Storage used for</source>
          <target state="translated">Хранение,используемое для</target>
        </trans-unit>
        <trans-unit id="7a5447c3e2de40c5c68aa31375241b98a076167c" translate="yes" xml:space="preserve">
          <source>Store an &lt;a href=&quot;undoredo&quot;&gt;automated undo/redo stack&lt;/a&gt; in a database table so that Undo could go back into prior edit sessions.</source>
          <target state="translated">Сохраните &lt;a href=&quot;undoredo&quot;&gt;автоматизированный стек отмены / повтора&lt;/a&gt; в таблице базы данных, чтобы можно было вернуться к предыдущим сеансам редактирования.</target>
        </trans-unit>
        <trans-unit id="a49a369d4dc034b2ddab0ef35e3bc0a19be08a8f" translate="yes" xml:space="preserve">
          <source>Store in register P2 an integer which is the key of the table entry that P1 is currently point to.</source>
          <target state="translated">Храните в регистре P2 целое число,которое является ключом к записи таблицы,на которую в данный момент указывает P1.</target>
        </trans-unit>
        <trans-unit id="867b15696e9fa5010d6dcd54eb51b1ee5a1a7a9e" translate="yes" xml:space="preserve">
          <source>Store in register P3 the value of the P2-th column of the current row of the virtual-table of cursor P1.</source>
          <target state="translated">Хранить в регистре P3 значение P2-го столбца текущей строки виртуальной таблицы курсора P1.</target>
        </trans-unit>
        <trans-unit id="c36766981b9139e0da225001d40b99095efc88b9" translate="yes" xml:space="preserve">
          <source>Store in register r[P3] the byte offset into the database file that is the start of the payload for the record at which that cursor P1 is currently pointing.</source>
          <target state="translated">Храните в регистре r[P3]смещение байта в файле базы данных,который является началом полезной нагрузки для записи,на которую в данный момент наведен курсор P1.</target>
        </trans-unit>
        <trans-unit id="30c620766d52d9f14ee6085868bffd5fb7f16c25" translate="yes" xml:space="preserve">
          <source>Store new polygons in the table using ordinary INSERT statements:</source>
          <target state="translated">Храните новые полигоны в таблице,используя обычные утверждения INSERT:</target>
        </trans-unit>
        <trans-unit id="e312586c7080f660b8a13dd56528c07ac821e623" translate="yes" xml:space="preserve">
          <source>Store the maximum page count after the change in register P2.</source>
          <target state="translated">Сохраняйте максимальное количество страниц после изменения регистра P2.</target>
        </trans-unit>
        <trans-unit id="4a03a2e19022832dfb9661ede226d69d6b142a41" translate="yes" xml:space="preserve">
          <source>Store the number of entries (an integer value) in the table or index opened by cursor P1 in register P2</source>
          <target state="translated">Хранить количество записей (целое значение)в таблице или индексе,открытом курсором P1 в регистре P2.</target>
        </trans-unit>
        <trans-unit id="8f97ad7b80660d239651ee854a82a3871ca04288" translate="yes" xml:space="preserve">
          <source>Store the number of entries (an integer value) in the table or index opened by cursor P1 in register P2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640b00f8e936acd9d22458864812f703b6f037f6" translate="yes" xml:space="preserve">
          <source>Store the statement journal in the temporary file directory instead of collocated with the database file.</source>
          <target state="translated">Храните журнал операторов во временном каталоге вместо того,чтобы совмещать его с файлом базы данных.</target>
        </trans-unit>
        <trans-unit id="25a1d24f343a9c4193ce3147697d66befd80ac3b" translate="yes" xml:space="preserve">
          <source>Storing the schema a text also makes the &lt;a href=&quot;fileformat2&quot;&gt;SQLite database file format&lt;/a&gt; easier to define, document, and understand. This helps make SQLite database files a &lt;a href=&quot;locrsf&quot;&gt;recommended storage format&lt;/a&gt; for long-term archiving of data.</source>
          <target state="translated">Сохранение схемы в тексте также упрощает определение, документирование и понимание &lt;a href=&quot;fileformat2&quot;&gt;формата файла базы данных SQLite&lt;/a&gt; . Это помогает сделать файлы базы данных SQLite &lt;a href=&quot;locrsf&quot;&gt;рекомендуемым форматом хранения&lt;/a&gt; для долгосрочного архивирования данных.</target>
        </trans-unit>
        <trans-unit id="6734d41851e3e8e6c6cbda317484954f124d2cf8" translate="yes" xml:space="preserve">
          <source>Storing the schema as text also makes the &lt;a href=&quot;fileformat2&quot;&gt;SQLite database file format&lt;/a&gt; easier to define, document, and understand. This helps make SQLite database files a &lt;a href=&quot;locrsf&quot;&gt;recommended storage format&lt;/a&gt; for long-term archiving of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9347ad87d0fbebdfc89e77280c0ab0e8462e84d1" translate="yes" xml:space="preserve">
          <source>Storing the schema as text rather than as parsed tables also give flexibility to the implementation. Since the internal parse of the schema is regenerated each time the database is opened, the internal representation of the schema can change from one release to the next. This is important, as sometimes new features require enhancements to the internal schema representation. Changing the internal schema representation would be much more difficult if the schema representation was exposed in the database file. So, in other words, storing the schema as text helps maintain backwards compatibility, and helps ensure that older database files can be read and written by newer versions of SQLite.</source>
          <target state="translated">Хранение схемы в виде текста,а не в виде разобранных таблиц,также придает гибкость реализации.Так как внутренний анализ схемы восстанавливается каждый раз при открытии БД,внутреннее представление схемы может меняться от одного выпуска к другому.Это важно,так как иногда новые функции требуют усовершенствования внутреннего представления схемы.Изменение внутреннего представления схемы было бы гораздо сложнее,если бы оно было открыто в файле базы данных.Другими словами,хранение схемы в виде текста помогает поддерживать обратную совместимость,а также обеспечивает возможность чтения и записи старых файлов БД более новыми версиями SQLite.</target>
        </trans-unit>
        <trans-unit id="275b8884950b47fafacc5239216411e5afbdc454" translate="yes" xml:space="preserve">
          <source>Streaming Versions of API functions</source>
          <target state="translated">Потоковые версии функций API</target>
        </trans-unit>
        <trans-unit id="1cda8a5c429d321cd55319d79be9050795d95668" translate="yes" xml:space="preserve">
          <source>Streaming Versions of API functions.</source>
          <target state="translated">Потоковые версии функций API.</target>
        </trans-unit>
        <trans-unit id="41b71513a74ee80684014356a0159868598a4ea7" translate="yes" xml:space="preserve">
          <source>Streaming function</source>
          <target state="translated">Потоковая функция</target>
        </trans-unit>
        <trans-unit id="c76c18624ee750ab230cd2529398af4c90203056" translate="yes" xml:space="preserve">
          <source>Strengthen defenses against deliberately corrupted database files.</source>
          <target state="translated">Усилить защиту от намеренно поврежденных файлов базы данных.</target>
        </trans-unit>
        <trans-unit id="70d422bf6680eb42d320cae6dd4ad922e3705a6b" translate="yes" xml:space="preserve">
          <source>Strictly speaking, the &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; object is not required since the convenience wrapper interfaces, &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec&lt;/a&gt; or &lt;a href=&quot;c3ref/free_table&quot;&gt;sqlite3_get_table&lt;/a&gt;, can be used and these convenience wrappers encapsulate and hide the &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; object. Nevertheless, an understanding of &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt; is needed to make full use of SQLite.</source>
          <target state="translated">Строго говоря, &lt;a href=&quot;c3ref/stmt&quot;&gt;подготовленный&lt;/a&gt; объект оператора не требуется, поскольку можно использовать удобные интерфейсы оболочки, &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec&lt;/a&gt; или &lt;a href=&quot;c3ref/free_table&quot;&gt;sqlite3_get_table&lt;/a&gt; , и эти удобные оболочки инкапсулируют и скрывают &lt;a href=&quot;c3ref/stmt&quot;&gt;подготовленный&lt;/a&gt; объект оператора . Тем не менее, для полноценного использования SQLite необходимо понимание &lt;a href=&quot;c3ref/stmt&quot;&gt;подготовленных операторов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="f631842398197770725f42465ce9be3bb217fe7f" translate="yes" xml:space="preserve">
          <source>String Comparison</source>
          <target state="translated">Сравнение струн</target>
        </trans-unit>
        <trans-unit id="bca91d4c03b6524119c1475d05b8b5503e052ba2" translate="yes" xml:space="preserve">
          <source>String Globbing</source>
          <target state="translated">Стержневой глобус</target>
        </trans-unit>
        <trans-unit id="d8c2dabd43b3a0fa081659375ff18075de8cb9f3" translate="yes" xml:space="preserve">
          <source>String LIKE Matching</source>
          <target state="translated">Спичка струны LIKE Matching</target>
        </trans-unit>
        <trans-unit id="dfab1bcbfa804d1a74a7282da9ab4ff5c5353c70" translate="yes" xml:space="preserve">
          <source>String8</source>
          <target state="translated">String8</target>
        </trans-unit>
        <trans-unit id="add2080ddbdcd32891495b46eb567565fc93baa2" translate="yes" xml:space="preserve">
          <source>Strings returned by sqlite3_column_text() and sqlite3_column_text16(), even empty strings, are always zero-terminated. The return value from sqlite3_column_blob() for a zero-length BLOB is a NULL pointer.</source>
          <target state="translated">Строки,возвращаемые функциями sqlite3_column_text()и sqlite3_column_text16(),даже пустые строки,всегда заканчиваются нулями.Возвращаемое функцией sqlite3_column_blob()значение для BLOB нулевой длины является указателем NULL.</target>
        </trans-unit>
        <trans-unit id="109fcef442d10303df5f7d59d40936a03977dfcb" translate="yes" xml:space="preserve">
          <source>Strings that include any other characters must be quoted. Characters that are not currently allowed in barewords, are not quote characters and do not currently serve any special purpose in FTS5 query expressions may at some point in the future be allowed in barewords or used to implement new query functionality. This means that queries that are currently syntax errors because they include such a character outside of a quoted string may be interpreted differently by some future version of FTS5.</source>
          <target state="translated">Строки,содержащие любые другие символы,должны быть процитированы.Символы,которые в настоящее время не разрешены в пустых словах,не являются символами кавычек и не служат в настоящее время для специальных целей в выражениях запросов FTS5,могут в какой-то момент в будущем быть разрешены в пустых словах или использованы для реализации новых функциональных возможностей запроса.Это означает,что запросы,которые в настоящее время являются синтаксическими ошибками,поскольку включают такой символ вне кавычек,могут быть интерпретированы по-разному в некоторых будущих версиях FTS5.</target>
        </trans-unit>
        <trans-unit id="0b6945b8df636a6d934a512accf12a8b76fc6265" translate="yes" xml:space="preserve">
          <source>Studies show that many applications already use SQLite as a container object. For example, &lt;a href=&quot;https://odin.cse.buffalo.edu/papers/2015/TPCTC-sqlite-final.pdf&quot;&gt;Kennedy&lt;/a&gt; (no relation to the &lt;a href=&quot;https://sqlite.org/crew.html#dan&quot;&gt;SQLite developer&lt;/a&gt;) reports that 14% of Android applications never write to their SQLite databases. It is believed that these applications are downloading entire databases from the cloud and then using the information locally as needed. In other words, the applications are using SQLite not so much as a database but as a queryable wire-transfer format.</source>
          <target state="translated">Исследования показывают, что многие приложения уже используют SQLite в качестве объекта-контейнера. Например, &lt;a href=&quot;https://odin.cse.buffalo.edu/papers/2015/TPCTC-sqlite-final.pdf&quot;&gt;Кеннеди&lt;/a&gt; (не имеющий отношения к &lt;a href=&quot;https://sqlite.org/crew.html#dan&quot;&gt;разработчику SQLite&lt;/a&gt; ) сообщает, что 14% приложений Android никогда не записывают данные в свои базы данных SQLite. Считается, что эти приложения загружают целые базы данных из облака, а затем используют информацию локально по мере необходимости. Другими словами, приложения используют SQLite не столько как базу данных, сколько как запрашиваемый формат передачи данных.</target>
        </trans-unit>
        <trans-unit id="bbd17ca7716d1959474368eb0c63e1ad9ad957be" translate="yes" xml:space="preserve">
          <source>Subqueries</source>
          <target state="translated">Subqueries</target>
        </trans-unit>
        <trans-unit id="9a235eb288a64671965312f5d0ad9f1b72cd84b6" translate="yes" xml:space="preserve">
          <source>Subqueries might also need to be materialized when they appear in the FROM clause of a SELECT statement. For example:</source>
          <target state="translated">Подзапросы могут также потребовать выполнения,когда они появляются в пункте FROM заявления SELECT.Например:</target>
        </trans-unit>
        <trans-unit id="79095639cf2544d3073712b3f47816fbf8b20418" translate="yes" xml:space="preserve">
          <source>Subquery Expressions</source>
          <target state="translated">Выражения подзапросов</target>
        </trans-unit>
        <trans-unit id="14de4f03d3cdec3c98a5016002bc81eb0292385c" translate="yes" xml:space="preserve">
          <source>Subquery co-routines</source>
          <target state="translated">Подзапросы совместные маршруты</target>
        </trans-unit>
        <trans-unit id="1d0025e26a750eaf886e5b666d451246677ab333" translate="yes" xml:space="preserve">
          <source>Substitution Type</source>
          <target state="translated">Тип замещения</target>
        </trans-unit>
        <trans-unit id="ae5f61e523ef194692c08eae320b323a03f8bb9b" translate="yes" xml:space="preserve">
          <source>Subtract</source>
          <target state="translated">Subtract</target>
        </trans-unit>
        <trans-unit id="b2b6c0ca0db2f38dd797d319d2f786a2af93e034" translate="yes" xml:space="preserve">
          <source>Subtract 200 from X.</source>
          <target state="translated">Вычитайте 200 из Икс.</target>
        </trans-unit>
        <trans-unit id="351c38b73ce6b309921bfd5c87f12ea777d4a4ac" translate="yes" xml:space="preserve">
          <source>Subtract the value in register P1 from the value in register P2 and store the result in register P3. If either input is NULL, the result is NULL.</source>
          <target state="translated">Вычтите значение в регистре P1 из значения в регистре P2 и сохраните результат в регистре P3.Если любой из входов имеет значение NULL,то результат будет NULL.</target>
        </trans-unit>
        <trans-unit id="b3ad01aa557050dded853fc788b3484598298d39" translate="yes" xml:space="preserve">
          <source>Such a line of C code might generate a dozen separate machine code instructions. If any one of those instructions is ever evaluated, then we say that the statement has been tested. So, for example, it might be the case that the conditional expression is always false and the &quot;d&quot; variable is never incremented. Even so, statement coverage counts this line of code as having been tested.</source>
          <target state="translated">Такая строка C-кода может генерировать дюжину отдельных машинных инструкций.Если какая-либо из этих инструкций когда-либо будет оценена,то мы говорим,что утверждение было протестировано.Так,например,может случиться,что условное выражение всегда ложно и переменная &quot;d&quot; никогда не увеличивается.Тем не менее,покрытие оператора считает эту строку кода тестируемой.</target>
        </trans-unit>
        <trans-unit id="a042ce9ca13e4d4ddb750a0fe77ea337b1cdceb1" translate="yes" xml:space="preserve">
          <source>Such a virtual table has the same columns as the table-valued function described in the previous section. It may be read from using a SELECT statement in the same way as the table-valued function can.</source>
          <target state="translated">Такая виртуальная таблица имеет те же столбцы,что и табличная функция,описанная в предыдущем разделе.Она может быть прочитана с помощью оператора SELECT таким же образом,как и табличная функция-значение.</target>
        </trans-unit>
        <trans-unit id="da045363c8fb916c7bdb60bedab8cb85e2f1f5a1" translate="yes" xml:space="preserve">
          <source>Such advanced searches are requested by providing a more complicated FTS5 query string as the text to the right of the MATCH operator (or = operator, or as the first argument to a table-valued function syntax). The full query syntax is &lt;a href=&quot;fts5#full_text_query_syntax&quot;&gt;described here&lt;/a&gt;.</source>
          <target state="translated">Такой расширенный поиск запрашивается путем предоставления более сложной строки запроса FTS5 в виде текста справа от оператора MATCH (или оператора =, или в качестве первого аргумента синтаксиса функции с табличным значением). Полный синтаксис запроса &lt;a href=&quot;fts5#full_text_query_syntax&quot;&gt;описан здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c0936ee6227b30512f2222702e2254d11d72a242" translate="yes" xml:space="preserve">
          <source>Such criticism would be well-founded for a traditional client/server database engine, such as MySQL, PostgreSQL, or SQL Server. In a client/server database, each SQL statement requires a message round-trip from the application to the database server and back to the application. Doing over 200 round-trip messages, sequentially, can be a serious performance drag. This is sometimes called the &quot;N+1 Query Problem&quot; or the &quot;N+1 Select Problem&quot; and it is an anti-pattern.</source>
          <target state="translated">Такая критика была бы вполне обоснованной для традиционного движка базы данных клиент/сервер,такого как MySQL,PostgreSQL или SQL Server.В базе данных клиент/сервер каждый SQL-запрос требует сообщения от приложения к серверу базы данных и обратно в приложение.Выполнение более 200 сообщений в обе стороны,последовательно,может быть серьезным перетаскиванием производительности.Иногда это называется &quot;N+1 Query Problem&quot; или &quot;N+1 Select Problem&quot; и является анти-шаблоном.</target>
        </trans-unit>
        <trans-unit id="f834acdfa0c7dab757f2bc4e26b1966eff963a52" translate="yes" xml:space="preserve">
          <source>Suggested Uses For SQLite:</source>
          <target state="translated">Предлагаемое использование для SQLite:</target>
        </trans-unit>
        <trans-unit id="f08f43d3c61d6c426d33128ee0c38e51fb6aad20" translate="yes" xml:space="preserve">
          <source>Suggested compile-time options include:</source>
          <target state="translated">Предлагаемые опции времени компиляции включают в себя:</target>
        </trans-unit>
        <trans-unit id="3d1a384ea1042be63f3032ea726e70fc4a04f311" translate="yes" xml:space="preserve">
          <source>Suggests completions for partially-entered words during interactive SQL input. Used by the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; to help implement tab-completion.</source>
          <target state="translated">Предлагает дополнения для частично введенных слов во время интерактивного ввода SQL. Используется &lt;a href=&quot;cli&quot;&gt;CLI,&lt;/a&gt; чтобы помочь реализовать завершение табуляции.</target>
        </trans-unit>
        <trans-unit id="adca4d21f8bf7900f73ede68196274afd881f1d7" translate="yes" xml:space="preserve">
          <source>Sum() will throw an &quot;integer overflow&quot; exception if all inputs are integers or NULL and an integer overflow occurs at any point during the computation. Total() never throws an integer overflow.</source>
          <target state="translated">Функция Sum()бросит исключение &quot;целочисленное переполнение&quot;,если все входные данные являются целыми числами или NULL и в любой момент вычисления происходит целочисленное переполнение.Total()никогда не выбрасывает &quot;целочисленное переполнение&quot;.</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="1a7bd9ebcad37a0dd711dfc793fa96bb5022047c" translate="yes" xml:space="preserve">
          <source>Summary of Technical Differences</source>
          <target state="translated">Резюме технических различий</target>
        </trans-unit>
        <trans-unit id="4c599c4f8f2ffb798c4263cf7f6e473784c4d396" translate="yes" xml:space="preserve">
          <source>Super-journals</source>
          <target state="translated">Super-journals</target>
        </trans-unit>
        <trans-unit id="ab2e3b9850b401306a39a3a804f43e7d4f55c01f" translate="yes" xml:space="preserve">
          <source>Support for &quot;:AAA&quot; style bind parameter names.</source>
          <target state="translated">Поддержка имен параметров привязки в стиле &quot;:AAA&quot;.</target>
        </trans-unit>
        <trans-unit id="8b45bd25a3b604a0eccba69e7087834ecb582853" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;lang_update#upfrom&quot;&gt;UPDATE FROM&lt;/a&gt; following the PostgreSQL syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e333e85b28ab7b57a0a5c9131f54f806015a6221" translate="yes" xml:space="preserve">
          <source>Support for ALTER TABLE ... RENAME TABLE ... added</source>
          <target state="translated">Поддержка ALTER-таблицы ...RENAME-таблица ...добавлена</target>
        </trans-unit>
        <trans-unit id="3251d36ace39f64a5ddca9143a5668b65028289f" translate="yes" xml:space="preserve">
          <source>Support for TCL variable names embedded in SQL statements in the TCL bindings.</source>
          <target state="translated">Поддержка имен переменных TCL,встроенных в SQL-операторы в связках TCL.</target>
        </trans-unit>
        <trans-unit id="4c4e649b2faf6e7dd28f3f288044f754a9767c05" translate="yes" xml:space="preserve">
          <source>Support for UTF-16.</source>
          <target state="translated">Поддержка UTF-16.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
