<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="sqlite">
    <body>
      <group id="sqlite">
        <trans-unit id="480bdad0842ce92215a602c8e8a2e2ba5036d89a" translate="yes" xml:space="preserve">
          <source>The directory or folder in which temporary files are created is determined by the OS-specific &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;.</source>
          <target state="translated">Каталог или папка, в которых создаются временные файлы, определяется &lt;a href=&quot;vfs&quot;&gt;VFS для&lt;/a&gt; конкретной ОС .</target>
        </trans-unit>
        <trans-unit id="58c1fd9cf0b8fae2622f0a1831b48a0d95eaabc6" translate="yes" xml:space="preserve">
          <source>The directory set by &lt;a href=&quot;pragma#pragma_temp_store_directory&quot;&gt;PRAGMA temp_store_directory&lt;/a&gt; or by the &lt;a href=&quot;c3ref/temp_directory&quot;&gt;sqlite3_temp_directory&lt;/a&gt; global variable</source>
          <target state="translated">Каталог, установленный &lt;a href=&quot;pragma#pragma_temp_store_directory&quot;&gt;PRAGMA temp_store_directory&lt;/a&gt; или глобальной переменной &lt;a href=&quot;c3ref/temp_directory&quot;&gt;sqlite3_temp_directory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e347995ace178c5b68534f7a6dde94c35392830" translate="yes" xml:space="preserve">
          <source>The directory used to hold temporary files on unix can now be set using the SQLITE_TMPDIR environment variable, which takes precedence over the TMPDIR environment variable. The &lt;a href=&quot;c3ref/temp_directory&quot;&gt;sqlite3_temp_directory&lt;/a&gt; global variable still has higher precedence than both environment variables, however.</source>
          <target state="translated">Каталог, используемый для хранения временных файлов в unix, теперь может быть установлен с помощью переменной среды SQLITE_TMPDIR, которая имеет приоритет над переменной среды TMPDIR. Однако глобальная переменная &lt;a href=&quot;c3ref/temp_directory&quot;&gt;sqlite3_temp_directory по-&lt;/a&gt; прежнему имеет более высокий приоритет, чем обе переменные среды.</target>
        </trans-unit>
        <trans-unit id="081d4a11583041f4e8625a8cc56c88ce7150faa6" translate="yes" xml:space="preserve">
          <source>The docid value. The first entry in a doclist contains the literal docid value. The first field of each subsequent doclist entry contains the difference between the new docid and the previous one (always a positive number).</source>
          <target state="translated">Докидное значение.Первая запись в доклисте содержит буквальное значение докида.Первое поле каждой последующей записи в доклисте содержит разницу между новым и предыдущим докидом (всегда положительное число).</target>
        </trans-unit>
        <trans-unit id="49e2bf067b92acf951896b04368654ffcd3a3f99" translate="yes" xml:space="preserve">
          <source>The document only describes locking for the older rollback-mode transaction mechanism. Locking for the newer &lt;a href=&quot;wal&quot;&gt;write-ahead log&lt;/a&gt; or &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt; is described separately.</source>
          <target state="translated">В документе описывается блокировка только для более старого механизма транзакций в режиме отката. Блокировка для нового &lt;a href=&quot;wal&quot;&gt;журнала упреждающей записи&lt;/a&gt; или &lt;a href=&quot;wal&quot;&gt;режима WAL&lt;/a&gt; описывается отдельно.</target>
        </trans-unit>
        <trans-unit id="1297878fc527d5d7c17142be2f4f043e484d8aa6" translate="yes" xml:space="preserve">
          <source>The documentation is maintained in separate source repositories on those same servers:</source>
          <target state="translated">Документация хранится в отдельных репозиториях на тех же серверах:</target>
        </trans-unit>
        <trans-unit id="d0017ab9193a6ed1029ad59fab58ce3ec88e592f" translate="yes" xml:space="preserve">
          <source>The documentation sources include documentation text and images with the scripts and makefile needed to construct the SQLite website documentation. This document is contained within the documentation sources. The document sources are kept in a separate repository distinct from the source code. The documentation sources repository is publicly readable.</source>
          <target state="translated">Источниками документации являются текст документации и изображения со скриптами и makefile,необходимые для создания документации сайта SQLite.Этот документ содержится в источниках документации.Исходные тексты документов хранятся в отдельном репозитории,отличном от исходного кода.Репозиторий источников документации является общедоступным для чтения.</target>
        </trans-unit>
        <trans-unit id="278f1b137f0865ba684c7cde1fa14cf1c768e813" translate="yes" xml:space="preserve">
          <source>The documentation system automatically maintains a &lt;a href=&quot;https://sqlite.org/chronology.html&quot;&gt;chronology&lt;/a&gt; of past releases, as well as a &lt;a href=&quot;changes&quot;&gt;complete list of SQLite releases&lt;/a&gt; with change summaries.</source>
          <target state="translated">Система документации автоматически ведет &lt;a href=&quot;https://sqlite.org/chronology.html&quot;&gt;хронологию&lt;/a&gt; прошлых выпусков, а также &lt;a href=&quot;changes&quot;&gt;полный список выпусков SQLite&lt;/a&gt; с описанием изменений.</target>
        </trans-unit>
        <trans-unit id="65988e654b808af94ee6da6f09345ac1241a1ac8" translate="yes" xml:space="preserve">
          <source>The dot-command must be entirely contained on a single input line.</source>
          <target state="translated">Точка-команда должна полностью содержаться в одной строке ввода.</target>
        </trans-unit>
        <trans-unit id="6fcffd0a57b5ba6715e1715a67438a136bebf610" translate="yes" xml:space="preserve">
          <source>The dot-commands are interpreted by the sqlite3.exe command-line program, not by SQLite itself. So none of the dot-commands will work as an argument to SQLite interfaces like &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; or &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec()&lt;/a&gt;.</source>
          <target state="translated">Точечные команды интерпретируются программой командной строки sqlite3.exe, а не самим SQLite. Таким образом, ни одна из точечных команд не будет работать в качестве аргумента для интерфейсов SQLite, таких как &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare ()&lt;/a&gt; или &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="73b101a4a2aed2c88c1089ef5e27eb7bd916289f" translate="yes" xml:space="preserve">
          <source>The downside of automatic incremental merging is that it makes every INSERT, UPDATE, and DELETE operation on an FTS3/4 table run a little slower, since extra time must be used to do the incremental merge. For maximum performance, it is recommended that applications disable automatic incremental merge and instead use the &lt;a href=&quot;fts3#*fts4mergecmd&quot;&gt;&quot;merge&quot; command&lt;/a&gt; in an idle process to keep the inverted indices well merged. But if the structure of an application does not easily allow for idle processes, the use of automatic incremental merge is a very reasonable fallback solution.</source>
          <target state="translated">Обратной стороной автоматического добавочного слияния является то, что при нем каждая операция INSERT, UPDATE и DELETE в таблице FTS3 / 4 выполняется немного медленнее, поскольку для выполнения добавочного слияния требуется дополнительное время. Для максимальной производительности рекомендуется, чтобы приложения отключили автоматическое добавочное слияние и вместо этого использовали команду &lt;a href=&quot;fts3#*fts4mergecmd&quot;&gt;&amp;laquo;слияние&amp;raquo;&lt;/a&gt; в процессе ожидания, чтобы обеспечить хорошее слияние инвертированных индексов. Но если структура приложения не позволяет легко простаивать процессы, использование автоматического добавочного слияния является очень разумным резервным решением.</target>
        </trans-unit>
        <trans-unit id="c77ebced48dfa7e23a77c44a167057f7558d4f17" translate="yes" xml:space="preserve">
          <source>The downside of storing schema a text is that it can make the schema tricky to modify. And for that reason, the ALTER TABLE support in SQLite has traditionally lagged behind other SQL database engines that store their schemas as parsed system tables that are easier to modify.</source>
          <target state="translated">Недостатком хранения схемы в тексте является то,что это может сделать схему хитрой для изменения.И по этой причине поддержка ALTER TABLE в SQLite традиционно отстает от других движков БД SQL,которые хранят свои схемы в виде разобранных системных таблиц,которые легче модифицировать.</target>
        </trans-unit>
        <trans-unit id="1bd6a18e90f1a8ee8256e02fe4825c2a58f166f7" translate="yes" xml:space="preserve">
          <source>The dynamic webpages on the SQLite website are mostly generated by the &lt;a href=&quot;https://www.fossil-scm.org/&quot;&gt;Fossil version control system&lt;/a&gt;. A typical dynamic page would be a timeline such as &lt;a href=&quot;https://www.sqlite.org/src/timeline&quot;&gt;https://www.sqlite.org/src/timeline&lt;/a&gt;. A log of all SQL used by the timeline is shown below.</source>
          <target state="translated">Динамические веб-страницы на веб-сайте SQLite в основном создаются &lt;a href=&quot;https://www.fossil-scm.org/&quot;&gt;системой контроля версий Fossil&lt;/a&gt; . Типичная динамическая страница - это временная шкала, например &lt;a href=&quot;https://www.sqlite.org/src/timeline&quot;&gt;https://www.sqlite.org/src/timeline&lt;/a&gt; . Журнал всего SQL, используемого временной шкалой, показан ниже.</target>
        </trans-unit>
        <trans-unit id="f53c608dfb99715244babeb0f18e6bedb4ce61c6" translate="yes" xml:space="preserve">
          <source>The eTextRep argument determines the encoding of strings passed to the collating function callback, xCallback. The &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16&lt;/a&gt; and &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16_ALIGNED&lt;/a&gt; values for eTextRep force strings to be UTF16 with native byte order. The &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16_ALIGNED&lt;/a&gt; value for eTextRep forces strings to begin on an even byte address.</source>
          <target state="translated">Аргумент eTextRep определяет кодировку строк, передаваемых в функцию обратного вызова функции сортировки, xCallback. Значения &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16&lt;/a&gt; и &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16_ALIGNED&lt;/a&gt; для eTextRep заставляют строки быть UTF16 с собственным порядком байтов. Значение &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16_ALIGNED&lt;/a&gt; для eTextRep заставляет строки начинаться с четного байтового адреса.</target>
        </trans-unit>
        <trans-unit id="1f8a73896c29d2961fd12e3fd13060416db06dbd" translate="yes" xml:space="preserve">
          <source>The eTextRep argument determines the encoding of strings passed to the collating function callback, xCallback. The &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16&lt;/a&gt; and &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16_ALIGNED&lt;/a&gt; values for eTextRep force strings to be UTF16 with native byte order. The &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16_ALIGNED&lt;/a&gt; value for eTextRep forces strings to begin on an even byte address.</source>
          <target state="translated">Аргумент eTextRep определяет кодировку строк, передаваемых в функцию обратного вызова функции сортировки, xCallback. Значения &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16&lt;/a&gt; и &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16_ALIGNED&lt;/a&gt; для eTextRep заставляют строки быть UTF16 с собственным порядком байтов. Значение &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16_ALIGNED&lt;/a&gt; для eTextRep заставляет строки начинаться с четного байтового адреса.</target>
        </trans-unit>
        <trans-unit id="4013154ef9b1afc10a2efd1408a9638085e650fc" translate="yes" xml:space="preserve">
          <source>The eTextRep argument determines the encoding of strings passed to the collating function callback, xCompare. The &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16&lt;/a&gt; and &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16_ALIGNED&lt;/a&gt; values for eTextRep force strings to be UTF16 with native byte order. The &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16_ALIGNED&lt;/a&gt; value for eTextRep forces strings to begin on an even byte address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7222f354f082d59aa96eba0376b7b091cc4ec0bd" translate="yes" xml:space="preserve">
          <source>The eTextRep argument determines the encoding of strings passed to the collating function callback, xCompare. The &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16&lt;/a&gt; and &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16_ALIGNED&lt;/a&gt; values for eTextRep force strings to be UTF16 with native byte order. The &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16_ALIGNED&lt;/a&gt; value for eTextRep forces strings to begin on an even byte address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af71ae840c72707272be3031b3c3ee6f45c5d71f" translate="yes" xml:space="preserve">
          <source>The edit distance coefficients are normally read from the APPCOST table once and there after stored in memory. Hence, run-time changes to the APPCOST table will not normally affect the edit distance results. However, inserting the special string 'reset' into the &quot;command&quot; column of the virtual table causes the edit distance coefficients to be reread the APPCOST table. Hence, applications should run a SQL statement similar to the following when changes to the APPCOST table occur:</source>
          <target state="translated">Коэффициенты расстояния редактирования обычно считываются из таблицы APPCOST один раз и туда после сохранения в памяти.Следовательно,изменения во времени выполнения APPCOST таблицы обычно не влияют на результаты расстояния редактирования.Однако,вставка специальной строки &quot;сброс&quot; в столбец &quot;команда&quot; виртуальной таблицы приводит к тому,что коэффициенты расстояния редактирования будут перечитываться из таблицы APPCOST.Следовательно,при изменении таблицы APPCOST приложения должны запускать SQL-оператор,аналогичный приведённому ниже:</target>
        </trans-unit>
        <trans-unit id="49994af0743488763f79d75d2c9c86ebfda2dfb6" translate="yes" xml:space="preserve">
          <source>The edit program can also be used as a viewer, by simply ignoring the return value. For example, to merely look at the image above, you might run:</source>
          <target state="translated">Программа редактирования также может быть использована в качестве программы просмотра,просто игнорируя возвращаемое значение.Например,чтобы просто посмотреть на изображение выше,можно запустить программу:</target>
        </trans-unit>
        <trans-unit id="47a4a763ba31495e47240c644f7558e9498bae30" translate="yes" xml:space="preserve">
          <source>The edit() function can be used to make changes to large text values. For example:</source>
          <target state="translated">Функция edit()может быть использована для внесения изменений в большие текстовые значения.Например:</target>
        </trans-unit>
        <trans-unit id="fd34f0d751c4ddc69b221f64ffd45f8927b66781" translate="yes" xml:space="preserve">
          <source>The editdist3 algorithm is a function that computes the minimum edit distance (a.k.a. the Levenshtein distance) between two input strings. The editdist3 algorithm is a configurable alternative to the default edit distance function of spellfix1. Features of editdist3 include:</source>
          <target state="translated">Алгоритм editdist3-это функция,которая вычисляет минимальное расстояние редактирования (также известное как расстояние Левенштейна)между двумя входными строками.Алгоритм editdist3 является настраиваемой альтернативой стандартной функции расстояния редактирования орфографической ошибки1.К особенностям editdist3 относятся:</target>
        </trans-unit>
        <trans-unit id="870b1bf5bd7c0178ecc9a04d5313cc57bc40b4f1" translate="yes" xml:space="preserve">
          <source>The effects of a &lt;b&gt;truncate file&lt;/b&gt; operation are not assumed to be made persistent until after the corresponding file has been</source>
          <target state="translated">Предполагается, что эффекты операции с &lt;b&gt;файлом усечения&lt;/b&gt; не будут сохраняться до тех пор, пока не будет выполнен соответствующий файл.</target>
        </trans-unit>
        <trans-unit id="393d1077fa976da06b2c81028e0e667751bfce07" translate="yes" xml:space="preserve">
          <source>The empty-result-callbacks flag affects the &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec()&lt;/a&gt; API only. Normally, when the empty-result-callbacks flag is cleared, the callback function supplied to the &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec()&lt;/a&gt; is not invoked for commands that return zero rows of data. When empty-result-callbacks is set in this situation, the callback function is invoked exactly once, with the third parameter set to 0 (NULL). This is to enable programs that use the &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec()&lt;/a&gt; API to retrieve column-names even when a query returns no data.</source>
          <target state="translated">Флаг empty-result-callbacks влияет только на API &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec ()&lt;/a&gt; . Обычно, когда флаг empty-result-callbacks сброшен, функция обратного вызова, предоставленная &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec ()&lt;/a&gt; , не вызывается для команд, возвращающих нулевые строки данных. Когда в этой ситуации заданы обратные вызовы с пустым результатом, функция обратного вызова вызывается ровно один раз, с третьим параметром, установленным в 0 (NULL). Это позволяет программам, использующим API &lt;a href=&quot;c3ref/exec&quot;&gt;sqlite3_exec (),&lt;/a&gt; получать имена столбцов, даже если запрос не возвращает данных.</target>
        </trans-unit>
        <trans-unit id="f1a25180fc453bfc9b7157e5b028aa8235fc10f5" translate="yes" xml:space="preserve">
          <source>The end-user executes DML or DDL SQL statements that require the structure of the database file of the database file to be modified. These modifications may be any combination of operations to</source>
          <target state="translated">Конечный пользователь выполняет операторы DML или DDL SQL,которые требуют изменения структуры файла базы данных.Эти изменения могут быть любой комбинацией операций</target>
        </trans-unit>
        <trans-unit id="5b923462226ca9a3f1ea2da34aa276431384d659" translate="yes" xml:space="preserve">
          <source>The ending frame boundary can be omitted (if the BETWEEN and AND keywords that surround the starting frame boundary are also omitted), in which case the ending frame boundary defaults to CURRENT ROW.</source>
          <target state="translated">Граница конечного кадра может быть опущена (если опущены также ключевые слова BETWEEN и AND,окружающие границу начального кадра),в этом случае граница конечного кадра по умолчанию устанавливается в CURRENT ROW.</target>
        </trans-unit>
        <trans-unit id="b26c1d5670afb707a661dd133bd85c139805e555" translate="yes" xml:space="preserve">
          <source>The ending frame boundary may not take a form that appears higher in the above list than the starting frame boundary.</source>
          <target state="translated">Граница заканчивающейся рамки не может иметь форму,которая появляется выше в списке выше,чем граница стартовой рамки.</target>
        </trans-unit>
        <trans-unit id="1133a1a20cf9f9901ca7376082c18ed0b6c4a36d" translate="yes" xml:space="preserve">
          <source>The engine no longer consults the main table if it can get all the information it needs from an index.</source>
          <target state="translated">Двигатель больше не консультируется с основной таблицей,если он может получить всю необходимую информацию из индекса.</target>
        </trans-unit>
        <trans-unit id="b873e4983f185f34587580faeee301ccc43a5a88" translate="yes" xml:space="preserve">
          <source>The enhanced query syntax supports the AND, OR and NOT binary set operators. Each of the two operands to an operator may be a basic FTS query, or the result of another AND, OR or NOT set operation. Operators must be entered using capital letters. Otherwise, they are interpreted as basic term queries instead of set operators.</source>
          <target state="translated">Расширенный синтаксис запросов поддерживает операторы AND,OR и NOT двоичного множества.Каждый из двух операндов к оператору может быть основным запросом FTS или результатом другой операции задания AND,OR или NOT.Операторы должны вводиться с использованием заглавных букв.В противном случае они интерпретируются как основные запросы терминов,а не как заданные операторы.</target>
        </trans-unit>
        <trans-unit id="ec0a2d5aa63b2e3b719340bb237dcfc9aebe4443" translate="yes" xml:space="preserve">
          <source>The entries above might represent (for example) a bounding box around the main office for SQLite.org and bounding box around the 12th Congressional District of North Carolina (prior to the 2011 redistricting) in which SQLite.org was located.</source>
          <target state="translated">Приведенные выше записи могут представлять собой (например)граничное поле вокруг главного офиса для SQLite.org и граничное поле вокруг 12-го округа Конгресса Северной Каролины (до перекрёстка 2011 года),в котором находился SQLite.org.</target>
        </trans-unit>
        <trans-unit id="df23c9e0d03ef84c1b3ecc39ad637f8b14bf70ea" translate="yes" xml:space="preserve">
          <source>The entry point is zProc. zProc may be 0, in which case SQLite will try to come up with an entry point name on its own. It first tries &quot;sqlite3_extension_init&quot;. If that does not work, it constructs a name &quot;sqlite3_X_init&quot; where the X is consists of the lower-case equivalent of all ASCII alphabetic characters in the filename from the last &quot;/&quot; to the first following &quot;.&quot; and omitting any initial &quot;lib&quot;. The sqlite3_load_extension() interface returns &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OK&lt;/a&gt; on success and &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_ERROR&lt;/a&gt; if something goes wrong. If an error occurs and pzErrMsg is not 0, then the &lt;a href=&quot;#sqlite3_load_extension&quot;&gt;sqlite3_load_extension()&lt;/a&gt; interface shall attempt to fill *pzErrMsg with error message text stored in memory obtained from &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc()&lt;/a&gt;. The calling function should free this memory by calling &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free()&lt;/a&gt;.</source>
          <target state="translated">Точка входа - zProc. zProc может иметь значение 0, и в этом случае SQLite попытается самостоятельно указать имя точки входа. Сначала он пробует sqlite3_extension_init. Если это не сработает, создается имя &amp;laquo;sqlite3_X_init&amp;raquo;, где X состоит из строчных эквивалентов всех буквенных символов ASCII в имени файла от последнего &amp;laquo;/&amp;raquo; до первого следующего &amp;laquo;&amp;raquo;. и опуская любую начальную &quot;lib&quot;. Интерфейс sqlite3_load_extension () возвращает &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OK&lt;/a&gt; в случае успеха и &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_ERROR,&lt;/a&gt; если что-то пойдет не так. Если возникает ошибка и pzErrMsg не равно 0, то интерфейс &lt;a href=&quot;#sqlite3_load_extension&quot;&gt;sqlite3_load_extension ()&lt;/a&gt; должен попытаться заполнить * pzErrMsg текстом сообщения об ошибке, хранящимся в памяти, полученным из &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc ()&lt;/a&gt;. Вызывающая функция должна освободить эту память, вызвав &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f2e7b718e4064a2f8cc8acbe7a051458f014ce0" translate="yes" xml:space="preserve">
          <source>The entry point is zProc. zProc may be 0, in which case SQLite will try to come up with an entry point name on its own. It first tries &quot;sqlite3_extension_init&quot;. If that does not work, it constructs a name &quot;sqlite3_X_init&quot; where the X is consists of the lower-case equivalent of all ASCII alphabetic characters in the filename from the last &quot;/&quot; to the first following &quot;.&quot; and omitting any initial &quot;lib&quot;. The sqlite3_load_extension() interface returns &lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OK&lt;/a&gt; on success and &lt;a href=&quot;../rescode#error&quot;&gt;SQLITE_ERROR&lt;/a&gt; if something goes wrong. If an error occurs and pzErrMsg is not 0, then the &lt;a href=&quot;load_extension&quot;&gt;sqlite3_load_extension()&lt;/a&gt; interface shall attempt to fill *pzErrMsg with error message text stored in memory obtained from &lt;a href=&quot;free&quot;&gt;sqlite3_malloc()&lt;/a&gt;. The calling function should free this memory by calling &lt;a href=&quot;free&quot;&gt;sqlite3_free()&lt;/a&gt;.</source>
          <target state="translated">Точка входа - zProc. zProc может иметь значение 0, и в этом случае SQLite попытается самостоятельно указать имя точки входа. Сначала он пробует sqlite3_extension_init. Если это не сработает, создается имя &amp;laquo;sqlite3_X_init&amp;raquo;, где X состоит из строчных эквивалентов всех буквенных символов ASCII в имени файла от последнего &amp;laquo;/&amp;raquo; до первого следующего &amp;laquo;&amp;raquo;. и опуская любую начальную &quot;lib&quot;. Интерфейс sqlite3_load_extension () возвращает &lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OK&lt;/a&gt; в случае успеха и &lt;a href=&quot;../rescode#error&quot;&gt;SQLITE_ERROR,&lt;/a&gt; если что-то пойдет не так. Если возникает ошибка и pzErrMsg не равно 0, то интерфейс &lt;a href=&quot;load_extension&quot;&gt;sqlite3_load_extension ()&lt;/a&gt; должен попытаться заполнить * pzErrMsg текстом сообщения об ошибке, хранящимся в памяти, полученным из &lt;a href=&quot;free&quot;&gt;sqlite3_malloc ()&lt;/a&gt;. Вызывающая функция должна освободить эту память, вызвав &lt;a href=&quot;free&quot;&gt;sqlite3_free ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3b2f6eda62654fcc0bcaa7e0b88feb088762bb7" translate="yes" xml:space="preserve">
          <source>The error arises because only about the first 15 significant digits of each number are stored accurately, and first the difference between the two numbers being subtracted is in the 16th digit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40007c6bf4af7619580a2e5c3ec81a4fee4ad813" translate="yes" xml:space="preserve">
          <source>The error code is changed to &lt;a href=&quot;rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt; (instead of &lt;a href=&quot;rescode#error&quot;&gt;SQLITE_ERROR&lt;/a&gt;) when an attempt is made to &lt;a href=&quot;lang_transaction&quot;&gt;ROLLBACK&lt;/a&gt; while one or more queries are still pending.</source>
          <target state="translated">Код ошибки изменяется на &lt;a href=&quot;rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt; (вместо &lt;a href=&quot;rescode#error&quot;&gt;SQLITE_ERROR&lt;/a&gt; ), когда делается попытка &lt;a href=&quot;lang_transaction&quot;&gt;ROLLBACK,&lt;/a&gt; когда один или несколько запросов все еще ожидают обработки.</target>
        </trans-unit>
        <trans-unit id="2e60aa60ea376ea9ca807c8cc7d0b0b91ec054e5" translate="yes" xml:space="preserve">
          <source>The error codes for SQLite version 3 are unchanged from version 2. They are as follows:</source>
          <target state="translated">Коды ошибок для SQLite версии 3 не изменились по сравнению с версией 2.Они выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="2ccece93e5a00d5f5d9d7a6919183b3a66f82129" translate="yes" xml:space="preserve">
          <source>The error logger callback function might look something like this:</source>
          <target state="translated">Функция обратного вызова регистратора ошибок может выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="8ad007677ae545b2ad036dc3fbfd526afb2a9647" translate="yes" xml:space="preserve">
          <source>The error logger callback should be treated like a signal handler. The application should save off or otherwise process the error, then return as soon as possible. No other SQLite APIs should be invoked, directly or indirectly, from the error logger. SQLite is &lt;u&gt;not&lt;/u&gt; reentrant through the error logger callback. In particular, the error logger callback is invoked when a memory allocation fails, so it is generally a bad idea to try to allocate memory inside the error logger. Do not even think about trying to store the error message in another SQLite database.</source>
          <target state="translated">Обратный вызов регистратора ошибок следует рассматривать как обработчик сигнала. Приложение должно сохранить или иным образом обработать ошибку, а затем вернуться как можно скорее. Никакие другие API SQLite не должны вызываться прямо или косвенно из регистратора ошибок. SQLite &lt;u&gt;не&lt;/u&gt; поддерживает повторный вход через обратный вызов регистратора ошибок. В частности, обратный вызов регистратора ошибок вызывается при сбое выделения памяти, поэтому, как правило, попытки выделить память внутри регистратора ошибок - плохая идея. Даже не думайте о попытке сохранить сообщение об ошибке в другой базе данных SQLite.</target>
        </trans-unit>
        <trans-unit id="931b7a49e1d266b8f7af8c59c48646cf4fc9a825" translate="yes" xml:space="preserve">
          <source>The error messages that might be sent to the error logger and their exact format is subject to changes from one release to the next. So applications should not depend on any particular error message text formats or error codes. Things do not change capriciously, but they do sometimes changes.</source>
          <target state="translated">Сообщения об ошибках,которые могут быть отправлены в регистратор ошибок,и их точный формат могут изменяться от одного выпуска к другому.Поэтому приложения не должны зависеть от конкретных форматов текстовых сообщений об ошибках или кодов ошибок.Вещи не меняются капризно,но иногда меняются.</target>
        </trans-unit>
        <trans-unit id="6f0f73d0eed4daf2fa7ce504b606f01da04260dc" translate="yes" xml:space="preserve">
          <source>The estimatedCost field should be set to the estimated number of disk access operations required to execute this query against the virtual table. The SQLite core will often call xBestIndex multiple times with different constraints, obtain multiple cost estimates, then choose the query plan that gives the lowest estimate. The SQLite core initializes estimatedCost to a very large value prior to invoking xBestIndex, so if xBestIndex determines that the current combination of parameters is undesirable, it can leave the estimatedCost field unchanged to discourage its use.</source>
          <target state="translated">Поле estimatedCost должно быть установлено в соответствие с предполагаемым количеством операций доступа к диску,необходимых для выполнения этого запроса к виртуальной таблице.Ядро SQLite часто вызывает xBestIndex несколько раз с различными ограничениями,получает несколько оценок стоимости,затем выбирает план запроса,который дает самую низкую оценку.Ядро SQLite инициализирует estimatedCost до очень большого значения перед вызовом xBestIndex,поэтому,если xBestIndex определит,что текущая комбинация параметров является нежелательной,он может оставить поле estimatedCost без изменений,чтобы предотвратить его использование.</target>
        </trans-unit>
        <trans-unit id="9110d26065cfada658af48dd22a731f2e42c4634" translate="yes" xml:space="preserve">
          <source>The estimatedCost value is an estimate of the cost of a particular strategy. A cost of N indicates that the cost of the strategy is similar to a linear scan of an SQLite table with N rows. A cost of log(N) indicates that the expense of the operation is similar to that of a binary search on a unique indexed field of an SQLite table with N rows.</source>
          <target state="translated">Оценочная стоимость представляет собой оценку стоимости конкретной стратегии.Стоимость N указывает на то,что стоимость стратегии аналогична линейному сканированию таблицы SQLite с N строками.Стоимость журнала(N)указывает на то,что стоимость операции аналогична стоимости двоичного поиска по уникальному индексированному полю таблицы SQLite с N строками.</target>
        </trans-unit>
        <trans-unit id="a1d11ebb28b1bb46c038273ece9416f81d29642b" translate="yes" xml:space="preserve">
          <source>The estimatedRows value is an estimate of the number of rows that will be returned by the strategy.</source>
          <target state="translated">Значение estimateRows является оценкой количества строк,которые будут возвращены стратегией.</target>
        </trans-unit>
        <trans-unit id="6e98b869e8e492045895b07f0da4a451a3b65571" translate="yes" xml:space="preserve">
          <source>The exact logic used to determine if a</source>
          <target state="translated">Точная логика,используемая для определения</target>
        </trans-unit>
        <trans-unit id="c7341ca7ddb26c5a501b148a51edcbd920ab7841" translate="yes" xml:space="preserve">
          <source>The exact same source code can be used for both a run-time loadable shared library or DLL and as a module that is statically linked with your application. This provides flexibility and allows you to reuse the same code in different ways.</source>
          <target state="translated">Точно такой же исходный код может быть использован как для загружаемой во время выполнения разделяемой библиотеки или DLL,так и в качестве модуля,статически связанного с вашим приложением.Это обеспечивает гибкость и позволяет повторно использовать один и тот же код различными способами.</target>
        </trans-unit>
        <trans-unit id="51d3ce62c3eb93876d401465d70f8ba808604db2" translate="yes" xml:space="preserve">
          <source>The example above causes the database file named &quot;ex1.db&quot; to be opened and used. The &quot;ex1.db&quot; file is created if it does not previously exist. You might want to use a full pathname to ensure that the file is in the directory that you think it is in. Use forward-slashes as the directory separator character. In other words use &quot;c:/work/ex1.db&quot;, not &quot;c:\work\ex1.db&quot;.</source>
          <target state="translated">В приведенном выше примере открывается и используется файл БД с именем &quot;ex1.db&quot;.Файл &quot;ex1.db&quot; создается,если он ранее не существовал.Возможно,вы захотите использовать полное имя,чтобы убедиться,что файл находится в каталоге,в котором,как вы думаете,он находится.Используйте прямые косые черты в качестве символа разделителя каталогов.Другими словами,используйте &quot;c:/work/ex1.db&quot;,а не &quot;c:\work\ex1.db&quot;.</target>
        </trans-unit>
        <trans-unit id="97b14b6298ce84315e618c11d7722d98fb92421a" translate="yes" xml:space="preserve">
          <source>The example above contains two &quot;SCALAR&quot; subqueries. The subqueries are SCALAR in the sense that they return a single value - a one-row, one-column table. If the actual query returns more than that, then only the first column of the first row is used.</source>
          <target state="translated">Пример выше содержит два подзапроса &quot;SCALAR&quot;.Подзапросы являются SCALAR-ами в том смысле,что они возвращают одно значение-однострочную таблицу с одной колонкой.Если фактический запрос возвращает больше,то используется только первый столбец первой строки.</target>
        </trans-unit>
        <trans-unit id="d7a7c3999051bd06566a95bdd9bc9de8e3e4adaa" translate="yes" xml:space="preserve">
          <source>The example above illustrates the signature of the error logger callback. However, in an embedded application, one usually does not print messages on stderr. Instead, one might store the messages in a preallocated circular buffer where they can be accessed when diagnostic information is needed during debugging. Or perhaps the messages can be sent to &lt;a href=&quot;http://en.wikipedia.org/wiki/Syslog&quot;&gt;Syslog&lt;/a&gt;. Somehow, the messages need to be stored where they are accessible to developers, not displayed to end users.</source>
          <target state="translated">В приведенном выше примере показана подпись обратного вызова регистратора ошибок. Однако во встроенном приложении сообщения на stderr обычно не выводятся. Вместо этого можно сохранить сообщения в заранее выделенном кольцевом буфере, где к ним можно будет получить доступ, когда во время отладки потребуется диагностическая информация. Или, возможно, сообщения можно отправлять в &lt;a href=&quot;http://en.wikipedia.org/wiki/Syslog&quot;&gt;системный журнал&lt;/a&gt; . Каким-то образом сообщения необходимо хранить там, где они доступны разработчикам, а не показывать конечным пользователям.</target>
        </trans-unit>
        <trans-unit id="d307547a7cd9c2e8e0dc86cacf98f3de8afb55c2" translate="yes" xml:space="preserve">
          <source>The example above showed a single &lt;b&gt;filename='thefile.csv'&lt;/b&gt; argument for the CSV virtual table. But other arguments are also possible.</source>
          <target state="translated">В приведенном выше примере показан единственный аргумент &lt;b&gt;filename = 'thefile.csv'&lt;/b&gt; для виртуальной таблицы CSV. Но возможны и другие аргументы.</target>
        </trans-unit>
        <trans-unit id="11a05b76af4570008579a529531a96eb802e047d" translate="yes" xml:space="preserve">
          <source>The example above shows SQLite picking full-table scan will visit all rows in the table. If the query were able to use an index, then the SCAN/SEARCH record would include the name of the index and, for a SEARCH record, an indication of how the subset of rows visited is identified. For example:</source>
          <target state="translated">Приведенный выше пример показывает,что при выборе SQLite полноэкранного сканирования будут посещены все строки таблицы.Если бы запрос мог использовать индекс,то SCAN/SEARCH-запись включала бы имя индекса,а для SEARCH-записи-указание на то,как идентифицируется подмножество посещенных строк.Например:</target>
        </trans-unit>
        <trans-unit id="abd381887f2ea42f76bfd9ebc8b17425d16e2957" translate="yes" xml:space="preserve">
          <source>The example below uses ntile() to divide the six rows into two groups (the ntile(2) call) and into four groups (the ntile(4) call). For ntile(2), there are three rows assigned to each group. For ntile(4), there are two groups of two and two groups of one. The larger groups of two appear first.</source>
          <target state="translated">В приведенном ниже примере используется функция ntile()для разделения шести строк на две группы (вызов ntile(2))и четыре группы (вызов ntile(4)).Для ntile(2)каждой группе назначено по три строки.Для петли(4)имеется две группы по две и две группы по одной.Сначала появляются две большие группы.</target>
        </trans-unit>
        <trans-unit id="c8ad72613a1253e10b2aeefbfa091cedb3448e07" translate="yes" xml:space="preserve">
          <source>The example code below demonstrates the steps involved in capturing a changeset while executing SQL commands. In summary:</source>
          <target state="translated">Приведенный ниже пример кода демонстрирует шаги,связанные с захватом changeset при выполнении SQL-команд.Подводя итог:</target>
        </trans-unit>
        <trans-unit id="cfda7c494f05312b3bf7826ec92aff6df2e44b46" translate="yes" xml:space="preserve">
          <source>The example code below demonstrates the techniques used to iterate through and extract the data related to all changes in a changeset. To summarize:</source>
          <target state="translated">Приведенный ниже пример кода демонстрирует методы,используемые для итерации и извлечения данных,связанных со всеми изменениями в changeset.Подводя итог:</target>
        </trans-unit>
        <trans-unit id="5dde8802fcba008ca09e765d610fcb4f5bf326ca" translate="yes" xml:space="preserve">
          <source>The example code below uses the second of the methods enumerated above - it monitors for changes on all database tables.</source>
          <target state="translated">Приведенный ниже пример кода использует второй из перечисленных выше методов-он отслеживает изменения на всех таблицах БД.</target>
        </trans-unit>
        <trans-unit id="3f036ecd22d9629ed467ac2dbb67b517f12166ad" translate="yes" xml:space="preserve">
          <source>The examples above all use basic full-text term queries as both operands of the set operations demonstrated. Phrase and NEAR queries may also be used, as may the results of other set operations. When more than one set operation is present in an FTS query, the precedence of operators is as follows:</source>
          <target state="translated">В приведенных выше примерах в качестве обоих продемонстрированных операндов множества операций используются базовые полнотекстовые запросы терминов.Могут также использоваться фразовые и NEAR-запросы,а также результаты других операций множества.Когда в запросе ПВТ присутствует несколько множественных операций,приоритет операторов следующий:</target>
        </trans-unit>
        <trans-unit id="1921013ee1678e9933f635ab4c9457e39025bfc3" translate="yes" xml:space="preserve">
          <source>The examples below identify the collating sequences that would be used to determine the results of text comparisons that may be performed by various SQL statements. Note that a text comparison may not be required, and no collating sequence used, in the case of numeric, blob or NULL values.</source>
          <target state="translated">В приведенных ниже примерах определены последовательности сопоставления,которые будут использоваться для определения результатов сопоставления текста,которые могут быть выполнены различными SQL-операторами.Обратите внимание,что текстовое сравнение может не потребоваться,а в случае числовых,блочных или NULL-значений коллекционная последовательность не используется.</target>
        </trans-unit>
        <trans-unit id="367a92feb39a9287f4306f6946c319f7064a8b02" translate="yes" xml:space="preserve">
          <source>The examples in this section all assume that the database is populated as follows:</source>
          <target state="translated">Все примеры в этом разделе предполагают,что БД заполнена следующим образом:</target>
        </trans-unit>
        <trans-unit id="c2bd8a896b6e33422d64448169403c1bc373cf0d" translate="yes" xml:space="preserve">
          <source>The examples in this section all assume the following data:</source>
          <target state="translated">Все примеры в этом разделе предполагают следующие данные:</target>
        </trans-unit>
        <trans-unit id="4d8c3a17bac2c4be1cb9b2d64248454f5513cff9" translate="yes" xml:space="preserve">
          <source>The exception mentioned above is that if the declaration of a column with declared type &quot;INTEGER&quot; includes an &quot;PRIMARY KEY DESC&quot; clause, it does not become an alias for the rowid and is not classified as an integer primary key. This quirk is not by design. It is due to a bug in early versions of SQLite. But fixing the bug could result in backwards incompatibilities. Hence, the original behavior has been retained (and documented) because odd behavior in a corner case is far better than a compatibility break. This means that the following three table declarations all cause the column &quot;x&quot; to be an alias for the rowid (an integer primary key):</source>
          <target state="translated">Исключение,упомянутое выше,состоит в том,что если объявление столбца с объявленным типом &quot;INTEGER&quot; включает в себя выражение &quot;PRIMARY KEY DESC&quot;,то оно не становится псевдонимом для rowid и не классифицируется как целочисленный первичный ключ.Эта причуда не является преднамеренной.Она вызвана ошибкой в ранних версиях SQLite.Но исправление ошибки может привести к обратной несовместимости.Следовательно,первоначальное поведение было сохранено (и задокументировано),потому что странное поведение в угловом случае намного лучше,чем разрыв совместимости.Это означает,что все три нижеследующие декларации таблицы приводят к тому,что столбец &quot;x&quot; является псевдонимом для rowid (целочисленного первичного ключа):</target>
        </trans-unit>
        <trans-unit id="3fca028858f76596a98f86d48ac0ce09545ac4bf" translate="yes" xml:space="preserve">
          <source>The executable format really ends up being just an implementation detail. The key point is that all languages have a compiler step which translates programs into an executable format and a run step that executes the compiled program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41b51d024f674a1f6149c31aede1e868d7d56cf" translate="yes" xml:space="preserve">
          <source>The existence of a transaction depends on whether or not the rollback journal file exists and the deletion of a file appears to be an atomic operation from the point of view of a user-space process. Therefore, a transaction appears to be an atomic operation.</source>
          <target state="translated">Существование транзакции зависит от того,существует ли файл журнала отката,а удаление файла представляется с точки зрения пользовательского пространства атомарной операцией.Следовательно,транзакция выглядит как атомарная операция.</target>
        </trans-unit>
        <trans-unit id="6021cb5e88d7481ca7795a9ddd0c04e6033fc0e0" translate="yes" xml:space="preserve">
          <source>The existing INSERT is removed from the changegroup. The DELETE is not added.</source>
          <target state="translated">Существующий INSERT удаляется из группы изменений.УДАЛЕНИЕ не добавляется.</target>
        </trans-unit>
        <trans-unit id="4a2b5a6b7a6bdb1833a8cf1e839e065d174385dc" translate="yes" xml:space="preserve">
          <source>The existing UPDATE is replaced by the new DELETE within the changegroup.</source>
          <target state="translated">Существующая UPDATE заменяется новой DELETE в группе изменений.</target>
        </trans-unit>
        <trans-unit id="5c1e2e9de2a17cfdc315c14e1e74a36e45b9c92f" translate="yes" xml:space="preserve">
          <source>The existing UPDATE remains within the changegroup. It is amended so that the accompanying values are as if the row was updated once by the existing change and then again by the new change.</source>
          <target state="translated">Существующая дата UPDATE остается в группе изменений.Она изменяется таким образом,что сопроводительные значения как если бы строка была обновлена один раз существующим изменением,а затем снова новым изменением.</target>
        </trans-unit>
        <trans-unit id="fca9185c8e0eb9e3e49b7068e021cf8a710c066e" translate="yes" xml:space="preserve">
          <source>The explicit COMMIT command runs immediately, even if there are pending &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statements. However, if there are pending write operations, the COMMIT command will fail with an error code &lt;a href=&quot;rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt;.</source>
          <target state="translated">Явная команда COMMIT выполняется немедленно, даже если есть ожидающие &lt;a href=&quot;lang_select&quot;&gt;выполнения&lt;/a&gt; инструкции SELECT . Однако, если есть ожидающие операции записи, команда COMMIT завершится ошибкой с кодом &lt;a href=&quot;rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e2d16a733bb795b8f24e0161c9bf1e3201567a34" translate="yes" xml:space="preserve">
          <source>The expression &quot;+column&quot; is now considered the same as &quot;column&quot; when computing the collating sequence to use on the expression.</source>
          <target state="translated">Выражение &quot;+столбец&quot; теперь считается таким же,как и &quot;столбец&quot; при вычислении коллатирующей последовательности для использования в выражении.</target>
        </trans-unit>
        <trans-unit id="fee373e0e83d3368c40362493777ab8e984bd97b" translate="yes" xml:space="preserve">
          <source>The expression &quot;a BETWEEN b AND c&quot; is treated as two separate binary comparisons &quot;a &amp;gt;= b AND a &amp;lt;= c&quot;, even if that means different affinities are applied to 'a' in each of the comparisons. Datatype conversions in comparisons of the form &quot;x IN (SELECT y ...)&quot; are handled is if the comparison were really &quot;x=y&quot;. The expression &quot;a IN (x, y, z, ...)&quot; is equivalent to &quot;a = +x OR a = +y OR a = +z OR ...&quot;. In other words, the values to the right of the IN operator (the &quot;x&quot;, &quot;y&quot;, and &quot;z&quot; values in this example) are considered to have no affinity, even if they happen to be column values or CAST expressions.</source>
          <target state="translated">Выражение &amp;laquo;a BETWEEN b AND c&amp;raquo; обрабатывается как два отдельных двоичных сравнения &amp;laquo;a&amp;gt; = b AND a &amp;lt;= c&amp;raquo;, даже если это означает, что к &amp;laquo;a&amp;raquo; в каждом из сравнений применяются разные аффинности. Преобразования типов данных при сравнении формы &amp;laquo;x IN (SELECT y ...)&amp;raquo; обрабатываются, если сравнение действительно было &amp;laquo;x = y&amp;raquo;. Выражение &amp;laquo;a IN (x, y, z, ...)&amp;raquo; эквивалентно &amp;laquo;a = + x OR a = + y OR a = + z OR ...&amp;raquo;. Другими словами, значения справа от оператора IN (значения &amp;laquo;x&amp;raquo;, &amp;laquo;y&amp;raquo; и &amp;laquo;z&amp;raquo; в этом примере) считаются не имеющими сродства, даже если они являются значениями столбцов или выражениями CAST. .</target>
        </trans-unit>
        <trans-unit id="15a424b3e7e4f20cd419dc00af0824f2446f3f50" translate="yes" xml:space="preserve">
          <source>The expression &quot;x BETWEEN y and z&quot; is logically equivalent to two comparisons &quot;x &amp;gt;= y AND x &amp;lt;= z&quot; and works with respect to collating functions as if it were two separate comparisons. The expression &quot;x IN (SELECT y ...)&quot; is handled in the same way as the expression &quot;x = y&quot; for the purposes of determining the collating sequence. The collating sequence used for expressions of the form &quot;x IN (y, z, ...)&quot; is the collating sequence of x.</source>
          <target state="translated">Выражение &amp;laquo;x BETWEEN y and z&amp;raquo; логически эквивалентно двум сравнениям &amp;laquo;x&amp;gt; = y AND x &amp;lt;= z&amp;raquo; и работает в отношении функций сопоставления, как если бы это были два отдельных сравнения. Выражение &amp;laquo;x IN (SELECT y ...)&amp;raquo; обрабатывается таким же образом, как и выражение &amp;laquo;x = y&amp;raquo; для определения последовательности сортировки. Последовательность упорядочения, используемая для выражений вида &amp;laquo;x IN (y, z, ...)&amp;raquo;, является последовательностью упорядочения x.</target>
        </trans-unit>
        <trans-unit id="70c0ccea32ba2d8b128981db932845adc7b90c4c" translate="yes" xml:space="preserve">
          <source>The expression &quot;x BETWEEN y and z&quot; is logically equivalent to two comparisons &quot;x &amp;gt;= y AND x &amp;lt;= z&quot; and works with respect to collating functions as if it were two separate comparisons. The expression &quot;x IN (SELECT y ...)&quot; is handled in the same way as the expression &quot;x = y&quot; for the purposes of determining the collating sequence. The collating sequence used for expressions of the form &quot;x IN (y, z, ...)&quot; is the collating sequence of x. If an explicit collating sequence is required on an IN operator it should be applied to the left operand, like this: &quot;x COLLATE nocase IN (y,z, ...)&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6d1934b411c6401d1051c4d7453826ea7a9843" translate="yes" xml:space="preserve">
          <source>The expression attached to the optional OFFSET clause that may follow a LIMIT clause must also evaluate to an integer, or a value that can be losslessly converted to an integer. If an expression has an OFFSET clause, then the first M rows are omitted from the result set returned by the SELECT statement and the next N rows are returned, where M and N are the values that the OFFSET and LIMIT clauses evaluate to, respectively. Or, if the SELECT would return less than M+N rows if it did not have a LIMIT clause, then the first M rows are skipped and the remaining rows (if any) are returned. If the OFFSET clause evaluates to a negative value, the results are the same as if it had evaluated to zero.</source>
          <target state="translated">Выражение,приложенное к необязательному пункту OFFSET,которое может следовать за пунктом LIMIT,должно также вычисляться в целое число или в значение,которое может быть без потерь преобразовано в целое число.Если выражение имеет условие OFFSET,то первые M строк опускаются из набора результатов,возвращаемого оператором SELECT,а следующие N строк возвращаются,где M и N-это значения,которые клаузулы OFFSET и LIMIT оценивают соответственно.Или,если SELECT возвращает меньше M+N строк,если в нем нет пункта LIMIT,то пропускаются первые M строк и возвращаются оставшиеся строки (если таковые имеются).Если условие OFFSET оценивает отрицательное значение,результаты будут такими же,как если бы оно оценивалось до нуля.</target>
        </trans-unit>
        <trans-unit id="1cd8c2a06181abbb52fb772c5e4393bf493adec9" translate="yes" xml:space="preserve">
          <source>The expression following the WHERE clause may contain operators, literal values, and names of columns in the table being indexed. The WHERE clause may &lt;em&gt;not&lt;/em&gt; contain subqueries, references to other tables, &lt;a href=&quot;deterministic&quot;&gt;non-deterministic functions&lt;/a&gt;, or &lt;a href=&quot;lang_expr#varparam&quot;&gt;bound parameters&lt;/a&gt;.</source>
          <target state="translated">Выражение, следующее за предложением WHERE, может содержать операторы, буквальные значения и имена столбцов в индексируемой таблице. Предложение WHERE &lt;em&gt;не&lt;/em&gt; может содержать подзапросы, ссылки на другие таблицы, &lt;a href=&quot;deterministic&quot;&gt;недетерминированные функции&lt;/a&gt; или &lt;a href=&quot;lang_expr#varparam&quot;&gt;связанные параметры&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c1e099acc66b957c91a242e71ab41548df3e15b" translate="yes" xml:space="preserve">
          <source>The expression of a generated column can refer to any of the other declared columns in the table, including other generated columns, as long as the expression does not directly or indirectly refer back to itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd71176d0cd745c21cb3b1319609677077ace52" translate="yes" xml:space="preserve">
          <source>The expression of a generated column may not directly reference the &lt;a href=&quot;lang_createtable#rowid&quot;&gt;ROWID&lt;/a&gt;, though it can reference the &lt;a href=&quot;lang_createtable#rowid&quot;&gt;INTEGER PRIMARY KEY&lt;/a&gt; column, which is often the same thing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b0f355cc2989c7cff5a5d8658f4cccd6f86732" translate="yes" xml:space="preserve">
          <source>The expression of a generated column may only reference constant literals and columns within the same row, and may only use scalar &lt;a href=&quot;deterministic&quot;&gt;deterministic functions&lt;/a&gt;. The expression may not use subqueries, aggregate functions, window functions, or table-valued functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3177e05d9fce52b64c04ddd90d24e41132bbd994" translate="yes" xml:space="preserve">
          <source>The expression of a generated column may refer to other generated columns in the same row, but no generated column can depend upon itself, either directly or indirectly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa57007d3af78002775463ea997fdbb172a0c191" translate="yes" xml:space="preserve">
          <source>The extension loading mechanism of SQLite (accessed using the &lt;a href=&quot;lang_corefunc#load_extension&quot;&gt;load_extension()&lt;/a&gt; SQL function) is turned off by default. This is a security precaution. If an application wants to make use of the &lt;a href=&quot;lang_corefunc#load_extension&quot;&gt;load_extension()&lt;/a&gt; function it must first turn the capability on using this method.</source>
          <target state="translated">Механизм загрузки расширений SQLite (доступ к которому осуществляется с помощью функции SQL &lt;a href=&quot;lang_corefunc#load_extension&quot;&gt;load_extension ()&lt;/a&gt; ) по умолчанию отключен. Это мера безопасности. Если приложение хочет использовать &lt;a href=&quot;lang_corefunc#load_extension&quot;&gt;функцию load_extension (),&lt;/a&gt; оно должно сначала включить эту возможность с помощью этого метода.</target>
        </trans-unit>
        <trans-unit id="bbd9a40496de97ba5cfcabba824166980ee9d8c1" translate="yes" xml:space="preserve">
          <source>The extra write overhead prompted a reexamination of assumptions about powersafe overwrite. With modern disk drives, the capacity has become so large and the data density so great that a single sector is very small and writing a single sector takes very little time. We know that disk drives can detect an impending power loss and continue to operate for some small amount of time on residual energy because those drives are able to park their heads before spinning down. And so if an impending power loss is detectable by the disk controller, it seems reasonable that the controller will finish writing whatever sector it is current working on when the imminent power loss is first detected, prior to parking the heads, as long as doing so does not take too long, which it should not with small and dense sectors. Hence it seems reasonable to assume powersafe overwrite for modern disks. Indeed, BerkeleyDB has made this assumption for decades, we are told. Caution is advised though. As Roger Binns noted on the SQLite developers mailing list: &quot;'poorly written' should be the main assumption about drive firmware.&quot;</source>
          <target state="translated">Дополнительные накладные расходы на запись заставили пересмотреть предположения о перезаписи в режиме энергосбережения.С современными дисковыми накопителями емкость стала настолько велика,а плотность данных настолько велика,что один сектор очень мал,а запись одного сектора занимает очень мало времени.Мы знаем,что дисковые накопители могут обнаружить надвигающуюся потерю энергии и продолжать работать в течение некоторого небольшого количества времени на остаточной энергии,потому что эти накопители способны парковать свои головы перед вращением вниз.И поэтому,если предстоящая потеря мощности обнаруживается контроллером диска,кажется разумным,что контроллер закончит запись любого сектора,над которым он работает в данный момент,при первом обнаружении неминуемой потери мощности,до парковки головок,при условии,что это не займет слишком много времени,что не должно происходить при работе с малыми и плотными секторами.Поэтому представляется разумным предположить безопасную для питания перезапись для современных дисков.Действительно,BerkeleyDB делает это предположение на протяжении десятилетий,как нам говорят.Тем не менее,следует быть осторожным.Как отметил Роджер Биннс в списке рассылки разработчиков SQLite:&quot;плохо написанное&quot; должно быть основным предположением о прошивке диска&quot;.</target>
        </trans-unit>
        <trans-unit id="f31765748ec404a72a387c3ce457db0e7fddb3f0" translate="yes" xml:space="preserve">
          <source>The fact that NULLs are distinct for UNIQUE columns but are indistinct for SELECT DISTINCT and UNION continues to be puzzling. It seems that NULLs should be either distinct everywhere or nowhere. And the SQL standards documents suggest that NULLs should be distinct everywhere. Yet as of this writing, no SQL engine tested treats NULLs as distinct in a SELECT DISTINCT statement or in a UNION.</source>
          <target state="translated">Тот факт,что NULLs различаются для столбцов UNIQUE,но неразличимы для SELECT DISTINCT и UNION,продолжает вызывать недоумение.Похоже,что NULLs должны быть либо везде,либо нигде.А в документах по стандартам SQL говорится,что NULL должны быть разными везде.Тем не менее,на момент написания этой статьи ни один SQL-движок,протестированный,не рассматривает NULL как различные в заявлении SELECT DISTINCT или в UNION.</target>
        </trans-unit>
        <trans-unit id="36716fd190ed79338836da067e34479b294afa61" translate="yes" xml:space="preserve">
          <source>The fact that SQLite is embedded and &lt;a href=&quot;serverless&quot;&gt;serverless&lt;/a&gt; instead of being client/server is a feature, not a bug.</source>
          <target state="translated">Тот факт, что SQLite является встроенным и &lt;a href=&quot;serverless&quot;&gt;бессерверным,&lt;/a&gt; а не клиент-серверным, является функцией, а не ошибкой.</target>
        </trans-unit>
        <trans-unit id="893ade2ecf018b089d7d0c2f18f2d37a93397ea0" translate="yes" xml:space="preserve">
          <source>The fifth argument to the BLOB and string binding interfaces is a destructor used to dispose of the BLOB or string after SQLite has finished with it. The destructor is called to dispose of the BLOB or string even if the call to the bind API fails, except the destructor is not called if the third parameter is a NULL pointer or the fourth parameter is negative. If the fifth argument is the special value &lt;a href=&quot;#SQLITE_STATIC&quot;&gt;SQLITE_STATIC&lt;/a&gt;, then SQLite assumes that the information is in static, unmanaged space and does not need to be freed. If the fifth argument has the value &lt;a href=&quot;#SQLITE_STATIC&quot;&gt;SQLITE_TRANSIENT&lt;/a&gt;, then SQLite makes its own private copy of the data immediately, before the sqlite3_bind_*() routine returns.</source>
          <target state="translated">Пятый аргумент интерфейсов привязки BLOB и строки - это деструктор, используемый для удаления BLOB или строки после того, как SQLite завершит работу с ними. Деструктор вызывается для удаления BLOB или строки, даже если вызов API привязки завершается неудачно, за исключением того, что деструктор не вызывается, если третий параметр является указателем NULL или четвертый параметр имеет отрицательное значение. Если пятым аргументом является специальное значение &lt;a href=&quot;#SQLITE_STATIC&quot;&gt;SQLITE_STATIC&lt;/a&gt; , тогда SQLite предполагает, что информация находится в статическом неуправляемом пространстве и не требует освобождения. Если пятый аргумент имеет значение &lt;a href=&quot;#SQLITE_STATIC&quot;&gt;SQLITE_TRANSIENT&lt;/a&gt; , то SQLite создает свою собственную частную копию данных немедленно, до возврата из процедуры sqlite3_bind _ * ().</target>
        </trans-unit>
        <trans-unit id="e68c8434fb7585b2fc0da0f853455aed19727f06" translate="yes" xml:space="preserve">
          <source>The fifth argument to the BLOB and string binding interfaces is a destructor used to dispose of the BLOB or string after SQLite has finished with it. The destructor is called to dispose of the BLOB or string even if the call to the bind API fails, except the destructor is not called if the third parameter is a NULL pointer or the fourth parameter is negative. If the fifth argument is the special value &lt;a href=&quot;c_static&quot;&gt;SQLITE_STATIC&lt;/a&gt;, then SQLite assumes that the information is in static, unmanaged space and does not need to be freed. If the fifth argument has the value &lt;a href=&quot;c_static&quot;&gt;SQLITE_TRANSIENT&lt;/a&gt;, then SQLite makes its own private copy of the data immediately, before the sqlite3_bind_*() routine returns.</source>
          <target state="translated">Пятый аргумент интерфейсов привязки BLOB и строки - это деструктор, используемый для удаления BLOB или строки после того, как SQLite завершит работу с ними. Деструктор вызывается для удаления BLOB или строки, даже если вызов API привязки завершается неудачно, за исключением того, что деструктор не вызывается, если третий параметр является указателем NULL или четвертый параметр имеет отрицательное значение. Если пятым аргументом является специальное значение &lt;a href=&quot;c_static&quot;&gt;SQLITE_STATIC&lt;/a&gt; , тогда SQLite предполагает, что информация находится в статическом неуправляемом пространстве и не требует освобождения. Если пятый аргумент имеет значение &lt;a href=&quot;c_static&quot;&gt;SQLITE_TRANSIENT&lt;/a&gt; , то SQLite создает свою собственную частную копию данных немедленно, до возврата из процедуры sqlite3_bind _ * ().</target>
        </trans-unit>
        <trans-unit id="901b5e438fd14b98c5489ac30117b7e4f79582ec" translate="yes" xml:space="preserve">
          <source>The fifth argument, xCallback, is a pointer to the collating function. Multiple collating functions can be registered using the same name but with different eTextRep parameters and SQLite will use whichever function requires the least amount of data transformation. If the xCallback argument is NULL then the collating function is deleted. When all collating functions having the same name are deleted, that collation is no longer usable.</source>
          <target state="translated">Пятый аргумент,xCallback,это указатель на функцию сравнения.Несколько функций коллатинга могут быть зарегистрированы под одним и тем же именем,но с разными параметрами eTextRep,и SQLite будет использовать ту функцию,которая требует наименьшего объема трансформации данных.Если аргумент xCallback равен NULL,то функция коллатинга удаляется.Когда все функции-компиляторы с одинаковыми именами удаляются,эта компиляция больше не может быть использована.</target>
        </trans-unit>
        <trans-unit id="9b66d05a972406caa6b8e66ca673681eea81f8a6" translate="yes" xml:space="preserve">
          <source>The fifth argument, xCompare, is a pointer to the collating function. Multiple collating functions can be registered using the same name but with different eTextRep parameters and SQLite will use whichever function requires the least amount of data transformation. If the xCompare argument is NULL then the collating function is deleted. When all collating functions having the same name are deleted, that collation is no longer usable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3d71778e0851af7f19eb98c05ebd04280b893c" translate="yes" xml:space="preserve">
          <source>The fifth parameter is an arbitrary pointer. The implementation of the function can gain access to this pointer using &lt;a href=&quot;#sqlite3_user_data&quot;&gt;sqlite3_user_data()&lt;/a&gt;.</source>
          <target state="translated">Пятый параметр - произвольный указатель. Реализация функции может получить доступ к этому указателю с помощью &lt;a href=&quot;#sqlite3_user_data&quot;&gt;sqlite3_user_data ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8991c375d182bf0ed874e01ceb3c3fba4c90a4d1" translate="yes" xml:space="preserve">
          <source>The fifth parameter is an arbitrary pointer. The implementation of the function can gain access to this pointer using &lt;a href=&quot;user_data&quot;&gt;sqlite3_user_data()&lt;/a&gt;.</source>
          <target state="translated">Пятый параметр - произвольный указатель. Реализация функции может получить доступ к этому указателю с помощью &lt;a href=&quot;user_data&quot;&gt;sqlite3_user_data ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b5fa94425e25711d656d2caafbaef27474f2b42" translate="yes" xml:space="preserve">
          <source>The file I/O implementation can use the object type flags to change the way it deals with files. For example, an application that does not care about crash recovery or rollback might make the open of a journal file a no-op. Writes to this journal would also be no-ops, and any attempt to read the journal would return SQLITE_IOERR. Or the implementation might recognize that a database file will be doing page-aligned sector reads and writes in a random order and set up its I/O subsystem accordingly.</source>
          <target state="translated">Реализация файлового ввода/вывода может использовать флаги типа объекта для изменения способа работы с файлами.Например,приложение,которое не заботится о восстановлении после сбоя или откате,может сделать открытие файла журнала нерабочим.Запись в этот журнал также была бы no-ops,и любая попытка чтения журнала возвращала бы SQLITE_IOERR.Или же реализация может распознать,что файл базы данных будет выполнять чтение и запись выровненных по страницам секторов в случайном порядке и соответствующим образом настроить свою подсистему ввода/вывода.</target>
        </trans-unit>
        <trans-unit id="2ace627b4eb1891a06a62ee2e61523c0922ec242" translate="yes" xml:space="preserve">
          <source>The file I/O implementation can use the object type flags to changes the way it deals with files. For example, an application that does not care about crash recovery or rollback, might make the open of a journal file a no-op. Writes to this journal are also a no-op. Any attempt to read the journal returns &lt;a href=&quot;rescode#ioerr&quot;&gt;SQLITE_IOERR&lt;/a&gt;. Or the implementation might recognize the a database file will be doing page-aligned sector reads and writes in a random order and set up its I/O subsystem accordingly. SQLite might also add one of the following flags to the xOpen method:</source>
          <target state="translated">Реализация файлового ввода-вывода может использовать флаги типа объекта, чтобы изменить способ работы с файлами. Например, приложение, которое не заботится о восстановлении после сбоя или откате, может заблокировать открытие файла журнала. Записи в этот журнал также запрещены. Любая попытка прочитать журнал возвращает &lt;a href=&quot;rescode#ioerr&quot;&gt;SQLITE_IOERR&lt;/a&gt; . Или реализация может распознать, что файл базы данных будет выполнять чтение и запись с выравниванием по страницам в произвольном порядке, и соответствующим образом настроить свою подсистему ввода-вывода. SQLite может также добавить один из следующих флагов к методу xOpen:</target>
        </trans-unit>
        <trans-unit id="339116ded6000b1bbd01c16fbc4b426fdbec3ebf" translate="yes" xml:space="preserve">
          <source>The file change counter is a 4-byte big-endian integer at offset 24 that is incremented whenever the database file is unlocked after having been modified. When two or more processes are reading the same database file, each process can detect database changes from other processes by monitoring the change counter. A process will normally want to flush its database page cache when another process modified the database, since the cache has become stale. The file change counter facilitates this.</source>
          <target state="translated">Счетчик изменений файлов представляет собой 4-байтовое биг-ендианное целое число со смещением 24,которое инкрементируется всякий раз,когда файл базы данных разблокирован после его изменения.Когда два или более процесса считывают один и тот же файл базы данных,каждый процесс может обнаружить изменения в базе данных от других процессов,отслеживая счетчик изменений.Обычно процесс хочет очистить кэш страниц базы данных,когда другой процесс изменил базу данных,так как кэш стал черствым.Счетчик изменений файлов облегчает это.</target>
        </trans-unit>
        <trans-unit id="3144a807afc9a81e0cce3e084ad085692d9830bb" translate="yes" xml:space="preserve">
          <source>The file format can be extended in future releases simply by adding new tables and/or column, preserving backwards compatibility.</source>
          <target state="translated">Формат файла может быть расширен в будущих релизах простым добавлением новых таблиц и/или столбцов,сохраняя обратную совместимость.</target>
        </trans-unit>
        <trans-unit id="e6aaed4a8d57b71607b8967869bcc7f23189ec3d" translate="yes" xml:space="preserve">
          <source>The file format for indices was changed slightly in order to work around an inefficiency that can sometimes come up with GDBM when there are large indices having many entries with the same key. ** Incompatible Change **</source>
          <target state="translated">Формат файлов для индексов был несколько изменен,чтобы работать вокруг неэффективности,которая иногда может прийти в голову GDBM,когда есть большие индексы,имеющие много записей с одним и тем же ключом.**Несовместимое изменение</target>
        </trans-unit>
        <trans-unit id="227aafe2527e84f2018568e74a1b6b84889b7a1b" translate="yes" xml:space="preserve">
          <source>The file format write version and file format read version at offsets 18 and 19 are intended to allow for enhancements of the file format in future versions of SQLite. In current versions of SQLite, both of these values are 1 for rollback journalling modes and 2 for &lt;a href=&quot;wal&quot;&gt;WAL&lt;/a&gt; journalling mode. If a version of SQLite coded to the current file format specification encounters a database file where the read version is 1 or 2 but the write version is greater than 2, then the database file must be treated as read-only. If a database file with a read version greater than 2 is encountered, then that database cannot be read or written.</source>
          <target state="translated">Версия для записи формата файла и версия для чтения в формате файла на смещениях 18 и 19 предназначены для улучшения формата файла в будущих версиях SQLite. В текущих версиях SQLite оба эти значения: 1 для режимов журналирования отката и 2 для режима журналирования &lt;a href=&quot;wal&quot;&gt;WAL&lt;/a&gt; . Если версия SQLite, закодированная в соответствии с текущей спецификацией формата файла, встречает файл базы данных, где версия для чтения равна 1 или 2, но версия для записи больше 2, то файл базы данных должен рассматриваться как доступный только для чтения. Если обнаружен файл базы данных с версией чтения больше 2, то эта база данных не может быть прочитана или записана.</target>
        </trans-unit>
        <trans-unit id="57007ced430f8a0cf3127ebbd04af2dceb5d897b" translate="yes" xml:space="preserve">
          <source>The file-handle open on the</source>
          <target state="translated">Ручка-файл открыта на</target>
        </trans-unit>
        <trans-unit id="b75893e55d63ac0a30441dba63c6c7335b33555b" translate="yes" xml:space="preserve">
          <source>The file-system</source>
          <target state="translated">Файловая система</target>
        </trans-unit>
        <trans-unit id="e3cc87e79b2a7545d431775230c50e5146077116" translate="yes" xml:space="preserve">
          <source>The filename can be interpreted as a URI if this flag is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f230eea69094b4593dd99813cb077b78f99716" translate="yes" xml:space="preserve">
          <source>The filename for the database to be attached is the value of the expression that occurs before the AS keyword. The filename of the database follows the same semantics as the filename argument to &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; and &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt;; the special name &quot;&lt;a href=&quot;inmemorydb&quot;&gt;:memory:&lt;/a&gt;&quot; results in an &lt;a href=&quot;inmemorydb&quot;&gt;in-memory database&lt;/a&gt; and an empty string results in a new temporary database. The filename argument can be a &lt;a href=&quot;uri&quot;&gt;URI filename&lt;/a&gt; if URI filename processing is enable on the database connection. The default behavior is for URI filenames to be disabled, however that might change in a future release of SQLite, so application developers are advised to plan accordingly.</source>
          <target state="translated">Имя файла для присоединяемой базы данных - это значение выражения, которое стоит перед ключевым словом AS. Имя файла базы данных следует той же семантике, что и аргумент имени файла для &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open ()&lt;/a&gt; и &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2 ()&lt;/a&gt; ; специальное имя &quot; &lt;a href=&quot;inmemorydb&quot;&gt;: memory:&lt;/a&gt; &quot; приводит к &lt;a href=&quot;inmemorydb&quot;&gt;базе данных в памяти,&lt;/a&gt; а пустая строка приводит к новой временной базе данных. Аргументом имени файла может быть &lt;a href=&quot;uri&quot;&gt;имя файла URI,&lt;/a&gt; если обработка имени файла URI включена для соединения с базой данных. По умолчанию имена файлов URI отключены, однако это может измениться в будущих версиях SQLite, поэтому разработчикам приложений рекомендуется планировать соответствующие действия.</target>
        </trans-unit>
        <trans-unit id="f17e1c0d84ff3c2fe25d0856ea88c3fbd19c5fb1" translate="yes" xml:space="preserve">
          <source>The filename in the INTO clause can be an arbitrary SQL expression that evaluates to a string. The file named by the INTO clause must not previously exist, or else it must be an empty file, or the VACUUM INTO command will fail with an error.</source>
          <target state="translated">Имя файла в выражении INTO может быть произвольным SQL выражением,которое вычисляется в строку.Файл,названный с помощью выражения INTO,не должен существовать ранее,иначе он должен быть пустым файлом,иначе команда VACUUM INTO выйдет из строя с ошибкой.</target>
        </trans-unit>
        <trans-unit id="d4df05c7fc29b7702e9fa3ab7eeeb629cbcad3f5" translate="yes" xml:space="preserve">
          <source>The filename returned by this function is the output of the xFullPathname method of the &lt;a href=&quot;../vfs&quot;&gt;VFS&lt;/a&gt;. In other words, the filename will be an absolute pathname, even if the filename used to open the database originally was a URI or relative pathname.</source>
          <target state="translated">Имя файла, возвращаемое этой функцией, является выводом метода xFullPathname &lt;a href=&quot;../vfs&quot;&gt;VFS&lt;/a&gt; . Другими словами, имя файла будет абсолютным путем, даже если имя файла, используемое для открытия базы данных, изначально было URI или относительным путем.</target>
        </trans-unit>
        <trans-unit id="9485b160522d31184c8916615322f5219f0612b8" translate="yes" xml:space="preserve">
          <source>The filename returned by this function is the output of the xFullPathname method of the &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;. In other words, the filename will be an absolute pathname, even if the filename used to open the database originally was a URI or relative pathname.</source>
          <target state="translated">Имя файла, возвращаемое этой функцией, является выводом метода xFullPathname &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; . Другими словами, имя файла будет абсолютным путем, даже если имя файла, используемое для открытия базы данных, изначально было URI или относительным путем.</target>
        </trans-unit>
        <trans-unit id="fc318f399f5ecbc4db919258057f39b26883fdf3" translate="yes" xml:space="preserve">
          <source>The final answer is found by looking for a string with ind==0. If the original sudoku problem did not have a unique solution, then the query will return all possible solutions. If the original problem was unsolvable, then no rows will be returned. In this case, the unique answer is:</source>
          <target state="translated">Окончательный ответ найден путем поиска строки с ind==0.Если оригинальная задача sudoku не имела уникального решения,то запрос вернет все возможные решения.Если оригинальная задача была неразрешимой,то строки возвращаться не будут.В этом случае уникальным ответом будет:</target>
        </trans-unit>
        <trans-unit id="0fa7031611bf07c03077958f2b8ed29a77590306" translate="yes" xml:space="preserve">
          <source>The final argument is an output variable. If successful, (*ppOut) should be set to point to the new tokenizer handle and SQLITE_OK returned. If an error occurs, some value other than SQLITE_OK should be returned. In this case, fts5 assumes that the final value of *ppOut is undefined.</source>
          <target state="translated">Последним аргументом является выходная переменная.В случае успеха (*ppOut)необходимо указать на новый хэндл токенайзера и вернуть SQLITE_OK.В случае ошибки должно быть возвращено некоторое значение,отличное от SQLITE_OK.В этом случае fts5 предполагает,что конечное значение *ppOut не определено.</target>
        </trans-unit>
        <trans-unit id="3adcbd65298a5982e7a64803692e07245861c301" translate="yes" xml:space="preserve">
          <source>The final byte of an encoded FTS varint has its most significant bit cleared. All preceding bytes have the most significant bit set. Data is stored in the remaining seven least significant bits of each byte. The first byte of the encoded representation contains the least significant seven bits of the encoded integer value. The second byte of the encoded representation, if it is present, contains the seven next least significant bits of the integer value, and so on. The following table contains examples of encoded integer values:</source>
          <target state="translated">Последний байт закодированного варинта FTS очищен от наиболее значимого бита.Все предыдущие байты имеют наиболее значащий набор битов.Данные хранятся в оставшихся семи младших битах каждого байта.Первый байт кодированного представления содержит семь младших значащих битов кодированного целого значения.Второй байт кодированного представления,если он присутствует,содержит семь следующих младших значащих битов целого значения и так далее.В следующей таблице приведены примеры кодированных целочисленных значений:</target>
        </trans-unit>
        <trans-unit id="c65b7966b6f5867eece6741b751cabc0c349ca6a" translate="yes" xml:space="preserve">
          <source>The final line of the example (the &quot;.system c:/work/dataout.csv&quot;) has the same effect as double-clicking on the c:/work/dataout.csv file in windows. This will typically bring up a spreadsheet program to display the CSV file.</source>
          <target state="translated">Последняя строка примера (&quot;.system c:/work/dataout.csv&quot;)имеет тот же эффект,что и двойной щелчок на файле c:/work/dataout.csv в окнах.Обычно это вызовет программу электронной таблицы для отображения CSV-файла.</target>
        </trans-unit>
        <trans-unit id="312ab3f0c70e0337ccdf666710177cbb51a2f6d3" translate="yes" xml:space="preserve">
          <source>The final query in the block above may not work as expected. Because the &quot;*&quot; character is inside the double-quotes, it will be passed to the tokenizer, which will likely discard it (or perhaps, depending on the specific tokenizer in use, include it as part of the final token) instead of recognizing it as a special FTS character.</source>
          <target state="translated">Последний запрос в вышеуказанном блоке может работать не так,как ожидалось.Поскольку символ &quot;*&quot; находится внутри двойных кавычек,он будет передан токенайзеру,который,скорее всего,отбросит его (или,возможно,в зависимости от используемого токенайзера,включит его в состав конечной токена),вместо того,чтобы распознавать его как специальный символ FTS.</target>
        </trans-unit>
        <trans-unit id="a564ec7adef18f2e787e1258b9aed3803202963e" translate="yes" xml:space="preserve">
          <source>The final recovery step is to reduce the exclusive lock back to a shared lock. Once this happens, the database is back in the state that it would have been if the aborted transaction had never started. Since all of this recovery activity happens completely automatically and transparently, it appears to the program using SQLite as if the aborted transaction had never begun.</source>
          <target state="translated">Последний шаг восстановления-уменьшение эксклюзивного замка до общего.Как только это происходит,база данных возвращается в то состояние,в котором она была бы,если бы прерванная транзакция никогда не начиналась.Поскольку вся эта деятельность по восстановлению происходит полностью автоматически и прозрачно,программе,использующей SQLite,кажется,что прерванная транзакция никогда не начиналась.</target>
        </trans-unit>
        <trans-unit id="434e32f7c5be2c22a40571665c3031a75ce803d2" translate="yes" xml:space="preserve">
          <source>The final source of large memory allocations is the space to hold the &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt; that result from compiling complex SQL operations. Ongoing work by the SQLite developers is reducing the amount of space required here. But large and complex queries might still require &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt; that are several kilobytes in size. The only workaround at the moment is for the application to break complex SQL operations up into two or more smaller and simpler operations contained in separate &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt;.</source>
          <target state="translated">Последним источником выделения больших объемов памяти является пространство для хранения &lt;a href=&quot;c3ref/stmt&quot;&gt;подготовленных операторов&lt;/a&gt; , являющихся результатом компиляции сложных операций SQL. Продолжающаяся работа разработчиков SQLite сокращает объем требуемого здесь места. Но для больших и сложных запросов все же могут потребоваться &lt;a href=&quot;c3ref/stmt&quot;&gt;подготовленные операторы&lt;/a&gt; размером в несколько килобайт. Единственный обходной путь на данный момент заключается в том, что приложение разбивает сложные операции SQL на две или более более мелких и простых операций, содержащихся в отдельных &lt;a href=&quot;c3ref/stmt&quot;&gt;подготовленных операторах&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e5be990568c2b06d13617fdb20a3f4473d59b9c" translate="yes" xml:space="preserve">
          <source>The final step in a multi-file commit is to delete the individual rollback journals and drop the exclusive locks on the database files so that other processes can see the changes. This corresponds to &lt;a href=&quot;#section_3_12&quot;&gt;step 3.12&lt;/a&gt; in the single-file commit sequence.</source>
          <target state="translated">Последним шагом в многофайловой фиксации является удаление отдельных журналов отката и снятие монопольных блокировок с файлов базы данных, чтобы другие процессы могли видеть изменения. Это соответствует &lt;a href=&quot;#section_3_12&quot;&gt;шагу 3.12&lt;/a&gt; в последовательности фиксации одного файла.</target>
        </trans-unit>
        <trans-unit id="570119a07afaf61a9f20cf9abd68b217ebf33834" translate="yes" xml:space="preserve">
          <source>The final three arguments passed to the auxiliary function callback are similar to the three arguments passed to the implementation of a scalar SQL function. All arguments except the first passed to the auxiliary function are available to the implementation in the apVal[] array. The implementation should return a result or error via the content handle pCtx.</source>
          <target state="translated">Последние три аргумента,переданные во вспомогательную функцию обратного вызова,аналогичны трем аргументам,переданным в реализацию скалярной SQL-функции.Все аргументы,кроме первого,переданного вспомогательной функции,доступны для реализации в массиве apVal[].Реализация должна возвращать результат или ошибку через хэндл содержимого pCtx.</target>
        </trans-unit>
        <trans-unit id="72acf6716754df5bf7660108439b7caacc7e6afa" translate="yes" xml:space="preserve">
          <source>The first 100 bytes of the database file comprise the database file header. The database file header is divided into fields as shown by the table below. All multibyte fields in the database file header are stored with the most significant byte first (big-endian).</source>
          <target state="translated">Первые 100 байт файла БД составляют заголовок файла БД.Заголовок файла БД разделен на поля,как показано в таблице ниже.Все многобайтовые поля в заголовке файла БД хранятся с самым старшим байтом (big-endian).</target>
        </trans-unit>
        <trans-unit id="7ad8baeb9b6a7d25df8e53c7bba57a3b07d6a12e" translate="yes" xml:space="preserve">
          <source>The first 136 bytes of the shm file are a header. The shm header has three main divisions as follows:</source>
          <target state="translated">Первые 136 байт файла shm-это заголовок.Заголовок шма имеет три основных разделения следующим образом:</target>
        </trans-unit>
        <trans-unit id="32a4d848523b5982a35dd9ccae2a5e300c48ac95" translate="yes" xml:space="preserve">
          <source>The first 8 bytes of the</source>
          <target state="translated">Первые 8 байт</target>
        </trans-unit>
        <trans-unit id="31e639e14579d85dee4c60a5aeaa903eaa1984f2" translate="yes" xml:space="preserve">
          <source>The first argument must be the sqlite3_index_info object that is the first parameter to the xBestIndex() method. The second argument must be an index into the aConstraint[] array belonging to the sqlite3_index_info structure passed to xBestIndex. This function returns a pointer to a buffer containing the name of the collation sequence for the corresponding constraint.</source>
          <target state="translated">Первым аргументом должен быть объект sqlite3_index_info,который является первым параметром метода xBestIndex().Вторым аргументом должен быть индекс в массиве aConstraint[],принадлежащем структуре sqlite3_index_info,переданный xBestIndex.Эта функция возвращает указатель на буфер,содержащий имя последовательности сравнения для соответствующего ограничения.</target>
        </trans-unit>
        <trans-unit id="756a3aef230a7b2fc01840e9c05f1d8a68c861b7" translate="yes" xml:space="preserve">
          <source>The first argument passed should be the database handle to register the extension with. The second and third arguments should both be passed 0.</source>
          <target state="translated">Первым аргументом должен быть хэндл БД для регистрации расширения.Второй и третий аргументы должны быть переданы 0.</target>
        </trans-unit>
        <trans-unit id="7fa580625e479f237836af3af275aa2f6a47351d" translate="yes" xml:space="preserve">
          <source>The first argument passed to an auxiliary function callback is a pointer to a structure containing methods that may be invoked in order to obtain information regarding the current query or row. The second argument is an opaque handle that should be passed as the first argument to any such method invocation. For example, the following auxiliary function definition returns the total number of tokens in all columns of the current row:</source>
          <target state="translated">Первый аргумент,передаваемый на обратный вызов вспомогательной функции-это указатель на структуру,содержащую методы,которые могут быть вызваны для получения информации о текущем запросе или строке.Второй аргумент-непрозрачный хэндл,который должен передаваться в качестве первого аргумента при вызове любого такого метода.Например,следующее определение вспомогательной функции возвращает общее количество лексем во всех столбцах текущей строки:</target>
        </trans-unit>
        <trans-unit id="d4428415829da9afdeca7abddd54df2e62906cce" translate="yes" xml:space="preserve">
          <source>The first argument passed to this function is a copy of the (void*) pointer provided by the application when the fts5_tokenizer object was registered with FTS5 (the third argument to xCreateTokenizer()). The second and third arguments are an array of nul-terminated strings containing the tokenizer arguments, if any, specified following the tokenizer name as part of the CREATE VIRTUAL TABLE statement used to create the FTS5 table.</source>
          <target state="translated">Первый аргумент,передаваемый в эту функцию,является копией указателя (void*),предоставленного приложением при регистрации объекта fts5_tokenizer в FTS5 (третий аргумент в xCreateTokenizer()).Второй и третий аргументы представляют собой массив нуль-терминированных строк,содержащих аргументы токенайзера,если таковые имеются,заданные после имени токенайзера в составе оператора CREATE VIRTUAL TABLE,используемого для создания таблицы FTS5.</target>
        </trans-unit>
        <trans-unit id="3ddc48958f41facca8a1ecdc60ac948a59cb2349" translate="yes" xml:space="preserve">
          <source>The first argument to &lt;a href=&quot;c3ref/declare_vtab&quot;&gt;sqlite3_declare_vtab()&lt;/a&gt; must be the same &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; pointer as the first parameter to this method. The second argument to &lt;a href=&quot;c3ref/declare_vtab&quot;&gt;sqlite3_declare_vtab()&lt;/a&gt; must a zero-terminated UTF-8 string that contains a well-formed &lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt; statement that defines the columns in the virtual table and their data types. The name of the table in this CREATE TABLE statement is ignored, as are all constraints. Only the column names and datatypes matter. The CREATE TABLE statement string need not to be held in persistent memory. The string can be deallocated and/or reused as soon as the &lt;a href=&quot;c3ref/declare_vtab&quot;&gt;sqlite3_declare_vtab()&lt;/a&gt; routine returns.</source>
          <target state="translated">Первый аргумент &lt;a href=&quot;c3ref/declare_vtab&quot;&gt;sqlite3_declare_vtab ()&lt;/a&gt; должен быть тем же указателем &lt;a href=&quot;c3ref/sqlite3&quot;&gt;соединения с базой данных,&lt;/a&gt; что и первый параметр этого метода. Второй аргумент &lt;a href=&quot;c3ref/declare_vtab&quot;&gt;sqlite3_declare_vtab ()&lt;/a&gt; должен содержать строку UTF-8 с нулевым символом в конце, которая содержит правильно сформированный оператор &lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt; , определяющий столбцы в виртуальной таблице и их типы данных. Имя таблицы в этом операторе CREATE TABLE игнорируется, как и все ограничения. Имеют значение только имена столбцов и типы данных. Строку оператора CREATE TABLE не обязательно хранить в постоянной памяти. Строку можно освободить и / или использовать повторно, как только процедура &lt;a href=&quot;c3ref/declare_vtab&quot;&gt;sqlite3_declare_vtab ()&lt;/a&gt; вернется.</target>
        </trans-unit>
        <trans-unit id="1aed5522193a69fc6ff8aa89cff3e41266a3f600" translate="yes" xml:space="preserve">
          <source>The first argument to all three special SQL scalar functions must be the &lt;a href=&quot;fts3#hiddencol&quot;&gt;FTS hidden column&lt;/a&gt; of the FTS table that the function is applied to. The &lt;a href=&quot;fts3#hiddencol&quot;&gt;FTS hidden column&lt;/a&gt; is an automatically-generated column found on all FTS tables that has the same name as the FTS table itself. For example, given an FTS table named &quot;mail&quot;:</source>
          <target state="translated">Первым аргументом всех трех специальных скалярных функций SQL должен быть &lt;a href=&quot;fts3#hiddencol&quot;&gt;скрытый столбец&lt;/a&gt; FTS таблицы FTS, к которой применяется функция. &lt;a href=&quot;fts3#hiddencol&quot;&gt;FTS скрытый столбец&lt;/a&gt; является автоматически генерируемый столбец найдены на всех FTS таблиц, имеет такое же имя , как и сама таблица FTS. Например, для таблицы FTS с именем &amp;laquo;mail&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="952294bca557c59738bac0e545034c52a263067f" translate="yes" xml:space="preserve">
          <source>The first argument to sqlite3_config() is an integer &lt;a href=&quot;#SQLITE_CONFIG_COVERING_INDEX_SCAN&quot;&gt;configuration option&lt;/a&gt; that determines what property of SQLite is to be configured. Subsequent arguments vary depending on the &lt;a href=&quot;#SQLITE_CONFIG_COVERING_INDEX_SCAN&quot;&gt;configuration option&lt;/a&gt; in the first argument.</source>
          <target state="translated">Первый аргумент sqlite3_config () - это целочисленный &lt;a href=&quot;#SQLITE_CONFIG_COVERING_INDEX_SCAN&quot;&gt;параметр конфигурации,&lt;/a&gt; который определяет, какое свойство SQLite нужно настроить. Последующие аргументы меняются в зависимости от параметра &lt;a href=&quot;#SQLITE_CONFIG_COVERING_INDEX_SCAN&quot;&gt;конфигурации&lt;/a&gt; в первом аргументе.</target>
        </trans-unit>
        <trans-unit id="f875f5d7c01e9a29524328575e142babf2bae3ae" translate="yes" xml:space="preserve">
          <source>The first argument to sqlite3_config() is an integer &lt;a href=&quot;c_config_covering_index_scan&quot;&gt;configuration option&lt;/a&gt; that determines what property of SQLite is to be configured. Subsequent arguments vary depending on the &lt;a href=&quot;c_config_covering_index_scan&quot;&gt;configuration option&lt;/a&gt; in the first argument.</source>
          <target state="translated">Первый аргумент sqlite3_config () - это целочисленный &lt;a href=&quot;c_config_covering_index_scan&quot;&gt;параметр конфигурации,&lt;/a&gt; который определяет, какое свойство SQLite нужно настроить. Последующие аргументы меняются в зависимости от параметра &lt;a href=&quot;c_config_covering_index_scan&quot;&gt;конфигурации&lt;/a&gt; в первом аргументе.</target>
        </trans-unit>
        <trans-unit id="3f0ed77e9965fa2c39bb9cbb993108ef55b7d05b" translate="yes" xml:space="preserve">
          <source>The first argument to the busy handler is a copy of the void* pointer which is the third argument to sqlite3_busy_handler(). The second argument to the busy handler callback is the number of times that the busy handler has been invoked previously for the same locking event. If the busy callback returns 0, then no additional attempts are made to access the database and &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_BUSY&lt;/a&gt; is returned to the application. If the callback returns non-zero, then another attempt is made to access the database and the cycle repeats.</source>
          <target state="translated">Первый аргумент обработчика занятости - это копия указателя void *, который является третьим аргументом sqlite3_busy_handler (). Второй аргумент обратного вызова обработчика занятости - это количество раз, когда обработчик занятости был вызван ранее для того же события блокировки. Если обратный вызов занятости возвращает 0, то дополнительных попыток доступа к базе данных не &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;делается,&lt;/a&gt; и приложению возвращается SQLITE_BUSY . Если обратный вызов возвращает ненулевое значение, делается еще одна попытка доступа к базе данных, и цикл повторяется.</target>
        </trans-unit>
        <trans-unit id="73aa47dd980f8a887b15a2decc4e912f8fd4e328" translate="yes" xml:space="preserve">
          <source>The first argument to the busy handler is a copy of the void* pointer which is the third argument to sqlite3_busy_handler(). The second argument to the busy handler callback is the number of times that the busy handler has been invoked previously for the same locking event. If the busy callback returns 0, then no additional attempts are made to access the database and &lt;a href=&quot;../rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt; is returned to the application. If the callback returns non-zero, then another attempt is made to access the database and the cycle repeats.</source>
          <target state="translated">Первый аргумент обработчика занятости - это копия указателя void *, который является третьим аргументом sqlite3_busy_handler (). Второй аргумент обратного вызова обработчика занятости - это количество раз, когда обработчик занятости был вызван ранее для того же события блокировки. Если обратный вызов занятости возвращает 0, то дополнительных попыток доступа к базе данных не &lt;a href=&quot;../rescode#busy&quot;&gt;делается,&lt;/a&gt; и приложению возвращается SQLITE_BUSY . Если обратный вызов возвращает ненулевое значение, делается еще одна попытка доступа к базе данных, и цикл повторяется.</target>
        </trans-unit>
        <trans-unit id="395ff21e8cf7b4d90e5bc3764e07164a7c24e72d" translate="yes" xml:space="preserve">
          <source>The first argument to the callback is just a copy of the fourth argument to &lt;b&gt;sqlite_exec&lt;/b&gt; This parameter can be used to pass arbitrary information through to the callback function from client code. The second argument is the number of columns in the query result. The third argument is an array of pointers to strings where each string is a single column of the result for that record. Note that the callback function reports a NULL value in the database as a NULL pointer, which is very different from an empty string. If the i-th parameter is an empty string, we will get:</source>
          <target state="translated">Первый аргумент обратного вызова - это всего лишь копия четвертого аргумента &lt;b&gt;sqlite_exec.&lt;/b&gt; Этот параметр может использоваться для передачи произвольной информации в функцию обратного вызова из клиентского кода. Второй аргумент - это количество столбцов в результате запроса. Третий аргумент - это массив указателей на строки, где каждая строка представляет собой отдельный столбец результата для этой записи. Обратите внимание, что функция обратного вызова сообщает значение NULL в базе данных как указатель NULL, который сильно отличается от пустой строки. Если i-й параметр - пустая строка, мы получим:</target>
        </trans-unit>
        <trans-unit id="19ed31ae74a9a14120db33894759ec36b8a3df0f" translate="yes" xml:space="preserve">
          <source>The first argument to the snippet function must always be the &lt;a href=&quot;fts3#hiddencol&quot;&gt;FTS hidden column&lt;/a&gt; of the FTS table being queried and from which the snippet is to be taken. The &lt;a href=&quot;fts3#hiddencol&quot;&gt;FTS hidden column&lt;/a&gt; is an automatically generated column with the same name as the FTS table itself.</source>
          <target state="translated">Первым аргументом функции фрагмента всегда должен быть &lt;a href=&quot;fts3#hiddencol&quot;&gt;скрытый столбец&lt;/a&gt; FTS запрашиваемой таблицы FTS, из которого должен быть взят фрагмент. &lt;a href=&quot;fts3#hiddencol&quot;&gt;FTS скрыт столбец&lt;/a&gt; является автоматически генерируемый столбец с тем же именем, что и сама таблица FTS.</target>
        </trans-unit>
        <trans-unit id="a3c117d3156af5d9687ce63c9ca2baca71f1029c" translate="yes" xml:space="preserve">
          <source>The first argument to the sqlite3_bind_*() routines is always a pointer to the &lt;a href=&quot;#sqlite3_stmt&quot;&gt;sqlite3_stmt&lt;/a&gt; object returned from &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; or its variants.</source>
          <target state="translated">Первый аргумент подпрограмм sqlite3_bind _ * () всегда является указателем на объект &lt;a href=&quot;#sqlite3_stmt&quot;&gt;sqlite3_stmt,&lt;/a&gt; возвращаемый &lt;a href=&quot;#sqlite3_prepare&quot;&gt;функцией sqlite3_prepare_v2 ()&lt;/a&gt; или ее вариантами.</target>
        </trans-unit>
        <trans-unit id="e62bb2c9601439134c1919cc9d703235a3e8dcf1" translate="yes" xml:space="preserve">
          <source>The first argument to the sqlite3_bind_*() routines is always a pointer to the &lt;a href=&quot;stmt&quot;&gt;sqlite3_stmt&lt;/a&gt; object returned from &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; or its variants.</source>
          <target state="translated">Первый аргумент подпрограмм sqlite3_bind _ * () всегда является указателем на объект &lt;a href=&quot;stmt&quot;&gt;sqlite3_stmt,&lt;/a&gt; возвращаемый &lt;a href=&quot;prepare&quot;&gt;функцией sqlite3_prepare_v2 ()&lt;/a&gt; или ее вариантами.</target>
        </trans-unit>
        <trans-unit id="4376fc02622bfe056753a887d840cb5de850cf76" translate="yes" xml:space="preserve">
          <source>The first argument to the sqlite3session_config() function must be one of the SQLITE_SESSION_CONFIG_XXX constants defined below. The interpretation of the (void*) value passed as the second parameter and the effect of calling this function depends on the value of the first parameter.</source>
          <target state="translated">Первый аргумент функции sqlite3session_config()должен быть одной из констант SQLITE_SESSION_CONFIG_XXX,определенных ниже.Интерпретация значения (void*),переданного в качестве второго параметра,и эффект вызова этой функции зависят от значения первого параметра.</target>
        </trans-unit>
        <trans-unit id="46628205e32bedcd53350a6840ee825a63d42391" translate="yes" xml:space="preserve">
          <source>The first argument to these interfaces is a &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statement&lt;/a&gt;. These functions return information about the Nth result column returned by the statement, where N is the second function argument. The left-most column is column 0 for these routines.</source>
          <target state="translated">Первым аргументом для этих интерфейсов является &lt;a href=&quot;#sqlite3_stmt&quot;&gt;подготовленный оператор&lt;/a&gt; . Эти функции возвращают информацию о N-м столбце результата, возвращенном оператором, где N - второй аргумент функции. Самый левый столбец - это столбец 0 для этих подпрограмм.</target>
        </trans-unit>
        <trans-unit id="0f76a71e763d5bd4fbae26e4a6f14b3c938ceb32" translate="yes" xml:space="preserve">
          <source>The first argument to these interfaces is a &lt;a href=&quot;stmt&quot;&gt;prepared statement&lt;/a&gt;. These functions return information about the Nth result column returned by the statement, where N is the second function argument. The left-most column is column 0 for these routines.</source>
          <target state="translated">Первым аргументом для этих интерфейсов является &lt;a href=&quot;stmt&quot;&gt;подготовленный оператор&lt;/a&gt; . Эти функции возвращают информацию о N-м столбце результата, возвращенном оператором, где N - второй аргумент функции. Самый левый столбец - это столбец 0 для этих подпрограмм.</target>
        </trans-unit>
        <trans-unit id="a5ff723764d00dd9ac3f381e3bed0a1f08296ed5" translate="yes" xml:space="preserve">
          <source>The first argument, &quot;db&quot;, is a &lt;a href=&quot;#sqlite3&quot;&gt;database connection&lt;/a&gt; obtained from a prior successful call to &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; or &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open16()&lt;/a&gt;. The database connection must not have been closed.</source>
          <target state="translated">Первый аргумент, &amp;laquo;db&amp;raquo;, - это &lt;a href=&quot;#sqlite3&quot;&gt;соединение&lt;/a&gt; с базой данных, полученное в результате предыдущего успешного вызова &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open_v2 ()&lt;/a&gt; или &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open16 ()&lt;/a&gt; . Соединение с базой данных не должно быть закрыто.</target>
        </trans-unit>
        <trans-unit id="691e78895187de6910913a151c966bb350230789" translate="yes" xml:space="preserve">
          <source>The first argument, &quot;db&quot;, is a &lt;a href=&quot;sqlite3&quot;&gt;database connection&lt;/a&gt; obtained from a prior successful call to &lt;a href=&quot;open&quot;&gt;sqlite3_open()&lt;/a&gt;, &lt;a href=&quot;open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; or &lt;a href=&quot;open&quot;&gt;sqlite3_open16()&lt;/a&gt;. The database connection must not have been closed.</source>
          <target state="translated">Первый аргумент, &amp;laquo;db&amp;raquo;, - это &lt;a href=&quot;sqlite3&quot;&gt;соединение&lt;/a&gt; с базой данных, полученное в результате предыдущего успешного вызова &lt;a href=&quot;open&quot;&gt;sqlite3_open ()&lt;/a&gt; , &lt;a href=&quot;open&quot;&gt;sqlite3_open_v2 ()&lt;/a&gt; или &lt;a href=&quot;open&quot;&gt;sqlite3_open16 ()&lt;/a&gt; . Соединение с базой данных не должно быть закрыто.</target>
        </trans-unit>
        <trans-unit id="5da926bf27ba88ce6fa226bb8489971c4b0badd1" translate="yes" xml:space="preserve">
          <source>The first attempt at closing security gaps in pointer passing was to prevent pointer values from being forged. This was accomplished by having the sender attach a subtype to each pointer using &lt;a href=&quot;c3ref/result_subtype&quot;&gt;sqlite3_result_subtype()&lt;/a&gt; and having the receiver verify that subtype using &lt;a href=&quot;c3ref/value_subtype&quot;&gt;sqlite3_value_subtype()&lt;/a&gt; and reject pointers that had an incorrect subtype. Since there is no way to attach a subtype to a result using pure SQL, this prevents pointers from being forged using SQL. The only way to send a pointer is to use C code. If an attacker can set a subtype, then he is also able to forge a pointer without the help of SQLite.</source>
          <target state="translated">Первой попыткой закрыть бреши в безопасности при передаче указателя было предотвращение подделки значений указателя. Для этого отправитель прикреплял подтип к каждому указателю с помощью &lt;a href=&quot;c3ref/result_subtype&quot;&gt;sqlite3_result_subtype (),&lt;/a&gt; а получатель проверял этот подтип с помощью &lt;a href=&quot;c3ref/value_subtype&quot;&gt;sqlite3_value_subtype ()&lt;/a&gt; и отклонял указатели с неправильным подтипом. Поскольку нет способа присоединить подтип к результату с использованием чистого SQL, это предотвращает подделку указателей с помощью SQL. Единственный способ отправить указатель - использовать код C. Если злоумышленник может установить подтип, он также может подделать указатель без помощи SQLite.</target>
        </trans-unit>
        <trans-unit id="b3f912cc569c0361b5c2cd2202f03f7409e6b0b1" translate="yes" xml:space="preserve">
          <source>The first beta release for SQLite 3.0.</source>
          <target state="translated">Первый бета-релиз для SQLite 3.0.</target>
        </trans-unit>
        <trans-unit id="85577f9e39e1e56bdcef30a17afd1e7fd9d77720" translate="yes" xml:space="preserve">
          <source>The first byte of the header is a flag byte. The least significant bit of the flag byte determines whether the coordinate pairs that follow the header are stored big-endian or little-endian. A value of 0 for the least significant bit means big-endian and a value of 1 means little endian. Other bits of the first byte in the header are reserved for future expansion.</source>
          <target state="translated">Первый байт заголовка-флаг-байт.Наименьший байт флага определяет,хранятся ли пары координат,следующие за заголовком,в big-endian или little-endian.Значение 0 для наименьшего значащего бита означает big-endian,а значение 1 означает little-endian.Остальные биты первого байта в заголовке зарезервированы для будущего расширения.</target>
        </trans-unit>
        <trans-unit id="f63d26f2f4bc609cd955a5edef912da4a0a9006c" translate="yes" xml:space="preserve">
          <source>The first call to &lt;a href=&quot;session/sqlite3changeset_next&quot;&gt;sqlite3changeset_next()&lt;/a&gt; on the iterator moves it to point to the first change in the changeset (or to EOF, if the changeset is completely empty). sqlite3changeset_next() returns SQLITE_ROW if it moves the iterator to point to a valid entry, SQLITE_DONE if it moves the iterator to EOF, or an SQLite error code if an error occurs.</source>
          <target state="translated">Первый вызов &lt;a href=&quot;session/sqlite3changeset_next&quot;&gt;sqlite3changeset_next ()&lt;/a&gt; на итераторе перемещает его так, чтобы он указывал на первое изменение в наборе изменений (или на EOF, если набор изменений полностью пуст). sqlite3changeset_next () возвращает SQLITE_ROW, если он перемещает итератор, чтобы указать на действительную запись, SQLITE_DONE, если он перемещает итератор в EOF, или код ошибки SQLite, если возникает ошибка.</target>
        </trans-unit>
        <trans-unit id="261c910c7fa661af930e1c363bad2fff3671bdea" translate="yes" xml:space="preserve">
          <source>The first call to sqlite3_backup_step() obtains an exclusive lock on the destination file. The exclusive lock is not released until either sqlite3_backup_finish() is called or the backup operation is complete and sqlite3_backup_step() returns &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_DONE&lt;/a&gt;. Every call to sqlite3_backup_step() obtains a &lt;a href=&quot;lockingv3#shared_lock&quot;&gt;shared lock&lt;/a&gt; on the source database that lasts for the duration of the sqlite3_backup_step() call. Because the source database is not locked between calls to sqlite3_backup_step(), the source database may be modified mid-way through the backup process. If the source database is modified by an external process or via a database connection other than the one being used by the backup operation, then the backup will be automatically restarted by the next call to sqlite3_backup_step(). If the source database is modified by the using the same database connection as is used by the backup operation, then the backup database is automatically updated at the same time.</source>
          <target state="translated">Первый вызов sqlite3_backup_step () обеспечивает монопольную блокировку целевого файла. Эксклюзивная блокировка не снимается до тех пор, пока не будет вызвана sqlite3_backup_finish () или пока не будет завершена операция резервного копирования и sqlite3_backup_step () не вернет &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_DONE&lt;/a&gt; . Каждый вызов sqlite3_backup_step () получает &lt;a href=&quot;lockingv3#shared_lock&quot;&gt;общую блокировку&lt;/a&gt;в исходной базе данных, которая действует на время вызова sqlite3_backup_step (). Поскольку исходная база данных не заблокирована между вызовами sqlite3_backup_step (), исходная база данных может быть изменена в середине процесса резервного копирования. Если исходная база данных изменена внешним процессом или через соединение с базой данных, отличное от того, которое используется операцией резервного копирования, то резервное копирование будет автоматически перезапущено при следующем вызове sqlite3_backup_step (). Если исходная база данных изменяется с использованием того же соединения с базой данных, которое используется при операции резервного копирования, то база данных резервного копирования автоматически обновляется одновременно.</target>
        </trans-unit>
        <trans-unit id="57eb736cb2a536a07c53b0e0f817765662d0da0a" translate="yes" xml:space="preserve">
          <source>The first call to sqlite3_backup_step() obtains an exclusive lock on the destination file. The exclusive lock is not released until either sqlite3_backup_finish() is called or the backup operation is complete and sqlite3_backup_step() returns &lt;a href=&quot;../rescode#done&quot;&gt;SQLITE_DONE&lt;/a&gt;. Every call to sqlite3_backup_step() obtains a &lt;a href=&quot;../lockingv3#shared_lock&quot;&gt;shared lock&lt;/a&gt; on the source database that lasts for the duration of the sqlite3_backup_step() call. Because the source database is not locked between calls to sqlite3_backup_step(), the source database may be modified mid-way through the backup process. If the source database is modified by an external process or via a database connection other than the one being used by the backup operation, then the backup will be automatically restarted by the next call to sqlite3_backup_step(). If the source database is modified by the using the same database connection as is used by the backup operation, then the backup database is automatically updated at the same time.</source>
          <target state="translated">Первый вызов sqlite3_backup_step () обеспечивает монопольную блокировку целевого файла. Эксклюзивная блокировка не снимается до тех пор, пока не будет вызвана sqlite3_backup_finish () или пока не будет завершена операция резервного копирования и sqlite3_backup_step () не вернет &lt;a href=&quot;../rescode#done&quot;&gt;SQLITE_DONE&lt;/a&gt; . Каждый вызов sqlite3_backup_step () получает &lt;a href=&quot;../lockingv3#shared_lock&quot;&gt;общую блокировку&lt;/a&gt;в исходной базе данных, которая действует на время вызова sqlite3_backup_step (). Поскольку исходная база данных не заблокирована между вызовами sqlite3_backup_step (), исходная база данных может быть изменена в середине процесса резервного копирования. Если исходная база данных изменена внешним процессом или через соединение с базой данных, отличное от того, которое используется операцией резервного копирования, то резервное копирование будет автоматически перезапущено при следующем вызове sqlite3_backup_step (). Если исходная база данных изменяется с использованием того же соединения с базой данных, которое используется при операции резервного копирования, то база данных резервного копирования автоматически обновляется одновременно.</target>
        </trans-unit>
        <trans-unit id="878621de1d1518fe649327da44b122a6dcc1e4c1" translate="yes" xml:space="preserve">
          <source>The first code for TH3 was laid down on 2008-09-25. An intense effort over the next 10 months resulted in TH3 achieving 100% MC/DC on 2009-07-25. The TH3 code continues to be improved and expanded.</source>
          <target state="translated">Первый код для TH3 был заложен в 2008-09-25 годах.Интенсивные усилия в течение следующих 10 месяцев привели к тому,что в 2009-07-25 годах TH3 достигла 100% MC/DC.Код TH3 продолжает совершенствоваться и расширяться.</target>
        </trans-unit>
        <trans-unit id="708a1cddc7d07a561f3445a868346de6a13841df" translate="yes" xml:space="preserve">
          <source>The first column is the schema name for the database that contains the tables. Examples: &quot;main&quot;, &quot;zone512&quot;.</source>
          <target state="translated">Первый столбец-это имя схемы БД,содержащей таблицы.Примеры:&quot;главная&quot;,&quot;зона512&quot;.</target>
        </trans-unit>
        <trans-unit id="9814feb56c887ece7381e15fd8887b6ec1a1d8c0" translate="yes" xml:space="preserve">
          <source>The first column of an SQLite R*Tree is similar to an integer primary key column of a normal SQLite table. It may only store a 64-bit signed integer value. Inserting a NULL value into this column causes SQLite to automatically generate a new unique primary key value. If an attempt is made to insert any other non-integer value into this column, the r-tree module silently converts it to an integer before writing it into the database.</source>
          <target state="translated">Первый столбец R*Tree SQLite аналогичен целому столбцу первичного ключа обычной таблицы SQLite.В нем может храниться только 64-битное целое значение,подписанное.Вставка в этот столбец NULL-значения приводит к тому,что SQLite автоматически генерирует новое уникальное значение первичного ключа.При попытке вставить в этот столбец любое другое неинтегрированное значение,модуль r-дерева бесшумно преобразует его в целое число перед записью в БД.</target>
        </trans-unit>
        <trans-unit id="840bd12d54aba66c9e7cdaff39f91dd2e3886bf1" translate="yes" xml:space="preserve">
          <source>The first condition causes all of the trunk check-ins to be displayed and the second and third cause check-ins that merge into or fork from the trunk to also be included. The three conditions are implemented by the three OR-connected EXISTS statements in the WHERE clause of the query. The slowdown that occurred with the NGQP was caused by the second and third conditions. The problem is the same in each, so we will examine just the second one. The subquery of the second condition can be rewritten (with minor and immaterial simplifications) as follows:</source>
          <target state="translated">Первое условие приводит к тому,что отображаются все проверки в стволе,а второе и третье-к тому,что также включаются проверки,которые сливаются в ствол или вилки из него.Эти три условия выполняются тремя операторами &quot;ИЛИ-связанные ВЫХОДЫ&quot; в пункте &quot;ГДЕ&quot; запроса.Замедление,произошедшее с NGQP,вызвано вторым и третьим условиями.Проблема в каждом из них одна и та же,поэтому рассмотрим только второе.Подзапрос второго условия можно переписать (с незначительными и несущественными упрощениями)следующим образом:</target>
        </trans-unit>
        <trans-unit id="4abd9649e552817a07b47b388971861bc70b5489" translate="yes" xml:space="preserve">
          <source>The first eight columns are the address, opcode, and operands for a single &lt;a href=&quot;opcode&quot;&gt;bytecode&lt;/a&gt; in the virtual machine that implements the statement. These columns are the same columns output when using EXPLAIN. The bytecode virtual tables shows all operations in the prepared statement, both the main body of the prepared statement and in subprograms used to implement triggers or foreign key actions. The &quot;subprog&quot; field is NULL for the main body of the prepared statement, or is the trigger name or the string &quot;(FK)&quot; for triggers and foreign key actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d90855e6a48f657d5fb1f13585eab05ee2b6665" translate="yes" xml:space="preserve">
          <source>The first example above is the preferred definition of the table, of course. All of the examples create a WITHOUT ROWID table with two PRIMARY KEY columns, &quot;a&quot; and &quot;c&quot;, in that order, followed by two data columns &quot;b&quot; and &quot;d&quot;, also in that order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78f5e7f65436952c61eefc9d02af59c750bcb9f" translate="yes" xml:space="preserve">
          <source>The first five fields of the sqlite3_rtree_query_info structure are identical to the sqlite3_rtree_geometry structure, and have exactly the same meaning. The sqlite3_rtree_query_info structure also contains nCoord and aCoord fields which have the same meaning as the parameter of the same name in the xGeom callback.</source>
          <target state="translated">Первые пять полей структуры sqlite3_rtree_query_info идентичны структуре sqlite3_rtree_geometry и имеют точно такое же значение.Структура sqlite3_rtree_query_info также содержит поля nCoord и aCoord,которые имеют то же значение,что и одноименный параметр в обратном вызове xGeom.</target>
        </trans-unit>
        <trans-unit id="8e073e98c04e5afd81b1a912e72c323c17ce2eb5" translate="yes" xml:space="preserve">
          <source>The first form (with the &quot;VALUES&quot; keyword) creates one or more new rows in an existing table. If the column-name list after table-name is omitted then the number of values inserted into each row must be the same as the number of columns in the table. In this case the result of evaluating the left-most expression from each term of the VALUES list is inserted into the left-most column of each new row, and so forth for each subsequent expression. If a column-name list is specified, then the number of values in each term of the VALUE list must match the number of specified columns. Each of the named columns of the new row is populated with the results of evaluating the corresponding VALUES expression. Table columns that do not appear in the column list are populated with the &lt;a href=&quot;lang_createtable#dfltval&quot;&gt;default column value&lt;/a&gt; (specified as part of the &lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt; statement), or with NULL if no &lt;a href=&quot;lang_createtable#dfltval&quot;&gt;default value&lt;/a&gt; is specified.</source>
          <target state="translated">Первая форма (с ключевым словом &amp;laquo;VALUES&amp;raquo;) создает одну или несколько новых строк в существующей таблице. Если список имен столбцов после имени таблицы опущен, то количество значений, вставляемых в каждую строку, должно быть таким же, как количество столбцов в таблице. В этом случае результат вычисления самого левого выражения из каждого члена списка VALUES вставляется в крайний левый столбец каждой новой строки и так далее для каждого последующего выражения. Если указан список имен столбцов, то количество значений в каждом термине списка VALUE должно соответствовать количеству указанных столбцов. Каждый из названных столбцов новой строки заполняется результатами вычисления соответствующего выражения VALUES. Столбцы таблицы, которые не отображаются в списке столбцов, заполняются &lt;a href=&quot;lang_createtable#dfltval&quot;&gt;значением столбца&lt;/a&gt; по умолчанию.(указывается как часть оператора &lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt; ) или с NULL, если &lt;a href=&quot;lang_createtable#dfltval&quot;&gt;значение по умолчанию&lt;/a&gt; не указано.</target>
        </trans-unit>
        <trans-unit id="2570c22a55e27cbe9ad6c1dce2c1cff1bff0c5c4" translate="yes" xml:space="preserve">
          <source>The first form loads the edit distance coefficients from a table called 'TABLENAME'. Any prior coefficients are discarded. So when experimenting with weights and the weight table changes, simply rerun the single-argument form of editdist3() to reload revised coefficients. Note that the edit distance weights used by the editdist3() SQL function are independent from the weights used by the spellfix1 virtual table.</source>
          <target state="translated">Первая форма загружает коэффициенты расстояния редактирования из таблицы под названием 'TABLENAME'.Любые предыдущие коэффициенты отбрасываются.Поэтому,экспериментируя с весами и изменением таблицы весов,просто перезагрузите единственную форму editdist3(),чтобы перезагрузить пересмотренные коэффициенты.Обратите внимание,что веса расстояния редактирования,используемые SQL-функцией editdist3(),не зависят от весов,используемых виртуальной таблицей spellfix1.</target>
        </trans-unit>
        <trans-unit id="7597ee6d3f1982d757a998bf7dd70b5fa125869a" translate="yes" xml:space="preserve">
          <source>The first form of the lag() function returns the result of evaluating expression</source>
          <target state="translated">Первая форма функции lag()возвращает результат вычисления выражения</target>
        </trans-unit>
        <trans-unit id="99435f14d6ece88179aba89152e1459d1e98bf65" translate="yes" xml:space="preserve">
          <source>The first form of the lead() function returns the result of evaluating expression</source>
          <target state="translated">Первая форма функции lead()возвращает результат вычисления выражения</target>
        </trans-unit>
        <trans-unit id="0e38dddff1d9fcb9023e44603abe1408f559a08e" translate="yes" xml:space="preserve">
          <source>The first form of this pragma queries the current journaling mode for</source>
          <target state="translated">Первая форма этой прагмы запрашивает текущий режим протоколирования для</target>
        </trans-unit>
        <trans-unit id="b8118a5225d858802697d63c772d9f2007991455" translate="yes" xml:space="preserve">
          <source>The first four columns a, b, c, and d of the index would be usable since those four columns form a prefix of the index and are all bound by equality constraints.</source>
          <target state="translated">Первые четыре столбца a,b,c и d индекса можно было бы использовать,поскольку эти четыре столбца образуют префикс индекса и все они связаны ограничениями равенства.</target>
        </trans-unit>
        <trans-unit id="4ead6c16538264b763b7c6adde08cc0b22f7c9e0" translate="yes" xml:space="preserve">
          <source>The first group of queries in the log are extracting display options from the &quot;config&quot; and &quot;global_config&quot; tables of the Fossil database. Then there is a single complex query that extracts a list of all elements to be displayed on the timeline. This &quot;timeline&quot; query demonstrates that SQLite can easily process complex relational database queries involving multiple tables, subqueries, and complex WHERE clause constraints, and it can make effective use of indexes to solve the queries with minimal disk I/O.</source>
          <target state="translated">Первая группа запросов в журнале-извлечение опций отображения из таблиц &quot;config&quot; и &quot;global_config&quot; Ископаемой базы данных.Затем идет один сложный запрос,который извлекает список всех элементов для отображения на временной шкале.Этот запрос &quot;timeline&quot; демонстрирует,что SQLite может легко обрабатывать сложные реляционные запросы к БД,включающие в себя несколько таблиц,подзапросов и сложные ограничения по пунктам WHERE,и может эффективно использовать индексы для решения запросов с минимальным количеством дисковых операций ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="4e52fafda10d32765550d3edce2eeda11c3b4ffd" translate="yes" xml:space="preserve">
          <source>The first host parameter has an index of 1, not 0.</source>
          <target state="translated">Первый параметр хоста имеет индекс 1,а не 0.</target>
        </trans-unit>
        <trans-unit id="178a49643c52d6ff462985df8e6c238cfb8ec5cd" translate="yes" xml:space="preserve">
          <source>The first instruction of interest is the &lt;a href=&quot;opcode#AggReset&quot;&gt;AggReset&lt;/a&gt; at 2. The AggReset instruction initializes the set of buckets to be the empty set and specifies the number of memory slots available in each bucket as P2. In this example, each bucket will hold 3 memory slots. It is not obvious, but if you look closely at the rest of the program you can figure out what each of these slots is intended for.</source>
          <target state="translated">Первая интересующая нас инструкция - это &lt;a href=&quot;opcode#AggReset&quot;&gt;AggReset&lt;/a&gt; at 2. Инструкция AggReset инициализирует набор сегментов как пустой набор и указывает количество слотов памяти, доступных в каждом сегменте, как P2. В этом примере каждая корзина будет содержать 3 слота памяти. Это не очевидно, но если вы внимательно посмотрите на остальную часть программы, вы сможете понять, для чего предназначен каждый из этих слотов.</target>
        </trans-unit>
        <trans-unit id="11dcba86733ec3f9c57f212488f98cc390a1b479" translate="yes" xml:space="preserve">
          <source>The first integer in the P4 integer array is the length of the array and does not become part of the permutation.</source>
          <target state="translated">Первое целое число в P4-целом массиве является длиной массива и не становится частью перестановки.</target>
        </trans-unit>
        <trans-unit id="388856185e941f1980f4fd92691075a08784c68c" translate="yes" xml:space="preserve">
          <source>The first line of the script above causes the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt; to read and activate the run-time loadable extension for CSV. For an application, the equivalent C-language API is &lt;a href=&quot;c3ref/load_extension&quot;&gt;sqlite3_load_extension()&lt;/a&gt;. Observe that the filename extension (ex: &quot;.dll&quot; or &quot;.so&quot; or &quot;.dylib&quot;) is omitted from the extension filename. Omitting the filename extension is not required, but it helps in making the script cross-platform. SQLite will automatically append the appropriate extension.</source>
          <target state="translated">Первая строка приведенного выше сценария заставляет &lt;a href=&quot;cli&quot;&gt;оболочку командной строки&lt;/a&gt; читать и активировать загружаемое расширение времени выполнения для CSV. Для приложения эквивалентным API языка C является &lt;a href=&quot;c3ref/load_extension&quot;&gt;sqlite3_load_extension ()&lt;/a&gt; . Обратите внимание, что расширение имени файла (например, &amp;laquo;.dll&amp;raquo;, &amp;laquo;.so&amp;raquo; или &amp;laquo;.dylib&amp;raquo;) опущено в имени файла расширения. Пропускать расширение имени файла не обязательно, но это помогает сделать скрипт кроссплатформенным. SQLite автоматически добавит соответствующее расширение.</target>
        </trans-unit>
        <trans-unit id="75252c48c68a826da51013f5fcc062daddeb6d8f" translate="yes" xml:space="preserve">
          <source>The first of the above that is found to exist and have the write and execute bits set is used. The final &quot;.&quot; fallback is important for some applications that use SQLite inside of chroot jails that do not have the standard temporary file locations available.</source>
          <target state="translated">Используется первый из вышеперечисленных,который существует и имеет набор битов для записи и выполнения.Окончательный &quot;...&quot; откат важен для некоторых приложений,использующих SQLite внутри chroot jails,которые не имеют стандартного расположения временных файлов.</target>
        </trans-unit>
        <trans-unit id="1f9a60bfbed88db253a25c41a987f86e19f4d6aa" translate="yes" xml:space="preserve">
          <source>The first page of a cell payload overflow chain. The page number is the b-tree page that contains the cell whose content has overflowed.</source>
          <target state="translated">Первая страница цепи переполнения ячеек.Номер страницы-это страница b-дерева,содержащая ячейку,содержимое которой переполнилось.</target>
        </trans-unit>
        <trans-unit id="571e717de8bab6f472a3daa4d0e34a129cf9485d" translate="yes" xml:space="preserve">
          <source>The first parameter is a &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statement&lt;/a&gt;. If this statement is a &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statement and the Nth column of the returned result set of that &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; is a table column (not an expression or subquery) then the declared type of the table column is returned. If the Nth column of the result set is an expression or subquery, then a NULL pointer is returned. The returned string is always UTF-8 encoded.</source>
          <target state="translated">Первый параметр - это &lt;a href=&quot;#sqlite3_stmt&quot;&gt;подготовленный оператор&lt;/a&gt; . Если этот оператор является &lt;a href=&quot;lang_select&quot;&gt;оператором SELECT,&lt;/a&gt; а N-й столбец возвращенного набора результатов этого &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; является столбцом таблицы (не выражением или подзапросом), то возвращается объявленный тип столбца таблицы. Если N-й столбец набора результатов является выражением или подзапросом, возвращается NULL-указатель. Возвращаемая строка всегда имеет кодировку UTF-8.</target>
        </trans-unit>
        <trans-unit id="2d95d478fea3b8287d0a6628b14c6c99e2b30bf0" translate="yes" xml:space="preserve">
          <source>The first parameter is a &lt;a href=&quot;stmt&quot;&gt;prepared statement&lt;/a&gt;. If this statement is a &lt;a href=&quot;../lang_select&quot;&gt;SELECT&lt;/a&gt; statement and the Nth column of the returned result set of that &lt;a href=&quot;../lang_select&quot;&gt;SELECT&lt;/a&gt; is a table column (not an expression or subquery) then the declared type of the table column is returned. If the Nth column of the result set is an expression or subquery, then a NULL pointer is returned. The returned string is always UTF-8 encoded.</source>
          <target state="translated">Первый параметр - это &lt;a href=&quot;stmt&quot;&gt;подготовленный оператор&lt;/a&gt; . Если этот оператор является &lt;a href=&quot;../lang_select&quot;&gt;оператором SELECT,&lt;/a&gt; а N-й столбец возвращенного набора результатов этого &lt;a href=&quot;../lang_select&quot;&gt;SELECT&lt;/a&gt; является столбцом таблицы (не выражением или подзапросом), то возвращается объявленный тип столбца таблицы. Если N-й столбец набора результатов является выражением или подзапросом, возвращается NULL-указатель. Возвращаемая строка всегда имеет кодировку UTF-8.</target>
        </trans-unit>
        <trans-unit id="c8355444303911368f3db824744273405e752637" translate="yes" xml:space="preserve">
          <source>The first parameter is the &lt;a href=&quot;#sqlite3&quot;&gt;database connection&lt;/a&gt; to which the SQL function is to be added. If an application uses more than one database connection then application-defined SQL functions must be added to each database connection separately.</source>
          <target state="translated">Первый параметр - это &lt;a href=&quot;#sqlite3&quot;&gt;соединение&lt;/a&gt; с базой данных, к которому должна быть добавлена ​​функция SQL. Если приложение использует более одного соединения с базой данных, тогда определяемые приложением функции SQL должны быть добавлены к каждому соединению с базой данных отдельно.</target>
        </trans-unit>
        <trans-unit id="2034bce444668b7bc337245a2c547e0aff9b9fd1" translate="yes" xml:space="preserve">
          <source>The first parameter is the &lt;a href=&quot;sqlite3&quot;&gt;database connection&lt;/a&gt; to which the SQL function is to be added. If an application uses more than one database connection then application-defined SQL functions must be added to each database connection separately.</source>
          <target state="translated">Первый параметр - это &lt;a href=&quot;sqlite3&quot;&gt;соединение&lt;/a&gt; с базой данных, к которому должна быть добавлена ​​функция SQL. Если приложение использует более одного соединения с базой данных, тогда определяемые приложением функции SQL должны быть добавлены к каждому соединению с базой данных отдельно.</target>
        </trans-unit>
        <trans-unit id="02bbb4f6b68ff55742031c8b1808d80607aaa103" translate="yes" xml:space="preserve">
          <source>The first parameter must be a copy of the &lt;a href=&quot;#sqlite3_context&quot;&gt;SQL function context&lt;/a&gt; that is the first parameter to the xStep or xFinal callback routine that implements the aggregate function.</source>
          <target state="translated">Первый параметр должен быть копией &lt;a href=&quot;#sqlite3_context&quot;&gt;контекста функции SQL,&lt;/a&gt; который является первым параметром процедуры обратного вызова xStep или xFinal, которая реализует агрегатную функцию.</target>
        </trans-unit>
        <trans-unit id="303b1214ac90198e86e2d6fded39de6f12728048" translate="yes" xml:space="preserve">
          <source>The first parameter must be a copy of the &lt;a href=&quot;context&quot;&gt;SQL function context&lt;/a&gt; that is the first parameter to the xStep or xFinal callback routine that implements the aggregate function.</source>
          <target state="translated">Первый параметр должен быть копией &lt;a href=&quot;context&quot;&gt;контекста функции SQL,&lt;/a&gt; который является первым параметром процедуры обратного вызова xStep или xFinal, которая реализует агрегатную функцию.</target>
        </trans-unit>
        <trans-unit id="51bc3b9167a1367dcb303b210930c2e99a40f80a" translate="yes" xml:space="preserve">
          <source>The first parameter passed to the callback function when it is invoked is a copy of the third parameter passed to sqlite3_wal_hook() when registering the callback. The second is a copy of the database handle. The third parameter is the name of the database that was written to - either &quot;main&quot; or the name of an &lt;a href=&quot;../lang_attach&quot;&gt;ATTACH&lt;/a&gt;-ed database. The fourth parameter is the number of pages currently in the write-ahead log file, including those that were just committed.</source>
          <target state="translated">Первый параметр, переданный в функцию обратного вызова при ее вызове, является копией третьего параметра, переданного в sqlite3_wal_hook () при регистрации обратного вызова. Второй - это копия дескриптора базы данных. Третий параметр - это имя базы данных, в которую была произведена запись - либо &amp;laquo;main&amp;raquo;, либо имя базы данных с &lt;a href=&quot;../lang_attach&quot;&gt;функцией ATTACH&lt;/a&gt; . Четвертый параметр - это количество страниц в файле журнала упреждающей записи, включая те, которые были только что зафиксированы.</target>
        </trans-unit>
        <trans-unit id="8448fcb45b7f072723f93590a80d37aef6a727c3" translate="yes" xml:space="preserve">
          <source>The first parameter passed to the callback function when it is invoked is a copy of the third parameter passed to sqlite3_wal_hook() when registering the callback. The second is a copy of the database handle. The third parameter is the name of the database that was written to - either &quot;main&quot; or the name of an &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt;-ed database. The fourth parameter is the number of pages currently in the write-ahead log file, including those that were just committed.</source>
          <target state="translated">Первый параметр, переданный в функцию обратного вызова при ее вызове, является копией третьего параметра, переданного в sqlite3_wal_hook () при регистрации обратного вызова. Второй - это копия дескриптора базы данных. Третий параметр - это имя базы данных, в которую была произведена запись - либо &amp;laquo;main&amp;raquo;, либо имя базы данных с &lt;a href=&quot;lang_attach&quot;&gt;функцией ATTACH&lt;/a&gt; . Четвертый параметр - это количество страниц в файле журнала упреждающей записи, включая те, которые были только что зафиксированы.</target>
        </trans-unit>
        <trans-unit id="114b67e4b3a89669211882b27d3030f929c0b812" translate="yes" xml:space="preserve">
          <source>The first parameter to the authorizer callback is a copy of the third parameter to the sqlite3_set_authorizer() interface. The second parameter to the callback is an integer &lt;a href=&quot;#SQLITE_ALTER_TABLE&quot;&gt;action code&lt;/a&gt; that specifies the particular action to be authorized. The third through sixth parameters to the callback are either NULL pointers or zero-terminated strings that contain additional details about the action to be authorized. Applications must always be prepared to encounter a NULL pointer in any of the third through the sixth parameters of the authorization callback.</source>
          <target state="translated">Первый параметр обратного вызова авторизатора - это копия третьего параметра интерфейса sqlite3_set_authorizer (). Второй параметр обратного вызова - это целочисленный &lt;a href=&quot;#SQLITE_ALTER_TABLE&quot;&gt;код действия,&lt;/a&gt; который указывает конкретное действие, которое необходимо разрешить. Параметры с третьего по шестой для обратного вызова являются либо указателями NULL, либо строками с нулевым завершением, которые содержат дополнительные сведения о действии, которое необходимо разрешить. Приложения всегда должны быть готовы встретить нулевой указатель в любом из третьего-шестого параметров обратного вызова авторизации.</target>
        </trans-unit>
        <trans-unit id="031900d436ad256c6483a02e204c32e4df2ca84e" translate="yes" xml:space="preserve">
          <source>The first parameter to the authorizer callback is a copy of the third parameter to the sqlite3_set_authorizer() interface. The second parameter to the callback is an integer &lt;a href=&quot;c_alter_table&quot;&gt;action code&lt;/a&gt; that specifies the particular action to be authorized. The third through sixth parameters to the callback are either NULL pointers or zero-terminated strings that contain additional details about the action to be authorized. Applications must always be prepared to encounter a NULL pointer in any of the third through the sixth parameters of the authorization callback.</source>
          <target state="translated">Первый параметр обратного вызова авторизатора - это копия третьего параметра интерфейса sqlite3_set_authorizer (). Второй параметр обратного вызова - это целочисленный &lt;a href=&quot;c_alter_table&quot;&gt;код действия,&lt;/a&gt; который указывает конкретное действие, которое необходимо разрешить. Параметры с третьего по шестой для обратного вызова являются либо указателями NULL, либо строками с нулевым завершением, которые содержат дополнительные сведения о действии, которое необходимо разрешить. Приложения всегда должны быть готовы встретить нулевой указатель в любом из третьего-шестого параметров обратного вызова авторизации.</target>
        </trans-unit>
        <trans-unit id="1622094cd4d4c27ce242fb95c194e4ab11274192" translate="yes" xml:space="preserve">
          <source>The first parameter to these interfaces (hereafter referred to as F) must be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c4884990e25d1601d544fb2189fcbf8e2210be" translate="yes" xml:space="preserve">
          <source>The first section introduces the concept of an SQL foreign key by example and defines the terminology used for the remainder of the document. Section 2 describes the steps an application must take in order to enable foreign key constraints in SQLite (it is disabled by default). The next section, section 3, describes the indexes that the user must create in order to use foreign key constraints, and those that should be created in order for foreign key constraints to function efficiently. Section 4 describes the advanced foreign key related features supported by SQLite and section 5 describes the way the &lt;a href=&quot;lang_altertable&quot;&gt;ALTER&lt;/a&gt; and &lt;a href=&quot;lang_droptable&quot;&gt;DROP TABLE&lt;/a&gt; commands are enhanced to support foreign key constraints. Finally, section 6 enumerates the missing features and limits of the current implementation.</source>
          <target state="translated">Первый раздел представляет концепцию внешнего ключа SQL на примере и определяет терминологию, используемую в оставшейся части документа. В разделе 2 описаны шаги, которые должно предпринять приложение, чтобы включить ограничения внешнего ключа в SQLite (по умолчанию он отключен). В следующем разделе, разделе 3, описаны индексы, которые пользователь должен создать, чтобы использовать ограничения внешнего ключа, и индексы, которые должны быть созданы для эффективного функционирования ограничений внешнего ключа. В разделе 4 описаны расширенные функции, связанные с внешним ключом, поддерживаемые SQLite, а в разделе 5 описывается способ улучшения команд &lt;a href=&quot;lang_altertable&quot;&gt;ALTER&lt;/a&gt; и &lt;a href=&quot;lang_droptable&quot;&gt;DROP TABLE&lt;/a&gt; для поддержки ограничений внешнего ключа. Наконец, в разделе 6 перечислены недостающие функции и ограничения текущей реализации.</target>
        </trans-unit>
        <trans-unit id="6abe8a139c8044b273ba74ec6b9c2e3f141ecabe" translate="yes" xml:space="preserve">
          <source>The first set of three values corresponds to the left-most column of the table (column 0) and the left-most matchable phrase in the query (phrase 0). If the table has more than one column, the second set of three values in the output array correspond to phrase 0 and column 1. Followed by phrase 0, column 2 and so on for all columns of the table. And so on for phrase 1, column 0, then phrase 1, column 1 etc. In other words, the data for occurrences of phrase</source>
          <target state="translated">Первый набор из трех значений соответствует самому левому столбцу таблицы (столбец 0)и самому левому совпадению фраз в запросе (фраза 0).Если таблица имеет более одного столбца,то второй набор из трех значений в выходном массиве соответствует фразе 0 и столбцу 1.Далее следует фраза 0,столбец 2 и т.д.для всех столбцов таблицы.И так далее для фразы 1,столбца 0,затем фразы 1,столбца 1 и так далее.Другими словами,данные для вхождения фразы</target>
        </trans-unit>
        <trans-unit id="b88b9c17da99b9d9285ae75db888dfa7bebfc06c" translate="yes" xml:space="preserve">
          <source>The first six interfaces (_blob, _double, _int, _int64, _text, and _text16) each return the value of a result column in a specific data format. If the result column is not initially in the requested format (for example, if the query returns an integer but the sqlite3_column_text() interface is used to extract the value) then an automatic type conversion is performed.</source>
          <target state="translated">Первые шесть интерфейсов (_blob,_double,_int,_int64,_text и _text16)каждый возвращает значение столбца результата в определенном формате данных.Если столбец результата изначально находится не в запрашиваемом формате (например,если запрос возвращает целое число,но для извлечения значения используется интерфейс sqlite3_column_text()),то выполняется автоматическое приведение типа.</target>
        </trans-unit>
        <trans-unit id="67231aa738e6314e6f80285f8fe72b39964cf222" translate="yes" xml:space="preserve">
          <source>The first six modifiers (1 through 6) simply add the specified amount of time to the date and time specified by the preceding timestring and modifiers. The 's' character at the end of the modifier names is optional. Note that &quot;&amp;plusmn;NNN months&quot; works by rendering the original date into the YYYY-MM-DD format, adding the &amp;plusmn;NNN to the MM month value, then normalizing the result. Thus, for example, the data 2001-03-31 modified by '+1 month' initially yields 2001-04-31, but April only has 30 days so the date is normalized to 2001-05-01. A similar effect occurs when the original date is February 29 of a leapyear and the modifier is &amp;plusmn;N years where N is not a multiple of four.</source>
          <target state="translated">Первые шесть модификаторов (с 1 по 6) просто добавляют указанное количество времени к дате и времени, указанным предыдущей временной строкой и модификаторами. Символ 's' в конце имен модификаторов необязателен. Обратите внимание, что &amp;laquo;&amp;plusmn; NNN месяцев&amp;raquo; работает путем преобразования исходной даты в формат ГГГГ-ММ-ДД, добавления &amp;plusmn; NNN к значению месяца ММ и последующей нормализации результата. Так, например, данные 2001-03-31, измененные на &amp;laquo;+1 месяц&amp;raquo;, первоначально дают 2001-04-31, но в апреле есть только 30 дней, поэтому дата нормализуется до 2001-05-01. Аналогичный эффект возникает, когда исходная дата - 29 февраля високосного года, а модификатор - &amp;plusmn; N лет, где N не кратно четырем.</target>
        </trans-unit>
        <trans-unit id="de80fd15e7d30919dde63ea2e434aa9d73b98e29" translate="yes" xml:space="preserve">
          <source>The first step toward dealing with a hot journal is to obtain an exclusive lock on the database file. This prevents two or more processes from trying to rollback the same hot journal at the same time.</source>
          <target state="translated">Первый шаг к работе с горячим журналом-получение эксклюзивной блокировки на файле базы данных.Это не позволяет двум или более процессам пытаться откатить один и тот же &quot;горячий&quot; журнал одновременно.</target>
        </trans-unit>
        <trans-unit id="6d5dce142e8b6c56f2485efc4da630bd41e2b246" translate="yes" xml:space="preserve">
          <source>The first step toward reading from the database file is obtaining a shared lock on the database file. A &quot;shared&quot; lock allows two or more database connections to read from the database file at the same time. But a shared lock prevents another database connection from writing to the database file while we are reading it. This is necessary because if another database connection were writing to the database file at the same time we are reading from the database file, we might read some data before the change and other data after the change. This would make it appear as if the change made by the other process is not atomic.</source>
          <target state="translated">Первый шаг к чтению из файла базы данных-получение общей блокировки на файле базы данных.Общий&quot; замок позволяет одновременно считывать из файла базы данных два или более соединения с БД.Но общий замок не позволяет другому соединению с БД записать в файл БД,пока мы его читаем.Это необходимо,потому что если бы другое подключение к БД записывалось в файл БД в то же самое время,когда мы читаем из файла БД,мы могли бы прочитать некоторые данные до изменения и другие данные после изменения.При этом будет выглядеть так,как будто изменение,сделанное другим процессом,не является атомарным.</target>
        </trans-unit>
        <trans-unit id="728a2c812c40e366db04b46879d8327a7463b66e" translate="yes" xml:space="preserve">
          <source>The first string or bareword in a column declaration is the column name. It is an error to attempt to name an fts5 table column &quot;rowid&quot; or &quot;rank&quot;, or to assign the same name to a column as is used by the table itself. This is not supported.</source>
          <target state="translated">Первая строка или пустое слово в декларации столбца-это имя столбца.Ошибкой является попытка назвать столбец fts5 таблицы &quot;rowid&quot; или &quot;rank&quot;,или присвоить столбцу то же имя,что используется самой таблицей.Это не поддерживается.</target>
        </trans-unit>
        <trans-unit id="15aebb5889bf7eacd8a14d41dd89f37206fa7a06" translate="yes" xml:space="preserve">
          <source>The first subquery above is constant with respect to the outer query. The value for the first subquery can be computed once and then reused for each row of the outer SELECT. The second subquery, however, is &quot;CORRELATED&quot;. The value of the second subquery changes depending on values in the current row of the outer query. Hence, the second subquery must be run once for each output row in the outer SELECT.</source>
          <target state="translated">Первый подзапрос,приведенный выше,является постоянным по отношению к внешнему запросу.Значение для первого подзапроса может быть вычислено один раз,а затем повторно использовано для каждой строки внешнего SELECT.Второй подзапрос,однако,является &quot;ИСПРАВЛЕННЫМ&quot;.Значение второго подзапроса изменяется в зависимости от значений в текущей строке внешнего запроса.Следовательно,второй подзапрос должен быть выполнен один раз для каждой выходной строки внешнего SELECT.</target>
        </trans-unit>
        <trans-unit id="c31bdf542d6f05cfa5241d61c80e5148ec82df02" translate="yes" xml:space="preserve">
          <source>The first term stored on each node (&quot;Term 1&quot; in the figure above) is stored verbatim. Each subsequent term is prefix-compressed with respect to its predecessor. Terms are stored within a page in sorted (memcmp) order.</source>
          <target state="translated">Первый термин,сохраненный в каждом узле (&quot;Термин 1&quot; на рисунке выше),сохраняется дословно.Каждый последующий термин сжимается префиксом по отношению к своему предшественнику.Термины хранятся внутри страницы в отсортированном (в формате memcmp)порядке.</target>
        </trans-unit>
        <trans-unit id="7a099bb22daac790c8e16aa7a285108628e1197d" translate="yes" xml:space="preserve">
          <source>The first thing that happens is that we open the table being indexed for reading. In order to construct an index for a table, we have to know what is in that table. The index has already been opened for writing using cursor 0 by instructions 3 and 4.</source>
          <target state="translated">Первое,что произойдет,это то,что мы откроем таблицу,индексируемую для чтения.Чтобы построить индекс для таблицы,мы должны знать,что находится в этой таблице.Индекс уже открыт для записи курсором 0 по инструкциям 3 и 4.</target>
        </trans-unit>
        <trans-unit id="5eb1752f78007fa49f66b7f76488ea011879482b" translate="yes" xml:space="preserve">
          <source>The first time that any SQLite process attempts to access the database file, it obtains a shared lock as described in &lt;a href=&quot;https://sqlite.org/section_3_2&quot;&gt;section 3.2&lt;/a&gt; above. But then it notices that there is a rollback journal file present. SQLite then checks to see if the rollback journal is a &quot;hot journal&quot;. A hot journal is a rollback journal that needs to be played back in order to restore the database to a sane state. A hot journal only exists when an earlier process was in the middle of committing a transaction when it crashed or lost power.</source>
          <target state="translated">В первый раз, когда какой-либо процесс SQLite пытается получить доступ к файлу базы данных, он получает общую блокировку, как описано в &lt;a href=&quot;https://sqlite.org/section_3_2&quot;&gt;разделе 3.2&lt;/a&gt; выше. Но затем он замечает наличие файла журнала отката. Затем SQLite проверяет, является ли журнал отката &amp;laquo;горячим журналом&amp;raquo;. Горячий журнал - это журнал отката, который необходимо воспроизвести, чтобы восстановить базу данных до нормального состояния. Горячий журнал существует только в том случае, если более ранний процесс находился в процессе фиксации транзакции, когда он потерпел сбой или потерял питание.</target>
        </trans-unit>
        <trans-unit id="e68a1d44352d39217814d6bf160a385833864476" translate="yes" xml:space="preserve">
          <source>The first time the sqlite3_aggregate_context(C,N) routine is called for a particular aggregate function, SQLite allocates N bytes of memory, zeroes out that memory, and returns a pointer to the new memory. On second and subsequent calls to sqlite3_aggregate_context() for the same aggregate function instance, the same buffer is returned. Sqlite3_aggregate_context() is normally called once for each invocation of the xStep callback and then one last time when the xFinal callback is invoked. When no rows match an aggregate query, the xStep() callback of the aggregate function implementation is never called and xFinal() is called exactly once. In those cases, sqlite3_aggregate_context() might be called for the first time from within xFinal().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a42cd86f3f8e7c9fddbcba13c3c1c638314931" translate="yes" xml:space="preserve">
          <source>The first time the sqlite3_aggregate_context(C,N) routine is called for a particular aggregate function, SQLite allocates N of memory, zeroes out that memory, and returns a pointer to the new memory. On second and subsequent calls to sqlite3_aggregate_context() for the same aggregate function instance, the same buffer is returned. Sqlite3_aggregate_context() is normally called once for each invocation of the xStep callback and then one last time when the xFinal callback is invoked. When no rows match an aggregate query, the xStep() callback of the aggregate function implementation is never called and xFinal() is called exactly once. In those cases, sqlite3_aggregate_context() might be called for the first time from within xFinal().</source>
          <target state="translated">При первом вызове рутины sqlite3_aggregate_context(C,N)для конкретной агрегатной функции SQLite выделяет N памяти,обнуляет эту память и возвращает указатель на новую память.При втором и последующих вызовах sqlite3_aggregate_context()для того же экземпляра агрегатной функции возвращается тот же буфер.Обычно функция Sqlite3_aggregate_context()вызывается один раз при каждом вызове функции xStep,а затем последний раз при вызове функции xFinal.Когда ни одна строка не совпадает с агрегированным запросом,обратный вызов xStep()реализации агрегированной функции никогда не вызывается,а xFinal()вызывается ровно один раз.В этих случаях sqlite3_aggregate_context()может быть вызвана впервые из xFinal().</target>
        </trans-unit>
        <trans-unit id="33a73e33477151458e48dab8a4d76f2a383719c8" translate="yes" xml:space="preserve">
          <source>The first two constants (SQLITE_MUTEX_FAST and SQLITE_MUTEX_RECURSIVE) cause sqlite3_mutex_alloc() to create a new mutex. The new mutex is recursive when SQLITE_MUTEX_RECURSIVE is used but not necessarily so when SQLITE_MUTEX_FAST is used. The mutex implementation does not need to make a distinction between SQLITE_MUTEX_RECURSIVE and SQLITE_MUTEX_FAST if it does not want to. SQLite will only request a recursive mutex in cases where it really needs one. If a faster non-recursive mutex implementation is available on the host platform, the mutex subsystem might return such a mutex in response to SQLITE_MUTEX_FAST.</source>
          <target state="translated">Первые две константы (SQLITE_MUTEX_FAST и SQLITE_MUTEX_RECURSIVE)вызывают sqlite3_mutex_alloc()для создания нового мьютекса.Новый мьютекс является рекурсивным при использовании SQLITE_MUTEX_RECURSIVE,но не обязательно при использовании SQLITE_MUTEX_FAST.В реализации мьютекса нет необходимости делать различие между SQLITE_MUTEX_RECURSIVE и SQLITE_MUTEX_FAST,если он этого не хочет.SQLite будет запрашивать рекурсивный мьютекс только в тех случаях,когда он действительно нужен.Если на хостовой платформе доступна более быстрая не рекурсивная реализация мьютекса,то подсистема мьютекса может вернуть такой мьютекс в ответ на запрос SQLITE_MUTEX_FAST.</target>
        </trans-unit>
        <trans-unit id="3ad84c4124333660ac2ec2d4b3b96a74793fd127" translate="yes" xml:space="preserve">
          <source>The first two elements in the list above, the associated</source>
          <target state="translated">Первые два элемента списка выше,связанные с</target>
        </trans-unit>
        <trans-unit id="9de36623b06dcc8a12dabc9fe8d69bf46f2afdab" translate="yes" xml:space="preserve">
          <source>The first two instructions in the VDBE program for our query are concerned with setting up values for &lt;b&gt;azColumn&lt;/b&gt;. The &lt;a href=&quot;opcode#ColumnName&quot;&gt;ColumnName&lt;/a&gt; instructions tell the VDBE what values to fill in for each element of the &lt;b&gt;azColumnName[]&lt;/b&gt; array. Every query will begin with one ColumnName instruction for each column in the result, and there will be a matching Column instruction for each one later in the query.</source>
          <target state="translated">Первые две инструкции в программе VDBE для нашего запроса связаны с настройкой значений для &lt;b&gt;azColumn&lt;/b&gt; . В &lt;a href=&quot;opcode#ColumnName&quot;&gt;ColumnName&lt;/a&gt; инструкции сказать VDBE , какие значения для заполнения для каждого элемента &lt;b&gt;azColumnName []&lt;/b&gt; массива. Каждый запрос будет начинаться с одной инструкции ColumnName для каждого столбца в результате, и позже в запросе будет соответствующая инструкция ColumnName для каждого столбца.</target>
        </trans-unit>
        <trans-unit id="80f7eaccbd1b0c6d2fde7b56494766bcf2304eb6" translate="yes" xml:space="preserve">
          <source>The first two query examples illustrate a kind of template that every SELECT program will follow. Basically, we have:</source>
          <target state="translated">Первые два примера запросов иллюстрируют вид шаблона,которому будет следовать каждая программа SELECT.В принципе,есть:</target>
        </trans-unit>
        <trans-unit id="c636087069b26e9346b965d8bb5b5d8294795344" translate="yes" xml:space="preserve">
          <source>The first value in the array of integer values corresponds to the leftmost column of the table (column 0) and the first phrase in the query (phrase 0). The values corresponding to other column/phrase combinations may be located using the following formula:</source>
          <target state="translated">Первое значение в массиве целочисленных значений соответствует самому левому столбцу таблицы (столбец 0)и первой фразе запроса (фраза 0).Значения,соответствующие другим комбинациям столбец/фраза,могут быть расположены по следующей формуле:</target>
        </trans-unit>
        <trans-unit id="61029d8449643ad48e743f1026fb94f8a1ed1222" translate="yes" xml:space="preserve">
          <source>The first, or only, integer is the blockid that corresponds to the interior node with the largest blockid that belongs to this segment b-tree. Or zero if the entire segment b-tree fits on the root node. If it exists, this node is always an interior node.</source>
          <target state="translated">Первое или единственное целое число-это блокировка,соответствующая внутреннему узлу с наибольшей блокировкой,принадлежащей этому сегменту b-дерева.Или ноль,если весь сегмент b-дерева укладывается в корневой узел.Если он существует,то этот узел всегда является внутренним узлом.</target>
        </trans-unit>
        <trans-unit id="c0ebe13b31f8942f70d44d11a35f84a9529666cd" translate="yes" xml:space="preserve">
          <source>The fix in the 3.25.0 release for the endless-loop in the byte-code associated with the ORDER BY LIMIT optimization did not work for some queries involving window functions. An additional correction is required. Ticket &lt;a href=&quot;https://sqlite.org/src/info/510cde277783b5fb&quot;&gt;510cde277783b5fb&lt;/a&gt;</source>
          <target state="translated">Исправление в выпуске 3.25.0 для бесконечного цикла в байтовом коде, связанное с оптимизацией ORDER BY LIMIT, не работало для некоторых запросов, связанных с оконными функциями. Требуется дополнительная коррекция. Билет &lt;a href=&quot;https://sqlite.org/src/info/510cde277783b5fb&quot;&gt;510cde277783b5fb&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2032be06ad1313d23c4aa0f2d29e1f73447dfd8" translate="yes" xml:space="preserve">
          <source>The fix to the previous bug uncovered a deadlock which was also fixed.</source>
          <target state="translated">Исправление предыдущей ошибки обнаружило тупик,который также был исправлен.</target>
        </trans-unit>
        <trans-unit id="8197368f601d93edb14a348de0bf212d3c1bcf51" translate="yes" xml:space="preserve">
          <source>The flags argument to xAccess() may be &lt;a href=&quot;#SQLITE_ACCESS_EXISTS&quot; id=&quot;sqlite3vfsxaccess&quot;&gt;SQLITE_ACCESS_EXISTS&lt;/a&gt; to test for the existence of a file, or &lt;a href=&quot;#SQLITE_ACCESS_EXISTS&quot;&gt;SQLITE_ACCESS_READWRITE&lt;/a&gt; to test whether a file is readable and writable, or &lt;a href=&quot;#SQLITE_ACCESS_EXISTS&quot;&gt;SQLITE_ACCESS_READ&lt;/a&gt; to test whether a file is at least readable. The SQLITE_ACCESS_READ flag is never actually used and is not implemented in the built-in VFSes of SQLite. The file is named by the second argument and can be a directory. The xAccess method returns &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OK&lt;/a&gt; on success or some non-zero error code if there is an I/O error or if the name of the file given in the second argument is illegal. If SQLITE_OK is returned, then non-zero or zero is written into *pResOut to indicate whether or not the file is accessible.</source>
          <target state="translated">Аргументом flags для xAccess () может быть &lt;a href=&quot;#SQLITE_ACCESS_EXISTS&quot; id=&quot;sqlite3vfsxaccess&quot;&gt;SQLITE_ACCESS_EXISTS&lt;/a&gt; для проверки существования файла или &lt;a href=&quot;#SQLITE_ACCESS_EXISTS&quot;&gt;SQLITE_ACCESS_READWRITE&lt;/a&gt; для проверки, доступен ли файл для чтения и записи, или &lt;a href=&quot;#SQLITE_ACCESS_EXISTS&quot;&gt;SQLITE_ACCESS_READ&lt;/a&gt; для проверки, по крайней мере, доступен для чтения файл. Флаг SQLITE_ACCESS_READ фактически никогда не используется и не реализован во встроенных VFS SQLite. Файл называется вторым аргументом и может быть каталогом. Метод xAccess возвращает &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OK&lt;/a&gt; в случае успеха или ненулевого кода ошибки, если есть ошибка ввода-вывода или если имя файла, указанное во втором аргументе, является недопустимым. Если возвращается SQLITE_OK, то в * pResOut записывается ненулевое или нулевое значение, чтобы указать, доступен ли файл.</target>
        </trans-unit>
        <trans-unit id="ee0102cf2398a56ff989592f19a055847f5dc920" translate="yes" xml:space="preserve">
          <source>The flags argument to xAccess() may be &lt;a href=&quot;c_access_exists&quot; id=&quot;sqlite3vfsxaccess&quot;&gt;SQLITE_ACCESS_EXISTS&lt;/a&gt; to test for the existence of a file, or &lt;a href=&quot;c_access_exists&quot;&gt;SQLITE_ACCESS_READWRITE&lt;/a&gt; to test whether a file is readable and writable, or &lt;a href=&quot;c_access_exists&quot;&gt;SQLITE_ACCESS_READ&lt;/a&gt; to test whether a file is at least readable. The SQLITE_ACCESS_READ flag is never actually used and is not implemented in the built-in VFSes of SQLite. The file is named by the second argument and can be a directory. The xAccess method returns &lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OK&lt;/a&gt; on success or some non-zero error code if there is an I/O error or if the name of the file given in the second argument is illegal. If SQLITE_OK is returned, then non-zero or zero is written into *pResOut to indicate whether or not the file is accessible.</source>
          <target state="translated">Аргументом flags для xAccess () может быть &lt;a href=&quot;c_access_exists&quot; id=&quot;sqlite3vfsxaccess&quot;&gt;SQLITE_ACCESS_EXISTS&lt;/a&gt; для проверки существования файла или &lt;a href=&quot;c_access_exists&quot;&gt;SQLITE_ACCESS_READWRITE&lt;/a&gt; для проверки, доступен ли файл для чтения и записи, или &lt;a href=&quot;c_access_exists&quot;&gt;SQLITE_ACCESS_READ&lt;/a&gt; для проверки, по крайней мере, доступен для чтения файл. Флаг SQLITE_ACCESS_READ фактически никогда не используется и не реализован во встроенных VFS SQLite. Файл называется вторым аргументом и может быть каталогом. Метод xAccess возвращает &lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OK&lt;/a&gt; в случае успеха или ненулевого кода ошибки, если есть ошибка ввода-вывода или если имя файла, указанное во втором аргументе, является недопустимым. Если возвращается SQLITE_OK, то в * pResOut записывается ненулевое или нулевое значение, чтобы указать, доступен ли файл.</target>
        </trans-unit>
        <trans-unit id="d9f0c284ad1c57f7e5da616991af768f686e341f" translate="yes" xml:space="preserve">
          <source>The flags argument to xOpen() includes all bits set in the flags argument to &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open_v2()&lt;/a&gt;. Or if &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open()&lt;/a&gt; or &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open16()&lt;/a&gt; is used, then flags includes at least &lt;a href=&quot;#SQLITE_OPEN_AUTOPROXY&quot;&gt;SQLITE_OPEN_READWRITE&lt;/a&gt; | &lt;a href=&quot;#SQLITE_OPEN_AUTOPROXY&quot;&gt;SQLITE_OPEN_CREATE&lt;/a&gt;. If xOpen() opens a file read-only then it sets *pOutFlags to include &lt;a href=&quot;#SQLITE_OPEN_AUTOPROXY&quot;&gt;SQLITE_OPEN_READONLY&lt;/a&gt;. Other bits in *pOutFlags may be set.</source>
          <target state="translated">Аргумент flags для xOpen () включает все биты, установленные в аргументе flags для &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open_v2 ()&lt;/a&gt; . Или, если используется &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open ()&lt;/a&gt; или &lt;a href=&quot;#sqlite3_open&quot;&gt;sqlite3_open16 ()&lt;/a&gt; , тогда flags включает как минимум &lt;a href=&quot;#SQLITE_OPEN_AUTOPROXY&quot;&gt;SQLITE_OPEN_READWRITE&lt;/a&gt; | &lt;a href=&quot;#SQLITE_OPEN_AUTOPROXY&quot;&gt;SQLITE_OPEN_CREATE&lt;/a&gt; . Если xOpen () открывает файл только для чтения, он устанавливает * pOutFlags для включения &lt;a href=&quot;#SQLITE_OPEN_AUTOPROXY&quot;&gt;SQLITE_OPEN_READONLY&lt;/a&gt; . Другие биты в * pOutFlags могут быть установлены.</target>
        </trans-unit>
        <trans-unit id="f5198d48ad55972f3bafe448a5f83115c01462b7" translate="yes" xml:space="preserve">
          <source>The flags argument to xOpen() includes all bits set in the flags argument to &lt;a href=&quot;open&quot;&gt;sqlite3_open_v2()&lt;/a&gt;. Or if &lt;a href=&quot;open&quot;&gt;sqlite3_open()&lt;/a&gt; or &lt;a href=&quot;open&quot;&gt;sqlite3_open16()&lt;/a&gt; is used, then flags includes at least &lt;a href=&quot;c_open_autoproxy&quot;&gt;SQLITE_OPEN_READWRITE&lt;/a&gt; | &lt;a href=&quot;c_open_autoproxy&quot;&gt;SQLITE_OPEN_CREATE&lt;/a&gt;. If xOpen() opens a file read-only then it sets *pOutFlags to include &lt;a href=&quot;c_open_autoproxy&quot;&gt;SQLITE_OPEN_READONLY&lt;/a&gt;. Other bits in *pOutFlags may be set.</source>
          <target state="translated">Аргумент flags для xOpen () включает все биты, установленные в аргументе flags для &lt;a href=&quot;open&quot;&gt;sqlite3_open_v2 ()&lt;/a&gt; . Или, если используется &lt;a href=&quot;open&quot;&gt;sqlite3_open ()&lt;/a&gt; или &lt;a href=&quot;open&quot;&gt;sqlite3_open16 ()&lt;/a&gt; , тогда flags включает как минимум &lt;a href=&quot;c_open_autoproxy&quot;&gt;SQLITE_OPEN_READWRITE&lt;/a&gt; | &lt;a href=&quot;c_open_autoproxy&quot;&gt;SQLITE_OPEN_CREATE&lt;/a&gt; . Если xOpen () открывает файл только для чтения, он устанавливает * pOutFlags для включения &lt;a href=&quot;c_open_autoproxy&quot;&gt;SQLITE_OPEN_READONLY&lt;/a&gt; . Другие биты в * pOutFlags могут быть установлены.</target>
        </trans-unit>
        <trans-unit id="7bc004618637404d4a4bd35b24cc91bd411a3086" translate="yes" xml:space="preserve">
          <source>The flags argument to xSync may be one of &lt;a href=&quot;#SQLITE_SYNC_DATAONLY&quot;&gt;SQLITE_SYNC_NORMAL&lt;/a&gt; or &lt;a href=&quot;#SQLITE_SYNC_DATAONLY&quot;&gt;SQLITE_SYNC_FULL&lt;/a&gt;. The first choice is the normal fsync(). The second choice is a Mac OS X style fullsync. The &lt;a href=&quot;#SQLITE_SYNC_DATAONLY&quot;&gt;SQLITE_SYNC_DATAONLY&lt;/a&gt; flag may be ORed in to indicate that only the data of the file and not its inode needs to be synced.</source>
          <target state="translated">Аргумент flags для xSync может быть одним из &lt;a href=&quot;#SQLITE_SYNC_DATAONLY&quot;&gt;SQLITE_SYNC_NORMAL&lt;/a&gt; или &lt;a href=&quot;#SQLITE_SYNC_DATAONLY&quot;&gt;SQLITE_SYNC_FULL&lt;/a&gt; . Первый выбор - это обычная fsync (). Второй вариант - это полная синхронизация в стиле Mac OS X. &lt;a href=&quot;#SQLITE_SYNC_DATAONLY&quot;&gt;SQLITE_SYNC_DATAONLY&lt;/a&gt; флаг может быть ORed , чтобы указать , что только данные файла , а не его потребности индексных дескрипторов , которые будут синхронизироваться.</target>
        </trans-unit>
        <trans-unit id="99d3aea2b8c0b18767851d7c8d3921e4603f6ed1" translate="yes" xml:space="preserve">
          <source>The flags argument to xSync may be one of &lt;a href=&quot;c_sync_dataonly&quot;&gt;SQLITE_SYNC_NORMAL&lt;/a&gt; or &lt;a href=&quot;c_sync_dataonly&quot;&gt;SQLITE_SYNC_FULL&lt;/a&gt;. The first choice is the normal fsync(). The second choice is a Mac OS X style fullsync. The &lt;a href=&quot;c_sync_dataonly&quot;&gt;SQLITE_SYNC_DATAONLY&lt;/a&gt; flag may be ORed in to indicate that only the data of the file and not its inode needs to be synced.</source>
          <target state="translated">Аргумент flags для xSync может быть одним из &lt;a href=&quot;c_sync_dataonly&quot;&gt;SQLITE_SYNC_NORMAL&lt;/a&gt; или &lt;a href=&quot;c_sync_dataonly&quot;&gt;SQLITE_SYNC_FULL&lt;/a&gt; . Первый выбор - это обычная fsync (). Второй вариант - это полная синхронизация в стиле Mac OS X. &lt;a href=&quot;c_sync_dataonly&quot;&gt;SQLITE_SYNC_DATAONLY&lt;/a&gt; флаг может быть ORed , чтобы указать , что только данные файла , а не его потребности индексных дескрипторов , которые будут синхронизироваться.</target>
        </trans-unit>
        <trans-unit id="c377d5a3884469a39150e12bd3af49c973f2fad1" translate="yes" xml:space="preserve">
          <source>The floating-point to text conversion subfunction for the built-in printf() is limited in precision to 16 significant digits or 26 significant digits if the &quot;!&quot; alternate-form-2 flag is used. Every IEEE-754 double can be represented exactly as a decimal floating-point value, but some doubles require more than 16 or 26 significant digits.</source>
          <target state="translated">Подфункция преобразования текста с плавающей точкой в текст для встроенной функции printf()ограничена по точности 16 значащими цифрами или 26 значащими цифрами,если используется флаг &quot;!&quot; переменной формы-2.Каждый двойник IEEE-754 может быть точно представлен в виде десятичной запятой с плавающей точкой,но некоторые двойники требуют более 16 или 26 значащих цифр.</target>
        </trans-unit>
        <trans-unit id="68fce5c170ab1896511f13fd3e82f411098f2695" translate="yes" xml:space="preserve">
          <source>The folder returned by the GetTempPath() system interface.</source>
          <target state="translated">Папка,возвращаемая системным интерфейсом GetTempPath().</target>
        </trans-unit>
        <trans-unit id="4f48bdf9b1dfd94aea260fd19b610d7cf9d72be5" translate="yes" xml:space="preserve">
          <source>The folder set by &lt;a href=&quot;pragma#pragma_temp_store_directory&quot;&gt;PRAGMA temp_store_directory&lt;/a&gt; or by the &lt;a href=&quot;c3ref/temp_directory&quot;&gt;sqlite3_temp_directory&lt;/a&gt; global variable</source>
          <target state="translated">Папка, заданная &lt;a href=&quot;pragma#pragma_temp_store_directory&quot;&gt;PRAGMA temp_store_directory&lt;/a&gt; или глобальной переменной &lt;a href=&quot;c3ref/temp_directory&quot;&gt;sqlite3_temp_directory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f393fa7f5f393cd220ff4a7a6a7ccbac66e5676" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;https://xkcd.com/1597/&quot;&gt;https://xkcd.com/1597/&lt;/a&gt; cartoon is an exaggeration, yet hits close to home:</source>
          <target state="translated">Следующий мультфильм &lt;a href=&quot;https://xkcd.com/1597/&quot;&gt;https://xkcd.com/1597/&lt;/a&gt; является преувеличением, но близок к нему:</target>
        </trans-unit>
        <trans-unit id="40de557d79eeab5be4528c0beef95dcb1a5f7ef4" translate="yes" xml:space="preserve">
          <source>The following RBU database schema may be used:</source>
          <target state="translated">Может использоваться следующая схема базы данных RBU:</target>
        </trans-unit>
        <trans-unit id="ae49ebf9365c52bbf37afc8c396e0cba8b2d31d3" translate="yes" xml:space="preserve">
          <source>The following SQL demonstrates how SQLite uses column affinity to do type conversions when values are inserted into a table.</source>
          <target state="translated">Следующий SQL демонстрирует,как SQLite использует сродство столбцов для приведения типов,когда значения вставляются в таблицу.</target>
        </trans-unit>
        <trans-unit id="d10a8778dff23f69800ec8a5dd149287ef5743ba" translate="yes" xml:space="preserve">
          <source>The following SQL illustrates how to use the ieee754 and decimal extensions to compute the exact decimal equivalent for a binary64 floating-point number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7479fafb0c600f993e6250d871980ae79cbdf35" translate="yes" xml:space="preserve">
          <source>The following SQLite command-line session illustrates the effect of the foreign key constraint added to the</source>
          <target state="translated">Следующая сессия командной строки SQLite иллюстрирует эффект ограничения по внешнему ключу,добавленному к</target>
        </trans-unit>
        <trans-unit id="1f8a8aec572c42d81f9a9d30dc36ba0c1a7ca331" translate="yes" xml:space="preserve">
          <source>The following additional compile-time options are recommended in order to provide a full-featured command-line shell:</source>
          <target state="translated">Для обеспечения полнофункциональной оболочки командной строки рекомендуются следующие дополнительные опции времени компиляции:</target>
        </trans-unit>
        <trans-unit id="e661fc6daecc53fc88e2038803ed3bcb13092e93" translate="yes" xml:space="preserve">
          <source>The following additional syntax restrictions apply to UPDATE statements that occur within the body of a &lt;a href=&quot;lang_createtrigger&quot;&gt;CREATE TRIGGER&lt;/a&gt; statement.</source>
          <target state="translated">Следующие дополнительные ограничения синтаксиса применяются к операторам UPDATE, которые встречаются в теле оператора &lt;a href=&quot;lang_createtrigger&quot;&gt;CREATE TRIGGER&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a78308c3e0962720a3b6c6b2c92b551ac030e31" translate="yes" xml:space="preserve">
          <source>The following are allowed values for 6th argument (the F argument) to the &lt;a href=&quot;#sqlite3_deserialize&quot;&gt;sqlite3_deserialize(D,S,P,N,M,F)&lt;/a&gt; interface.</source>
          <target state="translated">Ниже приведены допустимые значения для 6-го аргумента (аргумент &lt;a href=&quot;#sqlite3_deserialize&quot;&gt;F)&lt;/a&gt; интерфейса sqlite3_deserialize (D, S, P, N, M, F) .</target>
        </trans-unit>
        <trans-unit id="b9076a86669fb7bce220c5cc2398686ebb071016" translate="yes" xml:space="preserve">
          <source>The following are allowed values for 6th argument (the F argument) to the &lt;a href=&quot;deserialize&quot;&gt;sqlite3_deserialize(D,S,P,N,M,F)&lt;/a&gt; interface.</source>
          <target state="translated">Ниже приведены допустимые значения для 6-го аргумента (аргумент &lt;a href=&quot;deserialize&quot;&gt;F)&lt;/a&gt; интерфейса sqlite3_deserialize (D, S, P, N, M, F) .</target>
        </trans-unit>
        <trans-unit id="a59459d6632d0bbc1149f827b602fb3d835358c8" translate="yes" xml:space="preserve">
          <source>The following are examples of disabling the built-in protection mechanisms of SQLite:</source>
          <target state="translated">Ниже приведены примеры отключения встроенных механизмов защиты SQLite:</target>
        </trans-unit>
        <trans-unit id="80d00e742a47603d638009e13703b23c42a0d91f" translate="yes" xml:space="preserve">
          <source>The following are other VFS implementations available in the public SQLite source tree:</source>
          <target state="translated">Ниже приведены другие реализации VFS,доступные в публичном дереве исходных текстов SQLite:</target>
        </trans-unit>
        <trans-unit id="ec123026fdd8e1c2278a5f9715d6939ab0dbeb46" translate="yes" xml:space="preserve">
          <source>The following are the available OMIT options:</source>
          <target state="translated">Ниже приведены доступные опции OMIT:</target>
        </trans-unit>
        <trans-unit id="8fa3cecc90ff41687bc039d2f339ed203679e422" translate="yes" xml:space="preserve">
          <source>The following block contains a summary of the FTS query syntax in BNF form. A detailed explanation follows.</source>
          <target state="translated">Следующий блок содержит краткое изложение синтаксиса запроса FTS в форме BNF.Ниже приводится подробное объяснение.</target>
        </trans-unit>
        <trans-unit id="9eacb2386777a09c397574d603b9f7b4a178b7c8" translate="yes" xml:space="preserve">
          <source>The following block contains an example of calling the fts3_tokenizer() function from C code:</source>
          <target state="translated">В следующем блоке приведен пример вызова функции fts3_tokenizer()из кода на языке Си:</target>
        </trans-unit>
        <trans-unit id="8a513f3e74d7cb1dc9f72503b5eb2053d246b6ad" translate="yes" xml:space="preserve">
          <source>The following block contains examples that use the offsets function.</source>
          <target state="translated">В следующем блоке приведены примеры использования функции смещения.</target>
        </trans-unit>
        <trans-unit id="5c334635414a3c37311f7280f25331d2da05c0d0" translate="yes" xml:space="preserve">
          <source>The following chart shows the substitution types supported by SQLite:</source>
          <target state="translated">На следующем графике показаны типы замен,поддерживаемые SQLite:</target>
        </trans-unit>
        <trans-unit id="16f175b629dac9ff34c51ebace5610e8bb2a6ee9" translate="yes" xml:space="preserve">
          <source>The following compile-time options are recommended for applications that are able to use them, in order to minimized the number of CPU cycles and the bytes of memory used by SQLite. Not all of these compile-time options are usable by every application. For example, the SQLITE_THREADSAFE=0 option is only usable by applications that never access SQLite from more than one thread at a time. And the SQLITE_OMIT_PROGRESS_CALLBACK option is only usable by applications that do not use the &lt;a href=&quot;c3ref/progress_handler&quot;&gt;sqlite3_progress_handler()&lt;/a&gt; interface. And so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06c8d896e801657db8f70d5a5bd2960e6843e64" translate="yes" xml:space="preserve">
          <source>The following compile-time options are recommended for applications that are able to use them, in order to minimized the number of CPU cycles and the bytes of memory used by SQLite. Not all of these compile-time options are usable by every application. For example, the SQLITE_THREADSAFE=0 option is only usable by applications that never access SQLite from more than one thread at a time. And the SQLITE_OMIT_PROGRESS_CALLBACK option is only usable by applications that doe not use the &lt;a href=&quot;c3ref/progress_handler&quot;&gt;sqlite3_progress_handler()&lt;/a&gt; interface. And so forth.</source>
          <target state="translated">Следующие параметры времени компиляции рекомендуются для приложений, которые могут их использовать, чтобы минимизировать количество циклов процессора и байтов памяти, используемых SQLite. Не все эти параметры времени компиляции могут использоваться каждым приложением. Например, параметр SQLITE_THREADSAFE = 0 может использоваться только приложениями, которые никогда не обращаются к SQLite из более чем одного потока одновременно. А параметр SQLITE_OMIT_PROGRESS_CALLBACK может использоваться только приложениями, которые не используют интерфейс &lt;a href=&quot;c3ref/progress_handler&quot;&gt;sqlite3_progress_handler ()&lt;/a&gt; . И так далее.</target>
        </trans-unit>
        <trans-unit id="1f053eef3c13d51d862b4f23cc04af6f84e75626" translate="yes" xml:space="preserve">
          <source>The following constants can be used for the T parameter to the &lt;a href=&quot;#sqlite3_stmt_scanstatus&quot;&gt;sqlite3_stmt_scanstatus(S,X,T,V)&lt;/a&gt; interface. Each constant designates a different metric for sqlite3_stmt_scanstatus() to return.</source>
          <target state="translated">Следующие константы можно использовать для параметра &lt;a href=&quot;#sqlite3_stmt_scanstatus&quot;&gt;T&lt;/a&gt; интерфейса sqlite3_stmt_scanstatus (S, X, T, V) . Каждая константа обозначает разные метрики, которые должна возвращать sqlite3_stmt_scanstatus ().</target>
        </trans-unit>
        <trans-unit id="42e5a30e943fe484b45c04468e002affa80c1a88" translate="yes" xml:space="preserve">
          <source>The following constants can be used for the T parameter to the &lt;a href=&quot;stmt_scanstatus&quot;&gt;sqlite3_stmt_scanstatus(S,X,T,V)&lt;/a&gt; interface. Each constant designates a different metric for sqlite3_stmt_scanstatus() to return.</source>
          <target state="translated">Следующие константы можно использовать для параметра &lt;a href=&quot;stmt_scanstatus&quot;&gt;T&lt;/a&gt; интерфейса sqlite3_stmt_scanstatus (S, X, T, V) . Каждая константа обозначает разные метрики, которые должна возвращать sqlite3_stmt_scanstatus ().</target>
        </trans-unit>
        <trans-unit id="0dd0f222abc9f123e613d4dc8f011601915507ab" translate="yes" xml:space="preserve">
          <source>The following diagram depicts the format of a segment b-tree interior (non-leaf) node.</source>
          <target state="translated">На следующем рисунке показан формат сегмента b-дерева внутреннего (нелистового)узла.</target>
        </trans-unit>
        <trans-unit id="24519f5efb1b482cdcbf663c45ec684bda267ab2" translate="yes" xml:space="preserve">
          <source>The following diagram depicts the format of a segment b-tree leaf node.</source>
          <target state="translated">На следующей диаграмме представлен формат узла сегмента b-деревянного листа.</target>
        </trans-unit>
        <trans-unit id="d2d809dec5a64a655b9636ca71424601eda3c8d0" translate="yes" xml:space="preserve">
          <source>The following example code illustrates the techniques described above.</source>
          <target state="translated">Следующий пример кода иллюстрирует методы,описанные выше.</target>
        </trans-unit>
        <trans-unit id="54bdf2a30ded538a716ed8a4baee084a78f8a312" translate="yes" xml:space="preserve">
          <source>The following example creates a new SQL function named &quot;hex&quot; that converts its numeric argument in to a hexadecimal encoded string:</source>
          <target state="translated">В следующем примере создается новая SQL-функция под названием &quot;hex&quot;,которая преобразует свой числовой аргумент в шестнадцатеричную закодированную строку:</target>
        </trans-unit>
        <trans-unit id="9d4eb7545f22068db9db1145bb2583cae1439f33" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the effect of the various forms of the EXCLUDE clause:</source>
          <target state="translated">Следующий пример демонстрирует действие различных форм клаузулы EXCLUDE:</target>
        </trans-unit>
        <trans-unit id="3fb64142e08ab04e58bc3d16cc93b9564bb653f2" translate="yes" xml:space="preserve">
          <source>The following example illustrates precedence of operators using the standard query syntax:</source>
          <target state="translated">Следующий пример иллюстрирует приоритет операторов,использующих стандартный синтаксис запроса:</target>
        </trans-unit>
        <trans-unit id="33e08656a40dfd68bcb2d6194c63e1be80dcd4d4" translate="yes" xml:space="preserve">
          <source>The following example illustrates the above. The expressions &quot;docs&quot;, &quot;docs.docs&quot; and &quot;main.docs.docs&quot; all refer to column &quot;docs&quot;. However, the expression &quot;main.docs&quot; does not refer to any column. It could be used to refer to a table, but a table name is not allowed in the context in which it is used below.</source>
          <target state="translated">Следующий пример иллюстрирует вышеизложенное.Выражения &quot;docs&quot;,&quot;docs.docs&quot; и &quot;main.docs.docs&quot; относятся к колонке &quot;docs&quot;.Однако,выражение &quot;main.docs&quot; не относится ни к одной из колонок.Оно может быть использовано для ссылки на таблицу,но имя таблицы не разрешается в контексте,в котором оно используется ниже.</target>
        </trans-unit>
        <trans-unit id="6318f87943b573664a21e50213cf281e74663a27" translate="yes" xml:space="preserve">
          <source>The following example illustrates the behaviour of the five ranking functions - row_number(), rank(), dense_rank(), percent_rank() and cume_dist().</source>
          <target state="translated">Следующий пример иллюстрирует поведение пяти ранжирующих функций-row_number(),rank(),dense_rank(),percent_rank()и cume_dist().</target>
        </trans-unit>
        <trans-unit id="fd2f5de221e0f758d71eb8931f8c7e719ace6200" translate="yes" xml:space="preserve">
          <source>The following example illustrates the effect of using a deferred foreign key constraint.</source>
          <target state="translated">Следующий пример иллюстрирует эффект использования отложенного иностранного ключа.</target>
        </trans-unit>
        <trans-unit id="c39a3730f5c13caef84a726a00ac693030617813" translate="yes" xml:space="preserve">
          <source>The following example shows how to remove NUL character, and all text that follows, from a column of a table. So if you have a database file that contains embedded NULs and you would like to remove them, running UPDATE statements similar to the following might help:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21740a6dff76788fbc521cbbbedbec453f6795d5" translate="yes" xml:space="preserve">
          <source>The following example uses the sumint() function implemented by the above C code. For each row, the window consists of the preceding row (if any), the current row and the following row (again, if any):</source>
          <target state="translated">В следующем примере используется функция sumint(),реализованная в приведенном выше коде на языке Си.Для каждой строки окно состоит из предыдущей (если таковая имеется),текущей и следующей строки (опять же,если таковая имеется):</target>
        </trans-unit>
        <trans-unit id="9b577d330901567bab085337ea84d2a43135e876" translate="yes" xml:space="preserve">
          <source>The following example will better illustrate the use of SQLITE_CONSTRAINT as a return value from xBestIndex:</source>
          <target state="translated">Следующий пример лучше проиллюстрирует использование SQLITE_CONSTRAINT в качестве возвращаемого значения из xBestIndex:</target>
        </trans-unit>
        <trans-unit id="3f5880fbaaf652f0861c35b2ed9bf834e8800e30" translate="yes" xml:space="preserve">
          <source>The following flags may passed via the 4th parameter to &lt;a href=&quot;#sqlite3changeset_start&quot;&gt;sqlite3changeset_start_v2&lt;/a&gt; and &lt;a href=&quot;#sqlite3changegroup_add_strm&quot;&gt;sqlite3changeset_start_v2_strm&lt;/a&gt;:</source>
          <target state="translated">Следующие флаги могут быть переданы через 4-й параметр &lt;a href=&quot;#sqlite3changeset_start&quot;&gt;sqlite3changeset_start_v2&lt;/a&gt; и &lt;a href=&quot;#sqlite3changegroup_add_strm&quot;&gt;sqlite3changeset_start_v2_strm&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="dcb818ec6ae695589b5e698d66cbb55415f5689e" translate="yes" xml:space="preserve">
          <source>The following flags may passed via the 4th parameter to &lt;a href=&quot;sqlite3changeset_start&quot;&gt;sqlite3changeset_start_v2&lt;/a&gt; and &lt;a href=&quot;sqlite3changegroup_add_strm&quot;&gt;sqlite3changeset_start_v2_strm&lt;/a&gt;:</source>
          <target state="translated">Следующие флаги могут быть переданы через 4-й параметр &lt;a href=&quot;sqlite3changeset_start&quot;&gt;sqlite3changeset_start_v2&lt;/a&gt; и &lt;a href=&quot;sqlite3changegroup_add_strm&quot;&gt;sqlite3changeset_start_v2_strm&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="eaf06e6487557d77e67f76618b64eb4b39aae85e" translate="yes" xml:space="preserve">
          <source>The following flags may passed via the 9th parameter to &lt;a href=&quot;#sqlite3changeset_apply&quot;&gt;sqlite3changeset_apply_v2&lt;/a&gt; and &lt;a href=&quot;#sqlite3changegroup_add_strm&quot;&gt;sqlite3changeset_apply_v2_strm&lt;/a&gt;:</source>
          <target state="translated">Следующие флаги могут передаваться через 9-й параметр в &lt;a href=&quot;#sqlite3changeset_apply&quot;&gt;sqlite3changeset_apply_v2&lt;/a&gt; и &lt;a href=&quot;#sqlite3changegroup_add_strm&quot;&gt;sqlite3changeset_apply_v2_strm&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8acfd72cc7dc7df0be4ef94764fa15b5b7e0e403" translate="yes" xml:space="preserve">
          <source>The following flags may passed via the 9th parameter to &lt;a href=&quot;sqlite3changeset_apply&quot;&gt;sqlite3changeset_apply_v2&lt;/a&gt; and &lt;a href=&quot;sqlite3changegroup_add_strm&quot;&gt;sqlite3changeset_apply_v2_strm&lt;/a&gt;:</source>
          <target state="translated">Следующие флаги могут передаваться через 9-й параметр в &lt;a href=&quot;sqlite3changeset_apply&quot;&gt;sqlite3changeset_apply_v2&lt;/a&gt; и &lt;a href=&quot;sqlite3changegroup_add_strm&quot;&gt;sqlite3changeset_apply_v2_strm&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="90a5abe74323cb727451a1fc89d79f6674e34a04" translate="yes" xml:space="preserve">
          <source>The following four configuration changes are recommended for maximum application security. Turning off the trust_schema setting prevents virtual tables and dodgy SQL functions from being used inside of triggers, views, CHECK constraints, generated columns, and expression indexes. Turning off the dqs_dml and dqs_ddl settings prevents the use of double-quoted strings. Turning on defensive prevents direct writes to shadow tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88559c5309089b2c53eff7ab551567dc8265aad" translate="yes" xml:space="preserve">
          <source>The following functions can be used to advance and query a changeset iterator created by this function:</source>
          <target state="translated">Следующие функции могут быть использованы для продвижения и запроса итератора изменений,созданного этой функцией:</target>
        </trans-unit>
        <trans-unit id="35f53ac017499b71e5f28f348a1b347ee5939139" translate="yes" xml:space="preserve">
          <source>The following is a log of all SQL used to generate one particular timeline (captured on 2016-09-16):</source>
          <target state="translated">Ниже приведен журнал всех SQL,использованных для создания одной конкретной временной шкалы (захваченный в 2016-09-16 гг.):</target>
        </trans-unit>
        <trans-unit id="8ca654574638bb42c5b323e2fbbcf528a1c97560" translate="yes" xml:space="preserve">
          <source>The following is a partial list of the kinds of messages that might appear in the error logger callback.</source>
          <target state="translated">Ниже приведен неполный список видов сообщений,которые могут появляться при обратном вызове регистратора ошибок.</target>
        </trans-unit>
        <trans-unit id="91f9f5074c39cae7458cb274b5e2472dd1f18791" translate="yes" xml:space="preserve">
          <source>The following is a random assortment of techniques used by the SQLite developers to trace, examine, and understand the behavior of the core SQLite library.</source>
          <target state="translated">Ниже приводится случайный набор методов,используемых разработчиками SQLite для отслеживания,изучения и понимания поведения ядра библиотеки SQLite.</target>
        </trans-unit>
        <trans-unit id="172b7cc8402676bd9591f1901c350fe56e3b1a3a" translate="yes" xml:space="preserve">
          <source>The following is sqlite3_analyzer output for an example places.sqlite database used by Firefox.</source>
          <target state="translated">Ниже приведен вывод анализатора sqlite3_analyzerer для примера базы данных places.sqlite,используемой Firefox.</target>
        </trans-unit>
        <trans-unit id="3b9bb38ec5e22c57b0f7c289494707329a29a947" translate="yes" xml:space="preserve">
          <source>The following limitations apply to RBU updates:</source>
          <target state="translated">Следующие ограничения распространяются на обновления RBU:</target>
        </trans-unit>
        <trans-unit id="fc2fda4c09167d54864b95b318f076cb56ce31c3" translate="yes" xml:space="preserve">
          <source>The following macros specify interface linkage for certain kinds of SQLite builds. The Makefiles will normally handle setting these macros automatically. Application developers should not need to worry with these macros. The following documentation about these macros is included completeness.</source>
          <target state="translated">Следующие макросы определяют связь интерфейса для определенных видов сборки SQLite.Обычно Makefiles автоматически обрабатывает настройку этих макросов.Разработчикам приложений не стоит беспокоиться об этих макросах.Следующая документация по этим макросам включает в себя полноту.</target>
        </trans-unit>
        <trans-unit id="e520cf121083171350ce54bdc25d9fb94f2ae9df" translate="yes" xml:space="preserve">
          <source>The following must be true for this function to succeed. If any of the following statements are false when sqlite3_snapshot_get() is called, SQLITE_ERROR is returned. The final value of *P is undefined in this case.</source>
          <target state="translated">Для успешного выполнения этой функции необходимо следующее.Если при вызове sqlite3_snapshot_get()какое-либо из следующих выражений будет ложным,то возвращается SQLITE_ERROR.Окончательное значение *P в этом случае не определено.</target>
        </trans-unit>
        <trans-unit id="13b4c313c53ce999997969a2a1da623479829206" translate="yes" xml:space="preserve">
          <source>The following options can be used to &lt;a href=&quot;footprint&quot;&gt;reduce the size of the compiled library&lt;/a&gt; by omitting unused features. This is probably only useful in embedded systems where space is especially tight, as even with all features included the SQLite library is relatively small. Don't forget to tell your compiler to optimize for binary size! (the -Os option if using GCC). Telling your compiler to optimize for size usually has a much larger impact on library footprint than employing any of these compile-time options. You should also verify that &lt;a href=&quot;#debugoptions&quot;&gt;debugging options&lt;/a&gt; are disabled.</source>
          <target state="translated">Следующие параметры можно использовать для &lt;a href=&quot;footprint&quot;&gt;уменьшения размера скомпилированной библиотеки за&lt;/a&gt; счет исключения неиспользуемых функций. Это, вероятно, полезно только во встроенных системах, где места особенно мало, поскольку даже со всеми включенными функциями библиотека SQLite относительно мала. Не забудьте указать компилятору оптимизировать двоичный размер! (параметр -Os при использовании GCC). Указание компилятору оптимизировать размер обычно оказывает гораздо большее влияние на размер библиотеки, чем использование любого из этих параметров времени компиляции. Вы также должны убедиться, что &lt;a href=&quot;#debugoptions&quot;&gt;параметры отладки&lt;/a&gt; отключены.</target>
        </trans-unit>
        <trans-unit id="aa7c844b688230c89a2857560379c0f551e0b077" translate="yes" xml:space="preserve">
          <source>The following query computes an approximation of the Mandelbrot Set and outputs the result as ASCII-art:</source>
          <target state="translated">Следующий запрос вычисляет аппроксимацию Mandelbrot Set и выводит результат в виде ASCII-art:</target>
        </trans-unit>
        <trans-unit id="165c7c17f77322908874e60dfb0fb76218a06202" translate="yes" xml:space="preserve">
          <source>The following query parameters are recognized by SQLite as of &lt;a href=&quot;https://sqlite.org/releaselog/3_15_0.html&quot;&gt;version 3.15.0&lt;/a&gt; (2016-10-14). New query parameters might be added in the future.</source>
          <target state="translated">Следующие параметры запроса распознаются SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_15_0.html&quot;&gt;начиная с версии 3.15.0&lt;/a&gt; (2016-10-14). В будущем могут быть добавлены новые параметры запроса.</target>
        </trans-unit>
        <trans-unit id="482aaeeca1acb6ff828caa9e341d537cef50e256" translate="yes" xml:space="preserve">
          <source>The following query returns all integers between 1 and 1000000:</source>
          <target state="translated">Следующий запрос возвращает все целые числа от 1 до 1000000:</target>
        </trans-unit>
        <trans-unit id="df61dccd4718a46758145386ef91e3af7a125626" translate="yes" xml:space="preserve">
          <source>The following requirements describe step 1 of the above procedure in more detail.</source>
          <target state="translated">Следующие требования более подробно описывают этап 1 вышеописанной процедуры.</target>
        </trans-unit>
        <trans-unit id="c7e0a9c1d2e39a35866f813a7b58e616f8a0dfa1" translate="yes" xml:space="preserve">
          <source>The following requirements describe step 2 of the above procedure in more detail.</source>
          <target state="translated">Следующие требования более подробно описывают этап 2 вышеуказанной процедуры.</target>
        </trans-unit>
        <trans-unit id="ab60a1fc45053970e49cb2236072b7574ce682f2" translate="yes" xml:space="preserve">
          <source>The following requirements describe step 3 of the above procedure in more detail.</source>
          <target state="translated">Следующие требования более подробно описывают 3-й этап вышеуказанной процедуры.</target>
        </trans-unit>
        <trans-unit id="0f5ce0f453d6b71b276dab07b31a916fac2ad143" translate="yes" xml:space="preserve">
          <source>The following requirements describe step 4 of the above procedure in more detail.</source>
          <target state="translated">Следующие требования более подробно описывают 4-й этап вышеуказанной процедуры.</target>
        </trans-unit>
        <trans-unit id="ff1604c4fd7473773943aa62c8883c18d8179ef1" translate="yes" xml:space="preserve">
          <source>The following requirements describe the steps enumerated above in more detail.</source>
          <target state="translated">Следующие требования более подробно описывают вышеперечисленные шаги.</target>
        </trans-unit>
        <trans-unit id="ca6589a3a75bae1a771049671e8297b9c43f424f" translate="yes" xml:space="preserve">
          <source>The following restrictions apply to DELETE statements that occur within the body of a &lt;a href=&quot;lang_createtrigger&quot;&gt;CREATE TRIGGER&lt;/a&gt; statement:</source>
          <target state="translated">Следующие ограничения применяются к операторам DELETE, которые встречаются в теле оператора &lt;a href=&quot;lang_createtrigger&quot;&gt;CREATE TRIGGER&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1404887613e3d3d478c15bfa20064138fe1f758d" translate="yes" xml:space="preserve">
          <source>The following routines are used to implement user-defined collating sequences:</source>
          <target state="translated">Следующие процедуры используются для реализации заданных пользователем коллизионных последовательностей:</target>
        </trans-unit>
        <trans-unit id="9d61d2cb84c2da7119bdaa99ad1c2d7a32c4afe9" translate="yes" xml:space="preserve">
          <source>The following rules and caveats apply to the values specified as part of each INSERT statement:</source>
          <target state="translated">Следующие правила и предостережения применяются к значениям,указанным в каждом утверждении INSERT:</target>
        </trans-unit>
        <trans-unit id="a26a29856749163d9eb4f80a667633bb87f813e9" translate="yes" xml:space="preserve">
          <source>The following rules show how each of the locks is used.</source>
          <target state="translated">Следующие правила показывают,как используется каждый из замков.</target>
        </trans-unit>
        <trans-unit id="737ea9fa3e70c97a0a7b4c9228ebcdc9127f52cb" translate="yes" xml:space="preserve">
          <source>The following scenario illustrates how an SQLITE_BUSY_SNAPSHOT error might arise:</source>
          <target state="translated">Следующий сценарий иллюстрирует,как может возникнуть ошибка SQLITE_BUSY_SNAPSHOT:</target>
        </trans-unit>
        <trans-unit id="4840312a4c02316c9bb1b228254597da9db65628" translate="yes" xml:space="preserve">
          <source>The following script was used to gather information for the table above.</source>
          <target state="translated">Для сбора информации для вышеприведенной таблицы был использован следующий скрипт.</target>
        </trans-unit>
        <trans-unit id="5f95a6062676138baa336da2cd5b1ec87382d19c" translate="yes" xml:space="preserve">
          <source>The following section describes the API offered to auxiliary function implementations in detail. Further examples may be found in the &quot;fts5_aux.c&quot; file of the source code.</source>
          <target state="translated">В следующем разделе подробно описывается API,предлагаемый для реализации вспомогательных функций.Дальнейшие примеры можно найти в файле исходного кода &quot;fts5_aux.c&quot;.</target>
        </trans-unit>
        <trans-unit id="c91d01efc0ba3649e7eacbf59f700342ec3a53a5" translate="yes" xml:space="preserve">
          <source>The following sections describe some low-level details of the R*Tree implementation, that might be useful for trouble-shooting or performance analysis.</source>
          <target state="translated">В следующих разделах описываются некоторые низкоуровневые детали реализации R*Tree,которые могут быть полезны для поиска неисправностей или анализа производительности.</target>
        </trans-unit>
        <trans-unit id="17e43452198f5289d975fb07abeb874782ed48a0" translate="yes" xml:space="preserve">
          <source>The following sections describe the supported parameters. Specifying an unrecognized parameter name is an error.</source>
          <target state="translated">В следующих разделах описаны поддерживаемые параметры.Указание имени нераспознанного параметра является ошибкой.</target>
        </trans-unit>
        <trans-unit id="009cc36fd7239429da331a5197a208b717cdb22a" translate="yes" xml:space="preserve">
          <source>The following sections provide additional detail on the operation of the various functions that are part of the json1 extension.</source>
          <target state="translated">В следующих разделах приводятся дополнительные сведения о работе различных функций,входящих в состав json1-расширения.</target>
        </trans-unit>
        <trans-unit id="0b996a91eae66dcc3a2860511963eb7fa7efc7eb" translate="yes" xml:space="preserve">
          <source>The following syntax documentation topics are available:</source>
          <target state="translated">Доступны следующие темы синтаксической документации:</target>
        </trans-unit>
        <trans-unit id="0e5fa08cf1724f31556de517effc85351bb377ec" translate="yes" xml:space="preserve">
          <source>The following table shows how many common datatype names from more traditional SQL implementations are converted into affinities by the five rules of the previous section. This table shows only a small subset of the datatype names that SQLite will accept. Note that numeric arguments in parentheses that following the type name (ex: &quot;VARCHAR(255)&quot;) are ignored by SQLite - SQLite does not impose any length restrictions (other than the large global &lt;a href=&quot;limits#max_length&quot;&gt;SQLITE_MAX_LENGTH&lt;/a&gt; limit) on the length of strings, BLOBs or numeric values.</source>
          <target state="translated">В следующей таблице показано, сколько общих имен типов данных из более традиционных реализаций SQL преобразовано в аффинности по пяти правилам из предыдущего раздела. В этой таблице показано только небольшое подмножество имен типов данных, которые принимает SQLite. Обратите внимание, что числовые аргументы в круглых скобках, следующие за именем типа (например: &amp;laquo;VARCHAR (255)&amp;raquo;), игнорируются SQLite - SQLite не налагает никаких ограничений длины (кроме большого глобального ограничения &lt;a href=&quot;limits#max_length&quot;&gt;SQLITE_MAX_LENGTH&lt;/a&gt; ) на длину строк, BLOB-объектов или числовые значения.</target>
        </trans-unit>
        <trans-unit id="54c0ab33937bb3d0205754132a184edc97ac8f8b" translate="yes" xml:space="preserve">
          <source>The following table shows the meanings of the (non-hidden) columns of DBSTAT in both normal and aggregated mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54feeefe0d9e52f7880c035de3af5b0398710d6a" translate="yes" xml:space="preserve">
          <source>The following table shows the results of the NULL handling experiments.</source>
          <target state="translated">В следующей таблице приведены результаты экспериментов по работе с NULL.</target>
        </trans-unit>
        <trans-unit id="12e0a00ef75b703780c84d1074e0287b2f403501" translate="yes" xml:space="preserve">
          <source>The following table summarizes the SQLite file format changes that have occurred since version 1.0.0:</source>
          <target state="translated">В следующей таблице представлены изменения формата файлов SQLite,произошедшие с версии 1.0.0:</target>
        </trans-unit>
        <trans-unit id="ea82e2bbe8fed4a7a8a0361c062cdbf2a7cb2e1f" translate="yes" xml:space="preserve">
          <source>The following two objects and eight methods comprise the essential elements of the SQLite interface:</source>
          <target state="translated">Следующие два объекта и восемь методов составляют основные элементы интерфейса SQLite:</target>
        </trans-unit>
        <trans-unit id="1b3057a8ce2692f0addf4973e487586ba5e334ab" translate="yes" xml:space="preserve">
          <source>The foregoing is all one really needs to know in order to use SQLite effectively. All the rest is optimization and detail.</source>
          <target state="translated">Все вышесказанное действительно необходимо знать,чтобы эффективно использовать SQLite.Все остальное-оптимизация и детализация.</target>
        </trans-unit>
        <trans-unit id="75a22928178fbb3c0cbb048a8ad2cc0d5b3170b7" translate="yes" xml:space="preserve">
          <source>The foregoing text describes low-level aspects of the SQLite file format. The b-tree mechanism provides a powerful and efficient means of accessing a large data set. This section will describe how the low-level b-tree layer is used to implement higher-level SQL capabilities.</source>
          <target state="translated">Приведенный выше текст описывает низкоуровневые аспекты формата файлов SQLite.Механизм b-дерева обеспечивает мощное и эффективное средство доступа к большому массиву данных.В данном разделе будет описано,как низкоуровневый b-деревовидный слой используется для реализации возможностей SQL более высокого уровня.</target>
        </trans-unit>
        <trans-unit id="12199f4a726aab3fb6304db80ece6cf69a955319" translate="yes" xml:space="preserve">
          <source>The foreign key constraint is satisfied if for each row in the child table either one or more of the child key columns are NULL, or there exists a row in the parent table for which each parent key column contains a value equal to the value in its associated child key column.</source>
          <target state="translated">Ограничение постороннего ключа удовлетворяется,если для каждой строки в дочерней таблице либо один или несколько столбцов дочернего ключа NULL,либо существует строка в родительской таблице,для которой каждый столбец родительского ключа содержит значение,равное значению в связанном с ним столбце дочернего ключа.</target>
        </trans-unit>
        <trans-unit id="7eb5b173b9130668a2a0b17e4f207640eaa017f0" translate="yes" xml:space="preserve">
          <source>The foreign key constraints created as part of tables</source>
          <target state="translated">Иностранные ключевые ограничения,созданные в рамках таблиц</target>
        </trans-unit>
        <trans-unit id="add6cc21a0d1ec9f3c982acde6cc5dc3f05465f0" translate="yes" xml:space="preserve">
          <source>The foreign_key_check pragma checks the database, or the table called &quot;</source>
          <target state="translated">Foreign_key_check прагма проверяет базу данных,или таблицу с именем &quot;</target>
        </trans-unit>
        <trans-unit id="9efc16f15cca4547a2a6b1e6f0aea092764cfc35" translate="yes" xml:space="preserve">
          <source>The formalized assumptions in this section refer to</source>
          <target state="translated">Формализованные допущения в этом разделе относятся к</target>
        </trans-unit>
        <trans-unit id="fe9496c466bbe179ee18ac47ed69a346233c9cbd" translate="yes" xml:space="preserve">
          <source>The format for sqlite_stat2 is recorded here for legacy reference. Recent versions of SQLite no longer support sqlite_stat2 and the sqlite_stat2 table, if is exists, is simply ignored.</source>
          <target state="translated">Формат sqlite_stat2 записан здесь для справки по наследству.Последние версии SQLite больше не поддерживают sqlite_stat2 и таблица sqlite_stat2,если она существует,просто игнорируется.</target>
        </trans-unit>
        <trans-unit id="d2a469c667d3464f2b4b57e3f59fb88c3da53ff2" translate="yes" xml:space="preserve">
          <source>The format of a cell depends on which kind of b-tree page the cell appears on. The following table shows the elements of a cell, in order of appearance, for the various b-tree page types.</source>
          <target state="translated">Формат ячейки зависит от того,на какой b-деревянной странице появляется ячейка.В следующей таблице приведены элементы ячейки в порядке их внешнего вида для различных типов b-деревянных страниц.</target>
        </trans-unit>
        <trans-unit id="8f6ebed1965bbd7f7af8c4c0949451b7c054d06f" translate="yes" xml:space="preserve">
          <source>The format of the arguments to the module is very general. Each module-argument may contain keywords, string literals, identifiers, numbers, and punctuation. Each module-argument is passed as written (as text) into the &lt;a href=&quot;vtab#xcreate&quot;&gt;constructor method&lt;/a&gt; of the virtual table implementation when the virtual table is created and that constructor is responsible for parsing and interpreting the arguments. The argument syntax is sufficiently general that a virtual table implementation can, if it wants to, interpret its arguments as &lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;column definitions&lt;/a&gt; in an ordinary &lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt; statement. The implementation could also impose some other interpretation on the arguments.</source>
          <target state="translated">Формат аргументов модуля очень общий. Каждый аргумент модуля может содержать ключевые слова, строковые литералы, идентификаторы, числа и знаки препинания. Каждый аргумент модуля передается так, как написано (как текст), в &lt;a href=&quot;vtab#xcreate&quot;&gt;метод&lt;/a&gt; конструктора реализации виртуальной таблицы при создании виртуальной таблицы, и этот конструктор отвечает за синтаксический анализ и интерпретацию аргументов. Синтаксис аргументов достаточно общий, чтобы реализация виртуальной таблицы могла, если захочет, интерпретировать свои аргументы как &lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;определения столбцов&lt;/a&gt; в обычном операторе &lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt; . Реализация может также наложить другую интерпретацию аргументов.</target>
        </trans-unit>
        <trans-unit id="ce6813c51545b0e36cbda5b5ae9abe31c78f2212" translate="yes" xml:space="preserve">
          <source>The format of the main database file is as described in the &lt;a href=&quot;fileformat2&quot;&gt;file format&lt;/a&gt; document. The &lt;a href=&quot;fileformat2#vnums&quot;&gt;file format version numbers&lt;/a&gt; at offsets 18 and 19 into the main database must both be 2 to indicate that the database is in WAL mode. The main database may have an arbitrary name allowed by the underlying filesystem. No special file suffixes are required, though &quot;.db&quot;, &quot;.sqlite&quot;, and &quot;.sqlite3&quot; seem to be popular choices.</source>
          <target state="translated">Формат основного файла базы данных описан в документе о &lt;a href=&quot;fileformat2&quot;&gt;формате файла&lt;/a&gt; . Номера &lt;a href=&quot;fileformat2#vnums&quot;&gt;версий формата файлов&lt;/a&gt; на смещениях 18 и 19 в основной базе данных должны быть равны 2, чтобы указать, что база данных находится в режиме WAL. Основная база данных может иметь произвольное имя, разрешенное базовой файловой системой. Никаких специальных файловых суффиксов не требуется, хотя &quot;.db&quot;, &quot;.sqlite&quot; и &quot;.sqlite3&quot; кажутся популярными.</target>
        </trans-unit>
        <trans-unit id="c748249cfa33fdfdfb8560eb0a7a2d06c6a7130e" translate="yes" xml:space="preserve">
          <source>The format string for printf() is a template for the generated string. Substitutions are made whenever a &quot;%&quot; character appears in the format string. The &quot;%&quot; is followed by one or more additional characters that describe the substitution. Each substitution has the following format:</source>
          <target state="translated">Строка формата для функции printf()является шаблоном для сгенерированной строки.Замены производятся всякий раз,когда в строке форматирования появляется символ &quot;%&quot;.За &quot;%&quot; следует один или несколько дополнительных символов,описывающих подстановку.Каждая замена имеет следующий формат:</target>
        </trans-unit>
        <trans-unit id="e5481902d614e43b8906fc140d4dc2a9c7914623" translate="yes" xml:space="preserve">
          <source>The format used by SQLite database files has been completely revised. The old version 2.1 format and the new 3.0 format are incompatible with one another. Version 2.8 of SQLite will not read a version 3.0 database files and version 3.0 of SQLite will not read a version 2.8 database file.</source>
          <target state="translated">Формат,используемый файлами базы данных SQLite,был полностью пересмотрен.Старая версия 2.1 и новый формат 3.0 несовместимы друг с другом.Версия 2.8 SQLite не будет читать файлы баз данных версии 3.0 и версия 3.0 SQLite не будет читать файл базы данных версии 2.8.</target>
        </trans-unit>
        <trans-unit id="a376c207dbbf638ec2db0cb626e4c46931a236b1" translate="yes" xml:space="preserve">
          <source>The fossil delta format may only be used to update BLOB values. Instead of storing the new BLOB within the data_% table, the fossil delta is stored instead. And instead of specifying an 'x' as part of the rbu_control string for the column to be updated, an 'f' character is stored. When processing an 'f' update, RBU loads the original BLOB data from disk, applies the fossil delta to it and stores the results back into the database file. The RBU databases generated by &lt;a href=&quot;rbu#sqldiff&quot;&gt;sqldiff --rbu&lt;/a&gt; make use of fossil deltas wherever doing so would save space in the RBU database.</source>
          <target state="translated">Формат ископаемой дельты можно использовать только для обновления значений BLOB. Вместо того, чтобы хранить новый BLOB в таблице data_%, вместо этого сохраняется ископаемая дельта. И вместо указания &amp;laquo;x&amp;raquo; как части строки rbu_control для обновляемого столбца сохраняется символ &amp;laquo;f&amp;raquo;. При обработке обновления &amp;laquo;f&amp;raquo; RBU загружает исходные данные BLOB с диска, применяет к ним ископаемую дельту и сохраняет результаты обратно в файл базы данных. Базы данных RBU, созданные с помощью &lt;a href=&quot;rbu#sqldiff&quot;&gt;sqldiff --rbu,&lt;/a&gt; используют дельты ископаемых везде, где это может сэкономить место в базе данных RBU.</target>
        </trans-unit>
        <trans-unit id="23a39933682f9054d9fbfd81554ffb9e23300f95" translate="yes" xml:space="preserve">
          <source>The founder of SQLite and all current developers have pledged to follow spirit of The Rule to the best of their ability. They view The Rule as their promise to all SQLite users of how the developers are expected to behave in community. This is a one-way promise, or covenant. In other words, the developers are saying: &quot;We will treat you this way regardless of how you treat us.&quot;</source>
          <target state="translated">Основатель SQLite и все нынешние разработчики пообещали следовать духу Правила в меру своих возможностей.Они рассматривают это правило как свое обещание всем пользователям SQLite о том,как разработчики должны вести себя в сообществе.Это одностороннее обещание,или соглашение.Другими словами,разработчики говорят:&quot;Мы будем относиться к вам так,независимо от того,как вы к нам относитесь&quot;.</target>
        </trans-unit>
        <trans-unit id="fac57078ba906f356fde5d5be039fc86e66f550e" translate="yes" xml:space="preserve">
          <source>The founder of SQLite, and all of the current developers at the time when this document was composed, have pledged to govern their interactions with each other, with their clients, and with the larger SQLite user community in accordance with the &quot;instruments of good works&quot; from chapter 4 of &lt;a href=&quot;https://en.wikipedia.org/wiki/Rule_of_Saint_Benedict&quot;&gt;The Rule of St. Benedict&lt;/a&gt; (hereafter: &quot;The Rule&quot;). This code of ethics has proven its mettle in thousands of diverse communities for over 1,500 years, and has served as a baseline for many civil law codes since the time of Charlemagne.</source>
          <target state="translated">Основатель SQLite и все текущие разработчики на момент написания этого документа пообещали управлять своим взаимодействием друг с другом, со своими клиентами и с большим сообществом пользователей SQLite в соответствии с &amp;laquo;инструментами добрых дел&amp;raquo;. &quot;из главы 4 &lt;a href=&quot;https://en.wikipedia.org/wiki/Rule_of_Saint_Benedict&quot;&gt;Правил св. Бенедикта&lt;/a&gt; (далее:&quot; Правило &quot;). Этот этический кодекс доказал свою стойкость в тысячах различных сообществ на протяжении более 1500 лет и служил базой для многих кодексов гражданского права со времен Карла Великого.</target>
        </trans-unit>
        <trans-unit id="555d8586503882b041c2a8a309c2f9e999580160" translate="yes" xml:space="preserve">
          <source>The four utility functions</source>
          <target state="translated">Четыре функции полезности</target>
        </trans-unit>
        <trans-unit id="6cfb5a37e3c4d212e2442aae712218c04b105dd5" translate="yes" xml:space="preserve">
          <source>The four-byte page number at offset 8 is the right-most pointer. This value appears in the header of interior b-tree pages only and is omitted from all other pages.</source>
          <target state="translated">Четырехбайтовый номер страницы со смещением 8 является самым правым указателем.Это значение отображается только в заголовке внутренних страниц b-дерева и опускается со всех остальных страниц.</target>
        </trans-unit>
        <trans-unit id="76f618a5029c6002ebdae975ee6043d888618d19" translate="yes" xml:space="preserve">
          <source>The fourth argument (xFilter) passed to these functions is the &quot;filter callback&quot;. If it is not NULL, then for each table affected by at least one change in the changeset, the filter callback is invoked with the table name as the second argument, and a copy of the context pointer passed as the sixth argument as the first. If the &quot;filter callback&quot; returns zero, then no attempt is made to apply any changes to the table. Otherwise, if the return value is non-zero or the xFilter argument to is NULL, all changes related to the table are attempted.</source>
          <target state="translated">Четвертый аргумент (xFilter),переданный этим функциям-&quot;обратный вызов фильтра&quot;.Если он не NULL,то для каждой таблицы,на которую повлияло хотя бы одно изменение в changeset,вызывается фильтр обратного вызова с именем таблицы в качестве второго аргумента,а в качестве первого аргумента передается копия указателя контекста,переданного в качестве шестого аргумента.Если &quot;filter callback&quot; возвращает ноль,то никаких попыток применить изменения к таблице не предпринимается.В противном случае,если возвращаемое значение ненулевое или аргумент xFilter равен NULL,все изменения,связанные с таблицей,пытаться не будут.</target>
        </trans-unit>
        <trans-unit id="999f04c49ef94f8766fa9cb6bb9bbba18afe2ece" translate="yes" xml:space="preserve">
          <source>The fourth argument, pArg, is an application data pointer that is passed through as the first argument to the collating function callback.</source>
          <target state="translated">Четвертый аргумент,pArg,является указателем на данные приложения,который передается в качестве первого аргумента на обратный вызов коллабораторной функции.</target>
        </trans-unit>
        <trans-unit id="c6b1934196a189db01281779b0c51a4b66faf522" translate="yes" xml:space="preserve">
          <source>The fourth column is the maximum value of any rowid in the table.</source>
          <target state="translated">Четвертый столбец-это максимальное значение любой строки таблицы.</target>
        </trans-unit>
        <trans-unit id="69cc3b7ae5b0c474135cb2e440fa03951919eaf0" translate="yes" xml:space="preserve">
          <source>The fourth parameter may also optionally include the &lt;a href=&quot;#SQLITE_DETERMINISTIC&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; flag, which if present prevents the function from being invoked from within VIEWs or TRIGGERs. For security reasons, the &lt;a href=&quot;#SQLITE_DETERMINISTIC&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; flag is recommended for any application-defined SQL function that has side-effects.</source>
          <target state="translated">Четвертый параметр может также дополнительно включать флаг &lt;a href=&quot;#SQLITE_DETERMINISTIC&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; , который, если он присутствует, предотвращает вызов функции из VIEW или TRIGGER. По соображениям безопасности флаг &lt;a href=&quot;#SQLITE_DETERMINISTIC&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; рекомендуется для любой определяемой приложением функции SQL, имеющей побочные эффекты.</target>
        </trans-unit>
        <trans-unit id="c1fbaaa3083276ec5194db2d1a793d5691751026" translate="yes" xml:space="preserve">
          <source>The fourth parameter may also optionally include the &lt;a href=&quot;#sqlitedirectonly&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; flag, which if present prevents the function from being invoked from within VIEWs, TRIGGERs, CHECK constraints, generated column expressions, index expressions, or the WHERE clause of partial indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52c4099bf56a2a098b10ec045515f7e30e89130" translate="yes" xml:space="preserve">
          <source>The fourth parameter may also optionally include the &lt;a href=&quot;c_deterministic&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; flag, which if present prevents the function from being invoked from within VIEWs or TRIGGERs. For security reasons, the &lt;a href=&quot;c_deterministic&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; flag is recommended for any application-defined SQL function that has side-effects.</source>
          <target state="translated">Четвертый параметр может также дополнительно включать флаг &lt;a href=&quot;c_deterministic&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; , который, если он присутствует, предотвращает вызов функции из VIEW или TRIGGER. По соображениям безопасности флаг &lt;a href=&quot;c_deterministic&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; рекомендуется для любой определяемой приложением функции SQL, имеющей побочные эффекты.</target>
        </trans-unit>
        <trans-unit id="67ad2195f1817b78a8b4837501855037b255117b" translate="yes" xml:space="preserve">
          <source>The fourth parameter may also optionally include the &lt;a href=&quot;c_deterministic#sqlitedirectonly&quot;&gt;SQLITE_DIRECTONLY&lt;/a&gt; flag, which if present prevents the function from being invoked from within VIEWs, TRIGGERs, CHECK constraints, generated column expressions, index expressions, or the WHERE clause of partial indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649add83c8043b4bf2ea6e4b6cf49a7fdf941dff" translate="yes" xml:space="preserve">
          <source>The fourth parameter may optionally be ORed with &lt;a href=&quot;#SQLITE_DETERMINISTIC&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt; to signal that the function will always return the same result given the same inputs within a single SQL statement. Most SQL functions are deterministic. The built-in &lt;a href=&quot;lang_corefunc#random&quot;&gt;random()&lt;/a&gt; SQL function is an example of a function that is not deterministic. The SQLite query planner is able to perform additional optimizations on deterministic functions, so use of the &lt;a href=&quot;#SQLITE_DETERMINISTIC&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt; flag is recommended where possible.</source>
          <target state="translated">Четвертый параметр может при желании быть &lt;a href=&quot;#SQLITE_DETERMINISTIC&quot;&gt;объединен&lt;/a&gt; оператором ИЛИ с SQLITE_DETERMINISTIC, чтобы сигнализировать, что функция всегда будет возвращать один и тот же результат при одинаковых входных данных в одном операторе SQL. Большинство функций SQL детерминированы. Встроенная функция SQL &lt;a href=&quot;lang_corefunc#random&quot;&gt;random ()&lt;/a&gt; является примером недетерминированной функции. Планировщик запросов SQLite может выполнять дополнительную оптимизацию детерминированных функций, поэтому по &lt;a href=&quot;#SQLITE_DETERMINISTIC&quot;&gt;возможности&lt;/a&gt; рекомендуется использовать флаг SQLITE_DETERMINISTIC .</target>
        </trans-unit>
        <trans-unit id="6481c8ccbbe2254925779028e6672b2de9b23312" translate="yes" xml:space="preserve">
          <source>The fourth parameter may optionally be ORed with &lt;a href=&quot;#sqlitedeterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt; to signal that the function will always return the same result given the same inputs within a single SQL statement. Most SQL functions are deterministic. The built-in &lt;a href=&quot;lang_corefunc#random&quot;&gt;random()&lt;/a&gt; SQL function is an example of a function that is not deterministic. The SQLite query planner is able to perform additional optimizations on deterministic functions, so use of the &lt;a href=&quot;#sqlitedeterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt; flag is recommended where possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658cc43bdf2652e8cf4b2cffdcf6459b264f185d" translate="yes" xml:space="preserve">
          <source>The fourth parameter may optionally be ORed with &lt;a href=&quot;c_deterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt; to signal that the function will always return the same result given the same inputs within a single SQL statement. Most SQL functions are deterministic. The built-in &lt;a href=&quot;../lang_corefunc#random&quot;&gt;random()&lt;/a&gt; SQL function is an example of a function that is not deterministic. The SQLite query planner is able to perform additional optimizations on deterministic functions, so use of the &lt;a href=&quot;c_deterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt; flag is recommended where possible.</source>
          <target state="translated">Четвертый параметр может при желании быть &lt;a href=&quot;c_deterministic&quot;&gt;объединен&lt;/a&gt; оператором ИЛИ с SQLITE_DETERMINISTIC, чтобы сигнализировать, что функция всегда будет возвращать один и тот же результат при одинаковых входных данных в одном операторе SQL. Большинство функций SQL детерминированы. Встроенная функция SQL &lt;a href=&quot;../lang_corefunc#random&quot;&gt;random ()&lt;/a&gt; является примером недетерминированной функции. Планировщик запросов SQLite может выполнять дополнительную оптимизацию детерминированных функций, поэтому по &lt;a href=&quot;c_deterministic&quot;&gt;возможности&lt;/a&gt; рекомендуется использовать флаг SQLITE_DETERMINISTIC .</target>
        </trans-unit>
        <trans-unit id="7980c4f3a8ec7ae6d00b95c7cb68067b43db4da9" translate="yes" xml:space="preserve">
          <source>The fourth parameter may optionally be ORed with &lt;a href=&quot;c_deterministic#sqlitedeterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt; to signal that the function will always return the same result given the same inputs within a single SQL statement. Most SQL functions are deterministic. The built-in &lt;a href=&quot;../lang_corefunc#random&quot;&gt;random()&lt;/a&gt; SQL function is an example of a function that is not deterministic. The SQLite query planner is able to perform additional optimizations on deterministic functions, so use of the &lt;a href=&quot;c_deterministic#sqlitedeterministic&quot;&gt;SQLITE_DETERMINISTIC&lt;/a&gt; flag is recommended where possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feefd1b9ff1b8c4a1a74b3c8f0c879ca3de261f9" translate="yes" xml:space="preserve">
          <source>The fourth parameter to sqlite3_open_v2() is the name of the &lt;a href=&quot;#sqlite3_vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object that defines the operating system interface that the new database connection should use. If the fourth parameter is a NULL pointer then the default &lt;a href=&quot;#sqlite3_vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object is used.</source>
          <target state="translated">Четвертый параметр sqlite3_open_v2 () - это имя объекта &lt;a href=&quot;#sqlite3_vfs&quot;&gt;sqlite3_vfs,&lt;/a&gt; который определяет интерфейс операционной системы, который должно использовать новое соединение с базой данных. Если четвертым параметром является указатель NULL, тогда используется объект &lt;a href=&quot;#sqlite3_vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; по умолчанию .</target>
        </trans-unit>
        <trans-unit id="b7bbbda582299a1f3186b36dde756d304b0fa7e6" translate="yes" xml:space="preserve">
          <source>The fourth parameter to sqlite3_open_v2() is the name of the &lt;a href=&quot;vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object that defines the operating system interface that the new database connection should use. If the fourth parameter is a NULL pointer then the default &lt;a href=&quot;vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object is used.</source>
          <target state="translated">Четвертый параметр sqlite3_open_v2 () - это имя объекта &lt;a href=&quot;vfs&quot;&gt;sqlite3_vfs,&lt;/a&gt; который определяет интерфейс операционной системы, который должно использовать новое соединение с базой данных. Если четвертым параметром является указатель NULL, тогда используется объект &lt;a href=&quot;vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; по умолчанию .</target>
        </trans-unit>
        <trans-unit id="d063d165e08786a1b7ee913cfa396d1655f4a730" translate="yes" xml:space="preserve">
          <source>The fourth parameter, eTextRep, specifies what &lt;a href=&quot;#SQLITE_ANY&quot;&gt;text encoding&lt;/a&gt; this SQL function prefers for its parameters. The application should set this parameter to &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16LE&lt;/a&gt; if the function implementation invokes &lt;a href=&quot;#sqlite3_value_blob&quot;&gt;sqlite3_value_text16le()&lt;/a&gt; on an input, or &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16BE&lt;/a&gt; if the implementation invokes &lt;a href=&quot;#sqlite3_value_blob&quot;&gt;sqlite3_value_text16be()&lt;/a&gt; on an input, or &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16&lt;/a&gt; if &lt;a href=&quot;#sqlite3_value_blob&quot;&gt;sqlite3_value_text16()&lt;/a&gt; is used, or &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF8&lt;/a&gt; otherwise. The same SQL function may be registered multiple times using different preferred text encodings, with different implementations for each encoding. When multiple implementations of the same function are available, SQLite will pick the one that involves the least amount of data conversion.</source>
          <target state="translated">Четвертый параметр, eTextRep, указывает, какую &lt;a href=&quot;#SQLITE_ANY&quot;&gt;кодировку текста&lt;/a&gt; эта функция SQL предпочитает для своих параметров. Приложение должно установить для этого параметра значение &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16LE,&lt;/a&gt; если реализация функции вызывает &lt;a href=&quot;#sqlite3_value_blob&quot;&gt;sqlite3_value_text16le ()&lt;/a&gt; на входе, или &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16BE,&lt;/a&gt; если реализация вызывает &lt;a href=&quot;#sqlite3_value_blob&quot;&gt;sqlite3_value_text16be ()&lt;/a&gt; на входе, или &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16,&lt;/a&gt; если используется &lt;a href=&quot;#sqlite3_value_blob&quot;&gt;sqlite3_value_text16 ()&lt;/a&gt; , или &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_value_text16 &lt;/a&gt;() , или SQLITE_UTF16BEв противном случае. Одна и та же функция SQL может быть зарегистрирована несколько раз с использованием различных предпочтительных текстовых кодировок с разными реализациями для каждой кодировки. Когда доступно несколько реализаций одной и той же функции, SQLite выберет ту, которая включает наименьший объем преобразования данных.</target>
        </trans-unit>
        <trans-unit id="57c66b621bee32c598b5cb9d09e4c1e1ae3f09dc" translate="yes" xml:space="preserve">
          <source>The fourth parameter, eTextRep, specifies what &lt;a href=&quot;c_any&quot;&gt;text encoding&lt;/a&gt; this SQL function prefers for its parameters. The application should set this parameter to &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16LE&lt;/a&gt; if the function implementation invokes &lt;a href=&quot;value_blob&quot;&gt;sqlite3_value_text16le()&lt;/a&gt; on an input, or &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16BE&lt;/a&gt; if the implementation invokes &lt;a href=&quot;value_blob&quot;&gt;sqlite3_value_text16be()&lt;/a&gt; on an input, or &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16&lt;/a&gt; if &lt;a href=&quot;value_blob&quot;&gt;sqlite3_value_text16()&lt;/a&gt; is used, or &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF8&lt;/a&gt; otherwise. The same SQL function may be registered multiple times using different preferred text encodings, with different implementations for each encoding. When multiple implementations of the same function are available, SQLite will pick the one that involves the least amount of data conversion.</source>
          <target state="translated">Четвертый параметр, eTextRep, указывает, какую &lt;a href=&quot;c_any&quot;&gt;кодировку текста&lt;/a&gt; эта функция SQL предпочитает для своих параметров. Приложение должно установить для этого параметра значение &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16LE,&lt;/a&gt; если реализация функции вызывает &lt;a href=&quot;value_blob&quot;&gt;sqlite3_value_text16le ()&lt;/a&gt; на входе, или &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16BE,&lt;/a&gt; если реализация вызывает &lt;a href=&quot;value_blob&quot;&gt;sqlite3_value_text16be ()&lt;/a&gt; на входе, или &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16,&lt;/a&gt; если используется &lt;a href=&quot;value_blob&quot;&gt;sqlite3_value_text16 ()&lt;/a&gt; , или &lt;a href=&quot;c_any&quot;&gt;SQLITE_value_text16 &lt;/a&gt;() , или SQLITE_UTF16BEв противном случае. Одна и та же функция SQL может быть зарегистрирована несколько раз с использованием различных предпочтительных текстовых кодировок с разными реализациями для каждой кодировки. Когда доступно несколько реализаций одной и той же функции, SQLite выберет ту, которая включает наименьший объем преобразования данных.</target>
        </trans-unit>
        <trans-unit id="cdeeaf74a0034cfafd692646911468eeef688545" translate="yes" xml:space="preserve">
          <source>The fragment is optional. If present, it is ignored.</source>
          <target state="translated">Фрагмент необязателен.Если присутствует,то он игнорируется.</target>
        </trans-unit>
        <trans-unit id="36f14f55d888327ce43d396d69903a3ff7fd8e07" translate="yes" xml:space="preserve">
          <source>The frame boundary is the first row in the &lt;a href=&quot;windowfunctions#ptxn&quot;&gt;partition&lt;/a&gt;.</source>
          <target state="translated">Граница кадра - это первая строка в &lt;a href=&quot;windowfunctions#ptxn&quot;&gt;разделе&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a03f5ecd3e39afb46315f6d23c888ecf09dac7b" translate="yes" xml:space="preserve">
          <source>The frame boundary is the last row in the &lt;a href=&quot;windowfunctions#ptxn&quot;&gt;partition&lt;/a&gt;.</source>
          <target state="translated">Граница рамки - это последняя строка в &lt;a href=&quot;windowfunctions#ptxn&quot;&gt;разделе&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8ad39ba6054748efcf881cf5f3cfd24dafacebd" translate="yes" xml:space="preserve">
          <source>The frame-spec determines which output rows are read by an aggregate window function. The frame-spec consists of four parts:</source>
          <target state="translated">Рамка-spec определяет,какие выходные строки считываются функцией агрегированного окна.Рамка-spec состоит из четырех частей:</target>
        </trans-unit>
        <trans-unit id="8eb0b0542bfd6ed405e2b53c332150eda864217a" translate="yes" xml:space="preserve">
          <source>The freelist is organized as a linked list of freelist trunk pages with each trunk page containing page numbers for zero or more freelist leaf pages.</source>
          <target state="translated">Фрилист организован в виде связанного списка страниц во фрилисте,в котором каждая страница во фрилисте содержит номера страниц для нулевых и более страниц во фрилисте.</target>
        </trans-unit>
        <trans-unit id="4faa37aa2595b1d3bc75280cd8996cd072597ac3" translate="yes" xml:space="preserve">
          <source>The fts3tokenize virtual table can be used on any tokenizer, regardless of whether or not there exists an FTS3 or FTS4 table that actually uses that tokenizer.</source>
          <target state="translated">Виртуальная таблица fts3tokenize может использоваться на любом токенайзере,независимо от того,существует ли таблица FTS3 или FTS4,которая на самом деле использует этот токенайзер.</target>
        </trans-unit>
        <trans-unit id="346445abda1b7582bb76e9ab2cc48bb753bf4d95" translate="yes" xml:space="preserve">
          <source>The fts5 unicode61 tokenizer is byte-for-byte compatible with the fts3/4 unicode61 tokenizer.</source>
          <target state="translated">Токенайзер fts5 unicode61 совместим с токенайзером fts3/4 unicode61 байт за байт.</target>
        </trans-unit>
        <trans-unit id="78675caf2de7d160a88a0d764272d7a44454db10" translate="yes" xml:space="preserve">
          <source>The fts5_api structure is defined as follows. It exposes three methods, one each for registering new auxiliary functions and tokenizers, and one for retrieving existing tokenizer. The latter is intended to facilitate the implementation of &quot;tokenizer wrappers&quot; similar to the built-in porter tokenizer.</source>
          <target state="translated">Структура fts5_api определяется следующим образом.Она раскрывает три метода,по одному для регистрации новых вспомогательных функций и токенайзеров,и по одному для извлечения существующих токенайзеров.Последний предназначен для облегчения реализации &quot;оберток токенайзера&quot; по аналогии со встроенным токенайзером портатора.</target>
        </trans-unit>
        <trans-unit id="162ffee085d8569c08bb1ab9fff2a388996d64c4" translate="yes" xml:space="preserve">
          <source>The fts5_api structure methods are described individually in the following sections.</source>
          <target state="translated">Методы структуры fts5_api описываются индивидуально в следующих разделах.</target>
        </trans-unit>
        <trans-unit id="10c372ee6826e322ad4396357787688e82cce472" translate="yes" xml:space="preserve">
          <source>The fts5vocab virtual table module allows users to extract information from an FTS5 full-text index directly. The fts5vocab module is a part of FTS5 - it is available whenever FTS5 is.</source>
          <target state="translated">Модуль виртуальной таблицы fts5vocab позволяет пользователям извлекать информацию из полнотекстового индекса FTS5 напрямую.Модуль fts5vocab является частью FTS5-он доступен всегда,когда FTS5.</target>
        </trans-unit>
        <trans-unit id="7f3f12f1d0cab297fd4ff2f20d0ccb7ef0778aa5" translate="yes" xml:space="preserve">
          <source>The full pathname of the database file is now remembered even if a relative path is passed into sqlite_open(). This allows the library to continue operating correctly after a chdir().</source>
          <target state="translated">Полное имя файла базы данных теперь запоминается,даже если в sqlite_open()передан относительный путь.Это позволяет библиотеке продолжить корректную работу после chdir().</target>
        </trans-unit>
        <trans-unit id="3b9a46ef2b67e207b1134faeedabd205f3bd8481" translate="yes" xml:space="preserve">
          <source>The full syntax for specifying foreign key constraints is available as part of the &lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt; documentation. Replacing the phrase above with any of the following creates an immediate foreign key constraint.</source>
          <target state="translated">Полный синтаксис для указания ограничений внешнего ключа доступен как часть документации &lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt; . Замена приведенной выше фразы любым из следующего создает немедленное ограничение внешнего ключа.</target>
        </trans-unit>
        <trans-unit id="976d387f058fd1530001e6bc24b270372cb7f6ff" translate="yes" xml:space="preserve">
          <source>The full-text index maintained by FTS5 is stored as a series of fixed-size blobs in a database table. It is not strictly necessary for all blobs that make up a full-text index to be the same size. The pgsz option determines the size of all blobs created by subsequent index writers. The default value is 1000.</source>
          <target state="translated">Полнотекстовый индекс,поддерживаемый FTS5,хранится в виде серии блоков фиксированного размера в таблице базы данных.Строго говоря,не обязательно,чтобы все блоки,составляющие полнотекстовый индекс,имели одинаковый размер.Опция pgsz определяет размер всех блоков,создаваемых последующими составителями индекса.Значение по умолчанию равно 1000.</target>
        </trans-unit>
        <trans-unit id="7d7917f6db9701130aeed21c2478cad3cdfc0903" translate="yes" xml:space="preserve">
          <source>The function name is specified in UTF-8. A separate sqlite3_create_function16() API works the same as sqlite_create_function() except that the function name is specified in UTF-16 host byte order.</source>
          <target state="translated">Имя функции указано в UTF-8.Отдельный API sqlite3_create_function16()работает так же,как sqlite_create_function(),за исключением того,что имя функции указывается в порядке байт на хосте UTF-16.</target>
        </trans-unit>
        <trans-unit id="026205ed147556f48d88752d5a21eccbd2a64b48" translate="yes" xml:space="preserve">
          <source>The function pointer returned by this routine must be valid for the lifetime of the &lt;a href=&quot;c3ref/vtab&quot;&gt;sqlite3_vtab&lt;/a&gt; object given in the first parameter.</source>
          <target state="translated">Указатель на функцию, возвращаемый этой подпрограммой, должен быть действителен в течение всего времени существования объекта &lt;a href=&quot;c3ref/vtab&quot;&gt;sqlite3_vtab,&lt;/a&gt; указанного в первом параметре.</target>
        </trans-unit>
        <trans-unit id="d5578e17f6c531f672841ef155dfdacbfa341e5d" translate="yes" xml:space="preserve">
          <source>The function presented in the previous example copies the entire source database in one call to &lt;a href=&quot;c3ref/backup_finish#sqlite3backupstep&quot;&gt;sqlite3_backup_step()&lt;/a&gt;. This requires holding a read-lock on the source database file for the duration of the operation, preventing any other database user from writing to the database. It also holds the mutex associated with database pInMemory throughout the copy, preventing any other thread from using it. The C function in this section, designed to be called by a background thread or process for creating a backup of an online database, avoids these problems using the following approach:</source>
          <target state="translated">Функция, представленная в предыдущем примере, копирует всю исходную базу данных за один вызов &lt;a href=&quot;c3ref/backup_finish#sqlite3backupstep&quot;&gt;sqlite3_backup_step ()&lt;/a&gt; . Для этого требуется удерживать блокировку чтения исходного файла базы данных на время операции, чтобы любой другой пользователь базы данных не мог писать в базу данных. Он также содержит мьютекс, связанный с базой данных pInMemory по всей копии, предотвращая его использование другими потоками. Функция C в этом разделе, предназначенная для вызова фоновым потоком или процессом для создания резервной копии онлайн-базы данных, позволяет избежать этих проблем, используя следующий подход:</target>
        </trans-unit>
        <trans-unit id="0137a1cc90b7f7f164b60d3e6a0abb13294403cf" translate="yes" xml:space="preserve">
          <source>The functionality provided by the fts4aux module is now provided by &lt;a href=&quot;fts5#the_fts5vocab_virtual_table_module&quot;&gt;fts5vocab&lt;/a&gt;. The schema of these two tables is slightly different.</source>
          <target state="translated">Функциональность, предоставляемая модулем fts4aux, теперь предоставляется &lt;a href=&quot;fts5#the_fts5vocab_virtual_table_module&quot;&gt;fts5vocab&lt;/a&gt; . Схема этих двух таблиц немного отличается.</target>
        </trans-unit>
        <trans-unit id="82f4a608941f31ed6516bc837d2ee3e175fc4792" translate="yes" xml:space="preserve">
          <source>The functionality required of each of the above functions is described in comments in sqlite3async.c.</source>
          <target state="translated">Функциональность,необходимая для каждой из вышеперечисленных функций,описана в комментариях в sqlite3async.c.</target>
        </trans-unit>
        <trans-unit id="a3e3ee73e4504a9b18df3710202691563a7ae8e5" translate="yes" xml:space="preserve">
          <source>The general purpose memory allocator is the most difficult memory pool to manage because it supports allocations of varying sizes. Since &lt;b&gt;n&lt;/b&gt; is a multiplier on &lt;b&gt;M&lt;/b&gt; we want to keep &lt;b&gt;n&lt;/b&gt; as small as possible. This argues for keeping the minimum allocation size for &lt;a href=&quot;malloc#memsys5&quot;&gt;memsys5&lt;/a&gt; as large as possible. In most applications, the &lt;a href=&quot;malloc#lookaside&quot;&gt;lookaside memory allocator&lt;/a&gt; is able to handle small allocations. So it is reasonable to set the minimum allocation size for &lt;a href=&quot;malloc#memsys5&quot;&gt;memsys5&lt;/a&gt; to 2, 4 or even 8 times the maximum size of a lookaside allocation. A minimum allocation size of 512 is a reasonable setting.</source>
          <target state="translated">Распределитель памяти общего назначения - это наиболее сложный пул памяти для управления, поскольку он поддерживает выделения различного размера. Поскольку &lt;b&gt;n&lt;/b&gt; является множителем на &lt;b&gt;M,&lt;/b&gt; мы хотим, чтобы &lt;b&gt;n было&lt;/b&gt; как можно меньше. Это аргумент в пользу сохранения минимального размера выделения для &lt;a href=&quot;malloc#memsys5&quot;&gt;memsys5&lt;/a&gt; как можно большего размера. В большинстве приложений &lt;a href=&quot;malloc#lookaside&quot;&gt;внешний распределитель памяти&lt;/a&gt; может обрабатывать небольшие выделения. Поэтому разумно установить минимальный размер выделения для &lt;a href=&quot;malloc#memsys5&quot;&gt;memsys5&lt;/a&gt; в 2, 4 или даже 8 раз больше максимального размера внешнего выделения. Минимальный размер выделения 512 является разумной настройкой.</target>
        </trans-unit>
        <trans-unit id="30bdbd95e17bffd329d217ead465e3fe28cd023c" translate="yes" xml:space="preserve">
          <source>The general rule is that indexes are only useful if there are WHERE-clause constraints on the left-most columns of the index. However, in some cases, SQLite is able to use an index even if the first few columns of the index are omitted from the WHERE clause but later columns are included.</source>
          <target state="translated">Общее правило заключается в том,что индексы полезны только в том случае,если на крайних левых столбцах индекса имеются ограничения WHERE-clause.Однако в некоторых случаях SQLite может использовать индекс,даже если первые несколько столбцов индекса опущены из пункта WHERE,но включены более поздние столбцы.</target>
        </trans-unit>
        <trans-unit id="084577b6dd782fa1eb4651ff451c238f84ef2391" translate="yes" xml:space="preserve">
          <source>The general-purpose memory allocator (&lt;a href=&quot;malloc#memsys5&quot;&gt;memsys5&lt;/a&gt;).</source>
          <target state="translated">Распределитель памяти общего назначения ( &lt;a href=&quot;malloc#memsys5&quot;&gt;memsys5&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="21a012c95267cb8d2b8d45dbbd928793f6616b70" translate="yes" xml:space="preserve">
          <source>The generate_series Table-Valued Function</source>
          <target state="translated">Функция генерации_серии Таблица-оценка</target>
        </trans-unit>
        <trans-unit id="476dfd7c8482f7d1208e7bd9537292c089264e39" translate="yes" xml:space="preserve">
          <source>The generate_series table can be simulated using a &lt;a href=&quot;lang_with#recursivecte&quot;&gt;recursive common table expression&lt;/a&gt;. If the three parameters are $start, $end, and $step, then the equivalent common table expression is:</source>
          <target state="translated">Таблицу generate_series можно смоделировать с помощью &lt;a href=&quot;lang_with#recursivecte&quot;&gt;рекурсивного общего табличного выражения&lt;/a&gt; . Если тремя параметрами являются $ start, $ end и $ step, то эквивалентное общее табличное выражение будет следующим:</target>
        </trans-unit>
        <trans-unit id="4e3c394ee97ca6ac89b21ae3983e2fd5668b4aa8" translate="yes" xml:space="preserve">
          <source>The generate_series(START,END,STEP) &lt;a href=&quot;vtab#tabfunc2&quot;&gt;table-valued function&lt;/a&gt; is a &lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt; included in the SQLite source tree, and compiled into the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;. The generate_series() table has a single result column named &quot;value&quot; holding integer values and a number of rows determined by the parameters START, END, and STEP. The first row of the table has a value of START. Subsequent rows increase by STEP up to END.</source>
          <target state="translated">Возвращающая &lt;a href=&quot;vtab#tabfunc2&quot;&gt;табличное значение функция&lt;/a&gt; generate_series (START, END, STEP) - это &lt;a href=&quot;loadext&quot;&gt;загружаемое расширение,&lt;/a&gt; включенное в исходное дерево SQLite и скомпилированное в &lt;a href=&quot;cli&quot;&gt;оболочку командной строки&lt;/a&gt; . Таблица generate_series () имеет единственный столбец результата с именем &amp;laquo;значение&amp;raquo;, содержащий целочисленные значения, и количество строк, определяемых параметрами START, END и STEP. Первая строка таблицы имеет значение START. Последующие строки увеличиваются на STEP до END.</target>
        </trans-unit>
        <trans-unit id="3f2ed0d414c19e451dbd160a6e3115271ef19a02" translate="yes" xml:space="preserve">
          <source>The geopoly module defines several new SQL functions that are useful for dealing with polygons. All polygon arguments to these functions can be either the GeoJSON format or the internal binary format.</source>
          <target state="translated">В геополитическом модуле определено несколько новых SQL-функций,полезных для работы с полигонами.Все аргументы полигонов к этим функциям могут быть как в формате GeoJSON,так и во внутреннем бинарном формате.</target>
        </trans-unit>
        <trans-unit id="8d993a3d44bf40860242bebc1265b2783cf9c63f" translate="yes" xml:space="preserve">
          <source>The geopoly module is an extension to the &lt;a href=&quot;rtree&quot;&gt;R-Tree extension&lt;/a&gt;. Geopoly uses the same underlying logic and shadow tables as the &lt;a href=&quot;rtree&quot;&gt;R-Tree extension&lt;/a&gt;. Geopoly merely presents a different interface, and provides some extra logic to compute polygon decoding, overlap, and containment.</source>
          <target state="translated">Модуль геополии является расширением расширения &lt;a href=&quot;rtree&quot;&gt;R-Tree&lt;/a&gt; . Geopoly использует ту же базовую логику и теневые таблицы, что и &lt;a href=&quot;rtree&quot;&gt;расширение R-Tree&lt;/a&gt; . Geopoly просто представляет собой другой интерфейс и предоставляет некоторую дополнительную логику для вычисления декодирования полигонов, перекрытия и локализации.</target>
        </trans-unit>
        <trans-unit id="acb138b945d23f00cd83af917d94b141700de307" translate="yes" xml:space="preserve">
          <source>The geopoly module is built on top of the &lt;a href=&quot;rtree&quot;&gt;R-Tree extension&lt;/a&gt; and uses the same underlying shadow tables and algorithms. For indexing purposes, each polygon is represented in the shadow tables as a rectangular bounding box. The underlying R-Tree implementation uses bounding boxes to limit the search space. Then the geoploy_overlap() and/or geopoly_within() routines further refine the search to the exact answer.</source>
          <target state="translated">Модуль геополии построен на основе &lt;a href=&quot;rtree&quot;&gt;расширения R-Tree&lt;/a&gt; и использует те же базовые теневые таблицы и алгоритмы. В целях индексации каждый многоугольник представлен в теневых таблицах как прямоугольная ограничивающая рамка. Базовая реализация R-Tree использует ограничивающие прямоугольники для ограничения пространства поиска. Затем процедуры geoploy_overlap () и / или geopoly_within () дополнительно уточняют поиск до точного ответа.</target>
        </trans-unit>
        <trans-unit id="fdb9ae6360ea866b8222993691854e31ea695989" translate="yes" xml:space="preserve">
          <source>The geopoly_ccw(J) function returns the polygon J with counter-clockwise (CCW) rotation.</source>
          <target state="translated">Функция geopoly_ccw(J)возвращает полигон J с вращением против часовой стрелки (CCW).</target>
        </trans-unit>
        <trans-unit id="58be5b36690d1c8a61ca619684c9087df6d3c79c" translate="yes" xml:space="preserve">
          <source>The geopoly_group_bbox(P) function is an aggregate version of geopoly_bbox(P). The geopoly_group_bbox(P) function returns the smallest rectangle that will enclose all P values seen during aggregation.</source>
          <target state="translated">Функция geopoly_group_bbox(P)является агрегированной версией geopoly_bbox(P).Функция geopoly_group_bbox(P)возвращает наименьший прямоугольник,который будет заключать в себе все значения P,видимые во время агрегации.</target>
        </trans-unit>
        <trans-unit id="7aa31a665e34b0f93544b760a7bd5d5549c54d97" translate="yes" xml:space="preserve">
          <source>The geopoly_overlap(P1,P2) function is special in that the geopoly virtual table knows how to use R*Tree indexes to optimize queries in which the WHERE clause uses geopoly_overlap() as a boolean function. Only the geopoly_overlap(P1,P2) and geopoly_within(P1,P2) functions have this capability.</source>
          <target state="translated">Функция geopoly_overlap(P1,P2)особенная в том,что виртуальная геополитическая таблица знает,как использовать индексы R*Tree для оптимизации запросов,в которых выражение WHERE использует функцию geopoly_overlap()в качестве булевой функции.Только функции geopoly_overlap(P1,P2)и geopoly_within(P1,P2)имеют такую возможность.</target>
        </trans-unit>
        <trans-unit id="4552cf5a5f2e459423714152983f2ca48f86f169" translate="yes" xml:space="preserve">
          <source>The geopoly_regular(X,Y,R,N) function returns a convex, simple, regular, equilateral, equiangular polygon with N sides, centered at X,Y, and with a circumradius of R. Or, if R is negative or if N is less than 3, the function returns NULL. The N value is capped at 1000 so that the routine will never render a polygon with more than 1000 sides even if the N value is larger than 1000.</source>
          <target state="translated">Функция geopoly_regular(X,Y,R,N)возвращает выпуклый,простой,правильный,равносторонний,равносторонний,равносторонний многоугольник с N гранями,центрированный по X,Y,и с окружностью R.Или,если R отрицательный или если N меньше 3,функция возвращает NULL.Значение N ограничено 1000,так что рутина никогда не отобразит многоугольник с более чем 1000 гранями,даже если значение N больше 1000.</target>
        </trans-unit>
        <trans-unit id="01eba492c4ddd36076bba0e9fe7c2f9d9c526116" translate="yes" xml:space="preserve">
          <source>The geopoly_within(P1,P2) function is special in that the geopoly virtual table knows how to use R*Tree indexes to optimize queries in which the WHERE clause uses geopoly_within() as a boolean function. Only the geopoly_within(P1,P2) and geopoly_overlap(P1,P2) functions have this capability.</source>
          <target state="translated">Функция geopoly_within(P1,P2)особенная в том,что виртуальная геополитическая таблица знает,как использовать индексы R*Tree для оптимизации запросов,в которых в пункте WHERE в качестве булевой функции используется geopoly_within().Только функции geopoly_within(P1,P2)и geopoly_overlap(P1,P2)имеют такую возможность.</target>
        </trans-unit>
        <trans-unit id="45313c37ef01af04ca79cf8e508d2efcd3ced709" translate="yes" xml:space="preserve">
          <source>The geopoly_xform(P,A,B,C,D,E,F) function returns a new polygon that is an affine transformation of the polygon P and where the transformation is defined by values A,B,C,D,E,F. If P is not a valid polygon, this routine returns NULL.</source>
          <target state="translated">Функция geopoly_xform(P,A,B,C,D,E,F)возвращает новый многоугольник,который является аффинным преобразованием многоугольника P и где это преобразование определяется значениями A,B,C,D,E,F.Если P не является действительным многоугольником,то эта рутина возвращает NULL.</target>
        </trans-unit>
        <trans-unit id="8a7538a75bac0dc91c968f2f943ef8c77b915108" translate="yes" xml:space="preserve">
          <source>The glob(X,Y) function is equivalent to the expression &quot;&lt;b&gt;Y GLOB X&lt;/b&gt;&quot;. Note that the X and Y arguments are reversed in the glob() function relative to the infix &lt;a href=&quot;lang_expr#glob&quot;&gt;GLOB&lt;/a&gt; operator. Y is the string and X is the pattern. So, for example, the following expressions are equivalent:</source>
          <target state="translated">Функция glob (X, Y) эквивалентна выражению &amp;laquo; &lt;b&gt;Y GLOB X&lt;/b&gt; &amp;raquo;. Обратите внимание, что аргументы X и Y меняются местами в функции glob () относительно инфиксного оператора &lt;a href=&quot;lang_expr#glob&quot;&gt;GLOB&lt;/a&gt; . Y - строка, а X - образец. Так, например, следующие выражения эквивалентны:</target>
        </trans-unit>
        <trans-unit id="57af892941202e82d82f19e609a84ccb0531eaad" translate="yes" xml:space="preserve">
          <source>The goal is to make SQLite handle NULLs in a standards-compliant way. But the descriptions in the SQL standards on how to handle NULLs seem ambiguous. It is not clear from the standards documents exactly how NULLs should be handled in all circumstances.</source>
          <target state="translated">Цель заключается в том,чтобы сделать так,чтобы SQLite работал с NULL в соответствии со стандартами.Но описания в стандартах SQL о том,как работать с NULL,кажутся двусмысленными.Из документов стандартов не ясно,как именно NULL следует обрабатывать при любых обстоятельствах.</target>
        </trans-unit>
        <trans-unit id="2ba0147df5ada0e089bdabaebc1a5094f5e9a20f" translate="yes" xml:space="preserve">
          <source>The goal of this query is to compute some value for the five most recent entries in the table. But in the query above, the &quot;expensive_function()&quot; is invoked prior to the sort and thus is invoked on every row of the table, even rows that are ultimately omitted due to the LIMIT clause. A co-routine can be used to work around this:</source>
          <target state="translated">Целью данного запроса является вычисление некоторого значения для пяти последних записей в таблице.Однако в вышеприведенном запросе перед сортировкой вызывается &quot;expensive_function()&quot; и,таким образом,вызывается в каждой строке таблицы,даже в тех строках,которые в конечном итоге опускаются из-за выражения LIMIT.Для работы с этим можно использовать ко-маршрут:</target>
        </trans-unit>
        <trans-unit id="27130ed911ba5b72cf5d70b6f38c66e3447f97b9" translate="yes" xml:space="preserve">
          <source>The grammar syntax is less error prone - using symbolic names for semantic values rather that the &quot;$1&quot;-style positional notation of Yacc.</source>
          <target state="translated">Синтаксис грамматики менее склонен к ошибкам-использование символических имён для семантических значений,чем позиционная нотация Yacc в стиле &quot;$1&quot;.</target>
        </trans-unit>
        <trans-unit id="8288ae8eb06e54b34a1335f8c6fbfb99327b7542" translate="yes" xml:space="preserve">
          <source>The graph below shows the number of CPU cycles used by SQLite on a standard workload, for versions of SQLite going back about 10 years. Recent versions of SQLite use about one third as many the CPU cycles compared to older versions.</source>
          <target state="translated">На графике ниже показано количество процессорных циклов,используемых SQLite на стандартной рабочей нагрузке,для версий SQLite около 10 лет назад.Последние версии SQLite используют примерно на треть больше циклов процессора по сравнению со старыми версиями.</target>
        </trans-unit>
        <trans-unit id="ea3dfc83e3fad7e5da84aa92171fa1f2ebb6adae" translate="yes" xml:space="preserve">
          <source>The group_concat() function returns a string which is the concatenation of all non-NULL values of</source>
          <target state="translated">Функция group_concat()возвращает строку,которая является конкатенцией всех не нулевых значений параметра</target>
        </trans-unit>
        <trans-unit id="998c879f2d9a4a324ed589705e44b7743eed8ace" translate="yes" xml:space="preserve">
          <source>The group_concat(x,'') SQL function returns NULL instead of an empty string when all inputs are empty strings. Ticket &lt;a href=&quot;http://www.sqlite.org/src/info/55746f9e65f85&quot;&gt;55746f9e65&lt;/a&gt;</source>
          <target state="translated">SQL-функция group_concat (x, '') возвращает NULL вместо пустой строки, когда все входные данные являются пустыми строками. Билет &lt;a href=&quot;http://www.sqlite.org/src/info/55746f9e65f85&quot;&gt;55746f9e65&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cc69e429ade6ced467dc065c3703a231254bc0f" translate="yes" xml:space="preserve">
          <source>The handling of IN and NOT IN operators that contain a NULL on their right-hand side expression is brought into compliance with the SQL standard and with other SQL database engines. This is a bug fix, but as it has the potential to break legacy applications that depend on the older buggy behavior, we mark that as a *** Potentially incompatible change ***</source>
          <target state="translated">Обработка операторов IN и NOT IN,содержащих NULL в их правом выражении,приведена в соответствие со стандартом SQL и другими движками баз данных SQL.Это исправление ошибки,но так как оно может нарушить работу старых приложений,зависящих от старого поведения,мы отмечаем,что в качестве ***Потенциально несовместимого изменения ***</target>
        </trans-unit>
        <trans-unit id="d0efc6030fa81d141b43a701523b55c7bcf660fd" translate="yes" xml:space="preserve">
          <source>The hash tables in the shm file are designed to answer the following question quickly:</source>
          <target state="translated">Хэш-таблицы в файле shm предназначены для быстрого ответа на следующий вопрос:</target>
        </trans-unit>
        <trans-unit id="2856b370cad55dc7412b44b6f210c8cf053331d6" translate="yes" xml:space="preserve">
          <source>The hashes that identify check-ins and files on the Git mirror are different from the hashes in Fossil. There are many reasons for this, chief among them that Fossil uses a SHA3-256 hash whereas Git uses a SHA1 hash. During export, the original Fossil hash for each check-in is added as a footer to check-in comments. To avoid confusion, always use the original Fossil hash, not the Git hash, when referring to SQLite check-ins.</source>
          <target state="translated">Хэши,которые идентифицируют контрольные входы и файлы на Git-зеркале,отличаются от хэшей на Fossil.Этому есть много причин,главная из которых заключается в том,что Fossil использует хэш из SHA3-256,в то время как Git использует хэш из SHA1.При экспорте,оригинальный ископаемый хэш для каждой регистрации добавляется как нижний колонтитул для комментариев при регистрации.Чтобы избежать путаницы,всегда используйте исходный ископаемый хэш,а не Git-хэш,когда обращаетесь к регистрации на SQLite.</target>
        </trans-unit>
        <trans-unit id="e115da518074674c7bed9606a1f3c39c1334b0dc" translate="yes" xml:space="preserve">
          <source>The header of the rollback journal can be overwritten with invalid header text (for example, all zeros).</source>
          <target state="translated">Заголовок журнала отката может быть перезаписан недействительным заголовочным текстом (например,все нули).</target>
        </trans-unit>
        <trans-unit id="328251bbc9b91a18ef755ecd2993b4b5eb3cf221" translate="yes" xml:space="preserve">
          <source>The header of the rollback journal is well-formed and in particular has not been zeroed out.</source>
          <target state="translated">Заголовок журнала отката хорошо сформирован и,в частности,не обнулен.</target>
        </trans-unit>
        <trans-unit id="8908758df6621b583f7634e3a00bc808f16a9ffb" translate="yes" xml:space="preserve">
          <source>The header size varint and serial type varints will usually consist of a single byte. The serial type varints for large strings and BLOBs might extend to two or three byte varints, but that is the exception rather than the rule. The varint format is very efficient at coding the record header.</source>
          <target state="translated">Размеры заголовков вариаций и вариаций последовательного типа обычно состоят из одного байта.Для больших строк и BLOB-ов,varint последовательного типа может расширяться до двух или трех байтовых varint,но это скорее исключение,чем правило.Формат varint очень эффективен при кодировании заголовка записи.</target>
        </trans-unit>
        <trans-unit id="6a561080aa600994c95f7609f8c9a76e07664cc1" translate="yes" xml:space="preserve">
          <source>The header string: &quot;SQLite format 3\000&quot;</source>
          <target state="translated">Строка заголовка:&quot;Формат SQLite 3\000&quot;</target>
        </trans-unit>
        <trans-unit id="9618d06778e016225462d5681eb6b291f7c80aa5" translate="yes" xml:space="preserve">
          <source>The heap limits are not enforced in the current implementation if one or more of following conditions are true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f9212fdc8a88cf98b4e1490976ec2f7354c6a2" translate="yes" xml:space="preserve">
          <source>The heavy wrapper employed by &lt;a href=&quot;compile#memdebug&quot;&gt;SQLITE_MEMDEBUG&lt;/a&gt; is intended for use only during testing, analysis, and debugging of SQLite. The heavy wrapper has a significant performance and memory overhead and probably should not be used in production.</source>
          <target state="translated">Тяжелая оболочка, используемая &lt;a href=&quot;compile#memdebug&quot;&gt;SQLITE_MEMDEBUG&lt;/a&gt; , предназначена для использования только во время тестирования, анализа и отладки SQLite. Тяжелая оболочка имеет значительные накладные расходы на производительность и память и, вероятно, не должна использоваться в производственной среде.</target>
        </trans-unit>
        <trans-unit id="eb4610f1226d8f274f85d7debe217f5d65427f90" translate="yes" xml:space="preserve">
          <source>The heavy wrapper that is used when &lt;a href=&quot;compile#memdebug&quot;&gt;SQLITE_MEMDEBUG&lt;/a&gt; is set also makes sure each new allocation is filled with nonsense data prior to returning the allocation to the caller. And as soon as an allocation is free, it is again filled with nonsense data. These two actions help to ensure that the SQLite core does not make assumptions about the state of newly allocated memory and that memory allocations are not used after they have been freed.</source>
          <target state="translated">Тяжелая оболочка, которая используется при установке &lt;a href=&quot;compile#memdebug&quot;&gt;SQLITE_MEMDEBUG,&lt;/a&gt; также обеспечивает заполнение каждого нового выделения бессмысленными данными перед возвратом выделения вызывающей стороне. И как только выделение освобождается, оно снова заполняется бессмысленными данными. Эти два действия помогают гарантировать, что ядро ​​SQLite не делает предположений о состоянии вновь выделенной памяти и что выделения памяти не используются после того, как они были освобождены.</target>
        </trans-unit>
        <trans-unit id="a33b86543e89aa7fc91f1c01c079a10eabc5b26c" translate="yes" xml:space="preserve">
          <source>The hex() function interprets its argument as a BLOB and returns a string which is the upper-case hexadecimal rendering of the content of that blob.</source>
          <target state="translated">Функция hex()интерпретирует свой аргумент как BLOB и возвращает строку,которая является шестнадцатиричным отображением содержимого этого блока в верхнем регистре.</target>
        </trans-unit>
        <trans-unit id="47e9ec1a2ca9f6468b5d5ea9dca27a7ef3e3db0a" translate="yes" xml:space="preserve">
          <source>The high repeatability of cachegrind allows the SQLite developers to implement and measure &quot;microoptimizations&quot;. A microoptimization is a change to the code that results in a very small performance increase. Typical micro-optimizations reduce the number of CPU cycles by 0.1% or 0.05% or even less. Such improvements are impossible to measure with real-world timings. But hundreds or thousands of microoptimizations add up, resulting in measurable real-world performance gains.</source>
          <target state="translated">Высокая воспроизводимость кэшфренда позволяет разработчикам SQLite реализовывать и измерять &quot;микрооптимизации&quot;.Микрооптимизация-это изменение кода,в результате которого производительность увеличивается очень незначительно.Типичные микро-оптимизации сокращают количество циклов процессора на 0.1% или 0.05% или даже меньше.Такие улучшения невозможно измерить с помощью реальных таймингов.Но сотни или тысячи микро-оптимизаций суммируются,что приводит к измеримому повышению производительности в реальном мире.</target>
        </trans-unit>
        <trans-unit id="8ccb63c8eb8186df2591985e1dd0399f9de8ed53" translate="yes" xml:space="preserve">
          <source>The high-reliability of SQLite is proven in practice. SQLite has been used without problems in multiple billions of smart-phones, IoT devices, and desktop applications, around the world, and for almost two decades.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8285d1c1b74bc88c5caec05770baddba5bd483b5" translate="yes" xml:space="preserve">
          <source>The high-reliability of SQLite is proven in practice. SQLite has been used without problems in multiple billions of smart-phones, IoT devices, and desktop applications, around the world, and for over a decade.</source>
          <target state="translated">Высокая надежность SQLite доказана на практике.SQLite без проблем используется во множестве миллиардов смартфонов,IoT-устройств и настольных приложений по всему миру уже более десяти лет.</target>
        </trans-unit>
        <trans-unit id="f6fadaee687e9cfda1c93f7fa51b5ba3b3240bd6" translate="yes" xml:space="preserve">
          <source>The highlight() function returns a copy of the text from a specified column of the current row with extra markup text inserted to mark the start and end of phrase matches.</source>
          <target state="translated">Функция highlight()возвращает копию текста из указанного столбца текущей строки с дополнительной разметкой,вставленной для пометки начала и конца совпадения фраз.</target>
        </trans-unit>
        <trans-unit id="e43753ce0913d39afca1c9c249ea51ebaf6b6f06" translate="yes" xml:space="preserve">
          <source>The highlight() must be invoked with exactly three arguments following the table name. To be interpreted as follows:</source>
          <target state="translated">Функция highlight()должна вызываться ровно с тремя аргументами,следующими за именем таблицы.Следует интерпретировать следующим образом:</target>
        </trans-unit>
        <trans-unit id="bb9d506afb5b0054b66298f3975841775d6d258d" translate="yes" xml:space="preserve">
          <source>The histogram data is only useful if the right-hand side of the constraint is a simple compile-time constant or &lt;a href=&quot;lang_expr#varparam&quot;&gt;parameter&lt;/a&gt; and not an expression.</source>
          <target state="translated">Данные гистограммы полезны только в том случае, если правая часть ограничения представляет собой простую константу или &lt;a href=&quot;lang_expr#varparam&quot;&gt;параметр&lt;/a&gt; времени компиляции, а не выражение.</target>
        </trans-unit>
        <trans-unit id="754b3dec45709dc037212c7449e27878498a6122" translate="yes" xml:space="preserve">
          <source>The historical behavior of SQLite is incorrect according to the SQL:1999 standard and it is inconsistent with the behavior of MySQL and PostgreSQL. Version 3.6.0 changes the behavior of the IN and NOT IN operators to conform to the standard and to give the same results as other SQL database engines.</source>
          <target state="translated">Историческое поведение SQLite некорректно согласно стандарту SQL:1999 и несовместимо с поведением MySQL и PostgreSQL.Версия 3.6.0 изменяет поведение операторов IN и NOT IN,чтобы соответствовать стандарту и давать те же результаты,что и другие движки баз данных SQL.</target>
        </trans-unit>
        <trans-unit id="3be31364c3c06e62038927597ca88135a8ca4d7a" translate="yes" xml:space="preserve">
          <source>The iCost column is the numeric cost of transforming cFrom into cTo. This value should be a non-negative integer, and should probably be less than 100. The default single-character insertion and deletion costs are 100 and the default single-character to single-character substitution cost is 150. A cost of 10000 or more is considered &quot;infinite&quot; and causes the rule to be ignored.</source>
          <target state="translated">Столбец iCost-это числовая стоимость преобразования cFrom в cTo.Это значение должно быть неотрицательным целым числом и,вероятно,должно быть меньше 100.Стоимость вставки и удаления односимволов по умолчанию составляет 100,а стоимость подстановки односимволов к односимвольным-150.Стоимость 10000 и более считается &quot;бесконечной&quot; и заставляет игнорировать правило.</target>
        </trans-unit>
        <trans-unit id="d0b9d0aa5d29da45f0b93b40de44e2f95388c2e0" translate="yes" xml:space="preserve">
          <source>The iLang column is a non-negative integer that identifies a set of costs appropriate for a particular language. The editdist3 function will only use a single iLang value for any given edit-distance computation. The default value is 0. It is recommended that applications that only need to use a single language always use iLang==0 for all entries.</source>
          <target state="translated">Столбец iLang является неотрицательным целым числом,которое идентифицирует набор затрат,подходящих для определенного языка.Функция editdist3 будет использовать только одно значение iLang для любого заданного вычисления расстояния редактирования.Значение по умолчанию равно 0.Рекомендуется,чтобы приложения,которым необходимо использовать только один язык,всегда использовали iLang==0 для всех записей.</target>
        </trans-unit>
        <trans-unit id="5013f8a1a10fac4a872743ceb29c353308c4297d" translate="yes" xml:space="preserve">
          <source>The iVersion field of &lt;a href=&quot;c3ref/io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; is provided as insurance against future enhancements. The iVersion value should always be 1 for SQLite version 3.5.</source>
          <target state="translated">Поле iVersion &lt;a href=&quot;c3ref/io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; предоставляется в качестве страховки от будущих улучшений. Значение iVersion всегда должно быть 1 для SQLite версии 3.5.</target>
        </trans-unit>
        <trans-unit id="8b61610ddf9130372f875adae334c360bf359102" translate="yes" xml:space="preserve">
          <source>The iVersion field of &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; should be 1 for SQLite version 3.5.0. This number may increase in future versions of SQLite if we have to modify the VFS object in some way. We hope that this never happens, but the provision is made in case it does.</source>
          <target state="translated">Поле iVersion &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; должно быть 1 для SQLite версии 3.5.0. Это число может увеличиться в будущих версиях SQLite, если нам придется каким-либо образом изменить объект VFS. Мы надеемся, что этого никогда не произойдет, но предусмотрены меры на случай, если это произойдет.</target>
        </trans-unit>
        <trans-unit id="ea830f2d673441ec5d80e9c5eb8623ea5999e87b" translate="yes" xml:space="preserve">
          <source>The idea behind a reserved lock is that it signals that a process intends to modify the database file in the near future but has not yet started to make the modifications. And because the modifications have not yet started, other processes can continue to read from the database. However, no other process should also begin trying to write to the database.</source>
          <target state="translated">Идея зарезервированного замка заключается в том,что он сигнализирует о том,что процесс намеревается изменить файл базы данных в ближайшем будущем,но еще не начал вносить изменения.А поскольку модификации еще не начались,другие процессы могут продолжать читать из БД.Однако ни один другой процесс также не должен начинать попытки записи в БД.</target>
        </trans-unit>
        <trans-unit id="b86c36b3766e07cfb666e3625925c99f4017f8b5" translate="yes" xml:space="preserve">
          <source>The idxNum and idxPtr values are recorded and passed into the &lt;a href=&quot;../vtab#xfilter&quot;&gt;xFilter&lt;/a&gt; method. &lt;a href=&quot;free&quot;&gt;sqlite3_free()&lt;/a&gt; is used to free idxPtr if and only if needToFreeIdxPtr is true.</source>
          <target state="translated">Значения idxNum и idxPtr записываются и передаются в метод &lt;a href=&quot;../vtab#xfilter&quot;&gt;xFilter&lt;/a&gt; . &lt;a href=&quot;free&quot;&gt;sqlite3_free ()&lt;/a&gt; используется для освобождения idxPtr тогда и только тогда, когда needToFreeIdxPtr истинно.</target>
        </trans-unit>
        <trans-unit id="357574f6e5fd171b87a29904a513e7015690c872" translate="yes" xml:space="preserve">
          <source>The idxNum and idxPtr values are recorded and passed into the &lt;a href=&quot;vtab#xfilter&quot;&gt;xFilter&lt;/a&gt; method. &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free()&lt;/a&gt; is used to free idxPtr if and only if needToFreeIdxPtr is true.</source>
          <target state="translated">Значения idxNum и idxPtr записываются и передаются в метод &lt;a href=&quot;vtab#xfilter&quot;&gt;xFilter&lt;/a&gt; . &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free ()&lt;/a&gt; используется для освобождения idxPtr тогда и только тогда, когда needToFreeIdxPtr истинно.</target>
        </trans-unit>
        <trans-unit id="013b479832be35dd0d8a4395d938100b93b10f74" translate="yes" xml:space="preserve">
          <source>The idxStr value may be a string obtained from an SQLite memory allocation function such as &lt;a href=&quot;c3ref/mprintf&quot;&gt;sqlite3_mprintf()&lt;/a&gt;. If this is the case, then the needToFreeIdxStr flag must be set to true so that the SQLite core will know to call &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_free()&lt;/a&gt; on that string when it has finished with it, and thus avoid a memory leak. The idxStr value may also be a static constant string, in which case the needToFreeIdxStr boolean should remain false.</source>
          <target state="translated">Значение idxStr может быть строкой, полученной из функции выделения памяти SQLite, такой как &lt;a href=&quot;c3ref/mprintf&quot;&gt;sqlite3_mprintf ()&lt;/a&gt; . В этом случае флаг needToFreeIdxStr должен быть установлен в значение true, чтобы ядро ​​SQLite знало, что нужно вызвать &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_free ()&lt;/a&gt; для этой строки, когда оно закончит с ней, и таким образом избежать утечки памяти. Значение idxStr также может быть статической постоянной строкой, и в этом случае логическое значение needToFreeIdxStr должно оставаться ложным.</target>
        </trans-unit>
        <trans-unit id="53bc345818e3cfbbe8c82ba1be412d51eef79f34" translate="yes" xml:space="preserve">
          <source>The ieee754 extension converts a floating point number between its binary64 representation and the M&amp;times;2&lt;sup&gt;&lt;small&gt;E&lt;/small&gt;&lt;/sup&gt; format. In other words in the expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f1322e38e7bf458c5d54d75c7506d3ae73217c" translate="yes" xml:space="preserve">
          <source>The ieee754 extension converts between F and (M,E) and back again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7e2d6ba2a9578fe636d96019c4ffb56636fdf7" translate="yes" xml:space="preserve">
          <source>The ieee754 extension is not part of the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;, but it is included by default in the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt;. If you want to include the ieee754 extension in your application, you will need to compile and load it separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac62a77b019e01de7ef209efbe441dd3c0eb2c08" translate="yes" xml:space="preserve">
          <source>The ieee754(F) SQL function takes a single floating-point argument as its input and returns a string that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c018ce9988c89e6d43c340880c6cf378ed2e6c" translate="yes" xml:space="preserve">
          <source>The ieee754_to_blob(F) SQL function converts the floating point number F into an 8-byte BLOB that is the big-endian binary64 encoding of that number. The ieee754_from_blob(B) function goes the other way, converting an 8-byte blob into the floating-point value that the binary64 encoding represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5a7e8bc386f87dedf4ba3978aa31bcde8d6916" translate="yes" xml:space="preserve">
          <source>The ifnull() function returns a copy of its first non-NULL argument, or NULL if both arguments are NULL. Ifnull() must have exactly 2 arguments. The ifnull() function is equivalent to &lt;a href=&quot;lang_corefunc#coalesce&quot;&gt;coalesce()&lt;/a&gt; with two arguments.</source>
          <target state="translated">Функция ifnull () возвращает копию своего первого аргумента, отличного от NULL, или NULL, если оба аргумента равны NULL. Ifnull () должно иметь ровно 2 аргумента. Функция ifnull () эквивалентна &lt;a href=&quot;lang_corefunc#coalesce&quot;&gt;coalesce ()&lt;/a&gt; с двумя аргументами.</target>
        </trans-unit>
        <trans-unit id="003c977ed53ddacaa1a12c60c49d228fced8878c" translate="yes" xml:space="preserve">
          <source>The iif(X,Y,Z) function returns the value Y if X is true, and Z otherwise. The iif(X,Y,Z) function is logically equivalent to and generates the same &lt;a href=&quot;opcode&quot;&gt;bytecode&lt;/a&gt; as the &lt;a href=&quot;lang_expr#case&quot;&gt;CASE expression&lt;/a&gt; &quot;CASE WHEN X THEN Y ELSE Z END&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46220a05919fd727bb5192ff33d2f0412a4a1656" translate="yes" xml:space="preserve">
          <source>The immutable query parameter is a boolean that signals to SQLite that the underlying database file is held on read-only media and cannot be modified, even by another process with elevated privileges. SQLite always opens immutable database files read-only and it skips all file locking and change detection on immutable database files. If these query parameter (or the &lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_IMMUTABLE&lt;/a&gt; bit in xDeviceCharacteristics) asserts that a database file is immutable and that file changes anyhow, then SQLite might return incorrect query results and/or &lt;a href=&quot;rescode#corrupt&quot;&gt;SQLITE_CORRUPT&lt;/a&gt; errors.</source>
          <target state="translated">Неизменяемый параметр запроса - это логическое значение, которое сигнализирует SQLite, что основной файл базы данных хранится на носителе только для чтения и не может быть изменен даже другим процессом с повышенными привилегиями. SQLite всегда открывает неизменяемые файлы базы данных только для чтения и пропускает все блокировки файлов и обнаружение изменений в неизменяемых файлах базы данных. Если этот параметр запроса (или бит &lt;a href=&quot;c3ref/c_iocap_atomic&quot;&gt;SQLITE_IOCAP_IMMUTABLE&lt;/a&gt; в xDeviceCharacteristics) утверждает, что файл базы данных является неизменным и этот файл &lt;a href=&quot;rescode#corrupt&quot;&gt;каким-&lt;/a&gt; либо образом изменяется, то SQLite может вернуть неверные результаты запроса и / или ошибки SQLITE_CORRUPT .</target>
        </trans-unit>
        <trans-unit id="a6b9b8cf3a7d94e9575aa22c08feee5317ab9464" translate="yes" xml:space="preserve">
          <source>The implementation for the spellfix1 virtual table is held in the SQLite source tree in the miscellaneous extensions folder and in particular in the file &lt;a href=&quot;http://www.sqlite.org/src/finfo?name=ext/misc/spellfix.c&quot;&gt;ext/misc/spellfix1.c&lt;/a&gt;. The spellfix1 virtual table is not included in the SQLite &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt; and is not a part of any standard SQLite build. It is a &lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt;.</source>
          <target state="translated">Реализация виртуальной таблицы spellfix1 содержится в дереве исходных текстов SQLite в папке различных расширений и, в частности, в файле &lt;a href=&quot;http://www.sqlite.org/src/finfo?name=ext/misc/spellfix.c&quot;&gt;ext / misc / spellfix1.c&lt;/a&gt; . Виртуальная таблица spellfix1 не включена в &lt;a href=&quot;amalgamation&quot;&gt;объединение&lt;/a&gt; SQLite и не является частью какой-либо стандартной сборки SQLite. Это &lt;a href=&quot;loadext&quot;&gt;загружаемое расширение&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8eb5688bafc7d4405d9e0ef667e71e04726e76e8" translate="yes" xml:space="preserve">
          <source>The implementation is not required to provide versions of these routines that actually work. If the implementation does not provide working versions of these routines, it should at least provide stubs that always return true so that one does not get spurious assertion failures.</source>
          <target state="translated">Реализация не требуется для предоставления реально работающих версий этих процедур.Если реализация не предоставляет рабочих версий этих подпрограмм,она должна,по крайней мере,предоставлять шлейфы,которые всегда возвращают true,чтобы не получить поддельных ошибок утверждения.</target>
        </trans-unit>
        <trans-unit id="8b40a9e730bef66c422bb631b44b6863716defa7" translate="yes" xml:space="preserve">
          <source>The implementation is registered with the FTS5 module by calling the xCreateFunction() method of the fts5_api object. If there is already an auxiliary function with the same name, it is replaced by the new function. If a non-NULL xDestroy parameter is passed to xCreateFunction(), it is invoked with a copy of the pContext pointer passed as the only argument when the database handle is closed or when the registered auxiliary function is replaced.</source>
          <target state="translated">Реализация регистрируется в модуле FTS5 путем вызова метода xCreateFunction()объекта fts5_api.Если уже существует вспомогательная функция с тем же именем,то она заменяется на новую.Если в функцию xCreateFunction()передается параметр,отличный от NULL xDestroy,то при закрытии дескриптора базы данных или при замене зарегистрированной вспомогательной функции он вызывается с копией переданного в качестве единственного аргумента pContext указателя.</target>
        </trans-unit>
        <trans-unit id="bbe3105d33c8a4906448b08f8925bf436af3dd67" translate="yes" xml:space="preserve">
          <source>The implementation is registered with the FTS5 module by calling the xCreateTokenizer() method of the fts5_api object. If there is already a tokenizer with the same name, it is replaced. If a non-NULL xDestroy parameter is passed to xCreateTokenizer(), it is invoked with a copy of the pContext pointer passed as the only argument when the database handle is closed or when the tokenizer is replaced.</source>
          <target state="translated">Реализация регистрируется в модуле FTS5 вызовом метода xCreateTokenizer()объекта fts5_api.Если уже есть токенайзер с таким же именем,то он заменяется.Если в функцию xCreateTokenizer()передается не нулевой параметр xDestroy,то при закрытии дескриптора базы данных или при замене токенайзера он вызывается с копией указателя pContext,переданного в качестве единственного аргумента.</target>
        </trans-unit>
        <trans-unit id="8b89a513d4c178ab8d213508b88c8e5c09e3c7a1" translate="yes" xml:space="preserve">
          <source>The implementation language for the example code is &lt;a href=&quot;http://www.tcl-lang.org&quot;&gt;TCL&lt;/a&gt;, though you can easily do the same thing in another programming language. Remember that the code here is a demonstration of the technique, not a drop-in module that will automatically do everything for you. The demonstration code shown below is derived from actual code in production use. But you will need to make changes to tailor it to your application.</source>
          <target state="translated">Язык реализации для примера кода - &lt;a href=&quot;http://www.tcl-lang.org&quot;&gt;TCL&lt;/a&gt; , хотя вы можете легко сделать то же самое на другом языке программирования. Помните, что код здесь является демонстрацией техники, а не вспомогательным модулем, который автоматически все сделает за вас. Показанный ниже демонстрационный код является производным от реального кода, используемого в производственной среде. Но вам нужно будет внести изменения, чтобы адаптировать его к вашему приложению.</target>
        </trans-unit>
        <trans-unit id="1c7602fe1bd4486f649d10efe941c63ad9ebc01d" translate="yes" xml:space="preserve">
          <source>The implementation of this function could be enhanced in at least two ways:</source>
          <target state="translated">Реализация этой функции может быть усилена,по крайней мере,двумя способами:</target>
        </trans-unit>
        <trans-unit id="fb654149d36243346cb33110dabec3f86ec0e93a" translate="yes" xml:space="preserve">
          <source>The important parts of the output (the parts that the developers pay the most attention to) are shown in red. Basically, the developers want to know the size of the compiled SQLite library and how many CPU cycles were needed to run the performance test.</source>
          <target state="translated">Важные части вывода (части,которым разработчики уделяют наибольшее внимание)показаны красным цветом.В основном разработчики хотят знать размер скомпилированной библиотеки SQLite и сколько циклов процессора понадобилось для запуска теста производительности.</target>
        </trans-unit>
        <trans-unit id="98a68810edc43f0319b74cd65a4602d55569695b" translate="yes" xml:space="preserve">
          <source>The imposter table mechanism is a power analysis and debugging tool for SQLite. But as with all sharp tools, it can also be dangerous and can result in corrupt database files if misused. Do not attempt to use imposter tables in an application. Imposter tables are intended for use in the laboratory by experts.</source>
          <target state="translated">Механизм imposter table-это инструмент анализа мощности и отладки для SQLite.Но,как и все острые инструменты,он также может быть опасен и в случае неправильного использования может привести к повреждению файлов базы данных.Не пытайтесь использовать imposter-таблицы в приложении.Таблицы импотов предназначены для использования в лаборатории экспертами.</target>
        </trans-unit>
        <trans-unit id="f137c1fa92f06c6d9054e4f6699dd72be9e8aeef" translate="yes" xml:space="preserve">
          <source>The in-header database size is only considered to be valid if it is non-zero and if the 4-byte &lt;a href=&quot;fileformat2#chngctr&quot;&gt;change counter&lt;/a&gt; at offset 24 exactly matches the 4-byte &lt;a href=&quot;fileformat2#validfor&quot;&gt;version-valid-for number&lt;/a&gt; at offset 92. The in-header database size is always valid when the database is only modified using recent versions of SQLite, versions 3.7.0 (2010-07-21) and later. If a legacy version of SQLite writes to the database, it will not know to update the in-header database size and so the in-header database size could be incorrect. But legacy versions of SQLite will also leave the version-valid-for number at offset 92 unchanged so it will not match the change-counter. Hence, invalid in-header database sizes can be detected (and ignored) by observing when the change-counter does not match the version-valid-for number.</source>
          <target state="translated">Размер базы данных в заголовке считается действительным только в том случае, если он не равен нулю и если 4-байтовый &lt;a href=&quot;fileformat2#chngctr&quot;&gt;счетчик изменений&lt;/a&gt; по смещению 24 точно соответствует 4-байтовому &lt;a href=&quot;fileformat2#validfor&quot;&gt;номеру версии, допустимой для&lt;/a&gt; смещения 92. База данных в заголовке size всегда действителен, если база данных изменяется только с использованием последних версий SQLite, версии 3.7.0 (2010-07-21) и более поздних. Если устаревшая версия SQLite записывает в базу данных, она не будет знать, что нужно обновить размер базы данных в заголовке, и поэтому размер базы данных в заголовке может быть неправильным. Но унаследованные версии SQLite также оставят номер версии, действительной для смещения 92, без изменений, поэтому он не будет соответствовать счетчику изменений. Следовательно, недопустимые размеры базы данных в заголовке могут быть обнаружены (и проигнорированы) путем наблюдения, когда счетчик изменений не соответствует номеру версии, действительной для версии.</target>
        </trans-unit>
        <trans-unit id="856311d50a8fd5f75cd3339835ec40132b3ad9e1" translate="yes" xml:space="preserve">
          <source>The incremental_vacuum pragma causes up to</source>
          <target state="translated">Прагма incremental_vacuum вызывает до</target>
        </trans-unit>
        <trans-unit id="2dd53e3930b5b852ae3198064e374d5480957b02" translate="yes" xml:space="preserve">
          <source>The index is not usable at all because the left-most column of the index (column &quot;a&quot;) is not constrained. Assuming there are no other indices, the query above would result in a full table scan.</source>
          <target state="translated">Индекс вообще не используется,так как левый крайний столбец индекса (столбец &quot;а&quot;)не ограничен.Если предположить,что других индексов нет,то запрос выше приведет к полному сканированию таблицы.</target>
        </trans-unit>
        <trans-unit id="af8e63da60690ffa41a028a8c03b3a46553b1974" translate="yes" xml:space="preserve">
          <source>The index is not usable because the WHERE clause terms are connected by OR instead of AND. This query would result in a full table scan. However, if three additional indices where added that contained columns b, c, and d as their left-most columns, then the &lt;a href=&quot;#or_opt&quot;&gt;OR-clause optimization&lt;/a&gt; might apply.</source>
          <target state="translated">Индекс непригоден для использования, поскольку условия предложения WHERE соединяются оператором OR вместо AND. Этот запрос приведет к полному сканированию таблицы. Однако, если добавлены три дополнительных индекса, которые содержат столбцы b, c и d в качестве крайних левых столбцов, тогда может применяться &lt;a href=&quot;#or_opt&quot;&gt;оптимизация с предложением OR&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="672cc6d4ea8af33a329ad85f582fc436091b60cb" translate="yes" xml:space="preserve">
          <source>The index of the term instance within its column. Terms are numbered in order of occurrence starting from 0.</source>
          <target state="translated">Индекс экземпляра термина в его столбце.Термины нумеруются в порядке их возникновения,начиная с 0.</target>
        </trans-unit>
        <trans-unit id="9be4bc1fc0e600b05c5d496186036ea84f9ef15d" translate="yes" xml:space="preserve">
          <source>The indexed documents are not stored within the SQLite database at all (a &quot;contentless&quot; FTS4 table), or</source>
          <target state="translated">Проиндексированные документы вообще не хранятся в базе данных SQLite (&quot;бесконтактная&quot; таблица FTS4),либо</target>
        </trans-unit>
        <trans-unit id="e1d425e949e65fa344c6b8fb0277d12b499d6fc9" translate="yes" xml:space="preserve">
          <source>The indexed documents are stored in a database table created and managed by the user (an &quot;external content&quot; FTS4 table).</source>
          <target state="translated">Проиндексированные документы хранятся в таблице БД,созданной и управляемой пользователем (таблица FTS4 &quot;внешнего содержимого&quot;).</target>
        </trans-unit>
        <trans-unit id="4aef068b1a0d56e1caa7dcf9dfa167672f1599ff" translate="yes" xml:space="preserve">
          <source>The infix LIKE operator is implemented by calling the application-defined SQL functions &lt;a href=&quot;lang_corefunc#like&quot;&gt;like(&lt;i&gt;Y&lt;/i&gt;,&lt;i&gt;X&lt;/i&gt;)&lt;/a&gt; or &lt;a href=&quot;lang_corefunc#like&quot;&gt;like(&lt;i&gt;Y&lt;/i&gt;,&lt;i&gt;X&lt;/i&gt;,&lt;i&gt;Z&lt;/i&gt;)&lt;/a&gt;.</source>
          <target state="translated">Инфиксный оператор LIKE реализуется путем вызова определяемых приложением функций SQL, &lt;a href=&quot;lang_corefunc#like&quot;&gt;например ( &lt;i&gt;Y&lt;/i&gt; , &lt;i&gt;X&lt;/i&gt; )&lt;/a&gt; или &lt;a href=&quot;lang_corefunc#like&quot;&gt;подобных ( &lt;i&gt;Y&lt;/i&gt; , &lt;i&gt;X&lt;/i&gt; , &lt;i&gt;Z&lt;/i&gt; )&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88a733d117cd4f0a7921fa6f2a987e25c2eb02d1" translate="yes" xml:space="preserve">
          <source>The information above can be recast into a table format as follows:</source>
          <target state="translated">Приведенную выше информацию можно перевести в формат таблицы следующим образом:</target>
        </trans-unit>
        <trans-unit id="7c260215b8c7aaba3e0315515668088d0bdaae79" translate="yes" xml:space="preserve">
          <source>The information accessed using this API and its companion xPhraseFirstColumn() may also be obtained using xPhraseFirst/xPhraseNext (or xInst/xInstCount). The chief advantage of this API is that it is significantly more efficient than those alternatives when used with &quot;detail=column&quot; tables.</source>
          <target state="translated">Доступ к информации,полученной с помощью этого API и его спутника xPhraseFirstColumn(),также можно получить с помощью xPhraseFirst/xPhraseNext (или xInst/xInstCount).Основным преимуществом этого API является то,что при использовании с таблицами &quot;detail=column&quot; он значительно эффективнее,чем эти альтернативы.</target>
        </trans-unit>
        <trans-unit id="e6d1054c7b3f35c96345a991890c1e40578c9e8c" translate="yes" xml:space="preserve">
          <source>The information in the &lt;a href=&quot;c3ref/index_info&quot;&gt;sqlite3_index_info&lt;/a&gt; structure is ephemeral and may be overwritten or deallocated as soon as the xBestIndex method returns. If the xBestIndex method needs to remember any part of the &lt;a href=&quot;c3ref/index_info&quot;&gt;sqlite3_index_info&lt;/a&gt; structure, it should make a copy. Care must be take to store the copy in a place where it will be deallocated, such as in the idxStr field with needToFreeIdxStr set to 1.</source>
          <target state="translated">Информация в структуре &lt;a href=&quot;c3ref/index_info&quot;&gt;sqlite3_index_info&lt;/a&gt; недолговечна и может быть перезаписана или удалена, как только метод xBestIndex вернется. Если методу xBestIndex необходимо запомнить какую-либо часть структуры &lt;a href=&quot;c3ref/index_info&quot;&gt;sqlite3_index_info&lt;/a&gt; , он должен сделать копию. Необходимо соблюдать осторожность, чтобы сохранить копию в месте, где она будет освобождена, например, в поле idxStr с параметром needToFreeIdxStr, установленным в 1.</target>
        </trans-unit>
        <trans-unit id="32cf05e222bbae76e66c5abe0ecf2fd84a3a7c70" translate="yes" xml:space="preserve">
          <source>The information in this article applies only when SQLite is operating in &quot;rollback mode&quot;, or in other words when SQLite is not using a &lt;a href=&quot;wal&quot;&gt;write-ahead log&lt;/a&gt;. SQLite still supports atomic commit when write-ahead logging is enabled, but it accomplishes atomic commit by a different mechanism from the one described in this article. See the &lt;a href=&quot;wal&quot;&gt;write-ahead log documentation&lt;/a&gt; for additional information on how SQLite supports atomic commit in that context.</source>
          <target state="translated">Информация в этой статье применима только тогда, когда SQLite работает в &amp;laquo;режиме отката&amp;raquo;, или, другими словами, когда SQLite не использует &lt;a href=&quot;wal&quot;&gt;журнал упреждающей записи&lt;/a&gt; . SQLite по-прежнему поддерживает атомарную фиксацию при включенном ведении журнала упреждающей записи, но выполняет атомарную фиксацию с помощью механизма, отличного от описанного в этой статье. Смотрите &lt;a href=&quot;wal&quot;&gt;документацию журнала запись вперед&lt;/a&gt; для получения дополнительной информации о том , как SQLite поддерживает атомарную фиксацию в этом контексте.</target>
        </trans-unit>
        <trans-unit id="f9342562e97e372cf7348a184a4d34dd086f3cc5" translate="yes" xml:space="preserve">
          <source>The initial &quot;INSERT&quot; keyword can be replaced by &quot;REPLACE&quot; or &quot;INSERT OR</source>
          <target state="translated">Изначальное ключевое слово &quot;INSERT&quot; может быть заменено на &quot;REPLACE&quot; или &quot;INSERT OR&quot;.</target>
        </trans-unit>
        <trans-unit id="d2a90ccaf25a62976be28829cc53054a6feb5a8b" translate="yes" xml:space="preserve">
          <source>The initial content is UTF-16 text and sqlite3_column_bytes() or sqlite3_column_text() is called. The content must be converted to UTF-8.</source>
          <target state="translated">Исходным содержимым является текст в кодировке UTF-16 и вызывается sqlite3_column_bytes()или sqlite3_column_text().Содержимое должно быть преобразовано в UTF-8.</target>
        </trans-unit>
        <trans-unit id="f5abf60cee620000168958a8b5acfa6d74016d3a" translate="yes" xml:space="preserve">
          <source>The initial content is UTF-8 text and sqlite3_column_bytes16() or sqlite3_column_text16() is called. The content must be converted to UTF-16.</source>
          <target state="translated">Исходным содержимым является UTF-8 текст и вызывается sqlite3_column_bytes16()или sqlite3_column_text16().Содержимое должно быть преобразовано в UTF-16.</target>
        </trans-unit>
        <trans-unit id="16a79a9ef866be9ddb29420482c978bd29b5a111" translate="yes" xml:space="preserve">
          <source>The initial content is a BLOB and sqlite3_column_text() or sqlite3_column_text16() is called. A zero-terminator might need to be added to the string.</source>
          <target state="translated">Исходным содержимым является BLOB и вызывается sqlite3_column_text()или sqlite3_column_text16().Возможно,потребуется добавить в строку нулевой терминатор.</target>
        </trans-unit>
        <trans-unit id="e8f78c0547aa09c0045543ed5c95b2ff19b12417" translate="yes" xml:space="preserve">
          <source>The initial implementation of NGQP chooses N=1 for simple queries, N=5 for two-way joins and N=10 for all joins with three or more tables. This formula for selecting N might change in subsequent releases.</source>
          <target state="translated">Первоначальная реализация NGQP выбирает N=1 для простых запросов,N=5 для двухсторонних соединений и N=10 для всех соединений с тремя и более таблицами.Эта формула выбора N может измениться в последующих релизах.</target>
        </trans-unit>
        <trans-unit id="433c6a25716e7b035366d6fcddc3266fd3d25e85" translate="yes" xml:space="preserve">
          <source>The initial portion of the payload that does not spill to overflow pages.</source>
          <target state="translated">Первоначальная часть полезной нагрузки,которая не проливается на переполненные страницы.</target>
        </trans-unit>
        <trans-unit id="a60a09b4b0f1a33259942d5b4f17c8bccd4a335d" translate="yes" xml:space="preserve">
          <source>The inner SELECT statement is implemented by instructions 1 through 10. All this code does is make an entry in the temporary table for each row of the examp2 table with a non-NULL value for the &quot;three&quot; column. The key for each temporary table entry is the &quot;three&quot; column of examp2 and the data is an empty string since it is never used.</source>
          <target state="translated">Внутреннее заявление SELECT выполняется с помощью инструкций 1-10.Все,что делает этот код,это делает запись во временной таблице для каждой строки таблицы экзамена2 с не нулевым значением для столбца &quot;три&quot;.Ключом к каждой записи во временной таблице является &quot;три&quot; столбца экзамена2,а данные-пустая строка,поскольку она никогда не используется.</target>
        </trans-unit>
        <trans-unit id="059bc1f5d258819deb1954aaf03c0ff2e66225d4" translate="yes" xml:space="preserve">
          <source>The input data used by a simple SELECT query is a set of</source>
          <target state="translated">Входные данные,используемые в простом запросе SELECT,представляют собой набор из</target>
        </trans-unit>
        <trans-unit id="6894645090ea407676b9f33e59a0dad3066f4727" translate="yes" xml:space="preserve">
          <source>The input to &lt;a href=&quot;#sqlite3_complete&quot;&gt;sqlite3_complete()&lt;/a&gt; must be a zero-terminated UTF-8 string.</source>
          <target state="translated">Вход &lt;a href=&quot;#sqlite3_complete&quot;&gt;sqlite3_complete ()&lt;/a&gt; должен быть нулем UTF-8 , строка.</target>
        </trans-unit>
        <trans-unit id="4d7419b960ffd32c455a130a0e74d0adde2f9624" translate="yes" xml:space="preserve">
          <source>The input to &lt;a href=&quot;#sqlite3_complete&quot;&gt;sqlite3_complete16()&lt;/a&gt; must be a zero-terminated UTF-16 string in native byte order.</source>
          <target state="translated">Вход &lt;a href=&quot;#sqlite3_complete&quot;&gt;sqlite3_complete16 ()&lt;/a&gt; должен быть нулем в UTF-16 строка в родном порядке байт.</target>
        </trans-unit>
        <trans-unit id="4b672bd7f0a1d030d51edf7b207eec2b4f3ae087" translate="yes" xml:space="preserve">
          <source>The input to &lt;a href=&quot;complete&quot;&gt;sqlite3_complete()&lt;/a&gt; must be a zero-terminated UTF-8 string.</source>
          <target state="translated">Вход &lt;a href=&quot;complete&quot;&gt;sqlite3_complete ()&lt;/a&gt; должен быть нулем UTF-8 , строка.</target>
        </trans-unit>
        <trans-unit id="cfd5dd711daa7423070d67fd7c844d95a0e5c24f" translate="yes" xml:space="preserve">
          <source>The input to &lt;a href=&quot;complete&quot;&gt;sqlite3_complete16()&lt;/a&gt; must be a zero-terminated UTF-16 string in native byte order.</source>
          <target state="translated">Вход &lt;a href=&quot;complete&quot;&gt;sqlite3_complete16 ()&lt;/a&gt; должен быть нулем в UTF-16 строка в родном порядке байт.</target>
        </trans-unit>
        <trans-unit id="2d24c8f818c9e23a7423d1fe6a231842fef7a551" translate="yes" xml:space="preserve">
          <source>The inputs to TH3 are test modules written in C or SQL and small configuration files that determine how to initialize SQLite. The TH3 package includes 1,444 test modules and more than 47 configurations (as of 2018-05-19). New modules and configurations can be added to customize TH3 for specialized applications. Each time TH3 is run, it reads a subset of the available test modules and configuration files to generate a custom C program that performs all of the specified tests under all specified configurations. A complete test of SQLite normally involves running TH3 multiple times to generate multiple test programs covering different aspects of SQLite's operation, then linking all test programs against a common SQLite library and running them separately on the target platform.</source>
          <target state="translated">Входами в TH3 являются тестовые модули,написанные на C или SQL,и небольшие конфигурационные файлы,которые определяют,как инициализировать SQLite.Пакет TH3 включает 14444 тестовых модуля и более 47 конфигураций (по состоянию на 2018-05-19 гг.).Новые модули и конфигурации могут быть добавлены для настройки TH3 для специализированных приложений.При каждом запуске TH3 считывается подмножество доступных тестовых модулей и конфигурационных файлов для создания пользовательской программы на C,которая выполняет все указанные тесты при всех указанных конфигурациях.Полный тест SQLite обычно включает в себя запуск TH3 несколько раз для генерации нескольких тестовых программ,охватывающих различные аспекты работы SQLite,а затем связывание всех тестовых программ с общей библиотекой SQLite и их запуск отдельно на целевой платформе.</target>
        </trans-unit>
        <trans-unit id="bb4e6367e51d64e49b708aca20c83e616d792f73" translate="yes" xml:space="preserve">
          <source>The inspiration for this document is &lt;a href=&quot;https://en.wikipedia.org/wiki/DO-178B&quot;&gt;DO-178B&lt;/a&gt;. Among quality standards, DO-178B seems to have the highest usefulness to paperwork ratio. Even so, the amount of documentation needed for a full-up DO-178B implementation is vast. SQLite strives to be nimble and low-ceremony, and to that end, much of the required DO-178B documentation is omitted. We retain only those parts that genuinely improve quality for a open-source software project such as SQLite.</source>
          <target state="translated">Вдохновением для этого документа является &lt;a href=&quot;https://en.wikipedia.org/wiki/DO-178B&quot;&gt;DO-178B&lt;/a&gt; . Среди стандартов качества, DO-178B, кажется, имеет самое высокое соотношение полезности и бумажной волокиты. Даже в этом случае объем документации, необходимой для полноценной реализации DO-178B, огромен. SQLite стремится быть гибким и непринужденным, поэтому большая часть необходимой документации DO-178B опущена. Мы оставляем только те части, которые действительно улучшают качество для проекта программного обеспечения с открытым исходным кодом, такого как SQLite.</target>
        </trans-unit>
        <trans-unit id="eeb6f7cf85fc1473abd39059a6c5676d36ad32d5" translate="yes" xml:space="preserve">
          <source>The instr(X,Y) function finds the first occurrence of string Y within string X and returns the number of prior characters plus 1, or 0 if Y is nowhere found within X. Or, if X and Y are both BLOBs, then instr(X,Y) returns one more than the number bytes prior to the first occurrence of Y, or 0 if Y does not occur anywhere within X. If both arguments X and Y to instr(X,Y) are non-NULL and are not BLOBs then both are interpreted as strings. If either X or Y are NULL in instr(X,Y) then the result is NULL.</source>
          <target state="translated">Функция instr(X,Y)находит первое вхождение строки Y в строке X и возвращает количество предыдущих символов плюс 1,или 0,если Y нигде не встречается в пределах X.Или,если X и Y оба BLOB,то instr(X,Y)возвращает на один байт больше,чем количество байтов до первого вхождения Y,или 0,если Y нигде не встречается в пределах X.Если оба аргумента X и Y в instr(X,Y)не NULL и не являются BLOB,то оба интерпретируются как строки.Если оба аргумента X или Y в instr(X,Y)являются NULL,то результат интерпретируется как NULL.</target>
        </trans-unit>
        <trans-unit id="a78743c67ceb66f35152669e19fad52bf271ff90" translate="yes" xml:space="preserve">
          <source>The instruction &lt;a href=&quot;opcode#Close&quot;&gt;Close&lt;/a&gt; closes a cursor previously opened as P1 (0, the only open cursor). If P1 is not currently open, this instruction is a no-op.</source>
          <target state="translated">Инструкция &lt;a href=&quot;opcode#Close&quot;&gt;Close&lt;/a&gt; закрывает курсор, ранее открытый как P1 (0, единственный открытый курсор). Если P1 в настоящее время не открыт, эта инструкция не работает.</target>
        </trans-unit>
        <trans-unit id="e8c5c65cb041570fcd5ae40ccc7306b738bb99f4" translate="yes" xml:space="preserve">
          <source>The instruction &lt;a href=&quot;opcode#Commit&quot;&gt;Commit&lt;/a&gt; causes all modifications to the database that have been made since the last Transaction to actually take effect. No additional modifications are allowed until another transaction is started. The Commit instruction deletes the journal file and releases the write lock on the database. A read lock continues to be held if there are still cursors open.</source>
          <target state="translated">Инструкция &lt;a href=&quot;opcode#Commit&quot;&gt;Commit&lt;/a&gt; заставляет все изменения в базе данных, которые были сделаны с момента последней транзакции, фактически вступают в силу. Никакие дополнительные изменения не допускаются, пока не будет запущена другая транзакция. Команда фиксации удаляет файл журнала и снимает блокировку записи в базе данных. Блокировка чтения продолжает удерживаться, если все еще открыты курсоры.</target>
        </trans-unit>
        <trans-unit id="71d724f14f1b112c6a8977fb693b84af3a6cb813" translate="yes" xml:space="preserve">
          <source>The instruction &lt;a href=&quot;opcode#Halt&quot;&gt;Halt&lt;/a&gt; causes the VDBE engine to exit immediately. All open cursors, Lists, Sorts, etc are closed automatically. P1 is the result code returned by sqlite_exec(). For a normal halt, this should be SQLITE_OK (0). For errors, it can be some other value. The operand P2 is only used when there is an error. There is an implied &quot;Halt 0 0 0&quot; instruction at the end of every program, which the VDBE appends when it prepares a program to run.</source>
          <target state="translated">Команда &lt;a href=&quot;opcode#Halt&quot;&gt;Halt&lt;/a&gt; немедленно завершает работу обработчика VDBE. Все открытые курсоры, списки, сортировки и т. Д. Закрываются автоматически. P1 - это код результата, возвращаемый sqlite_exec (). Для нормальной остановки это должно быть SQLITE_OK (0). Для ошибок это может быть другое значение. Операнд P2 используется только в случае ошибки. В конце каждой программы имеется подразумеваемая инструкция &amp;laquo;Halt 0 0 0&amp;raquo;, которую VDBE добавляет при подготовке программы к запуску.</target>
        </trans-unit>
        <trans-unit id="4a2e93cc788564162251660dae046bf0362122e8" translate="yes" xml:space="preserve">
          <source>The instruction &lt;a href=&quot;opcode#IdxRecno&quot;&gt;IdxRecno&lt;/a&gt; at 13 pushes onto the stack the table record number from the index. The following MoveTo pops it and moves the table cursor to that row. The next 3 instructions select the column data the same way as in the non- indexed case. The Column instructions fetch the column data and the callback function is invoked. The final Next instruction advances the index cursor, not the table cursor, to the next row, and then branches back to the start of the loop if there are any index records left.</source>
          <target state="translated">Инструкция &lt;a href=&quot;opcode#IdxRecno&quot;&gt;IdxRecno&lt;/a&gt; в 13 помещает в стек номер записи таблицы из индекса. Следующий MoveTo всплывает и перемещает курсор таблицы в эту строку. Следующие 3 инструкции выбирают данные столбца так же, как и в случае без индексации. Инструкции Column извлекают данные столбца, и вызывается функция обратного вызова. Последняя инструкция Next перемещает курсор индекса, а не курсор таблицы, к следующей строке, а затем выполняет обратный переход к началу цикла, если остались какие-либо записи индекса.</target>
        </trans-unit>
        <trans-unit id="89a91a29199817279a977a2ce4541fd6e7fee24a" translate="yes" xml:space="preserve">
          <source>The instruction &lt;a href=&quot;opcode#Integer&quot;&gt;Integer&lt;/a&gt; pushes its P1 operand (99) onto the stack. Afterwards the stack looks like this:</source>
          <target state="translated">Инструкция &lt;a href=&quot;opcode#Integer&quot;&gt;Integer&lt;/a&gt; помещает свой операнд P1 (99) в стек. После этого стек выглядит так:</target>
        </trans-unit>
        <trans-unit id="15f722b882a29ac5b03a20e923af0ef9dcb502b1" translate="yes" xml:space="preserve">
          <source>The instruction &lt;a href=&quot;opcode#Integer&quot;&gt;Integer&lt;/a&gt; pushes the integer value P1 (0) onto the stack. Here 0 is the number of the database to use in the following OpenWrite instruction. If P3 is not NULL then it is a string representation of the same integer. Afterwards the stack looks like this:</source>
          <target state="translated">Инструкция &lt;a href=&quot;opcode#Integer&quot;&gt;Integer&lt;/a&gt; помещает в стек целочисленное значение P1 (0). Здесь 0 - это номер базы данных, которая будет использоваться в следующей инструкции OpenWrite. Если P3 не равно NULL, то это строковое представление того же целого числа. После этого стек выглядит так:</target>
        </trans-unit>
        <trans-unit id="d1df5b7ac8ac4ed32e40d9d958d1c725defad872" translate="yes" xml:space="preserve">
          <source>The instruction &lt;a href=&quot;opcode#MakeRecord&quot;&gt;MakeRecord&lt;/a&gt; pops the top P1 elements off the stack (2 in this case) and converts them into the binary format used for storing records in a database file. (See the &lt;a href=&quot;fileformat&quot;&gt;file format&lt;/a&gt; description for details.) The new record generated by the MakeRecord instruction is pushed back onto the stack. Afterwards the stack looks like this:</source>
          <target state="translated">Инструкция &lt;a href=&quot;opcode#MakeRecord&quot;&gt;MakeRecord&lt;/a&gt; извлекает верхние элементы P1 из стека (в данном случае 2) и преобразует их в двоичный формат, используемый для хранения записей в файле базы данных. (Подробности см. В описании &lt;a href=&quot;fileformat&quot;&gt;формата файла&lt;/a&gt; .) Новая запись, созданная инструкцией MakeRecord, помещается обратно в стек. После этого стек выглядит так:</target>
        </trans-unit>
        <trans-unit id="21bb54c4787b5b030612c3d381e1ba9b4bb1f341" translate="yes" xml:space="preserve">
          <source>The instruction &lt;a href=&quot;opcode#NewRecno&quot;&gt;NewRecno&lt;/a&gt; creates a new integer record number for the table pointed to by cursor P1. The record number is one not currently used as a key in the table. The new record number is pushed onto the stack. Afterwards the stack looks like this:</source>
          <target state="translated">Инструкция &lt;a href=&quot;opcode#NewRecno&quot;&gt;NewRecno&lt;/a&gt; создает новый целочисленный номер записи для таблицы, на которую указывает курсор P1. Номер записи - это тот, который в настоящее время не используется в качестве ключа в таблице. Новый номер записи помещается в стек. После этого стек выглядит так:</target>
        </trans-unit>
        <trans-unit id="213073395c8927a399e8bb754b1febc0fe16eb95" translate="yes" xml:space="preserve">
          <source>The instruction &lt;a href=&quot;opcode#OpenWrite&quot;&gt;OpenWrite&lt;/a&gt; opens a new read/write cursor with handle P1 (0 in this case) on table &quot;examp&quot;, whose root page is P2 (3, in this database file). Cursor handles can be any non-negative integer. But the VDBE allocates cursors in an array with the size of the array being one more than the largest cursor. So to conserve memory, it is best to use handles beginning with zero and working upward consecutively. Here P3 (&quot;examp&quot;) is the name of the table being opened, but this is unused, and only generated to make the code easier to read. This instruction pops the database number to use (0, the main database) from the top of the stack, so afterwards the stack is empty again.</source>
          <target state="translated">Инструкция &lt;a href=&quot;opcode#OpenWrite&quot;&gt;OpenWrite&lt;/a&gt; открывает новый курсор чтения / записи с дескриптором P1 (в данном случае 0) в таблице examp, корневой страницей которой является P2 (3 в этом файле базы данных). Дескрипторы курсора могут быть любым неотрицательным целым числом. Но VDBE выделяет курсоры в массиве, размер которого на единицу больше размера самого большого курсора. Поэтому для экономии памяти лучше всего использовать дескрипторы, начинающиеся с нуля и последовательно повышающиеся. Здесь P3 (&amp;laquo;пример&amp;raquo;) - это имя открываемой таблицы, но оно не используется и генерируется только для облегчения чтения кода. Эта инструкция выталкивает номер базы данных для использования (0, основная база данных) из вершины стека, поэтому после этого стек снова становится пустым.</target>
        </trans-unit>
        <trans-unit id="98bb30ff1b874474319c63eb890c40ec0fb09de2" translate="yes" xml:space="preserve">
          <source>The instruction &lt;a href=&quot;opcode#PutIntKey&quot;&gt;PutIntKey&lt;/a&gt; uses the top 2 stack entries to write an entry into the table pointed to by cursor P1. A new entry is created if it doesn't already exist or the data for an existing entry is overwritten. The record data is the top stack entry, and the key is the next entry down. The stack is popped twice by this instruction. Because operand P2 is 1 the row change count is incremented and the rowid is stored for subsequent return by the sqlite_last_insert_rowid() function. If P2 is 0 the row change count is unmodified. This instruction is where the insert actually occurs.</source>
          <target state="translated">Инструкция &lt;a href=&quot;opcode#PutIntKey&quot;&gt;PutIntKey&lt;/a&gt; использует две верхние записи стека для записи записи в таблицу, на которую указывает курсор P1. Новая запись создается, если она еще не существует или данные для существующей записи перезаписываются. Данные записи - это верхняя запись стека, а ключ - следующая запись вниз. Эта инструкция выталкивает стек дважды. Поскольку операнд P2 равен 1, счетчик изменений строки увеличивается, а идентификатор строки сохраняется для последующего возврата функцией sqlite_last_insert_rowid (). Если P2 равен 0, счетчик изменений строки не изменяется. В этой инструкции происходит вставка.</target>
        </trans-unit>
        <trans-unit id="0b320ec6225176f371f5c1f951d40976365b4443" translate="yes" xml:space="preserve">
          <source>The instruction &lt;a href=&quot;opcode#String&quot;&gt;String&lt;/a&gt; pushes its P3 operand onto the stack. Afterwards the stack looks like this:</source>
          <target state="translated">Инструкция &lt;a href=&quot;opcode#String&quot;&gt;String&lt;/a&gt; помещает свой операнд P3 в стек. После этого стек выглядит так:</target>
        </trans-unit>
        <trans-unit id="d914ce420de942b21ca6d5eb303d1b4bdd87f483" translate="yes" xml:space="preserve">
          <source>The instruction &lt;a href=&quot;opcode#Transaction&quot;&gt;Transaction&lt;/a&gt; begins a transaction. The transaction ends when a Commit or Rollback opcode is encountered. P1 is the index of the database file on which the transaction is started. Index 0 is the main database file. A write lock is obtained on the database file when a transaction is started. No other process can read or write the file while the transaction is underway. Starting a transaction also creates a rollback journal. A transaction must be started before any changes can be made to the database.</source>
          <target state="translated">Инструкция &lt;a href=&quot;opcode#Transaction&quot;&gt;Transaction&lt;/a&gt; начинает транзакцию. Транзакция завершается, когда встречается код операции фиксации или отката. P1 - это индекс файла базы данных, для которого запускается транзакция. Индекс 0 - это главный файл базы данных. При запуске транзакции для файла базы данных устанавливается блокировка записи. Ни один другой процесс не может читать или записывать файл во время выполнения транзакции. При запуске транзакции также создается журнал отката. Перед внесением каких-либо изменений в базу данных необходимо запустить транзакцию.</target>
        </trans-unit>
        <trans-unit id="766fac627c726045a9f4c4dcb9828d544fcadbb2" translate="yes" xml:space="preserve">
          <source>The instruction &lt;a href=&quot;opcode#VerifyCookie&quot;&gt;VerifyCookie&lt;/a&gt; checks cookie 0 (the database schema version) to make sure it is equal to P2 (the value obtained when the database schema was last read). P1 is the database number (0 for the main database). This is done to make sure the database schema hasn't been changed by another thread, in which case it has to be reread.</source>
          <target state="translated">Инструкция &lt;a href=&quot;opcode#VerifyCookie&quot;&gt;VerifyCookie&lt;/a&gt; проверяет cookie 0 (версия схемы базы данных), чтобы убедиться, что она равна P2 (значению, полученному при последнем чтении схемы базы данных). P1 - номер базы данных (0 для основной базы данных). Это делается для того, чтобы убедиться, что схема базы данных не была изменена другим потоком, и в этом случае ее необходимо перечитать.</target>
        </trans-unit>
        <trans-unit id="1541b9a811a194a4f9e80a336055e479ef3f480e" translate="yes" xml:space="preserve">
          <source>The instruction at address 9 implements the branching part of the loop. Together with the Rewind at address 5 it forms the loop logic. This is a key concept that you should pay close attention to. The &lt;a href=&quot;opcode#Next&quot;&gt;Next&lt;/a&gt; instruction advances the cursor P1 to the next record. If the cursor advance was successful, then jump immediately to P2 (6, the beginning of the loop body). If the cursor was at the end, then fall through to the following instruction, which ends the loop.</source>
          <target state="translated">Инструкция по адресу 9 реализует ветвящуюся часть цикла. Вместе с перемоткой назад по адресу 5 он формирует логику цикла. Это ключевая концепция, на которую следует обратить пристальное внимание. Команда &lt;a href=&quot;opcode#Next&quot;&gt;Next&lt;/a&gt; перемещает курсор P1 к следующей записи. Если перемещение курсора прошло успешно, сразу переходите к P2 (6, начало тела цикла). Если курсор был в конце, то переходите к следующей инструкции, которая завершает цикл.</target>
        </trans-unit>
        <trans-unit id="14da6ae11560ca2b2c31ae75e094431766a4621e" translate="yes" xml:space="preserve">
          <source>The instruction at the address in register P1 is a &lt;a href=&quot;opcode#Yield&quot;&gt;Yield&lt;/a&gt;. &lt;a href=&quot;opcode#Jump&quot;&gt;Jump&lt;/a&gt; to the P2 parameter of that &lt;a href=&quot;opcode#Yield&quot;&gt;Yield&lt;/a&gt;. After the jump, register P1 becomes undefined.</source>
          <target state="translated">Инструкция по адресу в регистре P1 - это &lt;a href=&quot;opcode#Yield&quot;&gt;доходность&lt;/a&gt; . &lt;a href=&quot;opcode#Jump&quot;&gt;Перейдите&lt;/a&gt; к параметру P2 этой &lt;a href=&quot;opcode#Yield&quot;&gt;доходности&lt;/a&gt; . После перехода регистр P1 становится неопределенным.</target>
        </trans-unit>
        <trans-unit id="cd201e480371afb73e8686f10704843996fccd91" translate="yes" xml:space="preserve">
          <source>The instructions 6 through 8 form the body of the loop that will execute once for each record in the database file. The &lt;a href=&quot;opcode#Column&quot;&gt;Column&lt;/a&gt; instructions at addresses 6 and 7 each take the P2-th column from the P1-th cursor and push it onto the stack. In this example, the first Column instruction is pushing the value for the column &quot;one&quot; onto the stack and the second Column instruction is pushing the value for column &quot;two&quot;. The &lt;a href=&quot;opcode#Callback&quot;&gt;Callback&lt;/a&gt; instruction at address 8 invokes the callback() function. The P1 operand to Callback becomes the value for &lt;b&gt;nColumn&lt;/b&gt;. The Callback instruction pops P1 values from the stack and uses them to fill the &lt;b&gt;azData[]&lt;/b&gt; array.</source>
          <target state="translated">Команды с 6 по 8 образуют тело цикла, который выполняется один раз для каждой записи в файле базы данных. В &lt;a href=&quot;opcode#Column&quot;&gt;Колонка&lt;/a&gt; инструкции по адресам 6 и 7 каждый берет Р2-й столбец из P1-го курсора и толкать его в стек. В этом примере первая инструкция столбца помещает значение столбца &amp;laquo;один&amp;raquo; в стек, а вторая инструкция столбца помещает значение столбца &amp;laquo;два&amp;raquo;. &lt;a href=&quot;opcode#Callback&quot;&gt;Обратный вызов&lt;/a&gt; Инструкция по адресу 8 вызывает функцию обратного вызова (). Операнд P1 для обратного вызова становится значением для &lt;b&gt;nColumn&lt;/b&gt; . Инструкция обратного вызова извлекает значения P1 из стека и использует их для заполнения массива &lt;b&gt;azData []&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="c46964020db9e221e22ce0203153f52f7c4afbe0" translate="yes" xml:space="preserve">
          <source>The integer values returned by two invocations of &quot;PRAGMA data_version&quot; from the same connection will be different if changes were committed to the database by any other connection in the interim. The &quot;PRAGMA data_version&quot; value is unchanged for commits made on the same database connection. The behavior of &quot;PRAGMA data_version&quot; is the same for all database connections, including database connections in separate processes and &lt;a href=&quot;sharedcache&quot;&gt;shared cache&lt;/a&gt; database connections.</source>
          <target state="translated">Целочисленные значения, возвращаемые двумя вызовами PRAGMA data_version из одного и того же соединения, будут разными, если изменения были зафиксированы в базе данных каким-либо другим соединением за это время. Значение PRAGMA data_version не изменяется для коммитов, сделанных на одном и том же соединении с базой данных. Поведение PRAGMA data_version одинаково для всех соединений с базой данных, включая соединения с базой данных в отдельных процессах и соединения с базой данных с &lt;a href=&quot;sharedcache&quot;&gt;общим кешем&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e05f2b57d17a355c0ea1387908101e6bd52b31e" translate="yes" xml:space="preserve">
          <source>The integer values to xLock() and xUnlock() are one of</source>
          <target state="translated">Целые значения к xLock()и xUnlock()являются одним из</target>
        </trans-unit>
        <trans-unit id="3a9652af526f0c1e8a87ab92c4d5d7f777a76ac5" translate="yes" xml:space="preserve">
          <source>The integrity-check command is invoked by inserting the text value 'integrity-check' into the special column with the same name as the FTS5 table. For example:</source>
          <target state="translated">Команда проверки целостности вызывается путем вставки текстового значения 'проверка целостности' в специальный столбец с тем же именем,что и таблица FTS5.Например:</target>
        </trans-unit>
        <trans-unit id="8b9cbbc162055ec87304da9b44deb92f428d9750" translate="yes" xml:space="preserve">
          <source>The intended use of this pragma is only for testing and validation of SQLite. This pragma is subject to change without notice and is not recommended for use by application programs.</source>
          <target state="translated">Предназначение данной прагмы заключается только в тестировании и валидации SQLite.Данная прагма может быть изменена без предварительного уведомления и не рекомендуется для использования прикладными программами.</target>
        </trans-unit>
        <trans-unit id="ff65b14ad46243e5d5f2ba9708d0bfaa67d238c4" translate="yes" xml:space="preserve">
          <source>The intent of the developers is to support SQLite through the year 2050.</source>
          <target state="translated">Целью разработчиков является поддержка SQLite до 2050 года.</target>
        </trans-unit>
        <trans-unit id="b8c5c15fb8411770e1f2302c0a93c745cb58106c" translate="yes" xml:space="preserve">
          <source>The intent of these enhancements to the &lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE&lt;/a&gt; and &lt;a href=&quot;lang_droptable&quot;&gt;DROP TABLE&lt;/a&gt; commands is to ensure that they cannot be used to create a database that contains foreign key violations, at least while foreign key constraints are enabled. There is one exception to this rule though. If a parent key is not subject to a PRIMARY KEY or UNIQUE constraint created as part of the parent table definition, but is subject to a UNIQUE constraint by virtue of an index created using the &lt;a href=&quot;lang_createindex&quot;&gt;CREATE INDEX&lt;/a&gt; command, then the child table may be populated without causing a &quot;foreign key mismatch&quot; error. If the UNIQUE index is dropped from the database schema, then the parent table itself is dropped, no error will be reported. However the database may be left in a state where the child table of the foreign key constraint contains rows that do not refer to any parent table row. This case can be avoided if all parent keys in the database schema are constrained by PRIMARY KEY or UNIQUE constraints added as part of the parent table definition, not by external UNIQUE indexes.</source>
          <target state="translated">Эти усовершенствования команд &lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE&lt;/a&gt; и &lt;a href=&quot;lang_droptable&quot;&gt;DROP TABLE&lt;/a&gt; предназначены для того, чтобы гарантировать, что их нельзя использовать для создания базы данных, содержащей нарушения внешнего ключа, по крайней мере, пока включены ограничения внешнего ключа. Однако есть одно исключение из этого правила. Если родительский ключ не подчиняется ограничениям PRIMARY KEY или UNIQUE, созданным как часть определения родительской таблицы, но подчиняется ограничению UNIQUE в силу индекса, созданного с помощью &lt;a href=&quot;lang_createindex&quot;&gt;CREATE INDEX&lt;/a&gt;команда, то дочерняя таблица может быть заполнена, не вызывая ошибки &amp;laquo;несоответствие внешнего ключа&amp;raquo;. Если индекс UNIQUE удаляется из схемы базы данных, тогда удаляется и сама родительская таблица, об ошибках не сообщается. Однако база данных может оставаться в состоянии, когда дочерняя таблица ограничения внешнего ключа содержит строки, которые не относятся к какой-либо строке родительской таблицы. Этого случая можно избежать, если все родительские ключи в схеме базы данных ограничены ограничениями PRIMARY KEY или UNIQUE, добавленными как часть определения родительской таблицы, а не внешними индексами UNIQUE.</target>
        </trans-unit>
        <trans-unit id="f25fb84e751737880254b9bbae4d5bcd681d4573" translate="yes" xml:space="preserve">
          <source>The interface between the VDBE and B-Tree layer is enhanced such that the VDBE provides hints to the B-Tree layer letting the B-Tree layer know when it is safe to use hashing instead of B-Trees for transient tables.</source>
          <target state="translated">Интерфейс между VDBE и слоем B-Tree улучшен таким образом,что VDBE дает подсказки к слою B-Tree,давая знать слою B-Tree,когда безопасно использовать хэширование вместо B-Tree для переходных таблиц.</target>
        </trans-unit>
        <trans-unit id="8f6df7d6e95fb6e2e2d0cc834a6496c76dd46264" translate="yes" xml:space="preserve">
          <source>The interface to the B-tree subsystem and the rest of the SQLite library is defined by the header file &lt;a href=&quot;https://sqlite.org/src/file/src/btree.h&quot;&gt;btree.h&lt;/a&gt;.</source>
          <target state="translated">Интерфейс к подсистеме B-дерева и остальной части библиотеки SQLite определяется заголовочным файлом &lt;a href=&quot;https://sqlite.org/src/file/src/btree.h&quot;&gt;btree.h&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b91796ad2d511be2d8979f83ba1c6fb0431a4019" translate="yes" xml:space="preserve">
          <source>The interface to the SQLite library consists of single tcl command named &lt;b&gt;sqlite3&lt;/b&gt; Because there is only this one command, the interface is not placed in a separate namespace.</source>
          <target state="translated">Интерфейс к библиотеке SQLite состоит из одной команды tcl с именем &lt;b&gt;sqlite3.&lt;/b&gt; Поскольку существует только эта одна команда, интерфейс не помещается в отдельное пространство имен.</target>
        </trans-unit>
        <trans-unit id="3c849c0d323b0ad6135a0bb1621f8f7a986a9fa1" translate="yes" xml:space="preserve">
          <source>The interface to the SQLite library consists of three core functions, one opaque data structure, and some constants used as return values. The core interface is as follows:</source>
          <target state="translated">Интерфейс к библиотеке SQLite состоит из трех основных функций,одной непрозрачной структуры данных и некоторых констант,используемых в качестве возвращаемых значений.Интерфейс ядра выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="da5910db62046423c913e2518dadca7a36c2bb7d" translate="yes" xml:space="preserve">
          <source>The interface used by the implementation of the aforementioned functions to retrieve the collation sequence set by this opcode is not available publicly. Only built-in functions have access to this feature.</source>
          <target state="translated">Интерфейс,используемый при реализации вышеуказанных функций для получения последовательности сравнения,заданной данным опкодом,не доступен публично.Только встроенные функции имеют доступ к этой функции.</target>
        </trans-unit>
        <trans-unit id="1824212549f384e7aed12eb3886c9cf696af6dde" translate="yes" xml:space="preserve">
          <source>The interfaces necessary to construct a function that is sometimes deterministic and sometimes non-deterministic depending on their inputs, such as the built-in date/time functions, are not published. Generic &lt;a href=&quot;appfunc&quot;&gt;application-defined SQL functions&lt;/a&gt; must be always deterministic or always non-deterministic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c461e3315f13aa8457935ffce58f8ac7ef7cd3" translate="yes" xml:space="preserve">
          <source>The interfaces necessary to construct a function that is sometimes deterministic and sometimes non-deterministic depending on their inputs, such as the built-in date/time functions, are not published. Generic &lt;a href=&quot;c3ref/create_function&quot;&gt;application-defined SQL functions&lt;/a&gt; must be always deterministic or always non-deterministic.</source>
          <target state="translated">Интерфейсы, необходимые для создания функции, которая иногда является детерминированной, а иногда и недетерминированной в зависимости от их входных данных, например, встроенные функции даты / времени, не публикуются. Общие &lt;a href=&quot;c3ref/create_function&quot;&gt;определяемые приложением функции SQL&lt;/a&gt; должны быть всегда детерминированными или всегда недетерминированными.</target>
        </trans-unit>
        <trans-unit id="15015bc60e3376a39ca9d7ebc27d602beffae1d0" translate="yes" xml:space="preserve">
          <source>The internal Mem object stores the value for a single register. The abstract &lt;a href=&quot;c3ref/value&quot;&gt;sqlite3_value&lt;/a&gt; object that is exposed in the API is really just a Mem object or register.</source>
          <target state="translated">Внутренний объект Mem хранит значение для одного регистра. Абстрактный объект &lt;a href=&quot;c3ref/value&quot;&gt;sqlite3_value&lt;/a&gt; , представленный в API, на самом деле является просто объектом или регистром Mem.</target>
        </trans-unit>
        <trans-unit id="e1059fa5a511cb460ad6acfc6dbdaaa7898a9f5d" translate="yes" xml:space="preserve">
          <source>The internal organization of the SQLite library can be viewed as the stack of modules shown to the right. The Tokenizer, Parser, and Code Generator components are used to process SQL statements and convert them into executable programs in a virtual machine language or byte code. Roughly speaking, these top three layers implement &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt;. The byte code generated by the top three layers is a &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt;. The Virtual Machine module is responsible for running the SQL statement byte code. The B-Tree module organizes a database file into multiple key/value stores with ordered keys and logarithmic performance. The Pager module is responsible for loading pages of the database file into memory, for implementing and controlling transactions, and for creating and maintaining the journal files that prevent database corruption following a crash or power failure. The OS Interface is a thin abstraction that provides a common set of routines for adapting SQLite to run on different operating systems. Roughly speaking, the bottom four layers implement &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt;.</source>
          <target state="translated">Внутреннюю организацию библиотеки SQLite можно рассматривать как стек модулей, показанный справа. Компоненты Tokenizer, Parser и Code Generator используются для обработки операторов SQL и преобразования их в исполняемые программы на языке виртуальной машины или байтовом коде. Грубо говоря, эти три верхних уровня реализуют &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2 ()&lt;/a&gt; . Байт-код, сгенерированный тремя верхними слоями, представляет собой &lt;a href=&quot;c3ref/stmt&quot;&gt;подготовленный оператор.&lt;/a&gt;. Модуль виртуальной машины отвечает за выполнение байтового кода оператора SQL. Модуль B-Tree организует файл базы данных в несколько хранилищ ключей / значений с упорядоченными ключами и логарифмической производительностью. Модуль пейджера отвечает за загрузку страниц файла базы данных в память, за реализацию и контроль транзакций, а также за создание и поддержку файлов журнала, которые предотвращают повреждение базы данных после сбоя или сбоя питания. Интерфейс ОС - это тонкая абстракция, которая предоставляет общий набор процедур для адаптации SQLite для работы в разных операционных системах. Грубо говоря, нижние четыре уровня реализуют &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b82fe06906efdf8da65bc9a3b09aabf0c14e629e" translate="yes" xml:space="preserve">
          <source>The internet is an increasingly hostile place. These day, developers should assume that attackers will find a way to execute arbitrary SQL in an application. Applications should be designed to prevent the execution of arbitrary SQL from escalating into a more severe exploit.</source>
          <target state="translated">Интернет становится все более враждебным местом.В наши дни разработчики должны исходить из того,что злоумышленники найдут способ выполнить произвольный SQL в приложении.Приложения должны быть спроектированы таким образом,чтобы предотвратить превращение выполнения произвольного SQL в более серьезный эксплойт.</target>
        </trans-unit>
        <trans-unit id="541368df6be3b3211d485998b29f10dd5bcba535" translate="yes" xml:space="preserve">
          <source>The interpretation of the final column, if it is present, is &lt;a href=&quot;swarmvtab#component_table_context_values&quot;&gt;described here&lt;/a&gt;.</source>
          <target state="translated">Здесь &lt;a href=&quot;swarmvtab#component_table_context_values&quot;&gt;описывается&lt;/a&gt; интерпретация последнего столбца, если он присутствует .</target>
        </trans-unit>
        <trans-unit id="ecf9411adae8ae3787bf4274e751f3717d6110f0" translate="yes" xml:space="preserve">
          <source>The ioctl on Mac OS X to control syncing to disk is F_FULLFSYNC, not F_FULLSYNC. The previous release had it wrong.</source>
          <target state="translated">ioctl на Mac OS X для управления синхронизацией с диском-F_FULLFSYNC,а не F_FULLSYNC.Предыдущий релиз ошибся.</target>
        </trans-unit>
        <trans-unit id="d9c0a5f06c6830c793bad013d5441e96d45f8af0" translate="yes" xml:space="preserve">
          <source>The job of the eval method is to execute the SQL statement or statements given in the second argument. For example, to create a new table in a database, you can do this:</source>
          <target state="translated">Задачей метода оценки является выполнение SQL-оператора или операторов,указанных во втором аргументе.Например,для создания новой таблицы в базе данных это можно сделать:</target>
        </trans-unit>
        <trans-unit id="ce55e90a07de980cc86c5f2dfac419a865729e47" translate="yes" xml:space="preserve">
          <source>The job of this method is to construct the new virtual table object (an &lt;a href=&quot;c3ref/vtab&quot;&gt;sqlite3_vtab&lt;/a&gt; object) and return a pointer to it in *ppVTab.</source>
          <target state="translated">Задача этого метода - создать новый объект виртуальной таблицы ( объект &lt;a href=&quot;c3ref/vtab&quot;&gt;sqlite3_vtab&lt;/a&gt; ) и вернуть на него указатель в * ppVTab.</target>
        </trans-unit>
        <trans-unit id="82b29f2835b0336ce594d7095e779f9ce1307885" translate="yes" xml:space="preserve">
          <source>The journal header is non-zero and well-formed, and</source>
          <target state="translated">Заголовок журнала ненулевой и хорошо сформированный,и</target>
        </trans-unit>
        <trans-unit id="3978774f2c0624ee0736d9f40af64bca3b94a2e0" translate="yes" xml:space="preserve">
          <source>The journal tests are an additional double-check over and above the crash tests to make sure that SQLite transactions will be atomic across system crashes and power failures.</source>
          <target state="translated">Журнальные тесты являются дополнительной двойной проверкой,помимо краш-тестов,чтобы удостовериться,что транзакции SQLite будут атомарными в случае сбоя системы и отключения электропитания.</target>
        </trans-unit>
        <trans-unit id="eadea62ca220c75cf3d8b7ee7d22ba8de7aa3934" translate="yes" xml:space="preserve">
          <source>The journal_mode pragma returns a string which is the new journal mode. On success, the pragma will return the string &quot;&lt;code&gt;wal&lt;/code&gt;&quot;. If the conversion to WAL could not be completed (for example, if the &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; does not support the necessary shared-memory primitives) then the journaling mode will be unchanged and the string returned from the primitive will be the prior journaling mode (for example &quot;&lt;code&gt;delete&lt;/code&gt;&quot;).</source>
          <target state="translated">Прагма journal_mode возвращает строку, которая является новым режимом журнала. В случае успеха прагма вернет строку &quot; &lt;code&gt;wal&lt;/code&gt; &quot;. Если преобразование в WAL не может быть завершено (например, если &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; не поддерживает необходимые примитивы совместно используемой памяти), то режим журналирования не изменится, а строка, возвращенная из примитива, будет предыдущим режимом журналирования (например, &quot; &lt;code&gt;delete&lt;/code&gt; &quot;).</target>
        </trans-unit>
        <trans-unit id="cf12bc7373958f09d761ed0f9bf5075e87444a0e" translate="yes" xml:space="preserve">
          <source>The journal_size_limit pragma may be used to limit the size of rollback-journal and WAL files left in the file-system after transactions or checkpoints. Each time a transaction is committed or a WAL file resets, SQLite compares the size of the rollback journal file or WAL file left in the file-system to the size limit set by this pragma and if the journal or WAL file is larger it is truncated to the limit.</source>
          <target state="translated">Прагма journal_size_limit может быть использована для ограничения размера отката журнала и файлов WAL,оставленных в файловой системе после транзакций или контрольно-пропускных пунктов.При каждой фиксации транзакции или сбросе файла WAL SQLite сравнивает размер файла журнала отката или файла WAL,оставшегося в файловой системе,с предельным размером,установленным данной прагмой,и если размер журнала или файла WAL больше,то он усекается до предела.</target>
        </trans-unit>
        <trans-unit id="e4ee7815366ce998637e6c73fab93997f9ad3bf9" translate="yes" xml:space="preserve">
          <source>The json(X) function verifies that its argument X is a valid JSON string and returns a minified version of that JSON string (with all unnecessary whitespace removed). If X is not a well-formed JSON string, then this routine throws an error.</source>
          <target state="translated">Функция json(X)проверяет,что ее аргумент X является действительной JSON-строкой,и возвращает уменьшенную версию этой JSON-строки (со всеми лишними пробелами).Если X не является хорошо сформированной JSON-строкой,то эта рутина выдает ошибку.</target>
        </trans-unit>
        <trans-unit id="b38a8f8844d02f721e88e8305af9dc835b4312f1" translate="yes" xml:space="preserve">
          <source>The json1 extension (currently) stores JSON as ordinary text.</source>
          <target state="translated">Расширение json1 (в настоящее время)хранит JSON в виде обычного текста.</target>
        </trans-unit>
        <trans-unit id="600cff3bfb9b2a0fb597c7fc0f7fa3f65076ca7b" translate="yes" xml:space="preserve">
          <source>The json1 extension does not (currently) support a binary encoding of JSON. Experiments have been unable to find a binary encoding that is significantly smaller or faster than a plain text encoding. (The present implementation parses JSON text at over 1 GB/s.) All json1 functions currently throw an error if any of their arguments are BLOBs because BLOBs are reserved for a future enhancement in which BLOBs will store the binary encoding for JSON.</source>
          <target state="translated">Расширение json1 (в настоящее время)не поддерживает двоичную кодировку JSON.Эксперименты не смогли найти двоичную кодировку,которая была бы значительно меньше или быстрее,чем обычная текстовая кодировка.(В настоящее время реализация разбирает JSON текст со скоростью более 1 ГБ/с.)Все функции json1 в настоящее время бросают ошибку,если какой-либо из их аргументов является BLOB,потому что BLOB-функции зарезервированы для будущего расширения,в котором BLOB-функции будут хранить двоичную кодировку для JSON.</target>
        </trans-unit>
        <trans-unit id="50447979a47d38485f569438ae4849e4fe11a47d" translate="yes" xml:space="preserve">
          <source>The json1 extension uses the &lt;a href=&quot;c3ref/value_subtype&quot;&gt;sqlite3_value_subtype()&lt;/a&gt; and &lt;a href=&quot;c3ref/result_subtype&quot;&gt;sqlite3_result_subtype()&lt;/a&gt; interfaces that were introduced with SQLite version 3.9.0 (2015-10-14) The json1 extension will not work in earlier versions of SQLite.</source>
          <target state="translated">Расширение json1 использует интерфейсы &lt;a href=&quot;c3ref/value_subtype&quot;&gt;sqlite3_value_subtype ()&lt;/a&gt; и &lt;a href=&quot;c3ref/result_subtype&quot;&gt;sqlite3_result_subtype (),&lt;/a&gt; которые были представлены в SQLite версии 3.9.0 (2015-10-14). Расширение json1 не будет работать в более ранних версиях SQLite.</target>
        </trans-unit>
        <trans-unit id="96336d37aaa994d4a790a5daf6a1eabf939e9f47" translate="yes" xml:space="preserve">
          <source>The json1 source code is included with the SQLite &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;, though it is disabled by default. Add the &lt;a href=&quot;compile#enable_json1&quot;&gt;-DSQLITE_ENABLE_JSON1&lt;/a&gt; compile-time option to enable the json1 extension that is built into the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;. The standard makefiles include -DSQLITE_ENABLE_JSON1 when building the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt; and some of the test utilities so this extension is normally available in the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">Исходный код json1 включен в &lt;a href=&quot;amalgamation&quot;&gt;объединение&lt;/a&gt; SQLite , хотя по умолчанию он отключен. Добавьте параметр &lt;a href=&quot;compile#enable_json1&quot;&gt;-DSQLITE_ENABLE_JSON1&lt;/a&gt; во время компиляции, чтобы включить расширение json1, встроенное в &lt;a href=&quot;amalgamation&quot;&gt;объединение&lt;/a&gt; . Стандартные файлы makefile включают -DSQLITE_ENABLE_JSON1 при создании &lt;a href=&quot;cli&quot;&gt;оболочки командной строки&lt;/a&gt; и некоторых тестовых утилит, поэтому это расширение обычно доступно в &lt;a href=&quot;cli&quot;&gt;оболочке командной строки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb08cc12ccf8da2d3e2af52ece257a447253b7e8" translate="yes" xml:space="preserve">
          <source>The json_array() SQL function accepts zero or more arguments and returns a well-formed JSON array that is composed from those arguments. If any argument to json_array() is a BLOB then an error is thrown.</source>
          <target state="translated">SQL-функция json_array()принимает нулевые или более аргументов и возвращает хорошо сформированный JSON-массив,который состоит из этих аргументов.Если любой аргумент функции json_array()является BLOB,то выдается ошибка.</target>
        </trans-unit>
        <trans-unit id="9521182f315a0d302eb912198a80302f20c295c7" translate="yes" xml:space="preserve">
          <source>The json_array_length(X) function returns the number of elements in the JSON array X, or 0 if X is some kind of JSON value other than an array. The json_array_length(X,P) locates the array at path P within X and returns the length of that array, or 0 if path P locates an element or X other than a JSON array, and NULL if path P does not locate any element of X. Errors are thrown if either X is not well-formed JSON or if P is not a well-formed path.</source>
          <target state="translated">Функция json_array_length(X)возвращает количество элементов в JSON-массиве X,или 0,если X является каким-либо JSON-значением,отличным от массива.Функция json_array_length(X,P)находит массив по пути P внутри X и возвращает длину этого массива,или 0,если путь P находит элемент или X,отличный от JSON-массива,и NULL,если путь P не находит ни одного элемента X.Ошибки выдаются,если либо X не является хорошо сформированным JSON,либо P не является хорошо сформированным путем.</target>
        </trans-unit>
        <trans-unit id="a38155ffebbf6577ab0909bd9445bf04a40481a5" translate="yes" xml:space="preserve">
          <source>The json_each(X) and json_tree(X) &lt;a href=&quot;vtab#tabfunc2&quot;&gt;table-valued functions&lt;/a&gt; walk the JSON value provided as their first argument and return one row for each element. The json_each(X) function only walks the immediate children of the top-level array or object or or just the top-level element itself if the top-level element is a primitive value. The json_tree(X) function recursively walks through the JSON substructure starting with the top-level element.</source>
          <target state="translated">Возвращающие &lt;a href=&quot;vtab#tabfunc2&quot;&gt;табличное значение функции&lt;/a&gt; json_each (X) и json_tree (X) проходят значение JSON, указанное в качестве первого аргумента, и возвращают по одной строке для каждого элемента. Функция json_each (X) просматривает только непосредственных потомков массива или объекта верхнего уровня или или только самого элемента верхнего уровня, если элемент верхнего уровня является примитивным значением. Функция json_tree (X) рекурсивно просматривает подструктуру JSON, начиная с элемента верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="41fff21b05289cb2b0be52b887077b0fcae3db31" translate="yes" xml:space="preserve">
          <source>The json_each(X,P) and json_tree(X,P) functions work just like their one-argument counterparts except that they treat the element identified by path P as the top-level element.</source>
          <target state="translated">Функции json_each(X,P)и json_tree(X,P)работают точно так же,как и их однопараметрические аналоги,за исключением того,что они рассматривают элемент,идентифицируемый по пути P,как элемент верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="c2ff80179397d0e306699ce5e6f1d0c9aff0af74" translate="yes" xml:space="preserve">
          <source>The json_extract(X,P1,P2,...) extracts and returns one or more values from the well-formed JSON at X. If only a single path P1 is provided, then the SQL datatype of the result is NULL for a JSON null, INTEGER or REAL for a JSON numeric value, an INTEGER zero for a JSON false value, an INTEGER one for a JSON true value, the dequoted text for a JSON string value, and a text representation for JSON object and array values. If there are multiple path arguments (P1, P2, and so forth) then this routine returns SQLite text which is a well-formed JSON array holding the various values.</source>
          <target state="translated">json_extract(X,P1,P2,...)извлекает и возвращает одно или несколько значений из хорошо сформированного JSON на X.Если предоставлен только один путь P1,то тип результата SQL-NULL для JSON нуля,INTEGER или REAL для JSON числового значения,INTEGER ноль для JSON ложного значения,INTEGER ноль для JSON истинного значения,текст в кавычках для JSON строкового значения,и текстовое представление для JSON объектов и массивов значений.Если существует несколько аргументов пути (P1,P2 и т.д.),то эта рутина возвращает текст SQLite,который является хорошо сформированным JSON-массивом,содержащим различные значения.</target>
        </trans-unit>
        <trans-unit id="0f1627c2753898c7b2ebba7d223fce4a18da0c11" translate="yes" xml:space="preserve">
          <source>The json_group_array(X) function is an &lt;a href=&quot;lang_aggfunc&quot;&gt;aggregate SQL function&lt;/a&gt; that returns a JSON array comprised of all X values in the aggregation. Similarly, the json_group_object(NAME,VALUE) function returns a JSON object comprised of all NAME/VALUE pairs in the aggregation.</source>
          <target state="translated">Функция json_group_array (X) - это &lt;a href=&quot;lang_aggfunc&quot;&gt;агрегированная функция SQL,&lt;/a&gt; которая возвращает массив JSON, состоящий из всех значений X в агрегировании. Аналогичным образом функция json_group_object (NAME, VALUE) возвращает объект JSON, состоящий из всех пар NAME / VALUE в агрегации.</target>
        </trans-unit>
        <trans-unit id="08b54ec339ea85bd242a6d5ab159f649d0636c35" translate="yes" xml:space="preserve">
          <source>The json_insert(), json_replace(), and json_set() functions always take an odd number of arguments. The first argument is always the original JSON to be edited. Subsequent arguments occur in pairs with the first element of each pair being a path and the second element being the value to insert or replace or set on that path.</source>
          <target state="translated">Функции json_insert(),json_replace()и json_set()всегда принимают нечетное количество аргументов.Первым аргументом всегда является исходный JSON,который должен быть отредактирован.Последующие аргументы встречаются парами,при этом первый элемент каждой пары представляет собой путь,а второй элемент-значение для вставки,замены или установки по этому пути.</target>
        </trans-unit>
        <trans-unit id="cc677da89c2d6a3534f49f58dca0325fe7275ac0" translate="yes" xml:space="preserve">
          <source>The json_insert(), json_replace, and json_set() functions all take a single JSON value as their first argument followed by zero or more pairs of path and value arguments, and return a new JSON string formed by updating the input JSON by the path/value pairs. The functions differ only in how they deal with creating new values and overwriting preexisting values.</source>
          <target state="translated">Функции json_insert(),json_replace и json_set()принимают в качестве первого аргумента одно JSON-значение,за которым следуют нулевые или более пар аргументов пути и значения,и возвращают новую JSON-строку,сформированную путем обновления входного JSON-значения парами путь/значение.Функции отличаются только тем,как они работают с созданием новых значений и перезаписью уже существующих.</target>
        </trans-unit>
        <trans-unit id="a89fe09131a222458243e59c86a47b9418f5cefc" translate="yes" xml:space="preserve">
          <source>The json_object() SQL function accepts zero or more pairs of arguments and returns a well-formed JSON object that is composed from those arguments. The first argument of each pair is the label and the second argument of each pair is the value. If any argument to json_object() is a BLOB then an error is thrown.</source>
          <target state="translated">SQL-функция json_object()принимает нулевые или более пар аргументов и возвращает хорошо сформированный JSON-объект,который состоит из этих аргументов.Первым аргументом каждой пары является метка,а вторым-значение.Если любой аргумент функции json_object()является BLOB,то выдается ошибка.</target>
        </trans-unit>
        <trans-unit id="2288fffe16f420052bb17e5c8958c3ccdbc841f2" translate="yes" xml:space="preserve">
          <source>The json_object() function currently allows duplicate labels without complaint, though this might change in a future enhancement.</source>
          <target state="translated">Функция json_object()в настоящее время позволяет дублировать метки без претензий,хотя в будущем это может измениться.</target>
        </trans-unit>
        <trans-unit id="5e496b884466eb1ac12c106e9502f3cd98163883" translate="yes" xml:space="preserve">
          <source>The json_patch(T,P) SQL function runs the &lt;a href=&quot;https://tools.ietf.org/html/rfc7396&quot;&gt;RFC-7396&lt;/a&gt; MergePatch algorithm to apply patch P against input T. The patched copy of T is returned.</source>
          <target state="translated">SQL-функция json_patch (T, P) запускает алгоритм &lt;a href=&quot;https://tools.ietf.org/html/rfc7396&quot;&gt;RFC-7396&lt;/a&gt; MergePatch, чтобы применить исправление P к входу T. Исправленная копия T возвращается.</target>
        </trans-unit>
        <trans-unit id="d843d41461d41ce71296d2cc16a75e0d0ddb050b" translate="yes" xml:space="preserve">
          <source>The json_quote(X) function converts the SQL value X (a number or a string) into its corresponding JSON representation.</source>
          <target state="translated">Функция json_quote(X)преобразует SQL-значение X (число или строку)в соответствующее ему JSON-представление.</target>
        </trans-unit>
        <trans-unit id="076810db69b99bc12f8c66592e6373c496370f8e" translate="yes" xml:space="preserve">
          <source>The json_remove() function throws an error if the first argument is not well-formed JSON or if any later argument is not a well-formed path, or if any argument is a BLOB.</source>
          <target state="translated">Функция json_remove()выдает ошибку,если первый аргумент не является хорошо сформированным JSON,или если любой последующий аргумент не является хорошо сформированным путем,или если любой аргумент является BLOB.</target>
        </trans-unit>
        <trans-unit id="07c228732927cc33b2fd2172e7d852ff75280285" translate="yes" xml:space="preserve">
          <source>The json_remove(X,P,...) function takes a single JSON value as its first argument followed by zero or more path arguments. The json_remove(X,P,...) function returns a new JSON value that is the X with all the elements identified by path arguments removed. Paths that select elements not found in X are silently ignored.</source>
          <target state="translated">Функция json_remove(X,P,...)принимает в качестве первого аргумента одно JSON-значение,за которым следует нулевой или более аргументов пути.Функция json_remove(X,P,...)возвращает новое JSON-значение,т.е.X,при этом все элементы,идентифицируемые аргументами пути,удаляются.Пути,которые выбирают элементы,не найденные в X,беззвучно игнорируются.</target>
        </trans-unit>
        <trans-unit id="dc2a43381f4cc4dcc4e70977bde02a9d9d1a46e8" translate="yes" xml:space="preserve">
          <source>The json_type() function throws an error if any of its arguments are not well-formed or is a BLOB.</source>
          <target state="translated">Функция json_type()выдает ошибку,если любой из ее аргументов неправильно сформирован или является BLOB.</target>
        </trans-unit>
        <trans-unit id="4607298214330613e115639247f1a2af460f4cfe" translate="yes" xml:space="preserve">
          <source>The json_type(X) function returns the &quot;type&quot; of the outermost element of X. The json_type(X,P) function returns the &quot;type&quot; of the element in X that is selected by path P. The &quot;type&quot; returned by json_type() is on of the following an SQL text values: 'null', 'true', 'false', 'integer', 'real', 'text', 'array', or 'object'. If the path P in json_type(X,P) selects an element that does not exist in X, then this function returns NULL.</source>
          <target state="translated">Функция json_type(X)возвращает &quot;тип&quot; самого внешнего элемента Х.Функция json_type(X,P)возвращает &quot;тип&quot; элемента в Х,который выбирается путем P.&quot;Тип&quot;,возвращаемый функцией json_type(),состоит из следующих текстовых значений SQL:'null','true','false','integer','real','text','array' или 'object'.Если путь P в json_type(X,P)выбирает элемент,которого нет в X,то эта функция возвращает NULL.</target>
        </trans-unit>
        <trans-unit id="719a758ba2801754e03a7b8fe39124f85c9b0d1b" translate="yes" xml:space="preserve">
          <source>The json_type(X) function returns the &quot;type&quot; of the outermost element of X. The json_type(X,P) function returns the &quot;type&quot; of the element in X that is selected by path P. The &quot;type&quot; returned by json_type() is one of the following an SQL text values: 'null', 'true', 'false', 'integer', 'real', 'text', 'array', or 'object'. If the path P in json_type(X,P) selects an element that does not exist in X, then this function returns NULL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bb00412965806c0f2fa0e24dcf65a44105fd64" translate="yes" xml:space="preserve">
          <source>The json_valid(X) function return 1 if the argument X is well-formed JSON and return 0 if the argument X is not well-formed JSON.</source>
          <target state="translated">Функция json_valid(X)возвращает 1,если аргумент X имеет хорошо сформированный JSON,и 0,если аргумент X не имеет хорошо сформированного JSON.</target>
        </trans-unit>
        <trans-unit id="b554cbe69a3700d4f56fb5609be0488decea2e7b" translate="yes" xml:space="preserve">
          <source>The key element of a</source>
          <target state="translated">Ключевой элемент</target>
        </trans-unit>
        <trans-unit id="1f79347fd256f18500712ca620e7ffb89d509d9e" translate="yes" xml:space="preserve">
          <source>The key point is that SQLite is very forgiving of the type of data that you put into the database. For example, if a column has a datatype of &quot;INTEGER&quot; and the application inserts a text string into that column, SQLite will first try to convert the text string into an integer, just like every other SQL database engine. Thus, if one inserts &lt;b&gt;'1234'&lt;/b&gt; into an INTEGER column, that value is converted into an integer 1234 and stored. But, if you insert a non-numeric string like &lt;b&gt;'wxyz'&lt;/b&gt; into an INTEGER column, unlike other SQL databases, SQLite does not throw an error. Instead, SQLite stores the actual string value in the column.</source>
          <target state="translated">Ключевым моментом является то, что SQLite очень снисходительно относится к типу данных, которые вы помещаете в базу данных. Например, если столбец имеет тип данных &amp;laquo;INTEGER&amp;raquo; и приложение вставляет текстовую строку в этот столбец, SQLite сначала попытается преобразовать текстовую строку в целое число, как и любой другой механизм базы данных SQL. Таким образом, если вставить &lt;b&gt;&amp;laquo;1234&amp;raquo;&lt;/b&gt; в столбец INTEGER, это значение преобразуется в целое число 1234 и сохраняется. Но если вы вставляете нечисловую строку, такую ​​как &lt;b&gt;'wxyz',&lt;/b&gt; в столбец INTEGER, в отличие от других баз данных SQL, SQLite не &lt;b&gt;выдает&lt;/b&gt; ошибку. Вместо этого SQLite сохраняет фактическое строковое значение в столбце.</target>
        </trans-unit>
        <trans-unit id="3e290f56c0ef256cb5bbb18b2ba0fb09ea68db61" translate="yes" xml:space="preserve">
          <source>The key point is this: Building the CLI consists of compiling together two C-language files. The &lt;b&gt;shell.c&lt;/b&gt; file contains the definition of the entry point and the user input loop and the SQLite amalgamation &lt;b&gt;sqlite3.c&lt;/b&gt; contains the complete implementation of the SQLite library.</source>
          <target state="translated">Ключевой момент заключается в следующем: построение интерфейса командной строки состоит из компиляции двух файлов на языке C. &lt;b&gt;Shell.c&lt;/b&gt; файл содержит определение точки входа и цикл ввода пользователя , так и SQLite объединения &lt;b&gt;sqlite3.c&lt;/b&gt; содержит полную реализацию библиотеки SQLite.</target>
        </trans-unit>
        <trans-unit id="bb2fbeab5253f75ff8183f69852d5cbb7ab2bba6" translate="yes" xml:space="preserve">
          <source>The key points of the previous example were the use of the Callback instruction to invoke the callback function, and the use of the Next instruction to implement a loop over all records of the database file. This example attempts to drive home those ideas by demonstrating a slightly more complex query that involves more columns of output, some of which are computed values, and a WHERE clause that limits which records actually make it to the callback function. Consider this query:</source>
          <target state="translated">Ключевыми моментами предыдущего примера были использование команды Callback для вызова функции обратного вызова,а также использование команды Next для реализации цикла над всеми записями файла базы данных.В этом примере предпринимается попытка воплотить в жизнь эти идеи путем демонстрации немного более сложного запроса,включающего большее количество столбцов вывода,некоторые из которых являются вычисленными значениями,и пункта WHERE,ограничивающего то,какие записи на самом деле делают это для функции обратного вызова.Рассмотрим этот запрос:</target>
        </trans-unit>
        <trans-unit id="986f899677204f1290b417dd64fe3fcaa05f7c30" translate="yes" xml:space="preserve">
          <source>The keys used by each segment b-tree are terms (words). As well as the key, each segment b-tree entry has an associated &quot;doclist&quot; (document list). A doclist consists of zero or more entries, where each entry consists of:</source>
          <target state="translated">Ключами,используемыми в каждом сегменте b-дерева,являются термины (слова).Так же как и ключ,каждый элемент b-дерева сегмента имеет соответствующий &quot;доклист&quot; (список документов).Докладка состоит из нуля или более записей,из которых состоит каждая запись:</target>
        </trans-unit>
        <trans-unit id="a93934848f28a5d1e280c92cac942b828e6dc7e9" translate="yes" xml:space="preserve">
          <source>The keyword &quot;INSERT&quot;, &quot;UPDATE&quot;, or &quot;DELETE&quot;, as appropriate</source>
          <target state="translated">Ключевое слово &quot;INSERT&quot;,&quot;UPDATE&quot; или &quot;DELETE&quot;,в зависимости от обстоятельств.</target>
        </trans-unit>
        <trans-unit id="799f75f9fa5e2cb1d9335f9637de442233918b1a" translate="yes" xml:space="preserve">
          <source>The kvtest program is compiled and run on Android as follows. First install the Android SDK and NDK. Then prepare a script named &quot;android-gcc&quot; that looks approximately like this:</source>
          <target state="translated">Программа kvtest компилируется и запускается на Android следующим образом.Сначала установите Android SDK и NDK.Затем подготовьте скрипт под названием &quot;android-gcc&quot;,который выглядит примерно так:</target>
        </trans-unit>
        <trans-unit id="a518e69633f247201841ea47eb51e547b9e7d52f" translate="yes" xml:space="preserve">
          <source>The label to the right of an AS in the column list of a SELECT can now be used as part of an expression in the WHERE, ORDER BY, GROUP BY, and/or HAVING clauses.</source>
          <target state="translated">Метка справа от AS в списке столбцов SELECT теперь может использоваться как часть выражения в пунктах WHERE,ORDER BY,GROUP BY,и/или HAVING.</target>
        </trans-unit>
        <trans-unit id="5d78c31e6fd49e38e9a6929f67e573c2fcc27d5f" translate="yes" xml:space="preserve">
          <source>The language id for this entry.</source>
          <target state="translated">Идентификатор языка для этой записи.</target>
        </trans-unit>
        <trans-unit id="e80fa2a23c99c4e0919bc332ef910ec1f3215c2c" translate="yes" xml:space="preserve">
          <source>The languageid option causes the FTS4 table to have an additional hidden integer column that identifies the language of the text contained in each row. The use of the languageid option allows the same FTS4 table to hold text in multiple languages or scripts, each with different tokenizer rules, and to query each language independently of the others.</source>
          <target state="translated">Опция languageid приводит к тому,что таблица FTS4 имеет дополнительный скрытый целочисленный столбец,который идентифицирует язык текста,содержащегося в каждой строке.Использование опции languageid позволяет одной и той же таблице FTS4 хранить текст на нескольких языках или скриптах,каждый из которых имеет различные правила токенов,и запрашивать каждый язык независимо от других.</target>
        </trans-unit>
        <trans-unit id="333c7dbdc428cf52a63d6a76d33660a2004630b2" translate="yes" xml:space="preserve">
          <source>The largest payload found anywhere in the current page or btree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a93c8c9ebe55117d8275a20a3a64f1279cc0414" translate="yes" xml:space="preserve">
          <source>The largest possible setting for SQLITE_MAX_PAGE_COUNT is 2147483646. When used with the maximum page size of 65536, this gives a maximum SQLite database size of about 140 terabytes.</source>
          <target state="translated">Наибольшая возможная настройка для SQLITE_MAX_PAGE_COUNT-2147483646.При использовании с максимальным размером страницы 65536 это дает максимальный размер базы данных SQLite около 140 терабайт.</target>
        </trans-unit>
        <trans-unit id="4e80216c90c51ba3170a6cfbdb6ff5453a279861" translate="yes" xml:space="preserve">
          <source>The largest possible setting for SQLITE_MAX_PAGE_COUNT is 4294967294. When used with the maximum page size of 65536, this gives a maximum SQLite database size of about 281 terabytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fabb1072d1e3ea604e33e251741f22426c0f61" translate="yes" xml:space="preserve">
          <source>The last (fourth) bullet above merits additional comment. When SQLite creates a journal file on Unix, it opens the directory that contains that file and calls fsync() on the directory, in an effort to push the directory information to disk. But suppose some other process is adding or removing unrelated files to the directory that contains the database and journal at the moment of a power failure. The supposedly unrelated actions of this other process might result in the journal file being dropped from the directory and moved into &quot;lost+found&quot;. This is an unlikely scenario, but it could happen. The best defenses are to use a journaling filesystem or to keep the database and journal in a directory by themselves.</source>
          <target state="translated">Последняя (четвертая)пуля выше заслуживает дополнительных комментариев.Когда SQLite создает файл журнала на Unix,он открывает директорию,содержащую этот файл,и вызывает fsync()в этой директории,чтобы перенести информацию о директории на диск.Но предположим,что какой-то другой процесс-это добавление или удаление несвязанных файлов в директорию,содержащую БД и журнал,в момент отключения питания.Предполагаемые несвязанные действия этого другого процесса могут привести к тому,что файл журнала будет удален из директории и перемещен в &quot;lost+found&quot;.Такой сценарий маловероятен,но может произойти.Лучшей защитой является использование файловой системы протоколирования или хранение БД и журнала в каталоге сами по себе.</target>
        </trans-unit>
        <trans-unit id="0d792644cd574497ddbf62ba435f6dbc99253564" translate="yes" xml:space="preserve">
          <source>The last bullet above is illustrated by the following:</source>
          <target state="translated">Последняя приведенная выше пуля проиллюстрирована следующим образом:</target>
        </trans-unit>
        <trans-unit id="6fcee6d642fa1ca93fa14337ac4410163d2a9df9" translate="yes" xml:space="preserve">
          <source>The last output mode is &quot;html&quot;. In this mode, sqlite3 writes the results of the query as an XHTML table. The beginning &amp;lt;TABLE&amp;gt; and the ending &amp;lt;/TABLE&amp;gt; are not written, but all of the intervening &amp;lt;TR&amp;gt;s, &amp;lt;TH&amp;gt;s, and &amp;lt;TD&amp;gt;s are. The html output mode is envisioned as being useful for CGI.</source>
          <target state="translated">Последний режим вывода - &amp;laquo;html&amp;raquo;. В этом режиме sqlite3 записывает результаты запроса в виде таблицы XHTML. Начало &amp;lt;TABLE&amp;gt; и конец &amp;lt;/TABLE&amp;gt; не записываются, но записываются все промежуточные &amp;lt;TR&amp;gt;, &amp;lt;TH&amp;gt; и &amp;lt;TD&amp;gt;. Предполагается, что режим вывода html будет полезен для CGI.</target>
        </trans-unit>
        <trans-unit id="a123c1f8dadbf6bb9cc227ef0871a1fb2cbe0f9d" translate="yes" xml:space="preserve">
          <source>The last parameter to the &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_pointer()&lt;/a&gt; and &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_pointer()&lt;/a&gt; routines is a pointer to a procedure used to dispose of the P pointer once SQLite has finished with it. This pointer can be NULL, in which case no destructor is called.</source>
          <target state="translated">Последний параметр процедур &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_pointer ()&lt;/a&gt; и &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_pointer ()&lt;/a&gt; - это указатель на процедуру, используемую для удаления указателя P после того, как SQLite завершит работу с ним. Этот указатель может иметь значение NULL, и в этом случае деструктор не вызывается.</target>
        </trans-unit>
        <trans-unit id="d52a179000f827088051359c744fec0210401d8f" translate="yes" xml:space="preserve">
          <source>The last step in the commit process is to release the exclusive lock so that other processes can once again start accessing the database file.</source>
          <target state="translated">Последним шагом в процессе фиксации является снятие эксклюзивного замка,чтобы другие процессы могли снова начать доступ к файлу базы данных.</target>
        </trans-unit>
        <trans-unit id="56b9bbac0263da28aef9dee3010ecc1e8725f669" translate="yes" xml:space="preserve">
          <source>The last transaction started will be the first transaction committed or rolled back.</source>
          <target state="translated">Последняя начатая транзакция будет первой совершенной транзакцией или откатом.</target>
        </trans-unit>
        <trans-unit id="c2015d5e4ba733546bdea54c6daefbab27ed0b3f" translate="yes" xml:space="preserve">
          <source>The last two allocations can be controlled and/or eliminated by configuring the &lt;a href=&quot;malloc#pagecache&quot;&gt;pagecache memory allocator&lt;/a&gt;, and &lt;a href=&quot;malloc#lookaside&quot;&gt;lookaside memory allocator&lt;/a&gt; appropriately, as described above. The storage space required for &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; objects depends to some extent on the length of the filename of the database file, but rarely exceeds 2KB on 32-bit systems. (More space is required on 64-bit systems due to the increased size of pointers.) Each parser object uses about 1.6KB of memory. Thus, elements 3 through 7 above can easily be controlled to keep the maximum memory allocation size below 2KB.</source>
          <target state="translated">Последние два распределения можно контролировать и / или устранены путем настройки &lt;a href=&quot;malloc#pagecache&quot;&gt;аллокатора кэша страниц памяти&lt;/a&gt; , и &lt;a href=&quot;malloc#lookaside&quot;&gt;Распределитель Lookaside памяти&lt;/a&gt; надлежащим образом , как описаны выше. Объем памяти, необходимый для объектов &lt;a href=&quot;c3ref/sqlite3&quot;&gt;подключения&lt;/a&gt; к базе данных, в некоторой степени зависит от длины имени файла базы данных, но редко превышает 2 КБ в 32-разрядных системах. (В 64-битных системах требуется больше места из-за увеличенного размера указателей.) Каждый объект анализатора использует около 1,6 КБ памяти. Таким образом, элементами с 3 по 7 выше можно легко управлять, чтобы сохранить максимальный размер выделяемой памяти ниже 2 КБ.</target>
        </trans-unit>
        <trans-unit id="dd770eea393f2ccabe1cb964e8f446d8577e90ba" translate="yes" xml:space="preserve">
          <source>The last two queries take the same amount of time, in our example. So which index, Idx1 or Idx2, will SQLite choose? If the &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; command has been run on the database, so that SQLite has had an opportunity to gather statistics about the available indices, then SQLite will know that the Idx1 index usually narrows the search down to a single item (our example of fruit='Orange' is the exception to this rule) whereas the Idx2 index will normally only narrow the search down to two rows. So, if all else is equal, SQLite will choose Idx1 with the hope of narrowing the search to as small a number of rows as possible. This choice is only possible because of the statistics provided by &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt;. If &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; has not been run then the choice of which index to use is arbitrary.</source>
          <target state="translated">В нашем примере последние два запроса занимают одинаковое время. Итак, какой индекс, Idx1 или Idx2, выберет SQLite? Если команда &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; была запущена в базе данных, чтобы SQLite имел возможность собирать статистику о доступных индексах, тогда SQLite будет знать, что индекс Idx1 обычно сужает поиск до одного элемента (наш пример fruit = ' Оранжевый 'является исключением из этого правила), тогда как индекс Idx2 обычно сужает поиск только до двух строк. Итак, если все остальное равно, SQLite выберет Idx1 в надежде сузить поиск до как можно меньшего количества строк. Этот выбор возможен только благодаря статистике, предоставленной &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; . Если &lt;a href=&quot;lang_analyze&quot;&gt;АНАЛИЗИРОВАТЬ&lt;/a&gt; не был запущен, то выбор индекса для использования является произвольным.</target>
        </trans-unit>
        <trans-unit id="0271db818028a9ffb097a09e837d0647ab050705" translate="yes" xml:space="preserve">
          <source>The last_insert_rowid() function returns the &lt;a href=&quot;lang_createtable#rowid&quot;&gt;ROWID&lt;/a&gt; of the last row insert from the database connection which invoked the function. The last_insert_rowid() SQL function is a wrapper around the &lt;a href=&quot;c3ref/last_insert_rowid&quot;&gt;sqlite3_last_insert_rowid()&lt;/a&gt; C/C++ interface function.</source>
          <target state="translated">Функция last_insert_rowid () возвращает &lt;a href=&quot;lang_createtable#rowid&quot;&gt;ROWID&lt;/a&gt; последней вставки строки из соединения с базой данных, которое вызвало функцию. SQL-функция last_insert_rowid () является оболочкой для интерфейсной функции &lt;a href=&quot;c3ref/last_insert_rowid&quot;&gt;sqlite3_last_insert_rowid ()&lt;/a&gt; C / C ++.</target>
        </trans-unit>
        <trans-unit id="dc54cc3b765595ad1e2bcb9ada53a0d0dfaa1af8" translate="yes" xml:space="preserve">
          <source>The latest checklists contain approximately 200 items that are individually verified for each release. Some checklist items only take a few seconds to verify and mark off. Others involve test suites that run for many hours.</source>
          <target state="translated">Последние контрольные списки содержат около 200 пунктов,которые проверяются индивидуально для каждого выпуска.Некоторые пункты контрольного списка занимают всего несколько секунд,чтобы проверить и отметить их.Другие включают наборы тестов,которые работают в течение многих часов.</target>
        </trans-unit>
        <trans-unit id="972ae3a81fba75ac7b1cb927798468eb94557f5e" translate="yes" xml:space="preserve">
          <source>The latter query can not use the partial index because there might be rows in the table with b=456 and where c is NULL. But those rows would not be in the partial index.</source>
          <target state="translated">Последний запрос не может использовать частичный индекс,так как в таблице могут быть строки с b=456 и где c-NULL.Но этих строк не будет в частичном индексе.</target>
        </trans-unit>
        <trans-unit id="5d0da56ef4fd6dfbe12fe3015e9d0a6d277654f6" translate="yes" xml:space="preserve">
          <source>The leftmost column of the &quot;%_content&quot; table is an INTEGER PRIMARY KEY field named &quot;docid&quot;. Following this is one column for each column of the FTS virtual table as declared by the user, named by prepending the column name supplied by the user with &quot;c</source>
          <target state="translated">Самый левый столбец таблицы &quot;%_content&quot;-это поле INTEGER PRIMARY KEY с именем &quot;docid&quot;.Далее следует один столбец для каждого из столбцов виртуальной таблицы FTS,объявленного пользователем,названный путем предварения имени столбца,предоставленного пользователем с буквой &quot;c&quot;.</target>
        </trans-unit>
        <trans-unit id="3fe10f10852f3ac1156d75127fc7c938a298af76" translate="yes" xml:space="preserve">
          <source>The legacy &lt;a href=&quot;compile#enable_stat3&quot;&gt;SQLITE_ENABLE_STAT3&lt;/a&gt; compile-time option is now a no-op.</source>
          <target state="translated">Наследие &lt;a href=&quot;compile#enable_stat3&quot;&gt;SQLITE_ENABLE_STAT3&lt;/a&gt; вариант компиляции является сейчас не оп.</target>
        </trans-unit>
        <trans-unit id="19d5e9050bddb7e40ed3e17c750502a0acf23cf7" translate="yes" xml:space="preserve">
          <source>The legacy alter table behavior can also be toggled on and off using the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfiglegacyaltertable&quot;&gt;SQLITE_DBCONFIG_LEGACY_ALTER_TABLE&lt;/a&gt; option to the &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config()&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfiglegacyaltertable&quot;&gt;Устаревшее&lt;/a&gt; поведение таблицы изменений также можно включать и выключать с помощью параметра SQLITE_DBCONFIG_LEGACY_ALTER_TABLE в интерфейсе &lt;a href=&quot;c3ref/db_config&quot;&gt;sqlite3_db_config ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="41fd664aa5a45cba5ac773955a3426725e8decb9" translate="yes" xml:space="preserve">
          <source>The legacy alter table behavior is a per-connection setting. Turning this features on or off affects all attached database files within the &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt;. The setting does not persist. Changing this setting in one connection does not affect any other connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0281c5597d6458d92c064f8c4ce4817fe25c10e" translate="yes" xml:space="preserve">
          <source>The legacy xGeom callback is invoked with four arguments. The first argument is a pointer to an sqlite3_rtree_geometry structure which provides information about how the SQL function was invoked. The second argument is the number of coordinates in each r-tree entry, and is always the same for any given R*Tree. The number of coordinates is 2 for a 1-dimensional R*Tree, 4 for a 2-dimensional R*Tree, 6 for a 3-dimensional R*Tree, and so forth. The third argument, aCoord[], is an array of nCoord coordinates that defines a bounding box to be tested. The last argument is a pointer into which the callback result should be written. The result is zero if the bounding-box defined by aCoord[] is completely outside the region defined by the xGeom callback and the result is non-zero if the bounding-box is inside or overlaps with the xGeom region. The xGeom callback should normally return SQLITE_OK. If xGeom returns anything other than SQLITE_OK, then the r-tree query will abort with an error.</source>
          <target state="translated">Унаследованный обратный вызов xGeom вызывается с четырьмя аргументами.Первый аргумент-указатель на структуру sqlite3_rtree_geometry,которая предоставляет информацию о том,как была вызвана SQL-функция.Второй аргумент-количество координат в каждой записи r-дерева,и всегда одинаков для любого R*дерева.Количество координат равно 2 для 1-мерного R*Tree,4 для 2-мерного R*Tree,6 для 3-мерного R*Tree и так далее.Третий аргумент,aCoord[],представляет собой массив координат nCoord,определяющий тестируемый ограничительный блок.Последний аргумент-указатель,в который должен быть записан результат обратного вызова.Результат равен нулю,если граничное поле,определенное aCoord[],полностью находится вне области,определенной обратным вызовом xGeom,а результат ненулевой,если граничное поле находится внутри области xGeom или пересекается с областью xGeom.Обратный вызов xGeom обычно должен возвращать SQLITE_OK.Если xGeom вернет что-либо кроме SQLITE_OK,то запрос r-дерева прервется с ошибкой.</target>
        </trans-unit>
        <trans-unit id="c26ac59b1bddfababdeff98e88ee3a4d181edb8a" translate="yes" xml:space="preserve">
          <source>The legacy_file_format pragma is initialized to OFF when an existing database in the newer file format is first opened.</source>
          <target state="translated">Прагма legacy_file_format инициализируется в OFF при первом открытии существующей базы данных в новом файловом формате.</target>
        </trans-unit>
        <trans-unit id="5c416af28ee6cf9f448dc251869a118022ef5870" translate="yes" xml:space="preserve">
          <source>The length of a function name may not exceed 255 characters. Any attempt to create a function whose name exceeds 255 characters in length will result in an error.</source>
          <target state="translated">Длина имени функции не должна превышать 255 символов.Любая попытка создать функцию,имя которой превышает 255 символов,приведет к ошибке.</target>
        </trans-unit>
        <trans-unit id="64a58fb27f585f3af736420c55a5c7aba354a480" translate="yes" xml:space="preserve">
          <source>The length of the argument value can be specified by one or more letters that occur just prior to the substitution type letter. In SQLite, the length only matter for integer types. The length is ignored for the &lt;a href=&quot;lang_corefunc#printf&quot;&gt;printf() SQL function&lt;/a&gt; which always uses 64-bit values. The following table shows the length specifiers allowed by SQLite:</source>
          <target state="translated">Длина значения аргумента может быть указана одной или несколькими буквами, которые встречаются непосредственно перед буквой типа подстановки. В SQLite длина имеет значение только для целочисленных типов. Длина игнорируется для &lt;a href=&quot;lang_corefunc#printf&quot;&gt;функции SQL printf (),&lt;/a&gt; которая всегда использует 64-битные значения. В следующей таблице показаны спецификаторы длины, разрешенные SQLite:</target>
        </trans-unit>
        <trans-unit id="835ff0a5a3c1f19c6461eba222151b4907f96047" translate="yes" xml:space="preserve">
          <source>The letter &quot;j&quot; pronounced like &quot;h&quot; in Spanish: LaJolla</source>
          <target state="translated">Буква &quot;j&quot; произносится как &quot;h&quot; по-испански:LaJolla</target>
        </trans-unit>
        <trans-unit id="ee9eb5ebb3823c5e0db14477052af2948a8b37ee" translate="yes" xml:space="preserve">
          <source>The library now assumes data is stored as UTF-8 if the --enable-utf8 option is given to configure. The default behavior is to assume iso8859-x, as it has always done. This only makes a difference for LIKE and GLOB operators and the LENGTH and SUBSTR functions.</source>
          <target state="translated">Библиотека теперь предполагает,что данные хранятся в кодировке UTF-8,если задана опция --enable-utf8.Поведение по умолчанию-предположить iso8859-x,как это всегда делалось.Это имеет значение только для операторов LIKE и GLOB,а также для функций LENGTH и SUBSTR.</target>
        </trans-unit>
        <trans-unit id="2b11a2ab2af2c4ff66c5a4f077ed6909c7421f85" translate="yes" xml:space="preserve">
          <source>The life-cycle of a prepared statement object usually goes like this:</source>
          <target state="translated">Жизненный цикл подготовленного объекта заявления обычно проходит вот так:</target>
        </trans-unit>
        <trans-unit id="610e163977a4d438d498cc7745085654d18422e2" translate="yes" xml:space="preserve">
          <source>The lifecycle of an sqlite3_str object is as follows:</source>
          <target state="translated">Жизненный цикл объекта sqlite3_str следующий:</target>
        </trans-unit>
        <trans-unit id="e1c985dd036afafc48409f9dec76735bbf115b4e" translate="yes" xml:space="preserve">
          <source>The like() function is used to implement the &quot;&lt;b&gt;Y LIKE X [ESCAPE Z]&lt;/b&gt;&quot; expression. If the optional ESCAPE clause is present, then the like() function is invoked with three arguments. Otherwise, it is invoked with two arguments only. Note that the X and Y parameters are reversed in the like() function relative to the infix &lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt; operator. X is the pattern and Y is the string to match against that pattern. Hence, the following expressions are equivalent:</source>
          <target state="translated">Функция like () используется для реализации выражения &amp;laquo; &lt;b&gt;Y LIKE X [ESCAPE Z]&lt;/b&gt; &amp;raquo;. Если присутствует необязательное предложение ESCAPE, функция like () вызывается с тремя аргументами. В противном случае он вызывается только с двумя аргументами. Обратите внимание, что параметры X и Y меняются местами в функции like () относительно инфиксного оператора &lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt; . X - это шаблон, а Y - строка для сопоставления с этим шаблоном. Следовательно, следующие выражения эквивалентны:</target>
        </trans-unit>
        <trans-unit id="1725d5bdba0b7e8833554a2371c0c343ab2395e2" translate="yes" xml:space="preserve">
          <source>The likelihood(X,Y) function returns argument X unchanged. The value Y in likelihood(X,Y) must be a floating point constant between 0.0 and 1.0, inclusive. The likelihood(X) function is a no-op that the code generator optimizes away so that it consumes no CPU cycles during run-time (that is, during calls to &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt;). The purpose of the likelihood(X,Y) function is to provide a hint to the query planner that the argument X is a boolean that is true with a probability of approximately Y. The &lt;a href=&quot;lang_corefunc#unlikely&quot;&gt;unlikely(X)&lt;/a&gt; function is short-hand for likelihood(X,0.0625). The &lt;a href=&quot;lang_corefunc#likely&quot;&gt;likely(X)&lt;/a&gt; function is short-hand for likelihood(X,0.9375).</source>
          <target state="translated">Функция правдоподобия (X, Y) возвращает аргумент X без изменений. Значение Y в вероятности (X, Y) должно быть константой с плавающей запятой от 0,0 до 1,0 включительно. Функция правдоподобия (X) - это запретная операция, которую генератор кода оптимизирует, чтобы не потреблять циклы ЦП во время выполнения (то есть во время вызовов &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step ()&lt;/a&gt; ). Назначение функции правдоподобия (X, Y) состоит в том, чтобы указать планировщику запросов, что аргумент X является логическим значением, которое истинно с вероятностью приблизительно Y. Функция &lt;a href=&quot;lang_corefunc#unlikely&quot;&gt;маловероятно (X)&lt;/a&gt; является сокращением для вероятности ( Х 0,0625). Функция &lt;a href=&quot;lang_corefunc#likely&quot;&gt;вероятности (X)&lt;/a&gt; является сокращением от вероятности (X, 0,9375).</target>
        </trans-unit>
        <trans-unit id="047f4505a74dbe546931a88238b570dcea0e5906" translate="yes" xml:space="preserve">
          <source>The likely(X) function returns the argument X unchanged. The likely(X) function is a no-op that the code generator optimizes away so that it consumes no CPU cycles at run-time (that is, during calls to &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt;). The purpose of the likely(X) function is to provide a hint to the query planner that the argument X is a boolean value that is usually true. The likely(X) function is equivalent to &lt;a href=&quot;lang_corefunc#likelihood&quot;&gt;likelihood&lt;/a&gt;(X,0.9375). See also: &lt;a href=&quot;lang_corefunc#unlikely&quot;&gt;unlikely(X)&lt;/a&gt;.</source>
          <target state="translated">Функция вероятно (X) возвращает аргумент X без изменений. Вероятная функция (X) - это запретная операция, которую генератор кода оптимизирует, чтобы не потреблять циклы ЦП во время выполнения (то есть во время вызовов &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step ()&lt;/a&gt; ). Назначение функции вероятно (X) - дать подсказку планировщику запросов, что аргумент X является логическим значением, которое обычно истинно. Функция вероятно (X) эквивалентна &lt;a href=&quot;lang_corefunc#likelihood&quot;&gt;правдоподобию&lt;/a&gt; (X, 0,9375). См. Также: &lt;a href=&quot;lang_corefunc#unlikely&quot;&gt;маловероятно (X)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="604c341d9009d83169d386485e03d9e7bc04c662" translate="yes" xml:space="preserve">
          <source>The limit value is set to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7008986405b40055720891f4830c40ce21496380" translate="yes" xml:space="preserve">
          <source>The line &quot;.once</source>
          <target state="translated">Строка &quot;...один раз</target>
        </trans-unit>
        <trans-unit id="d0c3acc92dc701e819ac94a0c8098f2db90a205c" translate="yes" xml:space="preserve">
          <source>The list below is not exhaustive. Other virtual table implementation exist in the SQLite source tree and elsewhere. The list below tries to capture the more interesting virtual table implementations.</source>
          <target state="translated">Приведенный ниже список не является исчерпывающим.Другая реализация виртуальной таблицы существует в дереве исходников SQLite и в других местах.Приведенный ниже список пытается охватить более интересные реализации виртуальных таблиц.</target>
        </trans-unit>
        <trans-unit id="d3b78caa21f35e034eafcfa346ed07394d0ca6e0" translate="yes" xml:space="preserve">
          <source>The list below shows all possible keywords used by any build of SQLite regardless of &lt;a href=&quot;compile&quot;&gt;compile-time options&lt;/a&gt;. Most reasonable configurations use most or all of these keywords, but some keywords may be omitted when SQL language features are disabled. Applications can use the &lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_count()&lt;/a&gt;, &lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_name()&lt;/a&gt;, and &lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_check()&lt;/a&gt; interfaces to determine the keywords recognized by SQLite at run-time. Regardless of the compile-time configuration, any identifier that is not on the following 143 element list is not a keyword to the SQL parser in SQLite:</source>
          <target state="translated">В приведенном ниже списке показаны все возможные ключевые слова, используемые любой сборкой SQLite, независимо от &lt;a href=&quot;compile&quot;&gt;параметров времени компиляции&lt;/a&gt; . В большинстве разумных конфигураций используются большинство или все эти ключевые слова, но некоторые ключевые слова могут быть опущены, когда функции языка SQL отключены. Приложения могут использовать интерфейсы &lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_count ()&lt;/a&gt; , &lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_name ()&lt;/a&gt; и &lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_check ()&lt;/a&gt; для определения ключевых слов, распознаваемых SQLite во время выполнения. Независимо от конфигурации времени компиляции, любой идентификатор, который не входит в следующий список из 143 элементов, не является ключевым словом для парсера SQL в SQLite:</target>
        </trans-unit>
        <trans-unit id="0180a1bb67bb5f33291414ccd4cfdc93226599e9" translate="yes" xml:space="preserve">
          <source>The list below shows all possible keywords used by any build of SQLite regardless of &lt;a href=&quot;compile&quot;&gt;compile-time options&lt;/a&gt;. Most reasonable configurations use most or all of these keywords, but some keywords may be omitted when SQL language features are disabled. Applications can use the &lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_count()&lt;/a&gt;, &lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_name()&lt;/a&gt;, and &lt;a href=&quot;c3ref/keyword_check&quot;&gt;sqlite3_keyword_check()&lt;/a&gt; interfaces to determine the keywords recognized by SQLite at run-time. Regardless of the compile-time configuration, any identifier that is not on the following 145 element list is not a keyword to the SQL parser in SQLite:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281c02e8bf5d35129f9e1be609bd2e9295d15355" translate="yes" xml:space="preserve">
          <source>The list of coordinates in the binary format contains no redundancy. The last coordinate is not a repeat of the first as it is with GeoJSON. Hence, there is always one fewer coordinate pair in the binary representation of a polygon compared to the GeoJSON representation.</source>
          <target state="translated">Список координат в двоичном формате не содержит избыточности.Последняя координата не является повторением первой,как в случае с GeoJSON.Следовательно,в бинарном представлении полигона всегда на одну пару координат меньше,чем в представлении GeoJSON.</target>
        </trans-unit>
        <trans-unit id="31509dccb06d1116de02483b9bec949662404996" translate="yes" xml:space="preserve">
          <source>The list of expressions between the SELECT and FROM keywords is known as the result expression list. If a result expression is the special expression &quot;*&quot; then all columns in the input data are substituted for that one expression. If the expression is the alias of a table or subquery in the FROM clause followed by &quot;.*&quot; then all columns from the named table or subquery are substituted for the single expression. It is an error to use a &quot;*&quot; or &quot;alias.*&quot; expression in any context other than a result expression list. It is also an error to use a &quot;*&quot; or &quot;alias.*&quot; expression in a simple SELECT query that does not have a FROM clause.</source>
          <target state="translated">Список выражений между ключевыми словами SELECT и FROM известен как список выражений результата.Если результатом является специальное выражение &quot;*&quot;,то все столбцы во входных данных подставляются под это одно выражение.Если выражение является псевдонимом таблицы или подзапроса в пункте FROM,за которым следует &quot;.*&quot;,то все столбцы из именованной таблицы или подзапроса подставляются в единственное выражение.Ошибкой является использование выражения &quot;*&quot; или &quot;псевдоним.*&quot; в любом контексте,кроме списка выражений результата.Ошибкой также является использование выражения &quot;*&quot; или &quot;alias.*&quot; в простом запросе SELECT,который не имеет пункта FROM.</target>
        </trans-unit>
        <trans-unit id="aff07670c95df2683c32cdb3b9c35bd30fecbe25" translate="yes" xml:space="preserve">
          <source>The list of integers in the stat column can optionally be followed by arguments, each of which is a sequence of non-space characters. All arguments are preceded by a single space. Unrecognized arguments are silently ignored.</source>
          <target state="translated">Список целых чисел в столбце статистика может сопровождаться аргументами,каждый из которых представляет собой последовательность не пробельных символов.Всем аргументам предшествует один пробел.Непопознанные аргументы игнорируются.</target>
        </trans-unit>
        <trans-unit id="5c584c3300424511e57cf7c45771316447fd9008" translate="yes" xml:space="preserve">
          <source>The load_extension() function will fail if the extension attempts to modify or delete an SQL function or collating sequence. The extension can add new functions or collating sequences, but cannot modify or delete existing functions or collating sequences because those functions and/or collating sequences might be used elsewhere in the currently running SQL statement. To load an extension that changes or deletes functions or collating sequences, use the &lt;a href=&quot;c3ref/load_extension&quot;&gt;sqlite3_load_extension()&lt;/a&gt; C-language API.</source>
          <target state="translated">Функция load_extension () завершится ошибкой, если расширение попытается изменить или удалить функцию SQL или последовательность сортировки. Расширение может добавлять новые функции или последовательности сортировки, но не может изменять или удалять существующие функции или последовательности сортировки, потому что эти функции и / или последовательности сортировки могут использоваться в другом месте в текущем выполняющемся операторе SQL. Чтобы загрузить расширение, которое изменяет или удаляет функции или последовательности сортировки, используйте API-интерфейс &lt;a href=&quot;c3ref/load_extension&quot;&gt;sqlite3_load_extension ()&lt;/a&gt; языка C.</target>
        </trans-unit>
        <trans-unit id="349abdc2376164ceeb049d0fdce3e4218d275600" translate="yes" xml:space="preserve">
          <source>The load_extension(X,Y) function loads &lt;a href=&quot;loadext&quot;&gt;SQLite extensions&lt;/a&gt; out of the shared library file named X using the entry point Y. The result of load_extension() is always a NULL. If Y is omitted then the default entry point name is used. The load_extension() function raises an exception if the extension fails to load or initialize correctly.</source>
          <target state="translated">Функция load_extension (X, Y) загружает &lt;a href=&quot;loadext&quot;&gt;расширения SQLite&lt;/a&gt; из файла общей библиотеки с именем X, используя точку входа Y. Результат load_extension () всегда равен NULL. Если Y опущено, используется имя точки входа по умолчанию. Функция load_extension () вызывает исключение, если расширение не может правильно загрузиться или инициализироваться.</target>
        </trans-unit>
        <trans-unit id="3c476d76e8d35e3c5addfedd0889c28cfa2868c0" translate="yes" xml:space="preserve">
          <source>The local copy of the remote head</source>
          <target state="translated">Локальная копия удаленной головки</target>
        </trans-unit>
        <trans-unit id="9c687c8acb9d37e788292221df58e5cc9d9b9e4e" translate="yes" xml:space="preserve">
          <source>The local head</source>
          <target state="translated">Местный глава</target>
        </trans-unit>
        <trans-unit id="ef999d9e04e59df040c534586df9501decb45621" translate="yes" xml:space="preserve">
          <source>The lock-byte page</source>
          <target state="translated">Байтовая страница</target>
        </trans-unit>
        <trans-unit id="5c06094b5494afcc6bc0546930a2d751ec1db7b7" translate="yes" xml:space="preserve">
          <source>The lock-byte page arose from the need to support Win95 which was the predominant operating system when this file format was designed and which only supported mandatory file locking. All modern operating systems that we know of support advisory file locking, and so the lock-byte page is not really needed any more, but is retained for backwards compatibility.</source>
          <target state="translated">Байтовая страница возникла из-за необходимости поддержки Win95,которая была доминирующей операционной системой,когда был разработан этот формат файлов,и которая поддерживала только обязательную блокировку файлов.Все современные операционные системы,которые мы знаем о поддержке рекомендательной блокировки файлов,и поэтому байтовая страница блокировки на самом деле больше не нужна,а сохранена для обратной совместимости.</target>
        </trans-unit>
        <trans-unit id="4bd512e93ea74564dff8bf82d8627bae1ed3c48e" translate="yes" xml:space="preserve">
          <source>The lock-byte page is set aside for use by the operating-system specific &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; implementation in implementing the database file locking primitives. SQLite does not use the lock-byte page. The SQLite core will never read or write the lock-byte page, though operating-system specific &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; implementations may choose to read or write bytes on the lock-byte page according to the needs and proclivities of the underlying system. The unix and win32 &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; implementations that come built into SQLite do not write to the lock-byte page, but third-party VFS implementations for other operating systems might.</source>
          <target state="translated">Страница байта блокировки предназначена для использования конкретной реализацией &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; операционной системы при реализации примитивов блокировки файлов базы данных. SQLite не использует страницу байта блокировки. Ядро SQLite никогда не будет читать или записывать байтовые байты блокировки, хотя реализации &lt;a href=&quot;vfs&quot;&gt;VFS для&lt;/a&gt; конкретных операционных систем могут выбирать чтение или запись байтов на байтовые байты блокировки в соответствии с потребностями и склонностями базовой системы. Реализации &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; unix и win32 , встроенные в SQLite, не записывают на страницу байтов блокировки, но сторонние реализации VFS для других операционных систем могут.</target>
        </trans-unit>
        <trans-unit id="df185932a5473981e68a610e19ea95a4f593a072" translate="yes" xml:space="preserve">
          <source>The lock-byte page is the single page of the database file that contains the bytes at offsets between 1073741824 and 1073742335, inclusive. A database file that is less than or equal to 1073741824 bytes in size contains no lock-byte page. A database file larger than 1073741824 contains exactly one lock-byte page.</source>
          <target state="translated">Байтовая страница-это одна страница файла базы данных,содержащая байты по смещениям между 1073741824 и 1073742335 включительно.Файл базы данных,размер которого меньше или равен 1073741824 байтам,не содержит байтовой страницы блокировки.Файл базы данных размером более 1073741824 содержит ровно одну блокировку в байтах.</target>
        </trans-unit>
        <trans-unit id="dda6a9ed2d568f9a7c6dc08407b442fb82119304" translate="yes" xml:space="preserve">
          <source>The logic is summarized like this:</source>
          <target state="translated">Логика резюмируется вот так:</target>
        </trans-unit>
        <trans-unit id="355578bfd3a4498b2a633a6f3c4ff7c7b09de69f" translate="yes" xml:space="preserve">
          <source>The logical database size is now stored in the database header so that bytes can be appended to the end of the database file without corrupting it and so that SQLite will work correctly on systems that lack support for ftruncate().</source>
          <target state="translated">Логический размер базы данных теперь хранится в заголовке базы данных,чтобы байты можно было добавлять в конец файла базы данных,не повреждая его,и чтобы SQLite корректно работал на системах,не поддерживающих ftruncate().</target>
        </trans-unit>
        <trans-unit id="e93186cc2b2b96f693bcff5f9715523649b95afa" translate="yes" xml:space="preserve">
          <source>The lookaside configuration can only be changed while there are no outstanding lookaside allocations for the database connection. Hence, the configuration should be set immediately after creating the database connection using &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; (or equivalent) and before evaluating any SQL statements on the connection.</source>
          <target state="translated">Внешнюю конфигурацию можно изменить только при отсутствии ожидающих дополнительных выделений для подключения к базе данных. Следовательно, конфигурация должна быть установлена ​​сразу после создания соединения с базой данных с помощью &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open ()&lt;/a&gt; (или аналогичного) и до оценки любых операторов SQL в соединении.</target>
        </trans-unit>
        <trans-unit id="98de1d7e1c308aef9eeb240a9c0c48340d7aa4c3" translate="yes" xml:space="preserve">
          <source>The lookaside memory allocator is really intended as performance optimization, not as a method for assuring breakdown-free memory allocation, so it is not unreasonable to completely disable the lookaside memory allocator for safety-critical operations.</source>
          <target state="translated">Смотровой аллокатор памяти действительно предназначен для оптимизации производительности,а не для обеспечения безошибочного выделения памяти,поэтому не лишним будет полностью отключить смотровой аллокатор памяти для критичных с точки зрения безопасности операций.</target>
        </trans-unit>
        <trans-unit id="02f0ada4fc69e2b3f3d2c6c843b91333faf8b563" translate="yes" xml:space="preserve">
          <source>The lookaside pool can be changed for an individual &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; &quot;db&quot; using this call:</source>
          <target state="translated">Дополнительный пул можно изменить для отдельного &lt;a href=&quot;c3ref/sqlite3&quot;&gt;подключения к базе данных&lt;/a&gt; &quot;db&quot; с помощью этого вызова:</target>
        </trans-unit>
        <trans-unit id="31d19ac91c3d68e4ec2f5534877ee0ca68a0efec" translate="yes" xml:space="preserve">
          <source>The loop begins with the &lt;a href=&quot;opcode#MemLoad&quot;&gt;MemLoad&lt;/a&gt; instruction at 11 which pushes a copy of the index key back onto the stack. The instruction &lt;a href=&quot;opcode#IdxGT&quot;&gt;IdxGT&lt;/a&gt; at 12 compares the key to the key in the current index record pointed to by cursor P1. If the index key at the current cursor location is greater than the index we are looking for, then jump out of the loop.</source>
          <target state="translated">Цикл начинается с инструкции &lt;a href=&quot;opcode#MemLoad&quot;&gt;MemLoad&lt;/a&gt; в 11, которая помещает копию индексного ключа обратно в стек. Инструкция &lt;a href=&quot;opcode#IdxGT&quot;&gt;IdxGT&lt;/a&gt; на 12 сравнивает ключ с ключом в текущей индексной записи, на которую указывает курсор P1. Если индексный ключ в текущем местоположении курсора больше, чем индекс, который мы ищем, выйдите из цикла.</target>
        </trans-unit>
        <trans-unit id="9b4e40524d32f647817434932fe77ea61e285d86" translate="yes" xml:space="preserve">
          <source>The lower(X) function returns a copy of string X with all ASCII characters converted to lower case. The default built-in lower() function works for ASCII characters only. To do case conversions on non-ASCII characters, load the ICU extension.</source>
          <target state="translated">Функция lower(X)возвращает копию строки X со всеми ASCII символами,преобразованными в нижний регистр.Встроенная по умолчанию функция lower()работает только для ASCII символов.Для выполнения преобразования регистров на не-ASCII символах необходимо загрузить расширение ICU.</target>
        </trans-unit>
        <trans-unit id="84e26bc0d335ef0f3f91dcbee9450cd939575e9d" translate="yes" xml:space="preserve">
          <source>The ltrim(X,Y) function returns a string formed by removing any and all characters that appear in Y from the left side of X. If the Y argument is omitted, ltrim(X) removes spaces from the left side of X.</source>
          <target state="translated">Функция ltrim(X,Y)возвращает строку,образованную удалением всех символов,которые появляются в Y с левой стороны X.Если аргумент Y опущен,то ltrim(X)удаляет пробелы с левой стороны X.</target>
        </trans-unit>
        <trans-unit id="fdcc55ab3a12db83d0fd351a3149fb5d3844b7fd" translate="yes" xml:space="preserve">
          <source>The macros in this section do not require values. The following compilation switches all have the same effect:</source>
          <target state="translated">Макросы в этом разделе не требуют значений.Следующие переключатели компиляции имеют одинаковый эффект:</target>
        </trans-unit>
        <trans-unit id="9225c9e6b4935393e2d3171b186997ddaa13f218" translate="yes" xml:space="preserve">
          <source>The main database file consists of one or more pages. The size of a page is a power of two between 512 and 65536 inclusive. All pages within the same database are the same size. The page size for a database file is determined by the 2-byte integer located at an offset of 16 bytes from the beginning of the database file.</source>
          <target state="translated">Основной файл базы данных состоит из одной или нескольких страниц.Размер одной страницы составляет от 512 до 65536 включительно.Все страницы в одной базе данных имеют одинаковый размер.Размер страницы для файла БД определяется 2-байтовым целым числом,расположенным со смещением 16 байт от начала файла БД.</target>
        </trans-unit>
        <trans-unit id="7d6f37716756d458f806be1f0cab62c9c7d22175" translate="yes" xml:space="preserve">
          <source>The main database file with an arbitrary name &quot;X&quot;.</source>
          <target state="translated">Основной файл базы данных с произвольным именем &quot;X&quot;.</target>
        </trans-unit>
        <trans-unit id="f6b3e874976f8a865414a00bc3a0b52995dae0f9" translate="yes" xml:space="preserve">
          <source>The main expression bubble diagram above shows a single syntax for all function invocations. But this is merely to simplify the expression bubble diagram. In reality, each type of function has a slightly different syntax, shown below. The function invocation syntax shown in the main expression bubble diagram is the union of the three syntaxes shown here:</source>
          <target state="translated">На приведенной выше диаграмме пузырьков основного выражения показан единый синтаксис для всех вызовов функций.Но это только для того,чтобы упростить диаграмму пузырьков выражения.В действительности,каждый тип функции имеет немного разный синтаксис,показанный ниже.Синтаксис вызовов функций,показанный на диаграмме пузырьков основных выражений,является объединением трех синтаксисов,показанных здесь:</target>
        </trans-unit>
        <trans-unit id="408e5f03d044dab233873eb64f906cb6ccb49b90" translate="yes" xml:space="preserve">
          <source>The main machine in Dallas &lt;a href=&quot;https://www.sqlite.org/&quot;&gt;https://www.sqlite.org/&lt;/a&gt; is the primary server and the one that most people use. The other two are considered backups.</source>
          <target state="translated">Основная машина в Далласе &lt;a href=&quot;https://www.sqlite.org/&quot;&gt;https://www.sqlite.org/&lt;/a&gt; - это основной сервер, который использует большинство людей. Два других считаются резервными копиями.</target>
        </trans-unit>
        <trans-unit id="1d698f91852ce738e8b0efe94402ad56dc5b35ee" translate="yes" xml:space="preserve">
          <source>The main result from &lt;b&gt;sqlite_get_table&lt;/b&gt; is an array of pointers to strings. There is one element in this array for each column of each row in the result. NULL results are represented by a NULL pointer. In addition to the regular data, there is an added row at the beginning of the array that contains the name of each column of the result.</source>
          <target state="translated">Основной результат &lt;b&gt;sqlite_get_table&lt;/b&gt; - это массив указателей на строки. В этом массиве есть один элемент для каждого столбца каждой строки результата. Результаты NULL представлены указателем NULL. В дополнение к обычным данным, в начале массива есть добавленная строка, которая содержит имя каждого столбца результата.</target>
        </trans-unit>
        <trans-unit id="2fb1295c928ccfed10f4bea85ec6d057bdb858da" translate="yes" xml:space="preserve">
          <source>The main thing that the SQLite core is trying to communicate to the virtual table is the constraints that are available to limit the number of rows that need to be searched. The aConstraint[] array contains one entry for each constraint. There will be exactly nConstraint entries in that array.</source>
          <target state="translated">Главное,что ядро SQLite пытается связаться с виртуальной таблицей,это ограничения,доступные для ограничения количества строк,которые необходимо искать.Массив aConstraint[]содержит по одной записи для каждого ограничения.В этом массиве будут именно записи nConstraint.</target>
        </trans-unit>
        <trans-unit id="c00fa1abbc4e41f8e98c7516bdb7add3970ff677" translate="yes" xml:space="preserve">
          <source>The makefiles and scripts used to generate the documentation gather text from baseline documents in the documentation source repository. Additional text is extracted from comments in the SQLite source code. Requirements coverage information is extract from special comments in the &lt;a href=&quot;testing#tcl&quot;&gt;TCL test suite&lt;/a&gt; which is part of the source repository, and from comments in the &lt;a href=&quot;th3&quot;&gt;TH3&lt;/a&gt; test suite which is a separate private repository.</source>
          <target state="translated">Make-файлы и скрипты, используемые для создания документации, собирают текст из базовых документов в репозитории исходных текстов документации. Дополнительный текст извлекается из комментариев в исходном коде SQLite. Информация о покрытии требований извлекается из специальных комментариев в &lt;a href=&quot;testing#tcl&quot;&gt;наборе тестов TCL,&lt;/a&gt; который является частью исходного репозитория, и из комментариев в &lt;a href=&quot;th3&quot;&gt;наборе&lt;/a&gt; тестов TH3, который является отдельным частным репозиторием.</target>
        </trans-unit>
        <trans-unit id="42a78601e6da24d033fc5c1c1ee7512e6c89f88c" translate="yes" xml:space="preserve">
          <source>The makefiles for SQLite have an &quot;sqlite3.c&quot; target for building the file we call &quot;the amalgamation&quot;. The amalgamation is a single C code file, named &quot;sqlite3.c&quot;, that contains all C code for the core SQLite library and the &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt;, &lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt;, &lt;a href=&quot;rtree&quot;&gt;RTREE&lt;/a&gt;, &lt;a href=&quot;dbstat&quot;&gt;DBSTAT&lt;/a&gt;, &lt;a href=&quot;json1&quot;&gt;JSON1&lt;/a&gt;, and &lt;a href=&quot;rbu&quot;&gt;RBU&lt;/a&gt; extensions. This file contains about 184K lines of code (113K if you omit blank lines and comments) and is over 6.4 megabytes in size. Though the various extensions are included in the &quot;sqlite3.c&quot; amalgamation file, they are disabled using #ifdef statements. Activate the extensions using &lt;a href=&quot;compile&quot;&gt;compile-time options&lt;/a&gt; like:</source>
          <target state="translated">У make-файлов для SQLite есть цель &amp;laquo;sqlite3.c&amp;raquo; для создания файла, который мы называем &amp;laquo;объединением&amp;raquo;. Объединение представляет собой один файл кода C с именем &amp;laquo;sqlite3.c&amp;raquo;, который содержит весь код C для основной библиотеки SQLite и &lt;a href=&quot;fts3&quot;&gt;расширения FTS3&lt;/a&gt; , &lt;a href=&quot;fts5&quot;&gt;FTS5&lt;/a&gt; , &lt;a href=&quot;rtree&quot;&gt;RTREE&lt;/a&gt; , &lt;a href=&quot;dbstat&quot;&gt;DBSTAT&lt;/a&gt; , &lt;a href=&quot;json1&quot;&gt;JSON1&lt;/a&gt; и &lt;a href=&quot;rbu&quot;&gt;RBU&lt;/a&gt; . Этот файл содержит около 184 КБ строк кода (113 КБ, если не указывать пустые строки и комментарии) и имеет размер более 6,4 МБ. Хотя различные расширения включены в файл объединения &quot;sqlite3.c&quot;, они отключены с помощью операторов #ifdef. Активируйте расширения, используя такие &lt;a href=&quot;compile&quot;&gt;параметры времени компиляции,&lt;/a&gt; как:</target>
        </trans-unit>
        <trans-unit id="0980756624132b6830b479bc71ea60b90272891a" translate="yes" xml:space="preserve">
          <source>The manner in which SQLite uses temporary files is not considered part of the contract that SQLite makes with applications. The information in this document is a correct description of how SQLite operates at the time that this document was written or last updated. But there is no guarantee that future versions of SQLite will use temporary files in the same way. New kinds of temporary files might be employed and some of the current temporary file uses might be discontinued in future releases of SQLite.</source>
          <target state="translated">Способ,которым SQLite использует временные файлы,не считается частью договора,который SQLite заключает с приложениями.Информация,содержащаяся в данном документе,представляет собой правильное описание того,как SQLite работает на момент написания или последнего обновления данного документа.Но нет никакой гарантии,что будущие версии SQLite будут использовать временные файлы таким же образом.В будущих версиях SQLite могут быть использованы новые виды временных файлов,а некоторые из текущих видов использования временных файлов могут быть прекращены.</target>
        </trans-unit>
        <trans-unit id="3c2b798d423398f0b8335bc4cb33aea4b3800944" translate="yes" xml:space="preserve">
          <source>The mapping from character to affinity is given by the SQLITE_AFF_ macros defined in sqliteInt.h.</source>
          <target state="translated">Отображение от символа к сродству дается макросами SQLITE_AFF_,определенными в sqliteInt.h.</target>
        </trans-unit>
        <trans-unit id="e5801820a892b25589a4f5acb0cdb08d7136d42b" translate="yes" xml:space="preserve">
          <source>The master journal file is only created for &lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt; operations that involve multiple database files where at least two of the databases meet all of the following requirements:</source>
          <target state="translated">Главный файл журнала создается только для операций &lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt; , в которых задействовано несколько файлов базы данных, где по крайней мере две базы данных удовлетворяют всем следующим требованиям:</target>
        </trans-unit>
        <trans-unit id="31da1199925e2ef2121e09ef393e19f883001204" translate="yes" xml:space="preserve">
          <source>The master journal file is used as part of the atomic commit process when a single transaction makes changes to multiple databases that have been added to a single &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; using the &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; statement. The master journal file is always located in the same directory as the main database file (the main database file is the database that is identified in the original &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt;, &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open16()&lt;/a&gt;, or &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; call that created the &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt;) with a randomized suffix. The master journal file contains the names of all of the various attached auxiliary databases that were changed during the transaction. The multi-database transaction commits when the master journal file is deleted. See the documentation titled &lt;a href=&quot;atomiccommit&quot;&gt;Atomic Commit In SQLite&lt;/a&gt; for additional detail.</source>
          <target state="translated">Главный файл журнала используется как часть процесса атомарной фиксации, когда одна транзакция вносит изменения в несколько баз данных, которые были добавлены в одно &lt;a href=&quot;c3ref/sqlite3&quot;&gt;соединение&lt;/a&gt; с базой данных с помощью оператора &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; . Главный файл журнала всегда находится в том же каталоге, что и основной файл базы данных (основной файл базы данных - это база данных, указанная в исходном &lt;a href=&quot;c3ref/open&quot;&gt;вызове sqlite3_open ()&lt;/a&gt; , &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open16 ()&lt;/a&gt; или &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2 (),&lt;/a&gt; который создал &lt;a href=&quot;c3ref/sqlite3&quot;&gt;соединение&lt;/a&gt; с базой данных.) со случайным суффиксом. Главный файл журнала содержит имена всех различных подключенных вспомогательных баз данных, которые были изменены во время транзакции. Транзакция с несколькими базами данных фиксируется при удалении главного файла журнала. Дополнительные сведения см. В документации под названием &amp;laquo; &lt;a href=&quot;atomiccommit&quot;&gt;Атомарная фиксация в SQLite&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="772c6b302e1774e25495c91e9341c8308af64569" translate="yes" xml:space="preserve">
          <source>The matchinfo 'b' flag provides similar information to the &lt;a href=&quot;fts3#matchinfo-y&quot; id=&quot;matchinfo-b&quot;&gt;matchinfo 'y' flag&lt;/a&gt;, but in a more compact form. Instead of the precise number of hits, 'b' provides a single boolean flag for each phrase/column combination. If the phrase is present in the column at least once (i.e. if the corresponding integer output of 'y' would be non-zero), the corresponding flag is set. Otherwise cleared.</source>
          <target state="translated">Флаг matchinfo 'b' предоставляет информацию, аналогичную &lt;a href=&quot;fts3#matchinfo-y&quot; id=&quot;matchinfo-b&quot;&gt;флагу matchinfo 'y'&lt;/a&gt; , но в более компактной форме. Вместо точного количества совпадений &amp;laquo;b&amp;raquo; предоставляет один логический флаг для каждой комбинации фразы / столбца. Если фраза присутствует в столбце хотя бы один раз (т. Е. Если соответствующий целочисленный вывод &amp;laquo;y&amp;raquo; был бы ненулевым), устанавливается соответствующий флаг. В противном случае очищено.</target>
        </trans-unit>
        <trans-unit id="0e92769ac2bedb9028e89c1796d219b3c41ebfd0" translate="yes" xml:space="preserve">
          <source>The matchinfo function is called with either one or two arguments. As for all auxiliary functions, the first argument must be the special &lt;a href=&quot;fts3#hiddencol&quot;&gt;FTS hidden column&lt;/a&gt;. The second argument, if it is specified, must be a text value comprised only of the characters 'p', 'c', 'n', 'a', 'l', 's', 'x', 'y' and 'b'. If no second argument is explicitly supplied, it defaults to &quot;pcx&quot;. The second argument is referred to as the &quot;format string&quot; below.</source>
          <target state="translated">Функция matchinfo вызывается с одним или двумя аргументами. Что касается всех вспомогательных функций, первым аргументом должен быть специальный &lt;a href=&quot;fts3#hiddencol&quot;&gt;скрытый столбец FTS&lt;/a&gt; . Второй аргумент, если он указан, должен быть текстовым значением, состоящим только из символов 'p', 'c', 'n', 'a', 'l', 's', 'x', 'y'. и 'b'. Если явно не указан второй аргумент, по умолчанию используется &amp;laquo;pcx&amp;raquo;. Второй аргумент ниже называется &amp;laquo;строкой формата&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d7687da8f246deec886a3154fb495c0792554c7d" translate="yes" xml:space="preserve">
          <source>The matchinfo function is much faster than either the snippet or offsets functions. This is because the implementation of both snippet and offsets is required to retrieve the documents being analyzed from disk, whereas all data required by matchinfo is available as part of the same portions of the full-text index that are required to implement the full-text query itself. This means that of the following two queries, the first may be an order of magnitude faster than the second:</source>
          <target state="translated">Функция &quot;Информация о совпадении&quot; работает намного быстрее,чем функции &quot;фрагмент&quot; или &quot;смещение&quot;.Это связано с тем,что для получения анализируемых документов с диска требуется реализация как сниппета,так и смещения,в то время как все данные,требуемые функцией совпадения,доступны в составе тех же частей полнотекстового индекса,которые необходимы для реализации самого полнотекстного запроса.Это означает,что из следующих двух запросов первый может быть на порядок быстрее второго:</target>
        </trans-unit>
        <trans-unit id="c65df31b33c2a6ca0926acfdea9fd52aa875638d" translate="yes" xml:space="preserve">
          <source>The matchinfo function provides all the information required to calculate probabilistic &quot;bag-of-words&quot; relevancy scores such as &lt;a href=&quot;http://en.wikipedia.org/wiki/Okapi_BM25&quot;&gt;Okapi BM25/BM25F&lt;/a&gt; that may be used to order results in a full-text search application. Appendix A of this document, &quot;&lt;a href=&quot;fts3#appendix_a&quot;&gt;search application tips&lt;/a&gt;&quot;, contains an example of using the matchinfo() function efficiently.</source>
          <target state="translated">Функция matchinfo предоставляет всю информацию, необходимую для расчета вероятностных оценок релевантности &amp;laquo;мешка слов&amp;raquo;, таких как &lt;a href=&quot;http://en.wikipedia.org/wiki/Okapi_BM25&quot;&gt;Okapi BM25 / BM25F,&lt;/a&gt; которые можно использовать для упорядочивания результатов в приложении полнотекстового поиска. Приложение A к этому документу &amp;laquo; &lt;a href=&quot;fts3#appendix_a&quot;&gt;Советы по поисковому приложению&lt;/a&gt; &amp;raquo; содержит пример эффективного использования функции matchinfo ().</target>
        </trans-unit>
        <trans-unit id="e90549847387fb18f595713064d87ed6f095e05c" translate="yes" xml:space="preserve">
          <source>The matchinfo function returns a blob value. If it is used within a query that does not use the full-text index (a &quot;query by rowid&quot; or &quot;linear scan&quot;), then the blob is zero bytes in size. Otherwise, the blob consists of zero or more 32-bit unsigned integers in machine byte-order. The exact number of integers in the returned array depends on both the query and the value of the second argument (if any) passed to the matchinfo function.</source>
          <target state="translated">Функция &quot;Информация о совпадении&quot; возвращает значение в виде капли.Если оно используется внутри запроса,не использующего полнотекстовый индекс (&quot;запрос по рядку&quot; или &quot;линейный скан&quot;),то размер блока равен нулю байт.В противном случае,блок состоит из нуля или более 32-битных беззнаковых целых чисел в машинном порядке байт.Точное количество целых чисел в возвращаемом массиве зависит как от запроса,так и от значения второго аргумента (если таковой имеется),переданного в функцию matchinfo.</target>
        </trans-unit>
        <trans-unit id="5fd973e0c684054ad3dbbf4a32a2b97ce84282bb" translate="yes" xml:space="preserve">
          <source>The matchinfo option may only be set to the value &quot;fts3&quot;. Attempting to set matchinfo to anything other than &quot;fts3&quot; is an error. If this option is specified, then some of the extra information stored by FTS4 is omitted. This reduces the amount of disk space consumed by an FTS4 table until it is almost the same as the amount that would be used by the equivalent FTS3 table, but also means that the data accessed by passing the 'l' flag to the &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo()&lt;/a&gt; function is not available.</source>
          <target state="translated">Параметр matchinfo может быть установлен только на значение &amp;laquo;fts3&amp;raquo;. Попытка установить для matchinfo значение, отличное от &quot;fts3&quot;, является ошибкой. Если указана эта опция, то часть дополнительной информации, хранящейся в FTS4, опускается. Это уменьшает объем дискового пространства, потребляемого таблицей FTS4, до тех пор, пока он не станет почти таким же, как объем, который будет использоваться эквивалентной таблицей FTS3, но также означает, что доступ к данным осуществляется путем передачи флага 'l' в &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo ()&lt;/a&gt; функция недоступна.</target>
        </trans-unit>
        <trans-unit id="30566a971375718efb83d0535cdd7975a1033a22" translate="yes" xml:space="preserve">
          <source>The matrix below shows the time needed to read BLOBs stored in separate files divided by the time needed to read BLOBs stored entirely in the database. Hence, for numbers larger than 1.0, it is faster to store the BLOBs directly in the database. For numbers smaller than 1.0, it is faster to store the BLOBs in separate files.</source>
          <target state="translated">В приведенной ниже матрице показано время,необходимое для чтения BLOB-ов,хранящихся в отдельных файлах,деленное на время,необходимое для чтения BLOB-ов,полностью хранящихся в базе данных.Следовательно,для чисел больше 1.0,быстрее хранить BLOB-ы непосредственно в БД.Для чисел меньше 1.0-быстрее хранить BLOB-ы в отдельных файлах.</target>
        </trans-unit>
        <trans-unit id="4c2fbc6111561deb5f89baa2a61ac965889a611a" translate="yes" xml:space="preserve">
          <source>The max() aggregate function returns the maximum value of all values in the group. The maximum value is the value that would be returned last in an ORDER BY on the same column. Aggregate max() returns NULL if and only if there are no non-NULL values in the group.</source>
          <target state="translated">Функция агрегата Max()возвращает максимальное значение всех значений в группе.Максимальное значение-это значение,которое возвращалось бы последним в ORDER BY в том же столбце.Функция агрегирования max()возвращает NULL,если и только если в группе нет не нулевых значений.</target>
        </trans-unit>
        <trans-unit id="259079b25b4ee53dd3af62dccf64b88cf7401fe7" translate="yes" xml:space="preserve">
          <source>The maximum allowed value for the 'automerge' parameter is 16. The default value is 4. Setting the 'automerge' parameter to 0 disables the automatic incremental merging of b-trees altogether.</source>
          <target state="translated">Максимально допустимое значение для параметра 'automerge'-16.Значение по умолчанию равно 4.установка параметра 'automerge' в 0 отключает автоматическое инкрементальное слияние b-деревьев.</target>
        </trans-unit>
        <trans-unit id="99bed95a8c8918c9ad675486624a0ec50cca0b55" translate="yes" xml:space="preserve">
          <source>The maximum amount of general-purpose memory needed by the application is determined by such factors as how many simultaneous open &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; and &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statement&lt;/a&gt; objects the application uses, and on the complexity of the &lt;a href=&quot;c3ref/stmt&quot;&gt;prepared statements&lt;/a&gt;. For any given application, these factors are normally fixed and can be determined experimentally using &lt;a href=&quot;c3ref/c_status_malloc_count#sqlitestatusmemoryused&quot;&gt;SQLITE_STATUS_MEMORY_USED&lt;/a&gt;. A typical application might only use about 40KB of general-purpose memory. This gives a value of &lt;b&gt;N&lt;/b&gt; of around 100KB.</source>
          <target state="translated">Максимальный объем памяти общего назначения, необходимый приложению, определяется такими факторами, как количество одновременных открытых &lt;a href=&quot;c3ref/sqlite3&quot;&gt;соединений с базой данных&lt;/a&gt; и &lt;a href=&quot;c3ref/stmt&quot;&gt;подготовленных&lt;/a&gt; объектов операторов, которые использует приложение, а также сложность &lt;a href=&quot;c3ref/stmt&quot;&gt;подготовленных операторов&lt;/a&gt; . Для любого конкретного приложения эти факторы обычно фиксированы и могут быть определены экспериментально с помощью &lt;a href=&quot;c3ref/c_status_malloc_count#sqlitestatusmemoryused&quot;&gt;SQLITE_STATUS_MEMORY_USED&lt;/a&gt; . Типичное приложение может использовать только около 40 КБ памяти общего назначения. Это дает значение &lt;b&gt;N&lt;/b&gt; около 100 КБ.</target>
        </trans-unit>
        <trans-unit id="a9b767b87a835989935611d9f91af0a49ef22427" translate="yes" xml:space="preserve">
          <source>The maximum and minimum embedded payload fractions and the leaf payload fraction values must be 64, 32, and 32. These values were originally intended to be tunable parameters that could be used to modify the storage format of the b-tree algorithm. However, that functionality is not supported and there are no current plans to add support in the future. Hence, these three bytes are fixed at the values specified.</source>
          <target state="translated">Максимальные и минимальные значения дроби полезной нагрузки и дроби полезной нагрузки листа должны быть 64,32 и 32.Эти значения изначально задумывались как настраиваемые параметры,которые можно было бы использовать для изменения формата хранения алгоритма b-дерева.Однако эта функциональность не поддерживается,и в настоящее время нет планов по добавлению поддержки в будущем.Следовательно,эти три байта фиксируются на заданных значениях.</target>
        </trans-unit>
        <trans-unit id="3b75dd01c336dd48a91229fb4fe465cfca0656d8" translate="yes" xml:space="preserve">
          <source>The maximum depth of an expression tree can be lowered at run-time using the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitexprdepth&quot;&gt;SQLITE_LIMIT_EXPR_DEPTH&lt;/a&gt;,size) interface if the SQLITE_MAX_EXPR_DEPTH is initially positive. In other words, the maximum expression depth can be lowered at run-time if there is already a compile-time limit on the expression depth. If SQLITE_MAX_EXPR_DEPTH is set to 0 at compile time (if the depth of expressions is unlimited) then the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitexprdepth&quot;&gt;SQLITE_LIMIT_EXPR_DEPTH&lt;/a&gt;,size) is a no-op.</source>
          <target state="translated">Максимальную глубину дерева выражения можно уменьшить во время выполнения с помощью интерфейса &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt; (db, &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitexprdepth&quot;&gt;SQLITE_LIMIT_EXPR_DEPTH&lt;/a&gt; , size), если значение SQLITE_MAX_EXPR_DEPTH изначально положительное. Другими словами, максимальная глубина выражения может быть снижена во время выполнения, если уже существует ограничение времени компиляции на глубину выражения. Если SQLITE_MAX_EXPR_DEPTH установлен в 0 во время компиляции (если глубина выражений не ограничена), тогда &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt; (db, &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitexprdepth&quot;&gt;SQLITE_LIMIT_EXPR_DEPTH&lt;/a&gt; , size) не работает.</target>
        </trans-unit>
        <trans-unit id="7601f568790af4a666771d9637268d8679fb90bb" translate="yes" xml:space="preserve">
          <source>The maximum depth of recursion for triggers.</source>
          <target state="translated">Максимальная глубина рекурсии для триггеров.</target>
        </trans-unit>
        <trans-unit id="f7ca88d6870cff0eca30922b0b5339bd065f10ca" translate="yes" xml:space="preserve">
          <source>The maximum depth of the parse tree on any expression.</source>
          <target state="translated">Максимальная глубина дерева разбора по любому выражению.</target>
        </trans-unit>
        <trans-unit id="2e6bbb757edd69dcf67031bc6d4f260f516ed8d0" translate="yes" xml:space="preserve">
          <source>The maximum host parameter number can be lowered at run-time using the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitvariablenumber&quot;&gt;SQLITE_LIMIT_VARIABLE_NUMBER&lt;/a&gt;,size) interface.</source>
          <target state="translated">Максимальное количество параметров хоста можно уменьшить во время выполнения с помощью интерфейса &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt; (db, &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitvariablenumber&quot;&gt;SQLITE_LIMIT_VARIABLE_NUMBER&lt;/a&gt; , size).</target>
        </trans-unit>
        <trans-unit id="b3e774d908522cebf9bd7f7f3469b3fb31276410" translate="yes" xml:space="preserve">
          <source>The maximum index number of any &lt;a href=&quot;../lang_expr#varparam&quot;&gt;parameter&lt;/a&gt; in an SQL statement.</source>
          <target state="translated">Максимальный порядковый номер любого &lt;a href=&quot;../lang_expr#varparam&quot;&gt;параметра&lt;/a&gt; в инструкции SQL.</target>
        </trans-unit>
        <trans-unit id="32a6d72e37d636464c2192cbf409c3425887feb6" translate="yes" xml:space="preserve">
          <source>The maximum index number of any &lt;a href=&quot;lang_expr#varparam&quot;&gt;parameter&lt;/a&gt; in an SQL statement.</source>
          <target state="translated">Максимальный порядковый номер любого &lt;a href=&quot;lang_expr#varparam&quot;&gt;параметра&lt;/a&gt; в инструкции SQL.</target>
        </trans-unit>
        <trans-unit id="ab2a11cb65d0770d55a8b43b094028bd3c341a46" translate="yes" xml:space="preserve">
          <source>The maximum length of a LIKE or GLOB pattern can be lowered at run-time using the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitlikepatternlength&quot;&gt;SQLITE_LIMIT_LIKE_PATTERN_LENGTH&lt;/a&gt;,size) interface.</source>
          <target state="translated">Максимальную длину шаблона LIKE или GLOB можно уменьшить во время выполнения с помощью интерфейса &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt; (db, &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitlikepatternlength&quot;&gt;SQLITE_LIMIT_LIKE_PATTERN_LENGTH&lt;/a&gt; , size).</target>
        </trans-unit>
        <trans-unit id="295e913f367222db2770c86b223d1cb94f3eaca7" translate="yes" xml:space="preserve">
          <source>The maximum length of a SQL function name is 255 bytes of UTF8. Any attempt to create a function with a longer name will result in an &lt;a href=&quot;rescode#misuse&quot;&gt;SQLITE_MISUSE&lt;/a&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d765036961e5dc86e0ba5117af47c297fab27c55" translate="yes" xml:space="preserve">
          <source>The maximum length of an SQL statement can be lowered at run-time using the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitsqllength&quot;&gt;SQLITE_LIMIT_SQL_LENGTH&lt;/a&gt;,size) interface.</source>
          <target state="translated">Максимальную длину оператора SQL можно уменьшить во время выполнения с помощью интерфейса &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt; (db, &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitsqllength&quot;&gt;SQLITE_LIMIT_SQL_LENGTH&lt;/a&gt; , size).</target>
        </trans-unit>
        <trans-unit id="d303fbf5ebde80b928a0a149ac1d360f8b2d9beb" translate="yes" xml:space="preserve">
          <source>The maximum length of an SQL statement, in bytes.</source>
          <target state="translated">Максимальная длина SQL-оператора,в байтах.</target>
        </trans-unit>
        <trans-unit id="c8feb93491c3d188a9985624d09a15796f2e0e57" translate="yes" xml:space="preserve">
          <source>The maximum length of the pattern argument to the &lt;a href=&quot;../lang_expr#like&quot;&gt;LIKE&lt;/a&gt; or &lt;a href=&quot;../lang_expr#glob&quot;&gt;GLOB&lt;/a&gt; operators.</source>
          <target state="translated">Максимальная длина аргумента шаблона для операторов &lt;a href=&quot;../lang_expr#like&quot;&gt;LIKE&lt;/a&gt; или &lt;a href=&quot;../lang_expr#glob&quot;&gt;GLOB&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ee02be23a19dec285dd5109a44c64362161f0e7" translate="yes" xml:space="preserve">
          <source>The maximum length of the pattern argument to the &lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt; or &lt;a href=&quot;lang_expr#glob&quot;&gt;GLOB&lt;/a&gt; operators.</source>
          <target state="translated">Максимальная длина аргумента шаблона для операторов &lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt; или &lt;a href=&quot;lang_expr#glob&quot;&gt;GLOB&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b23da6f4323ba72ffe46e74c0191923768cdb864" translate="yes" xml:space="preserve">
          <source>The maximum number of &lt;a href=&quot;../lang_attach&quot;&gt;attached databases&lt;/a&gt;.</source>
          <target state="translated">Максимальное количество &lt;a href=&quot;../lang_attach&quot;&gt;подключенных баз данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b544569d59df80608bd6a41e19a745bdff4577b6" translate="yes" xml:space="preserve">
          <source>The maximum number of &lt;a href=&quot;lang_attach&quot;&gt;attached databases&lt;/a&gt;.</source>
          <target state="translated">Максимальное количество &lt;a href=&quot;lang_attach&quot;&gt;подключенных баз данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="471b9bc71d47534b60a1c278c46d4cee7c9664ba" translate="yes" xml:space="preserve">
          <source>The maximum number of arguments in a function can be lowered at run-time using the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitfunctionarg&quot;&gt;SQLITE_LIMIT_FUNCTION_ARG&lt;/a&gt;,size) interface.</source>
          <target state="translated">Максимальное количество аргументов в функции можно уменьшить во время выполнения с помощью интерфейса &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt; (db, &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitfunctionarg&quot;&gt;SQLITE_LIMIT_FUNCTION_ARG&lt;/a&gt; , size).</target>
        </trans-unit>
        <trans-unit id="00eff3b06f801e572f28af21289c2619b46c2f08" translate="yes" xml:space="preserve">
          <source>The maximum number of arguments on a function.</source>
          <target state="translated">Максимальное количество аргументов в функции.</target>
        </trans-unit>
        <trans-unit id="b6c416e24701b8851e7053c0bb7cd7dd6b331315" translate="yes" xml:space="preserve">
          <source>The maximum number of attached databases can be lowered at run-time using the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitattached&quot;&gt;SQLITE_LIMIT_ATTACHED&lt;/a&gt;,size) interface.</source>
          <target state="translated">Максимальное количество подключенных баз данных можно уменьшить во время выполнения с помощью интерфейса &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt; (db, &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitattached&quot;&gt;SQLITE_LIMIT_ATTACHED&lt;/a&gt; , size).</target>
        </trans-unit>
        <trans-unit id="0b6c3c6cf8605d1353c6caeac57deb9da3ed0c6e" translate="yes" xml:space="preserve">
          <source>The maximum number of auxiliary worker threads that a single &lt;a href=&quot;#sqlite3_stmt&quot;&gt;prepared statement&lt;/a&gt; may start.</source>
          <target state="translated">Максимальное количество вспомогательных рабочих потоков, которые может запустить один &lt;a href=&quot;#sqlite3_stmt&quot;&gt;подготовленный оператор&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66f8c3a081d879e272abf19945402c6cac2a7ecc" translate="yes" xml:space="preserve">
          <source>The maximum number of auxiliary worker threads that a single &lt;a href=&quot;stmt&quot;&gt;prepared statement&lt;/a&gt; may start.</source>
          <target state="translated">Максимальное количество вспомогательных рабочих потоков, которые может запустить один &lt;a href=&quot;stmt&quot;&gt;подготовленный оператор&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bbb454e2483711c9ac94945a0c80d3f47e450874" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes in a string or BLOB in SQLite is defined by the preprocessor macro SQLITE_MAX_LENGTH. The default value of this macro is 1 billion (1 thousand million or 1,000,000,000). You can raise or lower this value at compile-time using a command-line option like this:</source>
          <target state="translated">Максимальное количество байт в строке или BLOB в SQLite определяется препроцессорным макросом SQLITE_MAX_LENGTH.По умолчанию значение этого макроса составляет 1 миллиард (1 тысячу миллионов или 1 000 000 000).Вы можете увеличить или уменьшить это значение во время компиляции,используя опцию командной строки,подобную этой:</target>
        </trans-unit>
        <trans-unit id="da1ee68dd77283238b55af162c380f02592134ee" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes in the text of an SQL statement is limited to SQLITE_MAX_SQL_LENGTH which defaults to 1000000. You can redefine this limit to be as large as the smaller of SQLITE_MAX_LENGTH and 1073741824.</source>
          <target state="translated">Максимальное количество байт в тексте SQL-оператора ограничено SQLITE_MAX_SQL_LENGTH,который по умолчанию имеет значение 1000000.Вы можете переопределить это ограничение так,чтобы оно было таким же большим,как и меньшее из SQLITE_MAX_LENGTH и 1073741824.</target>
        </trans-unit>
        <trans-unit id="6345ddabb514350f3e36f681af647ea84308cf28" translate="yes" xml:space="preserve">
          <source>The maximum number of columns can be lowered at run-time using the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitcolumn&quot;&gt;SQLITE_LIMIT_COLUMN&lt;/a&gt;,size) interface.</source>
          <target state="translated">Максимальное количество столбцов можно уменьшить во время выполнения с помощью интерфейса &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt; (db, &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitcolumn&quot;&gt;SQLITE_LIMIT_COLUMN&lt;/a&gt; , size).</target>
        </trans-unit>
        <trans-unit id="1c620a336050426a95c894972afda47b3aee66a2" translate="yes" xml:space="preserve">
          <source>The maximum number of columns in a table definition or in the result set of a &lt;a href=&quot;../lang_select&quot;&gt;SELECT&lt;/a&gt; or the maximum number of columns in an index or in an ORDER BY or GROUP BY clause.</source>
          <target state="translated">Максимальное количество столбцов в определении таблицы или в результирующем наборе &lt;a href=&quot;../lang_select&quot;&gt;оператора SELECT&lt;/a&gt; или максимальное количество столбцов в индексе или в предложении ORDER BY или GROUP BY.</target>
        </trans-unit>
        <trans-unit id="355eec7f9bb7446523a2374f005ae8119aa229d8" translate="yes" xml:space="preserve">
          <source>The maximum number of columns in a table definition or in the result set of a &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; or the maximum number of columns in an index or in an ORDER BY or GROUP BY clause.</source>
          <target state="translated">Максимальное количество столбцов в определении таблицы или в результирующем наборе &lt;a href=&quot;lang_select&quot;&gt;оператора SELECT&lt;/a&gt; или максимальное количество столбцов в индексе или в предложении ORDER BY или GROUP BY.</target>
        </trans-unit>
        <trans-unit id="8374b8e68f54521ffc214c5ed7e8c2d7fd95f1b7" translate="yes" xml:space="preserve">
          <source>The maximum number of compound SELECT terms can be lowered at run-time using the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitcompoundselect&quot;&gt;SQLITE_LIMIT_COMPOUND_SELECT&lt;/a&gt;,size) interface.</source>
          <target state="translated">Максимальное количество составных терминов SELECT можно уменьшить во время выполнения с помощью интерфейса &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt; (db, &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitcompoundselect&quot;&gt;SQLITE_LIMIT_COMPOUND_SELECT&lt;/a&gt; , size).</target>
        </trans-unit>
        <trans-unit id="63cbc7c9607d5bbb2a5e8441eb06e668604fc05c" translate="yes" xml:space="preserve">
          <source>The maximum number of instructions in a virtual machine program used to implement an SQL statement. If &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; or the equivalent tries to allocate space for more than this many opcodes in a single prepared statement, an SQLITE_NOMEM error is returned.</source>
          <target state="translated">Максимальное количество инструкций в программе виртуальной машины, используемых для реализации оператора SQL. Если &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v2 ()&lt;/a&gt; или эквивалент пытается выделить пространство для большего количества кодов операций в одном подготовленном операторе, возвращается ошибка SQLITE_NOMEM.</target>
        </trans-unit>
        <trans-unit id="3914cdf98f328c74ff19ff41972588f848a7b49e" translate="yes" xml:space="preserve">
          <source>The maximum number of instructions in a virtual machine program used to implement an SQL statement. If &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; or the equivalent tries to allocate space for more than this many opcodes in a single prepared statement, an SQLITE_NOMEM error is returned.</source>
          <target state="translated">Максимальное количество инструкций в программе виртуальной машины, используемых для реализации оператора SQL. Если &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v2 ()&lt;/a&gt; или эквивалент пытается выделить пространство для большего количества кодов операций в одном подготовленном операторе, возвращается ошибка SQLITE_NOMEM.</target>
        </trans-unit>
        <trans-unit id="7c57be7916f18cb9fd931235954ed49b10f67a38" translate="yes" xml:space="preserve">
          <source>The maximum number of terms in a compound SELECT statement.</source>
          <target state="translated">Максимальное количество терминов в составном заявлении SELECT.</target>
        </trans-unit>
        <trans-unit id="6409e263b558e4fc8032ff274ccb7661be29c559" translate="yes" xml:space="preserve">
          <source>The maximum number of tokens in the returned text. This must be greater than zero and equal to or less than 64.</source>
          <target state="translated">Максимальное количество маркеров в возвращаемом тексте.Оно должно быть больше нуля и равно или меньше 64.</target>
        </trans-unit>
        <trans-unit id="970d6e67d87a8bc5f32df0c8fe5b2ab66eff4335" translate="yes" xml:space="preserve">
          <source>The maximum parameter number is set at compile-time by the &lt;a href=&quot;limits#max_variable_number&quot;&gt;SQLITE_MAX_VARIABLE_NUMBER&lt;/a&gt; macro. An individual &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; D can reduce its maximum parameter number below the compile-time maximum using the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;(D, &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitvariablenumber&quot;&gt;SQLITE_LIMIT_VARIABLE_NUMBER&lt;/a&gt;,...) interface.</source>
          <target state="translated">Максимальный номер параметра устанавливается во время &lt;a href=&quot;limits#max_variable_number&quot;&gt;компиляции&lt;/a&gt; макросом SQLITE_MAX_VARIABLE_NUMBER . Отдельное &lt;a href=&quot;c3ref/sqlite3&quot;&gt;соединение&lt;/a&gt; D с базой данных может уменьшить максимальное число параметров ниже максимума времени компиляции с помощью интерфейса &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt; (D, &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitvariablenumber&quot;&gt;SQLITE_LIMIT_VARIABLE_NUMBER&lt;/a&gt; , ...).</target>
        </trans-unit>
        <trans-unit id="eeb9b32b1bfb4a0ced4bb9bc2aaa054c3abdfc92" translate="yes" xml:space="preserve">
          <source>The maximum size of any string or BLOB or table row, in bytes.</source>
          <target state="translated">Максимальный размер любой строки или BLOB или строки таблицы,в байтах.</target>
        </trans-unit>
        <trans-unit id="c7f288d6ab417ac4a35975a5356fac79645319c2" translate="yes" xml:space="preserve">
          <source>The maximum string or BLOB length can be lowered at run-time using the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt;(db,&lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitlength&quot;&gt;SQLITE_LIMIT_LENGTH&lt;/a&gt;,size) interface.</source>
          <target state="translated">Максимальную длину строки или &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitlength&quot;&gt;большого двоичного объекта&lt;/a&gt; можно уменьшить во время выполнения с помощью интерфейса &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit&lt;/a&gt; (db, SQLITE_LIMIT_LENGTH , size).</target>
        </trans-unit>
        <trans-unit id="770a09ba0039805fb6c3142551082e18eaaafe07" translate="yes" xml:space="preserve">
          <source>The meaning of P5 depends on whether or not the SQLITE_ENABLE_NULL_TRIM compile-time option is enabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc8ccfaed1025b2039c6bdfd6b0a5399eacb5ca" translate="yes" xml:space="preserve">
          <source>The meanings for all $nResCode result code values are shown below, in numeric order.</source>
          <target state="translated">Значения для всех значений кода результата $nResCode показаны ниже,в числовом порядке.</target>
        </trans-unit>
        <trans-unit id="4cad3638dbf4cc08ff40caa02c71d9ae2dc2cc12" translate="yes" xml:space="preserve">
          <source>The meanings for all 92 result code values are shown below, in numeric order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07eeff254885d567e91c4b2aaaeee641fbf91699" translate="yes" xml:space="preserve">
          <source>The meanings of the fields of the schema table are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfaa39aa41d2de54931d409a9de16ab158bc08a" translate="yes" xml:space="preserve">
          <source>The meanings of these various return values are as follows:</source>
          <target state="translated">Значения этих различных возвратных значений выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="3594f845ca8155469ebf0d3a1db0993f4bb9cbd1" translate="yes" xml:space="preserve">
          <source>The measurements in this article were made during the week of 2017-06-05 using a version of SQLite in between 3.19.2 and 3.20.0. You may expect future versions of SQLite to perform even better.</source>
          <target state="translated">Измерения в данной статье проводились в течение недели 2017-06-05 годов с использованием версии SQLite между 3.19.2 и 3.20.0.Можно ожидать,что будущие версии SQLite будут работать еще лучше.</target>
        </trans-unit>
        <trans-unit id="5036b12169e90ae6667838e4b73b7f71ccf84ec9" translate="yes" xml:space="preserve">
          <source>The memory allocation limits can also be adjusted using &lt;a href=&quot;../pragma#pragma_soft_heap_limit&quot;&gt;PRAGMA soft_heap_limit&lt;/a&gt; and &lt;a href=&quot;../pragma#pragma_hard_heap_limit&quot;&gt;PRAGMA hard_heap_limit&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2809fd545c907ef31fca4768c017467b4928225" translate="yes" xml:space="preserve">
          <source>The memory allocation limits can also be adjusted using &lt;a href=&quot;pragma#pragma_soft_heap_limit&quot;&gt;PRAGMA soft_heap_limit&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_hard_heap_limit&quot;&gt;PRAGMA hard_heap_limit&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e788358e2ac74022367111d33deb5ddc9a976282" translate="yes" xml:space="preserve">
          <source>The memory corruption problem becomes more acute when using &lt;a href=&quot;mmap&quot;&gt;memory-mapped I/O&lt;/a&gt;. When all or part of the database file is mapped into the application's address space, then a stray pointer that overwrites any part of that mapped space will immediately corrupt the database file, without requiring the application to do a subsequent write() system call.</source>
          <target state="translated">Проблема повреждения памяти становится более острой при использовании &lt;a href=&quot;mmap&quot;&gt;ввода-вывода с отображением памяти&lt;/a&gt; . Когда весь или часть файла базы данных отображается в адресное пространство приложения, случайный указатель, который перезаписывает любую часть этого отображаемого пространства, немедленно повреждает файл базы данных, не требуя от приложения выполнения последующего системного вызова write ().</target>
        </trans-unit>
        <trans-unit id="1f25753cb6dacb02b829c0a340f5d35891b7f9cb" translate="yes" xml:space="preserve">
          <source>The memory footprint of the application can be dramatically reduced by only loading content that is relevant to the current display and keeping the bulk of the content on disk. The fast query capability of SQLite make this a viable alternative to keeping all content in memory at all times. And when applications use less memory, it makes the entire computer more responsive, further enhancing the user experience.</source>
          <target state="translated">Плотность памяти приложения может быть значительно уменьшена за счет загрузки только того содержимого,которое имеет отношение к текущему дисплею,и сохранения основной части содержимого на диске.Возможности SQLite по быстрым запросам делают эту возможность жизнеспособной альтернативой постоянному хранению всего содержимого в памяти.А когда приложения используют меньше памяти,это делает весь компьютер более отзывчивым,еще больше повышая удобство работы пользователя.</target>
        </trans-unit>
        <trans-unit id="9d3e4b06e9105ca7c88a4e1edabcb69936b1841b" translate="yes" xml:space="preserve">
          <source>The memory high-water mark is reset to the current value of &lt;a href=&quot;#sqlite3_memory_highwater&quot;&gt;sqlite3_memory_used()&lt;/a&gt; if and only if the parameter to &lt;a href=&quot;#sqlite3_memory_highwater&quot;&gt;sqlite3_memory_highwater()&lt;/a&gt; is true. The value returned by &lt;a href=&quot;#sqlite3_memory_highwater&quot;&gt;sqlite3_memory_highwater(1)&lt;/a&gt; is the high-water mark prior to the reset.</source>
          <target state="translated">Метка максимума памяти сбрасывается до текущего значения &lt;a href=&quot;#sqlite3_memory_highwater&quot;&gt;sqlite3_memory_used ()&lt;/a&gt; тогда и только тогда, когда параметр &lt;a href=&quot;#sqlite3_memory_highwater&quot;&gt;sqlite3_memory_highwater ()&lt;/a&gt; имеет значение true. Значение, возвращаемое &lt;a href=&quot;#sqlite3_memory_highwater&quot;&gt;sqlite3_memory_highwater (1),&lt;/a&gt; является высшей отметкой до сброса.</target>
        </trans-unit>
        <trans-unit id="cd5593ab95a8d1e1ac6cc8d242678782f1a535e8" translate="yes" xml:space="preserve">
          <source>The memory high-water mark is reset to the current value of &lt;a href=&quot;memory_highwater&quot;&gt;sqlite3_memory_used()&lt;/a&gt; if and only if the parameter to &lt;a href=&quot;memory_highwater&quot;&gt;sqlite3_memory_highwater()&lt;/a&gt; is true. The value returned by &lt;a href=&quot;memory_highwater&quot;&gt;sqlite3_memory_highwater(1)&lt;/a&gt; is the high-water mark prior to the reset.</source>
          <target state="translated">Метка максимума памяти сбрасывается до текущего значения &lt;a href=&quot;memory_highwater&quot;&gt;sqlite3_memory_used ()&lt;/a&gt; тогда и только тогда, когда параметр &lt;a href=&quot;memory_highwater&quot;&gt;sqlite3_memory_highwater ()&lt;/a&gt; имеет значение true. Значение, возвращаемое &lt;a href=&quot;memory_highwater&quot;&gt;sqlite3_memory_highwater (1),&lt;/a&gt; является высшей отметкой до сброса.</target>
        </trans-unit>
        <trans-unit id="a98788d1208d8031c1910803fa2f1051d600b111" translate="yes" xml:space="preserve">
          <source>The memory pointed to by the character pointers returned for the declaration type and collation sequence is valid until the next call to any SQLite API function.</source>
          <target state="translated">Память,на которую указывают символьные указатели,возвращаемые для типа декларации и последовательности сравнения,действительна до следующего вызова любой функции SQLite API.</target>
        </trans-unit>
        <trans-unit id="523aa17230ae599153575b20eede454c13803757" translate="yes" xml:space="preserve">
          <source>The memory returned by sqlite3_malloc(), sqlite3_realloc(), sqlite3_malloc64(), and sqlite3_realloc64() is always aligned to at least an 8 byte boundary, or to a 4 byte boundary if the &lt;a href=&quot;../compile#4_byte_aligned_malloc&quot;&gt;SQLITE_4_BYTE_ALIGNED_MALLOC&lt;/a&gt; compile-time option is used.</source>
          <target state="translated">Память, возвращаемая sqlite3_malloc (), sqlite3_realloc (), sqlite3_malloc64 () и sqlite3_realloc64 () всегда выравнивается по крайней мере по 8-байтовой границе или по 4-байтовой границе, если используется &lt;a href=&quot;../compile#4_byte_aligned_malloc&quot;&gt;параметр времени&lt;/a&gt; компиляции SQLITE_4_BYTE_ALIGNED_MALLOC .</target>
        </trans-unit>
        <trans-unit id="0b4a85ec728749e1396a0209dbea3173ce995dba" translate="yes" xml:space="preserve">
          <source>The memory returned by sqlite3_malloc(), sqlite3_realloc(), sqlite3_malloc64(), and sqlite3_realloc64() is always aligned to at least an 8 byte boundary, or to a 4 byte boundary if the &lt;a href=&quot;compile#4_byte_aligned_malloc&quot;&gt;SQLITE_4_BYTE_ALIGNED_MALLOC&lt;/a&gt; compile-time option is used.</source>
          <target state="translated">Память, возвращаемая sqlite3_malloc (), sqlite3_realloc (), sqlite3_malloc64 () и sqlite3_realloc64 () всегда выравнивается по крайней мере по 8-байтовой границе или по 4-байтовой границе, если используется &lt;a href=&quot;compile#4_byte_aligned_malloc&quot;&gt;параметр времени&lt;/a&gt; компиляции SQLITE_4_BYTE_ALIGNED_MALLOC .</target>
        </trans-unit>
        <trans-unit id="d4065cde811c203e3d250a3f54d5601da517866b" translate="yes" xml:space="preserve">
          <source>The memsys5 allocator is designed for use on embedded systems, though there is nothing to prevent its use on workstations. The szBuf is typically between a few hundred kilobytes up to a few dozen megabytes, depending on system requirements and memory budget.</source>
          <target state="translated">Аллокатор memsys5 предназначен для использования на встраиваемых системах,хотя ничто не мешает его использованию на рабочих станциях.Обычно szBuf составляет от нескольких сотен килобайт до нескольких десятков мегабайт,в зависимости от системных требований и бюджета памяти.</target>
        </trans-unit>
        <trans-unit id="15e755d3b15a2797fc8e730750dc9e96957bcf11" translate="yes" xml:space="preserve">
          <source>The min() aggregate function returns the minimum non-NULL value of all values in the group. The minimum value is the first non-NULL value that would appear in an ORDER BY of the column. Aggregate min() returns NULL if and only if there are no non-NULL values in the group.</source>
          <target state="translated">Функция агрегата min()возвращает минимальное не нулевое значение всех значений в группе.Минимальное значение-это первое не нулевое значение,которое появляется в колонке ORDER BY.Функция агрегата min()возвращает NULL,если и только если в группе нет не NULL-значений.</target>
        </trans-unit>
        <trans-unit id="114a5a7dbd98c187abf7e68d111172546895bf6d" translate="yes" xml:space="preserve">
          <source>The min/max-value pair columns are stored as 32-bit floating point values for &quot;rtree&quot; virtual tables or as 32-bit signed integers in &quot;rtree_i32&quot; virtual tables. Unlike regular SQLite tables which can store data in a variety of datatypes and formats, the R*Tree rigidly enforce these storage types. If any other type of value is inserted into such a column, the r-tree module silently converts it to the required type before writing the new record to the database.</source>
          <target state="translated">Столбцы пары min/max-значений хранятся в виде 32-битных значений с плавающей точкой для виртуальных таблиц &quot;rtree&quot; или в виде 32-битных целых чисел,подписанных в виртуальных таблицах &quot;rtree_i32&quot;.В отличие от обычных таблиц SQLite,которые могут хранить данные в различных типах и форматах,R*Tree жестко контролирует эти типы хранения.Если в такой столбец вставляется значение любого другого типа,модуль r-дерева бесшумно преобразует его в нужный тип перед записью новой записи в БД.</target>
        </trans-unit>
        <trans-unit id="697dd64d2ba004e05302a199cbf94ae930397047" translate="yes" xml:space="preserve">
          <source>The minimum &quot;three+four&quot; value</source>
          <target state="translated">Минимальное значение &quot;три+четыре&quot;</target>
        </trans-unit>
        <trans-unit id="4344744cb5e4e7fe1c07e4d9e9f4f1a35db07ca5" translate="yes" xml:space="preserve">
          <source>The minimum size of an SQLite database is one page for each table and each index. With a larger page size, the size of an empty database for a given schema will grow by a factor of four, therefore. However, once the database begins to fill with content the size of the older 1024-byte page databases and the newer 4096-byte page databases will quickly converge. Due to relaxed bin-packing constraints, the 4096-byte page size might actually result in a smaller file, once substantial content is added.</source>
          <target state="translated">Минимальный размер базы данных SQLite-одна страница для каждой таблицы и каждого индекса.При большем размере страницы размер пустой БД для заданной схемы вырастет,таким образом,в четыре раза.Однако,как только БД начнет заполняться содержимым,размер старых 1024-байтных страниц БД и более новых 4096-байтных страниц БД быстро сойдутся воедино.Из-за ослабленных ограничений на упаковку бинарных файлов,размер 4096-байтовой страницы может фактически привести к уменьшению файла,как только будет добавлено значительное содержимое.</target>
        </trans-unit>
        <trans-unit id="e5d2ce57cb5bfbf79b3c98a499658be04c3e7756" translate="yes" xml:space="preserve">
          <source>The minor version number Y was historically incremented for new features and/or new interfaces that did not significantly change the structure of the code. The addition of &lt;a href=&quot;lang_with&quot;&gt;common table expressions&lt;/a&gt;, &lt;a href=&quot;partialindex&quot;&gt;partial indexes&lt;/a&gt;, and &lt;a href=&quot;expridx&quot;&gt;indexes on expressions&lt;/a&gt; are all examples of &quot;minor&quot; changes. Again, the distinction between &quot;major&quot; and &quot;minor&quot; is subjective.</source>
          <target state="translated">Дополнительный номер версии Y исторически увеличивался для новых функций и / или новых интерфейсов, которые существенно не меняли структуру кода. Добавление &lt;a href=&quot;lang_with&quot;&gt;общих табличных выражений&lt;/a&gt; , &lt;a href=&quot;partialindex&quot;&gt;частичных индексов&lt;/a&gt; и &lt;a href=&quot;expridx&quot;&gt;индексов к выражениям&lt;/a&gt; - все это примеры &amp;laquo;незначительных&amp;raquo; изменений. Опять же, различие между &amp;laquo;большим&amp;raquo; и &amp;laquo;второстепенным&amp;raquo; субъективно.</target>
        </trans-unit>
        <trans-unit id="daac53b800202886e5a1bc16ab5a5eb44a3f8d4d" translate="yes" xml:space="preserve">
          <source>The mirror is an incremental export of the &lt;a href=&quot;https://sqlite.org/src/timeline&quot;&gt;canonical Fossil repository&lt;/a&gt; for SQLite. A cron-job updates the GitHub repository once an hour. This is a one-way, read-only code mirror. No pull requests or changes are accepted via GitHub. The GitHub repository merely copies the content from the Fossil repository. All changes are input via Fossil.</source>
          <target state="translated">Зеркало представляет собой инкрементный экспорт &lt;a href=&quot;https://sqlite.org/src/timeline&quot;&gt;канонического репозитория Fossil&lt;/a&gt; для SQLite. Cron-job обновляет репозиторий GitHub раз в час. Это одностороннее зеркало кода, доступное только для чтения. Запросы на вытягивание или изменения через GitHub не принимаются. Репозиторий GitHub просто копирует контент из репозитория Fossil. Все изменения вводятся через Fossil.</target>
        </trans-unit>
        <trans-unit id="8699fa6e48270c38aaec7f72b7768d7c856e3da2" translate="yes" xml:space="preserve">
          <source>The mmap_size is set separately for each database file using the &quot;&lt;a href=&quot;pragma#pragma_mmap_size&quot;&gt;PRAGMA mmap_size&lt;/a&gt;&quot; statement. The usual default mmap_size is zero, meaning that memory mapped I/O is disabled by default. However, the default mmap_size can be increased either at compile-time using the &lt;a href=&quot;compile#default_mmap_size&quot;&gt;SQLITE_DEFAULT_MMAP_SIZE&lt;/a&gt; macro or at start-time using the &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config&lt;/a&gt;(&lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmmapsize&quot;&gt;SQLITE_CONFIG_MMAP_SIZE&lt;/a&gt;,...) interface.</source>
          <target state="translated">Mmap_size устанавливается отдельно для каждого файла базы данных с помощью &lt;a href=&quot;pragma#pragma_mmap_size&quot;&gt;оператора PRAGMA mmap_size&lt;/a&gt; . Обычно mmap_size по умолчанию равен нулю, что означает, что ввод-вывод с отображением памяти по умолчанию отключен. Однако значение по умолчанию mmap_size может быть увеличено либо во время компиляции с &lt;a href=&quot;compile#default_mmap_size&quot;&gt;помощью&lt;/a&gt; макроса SQLITE_DEFAULT_MMAP_SIZE, либо во время запуска с помощью интерфейса &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config&lt;/a&gt; ( &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmmapsize&quot;&gt;SQLITE_CONFIG_MMAP_SIZE&lt;/a&gt; , ...).</target>
        </trans-unit>
        <trans-unit id="bc3aa8081ad975eaa64522ee2647fdff6a383213" translate="yes" xml:space="preserve">
          <source>The mode query parameter determines if the new database is opened read-only, read-write, read-write and created if it does not exist, or that the database is a pure in-memory database that never interacts with disk, respectively.</source>
          <target state="translated">Параметр mode request определяет,открывается ли новая БД только на чтение,читать-запись,читать-запись и создается ли она,если ее нет,или же БД является чистой БД в памяти,которая никогда не взаимодействует с диском,соответственно.</target>
        </trans-unit>
        <trans-unit id="f2526ac46e681fb29c61b97dfb71933e5d3d8f00" translate="yes" xml:space="preserve">
          <source>The modifications made to each row affected by an UPDATE statement are determined by the list of assignments following the SET keyword. Each assignment specifies a column-name to the left of the equals sign and a scalar expression to the right. For each affected row, the named columns are set to the values found by evaluating the corresponding scalar expressions. If a single column-name appears more than once in the list of assignment expressions, all but the rightmost occurrence is ignored. Columns that do not appear in the list of assignments are left unmodified. The scalar expressions may refer to columns of the row being updated. In this case all scalar expressions are evaluated before any assignments are made.</source>
          <target state="translated">Изменения,внесенные в каждую строку,на которую влияет оператор UPDATE,определяются списком назначений,следующим за ключевым словом SET.Каждое присваивание задает имя столбца слева от знака равенства и скалярное выражение справа.Для каждой затрагиваемой строки именованные столбцы устанавливаются на значения,найденные при вычислении соответствующих скалярных выражений.Если одно и то же имя столбца появляется в списке выражений присваивания более одного раза,то все,кроме самого правого,вхождения игнорируются.Столбцы,которые не появляются в списке назначений,остаются неизменными.Скалярные выражения могут относиться к обновляемым столбцам строки.В этом случае все скалярные выражения оцениваются перед выполнением каких-либо присваиваний.</target>
        </trans-unit>
        <trans-unit id="c57c56215c73a95bddb16c7f419303a4f511dbe2" translate="yes" xml:space="preserve">
          <source>The module name is registered on the &lt;a href=&quot;#sqlite3&quot;&gt;database connection&lt;/a&gt; specified by the first parameter. The name of the module is given by the second parameter. The third parameter is a pointer to the implementation of the &lt;a href=&quot;#sqlite3_module&quot;&gt;virtual table module&lt;/a&gt;. The fourth parameter is an arbitrary client data pointer that is passed through into the &lt;a href=&quot;vtab#xcreate&quot;&gt;xCreate&lt;/a&gt; and &lt;a href=&quot;vtab#xconnect&quot;&gt;xConnect&lt;/a&gt; methods of the virtual table module when a new virtual table is be being created or reinitialized.</source>
          <target state="translated">Имя модуля регистрируется в &lt;a href=&quot;#sqlite3&quot;&gt;соединении&lt;/a&gt; с базой данных, указанном первым параметром. Имя модуля задается вторым параметром. Третий параметр - это указатель на реализацию &lt;a href=&quot;#sqlite3_module&quot;&gt;модуля виртуальной таблицы&lt;/a&gt; . Четвертый параметр - это произвольный указатель данных клиента, который передается в методы &lt;a href=&quot;vtab#xcreate&quot;&gt;xCreate&lt;/a&gt; и &lt;a href=&quot;vtab#xconnect&quot;&gt;xConnect&lt;/a&gt; модуля виртуальной таблицы, когда создается или повторно инициализируется новая виртуальная таблица.</target>
        </trans-unit>
        <trans-unit id="f7d008fdf7032ca8558d613dfe5b4ba03ec8869a" translate="yes" xml:space="preserve">
          <source>The module name is registered on the &lt;a href=&quot;sqlite3&quot;&gt;database connection&lt;/a&gt; specified by the first parameter. The name of the module is given by the second parameter. The third parameter is a pointer to the implementation of the &lt;a href=&quot;module&quot;&gt;virtual table module&lt;/a&gt;. The fourth parameter is an arbitrary client data pointer that is passed through into the &lt;a href=&quot;../vtab#xcreate&quot;&gt;xCreate&lt;/a&gt; and &lt;a href=&quot;../vtab#xconnect&quot;&gt;xConnect&lt;/a&gt; methods of the virtual table module when a new virtual table is be being created or reinitialized.</source>
          <target state="translated">Имя модуля регистрируется в &lt;a href=&quot;sqlite3&quot;&gt;соединении&lt;/a&gt; с базой данных, указанном первым параметром. Имя модуля задается вторым параметром. Третий параметр - это указатель на реализацию &lt;a href=&quot;module&quot;&gt;модуля виртуальной таблицы&lt;/a&gt; . Четвертый параметр - это произвольный указатель данных клиента, который передается в методы &lt;a href=&quot;../vtab#xcreate&quot;&gt;xCreate&lt;/a&gt; и &lt;a href=&quot;../vtab#xconnect&quot;&gt;xConnect&lt;/a&gt; модуля виртуальной таблицы, когда создается или повторно инициализируется новая виртуальная таблица.</target>
        </trans-unit>
        <trans-unit id="c29884604bb765a8ff66e73918a8eec45479c155" translate="yes" xml:space="preserve">
          <source>The module name must be changed from &quot;fts3&quot; or &quot;fts4&quot; to &quot;fts5&quot;.</source>
          <target state="translated">Название модуля должно быть изменено с &quot;fts3&quot; или &quot;fts4&quot; на &quot;fts5&quot;.</target>
        </trans-unit>
        <trans-unit id="ea30bfabecd455dc9fb80bfe26599d0bf2066398" translate="yes" xml:space="preserve">
          <source>The module structure contains methods that are invoked by SQLite to perform various actions on the virtual table such as creating new instances of a virtual table or destroying old ones, reading and writing data, searching for and deleting, updating, or inserting rows. The module structure is explained in more detail below.</source>
          <target state="translated">Структура модуля содержит методы,которые вызываются SQLite для выполнения различных действий с виртуальной таблицей,таких как создание новых экземпляров виртуальной таблицы или уничтожение старых,чтение и запись данных,поиск и удаление,обновление или вставка строк.Более подробно структура модуля описана ниже.</target>
        </trans-unit>
        <trans-unit id="e7e8ce1834b0e39b1a04f1ee58c27c3761f545ea" translate="yes" xml:space="preserve">
          <source>The module structure defines all of the methods for each virtual table object. The module structure also contains the iVersion field which defines the particular edition of the module table structure. Currently, iVersion is always 3 or less, but in future releases of SQLite the module structure definition might be extended with additional methods and in that case the maximum iVersion value will be increased.</source>
          <target state="translated">Модульная структура определяет все методы для каждого объекта виртуальной таблицы.Модульная структура также содержит поле iVersion,которое определяет конкретную редакцию структуры таблицы модуля.В настоящее время iVersion всегда 3 и менее,но в будущих релизах SQLite определение модульной структуры может быть расширено дополнительными методами и в этом случае максимальное значение iVersion будет увеличено.</target>
        </trans-unit>
        <trans-unit id="f82636212897757718a1a7712ed9f6ebe7472ac1" translate="yes" xml:space="preserve">
          <source>The module-name is the name of an object that implements the virtual table. The module-name must be registered with the SQLite database connection using &lt;a href=&quot;c3ref/create_module&quot;&gt;sqlite3_create_module()&lt;/a&gt; or &lt;a href=&quot;c3ref/create_module&quot;&gt;sqlite3_create_module_v2()&lt;/a&gt; prior to issuing the CREATE VIRTUAL TABLE statement. The module takes zero or more comma-separated arguments. The arguments can be just about any text as long as it has balanced parentheses. The argument syntax is sufficiently general that the arguments can be made to appear as &lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;column definitions&lt;/a&gt; in a traditional &lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt; statement. SQLite passes the module arguments directly to the &lt;a href=&quot;vtab#xcreate&quot;&gt;xCreate&lt;/a&gt; and &lt;a href=&quot;vtab#xconnect&quot;&gt;xConnect&lt;/a&gt; methods of the module implementation without any interpretation. It is the responsibility of the module implementation to parse and interpret its own arguments.</source>
          <target state="translated">Имя модуля - это имя объекта, реализующего виртуальную таблицу. Имя модуля должно быть зарегистрировано в соединении с базой данных SQLite с помощью &lt;a href=&quot;c3ref/create_module&quot;&gt;sqlite3_create_module ()&lt;/a&gt; или &lt;a href=&quot;c3ref/create_module&quot;&gt;sqlite3_create_module_v2 ()&lt;/a&gt; до выполнения оператора CREATE VIRTUAL TABLE. Модуль принимает ноль или более аргументов, разделенных запятыми. Аргументами может быть любой текст, если в нем есть сбалансированные круглые скобки. Синтаксис аргументов достаточно общий, чтобы аргументы отображались как &lt;a href=&quot;lang_createtable#tablecoldef&quot;&gt;определения столбцов&lt;/a&gt; в традиционном операторе &lt;a href=&quot;lang_createtable&quot;&gt;CREATE TABLE&lt;/a&gt; . SQLite передает аргументы модуля напрямую в &lt;a href=&quot;vtab#xcreate&quot;&gt;xCreate&lt;/a&gt; и &lt;a href=&quot;vtab#xconnect&quot;&gt;xConnect&lt;/a&gt;методы реализации модуля без какой-либо интерпретации. Реализация модуля несет ответственность за анализ и интерпретацию собственных аргументов.</target>
        </trans-unit>
        <trans-unit id="44619ca32ea56419710789f2ec6fc9766c59ac70" translate="yes" xml:space="preserve">
          <source>The most common reason an attempt to obtain a</source>
          <target state="translated">Наиболее распространенная причина-попытка получить</target>
        </trans-unit>
        <trans-unit id="b4677e9c54155902987749f94de50b511a297fed" translate="yes" xml:space="preserve">
          <source>The most common way to force an SQLite database to exist purely in memory is to open the database using the special filename &quot;&lt;b&gt;:memory:&lt;/b&gt;&quot;. In other words, instead of passing the name of a real disk file into one of the &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt;, &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open16()&lt;/a&gt;, or &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; functions, pass in the string &quot;:memory:&quot;. For example:</source>
          <target state="translated">Самый распространенный способ заставить базу данных SQLite существовать исключительно в памяти - это открыть базу данных с использованием специального имени файла &quot; &lt;b&gt;: memory:&lt;/b&gt; &quot;. Другими словами, вместо того, чтобы передавать имя реального файла на диске в одну из функций &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open ()&lt;/a&gt; , &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open16 ()&lt;/a&gt; или &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2 ()&lt;/a&gt; , передайте строку &quot;: memory:&quot;. Например:</target>
        </trans-unit>
        <trans-unit id="03a7919d9a36d839fb3e6c8676819056867ece77" translate="yes" xml:space="preserve">
          <source>The most efficient way to apply changes to a B-Tree (the data structure that SQLite uses to store each table and index on disk) is to make the changes in key order. But if an SQL table has one or more indexes, the key order for each index may be different from the main table and the other auxiliary indexes. As a result, when executing a series of &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;, &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; and &lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt; statements it is not generally possible to order the operations so that all b-trees are updated in key order. The RBU update process works around this by applying all changes to the main table in one pass, then applying changes to each index in separate passes, ensuring each B-Tree is updated optimally. For a large database file (one that does not fit in the OS disk cache) this procedure can result in two orders of magnitude faster updates.</source>
          <target state="translated">Самый эффективный способ применить изменения к B-дереву (структуре данных, которую SQLite использует для хранения каждой таблицы и индекса на диске) - это внести изменения в ключевом порядке. Но если таблица SQL имеет один или несколько индексов, порядок ключей для каждого индекса может отличаться от основной таблицы и других вспомогательных индексов. В результате при выполнении серии &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; , &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; и &lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt;операторов, как правило, невозможно упорядочить операции так, чтобы все b-деревья обновлялись в ключевом порядке. Процесс обновления RBU помогает обойти это, применяя все изменения к основной таблице за один проход, а затем применяя изменения к каждому индексу на отдельных этапах, обеспечивая оптимальное обновление каждого B-дерева. Для большого файла базы данных (который не помещается в дисковом кэше ОС) эта процедура может привести к ускорению обновлений на два порядка.</target>
        </trans-unit>
        <trans-unit id="0aab584bc04ad9506143fb4e57b11f24aeb68952" translate="yes" xml:space="preserve">
          <source>The most useful</source>
          <target state="translated">Самые полезные</target>
        </trans-unit>
        <trans-unit id="672a287b758e4f6545eeda0d335349088507b997" translate="yes" xml:space="preserve">
          <source>The most useful thing about FTS tables is the queries that may be performed using the built-in full-text index. Full-text queries are performed by specifying a clause of the form &quot;&amp;lt;column&amp;gt; MATCH &amp;lt;full-text query expression&amp;gt;&quot; as part of the WHERE clause of a SELECT statement that reads data from an FTS table. &lt;a href=&quot;fts3#simple_fts_queries&quot;&gt;Simple FTS queries&lt;/a&gt; that return all documents that contain a given term are described above. In that discussion the right-hand operand of the MATCH operator was assumed to be a string consisting of a single term. This section describes the more complex query types supported by FTS tables, and how they may be utilized by specifying a more complex query expression as the right-hand operand of a MATCH operator.</source>
          <target state="translated">Самое полезное в таблицах FTS - это запросы, которые можно выполнять с использованием встроенного полнотекстового индекса. Полнотекстовые запросы выполняются путем указания предложения формы &amp;laquo;&amp;lt;столбец&amp;gt; MATCH &amp;lt;выражение полнотекстового запроса&amp;gt;&amp;raquo; как части предложения WHERE оператора SELECT, который считывает данные из таблицы FTS. Выше описаны &lt;a href=&quot;fts3#simple_fts_queries&quot;&gt;простые запросы FTS,&lt;/a&gt; которые возвращают все документы, содержащие данный термин. В этом обсуждении предполагалось, что правый операнд оператора MATCH представляет собой строку, состоящую из одного члена. В этом разделе описаны более сложные типы запросов, поддерживаемые таблицами FTS, и то, как их можно использовать, задав более сложное выражение запроса в качестве правого операнда оператора MATCH.</target>
        </trans-unit>
        <trans-unit id="b952b720a1c68c621b96fa1e29a1ec3a3e91db58" translate="yes" xml:space="preserve">
          <source>The multi-argument max() function returns the argument with the maximum value, or return NULL if any argument is NULL. The multi-argument max() function searches its arguments from left to right for an argument that defines a collating function and uses that collating function for all string comparisons. If none of the arguments to max() define a collating function, then the BINARY collating function is used. Note that &lt;b&gt;max()&lt;/b&gt; is a simple function when it has 2 or more arguments but operates as an &lt;a href=&quot;lang_aggfunc#maxggunc&quot;&gt;aggregate function&lt;/a&gt; if given only a single argument.</source>
          <target state="translated">Функция max () с несколькими аргументами возвращает аргумент с максимальным значением или возвращает NULL, если какой-либо аргумент равен NULL. Функция max () с несколькими аргументами ищет в своих аргументах слева направо аргумент, который определяет функцию сопоставления, и использует эту функцию сопоставления для всех сравнений строк. Если ни один из аргументов max () не определяет функцию сортировки, то используется ДВОИЧНАЯ функция сортировки. Обратите внимание, что &lt;b&gt;max ()&lt;/b&gt; - это простая функция, когда она имеет 2 или более аргумента, но работает как &lt;a href=&quot;lang_aggfunc#maxggunc&quot;&gt;агрегатная функция,&lt;/a&gt; если задан только один аргумент.</target>
        </trans-unit>
        <trans-unit id="4978bfa5c1668418de3cae9f58ae0236b3a923fa" translate="yes" xml:space="preserve">
          <source>The multi-argument min() function returns the argument with the minimum value. The multi-argument min() function searches its arguments from left to right for an argument that defines a collating function and uses that collating function for all string comparisons. If none of the arguments to min() define a collating function, then the BINARY collating function is used. Note that &lt;b&gt;min()&lt;/b&gt; is a simple function when it has 2 or more arguments but operates as an &lt;a href=&quot;lang_aggfunc#minggunc&quot;&gt;aggregate function&lt;/a&gt; if given only a single argument.</source>
          <target state="translated">Функция min () с несколькими аргументами возвращает аргумент с минимальным значением. Функция min () с несколькими аргументами ищет в своих аргументах слева направо аргумент, который определяет функцию сопоставления, и использует эту функцию сопоставления для всех сравнений строк. Если ни один из аргументов min () не определяет функцию сортировки, то используется ДВОИЧНАЯ функция сортировки. Обратите внимание, что &lt;b&gt;min ()&lt;/b&gt; - это простая функция, когда она имеет 2 или более аргумента, но работает как &lt;a href=&quot;lang_aggfunc#minggunc&quot;&gt;агрегатная функция,&lt;/a&gt; если ей задан только один аргумент.</target>
        </trans-unit>
        <trans-unit id="78c0cf060a6f9ee3d1106d60ebe5e6c21511776f" translate="yes" xml:space="preserve">
          <source>The multiply operator now correctly detects 64-bit integer overflow and promotes to floating point in all corner-cases. Fix for ticket &lt;a href=&quot;https://www.sqlite.org/src/info/1ec41379c9c1e400&quot;&gt;1ec41379c9c1e400&lt;/a&gt;.</source>
          <target state="translated">Оператор умножения теперь правильно обнаруживает переполнение 64-битных целых чисел и переводит их в числа с плавающей запятой во всех угловых случаях. Исправление для билета &lt;a href=&quot;https://www.sqlite.org/src/info/1ec41379c9c1e400&quot;&gt;1ec41379c9c1e400&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee9132cb0f48417f8650cad9e27fe43d03b0618b" translate="yes" xml:space="preserve">
          <source>The mutation-test.tcl script takes care of all of the details for running a mutation test:</source>
          <target state="translated">Скрипт mutation-test.tcl позаботится обо всех деталях запуска теста на мутацию:</target>
        </trans-unit>
        <trans-unit id="2945579c517aa1d3b8ba9d11b0bc3f91de1e9921" translate="yes" xml:space="preserve">
          <source>The mutex module within SQLite defines &lt;a href=&quot;#sqlite3_mutex&quot;&gt;sqlite3_mutex&lt;/a&gt; to be an abstract type for a mutex object. The SQLite core never looks at the internal representation of an &lt;a href=&quot;#sqlite3_mutex&quot;&gt;sqlite3_mutex&lt;/a&gt;. It only deals with pointers to the &lt;a href=&quot;#sqlite3_mutex&quot;&gt;sqlite3_mutex&lt;/a&gt; object.</source>
          <target state="translated">Модуль мьютекса в SQLite определяет &lt;a href=&quot;#sqlite3_mutex&quot;&gt;sqlite3_mutex&lt;/a&gt; как абстрактный тип для объекта мьютекса. Ядро SQLite никогда не смотрит на внутреннее представление &lt;a href=&quot;#sqlite3_mutex&quot;&gt;sqlite3_mutex&lt;/a&gt; . Он имеет дело только с указателями на объект &lt;a href=&quot;#sqlite3_mutex&quot;&gt;sqlite3_mutex&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0e09c593f6493d406d9e4e9dcac2eadda30e574" translate="yes" xml:space="preserve">
          <source>The mutex module within SQLite defines &lt;a href=&quot;mutex&quot;&gt;sqlite3_mutex&lt;/a&gt; to be an abstract type for a mutex object. The SQLite core never looks at the internal representation of an &lt;a href=&quot;mutex&quot;&gt;sqlite3_mutex&lt;/a&gt;. It only deals with pointers to the &lt;a href=&quot;mutex&quot;&gt;sqlite3_mutex&lt;/a&gt; object.</source>
          <target state="translated">Модуль мьютекса в SQLite определяет &lt;a href=&quot;mutex&quot;&gt;sqlite3_mutex&lt;/a&gt; как абстрактный тип для объекта мьютекса. Ядро SQLite никогда не смотрит на внутреннее представление &lt;a href=&quot;mutex&quot;&gt;sqlite3_mutex&lt;/a&gt; . Он имеет дело только с указателями на объект &lt;a href=&quot;mutex&quot;&gt;sqlite3_mutex&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2683feab4dd898006f40d9a775532ccca7b7b569" translate="yes" xml:space="preserve">
          <source>The mxFrame value is always greater than or equal to both &lt;a href=&quot;walformat#nbackfill&quot;&gt;nBackfill&lt;/a&gt; and nBackfillAttempted.</source>
          <target state="translated">Значение mxFrame всегда больше или равно как &lt;a href=&quot;walformat#nbackfill&quot;&gt;nBackfill, так&lt;/a&gt; и nBackfillAttempted.</target>
        </trans-unit>
        <trans-unit id="ab3c5c72a969cacdc78a3e4dd0229038bdf0e320" translate="yes" xml:space="preserve">
          <source>The mxPathname field is the maximum length of a file pathname that this VFS can use. SQLite sometimes has to preallocate buffers of this size, so it should be as small as reasonably possible. Some filesystems permit huge pathnames, but in practice pathnames rarely extend beyond 100 bytes or so. You do not have to put the longest pathname that the underlying filesystem can handle here. You only have to put the longest pathname that you want SQLite to be able to handle. A few hundred is a good value in most cases.</source>
          <target state="translated">Поле mxPathname-это максимальная длина патнама файла,которую может использовать эта VFS.SQLite иногда вынужден предварительно выделять буферы такого размера,поэтому он должен быть как можно меньше.Некоторые файловые системы допускают использование огромных патнанов,но на практике патнаны редко расширяются более чем на 100 байт или около того.Вам не нужно ставить здесь самый длинный путь,с которым может справиться базовая файловая система.Вы должны поставить только самый длинный путь,который SQLite сможет обработать.Несколько сотен-это хорошая величина в большинстве случаев.</target>
        </trans-unit>
        <trans-unit id="cb1334872e71aa02626433d46e5f9130af9a0bfd" translate="yes" xml:space="preserve">
          <source>The nArg parameter specifies the number of arguments to the function. A value of 0 indicates that any number of arguments is allowed. The eTextRep parameter specifies what representation text values are expected to be in for arguments to this function. The value of this parameter should be one of the parameters defined above. SQLite version 3 allows multiple implementations of the same function using different text representations. The database engine chooses the function that minimization the number of text conversions required.</source>
          <target state="translated">Параметр nArg задает количество аргументов функции.Значение 0 указывает,что допустимо любое количество аргументов.Параметр eTextRep указывает,какие значения текста представления ожидаются для аргументов этой функции.Значение этого параметра должно быть одним из параметров,определенных выше.SQLite версии 3 позволяет несколько реализаций одной и той же функции с использованием разных текстовых представлений.Движок базы данных выбирает функцию,которая минимизирует количество необходимых преобразований текста.</target>
        </trans-unit>
        <trans-unit id="15067be8341cb3e5ea308646b0092b9f585804c8" translate="yes" xml:space="preserve">
          <source>The nBackfill can only be increased while holding the WAL_CKPT_LOCK. However, nBackfill is changed to zero during a &lt;a href=&quot;fileformat2#walreset&quot;&gt;WAL reset&lt;/a&gt;, and this happens while holding the WAL_WRITE_LOCK.</source>
          <target state="translated">NBackfill можно увеличить, только удерживая WAL_CKPT_LOCK. Однако nBackfill изменяется на ноль во время &lt;a href=&quot;fileformat2#walreset&quot;&gt;сброса WAL&lt;/a&gt; , и это происходит при удерживании WAL_WRITE_LOCK.</target>
        </trans-unit>
        <trans-unit id="99673f4f335d79523c7b7494142bf07ba1cd84e2" translate="yes" xml:space="preserve">
          <source>The nBackfill number is never greater than &lt;a href=&quot;walformat#mxframe&quot;&gt;mxFrame&lt;/a&gt;. When nBackfill equals &lt;a href=&quot;walformat#mxframe&quot;&gt;mxFrame&lt;/a&gt;, that means that the WAL content has been completely written back into the database and it is ok to &lt;a href=&quot;fileformat2#walreset&quot;&gt;reset the WAL&lt;/a&gt; if there are no locks held on any of WAL_READ_LOCK(N) for N&amp;gt;0.</source>
          <target state="translated">Число nBackfill никогда не превышает &lt;a href=&quot;walformat#mxframe&quot;&gt;mxFrame&lt;/a&gt; . Когда nBackfill равно &lt;a href=&quot;walformat#mxframe&quot;&gt;mxFrame&lt;/a&gt; , это означает, что содержимое WAL было полностью записано обратно в базу данных, и можно &lt;a href=&quot;fileformat2#walreset&quot;&gt;сбросить WAL,&lt;/a&gt; если нет блокировок, удерживаемых ни на одном из WAL_READ_LOCK (N) для N&amp;gt; 0.</target>
        </trans-unit>
        <trans-unit id="58aea584e25c7551e85c617c6b8537adc3f19238" translate="yes" xml:space="preserve">
          <source>The name &quot;memsys5&quot; used for the zero-malloc memory allocator implies that there are several additional memory allocators available, and indeed there are. The default memory allocator is &quot;memsys1&quot;. The debugging memory allocator is &quot;memsys2&quot;. Those have already been covered.</source>
          <target state="translated">Название &quot;memsys5&quot;,используемое для аллокатора нулевого аллокатора памяти,подразумевает наличие нескольких дополнительных аллокаторов памяти.По умолчанию используется аллокатор памяти &quot;memsys1&quot;.Отладочный аллокатор памяти-&quot;memsys2&quot;.Это уже было рассмотрено.</target>
        </trans-unit>
        <trans-unit id="e00b973d0e23f6d37321209e23fc2917cf32700a" translate="yes" xml:space="preserve">
          <source>The name &quot;sqlite_schema&quot; does not appear anywhere in the file format. That name is just a convention used by the database implementation. Due to historical and operational considerations, the &quot;sqlite_schema&quot; table can also sometimes be called by one of the following aliases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db0afbba9901c1e9e8534384d38571355c85857" translate="yes" xml:space="preserve">
          <source>The name for the &lt;a href=&quot;datatype3#collation&quot;&gt;collating sequence&lt;/a&gt; used to compare values in the index-column.</source>
          <target state="translated">Имя &lt;a href=&quot;datatype3#collation&quot;&gt;последовательности сортировки,&lt;/a&gt; используемой для сравнения значений в столбце индекса.</target>
        </trans-unit>
        <trans-unit id="d0a42cf139ce30315511c41a36a93d913d4ae81d" translate="yes" xml:space="preserve">
          <source>The name of a result column is the value of the &quot;AS&quot; clause for that column, if there is an AS clause. If there is no AS clause then the name of the column is unspecified and may change from one release of SQLite to the next.</source>
          <target state="translated">Название столбца результата является значением пункта &quot;AS&quot; для этого столбца,если существует пункт &quot;AS&quot;.При отсутствии AS-пункта название столбца не указывается и может изменяться от одного выпуска SQLite к другому.</target>
        </trans-unit>
        <trans-unit id="a57f858acf3d2e5077979e3afa2c8309985a2b90" translate="yes" xml:space="preserve">
          <source>The name of an SQLite database is the name of a file that will contain the database. If the file does not exist, SQLite attempts to create and initialize it. If the file is read-only (due to permission bits or because it is located on read-only media like a CD-ROM) then SQLite opens the database for reading only. The entire SQL database is stored in a single file on the disk. But additional temporary files may be created during the execution of an SQL command in order to store the database rollback journal or temporary and intermediate results of a query.</source>
          <target state="translated">Имя базы данных SQLite-это имя файла,который будет содержать базу данных.Если файл не существует,SQLite пытается его создать и инициализировать.Если файл доступен только для чтения (из-за битов разрешения или потому,что он расположен на носителе только для чтения,например,на компакт-диске),то SQLite открывает базу данных только для чтения.Вся база данных SQL хранится в одном файле на диске.Однако во время выполнения команды SQL могут быть созданы дополнительные временные файлы для хранения журнала отката БД или временных и промежуточных результатов запроса.</target>
        </trans-unit>
        <trans-unit id="2e5f7637f527bcb85ea83184153ee4c57e5bbfca" translate="yes" xml:space="preserve">
          <source>The name of each column in the table.</source>
          <target state="translated">Название каждого столбца в таблице.</target>
        </trans-unit>
        <trans-unit id="e1e64668404efe0d041f261ba3d958b47753bba4" translate="yes" xml:space="preserve">
          <source>The name of the FTS5 table column that contains the term.</source>
          <target state="translated">Название столбца таблицы FTS5,содержащего этот термин.</target>
        </trans-unit>
        <trans-unit id="fb2519166ef6466d94c575e04a046d25ae02cbef" translate="yes" xml:space="preserve">
          <source>The name of the collation is a UTF-8 string for sqlite3_create_collation() and sqlite3_create_collation_v2() and a UTF-16 string in native byte order for sqlite3_create_collation16(). Collation names that compare equal according to &lt;a href=&quot;#sqlite3_stricmp&quot;&gt;sqlite3_strnicmp()&lt;/a&gt; are considered to be the same name.</source>
          <target state="translated">Имя сопоставления - это строка UTF-8 для sqlite3_create_collation () и sqlite3_create_collation_v2 () и строка UTF-16 в собственном порядке байтов для sqlite3_create_collation16 (). Имена параметров сортировки, которые сравниваются равными согласно &lt;a href=&quot;#sqlite3_stricmp&quot;&gt;sqlite3_strnicmp ()&lt;/a&gt; , считаются одинаковыми.</target>
        </trans-unit>
        <trans-unit id="7df8bfa2bb01af5c880a238a6167d3b3a1623f37" translate="yes" xml:space="preserve">
          <source>The name of the collation is a UTF-8 string for sqlite3_create_collation() and sqlite3_create_collation_v2() and a UTF-16 string in native byte order for sqlite3_create_collation16(). Collation names that compare equal according to &lt;a href=&quot;stricmp&quot;&gt;sqlite3_strnicmp()&lt;/a&gt; are considered to be the same name.</source>
          <target state="translated">Имя сопоставления - это строка UTF-8 для sqlite3_create_collation () и sqlite3_create_collation_v2 () и строка UTF-16 в собственном порядке байтов для sqlite3_create_collation16 (). Имена параметров сортировки, которые сравниваются равными согласно &lt;a href=&quot;stricmp&quot;&gt;sqlite3_strnicmp ()&lt;/a&gt; , считаются одинаковыми.</target>
        </trans-unit>
        <trans-unit id="60f9c38a5b1707739850b72dfb67adc25dbc2069" translate="yes" xml:space="preserve">
          <source>The name of the column being indexed, or NULL if the index-column is the &lt;a href=&quot;lang_createtable#rowid&quot;&gt;rowid&lt;/a&gt; of the table being indexed or an &lt;a href=&quot;expridx&quot;&gt;expression&lt;/a&gt;.</source>
          <target state="translated">Имя индексируемого столбца или NULL, если индекс-столбец является &lt;a href=&quot;lang_createtable#rowid&quot;&gt;идентификатором строки&lt;/a&gt; индексируемой таблицы или &lt;a href=&quot;expridx&quot;&gt;выражением&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a2c4a68aabf0cd9d6847a72cb797a421605fdb66" translate="yes" xml:space="preserve">
          <source>The name of the column being indexed. This columns is NULL if the column is the &lt;a href=&quot;lang_createtable#rowid&quot;&gt;rowid&lt;/a&gt; or an &lt;a href=&quot;expridx&quot;&gt;expression&lt;/a&gt;.</source>
          <target state="translated">Имя индексируемого столбца. Этот столбец имеет значение NULL, если столбец является &lt;a href=&quot;lang_createtable#rowid&quot;&gt;идентификатором строки&lt;/a&gt; или &lt;a href=&quot;expridx&quot;&gt;выражением&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2755fad1da17fab976d4effee601e3a0ced598c2" translate="yes" xml:space="preserve">
          <source>The name of the column that contains the term instance.</source>
          <target state="translated">Название колонки,содержащей экземпляр термина.</target>
        </trans-unit>
        <trans-unit id="d4c672f643ac02f7fa3683763e45ddf698d1be4b" translate="yes" xml:space="preserve">
          <source>The name of the database is usually just the name of a disk file in which the database is stored. If the name of the database is the special name &quot;&lt;a href=&quot;inmemorydb&quot;&gt;:memory:&lt;/a&gt;&quot; then a new database is created in memory. If the name of the database is an empty string, then the database is created in an empty file that is automatically deleted when the database connection closes. &lt;a href=&quot;uri&quot;&gt;URI filenames&lt;/a&gt; can be used if the &quot;&lt;b&gt;-uri yes&lt;/b&gt;&quot; option is supplied on the &lt;b&gt;sqlite3&lt;/b&gt; command.</source>
          <target state="translated">Имя базы данных - это обычно просто имя файла на диске, в котором хранится база данных. Если имя базы данных - это специальное имя &amp;laquo; &lt;a href=&quot;inmemorydb&quot;&gt;: memory:&lt;/a&gt; &amp;raquo;, то в памяти создается новая база данных. Если имя базы данных представляет собой пустую строку, то база данных создается в пустом файле, который автоматически удаляется при закрытии соединения с базой данных. &lt;a href=&quot;uri&quot;&gt;URI имена файлов&lt;/a&gt; могут быть использованы , если &amp;laquo; &lt;b&gt;-uri да&lt;/b&gt; опция&amp;raquo; поставляется на &lt;b&gt;sqlite3&lt;/b&gt; команды.</target>
        </trans-unit>
        <trans-unit id="638ad72e8f8e6b978d1b5c7a5434bac446aa668c" translate="yes" xml:space="preserve">
          <source>The name of the database on which the transaction was committed</source>
          <target state="translated">Название базы данных,по которой была совершена транзакция.</target>
        </trans-unit>
        <trans-unit id="b53c39aeaa16a31f4a835cb5ee0c4ef2cb1c4ca7" translate="yes" xml:space="preserve">
          <source>The name of the database table,</source>
          <target state="translated">Имя таблицы базы данных,</target>
        </trans-unit>
        <trans-unit id="1389d8d4ecdcdbedac7a4549e6a07ae7ad0ad26c" translate="yes" xml:space="preserve">
          <source>The name of the database which is being changed</source>
          <target state="translated">Имя изменяемой базы данных</target>
        </trans-unit>
        <trans-unit id="fc047e5a2c9d6a845176aac031ed03d6a1b50ee2" translate="yes" xml:space="preserve">
          <source>The name of the desired tokenizer should be substituted in place of 'porter' in the example, of course. If the tokenizer requires one or more arguments, they should be separated by commas in the fts3tokenize declaration (even though they are separated by spaces in declarations of regular fts4 tables). The following creates fts4 and fts3tokenize tables that use the same tokenizer:</source>
          <target state="translated">Разумеется,вместо 'porter' в примере должно быть подставлено имя желаемого токенайзера.Если токенайзер требует одного или нескольких аргументов,то они должны быть разделены запятыми в декларации fts3tokenize (даже если они разделены пробелами в декларациях обычных таблиц fts4).Далее создаются fts4 и fts3токенизирующие таблицы,использующие один и тот же токенайзер:</target>
        </trans-unit>
        <trans-unit id="9a63a9136665984fc122cf635a36ad0166ead67d" translate="yes" xml:space="preserve">
          <source>The name of the index.</source>
          <target state="translated">Название индекса.</target>
        </trans-unit>
        <trans-unit id="c2412b63f15e8dfde7222fa76ad9e5504c06aea1" translate="yes" xml:space="preserve">
          <source>The name of the new table.</source>
          <target state="translated">Название нового стола.</target>
        </trans-unit>
        <trans-unit id="a12d264e140fa64a7adf3172f5ec27d60bbcedb0" translate="yes" xml:space="preserve">
          <source>The name of the result column is a combination of the source table and source column name: TABLE.COLUMN</source>
          <target state="translated">Имя столбца результата-это комбинация из исходной таблицы и имени столбца источника:TABLE.COLUMN</target>
        </trans-unit>
        <trans-unit id="85777de7d38bf8fc5dfa8258c31af44f8a1c7698" translate="yes" xml:space="preserve">
          <source>The name of the table contains one or more &quot;_&quot; characters.</source>
          <target state="translated">Имя таблицы содержит один или несколько символов &quot;_&quot;.</target>
        </trans-unit>
        <trans-unit id="d14fb34ff4c810e0436eba6520cbeda0158f9e95" translate="yes" xml:space="preserve">
          <source>The name of the table data is read from.</source>
          <target state="translated">Имя данных таблицы считывается из.</target>
        </trans-unit>
        <trans-unit id="a43b536a14c1d7b3d8b50ac0e9b44a83e9c467f9" translate="yes" xml:space="preserve">
          <source>The name of the table in which the xColumnSize values are stored (unless columnsize=0 is specified) is &quot;&amp;lt;name&amp;gt;_docsize&quot;, where &amp;lt;name&amp;gt; is the name of the FTS5 table itself. The &lt;a href=&quot;https://www.sqlite.org/download.html&quot;&gt;sqlite3_analyzer&lt;/a&gt; tool may be used on an existing database in order to determine how much space might be saved by recreating an FTS5 table using columnsize=0.</source>
          <target state="translated">Имя таблицы, в которой хранятся значения xColumnSize (если не указано columnsize = 0), - &amp;laquo;&amp;lt;name&amp;gt; _docsize&amp;raquo;, где &amp;lt;name&amp;gt; - это имя самой таблицы FTS5. Инструмент &lt;a href=&quot;https://www.sqlite.org/download.html&quot;&gt;sqlite3_analyzer&lt;/a&gt; можно использовать в существующей базе данных, чтобы определить, сколько места можно сэкономить, воссоздав таблицу FTS5 с помощью columnsize = 0.</target>
        </trans-unit>
        <trans-unit id="ba455f33d978f1db1e5e1561024b5ab7e0845678" translate="yes" xml:space="preserve">
          <source>The name of the table or index that is implemented by the btree of the current row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9dba3fb9b44494b1bade858ebafe1459aa85475" translate="yes" xml:space="preserve">
          <source>The name of the table to be modified in an &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;, &lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt;, or &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; statement must be an unqualified table name. In other words, one must use just &quot;</source>
          <target state="translated">Имя таблицы, которая должна быть изменена в операторе &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; , &lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt; или &lt;a href=&quot;lang_insert&quot;&gt;INSERT,&lt;/a&gt; должно быть неполным именем таблицы. Другими словами, нужно использовать только &quot;</target>
        </trans-unit>
        <trans-unit id="6e32ef9d959d1305ba25656ee3bbcec3b526eef2" translate="yes" xml:space="preserve">
          <source>The name that occurs after the AS keyword is the name of the database used internally by SQLite. The schema-names 'main' and 'temp' refer to the main database and the database used for temporary tables. The main and temp databases cannot be attached or detached.</source>
          <target state="translated">Имя,которое возникает после ключевого слова AS,является именем базы данных,используемой внутри SQLite.Схематические имена 'main' и 'temp' относятся к основной БД и БД,используемой для временных таблиц.Главная и временная БД не могут быть подключены или отключены.</target>
        </trans-unit>
        <trans-unit id="c7f1793be68e4540903171531d569a4a7be0fbfa" translate="yes" xml:space="preserve">
          <source>The names and numeric values for existing result codes are fixed and unchanging. However, new result codes, and especially new extended result codes, might appear in future releases of SQLite.</source>
          <target state="translated">Названия и числовые значения для существующих кодов результатов являются фиксированными и неизменными.Однако в будущих релизах SQLite могут появиться новые коды результатов,и особенно новые расширенные коды результатов.</target>
        </trans-unit>
        <trans-unit id="6c186656572f2bf1670bbd5a3b99aeadd51bedda" translate="yes" xml:space="preserve">
          <source>The names of the columns are contained in first</source>
          <target state="translated">Названия столбцов содержатся в первом</target>
        </trans-unit>
        <trans-unit id="6e42a281800acf1a1a711bf3baf9388c4ecfa00b" translate="yes" xml:space="preserve">
          <source>The names returned are the original un-aliased names of the database, table, and column.</source>
          <target state="translated">Возвращаемые имена-это оригинальные несмещенные имена базы данных,таблицы и столбца.</target>
        </trans-unit>
        <trans-unit id="9d972c129d1db380a40044755e84ee7d9ba4bda3" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; interface allows an application to customize the behavior of SQLite at run-time. Customizations possible using &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; include the following:</source>
          <target state="translated">Новый интерфейс &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config ()&lt;/a&gt; позволяет приложению настраивать поведение SQLite во время выполнения. Возможные настройки с помощью &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config ()&lt;/a&gt; включают следующее:</target>
        </trans-unit>
        <trans-unit id="3df658c177f1eac56b80fa5f85864ebd817426dc" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status()&lt;/a&gt; interface allows an application to query the performance status of SQLite at runtime.</source>
          <target state="translated">Новый интерфейс &lt;a href=&quot;c3ref/status&quot;&gt;sqlite3_status ()&lt;/a&gt; позволяет приложению запрашивать статус производительности SQLite во время выполнения.</target>
        </trans-unit>
        <trans-unit id="a8d3b04d8482aa6bd5d923ab36f6fdfe7a6ac1b9" translate="yes" xml:space="preserve">
          <source>The new API for SQLite 3.0 contains routines that accept text as both UTF-8 and UTF-16 in the native byte order of the host machine. Each database file manages text as either UTF-8, UTF-16BE (big-endian), or UTF-16LE (little-endian). Internally and in the disk file, the same text representation is used everywhere. If the text representation specified by the database file (in the file header) does not match the text representation required by the interface routines, then text is converted on-the-fly. Constantly converting text from one representation to another can be computationally expensive, so it is suggested that programmers choose a single representation and stick with it throughout their application.</source>
          <target state="translated">Новый API для SQLite 3.0 содержит подпрограммы,которые принимают текст как UTF-8,так и UTF-16 в родном порядке байт хост-машины.Каждый файл базы данных управляет текстом в формате UTF-8,UTF-16BE (big-endian)или UTF-16LE (little-endian).Внутри и в дисковом файле везде используется одно и то же текстовое представление.Если текстовое представление,заданное файлом БД (в заголовке файла),не совпадает с текстовым представлением,требуемым подпрограммами интерфейса,то текст преобразуется &quot;на лету&quot;.Постоянное преобразование текста из одного представления в другое может быть связано с большими вычислительными затратами,поэтому программистам предлагается выбрать одно представление и придерживаться его во всем своем приложении.</target>
        </trans-unit>
        <trans-unit id="30af4368149bbc60ce20946b58b7cfd9adb8ff97" translate="yes" xml:space="preserve">
          <source>The new OS interface for SQLite is built around an object named &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt;. The &quot;vfs&quot; stands for &quot;Virtual File System&quot;. The sqlite3_vfs object is basically a structure containing pointers to functions that implement the primitive disk I/O operations that SQLite needs to perform in order to read and write databases. In this article, we will often refer to an sqlite3_vfs objects as a &quot;VFS&quot;.</source>
          <target state="translated">Новый интерфейс ОС для SQLite построен вокруг объекта с именем &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; . &amp;laquo;Vfs&amp;raquo; означает &amp;laquo;виртуальная файловая система&amp;raquo;. Объект sqlite3_vfs - это в основном структура, содержащая указатели на функции, реализующие примитивные операции дискового ввода-вывода, которые SQLite должен выполнять для чтения и записи баз данных. В этой статье мы часто будем называть объекты sqlite3_vfs &amp;laquo;VFS&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="6c9ac7112282c02c3ac370e4792bfc347f1711f1" translate="yes" xml:space="preserve">
          <source>The new change is ignored. This case does not occur if the new changeset was recorded immediately after the changesets already added to the changegroup.</source>
          <target state="translated">Новое изменение игнорируется.Этот случай не происходит,если новый changeset был записан сразу после того,как changeset уже был добавлен в группу изменений.</target>
        </trans-unit>
        <trans-unit id="7b39e9d3e42d3852cda66bb7e7297a2f31d0e706" translate="yes" xml:space="preserve">
          <source>The new database connection will use the &quot;multi-thread&quot; &lt;a href=&quot;../threadsafe&quot;&gt;threading mode&lt;/a&gt;. This means that separate threads are allowed to use SQLite at the same time, as long as each thread is using a different &lt;a href=&quot;sqlite3&quot;&gt;database connection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ff5fb06e02cb095d4456f9e428328e41689b42" translate="yes" xml:space="preserve">
          <source>The new database connection will use the &quot;multi-thread&quot; &lt;a href=&quot;threadsafe&quot;&gt;threading mode&lt;/a&gt;. This means that separate threads are allowed to use SQLite at the same time, as long as each thread is using a different &lt;a href=&quot;#sqlite3&quot;&gt;database connection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed188f9846a7395326bff47f2223ddc25ac3eab" translate="yes" xml:space="preserve">
          <source>The new database connection will use the &quot;serialized&quot; &lt;a href=&quot;../threadsafe&quot;&gt;threading mode&lt;/a&gt;. This means the multiple threads can safely attempt to use the same database connection at the same time. (Mutexes will block any actual concurrency, but in this mode there is no harm in trying.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2075b8f3b4c50de265f00054b0d87b23e094598" translate="yes" xml:space="preserve">
          <source>The new database connection will use the &quot;serialized&quot; &lt;a href=&quot;threadsafe&quot;&gt;threading mode&lt;/a&gt;. This means the multiple threads can safely attempt to use the same database connection at the same time. (Mutexes will block any actual concurrency, but in this mode there is no harm in trying.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ae31ac06c9efe8e8edfec9e13527250faad45f" translate="yes" xml:space="preserve">
          <source>The new database file format uses B+trees for tables. In a B+tree, all data is stored in the leaves of the tree instead of in both the leaves and the intermediate branch nodes. The use of B+trees for tables allows for better scalability and the storage of larger data fields without the use of overflow pages. Traditional B-trees are still used for indices.</source>
          <target state="translated">Новый формат файла базы данных использует B+деревья для таблиц.В B+tree все данные хранятся в листьях дерева,а не в листьях и промежуточных узлах ветвей.Использование B+tree для таблиц позволяет улучшить масштабируемость и хранение больших полей данных без использования страниц переполнения.Традиционные B-деревья по-прежнему используются для индексов.</target>
        </trans-unit>
        <trans-unit id="31e91eb6ebd1ae009dff2061b0ed5da69f5f04a8" translate="yes" xml:space="preserve">
          <source>The new file format also supports variable pages sizes between 512 and 65536 bytes. The size of a page is stored in the file header so the same library can read databases with different pages sizes, in theory, though this feature has not yet been implemented in practice.</source>
          <target state="translated">Новый формат файлов также поддерживает переменный размер страниц от 512 до 65536 байт.Размер страницы хранится в заголовке файла,так что одна и та же библиотека может читать базы данных с разными размерами страниц,теоретически,хотя эта возможность еще не реализована на практике.</target>
        </trans-unit>
        <trans-unit id="b7b98e36d84deeda55906998dc0425a8e896c821" translate="yes" xml:space="preserve">
          <source>The new file format omits unused fields from its disk images. For example, indices use only the key part of a B-tree record and not the data. So for indices, the field that records the length of the data is omitted. Integer values such as the length of key and data are stored using a variable-length encoding so that only one or two bytes are required to store the most common cases but up to 64-bits of information can be encoded if needed. Integer and floating point data is stored on the disk in binary rather than being converted into ASCII as in SQLite version 2.8. These changes taken together result in database files that are typically 25% to 35% smaller than the equivalent files in SQLite version 2.8.</source>
          <target state="translated">Новый формат файла исключает неиспользуемые поля из образов диска.Например,индексы используют только ключевую часть записи B-дерева,а не данные.Таким образом,для индексов опускается поле,записывающее длину данных.Целые значения,такие как длина ключа и данных,хранятся в кодировке переменной длины,так что для хранения наиболее распространенных случаев требуется только один или два байта,но при необходимости можно закодировать до 64 бит информации.Целые данные и данные с плавающей запятой хранятся на диске в двоичном виде,а не преобразуются в ASCII,как в SQLite версии 2.8.Эти изменения,взятые вместе,приводят к тому,что файлы базы данных,как правило,на 25-35% меньше,чем эквивалентные файлы в SQLite версии 2.8.</target>
        </trans-unit>
        <trans-unit id="5a8ddfc73fc040315222214bdfe8a3558fe0da52" translate="yes" xml:space="preserve">
          <source>The new interface uses three separate functions to replace the single &lt;b&gt;sqlite_exec&lt;/b&gt; function.</source>
          <target state="translated">В новом интерфейсе используются три отдельные функции, заменяющие одну функцию &lt;b&gt;sqlite_exec&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="601cb56433c850ed70120e223ec644602fc957a5" translate="yes" xml:space="preserve">
          <source>The new object is configured with the rebase buffer obtained from sqlite3changeset_apply_v2() by calling sqlite3rebaser_configure(). If the local changeset is to be rebased against multiple remote changesets, then sqlite3rebaser_configure() should be called multiple times, in the same order that the multiple sqlite3changeset_apply_v2() calls were made.</source>
          <target state="translated">Новый объект конфигурируется буфером rebase,полученным из sqlite3changeset_apply_v2()с помощью вызова sqlite3rebaser_configure().Если локальный changeset должен быть rebase против нескольких удалённых changesetов,то sqlite3rebaser_configure()должна быть вызвана несколько раз в том же порядке,в котором было сделано несколько вызовов sqlite3changeset_apply_v2().</target>
        </trans-unit>
        <trans-unit id="a80319826820a0baa113ed82a7da25195888339a" translate="yes" xml:space="preserve">
          <source>The new row must meet the same criteria as for &lt;a href=&quot;#sqlite3_blob_open&quot;&gt;sqlite3_blob_open()&lt;/a&gt; - it must exist and there must be either a blob or text value stored in the nominated column. If the new row is not present in the table, or if it does not contain a blob or text value, or if another error occurs, an SQLite error code is returned and the blob handle is considered aborted. All subsequent calls to &lt;a href=&quot;#sqlite3_blob_read&quot;&gt;sqlite3_blob_read()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_blob_write&quot;&gt;sqlite3_blob_write()&lt;/a&gt; or &lt;a href=&quot;#sqlite3_blob_reopen&quot;&gt;sqlite3_blob_reopen()&lt;/a&gt; on an aborted blob handle immediately return SQLITE_ABORT. Calling &lt;a href=&quot;#sqlite3_blob_bytes&quot;&gt;sqlite3_blob_bytes()&lt;/a&gt; on an aborted blob handle always returns zero.</source>
          <target state="translated">Новая строка должна соответствовать тем же критериям, что и &lt;a href=&quot;#sqlite3_blob_open&quot;&gt;sqlite3_blob_open ()&lt;/a&gt; - она ​​должна существовать, и в указанном столбце должно быть либо blob, либо текстовое значение. Если новая строка отсутствует в таблице, или если она не содержит большого двоичного объекта или текстового значения, или если возникает другая ошибка, возвращается код ошибки SQLite, и дескриптор большого двоичного объекта считается прерванным. Все последующие вызовы &lt;a href=&quot;#sqlite3_blob_read&quot;&gt;sqlite3_blob_read ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_blob_write&quot;&gt;sqlite3_blob_write ()&lt;/a&gt; или &lt;a href=&quot;#sqlite3_blob_reopen&quot;&gt;sqlite3_blob_reopen ()&lt;/a&gt; для прерванного дескриптора большого двоичного объекта немедленно возвращают SQLITE_ABORT. Вызов &lt;a href=&quot;#sqlite3_blob_bytes&quot;&gt;sqlite3_blob_bytes ()&lt;/a&gt; для дескриптора прерванного большого двоичного объекта всегда возвращает ноль.</target>
        </trans-unit>
        <trans-unit id="1fc9db87ef5146974ffc63aaf19ef4d76ed16ccc" translate="yes" xml:space="preserve">
          <source>The new row must meet the same criteria as for &lt;a href=&quot;blob_open&quot;&gt;sqlite3_blob_open()&lt;/a&gt; - it must exist and there must be either a blob or text value stored in the nominated column. If the new row is not present in the table, or if it does not contain a blob or text value, or if another error occurs, an SQLite error code is returned and the blob handle is considered aborted. All subsequent calls to &lt;a href=&quot;blob_read&quot;&gt;sqlite3_blob_read()&lt;/a&gt;, &lt;a href=&quot;blob_write&quot;&gt;sqlite3_blob_write()&lt;/a&gt; or &lt;a href=&quot;blob_reopen&quot;&gt;sqlite3_blob_reopen()&lt;/a&gt; on an aborted blob handle immediately return SQLITE_ABORT. Calling &lt;a href=&quot;blob_bytes&quot;&gt;sqlite3_blob_bytes()&lt;/a&gt; on an aborted blob handle always returns zero.</source>
          <target state="translated">Новая строка должна соответствовать тем же критериям, что и &lt;a href=&quot;blob_open&quot;&gt;sqlite3_blob_open ()&lt;/a&gt; - она ​​должна существовать, и в указанном столбце должно быть либо blob, либо текстовое значение. Если новая строка отсутствует в таблице, или если она не содержит большого двоичного объекта или текстового значения, или если возникает другая ошибка, возвращается код ошибки SQLite, и дескриптор большого двоичного объекта считается прерванным. Все последующие вызовы &lt;a href=&quot;blob_read&quot;&gt;sqlite3_blob_read ()&lt;/a&gt; , &lt;a href=&quot;blob_write&quot;&gt;sqlite3_blob_write ()&lt;/a&gt; или &lt;a href=&quot;blob_reopen&quot;&gt;sqlite3_blob_reopen ()&lt;/a&gt; для прерванного дескриптора большого двоичного объекта немедленно возвращают SQLITE_ABORT. Вызов &lt;a href=&quot;blob_bytes&quot;&gt;sqlite3_blob_bytes ()&lt;/a&gt; для дескриптора прерванного большого двоичного объекта всегда возвращает ноль.</target>
        </trans-unit>
        <trans-unit id="477dc8c1b42a8f1f1f9e215976276669879cbe40" translate="yes" xml:space="preserve">
          <source>The new values for each modified field of the row, and</source>
          <target state="translated">Новые значения для каждого измененного поля строки,и</target>
        </trans-unit>
        <trans-unit id="9ca11824ed5a21754d9f34df6fca6bca218bd35f" translate="yes" xml:space="preserve">
          <source>The new window definition must not include a PARTITION BY clause. The PARTITION BY clause, if there is one, must be supplied by the base window specification.</source>
          <target state="translated">Новое определение окна не должно включать пункт PARTITION BY.Оговорка PARTITION BY,если она существует,должна быть предоставлена спецификацией базового окна.</target>
        </trans-unit>
        <trans-unit id="f3a9a1d6f9268d0f1362c9fb457875a7fb250370" translate="yes" xml:space="preserve">
          <source>The newer &quot;.eqp trace&quot; command does everything that &quot;.eqp full&quot; does and also turns on &lt;a href=&quot;pragma#pragma_vdbe_trace&quot;&gt;VDBE tracing&lt;/a&gt;.</source>
          <target state="translated">Новая команда &amp;laquo;.eqp trace&amp;raquo; делает все, что делает &amp;laquo;.eqp full&amp;raquo;, а также включает &lt;a href=&quot;pragma#pragma_vdbe_trace&quot;&gt;трассировку VDBE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd8ed5a57b50230eec8d4ec2e3e5c1e149c55cc8" translate="yes" xml:space="preserve">
          <source>The newer xQueryFunc callback receives more information from the r-tree query engine on each call, and it sends more information back to the query engine before it returns. To help keep the interface manageable, the xQueryFunc callback sends and receives information from the query engine as fields in the sqlite3_rtree_query_info structure:</source>
          <target state="translated">Более новый обратный вызов xQueryFunc получает больше информации от механизма запросов r-дерева при каждом вызове,и он посылает больше информации обратно в механизм запросов до того,как он вернется.Чтобы сделать интерфейс управляемым,xQueryFunc отправляет и получает информацию от движка запросов в виде полей в структуре sqlite3_rtree_query_info:</target>
        </trans-unit>
        <trans-unit id="03223a32a94905afaa2e599c575bdc7c618a776e" translate="yes" xml:space="preserve">
          <source>The next &quot;.mode&quot; command will reset the &quot;.separator&quot; back to its default. So you will need repeat the &quot;.separator&quot; command whenever you change modes if you want to continue using a non-standard separator.</source>
          <target state="translated">Следующая команда &quot;.режим&quot; вернет &quot;.сепаратор&quot; в состояние по умолчанию.Таким образом,если вы хотите продолжать использовать нестандартный разделитель,вам нужно будет повторять команду &quot;.разделитель&quot; каждый раз,когда вы меняете режимы.</target>
        </trans-unit>
        <trans-unit id="9bff369a4e5022b3604d755cd856a8cb8591c715" translate="yes" xml:space="preserve">
          <source>The next block contains an example rank function that uses matchinfo data implemented in C. Instead of a single weight, it allows a weight to be externally assigned to each column of each document. It may be registered with SQLite like any other user function using &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function&lt;/a&gt;.</source>
          <target state="translated">Следующий блок содержит пример функции ранжирования, которая использует данные matchinfo, реализованные на C. Вместо единственного веса он позволяет внешне присваивать вес каждому столбцу каждого документа. Его можно зарегистрировать в SQLite, как и любую другую пользовательскую функцию, с помощью &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_function&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5e308fd7498285ea1f61e243e9d3f001701f643f" translate="yes" xml:space="preserve">
          <source>The next block of SQL enhances the query with solutions to two other problems that may arise in developing search applications using FTS:</source>
          <target state="translated">Следующий блок SQL дополняет запрос решением двух других проблем,которые могут возникнуть при разработке поисковых приложений с использованием FTS:</target>
        </trans-unit>
        <trans-unit id="acd253e5152192f86ab636fd16bb5196034aa10b" translate="yes" xml:space="preserve">
          <source>The next chart compares SQLite database updates in &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt; against raw direct-to-disk overwrites of separate files on disk. The &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous&lt;/a&gt; setting is NORMAL. All database writes are in a single transaction. The timer for the database writes is stopped after the transaction commits, but before a &lt;a href=&quot;wal#ckpt&quot;&gt;checkpoint&lt;/a&gt; is run. Note that the SQLite writes, unlike the direct-to-disk writes, are &lt;a href=&quot;transactional&quot;&gt;transactional&lt;/a&gt; and &lt;a href=&quot;transactional&quot;&gt;power-safe&lt;/a&gt;, though because the synchronous setting is NORMAL instead of FULL, the transactions are not durable.</source>
          <target state="translated">На следующей диаграмме сравниваются обновления базы данных SQLite в &lt;a href=&quot;wal&quot;&gt;режиме WAL&lt;/a&gt; с непосредственной перезаписью отдельных файлов на диске непосредственно на диск. &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;Синхронная ПРАГМА&lt;/a&gt; установка NORMAL. Все записи в базу данных выполняются за одну транзакцию. Таймер записи в базу данных останавливается после фиксации транзакции, но до запуска &lt;a href=&quot;wal#ckpt&quot;&gt;контрольной точки&lt;/a&gt; . Обратите внимание, что запись SQLite, в отличие от записи напрямую на диск, является &lt;a href=&quot;transactional&quot;&gt;транзакционной&lt;/a&gt; и &lt;a href=&quot;transactional&quot;&gt;энергобезопасной&lt;/a&gt; , хотя, поскольку синхронный параметр НОРМАЛЬНЫЙ вместо ПОЛНЫЙ, транзакции недолговечны.</target>
        </trans-unit>
        <trans-unit id="0aae132ea98563594c1fa5eb1b5277ade35e9e0f" translate="yes" xml:space="preserve">
          <source>The next chart shows the performance of SQLite versus direct-to-disk when transactions are disabled (&lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;PRAGMA journal_mode=OFF&lt;/a&gt;) and &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous&lt;/a&gt; is set to OFF. These settings put SQLite on an equal footing with direct-to-disk writes, which is to say they make the data prone to corruption due to system crashes and power failures.</source>
          <target state="translated">Следующая диаграмма показывает производительность SQLite по сравнению с прямой &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;записью&lt;/a&gt; на диск, когда транзакции отключены ( PRAGMA journal_mode = OFF ), а &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;синхронный PRAGMA&lt;/a&gt; установлен на OFF. Эти настройки ставят SQLite в один ряд с прямой записью на диск, то есть они делают данные склонными к повреждению из-за сбоев системы и сбоев питания.</target>
        </trans-unit>
        <trans-unit id="a36fc6db6d371099515d1fcc0740a7c0b2437b14" translate="yes" xml:space="preserve">
          <source>The next example demonstrates lag(), lead(), first_value(), last_value() and nth_value(). The frame-spec is ignored by both lag() and lead(), but respected by first_value(), last_value() and nth_value().</source>
          <target state="translated">Следующий пример демонстрирует функции lag(),lead(),first_value(),last_value()и nth_value().Фрейм-spec игнорируется функциями lag()и lead(),но учитывается функциями first_value(),last_value()и nth_value().</target>
        </trans-unit>
        <trans-unit id="edb143346c38b864be88a8c33e46d2997195abb0" translate="yes" xml:space="preserve">
          <source>The next example uses two common table expressions in a single WITH clause. The following table records a family tree:</source>
          <target state="translated">Следующий пример использует два общих выражения таблицы в одном выражении WITH.Следующая таблица записывает семейное дерево:</target>
        </trans-unit>
        <trans-unit id="1e6dfc599524aaa9c044c52fd99b0a8ed104813e" translate="yes" xml:space="preserve">
          <source>The next interface routine to SQLite is a convenience function used to test whether or not a string forms a complete SQL statement. If the &lt;b&gt;sqlite_complete&lt;/b&gt; function returns true when its input is a string, then the argument forms a complete SQL statement. There are no guarantees that the syntax of that statement is correct, but we at least know the statement is complete. If &lt;b&gt;sqlite_complete&lt;/b&gt; returns false, then more text is required to complete the SQL statement.</source>
          <target state="translated">Следующая процедура интерфейса SQLite - это удобная функция, используемая для проверки того, образует ли строка полный оператор SQL. Если функция &lt;b&gt;sqlite_complete&lt;/b&gt; возвращает истину, когда ее входные данные являются строкой, тогда аргумент формирует полный оператор SQL. Нет никаких гарантий, что синтаксис этого оператора правильный, но мы, по крайней мере, знаем, что утверждение завершено. Если &lt;b&gt;sqlite_complete&lt;/b&gt; возвращает false, то для завершения оператора SQL требуется дополнительный текст.</target>
        </trans-unit>
        <trans-unit id="c0fe3b1ebf5cdcafa2a519a22d91d50cf98645d3" translate="yes" xml:space="preserve">
          <source>The next step in a multi-file commit is the creation of a &quot;master journal&quot; file. The name of the master journal file is the same name as the original database filename (the database that was opened using the &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; interface, not one of the &lt;a href=&quot;lang_attach&quot;&gt;ATTACHed&lt;/a&gt; auxiliary databases) with the text &quot;&lt;b&gt;-mj&lt;/b&gt;</source>
          <target state="translated">Следующим шагом в многофайловой фиксации является создание файла &amp;laquo;главного журнала&amp;raquo;. Имя главного файла журнала совпадает с именем исходного файла базы данных (база данных, открытая с помощью интерфейса &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open ()&lt;/a&gt; , а не одна из вспомогательных баз данных, &lt;a href=&quot;lang_attach&quot;&gt;подключенных&lt;/a&gt; к ATTACH ) с текстом &amp;laquo; &lt;b&gt;-mj&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0cd61740e94e70cec25ceb66f34763d5696dff28" translate="yes" xml:space="preserve">
          <source>The next step in a multi-file commit is the creation of a &quot;super-journal&quot; file. The name of the super-journal file is the same name as the original database filename (the database that was opened using the &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; interface, not one of the &lt;a href=&quot;lang_attach&quot;&gt;ATTACHed&lt;/a&gt; auxiliary databases) with the text &quot;&lt;b&gt;-mj&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da089b39e9e2681938268cb3d32b250cde300bb" translate="yes" xml:space="preserve">
          <source>The next step is to delete the master journal file. This is the point where the multi-file transaction commits. This step corresponds to &lt;a href=&quot;#section_3_11&quot;&gt;step 3.11&lt;/a&gt; in the single-file commit scenario where the rollback journal is deleted.</source>
          <target state="translated">Следующим шагом является удаление главного файла журнала. Это точка, где фиксируется транзакция с несколькими файлами. Этот шаг соответствует &lt;a href=&quot;#section_3_11&quot;&gt;шагу 3.11&lt;/a&gt; в сценарии фиксации одного файла, когда журнал отката удаляется.</target>
        </trans-unit>
        <trans-unit id="8eca8d6f0301fd62dd1a522a60a7179d3923b8b3" translate="yes" xml:space="preserve">
          <source>The next step is to delete the super-journal file. This is the point where the multi-file transaction commits. This step corresponds to &lt;a href=&quot;#section_3_11&quot;&gt;step 3.11&lt;/a&gt; in the single-file commit scenario where the rollback journal is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8a36a95656f30638f07c12cb9da14410f8f263" translate="yes" xml:space="preserve">
          <source>The next step is to flush the content of the rollback journal file to nonvolatile storage. As we will see later, this is a critical step in insuring that the database can survive an unexpected power loss. This step also takes a lot of time, since writing to nonvolatile storage is normally a slow operation.</source>
          <target state="translated">Следующим шагом является промывка содержимого файла журнала отката в энергонезависимое хранилище.Как мы увидим позже,это критически важный шаг в обеспечении того,чтобы база данных могла пережить неожиданное отключение электроэнергии.Этот шаг также занимает много времени,поскольку запись в энергонезависимое хранилище обычно выполняется медленно.</target>
        </trans-unit>
        <trans-unit id="2d76b37ca4cb1c2c8f635e9aaada12e5312b553c" translate="yes" xml:space="preserve">
          <source>The next step is to move the changes in the public branch over into the private branch. In other words, we want to create circle (5) in the diagram above. Begin by changing to the private branch using &quot;&lt;code&gt;fossil update private&lt;/code&gt;&quot;. Then type this command:</source>
          <target state="translated">Следующий шаг - переместить изменения из публичной ветви в частную. Другими словами, мы хотим создать круг (5) на диаграмме выше. Начните с перехода в частную ветку, используя &amp;laquo; &lt;code&gt;fossil update private&lt;/code&gt; &amp;raquo;. Затем введите эту команду:</target>
        </trans-unit>
        <trans-unit id="7e4259fddae0dc878cdf5dde573b08c0dee99991" translate="yes" xml:space="preserve">
          <source>The next step is to record the full pathname of the master journal file in the header of every rollback journal. Space to hold the master journal filename was reserved at the beginning of each rollback journal as the rollback journals were created.</source>
          <target state="translated">Следующий шаг-записать полное имя файла главного журнала в заголовок каждого журнала отката.В начале каждого откатного журнала по мере создания откатных журналов резервировалось место для хранения имени файла главного журнала.</target>
        </trans-unit>
        <trans-unit id="75cf4af1420a93693d3db893fcca12c3f40102cd" translate="yes" xml:space="preserve">
          <source>The next step is to record the full pathname of the super-journal file in the header of every rollback journal. Space to hold the super-journal filename was reserved at the beginning of each rollback journal as the rollback journals were created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10799d0f2a52185a80b7f98059fdd7fef8ba0412" translate="yes" xml:space="preserve">
          <source>The next three bytes in the header record the number of vertexes in the polygon as a big-endian integer. Thus there is an upper bound of about 16 million vertexes per polygon.</source>
          <target state="translated">Следующие три байта в заголовке записывают количество вершин в полигоне в виде big-endian целого числа.Таким образом,на каждый многоугольник приходится около 16 миллионов вершин.</target>
        </trans-unit>
        <trans-unit id="a4532dd188d90322b7de7cb35c04fd5fcf2e6593" translate="yes" xml:space="preserve">
          <source>The next use of the &lt;a href=&quot;opcode#Rowid&quot;&gt;Rowid&lt;/a&gt; or &lt;a href=&quot;opcode#Column&quot;&gt;Column&lt;/a&gt; or &lt;a href=&quot;opcode#Next&quot;&gt;Next&lt;/a&gt; instruction for P1 will refer to the first entry in the database table or index. If the table or index is empty, jump immediately to P2. If the table or index is not empty, fall through to the following instruction.</source>
          <target state="translated">Следующее использование &lt;a href=&quot;opcode#Rowid&quot;&gt;RowId&lt;/a&gt; или &lt;a href=&quot;opcode#Column&quot;&gt;колонке&lt;/a&gt; или &lt;a href=&quot;opcode#Next&quot;&gt;Next&lt;/a&gt; инструкции для P1 будет относиться к первой записи в таблице базы данных или индекса. Если таблица или индекс пусты, сразу переходите к P2. Если таблица или индекс не пустые, выполните следующую инструкцию.</target>
        </trans-unit>
        <trans-unit id="db275badbcaa5bbb5c1ecd5830883705763b811b" translate="yes" xml:space="preserve">
          <source>The next use of the &lt;a href=&quot;opcode#Rowid&quot;&gt;Rowid&lt;/a&gt; or &lt;a href=&quot;opcode#Column&quot;&gt;Column&lt;/a&gt; or &lt;a href=&quot;opcode#Prev&quot;&gt;Prev&lt;/a&gt; instruction for P1 will refer to the last entry in the database table or index. If the table or index is empty and P2&amp;gt;0, then jump immediately to P2. If P2 is 0 or if the table or index is not empty, fall through to the following instruction.</source>
          <target state="translated">Следующее использование &lt;a href=&quot;opcode#Rowid&quot;&gt;RowId&lt;/a&gt; или &lt;a href=&quot;opcode#Column&quot;&gt;колонке&lt;/a&gt; или &lt;a href=&quot;opcode#Prev&quot;&gt;Prev&lt;/a&gt; инструкции для P1 будет относиться к последней записи в таблице базы данных или индекса. Если таблица или индекс пусты и P2&amp;gt; 0, немедленно переходите к P2. Если P2 равен 0 или если таблица или индекс не пустые, выполните следующую инструкцию.</target>
        </trans-unit>
        <trans-unit id="971bdad47f863dca0857c6853816fdb36613779f" translate="yes" xml:space="preserve">
          <source>The no-op memory allocator is not useful by itself. It exists only as a placeholder so that SQLite has a memory allocator to link against on systems that may not have malloc(), free(), or realloc() in their standard library. An application that is compiled with &lt;a href=&quot;compile#zero_malloc&quot;&gt;SQLITE_ZERO_MALLOC&lt;/a&gt; will need to use &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; together with &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmalloc&quot;&gt;SQLITE_CONFIG_MALLOC&lt;/a&gt; or &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigheap&quot;&gt;SQLITE_CONFIG_HEAP&lt;/a&gt; to specify a new alternative memory allocator before beginning to use SQLite.</source>
          <target state="translated">Сам по себе неоперативный распределитель памяти бесполезен. Он существует только как заполнитель, поэтому SQLite имеет распределитель памяти для связывания в системах, которые могут не иметь malloc (), free () или realloc () в своей стандартной библиотеке. Приложение, которое скомпилировано с &lt;a href=&quot;compile#zero_malloc&quot;&gt;SQLITE_ZERO_MALLOC,&lt;/a&gt; должно будет использовать &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config ()&lt;/a&gt; вместе с &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmalloc&quot;&gt;SQLITE_CONFIG_MALLOC&lt;/a&gt; или &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigheap&quot;&gt;SQLITE_CONFIG_HEAP,&lt;/a&gt; чтобы указать новый альтернативный распределитель памяти перед началом использования SQLite.</target>
        </trans-unit>
        <trans-unit id="fa03e3271f78c25f5482177efc3b575ee4cb93ab" translate="yes" xml:space="preserve">
          <source>The nolock query parameter is a boolean that disables all calls to the xLock, xUnlock, and xCheckReservedLock methods of the VFS when true. The nolock query parameter might be used, for example, when trying to access a file on a filesystem that does not support file locking. Caution: If two or more &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connections&lt;/a&gt; try to interact with the same SQLite database and one or more of those connections has enabled &quot;nolock&quot;, then database corruption can result. The &quot;nolock&quot; query parameter should only be used if the application can guarantee that writes to the database are serialized.</source>
          <target state="translated">Параметр запроса nolock - это логическое значение, которое отключает все вызовы методов xLock, xUnlock и xCheckReservedLock VFS, если оно истинно. Параметр запроса nolock может использоваться, например, при попытке доступа к файлу в файловой системе, которая не поддерживает блокировку файлов. Внимание: если два или более &lt;a href=&quot;c3ref/sqlite3&quot;&gt;подключения&lt;/a&gt; к базе данных пытаются взаимодействовать с одной и той же базой данных SQLite, и одно или несколько из этих подключений включили &amp;laquo;блокировку&amp;raquo;, это может привести к повреждению базы данных. Параметр запроса &amp;laquo;nolock&amp;raquo; следует использовать только в том случае, если приложение может гарантировать сериализацию записи в базу данных.</target>
        </trans-unit>
        <trans-unit id="b327cb7b48d6db3fd953f98055ad0798aba25bf9" translate="yes" xml:space="preserve">
          <source>The normal ROWID selection algorithm described above will generate monotonically increasing unique ROWIDs as long as you never use the maximum ROWID value and you never delete the entry in the table with the largest ROWID. If you ever delete rows or if you ever create a row with the maximum possible ROWID, then ROWIDs from previously deleted rows might be reused when creating new rows and newly created ROWIDs might not be in strictly ascending order.</source>
          <target state="translated">Обычный алгоритм выбора ROWID,описанный выше,будет генерировать монотонно увеличивающиеся уникальные ROWID до тех пор,пока вы никогда не используете максимальное значение ROWID и никогда не удаляете запись в таблице с наибольшим ROWID.Если Вы когда-либо удаляли строки или если Вы когда-либо создавали строку с максимально возможным ROWID,то ROWID из ранее удаленных строк могут быть повторно использованы при создании новых строк,а вновь созданные ROWID могут быть не в строгом порядке возрастания.</target>
        </trans-unit>
        <trans-unit id="dd6fdcceb1d1ed51baa294f01d457a9007d5dbff" translate="yes" xml:space="preserve">
          <source>The notindexed= option is not available. Adding &lt;a href=&quot;fts5#the_unindexed_column_option&quot;&gt;UNINDEXED&lt;/a&gt; to the column definition is equivalent.</source>
          <target state="translated">Параметр notindexed = недоступен. Добавление &lt;a href=&quot;fts5#the_unindexed_column_option&quot;&gt;UNINDEXED&lt;/a&gt; к определению столбца эквивалентно.</target>
        </trans-unit>
        <trans-unit id="e15aca005b3d3fc4e0be53d1a5e363f5a459da35" translate="yes" xml:space="preserve">
          <source>The nullif(X,Y) function returns its first argument if the arguments are different and NULL if the arguments are the same. The nullif(X,Y) function searches its arguments from left to right for an argument that defines a collating function and uses that collating function for all string comparisons. If neither argument to nullif() defines a collating function then the BINARY is used.</source>
          <target state="translated">Функция nullif(X,Y)возвращает свой первый аргумент,если аргументы разные,и NULL,если аргументы одинаковые.Функция nullif(X,Y)ищет слева направо свои аргументы,которые определяют функцию сравнения и использует эту функцию для всех строковых сравнений.Если ни один из аргументов nullif()не определяет функцию сравнения,то используется БИНАРИЙ.</target>
        </trans-unit>
        <trans-unit id="0d33dbf967cc9fffb2bcf5f7dd0e676a56e0fe27" translate="yes" xml:space="preserve">
          <source>The number of arguments to a function is sometimes stored in a signed character. So there is a hard upper bound on SQLITE_MAX_FUNCTION_ARG of 127.</source>
          <target state="translated">Количество аргументов к функции иногда хранится в знаковом символе.Поэтому на SQLITE_MAX_FUNCTION_ARG из 127 существует жесткая верхняя граница.</target>
        </trans-unit>
        <trans-unit id="22855456991124f9a63a13f70b4de30a07b1a44f" translate="yes" xml:space="preserve">
          <source>The number of characters in cFrom and cTo do not need to be the same. The rule above says that &quot;ss&quot; on user input will match &quot;&amp;szlig;&quot; with a penalty of 8.</source>
          <target state="translated">Количество символов в cFrom и cTo не обязательно должно быть одинаковым. Приведенное выше правило гласит, что &quot;ss&quot; при вводе пользователем будет соответствовать &quot;&amp;szlig;&quot; со штрафом 8.</target>
        </trans-unit>
        <trans-unit id="1dc8b6de1e412ad3d4600fff75a5432b18cfae89" translate="yes" xml:space="preserve">
          <source>The number of columns in a table</source>
          <target state="translated">Количество колонок в таблице</target>
        </trans-unit>
        <trans-unit id="c449227bed7d73e21c9772a435303abb6080e61e" translate="yes" xml:space="preserve">
          <source>The number of columns in a table is limited by the &lt;a href=&quot;limits#max_column&quot;&gt;SQLITE_MAX_COLUMN&lt;/a&gt; compile-time parameter. A single row of a table cannot store more than &lt;a href=&quot;limits#max_length&quot;&gt;SQLITE_MAX_LENGTH&lt;/a&gt; bytes of data. Both of these limits can be lowered at runtime using the &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit()&lt;/a&gt; C/C++ interface.</source>
          <target state="translated">Количество столбцов в таблице ограничено параметром времени компиляции &lt;a href=&quot;limits#max_column&quot;&gt;SQLITE_MAX_COLUMN&lt;/a&gt; . В одной строке таблицы не может храниться более &lt;a href=&quot;limits#max_length&quot;&gt;SQLITE_MAX_LENGTH&lt;/a&gt; байтов данных. Оба эти ограничения могут быть снижены во время выполнения с помощью интерфейса &lt;a href=&quot;c3ref/limit&quot;&gt;sqlite3_limit ()&lt;/a&gt; C / C ++.</target>
        </trans-unit>
        <trans-unit id="8a6392262a1b2aadeab5c7954067326f2acb3a1d" translate="yes" xml:space="preserve">
          <source>The number of columns in a view</source>
          <target state="translated">Количество колонок в представлении</target>
        </trans-unit>
        <trans-unit id="7da1c90b5d954b64a1a4a566749d8c554741462e" translate="yes" xml:space="preserve">
          <source>The number of columns in an index</source>
          <target state="translated">Количество столбцов в индексе</target>
        </trans-unit>
        <trans-unit id="155a4bbdc3161555e0a5db3b049b1a9960793a80" translate="yes" xml:space="preserve">
          <source>The number of columns in each row returned by the SELECT statement (if any) and the specific values returned have no effect on the results of the EXISTS operator. In particular, rows containing NULL values are not handled any differently from rows without NULL values.</source>
          <target state="translated">Количество столбцов в каждой строке,возвращаемое оператором SELECT (если таковой имеется),и конкретные значения,возвращаемые оператором EXISTS,не влияют на результаты работы оператора EXISTS.В частности,строки,содержащие NULL-значения,не обрабатываются иначе,чем строки без NULL-значений.</target>
        </trans-unit>
        <trans-unit id="b33773d9bb8fcd548b7aa9142e9dd252802d3ebf" translate="yes" xml:space="preserve">
          <source>The number of columns in the result set of a SELECT statement</source>
          <target state="translated">Количество столбцов в результирующем наборе SELECT-оператора</target>
        </trans-unit>
        <trans-unit id="5962dbc1c4fa716686ee3f9c370159a83fff2488" translate="yes" xml:space="preserve">
          <source>The number of columns in the rows returned by a simple SELECT statement is equal to the number of expressions in the result expression list after substitution of * and alias.* expressions. Each result row is calculated by evaluating the expressions in the result expression list with respect to a single row of input data or, for aggregate queries, with respect to a group of rows.</source>
          <target state="translated">Количество столбцов в строках,возвращаемых простым оператором SELECT,равно количеству выражений в списке выражений результата после замены выражений*и alias.*.Каждая строка результата вычисляется путем вычисления выражений в списке результирующих выражений относительно одной строки входных данных или,для агрегированных запросов,относительно группы строк.</target>
        </trans-unit>
        <trans-unit id="efcaef0127aaba4759abf4c43138ceabba69a62b" translate="yes" xml:space="preserve">
          <source>The number of columns in the table, and</source>
          <target state="translated">Количество колонок в таблице,и</target>
        </trans-unit>
        <trans-unit id="ec4b9441464f8df5d1135d79fc696ff2d27c10ef" translate="yes" xml:space="preserve">
          <source>The number of columns the table has, and</source>
          <target state="translated">Количество колонок в таблице,и</target>
        </trans-unit>
        <trans-unit id="f71fcd9bd24f5e705202e8ea9d15f75d827b7073" translate="yes" xml:space="preserve">
          <source>The number of entries in the write-ahead log (WAL) file for that database</source>
          <target state="translated">Количество записей в файле журнала записи (WAL)для этой базы данных</target>
        </trans-unit>
        <trans-unit id="146718a82c006ef871da6bc05817a225f7435b26" translate="yes" xml:space="preserve">
          <source>The number of fields in this row.</source>
          <target state="translated">Количество полей в этой строке.</target>
        </trans-unit>
        <trans-unit id="049187119aa733be135d042e46c0767e81dbbd57" translate="yes" xml:space="preserve">
          <source>The number of freelist pages is stored as a 4-byte big-endian integer in the database header at an offset of 36 from the beginning of the file. The database header also stores the page number of the first freelist trunk page as a 4-byte big-endian integer at an offset of 32 from the beginning of the file.</source>
          <target state="translated">Количество страниц фрилиста хранится в заголовке БД в виде 4-байтового большого числа со смещением 36 от начала файла.В заголовке БД номер страницы первой страницы ствола фрилиста также хранится в виде 4-байтового big-endian целого числа со смещением 32 от начала файла.</target>
        </trans-unit>
        <trans-unit id="297412af9b640397abb6b05573031f719033bedb" translate="yes" xml:space="preserve">
          <source>The number of matchable phrases in the query.</source>
          <target state="translated">Количество совпадающих фраз в запросе.</target>
        </trans-unit>
        <trans-unit id="96242742547a237955f6f616dd7a1536e46de1dc" translate="yes" xml:space="preserve">
          <source>The number of open read-transactions on the shared-cache drops to zero.</source>
          <target state="translated">Количество открытых read-транзакций на разделяемом кэше снижается до нуля.</target>
        </trans-unit>
        <trans-unit id="140866849ab31e765e1dcf46dadf93357615ced1" translate="yes" xml:space="preserve">
          <source>The number of registers in a single prepared statement is fixed at compile-time. The content of all registers is cleared when a prepared statement is &lt;a href=&quot;c3ref/reset&quot;&gt;reset&lt;/a&gt; or &lt;a href=&quot;c3ref/finalize&quot;&gt;finalized&lt;/a&gt;.</source>
          <target state="translated">Количество регистров в одном подготовленном операторе фиксируется во время компиляции. Содержимое всех регистров очищается, когда подготовленный оператор &lt;a href=&quot;c3ref/reset&quot;&gt;сбрасывается&lt;/a&gt; или &lt;a href=&quot;c3ref/finalize&quot;&gt;завершается&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4967dccc017338cead0491dfe60a2adb347e1af4" translate="yes" xml:space="preserve">
          <source>The number of rows in a &lt;a href=&quot;lang_select#values&quot;&gt;VALUES clause&lt;/a&gt; is no longer limited by &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitcompoundselect&quot;&gt;SQLITE_LIMIT_COMPOUND_SELECT&lt;/a&gt;.</source>
          <target state="translated">Количество строк в предложении &lt;a href=&quot;lang_select#values&quot;&gt;VALUES&lt;/a&gt; больше не ограничивается &lt;a href=&quot;c3ref/c_limit_attached#sqlitelimitcompoundselect&quot;&gt;SQLITE_LIMIT_COMPOUND_SELECT&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36747c7623716448e27a5f87c9f1a06587b9fa71" translate="yes" xml:space="preserve">
          <source>The number of rows in the FTS4 table. This value is only available when querying FTS4 tables, not FTS3.</source>
          <target state="translated">Количество строк в таблице FTS4.Это значение доступно только при запросе таблиц FTS4,а не FTS3.</target>
        </trans-unit>
        <trans-unit id="e61b9ea13ff6553c9d51a6610c8145f4cf2adbcc" translate="yes" xml:space="preserve">
          <source>The number of rows in the FTS5 table for which column $col contains at least one instance of the term.</source>
          <target state="translated">Количество строк в таблице FTS5,для которых столбец $col содержит хотя бы один экземпляр термина.</target>
        </trans-unit>
        <trans-unit id="05c84b067bb80eadabe7075383b96e16df1c5aad" translate="yes" xml:space="preserve">
          <source>The number of rows that contain at least one instance of the term.</source>
          <target state="translated">Количество строк,содержащих хотя бы один экземпляр термина.</target>
        </trans-unit>
        <trans-unit id="32422ea0ce2f612eaf439b2072fddd2d97242e6b" translate="yes" xml:space="preserve">
          <source>The number of system calls for filesystem operations is reduced, possibly resulting in a small performance increase.</source>
          <target state="translated">Количество системных вызовов операций с файловой системой уменьшается,что может привести к небольшому повышению производительности.</target>
        </trans-unit>
        <trans-unit id="e6551507f016b4d4b5fee98e7304b5666b04c04e" translate="yes" xml:space="preserve">
          <source>The number of terms in a GROUP BY or ORDER BY clause</source>
          <target state="translated">Количество терминов в пункте GROUP BY или ORDER BY</target>
        </trans-unit>
        <trans-unit id="1c91b565cbe9942030a8129bf45c560b0a7de90f" translate="yes" xml:space="preserve">
          <source>The number of terms in the SET clause of an UPDATE statement</source>
          <target state="translated">Количество терминов в пункте SET заявления UPDATE</target>
        </trans-unit>
        <trans-unit id="70c8732a507183c03eb179514303045a0317c738" translate="yes" xml:space="preserve">
          <source>The number of the current row's peer group within its partition - the rank of the current row without gaps. Partitions are numbered starting from 1 in the order defined by the ORDER BY clause in the window definition. If there is no ORDER BY clause, then all rows are considered peers and this function always returns 1.</source>
          <target state="translated">Номер одноранговой группы текущей строки внутри ее раздела-ранг текущей строки без пробелов.Простенки нумеруются,начиная с 1,в порядке,определенном пунктом ЗАПИСЬ BY в дефиниции окна.Если нет пункта ORDER BY,то все строки считаются одноранговыми,и эта функция всегда возвращает 1.</target>
        </trans-unit>
        <trans-unit id="19450a48e3be402fdbd06d100d558662cd52a063" translate="yes" xml:space="preserve">
          <source>The number of the row within the current partition. Rows are numbered starting from 1 in the order defined by the ORDER BY clause in the window definition, or in arbitrary order otherwise.</source>
          <target state="translated">Номер строки внутри текущего раздела.Строки нумеруются,начиная с 1,в порядке,определенном пунктом ЗАПИСЬ BY в дефиниции окна,или в произвольном порядке.</target>
        </trans-unit>
        <trans-unit id="4dd0d77e2a923847446dbf60b3f48736890bd6ba" translate="yes" xml:space="preserve">
          <source>The number of user defined columns in the FTS table (i.e. not including the docid or the &lt;a href=&quot;fts3#hiddencol&quot;&gt;FTS hidden column&lt;/a&gt;).</source>
          <target state="translated">Количество определяемых пользователем столбцов в таблице FTS (т. Е. Не включая docid или &lt;a href=&quot;fts3#hiddencol&quot;&gt;скрытый столбец FTS&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ec04163c2280ea8f1f3a4d1db55ac34599bd6c09" translate="yes" xml:space="preserve">
          <source>The number of values in an INSERT statement</source>
          <target state="translated">Количество значений в заявлении INSERT</target>
        </trans-unit>
        <trans-unit id="0c5896381d0db64fdbbf15f25aac8c07347171d8" translate="yes" xml:space="preserve">
          <source>The numbered list above notes that the data for the first page of the database file, if it exists and is not already loaded into the</source>
          <target state="translated">Приведенный выше пронумерованный список отмечает,что данные для первой страницы файла базы данных,если она существует и еще не загружена в</target>
        </trans-unit>
        <trans-unit id="57671fab77edd8c578d7c9204ffe057965cc804a" translate="yes" xml:space="preserve">
          <source>The numbers here have become meaningless. This page has been retained only as an historical artifact.</source>
          <target state="translated">Цифры здесь стали бессмысленными.Эта страница сохранилась только как исторический артефакт.</target>
        </trans-unit>
        <trans-unit id="dde5b38271f3bab6f5848df944b4001a9705e033" translate="yes" xml:space="preserve">
          <source>The numbers on the left are the CPU cycle counts for that line of code, of course.</source>
          <target state="translated">Цифры слева-это,конечно же,цикл процессора для этой строки кода.</target>
        </trans-unit>
        <trans-unit id="a08476269382d9cd02770e2cab87ae0ab5a527b0" translate="yes" xml:space="preserve">
          <source>The object is deleted using a call to sqlite3changegroup_delete().</source>
          <target state="translated">Объект удаляется с помощью вызова sqlite3changegroup_delete().</target>
        </trans-unit>
        <trans-unit id="5ae7075075a940fc9e83c06d49e89ed478d0bf99" translate="yes" xml:space="preserve">
          <source>The one-byte flag at offset 0 indicating the b-tree page type.</source>
          <target state="translated">Однобайтовый флаг со смещением 0,указывающий тип страницы b-дерева.</target>
        </trans-unit>
        <trans-unit id="8ef8e17609c1f629f28fe60dfd6c0e8997843e40" translate="yes" xml:space="preserve">
          <source>The one-byte integer at offset 7 gives the number of fragmented free bytes within the cell content area.</source>
          <target state="translated">Одно-байтовое целое число со смещением 7 дает количество фрагментированных свободных байтов в области содержимого ячейки.</target>
        </trans-unit>
        <trans-unit id="729502a2e01c1766734981063a90830e318512ca" translate="yes" xml:space="preserve">
          <source>The online backup API is &lt;a href=&quot;c3ref/backup_finish#sqlite3backupinit&quot;&gt;documented here&lt;/a&gt;. The remainder of this page contains two C language examples illustrating common uses of the API and discussions thereof. Reading these examples is no substitute for reading the API documentation!</source>
          <target state="translated">Здесь &lt;a href=&quot;c3ref/backup_finish#sqlite3backupinit&quot;&gt;документирован&lt;/a&gt; API онлайн-резервного копирования . Оставшаяся часть этой страницы содержит два примера языка C, иллюстрирующие общие способы использования API и их обсуждения. Чтение этих примеров не заменяет чтение документации API!</target>
        </trans-unit>
        <trans-unit id="0ca3b9f46f696e6082e6b7a829be81ef745b8e77" translate="yes" xml:space="preserve">
          <source>The only SQLite compile-time option used was &lt;a href=&quot;compile#enable_memsys5&quot;&gt;-DSQLITE_ENABLE_MEMSYS5&lt;/a&gt;. The optional &lt;a href=&quot;malloc#memsys5&quot;&gt;memsys5&lt;/a&gt; memory allocator is used for performance testing because it gives results that are more repeatable than the library-supplied malloc()/free() on Ubuntu.</source>
          <target state="translated">Единственная используемая опция времени компиляции SQLite была &lt;a href=&quot;compile#enable_memsys5&quot;&gt;-DSQLITE_ENABLE_MEMSYS5&lt;/a&gt; . Дополнительный &lt;a href=&quot;malloc#memsys5&quot;&gt;распределитель&lt;/a&gt; памяти memsys5 используется для тестирования производительности, поскольку он дает более воспроизводимые результаты, чем предоставляемый библиотекой malloc () / free () в Ubuntu.</target>
        </trans-unit>
        <trans-unit id="89c13a55d3d11964427a1a5b2d10d0b78ec66565" translate="yes" xml:space="preserve">
          <source>The only compression algorithm supported is &lt;a href=&quot;https://zlib.net&quot;&gt;&quot;deflate&quot;&lt;/a&gt;.</source>
          <target state="translated">Единственный поддерживаемый алгоритм сжатия - &lt;a href=&quot;https://zlib.net&quot;&gt;&amp;laquo;deflate&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ecb1124fca00e2a69914563c0d3a9baa08011926" translate="yes" xml:space="preserve">
          <source>The only difference between the following two CASE expressions is that the</source>
          <target state="translated">Единственное различие между двумя следующими выражениями CASE заключается в том,что</target>
        </trans-unit>
        <trans-unit id="f71f4a9db1fb88c54de0203ce462454fe4edc774" translate="yes" xml:space="preserve">
          <source>The only difference is that the public sqlite3_XXX functions enumerated above silently ignore any invocations that pass a NULL pointer instead of a valid mutex handle. The implementations of the methods defined by this structure are not required to handle this case, the results of passing a NULL pointer instead of a valid mutex handle are undefined (i.e. it is acceptable to provide an implementation that segfaults if it is passed a NULL pointer).</source>
          <target state="translated">Единственное отличие состоит в том,что публичные функции sqlite3_XXX,перечисленные выше,беззвучно игнорируют любые вызовы,которые передают NULL указатель вместо действительного хэндла мьютекса.Реализации методов,определенных данной структурой,для обработки этого случая не требуются,результаты передачи указателя NULL вместо действительного хэндла мьютекса неопределенны (т.е.допустима реализация,которая segfaults в случае передачи указателя NULL).</target>
        </trans-unit>
        <trans-unit id="9650a6c44a89db8ce8453af489933161fa10a223" translate="yes" xml:space="preserve">
          <source>The only difference is that the public sqlite3_XXX functions enumerated above silently ignore any invocations that pass a NULL pointer instead of a valid mutex handle. The implementations of the methods defined by this structure are not required to handle this case. The results of passing a NULL pointer instead of a valid mutex handle are undefined (i.e. it is acceptable to provide an implementation that segfaults if it is passed a NULL pointer).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927a15e9b9c9c5a21e0cad33a99f89864994a2c1" translate="yes" xml:space="preserve">
          <source>The only really hard part is step 1. You might want to start with an existing virtual table implementation and modify it to suit your needs. The &lt;a href=&quot;https://sqlite.org/src/dir?ci=trunk&amp;amp;type=tree&quot;&gt;SQLite source tree&lt;/a&gt; contains many virtual table implementations that are suitable for copying, including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b216563d4489c23da5dd8ef7bbce7ce15447a023" translate="yes" xml:space="preserve">
          <source>The only really hard part is step 1. You might want to start with an existing virtual table implementation and modify it to suit your needs. There are several virtual table implementations in the SQLite source tree (for testing purposes). You might use one of those as a guide. Locate these test virtual table implementations by searching for &quot;sqlite3_create_module&quot;.</source>
          <target state="translated">Единственная действительно сложная часть-это шаг 1.Возможно,вы захотите начать с существующей реализации виртуальной таблицы и модифицировать ее в соответствии с вашими потребностями.В дереве исходных текстов SQLite есть несколько реализаций виртуальных таблиц (для тестовых целей).Вы можете использовать одну из них в качестве руководства.Найдите эти тестовые реализации виртуальных таблиц с помощью поиска &quot;sqlite3_create_module&quot;.</target>
        </trans-unit>
        <trans-unit id="6a54b4d13a6de9bd96883cd76ca40e5bd7dd1a4b" translate="yes" xml:space="preserve">
          <source>The only reasons for providing functions other than strftime() is for convenience and for efficiency.</source>
          <target state="translated">Единственная причина предоставления функций,отличных от strftime()-это удобство и эффективность.</target>
        </trans-unit>
        <trans-unit id="c64051b826835db581e8535aa4a8fb802f2e8d26" translate="yes" xml:space="preserve">
          <source>The only schema altering commands directly supported by SQLite are the &quot;&lt;a href=&quot;lang_altertable#altertabrename&quot;&gt;rename table&lt;/a&gt;&quot;, &quot;&lt;a href=&quot;lang_altertable#altertabmvcol&quot;&gt;rename column&lt;/a&gt;&quot;, and &quot;&lt;a href=&quot;lang_altertable#altertabaddcol&quot;&gt;add column&lt;/a&gt;&quot; commands shown above. However, applications can make other arbitrary changes to the format of a table using a simple sequence of operations. The steps to make arbitrary changes to the schema design of some table X are as follows:</source>
          <target state="translated">Единственные команды изменения схемы, напрямую поддерживаемые SQLite, - это команды &amp;laquo; &lt;a href=&quot;lang_altertable#altertabrename&quot;&gt;переименовать таблицу&lt;/a&gt; &amp;raquo;, &amp;laquo; &lt;a href=&quot;lang_altertable#altertabmvcol&quot;&gt;переименовать столбец&lt;/a&gt; &amp;raquo; и &amp;laquo; &lt;a href=&quot;lang_altertable#altertabaddcol&quot;&gt;добавить столбец&lt;/a&gt; &amp;raquo;, показанные выше. Однако приложения могут вносить другие произвольные изменения в формат таблицы, используя простую последовательность операций. Шаги по внесению произвольных изменений в схему некоторой таблицы X следующие:</target>
        </trans-unit>
        <trans-unit id="a93c45a553bd489c541613e587314033dbb5442e" translate="yes" xml:space="preserve">
          <source>The only significant design decision that developers need to make is whether to use -Os (optimize for size) or -O6 (optimize for speed). The -O6 setting makes binaries that run about 2% or 3% faster, but which are also 66% larger. The performance here is measured by counting CPU cycles using cachegrind. I-cache misses are not considered in the analysis. If I-cache misses are considered, builds with -O6 might not be any faster than builds with -Os.</source>
          <target state="translated">Единственное значимое проектное решение,которое необходимо принять разработчикам,это использовать -OO (оптимизация под размер)или -O6 (оптимизация под скорость).Настройка -O6 делает двоичные файлы,которые работают примерно на 2% или 3% быстрее,но которые также на 66% больше.Производительность здесь измеряется путем подсчета циклов процессора с помощью кэшфренда.Пропуски I-кэша в анализе не учитываются.Если учитывать пропуски в I-cache,то сборки с -O6 могут быть не быстрее,чем сборки с -O.</target>
        </trans-unit>
        <trans-unit id="67fcf151555c1f1738044349d853d4cc0820a67f" translate="yes" xml:space="preserve">
          <source>The only thing that is really new about the current example is the WHERE clause which is implemented by instructions at addresses 7 through 10. Instructions at address 7 and 8 push onto the stack the value of the &quot;one&quot; column from the table and the literal string &quot;H%&quot;. The &lt;a href=&quot;opcode#Function&quot;&gt;Function&lt;/a&gt; instruction at address 9 pops these two values from the stack and pushes the result of the LIKE() function back onto the stack. The &lt;a href=&quot;opcode#IfNot&quot;&gt;IfNot&lt;/a&gt; instruction pops the top stack value and causes an immediate jump forward to the Next instruction if the top value was false (&lt;em&gt;not&lt;/em&gt; not like the literal string &quot;H%&quot;). Taking this jump effectively skips the callback, which is the whole point of the WHERE clause. If the result of the comparison is true, the jump is not taken and control falls through to the Callback instruction below.</source>
          <target state="translated">Единственное, что действительно ново в текущем примере, - это предложение WHERE, которое реализуется инструкциями по адресам с 7 по 10. Инструкции по адресам 7 и 8 помещают в стек значение столбца &quot;один&quot; из таблицы и литерала. строка &quot;H%&quot;. &lt;a href=&quot;opcode#Function&quot;&gt;Функция&lt;/a&gt; Инструкция по адресу 9 выскакивает эти два значения из стека и помещает результат LIKE () функции на стек. &lt;a href=&quot;opcode#IfNot&quot;&gt;IFNOT&lt;/a&gt; инструкция выталкивает значение верхнего стека и вызывает немедленный переход вперед к следующей инструкции , если верхнее значение было ложным ( &lt;em&gt;не&lt;/em&gt;не похоже на буквальную строку &quot;H%&quot;). Выполнение этого перехода фактически пропускает обратный вызов, в чем заключается весь смысл предложения WHERE. Если результат сравнения верен, переход не выполняется, и управление передается инструкции обратного вызова ниже.</target>
        </trans-unit>
        <trans-unit id="7db0a106b3cc6051a669fd3768b87982a2f1bf0d" translate="yes" xml:space="preserve">
          <source>The only time this would ever be an issue is when you have a program using version 2.8.0 or later that crashes with an incomplete transaction, then you try to examine the database using version 2.7.6 or earlier. The 2.7.6 code will not be able to read the journal file and thus will not be able to rollback the incomplete transaction to restore the database.</source>
          <target state="translated">Единственный раз,когда это может стать проблемой,это когда у вас есть программа,использующая версию 2.8.0 или более позднюю,которая выходит из строя с неполной транзакцией,а затем вы пытаетесь изучить базу данных,используя версию 2.7.6 или более раннюю версию.Код версии 2.7.6 не сможет прочитать файл журнала и,следовательно,не сможет откатить незавершенную транзакцию для восстановления базы данных.</target>
        </trans-unit>
        <trans-unit id="3427e2677eb5693de36c8d23ded03f405a1417be" translate="yes" xml:space="preserve">
          <source>The only way that SQLite can know that the left-most columns of an index have many duplicate is if the &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; command has been run on the database. Without the results of ANALYZE, SQLite has to guess at the &quot;shape&quot; of the data in the table, and the default guess is that there are an average of 10 duplicates for every value in the left-most column of the index. But skip-scan only becomes profitable (it only gets to be faster than a full table scan) when the number of duplicates is about 18 or more. Hence, a skip-scan is never used on a database that has not been analyzed.</source>
          <target state="translated">SQLite может узнать, что у крайних левых столбцов индекса много дубликатов, только если в базе данных была запущена команда &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; . Без результатов ANALYZE SQLite должен угадать &amp;laquo;форму&amp;raquo; данных в таблице, и по умолчанию предполагается, что для каждого значения в крайнем левом столбце индекса существует в среднем 10 дубликатов. Но сканирование с пропуском становится прибыльным (оно может быть быстрее, чем полное сканирование таблицы), только когда количество дубликатов составляет около 18 или больше. Следовательно, сканирование с пропуском никогда не используется для базы данных, которая не была проанализирована.</target>
        </trans-unit>
        <trans-unit id="4470bf44a4ab413995e0a4a3db8d3df4a465f540" translate="yes" xml:space="preserve">
          <source>The opening and/or creating of the database file is deferred until the file is actually needed. This allows options and parameters, such as the native text representation and default page size, to be set using PRAGMA statements.</source>
          <target state="translated">Открытие и/или создание файла базы данных откладывается до тех пор,пока файл не будет действительно необходим.Это позволяет задавать с помощью операторов PRAGMA такие опции и параметры,как родное текстовое представление и размер страницы по умолчанию.</target>
        </trans-unit>
        <trans-unit id="0fff8fde33861bc909ec1bcff7cb77c490217d5b" translate="yes" xml:space="preserve">
          <source>The operating system interface layer understands and tracks all five locking states described above. The pager module only tracks four of the five locking states. A PENDING lock is always just a temporary stepping stone on the path to an EXCLUSIVE lock and so the pager module does not track PENDING locks.</source>
          <target state="translated">Интерфейсный уровень операционной системы понимает и отслеживает все пять описанных выше состояний блокировки.Модуль пейджера отслеживает только четыре из пяти блокирующих состояний.Блокировка PENDING-это всегда лишь временная ступенька на пути к блокировке EXCLUSIVE,поэтому модуль пейджера не отслеживает блокировку PENDING.</target>
        </trans-unit>
        <trans-unit id="6f69f5f3efa82abf10e6a8b25aaa02ea47607f29" translate="yes" xml:space="preserve">
          <source>The operating system must have a unified buffer cache in order for the memory-mapped I/O extension to work correctly, especially in situations where two processes are accessing the same database file and one process is using memory-mapped I/O while the other is not. Not all operating systems have a unified buffer cache. In some operating systems that claim to have a unified buffer cache, the implementation is buggy and can lead to corrupt databases.</source>
          <target state="translated">Операционная система должна иметь унифицированный буферный кэш,чтобы расширение ввода/вывода,отображенное на карту памяти,корректно работало,особенно в ситуациях,когда два процесса обращаются к одному файлу базы данных,а один процесс использует отображенные на карту памяти вводы/выводы,а другой-нет.Не все операционные системы имеют единый буферный кэш.В некоторых операционных системах,которые утверждают,что имеют унифицированный буферный кэш,реализация является ошибочной и может привести к повреждению баз данных.</target>
        </trans-unit>
        <trans-unit id="2fef3a1777aac58cd8a21d6d8b1475aa38c4964a" translate="yes" xml:space="preserve">
          <source>The operations above can potentially cause vast changes the raw database file, and hence cause very different SHA1 hashes at the file level. But since the content represented in the database file is unchanged by these operations, the hash computed by dbhash is also unchanged.</source>
          <target state="translated">Операции,описанные выше,потенциально могут привести к огромным изменениям в файле исходной базы данных,и,следовательно,вызвать очень разные SHA1 хэши на файловом уровне.Но поскольку содержимое,представленное в файле базы данных,этими операциями не изменяется,хэш,вычисленный dbhash,также не изменяется.</target>
        </trans-unit>
        <trans-unit id="fa365bc2db1bf185a92f2d5ef6ff8250e55de644" translate="yes" xml:space="preserve">
          <source>The optimization that uses an index to quickly compute an aggregate min() or max() is extended to work with &lt;a href=&quot;expridx&quot;&gt;indexes on expressions&lt;/a&gt;.</source>
          <target state="translated">Оптимизация, которая использует индекс для быстрого вычисления агрегата min () или max (), расширена для работы с &lt;a href=&quot;expridx&quot;&gt;индексами для выражений&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c0ff09fb1c0cc730867c7410dca6d8522dc6581b" translate="yes" xml:space="preserve">
          <source>The optimizer automatically inverts terms of the form &quot;expr OP column&quot; and makes other simplifications to the WHERE clause in an attempt to get as many WHERE clause terms into the form shown above as possible. The aConstraint[] array only reports WHERE clause terms that are relevant to the particular virtual table being queried.</source>
          <target state="translated">Оптимизатор автоматически инвертирует термины формы &quot;expr OP column&quot; и вносит другие упрощения в выражение WHERE,пытаясь получить как можно больше терминов выражения WHERE в форме,показанной выше.Массив aConstraint[]сообщает только те условия выражения WHERE,которые имеют отношение к конкретной опрашиваемой виртуальной таблице.</target>
        </trans-unit>
        <trans-unit id="3a8fb11a2c37159ec0832c94b1217f4e3525fc9f" translate="yes" xml:space="preserve">
          <source>The optimizer has more freedom to reorder tables in the FROM clause even in there are LEFT joins.</source>
          <target state="translated">Оптимизатор имеет больше свободы для переупорядочивания таблиц в пункте FROM даже при наличии LEFT-соеденений.</target>
        </trans-unit>
        <trans-unit id="ed82314b13b2ea2beac78e23a61e927cbc2a784b" translate="yes" xml:space="preserve">
          <source>The optimizer will now scan tables in the reverse if doing so will satisfy an ORDER BY ... DESC clause.</source>
          <target state="translated">Оптимизатор теперь будет сканировать таблицы в обратном порядке,если это удовлетворяет ЗАКАЗЧИКУ BY ...пункт DESC.</target>
        </trans-unit>
        <trans-unit id="8d9594a87362ce1971b7a9efe4bfc116ba95e426" translate="yes" xml:space="preserve">
          <source>The option</source>
          <target state="translated">Опция</target>
        </trans-unit>
        <trans-unit id="a17a0a84a2d535101cac8aa7214d0ca78303a13a" translate="yes" xml:space="preserve">
          <source>The option causes SQLite to omit its built-in operating system interfaces for Unix, Windows, and OS/2. The resulting library will have no default &lt;a href=&quot;c3ref/vfs&quot;&gt;operating system interface&lt;/a&gt;. Applications must use &lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register()&lt;/a&gt; to register an appropriate interface before using SQLite. Applications must also supply implementations for the &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_os_init()&lt;/a&gt; and &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_os_end()&lt;/a&gt; interfaces. The usual practice is for the supplied &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_os_init()&lt;/a&gt; to invoke &lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register()&lt;/a&gt;. SQLite will automatically invoke &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_os_init()&lt;/a&gt; when it initializes.</source>
          <target state="translated">Эта опция заставляет SQLite опускать свои встроенные интерфейсы операционной системы для Unix, Windows и OS / 2. Полученная библиотека не будет иметь &lt;a href=&quot;c3ref/vfs&quot;&gt;интерфейса операционной системы по&lt;/a&gt; умолчанию . Приложения должны использовать &lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register ()&lt;/a&gt; для регистрации соответствующего интерфейса перед использованием SQLite. Приложения также должны предоставлять реализации для интерфейсов &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_os_init ()&lt;/a&gt; и &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_os_end ()&lt;/a&gt; . Обычная практика заключается в том, что поставляемый &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_os_init ()&lt;/a&gt; вызывает &lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register ()&lt;/a&gt; . SQLite автоматически вызовет &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_os_init ()&lt;/a&gt; при инициализации.</target>
        </trans-unit>
        <trans-unit id="18b9f1ce4c729b2ded7edcf5db48cd7ab36a842d" translate="yes" xml:space="preserve">
          <source>The optional</source>
          <target state="translated">Дополнительный</target>
        </trans-unit>
        <trans-unit id="e154860c714282a196150a8b230c6746d885f55b" translate="yes" xml:space="preserve">
          <source>The optional &quot;</source>
          <target state="translated">Опциональный &quot;</target>
        </trans-unit>
        <trans-unit id="44528aeaa99ba557a8ba7b80ef11d6c589ba4953" translate="yes" xml:space="preserve">
          <source>The optional &quot;AS alias&quot; phrase provides an alternative name for the table into which content is being inserted. The alias name can be used within WHERE and SET clauses of the &lt;a href=&quot;lang_upsert&quot;&gt;UPSERT&lt;/a&gt;. If there is no &lt;a href=&quot;syntax/upsert-clause&quot;&gt;upsert-clause&lt;/a&gt;, then the alias is pointless, but also harmless.</source>
          <target state="translated">Необязательная фраза &amp;laquo;Псевдоним AS&amp;raquo; обеспечивает альтернативное имя для таблицы, в которую вставляется контент. Псевдоним можно использовать в предложениях WHERE и SET в &lt;a href=&quot;lang_upsert&quot;&gt;UPSERT&lt;/a&gt; . Если нет &lt;a href=&quot;syntax/upsert-clause&quot;&gt;upsert-clause&lt;/a&gt; , тогда псевдоним бессмыслен, но также безвреден.</target>
        </trans-unit>
        <trans-unit id="af3a99778493ef21555e9c9fa86a7e91b06e70d3" translate="yes" xml:space="preserve">
          <source>The optional &quot;OR</source>
          <target state="translated">Опциональное &quot;ИЛИ</target>
        </trans-unit>
        <trans-unit id="20d5db3386f7bebafe75fa5cbd335d930edd4888" translate="yes" xml:space="preserve">
          <source>The optional EXCLUDE clause may take any of the following four forms:</source>
          <target state="translated">Необязательное условие EXCLUDE может принимать любую из следующих четырех форм:</target>
        </trans-unit>
        <trans-unit id="f5dad0eb12cbe81d01819ac36d3268610ba8edac" translate="yes" xml:space="preserve">
          <source>The optional IF EXISTS clause suppresses the error that would normally result if the table does not exist.</source>
          <target state="translated">Необязательное условие IF EXISTS подавляет ошибку,которая обычно возникает,если таблица не существует.</target>
        </trans-unit>
        <trans-unit id="5cb5d652a77ff38b54b62cd30fd9ed282bedd94d" translate="yes" xml:space="preserve">
          <source>The optional MASK argument is a bitmask of optimizations to perform:</source>
          <target state="translated">Необязательный аргумент MASK-это битовая маска выполняемых оптимизаций:</target>
        </trans-unit>
        <trans-unit id="6a52a350b8227e3f2c9ade5a4eb34242d4d7eced" translate="yes" xml:space="preserve">
          <source>The optional argument is the name of the schema or database to be serialized. The default value is &quot;main&quot;.</source>
          <target state="translated">Необязательным аргументом является имя схемы или базы данных для сериализации.Значение по умолчанию-&quot;главное&quot;.</target>
        </trans-unit>
        <trans-unit id="38da3cf28a52f4f6d620faa6e6cb2361f1cf4901" translate="yes" xml:space="preserve">
          <source>The optional expression that occurs in between the CASE keyword and the first WHEN keyword is called the &quot;base&quot; expression. There are two basic forms of the CASE expression: those with a base expression and those without.</source>
          <target state="translated">Необязательное выражение,которое возникает между ключевым словом CASE и первым WHEN,называется &quot;базовым&quot;.Существует две основные формы выражения CASE:с базовым выражением и без него.</target>
        </trans-unit>
        <trans-unit id="4916a24a4905c950af19989b67424175234963da" translate="yes" xml:space="preserve">
          <source>The optional expression that occurs in between the CASE keyword and the first WHEN keyword is called the &quot;base&quot; expression. There are two fundamental forms of the CASE expression: those with a base expression and those without.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46109c9ae9c950c43fe7007d16547e58baf09ab" translate="yes" xml:space="preserve">
          <source>The optional shared cache and memory management features that were introduced in version 3.3.0 can now be used across multiple threads within the same process. Formerly, these extensions only applied to database connections operating within a single thread.</source>
          <target state="translated">Дополнительные функции управления общим кэшем и памятью,которые были введены в версии 3.3.0,теперь могут использоваться в нескольких потоках в рамках одного процесса.Раньше эти расширения применялись только к соединениям с базами данных,работающим в одном потоке.</target>
        </trans-unit>
        <trans-unit id="095e758e6c75bd1010500f9c5cbf1c0112ebeaf1" translate="yes" xml:space="preserve">
          <source>The order of evaluation of function arguments.</source>
          <target state="translated">Порядок оценки аргументов функции.</target>
        </trans-unit>
        <trans-unit id="671d3f63e428cbeb09358473179412be4940924b" translate="yes" xml:space="preserve">
          <source>The order of keys in an index b-tree is determined by the sort order of the records that the keys represent. Record comparison progresses column by column. Columns of a record are examined from left to right. The first pair of columns that are not equal determines the relative order of the two records. The sort order of individual columns is as follows:</source>
          <target state="translated">Порядок расположения ключей в b-дереве индекса определяется порядком расположения записей,которые представляют собой ключи.Сравнение записей происходит по столбцам.Столбцы записи рассматриваются слева направо.Первая пара столбцов,которые не равны,определяет относительный порядок обеих записей.Порядок сортировки отдельных столбцов следующий:</target>
        </trans-unit>
        <trans-unit id="2b489797ae43740676c30370f9b2ea776aa65877" translate="yes" xml:space="preserve">
          <source>The order of tables in a join is adjusted automatically to make better use of indices</source>
          <target state="translated">Порядок таблиц в соединении корректируется автоматически для лучшего использования индексов.</target>
        </trans-unit>
        <trans-unit id="140f29de259bdc1e34708f12946df0112e292cdd" translate="yes" xml:space="preserve">
          <source>The order of the buffer pointer and buffer size parameters in the built-in snprintf() implementation is reversed from the order used in standard-library implementations.</source>
          <target state="translated">Порядок указания указателя на буфер и параметров размера буфера во встроенной реализации snprintf()отличается от порядка,используемого в реализации стандартной библиотеки.</target>
        </trans-unit>
        <trans-unit id="5e9268cc64b3aabab9ece14a89f94084ddd4b3cc" translate="yes" xml:space="preserve">
          <source>The order of the columns in the data_% table does not matter.</source>
          <target state="translated">Порядок столбцов в таблице data_% не имеет значения.</target>
        </trans-unit>
        <trans-unit id="b1b615b19c9501777b15d4388be1e80320f4db76" translate="yes" xml:space="preserve">
          <source>The order of the entries indicates the nesting order. In this case, the scan of table t1 using index i2 is the outer loop (since it appears first) and the full-table scan of table t2 is the inner loop (since it appears last). In the following example, the positions of t1 and t2 in the FROM clause of the SELECT are reversed. The query strategy remains the same. The output from EXPLAIN QUERY PLAN shows how the query is actually evaluated, not how it is specified in the SQL statement.</source>
          <target state="translated">Порядок записей указывает на порядок вложенности.В этом случае сканирование таблицы t1 с использованием индекса i2 является внешним циклом (так как появляется первым),а сканирование полного стола таблицы t2-внутренним циклом (так как появляется последним).В следующем примере позиции t1 и t2 в пункте FROM SELECT перевернуты.Стратегия запроса остается прежней.Вывод EXPLAIN QUERY PLAN показывает,как запрос на самом деле обрабатывается,а не как он указан в SQL-запросе.</target>
        </trans-unit>
        <trans-unit id="70ac1e5ab36762649806ee198f0345318ef8e4bd" translate="yes" xml:space="preserve">
          <source>The orderByConsumed means that output from &lt;a href=&quot;../vtab#xfilter&quot;&gt;xFilter&lt;/a&gt;/&lt;a href=&quot;../vtab#xnext&quot;&gt;xNext&lt;/a&gt; will occur in the correct order to satisfy the ORDER BY clause so that no separate sorting step is required.</source>
          <target state="translated">OrderByConsumed означает, что вывод из &lt;a href=&quot;../vtab#xfilter&quot;&gt;xFilter&lt;/a&gt; / &lt;a href=&quot;../vtab#xnext&quot;&gt;xNext&lt;/a&gt; будет происходить в правильном порядке, чтобы удовлетворить предложение ORDER BY, так что отдельный этап сортировки не требуется.</target>
        </trans-unit>
        <trans-unit id="a4ee366293d58487c3c181ee97d4fddeec053e83" translate="yes" xml:space="preserve">
          <source>The orderByConsumed means that output from &lt;a href=&quot;vtab#xfilter&quot;&gt;xFilter&lt;/a&gt;/&lt;a href=&quot;vtab#xnext&quot;&gt;xNext&lt;/a&gt; will occur in the correct order to satisfy the ORDER BY clause so that no separate sorting step is required.</source>
          <target state="translated">OrderByConsumed означает, что вывод из &lt;a href=&quot;vtab#xfilter&quot;&gt;xFilter&lt;/a&gt; / &lt;a href=&quot;vtab#xnext&quot;&gt;xNext&lt;/a&gt; будет происходить в правильном порядке, чтобы удовлетворить предложение ORDER BY, так что отдельный этап сортировки не требуется.</target>
        </trans-unit>
        <trans-unit id="361a689885e1ba1224dc1550da95ae3bd8151f01" translate="yes" xml:space="preserve">
          <source>The original UTF8 text of the vocabulary word</source>
          <target state="translated">Оригинальный текст слова в кодировке UTF8.</target>
        </trans-unit>
        <trans-unit id="8f218b03066661856e3cf8a761cc5ae4bbd68ed0" translate="yes" xml:space="preserve">
          <source>The original document we put here was more of a &lt;a href=&quot;codeofethics&quot;&gt;Code of Ethics of the Project Founder&lt;/a&gt;. While we stand by those principles, they are not in line with the modern technical meaning of a Code of Conduct and have hence been renamed.</source>
          <target state="translated">Исходный документ, который мы разместили здесь, был скорее &lt;a href=&quot;codeofethics&quot;&gt;Кодексом этики основателя проекта&lt;/a&gt; . Хотя мы придерживаемся этих принципов, они не соответствуют современному техническому значению Кодекса поведения и поэтому были переименованы.</target>
        </trans-unit>
        <trans-unit id="c32bb1620d101b8c498092185971e74a9cc27eb4" translate="yes" xml:space="preserve">
          <source>The original implementation of SQLite sought to follow &lt;a href=&quot;https://en.wikipedia.org/wiki/Robustness_principle&quot;&gt;Postel's Law&lt;/a&gt; which states in part &quot;Be liberal in what you accept&quot;. This used to be considered good design - that a system would accept dodgy inputs and try to do the best it could without complaining too much. But lately, people have come to realize that it is sometimes better to be strict in what you accept, so as to more easily find errors in the input.</source>
          <target state="translated">Первоначальная реализация SQLite стремилась следовать &lt;a href=&quot;https://en.wikipedia.org/wiki/Robustness_principle&quot;&gt;закону Постела,&lt;/a&gt; который частично гласил: &amp;laquo;Будьте либеральны в том, что вы принимаете&amp;raquo;. Раньше это считалось хорошим дизайном - система будет принимать изворотливые входы и стараться делать все, что в ее силах, без особых жалоб. Но в последнее время люди пришли к выводу, что иногда лучше быть строгим в том, что вы принимаете, чтобы легче находить ошибки во вводимых данных.</target>
        </trans-unit>
        <trans-unit id="faed9cec852456e57ebf990afb4cf1cac2f27e57" translate="yes" xml:space="preserve">
          <source>The original values for each modified field of the row.</source>
          <target state="translated">Исходные значения для каждого измененного поля строки.</target>
        </trans-unit>
        <trans-unit id="2a41f1df0018eecb7b908d40c9986e3b87989e32" translate="yes" xml:space="preserve">
          <source>The original values of any modified fields are omitted from UPDATE records.</source>
          <target state="translated">Исходные значения любых измененных полей опускаются из записей UPDATE.</target>
        </trans-unit>
        <trans-unit id="f1449473437f390f79738378e7abd93ce9be7fe0" translate="yes" xml:space="preserve">
          <source>The other advantage to using SQLite in place of ZIP is that the document can now be updated incrementally, without risk of corrupting the document if a power loss or other crash occurs in the middle of the update. (Remember that writes to &lt;a href=&quot;atomiccommit&quot;&gt;SQLite databases are atomic&lt;/a&gt;.) True, all the content is still kept in a single big XML file (&quot;content.xml&quot;) which must be completely rewritten if so much as a single character changes. But with SQLite, only that one file needs to change. The other 77 files in the repository can remain unaltered. They do not all have to be rewritten, which in turn makes &quot;File/Save&quot; run much faster and saves wear on SSDs.</source>
          <target state="translated">Другое преимущество использования SQLite вместо ZIP заключается в том, что теперь документ можно обновлять постепенно, без риска его повреждения в случае потери питания или другого сбоя в середине обновления. (Помните, что запись в &lt;a href=&quot;atomiccommit&quot;&gt;базы данных SQLite является атомарной&lt;/a&gt; .) Верно, все содержимое по-прежнему хранится в одном большом XML-файле (&amp;laquo;content.xml&amp;raquo;), который необходимо полностью переписать, если изменяется хотя бы один символ. Но с SQLite нужно изменить только один файл. Остальные 77 файлов в репозитории можно оставить без изменений. Их не все нужно переписывать, что, в свою очередь, ускоряет работу &amp;laquo;Файл / Сохранить&amp;raquo; и снижает износ SSD.</target>
        </trans-unit>
        <trans-unit id="ff8ed48a831b734ff6e1604276150ac99b9ac0e1" translate="yes" xml:space="preserve">
          <source>The other allowed parameters to sqlite3_mutex_alloc() (anything other than SQLITE_MUTEX_FAST and SQLITE_MUTEX_RECURSIVE) each return a pointer to a static preexisting mutex. Nine static mutexes are used by the current version of SQLite. Future versions of SQLite may add additional static mutexes. Static mutexes are for internal use by SQLite only. Applications that use SQLite mutexes should use only the dynamic mutexes returned by SQLITE_MUTEX_FAST or SQLITE_MUTEX_RECURSIVE.</source>
          <target state="translated">Остальные разрешенные параметры sqlite3_mutex_alloc()(что угодно,только не SQLITE_MUTEX_FAST и SQLITE_MUTEX_RECURSIVE)возвращают указатель на статический ранее существовавший мьютекс.Девять статических мьютексов используются текущей версией SQLite.Будущие версии SQLite могут добавлять дополнительные статические мьютексы.Статические мьютексы предназначены только для внутреннего использования SQLite.Приложения,использующие мьютексы SQLite,должны использовать только динамические мьютексы,возвращаемые SQLITE_MUTEX_FAST или SQLITE_MUTEX_RECURSIVE.</target>
        </trans-unit>
        <trans-unit id="e68942fbbde7b9568017891360f3a9246030e2a2" translate="yes" xml:space="preserve">
          <source>The other file, &quot;fts5.h&quot;, is not required to compile the FTS5 extension. It is used by applications that implement &lt;a href=&quot;fts5#extending_fts5&quot;&gt;custom FTS5 tokenizers or auxiliary functions&lt;/a&gt;.</source>
          <target state="translated">Другой файл, &amp;laquo;fts5.h&amp;raquo;, не требуется для компиляции расширения FTS5. Он используется приложениями, реализующими &lt;a href=&quot;fts5#extending_fts5&quot;&gt;специальные токенизаторы FTS5 или вспомогательные функции&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f74c4fa3b3502ec3d363778205dc40519edfac8e" translate="yes" xml:space="preserve">
          <source>The other information required to create a changeset or patchset is read from the database file when &lt;a href=&quot;session/sqlite3session_changeset&quot;&gt;sqlite3session_changeset()&lt;/a&gt; or &lt;a href=&quot;session/sqlite3session_patchset&quot;&gt;sqlite3session_patchset()&lt;/a&gt; is called. Specifically,</source>
          <target state="translated">Другая информация, необходимая для создания &lt;a href=&quot;session/sqlite3session_changeset&quot;&gt;набора изменений&lt;/a&gt; или &lt;a href=&quot;session/sqlite3session_patchset&quot;&gt;набора исправлений,&lt;/a&gt; считывается из файла базы данных при вызове sqlite3session_changeset () или sqlite3session_patchset () . В частности,</target>
        </trans-unit>
        <trans-unit id="4ceb7a7a69cfd1205ea5e7612f272fc9e42d8423" translate="yes" xml:space="preserve">
          <source>The outer SELECT is implemented by instructions 11 through 25. In particular, the WHERE clause containing the IN operator is implemented by instructions at 16, 17, and 20. Instruction 16 pushes the value of the &quot;two&quot; column for the current row onto the stack and instruction 17 checks to see that it is non-NULL. If this is successful, execution jumps to 20, where it tests to see if top of the stack matches any key in the temporary table. The rest of the code is the same as what has been shown before.</source>
          <target state="translated">Внешний SELECT реализуется с помощью инструкций 11-25.В частности,пункт WHERE,содержащий оператора IN,реализуется инструкциями 16,17 и 20.Инструкция 16 выталкивает значение столбца &quot;два&quot; для текущей строки на стек,а инструкция 17 проверяет,не является ли оно НОЛЬКОЙ.При успешном выполнении выполняется скачок на 20,где проверяется,совпадает ли верхняя часть стека с каким-либо ключом во временной таблице.Остальной код совпадает с тем,что было показано ранее.</target>
        </trans-unit>
        <trans-unit id="636166e4ba0668356d630c0a9cb37eba4fcc8c00" translate="yes" xml:space="preserve">
          <source>The outer SELECT is implemented by instructions 14 through 25. In particular, the WHERE clause that contains the nested select is implemented by instructions 19 through 21. You can see that the result of the inner select is loaded onto the stack by instruction 20 and used by the conditional jump at 21.</source>
          <target state="translated">Внешний SELECT реализуется с помощью инструкций 14-25.В частности,пункт WHERE,содержащий вложенный отбор,реализуется инструкциями 19-21.Видно,что результат внутреннего селекции загружается в стек по команде 20 и используется условным скачком на 21.</target>
        </trans-unit>
        <trans-unit id="fcdaf6e60b18b913fe64114ea32692d007183ab8" translate="yes" xml:space="preserve">
          <source>The outer loop over table examp is implement by instructions 7 through 23. The inner loop is instructions 13 through 22. Notice that the &quot;two&amp;lt;50&quot; term of the WHERE expression involves only columns from the first table and can be factored out of the inner loop. SQLite does this and implements the &quot;two&amp;lt;50&quot; test in instructions 10 through 12. The &quot;four==two&quot; test is implement by instructions 14 through 16 in the inner loop.</source>
          <target state="translated">Пример внешнего цикла над таблицей реализуется инструкциями с 7 по 23. Внутренний цикл - это инструкции с 13 по 22. Обратите внимание, что термин &amp;laquo;два &amp;lt;50&amp;raquo; в выражении WHERE включает только столбцы из первой таблицы и может быть исключен из внутренний цикл. SQLite делает это и реализует тест &amp;laquo;два &amp;lt;50&amp;raquo; в инструкциях с 10 по 12. Тест &amp;laquo;четыре == два&amp;raquo; реализуется инструкциями с 14 по 16 во внутреннем цикле.</target>
        </trans-unit>
        <trans-unit id="0e7b99d6dfc2b5d85e34f55e3ea4da579b189034" translate="yes" xml:space="preserve">
          <source>The output begins with a report of the &lt;a href=&quot;c3ref/c_source_id&quot;&gt;SQLITE_SOURCE_ID&lt;/a&gt; (cross-checked again &lt;a href=&quot;c3ref/libversion&quot;&gt;sqlite3_sourceid()&lt;/a&gt;) for the SQLite under test and the compile-time options used as reported by &lt;a href=&quot;c3ref/compileoption_get&quot;&gt;sqlite3_compileoption_get()&lt;/a&gt;. The output concludes with a summary of the test results and a repeat of the &lt;a href=&quot;c3ref/c_source_id&quot;&gt;SQLITE_SOURCE_ID&lt;/a&gt;. If any errors are detected, additional lines detail the problem. The error reporting lines always begin with a single space character so that they can be quickly extracted from large output files using:</source>
          <target state="translated">Вывод начинается с отчета &lt;a href=&quot;c3ref/c_source_id&quot;&gt;SQLITE_SOURCE_ID&lt;/a&gt; (перепроверенный снова &lt;a href=&quot;c3ref/libversion&quot;&gt;sqlite3_sourceid ()&lt;/a&gt; ) для тестируемого SQLite и используемых параметров времени компиляции, как сообщает &lt;a href=&quot;c3ref/compileoption_get&quot;&gt;sqlite3_compileoption_get ()&lt;/a&gt; . Вывод завершается сводкой результатов теста и повторением &lt;a href=&quot;c3ref/c_source_id&quot;&gt;SQLITE_SOURCE_ID&lt;/a&gt; . Если обнаружены какие-либо ошибки, дополнительные строки подробно описывают проблему. Строки сообщения об ошибках всегда начинаются с одного символа пробела, чтобы их можно было быстро извлечь из больших выходных файлов, используя:</target>
        </trans-unit>
        <trans-unit id="b2295d00e027ddb605dbb2cc9b7646825272b788" translate="yes" xml:space="preserve">
          <source>The output from EXPLAIN and EXPLAIN QUERY PLAN is intended for interactive analysis and troubleshooting only. The details of the output format are subject to change from one release of SQLite to the next. Applications should not use EXPLAIN or EXPLAIN QUERY PLAN since their exact behavior is variable and only partially documented.</source>
          <target state="translated">Выходные данные EXPLAIN и EXPLAIN QUERY PLAN предназначены только для интерактивного анализа и поиска и устранения неисправностей.Детали выходного формата могут изменяться от одного релиза SQLite к другому.Приложения не должны использовать EXPLAIN или EXPLAIN QUERY PLAN,так как их точное поведение является переменным и только частично документировано.</target>
        </trans-unit>
        <trans-unit id="235163a8fba9aa1445cd051f01c741ea66911c96" translate="yes" xml:space="preserve">
          <source>The output from the &lt;a href=&quot;https://sqlite.org/src/file/tool/cg_anno.tcl&quot;&gt;cg_anno.tcl&lt;/a&gt; script shows the number of CPU cycles spent on each line of code. The report is approximately 80,000 lines long. The following is a brief snippet taken from the middle of the report to show what it looks like:</source>
          <target state="translated">Выходные &lt;a href=&quot;https://sqlite.org/src/file/tool/cg_anno.tcl&quot;&gt;данные&lt;/a&gt; сценария cg_anno.tcl показывают количество циклов ЦП, потраченных на каждую строку кода. Отчет занимает около 80 000 строк. Ниже приводится краткий фрагмент, взятый из середины отчета, чтобы показать, как он выглядит:</target>
        </trans-unit>
        <trans-unit id="4c55fd24704ccac9a200bb25fe01e36a7bd6347b" translate="yes" xml:space="preserve">
          <source>The output from the mkth3.tcl script is a C program that contains everything needed to run the tests - everything that is except for the SQLite library itself. The generated test program contains implementations for all of the support interfaces used by the test modules and it contains the &lt;code&gt;main()&lt;/code&gt; routine that drives the tests. To convert the test program into a working executable, simply compile it against SQLite:</source>
          <target state="translated">Результатом выполнения сценария mkth3.tcl является программа на языке C, содержащая все необходимое для запуска тестов - все, кроме самой библиотеки SQLite. Сгенерированная тестовая программа содержит реализации для всех интерфейсов поддержки, используемых тестовыми модулями, и содержит процедуру &lt;code&gt;main()&lt;/code&gt; запускает тесты. Чтобы преобразовать тестовую программу в рабочий исполняемый файл, просто скомпилируйте ее с SQLite:</target>
        </trans-unit>
        <trans-unit id="abe6a29295e5add598505fe98eb212b9e3e6e910" translate="yes" xml:space="preserve">
          <source>The output is a human-readable ASCII text report that provides information on the space utilization of the database file. The report is intended to be self-explanatory, though there is some &lt;a href=&quot;sqlanalyze#defs&quot;&gt;additional explanation&lt;/a&gt; of the various parameters reported toward the end of the report.</source>
          <target state="translated">Результатом является удобочитаемый текстовый отчет ASCII, который предоставляет информацию об использовании пространства файлом базы данных. Отчет не требует пояснений, хотя есть некоторые &lt;a href=&quot;sqlanalyze#defs&quot;&gt;дополнительные объяснения&lt;/a&gt; различных параметров, представленных в конце отчета.</target>
        </trans-unit>
        <trans-unit id="89607a5138078e5c86fca97ee25682b106679c11" translate="yes" xml:space="preserve">
          <source>The output is also valid SQL. Most of the report text is contained within a header comment, with various SQL statements that create and initialize a database at the &lt;a href=&quot;sqlanalyze#sqlx&quot;&gt;end of the report&lt;/a&gt;. The constructed database contains the raw data from which the report was extracted. Hence the original report can be read into an instance of the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt; and then the raw data can be queried to dig deeper into the space utilization of a particular database file.</source>
          <target state="translated">Вывод также является допустимым SQL. Большая часть текста отчета содержится в комментарии заголовка с различными операторами SQL, которые создают и инициализируют базу данных в &lt;a href=&quot;sqlanalyze#sqlx&quot;&gt;конце отчета&lt;/a&gt; . Созданная база данных содержит необработанные данные, из которых был извлечен отчет. Следовательно, исходный отчет может быть прочитан в экземпляре &lt;a href=&quot;cli&quot;&gt;оболочки командной строки,&lt;/a&gt; а затем необработанные данные могут быть запрошены, чтобы глубже изучить использование пространства конкретным файлом базы данных.</target>
        </trans-unit>
        <trans-unit id="bcfd95781cb98e2851bb0886cd3f1a588c682428" translate="yes" xml:space="preserve">
          <source>The output of &lt;a href=&quot;c3ref/trace_v2&quot;&gt;sqlite3_trace_v2()&lt;/a&gt; now shows each individual SQL statement run within a trigger.</source>
          <target state="translated">В выводе &lt;a href=&quot;c3ref/trace_v2&quot;&gt;sqlite3_trace_v2 ()&lt;/a&gt; теперь отображается каждый отдельный оператор SQL, выполняемый в триггере.</target>
        </trans-unit>
        <trans-unit id="2d09f331aa1d428bbd3337e80bd418ed5659e816" translate="yes" xml:space="preserve">
          <source>The output of this revised query is:</source>
          <target state="translated">Вывод этого пересмотренного запроса:</target>
        </trans-unit>
        <trans-unit id="e3541aa5b140ee88f1e6bb5e89e08e8618d880af" translate="yes" xml:space="preserve">
          <source>The outputs s0 and s1 are both weighted checksums using Fibonacci weights in reverse order. (The largest Fibonacci weight occurs on the first element of the sequence being summed.) The s1 value spans all 32-bit integer terms of the sequence whereas s0 omits the final term.</source>
          <target state="translated">Выходы s0 и s1 являются контрольными суммами с использованием весов Фибоначчи в обратном порядке.(Наибольший вес Фибоначчи приходится на первый элемент суммируемой последовательности).Значение s1 охватывает все 32-битные целые члены последовательности,в то время как s0 опускает последний член.</target>
        </trans-unit>
        <trans-unit id="2d1abc65d901f9a5d25ea3d57ab5dd49e8f85287" translate="yes" xml:space="preserve">
          <source>The overflow thresholds are designed to give a minimum fanout of 4 for index b-trees and to make sure enough of the payload is on the b-tree page that the record header can usually be accessed without consulting an overflow page. In hindsight, the designer of the SQLite b-tree logic realized that these thresholds could have been made much simpler. However, the computations cannot be changed without resulting in an incompatible file format. And the current computations work well, even if they are a little complex.</source>
          <target state="translated">Пороговые значения переполнения рассчитаны таким образом,что для индексных b-деревьев минимальный разгон составляет 4,а полезная нагрузка находится на странице b-деревьев,к заголовку записи обычно можно получить доступ,не обращаясь к странице переполнения.Оглядываясь назад,конструктор логики b-дерева SQLite понял,что эти пороги можно было бы сделать гораздо проще.Однако изменить вычисления невозможно,не получив в результате несовместимого формата файла.И текущие вычисления хорошо работают,даже если они немного сложны.</target>
        </trans-unit>
        <trans-unit id="ac70d959175f460608260178c8989bd26b78e65e" translate="yes" xml:space="preserve">
          <source>The pAppData pointer is unused by the SQLite core. The pointer is available to store auxiliary information that a VFS information might want to carry around.</source>
          <target state="translated">Указатель pAppData не используется ядром SQLite.Указатель доступен для хранения вспомогательной информации,которую может захотеть нести информация VFS.</target>
        </trans-unit>
        <trans-unit id="18730b00ae23b4c106f1118f96d5a509058fa368" translate="yes" xml:space="preserve">
          <source>The pBuf parameter is a pointer to a contiguous range of bytes that SQLite will use for page-cache memory allocations. The buffer must be at least sz*N bytes in size. The &quot;sz&quot; parameter is the size of each page-cache allocation. N is the maximum number of available allocations.</source>
          <target state="translated">Параметр pBuf-это указатель на смежный диапазон байт,который SQLite будет использовать для выделения памяти для кэширования страниц.Буфер должен иметь размер не менее sz*N байт.Параметр &quot;sz&quot;-размер каждого распределения страничного кэша.N-максимальное количество доступных распределений.</target>
        </trans-unit>
        <trans-unit id="ac154834d9f47915a3416a80860f0b58cefd5585" translate="yes" xml:space="preserve">
          <source>The pContext member of the sqlite3_rtree_geometry structure is always set to a copy of the pContext argument passed to sqlite3_rtree_geometry_callback() when the callback is registered. The aParam[] array (size nParam) contains the parameter values passed to the SQL function on the right-hand side of the MATCH operator. In the example &quot;circle&quot; query above, nParam would be set to 3 and the aParam[] array would contain the three values 45.3, 22.9 and 5.0.</source>
          <target state="translated">Член pContext структуры sqlite3_rtree_geometry всегда устанавливается в качестве копии аргумента pContext,переданного sqlite3_rtree_geometry_callback()при регистрации обратного вызова.Массив aParam[](размер nParam)содержит значения параметров,передаваемых в SQL-функцию справа от MATCH-оператора.В приведенном выше примере запроса &quot;круг&quot; nParam был бы равен 3,а массив aParam[]содержал бы три значения 45.3,22.9 и 5.0.</target>
        </trans-unit>
        <trans-unit id="e127dc3dcbbc20bee3b0cdc450a4bea7c1e6776f" translate="yes" xml:space="preserve">
          <source>The pIter argument passed to this function may either be an iterator passed to a conflict-handler by &lt;a href=&quot;#sqlite3changeset_apply&quot;&gt;sqlite3changeset_apply()&lt;/a&gt;, or an iterator created by &lt;a href=&quot;#sqlite3changeset_start&quot;&gt;sqlite3changeset_start()&lt;/a&gt;. In the latter case, the most recent call to &lt;a href=&quot;#sqlite3changeset_next&quot;&gt;sqlite3changeset_next()&lt;/a&gt; must have returned &lt;a href=&quot;rescode#row&quot;&gt;SQLITE_ROW&lt;/a&gt;. If this is not the case, this function returns &lt;a href=&quot;rescode#misuse&quot;&gt;SQLITE_MISUSE&lt;/a&gt;.</source>
          <target state="translated">Аргумент pIter, переданный этой функции, может быть либо итератором, переданным обработчику конфликтов &lt;a href=&quot;#sqlite3changeset_apply&quot;&gt;функцией sqlite3changeset_apply ()&lt;/a&gt; , либо итератором, созданным &lt;a href=&quot;#sqlite3changeset_start&quot;&gt;функцией sqlite3changeset_start ()&lt;/a&gt; . В последнем случае последний вызов &lt;a href=&quot;#sqlite3changeset_next&quot;&gt;sqlite3changeset_next ()&lt;/a&gt; должен был вернуть &lt;a href=&quot;rescode#row&quot;&gt;SQLITE_ROW&lt;/a&gt; . Если это не так, эта функция возвращает &lt;a href=&quot;rescode#misuse&quot;&gt;SQLITE_MISUSE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="135aebf5a9dd2b851dadacfebf43a14b9409aa81" translate="yes" xml:space="preserve">
          <source>The pIter argument passed to this function may either be an iterator passed to a conflict-handler by &lt;a href=&quot;#sqlite3changeset_apply&quot;&gt;sqlite3changeset_apply()&lt;/a&gt;, or an iterator created by &lt;a href=&quot;#sqlite3changeset_start&quot;&gt;sqlite3changeset_start()&lt;/a&gt;. In the latter case, the most recent call to &lt;a href=&quot;#sqlite3changeset_next&quot;&gt;sqlite3changeset_next()&lt;/a&gt; must have returned SQLITE_ROW. Furthermore, it may only be called if the type of change that the iterator currently points to is either &lt;a href=&quot;c3ref/c_alter_table&quot;&gt;SQLITE_DELETE&lt;/a&gt; or &lt;a href=&quot;c3ref/c_alter_table&quot;&gt;SQLITE_UPDATE&lt;/a&gt;. Otherwise, this function returns &lt;a href=&quot;rescode#misuse&quot;&gt;SQLITE_MISUSE&lt;/a&gt; and sets *ppValue to NULL.</source>
          <target state="translated">Аргумент pIter, переданный этой функции, может быть либо итератором, переданным обработчику конфликтов &lt;a href=&quot;#sqlite3changeset_apply&quot;&gt;функцией sqlite3changeset_apply ()&lt;/a&gt; , либо итератором, созданным &lt;a href=&quot;#sqlite3changeset_start&quot;&gt;функцией sqlite3changeset_start ()&lt;/a&gt; . В последнем случае последний вызов &lt;a href=&quot;#sqlite3changeset_next&quot;&gt;sqlite3changeset_next ()&lt;/a&gt; должен был вернуть SQLITE_ROW. Более того, он может быть вызван только в том случае, если тип изменения, на который в настоящее время указывает итератор, - это &lt;a href=&quot;c3ref/c_alter_table&quot;&gt;SQLITE_DELETE&lt;/a&gt; или &lt;a href=&quot;c3ref/c_alter_table&quot;&gt;SQLITE_UPDATE&lt;/a&gt; . В противном случае эта функция возвращает &lt;a href=&quot;rescode#misuse&quot;&gt;SQLITE_MISUSE&lt;/a&gt; и устанавливает * ppValue в NULL.</target>
        </trans-unit>
        <trans-unit id="47ae6763d58288a12e6ca470cf923677f0731f46" translate="yes" xml:space="preserve">
          <source>The pIter argument passed to this function may either be an iterator passed to a conflict-handler by &lt;a href=&quot;#sqlite3changeset_apply&quot;&gt;sqlite3changeset_apply()&lt;/a&gt;, or an iterator created by &lt;a href=&quot;#sqlite3changeset_start&quot;&gt;sqlite3changeset_start()&lt;/a&gt;. In the latter case, the most recent call to &lt;a href=&quot;#sqlite3changeset_next&quot;&gt;sqlite3changeset_next()&lt;/a&gt; must have returned SQLITE_ROW. Furthermore, it may only be called if the type of change that the iterator currently points to is either &lt;a href=&quot;c3ref/c_alter_table&quot;&gt;SQLITE_UPDATE&lt;/a&gt; or &lt;a href=&quot;c3ref/c_alter_table&quot;&gt;SQLITE_INSERT&lt;/a&gt;. Otherwise, this function returns &lt;a href=&quot;rescode#misuse&quot;&gt;SQLITE_MISUSE&lt;/a&gt; and sets *ppValue to NULL.</source>
          <target state="translated">Аргумент pIter, переданный этой функции, может быть либо итератором, переданным обработчику конфликтов &lt;a href=&quot;#sqlite3changeset_apply&quot;&gt;функцией sqlite3changeset_apply ()&lt;/a&gt; , либо итератором, созданным &lt;a href=&quot;#sqlite3changeset_start&quot;&gt;функцией sqlite3changeset_start ()&lt;/a&gt; . В последнем случае последний вызов &lt;a href=&quot;#sqlite3changeset_next&quot;&gt;sqlite3changeset_next ()&lt;/a&gt; должен был вернуть SQLITE_ROW. Более того, он может быть вызван только в том случае, если тип изменения, на который в настоящее время указывает итератор, - это либо &lt;a href=&quot;c3ref/c_alter_table&quot;&gt;SQLITE_UPDATE,&lt;/a&gt; либо &lt;a href=&quot;c3ref/c_alter_table&quot;&gt;SQLITE_INSERT&lt;/a&gt; . В противном случае эта функция возвращает &lt;a href=&quot;rescode#misuse&quot;&gt;SQLITE_MISUSE&lt;/a&gt; и устанавливает * ppValue в NULL.</target>
        </trans-unit>
        <trans-unit id="5f4815a3e637ae9700d2b5b8cf01f7df97a164dc" translate="yes" xml:space="preserve">
          <source>The pIter argument passed to this function may either be an iterator passed to a conflict-handler by &lt;a href=&quot;sqlite3changeset_apply&quot;&gt;sqlite3changeset_apply()&lt;/a&gt;, or an iterator created by &lt;a href=&quot;sqlite3changeset_start&quot;&gt;sqlite3changeset_start()&lt;/a&gt;. In the latter case, the most recent call to &lt;a href=&quot;sqlite3changeset_next&quot;&gt;sqlite3changeset_next()&lt;/a&gt; must have returned &lt;a href=&quot;../rescode#row&quot;&gt;SQLITE_ROW&lt;/a&gt;. If this is not the case, this function returns &lt;a href=&quot;../rescode#misuse&quot;&gt;SQLITE_MISUSE&lt;/a&gt;.</source>
          <target state="translated">Аргумент pIter, переданный этой функции, может быть либо итератором, переданным обработчику конфликтов &lt;a href=&quot;sqlite3changeset_apply&quot;&gt;функцией sqlite3changeset_apply ()&lt;/a&gt; , либо итератором, созданным &lt;a href=&quot;sqlite3changeset_start&quot;&gt;функцией sqlite3changeset_start ()&lt;/a&gt; . В последнем случае последний вызов &lt;a href=&quot;sqlite3changeset_next&quot;&gt;sqlite3changeset_next ()&lt;/a&gt; должен был вернуть &lt;a href=&quot;../rescode#row&quot;&gt;SQLITE_ROW&lt;/a&gt; . Если это не так, эта функция возвращает &lt;a href=&quot;../rescode#misuse&quot;&gt;SQLITE_MISUSE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5cb49779aa9657ac4af96a2c62fd60bce7011cad" translate="yes" xml:space="preserve">
          <source>The pIter argument passed to this function may either be an iterator passed to a conflict-handler by &lt;a href=&quot;sqlite3changeset_apply&quot;&gt;sqlite3changeset_apply()&lt;/a&gt;, or an iterator created by &lt;a href=&quot;sqlite3changeset_start&quot;&gt;sqlite3changeset_start()&lt;/a&gt;. In the latter case, the most recent call to &lt;a href=&quot;sqlite3changeset_next&quot;&gt;sqlite3changeset_next()&lt;/a&gt; must have returned SQLITE_ROW. Furthermore, it may only be called if the type of change that the iterator currently points to is either &lt;a href=&quot;../c3ref/c_alter_table&quot;&gt;SQLITE_DELETE&lt;/a&gt; or &lt;a href=&quot;../c3ref/c_alter_table&quot;&gt;SQLITE_UPDATE&lt;/a&gt;. Otherwise, this function returns &lt;a href=&quot;../rescode#misuse&quot;&gt;SQLITE_MISUSE&lt;/a&gt; and sets *ppValue to NULL.</source>
          <target state="translated">Аргумент pIter, переданный этой функции, может быть либо итератором, переданным обработчику конфликтов &lt;a href=&quot;sqlite3changeset_apply&quot;&gt;функцией sqlite3changeset_apply ()&lt;/a&gt; , либо итератором, созданным &lt;a href=&quot;sqlite3changeset_start&quot;&gt;функцией sqlite3changeset_start ()&lt;/a&gt; . В последнем случае последний вызов &lt;a href=&quot;sqlite3changeset_next&quot;&gt;sqlite3changeset_next ()&lt;/a&gt; должен был вернуть SQLITE_ROW. Более того, он может быть вызван только в том случае, если тип изменения, на который в настоящее время указывает итератор, - это &lt;a href=&quot;../c3ref/c_alter_table&quot;&gt;SQLITE_DELETE&lt;/a&gt; или &lt;a href=&quot;../c3ref/c_alter_table&quot;&gt;SQLITE_UPDATE&lt;/a&gt; . В противном случае эта функция возвращает &lt;a href=&quot;../rescode#misuse&quot;&gt;SQLITE_MISUSE&lt;/a&gt; и устанавливает * ppValue в NULL.</target>
        </trans-unit>
        <trans-unit id="836812d109e0eaaadd1e45a40c1311bde5cb7d98" translate="yes" xml:space="preserve">
          <source>The pIter argument passed to this function may either be an iterator passed to a conflict-handler by &lt;a href=&quot;sqlite3changeset_apply&quot;&gt;sqlite3changeset_apply()&lt;/a&gt;, or an iterator created by &lt;a href=&quot;sqlite3changeset_start&quot;&gt;sqlite3changeset_start()&lt;/a&gt;. In the latter case, the most recent call to &lt;a href=&quot;sqlite3changeset_next&quot;&gt;sqlite3changeset_next()&lt;/a&gt; must have returned SQLITE_ROW. Furthermore, it may only be called if the type of change that the iterator currently points to is either &lt;a href=&quot;../c3ref/c_alter_table&quot;&gt;SQLITE_UPDATE&lt;/a&gt; or &lt;a href=&quot;../c3ref/c_alter_table&quot;&gt;SQLITE_INSERT&lt;/a&gt;. Otherwise, this function returns &lt;a href=&quot;../rescode#misuse&quot;&gt;SQLITE_MISUSE&lt;/a&gt; and sets *ppValue to NULL.</source>
          <target state="translated">Аргумент pIter, переданный этой функции, может быть либо итератором, переданным обработчику конфликтов &lt;a href=&quot;sqlite3changeset_apply&quot;&gt;функцией sqlite3changeset_apply ()&lt;/a&gt; , либо итератором, созданным &lt;a href=&quot;sqlite3changeset_start&quot;&gt;функцией sqlite3changeset_start ()&lt;/a&gt; . В последнем случае последний вызов &lt;a href=&quot;sqlite3changeset_next&quot;&gt;sqlite3changeset_next ()&lt;/a&gt; должен был вернуть SQLITE_ROW. Более того, он может быть вызван только в том случае, если тип изменения, на который в настоящее время указывает итератор, - это либо &lt;a href=&quot;../c3ref/c_alter_table&quot;&gt;SQLITE_UPDATE,&lt;/a&gt; либо &lt;a href=&quot;../c3ref/c_alter_table&quot;&gt;SQLITE_INSERT&lt;/a&gt; . В противном случае эта функция возвращает &lt;a href=&quot;../rescode#misuse&quot;&gt;SQLITE_MISUSE&lt;/a&gt; и устанавливает * ppValue в NULL.</target>
        </trans-unit>
        <trans-unit id="87ffccb080e4ff9265c31827b97ddd2621e463bc" translate="yes" xml:space="preserve">
          <source>The pNext field is the only field in the sqlite3_vfs structure that SQLite will ever modify. SQLite will only access or modify this field while holding a particular static mutex. The application should never modify anything within the sqlite3_vfs object once the object has been registered.</source>
          <target state="translated">Поле pNext-единственное поле в структуре sqlite3_vfs,которое SQLite когда-либо изменит.SQLite будет получать доступ к этому полю или модифицировать его,удерживая определенный статический мьютекс.Приложение никогда не должно ничего изменять внутри объекта sqlite3_vfs после регистрации объекта.</target>
        </trans-unit>
        <trans-unit id="754388a17b97b997745df633f79a8efeaffaaacb" translate="yes" xml:space="preserve">
          <source>The pNext field is used internally by SQLite. Specifically, SQLite uses this field to form a linked list of registered VFSes.</source>
          <target state="translated">Поле pNext используется внутри SQLite.В частности,SQLite использует это поле для формирования связанного списка зарегистрированных VFS.</target>
        </trans-unit>
        <trans-unit id="ed269faa072ea0bc301321c2683b96864943c28b" translate="yes" xml:space="preserve">
          <source>The pUser and xDelUser members of the sqlite3_rtree_geometry structure are initially set to NULL. The pUser variable may be set by the callback implementation to any arbitrary value that may be useful to subsequent invocations of the callback within the same query (for example, a pointer to a complicated data structure used to test for region intersection). If the xDelUser variable is set to a non-NULL value, then after the query has finished running SQLite automatically invokes it with the value of the pUser variable as the only argument. In other words, xDelUser may be set to a destructor function for the pUser value.</source>
          <target state="translated">Члены структуры sqlite3_rtree_geometry pUser и xDelUser изначально установлены в NULL.Переменная pUser может быть установлена с помощью реализации обратного вызова на любое произвольное значение,которое может быть полезно при последующих вызовах обратного вызова в рамках одного и того же запроса (например,указатель на сложную структуру данных,используемую для проверки на пересечение области).Если переменная xDelUser установлена в значение,отличное от NULL,то после завершения запроса SQLite автоматически вызывает ее со значением переменной pUser в качестве единственного аргумента.Другими словами,xDelUser может быть установлен в функцию деструктора для значения пунсера.</target>
        </trans-unit>
        <trans-unit id="17b3e72d28371d5d2ffa9ec67e0ffe035454e59f" translate="yes" xml:space="preserve">
          <source>The page cache allocates from its own memory pool supplied by &lt;a href=&quot;#sqlite3_config&quot;&gt;sqlite3_config&lt;/a&gt;(&lt;a href=&quot;#sqliteconfigpagecache&quot;&gt;SQLITE_CONFIG_PAGECACHE&lt;/a&gt;,...) rather than from the heap.</source>
          <target state="translated">Кэш страниц выделяется из собственного пула памяти, предоставленного &lt;a href=&quot;#sqlite3_config&quot;&gt;sqlite3_config&lt;/a&gt; ( &lt;a href=&quot;#sqliteconfigpagecache&quot;&gt;SQLITE_CONFIG_PAGECACHE&lt;/a&gt; , ...), а не из кучи.</target>
        </trans-unit>
        <trans-unit id="c49923490f20015de5b3c1344ee709093d18e9ac" translate="yes" xml:space="preserve">
          <source>The page cache allocates from its own memory pool supplied by &lt;a href=&quot;config&quot;&gt;sqlite3_config&lt;/a&gt;(&lt;a href=&quot;c_config_covering_index_scan#sqliteconfigpagecache&quot;&gt;SQLITE_CONFIG_PAGECACHE&lt;/a&gt;,...) rather than from the heap.</source>
          <target state="translated">Кэш страниц выделяется из собственного пула памяти, предоставленного &lt;a href=&quot;config&quot;&gt;sqlite3_config&lt;/a&gt; ( &lt;a href=&quot;c_config_covering_index_scan#sqliteconfigpagecache&quot;&gt;SQLITE_CONFIG_PAGECACHE&lt;/a&gt; , ...), а не из кучи.</target>
        </trans-unit>
        <trans-unit id="a302370f325aa6580998e916c1cd813d2e0b53c6" translate="yes" xml:space="preserve">
          <source>The page number in the database file</source>
          <target state="translated">Номер страницы в файле базы данных</target>
        </trans-unit>
        <trans-unit id="cb3defd1f8ac1da0588e9ad79d27848df6931c39" translate="yes" xml:space="preserve">
          <source>The page number of the database page associated with this</source>
          <target state="translated">Номер страницы базы данных,связанный с этим</target>
        </trans-unit>
        <trans-unit id="0780190de9ffbf4345610e2662e0abd5cdf52be0" translate="yes" xml:space="preserve">
          <source>The page number of the database page for the current row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2ed89da4b6a6d4a6521b481ff6c43d5bdf9213" translate="yes" xml:space="preserve">
          <source>The page number of the largest root b-tree page when in auto-vacuum or incremental-vacuum modes, or zero otherwise.</source>
          <target state="translated">Номер страницы самого большого корневого b-дерева страницы в режиме автоматического вакуума или инкрементального вакуума,или ноль в противном случае.</target>
        </trans-unit>
        <trans-unit id="9a28509eee63401403c2ae3763725cac2ca99893" translate="yes" xml:space="preserve">
          <source>The page number of the page on which this row was found.</source>
          <target state="translated">Номер страницы,на которой была найдена эта строка.</target>
        </trans-unit>
        <trans-unit id="41b015c66ddae0dbc3440c640484bd01738dbaf6" translate="yes" xml:space="preserve">
          <source>The page size and cache size can also be set or changed at run-time using the &lt;a href=&quot;pragma#pragma_page_size&quot;&gt;page_size pragma&lt;/a&gt; and &lt;a href=&quot;pragma#pragma_cache_size&quot;&gt;cache_size pragma&lt;/a&gt;, respectively.</source>
          <target state="translated">Размер страницы и размер кеша также можно установить или изменить во время выполнения с помощью &lt;a href=&quot;pragma#pragma_page_size&quot;&gt;прагмы page_size&lt;/a&gt; и &lt;a href=&quot;pragma#pragma_cache_size&quot;&gt;прагмы cache_size&lt;/a&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="0105846f7fbf6f81d53292a1128d1e82d5804983" translate="yes" xml:space="preserve">
          <source>The page to be fetched is determined by the key. The minimum key value is 1. After it has been retrieved using xFetch, the page is considered to be &quot;pinned&quot;.</source>
          <target state="translated">Страница,которую нужно забрать,определяется клавишей.Минимальное значение ключа равно 1.После того,как она была получена с помощью xFetch,страница считается &quot;pinned&quot;.</target>
        </trans-unit>
        <trans-unit id="ae6ce89a0e7b046f1218400c05d873074d2788d0" translate="yes" xml:space="preserve">
          <source>The page-cache memory allocator is disabled by default. An application can enable it at start-time as follows:</source>
          <target state="translated">По умолчанию аллокатор страничной кэш-памяти отключен.Приложение может включить его при запуске следующим образом:</target>
        </trans-unit>
        <trans-unit id="79944cfbe90583fe884c628acc92c56b549b69ab" translate="yes" xml:space="preserve">
          <source>The pager and btree subsystems added back. They are now the only available backend.</source>
          <target state="translated">Подсистемы пейджера и btree добавлены обратно.Теперь они являются единственным доступным бэкэндом.</target>
        </trans-unit>
        <trans-unit id="177ac3877a5c726efa0192a81b9a621bfc8aa28e" translate="yes" xml:space="preserve">
          <source>The pager is unconcerned with the details of B-Trees, text encodings, indices, and so forth. From the point of view of the pager the database consists of a single file of uniform-sized blocks. Each block is called a &quot;page&quot; and is usually 1024 bytes in size. The pages are numbered beginning with 1. So the first 1024 bytes of the database are called &quot;page 1&quot; and the second 1024 bytes are call &quot;page 2&quot; and so forth. All other encoding details are handled by higher layers of the library. The pager communicates with the operating system using one of several modules (Examples: &lt;a href=&quot;http://www.sqlite.org/src/finfo?name=src/os_unix.c&quot;&gt; os_unix.c&lt;/a&gt;, &lt;a href=&quot;http://www.sqlite.org/src/finfo?name=src/os_win.c&quot;&gt; os_win.c&lt;/a&gt;) that provides a uniform abstraction for operating system services.</source>
          <target state="translated">Пейджер не заботится о деталях B-деревьев, кодировках текста, индексах и так далее. С точки зрения пейджера база данных состоит из одного файла блоков одинакового размера. Каждый блок называется &amp;laquo;страницей&amp;raquo; и обычно имеет размер 1024 байта. Страницы нумеруются, начиная с 1. Таким образом, первые 1024 байта базы данных называются &amp;laquo;страницей 1&amp;raquo;, а вторые 1024 байта - &amp;laquo;страницей 2&amp;raquo; и так далее. Все остальные детали кодирования обрабатываются более высокими уровнями библиотеки. Пейджер взаимодействует с операционной системой с помощью одного из нескольких модулей (примеры: &lt;a href=&quot;http://www.sqlite.org/src/finfo?name=src/os_unix.c&quot;&gt;os_unix.c&lt;/a&gt; , &lt;a href=&quot;http://www.sqlite.org/src/finfo?name=src/os_win.c&quot;&gt;os_win.c&lt;/a&gt; ), который обеспечивает единообразную абстракцию для служб операционной системы.</target>
        </trans-unit>
        <trans-unit id="5acaa405b470e4fb9ef36344daf0f015a3d5bf69" translate="yes" xml:space="preserve">
          <source>The pager module effectively controls access for separate threads, or separate processes, or both. Throughout this document whenever the word &quot;process&quot; is written you may substitute the word &quot;thread&quot; without changing the truth of the statement.</source>
          <target state="translated">Модуль пейджера эффективно управляет доступом к отдельным потокам,или отдельным процессам,или и тем,и другим.В этом документе при написании слова &quot;процесс&quot; вы можете заменить слово &quot;поток&quot;,не изменяя правдивости утверждения.</target>
        </trans-unit>
        <trans-unit id="3fbaa9934c130eb17f7eada7403c9132c86bbc58" translate="yes" xml:space="preserve">
          <source>The pager module is very robust but it can be subverted. This section attempts to identify and explain the risks. (See also the &lt;a href=&quot;atomiccommit#sect_9_0&quot;&gt;Things That Can Go Wrong&lt;/a&gt; section of the article on &lt;a href=&quot;atomiccommit&quot;&gt;Atomic Commit&lt;/a&gt;.</source>
          <target state="translated">Модуль пейджера очень надежен, но его можно разрушить. В этом разделе делается попытка идентифицировать и объяснить риски. (См. Также раздел &amp;laquo; &lt;a href=&quot;atomiccommit#sect_9_0&quot;&gt;Вещи, которые могут пойти не так&lt;/a&gt; &amp;raquo; статьи об &lt;a href=&quot;atomiccommit&quot;&gt;атомарной фиксации&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f15cdebe573fd03148e855390c11255190632e7" translate="yes" xml:space="preserve">
          <source>The paragraph above notes that a MATCH operator with a simple term as the right-hand operand evaluates to true for all documents that contain the specified term. In this context, the &quot;document&quot; may refer to either the data stored in a single column of a row of an FTS table, or to the contents of all columns in a single row, depending on the identifier used as the left-hand operand to the MATCH operator. If the identifier specified as the left-hand operand of the MATCH operator is an FTS table column name, then the document that the search term must be contained in is the value stored in the specified column. However, if the identifier is the name of the FTS</source>
          <target state="translated">В параграфе выше отмечено,что оператор MATCH с простым термином в качестве правостороннего оператора оценивает верность для всех документов,которые содержат указанный термин.В этом контексте &quot;документ&quot; может относиться либо к данным,хранящимся в одном столбце строки таблицы FTS,либо к содержанию всех столбцов в одной строке,в зависимости от идентификатора,используемого в качестве левого операндов оператора Сопоставления.Если идентификатором,указанным в качестве левого операнда оператора Системы Сопоставления,является название столбца таблицы ФСТ,то документом,в котором должен содержаться поисковый термин,является значение,записанное в указанном столбце.Однако если идентификатором является имя ПФТС</target>
        </trans-unit>
        <trans-unit id="15582287ef68bc76059b207ebd8e45ad35a9f199" translate="yes" xml:space="preserve">
          <source>The parameter P is passed through as the only parameter to the callback function X. The parameter N is the approximate number of &lt;a href=&quot;../opcode&quot;&gt;virtual machine instructions&lt;/a&gt; that are evaluated between successive invocations of the callback X. If N is less than one then the progress handler is disabled.</source>
          <target state="translated">Параметр P передается как единственный параметр функции обратного вызова X. Параметр N - это приблизительное количество &lt;a href=&quot;../opcode&quot;&gt;инструкций виртуальной машины&lt;/a&gt; , которые оцениваются между последовательными вызовами обратного вызова X. Если N меньше единицы, то обработчик выполнения отключен. .</target>
        </trans-unit>
        <trans-unit id="de8aa7c163a7cfc0e81022005dde253ed27f9cea" translate="yes" xml:space="preserve">
          <source>The parameter P is passed through as the only parameter to the callback function X. The parameter N is the approximate number of &lt;a href=&quot;opcode&quot;&gt;virtual machine instructions&lt;/a&gt; that are evaluated between successive invocations of the callback X. If N is less than one then the progress handler is disabled.</source>
          <target state="translated">Параметр P передается как единственный параметр функции обратного вызова X. Параметр N - это приблизительное количество &lt;a href=&quot;opcode&quot;&gt;инструкций виртуальной машины&lt;/a&gt; , которые оцениваются между последовательными вызовами обратного вызова X. Если N меньше единицы, то обработчик выполнения отключен. .</target>
        </trans-unit>
        <trans-unit id="b6a1b97180e82088f349d801a8feb225d5ea8536" translate="yes" xml:space="preserve">
          <source>The parameters to the callback are the pArg value, the amount of memory currently in use, and the size of the allocation that provoked the callback. The callback will presumably invoke &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_free()&lt;/a&gt; to free up memory space. The callback may invoke &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc()&lt;/a&gt; or &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_realloc()&lt;/a&gt; but if it does, no additional callbacks will be invoked by the recursive calls.</source>
          <target state="translated">Параметрами обратного вызова являются значение pArg, объем используемой в данный момент памяти и размер выделения, вызвавшего обратный вызов. Обратный вызов предположительно вызовет &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_free ()&lt;/a&gt; для освобождения места в памяти. Обратный вызов может вызывать &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_malloc ()&lt;/a&gt; или &lt;a href=&quot;c3ref/free&quot;&gt;sqlite3_realloc (),&lt;/a&gt; но в этом случае рекурсивные вызовы не будут вызывать никаких дополнительных обратных вызовов.</target>
        </trans-unit>
        <trans-unit id="a0635b4b828516772af2e4a5c5f8f7c2b0b83854" translate="yes" xml:space="preserve">
          <source>The parent and sub-query may contain WHERE clauses. Subject to rules (11), (12) and (13), they may also contain ORDER BY, LIMIT and OFFSET clauses.</source>
          <target state="translated">Родительский и подзапрос могут содержать ГДЕ клаузулы.В соответствии с правилами (11),(12)и (13),они могут также содержать положения ЗАКАЗАТЕЛЬСТВА,ОГРАНИЧЕНИЯ и ОТМЕНА.</target>
        </trans-unit>
        <trans-unit id="6d5030cd0c93ffa44cd5f784ea6b109c2ce36ffc" translate="yes" xml:space="preserve">
          <source>The parent key columns named in the foreign key constraint are not the primary key of the parent table and are not subject to a unique constraint using collating sequence specified in the CREATE TABLE, or</source>
          <target state="translated">Столбцы родительских ключей,названные в ограничении постороннего ключа,не являются первичным ключом таблицы родительских ключей и не подвержены уникальному ограничению с использованием последовательности сравнения,указанной в CREATE TABLE,либо</target>
        </trans-unit>
        <trans-unit id="0feae637448fae26652f631fd44b61bcd440968a" translate="yes" xml:space="preserve">
          <source>The parent key columns named in the foreign key constraint do not exist, or</source>
          <target state="translated">Столбцы родительского ключа,названные в ограничении постороннего ключа,не существуют,или</target>
        </trans-unit>
        <trans-unit id="ba132dacfac52109e850c048192c0d768817957a" translate="yes" xml:space="preserve">
          <source>The parent table does not exist, or</source>
          <target state="translated">Родительской таблицы не существует,или</target>
        </trans-unit>
        <trans-unit id="cfb0e652f64b7c831f470e25c9ae00145b03ba52" translate="yes" xml:space="preserve">
          <source>The parser assigns meaning to tokens based on their context. The parser for SQLite is generated using the &lt;a href=&quot;lemon&quot;&gt;Lemon parser generator&lt;/a&gt;. Lemon does the same job as YACC/BISON, but it uses a different input syntax which is less error-prone. Lemon also generates a parser which is reentrant and thread-safe. And Lemon defines the concept of a non-terminal destructor so that it does not leak memory when syntax errors are encountered. The grammar file that drives Lemon and that defines the SQL language that SQLite understands is found in &lt;a href=&quot;https://sqlite.org/src/file/src/parse.y&quot;&gt;parse.y&lt;/a&gt;.</source>
          <target state="translated">Парсер присваивает значение токенам в зависимости от их контекста. Парсер для SQLite создается с помощью &lt;a href=&quot;lemon&quot;&gt;генератора синтаксического анализатора Lemon&lt;/a&gt; . Lemon выполняет ту же работу, что и YACC / BISON, но использует другой синтаксис ввода, который менее подвержен ошибкам. Lemon также создает синтаксический анализатор, который является реентерабельным и потокобезопасным. И Lemon определяет концепцию нетерминального деструктора, чтобы он не утекал памяти при обнаружении синтаксических ошибок. Файл грамматики, управляющий Lemon и определяющий язык SQL, который понимает SQLite, находится в &lt;a href=&quot;https://sqlite.org/src/file/src/parse.y&quot;&gt;parse.y&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9872a2b10d55c6bd43d5d98d5414737378783a62" translate="yes" xml:space="preserve">
          <source>The parser forwards the AST on to the code generator. The code generator is the heart of SQLite, and is where most of the magic happens. The code generator resolves symbolic names in the AST - matching the names of columns and tables in the input SQL into actual columns and tables of the database. The code generator also does various transformations on the AST to &quot;optimize&quot; it. Finally the code generator chooses appropriate algorithms to implement the operations requested by the AST and constructs bytecode to carry out those operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba39e24b4502de9e348487cd65024dc8a8b4825" translate="yes" xml:space="preserve">
          <source>The parser now insists on seeing a semicolon or the end of input before executing a statement. This avoids an accidental disaster if the WHERE keyword is misspelled in an UPDATE or DELETE statement.</source>
          <target state="translated">Теперь парсер настаивает на том,чтобы перед выполнением оператора видеть точку с запятой или конец ввода.Это позволяет избежать случайной катастрофы,если ключевое слово WHERE будет неправильно написано в операторе UPDATE или DELETE.</target>
        </trans-unit>
        <trans-unit id="276468011b3fce8fd043bc0ac6f52f8e374eb1fe" translate="yes" xml:space="preserve">
          <source>The parser used by SQLite is forgiving. It is often possible to use a keyword as an identifier as long as such use does not result in a parsing ambiguity. For example, the statement &quot;CREATE TABLE BEGIN(REPLACE,PRAGMA,END);&quot; is accepted by SQLite, and creates a new table named &quot;BEGIN&quot; with three columns named &quot;REPLACE&quot;, &quot;PRAGMA&quot;, and &quot;END&quot;. Nevertheless, best practice is to avoid using keywords as identifiers. Common techniques used to avoid keyword name collisions include:</source>
          <target state="translated">Парсер,используемый SQLite,прощает.Часто в качестве идентификатора можно использовать ключевое слово,если такое использование не приводит к неоднозначности разбора.Например,оператор &quot;CREATE TABLE BEGIN(REPLACE,PRAGMA,END);&quot; принимается SQLite и создает новую таблицу под названием &quot;BEGIN&quot; с тремя столбцами &quot;REPLACE&quot;,&quot;PRAGMA&quot; и &quot;END&quot;.Тем не менее,лучшая практика заключается в том,чтобы избегать использования ключевых слов в качестве идентификаторов.Обычные методы,используемые для избежания коллизий имен ключевых слов,включают в себя:</target>
        </trans-unit>
        <trans-unit id="cf399069b7a65af0b661c7a78ceab3a98b1156db" translate="yes" xml:space="preserve">
          <source>The parser's stack was overflowing on a very long UPDATE statement. This is now fixed.</source>
          <target state="translated">Стек синтаксического анализатора был переполнен на очень длинном заявлении UPDATE.Теперь это исправлено.</target>
        </trans-unit>
        <trans-unit id="a5c83958bfdec6a8c2fd0d74498090055bde1a94" translate="yes" xml:space="preserve">
          <source>The parsing of SQL statements is a significant consumer of CPU cycles in any SQL database engine. On-going efforts to optimize SQLite have caused the developers to spend a lot of time tweaking Lemon to generate faster parsers. These efforts have benefited all users of the Lemon parser generator, not just SQLite. But if Lemon had been a separately maintained tool, it would have been more difficulty to make coordinated changes to both SQLite and Lemon, and as a result not as much optimization would have been accomplished. Hence, the fact that the parser generator tool is included in the source tree for SQLite has turned out to be a net benefit for both the tool itself and for SQLite.</source>
          <target state="translated">Разбор SQL выражений является важным потребителем циклов процессора в любом движке базы данных SQL.Постоянные усилия по оптимизации SQLite привели к тому,что разработчики потратили много времени на доработку Lemon для создания более быстрых парсеров.Эти усилия принесли пользу всем пользователям генератора парсеров Lemon,а не только SQLite.Но если бы Lemon был отдельно поддерживаемым инструментом,было бы сложнее вносить согласованные изменения как в SQLite,так и в Lemon,и в результате оптимизации было бы не так много.Следовательно,тот факт,что инструмент генерации синтаксического анализатора включен в дерево исходных текстов для SQLite,оказался чистым преимуществом как для самого инструмента,так и для SQLite.</target>
        </trans-unit>
        <trans-unit id="7d2ca17144abc28a05044c4d5d55dce18e17a921" translate="yes" xml:space="preserve">
          <source>The part of the name prior to the last &quot;_&quot; exactly matches the name of a virtual table that was created using &lt;a href=&quot;lang_createvtab&quot;&gt;CREATE VIRTUAL TABLE&lt;/a&gt;. (Shadow tables are not recognized for &lt;a href=&quot;vtab#epovtab&quot;&gt;eponymous virtual tables&lt;/a&gt; and &lt;a href=&quot;vtab#tabfunc2&quot;&gt;table-valued functions&lt;/a&gt;.)</source>
          <target state="translated">Часть имени перед последним &quot;_&quot; в точности соответствует имени виртуальной таблицы, созданной с помощью &lt;a href=&quot;lang_createvtab&quot;&gt;CREATE VIRTUAL TABLE&lt;/a&gt; . (Теневые таблицы не распознаются для &lt;a href=&quot;vtab#epovtab&quot;&gt;одноименных виртуальных таблиц&lt;/a&gt; и &lt;a href=&quot;vtab#tabfunc2&quot;&gt;функций, возвращающих табличное значение&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="042a9e73444095c51cd83e16473e75bf7e45a5e4" translate="yes" xml:space="preserve">
          <source>The patch level Z was historically only used for bug-fix releases that changed only a small number of code lines.</source>
          <target state="translated">Уровень заплаток Z исторически использовался только для исправлений ошибок в релизах,которые изменяли лишь небольшое количество строк кода.</target>
        </trans-unit>
        <trans-unit id="274dfc20017243c18164f876bdd5c3980ade92fe" translate="yes" xml:space="preserve">
          <source>The path component of the URI specifies the disk file that is the SQLite database to be opened. If the path component is omitted, then the database is stored in a temporary file that will be automatically deleted when the database connection closes. If the authority section is present, then the path is always an absolute pathname. If the authority section is omitted, then the path is an absolute pathname if it begins with the &quot;/&quot; character (ASCII code 0x2f) and is a relative pathname otherwise. On windows, if the absolute path begins with &quot;&lt;b&gt;/&lt;i&gt;X&lt;/i&gt;:/&lt;/b&gt;&quot; where &lt;b&gt;&lt;i&gt;X&lt;/i&gt;&lt;/b&gt; is any single ASCII alphabetic character (&quot;a&quot; through &quot;z&quot; or &quot;A&quot; through &quot;Z&quot;) then the &quot;&lt;b&gt;&lt;i&gt;X:&lt;/i&gt;&lt;/b&gt;&quot; is understood to be the drive letter of the volume containing the file, not the toplevel directory.</source>
          <target state="translated">Компонент пути в URI указывает файл на диске, который является базой данных SQLite, которую нужно открыть. Если компонент пути опущен, то база данных сохраняется во временном файле, который будет автоматически удален при закрытии соединения с базой данных. Если присутствует раздел полномочий, то путь всегда является абсолютным путем. Если раздел полномочий не указан, то путь является абсолютным путем, если он начинается с символа &amp;laquo;/&amp;raquo; (код ASCII 0x2f), и является относительным путем в противном случае. В Windows, если абсолютный путь начинается с &amp;laquo; &lt;b&gt;/ &lt;i&gt;X&lt;/i&gt; : /&lt;/b&gt; &amp;raquo;, где &lt;b&gt;&lt;i&gt;X&lt;/i&gt;&lt;/b&gt; - это любой отдельный буквенный символ ASCII (от &amp;laquo;a&amp;raquo; до &amp;laquo;z&amp;raquo; или от &amp;laquo;A&amp;raquo; до &amp;laquo;Z&amp;raquo;), то &amp;laquo; &lt;b&gt;&lt;i&gt;X:&lt;/i&gt;&lt;/b&gt;&quot;понимается как буква диска тома, содержащего файл, а не каталог верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="f3532ac83d22ad95431b31438dce70e426b9f355" translate="yes" xml:space="preserve">
          <source>The path is optional if the authority is present. If the authority is omitted then the path is required.</source>
          <target state="translated">Путь является необязательным,если орган власти присутствует.Если полномочия опущены,то путь необходим.</target>
        </trans-unit>
        <trans-unit id="5dd0cabb7668cbee80844078c73a695152a285b7" translate="yes" xml:space="preserve">
          <source>The pattern matching algorithm used in the default &lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt; and &lt;a href=&quot;lang_expr#glob&quot;&gt;GLOB&lt;/a&gt; implementation of SQLite can exhibit O(N&amp;amp;sup2) performance (where N is the number of characters in the pattern) for certain pathological cases. To avoid denial-of-service attacks from miscreants who are able to specify their own LIKE or GLOB patterns, the length of the LIKE or GLOB pattern is limited to SQLITE_MAX_LIKE_PATTERN_LENGTH bytes. The default value of this limit is 50000. A modern workstation can evaluate even a pathological LIKE or GLOB pattern of 50000 bytes relatively quickly. The denial of service problem only comes into play when the pattern length gets into millions of bytes. Nevertheless, since most useful LIKE or GLOB patterns are at most a few dozen bytes in length, paranoid application developers may want to reduce this parameter to something in the range of a few hundred if they know that external users are able to generate arbitrary patterns.</source>
          <target state="translated">Алгоритм сопоставления с образцом, используемый по умолчанию в &lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt; и &lt;a href=&quot;lang_expr#glob&quot;&gt;GLOB&lt;/a&gt;реализация SQLite может демонстрировать производительность O (N &amp;amp; sup2) (где N - количество символов в шаблоне) для определенных патологических случаев. Чтобы избежать атак типа &amp;laquo;отказ в обслуживании&amp;raquo; со стороны злоумышленников, которые могут указывать свои собственные шаблоны LIKE или GLOB, длина шаблона LIKE или GLOB ограничена байтами SQLITE_MAX_LIKE_PATTERN_LENGTH. Значение этого предела по умолчанию - 50000. Современная рабочая станция может относительно быстро оценить даже патологический шаблон LIKE или GLOB размером 50000 байт. Проблема отказа в обслуживании возникает только тогда, когда длина шаблона достигает миллионов байтов. Тем не менее, поскольку наиболее полезные шаблоны LIKE или GLOB имеют длину не более нескольких десятков байтов,разработчики приложений-параноиков могут захотеть уменьшить этот параметр до нескольких сотен, если они знают, что внешние пользователи могут генерировать произвольные шаблоны.</target>
        </trans-unit>
        <trans-unit id="d6c16218a9785941384e3fbed5d84494c8c3a3ec" translate="yes" xml:space="preserve">
          <source>The pattern matching algorithm used in the default &lt;a href=&quot;lang_expr#like&quot;&gt;LIKE&lt;/a&gt; and &lt;a href=&quot;lang_expr#glob&quot;&gt;GLOB&lt;/a&gt; implementation of SQLite can exhibit O(N&amp;sup2;) performance (where N is the number of characters in the pattern) for certain pathological cases. To avoid denial-of-service attacks from miscreants who are able to specify their own LIKE or GLOB patterns, the length of the LIKE or GLOB pattern is limited to SQLITE_MAX_LIKE_PATTERN_LENGTH bytes. The default value of this limit is 50000. A modern workstation can evaluate even a pathological LIKE or GLOB pattern of 50000 bytes relatively quickly. The denial of service problem only comes into play when the pattern length gets into millions of bytes. Nevertheless, since most useful LIKE or GLOB patterns are at most a few dozen bytes in length, paranoid application developers may want to reduce this parameter to something in the range of a few hundred if they know that external users are able to generate arbitrary patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202855d0443faeb5dfa8c360619529b04d6a4b20" translate="yes" xml:space="preserve">
          <source>The people table has one entry for each person in a large organization. Each person is either a &quot;student&quot; or a &quot;teacher&quot;, as determined by the &quot;role&quot; field. And we record the height in centimeters of each person. The role and height are indexed. Notice that the left-most column of the index is not very selective - it only contains two possible values.</source>
          <target state="translated">В таблице &quot;Люди&quot; есть по одной записи на каждого человека в большой организации.Каждый человек является либо &quot;учеником&quot;,либо &quot;учителем&quot;,что определяется полем &quot;роль&quot;.И мы записываем высоту в сантиметрах каждого человека.Роль и рост индексируются.Обратите внимание,что крайний левый столбец индекса не очень селективен-он содержит только два возможных значения.</target>
        </trans-unit>
        <trans-unit id="92b29d0fa9a5e447b11571a63811cd4169611d21" translate="yes" xml:space="preserve">
          <source>The per-connection statistics do not use global variables and hence do not require mutexes to update or access. Consequently the per-connection statistics continue to function even if &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmemstatus&quot;&gt;SQLITE_CONFIG_MEMSTATUS&lt;/a&gt; is turned off.</source>
          <target state="translated">Статистика для каждого соединения не использует глобальные переменные и, следовательно, не требует мьютексов для обновления или доступа. Следовательно, статистика для каждого соединения продолжает работать, даже если &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfigmemstatus&quot;&gt;SQLITE_CONFIG_MEMSTATUS&lt;/a&gt; отключен.</target>
        </trans-unit>
        <trans-unit id="50dbff919de02c3f0e66d4c1de101521648ed2d5" translate="yes" xml:space="preserve">
          <source>The performance can be improved slightly by bypassing the SQL layer and reading the blob content directly using the &lt;a href=&quot;c3ref/blob_read&quot;&gt;sqlite3_blob_read()&lt;/a&gt; interface, as shown in the next chart:</source>
          <target state="translated">Производительность можно немного улучшить, обойдя уровень SQL и прочитав содержимое &lt;a href=&quot;c3ref/blob_read&quot;&gt;большого двоичного объекта&lt;/a&gt; напрямую с помощью интерфейса sqlite3_blob_read () , как показано на следующей диаграмме:</target>
        </trans-unit>
        <trans-unit id="095c3d78e34e00649d5524d5d46327c65695f40f" translate="yes" xml:space="preserve">
          <source>The performance difference arises (we believe) because when working from an SQLite database, the open() and close() system calls are invoked only once, whereas open() and close() are invoked once for each blob when using blobs stored in individual files. It appears that the overhead of calling open() and close() is greater than the overhead of using the database. The size reduction arises from the fact that individual files are padded out to the next multiple of the filesystem block size, whereas the blobs are packed more tightly into an SQLite database.</source>
          <target state="translated">Разница в производительности возникает (нам кажется)потому,что при работе из базы данных SQLite системные вызовы open()и close()вызываются только один раз,в то время как open()и close()вызываются один раз для каждого блока при использовании блоков,хранящихся в отдельных файлах.Оказывается,что накладные расходы при вызове open()и close()больше,чем накладные расходы при использовании базы данных.Уменьшение размера происходит за счет того,что отдельные файлы добавляются в блок размером,кратным размеру блока файловой системы,в то время как блобы более плотно упаковываются в базу данных SQLite.</target>
        </trans-unit>
        <trans-unit id="2a5a29c317c697ba64096b7f2c68033b4565ac42" translate="yes" xml:space="preserve">
          <source>The permutation is only valid until the next &lt;a href=&quot;opcode#Compare&quot;&gt;Compare&lt;/a&gt; that has the OPFLAG_PERMUTE bit set in P5. Typically the &lt;a href=&quot;opcode#Permutation&quot;&gt;Permutation&lt;/a&gt; should occur immediately prior to the &lt;a href=&quot;opcode#Compare&quot;&gt;Compare&lt;/a&gt;.</source>
          <target state="translated">Перестановка действительна только до следующего &lt;a href=&quot;opcode#Compare&quot;&gt;сравнения&lt;/a&gt; , в котором бит OPFLAG_PERMUTE установлен в P5. Обычно &lt;a href=&quot;opcode#Permutation&quot;&gt;перестановка&lt;/a&gt; должна происходить непосредственно перед &lt;a href=&quot;opcode#Compare&quot;&gt;сравнением&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="645402751e5b5ab0dd0504759786ac3f99e9f97b" translate="yes" xml:space="preserve">
          <source>The persistence of WAL mode means that applications can be converted to using SQLite in WAL mode without making any changes to the application itself. One has merely to run &quot;&lt;code&gt;PRAGMA journal_mode=WAL;&lt;/code&gt;&quot; on the database file(s) using the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt; or other utility, then restart the application.</source>
          <target state="translated">Постоянство режима WAL означает, что приложения могут быть преобразованы для использования SQLite в режиме WAL без внесения каких-либо изменений в само приложение. &lt;code&gt;PRAGMA journal_mode=WAL;&lt;/code&gt; просто запустить PRAGMA journal_mode = WAL; для файла (ов) базы данных с помощью &lt;a href=&quot;cli&quot;&gt;оболочки командной строки&lt;/a&gt; или другой утилиты, а затем перезапустить приложение.</target>
        </trans-unit>
        <trans-unit id="37f0ea5f181b03035443f3a918ec838d5bf0f5c4" translate="yes" xml:space="preserve">
          <source>The phrase &quot;VALUES(</source>
          <target state="translated">Фраза &quot;VALUES(</target>
        </trans-unit>
        <trans-unit id="afda55d9895c016a5496f6b600205dbf8fbc7d06" translate="yes" xml:space="preserve">
          <source>The planner avoids query plans that use indexes with unknown collating functions.</source>
          <target state="translated">Планировщик избегает планов запросов,использующих индексы с неизвестными функциями сопоставления.</target>
        </trans-unit>
        <trans-unit id="926646f3fb08c1ad8acc73155c7f0bcd303e689e" translate="yes" xml:space="preserve">
          <source>The planner omits unused LEFT JOINs even if they are not the right-most joins of a query.</source>
          <target state="translated">Планировщик опускает неиспользуемые левые входы,даже если они не являются самыми правыми входами в запрос.</target>
        </trans-unit>
        <trans-unit id="5852e8af03eff264841e6547e952b8e08ad085dc" translate="yes" xml:space="preserve">
          <source>The platform used for these tests is a 1.6GHz Athlon with 1GB or memory and an IDE disk drive. The operating system is RedHat Linux 7.2 with a stock kernel.</source>
          <target state="translated">Платформа,используемая для этих тестов-это Athlon 1.6 ГГц с 1 ГБ или памятью и дисковым накопителем IDE.Операционная система-RedHat Linux 7.2 со стандартным ядром.</target>
        </trans-unit>
        <trans-unit id="e614d538ab4445c07af270ecdc6677ad39ccfb17" translate="yes" xml:space="preserve">
          <source>The point is this: an SQL database schema almost always does a far better job of defining and organizing the tables and data structures and their relationships. And having clear, concise, and well-defined representation almost always results in an application that performs better, has fewer problems, and is easier to develop and maintain.</source>
          <target state="translated">Дело в том,что схема базы данных SQL почти всегда выполняет гораздо лучшую работу по определению и организации таблиц и структур данных,а также их взаимосвязей.А наличие четкого,лаконичного и четкого представления почти всегда приводит к тому,что приложение работает лучше,имеет меньше проблем и проще в разработке и обслуживании.</target>
        </trans-unit>
        <trans-unit id="1249a327a44d56131079defe491a7680b8885a62" translate="yes" xml:space="preserve">
          <source>The pointer arguments to &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free()&lt;/a&gt; and &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_realloc()&lt;/a&gt; must be either NULL or else pointers obtained from a prior invocation of &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc()&lt;/a&gt; or &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_realloc()&lt;/a&gt; that have not yet been released.</source>
          <target state="translated">Аргументы указателя на &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free ()&lt;/a&gt; и &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_realloc ()&lt;/a&gt; должны быть либо NULL, либо указатели, полученные в результате предыдущего вызова &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_malloc ()&lt;/a&gt; или &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_realloc (),&lt;/a&gt; которые еще не были выпущены.</target>
        </trans-unit>
        <trans-unit id="70d5983c94ca6fdbfd5d05e2d8f25d536fa0e2f9" translate="yes" xml:space="preserve">
          <source>The pointer arguments to &lt;a href=&quot;free&quot;&gt;sqlite3_free()&lt;/a&gt; and &lt;a href=&quot;free&quot;&gt;sqlite3_realloc()&lt;/a&gt; must be either NULL or else pointers obtained from a prior invocation of &lt;a href=&quot;free&quot;&gt;sqlite3_malloc()&lt;/a&gt; or &lt;a href=&quot;free&quot;&gt;sqlite3_realloc()&lt;/a&gt; that have not yet been released.</source>
          <target state="translated">Аргументы указателя на &lt;a href=&quot;free&quot;&gt;sqlite3_free ()&lt;/a&gt; и &lt;a href=&quot;free&quot;&gt;sqlite3_realloc ()&lt;/a&gt; должны быть либо NULL, либо указатели, полученные в результате предыдущего вызова &lt;a href=&quot;free&quot;&gt;sqlite3_malloc ()&lt;/a&gt; или &lt;a href=&quot;free&quot;&gt;sqlite3_realloc (),&lt;/a&gt; которые еще не были выпущены.</target>
        </trans-unit>
        <trans-unit id="19e21383ec674e61332285628bf7a07277fe3452" translate="yes" xml:space="preserve">
          <source>The pointer type is not intended to be flexible and dynamic. The pointer type is intended to be a design-time constant. Applications should not synthesize pointer type strings at run-time. Providing support for dynamic pointer type strings would lead developers to misuse the pointer-passing interfaces by creating run-time synthesized pointer type strings. Requiring the pointer type strings to be static encourages developers to do the right thing by choosing fixed pointer type names at design-time and encoding those names as constant strings.</source>
          <target state="translated">Тип указателя не рассчитан на гибкость и динамику.Тип указателя предназначен для константы времени проектирования.Приложения не должны синтезировать строки типа указателя во время исполнения.Обеспечение поддержки динамических строк указательных типов приведет к тому,что разработчики будут злоупотреблять интерфейсами обхода указателей,создавая строки указательных типов,синтезируемые во время исполнения.Требование к строкам типа указателя быть статическими побуждает разработчиков поступать правильно,выбирая фиксированные имена типов указателей во время исполнения и кодируя эти имена как константные строки.</target>
        </trans-unit>
        <trans-unit id="0a50e253ab7c267f33ad3d5a3deec486738946df" translate="yes" xml:space="preserve">
          <source>The pointers returned are valid until a type conversion occurs as described above, or until &lt;a href=&quot;#sqlite3_step&quot;&gt;sqlite3_step()&lt;/a&gt; or &lt;a href=&quot;#sqlite3_reset&quot;&gt;sqlite3_reset()&lt;/a&gt; or &lt;a href=&quot;#sqlite3_finalize&quot;&gt;sqlite3_finalize()&lt;/a&gt; is called. The memory space used to hold strings and BLOBs is freed automatically. Do not pass the pointers returned from &lt;a href=&quot;#sqlite3_column_blob&quot;&gt;sqlite3_column_blob()&lt;/a&gt;, &lt;a href=&quot;#sqlite3_column_blob&quot;&gt;sqlite3_column_text()&lt;/a&gt;, etc. into &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free()&lt;/a&gt;.</source>
          <target state="translated">Указатели , возвращаемые действительны до тех пор , преобразование типа не происходит , как описано выше, или до &lt;a href=&quot;#sqlite3_step&quot;&gt;sqlite3_step ()&lt;/a&gt; или &lt;a href=&quot;#sqlite3_reset&quot;&gt;sqlite3_reset ()&lt;/a&gt; или &lt;a href=&quot;#sqlite3_finalize&quot;&gt;sqlite3_finalize ()&lt;/a&gt; называется. Пространство памяти, используемое для хранения строк и больших двоичных объектов, освобождается автоматически. Не передавайте указатели, возвращенные из &lt;a href=&quot;#sqlite3_column_blob&quot;&gt;sqlite3_column_blob ()&lt;/a&gt; , &lt;a href=&quot;#sqlite3_column_blob&quot;&gt;sqlite3_column_text ()&lt;/a&gt; и т. Д., В &lt;a href=&quot;#sqlite3_free&quot;&gt;sqlite3_free ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3551cf33afa7b1894cdea20e6326c2bf8dcf19de" translate="yes" xml:space="preserve">
          <source>The pointers returned are valid until a type conversion occurs as described above, or until &lt;a href=&quot;step&quot;&gt;sqlite3_step()&lt;/a&gt; or &lt;a href=&quot;reset&quot;&gt;sqlite3_reset()&lt;/a&gt; or &lt;a href=&quot;finalize&quot;&gt;sqlite3_finalize()&lt;/a&gt; is called. The memory space used to hold strings and BLOBs is freed automatically. Do not pass the pointers returned from &lt;a href=&quot;column_blob&quot;&gt;sqlite3_column_blob()&lt;/a&gt;, &lt;a href=&quot;column_blob&quot;&gt;sqlite3_column_text()&lt;/a&gt;, etc. into &lt;a href=&quot;free&quot;&gt;sqlite3_free()&lt;/a&gt;.</source>
          <target state="translated">Указатели , возвращаемые действительны до тех пор , преобразование типа не происходит , как описано выше, или до &lt;a href=&quot;step&quot;&gt;sqlite3_step ()&lt;/a&gt; или &lt;a href=&quot;reset&quot;&gt;sqlite3_reset ()&lt;/a&gt; или &lt;a href=&quot;finalize&quot;&gt;sqlite3_finalize ()&lt;/a&gt; называется. Пространство памяти, используемое для хранения строк и больших двоичных объектов, освобождается автоматически. Не передавайте указатели, возвращенные из &lt;a href=&quot;column_blob&quot;&gt;sqlite3_column_blob ()&lt;/a&gt; , &lt;a href=&quot;column_blob&quot;&gt;sqlite3_column_text ()&lt;/a&gt; и т. Д., В &lt;a href=&quot;free&quot;&gt;sqlite3_free ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9edff31b2dc071eb66ab4aa44d22adfef6b1aa3c" translate="yes" xml:space="preserve">
          <source>The pointers that piggy-back on SQL NULL values using the &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_pointer()&lt;/a&gt;, &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_pointer()&lt;/a&gt;, and &lt;a href=&quot;c3ref/value_blob&quot;&gt;sqlite3_value_pointer()&lt;/a&gt; interface are transient and ephemeral. The pointers are never written into the database. The pointers will not survive sorting. The latter fact is why there is no sqlite3_column_pointer() interface, since it is impossible to predict whether or not the query planner will insert a sort operation prior to returning a value from a query, so it would be impossible to know if a pointer value inserted into a query by &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_pointer()&lt;/a&gt; or &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_pointer()&lt;/a&gt; would survive through to the result set.</source>
          <target state="translated">Указатели, которые совмещают значения SQL NULL с помощью интерфейсов &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_pointer ()&lt;/a&gt; , &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_pointer ()&lt;/a&gt; и &lt;a href=&quot;c3ref/value_blob&quot;&gt;sqlite3_value_pointer (),&lt;/a&gt; являются временными и эфемерными. Указатели никогда не записываются в базу данных. Указатели не переживут сортировку. Последний факт является причиной отсутствия интерфейса sqlite3_column_pointer (), поскольку невозможно предсказать, будет ли планировщик запросов вставлять операцию сортировки перед возвратом значения из запроса, поэтому было бы невозможно узнать, является ли значение указателя вставленные в запрос &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_pointer ()&lt;/a&gt; или &lt;a href=&quot;c3ref/result_blob&quot;&gt;sqlite3_result_pointer ()&lt;/a&gt; , сохранятся до набора результатов.</target>
        </trans-unit>
        <trans-unit id="41025b56b1d99416ab106417d2e02a42b25af90e" translate="yes" xml:space="preserve">
          <source>The porter tokenizer is a wrapper tokenizer. It takes the output of some other tokenizer and applies the &lt;a href=&quot;http://tartarus.org/martin/PorterStemmer/&quot;&gt;porter stemming algorithm&lt;/a&gt; to each token before it returns it to FTS5. This allows search terms like &quot;correction&quot; to match similar words such as &quot;corrected&quot; or &quot;correcting&quot;. The porter stemmer algorithm is designed for use with English language terms only - using it with other languages may or may not improve search utility.</source>
          <target state="translated">Токенизатор переносчика - это токенизатор-оболочка. Он принимает выходные данные другого токенизатора и применяет &lt;a href=&quot;http://tartarus.org/martin/PorterStemmer/&quot;&gt;алгоритм&lt;/a&gt; выделения портера к каждому токену, прежде чем вернуть его в FTS5. Это позволяет таким поисковым запросам, как &amp;laquo;исправление&amp;raquo;, совпадать с похожими словами, например &amp;laquo;исправлено&amp;raquo; или &amp;laquo;исправление&amp;raquo;. Алгоритм переносного стеммера предназначен для использования только с терминами на английском языке - его использование с другими языками может улучшить или не улучшить утилиту поиска.</target>
        </trans-unit>
        <trans-unit id="8db274801095c26d088720201acb1bad2d40d917" translate="yes" xml:space="preserve">
          <source>The power of an SQLite database could, in theory, be achieved using a custom file format. But any custom file format that is as expressive as a relational database would likely require an enormous design specification and many tens or hundreds of thousands of lines of code to implement. And the end result would be an &quot;opaque blob&quot; that is inaccessible without specialized tools.</source>
          <target state="translated">Мощность базы данных SQLite теоретически может быть достигнута с помощью пользовательского формата файлов.Но любой пользовательский формат файла,столь же выразительный,как реляционная база данных,скорее всего,потребует огромной проектной спецификации и множества десятков или сотен тысяч строк кода для реализации.И конечным результатом был бы &quot;непрозрачный блок&quot;,недоступный без специализированных инструментов.</target>
        </trans-unit>
        <trans-unit id="4938c1fbe50ea261772ee32f2ec000b4cb6af37b" translate="yes" xml:space="preserve">
          <source>The powersafe overwrite property for individual databases can be specified as the database is opened using the &quot;psow&quot; query parameter with a &lt;a href=&quot;uri&quot;&gt;URI filename&lt;/a&gt;. For example, to always assume powersafe overwrite for a file (perhaps to ensure maximum write performance), open it as</source>
          <target state="translated">Свойство перезаписи powersafe для отдельных баз данных можно указать при открытии базы данных с помощью параметра запроса &amp;laquo;psow&amp;raquo; с &lt;a href=&quot;uri&quot;&gt;именем URI-файла&lt;/a&gt; . Например, чтобы всегда предполагать безопасную перезапись файла (возможно, для обеспечения максимальной производительности записи), откройте его как</target>
        </trans-unit>
        <trans-unit id="67790abdb6b576eda27fab78ba503267f5a114fa" translate="yes" xml:space="preserve">
          <source>The powersafe overwrite property says nothing about the state of the bytes that were written. Those bytes might contain their old values, their new values, random values, or some combination of these. The powersafe overwrite property merely states that writes cannot change bytes outside of the range of bytes written.</source>
          <target state="translated">Перезапись собственности в системе &quot;Powersafe&quot; ничего не говорит о состоянии написанных байтов.Эти байты могут содержать свои старые значения,новые значения,случайные значения или их некоторую комбинацию.Свойство powersafe overwrite (безопасная перезапись)просто заявляет,что записываемый байт не может быть изменён за пределами диапазона записанных байтов.</target>
        </trans-unit>
        <trans-unit id="1389e8d5f9998cc48b0c99ae215e31d8f358ccd0" translate="yes" xml:space="preserve">
          <source>The pragma command is specific to SQLite and is not compatible with any other SQL database engine.</source>
          <target state="translated">Прагматическая команда специфична для SQLite и не совместима ни с каким другим движком баз данных SQL.</target>
        </trans-unit>
        <trans-unit id="f45ce9f6459acccc6664213a9c9d236d0392b096" translate="yes" xml:space="preserve">
          <source>The pragma is like &lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;integrity_check&lt;/a&gt; except that it does not verify UNIQUE constraints and does not verify that index content matches table content. By skipping UNIQUE and index consistency checks, quick_check is able to run faster. PRAGMA quick_check runs in O(N) time whereas &lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;PRAGMA integrity_check&lt;/a&gt; requires O(NlogN) time where N is the total number of rows in the database. Otherwise the two pragmas are the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9cdfdccce2f8d840c93537988a1d96c50df274" translate="yes" xml:space="preserve">
          <source>The pragma is like &lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;integrity_check&lt;/a&gt; except that it does not verify UNIQUE constraints and does not verify that index content matches table content. By skipping UNIQUE and index consistency checks, quick_check is able to run much faster than integrity_check. Otherwise the two pragmas are the same.</source>
          <target state="translated">Прагма похожа на &lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;целостность_check,&lt;/a&gt; за исключением того, что она не проверяет ограничения UNIQUE и не проверяет соответствие содержимого индекса содержимому таблицы. Пропуск UNIQUE и проверки целостности индекса, quick_check может работать намного быстрее, чем Integrity_check. В остальном две прагмы одинаковы.</target>
        </trans-unit>
        <trans-unit id="da60401a603e537afbb64f9be897b6e57271b0ee" translate="yes" xml:space="preserve">
          <source>The pre-update hook</source>
          <target state="translated">Крючок до обновления</target>
        </trans-unit>
        <trans-unit id="77a94c0ef3120048af1c78a5031b2bc8f51341cf" translate="yes" xml:space="preserve">
          <source>The pre-update hook.</source>
          <target state="translated">Крючок,который использовался до свидания.</target>
        </trans-unit>
        <trans-unit id="464d49040a7350ab38dd3a440629e97d8425be1c" translate="yes" xml:space="preserve">
          <source>The precautions above are not required in order to use SQLite safely with potentially hostile inputs. However, they do provide an extra layer of defense against zero-day exploits and are encouraged for applications that pass data from untrusted sources into SQLite.</source>
          <target state="translated">Вышеуказанные меры предосторожности не требуются для безопасного использования SQLite с потенциально враждебными входными данными.Тем не менее,они обеспечивают дополнительный уровень защиты от эксплойтов нулевого дня и поощряются для приложений,которые передают данные из недоверенных источников в SQLite.</target>
        </trans-unit>
        <trans-unit id="05bf811875969018cb62c264a6781abc17b442f0" translate="yes" xml:space="preserve">
          <source>The precedence order for ON CONFLICT clauses was changed so that ON CONFLICT clauses on BEGIN statements have a higher precedence than ON CONFLICT clauses on constraints.</source>
          <target state="translated">Порядок приоритета клаузул ПО КОНФЛИТИКЕ был изменен таким образом,что клаузулы ПО КОНФЛИТИКЕ в заявлениях о НАЧАЛОВЕЧЕНИИ имеют больший приоритет,чем клаузулы ПО КОНФЛИТИКЕ в заявлениях об ограничениях.</target>
        </trans-unit>
        <trans-unit id="122c8023ebc9769b59f3a1882e33d76b3169c9fd" translate="yes" xml:space="preserve">
          <source>The preceding paragraphs contain a lot of information. To ease the task of constructing a new VFS for SQLite we offer the following implementation checklist:</source>
          <target state="translated">В предыдущих параграфах содержится много информации.Для облегчения задачи построения новой VFS для SQLite мы предлагаем следующий контрольный список реализации:</target>
        </trans-unit>
        <trans-unit id="661723ea54e783ccd80036c290bfdccff5b43478" translate="yes" xml:space="preserve">
          <source>The precision field, if it is present, must follow the width separated by a single &quot;.&quot; character. If there is no width, then the &quot;.&quot; that introduces the precision immediately follows either the flags (if there are any) or the initial &quot;%&quot;.</source>
          <target state="translated">Поле точности,если оно присутствует,должно следовать ширине,разделенной одним символом &quot;...&quot;.Если ширина отсутствует,то знак &quot;...&quot;,который вводит точность,следует либо за флагами (если таковые имеются),либо за начальным &quot;%&quot;.</target>
        </trans-unit>
        <trans-unit id="1f4e06f8dccb411ae11d13e1945ae927355460b6" translate="yes" xml:space="preserve">
          <source>The precision provided by IEEE 754 Binary64 is sufficient for most computations. For example, if &quot;47.49&quot; represents a price and inflation is running at 2% per year, then the price is going up by about 0.0000000301 dollars per second. The error in the recorded value of 47.49 represents about 66 nanoseconds worth of inflation. So if the 47.49 price is exact when you enter it, then the effects of inflation will cause the true value to exactly equal the value actually stored (47.4900000000000019895196601282805204391479492187) in less than one ten-millionth of a second. Surely that level of precision is sufficient for most purposes?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274c336721e63c209854a5c06e41f1f163132ddd" translate="yes" xml:space="preserve">
          <source>The preferred routine to use is &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt;. The &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; interface is legacy and should be avoided. &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v3()&lt;/a&gt; has an extra &quot;prepFlags&quot; option that is used for special purposes.</source>
          <target state="translated">Предпочтительная процедура - &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v2 ()&lt;/a&gt; . Интерфейс &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare ()&lt;/a&gt; является устаревшим, и его следует избегать. &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v3 ()&lt;/a&gt; имеет дополнительную опцию &quot;PrepFlags&quot;, которая используется для специальных целей.</target>
        </trans-unit>
        <trans-unit id="2a1d33401c2095551ef53ebdb2c936c2ab4e7f75" translate="yes" xml:space="preserve">
          <source>The preferred routine to use is &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt;. The &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare()&lt;/a&gt; interface is legacy and should be avoided. &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v3()&lt;/a&gt; has an extra &quot;prepFlags&quot; option that is used for special purposes.</source>
          <target state="translated">Предпочтительная процедура - &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v2 ()&lt;/a&gt; . Интерфейс &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare ()&lt;/a&gt; является устаревшим, и его следует избегать. &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v3 ()&lt;/a&gt; имеет дополнительную опцию &quot;PrepFlags&quot;, которая используется для специальных целей.</target>
        </trans-unit>
        <trans-unit id="e5802699120466acd022e1fa07d198c436289856" translate="yes" xml:space="preserve">
          <source>The prefix on temporary filenames on Windows is changed from &quot;sqlite&quot; to &quot;etilqs&quot;.</source>
          <target state="translated">Префикс на временных именах файлов в Windows изменен с &quot;sqlite&quot; на &quot;etilqs&quot;.</target>
        </trans-unit>
        <trans-unit id="f3230410aa1ec23cdd51b1c85ef3e6e8a5bf6364" translate="yes" xml:space="preserve">
          <source>The presence of a busy handler does not guarantee that it will be invoked when there is lock contention. If SQLite determines that invoking the busy handler could result in a deadlock, it will go ahead and return &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_BUSY&lt;/a&gt; to the application instead of invoking the busy handler. Consider a scenario where one process is holding a read lock that it is trying to promote to a reserved lock and a second process is holding a reserved lock that it is trying to promote to an exclusive lock. The first process cannot proceed because it is blocked by the second and the second process cannot proceed because it is blocked by the first. If both processes invoke the busy handlers, neither will make any progress. Therefore, SQLite returns &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_BUSY&lt;/a&gt; for the first process, hoping that this will induce the first process to release its read lock and allow the second process to proceed.</source>
          <target state="translated">Наличие обработчика занятости не гарантирует, что он будет вызван при конфликте блокировок. Если SQLite определяет, что вызов обработчика занятости может привести к тупиковой ситуации, он будет продолжать и возвращать &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_BUSY&lt;/a&gt; приложению вместо вызова обработчика занятости. Рассмотрим сценарий, в котором один процесс удерживает блокировку чтения, которую он пытается преобразовать в зарезервированную блокировку, а второй процесс удерживает зарезервированную блокировку, которую он пытается повысить до монопольной блокировки. Первый процесс не может продолжаться, потому что он заблокирован вторым, а второй процесс не может продолжаться, потому что он заблокирован первым. Если оба процесса вызывают обработчики занятости, ни один из них не продвинется. Следовательно, SQLite возвращает &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_BUSY&lt;/a&gt;для первого процесса, надеясь, что это заставит первый процесс снять блокировку чтения и позволить второму процессу продолжить работу.</target>
        </trans-unit>
        <trans-unit id="f52f9d0c779543db7a531d457708b0c4e1e3b230" translate="yes" xml:space="preserve">
          <source>The presence of a busy handler does not guarantee that it will be invoked when there is lock contention. If SQLite determines that invoking the busy handler could result in a deadlock, it will go ahead and return &lt;a href=&quot;../rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt; to the application instead of invoking the busy handler. Consider a scenario where one process is holding a read lock that it is trying to promote to a reserved lock and a second process is holding a reserved lock that it is trying to promote to an exclusive lock. The first process cannot proceed because it is blocked by the second and the second process cannot proceed because it is blocked by the first. If both processes invoke the busy handlers, neither will make any progress. Therefore, SQLite returns &lt;a href=&quot;../rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt; for the first process, hoping that this will induce the first process to release its read lock and allow the second process to proceed.</source>
          <target state="translated">Наличие обработчика занятости не гарантирует, что он будет вызван при конфликте блокировок. Если SQLite определяет, что вызов обработчика занятости может привести к тупиковой ситуации, он будет продолжать и возвращать &lt;a href=&quot;../rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt; приложению вместо вызова обработчика занятости. Рассмотрим сценарий, в котором один процесс удерживает блокировку чтения, которую он пытается преобразовать в зарезервированную блокировку, а второй процесс удерживает зарезервированную блокировку, которую он пытается повысить до монопольной блокировки. Первый процесс не может продолжаться, потому что он заблокирован вторым, а второй процесс не может продолжаться, потому что он заблокирован первым. Если оба процесса вызывают обработчики занятости, ни один из них не продвинется. Следовательно, SQLite возвращает &lt;a href=&quot;../rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt;для первого процесса, надеясь, что это заставит первый процесс снять блокировку чтения и позволить второму процессу продолжить работу.</target>
        </trans-unit>
        <trans-unit id="b2efda84ef1340b69a62f5b61118269d4141c529" translate="yes" xml:space="preserve">
          <source>The presence of a hot journal is our indication that a previous process was trying to commit a transaction but it aborted for some reason prior to the completion of the commit. A hot journal means that the database file is in an inconsistent state and needs to be repaired (by rollback) prior to being used.</source>
          <target state="translated">Наличие горячего журнала-это наш признак того,что предыдущий процесс пытался совершить транзакцию,но она была прервана по каким-то причинам до завершения коммита.Горячий журнал означает,что файл базы данных находится в непоследовательном состоянии и нуждается в ремонте (откатом)перед использованием.</target>
        </trans-unit>
        <trans-unit id="53e2bd6dac9cbbc9b06c74e123d964800e4d3352" translate="yes" xml:space="preserve">
          <source>The presence of the &quot;noskipscan&quot; token on the sqlite_stat1.stat field of an index prevents that index from being used with the &lt;a href=&quot;optoverview#skipscan&quot;&gt;skip-scan optimization&lt;/a&gt;.</source>
          <target state="translated">Наличие токена &amp;laquo;noskipscan&amp;raquo; в поле sqlite_stat1.stat индекса предотвращает использование этого индекса при &lt;a href=&quot;optoverview#skipscan&quot;&gt;оптимизации&lt;/a&gt; с пропуском сканирования .</target>
        </trans-unit>
        <trans-unit id="a01f573624c54e96d01f0d23d0ba8b3593807a0a" translate="yes" xml:space="preserve">
          <source>The presentation of the query planner problem above is a simplification. The costs are estimates. We cannot know what the true cost of running a loop is until we actually run the loop. SQLite makes guesses for the cost of running a loop based on the availability of indexes and constraints found in the WHERE clause. These guesses are usually pretty good, but they can sometimes be off. Using the &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; command to collect additional statistical information about the database can sometimes enable SQLite to make better guesses about the cost.</source>
          <target state="translated">Представленная выше проблема планировщика запросов является упрощением. Стоимость ориентировочная. Мы не можем знать, какова истинная стоимость выполнения цикла, пока не запустим цикл. SQLite делает предположения о стоимости выполнения цикла на основе доступности индексов и ограничений, найденных в предложении WHERE. Эти предположения обычно довольно хороши, но иногда они могут быть ошибочными. Использование команды &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; для сбора дополнительной статистической информации о базе данных иногда позволяет SQLite делать более точные предположения о стоимости.</target>
        </trans-unit>
        <trans-unit id="1c32ea8c1623df88595d5e28c3a4322ef70e185f" translate="yes" xml:space="preserve">
          <source>The preupdate hook interfaces were originally added to support the &lt;a href=&quot;sessionintro&quot;&gt;session&lt;/a&gt; extension.</source>
          <target state="translated">Интерфейсы ловушек перед обновлением были изначально добавлены для поддержки расширения &lt;a href=&quot;sessionintro&quot;&gt;сеанса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54aaab8c82da084a0f8a9658f2bc76535e494e38" translate="yes" xml:space="preserve">
          <source>The preupdate hook only fires for changes to real database tables; the preupdate hook is not invoked for changes to &lt;a href=&quot;../vtab&quot;&gt;virtual tables&lt;/a&gt; or to system tables like sqlite_master or sqlite_stat1.</source>
          <target state="translated">Ловушка preupdate срабатывает только при изменении реальных таблиц базы данных; ловушка preupdate не вызывается для изменений &lt;a href=&quot;../vtab&quot;&gt;виртуальных&lt;/a&gt; или системных таблиц, таких как sqlite_master или sqlite_stat1.</target>
        </trans-unit>
        <trans-unit id="56711536eb144f6abbe43b67b69a4f340bd68f45" translate="yes" xml:space="preserve">
          <source>The preupdate hook only fires for changes to real database tables; the preupdate hook is not invoked for changes to &lt;a href=&quot;../vtab&quot;&gt;virtual tables&lt;/a&gt; or to system tables like sqlite_sequence or sqlite_stat1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f619ca19c48dc2cd5df5d0de6abefa9c15ce6509" translate="yes" xml:space="preserve">
          <source>The preupdate hook only fires for changes to real database tables; the preupdate hook is not invoked for changes to &lt;a href=&quot;vtab&quot;&gt;virtual tables&lt;/a&gt; or to system tables like sqlite_master or sqlite_stat1.</source>
          <target state="translated">Ловушка preupdate срабатывает только при изменении реальных таблиц базы данных; ловушка preupdate не вызывается для изменений &lt;a href=&quot;vtab&quot;&gt;виртуальных&lt;/a&gt; или системных таблиц, таких как sqlite_master или sqlite_stat1.</target>
        </trans-unit>
        <trans-unit id="f6985f034f86292cf6702a3b24e4e0140c1d7b08" translate="yes" xml:space="preserve">
          <source>The preupdate hook only fires for changes to real database tables; the preupdate hook is not invoked for changes to &lt;a href=&quot;vtab&quot;&gt;virtual tables&lt;/a&gt; or to system tables like sqlite_sequence or sqlite_stat1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548d335209dbce4d25a40d42ac27b0b5a00affc4" translate="yes" xml:space="preserve">
          <source>The previous discussion has treated searching and sorting as separate topics. But in practice, it is often the case that one wants to search and sort at the same time. Fortunately, it is possible to do this using a single index.</source>
          <target state="translated">В предыдущей дискуссии поиск и сортировка рассматривались как отдельные темы.Но на практике часто бывает так,что хочется искать и сортировать одновременно.К счастью,это можно сделать с помощью одного индекса.</target>
        </trans-unit>
        <trans-unit id="5a894252915223aa28176cd8caebb845eabbbe5b" translate="yes" xml:space="preserve">
          <source>The previous example is a specific case of a more general problem: The state of an SQLite database is controlled by both the database file and the journal file. In a quiescent state, the journal file does not exist and only the database file matters. But if the journal file does exist, it must be kept together with the database to avoid corruption. The following actions are all likely to lead to corruption:</source>
          <target state="translated">Предыдущий пример является частным случаем более общей проблемы:состояние базы данных SQLite контролируется как файлом базы данных,так и файлом журнала.В состоянии покоя файл журнала не существует и имеет значение только файл БД.Но если файл журнала действительно существует,то во избежание повреждения его необходимо хранить вместе с БД.Все перечисленные ниже действия могут привести к коррупции:</target>
        </trans-unit>
        <trans-unit id="96495b049cd011fd87b80d69ae6b3a8f79a60e9a" translate="yes" xml:space="preserve">
          <source>The previous example will return every row for which the _shape overlaps the polygon in the $query_polygon parameter. The geopoly_within() function works similarly, but only returns rows for which the _shape is completely contained within $query_polygon.</source>
          <target state="translated">В предыдущем примере будет возвращена каждая строка,для которой _shape перекрывает полигон в параметре $query_polygon.Функция geopoly_within()работает аналогично,но возвращает только те строки,для которых _shape полностью содержится в $query_polygon.</target>
        </trans-unit>
        <trans-unit id="493e14ba39e9f9ab43ab64d3b6be4b87292ba69a" translate="yes" xml:space="preserve">
          <source>The previous example, SQLite uses index &quot;i1&quot; to optimize a WHERE clause term of the form (a=?) - in this case &quot;a=1&quot;. The previous example could not use a &lt;a href=&quot;queryplanner#covidx&quot;&gt;covering index&lt;/a&gt;, but the following example can, and that fact is reflected in the output:</source>
          <target state="translated">В предыдущем примере SQLite использует индекс &amp;laquo;i1&amp;raquo; для оптимизации условия предложения WHERE формы (a =?) - в данном случае &amp;laquo;a = 1&amp;raquo;. В предыдущем примере нельзя было использовать &lt;a href=&quot;queryplanner#covidx&quot;&gt;индекс покрытия&lt;/a&gt; , но в следующем примере можно, и этот факт отражен в выходных данных:</target>
        </trans-unit>
        <trans-unit id="69c7b95e4071269d47577736bbe07ea0a083b117" translate="yes" xml:space="preserve">
          <source>The previous fix was not quite right. This one seems to work better.</source>
          <target state="translated">Предыдущее исправление было не совсем верным.Эта,кажется,работает лучше.</target>
        </trans-unit>
        <trans-unit id="fdab229cc2f18edd4b33bcf4f2dc07383013038b" translate="yes" xml:space="preserve">
          <source>The previous paragraph describes what happens when the synchronous pragma setting is &quot;full&quot;.</source>
          <target state="translated">В предыдущем параграфе описывается,что происходит,когда синхронная установка прагмы &quot;переполнена&quot;.</target>
        </trans-unit>
        <trans-unit id="af577bd70a120b3a01a3ee4e9c639a65b514f294" translate="yes" xml:space="preserve">
          <source>The previous paragraph is also true (separate database connections are isolated from one another) in &lt;a href=&quot;sharedcache&quot;&gt;shared cache mode&lt;/a&gt; as long as the &lt;a href=&quot;pragma#pragma_read_uncommitted&quot;&gt;read_uncommitted pragma&lt;/a&gt; remains turned off. The &lt;a href=&quot;pragma#pragma_read_uncommitted&quot;&gt;read_uncommitted pragma&lt;/a&gt; is off by default and so if the application does nothing to turn it on, it will remain off. Hence, unless the &lt;a href=&quot;pragma#pragma_read_uncommitted&quot;&gt;read_uncommitted pragma&lt;/a&gt; is used to change the default behavior, changes made by one database connection are invisible to readers on a different database connection sharing the same cache until the writer commits its transaction.</source>
          <target state="translated">Предыдущий абзац также верен (отдельные соединения с базой данных изолированы друг от друга) в &lt;a href=&quot;sharedcache&quot;&gt;режиме общего кэша,&lt;/a&gt; пока &lt;a href=&quot;pragma#pragma_read_uncommitted&quot;&gt;прагма read_uncommitted&lt;/a&gt; остается выключенной. &lt;a href=&quot;pragma#pragma_read_uncommitted&quot;&gt;Read_uncommitted Прагма&lt;/a&gt; отключена по умолчанию , и поэтому , если приложение не делает ничего , чтобы включить его, он останется выключенным. Следовательно, если &lt;a href=&quot;pragma#pragma_read_uncommitted&quot;&gt;прагма read_uncommitted&lt;/a&gt; не используется для изменения поведения по умолчанию, изменения, сделанные одним соединением с базой данных, невидимы для читателей в другом соединении с базой данных, использующих один и тот же кеш, пока писатель не зафиксирует свою транзакцию.</target>
        </trans-unit>
        <trans-unit id="4443bdbe2499eab3d6d488e897e8d552fc707661" translate="yes" xml:space="preserve">
          <source>The previous paragraph states that SQLite does not assume that sector writes are atomic. This is true by default. But as of SQLite version 3.5.0, there is a new interface called the Virtual File System (&lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;) interface. The &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; is the only means by which SQLite communicates to the underlying filesystem. The code comes with default VFS implementations for Unix and Windows and there is a mechanism for creating new custom VFS implementations at runtime. In this new VFS interface there is a method called xDeviceCharacteristics. This method interrogates the underlying filesystem to discover various properties and behaviors that the filesystem may or may not exhibit. The xDeviceCharacteristics method might indicate that sector writes are atomic, and if it does so indicate, SQLite will try to take advantage of that fact. But the default xDeviceCharacteristics method for both Unix and Windows does not indicate atomic sector writes and so these optimizations are normally omitted.</source>
          <target state="translated">В предыдущем абзаце говорится, что SQLite не предполагает, что запись в сектор является атомарной. Это верно по умолчанию. Но с версии SQLite 3.5.0 появился новый интерфейс, называемый интерфейсом виртуальной файловой системы ( &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; ). &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;- единственное средство, с помощью которого SQLite взаимодействует с базовой файловой системой. Код поставляется с реализациями VFS по умолчанию для Unix и Windows, и есть механизм для создания новых пользовательских реализаций VFS во время выполнения. В этом новом интерфейсе VFS есть метод под названием xDeviceCharacteristics. Этот метод опрашивает нижележащую файловую систему, чтобы обнаружить различные свойства и поведение, которые файловая система может или не может проявлять. Метод xDeviceCharacteristics может указывать на то, что запись в сектор является атомарной, и если это указывает, SQLite попытается воспользоваться этим фактом. Но метод xDeviceCharacteristics по умолчанию как для Unix, так и для Windows не указывает запись атомарного сектора, и поэтому эти оптимизации обычно не выполняются.</target>
        </trans-unit>
        <trans-unit id="342bf4dfcd7ddbf3e5538a244e6458410341ab97" translate="yes" xml:space="preserve">
          <source>The previous paragraphs describe the behavior of temporary databases under the default SQLite configuration. An application can use the &lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;temp_store pragma&lt;/a&gt; and the &lt;a href=&quot;compile#temp_store&quot;&gt;SQLITE_TEMP_STORE&lt;/a&gt; compile-time parameter to force temporary databases to behave as pure in-memory databases, if desired.</source>
          <target state="translated">В предыдущих абзацах описывается поведение временных баз данных в конфигурации SQLite по умолчанию. Приложение может использовать &lt;a href=&quot;pragma#pragma_temp_store&quot;&gt;прагму temp_store&lt;/a&gt; и параметр &lt;a href=&quot;compile#temp_store&quot;&gt;времени&lt;/a&gt; компиляции SQLITE_TEMP_STORE, чтобы при необходимости временные базы данных вели себя как чистые базы данных в памяти.</target>
        </trans-unit>
        <trans-unit id="6e1f293bab97b2b5f7895a766acf571a1f59dca9" translate="yes" xml:space="preserve">
          <source>The previous query is equivalent to the following:</source>
          <target state="translated">Предыдущий запрос эквивалентен следующему:</target>
        </trans-unit>
        <trans-unit id="2a8f5ff04cf0666d4b31c9cd45d0419954ccab05" translate="yes" xml:space="preserve">
          <source>The previous step created circle (1) in the diagram above. This step will create circle (2). Run the following command:</source>
          <target state="translated">На предыдущем этапе был создан круг (1)на диаграмме выше.На этом шаге будет создана окружность (2).Выполните следующую команду:</target>
        </trans-unit>
        <trans-unit id="73d4cf9a53d1a814d3d61247ac59a2dcf02d4a89" translate="yes" xml:space="preserve">
          <source>The primary page cache implementation is in the &lt;a href=&quot;https://sqlite.org/src/file/src/pager.c&quot;&gt;pager.c&lt;/a&gt; file. &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt; logic is in the separate &lt;a href=&quot;https://sqlite.org/src/file/src/wal.c&quot;&gt;wal.c&lt;/a&gt;. In-memory caching is implemented by the &lt;a href=&quot;https://sqlite.org/src/file/src/pcache.c&quot;&gt;pcache.c&lt;/a&gt; and &lt;a href=&quot;https://sqlite.org/src/file/src/pcache1.c&quot;&gt;pcache1.c&lt;/a&gt; files. The interface between page cache subsystem and the rest of SQLite is defined by the header file &lt;a href=&quot;https://sqlite.org/src/file/src/pager.h&quot;&gt;pager.h&lt;/a&gt;.</source>
          <target state="translated">Реализация кэша первичной страницы находится в файле &lt;a href=&quot;https://sqlite.org/src/file/src/pager.c&quot;&gt;pager.c&lt;/a&gt; . &lt;a href=&quot;wal&quot;&gt;Режим WAL&lt;/a&gt; логика находится в отдельном &lt;a href=&quot;https://sqlite.org/src/file/src/wal.c&quot;&gt;wal.c&lt;/a&gt; . Кэширование в памяти реализуется &lt;a href=&quot;https://sqlite.org/src/file/src/pcache.c&quot;&gt;файлами pcache.c&lt;/a&gt; и &lt;a href=&quot;https://sqlite.org/src/file/src/pcache1.c&quot;&gt;pcache1.c&lt;/a&gt; . Интерфейс между подсистемой кеширования страниц и остальной частью SQLite определяется заголовочным файлом &lt;a href=&quot;https://sqlite.org/src/file/src/pager.h&quot;&gt;pager.h&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="01bd1fccd0eb574f8649d147f7495318ef2ed3aa" translate="yes" xml:space="preserve">
          <source>The primary use of Lemon is to create the SQL language parser. A grammar file (&lt;a href=&quot;https://sqlite.org/src/file/src/parse.y&quot;&gt;parse.y&lt;/a&gt;) is compiled by Lemon into parse.c and parse.h. The parse.c file is incorporated into the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt; without further modification.</source>
          <target state="translated">Основное использование Lemon - создание синтаксического анализатора языка SQL. Файл грамматики ( &lt;a href=&quot;https://sqlite.org/src/file/src/parse.y&quot;&gt;parse.y&lt;/a&gt; ) компилируется Lemon в parse.c и parse.h. Файл parse.c включается в &lt;a href=&quot;amalgamation&quot;&gt;объединение&lt;/a&gt; без дальнейших изменений.</target>
        </trans-unit>
        <trans-unit id="c694d6e20cc8030ef2cf2b05c8cbbbe628062074" translate="yes" xml:space="preserve">
          <source>The principal task of an SQL database engine is to evaluate SQL statements of SQL. To accomplish this, the developer needs two objects:</source>
          <target state="translated">Основной задачей движка базы данных SQL является оценка SQL выражений SQL.Для этого разработчику необходимы два объекта:</target>
        </trans-unit>
        <trans-unit id="cfcb012162b1a505da1f19d8786ad1f42bcacc75" translate="yes" xml:space="preserve">
          <source>The principle difference between FTS3/4 and FTS5 is that in FTS3/4, each instance-list is stored as a single large database record, whereas in FTS5 large instance-lists are divided between multiple database records. This has the following implications for dealing with large databases that contain large lists:</source>
          <target state="translated">Принципиальное различие между FTS3/4 и FTS5 заключается в том,что в FTS3/4 каждый экземпляр-лист хранится как одна большая запись базы данных,в то время как в FTS5 большие экземпляры-листы разделены между несколькими записями базы данных.Это имеет следующие последствия для работы с большими базами данных,содержащими большие списки:</target>
        </trans-unit>
        <trans-unit id="d7231b054e5abc6f0cfc5cc85f7e3279373f74d4" translate="yes" xml:space="preserve">
          <source>The printf() in SQLite supports new non-standard substitution types (&lt;a href=&quot;printf#percentq&quot;&gt;%q&lt;/a&gt;, &lt;a href=&quot;printf#percentq&quot;&gt;%Q&lt;/a&gt;, &lt;a href=&quot;printf#percentw&quot;&gt;%w&lt;/a&gt;, and &lt;a href=&quot;printf#percentz&quot;&gt;%z&lt;/a&gt;) that are useful both internally to SQLite and to applications using SQLite. Standard library printf()s cannot normally be extended in this way.</source>
          <target state="translated">Printf () в SQLite поддерживает новые нестандартные типы подстановки ( &lt;a href=&quot;printf#percentq&quot;&gt;% q&lt;/a&gt; , &lt;a href=&quot;printf#percentq&quot;&gt;% Q&lt;/a&gt; , &lt;a href=&quot;printf#percentw&quot;&gt;% w&lt;/a&gt; и &lt;a href=&quot;printf#percentz&quot;&gt;% z&lt;/a&gt; ), которые полезны как внутри SQLite, так и для приложений, использующих SQLite. Стандартная библиотека printf () s обычно не может быть расширена таким образом.</target>
        </trans-unit>
        <trans-unit id="0592c94ffabf868a1145cae373098959875b4ffd" translate="yes" xml:space="preserve">
          <source>The printf(FORMAT,...) SQL function works like the &lt;a href=&quot;c3ref/mprintf&quot;&gt;sqlite3_mprintf()&lt;/a&gt; C-language function and the printf() function from the standard C library. The first argument is a format string that specifies how to construct the output string using values taken from subsequent arguments. If the FORMAT argument is missing or NULL then the result is NULL. The %n format is silently ignored and does not consume an argument. The %p format is an alias for %X. The %z format is interchangeable with %s. If there are too few arguments in the argument list, missing arguments are assumed to have a NULL value, which is translated into 0 or 0.0 for numeric formats or an empty string for %s. See the &lt;a href=&quot;printf&quot;&gt;built-in printf()&lt;/a&gt; documentation for additional information.</source>
          <target state="translated">Функция SQL printf (FORMAT, ...) работает так же, как функция языка C &lt;a href=&quot;c3ref/mprintf&quot;&gt;sqlite3_mprintf ()&lt;/a&gt; и функция printf () из стандартной библиотеки C. Первый аргумент - это строка формата, указывающая, как построить строку вывода с использованием значений, взятых из последующих аргументов. Если аргумент FORMAT отсутствует или равен NULL, результатом будет NULL. Формат% n игнорируется и не использует аргумент. Формат% p - это псевдоним для% X. Формат% z взаимозаменяем с% s. Если в списке аргументов слишком мало аргументов, предполагается, что отсутствующие аргументы имеют значение NULL, которое преобразуется в 0 или 0,0 для числовых форматов или в пустую строку для% s. Дополнительную информацию см. Во &lt;a href=&quot;printf&quot;&gt;встроенной&lt;/a&gt; документации printf () .</target>
        </trans-unit>
        <trans-unit id="f7aa000e854fa1e51d2a8e3276f08d834816bb0a" translate="yes" xml:space="preserve">
          <source>The private memory cell is initialized to NULL by the first two instructions. Instructions 2 through 13 implement the inner SELECT statement against the examp2 table. Notice that instead of sending the result to a callback or storing the result on a sorter, the result of the query is pushed into the memory cell by instruction 10 and the loop is abandoned by the jump at instruction 11. The jump at instruction at 11 is vestigial and never executes.</source>
          <target state="translated">Первые две инструкции инициализируют личную ячейку памяти в NULL.Инструкции 2-13 реализуют внутреннее утверждение SELECT в сравнении с таблицей Examp2.Обратите внимание,что вместо того,чтобы отправить результат на обратный вызов или сохранить его на сортировщике,результат запроса заталкивается в ячейку памяти по команде 10,и цикл прекращается прыжком по команде 11.Прыжок на инструкцию 11 является рутинным и никогда не выполняется.</target>
        </trans-unit>
        <trans-unit id="576c1ad7241fb816002c325b35c536b5acba643f" translate="yes" xml:space="preserve">
          <source>The problem is that the indexes are not of equal quality. A check-in is likely to only have one child. So the first field of PLINK_I1 will usually narrow down the search to just a single row. But there are thousands and thousands check-ins tagged with &quot;trunk&quot;, so the first field of TAGXREF_I1 will be of little help in narrowing down the search.</source>
          <target state="translated">Проблема в том,что показатели не одинакового качества.Скорее всего,у зарегистрированного ребенка будет только один ребенок.Поэтому первое поле PLINK_I1 обычно сужает поиск до одной строки.Но есть тысячи и тысячи регистраций,помеченных &quot;багажником&quot;,поэтому первое поле TAGXREF_I1 будет малополезно в сужении поиска.</target>
        </trans-unit>
        <trans-unit id="4910b74e848d7f84054aa8b42c2da7951eb8cf1a" translate="yes" xml:space="preserve">
          <source>The problem of dynamic memory allocation, and specifically the problem of a memory allocator breakdown, has been studied by J. M. Robson and the results published as:</source>
          <target state="translated">Проблема динамического выделения памяти,а именно проблема пробоя аллокатора памяти,была изучена Дж.М.Робсоном и результаты опубликованы как:</target>
        </trans-unit>
        <trans-unit id="c0e48a1c7e6fc766c0233c83a22616959f0ed84b" translate="yes" xml:space="preserve">
          <source>The problem of finding the best query plan is equivalent to finding a minimum-cost path through the graph that visits each node exactly once.</source>
          <target state="translated">Проблема нахождения наилучшего плана запроса эквивалентна нахождению минимально затратного пути через граф,который посещает каждый узел ровно один раз.</target>
        </trans-unit>
        <trans-unit id="0f52798620170b176ff3d3af06fd50b65930b59c" translate="yes" xml:space="preserve">
          <source>The problem was fixed on 2011-02-20. The fix first appears in SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_7_6.html&quot;&gt;version 3.7.6&lt;/a&gt; (2011-04-12).</source>
          <target state="translated">Проблема устранена 20 февраля 2011 г. Исправление впервые появляется в SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_7_6.html&quot;&gt;версии 3.7.6&lt;/a&gt; (2011-04-12).</target>
        </trans-unit>
        <trans-unit id="0a9231ded77785fbf75b111ccef695ba60c384a1" translate="yes" xml:space="preserve">
          <source>The problem with looking up information by rowid is that you probably do not care what the price of &quot;item 4&quot; is - you want to know the price of peaches. And so a rowid lookup is not helpful.</source>
          <target state="translated">Проблема с поиском информации по rowid заключается в том,что вам наверняка все равно,какова цена &quot;п.4&quot;-вы хотите знать цену персиков.И поэтому поиск по шумовке не поможет.</target>
        </trans-unit>
        <trans-unit id="5ca928318271d59121bcae8c1e00c91157b277dc" translate="yes" xml:space="preserve">
          <source>The problem with this latter query is that it must apply the contained_in() function to millions of entries in the demo_data table. The use of the R*Tree in the penultimate query reduces the number of calls to contained_in() function to a small subset of the entire table. The R*Tree index did not find the exact answer itself, it merely limited the search space.</source>
          <target state="translated">Проблема этого последнего запроса заключается в том,что он должен применить функцию contain_in()к миллионам записей в таблице demo_data.Использование R*Tree в предпоследнем запросе уменьшает количество вызовов функции contain_in()до небольшого подмножества всей таблицы.Сам по себе индекс R*Tree не нашел точного ответа,а лишь ограничил пространство поиска.</target>
        </trans-unit>
        <trans-unit id="4d80ba47d569d0e4a2a3e8f3108543e7f76afec3" translate="yes" xml:space="preserve">
          <source>The procedure used to detect a</source>
          <target state="translated">Процедура,используемая для обнаружения</target>
        </trans-unit>
        <trans-unit id="7c5ac2fd9c78337a35d0c9980fe79b8e26f93a08" translate="yes" xml:space="preserve">
          <source>The process is explained at &lt;a href=&quot;http://wiki.tcl-lang.org/21708&quot;&gt;http://wiki.tcl-lang.org/21708&lt;/a&gt;.</source>
          <target state="translated">Этот процесс объясняется на &lt;a href=&quot;http://wiki.tcl-lang.org/21708&quot;&gt;http://wiki.tcl-lang.org/21708&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6eeaa105f7c556f91bf9c6156b767ca4d840a8c0" translate="yes" xml:space="preserve">
          <source>The progress callback can be used to display the status of a lengthy query or to process GUI events during a lengthy query.</source>
          <target state="translated">Обратный вызов прогресса может использоваться для отображения состояния длинного запроса или для обработки GUI-событий во время длинного запроса.</target>
        </trans-unit>
        <trans-unit id="c69ceeecbdd66434afc39e336822e8ab81198858" translate="yes" xml:space="preserve">
          <source>The progress handler callback must not do anything that will modify the database connection that invoked the progress handler. Note that &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; and &lt;a href=&quot;#sqlite3_step&quot;&gt;sqlite3_step()&lt;/a&gt; both modify their database connections for the meaning of &quot;modify&quot; in this paragraph.</source>
          <target state="translated">Обратный вызов обработчика прогресса не должен делать ничего, что могло бы изменить соединение с базой данных, вызвавшее обработчик прогресса. Обратите внимание, что &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v2 ()&lt;/a&gt; и &lt;a href=&quot;#sqlite3_step&quot;&gt;sqlite3_step ()&lt;/a&gt; оба изменяют свои соединения с базой данных для значения слова &amp;laquo;изменить&amp;raquo; в этом абзаце.</target>
        </trans-unit>
        <trans-unit id="cfdeee9bdc15af91672d8ad9f38656051ea8a13d" translate="yes" xml:space="preserve">
          <source>The progress handler callback must not do anything that will modify the database connection that invoked the progress handler. Note that &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; and &lt;a href=&quot;step&quot;&gt;sqlite3_step()&lt;/a&gt; both modify their database connections for the meaning of &quot;modify&quot; in this paragraph.</source>
          <target state="translated">Обратный вызов обработчика прогресса не должен делать ничего, что могло бы изменить соединение с базой данных, вызвавшее обработчик прогресса. Обратите внимание, что &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v2 ()&lt;/a&gt; и &lt;a href=&quot;step&quot;&gt;sqlite3_step ()&lt;/a&gt; оба изменяют свои соединения с базой данных для значения слова &amp;laquo;изменить&amp;raquo; в этом абзаце.</target>
        </trans-unit>
        <trans-unit id="d0b8dc8c8f3e20ba03797e52e7e128023b09d0a3" translate="yes" xml:space="preserve">
          <source>The properties of the &lt;a href=&quot;lang_droptable&quot;&gt;DROP TABLE&lt;/a&gt; and &lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE&lt;/a&gt; commands described above only apply if foreign keys are enabled. If the user considers them undesirable, then the workaround is to use &lt;a href=&quot;pragma#pragma_foreign_keys&quot;&gt;PRAGMA foreign_keys&lt;/a&gt; to disable foreign key constraints before executing the DROP or ALTER TABLE command. Of course, while foreign key constraints are disabled, there is nothing to stop the user from violating foreign key constraints and thus creating an internally inconsistent database.</source>
          <target state="translated">Свойства команд &lt;a href=&quot;lang_droptable&quot;&gt;DROP TABLE&lt;/a&gt; и &lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE,&lt;/a&gt; описанные выше, применяются только в том случае, если включены внешние ключи. Если пользователь считает их нежелательными, то обходной путь заключается в использовании &lt;a href=&quot;pragma#pragma_foreign_keys&quot;&gt;PRAGMA foreign_keys&lt;/a&gt; для отключения ограничений внешнего ключа перед выполнением команды DROP или ALTER TABLE. Конечно, хотя ограничения внешнего ключа отключены, ничто не мешает пользователю нарушить ограничения внешнего ключа и тем самым создать внутренне противоречивую базу данных.</target>
        </trans-unit>
        <trans-unit id="12341c72ae5851f82e7e9d06ed859f6acb79d027" translate="yes" xml:space="preserve">
          <source>The prover that determines whether any column of the right-hand table of a LEFT JOIN must be non-NULL in the WHERE clause is imperfect. It sometimes returns a false negative. In other words, it sometimes fails to reduce the strength of a LEFT JOIN when doing so was in fact possible. For example, the prover does not know the &lt;a href=&quot;lang_datefunc&quot;&gt;datetime() SQL function&lt;/a&gt; will always return NULL if its first argument is NULL, and so it will not recognize that the LEFT JOIN in the following query could be strength-reduced:</source>
          <target state="translated">Программа доказательства, которая определяет, должен ли какой-либо столбец правой таблицы LEFT JOIN иметь значение, отличное от NULL в предложении WHERE, является несовершенным. Иногда возвращает ложноотрицательный результат. Другими словами, иногда не удается уменьшить силу LEFT JOIN, когда это было фактически возможно. Например, доказывающая сторона не знает, что &lt;a href=&quot;lang_datefunc&quot;&gt;функция SQL datetime ()&lt;/a&gt; всегда будет возвращать NULL, если ее первый аргумент - NULL, и поэтому он не распознает, что LEFT JOIN в следующем запросе может быть уменьшено:</target>
        </trans-unit>
        <trans-unit id="48a058bacf71fa48c37c493961b3f8857c5bcde0" translate="yes" xml:space="preserve">
          <source>The psow query parameter overrides the &lt;a href=&quot;psow&quot;&gt;powersafe overwrite&lt;/a&gt; property of the database file being opened. The psow query parameter works with the default windows and unix &lt;a href=&quot;vfs&quot;&gt;VFSes&lt;/a&gt; but might be a no-op for other proprietary or non-standard VFSes.</source>
          <target state="translated">Параметр запроса &lt;a href=&quot;psow&quot;&gt;psow переопределяет&lt;/a&gt; свойство перезаписи в режиме powerafe для открываемого файла базы данных. Параметр запроса psow работает с Windows по умолчанию и &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; Unix, но может быть недоступен для других проприетарных или нестандартных VFS.</target>
        </trans-unit>
        <trans-unit id="ffe108cd06e0c16c268bec90ba5007639fcc32ef" translate="yes" xml:space="preserve">
          <source>The pthreads interface provides the pthread_cond_wait() function. This function allows the caller to simultaneously release a mutex and start waiting for an asynchronous signal. Using this function, a &quot;fired&quot; flag and a mutex, the race-condition described above may be eliminated as follows:</source>
          <target state="translated">Интерфейс pthreads предоставляет функцию pthread_cond_wait().Эта функция позволяет вызывающему абоненту одновременно освободить мьютекс и начать ожидание асинхронного сигнала.Используя эту функцию,&quot;выстрел&quot; флага и мьютекс,описанное выше состояние гонки может быть устранено следующим образом:</target>
        </trans-unit>
        <trans-unit id="5730c4be2fce644af4a3a0b4f7bf8a21afa9d144" translate="yes" xml:space="preserve">
          <source>The pthreads library is needed to make SQLite threadsafe. But since the CLI is single threaded, we could instruct SQLite to build in a non-threadsafe mode and thereby omit the pthreads library:</source>
          <target state="translated">Библиотека pthreads необходима для обеспечения потоковой безопасности SQLite.Но поскольку CLI является однопоточным,мы могли бы инструктировать SQLite строить в неритмически безопасном режиме и тем самым опустить библиотеку pthreads:</target>
        </trans-unit>
        <trans-unit id="ead084e5ac51c3a25e7e77f7295b3ad410aff0a2" translate="yes" xml:space="preserve">
          <source>The purpose of the master journal is to ensure that multi-file transactions are atomic across a power-loss. But if the database files have other settings that compromise integrity across a power-loss event (such as &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous=OFF&lt;/a&gt; or &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;PRAGMA journal_mode=MEMORY&lt;/a&gt;) then the creation of the master journal is omitted, as an optimization.</source>
          <target state="translated">Задача главного журнала - обеспечить атомарность многофайловых транзакций при отключении питания. Но если в файлах базы данных есть другие настройки, которые нарушают целостность при отключении питания (например, &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous = OFF&lt;/a&gt; или &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;PRAGMA journal_mode = MEMORY&lt;/a&gt; ), то создание главного журнала опускается в качестве оптимизации.</target>
        </trans-unit>
        <trans-unit id="80a4c796df15be02f28a9491edc718e0a6ad327d" translate="yes" xml:space="preserve">
          <source>The purpose of the other files and folders is presently unknown to the author but is probably not difficult to figure out.</source>
          <target state="translated">Назначение других файлов и папок в настоящее время неизвестно автору,но,вероятно,нетрудно выяснить.</target>
        </trans-unit>
        <trans-unit id="f221997932c715d1cdc1bd2a990d3e44e81c153a" translate="yes" xml:space="preserve">
          <source>The purpose of the super-journal is to ensure that multi-file transactions are atomic across a power-loss. But if the database files have other settings that compromise integrity across a power-loss event (such as &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous=OFF&lt;/a&gt; or &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;PRAGMA journal_mode=MEMORY&lt;/a&gt;) then the creation of the super-journal is omitted, as an optimization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad934bb2af516663297a114c16808bb7efaf019" translate="yes" xml:space="preserve">
          <source>The purpose of the wal-index is to answer this question quickly:</source>
          <target state="translated">Цель wal-index-быстро ответить на этот вопрос:</target>
        </trans-unit>
        <trans-unit id="138e57468a79af5c77be9bf617137e42c028e084" translate="yes" xml:space="preserve">
          <source>The purpose of this document is to argue in favor of a fourth new category of application file format: An SQLite database file.</source>
          <target state="translated">Целью данного документа является аргументация в пользу четвертой новой категории формата файла заявки:Файл базы данных SQLite.</target>
        </trans-unit>
        <trans-unit id="a73682c963786c3512a8e2606835fb2fa3f30921" translate="yes" xml:space="preserve">
          <source>The purpose of this document is to brief the reader on how SQLite development team functions on a daily basis, as they continuously enhance the SQLite software and work to improve its already high reliability. The document achieves its purpose if a competent developer can be assimilated into the development team quickly after perusing this document.</source>
          <target state="translated">Цель данного документа-рассказать читателю о том,как ежедневно работает команда разработчиков SQLite,поскольку они постоянно совершенствуют программное обеспечение SQLite и работают над повышением его и без того высокой надежности.Документ достигает своей цели,если компетентный разработчик может быть быстро ассимилирован в команду разработчиков после ознакомления с ним.</target>
        </trans-unit>
        <trans-unit id="634e9e567d1f1f2dd99eda8c5536d500fa1e6e07" translate="yes" xml:space="preserve">
          <source>The push-down optimization cannot always be used. For example, if the subquery contains a LIMIT, then pushing down any part of the WHERE clause from the outer query could change the result of the inner query. There are other restrictions, explained in a comment in the source code on the pushDownWhereTerms() routine that implements this optimization.</source>
          <target state="translated">Оптимизация по нажатию не всегда может быть использована.Например,если подзапрос содержит LIMIT,то нажатие любой части выражения WHERE из внешнего запроса может изменить результат внутреннего запроса.Существуют и другие ограничения,описанные в комментарии к рутине pushDownWhereTerms(),реализующей эту оптимизацию.</target>
        </trans-unit>
        <trans-unit id="95403298754cba937ffb2896cd7e77d09dc82fdd" translate="yes" xml:space="preserve">
          <source>The quality management plan was originally composed by going through the description of outputs in section 11 of DO-178B (pages 48 through 56) and writing down those elements that seemed relevant to SQLite. The text will be subsequent revised to track enhancements to the SQLite quality process.</source>
          <target state="translated">Изначально план управления качеством был составлен путем просмотра описания результатов в разделе 11 DO-178B (страницы 48-56)и записи тех элементов,которые казались релевантными для SQLite.Текст будет впоследствии пересмотрен для отслеживания усовершенствований в процессе обеспечения качества SQLite.</target>
        </trans-unit>
        <trans-unit id="06064891cfb2016593d8db9b131661701e81d4c1" translate="yes" xml:space="preserve">
          <source>The query above could be made to run faster by using the FTS &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo&lt;/a&gt; function to determine the number of query term instances that appear in each result. The matchinfo function is much more efficient than the offsets function. Furthermore, the matchinfo function provides extra information regarding the overall number of occurrences of each query term in the entire document set (not just the current row) and the number of documents in which each query term appears. This may be used (for example) to attach a higher weight to less common terms which may increase the overall computed relevancy of those results the user considers more interesting.</source>
          <target state="translated">Вышеупомянутый запрос может выполняться быстрее, используя функцию FTS &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo&lt;/a&gt; для определения количества экземпляров термина запроса, которые появляются в каждом результате. Функция matchinfo намного эффективнее, чем функция смещений. Кроме того, функция matchinfo предоставляет дополнительную информацию об общем количестве вхождений каждого термина запроса во всем наборе документов (а не только в текущей строке) и количестве документов, в которых появляется каждый термин запроса. Это может использоваться (например) для придания более высокого веса менее распространенным терминам, что может увеличить общую вычисленную релевантность тех результатов, которые пользователь считает более интересными.</target>
        </trans-unit>
        <trans-unit id="418f38a31900c8102303fe91cea3cb03a0bfc91a" translate="yes" xml:space="preserve">
          <source>The query above could be rewritten as a join and without the use of row values:</source>
          <target state="translated">Вышеприведенный запрос можно переписать как соединительный и без использования значений строк:</target>
        </trans-unit>
        <trans-unit id="8505932c272eacf13a6ac016c3034294904230a0" translate="yes" xml:space="preserve">
          <source>The query above will return suggestions for the whole input word that begins with $prefix. The $wholeline parameter is all text from the beginning of the line up to the insertion point. The $wholeline parameter is used for context.</source>
          <target state="translated">Запрос,приведенный выше,вернет предложения для всего входного слова,которое начинается с $prefix.Параметр $wholeline-это весь текст от начала строки до точки вставки.Параметр $wholeline используется для контекста.</target>
        </trans-unit>
        <trans-unit id="f9921b4f3858e29c8d8f50be7ccdabc32d452e7c" translate="yes" xml:space="preserve">
          <source>The query above will use the po_parent index to help find the answer, since the po_parent index contains entries for all rows of interest. Note that since po_parent is smaller than a full index, the query will likely run faster too.</source>
          <target state="translated">В вышеприведенном запросе будет использован индекс po_parent для поиска ответа,так как индекс po_parent содержит записи для всех интересующих строк.Обратите внимание,что поскольку po_parent меньше полного индекса,запрос,скорее всего,будет выполняться быстрее.</target>
        </trans-unit>
        <trans-unit id="0190a12968e1ccf51186372beeb26ae3012cb0b9" translate="yes" xml:space="preserve">
          <source>The query above would very quickly locate the id of 1 even if the R*Tree contained millions of entries. The previous is an example of a &quot;contained-within&quot; query. The R*Tree also supports &quot;overlapping&quot; queries. For example, to find all bounding boxes that overlap the Charlotte area:</source>
          <target state="translated">Запрос,заданный выше,очень быстро определил бы идентификатор 1,даже если бы R*дерево содержало миллионы записей.Предыдущий-пример запроса &quot;Содержимое-внутри&quot;.R*дерево также поддерживает &quot;перекрывающиеся&quot; запросы.Например,чтобы найти все ограничивающие поля,которые перекрывают область Шарлотты:</target>
        </trans-unit>
        <trans-unit id="94364d8100096142da610b0a18f63efa10ad070a" translate="yes" xml:space="preserve">
          <source>The query component of a URI may contain parameters that are interpreted either by SQLite itself, or by a &lt;a href=&quot;../vfs&quot; id=&quot;coreuriqueryparameters&quot;&gt;custom VFS implementation&lt;/a&gt;. SQLite and its built-in &lt;a href=&quot;../vfs&quot;&gt;VFSes&lt;/a&gt; interpret the following query parameters:</source>
          <target state="translated">Компонент запроса URI может содержать параметры, которые интерпретируются либо самим SQLite, либо &lt;a href=&quot;../vfs&quot; id=&quot;coreuriqueryparameters&quot;&gt;специальной реализацией VFS&lt;/a&gt; . SQLite и его встроенные &lt;a href=&quot;../vfs&quot;&gt;VFS&lt;/a&gt; интерпретируют следующие параметры запроса:</target>
        </trans-unit>
        <trans-unit id="86e91a7c9e388f3708828edd53ce0492e58dcf0d" translate="yes" xml:space="preserve">
          <source>The query component of a URI may contain parameters that are interpreted either by SQLite itself, or by a &lt;a href=&quot;vfs&quot; id=&quot;coreuriqueryparameters&quot;&gt;custom VFS implementation&lt;/a&gt;. SQLite and its built-in &lt;a href=&quot;vfs&quot;&gt;VFSes&lt;/a&gt; interpret the following query parameters:</source>
          <target state="translated">Компонент запроса URI может содержать параметры, которые интерпретируются либо самим SQLite, либо &lt;a href=&quot;vfs&quot; id=&quot;coreuriqueryparameters&quot;&gt;специальной реализацией VFS&lt;/a&gt; . SQLite и его встроенные &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; интерпретируют следующие параметры запроса:</target>
        </trans-unit>
        <trans-unit id="f6f2f3df836d46d9540098c193cbe7de6978b27d" translate="yes" xml:space="preserve">
          <source>The query contains both a search restriction in the WHERE clause and a sort order in the ORDER BY clause. Both the search and the sort can be accomplished at the same time using the two-column index Idx3.</source>
          <target state="translated">Запрос содержит как ограничение на поиск в пункте WHERE,так и порядок сортировки в пункте ORDER BY.Поиск и сортировка могут быть выполнены одновременно с использованием двухколоночного индекса Idx3.</target>
        </trans-unit>
        <trans-unit id="bb441cf385ae38b5e50765b319372e3b2d5a50b2" translate="yes" xml:space="preserve">
          <source>The query does a binary search on the index to find the subset of rows that have fruit='Orange'. (Because the fruit column is the left-most column of the index and the rows of the index are in sorted order, all such rows will be adjacent.) Then it scans the matching index rows from top to bottom to get the rowids for the original table, and for each rowid does a binary search on the original table to find the price.</source>
          <target state="translated">Запрос выполняет двоичный поиск по индексу,чтобы найти подмножество строк,которые имеют плод='Оранжевый'.(Поскольку столбец фруктов-это самый левый столбец индекса,а строки индекса отсортированы в порядке,все такие строки будут соседними).Затем он сканирует соответствующие строки индекса сверху вниз,чтобы получить рядки для исходной таблицы,и для каждой рядки выполняет двоичный поиск по исходной таблице,чтобы найти цену.</target>
        </trans-unit>
        <trans-unit id="0da70d4a5a91c3bdacf749b9198a4a57a477e008" translate="yes" xml:space="preserve">
          <source>The query is not an aggregate</source>
          <target state="translated">Запрос не является совокупностью</target>
        </trans-unit>
        <trans-unit id="d5463ef5a6e2ace12b54dcf259b0837fe48d0c3a" translate="yes" xml:space="preserve">
          <source>The query loop is built from instructions 5 through 13. Instructions 6 through 8 build a record that contains the azData[] values for a single invocation of the callback. A sort key is generated by instructions 9 through 11. Instruction 12 combines the invocation record and the sort key into a single entry and puts that entry on the sort list.</source>
          <target state="translated">Цикл запросов строится из инструкций 5-13.Инструкции 6-8 строят запись,содержащую значения azData[]для одного вызова обратного вызова.Ключ сортировки генерируется командами с 9 по 11.Инструкция 12 объединяет запись вызова и ключ сортировки в одну запись и помещает эту запись в список сортировки.</target>
        </trans-unit>
        <trans-unit id="b89b1eb2c0211443a7be50a77507c951f5a3834f" translate="yes" xml:space="preserve">
          <source>The query loop is implemented by instructions 8 through 22. The aggregate key specified by the GROUP BY clause is computed by instructions 9 and 10. Instruction 11 causes the appropriate bucket to come into focus. If a bucket with the given key does not already exists, a new bucket is created and control falls through to instructions 12 and 13 which initialize the bucket. If the bucket does already exist, then a jump is made to instruction 14. The values of aggregate functions are updated by the instructions between 11 and 21. Instructions 14 through 18 update memory slot 1 to hold the next value &quot;min(three+four)&quot;. Then the sum of the &quot;four&quot; column is updated by instructions 19 through 21.</source>
          <target state="translated">Цикл запросов реализуется с помощью инструкций 8-22.Совокупный ключ,указанный в пункте GROUP BY,вычисляется с помощью инструкций 9 и 10.Инструкция 11 приводит к тому,что соответствующее ведро попадает в фокус.Если ведро с заданной клавишей еще не существует,создается новое ведро,и управление переходит к инструкциям 12 и 13,которые инициализируют ведро.Если ведро уже существует,то выполняется переход к инструкции 14.Значения агрегатных функций обновляются инструкциями между 11 и 21.Инструкции с 14 по 18 обновляют слот памяти 1 для удержания следующего значения &quot;min(three+four)&quot;.Затем сумма &quot;четырех&quot; столбцов обновляется командами с 19 по 21.</target>
        </trans-unit>
        <trans-unit id="a6ac9b746a0ebf6db3c5dac60c7fc4d3c527912f" translate="yes" xml:space="preserve">
          <source>The query optimizer might translate this into three separate constraints:</source>
          <target state="translated">Оптимизатор запросов может преобразовать это в три отдельных ограничения:</target>
        </trans-unit>
        <trans-unit id="ca7f72fc82a7c6f8223569dbd345a23847f45a71" translate="yes" xml:space="preserve">
          <source>The query optimizer now attempts to implement the ORDER BY clause using an index. Sorting is still used if not suitable index is available.</source>
          <target state="translated">Оптимизатор запросов теперь пытается реализовать выражение ORDER BY с помощью индекса.Сортировка по-прежнему используется,если нет подходящего индекса.</target>
        </trans-unit>
        <trans-unit id="074dd395e411c2a7564e05c9a803ff7d91501e5c" translate="yes" xml:space="preserve">
          <source>The query planner considers the LIMIT clause when estimating the cost of ORDER BY.</source>
          <target state="translated">Планировщик запросов учитывает пункт LIMIT при оценке стоимости ЗАКАЗЧИКА BY.</target>
        </trans-unit>
        <trans-unit id="efb22d31da7b95dc237d9b06fed089e63b961bd2" translate="yes" xml:space="preserve">
          <source>The query planner examines the values of bound parameters to help determine if a partial index is usable.</source>
          <target state="translated">Планировщик запросов изучает значения связанных параметров,чтобы определить,можно ли использовать частичный индекс.</target>
        </trans-unit>
        <trans-unit id="e51e3ffe015829441eac83092590224609d07ba7" translate="yes" xml:space="preserve">
          <source>The query planner in SQLite normally does a terrific job of selecting fast algorithms for running your SQL statements. This is true of the legacy query planner and even more true of the new NGQP. There may be an occasional situation where, due to incomplete information, the query planner selects a suboptimal plan. This will happen less often with the NGQP than with the legacy query planner, but it might still happen. Only in those rare cases do application developers need to get involved and help the query planner to do the right thing. In the common case, the NGQP is just a new enhancement to SQLite that makes the application run a little faster and which requires no new developer thought or action.</source>
          <target state="translated">Планировщик запросов в SQLite обычно делает потрясающую работу по выбору быстрых алгоритмов для выполнения ваших SQL-запросов.Это относится и к старому планировщику запросов,и к новому NGQP.Могут возникать ситуации,когда из-за неполноты информации планировщик запросов выбирает неоптимальный план.Это будет происходить реже в NGQP,чем в старом планировщике запросов,но все же может произойти.Только в этих редких случаях разработчикам приложений необходимо вмешаться и помочь планировщику запросов поступить правильно.В обычном случае NGQP-это просто новое усовершенствование SQLite,которое делает работу приложения немного быстрее и не требует от разработчика новых мыслей или действий.</target>
        </trans-unit>
        <trans-unit id="7056feb20ef72b761795635d81c08e5ed2af62a2" translate="yes" xml:space="preserve">
          <source>The query planner in future versions of SQLite might grow smart enough to make transformations such as the above automatically, in both directions. That is to say, future versions of SQLite might transform queries of the first form into the second, or queries written the second way into the first. As of SQLite version 3.22.0 (2018-01-22), the query planner will flatten the subquery if the outer query does not make use of any user-defined functions or subqueries in its result set. For the examples shown above, however, SQLite implements each of the queries as written.</source>
          <target state="translated">Планировщик запросов в будущих версиях SQLite может вырасти достаточно умным,чтобы автоматически выполнять преобразования,подобные вышеописанным,в обоих направлениях.То есть будущие версии SQLite могут преобразовывать запросы первой формы во вторую или запросы,написанные вторым способом,в первый.Начиная с версии SQLite 3.22.0 (2018-01-22),планировщик запросов будет планировать подзапросы,если внешний запрос не использует никаких пользовательских функций или подзапросов в своем результирующем множестве.Однако в приведенных выше примерах SQLite реализует каждый из запросов в том виде,в котором он был написан.</target>
        </trans-unit>
        <trans-unit id="f9ae7f14e38f472239e8cbf47519f9f962bf6c41" translate="yes" xml:space="preserve">
          <source>The query planner is able to optimize IN operators on &lt;a href=&quot;vtab&quot;&gt;virtual tables&lt;/a&gt; even if the &lt;a href=&quot;vtab#xbestindex&quot;&gt;xBestIndex&lt;/a&gt; method does not set the sqlite3_index_constraint_usage.omit flag of the virtual table column to the left of the IN operator.</source>
          <target state="translated">Планировщик запросов может оптимизировать операторы IN для &lt;a href=&quot;vtab&quot;&gt;виртуальных таблиц,&lt;/a&gt; даже если метод &lt;a href=&quot;vtab#xbestindex&quot;&gt;xBestIndex&lt;/a&gt; не устанавливает флаг sqlite3_index_constraint_usage.omit столбца виртуальной таблицы слева от оператора IN.</target>
        </trans-unit>
        <trans-unit id="4b67d5103aec179badd00d13df4b687ed31a2fd8" translate="yes" xml:space="preserve">
          <source>The query planner is more aggressive about using &lt;a href=&quot;optoverview#autoindex&quot;&gt;automatic indexes&lt;/a&gt; for views and subqueries for which it is not possible to create a persistent index.</source>
          <target state="translated">Планировщик запросов более агрессивно использует &lt;a href=&quot;optoverview#autoindex&quot;&gt;автоматические индексы&lt;/a&gt; для представлений и подзапросов, для которых невозможно создать постоянный индекс.</target>
        </trans-unit>
        <trans-unit id="0ff80f93923c8ea0ed391da80428d773af3f58c7" translate="yes" xml:space="preserve">
          <source>The query planner is now able to use &lt;a href=&quot;partialindex&quot;&gt;partial indexes&lt;/a&gt; that contain AND-connected terms in the WHERE clause.</source>
          <target state="translated">Планировщик запросов теперь может использовать &lt;a href=&quot;partialindex&quot;&gt;частичные индексы&lt;/a&gt; , содержащие термины, соединенные И в предложении WHERE.</target>
        </trans-unit>
        <trans-unit id="f1bf26dc5394aa893fb29edbb88f7b0f3c1a3bf4" translate="yes" xml:space="preserve">
          <source>The query planner loads the content of the statistics tables into memory when the schema is read. Hence, when an application changes the statistics tables directly, SQLite will not immediately notice the changes. An application can force the query planner to reread the statistics tables by running &lt;b&gt;ANALYZE sqlite_master&lt;/b&gt;.</source>
          <target state="translated">Планировщик запросов загружает содержимое таблиц статистики в память при чтении схемы. Следовательно, когда приложение напрямую изменяет таблицы статистики, SQLite не сразу заметит изменения. Приложение может заставить планировщик запросов перечитать таблицы статистики, запустив &lt;b&gt;ANALYZE sqlite_master&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="b54043d2a3881a0e42bb93d2a4b188d8e3b927bd" translate="yes" xml:space="preserve">
          <source>The query planner loads the content of the statistics tables into memory when the schema is read. Hence, when an application changes the statistics tables directly, SQLite will not immediately notice the changes. An application can force the query planner to reread the statistics tables by running &lt;b&gt;ANALYZE sqlite_schema&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764ebb928a21a2403e7ad4384e4177e72689b2ef" translate="yes" xml:space="preserve">
          <source>The query planner must decide between many possible implementations of this query, but two plans in particular are of note:</source>
          <target state="translated">Планировщик запросов должен выбирать между многими возможными реализациями этого запроса,но следует обратить внимание на два плана:</target>
        </trans-unit>
        <trans-unit id="35937457496b4c465e761e374d83f1c328cfb649" translate="yes" xml:space="preserve">
          <source>The query planner now does a better job of optimizing &lt;a href=&quot;vtab&quot;&gt;virtual table&lt;/a&gt; accesses in a 3-way or higher join where constraints on the virtual table are split across two or more other tables of the join.</source>
          <target state="translated">Планировщик запросов теперь лучше справляется с оптимизацией доступа к &lt;a href=&quot;vtab&quot;&gt;виртуальным таблицам&lt;/a&gt; при трехстороннем или более высоком соединении, когда ограничения виртуальной таблицы разделяются между двумя или более другими таблицами соединения.</target>
        </trans-unit>
        <trans-unit id="ecefb9cd6e1de2d9ed81b2814e874ca9b432f553" translate="yes" xml:space="preserve">
          <source>The query planner now prefers to implement FROM-clause subqueries using &lt;a href=&quot;optoverview#coroutines&quot;&gt;co-routines&lt;/a&gt; rather using the &lt;a href=&quot;optoverview#flattening&quot;&gt;query flattener&lt;/a&gt; optimization. Support for the use of co-routines for subqueries may no longer be disabled.</source>
          <target state="translated">Планировщик запросов теперь предпочитает реализовывать подзапросы FROM-clause с помощью &lt;a href=&quot;optoverview#coroutines&quot;&gt;сопрограмм,&lt;/a&gt; а не с помощью оптимизации &lt;a href=&quot;optoverview#flattening&quot;&gt;сглаживания запросов&lt;/a&gt; . Поддержка использования сопрограмм для подзапросов больше не может быть отключена.</target>
        </trans-unit>
        <trans-unit id="39ca8ebd42e9f170c8e29a8cb05c453c4287996d" translate="yes" xml:space="preserve">
          <source>The query planner now recognizes that any column in the right-hand table of a LEFT JOIN can be NULL, even if that column has a NOT NULL constraint. Avoid trying to optimize out NULL tests in those cases. Fix for ticket &lt;a href=&quot;https://www.sqlite.org/src/info/6f2222d550f5b0ee7ed&quot;&gt;6f2222d550f5b0ee7ed&lt;/a&gt;.</source>
          <target state="translated">Планировщик запросов теперь распознает, что любой столбец в правой таблице LEFT JOIN может иметь значение NULL, даже если этот столбец имеет ограничение NOT NULL. Не пытайтесь оптимизировать тесты NULL в таких случаях. Исправление для билета &lt;a href=&quot;https://www.sqlite.org/src/info/6f2222d550f5b0ee7ed&quot;&gt;6f2222d550f5b0ee7ed&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ec8769590db8f2b5c877d645663be729be900155" translate="yes" xml:space="preserve">
          <source>The query planner now uses &lt;a href=&quot;fileformat2#stat4tab&quot;&gt;sqlite_stat4&lt;/a&gt; information (created by &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt;) to help determine if the &lt;a href=&quot;optoverview#skipscan&quot;&gt;skip-scan optimization&lt;/a&gt; is appropriate.</source>
          <target state="translated">Планировщик запросов теперь использует информацию &lt;a href=&quot;fileformat2#stat4tab&quot;&gt;sqlite_stat4&lt;/a&gt; (созданную &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; ), чтобы определить, подходит ли &lt;a href=&quot;optoverview#skipscan&quot;&gt;оптимизация&lt;/a&gt; с пропуском сканирования .</target>
        </trans-unit>
        <trans-unit id="c31a7ce3fe100e3f0ec40a06c5c355aa9ab9699f" translate="yes" xml:space="preserve">
          <source>The query planner used &lt;a href=&quot;fileformat2#stat1tab&quot;&gt;sqlite_stat1&lt;/a&gt;-style statistics for one or more indexes of the table at some point during the lifetime of the current connection.</source>
          <target state="translated">Планировщик запросов использовал статистику в стиле &lt;a href=&quot;fileformat2#stat1tab&quot;&gt;sqlite_stat1&lt;/a&gt; для одного или нескольких индексов таблицы в какой-то момент в течение времени жизни текущего соединения.</target>
        </trans-unit>
        <trans-unit id="a97e7a7c05ace47af23f942a5bb054692500ea21" translate="yes" xml:space="preserve">
          <source>The query planner uses a full scan of a &lt;a href=&quot;partialindex&quot;&gt;partial index&lt;/a&gt; instead of a full scan of the main table, in cases where that makes sense.</source>
          <target state="translated">Планировщик запросов использует полное сканирование &lt;a href=&quot;partialindex&quot;&gt;частичного индекса&lt;/a&gt; вместо полного сканирования основной таблицы в тех случаях, когда это имеет смысл.</target>
        </trans-unit>
        <trans-unit id="5c0c2991e6f563d6716af52b8b617039da1f2fdd" translate="yes" xml:space="preserve">
          <source>The query starts by doing a binary search on the Idx1 index for entries that have fruit='Peach'. SQLite can do this binary search on the Idx1 index but not on the original FruitsForSale table because the rows in Idx1 are sorted by the &quot;fruit&quot; column. Having found a row in the Idx1 index that has fruit='Peach', the database engine can extract the rowid for that row. Then the database engines does a second binary search on the original FruitsForSale table to find the original row that contains fruit='Peach'. From the row in the FruitsForSale table, SQLite can then extract the value of the price column. This procedure is illustrated by &lt;a href=&quot;#fig5&quot;&gt;figure 5&lt;/a&gt;.</source>
          <target state="translated">Запрос начинается с выполнения двоичного поиска по индексу Idx1 записей, в которых есть fruit = 'Peach'. SQLite может выполнять этот двоичный поиск по индексу Idx1, но не по исходной таблице FruitsForSale, потому что строки в Idx1 сортируются по столбцу &quot;фрукты&quot;. Найдя строку в индексе Idx1, у которой есть fruit = 'Peach', механизм базы данных может извлечь rowid для этой строки. Затем движки базы данных выполняют второй бинарный поиск в исходной таблице FruitsForSale, чтобы найти исходную строку, содержащую fruit = 'Peach'. Затем из строки таблицы FruitsForSale SQLite может извлечь значение столбца цен. Эта процедура показана на &lt;a href=&quot;#fig5&quot;&gt;рисунке 5&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d2f0fdfeb4c2c835aff8667a9df0a76c56f4c48" translate="yes" xml:space="preserve">
          <source>The query string is optional. If the query string is present, then all query parameters are passed through into the xOpen method of the underlying &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt;.</source>
          <target state="translated">Строка запроса не является обязательной. Если строка запроса присутствует, то все параметры запроса передаются в метод xOpen базовой &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="85170b302d04cae08fe65e554bbdfb1393e9fe62" translate="yes" xml:space="preserve">
          <source>The query syntax has been revised where necessary to remove ambiguities and to make it possible to escape special characters in query terms.</source>
          <target state="translated">Синтаксис запроса был изменен там,где это необходимо,чтобы удалить неясности и позволить избежать специальных символов в терминах запроса.</target>
        </trans-unit>
        <trans-unit id="6a08992b107064a2b4d32992f6db718c41160975" translate="yes" xml:space="preserve">
          <source>The query_only pragma prevents all changes to database files when enabled.</source>
          <target state="translated">Прагма query_only предотвращает все изменения в файлах базы данных,когда она включена.</target>
        </trans-unit>
        <trans-unit id="c227c47e0d2b0279a9dff3f8b02f840ecf77eb68" translate="yes" xml:space="preserve">
          <source>The quote(X) function returns the text of an SQL literal which is the value of its argument suitable for inclusion into an SQL statement. Strings are surrounded by single-quotes with escapes on interior quotes as needed. BLOBs are encoded as hexadecimal literals. Strings with embedded NUL characters cannot be represented as string literals in SQL and hence the returned string literal is truncated prior to the first NUL.</source>
          <target state="translated">Функция quote(X)возвращает текст SQL-литерала,который является значением его аргумента,подходящим для включения в SQL-оператор.Строки окружены одиночными кавычками с экранированиями на внутренних кавычках по мере необходимости.BLOB кодируются как шестнадцатеричные литералы.Строки со встроенными NUL-символами не могут быть представлены в SQL как строковые литералы,поэтому возвращаемый строковый литерал усекается до первого NUL.</target>
        </trans-unit>
        <trans-unit id="9f63b25a5004d971fa73a7b89854797c36e88a71" translate="yes" xml:space="preserve">
          <source>The random() function provides 64 bits of randomness instead of only 32 bits.</source>
          <target state="translated">Функция random()обеспечивает 64 бита случайности,а не только 32 бита.</target>
        </trans-unit>
        <trans-unit id="db5db9919e511217ef7da4b79216c59c757f004b" translate="yes" xml:space="preserve">
          <source>The random() function returns a pseudo-random integer between -9223372036854775808 and +9223372036854775807.</source>
          <target state="translated">Функция random()возвращает псевдослучайное целое число между -9223372036854775808 и +9223372036854775807.</target>
        </trans-unit>
        <trans-unit id="dc66046ce33b1a2430fa7d3f10cb359cc80fae20" translate="yes" xml:space="preserve">
          <source>The randomblob(N) function return an N-byte blob containing pseudo-random bytes. If N is less than 1 then a 1-byte random blob is returned.</source>
          <target state="translated">Функция randomblob(N)возвращает N-байтовый блок,содержащий псевдослучайные байты.Если N меньше 1,возвращается 1-байтовый случайный блок.</target>
        </trans-unit>
        <trans-unit id="c291d5ba33f13d62c916974b77fcaf954ce3ff7e" translate="yes" xml:space="preserve">
          <source>The rank of the column within the index. (0 means left-most. Key columns come before auxiliary columns.)</source>
          <target state="translated">Ранг столбца внутри индекса.(0 означает самый левый.Ключевые столбцы идут перед вспомогательными).</target>
        </trans-unit>
        <trans-unit id="0b2bd6ab8a45c757d36fc0179def745c6a1bbb66" translate="yes" xml:space="preserve">
          <source>The rank of the column within the index. (0 means left-most.)</source>
          <target state="translated">Ранг столбца внутри индекса.(0 означает самый левый.)</target>
        </trans-unit>
        <trans-unit id="463c4210effd7ad2a8dada3187acf9269beea08a" translate="yes" xml:space="preserve">
          <source>The rank of the column within the table being indexed, or -1 if the index-column is the &lt;a href=&quot;lang_createtable#rowid&quot;&gt;rowid&lt;/a&gt; of the table being indexed and -2 if the &lt;a href=&quot;expridx&quot;&gt;index is on an expression&lt;/a&gt;.</source>
          <target state="translated">Ранг столбца в индексируемой таблице или -1, если индекс-столбец является &lt;a href=&quot;lang_createtable#rowid&quot;&gt;идентификатором строки&lt;/a&gt; индексируемой таблицы, и -2, если &lt;a href=&quot;expridx&quot;&gt;индекс находится в выражении&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="84413b7d19914c0bede4000ce3b0ffb8491410c6" translate="yes" xml:space="preserve">
          <source>The rank of the column within the table being indexed. A value of -1 means &lt;a href=&quot;lang_createtable#rowid&quot;&gt;rowid&lt;/a&gt; and a value of -2 means that an &lt;a href=&quot;expridx&quot;&gt;expression&lt;/a&gt; is being used.</source>
          <target state="translated">Ранг столбца в индексируемой таблице. Значение -1 означает &lt;a href=&quot;lang_createtable#rowid&quot;&gt;rowid,&lt;/a&gt; а значение -2 означает, что используется &lt;a href=&quot;expridx&quot;&gt;выражение&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8754b3bec73ba7fde29d928b708ca495c5b77ae4" translate="yes" xml:space="preserve">
          <source>The rank of word.</source>
          <target state="translated">Чин слова.</target>
        </trans-unit>
        <trans-unit id="2dd609ed9718452c7fad1b16788c833004253127" translate="yes" xml:space="preserve">
          <source>The rank option is used to change the default auxiliary function mapping for the rank column. The option should be set to a text value in the same format as described for &lt;a href=&quot;fts5#sorting_by_auxiliary_function_results&quot;&gt;&quot;rank MATCH ?&quot;&lt;/a&gt; terms above. For example:</source>
          <target state="translated">Опция ранга используется для изменения отображения вспомогательной функции по умолчанию для столбца ранга. Параметр должен быть установлен на текстовое значение в том же формате, как описано для &lt;a href=&quot;fts5#sorting_by_auxiliary_function_results&quot;&gt;&quot;СООТВЕТСТВИЕ ранжированию?&quot; &lt;/a&gt;условия выше. Например:</target>
        </trans-unit>
        <trans-unit id="3e012920d09c510ffee894f9967688d5537ade9a" translate="yes" xml:space="preserve">
          <source>The rate of enhancement for SQLite over the previous five years (2010-2015) is approximately 6 increments of Y per year. The numbering format used by for &lt;a href=&quot;c3ref/c_source_id&quot;&gt;SQLITE_VERSION_NUMBER&lt;/a&gt; and &lt;a href=&quot;c3ref/libversion&quot;&gt;sqlite3_libversion_number()&lt;/a&gt; allows versions up to 3.999.999, which is more than enough for the planned end-of-support date for SQLite in 2050. However, the current tarball naming conventions only reserve two digits for the Y and so the naming format for downloads will need to be revised in about 2030.</source>
          <target state="translated">Скорость улучшения SQLite за предыдущие пять лет (2010-2015) составляет примерно 6 приращений Y в год. Формат нумерации, используемый для &lt;a href=&quot;c3ref/c_source_id&quot;&gt;SQLITE_VERSION_NUMBER&lt;/a&gt; и &lt;a href=&quot;c3ref/libversion&quot;&gt;sqlite3_libversion_number (),&lt;/a&gt; допускает версии до 3.999.999, что более чем достаточно для запланированной даты окончания поддержки SQLite в 2050 году. Однако текущие соглашения об именах архивов резервируют только две цифры для букву Y, поэтому примерно к 2030 году необходимо будет пересмотреть формат именования загрузок.</target>
        </trans-unit>
        <trans-unit id="e8a5095befc118ca6a6fec21354c920d6bd315d2" translate="yes" xml:space="preserve">
          <source>The reader algorithm in the previous paragraphs works correctly, but because frames for page P can appear anywhere within the WAL, the reader has to scan the entire WAL looking for page P frames. If the WAL is large (multiple megabytes is typical) that scan can be slow, and read performance suffers. To overcome this problem, a separate data structure called the wal-index is maintained to expedite the search for frames of a particular page.</source>
          <target state="translated">Алгоритм читателя в предыдущих параграфах работает правильно,но поскольку фреймы для страницы P могут появиться где угодно в пределах WAL,читателю придется сканировать всю WAL в поисках фреймов для страницы P.Если WAL большой (типично несколько мегабайт),то сканирование может быть медленным,а производительность чтения страдает.Для решения этой проблемы поддерживается отдельная структура данных,называемая wal-index,для ускорения поиска фреймов определенной страницы.</target>
        </trans-unit>
        <trans-unit id="3e2fc6a74baa30b6fadb3fd43bce3110d90f198d" translate="yes" xml:space="preserve">
          <source>The readfile(X) SQL function reads the entire content of the file named X and returns that content as a BLOB. This can be used to load content into a table. For example:</source>
          <target state="translated">SQL-функция readfile(X)читает все содержимое файла с именем X и возвращает это содержимое в виде BLOB.Это может быть использовано для загрузки содержимого в таблицу.Например:</target>
        </trans-unit>
        <trans-unit id="f5d4c0c9266d8eca05dca08f98a5cbf6d922d36a" translate="yes" xml:space="preserve">
          <source>The realization that an aggregate query is really two consecutive loops makes it much easier to understand the difference between a WHERE clause and a HAVING clause in SQL query statement. The WHERE clause is a restriction on the first loop and the HAVING clause is a restriction on the second loop. You can see this by adding both a WHERE and a HAVING clause to our example query:</source>
          <target state="translated">Понимание того,что совокупный запрос-это действительно два последовательных цикла,значительно облегчает понимание разницы между выражением WHERE и выражением HAVING в операторе SQL-запроса.Выражение WHERE-это ограничение на первый цикл,а выражение HAVING-на второй.Это можно увидеть,добавив в наш пример запроса и выражение WHERE,и выражение HAVING:</target>
        </trans-unit>
        <trans-unit id="4a5758542d7b569e5728a8a94a0c5f527ec1ddfe" translate="yes" xml:space="preserve">
          <source>The reallocarray() interface is a recent innovation (circa 2014) from the OpenBSD community that grow out of efforts to prevent the next &lt;a href=&quot;http://heartbleed.com&quot;&gt;&quot;heartbleed&quot; bug&lt;/a&gt; by avoiding 32-bit integer arithmetic overflow on memory allocation size computations. The reallocarray() function has both unit-size and count parameters. To allocate memory sufficient to hold an array of N elements each X-bytes in size, one calls &quot;reallocarray(0,X,N)&quot;. This is preferred over the traditional technique of invoking &quot;malloc(X*N)&quot; as reallocarray() eliminates the risk that the X*N multiplication will overflow and cause malloc() to return a buffer that is a different size from what the application expected.</source>
          <target state="translated">Интерфейс reallocarray () - это недавнее нововведение (около 2014 г.) сообщества OpenBSD, которое выросло из усилий по предотвращению следующей &lt;a href=&quot;http://heartbleed.com&quot;&gt;ошибки&lt;/a&gt; с &amp;laquo;сердечным кровотечением&amp;raquo; , избегая 32-битного целочисленного арифметического переполнения при вычислениях размера выделения памяти. Функция reallocarray () имеет параметры как размера единицы, так и числа. Чтобы выделить память, достаточную для хранения массива из N элементов размером каждого X байта, вызывается &amp;laquo;reallocarray (0, X, N)&amp;raquo;. Это предпочтительнее традиционной техники вызова malloc (X * N), поскольку reallocarray () устраняет риск того, что умножение X * N приведет к переполнению и заставит malloc () вернуть буфер, размер которого отличается от того, что приложение ожидается.</target>
        </trans-unit>
        <trans-unit id="a25a89f7da0624003a3e075ec1d5437a5611f942" translate="yes" xml:space="preserve">
          <source>The reason for attempting to read the</source>
          <target state="translated">Причина попытки прочитать</target>
        </trans-unit>
        <trans-unit id="61ed3e5eacc7786aa96400e0606560d6b0c2919c" translate="yes" xml:space="preserve">
          <source>The reason for this is easy to understand: When a document is inserted into the FTS5 table, an entry is added to the full-text index to record the position of each token within the new document. When a document is removed, the original data is required in order to determine the set of entries that need to be removed from the full-text index. So if the data supplied to FTS5 when a row is deleted using this command is different from that used to determine the set of token instances when it was inserted, some full-text index entries may not be correctly deleted, or FTS5 may try to remove index entries that do not exist. This can leave the full-text index in an unpredictable state, making future query results unreliable.</source>
          <target state="translated">Причину этого легко понять:Когда документ вставляется в таблицу FTS5,в полнотекстовый индекс добавляется запись о положении каждого маркера в новом документе.Когда документ удаляется,требуются исходные данные для определения набора записей,которые необходимо удалить из полнотекстового индекса.Таким образом,если данные,поступающие в FTS5 при удалении строки с помощью этой команды,отличаются от данных,используемых для определения набора экземпляров маркеров,когда они были вставлены,некоторые элементы полнотекстового индекса могут быть удалены некорректно,или FTS5 может попытаться удалить несуществующие элементы индекса.Это может привести к тому,что полнотекстовый индекс останется в непредсказуемом состоянии,что сделает результаты будущих запросов ненадежными.</target>
        </trans-unit>
        <trans-unit id="aaf49440241f0d03e40af262860c9b5798f65bc8" translate="yes" xml:space="preserve">
          <source>The reason that the &lt;a href=&quot;c3ref/mprintf&quot;&gt;sqlite3_snprintf()&lt;/a&gt; has its buffer pointer and buffer size arguments reversed from what is found in the standard library snprintf() routine is because there was no snprintf() routine in the standard C library when Hipp was first implementing his version, and he chose a different order than the designers of the standard C library.</source>
          <target state="translated">Причина, по которой &lt;a href=&quot;c3ref/mprintf&quot;&gt;sqlite3_snprintf ()&lt;/a&gt; имеет обратный указатель буфера и аргументы размера буфера по сравнению с подпрограммой snprintf () стандартной библиотеки, заключается в том, что в стандартной библиотеке C не было подпрограммы snprintf (), когда Хипп впервые реализовал свою версию, и он выбрал другой порядок, чем разработчики стандартной библиотеки C.</target>
        </trans-unit>
        <trans-unit id="791eaa4dd6fb2ae12ed4b869340107d40b780f17" translate="yes" xml:space="preserve">
          <source>The reasons why C is the best language to implement SQLite include:</source>
          <target state="translated">Причины,по которым C является лучшим языком для реализации SQLite,включают в себя:</target>
        </trans-unit>
        <trans-unit id="570c3cd1b218e89b5e9796c1a0c8bf3041d5fcd8" translate="yes" xml:space="preserve">
          <source>The recommended fix for this problem is to select a different filesystem. These days, there is a huge selection of high-performance, reliable, patent-free filesystems that support long filenames. Where possible, it is recommended that embedded devices use one of these other filesystems. This will avoid compatibility issues and the danger of &lt;a href=&quot;shortnames#db83corrupt&quot;&gt;database corruption caused by inconsistent use of 8+3 filenames&lt;/a&gt;.</source>
          <target state="translated">Рекомендуемое решение этой проблемы - выбрать другую файловую систему. В наши дни существует огромный выбор высокопроизводительных, надежных, свободных от патентов файловых систем, которые поддерживают длинные имена файлов. По возможности рекомендуется, чтобы встроенные устройства использовали одну из этих других файловых систем. Это позволит избежать проблем с совместимостью и опасности &lt;a href=&quot;shortnames#db83corrupt&quot;&gt;повреждения базы данных из-за непоследовательного использования имен файлов 8 + 3&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25181bcaf1df8e046a1c955d3b9df90abb750621" translate="yes" xml:space="preserve">
          <source>The recommended setting is 0, meaning that double-quoted strings are disallowed in all contexts. However, the default setting is 3 for maximum compatibility with legacy applications.</source>
          <target state="translated">Рекомендуемое значение-0,что означает,что строки в двойных кавычках запрещены во всех контекстах.Однако по умолчанию установлено значение 3 для максимальной совместимости с устаревшими приложениями.</target>
        </trans-unit>
        <trans-unit id="932d02d128af056f356f5d45448ef957094cec8a" translate="yes" xml:space="preserve">
          <source>The recommended usage pattern for the &lt;a href=&quot;pragma#pragma_analysis_limit&quot;&gt;analysis_limit&lt;/a&gt; pragma is like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e4e6885559253d0ddfdbd8cf19b8d22821af1f" translate="yes" xml:space="preserve">
          <source>The recommended way of creating, updating, listing, and extracting an SQLite Archive is to use the &lt;a href=&quot;cli&quot;&gt;sqlite3.exe command-line shell&lt;/a&gt; for SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_23_0.html&quot;&gt;version 3.23.0&lt;/a&gt; (2018-04-02) or later. This CLI supports the -A command-line option that allows easy management of SQLite Archives. The CLI for SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_22_0.html&quot;&gt;version 3.22.0&lt;/a&gt; (2018-01-22) has the &lt;a href=&quot;cli#sqlar&quot;&gt;.archive command&lt;/a&gt; for managing SQLite Archives, but that requires interacting with the shell.</source>
          <target state="translated">Рекомендуемый способ создания, обновления, перечисления и извлечения архива SQLite - использовать &lt;a href=&quot;cli&quot;&gt;оболочку командной строки &lt;/a&gt;&lt;a href=&quot;https://sqlite.org/releaselog/3_23_0.html&quot;&gt;sqlite3.exe&lt;/a&gt; для SQLite версии 3.23.0 (2018-04-02) или новее. Этот интерфейс командной строки поддерживает параметр командной строки -A, который позволяет легко управлять архивами SQLite. В CLI для SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_22_0.html&quot;&gt;версии 3.22.0&lt;/a&gt; (2018-01-22) есть команда &lt;a href=&quot;cli#sqlar&quot;&gt;.archive&lt;/a&gt; для управления архивами SQLite, но для этого требуется взаимодействие с оболочкой.</target>
        </trans-unit>
        <trans-unit id="4601afd19c62f4d6f4dd6a59905680482f9f3f16" translate="yes" xml:space="preserve">
          <source>The record format makes extensive use of the &lt;a href=&quot;fileformat2#varint&quot;&gt;variable-length integer&lt;/a&gt; or &lt;a href=&quot;fileformat2#varint&quot;&gt;varint&lt;/a&gt; representation of 64-bit signed integers defined above.</source>
          <target state="translated">Формат записи широко использует &lt;a href=&quot;fileformat2#varint&quot;&gt;целое число переменной длины&lt;/a&gt; или представление &lt;a href=&quot;fileformat2#varint&quot;&gt;varint&lt;/a&gt; 64-битных целых чисел со знаком, определенных выше.</target>
        </trans-unit>
        <trans-unit id="6f45dfeab7c8fdea2c19dfb3263b7e954261008d" translate="yes" xml:space="preserve">
          <source>The register P3 contains one less than the maximum number of allowed errors. At most reg(P3) errors will be reported. In other words, the analysis stops as soon as reg(P1) errors are seen. Reg(P1) is updated with the number of errors remaining.</source>
          <target state="translated">Регистр P3 содержит на одну ошибку меньше максимального количества допустимых ошибок.В большинстве случаев будут зарегистрированы ошибки reg(P3).Другими словами,анализ прекращается,как только обнаруживаются ошибки reg(P1).Reg(P1)обновляется с количеством оставшихся ошибок.</target>
        </trans-unit>
        <trans-unit id="b0a0f881a2de041dc76deecadc2825d6252c40fe" translate="yes" xml:space="preserve">
          <source>The registers P1 through P1+P2-1 contain a single row of results. This opcode causes the sqlite3_step() call to terminate with an SQLITE_ROW return code and it sets up the sqlite3_stmt structure to provide access to the r(P1)..r(P1+P2-1) values as the result row.</source>
          <target state="translated">Регистры P1-P1+P2-1 содержат один ряд результатов.Этот опкод вызывает завершение вызова sqlite3_step()кодом возврата SQLITE_ROW и устанавливает структуру sqlite3_stmt для предоставления доступа к значениям r(P1)...r(P1+P2-1)в виде строки результата.</target>
        </trans-unit>
        <trans-unit id="3af4c8adff2c9c78e4e3d405284a88188dcbb490" translate="yes" xml:space="preserve">
          <source>The registers released will be the P2 registers starting at P1, except if bit ii of P3 set, then do not release register P1+ii. In other words, P3 is a mask of registers to preserve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad008f7525662f6767cf59c0a5ffbf397455036" translate="yes" xml:space="preserve">
          <source>The relative precedence of the set operations is different. In particular, using the standard query syntax the &quot;OR&quot; operator has a higher precedence than &quot;AND&quot;. The precedence of operators when using the standard query syntax is:</source>
          <target state="translated">Относительная приоритетность заданных операций различна.В частности,при использовании стандартного синтаксиса запроса оператор &quot;ИЛИ&quot; имеет больший приоритет,чем &quot;И&quot;.При использовании стандартного синтаксиса запроса операторы имеют приоритет:</target>
        </trans-unit>
        <trans-unit id="4055a7e54aa1eb8dd8ef4889c3d207a5659a2b35" translate="yes" xml:space="preserve">
          <source>The release build is used to validate the generated machine code.</source>
          <target state="translated">Конструкция выпуска используется для проверки сгенерированного машинного кода.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
