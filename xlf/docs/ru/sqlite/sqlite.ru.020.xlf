<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="sqlite">
    <body>
      <group id="sqlite">
        <trans-unit id="35ff55b55b3144279fa7594a0e19885043618a48" translate="yes" xml:space="preserve">
          <source>When SQLite compares two strings, it uses a collating sequence or collating function (two words for the same thing) to determine which string is greater or if the two strings are equal. SQLite has three built-in collating functions: BINARY, NOCASE, and RTRIM.</source>
          <target state="translated">Когда SQLite сравнивает две строки,он использует коллекционную последовательность или коллекционную функцию (два слова для одного и того же),чтобы определить,какая строка больше или равны ли две строки.В SQLite есть три встроенные функции коллатинга:BINARY,NOCASE и RTRIM.</target>
        </trans-unit>
        <trans-unit id="df3602b4706fda192f1a7fee5a1fd5a14d6046e0" translate="yes" xml:space="preserve">
          <source>When SQLite has been compiled with SQLITE_THREADSAFE=1 or SQLITE_THREADSAFE=2 then the &lt;a href=&quot;threadsafe&quot;&gt;threading mode&lt;/a&gt; can be altered at run-time using the &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config()&lt;/a&gt; interface together with one of these verbs:</source>
          <target state="translated">Когда SQLite был скомпилирован с SQLITE_THREADSAFE = 1 или SQLITE_THREADSAFE = 2, то &lt;a href=&quot;threadsafe&quot;&gt;режим потоковой передачи&lt;/a&gt; можно изменить во время выполнения с помощью интерфейса &lt;a href=&quot;c3ref/config&quot;&gt;sqlite3_config ()&lt;/a&gt; вместе с одним из этих глаголов:</target>
        </trans-unit>
        <trans-unit id="447f302ea851392a6eb166989220e6263326e6b8" translate="yes" xml:space="preserve">
          <source>When SQLite invokes the xSync() method of an &lt;a href=&quot;#sqlite3_io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; object it uses a combination of these integer values as the second argument.</source>
          <target state="translated">Когда SQLite вызывает метод xSync () объекта &lt;a href=&quot;#sqlite3_io_methods&quot;&gt;sqlite3_io_methods,&lt;/a&gt; он использует комбинацию этих целочисленных значений в качестве второго аргумента.</target>
        </trans-unit>
        <trans-unit id="68d87b5a5c9475d95e19a08651c92859f1a25fae" translate="yes" xml:space="preserve">
          <source>When SQLite invokes the xSync() method of an &lt;a href=&quot;io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; object it uses a combination of these integer values as the second argument.</source>
          <target state="translated">Когда SQLite вызывает метод xSync () объекта &lt;a href=&quot;io_methods&quot;&gt;sqlite3_io_methods,&lt;/a&gt; он использует комбинацию этих целочисленных значений в качестве второго аргумента.</target>
        </trans-unit>
        <trans-unit id="d35292160ae7a274b67325cfcd829f7632f2415b" translate="yes" xml:space="preserve">
          <source>When SQLite is compiled with the &lt;a href=&quot;compile#debug&quot;&gt;SQLITE_DEBUG&lt;/a&gt; compile-time option, extra &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; commands are available that are useful for debugging and for exploring the operation of the VDBE. For example the &lt;a href=&quot;pragma#pragma_vdbe_trace&quot;&gt;vdbe_trace&lt;/a&gt; pragma can be enabled to cause a disassembly of each VDBE opcode to be printed on standard output as the opcode is executed. These debugging pragmas include:</source>
          <target state="translated">Когда SQLite скомпилирован с параметром &lt;a href=&quot;compile#debug&quot;&gt;времени&lt;/a&gt; компиляции &lt;a href=&quot;pragma#syntax&quot;&gt;SQLITE_DEBUG&lt;/a&gt; , доступны дополнительные команды PRAGMA , которые полезны для отладки и исследования работы VDBE. Например, прагма &lt;a href=&quot;pragma#pragma_vdbe_trace&quot;&gt;vdbe_trace&lt;/a&gt; может быть включена для того, чтобы дизассемблированный код операции VDBE выводился на стандартный вывод при выполнении кода операции. Эти прагмы отладки включают:</target>
        </trans-unit>
        <trans-unit id="c9b995e894f1bbf11af15b50811aafd3b796ef85" translate="yes" xml:space="preserve">
          <source>When SQLite is compiled with the &lt;a href=&quot;compile#enable_memsys5&quot;&gt;SQLITE_ENABLE_MEMSYS5&lt;/a&gt; option, an alternative memory allocator that does not use malloc() is included in the build. The SQLite developers refer to this alternative memory allocator as &quot;memsys5&quot;. Even when it is included in the build, memsys5 is disabled by default. To enable memsys5, the application must invoke the following SQLite interface at start-time:</source>
          <target state="translated">Когда SQLite компилируется с параметром &lt;a href=&quot;compile#enable_memsys5&quot;&gt;SQLITE_ENABLE_MEMSYS5,&lt;/a&gt; в сборку включается альтернативный распределитель памяти, который не использует malloc (). Разработчики SQLite называют этот альтернативный распределитель памяти &amp;laquo;memsys5&amp;raquo;. Даже когда он включен в сборку, memsys5 по умолчанию отключен. Чтобы включить memsys5, приложение должно во время запуска вызывать следующий интерфейс SQLite:</target>
        </trans-unit>
        <trans-unit id="84ef8ebae9f557b2e5ae28bc7ed5746f2af208db" translate="yes" xml:space="preserve">
          <source>When SQLite is compiled with the SQLITE_MUTEX_APPDEF=1 option, it completely omits the implementation of its &lt;a href=&quot;c3ref/mutex_alloc&quot;&gt;mutex primitive functions&lt;/a&gt;. But the SQLite library still attempts to call these functions where necessary, so the application must itself implement the &lt;a href=&quot;c3ref/mutex_alloc&quot;&gt;mutex primitive functions&lt;/a&gt; and link them together with SQLite.</source>
          <target state="translated">Когда SQLite компилируется с опцией SQLITE_MUTEX_APPDEF = 1, он полностью пропускает реализацию своих &lt;a href=&quot;c3ref/mutex_alloc&quot;&gt;примитивных функций мьютекса&lt;/a&gt; . Но библиотека SQLite по-прежнему пытается вызывать эти функции там, где это необходимо, поэтому приложение должно само реализовывать &lt;a href=&quot;c3ref/mutex_alloc&quot;&gt;примитивные функции мьютекса&lt;/a&gt; и связывать их вместе с SQLite.</target>
        </trans-unit>
        <trans-unit id="7f137b8f0298a3c2c2e18d67228fddc4346fc04c" translate="yes" xml:space="preserve">
          <source>When SQLite is ported to new operating systems (operating systems other than Unix, Windows, and OS/2 for which ports are provided together with the core) two new functions, &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_os_init()&lt;/a&gt; and &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_os_end()&lt;/a&gt;, must be provided as part of the port.</source>
          <target state="translated">Когда SQLite переносится на новые операционные системы (операционные системы, отличные от Unix, Windows и OS / 2, для которых порты предоставляются вместе с ядром), две новые функции, &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_os_init ()&lt;/a&gt; и &lt;a href=&quot;c3ref/initialize&quot;&gt;sqlite3_os_end ()&lt;/a&gt; , должны быть предоставлены как часть порт.</target>
        </trans-unit>
        <trans-unit id="07b5adba013870fc7dc891a2821a51ae6a59171f" translate="yes" xml:space="preserve">
          <source>When SQLite tries to access a file that is locked by another process, the default behavior is to return SQLITE_BUSY. You can adjust this behavior from C code using the &lt;a href=&quot;c3ref/busy_handler&quot;&gt;sqlite3_busy_handler()&lt;/a&gt; or &lt;a href=&quot;c3ref/busy_timeout&quot;&gt;sqlite3_busy_timeout()&lt;/a&gt; API functions.</source>
          <target state="translated">Когда SQLite пытается получить доступ к файлу, заблокированному другим процессом, по умолчанию возвращается SQLITE_BUSY. Вы можете настроить это поведение из кода C с помощью функций API &lt;a href=&quot;c3ref/busy_handler&quot;&gt;sqlite3_busy_handler ()&lt;/a&gt; или &lt;a href=&quot;c3ref/busy_timeout&quot;&gt;sqlite3_busy_timeout ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="77327b5e49ebfcc1acf07f15eb4bc6a41abc04ea" translate="yes" xml:space="preserve">
          <source>When SQLite tries to open a database and finds that it is locked, it can optionally delay for a short while and try to open the file again. This process repeats until the query times out and SQLite returns a failure. The timeout is adjustable. It is set to 0 by default so that if the database is locked, the SQL statement fails immediately. But you can use the &quot;timeout&quot; method to change the timeout value to a positive number. For example:</source>
          <target state="translated">Когда SQLite пытается открыть базу данных и обнаруживает,что она заблокирована,он может опционально отложить это на некоторое время и попытаться открыть файл снова.Этот процесс повторяется до тех пор,пока запрос не завершится тайм-аутом и SQLite не вернет ошибку.Таймаут можно регулировать.По умолчанию он установлен на 0,так что если база данных заблокирована,SQL-оператор сразу же дает сбой.Но вы можете использовать метод &quot;таймаут&quot;,чтобы изменить значение таймаута на положительное число.Например:</target>
        </trans-unit>
        <trans-unit id="a804ec7f0a4b84d1b0a408e0b54447cf6ce4d1f8" translate="yes" xml:space="preserve">
          <source>When SQLite version 2.7.0 or later opens a 2.6.3 or earlier database, it assumes all columns of all tables have type &quot;numeric&quot;. For 2.7.0 and later databases, columns have type &quot;text&quot; if their datatype string contains the substrings &quot;char&quot; or &quot;clob&quot; or &quot;blob&quot; or &quot;text&quot;. Otherwise they are of type &quot;numeric&quot;.</source>
          <target state="translated">Когда SQLite версии 2.7.0 или более поздней версии открывает БД 2.6.3 или более ранней версии,предполагается,что все столбцы всех таблиц имеют тип &quot;числовой&quot;.Для баз данных версии 2.7.0 и выше колонки имеют тип &quot;text&quot;,если в их строке типа данных присутствуют подстроки &quot;char&quot; или &quot;clob&quot;,или &quot;blob&quot;,или &quot;text&quot;.В противном случае они имеют тип &quot;цифровой&quot;.</target>
        </trans-unit>
        <trans-unit id="a13408a2bfc81e3d04562db93d8a2fee6642da62" translate="yes" xml:space="preserve">
          <source>When SQLite was first being developed, Java was a young and immature language. C++ was older, but was undergoing such growing pains that it was difficult to find any two C++ compilers that worked the same way. So C was definitely a better choice back when SQLite was first being developed. The situation is less stark now, but there is little to no benefit in recoding SQLite at this point.</source>
          <target state="translated">Когда SQLite только разрабатывался,Java был молодым и незрелым языком.Си++был старше,но испытывал такие растущие трудности,что было трудно найти два одинаковых компилятора Си++.Так что Си был определенно лучшим выбором еще в то время,когда SQLite только разрабатывался.Сейчас ситуация менее разительная,но в перекодировке SQLite на данный момент нет никакой пользы.</target>
        </trans-unit>
        <trans-unit id="dd3d6234851cf7360a0faea15fc7c5c549469738" translate="yes" xml:space="preserve">
          <source>When a</source>
          <target state="translated">Когда</target>
        </trans-unit>
        <trans-unit id="b177e9320f32426fce848e5e150f059f226858de" translate="yes" xml:space="preserve">
          <source>When a &lt;a href=&quot;lang_createtable#uniqueconst&quot;&gt;UNIQUE&lt;/a&gt; or &lt;a href=&quot;lang_createtable#primkeyconst&quot;&gt;PRIMARY KEY&lt;/a&gt; constraint violation occurs, the REPLACE algorithm deletes pre-existing rows that are causing the constraint violation prior to inserting or updating the current row and the command continues executing normally. If a &lt;a href=&quot;lang_createtable#notnullconst&quot;&gt;NOT NULL&lt;/a&gt; constraint violation occurs, the REPLACE conflict resolution replaces the NULL value with the default value for that column, or if the column has no default value, then the ABORT algorithm is used. If a &lt;a href=&quot;lang_createtable#ckconst&quot;&gt;CHECK constraint&lt;/a&gt; or &lt;a href=&quot;foreignkeys&quot;&gt;foreign key constraint&lt;/a&gt; violation occurs, the REPLACE conflict resolution algorithm works like ABORT.</source>
          <target state="translated">Когда происходит нарушение ограничения &lt;a href=&quot;lang_createtable#uniqueconst&quot;&gt;UNIQUE&lt;/a&gt; или &lt;a href=&quot;lang_createtable#primkeyconst&quot;&gt;PRIMARY KEY&lt;/a&gt; , алгоритм REPLACE удаляет ранее существовавшие строки, которые вызывают нарушение ограничения, до вставки или обновления текущей строки, и команда продолжает выполняться в обычном режиме. Если происходит нарушение ограничения &lt;a href=&quot;lang_createtable#notnullconst&quot;&gt;NOT NULL&lt;/a&gt; , разрешение конфликта REPLACE заменяет значение NULL значением по умолчанию для этого столбца, или, если столбец не имеет значения по умолчанию, используется алгоритм ABORT. Если происходит &lt;a href=&quot;lang_createtable#ckconst&quot;&gt;ограничение CHECK&lt;/a&gt; или ограничение &lt;a href=&quot;foreignkeys&quot;&gt;внешнего ключа&lt;/a&gt; , алгоритм разрешения конфликтов REPLACE работает как ABORT.</target>
        </trans-unit>
        <trans-unit id="e40cfe4f4a2672a463b5e9153a546fd55dd2ffa8" translate="yes" xml:space="preserve">
          <source>When a UNIQUE constraint violation occurs, the pre-existing row that caused the constraint violation is removed prior to inserting or updating the current row. Thus the insert or update always occurs. The command continues executing normally. No error is returned.</source>
          <target state="translated">Когда происходит нарушение ограничения UNIQUE,предыдущая строка,которая вызвала нарушение ограничения,удаляется перед тем,как вставить или обновить текущую строку.Таким образом,всегда происходит вставка или обновление.Команда продолжает выполняться нормально.Ошибка не возвращается.</target>
        </trans-unit>
        <trans-unit id="f0f8ec6207370b712331444906a15edac7bd9982" translate="yes" xml:space="preserve">
          <source>When a WAL mode database is in active use, all three of the above files usually exist. Except, the Wal-Index file is omitted if &lt;a href=&quot;pragma#pragma_locking_mode&quot;&gt;exclusive locking mode&lt;/a&gt; is set.</source>
          <target state="translated">Когда база данных в режиме WAL активно используется, обычно существуют все три вышеуказанных файла. За исключением того, что файл Wal-Index опускается, если установлен &lt;a href=&quot;pragma#pragma_locking_mode&quot;&gt;эксклюзивный режим блокировки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88f7d29bc8b807cc4618404ebf6e68af0b14195c" translate="yes" xml:space="preserve">
          <source>When a blocking connection's transaction is concluded, there may be more than one blocked connection that has registered for an unlock-notify callback. If two or more such blocked connections have specified the same callback function, then instead of invoking the callback function multiple times, it is invoked once with the set of void* context pointers specified by the blocked connections bundled together into an array. This gives the application an opportunity to prioritize any actions related to the set of unblocked database connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda8b145f23c6a0bb85ff0a12c0706d7475482c1" translate="yes" xml:space="preserve">
          <source>When a blocking connections transaction is concluded, there may be more than one blocked connection that has registered for an unlock-notify callback. If two or more such blocked connections have specified the same callback function, then instead of invoking the callback function multiple times, it is invoked once with the set of void* context pointers specified by the blocked connections bundled together into an array. This gives the application an opportunity to prioritize any actions related to the set of unblocked database connections.</source>
          <target state="translated">При заключении сделки по блокировке соединений может быть более одного заблокированного соединения,которое зарегистрировалось для обратного вызова уведомления о разблокировке.Если два или более таких заблокированных соединения указали одну и ту же функцию обратного вызова,то вместо многократного вызова функции обратного вызова она вызывается один раз с набором контекстных указателей void*,указанных заблокированными соединениями,объединенными в массив.Это дает приложению возможность установить приоритет любых действий,связанных с набором незаблокированных соединений с БД.</target>
        </trans-unit>
        <trans-unit id="b1623124138a1a453c5d32a837bf66762d013ccd" translate="yes" xml:space="preserve">
          <source>When a call to &lt;a href=&quot;#sqlite3_step&quot;&gt;sqlite3_step()&lt;/a&gt; returns SQLITE_LOCKED, it is almost always appropriate to call sqlite3_unlock_notify(). There is however, one exception. When executing a &quot;DROP TABLE&quot; or &quot;DROP INDEX&quot; statement, SQLite checks if there are any currently executing SELECT statements that belong to the same connection. If there are, SQLITE_LOCKED is returned. In this case there is no &quot;blocking connection&quot;, so invoking sqlite3_unlock_notify() results in the unlock-notify callback being invoked immediately. If the application then re-attempts the &quot;DROP TABLE&quot; or &quot;DROP INDEX&quot; query, an infinite loop might be the result.</source>
          <target state="translated">Когда вызов &lt;a href=&quot;#sqlite3_step&quot;&gt;sqlite3_step ()&lt;/a&gt; возвращает SQLITE_LOCKED, почти всегда целесообразно вызывать sqlite3_unlock_notify (). Однако есть одно исключение. При выполнении оператора &amp;laquo;DROP TABLE&amp;raquo; или &amp;laquo;DROP INDEX&amp;raquo; SQLite проверяет, есть ли какие-либо выполняющиеся в данный момент операторы SELECT, принадлежащие тому же соединению. Если есть, возвращается SQLITE_LOCKED. В этом случае нет &amp;laquo;блокирующего соединения&amp;raquo;, поэтому вызов sqlite3_unlock_notify () приводит к немедленному вызову обратного вызова unlock-notify. Если приложение затем повторно попытается выполнить запрос &amp;laquo;DROP TABLE&amp;raquo; или &amp;laquo;DROP INDEX&amp;raquo;, результатом может быть бесконечный цикл.</target>
        </trans-unit>
        <trans-unit id="96fd9fb18740d68a037d0a53dc8f7e543ce5815d" translate="yes" xml:space="preserve">
          <source>When a call to &lt;a href=&quot;step&quot;&gt;sqlite3_step()&lt;/a&gt; returns SQLITE_LOCKED, it is almost always appropriate to call sqlite3_unlock_notify(). There is however, one exception. When executing a &quot;DROP TABLE&quot; or &quot;DROP INDEX&quot; statement, SQLite checks if there are any currently executing SELECT statements that belong to the same connection. If there are, SQLITE_LOCKED is returned. In this case there is no &quot;blocking connection&quot;, so invoking sqlite3_unlock_notify() results in the unlock-notify callback being invoked immediately. If the application then re-attempts the &quot;DROP TABLE&quot; or &quot;DROP INDEX&quot; query, an infinite loop might be the result.</source>
          <target state="translated">Когда вызов &lt;a href=&quot;step&quot;&gt;sqlite3_step ()&lt;/a&gt; возвращает SQLITE_LOCKED, почти всегда целесообразно вызывать sqlite3_unlock_notify (). Однако есть одно исключение. При выполнении оператора &amp;laquo;DROP TABLE&amp;raquo; или &amp;laquo;DROP INDEX&amp;raquo; SQLite проверяет, есть ли какие-либо выполняющиеся в данный момент операторы SELECT, принадлежащие тому же соединению. Если есть, возвращается SQLITE_LOCKED. В этом случае нет &amp;laquo;блокирующего соединения&amp;raquo;, поэтому вызов sqlite3_unlock_notify () приводит к немедленному вызову обратного вызова unlock-notify. Если приложение затем повторно попытается выполнить запрос &amp;laquo;DROP TABLE&amp;raquo; или &amp;laquo;DROP INDEX&amp;raquo;, результатом может быть бесконечный цикл.</target>
        </trans-unit>
        <trans-unit id="4b27c6df7f370b95df53fb6af6deaef3ac0ea82c" translate="yes" xml:space="preserve">
          <source>When a changeset or patchset is applied to a database, an attempt is made to insert a new row for each INSERT change, remove a row for each DELETE change and modify a row for each UPDATE change. If the target database is in the same state as the original database that the changeset was recorded on, this is a simple matter. However, if the contents of the target database is not in exactly this state, conflicts can occur when applying the changeset or patchset.</source>
          <target state="translated">Когда changeset или patchset применяется к базе данных,делается попытка вставить новую строку для каждого изменения INSERT,удалить строку для каждого изменения DELETE и изменить строку для каждого изменения UPDATE.Если целевая база данных находится в том же состоянии,что и исходная база данных,в которую был записан changeset,то это простой вопрос.Однако,если содержимое целевой базы данных находится не в таком состоянии,могут возникнуть конфликты при применении changeset или patchset.</target>
        </trans-unit>
        <trans-unit id="af13c24a93516a02da3d5819b6d5ee382b394c0c" translate="yes" xml:space="preserve">
          <source>When a checkpoint runs, if it sees a lock on WAL_READ_LOCK(N), then it must not move WAL content into the main database for more than the first read-mark[N] frames. Were it to do so, it would overwrite content that the process holding the lock was expecting to be able to read out of the main database file. A consequence of if this is that f the WAL file contains more than read-mark[N] frames (if mxFrame&amp;gt;read-mark[N] for any read-mark for which WAL_READ_LOCK(N) is held by another process), then the checkpoint cannot run to completion.</source>
          <target state="translated">При запуске контрольной точки, если она видит блокировку WAL_READ_LOCK (N), то она не должна перемещать содержимое WAL в основную базу данных более чем на первые [N] фреймов с меткой чтения. Если бы это было сделано, он бы перезаписал содержимое, которое процесс, удерживающий блокировку, ожидал, что он сможет прочитать из основного файла базы данных. Следствием этого является то, что если файл WAL содержит больше, чем метка чтения [N] кадров (если mxFrame&amp;gt; метка чтения [N] для любой метки чтения, для которой WAL_READ_LOCK (N) удерживается другим процессом), то тогда контрольная точка не может работать до завершения.</target>
        </trans-unit>
        <trans-unit id="483ce2f4112b751479cd3313b5725fa8eedbb3fc" translate="yes" xml:space="preserve">
          <source>When a configuration option is set, sqlite3_config() returns &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OK&lt;/a&gt;. If the option is unknown or SQLite is unable to set the option then this routine returns a non-zero &lt;a href=&quot;rescode&quot;&gt;error code&lt;/a&gt;.</source>
          <target state="translated">Если установлен параметр конфигурации, sqlite3_config () возвращает &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OK&lt;/a&gt; . Если параметр неизвестен или SQLite не может установить его, эта процедура возвращает ненулевой &lt;a href=&quot;rescode&quot;&gt;код ошибки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42a829c41f1de7dff832e7bd4aea25619f81edf9" translate="yes" xml:space="preserve">
          <source>When a configuration option is set, sqlite3_config() returns &lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OK&lt;/a&gt;. If the option is unknown or SQLite is unable to set the option then this routine returns a non-zero &lt;a href=&quot;../rescode&quot;&gt;error code&lt;/a&gt;.</source>
          <target state="translated">Если установлен параметр конфигурации, sqlite3_config () возвращает &lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OK&lt;/a&gt; . Если параметр неизвестен или SQLite не может установить его, эта процедура возвращает ненулевой &lt;a href=&quot;../rescode&quot;&gt;код ошибки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ec6b6ac63fbc35d1df0b3e9fb9cdbeeef10333e" translate="yes" xml:space="preserve">
          <source>When a connection (known as the blocked connection) fails to obtain a shared-cache lock and SQLITE_LOCKED is returned to the caller, the identity of the database connection (the blocking connection) that has locked the required resource is stored internally. After an application receives an SQLITE_LOCKED error, it may call the sqlite3_unlock_notify() method with the blocked connection handle as the first argument to register for a callback that will be invoked when the blocking connections current transaction is concluded. The callback is invoked from within the &lt;a href=&quot;#sqlite3_step&quot;&gt;sqlite3_step&lt;/a&gt; or &lt;a href=&quot;#sqlite3_close&quot;&gt;sqlite3_close&lt;/a&gt; call that concludes the blocking connection's transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a34b978574691e0c575f3f24ebbf266179b4d2f" translate="yes" xml:space="preserve">
          <source>When a connection (known as the blocked connection) fails to obtain a shared-cache lock and SQLITE_LOCKED is returned to the caller, the identity of the database connection (the blocking connection) that has locked the required resource is stored internally. After an application receives an SQLITE_LOCKED error, it may call the sqlite3_unlock_notify() method with the blocked connection handle as the first argument to register for a callback that will be invoked when the blocking connections current transaction is concluded. The callback is invoked from within the &lt;a href=&quot;#sqlite3_step&quot;&gt;sqlite3_step&lt;/a&gt; or &lt;a href=&quot;#sqlite3_close&quot;&gt;sqlite3_close&lt;/a&gt; call that concludes the blocking connections transaction.</source>
          <target state="translated">Когда соединение (известное как заблокированное соединение) не может получить блокировку общего кэша и вызывающему объекту возвращается SQLITE_LOCKED, идентификатор соединения с базой данных (блокирующее соединение), которое заблокировало требуемый ресурс, сохраняется внутри. После того, как приложение получает ошибку SQLITE_LOCKED, оно может вызвать метод sqlite3_unlock_notify () с дескриптором заблокированного соединения в качестве первого аргумента для регистрации для обратного вызова, который будет вызываться при завершении текущей транзакции блокирующих соединений. Обратный вызов вызывается из вызова &lt;a href=&quot;#sqlite3_step&quot;&gt;sqlite3_step&lt;/a&gt; или &lt;a href=&quot;#sqlite3_close&quot;&gt;sqlite3_close,&lt;/a&gt; который завершает транзакцию блокировки соединений.</target>
        </trans-unit>
        <trans-unit id="58820b450842a3b35138dd7706fb343d060de1de" translate="yes" xml:space="preserve">
          <source>When a connection (known as the blocked connection) fails to obtain a shared-cache lock and SQLITE_LOCKED is returned to the caller, the identity of the database connection (the blocking connection) that has locked the required resource is stored internally. After an application receives an SQLITE_LOCKED error, it may call the sqlite3_unlock_notify() method with the blocked connection handle as the first argument to register for a callback that will be invoked when the blocking connections current transaction is concluded. The callback is invoked from within the &lt;a href=&quot;step&quot;&gt;sqlite3_step&lt;/a&gt; or &lt;a href=&quot;close&quot;&gt;sqlite3_close&lt;/a&gt; call that concludes the blocking connection's transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b71c21ec59e3320b31da28e6f5087ad7dce22a" translate="yes" xml:space="preserve">
          <source>When a connection (known as the blocked connection) fails to obtain a shared-cache lock and SQLITE_LOCKED is returned to the caller, the identity of the database connection (the blocking connection) that has locked the required resource is stored internally. After an application receives an SQLITE_LOCKED error, it may call the sqlite3_unlock_notify() method with the blocked connection handle as the first argument to register for a callback that will be invoked when the blocking connections current transaction is concluded. The callback is invoked from within the &lt;a href=&quot;step&quot;&gt;sqlite3_step&lt;/a&gt; or &lt;a href=&quot;close&quot;&gt;sqlite3_close&lt;/a&gt; call that concludes the blocking connections transaction.</source>
          <target state="translated">Когда соединение (известное как заблокированное соединение) не может получить блокировку общего кэша и вызывающему объекту возвращается SQLITE_LOCKED, идентификатор соединения с базой данных (блокирующее соединение), которое заблокировало требуемый ресурс, сохраняется внутри. После того, как приложение получает ошибку SQLITE_LOCKED, оно может вызвать метод sqlite3_unlock_notify () с дескриптором заблокированного соединения в качестве первого аргумента для регистрации для обратного вызова, который будет вызываться при завершении текущей транзакции блокирующих соединений. Обратный вызов вызывается из вызова &lt;a href=&quot;step&quot;&gt;sqlite3_step&lt;/a&gt; или &lt;a href=&quot;close&quot;&gt;sqlite3_close,&lt;/a&gt; который завершает транзакцию блокировки соединений.</target>
        </trans-unit>
        <trans-unit id="2d95de74c44ccc79daba549c33cfe91ac9ee60b3" translate="yes" xml:space="preserve">
          <source>When a connection holds a shared lock on WAL_READ_LOCK(N), that is a promise by the connection that it will use the WAL and not the database file for any database pages that are modified by the first read-mark[N] entries in the WAL. The read-mark[0] is always zero. If a connection holds a shared lock on WAL_READ_LOCK(0), that means the connection expects to be able to ignore the WAL and read any content it wants from the main database. If N&amp;gt;0 then the connection is free to use more of the WAL file beyond read-mark[N] if it wants to, up to the first mxFrame frames. But when a connection holds a shared lock on WAL_READ_LOCK(0), that is a promise that it will never read content from the WAL and will acquire all content directly from the main database.</source>
          <target state="translated">Когда соединение удерживает разделяемую блокировку на WAL_READ_LOCK (N), это обещание соединения, что оно будет использовать WAL, а не файл базы данных для любых страниц базы данных, которые изменяются первой меткой чтения [N] записей в WAL. Метка чтения [0] всегда равна нулю. Если соединение удерживает разделяемую блокировку на WAL_READ_LOCK (0), это означает, что соединение ожидает, что сможет игнорировать WAL и читать любой контент, который он хочет, из основной базы данных. Если N&amp;gt; 0, то соединение может использовать больше файла WAL за пределами метки чтения [N], если оно того хочет, вплоть до первых кадров mxFrame. Но когда соединение удерживает разделяемую блокировку на WAL_READ_LOCK (0), это обещание, что оно никогда не будет читать контент из WAL и получит весь контент непосредственно из основной базы данных.</target>
        </trans-unit>
        <trans-unit id="e114c32681a6d0ab6fee9545fa50582f6c054845" translate="yes" xml:space="preserve">
          <source>When a connection is holding a SHARED lock on the main database, that will prevent any other connection from acquiring the EXCLUSIVE lock, which in turn prevents the WAL-index and WAL files from being deleted out from under other users, and prevents a transition out of WAL-mode while other users are accessing the database in WAL-mode.</source>
          <target state="translated">Когда соединение держит блокировку SHARED на основной БД,это предотвращает любое другое соединение от получения блокировки EXCLUSIVE,что в свою очередь предотвращает удаление WAL-индексов и WAL-файлов из-под других пользователей,а также предотвращает выход из WAL-режима,когда другие пользователи получают доступ к БД в WAL-режиме.</target>
        </trans-unit>
        <trans-unit id="12c1255cc9a16f21fccefe2ac6a059ed783c7d20" translate="yes" xml:space="preserve">
          <source>When a connection using asynchronous IO begins a database transaction, the database is locked immediately. However the lock is not released until after all relevant operations in the write-queue have been flushed to disk. This means (for example) that the database may remain locked for some time after a &quot;&lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt;&quot; or &quot;&lt;a href=&quot;lang_transaction&quot;&gt;ROLLBACK&lt;/a&gt;&quot; is issued.</source>
          <target state="translated">Когда соединение с использованием асинхронного ввода-вывода начинает транзакцию базы данных, база данных немедленно блокируется. Однако блокировка не снимается до тех пор, пока все соответствующие операции в очереди записи не будут сброшены на диск. Это означает (например), что база данных может оставаться заблокированной в течение некоторого времени после выдачи &amp;laquo; &lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt; &amp;raquo; или &amp;laquo; &lt;a href=&quot;lang_transaction&quot;&gt;ROLLBACK&lt;/a&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="ddb7b3f482852f424ece2e0896d73a04a9d957e4" translate="yes" xml:space="preserve">
          <source>When a constraint violation occurs, an immediate ROLLBACK occurs, thus ending the current transaction, and the command aborts with a return code of SQLITE_CONSTRAINT. If no transaction is active (other than the implied transaction that is created on every command) then this algorithm works the same as ABORT.</source>
          <target state="translated">Когда происходит нарушение ограничения,немедленно происходит ROLLBACK,тем самым завершая текущую транзакцию,и команда прерывается с кодом возврата SQLITE_CONSTRAINT.Если ни одна транзакция не активна (кроме подразумеваемой транзакции,которая создается по каждой команде),то данный алгоритм работает так же,как и ABORT.</target>
        </trans-unit>
        <trans-unit id="933e3d0ae1663c35b2ff70117a98cacf0e4923d6" translate="yes" xml:space="preserve">
          <source>When a constraint violation occurs, the command aborts with a return code SQLITE_CONSTRAINT. But any changes to the database that the command made prior to encountering the constraint violation are preserved and are not backed out. For example, if an UPDATE statement encountered a constraint violation on the 100th row that it attempts to update, then the first 99 row changes are preserved but change to rows 100 and beyond never occur.</source>
          <target state="translated">При нарушении ограничения команда прерывается с кодом возврата SQLITE_CONSTRAINT.Однако любые изменения в БД,которые команда произвела до появления нарушения ограничения,сохраняются и не отступают.Например,если оператор UPDATE столкнулся с нарушением ограничения на 100-й строке,которую он пытается обновить,то первые 99 изменений в строке сохраняются,но изменение на 100-й строке и более никогда не происходит.</target>
        </trans-unit>
        <trans-unit id="6397f8d4479c4b84e08676c10c54e0afd51f843f" translate="yes" xml:space="preserve">
          <source>When a constraint violation occurs, the command backs out any prior changes it might have made and aborts with a return code of SQLITE_CONSTRAINT. But no ROLLBACK is executed so changes from prior commands within the same transaction are preserved. This is the default behavior for SQLite.</source>
          <target state="translated">Когда происходит нарушение ограничения,команда отбрасывает все предыдущие изменения,которые она могла внести,и прерывает их с помощью кода возврата SQLITE_CONSTRAINT.Но ROLLBACK не выполняется,поэтому изменения из предыдущих команд в той же самой транзакции сохраняются.Это поведение по умолчанию для SQLite.</target>
        </trans-unit>
        <trans-unit id="39dcfeb5298d9a69a9dfd10b897e4e703da8e46b" translate="yes" xml:space="preserve">
          <source>When a constraint violation occurs, the one row that contains the constraint violation is not inserted or changed. But the command continues executing normally. Other rows before and after the row that contained the constraint violation continue to be inserted or updated normally. No error is returned.</source>
          <target state="translated">Когда происходит нарушение ограничения,единственная строка,которая содержит нарушение ограничения,не вставляется и не изменяется.Однако команда продолжает выполняться нормально.Остальные строки до и после строки,содержащей нарушение ограничения,продолжают нормально вставляться или обновляться.Ошибка не возвращается.</target>
        </trans-unit>
        <trans-unit id="d77ac0a4b71596448d90ef0386a9797d90b3dad6" translate="yes" xml:space="preserve">
          <source>When a database connection closes (via &lt;a href=&quot;c3ref/close&quot;&gt;sqlite3_close()&lt;/a&gt; or &lt;a href=&quot;c3ref/close&quot;&gt;sqlite3_close_v2()&lt;/a&gt;), an attempt is made to acquire SQLITE_LOCK_EXCLUSIVE. If this attempt is successful, that means the connection that is closing is the last connection to the database. In that case, it is desirable to clean up the WAL and WAL-index files, so the closing connection runs a &lt;a href=&quot;wal#ckpt&quot;&gt;checkpoint&lt;/a&gt; (while holding SQLITE_LOCK_EXCLUSIVE) and the deletes both the WAL and WAL-index files. The SQLITE_LOCK_EXCLUSIVE is not released until after both the WAL and WAL-index files have been deleted.</source>
          <target state="translated">Когда соединение с базой данных закрывается (через &lt;a href=&quot;c3ref/close&quot;&gt;sqlite3_close ()&lt;/a&gt; или &lt;a href=&quot;c3ref/close&quot;&gt;sqlite3_close_v2 ()&lt;/a&gt; ), предпринимается попытка получить SQLITE_LOCK_EXCLUSIVE. Если эта попытка успешна, это означает, что закрывающееся соединение является последним подключением к базе данных. В этом случае желательно очистить файлы индекса WAL и WAL, чтобы закрывающее соединение запускало &lt;a href=&quot;wal#ckpt&quot;&gt;контрольную точку&lt;/a&gt; (с сохранением SQLITE_LOCK_EXCLUSIVE) и удаляло файлы индекса WAL и WAL. SQLITE_LOCK_EXCLUSIVE не освобождается до тех пор, пока не будут удалены файлы WAL и WAL-index.</target>
        </trans-unit>
        <trans-unit id="20a6ff534ce9652a9eda05b6d0935e6cf08856e6" translate="yes" xml:space="preserve">
          <source>When a directory is inserted, if the &quot;name&quot; value does not end with a '/' character, the zipfile module appends one. This is necessary for compatibility with other programs (most notably &quot;info-zip&quot;) that manipulate zip archives.</source>
          <target state="translated">При вставке каталога,если значение &quot;name&quot; не заканчивается символом '/',zip-файловый модуль добавляет его.Это необходимо для совместимости с другими программами (особенно с &quot;info-zip&quot;),которые работают с zip-архивами.</target>
        </trans-unit>
        <trans-unit id="26801f7dad030d0d12374b8b8d55040830791b46" translate="yes" xml:space="preserve">
          <source>When a file-handle open on a database file is unlocked, if the</source>
          <target state="translated">Когда файл-ручка,открытая в файле базы данных,разблокирована,если</target>
        </trans-unit>
        <trans-unit id="70b05b0c4ad89d4e7f94cf5e4dedf4b6997bc209" translate="yes" xml:space="preserve">
          <source>When a function uses a column from a virtual table as its first argument, this method is called to see if the virtual table would like to overload the function. The first three parameters are inputs: the virtual table, the number of arguments to the function, and the name of the function. If no overloading is desired, this method returns 0. To overload the function, this method writes the new function implementation into *pxFunc and writes user data into *ppArg and returns either 1 or a number between &lt;a href=&quot;c3ref/c_index_constraint_eq&quot;&gt;SQLITE_INDEX_CONSTRAINT_FUNCTION&lt;/a&gt; and 255.</source>
          <target state="translated">Когда функция использует столбец из виртуальной таблицы в качестве первого аргумента, этот метод вызывается, чтобы узнать, не хочет ли виртуальная таблица перегрузить функцию. Первые три параметра - это входные данные: виртуальная таблица, количество аргументов функции и имя функции. Если перегрузка не требуется, этот метод возвращает 0. Для перегрузки функции этот метод записывает новую реализацию функции в * pxFunc и записывает данные пользователя в * ppArg и возвращает либо 1, либо число от &lt;a href=&quot;c3ref/c_index_constraint_eq&quot;&gt;SQLITE_INDEX_CONSTRAINT_FUNCTION&lt;/a&gt; до 255.</target>
        </trans-unit>
        <trans-unit id="8365620f1c717c4826d64a41ab8d38dd2fc7b98d" translate="yes" xml:space="preserve">
          <source>When a new</source>
          <target state="translated">Когда новый</target>
        </trans-unit>
        <trans-unit id="699fe2196c054a2761ad370d04849c2f40137718" translate="yes" xml:space="preserve">
          <source>When a new database is created, SQLite assigns a page size to the database based on platform and filesystem. For many years, the default page size was almost always 1024 bytes, but beginning with SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_12_0.html&quot;&gt;version 3.12.0&lt;/a&gt; (2016-03-29), the default page size increased to 4096. The default page size is recommended for most applications.</source>
          <target state="translated">Когда создается новая база данных, SQLite назначает размер страницы для базы данных в зависимости от платформы и файловой системы. В течение многих лет размер страницы по умолчанию почти всегда составлял 1024 байта, но, начиная с &lt;a href=&quot;https://sqlite.org/releaselog/3_12_0.html&quot;&gt;версии&lt;/a&gt; SQLite 3.12.0 (2016-03-29), размер страницы по умолчанию увеличился до 4096. Размер страницы по умолчанию рекомендуется для большинства приложений.</target>
        </trans-unit>
        <trans-unit id="45fd9923f092fbfb6768ecc3efe603fb1851939b" translate="yes" xml:space="preserve">
          <source>When a new database page is appended to a database file, there is no requirement to add a record to the</source>
          <target state="translated">Когда новая страница базы данных добавляется к файлу базы данных,нет необходимости добавлять запись к</target>
        </trans-unit>
        <trans-unit id="b08473c5ea155814010ebff8331980504b3653e4" translate="yes" xml:space="preserve">
          <source>When a new file is created, most desktop operating systems (Windows, Linux, Mac OS X) will not actually write anything to disk. The new file is created in the operating systems disk cache only. The file is not created on mass storage until sometime later, when the operating system has a spare moment. This creates the impression to users that I/O is happening much faster than is possible when doing real disk I/O. We illustrate this idea in the diagram to the right by showing that the new rollback journal appears in the operating system disk cache only and not on the disk itself.</source>
          <target state="translated">Когда создается новый файл,большинство настольных операционных систем (Windows,Linux,Mac OS X)на самом деле ничего не записывают на диск.Новый файл создается только в дисковом кэше операционных систем.Файл создается на массовом хранении только через некоторое время,когда у операционной системы есть свободный момент.Это создает у пользователей впечатление,что ввод/вывод происходит намного быстрее,чем это возможно при выполнении реального дискового ввода/вывода.Мы иллюстрируем эту идею на диаграмме справа,показывая,что новый журнал отката появляется только в дисковом кэше операционной системы,а не на самом диске.</target>
        </trans-unit>
        <trans-unit id="0a07f6d8079bf577cb3fe5588a8b9770dc9fc5d1" translate="yes" xml:space="preserve">
          <source>When a new row is inserted into an SQLite table, the ROWID can either be specified as part of the INSERT statement or it can be assigned automatically by the database engine. To specify a ROWID manually, just include it in the list of values to be inserted. For example:</source>
          <target state="translated">Когда новая строка вставляется в таблицу SQLite,ROWID может быть либо указан как часть оператора INSERT,либо назначен автоматически движком базы данных.Чтобы указать ROWID вручную,просто включите его в список значений для вставки.Например:</target>
        </trans-unit>
        <trans-unit id="0f0ce235c557e884c10fe9cff8d86b46112c91c8" translate="yes" xml:space="preserve">
          <source>When a process wants to change a database file (and it is not in &lt;a href=&quot;wal&quot;&gt;WAL&lt;/a&gt; mode), it first records the original unchanged database content in a &lt;em&gt;rollback journal&lt;/em&gt;. The rollback journal is an ordinary disk file that is always located in the same directory or folder as the database file and has the same name as the database file with the addition of a &lt;code&gt;-journal&lt;/code&gt; suffix. The rollback journal also records the initial size of the database so that if the database file grows it can be truncated back to its original size on a rollback.</source>
          <target state="translated">Когда процесс хочет изменить файл базы данных (а он не находится в режиме &lt;a href=&quot;wal&quot;&gt;WAL&lt;/a&gt; ), он сначала записывает исходное неизмененное содержимое базы данных в &lt;em&gt;журнал отката&lt;/em&gt; . Журнал отката - это обычный дисковый файл, который всегда находится в том же каталоге или папке, что и файл базы данных, и имеет то же имя, что и файл базы данных, с добавлением суффикса &lt;code&gt;-journal&lt;/code&gt; . В журнале отката также записывается начальный размер базы данных, поэтому, если файл базы данных увеличивается, его можно обрезать до исходного размера при откате.</target>
        </trans-unit>
        <trans-unit id="4bd80d03aa6d2b960c4978ddc8751bef460c3fb0" translate="yes" xml:space="preserve">
          <source>When a process wants to read from a database file, it followed the following sequence of steps:</source>
          <target state="translated">Когда процесс хочет читать из файла базы данных,он выполняет следующую последовательность шагов:</target>
        </trans-unit>
        <trans-unit id="577306227dff9ce8975b3fcaaa51b9a6b5656983" translate="yes" xml:space="preserve">
          <source>When a read operation begins on a WAL-mode database, it first remembers the location of the last valid commit record in the WAL. Call this point the &quot;end mark&quot;. Because the WAL can be growing and adding new commit records while various readers connect to the database, each reader can potentially have its own end mark. But for any particular reader, the end mark is unchanged for the duration of the transaction, thus ensuring that a single read transaction only sees the database content as it existed at a single point in time.</source>
          <target state="translated">Когда начинается операция чтения в базе данных WAL-режима,она сначала запоминает местоположение последней действительной записи фиксации в WAL.Назовите эту точку &quot;конечной меткой&quot;.Поскольку WAL может расти и добавлять новые записи фиксации,в то время как различные читатели подключаются к базе данных,каждый читатель потенциально может иметь свою собственную конечную метку.Но для любого конкретного читателя конечный знак остается неизменным на протяжении всей транзакции,обеспечивая таким образом,что одна прочитанная транзакция видит только содержимое базы данных в том виде,в каком оно существовало в одной точке.</target>
        </trans-unit>
        <trans-unit id="6c0dd2ac1af5d6880101af98898ac515a0c331fe" translate="yes" xml:space="preserve">
          <source>When a reader needs a page of content, it first checks the WAL to see if that page appears there, and if so it pulls in the last copy of the page that occurs in the WAL prior to the reader's end mark. If no copy of the page exists in the WAL prior to the reader's end mark, then the page is read from the original database file. Readers can exist in separate processes, so to avoid forcing every reader to scan the entire WAL looking for pages (the WAL file can grow to multiple megabytes, depending on how often checkpoints are run), a data structure called the &quot;wal-index&quot; is maintained in shared memory which helps readers locate pages in the WAL quickly and with a minimum of I/O. The wal-index greatly improves the performance of readers, but the use of shared memory means that all readers must exist on the same machine. This is why the write-ahead log implementation will not work on a network filesystem.</source>
          <target state="translated">Когда читателю нужна страница контента,он сначала проверяет WAL,не появляется ли эта страница там,и если появляется,то тянет за собой последнюю копию страницы,которая появляется в WAL перед отметкой конца читателя.Если до отметки конца читателя в WAL нет ни одной копии страницы,то эта страница считывается из исходного файла базы данных.Считыватели могут существовать в отдельных процессах,поэтому,чтобы не заставлять каждое считывающее устройство сканировать весь WAL в поисках страниц (файл WAL может вырасти до нескольких мегабайт,в зависимости от того,как часто выполняются контрольно-пропускные пункты),в общей памяти поддерживается структура данных,называемая &quot;wal-index&quot;,которая помогает считывающим устройствам быстро и с минимальным количеством операций ввода-вывода определять местонахождение страниц в WAL.Wal-index значительно повышает производительность считывателей,но использование общей памяти означает,что все считыватели должны существовать на одной машине.Вот почему реализация записи в журнал не будет работать на сетевой файловой системе.</target>
        </trans-unit>
        <trans-unit id="730f5bd701321fbbb693ce5b184d905999894efe" translate="yes" xml:space="preserve">
          <source>When a row is deleted from an external content FTS4 table, FTS4 needs to retrieve the column values of the row being deleted from the content table. This is so that FTS4 can update the full-text index entries for each token that occurs within the deleted row to indicate that row has been deleted. If the content table row cannot be found, or if it contains values inconsistent with the contents of the FTS index, the results can be difficult to predict. The FTS index may be left containing entries corresponding to the deleted row, which can lead to seemingly nonsensical results being returned by subsequent SELECT queries. The same applies when a row is updated, as internally an UPDATE is the same as a DELETE followed by an INSERT.</source>
          <target state="translated">Когда строка удаляется из таблицы внешнего содержимого FTS4,FTS4 должна получить значения столбцов удаляемой строки из таблицы содержимого.Это делается для того,чтобы FTS4 могла обновлять записи полнотекстового индекса для каждого маркера,находящегося внутри удаленной строки,чтобы указывать на то,что строка была удалена.Если строка таблицы содержимого не может быть найдена,или если она содержит значения,несовместимые с содержимым индекса FTS,результаты может быть трудно предсказать.Индекс FTS может быть оставлен с записями,соответствующими удаленной строке,что может привести к тому,что последующие SELECT-запросы будут возвращать на первый взгляд бессмысленные результаты.То же самое относится и к обновлению строки,так как внутренне UPDATE-это то же самое,что DELETE,за которым следует INSERT.</target>
        </trans-unit>
        <trans-unit id="c5bdbf38f9947ad2a93dddd10975fb895dc64e45" translate="yes" xml:space="preserve">
          <source>When a schema change occurs that requires a prepared statement to be reparsed and reprepared, that event is logged with the error code SQLITE_SCHEMA. The reparse and reprepare is normally automatic (assuming that &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; has been used to prepared the statements originally, which is recommended) and so these logging events are normally the only way to know that reprepares are taking place.</source>
          <target state="translated">Когда происходит изменение схемы, которое требует повторного анализа и повторного сопоставления подготовленного оператора, это событие регистрируется с кодом ошибки SQLITE_SCHEMA. Повторная обработка и повторная подготовка обычно выполняются автоматически (при условии, что &lt;a href=&quot;c3ref/prepare&quot;&gt;sqlite3_prepare_v2 ()&lt;/a&gt; была использована для первоначальной подготовки операторов, что рекомендуется), и поэтому эти события регистрации обычно являются единственным способом узнать, что происходит повторное сравнение.</target>
        </trans-unit>
        <trans-unit id="19333c5294fb7ef73ead50d971608427e5e277b4" translate="yes" xml:space="preserve">
          <source>When a search request occurs and pending documents are indexed for the first time, the ftsdocs table must be updated by setting the idxed column to true and also filling in several other columns with information pertinent to the search. That other information is obtained from a join. The query is this:</source>
          <target state="translated">При возникновении поискового запроса и при первом индексировании отложенных документов таблица ftsdocs должна быть обновлена путем установки значения idxed в столбце true,а также путем заполнения нескольких других столбцов информацией,относящейся к поиску.Эта другая информация получается из соединения.Запрос такой:</target>
        </trans-unit>
        <trans-unit id="5a34c7922c5247a2a858115497a487644ed495d8" translate="yes" xml:space="preserve">
          <source>When a session object is disabled (see the &lt;a href=&quot;#sqlite3session_enable&quot;&gt;sqlite3session_enable()&lt;/a&gt; API), it does not accumulate records when rows are inserted, updated or deleted. This may appear to have some counter-intuitive effects if a single row is written to more than once during a session. For example, if a row is inserted while a session object is enabled, then later deleted while the same session object is disabled, no INSERT record will appear in the changeset, even though the delete took place while the session was disabled. Or, if one field of a row is updated while a session is disabled, and another field of the same row is updated while the session is enabled, the resulting changeset will contain an UPDATE change that updates both fields.</source>
          <target state="translated">Когда объект сеанса отключен (см. API &lt;a href=&quot;#sqlite3session_enable&quot;&gt;sqlite3session_enable ()&lt;/a&gt; ), он не накапливает записи при вставке, обновлении или удалении строк. Может показаться, что это имеет некоторые нелогичные эффекты, если одна строка записывается более одного раза за сеанс. Например, если строка вставляется, когда объект сеанса включен, а затем удаляется, когда тот же объект сеанса отключен, запись INSERT не появится в наборе изменений, даже если удаление произошло, когда сеанс был отключен. Или, если одно поле строки обновляется, пока сеанс отключен, а другое поле той же строки обновляется, пока сеанс включен, результирующий набор изменений будет содержать изменение UPDATE, которое обновляет оба поля.</target>
        </trans-unit>
        <trans-unit id="4f45d6d9d609e68af4097ec8d881bf58ab9f2d1b" translate="yes" xml:space="preserve">
          <source>When a session object is disabled (see the &lt;a href=&quot;sqlite3session_enable&quot;&gt;sqlite3session_enable()&lt;/a&gt; API), it does not accumulate records when rows are inserted, updated or deleted. This may appear to have some counter-intuitive effects if a single row is written to more than once during a session. For example, if a row is inserted while a session object is enabled, then later deleted while the same session object is disabled, no INSERT record will appear in the changeset, even though the delete took place while the session was disabled. Or, if one field of a row is updated while a session is disabled, and another field of the same row is updated while the session is enabled, the resulting changeset will contain an UPDATE change that updates both fields.</source>
          <target state="translated">Когда объект сеанса отключен (см. API &lt;a href=&quot;sqlite3session_enable&quot;&gt;sqlite3session_enable ()&lt;/a&gt; ), он не накапливает записи при вставке, обновлении или удалении строк. Может показаться, что это имеет некоторые нелогичные эффекты, если одна строка записывается более одного раза за сеанс. Например, если строка вставляется, когда объект сеанса включен, а затем удаляется, когда тот же объект сеанса отключен, запись INSERT не появится в наборе изменений, даже если удаление произошло, когда сеанс был отключен. Или, если одно поле строки обновляется, пока сеанс отключен, а другое поле той же строки обновляется, пока сеанс включен, результирующий набор изменений будет содержать изменение UPDATE, которое обновляет оба поля.</target>
        </trans-unit>
        <trans-unit id="0c5e9130632720140f5680108f22eb0b1e949a18" translate="yes" xml:space="preserve">
          <source>When a string containing SQL statements is to be evaluated it is first sent to the tokenizer. The tokenizer breaks the SQL text into tokens and hands those tokens one by one to the parser. The tokenizer is hand-coded in the file</source>
          <target state="translated">Когда строка,содержащая SQL-операторы,должна быть обработана,она сначала отправляется в токенайзер.Токенайзер разбивает SQL-текст на токены и передает эти токены один за другим парсеру.Токенайзер вручную кодируется в файл.</target>
        </trans-unit>
        <trans-unit id="784cd84ee25201af9adae4be302f69e70ce7fa77" translate="yes" xml:space="preserve">
          <source>When a subquery is implemented as a co-routine, byte-code is generated to implement the subquery as if it were a standalone query, except instead of returning rows of results back to the application, the co-routine yields control back to the caller after each row is computed. The caller can then use that one computed row as part of its computation, then invoke the co-routine again when it is ready for the next row.</source>
          <target state="translated">Когда подзапрос реализован в виде корутины,для реализации подзапроса генерируется байтовый код,как если бы это был отдельный запрос,за исключением того,что вместо возврата строк результатов обратно в приложение,корутина возвращает управление вызывающему абоненту после вычисления каждой строки.Затем вызывающий абонент может использовать эту вычисленную строку как часть своего вычисления,а затем снова вызывать сорутийную маршрутизацию,когда она будет готова для следующей строки.</target>
        </trans-unit>
        <trans-unit id="de44a27c9eba79e888eaebdda88d807698edb9ba" translate="yes" xml:space="preserve">
          <source>When a subquery occurs in the FROM clause of a SELECT, the simplest behavior is to evaluate the subquery into a transient table, then run the outer SELECT against the transient table. But such a plan can be suboptimal since the transient table will not have any indices and the outer query (which is likely a join) will be forced to do a full table scan on the transient table.</source>
          <target state="translated">Когда подзапрос возникает в пункте FROM SELECT,простейшим поведением является оценка подзапроса в переходную таблицу,а затем выполнение внешнего SELECT против переходной таблицы.Но такой план может быть неоптимальным,так как переходная таблица не будет иметь никаких индексов,а внешний запрос (который,скорее всего,является соединением)будет вынужден выполнить полное сканирование таблицы переходных процессов.</target>
        </trans-unit>
        <trans-unit id="e6f53457f25c665c86828dcb5054cd8bbf48413b" translate="yes" xml:space="preserve">
          <source>When a subquery occurs in the FROM clause of a SELECT, the simplest behavior is to evaluate the subquery into a transient table, then run the outer SELECT against the transient table. Such a plan can be suboptimal since the transient table will not have any indexes and the outer query (which is likely a join) will be forced to do a full table scan on the transient table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e127ffb4e1dc5538bc1d8c98212bc64075d04dc4" translate="yes" xml:space="preserve">
          <source>When a users query on the FTS table requires a column value other than docid, FTS attempts to read the requested value from the corresponding column of the row in the content table with a rowid value equal to the current FTS docid. Only the subset of content-table columns duplicated in the FTS/34 table declaration can be queried for - to retrieve values from any other columns the content table must be queried directly. Or, if such a row cannot be found in the content table, a NULL value is used instead. For example:</source>
          <target state="translated">Когда пользовательский запрос к таблице FTS требует значение столбца,отличное от docid,FTS пытается прочитать запрошенное значение из соответствующего столбца строки в таблице содержимого со значением строки,равным текущему докиду FTS.Только подмножество столбцов таблицы содержимого,дублированных в декларации таблицы FTS/34,может быть запрошено-для получения значений из любых других столбцов таблица содержимого должна быть запрошена напрямую.Или,если такая строка не может быть найдена в таблице содержимого,вместо нее используется NULL-значение.Например:</target>
        </trans-unit>
        <trans-unit id="923cfb28292cf33d9bcc64415e1180bd974cc8fa" translate="yes" xml:space="preserve">
          <source>When a writer is ready to commit its changes, it executes the following steps:</source>
          <target state="translated">Когда писатель готов к фиксации своих изменений,он выполняет следующие действия:</target>
        </trans-unit>
        <trans-unit id="90c74b5a55e525d529484d187152a575e9bdd449" translate="yes" xml:space="preserve">
          <source>When a writer wants to &lt;a href=&quot;fileformat2#walreset&quot;&gt;reset the WAL&lt;/a&gt;, it must ensure that there are no locks on WAL_READ_LOCK(N) for N&amp;gt;0 because such locks indicate that some other connection is still using the current WAL file and a &lt;a href=&quot;fileformat2#walreset&quot;&gt;WAL reset&lt;/a&gt; would delete content out from those other connections. It is ok for a &lt;a href=&quot;fileformat2#walreset&quot;&gt;WAL reset&lt;/a&gt; to occur if other connections are holding WAL_READ_LOCK(0) because by holding WAL_READ_LOCK(0), those other connections are promising not to use any content from the WAL.</source>
          <target state="translated">Когда писатель хочет &lt;a href=&quot;fileformat2#walreset&quot;&gt;сбросить WAL&lt;/a&gt; , он должен убедиться, что нет блокировок WAL_READ_LOCK (N) для N&amp;gt; 0, потому что такие блокировки указывают, что какое-то другое соединение все еще использует текущий файл &lt;a href=&quot;fileformat2#walreset&quot;&gt;WAL, и сброс WAL&lt;/a&gt; удалит содержимое из те другие связи. &lt;a href=&quot;fileformat2#walreset&quot;&gt;Сброс WAL&lt;/a&gt; возможен, если другие соединения удерживают WAL_READ_LOCK (0), потому что, удерживая WAL_READ_LOCK (0), эти другие соединения обещают не использовать какой-либо контент из WAL.</target>
        </trans-unit>
        <trans-unit id="7d5748b3589eba141bc319d180f2ba5724a213ca" translate="yes" xml:space="preserve">
          <source>When all of the recommended compile-time options above are used, the SQLite library will be approximately 3% smaller and use about 5% fewer CPU cycles. So these options do not make a huge difference. But in some design situations, every little bit helps.</source>
          <target state="translated">При использовании всех рекомендованных выше вариантов времени компиляции библиотека SQLite будет примерно на 3% меньше и будет использовать примерно на 5% меньше процессорных циклов.Таким образом,эти опции не имеют большой разницы.Но в некоторых дизайнерских ситуациях,каждая мелочь помогает.</target>
        </trans-unit>
        <trans-unit id="07429870ba57300bd363c85117e03fbff3fb9b62" translate="yes" xml:space="preserve">
          <source>When all processing is complete, &lt;b&gt;sqlite_step&lt;/b&gt; will return either SQLITE_DONE or SQLITE_ERROR. SQLITE_DONE indicates that the statement completed successfully and SQLITE_ERROR indicates that there was a run-time error. (The details of the error are obtained from &lt;b&gt;sqlite_finalize&lt;/b&gt;.) It is a misuse of the library to attempt to call &lt;b&gt;sqlite_step&lt;/b&gt; again after it has returned SQLITE_DONE or SQLITE_ERROR.</source>
          <target state="translated">Когда вся обработка завершена, &lt;b&gt;sqlite_step&lt;/b&gt; вернет либо SQLITE_DONE, либо SQLITE_ERROR. SQLITE_DONE указывает, что инструкция завершена успешно, а SQLITE_ERROR указывает, что произошла ошибка времени выполнения. (Подробная информация об ошибке получена из &lt;b&gt;sqlite_finalize&lt;/b&gt; .) Попытка повторно вызвать &lt;b&gt;sqlite_step&lt;/b&gt; после того, как она вернула SQLITE_DONE или SQLITE_ERROR, является неправильным использованием библиотеки .</target>
        </trans-unit>
        <trans-unit id="9464a70b807f00dabcb5c4da75acd44d0a619fea" translate="yes" xml:space="preserve">
          <source>When all the INSERTs are put in a transaction, SQLite no longer has to close and reopen the database or invalidate its cache between each statement. It also does not have to do any fsync()s until the very end. When unshackled in this way, SQLite is much faster than either PostgreSQL and MySQL.</source>
          <target state="translated">Когда все INSERT помещаются в транзакцию,SQLite больше не должен закрывать и открывать базу данных заново или аннулировать ее кэш между каждым оператором.Он также не должен делать никаких fsync()s до самого конца.При такой разблокировке SQLite намного быстрее,чем PostgreSQL и MySQL.</target>
        </trans-unit>
        <trans-unit id="83a11d4701cb9320d2bf4587af27d26604be7f83" translate="yes" xml:space="preserve">
          <source>When an FTS table accumulates 16 b-tree segments at the same level, the next INSERT into that table will cause all 16 segments to be merged into a single b-tree segment at the next higher level. The effect of these level merges is that most INSERTs into an FTS table are very fast and take minimal memory, but an occasional INSERT is slow and generates a large transaction because of the need to do merging. This results in &quot;spiky&quot; performance of INSERTs.</source>
          <target state="translated">Когда в таблице ФСТ накапливается 16 b-деревянных сегментов на одном уровне,следующий INSERT в эту таблицу приведет к тому,что все 16 сегментов будут объединены в один b-деревянный сегмент на следующем более высоком уровне.Эффект от слияния этих уровней заключается в том,что большинство INSERT в таблицу FTS очень быстрые и занимают минимальную память,но иногда INSERT медленный и генерирует большую транзакцию из-за необходимости делать слияние.Это приводит к &quot;шипиковой&quot; производительности INSERT.</target>
        </trans-unit>
        <trans-unit id="c3b65790b6c542323caaa50e227caf3d370e16fb" translate="yes" xml:space="preserve">
          <source>When an FTS5 table uses the custom tokenizer, the FTS5 core calls xCreate() once to create a tokenizer, then xTokenize() zero or more times to tokenize strings, then xDelete() to free any resources allocated by xCreate(). More specifically:</source>
          <target state="translated">Когда таблица FTS5 использует пользовательский токенайзер,ядро FTS5 один раз вызывает xCreate()для создания токенайзера,затем xTokenize()ноль или больше раз для токенирования строк,затем xDelete()для освобождения любых ресурсов,выделенных xCreate().Более конкретно:</target>
        </trans-unit>
        <trans-unit id="09202e860e734da0abbd632a5204a2fbedb299ae" translate="yes" xml:space="preserve">
          <source>When an FTS5 virtual table is created in a database, between 3 and 5 real tables are created in the database. These are known as &quot;&lt;a href=&quot;vtab#xshadowname&quot;&gt;shadow tables&lt;/a&gt;&quot;, and are used by the virtual table module to store persistent data. They should not be accessed directly by the user. Many other virtual table modules, including &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt; and &lt;a href=&quot;rtree&quot;&gt;rtree&lt;/a&gt;, also create and use shadow tables.</source>
          <target state="translated">Когда виртуальная таблица FTS5 создается в базе данных, в базе данных создается от 3 до 5 реальных таблиц. Они известны как &amp;laquo; &lt;a href=&quot;vtab#xshadowname&quot;&gt;теневые таблицы&lt;/a&gt; &amp;raquo; и используются модулем виртуальных таблиц для хранения постоянных данных. Пользователь не должен обращаться к ним напрямую. Многие другие модули виртуальных таблиц, включая &lt;a href=&quot;fts3&quot;&gt;FTS3&lt;/a&gt; и &lt;a href=&quot;rtree&quot;&gt;rtree&lt;/a&gt; , также создают и используют теневые таблицы.</target>
        </trans-unit>
        <trans-unit id="8a38c7dc316e7e37718537bdea61961f91a6e323" translate="yes" xml:space="preserve">
          <source>When an SQL program is submitted to SQLite, the first step is to split the source text into &quot;tokens&quot;. A token might be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b898f19b28eed6509a35351ba88f244733f8458f" translate="yes" xml:space="preserve">
          <source>When an applicable constraint violation occurs, the ABORT resolution algorithm aborts the current SQL statement with an SQLITE_CONSTRAINT error and backs out any changes made by the current SQL statement; but changes caused by prior SQL statements within the same transaction are preserved and the transaction remains active. This is the default behavior and the behavior specified by the SQL standard.</source>
          <target state="translated">Когда происходит соответствующее нарушение ограничения,алгоритм разрешения ABORT прерывает текущий SQL-оператор с ошибкой SQLITE_CONSTRAINT и отменяет все изменения,сделанные текущим SQL-оператором;но изменения,вызванные предыдущими SQL-операторами в рамках той же самой транзакции,сохраняются,и транзакция остается активной.Это поведение по умолчанию и поведение,определяемое стандартом SQL.</target>
        </trans-unit>
        <trans-unit id="58bad3c331711aff15946bd280d303d43eef796f" translate="yes" xml:space="preserve">
          <source>When an applicable constraint violation occurs, the FAIL resolution algorithm aborts the current SQL statement with an SQLITE_CONSTRAINT error. But the FAIL resolution does not back out prior changes of the SQL statement that failed nor does it end the transaction. For example, if an UPDATE statement encountered a constraint violation on the 100th row that it attempts to update, then the first 99 row changes are preserved but changes to rows 100 and beyond never occur.</source>
          <target state="translated">Когда происходит соответствующее нарушение ограничения,алгоритм разрешения FAIL прерывает текущий SQL-оператор с ошибкой SQLITE_CONSTRAINT.Но разрешение FAIL не отбрасывает предыдущие изменения SQL-оператора,которые не удалось выполнить,и не завершает транзакцию.Например,если оператор UPDATE столкнулся с нарушением ограничения на 100-й строке,которую он пытается обновить,то первые 99 изменений строки сохраняются,но изменения в 100-й строке и выше никогда не происходят.</target>
        </trans-unit>
        <trans-unit id="1b4aa81c65115bc42996b729bd361c5c8fafeff0" translate="yes" xml:space="preserve">
          <source>When an applicable constraint violation occurs, the IGNORE resolution algorithm skips the one row that contains the constraint violation and continues processing subsequent rows of the SQL statement as if nothing went wrong. Other rows before and after the row that contained the constraint violation are inserted or updated normally. No error is returned for uniqueness, NOT NULL, and UNIQUE constraint errors when the IGNORE conflict resolution algorithm is used. However, the IGNORE conflict resolution algorithm works like ABORT for &lt;a href=&quot;foreignkeys&quot;&gt;foreign key constraint&lt;/a&gt; errors.</source>
          <target state="translated">Когда происходит применимое нарушение ограничения, алгоритм разрешения IGNORE пропускает одну строку, которая содержит нарушение ограничения, и продолжает обработку последующих строк оператора SQL, как если бы ничего не произошло. Другие строки до и после строки, содержащей нарушение ограничения, вставляются или обновляются обычным образом. При использовании алгоритма разрешения конфликтов IGNORE ошибка не возвращается для ошибок ограничения уникальности, NOT NULL и UNIQUE. Однако алгоритм разрешения конфликтов IGNORE работает как ABORT для ошибок &lt;a href=&quot;foreignkeys&quot;&gt;ограничения внешнего ключа&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a5ad08c0ccf1a58d1c588bdc448e26465adfe8be" translate="yes" xml:space="preserve">
          <source>When an applicable constraint violation occurs, the ROLLBACK resolution algorithm aborts the current SQL statement with an SQLITE_CONSTRAINT error and rolls back the current transaction. If no transaction is active (other than the implied transaction that is created on every command) then the ROLLBACK resolution algorithm works the same as the ABORT algorithm.</source>
          <target state="translated">Когда происходит соответствующее нарушение ограничения,алгоритм разрешения ROLLBACK прерывает текущий SQL-оператор с ошибкой SQLITE_CONSTRAINT и откатывает текущую транзакцию.Если ни одна транзакция не активна (кроме подразумеваемой транзакции,которая создается по каждой команде),то алгоритм разрешения ROLLBACK работает так же,как и алгоритм ABORT.</target>
        </trans-unit>
        <trans-unit id="df9a570011a02f30ad10c7c02dfbae7f79c1d8bc" translate="yes" xml:space="preserve">
          <source>When an attempt is made to read the 100 byte</source>
          <target state="translated">При попытке прочитать 100-байт</target>
        </trans-unit>
        <trans-unit id="e571fd87d73f16df54e68558314d212f85e9756b" translate="yes" xml:space="preserve">
          <source>When an error occurs, &lt;a href=&quot;#sqlite3_step&quot;&gt;sqlite3_step()&lt;/a&gt; will return one of the detailed &lt;a href=&quot;rescode&quot;&gt;error codes&lt;/a&gt; or &lt;a href=&quot;rescode#extrc&quot;&gt;extended error codes&lt;/a&gt;. The legacy behavior was that &lt;a href=&quot;#sqlite3_step&quot;&gt;sqlite3_step()&lt;/a&gt; would only return a generic &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_ERROR&lt;/a&gt; result code and the application would have to make a second call to &lt;a href=&quot;#sqlite3_reset&quot;&gt;sqlite3_reset()&lt;/a&gt; in order to find the underlying cause of the problem. With the &quot;v2&quot; prepare interfaces, the underlying reason for the error is returned immediately.</source>
          <target state="translated">При возникновении ошибки &lt;a href=&quot;#sqlite3_step&quot;&gt;sqlite3_step ()&lt;/a&gt; вернет один из подробных &lt;a href=&quot;rescode&quot;&gt;кодов ошибок&lt;/a&gt; или &lt;a href=&quot;rescode#extrc&quot;&gt;расширенных кодов ошибок&lt;/a&gt; . Унаследованное поведение заключалось в том, что &lt;a href=&quot;#sqlite3_step&quot;&gt;sqlite3_step ()&lt;/a&gt; возвращал только общий &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;результирующий&lt;/a&gt; код SQLITE_ERROR, и приложению пришлось бы сделать второй вызов &lt;a href=&quot;#sqlite3_reset&quot;&gt;sqlite3_reset ()&lt;/a&gt; , чтобы найти основную причину проблемы. С интерфейсами подготовки &quot;v2&quot; основная причина ошибки возвращается немедленно.</target>
        </trans-unit>
        <trans-unit id="ccab92f3619cb54ee4858ee94848a4ee81189c29" translate="yes" xml:space="preserve">
          <source>When an error occurs, &lt;a href=&quot;step&quot;&gt;sqlite3_step()&lt;/a&gt; will return one of the detailed &lt;a href=&quot;../rescode&quot;&gt;error codes&lt;/a&gt; or &lt;a href=&quot;../rescode#extrc&quot;&gt;extended error codes&lt;/a&gt;. The legacy behavior was that &lt;a href=&quot;step&quot;&gt;sqlite3_step()&lt;/a&gt; would only return a generic &lt;a href=&quot;../rescode#error&quot;&gt;SQLITE_ERROR&lt;/a&gt; result code and the application would have to make a second call to &lt;a href=&quot;reset&quot;&gt;sqlite3_reset()&lt;/a&gt; in order to find the underlying cause of the problem. With the &quot;v2&quot; prepare interfaces, the underlying reason for the error is returned immediately.</source>
          <target state="translated">При возникновении ошибки &lt;a href=&quot;step&quot;&gt;sqlite3_step ()&lt;/a&gt; вернет один из подробных &lt;a href=&quot;../rescode&quot;&gt;кодов ошибок&lt;/a&gt; или &lt;a href=&quot;../rescode#extrc&quot;&gt;расширенных кодов ошибок&lt;/a&gt; . Унаследованное поведение заключалось в том, что &lt;a href=&quot;step&quot;&gt;sqlite3_step ()&lt;/a&gt; возвращал только общий &lt;a href=&quot;../rescode#error&quot;&gt;результирующий&lt;/a&gt; код SQLITE_ERROR, и приложению пришлось бы сделать второй вызов &lt;a href=&quot;reset&quot;&gt;sqlite3_reset ()&lt;/a&gt; , чтобы найти основную причину проблемы. С интерфейсами подготовки &quot;v2&quot; основная причина ошибки возвращается немедленно.</target>
        </trans-unit>
        <trans-unit id="5d56e138a3f9cc682aa13f997335180c0fb3034f" translate="yes" xml:space="preserve">
          <source>When an expression is a simple reference to a column of a real table (not a &lt;a href=&quot;lang_createview&quot;&gt;VIEW&lt;/a&gt; or subquery) then the expression has the same affinity as the table column.</source>
          <target state="translated">Если выражение представляет собой простую ссылку на столбец реальной таблицы (не &lt;a href=&quot;lang_createview&quot;&gt;VIEW&lt;/a&gt; или подзапрос), тогда выражение имеет такое же сходство, как и столбец таблицы.</target>
        </trans-unit>
        <trans-unit id="6e0bc34d56cd507e6524dea6d88364c2053501fb" translate="yes" xml:space="preserve">
          <source>When an in-memory database is named in this way, it will only share its cache with another connection that uses exactly the same name.</source>
          <target state="translated">Когда база данных in-memory названа таким образом,она будет делиться своим кэшем только с другим соединением,которое использует точно такое же имя.</target>
        </trans-unit>
        <trans-unit id="a4bc24ec2391f7a4a80ebd40d7eacec7ec5836a6" translate="yes" xml:space="preserve">
          <source>When an index contains all of the data needed for a query and when the original table never needs to be consulted, we call that index a &quot;covering index&quot;.</source>
          <target state="translated">Когда индекс содержит все данные,необходимые для запроса,и когда исходная таблица никогда не нуждается в консультациях,мы называем этот индекс &quot;охватывающим индексом&quot;.</target>
        </trans-unit>
        <trans-unit id="82ebd13a345482eaf43922980ab28662ac5f3021" translate="yes" xml:space="preserve">
          <source>When an unlock-notify callback is registered, the application provides a single void* pointer that is passed to the callback when it is invoked. However, the signature of the callback function allows SQLite to pass it an array of void* context pointers. The first argument passed to an unlock-notify callback is a pointer to an array of void* pointers, and the second is the number of entries in the array.</source>
          <target state="translated">При регистрации обратного вызова с уведомлением о разблокировке приложение предоставляет единственный указатель void*,который передается обратному вызову при его вызове.Однако сигнатура функции обратного вызова позволяет SQLite передать ему массив указателей на контекст void*.Первый аргумент,передаваемый для обратного вызова unlock-уведомления-указатель на массив указателей void*,а второй-количество записей в массиве.</target>
        </trans-unit>
        <trans-unit id="52b75d8996a29266548750270878024301ed32e8" translate="yes" xml:space="preserve">
          <source>When attempting to open a file, the SQLITE_NOTADB error indicates that the file being opened does not appear to be an SQLite database file.</source>
          <target state="translated">При попытке открыть файл ошибка SQLITE_NOTADB указывает на то,что открываемый файл не является файлом базы данных SQLite.</target>
        </trans-unit>
        <trans-unit id="9105d0e8a7ab7b349bd2fbe878c8275b8882d52a" translate="yes" xml:space="preserve">
          <source>When both the SQLite core and the &lt;a href=&quot;cli&quot;&gt;Command Line Interface&lt;/a&gt; (CLI) are both compiled with this option, then the CLI provides an extra command named &quot;.iotrace&quot; that provides a low-level log of I/O activity. This option is experimental and may be discontinued in a future release.</source>
          <target state="translated">Когда и ядро ​​SQLite, и &lt;a href=&quot;cli&quot;&gt;интерфейс командной строки&lt;/a&gt; (CLI) скомпилированы с этой опцией, тогда CLI предоставляет дополнительную команду с именем &amp;laquo;.iotrace&amp;raquo;, которая обеспечивает низкоуровневый журнал операций ввода-вывода. Этот вариант является экспериментальным и может быть прекращен в будущем выпуске.</target>
        </trans-unit>
        <trans-unit id="36f9015046bd06c8d94d98831683d6a650fd53ca" translate="yes" xml:space="preserve">
          <source>When building the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt;, it is helpful, but not required, to have the following third-party libraries on hand:</source>
          <target state="translated">При создании &lt;a href=&quot;cli&quot;&gt;интерфейса командной строки&lt;/a&gt; полезно, но не обязательно, иметь под рукой следующие сторонние библиотеки:</target>
        </trans-unit>
        <trans-unit id="ba9eeb759b581addc9af410a4bf9f2616522ac5b" translate="yes" xml:space="preserve">
          <source>When building with MSVC on Windows systems, one can put the zlib source code in the compat/zlib subdirectory of the source tree and then add the USE_ZLIB=1 option to the nmake command to cause the The Makefile.msc to automatically build and use an appropriate zlib library implementation.</source>
          <target state="translated">При сборке с помощью MSVC на Windows-системах можно поместить исходный код zlib в подкаталог compat/zlib дерева исходных текстов,а затем добавить опцию USE_ZLIB=1 в команду nmake,чтобы заставить Makefile.msc автоматически собрать и использовать соответствующую реализацию библиотеки zlib.</target>
        </trans-unit>
        <trans-unit id="e30f7cd9c75ce2c6c161c9108a391a6b6c55986e" translate="yes" xml:space="preserve">
          <source>When casting a BLOB value to INTEGER, the value is first converted to TEXT.</source>
          <target state="translated">При литье BLOB-значения в INTEGER,значение сначала конвертируется в TEXT.</target>
        </trans-unit>
        <trans-unit id="5c0c597294629f9542feb4df0871368a01531b6a" translate="yes" xml:space="preserve">
          <source>When casting a BLOB value to a REAL, the value is first converted to TEXT.</source>
          <target state="translated">При литье BLOB-значения в REAL,значение сначала конвертируется в TEXT.</target>
        </trans-unit>
        <trans-unit id="5067d93cc1cb86aa6af9bcf672584d0b1585ff55" translate="yes" xml:space="preserve">
          <source>When casting a TEXT value to INTEGER, the longest possible prefix of the value that can be interpreted as an integer number is extracted from the TEXT value and the remainder ignored. Any leading spaces in the TEXT value when converting from TEXT to INTEGER are ignored. If there is no prefix that can be interpreted as an integer number, the result of the conversion is 0. If the prefix integer is greater than +9223372036854775807 then the result of the cast is exactly +9223372036854775807. Similarly, if the prefix integer is less than -9223372036854775808 then the result of the cast is exactly -9223372036854775808.</source>
          <target state="translated">При приведении значения TEXT к INTEGER из значения TEXT извлекается самый длинный префикс значения,который может быть интерпретирован как целое число,а остаток игнорируется.Любые опережающие пробелы в значении TEXT при преобразовании из TEXT в INTEGER игнорируются.Если нет префикса,который может быть интерпретирован как целое число,то результат преобразования равен 0.Если префиксное целое число больше +9223372036854775807,то результат преобразования точно равен +9223372036854775807.Аналогично,если целое префиксное число меньше чем -9223372036854775808,то результат кастинга будет точно -9223372036854775808.</target>
        </trans-unit>
        <trans-unit id="65da0fa3bb91d9ed81f980bbc2df26063662f53c" translate="yes" xml:space="preserve">
          <source>When casting a TEXT value to REAL, the longest possible prefix of the value that can be interpreted as a real number is extracted from the TEXT value and the remainder ignored. Any leading spaces in the TEXT value are ignored when converging from TEXT to REAL. If there is no prefix that can be interpreted as a real number, the result of the conversion is 0.0.</source>
          <target state="translated">При приведении значения TEXT к REAL из значения TEXT извлекается самый длинный префикс значения,который может быть интерпретирован как вещественное число,а остаток игнорируется.Любые опережающие пробелы в значении TEXT игнорируются при конвергенции из TEXT в REAL.Если префикс,который может быть интерпретирован как вещественное число,отсутствует,то результат конвертации равен 0.0.</target>
        </trans-unit>
        <trans-unit id="46e82821742f6cd2f96bd6126debacd8be0bdcfb" translate="yes" xml:space="preserve">
          <source>When casting to INTEGER, if the text looks like a floating point value with an exponent, the exponent will be ignored because it is no part of the integer prefix. For example, &quot;(CAST '123e+5' AS INTEGER)&quot; results in 123, not in 12300000.</source>
          <target state="translated">При приведении к INTEGER,если текст выглядит как значение с плавающей точкой с экспонентом,то экспонент будет проигнорирован,так как он не является частью целочисленного префикса.Например,&quot;(CAST '123e+5' AS INTEGER)&quot; приводит к 123,а не к 12300000.</target>
        </trans-unit>
        <trans-unit id="39d5e03e61b6bf8d9e7be24acbf923224eccdb8e" translate="yes" xml:space="preserve">
          <source>When checking for the WHERE-clause push-down optimization, verify that all terms of the compound inner SELECT are non-aggregate, not just the last term. Fix for ticket &lt;a href=&quot;https://www.sqlite.org/src/info/f7f8c97e97597&quot;&gt;f7f8c97e97597&lt;/a&gt;.</source>
          <target state="translated">При проверке оптимизации с расширением предложения WHERE убедитесь, что все члены составного внутреннего SELECT не агрегированы, а не только последний член. Исправление для билета &lt;a href=&quot;https://www.sqlite.org/src/info/f7f8c97e97597&quot;&gt;f7f8c97e97597&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95988d2f9a83f35536e66d62cf26515907b72996" translate="yes" xml:space="preserve">
          <source>When compared with SQLite's built-in VACUUM command, RBU Vacuum has the following limitations:</source>
          <target state="translated">По сравнению со встроенной в SQLite командой VACUUM,RBU Vacuum имеет следующие ограничения:</target>
        </trans-unit>
        <trans-unit id="71ec8021f2a78c2f5787e61e104c092e2cf0b2cc" translate="yes" xml:space="preserve">
          <source>When comparing a base expression against a WHEN expression, the same collating sequence, affinity, and NULL-handling rules apply as if the base expression and WHEN expression are respectively the left- and right-hand operands of an</source>
          <target state="translated">При сравнении базового выражения с выражением &quot;КОГДА&quot; применяются одни и те же правила коллидирования последовательности,сродства и NULL-обработки,как если бы базовое выражение и выражение &quot;КОГДА&quot; были соответственно левым и правым операндами операнда</target>
        </trans-unit>
        <trans-unit id="8a8e8bf765d052cbbdbda4e8360051200aec0343" translate="yes" xml:space="preserve">
          <source>When comparing text values, the &lt;a href=&quot;datatype3#collation&quot;&gt;collating sequence&lt;/a&gt; associated with the parent key column is always used.</source>
          <target state="translated">При сравнении текстовых значений всегда используется &lt;a href=&quot;datatype3#collation&quot;&gt;последовательность сортировки,&lt;/a&gt; связанная с родительским ключевым столбцом.</target>
        </trans-unit>
        <trans-unit id="8bd6464f68b9918a029c67f18300aa6bddf2bf88" translate="yes" xml:space="preserve">
          <source>When comparing values, if the parent key column has an &lt;a href=&quot;datatype3#affinity&quot;&gt;affinity&lt;/a&gt;, then that affinity is applied to the child key value before the comparison is performed.</source>
          <target state="translated">При сравнении значений, если столбец родительского ключа имеет &lt;a href=&quot;datatype3#affinity&quot;&gt;сходство&lt;/a&gt; , то это соответствие применяется к значению дочернего ключа перед выполнением сравнения.</target>
        </trans-unit>
        <trans-unit id="8a8c1f258ce77d3b0b1a04487b470e53840cc8d0" translate="yes" xml:space="preserve">
          <source>When compiled with &lt;a href=&quot;compile#debug&quot;&gt;SQLITE_DEBUG&lt;/a&gt;, SQLite includes routines that will print out various internal parse tree structures as ASCII-art graphs. This can be very useful in a debugging in order to understand the variables that SQLite is working with.</source>
          <target state="translated">При компиляции с &lt;a href=&quot;compile#debug&quot;&gt;SQLITE_DEBUG&lt;/a&gt; SQLite включает в себя процедуры, которые будут распечатывать различные внутренние структуры дерева синтаксического анализа в виде графов в стиле ASCII. Это может быть очень полезно при отладке, чтобы понять переменные, с которыми работает SQLite.</target>
        </trans-unit>
        <trans-unit id="b440573f54c675131665957f45fa09226296363a" translate="yes" xml:space="preserve">
          <source>When compiling with this option, it will normally be necessary to add a linker option to include the zlib library in the build. Normal this option is &quot;-lz&quot; but might be different on different systems.</source>
          <target state="translated">При компиляции с этой опцией обычно будет необходимо добавить опцию компоновщика для включения библиотеки zlib в сборку.Обычно эта опция &quot;-lz&quot;,но на разных системах может быть разной.</target>
        </trans-unit>
        <trans-unit id="c300eac9b0ba20d1c5f0548bea68bd1985408338" translate="yes" xml:space="preserve">
          <source>When computing the cost of the &lt;a href=&quot;optoverview#skipscan&quot;&gt;skip-scan optimization&lt;/a&gt;, take into account the fact that multiple seeks are required.</source>
          <target state="translated">При расчете стоимости &lt;a href=&quot;optoverview#skipscan&quot;&gt;оптимизации пропуска сканирования учитывайте&lt;/a&gt; тот факт, что требуется несколько поисков.</target>
        </trans-unit>
        <trans-unit id="0f31671e641184fdff6ce2920c28181e45773893" translate="yes" xml:space="preserve">
          <source>When confronted with OR-connected terms in a WHERE clause, SQLite examines each OR term separately and tries to use an index to find the rowids associated with each term. It then takes the union of the resulting rowid sets to find the end result. The following figure illustrates this process:</source>
          <target state="translated">При столкновении с терминами,связанными с символом &quot;ИЛИ&quot; в выражении &quot;ГДЕ&quot;,SQLite рассматривает каждый термин &quot;ИЛИ&quot; отдельно и пытается использовать индекс для поиска строк,связанных с каждым термином.Затем он берет объединение полученных наборов шрифтов,чтобы найти конечный результат.Следующий рисунок иллюстрирует этот процесс:</target>
        </trans-unit>
        <trans-unit id="80acebb0e2681ada8eda5ed06d14fb5c6e654492" translate="yes" xml:space="preserve">
          <source>When content is deleted from an SQLite database, pages that are no longer used are added to a free list and are reused to hold content added by subsequent inserts. A bug in SQLite that was present in version 3.6.16 through 3.7.2 might cause pages to go missing out of the free list when &lt;a href=&quot;pragma#pragma_incremental_vacuum&quot;&gt;incremental_vacuum&lt;/a&gt; was used. This would not cause data loss. But it would result in the database file being larger than necessary. And it would cause the &lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;integrity_check pragma&lt;/a&gt; to report pages missing from the free list.</source>
          <target state="translated">Когда контент удаляется из базы данных SQLite, страницы, которые больше не используются, добавляются в свободный список и повторно используются для хранения контента, добавленного последующими вставками. Ошибка в SQLite, которая присутствовала в версиях с 3.6.16 по 3.7.2, могла приводить к пропаданию страниц из списка свободных при использовании &lt;a href=&quot;pragma#pragma_incremental_vacuum&quot;&gt;incremental_vacuum&lt;/a&gt; . Это не приведет к потере данных. Но это приведет к тому, что файл базы данных будет больше, чем необходимо. И это приведет к тому, что &lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;прагма Integrity_check&lt;/a&gt; сообщит о страницах, отсутствующих в свободном списке.</target>
        </trans-unit>
        <trans-unit id="ec68acb5aee4ac70ffc0e427ed46e7978d7d9aaa" translate="yes" xml:space="preserve">
          <source>When content is deleted from an SQLite database, the content is not usually erased but rather the space used to hold the content is marked as being available for reuse. This can allow deleted content to be recovered by a hacker or by forensic analysis. Running VACUUM will clean the database of all traces of deleted content, thus preventing an adversary from recovering deleted content. Using VACUUM in this way is an alternative to setting &lt;a href=&quot;pragma#pragma_secure_delete&quot;&gt;PRAGMA secure_delete=ON&lt;/a&gt;.</source>
          <target state="translated">Когда контент удаляется из базы данных SQLite, он обычно не стирается, а пространство, используемое для хранения контента, помечается как доступное для повторного использования. Это может позволить восстановить удаленный контент хакером или с помощью судебно-медицинской экспертизы. Запуск VACUUM очистит базу данных от всех следов удаленного контента, тем самым не дав злоумышленнику возможности восстановить удаленный контент. Использование VACUUM таким образом является альтернативой установке &lt;a href=&quot;pragma#pragma_secure_delete&quot;&gt;PRAGMA secure_delete = ON&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3ef3b5e9abd6cdd13cd5d387ea4a3c929af66232" translate="yes" xml:space="preserve">
          <source>When converting BLOB to TEXT, use the text encoding of the main database. Ticket #2349</source>
          <target state="translated">При преобразовании BLOB в TEXT используйте текстовую кодировку основной БД.Билет № 2349</target>
        </trans-unit>
        <trans-unit id="114a59b6e420f398fe8acae2dbbd380f2c338748" translate="yes" xml:space="preserve">
          <source>When creating a new database file during &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt; on unix systems, SQLite will try to set the permissions of the new database file to match the existing file &quot;</source>
          <target state="translated">При создании нового файла базы данных во время &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2 ()&lt;/a&gt; в системах unix SQLite попытается установить разрешения для нового файла базы данных в соответствии с существующим файлом &quot;</target>
        </trans-unit>
        <trans-unit id="bb5190d7ef1fca8d42df7043f112c5cb64984b8e" translate="yes" xml:space="preserve">
          <source>When creating new user-defined SQL functions and collating sequences, each function or collating sequence can specify if it works with UTF-8, UTF-16be, or UTF-16le. Separate implementations can be registered for each encoding. If an SQL function or collating sequence is required but a version for the current text encoding is not available, then the text is automatically converted. As before, this conversion takes computation time, so programmers are advised to pick a single encoding and stick with it in order to minimize the amount of unnecessary format juggling.</source>
          <target state="translated">При создании новых пользовательских SQL-функций и коллекционировании последовательностей каждая функция или коллекционирующая последовательность может указать,работает ли она с UTF-8,UTF-16be или UTF-16le.Для каждой кодировки могут быть зарегистрированы отдельные реализации.Если требуется SQL-функция или коллекционная последовательность,но версия для текущей текстовой кодировки недоступна,то текст автоматически преобразуется.Как и раньше,такое преобразование занимает время вычислений,поэтому программистам рекомендуется выбрать одну кодировку и придерживаться ее,чтобы свести к минимуму количество ненужного жонглирования форматом.</target>
        </trans-unit>
        <trans-unit id="6a02367c161ead06f619b074aecd9b89d2c0cc40" translate="yes" xml:space="preserve">
          <source>When data is appended to the end of the rollback journal, SQLite normally makes the pessimistic assumption that the file is first extended with invalid &quot;garbage&quot; data and that afterwards the correct data replaces the garbage. In other words, SQLite assumes that the file size is increased first and then afterwards the content is written into the file. If a power failure occurs after the file size has been increased but before the file content has been written, the rollback journal can be left containing garbage data. If after power is restored, another SQLite process sees the rollback journal containing the garbage data and tries to roll it back into the original database file, it might copy some of the garbage into the database file and thus corrupt the database file.</source>
          <target state="translated">Когда данные добавляются в конец журнала отката,SQLite обычно делает пессимистическое предположение,что файл сначала расширяется недействительными &quot;мусорными&quot; данными,а затем правильные данные заменяют мусор.Другими словами,SQLite предполагает,что размер файла сначала увеличивается,а затем содержимое записывается в файл.Если после увеличения размера файла,но до записи содержимого в него,происходит сбой питания,то журнал отката можно оставить с мусорными данными.Если после восстановления питания другой процесс SQLite увидит журнал отката,содержащий мусорные данные,и попытается откатить его обратно в исходный файл БД,он может скопировать часть мусора в файл БД и тем самым испортить файл БД.</target>
        </trans-unit>
        <trans-unit id="6e1728b3880c31067245341a957998cb64468579" translate="yes" xml:space="preserve">
          <source>When database corruption is detected, an SQLITE_CORRUPT error logger callback is invoked. As with I/O errors, the error message text contains the line number in the original source code where the error was first detected.</source>
          <target state="translated">При обнаружении повреждения базы данных вызывается обратный вызов логгера ошибок SQLITE_CORRUPT.Как и в случае с ошибками ввода/вывода,текст сообщения об ошибке содержит номер строки в исходном коде,где ошибка была впервые обнаружена.</target>
        </trans-unit>
        <trans-unit id="5ec353b1e7bb6a3ecdd47f7ae7473e801761839f" translate="yes" xml:space="preserve">
          <source>When dates are stored this way, row value comparisons provide a convenient way to compare dates:</source>
          <target state="translated">Когда даты хранятся таким образом,сравнение значений строк обеспечивает удобный способ сравнения дат:</target>
        </trans-unit>
        <trans-unit id="db590fa9b88387884339466c341a1e3e6a784a7d" translate="yes" xml:space="preserve">
          <source>When debugging the &lt;a href=&quot;opcode&quot;&gt;bytecode&lt;/a&gt; generator, it is often useful to know where a particular opcode is being generated. To find this easily, run the script in a debugger. Set a breakpoint on the &quot;test_addoptrace&quot; routine. Then run the &quot;PRAGMA vdbe_addoptrace=ON;&quot; followed by the SQL statement in question. Each opcode will be displayed as it is appended to the VDBE program, and the breakpoint will fire immediately thereafter. Step until reaching the opcode then look backwards in the stack to see where and how it was generated.</source>
          <target state="translated">При отладке генератора &lt;a href=&quot;opcode&quot;&gt;байт-кода&lt;/a&gt; часто бывает полезно знать, где генерируется конкретный код операции. Чтобы легко это найти, запустите сценарий в отладчике. Установите точку останова на подпрограмме test_addoptrace. Затем запустите &quot;PRAGMA vdbe_addoptrace = ON;&quot; за которым следует рассматриваемый оператор SQL. Каждый код операции будет отображаться так, как он добавлен к программе VDBE, и точка останова сработает сразу после этого. Шагайте до достижения кода операции, затем посмотрите назад в стеке, чтобы увидеть, где и как он был сгенерирован.</target>
        </trans-unit>
        <trans-unit id="d36e8b2fe095f3dcf16b488533e2eea81261ce34" translate="yes" xml:space="preserve">
          <source>When deciding between two plans with the same estimated cost, bias the selection toward the one that does not use the sorter.</source>
          <target state="translated">При выборе между двумя планами с одинаковой оценочной стоимостью,смещение выбора в сторону того,который не использует сортировщик.</target>
        </trans-unit>
        <trans-unit id="bf93f718a16c4baf24f9f9cd0779c38e6d7918df" translate="yes" xml:space="preserve">
          <source>When defined, this C-preprocessor macro activates extra code that attempts to detect misuse of the SQLite API, such as passing in NULL pointers to required parameters or using objects after they have been destroyed.</source>
          <target state="translated">При задании этого макроса C-препроцессор активирует дополнительный код,который пытается обнаружить злоупотребление SQLite API,например,передачу в NULL указателей на требуемые параметры или использование объектов после их уничтожения.</target>
        </trans-unit>
        <trans-unit id="1548f1f2e91ad07dfb5ee921f08a77e6a373fb3e" translate="yes" xml:space="preserve">
          <source>When defining a TEMP trigger on a non-TEMP table, it is important to specify the database holding the non-TEMP table. For example, in the following statement, it is important to say &quot;main.tab1&quot; instead of just &quot;tab1&quot;:</source>
          <target state="translated">При определении триггера TEMP на таблице,отличной от TEMP,важно указать БД,содержащую таблицу,отличную от TEMP.Например,в следующем утверждении важно сказать &quot;main.tab1&quot;,а не просто &quot;tab1&quot;:</target>
        </trans-unit>
        <trans-unit id="08cdbd4cf4d969a92be0666ae36716558d90ece0" translate="yes" xml:space="preserve">
          <source>When doing DELETE and UPDATE, the library used to write the record numbers of records to be deleted or updated into a temporary file. This is changed so that the record numbers are held in memory.</source>
          <target state="translated">При выполнении DELETE и UPDATE библиотека записывает во временный файл номера записей,которые необходимо удалить или обновить.Это изменяется таким образом,что номера записей хранятся в памяти.</target>
        </trans-unit>
        <trans-unit id="7d9b70c94a5c7bdd6b4a1c28dafcb83ed4d4c546" translate="yes" xml:space="preserve">
          <source>When doing an UPDATE or DELETE using a multi-column index where only a few of the earlier columns of the index are useful for the index lookup, postpone doing the main table seek until after all WHERE clause constraints have been evaluated, in case those constraints can be covered by unused later terms of the index, thus avoiding unnecessary main table seeks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cda947ba0235d70ea9379c938638b6e342ed7b3" translate="yes" xml:space="preserve">
          <source>When doing an indexed lookup of a row, the usual procedure is to do a binary search on the index to find the index entry, then extract the &lt;a href=&quot;lang_createtable#rowid&quot;&gt;rowid&lt;/a&gt; from the index and use that &lt;a href=&quot;lang_createtable#rowid&quot;&gt;rowid&lt;/a&gt; to do a binary search on the original table. Thus a typical indexed lookup involves two binary searches. If, however, all columns that were to be fetched from the table are already available in the index itself, SQLite will use the values contained in the index and will never look up the original table row. This saves one binary search for each row and can make many queries run twice as fast.</source>
          <target state="translated">При индексированном поиске строки обычная процедура состоит в том, чтобы выполнить двоичный поиск по индексу, чтобы найти запись индекса, затем извлечь &lt;a href=&quot;lang_createtable#rowid&quot;&gt;идентификатор строки&lt;/a&gt; из индекса и использовать этот &lt;a href=&quot;lang_createtable#rowid&quot;&gt;идентификатор строки&lt;/a&gt; для выполнения двоичного поиска в исходной таблице. Таким образом, типичный индексированный поиск включает два бинарных поиска. Если, однако, все столбцы, которые должны быть извлечены из таблицы, уже доступны в самом индексе, SQLite будет использовать значения, содержащиеся в индексе, и никогда не будет искать исходную строку таблицы. Это позволяет сэкономить один бинарный поиск для каждой строки и может ускорить выполнение многих запросов в два раза.</target>
        </trans-unit>
        <trans-unit id="9904bf6d42a19655ef67955a4a94073b0eae876b" translate="yes" xml:space="preserve">
          <source>When doing an insert without a rowid (argc&amp;gt;1, argv[1] is an SQL NULL), on a virtual table that uses ROWID (but not on a &lt;a href=&quot;vtab#worid&quot;&gt;WITHOUT ROWID virtual table&lt;/a&gt;), the implementation must set *pRowid to the rowid of the newly inserted row; this will become the value returned by the &lt;a href=&quot;c3ref/last_insert_rowid&quot;&gt;sqlite3_last_insert_rowid()&lt;/a&gt; function. Setting this value in all the other cases is a harmless no-op; the SQLite engine ignores the *pRowid return value if argc==1 or argv[1] is not an SQL NULL.</source>
          <target state="translated">При выполнении вставки без идентификатора строки (argc&amp;gt; 1, argv [1] - это SQL NULL) в виртуальной таблице, которая использует ROWID (но не в &lt;a href=&quot;vtab#worid&quot;&gt;виртуальной таблице БЕЗ ROWID&lt;/a&gt; ), реализация должна установить * pRowid равным идентификатору строки вновь вставленная строка; это станет значением, возвращаемым функцией &lt;a href=&quot;c3ref/last_insert_rowid&quot;&gt;sqlite3_last_insert_rowid ()&lt;/a&gt; . Установка этого значения во всех остальных случаях безобидна; механизм SQLite игнорирует возвращаемое значение * pRowid, если argc == 1 или argv [1] не является SQL NULL.</target>
        </trans-unit>
        <trans-unit id="1c8dd9af0591131c94abbb3f55e35333a90c2bb5" translate="yes" xml:space="preserve">
          <source>When enabled, this PRAGMA causes many &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statements without an ORDER BY clause to emit their results in the reverse order from what they normally would. This can help debug applications that are making invalid assumptions about the result order. The reverse_unordered_selects pragma works for most SELECT statements, however the query planner may sometimes choose an algorithm that is not easily reversed, in which case the output will appear in the same order regardless of the reverse_unordered_selects setting.</source>
          <target state="translated">При включении эта PRAGMA заставляет многие &lt;a href=&quot;lang_select&quot;&gt;операторы SELECT&lt;/a&gt; без предложения ORDER BY выдавать свои результаты в порядке, обратном тому, что они обычно делали бы. Это может помочь отладить приложения, которые делают неверные предположения о порядке результатов. Прагма reverse_unordered_selects работает для большинства операторов SELECT, однако планировщик запросов может иногда выбирать алгоритм, который нелегко изменить, и в этом случае выходные данные будут отображаться в том же порядке, независимо от параметра reverse_unordered_selects.</target>
        </trans-unit>
        <trans-unit id="03983f563e86448e3bb01e9d2368d648fb184a93" translate="yes" xml:space="preserve">
          <source>When faced with a choice of two or more indexes, SQLite tries to estimate the total amount of work needed to perform the query using each option. It then selects the option that gives the least estimated work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ef63392395a1e6663e404dcadfba942c11b299" translate="yes" xml:space="preserve">
          <source>When faced with a choice of two or more indices, SQLite tries to estimate the total amount of work needed to perform the query using each option. It then selects the option that gives the least estimated work.</source>
          <target state="translated">Столкнувшись с выбором двух и более индексов,SQLite пытается оценить общий объем работ,необходимых для выполнения запроса,используя каждый из вариантов.Затем он выбирает тот вариант,который дает наименьшую оценку работы.</target>
        </trans-unit>
        <trans-unit id="393ffe20ba1bb6822b853fbdd74f36cd0864d018" translate="yes" xml:space="preserve">
          <source>When files opened with the asynchronous VFS are read from (using the vfs xRead() method), the data is read from the file on disk and the write-queue, so that from the point of view of the vfs reader the xWrite() appears to have already completed.</source>
          <target state="translated">При считывании файлов,открытых с помощью асинхронной VFS (с помощью метода vfs xRead()),данные считываются из файла на диске и записываются на диск,так что с точки зрения читателя vfs xWrite()кажется уже завершенной.</target>
        </trans-unit>
        <trans-unit id="c7d3d8950c12709e47c72758e22cf2a9146592d1" translate="yes" xml:space="preserve">
          <source>When generating individual loops for each ORed term of an OR scan, move any constant WHERE expressions outside of the loop, as is done for top-level loops.</source>
          <target state="translated">При генерации отдельных циклов для каждого срока сканирования &quot;ИЛИ&quot;,перемещайте любые константные выражения &quot;ГДЕ&quot; за пределы цикла,как это делается для циклов верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="509726027c6ee1ed12b9f77062dac2b144897c56" translate="yes" xml:space="preserve">
          <source>When grouping values with the GROUP BY clause values with different storage classes are considered distinct, except for INTEGER and REAL values which are considered equal if they are numerically equal. No affinities are applied to any values as the result of a GROUP by clause.</source>
          <target state="translated">При группировке значений с пунктом GROUP BY значения с разными классами хранения считаются разными,за исключением значений INTEGER и REAL,которые считаются равными,если они численно равны.К каким-либо значениям в результате пункта GROUP BY не применяется никакого сходства.</target>
        </trans-unit>
        <trans-unit id="f5be44df47344688e11692055f71bde95bd3d10c" translate="yes" xml:space="preserve">
          <source>When implementing the compress and uncompress functions it is important to pay attention to data types. Specifically, when a user reads a value from a compressed FTS table, the value returned by FTS is exactly the same as the value returned by the uncompress function, including the data type. If that data type is not the same as the data type of the original value as passed to the compress function (for example if the uncompress function is returning BLOB when compress was originally passed TEXT), then the users query may not function as expected.</source>
          <target state="translated">При реализации функций сжатия и разжатия важно обращать внимание на типы данных.В частности,когда пользователь считывает значение из сжатой таблицы FTS,возвращаемое FTS значение в точности совпадает со значением,возвращаемым функцией компрессии,включая тип данных.Если этот тип данных не совпадает с типом данных исходного значения,переданного функции компрессии (например,если функция распаковки возвращает BLOB,когда компрессия была изначально передана TEXT),то пользовательский запрос может работать не так,как ожидалось.</target>
        </trans-unit>
        <trans-unit id="9aa85d5d53872aab853201ddf44e7a88440d444e" translate="yes" xml:space="preserve">
          <source>When in active use, the state of a WAL mode database is described by three separate files:</source>
          <target state="translated">При активном использовании состояние базы данных режима WAL описывается тремя отдельными файлами:</target>
        </trans-unit>
        <trans-unit id="2d85294d594836a84f09ae35993c5315f3443a88" translate="yes" xml:space="preserve">
          <source>When information is deleted from an SQLite database, the pages used to hold the deleted information are added to a &quot;&lt;a href=&quot;fileformat2#freelist&quot;&gt;freelist&lt;/a&gt;&quot;. Subsequent inserts will draw pages off of this freelist rather than expanding the database file.</source>
          <target state="translated">Когда информация удаляется из базы данных SQLite, страницы, используемые для хранения удаленной информации, добавляются в &amp;laquo;список &lt;a href=&quot;fileformat2#freelist&quot;&gt;фрилансеров&lt;/a&gt; &amp;raquo;. Последующие вставки будут вытягивать страницы из этого списка свободных страниц, а не расширять файл базы данных.</target>
        </trans-unit>
        <trans-unit id="e58c2028dd3a68f355f0f948fe1f1f5ac6f262b7" translate="yes" xml:space="preserve">
          <source>When initially opened, the cursor is in an undefined state. The SQLite core will invoke the &lt;a href=&quot;vtab#xfilter&quot;&gt;xFilter&lt;/a&gt; method on the cursor prior to any attempt to position or read from the cursor.</source>
          <target state="translated">При первом открытии курсор находится в неопределенном состоянии. Ядро SQLite вызовет метод &lt;a href=&quot;vtab#xfilter&quot;&gt;xFilter&lt;/a&gt; для курсора перед любой попыткой позиционирования или чтения с курсора.</target>
        </trans-unit>
        <trans-unit id="4ec1014aface212f1273d4c0983ab7820ffd9ca0" translate="yes" xml:space="preserve">
          <source>When inserting an explicit NULL into an INTEGER PRIMARY KEY, convert the NULL value into a unique key automatically.</source>
          <target state="translated">При вставке явного значения NULL в ключ INTEGER PRIMARY KEY автоматически преобразуйте значение NULL в уникальный ключ.</target>
        </trans-unit>
        <trans-unit id="643f10feaaa38e7180b2d82bb59e6a7c32281c82" translate="yes" xml:space="preserve">
          <source>When looking for memory allocation problems (memory leaks, use-after-free errors, buffer overflows, etc) it is sometimes useful to disable the &lt;a href=&quot;malloc#lookaside&quot;&gt;lookaside memory allocator&lt;/a&gt; then run the test under valgrind or MSAN or some other heap memory debugging tool. The lookaside memory allocator can be disabled at start-time using the &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglookaside&quot;&gt;SQLITE_CONFIG_LOOKASIDE&lt;/a&gt; interface. The &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt; will use that interface to disable lookaside if it is started with the &quot;--lookaside 0 0&quot; command line option.</source>
          <target state="translated">При поиске проблем с распределением памяти (утечки памяти, ошибки использования после освобождения, переполнение буфера и т. Д.) Иногда полезно отключить &lt;a href=&quot;malloc#lookaside&quot;&gt;резервный распределитель памяти, а&lt;/a&gt; затем запустить тест под valgrind или MSAN или каким-либо другим инструментом отладки памяти кучи. Дополнительный распределитель памяти можно отключить во время запуска с &lt;a href=&quot;c3ref/c_config_covering_index_scan#sqliteconfiglookaside&quot;&gt;помощью&lt;/a&gt; интерфейса SQLITE_CONFIG_LOOKASIDE . &lt;a href=&quot;cli&quot;&gt;Оболочка командной строки&lt;/a&gt; будет использовать этот интерфейс , чтобы отключить ассоциативный , если он запускается с &amp;laquo;--lookaside 0 0&amp;raquo; опцией командной строки.</target>
        </trans-unit>
        <trans-unit id="42fe685cb985a24b50ac506fdd29223838c245b8" translate="yes" xml:space="preserve">
          <source>When measuring test coverage, these macros are defined to be constant truth values so that they do not generate assembly language branch instructions, and hence do not come into play when calculating the branch coverage:</source>
          <target state="translated">При измерении тестового покрытия эти макросы определяются как постоянные значения истины,чтобы они не генерировали инструкций ассемблерных языковых ветвей и,следовательно,не вступали в игру при вычислении покрытия ветви:</target>
        </trans-unit>
        <trans-unit id="37b8b518e60139042da23ec309a2db4382dae010" translate="yes" xml:space="preserve">
          <source>When more than two tables are joined together as part of a FROM clause, the join operations are processed in order from left to right. In other words, the FROM clause (A join-op-1 B join-op-2 C) is computed as ((A join-op-1 B) join-op-2 C).</source>
          <target state="translated">При объединении более чем двух таблиц в рамках пункта FROM операции объединения обрабатываются по порядку слева направо.Другими словами,выражение FROM (A join-op-1 B join-op-2 C)вычисляется как ((A join-op-1 B)join-op-2 C).</target>
        </trans-unit>
        <trans-unit id="87981e247df4872c2958ce96479f7f548dab13e8" translate="yes" xml:space="preserve">
          <source>When multiple database connections share the same cache, changing the secure-delete flag on one database connection changes it for them all.</source>
          <target state="translated">Когда несколько подключений к БД используют один и тот же кэш,изменение флага secure-delete на одном подключении к БД меняет его для всех.</target>
        </trans-unit>
        <trans-unit id="cff16baa2216647f9ba74dc7c006fb34b16c7df6" translate="yes" xml:space="preserve">
          <source>When multiple database files are involved in a transaction, each database has its own rollback journal and each database is locked separately. The diagram at the right shows a scenario where three different database files have been modified within one transaction. The situation at this step is analogous to the single-file transaction scenario at &lt;a href=&quot;#section_3_6&quot;&gt;step 3.6&lt;/a&gt;. Each database file has a reserved lock. For each database, the original content of pages that are being changed have been written into the rollback journal for that database, but the content of the journals have not yet been flushed to disk. No changes have been made to the database file itself yet, though presumably there are changes being held in user memory.</source>
          <target state="translated">Когда в транзакции задействовано несколько файлов базы данных, каждая база данных имеет собственный журнал отката, и каждая база данных блокируется отдельно. На диаграмме справа показан сценарий, в котором три разных файла базы данных были изменены в рамках одной транзакции. Ситуация на этом шаге аналогична сценарию однофайловой транзакции на &lt;a href=&quot;#section_3_6&quot;&gt;шаге 3.6&lt;/a&gt; . Каждый файл базы данных имеет зарезервированную блокировку. Для каждой базы данных исходное содержимое изменяемых страниц было записано в журнал отката для этой базы данных, но содержимое журналов еще не было сброшено на диск. В сам файл базы данных еще не было внесено никаких изменений, хотя, по-видимому, изменения сохраняются в пользовательской памяти.</target>
        </trans-unit>
        <trans-unit id="594f4bededce2bfb4a7467d0259050d544509cc0" translate="yes" xml:space="preserve">
          <source>When mxFrame field is zero, it indicates that the WAL is empty and that all content should be obtained directly from the database file.</source>
          <target state="translated">Когда поле mxFrame равно нулю,это означает,что WAL пуст и все содержимое должно быть получено непосредственно из файла базы данных.</target>
        </trans-unit>
        <trans-unit id="1e88c1e1b6e3eb28ff7f2a97dc557877c5de44f1" translate="yes" xml:space="preserve">
          <source>When mxFrame is equal to &lt;a href=&quot;walformat#nbackfill&quot;&gt;nBackfill&lt;/a&gt;, that indicates that all content in the WAL has been written back into the database. In that case, all content can be read directly from the database. Furthermore, the next writer is free to &lt;a href=&quot;fileformat2#walreset&quot;&gt;reset the WAL&lt;/a&gt; if no other connections hold locks on WAL_READ_LOCK(N) for N&amp;gt;0.</source>
          <target state="translated">Когда mxFrame равно &lt;a href=&quot;walformat#nbackfill&quot;&gt;nBackfill&lt;/a&gt; , это означает, что все содержимое WAL было записано обратно в базу данных. В этом случае весь контент можно будет прочитать прямо из базы данных. Более того, следующий писатель может &lt;a href=&quot;fileformat2#walreset&quot;&gt;сбросить WAL,&lt;/a&gt; если никакие другие соединения не удерживают блокировки WAL_READ_LOCK (N) для N&amp;gt; 0.</target>
        </trans-unit>
        <trans-unit id="4d7dccde63e1547be27c7ca87cdd1931b0750828" translate="yes" xml:space="preserve">
          <source>When new tables are created using CREATE TABLE ... AS SELECT ... the datatype of the columns is the simplified SQLite datatype (TEXT, INT, REAL, NUMERIC, or BLOB) instead of a copy of the original datatype from the source table.</source>
          <target state="translated">При создании новых таблиц с помощью CREATE TABLE ...AS SELECT ...тип данных столбцов-упрощенный тип данных SQLite (TEXT,INT,REAL,NUMERIC или BLOB)вместо копии оригинального типа данных из исходной таблицы.</target>
        </trans-unit>
        <trans-unit id="a55aa5700dcf1b282b21e4844d72874dc0872eb0" translate="yes" xml:space="preserve">
          <source>When no appropriate indices are available, a query with an ORDER BY clause must be sorted as a separate step. Consider this query:</source>
          <target state="translated">При отсутствии соответствующих индексов запрос с пунктом &quot;ЗАКАЗАТЬ ПО&quot; должен быть отсортирован как отдельный шаг.Рассмотрим этот запрос:</target>
        </trans-unit>
        <trans-unit id="2a762562ee170322ef33a20f322c27cb6058b90b" translate="yes" xml:space="preserve">
          <source>When no indexes are available to aid the evaluation of a query, SQLite might create an automatic index that lasts only for the duration of a single SQL statement. Since the cost of constructing the automatic index is O(NlogN) (where N is the number of entries in the table) and the cost of doing a full table scan is only O(N), an automatic index will only be created if SQLite expects that the lookup will be run more than logN times during the course of the SQL statement. Consider an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390a0c90ac5f7c87fa004dbc08670c0d9227649a" translate="yes" xml:space="preserve">
          <source>When no indices are available to aid the evaluation of a query, SQLite might create an automatic index that lasts only for the duration of a single SQL statement. Since the cost of constructing the automatic index is O(NlogN) (where N is the number of entries in the table) and the cost of doing a full table scan is only O(N), an automatic index will only be created if SQLite expects that the lookup will be run more than logN times during the course of the SQL statement. Consider an example:</source>
          <target state="translated">Когда нет индексов,которые могли бы помочь в оценке запроса,SQLite может создать автоматический индекс,который будет длиться только в течение одного SQL-запроса.Так как стоимость построения автоматического индекса-O(NlogN)(где N-количество записей в таблице),а стоимость выполнения полного сканирования таблицы-только O(N),автоматический индекс будет создан только в том случае,если SQLite ожидает,что во время выполнения SQL-оператора поиск будет выполняться больше,чем logN раз.Рассмотрим пример:</target>
        </trans-unit>
        <trans-unit id="540aa517907a8d449dfe0e0b35e5509aa40924c4" translate="yes" xml:space="preserve">
          <source>When one of RAISE(ROLLBACK,...), RAISE(ABORT,...) or RAISE(FAIL,...) is called during trigger-program execution, the specified &lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt; processing is performed and the current query terminates. An error code of &lt;a href=&quot;rescode#constraint&quot;&gt;SQLITE_CONSTRAINT&lt;/a&gt; is returned to the application, along with the specified error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e54fe7f1e563760a880b88a508db483dfbb6a4e" translate="yes" xml:space="preserve">
          <source>When one of RAISE(ROLLBACK,...), RAISE(ABORT,...) or RAISE(FAIL,...) is called during trigger-program execution, the specified &lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT&lt;/a&gt; processing is performed the current query terminates. An error code of &lt;a href=&quot;rescode#constraint&quot;&gt;SQLITE_CONSTRAINT&lt;/a&gt; is returned to the application, along with the specified error message.</source>
          <target state="translated">Когда во время выполнения программы-триггера вызывается один из RAISE (ROLLBACK, ...), RAISE (ABORT, ...) или RAISE (FAIL, ...), выполняется указанная обработка &lt;a href=&quot;lang_conflict&quot;&gt;ON CONFLICT,&lt;/a&gt; текущий запрос завершается. В &lt;a href=&quot;rescode#constraint&quot;&gt;приложение&lt;/a&gt; возвращается код ошибки SQLITE_CONSTRAINT вместе с указанным сообщением об ошибке.</target>
        </trans-unit>
        <trans-unit id="01227fb935ccfc1f5f31820ba60592508e753c65" translate="yes" xml:space="preserve">
          <source>When opening a file, if the command-line client discovers that the file is ZIP archive instead of an SQLite database, it actually opens an &lt;a href=&quot;inmemorydb&quot;&gt;in-memory database&lt;/a&gt; and then in that in-memory database it creates an instance of the &lt;a href=&quot;zipfile&quot;&gt;Zipfile virtual table&lt;/a&gt; that is attached to the ZIP archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4362aeea9635659d5b4cd64a35ff28fb52ad1831" translate="yes" xml:space="preserve">
          <source>When operating in &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt;, all SQLite database connections associated with the same database file need to share some memory that is used as an index for the WAL file. In most implementations, this shared memory is implemented by calling mmap() on a file created for this sole purpose: the shared-memory file. The shared-memory file, if it exists, is located in the same directory as the database file and has the same name as the database file except with the 4 characters &quot;&lt;b&gt;-shm&lt;/b&gt;&quot; appended. Shared memory files only exist while running in WAL mode.</source>
          <target state="translated">При работе в &lt;a href=&quot;wal&quot;&gt;режиме WAL&lt;/a&gt; все подключения к базе данных SQLite, связанные с одним и тем же файлом базы данных, должны совместно использовать некоторую память, которая используется в качестве индекса для файла WAL. В большинстве реализаций эта общая память реализуется путем вызова mmap () для файла, созданного для этой единственной цели: файла с общей памятью. Файл с общей памятью, если он существует, находится в том же каталоге, что и файл базы данных, и имеет то же имя, что и файл базы данных, за исключением добавления четырех символов &amp;laquo; &lt;b&gt;-shm&lt;/b&gt; &amp;raquo;. Файлы с общей памятью существуют только при работе в режиме WAL.</target>
        </trans-unit>
        <trans-unit id="6bb4007f1d52b792a142259284926e062c686eaf" translate="yes" xml:space="preserve">
          <source>When optimized for size, the whole SQLite library with everything enabled is &lt;a href=&quot;footprint&quot;&gt;less than 500KiB in size&lt;/a&gt; (as measured on an ix86 using the &quot;size&quot; utility from the GNU compiler suite.) Unneeded features can be disabled at compile-time to further reduce the size of the library to under 300KiB if desired.</source>
          <target state="translated">При оптимизации по размеру вся библиотека SQLite со всем включенным имеет &lt;a href=&quot;footprint&quot;&gt;размер менее 500 КБ&lt;/a&gt; (по измерениям на ix86 с использованием утилиты size из пакета компиляторов GNU). Ненужные функции можно отключить во время компиляции, чтобы еще больше уменьшить при желании размер библиотеки не должен превышать 300 КБ.</target>
        </trans-unit>
        <trans-unit id="36556333a18e7240b5e2f86d71ec1605e3df5074" translate="yes" xml:space="preserve">
          <source>When porting SQLite to a new operating system, it is usually necessary to completely replace the built-in mutex subsystem with an alternative built around the mutex primitives of the new operating system. This is accomplished by compiling SQLite with the following option:</source>
          <target state="translated">При портировании SQLite на новую операционную систему,как правило,необходимо полностью заменить встроенную подсистему мьютекса альтернативой,построенной вокруг примитивов мьютекса новой операционной системы.Это достигается компиляцией SQLite со следующей опцией:</target>
        </trans-unit>
        <trans-unit id="ef28302f8a0daea79bec53d89c73ea8d20c2af92" translate="yes" xml:space="preserve">
          <source>When processing a &lt;b&gt;DELETE&lt;/b&gt; change, the following conflicts may be detected:</source>
          <target state="translated">При обработке изменения &lt;b&gt;DELETE&lt;/b&gt; могут быть обнаружены следующие конфликты:</target>
        </trans-unit>
        <trans-unit id="feb3e5a5d3242cd110b456009cbca7b6fb677c07" translate="yes" xml:space="preserve">
          <source>When processing a SELECT (or other) statement, SQLite may retrieve data from database tables in a variety of ways. It may scan through all the records in a table (a full-table scan), scan a contiguous subset of the records in a table based on the rowid index, scan a contiguous subset of the entries in a database &lt;a href=&quot;lang_createtable&quot;&gt;index&lt;/a&gt;, or use a combination of the above strategies in a single scan. The various ways in which SQLite may retrieve data from a table or index are described in detail &lt;a href=&quot;queryplanner#searching&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">При обработке оператора SELECT (или другого) SQLite может извлекать данные из таблиц базы данных различными способами. Он может сканировать все записи в таблице (сканирование всей таблицы), сканировать непрерывное подмножество записей в таблице на основе индекса rowid, сканировать непрерывное подмножество записей в &lt;a href=&quot;lang_createtable&quot;&gt;индексе&lt;/a&gt; базы данных или использовать комбинацию из вышеперечисленных стратегий за одно сканирование. Различные способы , в которых SQLite может извлекать данные из таблицы или индекса подробно описаны &lt;a href=&quot;queryplanner#searching&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e6fe17803083dfa07e4b417bb2b4cf1a4c64242" translate="yes" xml:space="preserve">
          <source>When processing an &lt;b&gt;INSERT&lt;/b&gt; change, the following conflicts can occur:</source>
          <target state="translated">При обработке изменения &lt;b&gt;INSERT&lt;/b&gt; могут возникнуть следующие конфликты:</target>
        </trans-unit>
        <trans-unit id="22eb80162f6ab8bb9c9904d675b35465735f18b1" translate="yes" xml:space="preserve">
          <source>When processing an &lt;b&gt;UPDATE&lt;/b&gt; change, the following conflicts may be detected:</source>
          <target state="translated">При обработке изменения &lt;b&gt;UPDATE&lt;/b&gt; могут быть обнаружены следующие конфликты:</target>
        </trans-unit>
        <trans-unit id="96dc4d2d808bddd461eb35740cb2e242c1a91b3e" translate="yes" xml:space="preserve">
          <source>When processing queries that feature more than one token, FTS5 is sometimes able to determine that the query can be answered by inspecting a subset of a large instance-list. FTS3/4 almost always has to traverse entire instance-lists.</source>
          <target state="translated">При обработке запросов с несколькими маркерами FTS5 иногда может определить,что на запрос можно ответить,просмотрев подмножество большого списка экземпляров.FTS3/4 почти всегда приходится просматривать целые списки экземпляров.</target>
        </trans-unit>
        <trans-unit id="b4456c24b4cd85849eb2f816e79572b467a2fc07" translate="yes" xml:space="preserve">
          <source>When query results are sorted by an ORDER BY clause, values with storage class NULL come first, followed by INTEGER and REAL values interspersed in numeric order, followed by TEXT values in collating sequence order, and finally BLOB values in memcmp() order. No storage class conversions occur before the sort.</source>
          <target state="translated">Когда результаты запроса сортируются по пункту ORDER BY,сначала идут значения с классом хранения NULL,затем значения INTEGER и REAL,перемежающиеся в числовом порядке,затем значения TEXT в порядке объединения последовательностей,и,наконец,BLOB-значения в порядке memcmp().Перед сортировкой не происходит никакого преобразования классов хранения.</target>
        </trans-unit>
        <trans-unit id="e91e22fc8ff638a8787ffecd5d5f0df9da8787f3" translate="yes" xml:space="preserve">
          <source>When required to</source>
          <target state="translated">Когда требуется</target>
        </trans-unit>
        <trans-unit id="78c613e6d682faec6496ee4d9048bbcfd6d7d464" translate="yes" xml:space="preserve">
          <source>When required to append a</source>
          <target state="translated">Когда требуется добавить</target>
        </trans-unit>
        <trans-unit id="798519ed2b08664b52737ffba7c81753837b1259" translate="yes" xml:space="preserve">
          <source>When required to append a new database page to the database file, SQLite shall create a new</source>
          <target state="translated">При необходимости добавить в файл базы данных новую страницу базы данных,SQLite создаст новую</target>
        </trans-unit>
        <trans-unit id="6dcc88fffc3fe69f52028c8e6091eebcfd48e874" translate="yes" xml:space="preserve">
          <source>When required to attempt to detect a</source>
          <target state="translated">Когда требуется попытаться обнаружить</target>
        </trans-unit>
        <trans-unit id="82187b34c5d14ea3c6cc853ad766ba3268f5b299" translate="yes" xml:space="preserve">
          <source>When required to end a</source>
          <target state="translated">Когда требуется закончить</target>
        </trans-unit>
        <trans-unit id="baf01cea17946b2cb417992fd85480056f55712b" translate="yes" xml:space="preserve">
          <source>When required to modify the contents of an existing database page that existed and was not a</source>
          <target state="translated">Когда требуется изменить содержимое существующей страницы базы данных,которая существовала и не являлась</target>
        </trans-unit>
        <trans-unit id="ea12960936b78c03e66e4654443a0f13383a7001" translate="yes" xml:space="preserve">
          <source>When required to modify the contents of an existing database page, SQLite shall update the cached version of the database page content stored as part of the</source>
          <target state="translated">При необходимости изменения содержимого существующей страницы базы данных SQLite обновляет кэшированную версию содержимого страницы базы данных,которая хранится в составе</target>
        </trans-unit>
        <trans-unit id="72b58d5840f56734164db642d70a3df517a5e160" translate="yes" xml:space="preserve">
          <source>When required to open a</source>
          <target state="translated">Когда требуется открыть</target>
        </trans-unit>
        <trans-unit id="202f6940a3123823f29cdd85bae8600a952bce22" translate="yes" xml:space="preserve">
          <source>When required to perform</source>
          <target state="translated">Когда требуется выполнить</target>
        </trans-unit>
        <trans-unit id="49e57edc72b2554b07e6deee46ce3f790b869e23" translate="yes" xml:space="preserve">
          <source>When required to purge a</source>
          <target state="translated">Когда требуется очистить</target>
        </trans-unit>
        <trans-unit id="96b4b0dc1d589faf2e657c0bc5a3a75b7b82c7c8" translate="yes" xml:space="preserve">
          <source>When required to truncate (remove) a database page that existed and was not a</source>
          <target state="translated">Когда требуется усечь (удалить)страницу базы данных,которая существовала и не являлась</target>
        </trans-unit>
        <trans-unit id="24c9b9293e0d1ee15b7fdaf8a59c9a8d10fd1c44" translate="yes" xml:space="preserve">
          <source>When required to truncate a database page from the end of the database file, SQLite shall discard the associated</source>
          <target state="translated">При необходимости усечения страницы базы данных с конца файла базы данных,SQLite отбрасывает ассоциированные</target>
        </trans-unit>
        <trans-unit id="150a8fe0ea2f86237f4f58257c9a767ee7e2a25a" translate="yes" xml:space="preserve">
          <source>When required to upgrade to an</source>
          <target state="translated">Когда требуется перейти на</target>
        </trans-unit>
        <trans-unit id="fcba2e5b4c05a2548f809c299faee545560dd767" translate="yes" xml:space="preserve">
          <source>When running in shared-cache mode, a database operation may fail with an &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_LOCKED&lt;/a&gt; error if the required locks on the shared-cache or individual tables within the shared-cache cannot be obtained. See &lt;a href=&quot;sharedcache&quot;&gt;SQLite Shared-Cache Mode&lt;/a&gt; for a description of shared-cache locking. This API may be used to register a callback that SQLite will invoke when the connection currently holding the required lock relinquishes it. This API is only available if the library was compiled with the &lt;a href=&quot;compile#enable_unlock_notify&quot;&gt;SQLITE_ENABLE_UNLOCK_NOTIFY&lt;/a&gt; C-preprocessor symbol defined.</source>
          <target state="translated">При работе в режиме общего кэша операция с базой данных может завершиться ошибкой &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_LOCKED,&lt;/a&gt; если невозможно получить требуемые блокировки общего кэша или отдельных таблиц в общем кэше. См. В разделе &lt;a href=&quot;sharedcache&quot;&gt;Режим общего кэша SQLite&lt;/a&gt; описание блокировки общего кэша. Этот API может использоваться для регистрации обратного вызова, который SQLite будет вызывать, когда соединение, в настоящее время удерживающее требуемую блокировку, отказывается от него. Этот API доступен только в том случае, если библиотека была скомпилирована с определенным символом &lt;a href=&quot;compile#enable_unlock_notify&quot;&gt;SQLITE_ENABLE_UNLOCK_NOTIFY&lt;/a&gt; C-препроцессора.</target>
        </trans-unit>
        <trans-unit id="b02906105894d89f6847bc0868bb9a109b4e3e2a" translate="yes" xml:space="preserve">
          <source>When running in shared-cache mode, a database operation may fail with an &lt;a href=&quot;../rescode#locked&quot;&gt;SQLITE_LOCKED&lt;/a&gt; error if the required locks on the shared-cache or individual tables within the shared-cache cannot be obtained. See &lt;a href=&quot;../sharedcache&quot;&gt;SQLite Shared-Cache Mode&lt;/a&gt; for a description of shared-cache locking. This API may be used to register a callback that SQLite will invoke when the connection currently holding the required lock relinquishes it. This API is only available if the library was compiled with the &lt;a href=&quot;../compile#enable_unlock_notify&quot;&gt;SQLITE_ENABLE_UNLOCK_NOTIFY&lt;/a&gt; C-preprocessor symbol defined.</source>
          <target state="translated">При работе в режиме общего кэша операция с базой данных может завершиться ошибкой &lt;a href=&quot;../rescode#locked&quot;&gt;SQLITE_LOCKED,&lt;/a&gt; если невозможно получить требуемые блокировки общего кэша или отдельных таблиц в общем кэше. См. В разделе &lt;a href=&quot;../sharedcache&quot;&gt;Режим общего кэша SQLite&lt;/a&gt; описание блокировки общего кэша. Этот API может использоваться для регистрации обратного вызова, который SQLite будет вызывать, когда соединение, в настоящее время удерживающее требуемую блокировку, отказывается от него. Этот API доступен только в том случае, если библиотека была скомпилирована с определенным символом &lt;a href=&quot;../compile#enable_unlock_notify&quot;&gt;SQLITE_ENABLE_UNLOCK_NOTIFY&lt;/a&gt; C-препроцессора.</target>
        </trans-unit>
        <trans-unit id="2af0cef1a0b15f9849e9b4a326164320a983e665" translate="yes" xml:space="preserve">
          <source>When running on QNX, it is recommended that &lt;a href=&quot;mmap&quot;&gt;memory-mapped I/O&lt;/a&gt; never be used. Furthermore, to use &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt;, it is recommended that applications employ the &lt;a href=&quot;pragma#pragma_locking_mode&quot;&gt;exclusive locking mode&lt;/a&gt; in order to use &lt;a href=&quot;wal#noshm&quot;&gt;WAL without shared memory&lt;/a&gt;.</source>
          <target state="translated">При работе в QNX рекомендуется никогда не использовать &lt;a href=&quot;mmap&quot;&gt;ввод-вывод с отображением памяти&lt;/a&gt; . Кроме того, для использования &lt;a href=&quot;wal&quot;&gt;режима WAL&lt;/a&gt; рекомендуется, чтобы приложения использовали режим &lt;a href=&quot;pragma#pragma_locking_mode&quot;&gt;монопольной блокировки&lt;/a&gt; , чтобы использовать &lt;a href=&quot;wal#noshm&quot;&gt;WAL без разделяемой памяти&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6885131949093b9f2e26719d9e197b2addf166d" translate="yes" xml:space="preserve">
          <source>When safe append semantics are indicated for a filesystem, SQLite always stores the special value of -1 for the page count in the header of the rollback journal. The -1 page count value tells any process attempting to rollback the journal that the number of pages in the journal should be computed from the journal size. This -1 value is never changed. So that when a commit occurs, we save a single flush operation and a sector write of the first page of the journal file. Furthermore, when a cache spill occurs we no longer need to append a new journal header to the end of the journal; we can simply continue appending new pages to the end of the existing journal.</source>
          <target state="translated">При указании семантики безопасных приложений для файловой системы SQLite всегда сохраняет в заголовке журнала отката специальное значение -1 для подсчета страниц.Значение -1 для счетчика страниц говорит любому процессу,пытающемуся откатить журнал,что количество страниц в журнале должно вычисляться из размера журнала.Это значение -1 никогда не меняется.Таким образом,при фиксации мы сохраняем одну операцию флеша и запись сектора первой страницы файла журнала.Кроме того,когда происходит утечка кэша,нам больше не нужно добавлять новый заголовок журнала в конец журнала,мы можем просто продолжать добавлять новые страницы в конец существующего журнала.</target>
        </trans-unit>
        <trans-unit id="c52209ae5a29283cfe5cb3dad1ce0ecd4b45279f" translate="yes" xml:space="preserve">
          <source>When sector writes are atomic and the page size of a database is the same as a sector size, and when there is a database change that only touches a single database page, then SQLite skips the whole journaling and syncing process and simply writes the modified page directly into the database file. The change counter in the first page of the database file is modified separately since no harm is done if power is lost before the change counter can be updated.</source>
          <target state="translated">Когда записи секторов атомарные и размер страницы базы данных равен размеру сектора,а когда происходит изменение базы данных,касающееся только одной страницы базы данных,то SQLite пропускает весь процесс протоколирования и синхронизации и просто записывает измененную страницу непосредственно в файл базы данных.Счётчик изменений на первой странице файла базы данных изменяется отдельно,так как при потере питания до обновления счётчика изменений не причиняется никакого вреда.</target>
        </trans-unit>
        <trans-unit id="340896b0a1241236bc1bf669ed9b704188faab52" translate="yes" xml:space="preserve">
          <source>When selecting the order of tables in a join, SQLite uses an efficient polynomial-time algorithm. Because of this, SQLite is able to plan queries with 50- or 60-way joins in a matter of microseconds</source>
          <target state="translated">При выборе порядка расположения таблиц в соединении SQLite использует эффективный алгоритм полиномиального времени.Благодаря этому,SQLite может планировать запросы с 50-или 60-путевыми соединениями за микросекунды.</target>
        </trans-unit>
        <trans-unit id="1aebe3c7de990f7af4ad0100f2e7e450c502bae1" translate="yes" xml:space="preserve">
          <source>When set to the value &quot;fts3&quot;, the matchinfo option reduces the amount of information stored by FTS4 with the consequence that the &quot;l&quot; option of &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo()&lt;/a&gt; is no longer available.</source>
          <target state="translated">Если установлено значение &amp;laquo;fts3&amp;raquo;, опция matchinfo уменьшает объем информации, хранимой FTS4, в результате чего опция &amp;laquo;l&amp;raquo; функции &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo ()&lt;/a&gt; больше не доступна.</target>
        </trans-unit>
        <trans-unit id="637783b2ffcae0b4a42a6035522c7dbcf1ec705e" translate="yes" xml:space="preserve">
          <source>When specifying insert mode, you have to give an extra argument which is the name of the table to be inserted into. For example:</source>
          <target state="translated">При указании режима вставки необходимо указать дополнительный аргумент-имя таблицы,в которую будет вставлена таблица.Например:</target>
        </trans-unit>
        <trans-unit id="1b258d1afb6dda622a0743a2a73308bdb7445718" translate="yes" xml:space="preserve">
          <source>When sqlite3_backup_step() has returned &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_DONE&lt;/a&gt;, or when the application wishes to abandon the backup operation, the application should destroy the &lt;a href=&quot;#sqlite3_backup&quot;&gt;sqlite3_backup&lt;/a&gt; by passing it to sqlite3_backup_finish(). The sqlite3_backup_finish() interfaces releases all resources associated with the &lt;a href=&quot;#sqlite3_backup&quot;&gt;sqlite3_backup&lt;/a&gt; object. If sqlite3_backup_step() has not yet returned &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_DONE&lt;/a&gt;, then any active write-transaction on the destination database is rolled back. The &lt;a href=&quot;#sqlite3_backup&quot;&gt;sqlite3_backup&lt;/a&gt; object is invalid and may not be used following a call to sqlite3_backup_finish().</source>
          <target state="translated">Когда sqlite3_backup_step () вернула &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_DONE&lt;/a&gt; или когда приложение желает отказаться от операции резервного копирования, приложение должно уничтожить &lt;a href=&quot;#sqlite3_backup&quot;&gt;sqlite3_backup&lt;/a&gt; , передав его sqlite3_backup_finish (). Интерфейсы sqlite3_backup_finish () освобождают все ресурсы, связанные с объектом &lt;a href=&quot;#sqlite3_backup&quot;&gt;sqlite3_backup&lt;/a&gt; . Если sqlite3_backup_step () еще не вернул &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_DONE&lt;/a&gt; , то любая активная транзакция записи в целевой базе данных откатывается. Объект &lt;a href=&quot;#sqlite3_backup&quot;&gt;sqlite3_backup&lt;/a&gt; недействителен и не может использоваться после вызова sqlite3_backup_finish ().</target>
        </trans-unit>
        <trans-unit id="ff3c33367e6881dcf5fe599ab4cc7d4d94774505" translate="yes" xml:space="preserve">
          <source>When sqlite3_backup_step() has returned &lt;a href=&quot;../rescode#done&quot;&gt;SQLITE_DONE&lt;/a&gt;, or when the application wishes to abandon the backup operation, the application should destroy the &lt;a href=&quot;backup&quot;&gt;sqlite3_backup&lt;/a&gt; by passing it to sqlite3_backup_finish(). The sqlite3_backup_finish() interfaces releases all resources associated with the &lt;a href=&quot;backup&quot;&gt;sqlite3_backup&lt;/a&gt; object. If sqlite3_backup_step() has not yet returned &lt;a href=&quot;../rescode#done&quot;&gt;SQLITE_DONE&lt;/a&gt;, then any active write-transaction on the destination database is rolled back. The &lt;a href=&quot;backup&quot;&gt;sqlite3_backup&lt;/a&gt; object is invalid and may not be used following a call to sqlite3_backup_finish().</source>
          <target state="translated">Когда sqlite3_backup_step () вернула &lt;a href=&quot;../rescode#done&quot;&gt;SQLITE_DONE&lt;/a&gt; или когда приложение желает отказаться от операции резервного копирования, приложение должно уничтожить &lt;a href=&quot;backup&quot;&gt;sqlite3_backup&lt;/a&gt; , передав его sqlite3_backup_finish (). Интерфейсы sqlite3_backup_finish () освобождают все ресурсы, связанные с объектом &lt;a href=&quot;backup&quot;&gt;sqlite3_backup&lt;/a&gt; . Если sqlite3_backup_step () еще не вернул &lt;a href=&quot;../rescode#done&quot;&gt;SQLITE_DONE&lt;/a&gt; , то любая активная транзакция записи в целевой базе данных откатывается. Объект &lt;a href=&quot;backup&quot;&gt;sqlite3_backup&lt;/a&gt; недействителен и не может использоваться после вызова sqlite3_backup_finish ().</target>
        </trans-unit>
        <trans-unit id="f11c5f277ff9a9bea3d1538e42d008cd96e6371c" translate="yes" xml:space="preserve">
          <source>When synchronous is FULL (2), the SQLite database engine will use the xSync method of the &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; to ensure that all content is safely written to the disk surface prior to continuing. This ensures that an operating system crash or power failure will not corrupt the database. FULL synchronous is very safe, but it is also slower. FULL is the most commonly used synchronous setting when not in &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt;.</source>
          <target state="translated">Когда для параметра synchronous установлено значение FULL (2), ядро ​​базы данных SQLite будет использовать метод xSync &lt;a href=&quot;vfs&quot;&gt;VFS,&lt;/a&gt; чтобы обеспечить безопасную запись всего содержимого на поверхность диска перед продолжением. Это гарантирует, что сбой операционной системы или сбой питания не повредят базу данных. ПОЛНЫЙ синхронный режим очень безопасен, но он также медленнее. FULL - это наиболее часто используемая синхронная настройка, когда не в &lt;a href=&quot;wal&quot;&gt;режиме WAL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="43aa9a49bc45ba6ec32647dc1c08a8d6748123c3" translate="yes" xml:space="preserve">
          <source>When synchronous is NORMAL (1), the SQLite database engine will still sync at the most critical moments, but less often than in FULL mode. There is a very small (though non-zero) chance that a power failure at just the wrong time could corrupt the database in &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;journal_mode&lt;/a&gt;=DELETE on an older filesystem. &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt; is safe from corruption with synchronous=NORMAL, and probably DELETE mode is safe too on modern filesystems. WAL mode is always consistent with synchronous=NORMAL, but WAL mode does lose durability. A transaction committed in WAL mode with synchronous=NORMAL might roll back following a power loss or system crash. Transactions are durable across application crashes regardless of the synchronous setting or journal mode. The synchronous=NORMAL setting is a good choice for most applications running in &lt;a href=&quot;wal&quot;&gt;WAL mode&lt;/a&gt;.</source>
          <target state="translated">Когда синхронный - НОРМАЛЬНЫЙ (1), ядро ​​базы данных SQLite будет синхронизироваться в самые критические моменты, но реже, чем в ПОЛНОМ режиме. Существует очень малая (хотя и &lt;a href=&quot;pragma#pragma_journal_mode&quot;&gt;отличная&lt;/a&gt; от нуля) вероятность того, что сбой питания в неподходящее время может повредить базу данных в journal_mode = DELETE в более старой файловой системе. &lt;a href=&quot;wal&quot;&gt;Режим WAL&lt;/a&gt;защищен от повреждения с помощью synchronous = NORMAL, и, вероятно, режим DELETE также безопасен для современных файловых систем. Режим WAL всегда соответствует параметру synchronous = NORMAL, но режим WAL теряет устойчивость. Транзакция, зафиксированная в режиме WAL с синхронным = NORMAL, может откатиться после потери питания или сбоя системы. Транзакции устойчивы к сбоям приложений независимо от синхронной настройки или режима журнала. Параметр synchronous = NORMAL является хорошим выбором для большинства приложений, работающих в &lt;a href=&quot;wal&quot;&gt;режиме WAL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1221ac9ca537e39eaf7a9c102f123b50e4ccafe2" translate="yes" xml:space="preserve">
          <source>When the &quot;write_version&quot; value of the database header is larger than what the library understands, make the database read-only instead of unreadable.</source>
          <target state="translated">Когда значение &quot;write_version&quot; в заголовке БД больше,чем понимает библиотека,сделайте БД не читаемой,а доступной только для чтения.</target>
        </trans-unit>
        <trans-unit id="14c5bdcdfec2d165a19969db87c59339f98d6d50" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;#eval&quot;&gt;eval method&lt;/a&gt; sees a named SQL parameter such as &quot;$abc&quot; or &quot;:def&quot; or &quot;@ghi&quot; in an SQL statement, it tries to look up a TCL variable with the same name, and it binds the value of that TCL variable to the SQL parameter. If no such TCL variable exists, the default behavior is to bind an SQL NULL value to the parameter. However, if a bind_fallback proc is specified, then that proc is invoked with the name of the SQL parameter and the return value from the proc is bound to the SQL parameter. Or if the proc returns an error, then the SQL statement aborts with that error. If the proc returns with some code other than TCL_OK or TCL_ERROR, then the SQL parameter is bound to NULL, as it would be by default.</source>
          <target state="translated">Когда &lt;a href=&quot;#eval&quot;&gt;метод eval&lt;/a&gt; видит именованный параметр SQL, такой как &amp;laquo;$ abc&amp;raquo; или &amp;laquo;: def&amp;raquo; или &amp;laquo;@ghi&amp;raquo; в операторе SQL, он пытается найти переменную TCL с тем же именем и связывает значение этого Переменная TCL в параметр SQL. Если такой переменной TCL не существует, поведение по умолчанию - привязать значение SQL NULL к параметру. Однако, если указан процесс bind_fallback, то этот процесс вызывается с именем параметра SQL, а возвращаемое значение процедуры связывается с параметром SQL. Или, если процедура возвращает ошибку, оператор SQL прерывается с этой ошибкой. Если процедура возвращается с каким-то кодом, отличным от TCL_OK или TCL_ERROR, тогда параметр SQL привязан к NULL, как это было бы по умолчанию.</target>
        </trans-unit>
        <trans-unit id="e9681f846afb85497f8c3e1e346505a1d05e091c" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;lang_aggfunc#maxggunc&quot;&gt;min()&lt;/a&gt; or &lt;a href=&quot;lang_aggfunc#minggunc&quot;&gt;max()&lt;/a&gt; aggregate functions are used in an aggregate query, all bare columns in the result set take values from the input row which also contains the minimum or maximum. So in the query above, the value of the &quot;b&quot; column in the output will be the value of the &quot;b&quot; column in the input row that has the largest &quot;c&quot; value. There is still an ambiguity if two or more of the input rows have the same minimum or maximum value or if the query contains more than one min() and/or max() aggregate function. Only the built-in &lt;a href=&quot;lang_aggfunc#minggunc&quot;&gt;min()&lt;/a&gt; and &lt;a href=&quot;lang_aggfunc#maxggunc&quot;&gt;max()&lt;/a&gt; functions work this way.</source>
          <target state="translated">Когда агрегатные функции &lt;a href=&quot;lang_aggfunc#maxggunc&quot;&gt;min ()&lt;/a&gt; или &lt;a href=&quot;lang_aggfunc#minggunc&quot;&gt;max ()&lt;/a&gt; используются в агрегатном запросе, все пустые столбцы в наборе результатов принимают значения из входной строки, которая также содержит минимум или максимум. Таким образом, в приведенном выше запросе значение столбца &amp;laquo;b&amp;raquo; в выходных данных будет значением столбца &amp;laquo;b&amp;raquo; во входной строке, имеющего наибольшее значение &amp;laquo;c&amp;raquo;. По-прежнему существует неоднозначность, если две или более входных строк имеют одинаковое минимальное или максимальное значение или если запрос содержит более одной агрегатной функции min () и / или max (). Так работают только встроенные функции &lt;a href=&quot;lang_aggfunc#minggunc&quot;&gt;min ()&lt;/a&gt; и &lt;a href=&quot;lang_aggfunc#maxggunc&quot;&gt;max ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="56141e1c0fb6b7c512062b7753a9277ae3973fa7" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; statement to which the UPSERT is attached takes its values from a &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statement, there is a potential parsing ambiguity. The parser might not be able to tell if the &quot;ON&quot; keyword is introducing the UPSERT or if it is the ON clause of a join. To work around this, the SELECT statement should always include a WHERE clause, even if that WHERE clause is just &quot;WHERE true&quot;.</source>
          <target state="translated">Когда оператор &lt;a href=&quot;lang_insert&quot;&gt;INSERT,&lt;/a&gt; к которому присоединен UPSERT, берет свои значения из &lt;a href=&quot;lang_select&quot;&gt;оператора SELECT&lt;/a&gt; , существует потенциальная двусмысленность синтаксического анализа. Синтаксический анализатор может быть не в состоянии определить, вводит ли ключевое слово &amp;laquo;ON&amp;raquo; UPSERT или это предложение ON соединения. Чтобы обойти это, оператор SELECT всегда должен включать предложение WHERE, даже если это предложение WHERE просто &amp;laquo;WHERE true&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="9d27fd39dc19689d64d7d12f5a355d4c7bb83355" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statement that implements a &lt;a href=&quot;lang_createview&quot;&gt;VIEW&lt;/a&gt; or FROM-clause subquery is a &lt;a href=&quot;lang_select#compound&quot;&gt;compound SELECT&lt;/a&gt; then the affinity of each supposed column of the VIEW or subquery will be the affinity of the corresponding result column for one of the individual SELECT statements that make up the compound. However, it is indeterminate which of the SELECT statements will be used to determine affinity. Different constituent SELECT statements might be used to determine affinity at different times during query evaluation. Best practice is to avoid mixing affinities in a compound SELECT.</source>
          <target state="translated">Когда &lt;a href=&quot;lang_select&quot;&gt;оператор SELECT&lt;/a&gt; , реализующий подзапрос &lt;a href=&quot;lang_createview&quot;&gt;VIEW&lt;/a&gt; или FROM-clause, является &lt;a href=&quot;lang_select#compound&quot;&gt;составным SELECT,&lt;/a&gt; то сродство каждого предполагаемого столбца VIEW или подзапроса будет сродством соответствующего столбца результатов для одного из отдельных операторов SELECT, составляющих состав . Однако неясно, какой из операторов SELECT будет использоваться для определения сродства. Различные составляющие инструкции SELECT могут использоваться для определения сходства в разное время во время оценки запроса. Лучшая практика - избегать смешивания аффинностей в составном SELECT.</target>
        </trans-unit>
        <trans-unit id="aedae79502293a0d377d877d70f2266d6b9d7d9b" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statement that implements a &lt;a href=&quot;lang_createview&quot;&gt;VIEW&lt;/a&gt; or FROM-clause subquery is a &lt;a href=&quot;lang_select#compound&quot;&gt;compound SELECT&lt;/a&gt; then the affinity of each supposed column of the VIEW or subquery will be the affinity of the corresponding result column for one of the individual SELECT statements that make up the compound. However, it is indeterminate which of the SELECT statements will be used to determine affinity. Different constituent SELECT statements might be used to determine affinity at different times during query evaluation. The choice might vary across different versions of SQLite. The choice might change between one query and the next in the same version of SQLite. The choice might be different at different times within the same query. Hence, you can never be sure what affinity will be used for columns of a compound SELECT that have different affinities in the constituent subqueries. Best practice is to avoid mixing affinities in a compound SELECT if you care about the datatype of the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ddddedda26385f60e680a5388eae9aa1b1f989" translate="yes" xml:space="preserve">
          <source>When the D parameter is not NULL, that means that ownership of the pointer is being transferred to SQLite. SQLite will take responsibility for freeing resources associated with the pointer when it has finished using the pointer. If the D parameter is NULL, that means that ownership of the pointer remains with the caller and the caller is responsible for disposing of the pointer.</source>
          <target state="translated">Когда параметр D не NULL,это означает,что право собственности на указатель передается SQLite.SQLite возьмет на себя ответственность за освобождение ресурсов,связанных с указателем,после того,как он закончит использование указателя.Если параметр D равен NULL,это означает,что право собственности на указатель остается за вызывающим абонентом и он отвечает за утилизацию указателя.</target>
        </trans-unit>
        <trans-unit id="821f9322e2541019ba56eda61e1f81487c5db2ed" translate="yes" xml:space="preserve">
          <source>When the EXPLAIN keyword appears by itself it causes the statement to behave as a query that returns the sequence of &lt;a href=&quot;opcode&quot;&gt;virtual machine instructions&lt;/a&gt; it would have used to execute the command had the EXPLAIN keyword not been present. When the EXPLAIN QUERY PLAN phrase appears, the statement returns high-level information regarding the query plan that would have been used.</source>
          <target state="translated">Когда ключевое слово EXPLAIN появляется само по себе, оно заставляет оператор вести себя как запрос, который возвращает последовательность &lt;a href=&quot;opcode&quot;&gt;инструкций виртуальной машины,&lt;/a&gt; которые он использовал бы для выполнения команды, если бы ключевое слово EXPLAIN не присутствовало. Когда появляется фраза EXPLAIN QUERY PLAN, оператор возвращает высокоуровневую информацию о плане запроса, который мог бы использоваться.</target>
        </trans-unit>
        <trans-unit id="0322a186c7875e9599006050d189bbd4680c31ba" translate="yes" xml:space="preserve">
          <source>When the ORDER BY clause is omitted from the recursive-select, the queue behaves as a FIFO, which results in a breadth-first search.</source>
          <target state="translated">Когда пункт ORDER BY опущен из рекурсивного выбора,очередь ведет себя как FIFO,что приводит к первому широте поиска.</target>
        </trans-unit>
        <trans-unit id="6f6a426144bea68a6a8caf2439e46959412cc8bf" translate="yes" xml:space="preserve">
          <source>When the PRAGMA vdbe_trace=ON is set, correctly print the P3 operand value when it is a pointer to a structure rather than a pointer to a string.</source>
          <target state="translated">Когда установлена PRAGMA vdbe_trace=ON,правильно выведите значение операнда P3,когда он является указателем на структуру,а не на строку.</target>
        </trans-unit>
        <trans-unit id="de58aafb2b793ff0f7f439bee5ca0476571bc42c" translate="yes" xml:space="preserve">
          <source>When the Query Planner Stability Guarantee (QPSG) is enabled SQLite will always pick the same query plan for any given SQL statement as long as:</source>
          <target state="translated">При включенной Гарантии Стабильности Планировщика Запросов (QPSG)SQLite всегда будет выбирать один и тот же план запроса для любого заданного SQL-запроса до тех пор,пока он включен:</target>
        </trans-unit>
        <trans-unit id="ea89f7d473effa3c1f787520608ed6a1d3dd75bc" translate="yes" xml:space="preserve">
          <source>When the REPLACE conflict resolution strategy deletes rows in order to satisfy a constraint, &lt;a href=&quot;lang_createtrigger&quot;&gt;delete triggers&lt;/a&gt; fire if and only if &lt;a href=&quot;pragma#pragma_recursive_triggers&quot;&gt;recursive triggers&lt;/a&gt; are enabled.</source>
          <target state="translated">Когда стратегия разрешения конфликтов REPLACE удаляет строки, чтобы удовлетворить ограничение, &lt;a href=&quot;lang_createtrigger&quot;&gt;триггеры удаления срабатывают&lt;/a&gt; тогда и только тогда, когда включены &lt;a href=&quot;pragma#pragma_recursive_triggers&quot;&gt;рекурсивные триггеры&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ca0d858dd9858ff95b9e784a094d5524fe9f00c" translate="yes" xml:space="preserve">
          <source>When the SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION compile-time option is activated, SQLite will suppress &quot;unknown function&quot; errors when running an &lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt; or &lt;a href=&quot;eqp&quot;&gt;EXPLAIN QUERY PLAN&lt;/a&gt;. Instead of throwing an error, SQLite will insert a substitute no-op function named &quot;unknown()&quot;. The substitution of &quot;unknown()&quot; in place of unrecognized functions only occurs on &lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt; and &lt;a href=&quot;eqp&quot;&gt;EXPLAIN QUERY PLAN&lt;/a&gt;, not on ordinary statements.</source>
          <target state="translated">Когда параметр времени компиляции SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION активирован, SQLite будет подавлять ошибки &amp;laquo;неизвестная функция&amp;raquo; при запуске &lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt; или &lt;a href=&quot;eqp&quot;&gt;EXPLAIN QUERY PLAN&lt;/a&gt; . Вместо выдачи ошибки SQLite вставит заменяющую функцию без операции с именем &amp;laquo;unknown ()&amp;raquo;. Замена неизвестных функций на &amp;laquo;unknown ()&amp;raquo; происходит только в &lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt; и &lt;a href=&quot;eqp&quot;&gt;EXPLAIN QUERY PLAN&lt;/a&gt; , но не в обычных операторах.</target>
        </trans-unit>
        <trans-unit id="18d1211c78f050ab2271d9386344a3bea2c6f673" translate="yes" xml:space="preserve">
          <source>When the SQLITE_SYNC_DATAONLY flag is used, it means that the sync operation only needs to flush data to mass storage. Inode information need not be flushed. If the lower four bits of the flag equal SQLITE_SYNC_NORMAL, that means to use normal fsync() semantics. If the lower four bits equal SQLITE_SYNC_FULL, that means to use Mac OS X style fullsync instead of fsync().</source>
          <target state="translated">При использовании флага SQLITE_SYNC_DATAONLY это означает,что операция синхронизации требует только промывки данных на массовое хранение.Входная информация не нуждается в промывке.Если нижние четыре бита флага равны SQLITE_SYNC_NORMAL,это означает использование обычной семантики fsync().Если нижние четыре бита равны SQLITE_SYNC_FULL,это означает использование стиля Mac OS X fullsync вместо fsync().</target>
        </trans-unit>
        <trans-unit id="985e39e22f124ec3b4d15128274a9355a9afbb19" translate="yes" xml:space="preserve">
          <source>When the WHERE is omitted from a DELETE statement and the table being deleted has no triggers, SQLite uses an optimization to erase the entire table content without having to visit each row of the table individually. This &quot;truncate&quot; optimization makes the delete run much faster. Prior to SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_6_5.html&quot;&gt;version 3.6.5&lt;/a&gt; (2008-11-12), the truncate optimization also meant that the &lt;a href=&quot;c3ref/changes&quot;&gt;sqlite3_changes()&lt;/a&gt; and &lt;a href=&quot;c3ref/total_changes&quot;&gt;sqlite3_total_changes()&lt;/a&gt; interfaces and the &lt;a href=&quot;pragma#pragma_count_changes&quot;&gt;count_changes pragma&lt;/a&gt; will not actually return the number of deleted rows. That problem has been fixed as of &lt;a href=&quot;https://sqlite.org/releaselog/3_6_5.html&quot;&gt;version 3.6.5&lt;/a&gt; (2008-11-12).</source>
          <target state="translated">Когда WHERE опущен в инструкции DELETE и удаляемая таблица не имеет триггеров, SQLite использует оптимизацию для стирания всего содержимого таблицы без необходимости посещать каждую строку таблицы по отдельности. Эта оптимизация &amp;laquo;усечения&amp;raquo; значительно ускоряет процесс удаления. До версии SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_6_5.html&quot;&gt;3.6.5&lt;/a&gt; (2008-11-12) оптимизация усечения также означала, что интерфейсы &lt;a href=&quot;c3ref/changes&quot;&gt;sqlite3_changes ()&lt;/a&gt; и &lt;a href=&quot;c3ref/total_changes&quot;&gt;sqlite3_total_changes ()&lt;/a&gt; и &lt;a href=&quot;pragma#pragma_count_changes&quot;&gt;прагма count_changes&lt;/a&gt; фактически не возвращали количество удаленных строк. Эта проблема исправлена ​​в &lt;a href=&quot;https://sqlite.org/releaselog/3_6_5.html&quot;&gt;версии 3.6.5&lt;/a&gt; (2008-11-12).</target>
        </trans-unit>
        <trans-unit id="ed1319f0bc1a6521bcf2196280e7316235700141" translate="yes" xml:space="preserve">
          <source>When the above CREATE VIRTUAL TABLE statement is executed, swarmvtab binds the text value &quot;/home/user/app/databases/&quot; to the :dir parameter of the SQL statement before executing it.</source>
          <target state="translated">При выполнении вышеуказанного оператора CREATE VIRTUAL TABLE,swarmvtab привязывает текстовое значение &quot;/home/user/app/databases/&quot; к параметру :dir оператора SQL перед его выполнением.</target>
        </trans-unit>
        <trans-unit id="af84afd9d831ba7532e3be1008b7a2fa2d6de72c" translate="yes" xml:space="preserve">
          <source>When the auto-vacuum mode is 1 or &quot;full&quot;, the freelist pages are moved to the end of the database file and the database file is truncated to remove the freelist pages at every transaction commit. Note, however, that auto-vacuum only truncates the freelist pages from the file. Auto-vacuum does not defragment the database nor repack individual database pages the way that the &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; command does. In fact, because it moves pages around within the file, auto-vacuum can actually make fragmentation worse.</source>
          <target state="translated">Когда режим автоматического вакуумирования равен 1 или &amp;laquo;полный&amp;raquo;, страницы списка свободных страниц перемещаются в конец файла базы данных, а файл базы данных усекается для удаления страниц списка свободных страниц при каждой фиксации транзакции. Обратите внимание, однако, что автоматическая очистка только усекает страницы списка фрилансеров из файла. Автоматический вакуум не дефрагментирует базу данных и не переупаковывает отдельные страницы базы данных, как это делает команда &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; . Фактически, поскольку он перемещает страницы внутри файла, автоматическая очистка может усугубить фрагментацию.</target>
        </trans-unit>
        <trans-unit id="ef4d832eb7039ef85ce7ded8003003dd3cc72641" translate="yes" xml:space="preserve">
          <source>When the auto_vacuum pragma is invoked with no arguments, it returns the current auto_vacuum mode.</source>
          <target state="translated">Когда прагма auto_vacuum вызывается без аргументов,она возвращает текущий режим auto_vacuum.</target>
        </trans-unit>
        <trans-unit id="f2ce457b213b80c33d7ab3d10e7347a9c292b2e3" translate="yes" xml:space="preserve">
          <source>When the callback is invoked, the first argument passed is a copy of the second argument to sqlite3_collation_needed() or sqlite3_collation_needed16(). The second argument is the database connection. The third argument is one of &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF8&lt;/a&gt;, &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16BE&lt;/a&gt;, or &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16LE&lt;/a&gt;, indicating the most desirable form of the collation sequence function required. The fourth parameter is the name of the required collation sequence.</source>
          <target state="translated">Когда вызывается обратный вызов, первый переданный аргумент является копией второго аргумента для sqlite3_collation_needed () или sqlite3_collation_needed16 (). Второй аргумент - это соединение с базой данных. Третий аргумент - это один из &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF8&lt;/a&gt; , &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16BE&lt;/a&gt; или &lt;a href=&quot;#SQLITE_ANY&quot;&gt;SQLITE_UTF16LE&lt;/a&gt; , указывающий на наиболее желательную форму требуемой функции последовательности сортировки. Четвертый параметр - это имя требуемой последовательности сортировки.</target>
        </trans-unit>
        <trans-unit id="7ee3c7dd196b6cbe2c4c2e3d7d3e7a9d7a6a2b67" translate="yes" xml:space="preserve">
          <source>When the callback is invoked, the first argument passed is a copy of the second argument to sqlite3_collation_needed() or sqlite3_collation_needed16(). The second argument is the database connection. The third argument is one of &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF8&lt;/a&gt;, &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16BE&lt;/a&gt;, or &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16LE&lt;/a&gt;, indicating the most desirable form of the collation sequence function required. The fourth parameter is the name of the required collation sequence.</source>
          <target state="translated">Когда вызывается обратный вызов, первый переданный аргумент является копией второго аргумента для sqlite3_collation_needed () или sqlite3_collation_needed16 (). Второй аргумент - это соединение с базой данных. Третий аргумент - это один из &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF8&lt;/a&gt; , &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16BE&lt;/a&gt; или &lt;a href=&quot;c_any&quot;&gt;SQLITE_UTF16LE&lt;/a&gt; , указывающий на наиболее желательную форму требуемой функции последовательности сортировки. Четвертый параметр - это имя требуемой последовательности сортировки.</target>
        </trans-unit>
        <trans-unit id="f0027db967a591c65d48dbd0afc84a797aef3887" translate="yes" xml:space="preserve">
          <source>When the callback returns &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OK&lt;/a&gt;, that means the operation requested is ok. When the callback returns &lt;a href=&quot;#SQLITE_DENY&quot;&gt;SQLITE_DENY&lt;/a&gt;, the &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; or equivalent call that triggered the authorizer will fail with an error message explaining that access is denied.</source>
          <target state="translated">Когда обратный вызов возвращает &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OK&lt;/a&gt; , это означает, что запрошенная операция в порядке. Когда обратный вызов возвращает &lt;a href=&quot;#SQLITE_DENY&quot;&gt;SQLITE_DENY&lt;/a&gt; , вызов &lt;a href=&quot;#sqlite3_prepare&quot;&gt;sqlite3_prepare_v2 ()&lt;/a&gt; или эквивалентный вызов, запускающий авторизатор, завершится ошибкой с сообщением об ошибке, объясняющим, что доступ запрещен.</target>
        </trans-unit>
        <trans-unit id="1bae5c6c86ffd7028029909efdc71f4e4f816633" translate="yes" xml:space="preserve">
          <source>When the callback returns &lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OK&lt;/a&gt;, that means the operation requested is ok. When the callback returns &lt;a href=&quot;c_deny&quot;&gt;SQLITE_DENY&lt;/a&gt;, the &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v2()&lt;/a&gt; or equivalent call that triggered the authorizer will fail with an error message explaining that access is denied.</source>
          <target state="translated">Когда обратный вызов возвращает &lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OK&lt;/a&gt; , это означает, что запрошенная операция в порядке. Когда обратный вызов возвращает &lt;a href=&quot;c_deny&quot;&gt;SQLITE_DENY&lt;/a&gt; , вызов &lt;a href=&quot;prepare&quot;&gt;sqlite3_prepare_v2 ()&lt;/a&gt; или эквивалентный вызов, запускающий авторизатор, завершится ошибкой с сообщением об ошибке, объясняющим, что доступ запрещен.</target>
        </trans-unit>
        <trans-unit id="2fc4782b077cfef78fd1da131f206927c4488a10" translate="yes" xml:space="preserve">
          <source>When the command-line shell and the core SQLite library are both compiled with &lt;a href=&quot;compile#debug&quot;&gt;SQLITE_DEBUG&lt;/a&gt; and SQLITE_ENABLE_SELECTTRACE and SQLITE_ENABLE_WHERETRACE, then the shell has two commands used to turn on debugging facilities for the most intricate parts of the code generator - the logic dealing with SELECT statements and WHERE clauses, respectively. The &quot;.selecttrace&quot; and &quot;.wheretrace&quot; commands each take a numeric argument which can be expressed in hexadecimal. Each bit turns on various parts of debugging. Values of &quot;0xfff&quot; and &quot;0xff&quot; are commonly used. Use an argument of &quot;0&quot; to turn all tracing output back off.</source>
          <target state="translated">Когда оболочка командной строки и основная библиотека SQLite скомпилированы с помощью &lt;a href=&quot;compile#debug&quot;&gt;SQLITE_DEBUG&lt;/a&gt; и SQLITE_ENABLE_SELECTTRACE и SQLITE_ENABLE_WHERETRACE, оболочка имеет две команды, используемые для включения средств отладки для наиболее сложных частей генератора кода - логики, связанной с операторами SELECT и WHERE соответственно. Каждая из команд &quot;.selecttrace&quot; и &quot;.wheretrace&quot; принимает числовой аргумент, который может быть выражен в шестнадцатеричном формате. Каждый бит включает различные части отладки. Обычно используются значения &amp;laquo;0xfff&amp;raquo; и &amp;laquo;0xff&amp;raquo;. Используйте аргумент &amp;laquo;0&amp;raquo;, чтобы отключить все выходные данные трассировки.</target>
        </trans-unit>
        <trans-unit id="b723658445ef923fc3e6ed08d931b577b65bc748" translate="yes" xml:space="preserve">
          <source>When the commit hook callback routine returns zero, the &lt;a href=&quot;../lang_transaction&quot;&gt;COMMIT&lt;/a&gt; operation is allowed to continue normally. If the commit hook returns non-zero, then the &lt;a href=&quot;../lang_transaction&quot;&gt;COMMIT&lt;/a&gt; is converted into a &lt;a href=&quot;../lang_transaction&quot;&gt;ROLLBACK&lt;/a&gt;. The rollback hook is invoked on a rollback that results from a commit hook returning non-zero, just as it would be with any other rollback.</source>
          <target state="translated">Когда процедура обратного вызова ловушки фиксации возвращает ноль, операция &lt;a href=&quot;../lang_transaction&quot;&gt;COMMIT&lt;/a&gt; может продолжаться в обычном режиме. Если ловушка фиксации возвращает ненулевое значение, то &lt;a href=&quot;../lang_transaction&quot;&gt;COMMIT&lt;/a&gt; преобразуется в &lt;a href=&quot;../lang_transaction&quot;&gt;ROLLBACK&lt;/a&gt; . Ловушка отката вызывается при откате, который возникает из-за того, что ловушка фиксации возвращает ненулевое значение, как и при любом другом откате.</target>
        </trans-unit>
        <trans-unit id="cc0bc375382d425cd0a289c0d31fef27fb453ac2" translate="yes" xml:space="preserve">
          <source>When the commit hook callback routine returns zero, the &lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt; operation is allowed to continue normally. If the commit hook returns non-zero, then the &lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt; is converted into a &lt;a href=&quot;lang_transaction&quot;&gt;ROLLBACK&lt;/a&gt;. The rollback hook is invoked on a rollback that results from a commit hook returning non-zero, just as it would be with any other rollback.</source>
          <target state="translated">Когда процедура обратного вызова ловушки фиксации возвращает ноль, операция &lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt; может продолжаться в обычном режиме. Если ловушка фиксации возвращает ненулевое значение, то &lt;a href=&quot;lang_transaction&quot;&gt;COMMIT&lt;/a&gt; преобразуется в &lt;a href=&quot;lang_transaction&quot;&gt;ROLLBACK&lt;/a&gt; . Ловушка отката вызывается при откате, который возникает из-за того, что ловушка фиксации возвращает ненулевое значение, как и при любом другом откате.</target>
        </trans-unit>
        <trans-unit id="ebd93d5d1aa49a1f19ce4e8d40b4dcf35920ce66" translate="yes" xml:space="preserve">
          <source>When the defer_foreign_keys &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; is on, enforcement of all &lt;a href=&quot;foreignkeys&quot;&gt;foreign key constraints&lt;/a&gt; is delayed until the outermost transaction is committed. The defer_foreign_keys pragma defaults to OFF so that foreign key constraints are only deferred if they are created as &quot;DEFERRABLE INITIALLY DEFERRED&quot;. The defer_foreign_keys pragma is automatically switched off at each COMMIT or ROLLBACK. Hence, the defer_foreign_keys pragma must be separately enabled for each transaction. This pragma is only meaningful if foreign key constraints are enabled, of course.</source>
          <target state="translated">Когда defer_foreign_keys PRAGMA &lt;a href=&quot;pragma#syntax&quot;&gt;включен&lt;/a&gt; , применение всех &lt;a href=&quot;foreignkeys&quot;&gt;ограничений внешнего ключа&lt;/a&gt; откладывается до тех пор, пока не будет зафиксирована самая внешняя транзакция. Прагма defer_foreign_keys по умолчанию выключена, так что ограничения внешнего ключа откладываются только в том случае, если они созданы как &amp;laquo;ОТЛОЖЕННЫЙ НАЧАЛЬНО ОТЛОЖЕННЫЙ&amp;raquo;. Прагма defer_foreign_keys автоматически отключается при каждом COMMIT или ROLLBACK. Следовательно, прагма defer_foreign_keys должна быть включена отдельно для каждой транзакции. Эта прагма имеет смысл только в том случае, если, конечно, включены ограничения внешнего ключа.</target>
        </trans-unit>
        <trans-unit id="f4cc14d79785a0eab23a6d9f7db6c91e125bbb70" translate="yes" xml:space="preserve">
          <source>When the end-user executes a DML or DDL SQL statement to modify the database schema or content, SQLite is required to update the database file image to reflect the new database state. This involves modifying the content of, appending or truncating one of more database file pages. Instead of modifying the database file directly using the VFS interface, changes are first buffered within the</source>
          <target state="translated">Когда конечный пользователь выполняет оператор DML или DDL SQL для изменения схемы или содержимого базы данных,SQLite требуется обновить образ файла базы данных,чтобы отразить новое состояние базы данных.Это включает в себя изменение содержимого,добавление или усечение одной из страниц файла БД.Вместо того,чтобы модифицировать файл базы данных напрямую с помощью интерфейса VFS,изменения сначала буферизируются внутри файла</target>
        </trans-unit>
        <trans-unit id="e72b791ecc5f4b31b8f87177039bb7c97a3857b6" translate="yes" xml:space="preserve">
          <source>When the languageid option is present, it specifies the name of another &lt;a href=&quot;vtab#hiddencol&quot;&gt;hidden column&lt;/a&gt; that is added to the FTS4 table and which is used to specify the language stored in each row of the FTS4 table. The name of the languageid hidden column must be distinct from all other column names in the FTS4 table. Example:</source>
          <target state="translated">Если присутствует параметр languageid, он указывает имя другого &lt;a href=&quot;vtab#hiddencol&quot;&gt;скрытого столбца,&lt;/a&gt; который добавляется в таблицу FTS4 и используется для указания языка, хранящегося в каждой строке таблицы FTS4. Имя скрытого столбца languageid должно отличаться от имен всех других столбцов в таблице FTS4. Пример:</target>
        </trans-unit>
        <trans-unit id="b1e38f0c1dabd3714310eefb8d8a6cff4de89d44" translate="yes" xml:space="preserve">
          <source>When the languageid option is used, SQLite invokes the xLanguageid() on the sqlite3_tokenizer_module object immediately after the object is created in order to pass in the language id that the tokenizer should use. The xLanguageid() method will never be called more than once for any single tokenizer object. The fact that different languages might be tokenized differently is one reason why no single FTS query can return rows with different languageid values.</source>
          <target state="translated">При использовании опции languageid SQLite вызывает функцию xLanguageid()на объекте sqlite3_tokenizer_module сразу после создания объекта для передачи идентификатора языка,который должен использоваться токенайзером.Метод xLanguageid()никогда не будет вызываться более одного раза ни для одного объекта токенайзера.Тот факт,что разные языки могут быть токенированы по-разному,является одной из причин,по которой ни один запрос FTS не может вернуть строки с разными значениями языка.</target>
        </trans-unit>
        <trans-unit id="9aa0a1cde451597b6df45b6c556052ff5eb9c927" translate="yes" xml:space="preserve">
          <source>When the last connection to a particular database is closing, that connection will acquire an exclusive lock for a short time while it cleans up the WAL and shared-memory files. If a second database tries to open and query the database while the first connection is still in the middle of its cleanup process, the second connection might get an &lt;a href=&quot;rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt; error.</source>
          <target state="translated">Когда последнее соединение с конкретной базой данных закрывается, это соединение на короткое время получает эксклюзивную блокировку, пока очищаются файлы WAL и разделяемой памяти. Если вторая база данных пытается открыть и запросить базу данных, в то время как первое соединение все еще находится в середине процесса очистки, второе соединение может получить ошибку &lt;a href=&quot;rescode#busy&quot;&gt;SQLITE_BUSY&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="721a001d639a4fa0bf082ab41646b624fe82e4a7" translate="yes" xml:space="preserve">
          <source>When the legacy_file_format pragma is issued with no argument, it returns the setting of the flag. This pragma does &lt;u&gt;not&lt;/u&gt; tell which file format the current database is using; it tells what format will be used by any newly created databases.</source>
          <target state="translated">Когда прагма legacy_file_format выдается без аргументов, она возвращает установку флага. Эта прагма &lt;u&gt;не&lt;/u&gt; сообщает, какой формат файла использует текущая база данных; он сообщает, какой формат будет использоваться новыми базами данных.</target>
        </trans-unit>
        <trans-unit id="6a4f25a9dc00e5fa108cea204a933cd9b0d930ee" translate="yes" xml:space="preserve">
          <source>When the locking_mode pragma specifies a particular database, for example:</source>
          <target state="translated">Например,когда прагма lock_mode задает определенную БД:</target>
        </trans-unit>
        <trans-unit id="65958bd909cd29c71d7062800a7ff7cb762631b5" translate="yes" xml:space="preserve">
          <source>When the name of the database file handed to &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt; or to &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; is an empty string, then a new temporary file is created to hold the database.</source>
          <target state="translated">Когда имя файла базы данных, переданного &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open ()&lt;/a&gt; или &lt;a href=&quot;lang_attach&quot;&gt;ATTACH,&lt;/a&gt; является пустой строкой, тогда создается новый временный файл для хранения базы данных.</target>
        </trans-unit>
        <trans-unit id="a5261e01bfb3de59bf05674e0d1d120422019175" translate="yes" xml:space="preserve">
          <source>When the original content of a database page is written into the rollback journal (as shown in &lt;a href=&quot;#section_3_5&quot;&gt;section 3.5&lt;/a&gt;), SQLite always writes a complete sector of data, even if the page size of the database is smaller than the sector size. Historically, the sector size in SQLite has been hard coded to 512 bytes and since the minimum page size is also 512 bytes, this has never been an issue. But beginning with SQLite version 3.3.14, it is possible for SQLite to use mass storage devices with a sector size larger than 512 bytes. So, beginning with version 3.3.14, whenever any page within a sector is written into the journal file, all pages in that same sector are stored with it.</source>
          <target state="translated">Когда исходное содержимое страницы базы данных записывается в журнал отката (как показано в &lt;a href=&quot;#section_3_5&quot;&gt;разделе 3.5&lt;/a&gt; ), SQLite всегда записывает полный сектор данных, даже если размер страницы базы данных меньше, чем размер сектора. Исторически размер сектора в SQLite был жестко задан как 512 байт, а поскольку минимальный размер страницы также составляет 512 байт, это никогда не было проблемой. Но, начиная с версии SQLite 3.3.14, SQLite может использовать запоминающие устройства с размером сектора больше 512 байт. Итак, начиная с версии 3.3.14, всякий раз, когда какая-либо страница в секторе записывается в файл журнала, все страницы этого же сектора сохраняются вместе с ним.</target>
        </trans-unit>
        <trans-unit id="24eb3cec7d166e89084624729f4f076ba57699a6" translate="yes" xml:space="preserve">
          <source>When the payload of a b-tree cell is too large for the b-tree page, the surplus is spilled onto overflow pages. Overflow pages form a linked list. The first four bytes of each overflow page are a big-endian integer which is the page number of the next page in the chain, or zero for the final page in the chain. The fifth byte through the last usable byte are used to hold overflow content.</source>
          <target state="translated">Когда полезная нагрузка ячейки b-дерева слишком велика для страницы b-дерева,излишек проливается на переполненные страницы.Страницы переполнения образуют связанный список.Первые четыре байта каждой страницы переполнения представляют собой крупно-сменное целое число,которое является номером следующей страницы в цепочке,или нолью для последней страницы в цепочке.Пятый байт через последний используемый байт используется для хранения содержимого переполнения.</target>
        </trans-unit>
        <trans-unit id="7a9dfbcbb999703cb3d0ac4b512f0bf41cd8632a" translate="yes" xml:space="preserve">
          <source>When the private repository is created by cloning, incorporating new public SQLite releases becomes much easier too. To pull in all of the latest changes from the public SQLite repository, simply move into the open check-out and do:</source>
          <target state="translated">Когда частный репозиторий создается путем клонирования,включать новые публичные выпуски SQLite тоже становится намного проще.Чтобы извлечь все последние изменения из публичного репозитория SQLite,просто перейдите в открытый режим извлечения и сделайте это:</target>
        </trans-unit>
        <trans-unit id="5be9656f401ac8804b83b6da6efba9e4ec09be72" translate="yes" xml:space="preserve">
          <source>When the result of a sub-select is a scalar, a single private memory cell can be used, as shown in the previous example. But when the result of a sub-select is a vector, such as when the sub-select is the right-hand operand of IN or NOT IN, a different approach is needed. In this case, the result of the sub-select is stored in a transient table and the contents of that table are tested using the Found or NotFound operators. Consider this example:</source>
          <target state="translated">Когда результатом подвыбора является скаляр,можно использовать одну личную ячейку памяти,как показано в предыдущем примере.Но когда результатом суб-выбора является вектор,например,когда суб-выбор является правым операндом IN или NOT IN,нужен другой подход.В этом случае результат подвыбора сохраняется в переходной таблице,а содержимое этой таблицы проверяется с помощью операторов Found или NotFound.Рассмотрим этот пример:</target>
        </trans-unit>
        <trans-unit id="7f4bad19a801621b1eda251a27bffb8486beb1b2" translate="yes" xml:space="preserve">
          <source>When the serialized &lt;a href=&quot;../threadsafe&quot;&gt;threading mode&lt;/a&gt; is in use, it might be the case that a second error occurs on a separate thread in between the time of the first error and the call to these interfaces. When that happens, the second error will be reported since these interfaces always report the most recent result. To avoid this, each thread can obtain exclusive use of the &lt;a href=&quot;sqlite3&quot;&gt;database connection&lt;/a&gt; D by invoking &lt;a href=&quot;mutex_alloc&quot;&gt;sqlite3_mutex_enter&lt;/a&gt;(&lt;a href=&quot;db_mutex&quot;&gt;sqlite3_db_mutex&lt;/a&gt;(D)) before beginning to use D and invoking &lt;a href=&quot;mutex_alloc&quot;&gt;sqlite3_mutex_leave&lt;/a&gt;(&lt;a href=&quot;db_mutex&quot;&gt;sqlite3_db_mutex&lt;/a&gt;(D)) after all calls to the interfaces listed here are completed.</source>
          <target state="translated">Когда используется &lt;a href=&quot;../threadsafe&quot;&gt;режим&lt;/a&gt; сериализованного потока , может случиться так, что вторая ошибка произойдет в отдельном потоке между моментом первой ошибки и вызовом этих интерфейсов. Когда это произойдет, будет сообщено о второй ошибке, поскольку эти интерфейсы всегда сообщают самый последний результат. Чтобы избежать этого, каждый поток может получить эксклюзивное использование &lt;a href=&quot;sqlite3&quot;&gt;соединения&lt;/a&gt; D с базой данных , вызвав &lt;a href=&quot;mutex_alloc&quot;&gt;sqlite3_mutex_enter&lt;/a&gt; ( &lt;a href=&quot;db_mutex&quot;&gt;sqlite3_db_mutex&lt;/a&gt; (D)) перед началом использования D и вызвав &lt;a href=&quot;mutex_alloc&quot;&gt;sqlite3_mutex_leave&lt;/a&gt; ( &lt;a href=&quot;db_mutex&quot;&gt;sqlite3_db_mutex&lt;/a&gt; (D)) после того, как все вызовы интерфейсов, перечисленных здесь, завершены.</target>
        </trans-unit>
        <trans-unit id="6ad35aaaabcdc79e64145d3f60787d98e09a5e23" translate="yes" xml:space="preserve">
          <source>When the serialized &lt;a href=&quot;threadsafe&quot;&gt;threading mode&lt;/a&gt; is in use, it might be the case that a second error occurs on a separate thread in between the time of the first error and the call to these interfaces. When that happens, the second error will be reported since these interfaces always report the most recent result. To avoid this, each thread can obtain exclusive use of the &lt;a href=&quot;#sqlite3&quot;&gt;database connection&lt;/a&gt; D by invoking &lt;a href=&quot;#sqlite3_mutex_alloc&quot;&gt;sqlite3_mutex_enter&lt;/a&gt;(&lt;a href=&quot;#sqlite3_db_mutex&quot;&gt;sqlite3_db_mutex&lt;/a&gt;(D)) before beginning to use D and invoking &lt;a href=&quot;#sqlite3_mutex_alloc&quot;&gt;sqlite3_mutex_leave&lt;/a&gt;(&lt;a href=&quot;#sqlite3_db_mutex&quot;&gt;sqlite3_db_mutex&lt;/a&gt;(D)) after all calls to the interfaces listed here are completed.</source>
          <target state="translated">Когда используется &lt;a href=&quot;threadsafe&quot;&gt;режим&lt;/a&gt; сериализованного потока , может случиться так, что вторая ошибка произойдет в отдельном потоке между моментом первой ошибки и вызовом этих интерфейсов. Когда это произойдет, будет сообщено о второй ошибке, поскольку эти интерфейсы всегда сообщают самый последний результат. Чтобы избежать этого, каждый поток может получить эксклюзивное использование &lt;a href=&quot;#sqlite3&quot;&gt;соединения&lt;/a&gt; D с базой данных , вызвав &lt;a href=&quot;#sqlite3_mutex_alloc&quot;&gt;sqlite3_mutex_enter&lt;/a&gt; ( &lt;a href=&quot;#sqlite3_db_mutex&quot;&gt;sqlite3_db_mutex&lt;/a&gt; (D)) перед началом использования D и вызвав &lt;a href=&quot;#sqlite3_mutex_alloc&quot;&gt;sqlite3_mutex_leave&lt;/a&gt; ( &lt;a href=&quot;#sqlite3_db_mutex&quot;&gt;sqlite3_db_mutex&lt;/a&gt; (D)) после того, как все вызовы интерфейсов, перечисленных здесь, завершены.</target>
        </trans-unit>
        <trans-unit id="ae5d894865b3485bb3f0df9031d208d9c0c832c5" translate="yes" xml:space="preserve">
          <source>When the size of payload for a cell exceeds a certain threshold (to be defined later) then only the first few bytes of the payload are stored on the b-tree page and the balance is stored in a linked list of content overflow pages.</source>
          <target state="translated">Когда размер полезного груза для ячейки превышает определенный порог (будет определено позже),на странице b-дерева сохраняются только первые несколько байт полезного груза,а остаток хранится в связанном со ссылкой списке страниц переполнения контента.</target>
        </trans-unit>
        <trans-unit id="959baafa9a7af49bb6654912e390fd8adf72f9f7" translate="yes" xml:space="preserve">
          <source>When the steps above are used, SQLite will shorten filename extensions by only using the last 3 characters of the extension. Thus, for example, a file that would normally be called &quot;&lt;code&gt;app.db-journal&lt;/code&gt;&quot; is shortened to just &quot;&lt;code&gt;app.nal&lt;/code&gt;&quot;. Similarly, &quot;&lt;code&gt;app.db-wal&lt;/code&gt;&quot; will become &quot;&lt;code&gt;app.wal&lt;/code&gt;&quot; and &quot;&lt;code&gt;app.db-shm&lt;/code&gt;&quot; becomes &quot;&lt;code&gt;app.shm&lt;/code&gt;&quot;.</source>
          <target state="translated">При выполнении описанных выше шагов SQLite сокращает расширения имен файлов, используя только последние 3 символа расширения. Так, например, файл, который обычно называется &amp;laquo; &lt;code&gt;app.db-journal&lt;/code&gt; &amp;raquo;, сокращается до &amp;laquo; &lt;code&gt;app.nal&lt;/code&gt; &amp;raquo;. Точно так же &amp;laquo; &lt;code&gt;app.db-wal&lt;/code&gt; &amp;raquo; станет &amp;laquo; &lt;code&gt;app.wal&lt;/code&gt; &amp;raquo;, а &amp;laquo; &lt;code&gt;app.db-shm&lt;/code&gt; &amp;raquo; станет &amp;laquo; &lt;code&gt;app.shm&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d643d5a9185e437164a5f2a6216624f98b3e6f19" translate="yes" xml:space="preserve">
          <source>When the temp_store_directory setting is changed, all existing temporary tables, indices, triggers, and viewers in the database connection that issued the pragma are immediately deleted. In practice, temp_store_directory should be set immediately after the first database connection for a process is opened. If the temp_store_directory is changed for one database connection while other database connections are open in the same process, then the behavior is undefined and probably undesirable.</source>
          <target state="translated">При изменении настройки директории temp_store_немедленно удаляются все существующие временные таблицы,индексы,триггеры и вьюверы в подключении к БД,выпустившие прагму.На практике каталог temp_store_store_должен быть установлен сразу после открытия первого подключения к БД для процесса.Если каталог temp_store_store_изменяется для одного подключения к БД,в то время как другие подключения к БД открываются в том же процессе,то поведение является неопределенным и,возможно,нежелательным.</target>
        </trans-unit>
        <trans-unit id="343b5a2825eceb4a3f5768433d668b582d6b47c5" translate="yes" xml:space="preserve">
          <source>When the unlock-notify callback is invoked, which may be before the thread that called &lt;a href=&quot;c3ref/unlock_notify&quot;&gt;sqlite3_unlock_notify()&lt;/a&gt; begins waiting for the asynchronous signal, it does the following:</source>
          <target state="translated">Когда вызывается обратный вызов unlock-notify, что может происходить до того, как поток, &lt;a href=&quot;c3ref/unlock_notify&quot;&gt;вызвавший sqlite3_unlock_notify (),&lt;/a&gt; начинает ждать асинхронного сигнала, он выполняет следующие действия:</target>
        </trans-unit>
        <trans-unit id="b97add61bb2e4ac375ed3ff0cd6f248d8d0b370d" translate="yes" xml:space="preserve">
          <source>When the unlock-notify callback is issued, it is issued from within a call to sqlite3_step() (or sqlite3_close()) associated with the blocking connection. It is illegal to invoke any sqlite3_XXX() API functions from within an unlock-notify callback. The expected use is that the unlock-notify callback will signal some other waiting thread or schedule some action to take place later.</source>
          <target state="translated">При получении обратного вызова уведомления о разблокировке он выдается изнутри вызова sqlite3_step()(или sqlite3_close()),связанного с блокирующим соединением.Незаконно вызывать какие-либо API-функции sqlite3_XXX()из обратного вызова уведомления о разблокировке.Предполагается,что вызов уведомления о разблокировке будет сигнализировать о каком-либо другом ожидающем потоке или запланирует какое-либо действие,которое произойдет позже.</target>
        </trans-unit>
        <trans-unit id="c2be91d4a681af8f031fb2096b9f2fe184670aea" translate="yes" xml:space="preserve">
          <source>When the user does a &quot;File/Save&quot;, instead of overwriting the modified slides, the application can now make new entries in the SLIDE table for just those slides that have been added or altered. Then it creates a new entry in the VERSION table containing the revised manifest.</source>
          <target state="translated">Когда пользователь делает &quot;Файл/Сохранить&quot;,вместо перезаписи измененных слайдов,приложение теперь может делать новые записи в таблице SLIDE только для тех слайдов,которые были добавлены или изменены.Затем оно создает новую запись в таблице VERSION,содержащую измененный манифест.</target>
        </trans-unit>
        <trans-unit id="f5e82ec54c65035c07f8ba3e1f179ebb03a74e94" translate="yes" xml:space="preserve">
          <source>When the user presses the Undo button, invoke undo::undo. Invoke undo::redo when the user presses the Redo button.</source>
          <target state="translated">Когда пользователь нажимает кнопку Отменить,вызывает команду Отменить::Отменить.Спровоцировать undo::redo,когда пользователь нажимает кнопку Redo.</target>
        </trans-unit>
        <trans-unit id="1add060c475b241a7872da34e121430f601e3935" translate="yes" xml:space="preserve">
          <source>When the user scrolls down, the application needs to find the second set of 7 entries. One way to do this is to use the OFFSET clause:</source>
          <target state="translated">Когда пользователь прокручивает вниз,приложение должно найти второй набор из 7 записей.Одним из способов сделать это является использование пункта OFFSET:</target>
        </trans-unit>
        <trans-unit id="591f64272639e3cef4d6af5b9d0166c866e319e8" translate="yes" xml:space="preserve">
          <source>When the value of auto-vacuum is 2 or &quot;incremental&quot; then the additional information needed to do auto-vacuuming is stored in the database file but auto-vacuuming does not occur automatically at each commit as it does with auto_vacuum=full. In incremental mode, the separate &lt;a href=&quot;pragma#pragma_incremental_vacuum&quot;&gt;incremental_vacuum&lt;/a&gt; pragma must be invoked to cause the auto-vacuum to occur.</source>
          <target state="translated">Когда значение авто-вакуума равно 2 или &amp;laquo;инкрементный&amp;raquo;, тогда дополнительная информация, необходимая для выполнения автоматического вакуумирования, сохраняется в файле базы данных, но автоматическое очищение не происходит автоматически при каждой фиксации, как это происходит с auto_vacuum = full. В инкрементном режиме должна быть вызвана отдельная директива &lt;a href=&quot;pragma#pragma_incremental_vacuum&quot;&gt;incremental_vacuum,&lt;/a&gt; чтобы вызвать автоматический вакуум.</target>
        </trans-unit>
        <trans-unit id="681fab88c0ae33e7ccdb7976051e9eb1cbf3ae58" translate="yes" xml:space="preserve">
          <source>When the value returned to V is a string, space to hold that string is managed by the prepared statement S and will be automatically freed when S is finalized.</source>
          <target state="translated">Когда возвращаемое в V значение является строкой,пробел для удержания этой строки управляется подготовленным оператором S и автоматически освобождается,когда S заканчивается.</target>
        </trans-unit>
        <trans-unit id="676274b5ee061976c65b6934ef4f5a4fbd2b341f" translate="yes" xml:space="preserve">
          <source>When the wait_for_unlock_notify() thread is ready to begin waiting for the unlock-notify callback to arrive, it:</source>
          <target state="translated">Когда поток wait_for_unlock_notify()готов начать ожидание обратного вызова unlock-notify(),он:</target>
        </trans-unit>
        <trans-unit id="10e245699dbb244b04267cf604539f618d05ec7d" translate="yes" xml:space="preserve">
          <source>When there are &lt;a href=&quot;lang_attach&quot;&gt;attached databases&lt;/a&gt; and no database is specified in the pragma, all databases have their secure-delete setting altered. The secure-delete setting for newly attached databases is the setting of the main database at the time the ATTACH command is evaluated.</source>
          <target state="translated">Когда есть &lt;a href=&quot;lang_attach&quot;&gt;присоединенные базы данных&lt;/a&gt; и в прагме не указана никакая база данных, для всех баз данных изменяется настройка безопасного удаления. Параметр безопасного удаления для вновь подключенных баз данных - это параметр основной базы данных во время выполнения команды ATTACH.</target>
        </trans-unit>
        <trans-unit id="0e9e3d42daf92400d82986bf5b6a37eceed3828b" translate="yes" xml:space="preserve">
          <source>When this C-preprocessor macro is defined, SQLite includes some additional APIs that provide convenient access to meta-data about tables and queries. The APIs that are enabled by this option are:</source>
          <target state="translated">При задании этого макроса C-препроцессора в SQLite появились дополнительные API,обеспечивающие удобный доступ к мета-данным о таблицах и запросах.В качестве API,которые включены в эту опцию,можно назвать следующие:</target>
        </trans-unit>
        <trans-unit id="80b17e344d3336c6d06fda5d24a646acabeba334" translate="yes" xml:space="preserve">
          <source>When this function is called, the requested changeset is created using both the accumulated records and the current contents of the database file. Specifically:</source>
          <target state="translated">При вызове этой функции запрашиваемый набор изменений создается с использованием как накопленных записей,так и текущего содержимого файла базы данных.В частности:</target>
        </trans-unit>
        <trans-unit id="bb6586ef4ac72fe83222f833701701fa936feb91" translate="yes" xml:space="preserve">
          <source>When this is defined, the library does not respect the special database name &quot;:memory:&quot; (normally used to create an &lt;a href=&quot;inmemorydb&quot;&gt;in-memory database&lt;/a&gt;). If &quot;:memory:&quot; is passed to &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open()&lt;/a&gt;, &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open16()&lt;/a&gt;, or &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2()&lt;/a&gt;, a file with this name will be opened or created.</source>
          <target state="translated">Когда это определено, библиотека не уважает специальное имя базы данных &quot;: memory:&quot; (обычно используется для создания &lt;a href=&quot;inmemorydb&quot;&gt;базы данных в памяти&lt;/a&gt; ). Если &quot;: memory:&quot; передается в &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open ()&lt;/a&gt; , &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open16 ()&lt;/a&gt; или &lt;a href=&quot;c3ref/open&quot;&gt;sqlite3_open_v2 ()&lt;/a&gt; , файл с этим именем будет открыт или создан.</target>
        </trans-unit>
        <trans-unit id="9dadcf039e49017d2804dcadcaa92a2ed3ad29c4" translate="yes" xml:space="preserve">
          <source>When this is done, no disk file is opened. Instead, a new database is created purely in memory. The database ceases to exist as soon as the database connection is closed. Every :memory: database is distinct from every other. So, opening two database connections each with the filename &quot;:memory:&quot; will create two independent in-memory databases.</source>
          <target state="translated">После этого ни один из дисковых файлов не будет открыт.Вместо этого создается новая база данных исключительно в памяти.БД перестает существовать,как только закрывается соединение с БД.Каждая :память:БД отличается друг от друга.Таким образом,открытие двух соединений с БД,каждое с именем файла &quot;:memory:&quot;,создаст две независимые БД в памяти.</target>
        </trans-unit>
        <trans-unit id="3c612857bb421bf9acf60c3aa66716a6889b3ef9" translate="yes" xml:space="preserve">
          <source>When this option is defined in the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;, the &lt;a href=&quot;geopoly&quot;&gt;Geopoly extension&lt;/a&gt; is included in the build.</source>
          <target state="translated">Когда этот параметр определен в &lt;a href=&quot;amalgamation&quot;&gt;объединении&lt;/a&gt; , в &lt;a href=&quot;geopoly&quot;&gt;сборку включается расширение Geopoly&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63b0e43097f54c25e3fe1c915efb4112c36433a7" translate="yes" xml:space="preserve">
          <source>When this option is defined in the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;, the &lt;a href=&quot;json1&quot;&gt;JSON SQL functions&lt;/a&gt; are added to the build automatically.</source>
          <target state="translated">Когда этот параметр определен в &lt;a href=&quot;amalgamation&quot;&gt;объединении&lt;/a&gt; , функции &lt;a href=&quot;json1&quot;&gt;JSON SQL&lt;/a&gt; добавляются в сборку автоматически.</target>
        </trans-unit>
        <trans-unit id="e638c666c14acfed829f561f8cba0197feda3c02" translate="yes" xml:space="preserve">
          <source>When this option is defined in the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;, version 3 of the full-text search engine is added to the build automatically.</source>
          <target state="translated">Когда этот параметр определен в &lt;a href=&quot;amalgamation&quot;&gt;объединении&lt;/a&gt; , версия 3 движка полнотекстового поиска добавляется в сборку автоматически.</target>
        </trans-unit>
        <trans-unit id="4a19c3b55092d529dbfec770d25a58e2ca349990" translate="yes" xml:space="preserve">
          <source>When this option is defined in the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;, versions 3 and 4 of the full-text search engine is added to the build automatically.</source>
          <target state="translated">Когда этот параметр определен в &lt;a href=&quot;amalgamation&quot;&gt;объединении&lt;/a&gt; , версии 3 и 4 системы полнотекстового поиска добавляются в сборку автоматически.</target>
        </trans-unit>
        <trans-unit id="818c376822c0fec952ac59c4332327f0b7edf7db" translate="yes" xml:space="preserve">
          <source>When this option is defined in the &lt;a href=&quot;amalgamation&quot;&gt;amalgamation&lt;/a&gt;, versions 5 of the full-text search engine (&lt;a href=&quot;fts5&quot;&gt;fts5&lt;/a&gt;) is added to the build automatically.</source>
          <target state="translated">Когда этот параметр определен в &lt;a href=&quot;amalgamation&quot;&gt;объединении&lt;/a&gt; , версии 5 системы полнотекстового поиска ( &lt;a href=&quot;fts5&quot;&gt;fts5&lt;/a&gt; ) добавляются в сборку автоматически.</target>
        </trans-unit>
        <trans-unit id="6540ae2c93aba220c991dfe94132dd0f63e59810" translate="yes" xml:space="preserve">
          <source>When this option is defined, an optimization that accelerates counting all entries in a table (in other words, an optimization that helps &quot;SELECT count(*) FROM table&quot; run faster) is omitted.</source>
          <target state="translated">Когда эта опция определена,оптимизация,которая ускоряет подсчет всех записей в таблице (другими словами,оптимизация,которая помогает &quot;SELECT count(*)FROM table&quot; работать быстрее)опускается.</target>
        </trans-unit>
        <trans-unit id="53f492f476a20550a057a12a97c6de3049506d26" translate="yes" xml:space="preserve">
          <source>When this option is defined, it is not possible to specify a blob in an SQL statement using the X'ABCD' syntax.</source>
          <target state="translated">Когда эта опция определена,невозможно указать блок в SQL операторе,используя синтаксис X'ABCD'.</target>
        </trans-unit>
        <trans-unit id="afad8ea069f34c202a3e893171214a5aee9a0bc0" translate="yes" xml:space="preserve">
          <source>When this option is defined, the &lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE&lt;/a&gt; command is not included in the library. Executing an &lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE&lt;/a&gt; statement causes a parse error.</source>
          <target state="translated">Когда этот параметр определен, команда &lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE&lt;/a&gt; не включается в библиотеку. Выполнение оператора &lt;a href=&quot;lang_altertable&quot;&gt;ALTER TABLE&lt;/a&gt; вызывает ошибку синтаксического анализа.</target>
        </trans-unit>
        <trans-unit id="523431ac75b0212a06c55ac385d13beeedacb305" translate="yes" xml:space="preserve">
          <source>When this option is defined, the &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; command is omitted from the build.</source>
          <target state="translated">Когда этот параметр определен, команда &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE не&lt;/a&gt; включается в сборку.</target>
        </trans-unit>
        <trans-unit id="594c7ba3832aba3180a92cd74c6f75ba44ce7aaf" translate="yes" xml:space="preserve">
          <source>When this option is defined, the &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; and &lt;a href=&quot;lang_detach&quot;&gt;DETACH&lt;/a&gt; commands are omitted from the build.</source>
          <target state="translated">Когда этот параметр определен, команды &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; и &lt;a href=&quot;lang_detach&quot;&gt;DETACH не&lt;/a&gt; включаются в сборку.</target>
        </trans-unit>
        <trans-unit id="8c1b711bd5c9246457da19791ca7b6dcb97ca5d2" translate="yes" xml:space="preserve">
          <source>When this option is defined, the &lt;a href=&quot;lang_reindex&quot;&gt;REINDEX&lt;/a&gt; command is not included in the library. Executing a &lt;a href=&quot;lang_reindex&quot;&gt;REINDEX&lt;/a&gt; statement causes a parse error.</source>
          <target state="translated">Когда этот параметр определен, команда &lt;a href=&quot;lang_reindex&quot;&gt;REINDEX&lt;/a&gt; не включается в библиотеку. Выполнение оператора &lt;a href=&quot;lang_reindex&quot;&gt;REINDEX&lt;/a&gt; вызывает ошибку синтаксического анализа.</target>
        </trans-unit>
        <trans-unit id="d2955f48905e9a8f58404484936cbf538b367034" translate="yes" xml:space="preserve">
          <source>When this option is defined, the &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; command is not included in the library. Executing a &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; statement causes a parse error.</source>
          <target state="translated">Когда этот параметр определен, команда &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; не включается в библиотеку. Выполнение оператора &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; вызывает ошибку синтаксического анализа.</target>
        </trans-unit>
        <trans-unit id="f189302742f5abf29172e2258e929a776e965db1" translate="yes" xml:space="preserve">
          <source>When this option is present, content contained in &lt;a href=&quot;fileformat2#ovflpgs&quot;&gt;overflow pages&lt;/a&gt; of the database file is read directly from disk, bypassing the &lt;a href=&quot;c3ref/pcache_methods2&quot;&gt;page cache&lt;/a&gt;, during read transactions. In applications that do a lot of reads of large BLOBs, this option might improve read performance.</source>
          <target state="translated">Когда этот параметр присутствует, содержимое, содержащееся на &lt;a href=&quot;fileformat2#ovflpgs&quot;&gt;страницах переполнения&lt;/a&gt; файла базы данных, читается непосредственно с диска, минуя &lt;a href=&quot;c3ref/pcache_methods2&quot;&gt;кеш страницы&lt;/a&gt; , во время транзакций чтения. В приложениях, которые выполняют много операций чтения больших двоичных объектов, этот параметр может повысить производительность чтения.</target>
        </trans-unit>
        <trans-unit id="05b6e594e4163ec73c013e9bc0bd201fec26dfcd" translate="yes" xml:space="preserve">
          <source>When this pragma is on, and the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt; flag is off, then the &lt;a href=&quot;fileformat2#sqlite_master&quot;&gt;sqlite_master&lt;/a&gt; table can be changed using ordinary &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;, &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;, and &lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt; statements. &lt;b&gt;Warning:&lt;/b&gt; misuse of this pragma can easily result in a &lt;a href=&quot;howtocorrupt#cfgerr&quot;&gt;corrupt database file&lt;/a&gt;.</source>
          <target state="translated">Когда эта прагма &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;включена&lt;/a&gt; , а флаг SQLITE_DBCONFIG_DEFENSIVE выключен, таблица &lt;a href=&quot;fileformat2#sqlite_master&quot;&gt;sqlite_master&lt;/a&gt; может быть изменена с помощью обычных операторов &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; , &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt; и &lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt; . &lt;b&gt;Предупреждение:&lt;/b&gt; неправильное использование этой прагмы может легко привести к &lt;a href=&quot;howtocorrupt#cfgerr&quot;&gt;повреждению файла базы данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="155915a2fa0e144a28d6f3909aae6b1d4f21b4e3" translate="yes" xml:space="preserve">
          <source>When this pragma is on, and the &lt;a href=&quot;c3ref/c_dbconfig_defensive#sqlitedbconfigdefensive&quot;&gt;SQLITE_DBCONFIG_DEFENSIVE&lt;/a&gt; flag is off, then the &lt;a href=&quot;schematab&quot;&gt;sqlite_schema&lt;/a&gt; table can be changed using ordinary &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt;, &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;, and &lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt; statements. &lt;b&gt;Warning:&lt;/b&gt; misuse of this pragma can easily result in a &lt;a href=&quot;howtocorrupt#cfgerr&quot;&gt;corrupt database file&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24dad918c280682da96633e2cfedee92e2eb063" translate="yes" xml:space="preserve">
          <source>When three or more simple SELECTs are connected into a compound SELECT, they group from left to right. In other words, if &quot;A&quot;, &quot;B&quot; and &quot;C&quot; are all simple SELECT statements, (A op B op C) is processed as ((A op B) op C).</source>
          <target state="translated">Когда три или более простых SELECT соединены в составной SELECT,они группируются слева направо.Другими словами,если &quot;A&quot;,&quot;B&quot; и &quot;C&quot; являются простыми операторами SELECT,(A op B op C)обрабатываются как ((A op B)op C).</target>
        </trans-unit>
        <trans-unit id="356d225c15feaa12023968822303a920dbc04787" translate="yes" xml:space="preserve">
          <source>When to use WITHOUT ROWID</source>
          <target state="translated">Когда использовать БЕЗ СЕЙЧАСА.</target>
        </trans-unit>
        <trans-unit id="dde1df06f3e28fa2c213af6dc7ee811081acdcc1" translate="yes" xml:space="preserve">
          <source>When two BLOB values are compared, the result is determined using memcmp().</source>
          <target state="translated">При сравнении двух BLOB-значений результат определяется с помощью функции memcmp().</target>
        </trans-unit>
        <trans-unit id="3b7477ad4142a17a91342e502a66554eeeaf182c" translate="yes" xml:space="preserve">
          <source>When two or more connections access the same database in shared-cache mode, read and write (shared and exclusive) locks on individual tables are used to ensure that concurrently executing transactions are kept isolated. Before writing to a table, a write (exclusive) lock must be obtained on that table. Before reading, a read (shared) lock must be obtained. A connection releases all held table locks when it concludes its transaction. If a connection cannot obtain a required lock, then the call to &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; returns SQLITE_LOCKED.</source>
          <target state="translated">Когда два или более соединения обращаются к одной и той же базе данных в режиме общего кэша, используются блокировки чтения и записи (общие и исключительные) для отдельных таблиц, чтобы гарантировать изоляцию одновременно выполняющихся транзакций. Перед записью в таблицу необходимо получить (исключительную) блокировку записи для этой таблицы. Перед чтением необходимо получить блокировку чтения (разделяемую). После завершения транзакции соединение снимает все удерживаемые блокировки таблицы. Если соединение не может получить требуемую блокировку, тогда вызов &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step ()&lt;/a&gt; возвращает SQLITE_LOCKED.</target>
        </trans-unit>
        <trans-unit id="384b14b240303a8eaa803ae4a95a246eb3eb3a95" translate="yes" xml:space="preserve">
          <source>When two or more connections use a shared-cache, locks are used to serialize concurrent access attempts on a per-table basis. Tables support two types of locks, &quot;read-locks&quot; and &quot;write-locks&quot;. Locks are granted to connections - at any one time, each database connection has either a read-lock, write-lock or no lock on each database table.</source>
          <target state="translated">Когда два или более соединения используют общий кэш,блокировки используются для сериализации попыток одновременного доступа на каждый стол.Таблицы поддерживают два типа блокировок:&quot;чтение-блокировка&quot; и &quot;запись-блокировка&quot;.Замки предоставляются подключениям-в любое время каждое подключение к БД имеет либо &quot;read-lock&quot;,либо &quot;write-lock&quot;,либо не имеет блокировки на каждую таблицу БД.</target>
        </trans-unit>
        <trans-unit id="9ef3f52e6658347244503cf695a84d552443a0f6" translate="yes" xml:space="preserve">
          <source>When unlocking, the same SHARED or EXCLUSIVE flag must be supplied as was given on the corresponding lock.</source>
          <target state="translated">При разблокировке должен быть поставлен тот же флаг ШАРАНС или ЭКСКЛЮЗИВ,который был указан на соответствующем замке.</target>
        </trans-unit>
        <trans-unit id="c942e92dfd8f19ebf7cd74cbba74f891e087e57f" translate="yes" xml:space="preserve">
          <source>When updating the database file, SQLite always makes a copy of the page content into heap memory before modifying the page. This is necessary for two reasons. First, changes to the database are not supposed to be visible to other processes until after the transaction commits and so the changes must occur in private memory. Second, SQLite uses a read-only memory map to prevent stray pointers in the application from overwriting and corrupting the database file.</source>
          <target state="translated">При обновлении файла базы данных SQLite всегда делает копию содержимого страницы в памяти кучи перед ее модификацией.Это необходимо по двум причинам.Во-первых,изменения в БД должны быть видны другим процессам только после фиксации транзакции,поэтому изменения должны происходить в частной памяти.Во-вторых,SQLite использует карту памяти,доступную только для чтения,чтобы предотвратить перезапись и повреждение файла БД блуждающими указателями в приложении.</target>
        </trans-unit>
        <trans-unit id="321ab4dcceec298b077cdbf468b4b448206d5be8" translate="yes" xml:space="preserve">
          <source>When used in the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;, the SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION feature allows SQL text that contains application-defined functions to be pasted into the shell for analysis and debugging without having to create and load an extension that implements the application-defined functions.</source>
          <target state="translated">При использовании в &lt;a href=&quot;cli&quot;&gt;оболочке командной&lt;/a&gt; строки функция SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION позволяет вставлять текст SQL, содержащий определяемые приложением функции, в оболочку для анализа и отладки без необходимости создавать и загружать расширение, реализующее определяемые приложением функции.</target>
        </trans-unit>
        <trans-unit id="4fb531d1e034498892c1e8ba5b02ac3bc138fb71" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;mmap&quot;&gt;memory-mapped I/O&lt;/a&gt; map the database file read-only so that stray pointers and/or array overruns in the application cannot accidentally modify the database file.</source>
          <target state="translated">При использовании &lt;a href=&quot;mmap&quot;&gt;отображения ввода-вывода с&lt;/a&gt; отображением памяти отобразите файл базы данных только для чтения, чтобы случайные указатели и / или переполнения массива в приложении не могли случайно изменить файл базы данных.</target>
        </trans-unit>
        <trans-unit id="6bcae413d7ef24ed4791d379c4695938ecb30984" translate="yes" xml:space="preserve">
          <source>When using FTS4, specifying a column name that contains an &quot;=&quot; character and is not either a &quot;tokenize=*&quot; specification or a recognized FTS4 option is an error. With FTS3, the first token in the unrecognized directive is interpreted as a column name. Similarly, specifying multiple &quot;tokenize=*&quot; directives in a single table declaration is an error when using FTS4, whereas the second and subsequent &quot;tokenize=*&quot; directives are interpreted as column names by FTS3. For example:</source>
          <target state="translated">При использовании FTS4 указание имени столбца,содержащего символ &quot;=&quot; и не являющегося ни спецификацией &quot;tokenize=*&quot;,ни распознанной опцией FTS4,является ошибкой.В FTS3 первый маркер в нераспознанной директиве интерпретируется как имя столбца.Аналогично,указание нескольких директив &quot;tokenize=*&quot; в декларации одной таблицы является ошибкой при использовании FTS4,в то время как вторая и последующие директивы &quot;tokenize=*&quot; интерпретируются FTS3 как имена столбцов.Например:</target>
        </trans-unit>
        <trans-unit id="a2854ef2a0e9879ca0973bfbdbeb94518a7782b5" translate="yes" xml:space="preserve">
          <source>When using SQLite as a shared library, an application can test to see whether or not mutexes have been disabled using the &lt;a href=&quot;c3ref/threadsafe&quot;&gt;sqlite3_threadsafe()&lt;/a&gt; API. Applications that link against SQLite at run-time and use SQLite from multiple threads should probably check this API to make sure they did not accidentally get linked against a version of the SQLite library that has its mutexes disabled. Single-threaded applications will, of course, work correctly regardless of whether or not SQLite is configured to be threadsafe, though they will be a little bit faster when using versions of SQLite with mutexes disabled.</source>
          <target state="translated">При использовании SQLite в качестве разделяемой библиотеки приложение может проверить, отключены ли мьютексы, с помощью API &lt;a href=&quot;c3ref/threadsafe&quot;&gt;sqlite3_threadsafe ()&lt;/a&gt; . Приложения, которые связываются с SQLite во время выполнения и используют SQLite из нескольких потоков, вероятно, должны проверить этот API, чтобы убедиться, что они случайно не связаны с версией библиотеки SQLite, в которой отключены мьютексы. Однопоточные приложения, конечно, будут работать правильно, независимо от того, настроен ли SQLite как потокобезопасный, хотя они будут немного быстрее при использовании версий SQLite с отключенными мьютексами.</target>
        </trans-unit>
        <trans-unit id="baabf02615564e01474304f4466f9fe87599218a" translate="yes" xml:space="preserve">
          <source>When using an index on an expression, try to use expression values already available in the index, rather than loading the original columns and recomputing the expression.</source>
          <target state="translated">При использовании индекса в выражении постарайтесь использовать значения выражений,уже имеющихся в индексе,а не загружать исходные столбцы и не перевычислять выражение.</target>
        </trans-unit>
        <trans-unit id="468b6859516cde0950db73781d0176e06ba0111f" translate="yes" xml:space="preserve">
          <source>When using methods (2) or (3), it is important that the tokenizer only provide synonyms when tokenizing document text (method (2)) or query text (method (3)), not both. Doing so will not cause any errors, but is inefficient.</source>
          <target state="translated">При использовании методов (2)или (3)важно,чтобы токенайзер предоставлял синонимы только при токенировании текста документа (метод (2))или текста запроса (метод (3)),а не и того,и другого.Это не приведет к ошибкам,но неэффективно.</target>
        </trans-unit>
        <trans-unit id="88fac7db3e9db07076df4610515cb23f9340b834" translate="yes" xml:space="preserve">
          <source>When using the enhanced query syntax, parenthesis may be used to override the default precedence of the various operators. For example:</source>
          <target state="translated">При использовании расширенного синтаксиса запроса,скобки могут быть использованы для переопределения приоритета по умолчанию различных операторов.Например:</target>
        </trans-unit>
        <trans-unit id="1505c3324cb54c87924929ab65d11580dc89a0fd" translate="yes" xml:space="preserve">
          <source>When wrongful thoughts come into your heart, dash them against Christ immediately.</source>
          <target state="translated">Когда в твоё сердце приходят противоправные мысли,сразу же бросай их против Христа.</target>
        </trans-unit>
        <trans-unit id="5d95aef3b20c2c80bafbf5f8ecbb1090e555f684" translate="yes" xml:space="preserve">
          <source>When xSavepoint(X,N) is invoked, that is a signal to the virtual table X that it should save its current state as savepoint N. A subsequent call to xRollbackTo(X,R) means that the state of the virtual table should return to what it was when xSavepoint(X,R) was last called. The call to xRollbackTo(X,R) will invalidate all savepoints with N&amp;gt;R; none of the invalided savepoints will be rolled back or released without first being reinitialized by a call to xSavepoint(). A call to xRelease(X,M) invalidates all savepoints where N&amp;gt;=M.</source>
          <target state="translated">Когда вызывается xSavepoint (X, N), это сигнал виртуальной таблице X о том, что она должна сохранить свое текущее состояние как точку сохранения N. Последующий вызов xRollbackTo (X, R) означает, что состояние виртуальной таблицы должно вернуть к тому, что было при последнем вызове xSavepoint (X, R). Вызов xRollbackTo (X, R) сделает недействительными все точки сохранения с N&amp;gt; R; ни одна из недействительных точек сохранения не будет отменена или освобождена без предварительной повторной инициализации с помощью вызова xSavepoint (). Вызов xRelease (X, M) делает недействительными все точки сохранения, где N&amp;gt; = M.</target>
        </trans-unit>
        <trans-unit id="d7bf837f933ca19d45d60aebd942c6f51001215f" translate="yes" xml:space="preserve">
          <source>When you change the cache size using the cache_size pragma, the change only endures for the current session. The cache size reverts to the default value when the database is closed and reopened.</source>
          <target state="translated">Когда вы изменяете размер кэша с помощью прагмы cache_size,изменение длится только в течение текущего сеанса.Размер кэша возвращается к значению по умолчанию,когда база данных закрывается и открывается заново.</target>
        </trans-unit>
        <trans-unit id="b0e87a05754f1ec62d9fdd0b9342f0b467aa6d5b" translate="yes" xml:space="preserve">
          <source>When you do an insert into a table that does not have an INTEGER PRIMARY KEY column, or if the table does have an INTEGER PRIMARY KEY but the value for that column is not specified in the VALUES clause of the insert, then the key is automatically generated. You can find the value of the key for the most recent INSERT statement using the &lt;b&gt;sqlite_last_insert_rowid&lt;/b&gt; API function.</source>
          <target state="translated">Когда вы выполняете вставку в таблицу, в которой нет столбца INTEGER PRIMARY KEY, или если таблица имеет INTEGER PRIMARY KEY, но значение для этого столбца не указано в предложении VALUES вставки, то ключ автоматически генерируется. Вы можете найти значение ключа для последнего оператора INSERT с помощью &lt;b&gt;функции&lt;/b&gt; API &lt;b&gt;sqlite_last_insert_rowid&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="4e2ed89fd7ed9aabab05210ebf19395404532e3b" translate="yes" xml:space="preserve">
          <source>When you have a SQL script that you are debugging or trying to understand, it is often useful to run it in the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt; with the &quot;.eqp full&quot; setting. When &quot;.eqp&quot; is set to FULL, the shell automatically shows the &lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt; and &lt;a href=&quot;eqp&quot;&gt;EXPLAIN QUERY PLAN&lt;/a&gt; output for each command prior to actually running that command.</source>
          <target state="translated">Когда у вас есть сценарий SQL, который вы отлаживаете или пытаетесь понять, часто бывает полезно запустить его в &lt;a href=&quot;cli&quot;&gt;оболочке командной строки&lt;/a&gt; с параметром &amp;laquo;.eqp full&amp;raquo;. Когда для &quot;.eqp&quot; установлено значение FULL, оболочка автоматически показывает выходные данные &lt;a href=&quot;lang_explain&quot;&gt;EXPLAIN&lt;/a&gt; и &lt;a href=&quot;eqp&quot;&gt;EXPLAIN QUERY PLAN&lt;/a&gt; для каждой команды до ее фактического выполнения.</target>
        </trans-unit>
        <trans-unit id="9a469065895a09048073186621e6fa156f1d430f" translate="yes" xml:space="preserve">
          <source>Whenever a &lt;a href=&quot;../pragma#syntax&quot; id=&quot;sqlitefcntlpragma&quot;&gt;PRAGMA&lt;/a&gt; statement is parsed, an &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control is sent to the open &lt;a href=&quot;file&quot;&gt;sqlite3_file&lt;/a&gt; object corresponding to the database file to which the pragma statement refers. The argument to the &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control is an array of pointers to strings (char**) in which the second element of the array is the name of the pragma and the third element is the argument to the pragma or NULL if the pragma has no argument. The handler for an &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control can optionally make the first element of the char** argument point to a string obtained from &lt;a href=&quot;mprintf&quot;&gt;sqlite3_mprintf()&lt;/a&gt; or the equivalent and that string will become the result of the pragma or the error message if the pragma fails. If the &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control returns &lt;a href=&quot;../rescode#notfound&quot;&gt;SQLITE_NOTFOUND&lt;/a&gt;, then normal &lt;a href=&quot;../pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; processing continues. If the &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control returns &lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OK&lt;/a&gt;, then the parser assumes that the VFS has handled the PRAGMA itself and the parser generates a no-op prepared statement if result string is NULL, or that returns a copy of the result string if the string is non-NULL. If the &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control returns any result code other than &lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OK&lt;/a&gt; or &lt;a href=&quot;../rescode#notfound&quot;&gt;SQLITE_NOTFOUND&lt;/a&gt;, that means that the VFS encountered an error while handling the &lt;a href=&quot;../pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; and the compilation of the PRAGMA fails with an error. The &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control occurs at the beginning of pragma statement analysis and so it is able to override built-in &lt;a href=&quot;../pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; statements.</source>
          <target state="translated">При каждом &lt;a href=&quot;../pragma#syntax&quot; id=&quot;sqlitefcntlpragma&quot;&gt;анализе&lt;/a&gt; оператора &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;PRAGMA&lt;/a&gt; файл управления SQLITE_FCNTL_PRAGMA отправляется открытому объекту &lt;a href=&quot;file&quot;&gt;sqlite3_file,&lt;/a&gt; соответствующему файлу базы данных, на который ссылается оператор pragma. Аргументом для &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;файлового элемента&lt;/a&gt; управления SQLITE_FCNTL_PRAGMA является массив указателей на строки (char **), в котором второй элемент массива - это имя прагмы, а третий элемент - аргумент прагмы или NULL, если прагма не имеет аргумент. Обработчик для &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;файлового элемента&lt;/a&gt; управления SQLITE_FCNTL_PRAGMA может дополнительно сделать первый элемент аргумента char **, указывающий на строку, полученную из &lt;a href=&quot;mprintf&quot;&gt;sqlite3_mprintf ()&lt;/a&gt;или эквивалент, и эта строка станет результатом прагмы или сообщения об ошибке, если прагма не сработает. Если &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; управления файлами возвращает &lt;a href=&quot;../rescode#notfound&quot;&gt;SQLITE_NOTFOUND&lt;/a&gt; , то нормальная &lt;a href=&quot;../pragma#syntax&quot;&gt;ПРАГМА&lt;/a&gt; обработка продолжается. Если &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; управление возвращается файл &lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OK&lt;/a&gt; , то парсер предполагает , что VFS обработал сам ПРАГМА и анализатор генерирует не-оп подготовленное заявление , если строка результата является NULL, или что возвращает копию строки результата , если строка не является -НОЛЬ. Если файловый элемент управления &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; возвращает любой код результата, отличный от &lt;a href=&quot;../rescode#ok&quot;&gt;SQLITE_OK&lt;/a&gt; или &lt;a href=&quot;../rescode#notfound&quot;&gt;SQLITE_NOTFOUND&lt;/a&gt;, это означает, что VFS обнаружила ошибку при обработке &lt;a href=&quot;../pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; и компиляция PRAGMA завершилась ошибкой. Управление файлом &lt;a href=&quot;c_fcntl_begin_atomic_write#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; происходит в начале анализа инструкций &lt;a href=&quot;../pragma#syntax&quot;&gt;прагмы,&lt;/a&gt; поэтому он может переопределить встроенные операторы PRAGMA .</target>
        </trans-unit>
        <trans-unit id="4f29909c26f83db47f3f77fe2f91d6b21b9cfb6d" translate="yes" xml:space="preserve">
          <source>Whenever a &lt;a href=&quot;pragma#syntax&quot; id=&quot;sqlitefcntlpragma&quot;&gt;PRAGMA&lt;/a&gt; statement is parsed, an &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control is sent to the open &lt;a href=&quot;#sqlite3_file&quot;&gt;sqlite3_file&lt;/a&gt; object corresponding to the database file to which the pragma statement refers. The argument to the &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control is an array of pointers to strings (char**) in which the second element of the array is the name of the pragma and the third element is the argument to the pragma or NULL if the pragma has no argument. The handler for an &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control can optionally make the first element of the char** argument point to a string obtained from &lt;a href=&quot;#sqlite3_mprintf&quot;&gt;sqlite3_mprintf()&lt;/a&gt; or the equivalent and that string will become the result of the pragma or the error message if the pragma fails. If the &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control returns &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_NOTFOUND&lt;/a&gt;, then normal &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; processing continues. If the &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control returns &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OK&lt;/a&gt;, then the parser assumes that the VFS has handled the PRAGMA itself and the parser generates a no-op prepared statement if result string is NULL, or that returns a copy of the result string if the string is non-NULL. If the &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control returns any result code other than &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OK&lt;/a&gt; or &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_NOTFOUND&lt;/a&gt;, that means that the VFS encountered an error while handling the &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; and the compilation of the PRAGMA fails with an error. The &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; file control occurs at the beginning of pragma statement analysis and so it is able to override built-in &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; statements.</source>
          <target state="translated">При каждом &lt;a href=&quot;pragma#syntax&quot; id=&quot;sqlitefcntlpragma&quot;&gt;анализе&lt;/a&gt; оператора &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;PRAGMA&lt;/a&gt; файл управления SQLITE_FCNTL_PRAGMA отправляется открытому объекту &lt;a href=&quot;#sqlite3_file&quot;&gt;sqlite3_file,&lt;/a&gt; соответствующему файлу базы данных, на который ссылается оператор pragma. Аргументом для &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;файлового элемента&lt;/a&gt; управления SQLITE_FCNTL_PRAGMA является массив указателей на строки (char **), в котором второй элемент массива - это имя прагмы, а третий элемент - аргумент прагмы или NULL, если прагма не имеет аргумент. Обработчик для &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;файлового элемента&lt;/a&gt; управления SQLITE_FCNTL_PRAGMA может дополнительно сделать первый элемент аргумента char **, указывающий на строку, полученную из &lt;a href=&quot;#sqlite3_mprintf&quot;&gt;sqlite3_mprintf ()&lt;/a&gt;или эквивалент, и эта строка станет результатом прагмы или сообщения об ошибке, если прагма не сработает. Если &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; управления файлами возвращает &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_NOTFOUND&lt;/a&gt; , то нормальная &lt;a href=&quot;pragma#syntax&quot;&gt;ПРАГМА&lt;/a&gt; обработка продолжается. Если &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; управление возвращается файл &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OK&lt;/a&gt; , то парсер предполагает , что VFS обработал сам ПРАГМА и анализатор генерирует не-оп подготовленное заявление , если строка результата является NULL, или что возвращает копию строки результата , если строка не является -НОЛЬ. Если файловый элемент управления &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; возвращает любой код результата, отличный от &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_OK&lt;/a&gt; или &lt;a href=&quot;#SQLITE_ABORT&quot;&gt;SQLITE_NOTFOUND&lt;/a&gt;, это означает, что VFS обнаружила ошибку при обработке &lt;a href=&quot;pragma#syntax&quot;&gt;PRAGMA&lt;/a&gt; и компиляция PRAGMA завершилась ошибкой. Управление файлом &lt;a href=&quot;#sqlitefcntlpragma&quot;&gt;SQLITE_FCNTL_PRAGMA&lt;/a&gt; происходит в начале анализа инструкций &lt;a href=&quot;pragma#syntax&quot;&gt;прагмы,&lt;/a&gt; поэтому он может переопределить встроенные операторы PRAGMA .</target>
        </trans-unit>
        <trans-unit id="7da0d908dd494a51e46851fa8be237351c85f11a" translate="yes" xml:space="preserve">
          <source>Whenever a bug is reported against SQLite, that bug is not considered fixed until new test cases that would exhibit the bug have been added to either the TCL or TH3 test suites. Over the years, this has resulted in thousands and thousands of new tests. These regression tests ensure that bugs that have been fixed in the past are not reintroduced into future versions of SQLite.</source>
          <target state="translated">Всякий раз,когда поступает сообщение об ошибке в SQLite,эта ошибка не считается исправленной до тех пор,пока новые тестовые случаи,в которых была бы обнаружена ошибка,не будут добавлены в наборы тестов TCL или TH3.С годами это привело к тысячам и тысячам новых тестов.Эти регрессионные тесты гарантируют,что ошибки,которые были исправлены в прошлом,не будут повторно внедрены в будущие версии SQLite.</target>
        </trans-unit>
        <trans-unit id="33e01584f09cbc3030c7fddae4886376aff67c9e" translate="yes" xml:space="preserve">
          <source>Whenever a database is opened, the entire schema is scanned and parsed and a parse tree for the schema is held in memory. That means that database connection startup time and initial memory usage is proportional to the size of the schema.</source>
          <target state="translated">Всякий раз,когда открывается база данных,сканируется и анализируется вся схема,а в памяти хранится дерево разбора схемы.Это означает,что время запуска соединения с БД и начальное использование памяти пропорционально размеру схемы.</target>
        </trans-unit>
        <trans-unit id="497ecda91e171119dde556e568de3183a8cb8f6e" translate="yes" xml:space="preserve">
          <source>Whenever a row in the parent table of a foreign key constraint is deleted, or when the values stored in the parent key column or columns are modified, the logical sequence of events is:</source>
          <target state="translated">Всякий раз,когда строка в родительской таблице ограничения постороннего ключа удаляется,или когда изменяются значения,хранящиеся в столбце или столбцах родительского ключа,логическая последовательность событий:</target>
        </trans-unit>
        <trans-unit id="0a37cacf0c7e51e3db57f63b99d51f003b150071" translate="yes" xml:space="preserve">
          <source>Whenever a write operation occurs, the writer checks how much progress the checkpointer has made, and if the entire WAL has been transferred into the database and synced and if no readers are making use of the WAL, then the writer will rewind the WAL back to the beginning and start putting new transactions at the beginning of the WAL. This mechanism prevents a WAL file from growing without bound.</source>
          <target state="translated">Всякий раз,когда происходит операция записи,пишущий проверяет,насколько успешно работает контрольный указатель,и если весь WAL был перенесен в базу данных и синхронизирован,и если ни один из читателей не использует WAL,то пишущий перемотает WAL обратно в начало и начнет ставить новые транзакции в начало WAL.Этот механизм предотвращает рост файла WAL без привязки.</target>
        </trans-unit>
        <trans-unit id="343d6f171b30e5570b4ea710189ea4bcc234b168" translate="yes" xml:space="preserve">
          <source>Whenever another row of result data is available, &lt;b&gt;sqlite_step&lt;/b&gt; will return SQLITE_ROW. The row data is stored in an array of pointers to strings and the 2nd parameter is made to point to this array.</source>
          <target state="translated">Всякий раз, когда доступна другая строка данных результата, &lt;b&gt;sqlite_step&lt;/b&gt; вернет SQLITE_ROW. Данные строки хранятся в массиве указателей на строки, а второй параметр указывает на этот массив.</target>
        </trans-unit>
        <trans-unit id="be09d2acec84e8312793d7710565bb42fe503a39" translate="yes" xml:space="preserve">
          <source>Whenever comparing SQLite to other SQL database engines like SQL Server, PostgreSQL, MySQL, or Oracle, it is important first of all to realize that SQLite is not intended as a replacement or competitor to any of those systems. SQLite is &lt;a href=&quot;serverless&quot;&gt;serverless&lt;/a&gt;. There is no separate server process that manages the database. An application interacts with the database engine using function calls, not by sending messages to a separate process or thread.</source>
          <target state="translated">Каждый раз, сравнивая SQLite с другими механизмами баз данных SQL, такими как SQL Server, PostgreSQL, MySQL или Oracle, важно прежде всего понимать, что SQLite не предназначен в качестве замены или конкурента какой-либо из этих систем. SQLite &lt;a href=&quot;serverless&quot;&gt;бессерверный&lt;/a&gt; . Нет отдельного серверного процесса, который управляет базой данных. Приложение взаимодействует с ядром базы данных с помощью вызовов функций, а не путем отправки сообщений в отдельный процесс или поток.</target>
        </trans-unit>
        <trans-unit id="17a11b6e3fb65c86a99e26ed1e561497e95a4bf4" translate="yes" xml:space="preserve">
          <source>Whenever the database schema changes, prepared statements are automatically reprepared to accommodate the new schema. There is a race condition here in that if one thread is constantly changing the schema, another thread might spin on reparses and repreparations of a prepared statement and never get any real work done. This parameter prevents an infinite loop by forcing the spinning thread to give up after a fixed number of attempts at recompiling the prepared statement. The default setting is 50 which is more than adequate for most applications.</source>
          <target state="translated">Всякий раз,когда изменяется схема базы данных,подготовленные ведомости автоматически переподготавливаются с учетом новой схемы.Здесь существует состояние гонки,при котором,если один поток постоянно изменяет схему,то другой поток может вращаться на репозиториях и репликах подготовленного утверждения и никогда не получит реальной работы.Этот параметр предотвращает бесконечный цикл,заставляя вращающийся поток сдаваться после фиксированного количества попыток перекомпиляции подготовленного оператора.Параметр по умолчанию равен 50,что более чем адекватно для большинства приложений.</target>
        </trans-unit>
        <trans-unit id="5bd2a09557636d477221b6346f70a36e1b45532a" translate="yes" xml:space="preserve">
          <source>Where &quot;column&quot; is a column in the virtual table, OP is an operator like &quot;=&quot; or &quot;&amp;lt;&quot;, and EXPR is an arbitrary expression. So, for example, if the WHERE clause contained a term like this:</source>
          <target state="translated">Где &amp;laquo;столбец&amp;raquo; - это столбец в виртуальной таблице, OP - это оператор типа &amp;laquo;=&amp;raquo; или &amp;laquo;&amp;lt;&amp;raquo;, а EXPR - произвольное выражение. Так, например, если предложение WHERE содержало такой термин:</target>
        </trans-unit>
        <trans-unit id="43f8cd7ec518821d99337a406b14b6ad25458172" translate="yes" xml:space="preserve">
          <source>Where &amp;lt;tokenizer-name&amp;gt; is &lt;a href=&quot;lang_expr#varparam&quot;&gt;parameter&lt;/a&gt; to which a string is bound using &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_text()&lt;/a&gt; where the string identifies the tokenizer and &amp;lt;sqlite3_tokenizer_module ptr&amp;gt; is a &lt;a href=&quot;lang_expr#varparam&quot;&gt;parameter&lt;/a&gt; to which a BLOB is bound using &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_blob()&lt;/a&gt; where the value of the BLOB is a pointer to an sqlite3_tokenizer_module structure. If the second argument is present, it is registered as tokenizer &amp;lt;tokenizer-name&amp;gt; and a copy of it returned. If only one argument is passed, a pointer to the tokenizer implementation currently registered as &amp;lt;tokenizer-name&amp;gt; is returned, encoded as a blob. Or, if no such tokenizer exists, an SQL exception (error) is raised.</source>
          <target state="translated">Где &amp;lt;tokenizer-name&amp;gt; - это &lt;a href=&quot;lang_expr#varparam&quot;&gt;параметр,&lt;/a&gt; к которому строка привязывается с помощью &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_text (),&lt;/a&gt; где строка идентифицирует токенизатор, а &amp;lt;sqlite3_tokenizer_module ptr&amp;gt; - это &lt;a href=&quot;lang_expr#varparam&quot;&gt;параметр,&lt;/a&gt; к которому привязывается BLOB с помощью &lt;a href=&quot;c3ref/bind_blob&quot;&gt;sqlite3_bind_blob (),&lt;/a&gt; где значение BLOB - это указатель на структуру sqlite3_tokenizer_module. Если присутствует второй аргумент, он регистрируется как tokenizer &amp;lt;tokenizer-name&amp;gt; и возвращается его копия. Если передан только один аргумент, возвращается указатель на реализацию токенизатора, в настоящее время зарегистрированную как &amp;lt;имя-токенизатора&amp;gt;, в кодировке как большой двоичный объект. Или, если такого токенизатора не существует, возникает исключение (ошибка) SQL.</target>
        </trans-unit>
        <trans-unit id="fe664b79065efef56eb19d94f1c82054f533c78c" translate="yes" xml:space="preserve">
          <source>Where VERSION can be a branch name (like &quot;trunk&quot; or &quot;session&quot;) to get the latest check-in on a specific branch, or VERSION can be a SHA1 hash or a prefix of a SHA1 hash for a specific check-in, or VERSION can be a tag such as &quot;version-3.8.8&quot;. Every time you run &quot;fossil update&quot; it will automatically reach out to the original repository at http://www.sqlite.org/cgi/src to obtain new check-ins that might have been made by others since your previous update.</source>
          <target state="translated">Где VERSION может быть именем ответвления (например,&quot;ствол&quot; или &quot;сессия&quot;)для получения последней регистрации в определённом ответвлении,или VERSION может быть хэшем SHA1 или префиксом хэша SHA1 для определённой регистрации,или VERSION может быть тегом,например,&quot;версия-3.8.8&quot;.Каждый раз,когда вы запускаете &quot;fossil update&quot;,он автоматически обращается к исходному репозиторию по адресу http://www.sqlite.org/cgi/src для получения новых регистраций,которые могли быть сделаны другими пользователями со времени вашего предыдущего обновления.</target>
        </trans-unit>
        <trans-unit id="62f2d871248b60ca56135b923987b70f9385647b" translate="yes" xml:space="preserve">
          <source>Where this ends up causing problems is when developers do some initial coding work using SQLite and get their application working, but then try to convert to another database like PostgreSQL or SQL Server for deployment. If the application is initially taking advantage of SQLite's flexible typing, then it will fail when moved to another database that uses a more rigid and unforgiving type enforcement policy.</source>
          <target state="translated">Когда это приводит к проблемам,разработчики выполняют некоторую начальную работу по кодированию с помощью SQLite и заставляют свое приложение работать,а затем пытаются преобразовать его в другую базу данных,такую как PostgreSQL или SQL Server,для развертывания.Если приложение изначально использует преимущества гибкого набора текста в SQLite,то при переходе на другую БД,использующую более жесткую и непрощающую политику набора текста,оно терпит неудачу.</target>
        </trans-unit>
        <trans-unit id="c5d4b5d864c31b29da8aa7f64d89028ed5c76cfd" translate="yes" xml:space="preserve">
          <source>Whether it is parsing document or query text, any call to xToken that specifies a</source>
          <target state="translated">Будь то анализ документа или текст запроса,любой вызов xToken,который указывает на</target>
        </trans-unit>
        <trans-unit id="79b58773d42ad0674454e81345e3b00864854d60" translate="yes" xml:space="preserve">
          <source>Whether or not &quot;char&quot; variables are signed or unsigned.</source>
          <target state="translated">Подписанные или неподписанные переменные &quot;char&quot;.</target>
        </trans-unit>
        <trans-unit id="927824fe8759e5b1e1a630b01c62f6b1e890e24a" translate="yes" xml:space="preserve">
          <source>Whether or not an error occurs when it is opened, resources associated with the &lt;a href=&quot;#sqlite3&quot;&gt;database connection&lt;/a&gt; handle should be released by passing it to &lt;a href=&quot;#sqlite3_close&quot;&gt;sqlite3_close()&lt;/a&gt; when it is no longer required.</source>
          <target state="translated">Независимо от того, возникает ли ошибка при открытии, ресурсы, связанные с дескриптором &lt;a href=&quot;#sqlite3&quot;&gt;соединения&lt;/a&gt; с базой данных, должны быть освобождены путем передачи его в &lt;a href=&quot;#sqlite3_close&quot;&gt;sqlite3_close (),&lt;/a&gt; когда он больше не требуется.</target>
        </trans-unit>
        <trans-unit id="568677ded3b331843b99c68cc439cfb12004ddef" translate="yes" xml:space="preserve">
          <source>Whether or not an error occurs when it is opened, resources associated with the &lt;a href=&quot;sqlite3&quot;&gt;database connection&lt;/a&gt; handle should be released by passing it to &lt;a href=&quot;close&quot;&gt;sqlite3_close()&lt;/a&gt; when it is no longer required.</source>
          <target state="translated">Независимо от того, возникает ли ошибка при открытии, ресурсы, связанные с дескриптором &lt;a href=&quot;sqlite3&quot;&gt;соединения&lt;/a&gt; с базой данных, должны быть освобождены путем передачи его в &lt;a href=&quot;close&quot;&gt;sqlite3_close (),&lt;/a&gt; когда он больше не требуется.</target>
        </trans-unit>
        <trans-unit id="bb05885439d11af94b4bcc3db20e0753f97a131e" translate="yes" xml:space="preserve">
          <source>Whether or not an index or &lt;a href=&quot;optoverview#autoindex&quot;&gt;automatic index&lt;/a&gt; is used.</source>
          <target state="translated">Независимо от того, используется ли индекс или &lt;a href=&quot;optoverview#autoindex&quot;&gt;автоматический индекс&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35e3585051eb4909e3fe069dd52d9c306b089c84" translate="yes" xml:space="preserve">
          <source>Whether or not the &lt;a href=&quot;queryplanner#covidx&quot;&gt;covering index&lt;/a&gt; optimization applies.</source>
          <target state="translated">Независимо от того или нет &lt;a href=&quot;queryplanner#covidx&quot;&gt;покрытия индекса&lt;/a&gt; применяется оптимизация.</target>
        </trans-unit>
        <trans-unit id="3f452c9d36fa06b25992734adfdfc328c0c7c82f" translate="yes" xml:space="preserve">
          <source>Whether or not the backup process is restarted as a result of writes to the source database mid-backup, the user can be sure that when the backup operation is completed the backup database contains a consistent and up-to-date snapshot of the original. However:</source>
          <target state="translated">Независимо от того,будет ли процесс резервного копирования перезапущен в результате записи в исходную базу данных в середине резервного копирования,пользователь может быть уверен,что после завершения операции резервного копирования база данных содержит последовательный и актуальный снимок исходной базы данных.Однако:</target>
        </trans-unit>
        <trans-unit id="805314d6ba3c8452666efff3bc4e2e9c11e54c17" translate="yes" xml:space="preserve">
          <source>Whether the table is a &lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt; table.</source>
          <target state="translated">Является ли таблица таблицей &lt;a href=&quot;withoutrowid&quot;&gt;БЕЗ ROWID&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="15cc066f01fd0a8910ef52b96a08c5f23129c75a" translate="yes" xml:space="preserve">
          <source>Which module, FTS3 or FTS4, should you use in your application? FTS4 is sometimes significantly faster than FTS3, even orders of magnitude faster depending on the query, though in the common case the performance of the two modules is similar. FTS4 also offers the enhanced &lt;a href=&quot;fts3#matchinfo&quot;&gt;matchinfo()&lt;/a&gt; outputs which can be useful in ranking the results of a &lt;a href=&quot;fts3#full_text_index_queries&quot;&gt;MATCH&lt;/a&gt; operation. On the other hand, in the absence of a &lt;a href=&quot;fts3#fts4matchinfo&quot;&gt;matchinfo=fts3&lt;/a&gt; directive FTS4 requires a little more disk space than FTS3, though only a percent of two in most cases.</source>
          <target state="translated">Какой модуль, FTS3 или FTS4, следует использовать в своем приложении? FTS4 иногда значительно быстрее, чем FTS3, даже на несколько порядков быстрее в зависимости от запроса, хотя в общем случае производительность двух модулей схожа. FTS4 также предлагает расширенные &lt;a href=&quot;fts3#matchinfo&quot;&gt;выходные данные matchinfo (),&lt;/a&gt; которые могут быть полезны при ранжировании результатов операции &lt;a href=&quot;fts3#full_text_index_queries&quot;&gt;MATCH&lt;/a&gt; . С другой стороны, в отсутствие директивы &lt;a href=&quot;fts3#fts4matchinfo&quot;&gt;matchinfo = fts3 для&lt;/a&gt; FTS4 требуется немного больше дискового пространства, чем для FTS3, хотя в большинстве случаев это всего лишь процент от двух.</target>
        </trans-unit>
        <trans-unit id="1eaf1dfe15540108a1d6bb4cc98824a6bb754fe0" translate="yes" xml:space="preserve">
          <source>Which of those columns are PRIMARY KEY columns.</source>
          <target state="translated">Какая из этих колонок-колонка PRIMARY KEY.</target>
        </trans-unit>
        <trans-unit id="2bf977231fee9d5a01c1d56cb42302f6abc78241" translate="yes" xml:space="preserve">
          <source>Which of those columns make up the tables PRIMARY KEY.</source>
          <target state="translated">Какие из этих столбцов составляют столы ПРИМАРИ КЕЙ.</target>
        </trans-unit>
        <trans-unit id="65190c6c06c3156a5ce50576cd97088b8788cba3" translate="yes" xml:space="preserve">
          <source>Which terms of the WHERE clause are used for indexing.</source>
          <target state="translated">Какие термины пункта WHERE используются для индексирования.</target>
        </trans-unit>
        <trans-unit id="7d607a9e2bbeeff588fac8037da7b126ad5bde90" translate="yes" xml:space="preserve">
          <source>Which works out to be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5778f90619b883572d8c026a15fd3403dfe6662c" translate="yes" xml:space="preserve">
          <source>While SQL is a programming language, it is different from other programming languages like C, Javascript, Python, or Go in that SQL is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Declarative_programming&quot;&gt;declarative language&lt;/a&gt; where the others are &lt;a href=&quot;https://en.wikipedia.org/wiki/Imperative_programming&quot;&gt;imperative languages&lt;/a&gt;. This is an important difference that has implications for the design of the compiler used to translate program source text into an executable format. However, those details should not detract from the fact that SQL is really just another programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ada2cef428bad4df299c966d8cc7b1305373853" translate="yes" xml:space="preserve">
          <source>While a &lt;a href=&quot;c3ref/sqlite3&quot;&gt;database connection&lt;/a&gt; is open on a WAL-mode database, SQLite maintains an extra journal file called a &quot;Write Ahead Log&quot; or &quot;WAL File&quot;. The name of this file on disk is usually the name of the database file with an extra &quot;&lt;code&gt;-wal&lt;/code&gt;&quot; suffix, though different naming rules may apply if SQLite is compiled with &lt;a href=&quot;compile#enable_8_3_names&quot;&gt;SQLITE_ENABLE_8_3_NAMES&lt;/a&gt;.</source>
          <target state="translated">Пока &lt;a href=&quot;c3ref/sqlite3&quot;&gt;соединение&lt;/a&gt; с базой данных открыто для базы данных в режиме WAL, SQLite поддерживает дополнительный файл журнала, называемый &amp;laquo;Журнал предварительной записи&amp;raquo; или &amp;laquo;Файл WAL&amp;raquo;. Имя этого файла на диске обычно является именем файла базы данных с дополнительным суффиксом &amp;laquo; &lt;code&gt;-wal&lt;/code&gt; &amp;raquo;, хотя могут применяться другие правила именования, если SQLite скомпилирован с &lt;a href=&quot;compile#enable_8_3_names&quot;&gt;SQLITE_ENABLE_8_3_NAMES&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7e2ba9f3191758fdb3ad9b114fa10eb9a4ed3b0" translate="yes" xml:space="preserve">
          <source>While a read transaction is active, any changes to the database that are implemented by separate database connections will not be seen by the database connection that started the read transaction. If database connection X is holding a read transaction, it is possible that some other database connection Y might change the content of the database while X's transaction is still open, however X will not be able to see those changes until after the transaction ends. While its read transaction is active, X will continue to see an historic snapshot of the database prior to the changes implemented by Y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffdc80fe0f26846179a6aaa2eb484325f365e70" translate="yes" xml:space="preserve">
          <source>While a read transaction is active, any changes to the database that are implemented by separate database connections will not be seen by the database connection that started the read transaction. If database connection X is holding a read transaction, it is possible that some other database connection Y might change the content of the database while X's transaction is still open, however X will not be able to see those changes until after the transaction ends. While its read transaction is active, X will continue to see an historic snapshot the database prior to the changes implemented by Y.</source>
          <target state="translated">В то время как прочитанная транзакция активна,любые изменения в БД,которые осуществляются отдельными подключениями к БД,не будут видны подключениям к БД,которые запустили прочитанную транзакцию.Если соединение с базой данных X содержит прочитанную транзакцию,возможно,что какое-то другое соединение с базой данных Y может изменить содержимое базы данных,в то время как транзакция X все еще открыта,однако X не сможет увидеть эти изменения до окончания транзакции.В то время как прочитанная транзакция активна,X будет продолжать видеть исторический снимок базы данных до изменений,выполненных Y.</target>
        </trans-unit>
        <trans-unit id="3fc81a6b9eff77dec03d524ff1a744befb138ec8" translate="yes" xml:space="preserve">
          <source>While compiling a single SQL query, the SQLite core might call xBestIndex multiple times with different settings in &lt;a href=&quot;c3ref/index_info&quot;&gt;sqlite3_index_info&lt;/a&gt;. The SQLite core will then select the combination that appears to give the best performance.</source>
          <target state="translated">При компиляции одного SQL-запроса ядро ​​SQLite может вызывать xBestIndex несколько раз с разными настройками в &lt;a href=&quot;c3ref/index_info&quot;&gt;sqlite3_index_info&lt;/a&gt; . Затем ядро ​​SQLite выберет комбинацию, которая, по всей видимости, обеспечивает наилучшую производительность.</target>
        </trans-unit>
        <trans-unit id="d6f8e366ea836d249425f55c0048ab7dd0869350" translate="yes" xml:space="preserve">
          <source>While fuzz testing and 100% MC/DC testing are in tension, they are not completely at cross-purposes. The fact that the SQlite test suite does test to 100% MC/DC means that when fuzzers do find problems, those problems can be fixed quickly and with little risk of introducing new errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84aa771f4f176659ae1924e0a87ff5ad8203b073" translate="yes" xml:space="preserve">
          <source>While opening a</source>
          <target state="translated">При открытии</target>
        </trans-unit>
        <trans-unit id="9b36f93bab56bb7da15a9179ec0943945f846c1b" translate="yes" xml:space="preserve">
          <source>While performing</source>
          <target state="translated">В процессе выполнения</target>
        </trans-unit>
        <trans-unit id="96921c80759d36f4a04b6a82e193c5ddf054ac5c" translate="yes" xml:space="preserve">
          <source>While the original idea being CVEs is sound, the current processes for creating and managing CVEs are inadequate. There are countless grey-hat hackers running fuzzers against a wide-variety of open-source software products (SQLite as well as many others) and writing up CVEs against any problems they find. The grey-hats are rewarded, sometimes with prestige and sometimes financially, by the number and severity of the CVEs they write. This incentive results in a proliferation of CVEs which are often not well-vetted and which can have exaggerated impact claims. The quality-control procedures for CVEs are unable to cope with this flood of inputs, making it difficult to correct exaggerated, misleading, omitted, or inaccurate claims.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a93a15284084502a7f86f4c9b90c793ee720848" translate="yes" xml:space="preserve">
          <source>While the queue is not empty:</source>
          <target state="translated">Пока очередь не пуста:</target>
        </trans-unit>
        <trans-unit id="31d87d7be7b237cc74cece1001ddf141c8c0c304" translate="yes" xml:space="preserve">
          <source>Whitespace and comment tokens are discarded. All other tokens are fed into an &lt;a href=&quot;https://en.wikipedia.org/wiki/LALR_parser&quot;&gt;LALR(1) Parser&lt;/a&gt; that analysis the structure of the input program and generates an &lt;a href=&quot;https://en.wikipedia.org/wiki/Abstract_syntax_tree&quot;&gt;Abstract Syntax Tree (AST)&lt;/a&gt; for the input program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b875e5298cf6263e72c1bc4d0e00a3e4a13f0a5d" translate="yes" xml:space="preserve">
          <source>Whitespace or comments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2467596fdde02a218277dc3baed1d04b31fd9e" translate="yes" xml:space="preserve">
          <source>Why ALTER TABLE is so difficult</source>
          <target state="translated">Почему АЛЬТЕР-ТАБЛИЦА так сложна</target>
        </trans-unit>
        <trans-unit id="a66e4df98a00d586d77ff8cbda05b1bb33741627" translate="yes" xml:space="preserve">
          <source>Why ALTER TABLE is such a problem for SQLite</source>
          <target state="translated">Почему ALTER TABLE-это такая проблема для SQLite?</target>
        </trans-unit>
        <trans-unit id="51671cd80abfeae9d7b51e113f2b9ee1f5d2c38e" translate="yes" xml:space="preserve">
          <source>Why Is SQLite Coded In C</source>
          <target state="translated">Почему SQLite закодирован на C</target>
        </trans-unit>
        <trans-unit id="a50fb31b169e8e4d9b4a6643f7f8608e036bc60b" translate="yes" xml:space="preserve">
          <source>Why SQLite Does Not Use Git</source>
          <target state="translated">Почему SQLite не использует Git</target>
        </trans-unit>
        <trans-unit id="cf48c0996bab18f4950cd87af9617143917f12a9" translate="yes" xml:space="preserve">
          <source>Why didn't the legacy query planner choose algorithm-2? Easy: because the NN algorithm never even considered algorithm-2. Graphs of the planning problem look like this:</source>
          <target state="translated">Почему старый планировщик запросов не выбрал алгоритм-2? Легко:потому что алгоритм NN даже не рассматривал алгоритм-2.Графики проблемы планирования выглядят так:</target>
        </trans-unit>
        <trans-unit id="f9ddc1f9321acc62d313f21bd009fd732a7ca677" translate="yes" xml:space="preserve">
          <source>Why does ROUND(9.95,1) return 9.9 instead of 10.0? Shouldn't 9.95 round up?</source>
          <target state="translated">Почему ROUND(9,95,1)возвращает 9,9 вместо 10,0? Разве 9,95 не должно округляться?</target>
        </trans-unit>
        <trans-unit id="cf08e93e3998487d5a4514d0ec927b65fe1810fa" translate="yes" xml:space="preserve">
          <source>Why does SQLite have its own private built-in printf() implementation? Why not use the printf() implementation from the standard C library? Several reasons:</source>
          <target state="translated">Почему SQLite имеет свою собственную частную встроенную реализацию printf()? Почему бы не использовать реализацию printf()из стандартной библиотеки C? Несколько причин:</target>
        </trans-unit>
        <trans-unit id="1ec9acf7734149243e8c44660fc685f0eb23a630" translate="yes" xml:space="preserve">
          <source>Why doesn't SQLite allow me to use '0' and '0.0' as the primary key on two different rows of the same table?</source>
          <target state="translated">Почему SQLite не позволяет мне использовать '0' и '0.0' в качестве первичного ключа на двух разных строках одной и той же таблицы?</target>
        </trans-unit>
        <trans-unit id="02275b1d64f346b7ea26ca7a800967bbade4e5f6" translate="yes" xml:space="preserve">
          <source>Win32 Directory Types</source>
          <target state="translated">Типы каталогов Win32</target>
        </trans-unit>
        <trans-unit id="0463d1ccc9613d5098c42774fc7e43131ce95d1e" translate="yes" xml:space="preserve">
          <source>Win32 Specific Interface</source>
          <target state="translated">Специфический интерфейс Win32</target>
        </trans-unit>
        <trans-unit id="f8b7523500f54721211a692b3d6b968bab3101a5" translate="yes" xml:space="preserve">
          <source>Win32 native memory allocator</source>
          <target state="translated">аллокатор native memory Win32</target>
        </trans-unit>
        <trans-unit id="68fe8f958724479a101c0326f7607d389d321758" translate="yes" xml:space="preserve">
          <source>Window Functions</source>
          <target state="translated">Оконные функции</target>
        </trans-unit>
        <trans-unit id="7973e6ebbc857b7bb0de6b349ffa9e99bc62f773" translate="yes" xml:space="preserve">
          <source>Window chaining</source>
          <target state="translated">Привязка к окну</target>
        </trans-unit>
        <trans-unit id="99565b4d7904c206a1623d09463276b2f7b9b151" translate="yes" xml:space="preserve">
          <source>Window chaining is a shorthand that allows one window to be defined in terms of another. Specifically, the shorthand allows the new window to implicitly copy the PARTITION BY and optionally ORDER BY clauses of the base window. For example, in the following:</source>
          <target state="translated">Цепочки окон-это сокращение,позволяющее определить одно окно в терминах другого.В частности,это сокращение позволяет новому окну неявно скопировать УЧАСТНИК ПО и,опционально,ЗАПРЕЩИТЬ ПО клаузулам базового окна.Например,в следующем:</target>
        </trans-unit>
        <trans-unit id="34aa1477a928d2146e07a6620c66855ebe78ae81" translate="yes" xml:space="preserve">
          <source>Window function support was first added to SQLite with release &lt;a href=&quot;https://sqlite.org/releaselog/3_25_0.html&quot;&gt;version 3.25.0&lt;/a&gt; (2018-09-15). The SQLite developers used the &lt;a href=&quot;http://www.postgresql.org&quot;&gt;PostgreSQL&lt;/a&gt; window function documentation as their primary reference for how window functions ought to behave. Many test cases have been run against PostgreSQL to ensure that window functions operate the same way in both SQLite and PostgreSQL.</source>
          <target state="translated">Поддержка оконных функций впервые была добавлена ​​в SQLite в &lt;a href=&quot;https://sqlite.org/releaselog/3_25_0.html&quot;&gt;версии 3.25.0&lt;/a&gt; (2018-09-15). Разработчики SQLite использовали документацию по оконным функциям &lt;a href=&quot;http://www.postgresql.org&quot;&gt;PostgreSQL в&lt;/a&gt; качестве основного справочника о том, как должны себя вести оконные функции. Для PostgreSQL было выполнено множество тестовых примеров, чтобы убедиться, что оконные функции работают одинаково как в SQLite, так и в PostgreSQL.</target>
        </trans-unit>
        <trans-unit id="e8698fe2a10d2c461b8f7f442d78d5219e1d692c" translate="yes" xml:space="preserve">
          <source>Window function support was first added to SQLite with release &lt;a href=&quot;https://sqlite.org/releaselog/3_25_0.html&quot;&gt;version 3.25.0&lt;/a&gt; (2018-09-15). The SQLite developers used the &lt;a href=&quot;https://www.postgresql.org&quot;&gt;PostgreSQL&lt;/a&gt; window function documentation as their primary reference for how window functions ought to behave. Many test cases have been run against PostgreSQL to ensure that window functions operate the same way in both SQLite and PostgreSQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec65d78532248828b5443e4752a3df7fc4931aa" translate="yes" xml:space="preserve">
          <source>Window functions</source>
          <target state="translated">Функции окон</target>
        </trans-unit>
        <trans-unit id="b37157f249f48370ca58b2cacca1806dc4feec9b" translate="yes" xml:space="preserve">
          <source>Window functions are distinguished from other SQL functions by the presence of an OVER clause. If a function has an OVER clause, then it is a window function. If it lacks an OVER clause, then it is an ordinary aggregate or scalar function. Window functions might also have a FILTER clause in between the function and the OVER clause.</source>
          <target state="translated">Функции окон отличаются от других SQL-функций наличием пункта OVER.Если функция имеет условие OVER,то это функция окна.Если в ней отсутствует условие OVER,то это обычная агрегатная или скалярная функция.Функции окна также могут иметь условие FILTER между функцией и условием OVER.</target>
        </trans-unit>
        <trans-unit id="768669bfb2a31bdc0b9e7999f08750dacabe9b82" translate="yes" xml:space="preserve">
          <source>Window functions come in two varieties: &lt;a href=&quot;windowfunctions#aggwinfunc&quot;&gt;aggregate window functions&lt;/a&gt; and &lt;a href=&quot;windowfunctions#builtins&quot;&gt;built-in window functions&lt;/a&gt;. Every aggregate window function can also work as a ordinary aggregate function, simply by omitting the OVER and FILTER clauses. Furthermore, all of the built-in &lt;a href=&quot;lang_aggfunc&quot;&gt;aggregate functions&lt;/a&gt; of SQLite can be used as an aggregate window function by adding an appropriate OVER clause. Applications can register new aggregate window functions using the &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_window_function()&lt;/a&gt; interface. The built-in window functions, however, require special-case handling in the query planner and hence new window functions that exhibit the exceptional properties found in the built-in window functions cannot be added by the application.</source>
          <target state="translated">Оконные функции бывают двух видов: &lt;a href=&quot;windowfunctions#aggwinfunc&quot;&gt;агрегированные оконные функции&lt;/a&gt; и &lt;a href=&quot;windowfunctions#builtins&quot;&gt;встроенные оконные функции&lt;/a&gt; . Каждая агрегатная оконная функция может также работать как обычная агрегатная функция, просто опуская предложения OVER и FILTER. Более того, все встроенные &lt;a href=&quot;lang_aggfunc&quot;&gt;агрегатные функции&lt;/a&gt; SQLite можно использовать как агрегатную оконную функцию, добавив соответствующее предложение OVER. Приложения могут регистрировать новые агрегированные оконные функции с помощью интерфейса &lt;a href=&quot;c3ref/create_function&quot;&gt;sqlite3_create_window_function ()&lt;/a&gt; . Однако встроенные оконные функции требуют специальной обработки в планировщике запросов, и, следовательно, новые оконные функции, которые демонстрируют исключительные свойства, обнаруженные во встроенных оконных функциях, не могут быть добавлены приложением.</target>
        </trans-unit>
        <trans-unit id="b69a0cc5bc93433662122b7ab877cc01de2fc8c1" translate="yes" xml:space="preserve">
          <source>Windows DLL exports symbols Tclsqlite_Init and Sqlite_Init</source>
          <target state="translated">Windows DLL экспортирует символы Tclsqlite_Init и Sqlite_Init</target>
        </trans-unit>
        <trans-unit id="a3320dd4ff96aeb28c32b1c618d2fdc870a0f410" translate="yes" xml:space="preserve">
          <source>Windows builds also come with multiple built-in VFSes. The default Windows VFS is called &quot;win32&quot; and is used in most applications. Other VFSes that might be found on windows builds include:</source>
          <target state="translated">Кроме того,сборки для Windows поставляются с несколькими встроенными VFS.По умолчанию Windows VFS называется &quot;win32&quot; и используется в большинстве приложений.Другие VFS,которые могут быть найдены на сборках Windows,включают в себя:</target>
        </trans-unit>
        <trans-unit id="84eca34acba80a1cc2933e50280e69e2f20b7bbc" translate="yes" xml:space="preserve">
          <source>Windows is unable to truncate a memory-mapped file. Hence, on Windows, if an operation such as &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; or &lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum&lt;/a&gt; tries to reduce the size of a memory-mapped database file, the size reduction attempt will silently fail, leaving unused space at the end of the database file. No data is lost due to this problem, and the unused space will be reused again the next time the database grows. However if a version of SQLite prior to 3.7.0 runs &lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;PRAGMA integrity_check&lt;/a&gt; on such a database, it will (incorrectly) report database corruption due to the unused space at the end. Or if a version of SQLite prior to 3.7.0 writes to the database while it still has unused space at the end, it may make that unused space inaccessible and unavailable for reuse until after the next &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt;.</source>
          <target state="translated">Windows не может усечь файл с отображением в память. Следовательно, в Windows, если операция, такая как &lt;a href=&quot;lang_vacuum&quot;&gt;VACUUM&lt;/a&gt; или &lt;a href=&quot;pragma#pragma_auto_vacuum&quot;&gt;auto_vacuum,&lt;/a&gt; пытается уменьшить размер файла базы данных с отображением в память, попытка уменьшения размера автоматически завершится ошибкой, оставив неиспользуемое пространство в конце файла базы данных. Из-за этой проблемы данные не теряются, а неиспользуемое пространство будет повторно использовано при следующем увеличении базы данных. Однако, если версия SQLite до 3.7.0 запускает &lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;проверку целостности PRAGMA&lt;/a&gt; для такой базы данных, она (неправильно) сообщит о повреждении базы данных из-за неиспользуемого пространства в конце. Или, если версия SQLite до 3.7.0 записывает в базу данных, в то время как в конце еще есть неиспользуемое пространство, это может сделать это неиспользуемое пространство недоступным и недоступным для повторного использования до следующего&lt;a href=&quot;lang_vacuum&quot;&gt;ВАКУУМ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b7712d1cb131a2adfefe7d588175fadb48dafa7" translate="yes" xml:space="preserve">
          <source>Windows only: Open the file &quot;data.db&quot; on fred's desktop on drive C:. Note that the %20 escaping in this example is not strictly necessary - space characters can be used literally in URI filenames.</source>
          <target state="translated">Только для Windows:Откройте файл &quot;data.db&quot; на рабочем столе Фред на диске C:.Обратите внимание,что экранирование %20 в этом примере не является строго необходимым-пробелы могут быть использованы буквально в именах файлов URI.</target>
        </trans-unit>
        <trans-unit id="31aeba611599f329aa343c65bc0c86921ffe7f9d" translate="yes" xml:space="preserve">
          <source>Windows users can double-click on the &lt;b&gt;sqlite3.exe&lt;/b&gt; icon to cause the command-line shell to pop-up a terminal window running SQLite. However, because double-clicking starts the sqlite3.exe without command-line arguments, no database file will have been specified, so SQLite will use a temporary database that is deleted when the session exits. To use a persistent disk file as the database, enter the &quot;.open&quot; command immediately after the terminal window starts up:</source>
          <target state="translated">Пользователи Windows могут дважды щелкнуть значок &lt;b&gt;sqlite3.exe,&lt;/b&gt; чтобы оболочка командной строки &lt;b&gt;открыла&lt;/b&gt; окно терминала с запущенным SQLite. Однако, поскольку двойной щелчок запускает sqlite3.exe без аргументов командной строки, файл базы данных не будет указан, поэтому SQLite будет использовать временную базу данных, которая удаляется при выходе из сеанса. Чтобы использовать файл постоянного диска в качестве базы данных, введите команду &amp;laquo;.open&amp;raquo; сразу после запуска окна терминала:</target>
        </trans-unit>
        <trans-unit id="46ae0e9a494aaadddce1ec0fa75065f4b23d237d" translate="yes" xml:space="preserve">
          <source>With SQLite (but not any other SQL implementation that we know of) if an aggregate query contains a single min() or max() function, then the values of columns used in the output are taken from the row where the min() or max() value was achieved. If two or more rows have the same min() or max() value, then the columns values will be chosen arbitrarily from one of those rows.</source>
          <target state="translated">При использовании SQLite (но не любой другой известной нам SQL реализации),если агрегированный запрос содержит одну функцию min()или max(),то значения столбцов,используемые в выводе,берутся из строки,где было достигнуто значение min()или max().Если две или более строк имеют одно и то же значение min()или max(),то значения столбцов будут выбираться произвольно из одной из этих строк.</target>
        </trans-unit>
        <trans-unit id="72d650183743377687d259d65b2b0b1477f3b0e4" translate="yes" xml:space="preserve">
          <source>With a covering index, SQLite can simply walk the index from one end to the other and deliver the output in time proportional to N and without having allocate a large buffer to hold the result set.</source>
          <target state="translated">С индексом покрытия SQLite может просто ходить по индексу от одного конца к другому и доставлять вывод во времени пропорционально N и без выделения большого буфера для хранения результирующего множества.</target>
        </trans-unit>
        <trans-unit id="ffbb132debbaa76f4f42bce9a72aacb1ba449100" translate="yes" xml:space="preserve">
          <source>With a single allocation size, the &lt;b&gt;n&lt;/b&gt; parameter in the &lt;a href=&quot;malloc#nofrag&quot;&gt;Robson proof&lt;/a&gt; is 1, and the total memory space required by the allocator (&lt;b&gt;N&lt;/b&gt;) is exactly equal to maximum memory used (&lt;b&gt;M&lt;/b&gt;). No additional memory is required to cover fragmentation overhead, thus reducing memory requirements. This is particularly important for the page cache memory since the page cache constitutes the largest component of the memory needs of SQLite.</source>
          <target state="translated">При единственном размере распределения параметр &lt;b&gt;n&lt;/b&gt; в &lt;a href=&quot;malloc#nofrag&quot;&gt;доказательстве Робсона&lt;/a&gt; равен 1, а общий объем памяти, необходимый распределителю ( &lt;b&gt;N&lt;/b&gt; ), в точности равен максимальному используемому объему памяти ( &lt;b&gt;M&lt;/b&gt; ). Никакой дополнительной памяти для покрытия накладных расходов на фрагментацию не требуется, что снижает требования к памяти. Это особенно важно для кеш-памяти страниц, поскольку кэш страниц составляет самый большой компонент потребностей SQLite в памяти.</target>
        </trans-unit>
        <trans-unit id="a552e4d61e6c98e72a1a99aa574976a695fc5369" translate="yes" xml:space="preserve">
          <source>With asynchronous I/O, write requests are handled by a separate thread running in the background. This means that the thread that initiates a database write does not have to wait for (sometimes slow) disk I/O to occur. The write seems to happen very quickly, though in reality it is happening at its usual slow pace in the background.</source>
          <target state="translated">При асинхронном вводе/выводе запросы на запись обрабатываются отдельным потоком,работающим в фоновом режиме.Это означает,что потоку,инициирующему запись в БД,не нужно ждать (иногда медленного)дискового ввода/вывода.Похоже,что запись происходит очень быстро,хотя в действительности она происходит с обычной медленной скоростью в фоновом режиме.</target>
        </trans-unit>
        <trans-unit id="ab9e7dc76b3ad69724eb79aea2faff0ba6d5b557" translate="yes" xml:space="preserve">
          <source>With client/server databases like PostgreSQL or Oracle, users and developers tend to think of the database as a service or a &quot;node&quot;, not as an object. This is because the database content is spread out across multiple files on the server, or possibly across multiple servers in a service cluster. One cannot point to a single file or even a single directory and say &quot;this is the database&quot;.</source>
          <target state="translated">В случае с клиентскими/серверными базами данных,такими как PostgreSQL или Oracle,пользователи и разработчики склонны думать о базе данных как о сервисе или &quot;узле&quot;,а не как об объекте.Это происходит потому,что содержимое базы данных распределено по нескольким файлам на сервере или,возможно,по нескольким серверам в кластере услуг.Нельзя указать на один файл или даже на одну директорию и сказать &quot;это база данных&quot;.</target>
        </trans-unit>
        <trans-unit id="9f913fbcf0e843248e92480f5555045919a3653f" translate="yes" xml:space="preserve">
          <source>With one exception noted below, if a rowid table has a primary key that consists of a single column and the declared type of that column is &quot;INTEGER&quot; in any mixture of upper and lower case, then the column becomes an alias for the rowid. Such a column is usually referred to as an &quot;integer primary key&quot;. A PRIMARY KEY column only becomes an integer primary key if the declared type name is exactly &quot;INTEGER&quot;. Other integer type names like &quot;INT&quot; or &quot;BIGINT&quot; or &quot;SHORT INTEGER&quot; or &quot;UNSIGNED INTEGER&quot; causes the primary key column to behave as an ordinary table column with integer &lt;a href=&quot;datatype3#affinity&quot;&gt;affinity&lt;/a&gt; and a unique index, not as an alias for the rowid.</source>
          <target state="translated">За одним исключением, отмеченным ниже, если таблица rowid имеет первичный ключ, который состоит из одного столбца, и объявленный тип этого столбца - &amp;laquo;INTEGER&amp;raquo; в любом сочетании верхнего и нижнего регистра, тогда столбец становится псевдонимом для rowid. Такой столбец обычно называют &amp;laquo;целочисленным первичным ключом&amp;raquo;. Столбец PRIMARY KEY становится целочисленным первичным ключом только в том случае, если объявленное имя типа точно &quot;INTEGER&quot;. Другие имена целочисленных типов, такие как &amp;laquo;INT&amp;raquo;, &amp;laquo;BIGINT&amp;raquo;, &amp;laquo;SHORT INTEGER&amp;raquo; или &amp;laquo;UNSIGNED INTEGER&amp;raquo;, заставляют столбец первичного ключа вести себя как обычный столбец таблицы с целочисленным &lt;a href=&quot;datatype3#affinity&quot;&gt;сродством&lt;/a&gt; и уникальным индексом, а не как псевдоним для rowid.</target>
        </trans-unit>
        <trans-unit id="6d08bbd760872d68db33d3c86cf4e679c7a2ebc9" translate="yes" xml:space="preserve">
          <source>With release 3.8.0 (2013-08-26), the SQLite query planner was reimplemented as the &lt;a href=&quot;queryplanner-ng&quot;&gt;Next Generation Query Planner&lt;/a&gt; or &quot;NGQP&quot;. All of the features, techniques, and algorithms described in this document are applicable to both the pre-3.8.0 legacy query planner and to the NGQP. For further information on how the NGQP differs from the legacy query planner, see the &lt;a href=&quot;queryplanner-ng&quot;&gt;detailed description of the NGQP&lt;/a&gt;.</source>
          <target state="translated">В выпуске 3.8.0 (2013-08-26) планировщик запросов SQLite был переопределен как &lt;a href=&quot;queryplanner-ng&quot;&gt;Планировщик запросов следующего поколения&lt;/a&gt; или &amp;laquo;NGQP&amp;raquo;. Все функции, методы и алгоритмы, описанные в этом документе, применимы как к устаревшему планировщику запросов до 3.8.0, так и к NGQP. Для получения дополнительной информации о том, чем NGQP отличается от прежнего планировщика запросов, см. &lt;a href=&quot;queryplanner-ng&quot;&gt;Подробное описание NGQP&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d1d01005af669e498a6d79c05e376c2142afd701" translate="yes" xml:space="preserve">
          <source>With some (arbitrary) data, such a table might be logically stored on disk as shown in figure 1:</source>
          <target state="translated">При наличии некоторых (произвольных)данных такая таблица может логически храниться на диске,как показано на рисунке 1:</target>
        </trans-unit>
        <trans-unit id="fd1021b066f8f1badfb5950e8af5b888b38dc724" translate="yes" xml:space="preserve">
          <source>With source code files in the working directory, a DLL can be generated using MSVC with the following command:</source>
          <target state="translated">При наличии файлов с исходным кодом в рабочей директории,DLL может быть сгенерирована с помощью MSVC следующей командой:</target>
        </trans-unit>
        <trans-unit id="0f39e53b1be71b4fb78a20a47e590c12ddf0bcbb" translate="yes" xml:space="preserve">
          <source>With such a schema, the application would no longer need to make periodic backups of the unsaved changes to a separate file to avoid lost work in the event of a crash. Instead, a special &quot;pending&quot; version could be allocated and unsaved changes could be written into the pending version. Because only changes would need to be written, not the entire document, saving the pending changes would only involve writing a few kilobytes of content, not multiple megabytes, and would take milliseconds instead of seconds, and so it could be done frequently and silently in the background. Then when a crash occurs and the user reboots, all (or almost all) of their work is retained. If the user decides to discard unsaved changes, they simply go back to the previous version.</source>
          <target state="translated">При такой схеме приложению больше не нужно будет делать периодические резервные копии несохраненных изменений в отдельном файле,чтобы избежать потери работы в случае аварии.Вместо этого можно было бы выделить специальную &quot;отложенную&quot; версию и записать несохраненные изменения в отложенную версию.Поскольку нужно будет записывать только изменения,а не весь документ,сохранение отложенных изменений будет включать только запись нескольких килобайт содержимого,а не нескольких мегабайт,и займет миллисекунды,а не секунды,поэтому это можно делать часто и тихо в фоновом режиме.Затем,когда происходит сбой и пользователь перезагружается,вся (или почти вся)его работа сохраняется.Если пользователь решает отказаться от несохраненных изменений,он просто возвращается к предыдущей версии.</target>
        </trans-unit>
        <trans-unit id="1152f09445e7a27bd0f86b5f6b1e7dc6ef22ecb9" translate="yes" xml:space="preserve">
          <source>With synchronous OFF (0), SQLite continues without syncing as soon as it has handed data off to the operating system. If the application running SQLite crashes, the data will be safe, but the database &lt;a href=&quot;howtocorrupt#cfgerr&quot;&gt;might become corrupted&lt;/a&gt; if the operating system crashes or the computer loses power before that data has been written to the disk surface. On the other hand, commits can be orders of magnitude faster with synchronous OFF.</source>
          <target state="translated">При синхронном отключении (0) SQLite продолжает работу без синхронизации, как только данные передаются операционной системе. Если приложение, работающее под управлением SQLite, выйдет из строя, данные будут в безопасности, но база данных &lt;a href=&quot;howtocorrupt#cfgerr&quot;&gt;может быть повреждена,&lt;/a&gt; если произойдет сбой операционной системы или отключение питания компьютера до того, как эти данные будут записаны на поверхность диска. С другой стороны, при синхронном отключении коммиты могут выполняться на несколько порядков быстрее.</target>
        </trans-unit>
        <trans-unit id="6e05518cdffbac366023e6a7a1a6316fad89e6a6" translate="yes" xml:space="preserve">
          <source>With the Idx3 index on both columns that are constrained by the WHERE clause, SQLite can do a single binary search against Idx3 to find the one rowid for California oranges, then do a single binary search to find the price for that item in the original table. There are no dead-ends and no wasted binary searches. This is a more efficient query.</source>
          <target state="translated">С помощью индекса Idx3 в обоих столбцах,которые ограничены пунктом WHERE,SQLite может выполнить один бинарный поиск по Idx3,чтобы найти один ряд для калифорнийских апельсинов,а затем выполнить один бинарный поиск,чтобы найти цену для этого товара в оригинальной таблице.Не существует тупиков и бесполезного бинарного поиска.Это более эффективный запрос.</target>
        </trans-unit>
        <trans-unit id="d0ccef83367809507d68fd8adf10ab43756d4053" translate="yes" xml:space="preserve">
          <source>With the following provisos, each series of tokens in the FTS table that matches one of the matchable phrases in the query expression is known as a &quot;phrase match&quot;:</source>
          <target state="translated">При следующих оговорках каждая серия маркеров в таблице FTS,совпадающая с одной из совпадающих фраз в выражении запроса,известна как &quot;фраза,совпадающая&quot;:</target>
        </trans-unit>
        <trans-unit id="6be83cc240990bde696822c8c968c954935effd4" translate="yes" xml:space="preserve">
          <source>With the schema above, a statement of the form:</source>
          <target state="translated">С приведенной выше схемой,заявление формы:</target>
        </trans-unit>
        <trans-unit id="ce7e1668aa6ca5e4002b24e2ec5db69485e9af33" translate="yes" xml:space="preserve">
          <source>With this pattern, the overall system is still client/server: clients send requests to the server and get back replies over the network. But instead of sending generic SQL and getting back raw table content, the client requests and server responses are high-level and application-specific. The server translates requests into multiple SQL queries, gathers the results, does post-processing, filtering, and analysis, then constructs a high-level reply containing only the essential information.</source>
          <target state="translated">При такой схеме система в целом остается клиентом/сервером:клиенты посылают запросы на сервер и получают обратные ответы по сети.Но вместо того,чтобы посылать общий SQL и получать обратно необработанное табличное содержимое,запросы клиентов и ответы сервера являются высокоуровневыми и зависят от конкретного приложения.Сервер транслирует запросы в несколько SQL-запросов,собирает результаты,выполняет постобработку,фильтрацию и анализ,а затем строит ответ высокого уровня,содержащий только существенную информацию.</target>
        </trans-unit>
        <trans-unit id="a6cde545c87cfe9cdf5083a11aa7253d12946e88" translate="yes" xml:space="preserve">
          <source>With this table, the statement</source>
          <target state="translated">С этой таблицей,заявление</target>
        </trans-unit>
        <trans-unit id="e3d30043cb29ededf7f5c7d45d7c85af41b7ac41" translate="yes" xml:space="preserve">
          <source>With this trigger installed, executing the statement:</source>
          <target state="translated">При установленном триггере выполняется утверждение:</target>
        </trans-unit>
        <trans-unit id="b738f8fb3971eaf9d8b4464f7e01335910aa51fd" translate="yes" xml:space="preserve">
          <source>With tracing mode on, the VDBE prints each instruction prior to executing it. After the instruction is executed, the top few entries in the stack are displayed. The stack display is omitted if the stack is empty.</source>
          <target state="translated">При включенном режиме трассировки VDBE распечатывает каждую инструкцию перед ее выполнением.После выполнения команды отображаются несколько верхних записей в стеке.Отображение стопки опускается,если стопка пуста.</target>
        </trans-unit>
        <trans-unit id="bdf14e9c4b4688dcd43209a6bc661b4142ea27d9" translate="yes" xml:space="preserve">
          <source>With two exceptions, a</source>
          <target state="translated">За двумя исключениями,а</target>
        </trans-unit>
        <trans-unit id="bb5693991e33e1156b62932972a48bb594da454a" translate="yes" xml:space="preserve">
          <source>Within a changeset generated by this function, all changes related to a single table are grouped together. In other words, when iterating through a changeset or when applying a changeset to a database, all changes related to a single table are processed before moving on to the next table. Tables are sorted in the same order in which they were attached (or auto-attached) to the sqlite3_session object. The order in which the changes related to a single table are stored is undefined.</source>
          <target state="translated">В наборе изменений,генерируемых этой функцией,все изменения,связанные с одной таблицей,группируются вместе.Другими словами,при итерации через changeset или при применении changeset к БД все изменения,связанные с одной таблицей,обрабатываются перед переходом к следующей таблице.Таблицы сортируются в том же порядке,в котором они были прикреплены (или автоматически прикреплены)к объекту sqlite3_session.Порядок хранения изменений,связанных с одной таблицей,не определен.</target>
        </trans-unit>
        <trans-unit id="e69d76786ab7b8d267ef6f99888893212d52b234" translate="yes" xml:space="preserve">
          <source>Within a single database connection X, a SELECT statement always sees all changes to the database that are completed prior to the start of the SELECT statement, whether committed or uncommitted. And the SELECT statement obviously does not see any changes that occur after the SELECT statement completes. But what about changes that occur while the SELECT statement is running? What if a SELECT statement is started and the &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; interface steps through roughly half of its output, then some &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; statements are run by the application that modify the table that the SELECT statement is reading, then more calls to &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step()&lt;/a&gt; are made to finish out the SELECT statement? Will the later steps of the SELECT statement see the changes made by the UPDATE or not? The answer is that this behavior is undefined. In particular, whether or not the SELECT statement sees the concurrent changes depends on which release of SQLite is running, the schema of the database file, whether or not &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; has been run, and the details of the query. In some cases, it might depend on the content of the database file, too. There is no good way to know whether or not a SELECT statement will see changes that were made to the database by the same database connection after the SELECT statement was started. And hence, developers should diligently avoid writing applications that make assumptions about what will occur in that circumstance.</source>
          <target state="translated">В пределах одного соединения с базой данных X оператор SELECT всегда видит все изменения в базе данных, которые были завершены до начала оператора SELECT, независимо от того, зафиксированы они или нет. И оператор SELECT, очевидно, не видит никаких изменений, которые происходят после завершения оператора SELECT. Но как насчет изменений, которые происходят во время выполнения оператора SELECT? Что делать, если запускается оператор SELECT и интерфейс &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step ()&lt;/a&gt; проходит примерно половину своего вывода, тогда некоторые операторы &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; запускаются приложением, которое изменяет таблицу, которую читает оператор SELECT, а затем больше вызовов &lt;a href=&quot;c3ref/step&quot;&gt;sqlite3_step ()&lt;/a&gt;сделаны для завершения оператора SELECT? Увидят ли последующие шаги оператора SELECT изменения, внесенные UPDATE, или нет? Ответ в том, что это поведение не определено. В частности, то, видит ли оператор SELECT одновременные изменения, зависит от того, какой выпуск SQLite запущен, от схемы файла базы данных, от того, был ли &lt;a href=&quot;lang_analyze&quot;&gt;ANALYZE&lt;/a&gt; запущен, и от деталей запроса. В некоторых случаях это может также зависеть от содержимого файла базы данных. Нет хорошего способа узнать, увидит ли оператор SELECT изменения, которые были внесены в базу данных тем же соединением с базой данных после запуска оператора SELECT. И поэтому разработчики должны старательно избегать написания приложений, которые делают предположения о том, что произойдет в этих обстоятельствах.</target>
        </trans-unit>
        <trans-unit id="f64c1e27b35be2c65501356f86b040f4e01382a8" translate="yes" xml:space="preserve">
          <source>Within a trigger program each INSERT, UPDATE and DELETE statement sets the value returned by sqlite3_changes() upon completion as normal. Of course, this value will not include any changes performed by sub-triggers, as the sqlite3_changes() value will be saved and restored after each sub-trigger has run.</source>
          <target state="translated">В триггерной программе каждый оператор INSERT,UPDATE и DELETE устанавливает значение,возвращаемое функцией sqlite3_changes()по завершении работы в нормальном режиме.Конечно,в это значение не будут вноситься никакие изменения,выполняемые субтриггерами,так как значение sqlite3_changes()будет сохранено и восстановлено после выполнения каждого субтриггера.</target>
        </trans-unit>
        <trans-unit id="a4a4a7b77632610d5c03098170087135a035d198" translate="yes" xml:space="preserve">
          <source>Within an FTS expression a &lt;b&gt;string&lt;/b&gt; may be specified in one of two ways:</source>
          <target state="translated">В выражении FTS &lt;b&gt;строка&lt;/b&gt; может быть указана одним из двух способов:</target>
        </trans-unit>
        <trans-unit id="b69cb3df5f10a8834e6c84cc69fe995f5e513c1e" translate="yes" xml:space="preserve">
          <source>Within an interior b-tree page, each key and the pointer to its immediate left are combined into a structure called a &quot;cell&quot;. The right-most pointer is held separately. A leaf b-tree page has no pointers, but it still uses the cell structure to hold keys for index b-trees or keys and content for table b-trees. Data is also contained in the cell.</source>
          <target state="translated">Внутри внутренней страницы из дерева b каждая клавиша и указатель на нее слева объединяются в структуру,называемую &quot;ячейкой&quot;.Самый правый указатель удерживается отдельно.Листовая b-деревовидная страница не имеет указателей,но все же она использует структуру ячеек для хранения ключей для индексных b-деревьев или ключей и содержимого таблицы b-деревьев.Данные также содержатся в ячейке.</target>
        </trans-unit>
        <trans-unit id="e7e979d6674438107ff98232bc172bfe9db221b4" translate="yes" xml:space="preserve">
          <source>Within the &lt;a href=&quot;../vtab#xupdate&quot;&gt;xUpdate&lt;/a&gt; method of a &lt;a href=&quot;../vtab&quot;&gt;virtual table&lt;/a&gt;, the sqlite3_value_nochange(X) interface returns true if and only if the column corresponding to X is unchanged by the UPDATE operation that the xUpdate method call was invoked to implement and if and the prior &lt;a href=&quot;../vtab#xcolumn&quot;&gt;xColumn&lt;/a&gt; method call that was invoked to extracted the value for that column returned without setting a result (probably because it queried &lt;a href=&quot;vtab_nochange&quot;&gt;sqlite3_vtab_nochange()&lt;/a&gt; and found that the column was unchanging). Within an &lt;a href=&quot;../vtab#xupdate&quot;&gt;xUpdate&lt;/a&gt; method, any value for which sqlite3_value_nochange(X) is true will in all other respects appear to be a NULL value. If sqlite3_value_nochange(X) is invoked anywhere other than within an &lt;a href=&quot;../vtab#xupdate&quot;&gt;xUpdate&lt;/a&gt; method call for an UPDATE statement, then the return value is arbitrary and meaningless.</source>
          <target state="translated">В методе &lt;a href=&quot;../vtab#xupdate&quot;&gt;xUpdate &lt;/a&gt;&lt;a href=&quot;../vtab&quot;&gt;виртуальной таблицы&lt;/a&gt; интерфейс sqlite3_value_nochange (X) возвращает true тогда и только тогда, когда столбец, соответствующий X, не изменился операцией UPDATE, для реализации которой был вызван вызов метода xUpdate, и если и предыдущий &lt;a href=&quot;../vtab#xcolumn&quot;&gt;вызов&lt;/a&gt; метода xColumn, который был вызван для извлечения значения для этого столбца, возвращенного без установки результата (вероятно, потому, что он запросил &lt;a href=&quot;vtab_nochange&quot;&gt;sqlite3_vtab_nochange ()&lt;/a&gt; и обнаружил, что столбец не изменился). В методе &lt;a href=&quot;../vtab#xupdate&quot;&gt;xUpdate&lt;/a&gt; любое значение, для которого sqlite3_value_nochange (X) истинно, во всех других отношениях будет отображаться как значение NULL. Если sqlite3_value_nochange (X) вызывается где угодно, кроме&lt;a href=&quot;../vtab#xupdate&quot;&gt;xUpdate&lt;/a&gt;вызов метода для оператора UPDATE, то возвращаемое значение будет произвольным и бессмысленным.</target>
        </trans-unit>
        <trans-unit id="6789b1bae7cd2bb76c0159019d7d9fbb4d93f85d" translate="yes" xml:space="preserve">
          <source>Within the &lt;a href=&quot;vtab#xupdate&quot;&gt;xUpdate&lt;/a&gt; method of a &lt;a href=&quot;vtab&quot;&gt;virtual table&lt;/a&gt;, the sqlite3_value_nochange(X) interface returns true if and only if the column corresponding to X is unchanged by the UPDATE operation that the xUpdate method call was invoked to implement and if and the prior &lt;a href=&quot;vtab#xcolumn&quot;&gt;xColumn&lt;/a&gt; method call that was invoked to extracted the value for that column returned without setting a result (probably because it queried &lt;a href=&quot;#sqlite3_vtab_nochange&quot;&gt;sqlite3_vtab_nochange()&lt;/a&gt; and found that the column was unchanging). Within an &lt;a href=&quot;vtab#xupdate&quot;&gt;xUpdate&lt;/a&gt; method, any value for which sqlite3_value_nochange(X) is true will in all other respects appear to be a NULL value. If sqlite3_value_nochange(X) is invoked anywhere other than within an &lt;a href=&quot;vtab#xupdate&quot;&gt;xUpdate&lt;/a&gt; method call for an UPDATE statement, then the return value is arbitrary and meaningless.</source>
          <target state="translated">В методе &lt;a href=&quot;vtab#xupdate&quot;&gt;xUpdate &lt;/a&gt;&lt;a href=&quot;vtab&quot;&gt;виртуальной таблицы&lt;/a&gt; интерфейс sqlite3_value_nochange (X) возвращает true тогда и только тогда, когда столбец, соответствующий X, не изменился операцией UPDATE, для реализации которой был вызван вызов метода xUpdate, и если и предыдущий &lt;a href=&quot;vtab#xcolumn&quot;&gt;вызов&lt;/a&gt; метода xColumn, который был вызван для извлечения значения для этого столбца, возвращенного без установки результата (вероятно, потому, что он запросил &lt;a href=&quot;#sqlite3_vtab_nochange&quot;&gt;sqlite3_vtab_nochange ()&lt;/a&gt; и обнаружил, что столбец не изменился). В методе &lt;a href=&quot;vtab#xupdate&quot;&gt;xUpdate&lt;/a&gt; любое значение, для которого sqlite3_value_nochange (X) истинно, во всех других отношениях будет отображаться как значение NULL. Если sqlite3_value_nochange (X) вызывается где угодно, кроме &lt;a href=&quot;vtab#xupdate&quot;&gt;xUpdate&lt;/a&gt;вызов метода для оператора UPDATE, то возвращаемое значение будет произвольным и бессмысленным.</target>
        </trans-unit>
        <trans-unit id="51af27804794d9726418547af1ae4968a5ef7a8d" translate="yes" xml:space="preserve">
          <source>Within this document, the term</source>
          <target state="translated">В рамках данного документа термин</target>
        </trans-unit>
        <trans-unit id="2abd7cfa8c19071145244fc329440378e98735a8" translate="yes" xml:space="preserve">
          <source>Within this document, the term &lt;b&gt;&lt;i&gt;non-writable dirty page&lt;/i&gt;&lt;/b&gt; is used specifically to refer to a</source>
          <target state="translated">В этом документе термин &quot; &lt;b&gt;&lt;i&gt;грязная страница без возможности записи&quot;&lt;/i&gt;&lt;/b&gt; используется специально для обозначения</target>
        </trans-unit>
        <trans-unit id="9c7aa2ef11bbb00024927734567cd7e8fb651be6" translate="yes" xml:space="preserve">
          <source>Within your application, call the procedure implemented in the last step above as part of your initialization process before any database connections are opened.</source>
          <target state="translated">Внутри вашего приложения вызовите процедуру,реализованную на последнем шаге выше в рамках процесса инициализации,прежде чем будут открыты какие-либо подключения к БД.</target>
        </trans-unit>
        <trans-unit id="d2b321aabd394218d6d71b6b8d179118941b9c02" translate="yes" xml:space="preserve">
          <source>Without the master journal, the transaction commit on a multi-database transaction would be atomic for each database individually, but it would not be atomic across all databases. In other words, if the commit were interrupted in the middle by a crash or power loss, then the changes to one of the databases might complete while the changes to another database might roll back. The master journal causes all changes in all databases to either rollback or commit together.</source>
          <target state="translated">Без основного журнала фиксация транзакции в многобазовой транзакции была бы атомарной для каждой базы данных в отдельности,но она не была бы атомарной для всех баз данных.Другими словами,если бы коммит был прерван посередине из-за аварии или потери питания,то изменения в одной из баз данных могли бы завершиться,в то время как изменения в другой базе данных могли бы откатиться назад.Основной журнал приводит к тому,что все изменения во всех базах данных либо откатываются,либо фиксируются вместе.</target>
        </trans-unit>
        <trans-unit id="7c3fafa3b408ed62c81a7e1dcfba262f7d167cb3" translate="yes" xml:space="preserve">
          <source>Without the super-journal, the transaction commit on a multi-database transaction would be atomic for each database individually, but it would not be atomic across all databases. In other words, if the commit were interrupted in the middle by a crash or power loss, then the changes to one of the databases might complete while the changes to another database might roll back. The super-journal causes all changes in all databases to either rollback or commit together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6dd78a3d415f93746301f9a57f0de1998136848" translate="yes" xml:space="preserve">
          <source>Words beginning with &quot;wr&quot; versus &quot;r&quot;: write vs. rite</source>
          <target state="translated">Слова,начинающиеся с &quot;wr&quot; против &quot;r&quot;:&quot;write vs.rite&quot;.</target>
        </trans-unit>
        <trans-unit id="87bffc88b4c4749365cee3251faa81be81f0ebe9" translate="yes" xml:space="preserve">
          <source>Work around a C-preprocessor macro conflict that breaks the build for some configurations with Microsoft Visual Studio.</source>
          <target state="translated">Работать вокруг C-препроцессорного конфликта макросов,который разбивает сборку для некоторых конфигураций с Microsoft Visual Studio.</target>
        </trans-unit>
        <trans-unit id="50aee533edd4e21305ef90f99451cd9467951df2" translate="yes" xml:space="preserve">
          <source>Work around a GCC optimizer bug (for gcc 4.2.1 on MacOS 10.7) that caused the &lt;a href=&quot;rtree&quot;&gt;R-Tree extension&lt;/a&gt; to compute incorrect results when compiled with -O3.</source>
          <target state="translated">Обходите ошибку оптимизатора GCC (для gcc 4.2.1 в MacOS 10.7), из &lt;a href=&quot;rtree&quot;&gt;-за которой расширение R-Tree&lt;/a&gt; вычисляло неверные результаты при компиляции с -O3.</target>
        </trans-unit>
        <trans-unit id="dfd059bf7f3cb496ecc6f63b39e721653d7d6b6d" translate="yes" xml:space="preserve">
          <source>Work around a bug in the optimizer in the VisualStudio-2012 compiler that causes invalid code to be generated when compiling SQLite on ARM.</source>
          <target state="translated">Поработайте над ошибкой в оптимизаторе в компиляторе VisualStudio-2012,которая приводит к генерации недействительного кода при компиляции SQLite на ARM.</target>
        </trans-unit>
        <trans-unit id="05fe4e3a69bacc20ca972b8ceb1bc5a0e767ed20" translate="yes" xml:space="preserve">
          <source>Work around a sign-extension bug in the optimizer of the HP C compiler on HP/UX. &lt;a href=&quot;https://www.sqlite.org/src/fdiff?sbs=1&amp;amp;v1=869c95b0fc73026d&amp;amp;v2=232c242a0ccb3d67&quot;&gt;(details)&lt;/a&gt;</source>
          <target state="translated">Обходите ошибку расширения знака в оптимизаторе компилятора HP C в HP / UX. &lt;a href=&quot;https://www.sqlite.org/src/fdiff?sbs=1&amp;amp;v1=869c95b0fc73026d&amp;amp;v2=232c242a0ccb3d67&quot;&gt;(Подробнее)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f7e0b96e4d5af469559bc4b5418e841b0585e67" translate="yes" xml:space="preserve">
          <source>Work around a win2k problem so that SQLite can use single-character database file names</source>
          <target state="translated">Поработайте над проблемой win2k,чтобы SQLite мог использовать односимвольные имена файлов базы данных.</target>
        </trans-unit>
        <trans-unit id="620ea823b219e2193e9c0c9d76d068c0c91681bb" translate="yes" xml:space="preserve">
          <source>Work around an optimizer bug in the MSVC compiler when targeting ARM.</source>
          <target state="translated">Обойти ошибку оптимизатора в компиляторе MSVC при нацеливании на ARM.</target>
        </trans-unit>
        <trans-unit id="c7a3e9e586b4abc65bd66b99ca41670f3c121bb4" translate="yes" xml:space="preserve">
          <source>Work-around for &lt;a href=&quot;http://gcc.gnu.org/bugzilla/show_bug.cgi?id=32575&quot;&gt;GCC bug 32575&lt;/a&gt;.</source>
          <target state="translated">Работа вокруг для &lt;a href=&quot;http://gcc.gnu.org/bugzilla/show_bug.cgi?id=32575&quot;&gt;GCC ошибки 32575&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="08625c5fd6367d66e1bd126e583c60ca3fbaace1" translate="yes" xml:space="preserve">
          <source>Work-around for &lt;a href=&quot;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=32575&quot;&gt;GCC bug 32575&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebdf47773b9831e663aaa2b137f8c46c76becbf" translate="yes" xml:space="preserve">
          <source>Would be rewritten using query flattening as:</source>
          <target state="translated">Будет переписано с использованием сглаживания запросов как:</target>
        </trans-unit>
        <trans-unit id="adefeee85f8390b904f622c9dadd9084253d11b9" translate="yes" xml:space="preserve">
          <source>Wrap SQL output in a single large transaction</source>
          <target state="translated">Обертка SQL-вывода в одну большую транзакцию</target>
        </trans-unit>
        <trans-unit id="a38083e109d2e7a4d69cbaa3489444f640acbb5f" translate="yes" xml:space="preserve">
          <source>Write Data Into A BLOB Incrementally</source>
          <target state="translated">Запись данных в BLOB инкрементально</target>
        </trans-unit>
        <trans-unit id="d7f59c7d18e98edd2a33e30c67d681015a12865e" translate="yes" xml:space="preserve">
          <source>Write P4 on the statement trace output if statement tracing is enabled.</source>
          <target state="translated">Если трассировка операторов включена,запишите P4 на вывод трассы оператора.</target>
        </trans-unit>
        <trans-unit id="01ecf2ccbe2bc061336d1857718a14b0b49fee20" translate="yes" xml:space="preserve">
          <source>Write Programs That Use SQLite</source>
          <target state="translated">Пишите программы,использующие SQLite.</target>
        </trans-unit>
        <trans-unit id="57477c30051b84c96ed41136ab16ff89bef76c1e" translate="yes" xml:space="preserve">
          <source>Write Transactions</source>
          <target state="translated">Пишите Операции</target>
        </trans-unit>
        <trans-unit id="7792ea49e68a0636ee3df8abc86c43dc971f4500" translate="yes" xml:space="preserve">
          <source>Write a NULL into registers P2. If P3 greater than P2, then also write NULL into register P3 and every register in between P2 and P3. If P3 is less than P2 (typically P3 is zero) then only register P2 is set to NULL.</source>
          <target state="translated">Запишите NULL в регистр P2.Если P3 больше чем P2,то также запишите NULL в регистр P3 и каждый регистр между P2 и P3.Если P3 меньше,чем P2 (обычно P3 равен нулю),то только регистр P2 установлен в NULL.</target>
        </trans-unit>
        <trans-unit id="4b067f7f133cef5bf8ac788b6955ee101e88869d" translate="yes" xml:space="preserve">
          <source>Write a string containing the final journal-mode to register P2.</source>
          <target state="translated">Запишите строку,содержащую финальный режим журнала для регистрации P2.</target>
        </trans-unit>
        <trans-unit id="b758b03a1915378a4790dfdd86b8e50a7bacf82d" translate="yes" xml:space="preserve">
          <source>Write all necessary methods.</source>
          <target state="translated">Напишите все необходимые методы.</target>
        </trans-unit>
        <trans-unit id="96dcd721393f2668fc3f8e665d514a96620cfebb" translate="yes" xml:space="preserve">
          <source>Write all page modifications currently held in memory out to the original database disk file.</source>
          <target state="translated">Записывайте все изменения страниц,которые в настоящее время хранятся в памяти,в исходный файл на диске базы данных.</target>
        </trans-unit>
        <trans-unit id="1687a8d3ed30cb7eb791ed33a931d8ace68eaab0" translate="yes" xml:space="preserve">
          <source>Write an entry into the table of cursor P1. A new entry is created if it doesn't already exist or the data for an existing entry is overwritten. The data is the value MEM_Blob stored in register number P2. The key is stored in register P3. The key must be a MEM_Int.</source>
          <target state="translated">Запишите запись в таблицу курсора P1.Новая запись создается,если ее еще нет или данные для существующей записи перезаписываются.Данные-это значение MEM_Blob,записанное в регистре под номером P2.Ключ хранится в регистре P3.Ключ должен быть MEM_Int.</target>
        </trans-unit>
        <trans-unit id="d5c23fb528e11a09e4afc8b5a2e279f79a841784" translate="yes" xml:space="preserve">
          <source>Write into register P2 an integer which is the last entry in the record at the end of the index key pointed to by cursor P1. This integer should be the rowid of the table entry to which this index entry points.</source>
          <target state="translated">Запишите в регистр P2 целое число,которое является последней записью в записи в конце индексного ключа,на который указывает курсор P1.Это целое число должно быть строкой записи таблицы,на которую указывает эта запись индекса.</target>
        </trans-unit>
        <trans-unit id="845ccbd564d152c911058efd13330cea72170f39" translate="yes" xml:space="preserve">
          <source>Write into register P2 the complete row content for the row at which cursor P1 is currently pointing. There is no interpretation of the data. It is just copied onto the P2 register exactly as it is found in the database file.</source>
          <target state="translated">Запишите в регистр P2 полное содержимое строки для строки,на которую в данный момент наведен курсор P1.Нет никакой интерпретации данных.Просто скопируйте их в регистр P2 в точности так,как они есть в файле базы данных.</target>
        </trans-unit>
        <trans-unit id="d4da38aa74dee90d46d653efba3b56536b2cc5d2" translate="yes" xml:space="preserve">
          <source>Write into register P2 the current sorter data for sorter cursor P1. Then clear the column header cache on cursor P3.</source>
          <target state="translated">Запишите в регистр P2 текущие данные сортировщика для курсора сортировщика P1.Затем очистить кэш заголовков столбцов на курсоре P3.</target>
        </trans-unit>
        <trans-unit id="4e60b462188e6078fccee2b0f7f0c97876c061b9" translate="yes" xml:space="preserve">
          <source>Write performance measurements were made by replacing (overwriting) an entire blob with a different blob. All of the blobs in these experiment are random and incompressible. Because writes are so much slower than reads, only 10,000 of the 100,000 blobs in the database are replaced. The blobs to be replaced are selected at random and are in no particular order.</source>
          <target state="translated">Замена (перезапись)целого кадра на другой капля была произведена путем измерения производительности.Все капли в этом эксперименте случайны и несжимаемы.Поскольку записи происходят намного медленнее,чем чтение,из 100 000 блоков в базе данных заменено только 10 000.Заменяемые капли выбираются случайным образом и не имеют особого порядка.</target>
        </trans-unit>
        <trans-unit id="97d379c9ca883f0cc777a01b05087d4f85759f23" translate="yes" xml:space="preserve">
          <source>Write the current address onto register P1 and then jump to address P2.</source>
          <target state="translated">Запишите текущий адрес в регистр P1,а затем перейдите на адрес P2.</target>
        </trans-unit>
        <trans-unit id="b9ace1191ba47c3313a30683407724719ddd8866" translate="yes" xml:space="preserve">
          <source>Write the current number of pages in database P1 to memory cell P2.</source>
          <target state="translated">Запишите текущее количество страниц в базу данных P1 в ячейку памяти P2.</target>
        </trans-unit>
        <trans-unit id="91954b8458d0e00b292061c02fc82b69cf42b6c1" translate="yes" xml:space="preserve">
          <source>Write the integer value P3 into cookie number P2 of database P1. P2==1 is the schema version. P2==2 is the database format. P2==3 is the recommended pager cache size, and so forth. P1==0 is the main database file and P1==1 is the database file used to store temporary tables.</source>
          <target state="translated">Запишите целое значение P3 в куки-номер P2 базы данных P1.P2==1-версия схемы.P2==2-формат БД.P2==3-рекомендуемый размер кэша пейджера и так далее.P1==0-основной файл БД,а P1==1-файл БД,используемый для хранения временных таблиц.</target>
        </trans-unit>
        <trans-unit id="4f557ab176f965a00361710b6f978bd703c87e93" translate="yes" xml:space="preserve">
          <source>Write the name of the master journal into all individual journals (in space set aside for that purpose in the headers of the individual journals) and flush the contents of the individual journals to disk and wait for those changes to reach the disk surface.</source>
          <target state="translated">Запишите имя главного журнала во все отдельные журналы (в отведенном для этого месте в заголовках отдельных журналов)и промойте содержимое отдельных журналов на диск и дождитесь,пока эти изменения достигнут поверхности диска.</target>
        </trans-unit>
        <trans-unit id="461c6fd84d21b2e1e58564d3f66dc64dc514f582" translate="yes" xml:space="preserve">
          <source>Write the name of the super-journal into all individual journals (in space set aside for that purpose in the headers of the individual journals) and flush the contents of the individual journals to disk and wait for those changes to reach the disk surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7664f788d5d10d956cebf109c73130c0a103849" translate="yes" xml:space="preserve">
          <source>Write transactions are very fast since they only involve writing the content once (versus twice for rollback-journal transactions) and because the writes are all sequential. Further, syncing the content to the disk is not required, as long as the application is willing to sacrifice durability following a power loss or hard reboot. (Writers sync the WAL on every transaction commit if &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous&lt;/a&gt; is set to FULL but omit this sync if &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous&lt;/a&gt; is set to NORMAL.)</source>
          <target state="translated">Транзакции записи выполняются очень быстро, поскольку они включают только однократную запись содержимого (по сравнению с двукратной записью транзакций журнала отката) и поскольку все записи являются последовательными. Кроме того, синхронизация содержимого с диском не требуется, если приложение готово пожертвовать долговечностью после потери питания или жесткой перезагрузки. (Писатели синхронизируют WAL при каждой фиксации транзакции, если &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous&lt;/a&gt; установлен на FULL, но пропускают эту синхронизацию, если &lt;a href=&quot;pragma#pragma_synchronous&quot;&gt;PRAGMA synchronous&lt;/a&gt; установлен на NORMAL.)</target>
        </trans-unit>
        <trans-unit id="9df19c54f436b6a77ec7817a689a3cb7a8863393" translate="yes" xml:space="preserve">
          <source>Write-Ahead Log Commit Hook</source>
          <target state="translated">Write-Ahead Log Commit Hook</target>
        </trans-unit>
        <trans-unit id="7012a3c8e49b82c45441c8c9cad604aa604cafd1" translate="yes" xml:space="preserve">
          <source>Write-Ahead Logging</source>
          <target state="translated">Запись в журнал</target>
        </trans-unit>
        <trans-unit id="0e7776631ee4a8b853c6c06ce06a6006cefcda96" translate="yes" xml:space="preserve">
          <source>Write-ahead Log (WAL) files</source>
          <target state="translated">Файлы протокола записи (WAL)</target>
        </trans-unit>
        <trans-unit id="e1b6c7d9217381e4c29658c4e3841e70686fb388" translate="yes" xml:space="preserve">
          <source>Writer starvation</source>
          <target state="translated">Писательский голод</target>
        </trans-unit>
        <trans-unit id="e447e06606fdc13a8e426bfdd192c63a84795c86" translate="yes" xml:space="preserve">
          <source>Writers merely append new content to the end of the WAL file. Because writers do nothing that would interfere with the actions of readers, writers and readers can run at the same time. However, since there is only one WAL file, there can only be one writer at a time.</source>
          <target state="translated">Писатели просто добавляют новое содержимое в конец файла WAL.Потому что писатели не делают ничего,что мешало бы действиям читателей,писатели и читатели могут запускаться одновременно.Однако,поскольку существует только один файл WAL,одновременно может работать только один пишущий файл.</target>
        </trans-unit>
        <trans-unit id="51a81481b69a429427cf443afa9b0e120124c1b5" translate="yes" xml:space="preserve">
          <source>Writes are slower. On all systems, using both direct I/O and SQLite, write performance is between 5 and 15 times slower than reads.</source>
          <target state="translated">Писания медленнее.На всех системах,использующих как прямой ввод-вывод,так и SQLite,производительность записи в 5-15 раз медленнее чтения.</target>
        </trans-unit>
        <trans-unit id="a90f9ae1890da2882ef529c18fb80a5589473876" translate="yes" xml:space="preserve">
          <source>Writes to an in-memory source database, or writes to a file-based source database by an external process or thread using a database connection other than pDb are significantly more expensive than writes made to a file-based source database using pDb (as the entire backup operation must be restarted in the former two cases).</source>
          <target state="translated">Запись в исходную базу данных in-memory или запись в файловую исходную базу данных с помощью внешнего процесса или потока,использующего соединение с базой данных,отличное от pDb,значительно дороже,чем запись в файловую исходную базу данных с помощью pDb (так как вся операция резервного копирования должна быть перезапущена в двух предыдущих случаях).</target>
        </trans-unit>
        <trans-unit id="347af0bc198470df77e05081b38d5bcb19f95263" translate="yes" xml:space="preserve">
          <source>Writes to the &lt;a href=&quot;../dbpage&quot;&gt;sqlite_dbpage&lt;/a&gt; virtual table.</source>
          <target state="translated">Записывает в виртуальную таблицу &lt;a href=&quot;../dbpage&quot;&gt;sqlite_dbpage&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="caebec0b3978142dd7d784c5a70a27f827c0fc87" translate="yes" xml:space="preserve">
          <source>Writes to the &lt;a href=&quot;dbpage&quot;&gt;sqlite_dbpage&lt;/a&gt; virtual table.</source>
          <target state="translated">Записывает в виртуальную таблицу &lt;a href=&quot;dbpage&quot;&gt;sqlite_dbpage&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e632869f49afb8aba3986c578bc41023c0edd69" translate="yes" xml:space="preserve">
          <source>Writing Data</source>
          <target state="translated">Запись данных</target>
        </trans-unit>
        <trans-unit id="46bd9ed0bb52c21d70902da8961ddf970beec522" translate="yes" xml:space="preserve">
          <source>Writing a Journal Header</source>
          <target state="translated">Написание заголовка журнала</target>
        </trans-unit>
        <trans-unit id="563ef87c29c874b30c909b9cb710bc0c375b3734" translate="yes" xml:space="preserve">
          <source>Writing a good query planner is more art than science. The query planner must work with incomplete information. It cannot determine how long any particular plan will take without actually running that plan. So when comparing two or more plans to figure out which is &quot;best&quot;, the query planner has to make some guesses and assumptions and those guesses and assumptions will sometimes be wrong. A good query planner is one that will find the correct solution often enough that application programmers rarely need to get involved.</source>
          <target state="translated">Написание хорошего планировщика запросов-это больше искусство,чем наука.Планировщик запросов должен работать с неполной информацией.Он не может определить,сколько времени займет какой-либо конкретный план,не выполнив его на самом деле.Поэтому при сравнении двух или более планов,чтобы выяснить,какой из них &quot;лучший&quot;,планировщик запросов должен сделать некоторые догадки и предположения,и эти догадки и предположения иногда будут неверными.Хороший планировщик запросов-это такой планировщик,который достаточно часто находит правильное решение,в которое прикладным программистам редко приходится вмешиваться.</target>
        </trans-unit>
        <trans-unit id="0cde81e7d9009da11d97881af257b1563f71fbed" translate="yes" xml:space="preserve">
          <source>Writing the code for a new VFS involves constructing a subclass for the &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; object and then registering that VFS object using a call to &lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register()&lt;/a&gt;. The VFS implementation also provides subclasses for &lt;a href=&quot;c3ref/file&quot;&gt;sqlite3_file&lt;/a&gt; and &lt;a href=&quot;c3ref/io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; but those objects are not registered directly with SQLite. Instead, the &lt;a href=&quot;c3ref/file&quot;&gt;sqlite3_file&lt;/a&gt; object is returned from the xOpen method of &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs&lt;/a&gt; and the &lt;a href=&quot;c3ref/file&quot;&gt;sqlite3_file&lt;/a&gt; object points to an instance of the &lt;a href=&quot;c3ref/io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; object.</source>
          <target state="translated">Написание кода для новой VFS включает в себя создание подкласса для объекта &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs,&lt;/a&gt; а затем регистрацию этого объекта VFS с помощью вызова &lt;a href=&quot;c3ref/vfs_find&quot;&gt;sqlite3_vfs_register ()&lt;/a&gt; . Реализация VFS также предоставляет подклассы для &lt;a href=&quot;c3ref/file&quot;&gt;sqlite3_file&lt;/a&gt; и &lt;a href=&quot;c3ref/io_methods&quot;&gt;sqlite3_io_methods,&lt;/a&gt; но эти объекты не регистрируются напрямую в SQLite. Вместо этого объект &lt;a href=&quot;c3ref/file&quot;&gt;sqlite3_file&lt;/a&gt; возвращается из метода xOpen &lt;a href=&quot;c3ref/vfs&quot;&gt;sqlite3_vfs,&lt;/a&gt; а объект &lt;a href=&quot;c3ref/file&quot;&gt;sqlite3_file&lt;/a&gt; указывает на экземпляр объекта &lt;a href=&quot;c3ref/io_methods&quot;&gt;sqlite3_io_methods&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7fdb521941b3e5056a81c587e69b7f19860828e9" translate="yes" xml:space="preserve">
          <source>Written in ANSI-C. &lt;a href=&quot;tclsqlite&quot;&gt;TCL bindings&lt;/a&gt; included. Bindings for dozens of other languages available separately.</source>
          <target state="translated">Написано в ANSI-C. &lt;a href=&quot;tclsqlite&quot;&gt;Привязки TCL&lt;/a&gt; включены. Привязки для десятков других языков доступны отдельно.</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="ab87b9a32f29182878ebb3a6891a6c4a1092d9ec" translate="yes" xml:space="preserve">
          <source>X is U-35 for table btree leaf pages or ((U-12)*64/255)-23 for index pages.</source>
          <target state="translated">X равно U-35 для табличных btree листовых страниц или ((U-12)*64/255)-23 для индексных страниц.</target>
        </trans-unit>
        <trans-unit id="a43e2726d178277e17345f240dc4baecfd6ece05" translate="yes" xml:space="preserve">
          <source>XLS - Microsoft Excel Spreadsheet</source>
          <target state="translated">XLS-электронная таблица Microsoft Excel</target>
        </trans-unit>
        <trans-unit id="23eb4d3f4155395a74e9d534f97ff4c1908f5aac" translate="yes" xml:space="preserve">
          <source>Y</source>
          <target state="translated">Y</target>
        </trans-unit>
        <trans-unit id="d3f8f7b810c4b08f0b4ac4e47fdf8d265a10d869" translate="yes" xml:space="preserve">
          <source>YYYY-MM-DD</source>
          <target state="translated">YYYY-MM-DD</target>
        </trans-unit>
        <trans-unit id="52249b595b705e3022543f7da9fd802190e92e98" translate="yes" xml:space="preserve">
          <source>YYYY-MM-DD HH:MM</source>
          <target state="translated">ГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГ...</target>
        </trans-unit>
        <trans-unit id="5d7d8fa1d70072dde246c61070188c4587305f0a" translate="yes" xml:space="preserve">
          <source>YYYY-MM-DD HH:MM:SS</source>
          <target state="translated">ГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГ.ГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГГ.</target>
        </trans-unit>
        <trans-unit id="c73c8c3ce69182be88dad37758ba32a3fc0f8563" translate="yes" xml:space="preserve">
          <source>YYYY-MM-DD HH:MM:SS.SSS</source>
          <target state="translated">ЙЫЙ-ММ-ДДД HH:MM:SS.SSS</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="5374d3a8e418edba680d4a07da2c6ab36a4e8962" translate="yes" xml:space="preserve">
          <source>Yes. SQLite is in the &lt;a href=&quot;https://sqlite.org/copyright.html&quot;&gt;public domain&lt;/a&gt;. No claim of ownership is made to any part of the code. You can do anything you want with it.</source>
          <target state="translated">Да. SQLite находится в &lt;a href=&quot;https://sqlite.org/copyright.html&quot;&gt;открытом доступе&lt;/a&gt; . Никакие претензии на право собственности не предъявляются к какой-либо части кода. Вы можете делать с ним все, что хотите.</target>
        </trans-unit>
        <trans-unit id="33b0fd0f74faa27daf44c1c690d408e467aa0dd1" translate="yes" xml:space="preserve">
          <source>Yield</source>
          <target state="translated">Yield</target>
        </trans-unit>
        <trans-unit id="84033aeb092c1214f0c2cb3aece38e6ba6958175" translate="yes" xml:space="preserve">
          <source>Yields 20 results beginning with:</source>
          <target state="translated">Дает 20 результатов,начиная с:</target>
        </trans-unit>
        <trans-unit id="0e3a778de9e9a5f44253370ab8c9e4efcbf47122" translate="yes" xml:space="preserve">
          <source>You can access the ROWID of an SQLite table using one of the special column names ROWID, _ROWID_, or OID. Except if you declare an ordinary table column to use one of those special names, then the use of that name will refer to the declared column not to the internal ROWID.</source>
          <target state="translated">Вы можете получить доступ к ROWID таблицы SQLite,используя одно из специальных названий колонок ROWID,_ROWID_или OID.За исключением случаев,когда вы объявляете обычную колонку таблицы для использования одного из этих специальных имён,то использование этого имени будет относиться к объявленной колонке,а не к внутреннему ROWID.</target>
        </trans-unit>
        <trans-unit id="f9617c865e05039ea284590d342ff395b566aa5e" translate="yes" xml:space="preserve">
          <source>You can add new custom &lt;a href=&quot;appfunc&quot;&gt;application-defined SQL functions&lt;/a&gt;, &lt;a href=&quot;datatype3#collation&quot;&gt;collating sequences&lt;/a&gt;, &lt;a href=&quot;vtab&quot;&gt;virtual tables&lt;/a&gt;, and &lt;a href=&quot;vfs&quot;&gt;VFSes&lt;/a&gt; to the command-line shell at run-time using the &quot;.load&quot; command. First, convert the extension in to a DLL or shared library (as described in the &lt;a href=&quot;loadext&quot;&gt;Run-Time Loadable Extensions&lt;/a&gt; document) then type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766fd041e7449721a800b8d56d1a550c8e84e175" translate="yes" xml:space="preserve">
          <source>You can add new custom &lt;a href=&quot;c3ref/create_function&quot;&gt;application-defined SQL functions&lt;/a&gt;, &lt;a href=&quot;datatype3#collation&quot;&gt;collating sequences&lt;/a&gt;, &lt;a href=&quot;vtab&quot;&gt;virtual tables&lt;/a&gt;, and &lt;a href=&quot;vfs&quot;&gt;VFSes&lt;/a&gt; to the command-line shell at run-time using the &quot;.load&quot; command. First, convert the extension in to a DLL or shared library (as described in the &lt;a href=&quot;loadext&quot;&gt;Run-Time Loadable Extensions&lt;/a&gt; document) then type:</source>
          <target state="translated">Вы можете добавить новые пользовательские &lt;a href=&quot;c3ref/create_function&quot;&gt;определяемые приложением функции SQL&lt;/a&gt; , &lt;a href=&quot;datatype3#collation&quot;&gt;последовательности сортировки&lt;/a&gt; , &lt;a href=&quot;vtab&quot;&gt;виртуальные таблицы&lt;/a&gt; и &lt;a href=&quot;vfs&quot;&gt;VFS&lt;/a&gt; в оболочку командной строки во время выполнения с помощью команды &amp;laquo;.load&amp;raquo;. Сначала преобразуйте расширение в DLL или общую библиотеку (как описано в документе &amp;laquo; &lt;a href=&quot;loadext&quot;&gt;Загружаемые расширения времени выполнения&amp;raquo;&lt;/a&gt; ), затем введите:</target>
        </trans-unit>
        <trans-unit id="f503e6243f11ce8864a2a2815733bb53ffb62dce" translate="yes" xml:space="preserve">
          <source>You can also process the results of a query one row at a time by specifying the name of an array variable and a script following the SQL code. For each row of the query result, the values of all columns will be inserted into the array variable and the script will be executed. For instance:</source>
          <target state="translated">Также можно обрабатывать результаты запроса по одной строке за раз,указав имя переменной массива и скрипт,следуя SQL-коду.Для каждой строки результата запроса значения всех столбцов будут вставлены в переменную массива и выполнен скрипт.Например:</target>
        </trans-unit>
        <trans-unit id="cff814001d9391d1134a9599b4429c6538fee547" translate="yes" xml:space="preserve">
          <source>You can also provide the virtual table with a &quot;rank&quot; for each word. The &quot;rank&quot; is an estimate of how common the word is. Larger numbers mean the word is more common. If you omit the rank when populating the table, then a rank of 1 is assumed. But if you have rank information, you can supply it and the virtual table will show a slight preference for selecting more commonly used terms. To populate the rank from an fts4aux table &quot;search_aux&quot; do something like this:</source>
          <target state="translated">Вы также можете предоставить виртуальную таблицу с &quot;рангом&quot; для каждого слова.Звание&quot;-это оценка того,насколько распространено это слово.Большие числа означают,что слово более распространено.Если при заполнении таблицы опустить &quot;ранг&quot;,то предполагается,что это слово имеет ранг 1.Но если у вас есть информация о ранге,вы можете ее предоставить,и в виртуальной таблице будет показано небольшое предпочтение при выборе более распространенных терминов.Для заполнения ранга из таблицы fts4aux &quot;search_aux&quot; сделайте что-нибудь подобное:</target>
        </trans-unit>
        <trans-unit id="adf32fc901d0b3c9c4d8f663c01fbe75c182af0b" translate="yes" xml:space="preserve">
          <source>You can also request a reverse-order sort like this:</source>
          <target state="translated">Вы также можете запросить сортировку по обратному заказу,как этот:</target>
        </trans-unit>
        <trans-unit id="6faf0acbd59c9b880e0b1c9b8cab39235a6257e9" translate="yes" xml:space="preserve">
          <source>You can call your project anything you like. The &quot;&lt;code&gt;.fossil&lt;/code&gt;&quot; suffix is optional. For this document, we will continue to call the project &quot;&lt;code&gt;private-project.fossil&lt;/code&gt;&quot;. Note that &lt;code&gt;private-project.fossil&lt;/code&gt; is an ordinary disk file (actually an SQLite database) that will contain your complete project history. You can make a backup of the project simply by making a copy of that one file.</source>
          <target state="translated">Вы можете называть свой проект как угодно. &lt;code&gt;.fossil&lt;/code&gt; &amp;laquo; .fossil &amp;raquo; указывать не обязательно. В этом документе мы продолжим называть проект &amp;laquo; &lt;code&gt;private-project.fossil&lt;/code&gt; &amp;raquo;. Обратите внимание, что &lt;code&gt;private-project.fossil&lt;/code&gt; - это обычный дисковый файл (фактически база данных SQLite), который будет содержать полную историю вашего проекта. Вы можете сделать резервную копию проекта, просто сделав копию этого файла.</target>
        </trans-unit>
        <trans-unit id="a7e393b006953ea5c66642b8797a473726aa00ab" translate="yes" xml:space="preserve">
          <source>You can have multiple checkouts of the same project if you want. And you can &quot;clone&quot; the repository to different machines so that multiple developers can use it. See the fossil website for further information.</source>
          <target state="translated">При желании вы можете иметь несколько проверок одного и того же проекта.И вы можете &quot;клонировать&quot; хранилище на разные машины,чтобы его могли использовать несколько разработчиков.Дополнительную информацию смотрите на сайте &quot;Ископаемые&quot;.</target>
        </trans-unit>
        <trans-unit id="0eaaecfbb43e45dd392f3506c8da0516ce5d97d1" translate="yes" xml:space="preserve">
          <source>You can run the &quot;info&quot; command again to verify that you are on the private branch. To go back to the public branch, type:</source>
          <target state="translated">Вы можете запустить команду &quot;info&quot; еще раз,чтобы проверить,что вы находитесь в частной ветке.Чтобы вернуться в публичную ветку,введите:</target>
        </trans-unit>
        <trans-unit id="445e03eebf2a496b04ef2b41a7e5575686b7c24c" translate="yes" xml:space="preserve">
          <source>You can see how SQLite constructs nested loops in the following example:</source>
          <target state="translated">Вы можете посмотреть,как SQLite строит вложенные циклы в следующем примере:</target>
        </trans-unit>
        <trans-unit id="64e589fcb69790fd074e7b79362cd1b733d9786f" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;PRAGMA integrity_check&lt;/a&gt; to do a thorough but time intensive test of the database integrity.</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;pragma#pragma_integrity_check&quot;&gt;PRAGMA Integrity_check&lt;/a&gt; для тщательного, но трудоемкого тестирования целостности базы данных.</target>
        </trans-unit>
        <trans-unit id="89132b9f9cffd74c2cdc7fb086ca8110533325a1" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;pragma#pragma_quick_check&quot;&gt;PRAGMA quick_check&lt;/a&gt; to do a faster but less thorough test of the database integrity.</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;pragma#pragma_quick_check&quot;&gt;PRAGMA quick_check&lt;/a&gt; для более быстрой, но менее тщательной проверки целостности базы данных.</target>
        </trans-unit>
        <trans-unit id="322edc4ffe1c2dcc35efd77efa0d7e1857777962" translate="yes" xml:space="preserve">
          <source>You can use the &quot;.mode&quot; dot command to switch between these output formats. &amp;gt;The default output mode is &quot;list&quot;. In list mode, each row of a query result is written on one line of output and each column within that row is separated by a specific separator string. The default separator is a pipe symbol (&quot;|&quot;). List mode is especially useful when you are going to send the output of a query to another program (such as AWK) for additional processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e92ffb5988a51f0ff35033b1f3e5d3ebcb33986" translate="yes" xml:space="preserve">
          <source>You can use the &quot;.mode&quot; dot command to switch between these output formats. The default output mode is &quot;list&quot;. In list mode, each row of a query result is written on one line of output and each column within that row is separated by a specific separator string. The default separator is a pipe symbol (&quot;|&quot;). List mode is especially useful when you are going to send the output of a query to another program (such as AWK) for additional processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92aed886574f82b46aed1073eadf0a43514f93b" translate="yes" xml:space="preserve">
          <source>You cannot &lt;a href=&quot;lang_delete&quot;&gt;DELETE&lt;/a&gt;, &lt;a href=&quot;lang_insert&quot;&gt;INSERT&lt;/a&gt;, or &lt;a href=&quot;lang_update&quot;&gt;UPDATE&lt;/a&gt; a view. Views are read-only in SQLite. However, in many cases you can use an &lt;a href=&quot;lang_createtrigger#instead_of_trigger&quot;&gt;INSTEAD OF trigger&lt;/a&gt; on the view to accomplish the same thing. Views are removed with the &lt;a href=&quot;lang_dropview&quot;&gt;DROP VIEW&lt;/a&gt; command.</source>
          <target state="translated">Вы не можете &lt;a href=&quot;lang_delete&quot;&gt;УДАЛИТЬ&lt;/a&gt; , &lt;a href=&quot;lang_insert&quot;&gt;ВСТАВИТЬ&lt;/a&gt; или &lt;a href=&quot;lang_update&quot;&gt;ОБНОВИТЬ&lt;/a&gt; представление. Представления в SQLite доступны только для чтения. Однако во многих случаях вы можете использовать &lt;a href=&quot;lang_createtrigger#instead_of_trigger&quot;&gt;триггер INSTEAD OF&lt;/a&gt; в представлении, чтобы выполнить то же самое. Виды удаляются с помощью команды &lt;a href=&quot;lang_dropview&quot;&gt;DROP VIEW&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3029ec6343085341759c5984c721d08ac8eda9c" translate="yes" xml:space="preserve">
          <source>You lose Durability with asynchronous I/O, but you still retain the other parts of ACID: Atomic, Consistent, and Isolated. Many applications get along fine without the Durability.</source>
          <target state="translated">Вы теряете Долговечность с асинхронным вводом/выводом,но при этом сохраняете остальные части ACID:Атомную,Последовательную и Изолированную.Многие приложения прекрасно уживаются без Долговечности.</target>
        </trans-unit>
        <trans-unit id="2edf5e92e2eb8b4ae5fa4b416e11d2c19ee0f6b2" translate="yes" xml:space="preserve">
          <source>You may want to add additional compiler options, of course, according to the needs of your project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd05146b6c50e8243d5d884c39ba78d8eacc3ab" translate="yes" xml:space="preserve">
          <source>You might also want to implement your new virtual table as a &lt;a href=&quot;c3ref/load_extension&quot;&gt;loadable extension&lt;/a&gt;.</source>
          <target state="translated">Вы также можете реализовать свою новую виртуальную таблицу как &lt;a href=&quot;c3ref/load_extension&quot;&gt;загружаемое расширение&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5967e28677480dfa358973a1823f7ea8ef646b1f" translate="yes" xml:space="preserve">
          <source>You might also want to implement your new virtual table as a &lt;a href=&quot;loadext&quot;&gt;loadable extension&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0efe31561de911c0e8b4a9d062c5a0f356df3b" translate="yes" xml:space="preserve">
          <source>You should not assume that a CVE about SQLite contains authoritative information. CVEs often contain inaccuracies. The SQLite developers have attempted to add clarifications and corrections to CVEs about SQLite, but without success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bedd0d05da99d3f3471d33a570e1e743621d6387" translate="yes" xml:space="preserve">
          <source>You will be prompted for a check-in comment. Say whatever you like. After the commit completes, your baseline will be part of the repository. The following command, if you like, to see this on the &quot;timeline&quot;:</source>
          <target state="translated">Вам будет предложено оставить комментарий к регистрации.Говорите,что хотите.После завершения коммита ваша базовая информация станет частью репозитория.Следующая команда,если вы хотите,чтобы это было видно на &quot;временной шкале&quot;:</target>
        </trans-unit>
        <trans-unit id="fd47b0381210b18fb651f05af57837f2ec742bdf" translate="yes" xml:space="preserve">
          <source>You will be prompted once again to enter a commit describing your changes. Then the commit will occur. The commit creates a new checkin in the repository that corresponds to circle (3) in the diagram above.</source>
          <target state="translated">Вам снова будет предложено ввести фиксацию,описывающую ваши изменения.Затем произойдет фиксация.Фиксация создаёт в хранилище новую регистрацию,которая соответствует кругу (3)на диаграмме выше.</target>
        </trans-unit>
        <trans-unit id="d5cd5e33edb7ba1f8da45a2c106b29f5d941a815" translate="yes" xml:space="preserve">
          <source>You will do well to customize the name of your entry point to correspond to the name of the shared library you will be generating, rather than using the generic &quot;sqlite3_extension_init&quot; name. Giving your extension a custom entry point name will enable you to statically link two or more extensions into the same program without a linker conflict, if you later decide to use static linking rather than run-time linking. If your shared library ends up being named &quot;YourCode.so&quot; or &quot;YourCode.dll&quot; or &quot;YourCode.dylib&quot; as shown in the compiler examples above, then the correct entry point name would be &quot;sqlite3_yourcode_init&quot;.</source>
          <target state="translated">Вам будет удобно настроить имя вашей точки входа,чтобы оно соответствовало названию разделяемой библиотеки,которую вы будете генерировать,вместо того,чтобы использовать общее &quot;sqlite3_extension_init&quot; имя.Придание вашему расширению пользовательского имени точки входа позволит вам статически связывать два или более расширения в одну и ту же программу без конфликта компоновщиков,если позже вы решите использовать статическое линковочное соединение,а не компоновку во время выполнения.Если ваша разделяемая библиотека получит имя &quot;YourCode.so&quot; или &quot;YourCode.dll&quot; или &quot;YourCode.dylib&quot;,как показано в примерах компилятора выше,то правильным именем точки входа будет &quot;sqlite3_yourcode_init&quot;.</target>
        </trans-unit>
        <trans-unit id="7ea7cb4b66409b042916564a60165ee172534600" translate="yes" xml:space="preserve">
          <source>You will notice that there is no &quot;sort&quot; box anywhere in the above diagram. The ORDER BY clause of the query has become a no-op. No sorting has to be done here because the output order is by the state column and the state column also happens to be the first column after the fruit column in the index. So, if we scan entries of the index that have the same value for the fruit column from top to bottom, those index entries are guaranteed to be ordered by the state column.</source>
          <target state="translated">Вы заметите,что нигде на вышеприведенной диаграмме нет поля &quot;сортировка&quot;.Фраза &quot;ЗАКАЗАТЬ ПО&quot; в запросе превратилась в точку &quot;нет&quot;.Здесь сортировка не требуется,так как порядок вывода осуществляется по столбцу состояния,а столбец состояния также оказывается первым столбцом после столбца фруктов в индексе.Таким образом,если мы просканируем сверху вниз записи индекса,которые имеют одинаковое значение для столбца фруктов,то эти записи индекса гарантированно будут упорядочены по столбцу состояния.</target>
        </trans-unit>
        <trans-unit id="909f99a779adb66a76fc53ab56c7dd1caf35d0fd" translate="yes" xml:space="preserve">
          <source>Z</source>
          <target state="translated">Z</target>
        </trans-unit>
        <trans-unit id="de7c952ac8080a02c7ac9ceb0a498a6696e8a4ba" translate="yes" xml:space="preserve">
          <source>ZIP Archive (using &lt;a href=&quot;zipfile&quot;&gt;zipfile&lt;/a&gt;)</source>
          <target state="translated">ZIP-архив (с использованием &lt;a href=&quot;zipfile&quot;&gt;zip-файла&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="aed9db86a6be4caef2cf6fe06f1642f420130c81" translate="yes" xml:space="preserve">
          <source>ZIP Archive (using Info-ZIP 3.0)</source>
          <target state="translated">ZIP-архив (с использованием Info-ZIP 3.0)</target>
        </trans-unit>
        <trans-unit id="02df620236f2819dde38ac784010df88429081e2" translate="yes" xml:space="preserve">
          <source>Zero Scan-Status Counters</source>
          <target state="translated">Счетчики нулевого статуса сканирования</target>
        </trans-unit>
        <trans-unit id="1c76cf24ab11047f65399e2ad41b068487b4d36e" translate="yes" xml:space="preserve">
          <source>Zero all &lt;a href=&quot;#sqlite3_stmt_scanstatus&quot;&gt;sqlite3_stmt_scanstatus()&lt;/a&gt; related event counters.</source>
          <target state="translated">&lt;a href=&quot;#sqlite3_stmt_scanstatus&quot;&gt;Обнулить&lt;/a&gt; все счетчики событий, связанных с sqlite3_stmt_scanstatus () .</target>
        </trans-unit>
        <trans-unit id="0189ea1500b8f88a4d451f2fe03811a0d2084600" translate="yes" xml:space="preserve">
          <source>Zero all &lt;a href=&quot;stmt_scanstatus&quot;&gt;sqlite3_stmt_scanstatus()&lt;/a&gt; related event counters.</source>
          <target state="translated">&lt;a href=&quot;stmt_scanstatus&quot;&gt;Обнулить&lt;/a&gt; все счетчики событий, связанных с sqlite3_stmt_scanstatus () .</target>
        </trans-unit>
        <trans-unit id="3ab2b2e76dc0457f3573e771bc76b7e1dc6d462e" translate="yes" xml:space="preserve">
          <source>Zero or more changesets (or patchsets) are added to the object by calling sqlite3changegroup_add().</source>
          <target state="translated">Ноль или больше изменяемых наборов (или патчсетов)добавляются к объекту с помощью вызова sqlite3changegroup_add().</target>
        </trans-unit>
        <trans-unit id="ec69186fcac6fdc7aea5f5bb931cc915fc4d16f5" translate="yes" xml:space="preserve">
          <source>Zero or more escape sequences of the form &quot;&lt;b&gt;%&lt;i&gt;HH&lt;/i&gt;&lt;/b&gt;&quot; (where &lt;b&gt;&lt;i&gt;H&lt;/i&gt;&lt;/b&gt; represents any hexadecimal digit) can occur in the path, query string, or fragment.</source>
          <target state="translated">В пути, строке запроса или фрагменте могут встречаться ноль или более управляющих последовательностей формы &amp;laquo; &lt;b&gt;% &lt;i&gt;HH&lt;/i&gt;&lt;/b&gt; &amp;raquo; (где &lt;b&gt;&lt;i&gt;H&lt;/i&gt;&lt;/b&gt; представляет собой любую шестнадцатеричную цифру).</target>
        </trans-unit>
        <trans-unit id="de6b47760256c38c352e812a03525532f246ee01" translate="yes" xml:space="preserve">
          <source>Zero or more of the following constants can be OR-ed together for the F argument to &lt;a href=&quot;#sqlite3_serialize&quot;&gt;sqlite3_serialize(D,S,P,F)&lt;/a&gt;.</source>
          <target state="translated">Ноль или несколько следующих констант могут быть объединены &lt;a href=&quot;#sqlite3_serialize&quot;&gt;оператором&lt;/a&gt; ИЛИ для аргумента F для sqlite3_serialize (D, S, P, F) .</target>
        </trans-unit>
        <trans-unit id="9f8269aa118af918f1a488e66741b01a907d6b33" translate="yes" xml:space="preserve">
          <source>Zero or more of the following constants can be OR-ed together for the F argument to &lt;a href=&quot;serialize&quot;&gt;sqlite3_serialize(D,S,P,F)&lt;/a&gt;.</source>
          <target state="translated">Ноль или несколько следующих констант могут быть объединены &lt;a href=&quot;serialize&quot;&gt;оператором&lt;/a&gt; ИЛИ для аргумента F для sqlite3_serialize (D, S, P, F) .</target>
        </trans-unit>
        <trans-unit id="38a2e2f1db1e01b0a7b783b044e5fd65c8987a39" translate="yes" xml:space="preserve">
          <source>Zero or more term-offset lists. A term-offset list is present for each column of the FTS virtual table that contains the term. A term-offset list consists of the following:</source>
          <target state="translated">Ноль или более списков смещения сроков.Для каждого столбца виртуальной таблицы FTS,содержащего термин,присутствует термин-сопоставительный список.Сменный список состоит из следующего:</target>
        </trans-unit>
        <trans-unit id="2515b49203ae7509e436f1b0d49f1c8ee6f4b1c9" translate="yes" xml:space="preserve">
          <source>Zero-Configuration</source>
          <target state="translated">Zero-Configuration</target>
        </trans-unit>
        <trans-unit id="eb706c03a671590ecb5597ee5876c02079a3bb36" translate="yes" xml:space="preserve">
          <source>Zipfile is included in most builds of the &lt;a href=&quot;cli&quot;&gt;command-line shell&lt;/a&gt;.</source>
          <target state="translated">Zipfile включен в большинство сборок &lt;a href=&quot;cli&quot;&gt;оболочки командной строки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17013934d72000f10774f09cdfd9e948aabb0622" translate="yes" xml:space="preserve">
          <source>[+-]HH:MM</source>
          <target state="translated">[+-]HH:MM</target>
        </trans-unit>
        <trans-unit id="41cd6acf1ea38a1aa799ac385ce472b7a37c5a7c" translate="yes" xml:space="preserve">
          <source>[Top]</source>
          <target state="translated">[Top]</target>
        </trans-unit>
        <trans-unit id="6eb6de05767c9dc240cdb86a107e8527d6654c55" translate="yes" xml:space="preserve">
          <source>]&quot;.</source>
          <target state="translated">]&quot;.</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="c8cfbdcc11a659b37fda2e901e339fc12d9d6f46" translate="yes" xml:space="preserve">
          <source>a file causes all modifications to the file up until that point to be committed to persistent storage.</source>
          <target state="translated">файл вызывает все изменения в файле вплоть до этого момента,чтобы зафиксировать их в постоянном хранилище.</target>
        </trans-unit>
        <trans-unit id="99cb3c351b6439359c3dacbec2f049764ce3028c" translate="yes" xml:space="preserve">
          <source>a journal file may contain. Following the</source>
          <target state="translated">файл журнала может содержать.После</target>
        </trans-unit>
        <trans-unit id="5cc80862da2aa33790fc037208b79509f1c557d6" translate="yes" xml:space="preserve">
          <source>a power failure.</source>
          <target state="translated">сбой электропитания.</target>
        </trans-unit>
        <trans-unit id="2d1a9beeff6f7710a34b3c2405a0c15a35e9231d" translate="yes" xml:space="preserve">
          <source>a program crash,</source>
          <target state="translated">сбой программы,</target>
        </trans-unit>
        <trans-unit id="044751c5b1c31e8b348678fdf3c4db6f20debbf5" translate="yes" xml:space="preserve">
          <source>a working VFS implementation.</source>
          <target state="translated">работающая VFS реализация.</target>
        </trans-unit>
        <trans-unit id="b66efa612eeb7d14f8d4f699c7f42ef4efb2b728" translate="yes" xml:space="preserve">
          <source>a working memory allocation subsystem (assuming it lacks malloc() in its standard library), and</source>
          <target state="translated">подсистему выделения рабочей памяти (предполагая,что в ее стандартной библиотеке отсутствует malloc()),и</target>
        </trans-unit>
        <trans-unit id="f0125a8f48ac7cbf3a0fa6f9e607bcb1e7c92c25" translate="yes" xml:space="preserve">
          <source>a working mutex subsystem (but only if it is multithreaded),</source>
          <target state="translated">работающая подсистема мьютекса (но только если она многопоточная),</target>
        </trans-unit>
        <trans-unit id="2708db21dcd7430a52e6469ee28e1cfe107f6d3c" translate="yes" xml:space="preserve">
          <source>a&amp;gt;b &amp;amp;&amp;amp; c!=25</source>
          <target state="translated">a&amp;gt; b &amp;amp;&amp;amp; c! = 25</target>
        </trans-unit>
        <trans-unit id="4df530c1726c0c2dee72ae091abc6bd6366e8d88" translate="yes" xml:space="preserve">
          <source>a&amp;gt;b &amp;amp;&amp;amp; c==25</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52869f9771a308e55286d56b7765c30b708737a" translate="yes" xml:space="preserve">
          <source>a&amp;gt;b &amp;amp;&amp;amp; c==25 =b&amp;gt;</source>
          <target state="translated">а&amp;gt; b &amp;amp;&amp;amp; c == 25 = b&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5ba16853ba475b847e9429658486a0e661f3bc0e" translate="yes" xml:space="preserve">
          <source>a&amp;lt;=b</source>
          <target state="translated">a&amp;lt;=b</target>
        </trans-unit>
        <trans-unit id="9e998d733fc47f01798c218ccb15b1375f8ca7c0" translate="yes" xml:space="preserve">
          <source>aAtomically releases the mutex and begins waiting for the asynchronous signal. When the signal arrives, continue.</source>
          <target state="translated">aAtomically освобождает мьютекс и начинает ждать асинхронного сигнала.Когда сигнал поступает,продолжайте.</target>
        </trans-unit>
        <trans-unit id="d068232ae7c98b60d3a07f78329a8f8cd2f26cec" translate="yes" xml:space="preserve">
          <source>aCksum</source>
          <target state="translated">aCksum</target>
        </trans-unit>
        <trans-unit id="a28254579c1920fcb23f28e750841b8ea01ece0f" translate="yes" xml:space="preserve">
          <source>aFrameCksum</source>
          <target state="translated">aFrameCksum</target>
        </trans-unit>
        <trans-unit id="8c9e7345f56d0515bc5b2a5a870c41d7b20d851a" translate="yes" xml:space="preserve">
          <source>aSalt</source>
          <target state="translated">aSalt</target>
        </trans-unit>
        <trans-unit id="b61646f016483b318b49a910668a966b6ce09ede" translate="yes" xml:space="preserve">
          <source>abort</source>
          <target state="translated">abort</target>
        </trans-unit>
        <trans-unit id="3e0d398e9ad5183bd74b0f22b3607f6d2d47ead6" translate="yes" xml:space="preserve">
          <source>abort() if X is false</source>
          <target state="translated">abort()if X is false</target>
        </trans-unit>
        <trans-unit id="c9f50c848be6913a38840cd508defd4c03582b92" translate="yes" xml:space="preserve">
          <source>abort() if X is true</source>
          <target state="translated">abort()if X is true</target>
        </trans-unit>
        <trans-unit id="f486f320564a8de306d258d39e1ac70a94dc6b0b" translate="yes" xml:space="preserve">
          <source>abs()</source>
          <target state="translated">abs()</target>
        </trans-unit>
        <trans-unit id="175250e2ace0eb1ce52a755c70fb5f1e848bdc1d" translate="yes" xml:space="preserve">
          <source>abs(X)</source>
          <target state="translated">abs(X)</target>
        </trans-unit>
        <trans-unit id="34eb4c4ef005207e8b8f916b9f1fffacccd6945e" translate="yes" xml:space="preserve">
          <source>action</source>
          <target state="translated">action</target>
        </trans-unit>
        <trans-unit id="e026c9e0723fb491279a1eff3c805402a81d6cd2" translate="yes" xml:space="preserve">
          <source>ad hoc</source>
          <target state="translated">в отдельном случае</target>
        </trans-unit>
        <trans-unit id="3cfcd3a79bc61923da5dfbb696d2409e4b2955e4" translate="yes" xml:space="preserve">
          <source>added to the journal file since the header was written.</source>
          <target state="translated">добавлен в файл журнала с момента написания заголовка.</target>
        </trans-unit>
        <trans-unit id="e62854369199d65b6a66cd90fe8203ac4d5be26c" translate="yes" xml:space="preserve">
          <source>advanced</source>
          <target state="translated">advanced</target>
        </trans-unit>
        <trans-unit id="9fca44c2ac1801310ef43bc3ad99ef04caf5190c" translate="yes" xml:space="preserve">
          <source>against the next row in the partition. Or, if there is no next row (because the current row is the last), NULL.</source>
          <target state="translated">к следующей строке раздела.Или,если нет следующей строки (потому что текущая строка-последняя),NULL.</target>
        </trans-unit>
        <trans-unit id="fc7e290f7ebb032393569e65485ec8d9e70de97a" translate="yes" xml:space="preserve">
          <source>against the previous row in the partition. Or, if there is no previous row (because the current row is the first), NULL.</source>
          <target state="translated">против предыдущего ряда в разделе.Или,если нет предыдущей строки (потому что текущая строка является первой),NULL.</target>
        </trans-unit>
        <trans-unit id="deb7d98201c161da24f10c309ec91b3c307e1924" translate="yes" xml:space="preserve">
          <source>against the row</source>
          <target state="translated">в ряд</target>
        </trans-unit>
        <trans-unit id="bccf7370fc6bc7e65ebb00bcd447b407dc6e3ec1" translate="yes" xml:space="preserve">
          <source>aggregate functions</source>
          <target state="translated">совокупные функции</target>
        </trans-unit>
        <trans-unit id="c0b3f3a802faf343304cca8929b77fc1f241297f" translate="yes" xml:space="preserve">
          <source>aggregate-function-invocation</source>
          <target state="translated">aggregate-function-invocation</target>
        </trans-unit>
        <trans-unit id="17422272e67559a3f7043ba681f79c857b96e811" translate="yes" xml:space="preserve">
          <source>aggregate-function-invocation:</source>
          <target state="translated">aggregate-function-invocation:</target>
        </trans-unit>
        <trans-unit id="0ce6198cbd869f28abe7f6b1573ce0dca8a6170f" translate="yes" xml:space="preserve">
          <source>aligned offset. If the</source>
          <target state="translated">выровненное смещение.Если</target>
        </trans-unit>
        <trans-unit id="82f012d8e89e96e64b5b43b4004cf3ddd68b00da" translate="yes" xml:space="preserve">
          <source>aligned offset. To achieve this, unused space may be left between the start of the second and subsequent</source>
          <target state="translated">выровненное смещение.Для этого можно оставить неиспользованное пространство между началом второго и последующими</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="e5a003eeac959723c3ac098ade590d12e2399fce" translate="yes" xml:space="preserve">
          <source>all compound operators must be UNION ALL, and</source>
          <target state="translated">все операторы комплекса должны быть ВСЕМ ЮНИОНОМ,и</target>
        </trans-unit>
        <trans-unit id="00c64f4edd51735ee4805d2cd8ebddb9e26e5786" translate="yes" xml:space="preserve">
          <source>along with a check-sum and some well known values that allow the</source>
          <target state="translated">наряду с контрольной суммой и некоторыми известными значениями,позволяющими</target>
        </trans-unit>
        <trans-unit id="4279d9254704eb29ea44fb0e50a8ddb988cb2a74" translate="yes" xml:space="preserve">
          <source>alter-table-stmt</source>
          <target state="translated">alter-table-stmt</target>
        </trans-unit>
        <trans-unit id="c11a9c425781e80397705cfadef04d01cc8571d9" translate="yes" xml:space="preserve">
          <source>alter-table-stmt:</source>
          <target state="translated">alter-table-stmt:</target>
        </trans-unit>
        <trans-unit id="c3869211fefbf6b6e81eafcd0da03d8e0475ead7" translate="yes" xml:space="preserve">
          <source>always contain NULL values. For detail=none FTS5 tables, there is one row in the fts5vocab table for each unique term/doc combination.</source>
          <target state="translated">всегда содержат NULL-значения.Для таблиц FTS5 Detail=none в таблице fts5vocab имеется одна строка для каждой уникальной комбинации терминов/документов.</target>
        </trans-unit>
        <trans-unit id="78cf975130f01cdd3fb405501316e890ca5febeb" translate="yes" xml:space="preserve">
          <source>always false</source>
          <target state="translated">всегда ложный</target>
        </trans-unit>
        <trans-unit id="6cef04a132263fde51363b40fa3650c95beaa2e8" translate="yes" xml:space="preserve">
          <source>always occurs immediately after</source>
          <target state="translated">всегда происходит сразу после</target>
        </trans-unit>
        <trans-unit id="8d366ac66fb75ef6f601b4c82844cb7dabd40b61" translate="yes" xml:space="preserve">
          <source>always true</source>
          <target state="translated">всегда верно</target>
        </trans-unit>
        <trans-unit id="99d26625ec46b669549bed203aadeeb8e64a4713" translate="yes" xml:space="preserve">
          <source>an operating system crash, or</source>
          <target state="translated">сбой операционной системы,или</target>
        </trans-unit>
        <trans-unit id="e8db58b357be34c74707754f9ca1081a83143c52" translate="yes" xml:space="preserve">
          <source>analysis_limit</source>
          <target state="translated">analysis_limit</target>
        </trans-unit>
        <trans-unit id="1350a1a764c20c868eadef7c58ee7702c2de5903" translate="yes" xml:space="preserve">
          <source>analyze-stmt</source>
          <target state="translated">analyze-stmt</target>
        </trans-unit>
        <trans-unit id="09eeed07e3a7b9306cc98d6241ef6473440a058c" translate="yes" xml:space="preserve">
          <source>analyze-stmt:</source>
          <target state="translated">analyze-stmt:</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="c6138c4ccbaf04ec977b0820c3026e263f957c37" translate="yes" xml:space="preserve">
          <source>and close the file handle opened on the</source>
          <target state="translated">и закройте файловую рукоятку,открытую на</target>
        </trans-unit>
        <trans-unit id="6a33f8ae1b5e041f1c572480c32c63e5cf451da7" translate="yes" xml:space="preserve">
          <source>and delete the</source>
          <target state="translated">и удалить</target>
        </trans-unit>
        <trans-unit id="b548e44c6b3e17d130e04633195b82b65a7a2d94" translate="yes" xml:space="preserve">
          <source>and must not be rolled back.</source>
          <target state="translated">и не должны откатываться.</target>
        </trans-unit>
        <trans-unit id="9daed09ae8efcee7e50da2fbe84487fe3eebb5b9" translate="yes" xml:space="preserve">
          <source>and optionally a</source>
          <target state="translated">и по желанию</target>
        </trans-unit>
        <trans-unit id="52d79db62a2014940054db6b52cb55b0ffc7318b" translate="yes" xml:space="preserve">
          <source>and query</source>
          <target state="translated">и спрашивать</target>
        </trans-unit>
        <trans-unit id="95a8e5d9020987b9a76b684159376ad45fec7409" translate="yes" xml:space="preserve">
          <source>and read data from a database file.</source>
          <target state="translated">и читать данные из файла базы данных.</target>
        </trans-unit>
        <trans-unit id="8b160fc621bf3b69e2326873b90cc01b0f9a0064" translate="yes" xml:space="preserve">
          <source>and so on. There is no limit to the number of</source>
          <target state="translated">и так далее.Нет никаких ограничений на количество</target>
        </trans-unit>
        <trans-unit id="38d402cb5ba5ced669d83f33b900f232ec58d72a" translate="yes" xml:space="preserve">
          <source>and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b8b92104263669b82872f84cf196bc98a98eb5" translate="yes" xml:space="preserve">
          <source>and the UPDATE statement has an ORDER BY clause, then all rows that would be updated in the absence of the LIMIT clause are sorted according to the ORDER BY and the first</source>
          <target state="translated">и утверждение UPDATE имеет пункт ЗАКАЗАТЬ ПО ЗАКАЗЧИКУ,тогда все строки,которые были бы обновлены при отсутствии пункта ОГРАНИЧЕНИЕ,сортируются в соответствии с пунктом ЗАКАЗЧИКА ПО ЗАКАЗЧИКУ и первой строкой</target>
        </trans-unit>
        <trans-unit id="05afb116d83a9696122e3d48be2ae0cf378a78fa" translate="yes" xml:space="preserve">
          <source>and the attempt to gain the</source>
          <target state="translated">и попытка заполучить</target>
        </trans-unit>
        <trans-unit id="968ca042b5e705040bbdcde637032bd9d2191fa8" translate="yes" xml:space="preserve">
          <source>and the conflict resolution is REPLACE, then the INSERT change is removed from the local changeset (it was overridden). Or, if the conflict resolution was &quot;OMIT&quot;, then the local changeset is modified to instead contain:</source>
          <target state="translated">и разрешение конфликта-REPLACE,тогда изменение INSERT удаляется из локального changeset (оно было переопределено).Или,если разрешение конфликта было &quot;OMIT&quot;,то вместо этого локальный changeset изменяется,чтобы содержать:</target>
        </trans-unit>
        <trans-unit id="46ef05dae314b8dc0b295ce6a15936ec49d9c864" translate="yes" xml:space="preserve">
          <source>and the document:</source>
          <target state="translated">и документ:</target>
        </trans-unit>
        <trans-unit id="774d2fc3c7699ba3973db3b85b93a125fa1ced04" translate="yes" xml:space="preserve">
          <source>and the end of the</source>
          <target state="translated">и конец</target>
        </trans-unit>
        <trans-unit id="fb25e092bff28e2eaa8cec1baf32904bb2e25d70" translate="yes" xml:space="preserve">
          <source>and the following statement to be compiled:</source>
          <target state="translated">и следующее заявление,которое должно быть составлено:</target>
        </trans-unit>
        <trans-unit id="0fc5d26e62acc1fc0ed886776026281e0524d63b" translate="yes" xml:space="preserve">
          <source>and the start of the</source>
          <target state="translated">и начало</target>
        </trans-unit>
        <trans-unit id="27af5c77771c98d19d67acedd038a87f8e2d9d7c" translate="yes" xml:space="preserve">
          <source>and the user queries the swarmvtab table for the row with rowid value 25. The swarmvtab table will open database file &quot;test.db3&quot; and read the data to return from table &quot;t1&quot; (as 25 falls within the range of rowids assigned to table &quot;t1&quot; in &quot;test.db3&quot;).</source>
          <target state="translated">и пользователь запрашивает таблицу swarmvtab для строки со значением 25.Таблица swarmvtab откроет файл базы данных &quot;test.db3&quot; и прочитает данные,возвращаемые из таблицы &quot;t1&quot; (так как 25 попадает в диапазон ряд рядков,назначенных таблице &quot;t1&quot; в &quot;test.db3&quot;).</target>
        </trans-unit>
        <trans-unit id="de0be95e333d30a19f869ffbb56d16bebe7fe727" translate="yes" xml:space="preserve">
          <source>and the value of every 200th byte of page data interpreted as an 8-bit unsigned integer, starting with the (</source>
          <target state="translated">и значение каждого 200-го байта данных страницы,интерпретируемого как 8-битное беззнаковое целое число,начинающееся с (</target>
        </trans-unit>
        <trans-unit id="16e461131871bd88245e8305df882aa6184b6089" translate="yes" xml:space="preserve">
          <source>and their accompanying sets of</source>
          <target state="translated">и сопровождающие их комплекты</target>
        </trans-unit>
        <trans-unit id="f26fbdb7a04f5b991f74b3d08c9ab8e827a0dee5" translate="yes" xml:space="preserve">
          <source>and write data to a database file.</source>
          <target state="translated">и записать данные в файл базы данных.</target>
        </trans-unit>
        <trans-unit id="b766070cd38845876a6730a003cdf53665805c86" translate="yes" xml:space="preserve">
          <source>any file within the file system flushes all write operations on all files (not just the</source>
          <target state="translated">любой файл внутри файловой системы промывает все операции записи над всеми файлами (а не только над</target>
        </trans-unit>
        <trans-unit id="86ebc97823e01049b3c5c82c964e3321c30d3460" translate="yes" xml:space="preserve">
          <source>any terms that begin with a specified prefix,</source>
          <target state="translated">любые условия,которые начинаются с указанного префикса,</target>
        </trans-unit>
        <trans-unit id="20446ce193d349d88c1cb603fe2bfda6dd0fed46" translate="yes" xml:space="preserve">
          <source>appears to be an atomic event.</source>
          <target state="translated">похоже на атомное событие.</target>
        </trans-unit>
        <trans-unit id="c0fabcb2564734cccb39fbb1003542faa693274f" translate="yes" xml:space="preserve">
          <source>append a new database page to the database file image, or</source>
          <target state="translated">добавить новую страницу базы данных к изображению файла базы данных,или</target>
        </trans-unit>
        <trans-unit id="569e0c3e863ebdf5f2408ee1670ad397e2af3c31" translate="yes" xml:space="preserve">
          <source>application_id</source>
          <target state="translated">application_id</target>
        </trans-unit>
        <trans-unit id="bc7b492ad938673fdc3f7dd2d39d9a5b1a1313c5" translate="yes" xml:space="preserve">
          <source>are &lt;b&gt;atomic&lt;/b&gt; is the most complex task required of the system. In this case,</source>
          <target state="translated">являются &lt;b&gt;атомарными&lt;/b&gt; - это самая сложная задача, которая требуется от системы. В таком случае,</target>
        </trans-unit>
        <trans-unit id="1657250024276d885f227f57c87321ab8a021f1e" translate="yes" xml:space="preserve">
          <source>are &lt;b&gt;durable&lt;/b&gt; in the face of a system failure, SQLite executes a</source>
          <target state="translated">являются &lt;b&gt;прочным&lt;/b&gt; в условиях отказа системы, SQLite выполняет</target>
        </trans-unit>
        <trans-unit id="97b47e4a3bed52672d52be489b68d62ee41fad83" translate="yes" xml:space="preserve">
          <source>are &lt;b&gt;isolated&lt;/b&gt;, before beginning to modify the contents of the database file to reflect the results of a</source>
          <target state="translated">которые &lt;b&gt;изолированы&lt;/b&gt; , прежде чем начать изменять содержимое файла базы данных , чтобы отразить результаты</target>
        </trans-unit>
        <trans-unit id="d8439b6ce689a8c1e42407d9870989374b7c1510" translate="yes" xml:space="preserve">
          <source>are all fine. The foreign key declared as part of table</source>
          <target state="translated">все в порядке.Иностранный ключ,задекларированный как часть таблицы</target>
        </trans-unit>
        <trans-unit id="1e602c1c2b5b75b949e9cd5732b604bdf14a97ae" translate="yes" xml:space="preserve">
          <source>are applied.</source>
          <target state="translated">применяются.</target>
        </trans-unit>
        <trans-unit id="217be370382a434301582c976f897b265d972297" translate="yes" xml:space="preserve">
          <source>are both constants, hard-coded at 1.2 and 0.75 respectively.</source>
          <target state="translated">оба являются константами,жестко закодированными в 1,2 и 0,75 соответственно.</target>
        </trans-unit>
        <trans-unit id="5c5a9818b19a4b00ee0b8d0543823ea9e90ed349" translate="yes" xml:space="preserve">
          <source>are classified as</source>
          <target state="translated">классифицируются как</target>
        </trans-unit>
        <trans-unit id="fe49db12f15f82e75e942f6d889de7f32b595b1e" translate="yes" xml:space="preserve">
          <source>are described in section</source>
          <target state="translated">описаны в разделе</target>
        </trans-unit>
        <trans-unit id="d9868f8597c61b1ec862d65ac194313a82ff33e9" translate="yes" xml:space="preserve">
          <source>are discarded.</source>
          <target state="translated">отбрасываются.</target>
        </trans-unit>
        <trans-unit id="c1303bf9b23fa993372873daa9b7ea324578fa5d" translate="yes" xml:space="preserve">
          <source>are dropped. The attempt to open a</source>
          <target state="translated">упали.Попытка открыть</target>
        </trans-unit>
        <trans-unit id="a2bce1e40b1ed85dc481f9c24e7ffa6872de95f7" translate="yes" xml:space="preserve">
          <source>are grown in California.</source>
          <target state="translated">выращиваются в Калифорнии.</target>
        </trans-unit>
        <trans-unit id="9d155a5185e3cda84305465a842e6c4420169801" translate="yes" xml:space="preserve">
          <source>are identical. Or, put another way, a single</source>
          <target state="translated">идентичны.Или,скажем по-другому,один</target>
        </trans-unit>
        <trans-unit id="4fd31fe193d5c959719f17d3db3b0cd9c1b5f19d" translate="yes" xml:space="preserve">
          <source>are incorrect because while both have UNIQUE indices on their parent keys, the keys are not an exact match to the columns of a single UNIQUE index.</source>
          <target state="translated">некорректны,потому что,хотя оба ключа имеют индексы UNIQUE на своих родительских ключах,ключи не точно совпадают со столбцами одного UNIQUE-индекса.</target>
        </trans-unit>
        <trans-unit id="5c0d85c5a56931f6432e3d141957769ba960f53d" translate="yes" xml:space="preserve">
          <source>are packed tightly together. There are no alignment requirements for</source>
          <target state="translated">плотно упакованы.Нет никаких требований к выравниванию</target>
        </trans-unit>
        <trans-unit id="d7f81a07a9a83f43b53ff73819723e1c26ec837b" translate="yes" xml:space="preserve">
          <source>are particularly important. If these assumptions are not true, then a power or operating system failure may cause SQLite databases to become corrupted.</source>
          <target state="translated">особенно важны.Если эти предположения не верны,то сбой питания или отказ операционной системы может привести к повреждению баз данных SQLite.</target>
        </trans-unit>
        <trans-unit id="6cf3bee46bfd1f242d16fff62f2b9a14cf70138d" translate="yes" xml:space="preserve">
          <source>are positioned in the file so that they start at a</source>
          <target state="translated">расположены в файле так,чтобы они начинались с</target>
        </trans-unit>
        <trans-unit id="bfa48dc98376740870b25e19451a47213230d195" translate="yes" xml:space="preserve">
          <source>are purged (discarded).</source>
          <target state="translated">очищены (выброшены).</target>
        </trans-unit>
        <trans-unit id="a440e3408af7307e31fc66291235a85bad624897" translate="yes" xml:space="preserve">
          <source>are quite complex. The steps that SQLite is required to take to open a</source>
          <target state="translated">довольно сложные.Шаги,которые SQLite должен сделать,чтобы открыть</target>
        </trans-unit>
        <trans-unit id="daeb4c5c4f2dac4a6897c8ba350f1ce4c097dde5" translate="yes" xml:space="preserve">
          <source>are sufficiently isolated from the transactions of other database users (see section</source>
          <target state="translated">достаточно изолированы от транзакций других пользователей БД (см.раздел</target>
        </trans-unit>
        <trans-unit id="07e0bd9bb4ba0d545014e6f16c07262a6d6b9864" translate="yes" xml:space="preserve">
          <source>are those options normally passed to the configure script, if any.</source>
          <target state="translated">это те опции,которые обычно передаются в сценарий конфигурации,если таковые имеются.</target>
        </trans-unit>
        <trans-unit id="7c25fdca2c3aa289e41481922055f2b28711da95" translate="yes" xml:space="preserve">
          <source>are used, the remainder may contain garbage data. The first 28 bytes of each</source>
          <target state="translated">используются,остальные могут содержать мусорные данные.Первые 28 байт каждого</target>
        </trans-unit>
        <trans-unit id="a289de0277b278828dfd1a26add41e28906a93ed" translate="yes" xml:space="preserve">
          <source>are valid or not using the</source>
          <target state="translated">действительны или недействительны при использовании</target>
        </trans-unit>
        <trans-unit id="71d46f935a72440be8339087602bebf9f250933e" translate="yes" xml:space="preserve">
          <source>are valid, then SQLite shall discard all entries associated with the current</source>
          <target state="translated">являются действительными,тогда SQLite отбросит все записи,связанные с текущим</target>
        </trans-unit>
        <trans-unit id="da7228e374c9c5c17ac8a45e24698a76423635ad" translate="yes" xml:space="preserve">
          <source>argc</source>
          <target state="translated">argc</target>
        </trans-unit>
        <trans-unit id="5d92c6f89d26d7ee5886ffdbb990bf11dc3c760a" translate="yes" xml:space="preserve">
          <source>argument come directly from the result of another json1 function, then the argument is understood to be actual JSON and the complete JSON is inserted rather than a quoted string.</source>
          <target state="translated">аргумент поступает непосредственно из результата другой функции json1,тогда аргумент понимается как действительный JSON и вставляется полный JSON,а не цитируемая строка.</target>
        </trans-unit>
        <trans-unit id="d886455901406cb7606dfd3639a415aab8577518" translate="yes" xml:space="preserve">
          <source>argument identifies which attached database should receive the deserialization. The default is &quot;main&quot;.</source>
          <target state="translated">аргумент определяет,какая из подключенных БД должна получить десериализацию.По умолчанию-&quot;главная&quot;.</target>
        </trans-unit>
        <trans-unit id="ea0b68a2cda4bd27648b1fcdf5f33057948d66a2" translate="yes" xml:space="preserve">
          <source>argument in the outer json_object() call is the result of another json1 function like &lt;a href=&quot;json1#jmini&quot;&gt;json()&lt;/a&gt; or &lt;a href=&quot;json1#jarray&quot;&gt;json_array()&lt;/a&gt;, then the value is understood to be actual JSON and is inserted as such:</source>
          <target state="translated">аргумент во внешнем вызове json_object () является результатом другой функции json1, такой как &lt;a href=&quot;json1#jmini&quot;&gt;json ()&lt;/a&gt; или &lt;a href=&quot;json1#jarray&quot;&gt;json_array ()&lt;/a&gt; , тогда значение понимается как фактический JSON и вставляется как таковое:</target>
        </trans-unit>
        <trans-unit id="23159510d3caa0aacf1fcee181075b39398a8f95" translate="yes" xml:space="preserve">
          <source>argument is an empty string, any previously registered profile callback is canceled but no new profile script is registered.</source>
          <target state="translated">аргумент-пустая строка,любой ранее зарегистрированный обратный вызов профиля отменяется,но новый скрипт профиля не регистрируется.</target>
        </trans-unit>
        <trans-unit id="273ef266e5c047000e717842d8f7a209545d8280" translate="yes" xml:space="preserve">
          <source>argument is omitted, the first line of the CSV file is read to determine the number of columns.</source>
          <target state="translated">аргумент опускается,считывается первая строка CSV-файла для определения количества столбцов.</target>
        </trans-unit>
        <trans-unit id="060b9a420ed091edb7527e85e3950a5d883881ad" translate="yes" xml:space="preserve">
          <source>argument is provided, then it must be a non-negative integer. In this case the value returned is the result of evaluating</source>
          <target state="translated">Если предоставлен аргумент,то он должен быть неотрицательным целым числом.В этом случае возвращаемое значение является результатом оценки</target>
        </trans-unit>
        <trans-unit id="f83bc677ca234bf42b96c3c3f9d3527a0757a18e" translate="yes" xml:space="preserve">
          <source>argument looks like a well-formed JSON array. However, because it is just ordinary SQL text, it is interpreted as a literal string and added to the result as a quoted string:</source>
          <target state="translated">аргумент выглядит как хорошо сформированный JSON массив.Однако,поскольку это обычный SQL-текст,он интерпретируется как литеральная строка и добавляется в результат как строка в кавычках:</target>
        </trans-unit>
        <trans-unit id="e911e4bf472a10a51811a847112d7abcbdae3166" translate="yes" xml:space="preserve">
          <source>argument should be an integer 0, 1, 2, or 3.</source>
          <target state="translated">аргумент должен быть целым числом 0,1,2 или 3.</target>
        </trans-unit>
        <trans-unit id="f4ad0c15d2723741d10a469739d4a793a8f48305" translate="yes" xml:space="preserve">
          <source>argument specifies the number of columns in the CSV file. If the input data contains more columns than this, then the excess columns are ignored. If the input data contains fewer columns, then extra columns are filled with NULL. If the &lt;b&gt;columns=&lt;/b&gt;</source>
          <target state="translated">аргумент указывает количество столбцов в файле CSV. Если входные данные содержат больше столбцов, чем это, то лишние столбцы игнорируются. Если входные данные содержат меньше столбцов, то дополнительные столбцы заполняются NULL. Если &lt;b&gt;столбцы =&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="c4f37cbcd2e6f2a76b8ac2079605175aba509a3a" translate="yes" xml:space="preserve">
          <source>argument tells which database in the current connection should be backed up. The default value is &lt;b&gt;main&lt;/b&gt; (or, in other words, the primary database file). To back up TEMP tables use &lt;b&gt;temp&lt;/b&gt;. To backup an auxiliary database added to the connection using the &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; command, use the name of that database as it was assigned in the &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; command.</source>
          <target state="translated">аргумент указывает, какая база данных в текущем соединении должна быть скопирована. Значение по умолчанию - &lt;b&gt;main&lt;/b&gt; (или, другими словами, первичный файл базы данных). Для резервного копирования таблиц TEMP используйте &lt;b&gt;temp&lt;/b&gt; . Для резервного копирования вспомогательной базы данных, добавленной к соединению с помощью команды &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; , используйте имя этой базы данных, как оно было назначено в &lt;a href=&quot;lang_attach&quot;&gt;команде ATTACH&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ec07a3c9cffc1292aefd2ca5ec0a6403e9263421" translate="yes" xml:space="preserve">
          <source>argument tells which database in the current connection should be overwritten with new content. The default value is &lt;b&gt;main&lt;/b&gt; (or, in other words, the primary database file). To repopulate the TEMP tables use &lt;b&gt;temp&lt;/b&gt;. To overwrite an auxiliary database added to the connection using the &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; command, use the name of that database as it was assigned in the &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; command.</source>
          <target state="translated">аргумент указывает, какая база данных в текущем соединении должна быть перезаписана новым содержимым. Значение по умолчанию - &lt;b&gt;main&lt;/b&gt; (или, другими словами, первичный файл базы данных). Чтобы повторно заполнить таблицы TEMP, используйте &lt;b&gt;temp&lt;/b&gt; . Чтобы перезаписать вспомогательную базу данных, добавленную к соединению с помощью команды &lt;a href=&quot;lang_attach&quot;&gt;ATTACH&lt;/a&gt; , используйте имя этой базы данных, как оно было присвоено в &lt;a href=&quot;lang_attach&quot;&gt;команде ATTACH&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2f3980a6d937b5bcd59ecc59e0432bc69ca89982" translate="yes" xml:space="preserve">
          <source>argument with the FTS5_TOKEN_COLOCATED bit is considered to supply a synonym for the previous token. For example, when parsing the document &quot;I won first place&quot;, a tokenizer that supports synonyms would call xToken() 5 times, as follows:</source>
          <target state="translated">аргумент с битом FTS5_TOKEN_COLOCATED считается синонимом предыдущего токена.Например,при разборе документа &quot;Я занял первое место&quot; токенщик,поддерживающий синонимы,будет вызывать xToken()5 раз,как показано ниже:</target>
        </trans-unit>
        <trans-unit id="963fa4dabfe29314f060b15cc897930cac26315d" translate="yes" xml:space="preserve">
          <source>argument, which should be a TCL-list of zero or more of the following keywords:</source>
          <target state="translated">аргумент,который должен быть TCL-списком нуля или более из следующих ключевых слов:</target>
        </trans-unit>
        <trans-unit id="2bd9134a232ba53c95da07d37d8c5ce250a2b918" translate="yes" xml:space="preserve">
          <source>arrayindex</source>
          <target state="translated">arrayindex</target>
        </trans-unit>
        <trans-unit id="55051f2531bda4eff298ad9d96f0ed042080a652" translate="yes" xml:space="preserve">
          <source>artist</source>
          <target state="translated">artist</target>
        </trans-unit>
        <trans-unit id="e0988fceb202c02b2e9a3b6100ec27bf70bc4c75" translate="yes" xml:space="preserve">
          <source>artistid</source>
          <target state="translated">artistid</target>
        </trans-unit>
        <trans-unit id="785f416f72b43337212d37b3822fb8b7bd6a531c" translate="yes" xml:space="preserve">
          <source>as it is written in the CREATE INDEX statement. The query planner does not do algebra. In order to match WHERE clause constraints and ORDER BY terms to indexes, SQLite requires that the expressions be the same, except for minor syntactic differences such as white-space changes. So if you have:</source>
          <target state="translated">как написано в заявлении CREATE INDEX.Планировщик запросов не занимается алгеброй.Чтобы соответствовать ограничениям на выражения WHERE и ORDER BY для индексов,SQLite требует,чтобы выражения были одинаковыми,за исключением незначительных синтаксических различий,таких как изменения в белом пространстве.Так что,если это так:</target>
        </trans-unit>
        <trans-unit id="c5e69516257a9e3cf2accc833c7e8d9f9c2e2de1" translate="yes" xml:space="preserve">
          <source>as page 1.</source>
          <target state="translated">в качестве страницы 1.</target>
        </trans-unit>
        <trans-unit id="96b397a059f93cde646513eb35da8a2a22662ad1" translate="yes" xml:space="preserve">
          <source>as part of a write transaction, SQLite shall first attempt to obtain a</source>
          <target state="translated">в рамках транзакции записи SQLite должен сначала попытаться получить</target>
        </trans-unit>
        <trans-unit id="daaeacc8050366c4aae8589a50927428fd66e190" translate="yes" xml:space="preserve">
          <source>as part of a write transaction, after successfully obtaining a</source>
          <target state="translated">в рамках сделки на запись,после успешного получения</target>
        </trans-unit>
        <trans-unit id="11225bee6cc1614ea36af280f35f84835827baa2" translate="yes" xml:space="preserve">
          <source>as part of incrementing the</source>
          <target state="translated">в рамках увеличения</target>
        </trans-unit>
        <trans-unit id="ffb12bcae4ed06d63e26ac23d30f480ec2ef3c66" translate="yes" xml:space="preserve">
          <source>as part of opening a</source>
          <target state="translated">в рамках открытия</target>
        </trans-unit>
        <trans-unit id="7e9c9c1ac897ed646e7eda69e4d4589f6c7fa429" translate="yes" xml:space="preserve">
          <source>as required by H35640, SQLite shall append a new</source>
          <target state="translated">в соответствии с требованиями H35640,SQLite добавит новый</target>
        </trans-unit>
        <trans-unit id="02f6ac08199d7ecd2abf150493c2025ff28f5cbb" translate="yes" xml:space="preserve">
          <source>as required by H35760, SQLite shall invoke the xSync method of the file handle open on the</source>
          <target state="translated">в соответствии с требованиями H35760,SQLite должен вызывать метод xSync файлового дескриптора,открытого на</target>
        </trans-unit>
        <trans-unit id="111be48474e33f58ce79332a61c4103948bfef77" translate="yes" xml:space="preserve">
          <source>as required by H35810 and ensuring that an</source>
          <target state="translated">в соответствии с требованиями H35810 и обеспечения того,чтобы</target>
        </trans-unit>
        <trans-unit id="7b9d9bbd9dedc8dbb2ac6f6b6d982f7575edbe2b" translate="yes" xml:space="preserve">
          <source>as required by H35810, if an</source>
          <target state="translated">как того требует H35810,если</target>
        </trans-unit>
        <trans-unit id="2babe170d30065ef26a731e2754e0d1aab9fcc00" translate="yes" xml:space="preserve">
          <source>as required by H35850, SQLite shall relinquish all locks held on the</source>
          <target state="translated">в соответствии с требованиями H35850,SQLite отказывается от всех замков,удерживаемых на</target>
        </trans-unit>
        <trans-unit id="ad87646ddd8aa1deddf9c8f195501b2c6d1dc651" translate="yes" xml:space="preserve">
          <source>as required.</source>
          <target state="translated">по мере необходимости.</target>
        </trans-unit>
        <trans-unit id="de7dfc3de5ebc9818041e3d04e02b36fb9606e63" translate="yes" xml:space="preserve">
          <source>as there are for</source>
          <target state="translated">в связи с чем</target>
        </trans-unit>
        <trans-unit id="51c066b36ea8b32076964c766f8a0324ca4eb4b9" translate="yes" xml:space="preserve">
          <source>ascii</source>
          <target state="translated">ascii</target>
        </trans-unit>
        <trans-unit id="08002c04f216d53dda2e50a871e0cfd43697e273" translate="yes" xml:space="preserve">
          <source>assert(X)</source>
          <target state="translated">assert(X)</target>
        </trans-unit>
        <trans-unit id="13eadea2fe55c99a19ba9cdb8d85771e4516a268" translate="yes" xml:space="preserve">
          <source>associated with the page.</source>
          <target state="translated">связанный со страницей.</target>
        </trans-unit>
        <trans-unit id="0aa642bfa8102378466199478a4e454287652f61" translate="yes" xml:space="preserve">
          <source>associated with the previous header.</source>
          <target state="translated">связанный с предыдущим заголовком.</target>
        </trans-unit>
        <trans-unit id="a0a574f51525ae868d900c88660c6ed28e8c9d54" translate="yes" xml:space="preserve">
          <source>associated with the same database file.</source>
          <target state="translated">связанный с тем же файлом базы данных.</target>
        </trans-unit>
        <trans-unit id="ba79d25657cf064ee02a3b982dcd322d0bf18345" translate="yes" xml:space="preserve">
          <source>at a point when a</source>
          <target state="translated">в момент,когда</target>
        </trans-unit>
        <trans-unit id="ee0c820ccff1c49b454575b24a6e07feae42e08c" translate="yes" xml:space="preserve">
          <source>at any point. In this case, the contents of the file-system (the</source>
          <target state="translated">в любой момент.В этом случае,содержимое файловой системы (the</target>
        </trans-unit>
        <trans-unit id="4e91475d3fae49d1a8a60862b1dbc2d921e7d999" translate="yes" xml:space="preserve">
          <source>atomic</source>
          <target state="translated">atomic</target>
        </trans-unit>
        <trans-unit id="1b09211f8fe50df88698984f90cbd3a47721aa47" translate="yes" xml:space="preserve">
          <source>atomic-write</source>
          <target state="translated">atomic-write</target>
        </trans-unit>
        <trans-unit id="9988a3a119ba2080cdf900087912e16362d27b1b" translate="yes" xml:space="preserve">
          <source>attach-stmt</source>
          <target state="translated">attach-stmt</target>
        </trans-unit>
        <trans-unit id="7eff14d8645558a0f043e1f104525e2bc69817be" translate="yes" xml:space="preserve">
          <source>attach-stmt:</source>
          <target state="translated">attach-stmt:</target>
        </trans-unit>
        <trans-unit id="e376fb081874ae30d964036a5037a91297364184" translate="yes" xml:space="preserve">
          <source>authorizer</source>
          <target state="translated">authorizer</target>
        </trans-unit>
        <trans-unit id="a230f70503e84977197a408cef9778d465504d74" translate="yes" xml:space="preserve">
          <source>auto_vacuum</source>
          <target state="translated">auto_vacuum</target>
        </trans-unit>
        <trans-unit id="338c16317d294a49238eb78997c3b0e0530e04e8" translate="yes" xml:space="preserve">
          <source>automatic_index</source>
          <target state="translated">automatic_index</target>
        </trans-unit>
        <trans-unit id="b9aa33aadaebd05681ca7966a886c04f361d86e9" translate="yes" xml:space="preserve">
          <source>avg() aggregate function</source>
          <target state="translated">агрегатная функция avg()</target>
        </trans-unit>
        <trans-unit id="0a8e31b8320c93f5890155e637352cb5a24c85e4" translate="yes" xml:space="preserve">
          <source>avg(X)</source>
          <target state="translated">avg(X)</target>
        </trans-unit>
        <trans-unit id="3186e6ee65edf9c534049a9d2271ea8931098282" translate="yes" xml:space="preserve">
          <source>avgdl</source>
          <target state="translated">avgdl</target>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="89121dc99c7db9ce2553a093a2ab29e07f7df34f" translate="yes" xml:space="preserve">
          <source>backup</source>
          <target state="translated">backup</target>
        </trans-unit>
        <trans-unit id="e19689db225ed4f0c3882b404a9a6a09cbe4d68c" translate="yes" xml:space="preserve">
          <source>backup-filename</source>
          <target state="translated">backup-filename</target>
        </trans-unit>
        <trans-unit id="15f866e6dba174865b935a3a4ea1cc53154c4ea3" translate="yes" xml:space="preserve">
          <source>be the smallest string that is the same length as /x/ but which compares greater than</source>
          <target state="translated">быть самой маленькой строкой,которая имеет ту же длину,что и /x/,но которая сравнивается больше,чем</target>
        </trans-unit>
        <trans-unit id="2bfce03bc4ef6b106cae55fe0486480f823c8df8" translate="yes" xml:space="preserve">
          <source>before accessing any database tables or obtaining any other read or write locks.</source>
          <target state="translated">перед доступом к любым таблицам БД или получением любых других замков на чтение или запись.</target>
        </trans-unit>
        <trans-unit id="446424f2a60e339e342cb8c2529ad803d60e5895" translate="yes" xml:space="preserve">
          <source>before it is invoked: the text of the SQL statement executed and the time elapsed while executing the statement, in nanoseconds.</source>
          <target state="translated">перед его вызовом:текст выполненного SQL-оператора и время,прошедшее во время выполнения оператора,в наносекундах.</target>
        </trans-unit>
        <trans-unit id="d196026ac67221dbee8deaca74c1cc7e4940929b" translate="yes" xml:space="preserve">
          <source>before it may actually modify the contents of the database file, and by definition while one connection is holding a</source>
          <target state="translated">до того,как он может на самом деле изменить содержимое файла базы данных,и,по определению,в то время,как одно из подключений держит</target>
        </trans-unit>
        <trans-unit id="21e2a06acab0dfd138658efa2abbba4993e334fb" translate="yes" xml:space="preserve">
          <source>before proceeding with the write operation required by H35670.</source>
          <target state="translated">перед выполнением операции записи,требуемой H35670.</target>
        </trans-unit>
        <trans-unit id="61f8e5f2691566275e9176e0a81b08ea5e1112fc" translate="yes" xml:space="preserve">
          <source>before the page is even modified within the</source>
          <target state="translated">еще до того,как страница будет изменена в</target>
        </trans-unit>
        <trans-unit id="dc36077b3367eaa2c0566cfb42113d421b5b43b5" translate="yes" xml:space="preserve">
          <source>began.</source>
          <target state="translated">began.</target>
        </trans-unit>
        <trans-unit id="c9e02932e7e6cfb0de8b7c1db8153f25b6fee147" translate="yes" xml:space="preserve">
          <source>begin-stmt</source>
          <target state="translated">begin-stmt</target>
        </trans-unit>
        <trans-unit id="3730e391df79a30cdd56c8ac1dff36564a38b0b6" translate="yes" xml:space="preserve">
          <source>begin-stmt:</source>
          <target state="translated">begin-stmt:</target>
        </trans-unit>
        <trans-unit id="b967a98c7a0b05227bc82e0f3110176c3dbb820a" translate="yes" xml:space="preserve">
          <source>being removed from the</source>
          <target state="translated">удаляемый из</target>
        </trans-unit>
        <trans-unit id="dffc12c23225534050defb14ba6330fdc238d3f6" translate="yes" xml:space="preserve">
          <source>bigEndCksum</source>
          <target state="translated">bigEndCksum</target>
        </trans-unit>
        <trans-unit id="2064d975c431e5ce129b6a8a57ad581950988a0c" translate="yes" xml:space="preserve">
          <source>bind_fallback</source>
          <target state="translated">bind_fallback</target>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="translated">boolean</target>
        </trans-unit>
        <trans-unit id="258325514de1e3fd1a5ad698dc5867f063e3e5f3" translate="yes" xml:space="preserve">
          <source>boolean combinations of any of the above.</source>
          <target state="translated">булевые комбинации любого из вышеперечисленного.</target>
        </trans-unit>
        <trans-unit id="c7d8a6d722a1ec9a16fae165177c418d4fd63175" translate="yes" xml:space="preserve">
          <source>box</source>
          <target state="translated">box</target>
        </trans-unit>
        <trans-unit id="e10fd72a6384b6b8ba85864407685c77a967fd70" translate="yes" xml:space="preserve">
          <source>built-in memory allocators</source>
          <target state="translated">встроенные аллокаторы памяти</target>
        </trans-unit>
        <trans-unit id="52543db1d869799a105db99331ba713c007de71e" translate="yes" xml:space="preserve">
          <source>built-ins</source>
          <target state="translated">built-ins</target>
        </trans-unit>
        <trans-unit id="e18a89f9cc5b6b19f34147080e547d4e5e23b829" translate="yes" xml:space="preserve">
          <source>busy</source>
          <target state="translated">busy</target>
        </trans-unit>
        <trans-unit id="48dda88196210bdeac635c9baf43f23440df8b19" translate="yes" xml:space="preserve">
          <source>busy_timeout</source>
          <target state="translated">busy_timeout</target>
        </trans-unit>
        <trans-unit id="d589fe0692b8fa4547b4977ed9aa409118f25551" translate="yes" xml:space="preserve">
          <source>but there is a &lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt; table with that name, then (as of SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_30_0.html&quot;&gt;version 3.30.0&lt;/a&gt; on 2019-10-04) this pragma returns the PRIMARY KEY columns of the WITHOUT ROWID table as they are used in the records of the underlying b-tree, which is to say with duplicate columns removed.</source>
          <target state="translated">но есть таблица &lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt; с этим именем, тогда ( &lt;a href=&quot;https://sqlite.org/releaselog/3_30_0.html&quot;&gt;начиная с версии&lt;/a&gt; SQLite 3.30.0 от 2019-10-04) эта прагма возвращает столбцы PRIMARY KEY таблицы WITHOUT ROWID, поскольку они используются в записях базового b -дерево, то есть с удалением повторяющихся столбцов.</target>
        </trans-unit>
        <trans-unit id="ac3b569a0511f5b932b209519567e7f1479a00c1" translate="yes" xml:space="preserve">
          <source>but there is a &lt;a href=&quot;withoutrowid&quot;&gt;WITHOUT ROWID&lt;/a&gt; table with that name, then (as of SQLite &lt;a href=&quot;https://sqlite.org/releaselog/3_30_0.html&quot;&gt;version 3.30.0&lt;/a&gt; on 2019-10-04) this pragma returns the columns of the WITHOUT ROWID table as they are used in the records of the underlying b-tree, which is to say with de-duplicated PRIMARY KEY columns first followed by data columns.</source>
          <target state="translated">но есть таблица &lt;a href=&quot;withoutrowid&quot;&gt;БЕЗ ROWID&lt;/a&gt; с этим именем, тогда ( &lt;a href=&quot;https://sqlite.org/releaselog/3_30_0.html&quot;&gt;начиная с версии&lt;/a&gt; SQLite 3.30.0 от 2019-10-04) эта прагма возвращает столбцы таблицы БЕЗ ROWID, поскольку они используются в записях базового b-дерева , то есть сначала с дедублированными столбцами PRIMARY KEY, а затем столбцами данных.</target>
        </trans-unit>
        <trans-unit id="f3d8ddf920103fb59d5c977f61043bc94a5ad269" translate="yes" xml:space="preserve">
          <source>by invoking the xLock method of the file handle opened on the</source>
          <target state="translated">вызывая метод xLock файлового дескриптора,открытого на</target>
        </trans-unit>
        <trans-unit id="e6b1ba05915c9d9e20c9add6ed03b8953f6f8b7b" translate="yes" xml:space="preserve">
          <source>by invoking the xUnlock method of the</source>
          <target state="translated">вызывая метод xUnlock из</target>
        </trans-unit>
        <trans-unit id="bb7af49bdaa183eb50dd07ead6015af548fd643b" translate="yes" xml:space="preserve">
          <source>by testing the</source>
          <target state="translated">проверяя</target>
        </trans-unit>
        <trans-unit id="52009b1ff28ed81c1fa6a9d3329862df84ac923d" translate="yes" xml:space="preserve">
          <source>by the write required by H35290 shall be equal to the sum of the</source>
          <target state="translated">в соответствии с письменным требованием,предусмотренным в H35290,будет равна сумме</target>
        </trans-unit>
        <trans-unit id="19e638eb9101624872f130701a63a3b5aaef8e7b" translate="yes" xml:space="preserve">
          <source>byte array</source>
          <target state="translated">массив байт</target>
        </trans-unit>
        <trans-unit id="daf529a73101c2be626b99fc6938163e7a27620b" translate="yes" xml:space="preserve">
          <source>bytes</source>
          <target state="translated">bytes</target>
        </trans-unit>
        <trans-unit id="466fe7a27ba1ea2a344441f4a7d4dfe4ac7d134b" translate="yes" xml:space="preserve">
          <source>bytes each, sectors. It is also assumed that each aligned block of</source>
          <target state="translated">байты каждый,сектора.Также предполагается,что каждый выровненный блок</target>
        </trans-unit>
        <trans-unit id="cae2052f8f6fadfa753fb1482761ada30ec73a20" translate="yes" xml:space="preserve">
          <source>bytes following an aligned write of</source>
          <target state="translated">байты после выровненной записи</target>
        </trans-unit>
        <trans-unit id="e4a5eadcbb85c8f300d01b2891f2bfe2d37eea2c" translate="yes" xml:space="preserve">
          <source>bytes from the start of the database file using the xRead() method of the connections file handle, where</source>
          <target state="translated">байтами от начала файла базы данных с помощью метода xRead()файлового дескриптора соединений,где</target>
        </trans-unit>
        <trans-unit id="791172fc5158c6594d28ba923ee21caabd15be6b" translate="yes" xml:space="preserve">
          <source>bytes in size, then the final device sector is partially empty.</source>
          <target state="translated">байты в размере,затем сектор конечного устройства частично пуст.</target>
        </trans-unit>
        <trans-unit id="a57e81105d7da9ad5ffc27658b13792d4f014874" translate="yes" xml:space="preserve">
          <source>bytes in size, where</source>
          <target state="translated">байты в размере,где</target>
        </trans-unit>
        <trans-unit id="cb13fe3fc35499feda1239fde61f8badfeda1cb5" translate="yes" xml:space="preserve">
          <source>bytes in size.</source>
          <target state="translated">байты по размеру.</target>
        </trans-unit>
        <trans-unit id="e795c3063c6fc935522965d4a035751d685fec0f" translate="yes" xml:space="preserve">
          <source>bytes of data) to the database file. Dirty pages shall be written in order of</source>
          <target state="translated">байт данных)в файл базы данных.Грязные страницы должны быть написаны в порядке</target>
        </trans-unit>
        <trans-unit id="9ffeab5062cfc46c9a7a8108f0da2ccfd8de05d5" translate="yes" xml:space="preserve">
          <source>bytes of each file is stored in a single device sector. If the file is not an exact multiple of</source>
          <target state="translated">байты каждого файла хранятся в одном секторе устройства.Если файл не является точным кратным</target>
        </trans-unit>
        <trans-unit id="dbad55fdb9bd38445b80de8677747b06fd31b35f" translate="yes" xml:space="preserve">
          <source>bytes of page data. The frame-header is six big-endian 32-bit unsigned integer values, as follows:</source>
          <target state="translated">байты данных страницы.Заголовок кадра представляет собой шесть биг-ендианских 32-битных беззнаковых целочисленных значений,как показано ниже:</target>
        </trans-unit>
        <trans-unit id="48d5e9bf9da69ce5e6130f55e126df78b7472250" translate="yes" xml:space="preserve">
          <source>bytes to a file but before the file has been successfully</source>
          <target state="translated">байты в файл,но до того,как файл будет успешно</target>
        </trans-unit>
        <trans-unit id="b822285e85d711783a9c69d0ded75665873add79" translate="yes" xml:space="preserve">
          <source>bytes to cause data corruption. If a failure occurs after such a write operation and before the applicable file handle is</source>
          <target state="translated">байты,вызывающие повреждение данных.Если сбой происходит после такой операции записи и до того,как соответствующий файловый манипулятор будет</target>
        </trans-unit>
        <trans-unit id="e33d2c15bbb455ea537463d289af047873a5d0a9" translate="yes" xml:space="preserve">
          <source>bytes using a single call to the xWrite method of the file-handle open on the</source>
          <target state="translated">байт с помощью одиночного вызова метода xWrite файл-обработчика,открытого на</target>
        </trans-unit>
        <trans-unit id="7464db3f029b4b01e73e03bfdea59fe0097cb164" translate="yes" xml:space="preserve">
          <source>bytes will result in an out-of-memory error. This is a hard upper limit. See also the &lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit()&lt;/a&gt; interface.</source>
          <target state="translated">байтов приведет к ошибке нехватки памяти. Это жесткий верхний предел. См. Также интерфейс &lt;a href=&quot;c3ref/soft_heap_limit&quot;&gt;sqlite3_soft_heap_limit ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="576c82f76b709c533ae3ac9bd0e32911896b62de" translate="yes" xml:space="preserve">
          <source>bytes) shall be appended to the journal file, using a single call to the xWrite method of the file-handle opened on the journal file.</source>
          <target state="translated">байты)добавляются к файлу журнала одним вызовом к методу xWrite файл-руководства,открытого на файле журнала.</target>
        </trans-unit>
        <trans-unit id="8fb634dc225b24467c3267d33accfd5f2ea24ad2" translate="yes" xml:space="preserve">
          <source>bytes, where</source>
          <target state="translated">байты,где</target>
        </trans-unit>
        <trans-unit id="846bb95efa5fa77e706ae93e4085c324ccff0da7" translate="yes" xml:space="preserve">
          <source>bytes.</source>
          <target state="translated">bytes.</target>
        </trans-unit>
        <trans-unit id="f462a788f06d73181ec1d044d927fe73d8317b1f" translate="yes" xml:space="preserve">
          <source>bytes. Any attempt by SQLite to allocate new memory that would cause the sum of all allocations held by SQLite to exceed</source>
          <target state="translated">байты.Любая попытка SQLite выделить новую память,в результате которой сумма всех распределений,имеющихся у SQLite,превысит</target>
        </trans-unit>
        <trans-unit id="d66534e4909ae05bae9958f828a89c47336aa3e4" translate="yes" xml:space="preserve">
          <source>bytes. The exception is when the database file header fields are being inspected, before the</source>
          <target state="translated">байты.Исключением является проверка полей заголовка файла базы данных,прежде чем</target>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="translated">c</target>
        </trans-unit>
        <trans-unit id="268ac89be0c62021f75a0342b121de96307fa613" translate="yes" xml:space="preserve">
          <source>c0, c1, c2...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ab12296c04c9709fc7c944a45d06b4e1f2d556" translate="yes" xml:space="preserve">
          <source>c0, c1,&amp;amp;nbspc2...</source>
          <target state="translated">c0, c1, &amp;amp; nbspc2 ...</target>
        </trans-unit>
        <trans-unit id="10abd66a23379f47823cd6e3fb5653dd1d17aad6" translate="yes" xml:space="preserve">
          <source>cFrom</source>
          <target state="translated">cFrom</target>
        </trans-unit>
        <trans-unit id="6637fd47ddb462e5a67ddad5e72520b79d588735" translate="yes" xml:space="preserve">
          <source>cTo</source>
          <target state="translated">cTo</target>
        </trans-unit>
        <trans-unit id="b03592806efabfeeb709f5a70a7c172669b00538" translate="yes" xml:space="preserve">
          <source>cache</source>
          <target state="translated">cache</target>
        </trans-unit>
        <trans-unit id="f862a0872b9ff9ab5d2e3788a963c7607860f4e6" translate="yes" xml:space="preserve">
          <source>cache validation</source>
          <target state="translated">проверка кэша</target>
        </trans-unit>
        <trans-unit id="190c5d8eb65b5d426ad70777cd45b826d2e1a1ed" translate="yes" xml:space="preserve">
          <source>cache_size</source>
          <target state="translated">cache_size</target>
        </trans-unit>
        <trans-unit id="5a64a3972a9fd69fa31f5840c6ee6d955d41aeea" translate="yes" xml:space="preserve">
          <source>cache_spill</source>
          <target state="translated">cache_spill</target>
        </trans-unit>
        <trans-unit id="cb38e0be44fd4bb032de755fbe1d3da1b3eddcdd" translate="yes" xml:space="preserve">
          <source>cache_validation</source>
          <target state="translated">cache_validation</target>
        </trans-unit>
        <trans-unit id="a1a8e276f494f6ae1e82ca03d5255ed579d615ee" translate="yes" xml:space="preserve">
          <source>caches data read from database files in main-memory on a per-page basis. When SQLite requires data from a database file to satisfy a database query, it checks the</source>
          <target state="translated">кэширует данные,считанные из файлов базы данных,в оперативной памяти в расчете на страницу.Когда SQLite требует данные из файла базы данных для удовлетворения запроса к базе данных,он проверяет</target>
        </trans-unit>
        <trans-unit id="73b386d1b3690341eb93aa8cddb2df0e92b7d29a" translate="yes" xml:space="preserve">
          <source>calls this property &quot;Manifest Typing&quot;. Other writers have other definitions for the term &quot;manifest typing&quot;, so beware of confusion. But by whatever name, that is the datatype model supported by SQLite 3.0.</source>
          <target state="translated">называет это свойство &quot;Манифестный набор&quot;.У других авторов есть другие определения термина &quot;манифестный набор текста&quot;,поэтому остерегайтесь путаницы.Но под любым именем,это модель типа данных,поддерживаемая SQLite 3.0.</target>
        </trans-unit>
        <trans-unit id="d10704b755752c9c590fd13f8a484ebff51df609" translate="yes" xml:space="preserve">
          <source>can also be of the form &quot;&lt;b&gt;#-&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6bd7075c91a5e09cde92f0f08b3fc2eb705a88" translate="yes" xml:space="preserve">
          <source>can be a prefix of the cryptographic hash name of a specific check-in, or the name of a branch (in which case the most recent version of the branch is fetched) or a tag for a specific check-in like &quot;version-3.23.1&quot;:</source>
          <target state="translated">может быть префиксом криптографического хэш-имени конкретной регистрации,или именем ветки (в этом случае извлекается последняя версия ветки),или тегом для конкретной регистрации типа &quot;версия-3.23.1&quot;:</target>
        </trans-unit>
        <trans-unit id="21f0b67317c66d763c4f8db51425d2b714457cca" translate="yes" xml:space="preserve">
          <source>can be one of &lt;b&gt;deferred&lt;/b&gt;, &lt;b&gt;exclusive&lt;/b&gt; or &lt;b&gt;immediate&lt;/b&gt;. The default is deferred.</source>
          <target state="translated">может быть &lt;b&gt;отложенным&lt;/b&gt; , &lt;b&gt;исключительным&lt;/b&gt; или &lt;b&gt;немедленным&lt;/b&gt; . По умолчанию отложено.</target>
        </trans-unit>
        <trans-unit id="4c29974b0b9856172c13302878fda9827c0445cf" translate="yes" xml:space="preserve">
          <source>can be purged from the page cache to free memory. Exactly when this condition is reached and dirty pages must be purged is described in section</source>
          <target state="translated">может быть очищен от кэша страниц в свободную память.Именно при достижении этого условия и очистке грязных страниц описано в разделе</target>
        </trans-unit>
        <trans-unit id="95059d12f35238675a7255d8b7a4cd00ececb19b" translate="yes" xml:space="preserve">
          <source>can be trusted.</source>
          <target state="translated">можно доверять.</target>
        </trans-unit>
        <trans-unit id="b9396a0600493472bd0a77497261d5eebed93034" translate="yes" xml:space="preserve">
          <source>can be written into the database file, the</source>
          <target state="translated">может быть записано в файл базы данных,в</target>
        </trans-unit>
        <trans-unit id="84cda211a76b185879ea08c556668c3a4d5dc1bd" translate="yes" xml:space="preserve">
          <source>can reduce the number of write operations required on the database file (in cases where the same page is updated twice) and allows optimizations based on the assumptions outlined in section</source>
          <target state="translated">может уменьшить количество операций записи,требуемых в файле базы данных (в случаях,когда одна и та же страница обновляется дважды),и позволяет оптимизировать,основываясь на предположениях,изложенных в разделе</target>
        </trans-unit>
        <trans-unit id="f42881fc15489cb3b3ef759eca5de5a076bd9d3a" translate="yes" xml:space="preserve">
          <source>cannot be allowed to grow indefinitely. As a result, unless all database files opened by database connections within the process are quite small, sometimes data must be discarded from the</source>
          <target state="translated">не может быть позволено расти бесконечно.В результате,если только все файлы базы данных,открытые в процессе подключения к базе данных,не являются достаточно маленькими,иногда данные приходится отбрасывать из</target>
        </trans-unit>
        <trans-unit id="86a5cc90295070f4a8fbcb0399292a179c7aed44" translate="yes" xml:space="preserve">
          <source>cannot be known for sure, SQLite is usually able to guess correctly by assuming it to be equal to the connections</source>
          <target state="translated">не может быть известен наверняка,SQLite обычно умеет правильно угадывать,предполагая,что он приравнивается к соединениям</target>
        </trans-unit>
        <trans-unit id="2178a58ecbdec39e6fe5ed176b1e2713e5bbb454" translate="yes" xml:space="preserve">
          <source>cannot be read from a newly opened database file (because the file is less than 100 bytes in size), the connections</source>
          <target state="translated">не могут быть прочитаны из только что открытого файла БД (так как размер файла меньше 100 байт),соединения</target>
        </trans-unit>
        <trans-unit id="71be6b640452d15dfa7c7ad8f5b489aa97307532" translate="yes" xml:space="preserve">
          <source>capi_sqlitert_requirements</source>
          <target state="translated">capi_sqlitert_requirements</target>
        </trans-unit>
        <trans-unit id="1855195eac67d806d7188b8cec59fb85d53fcf7e" translate="yes" xml:space="preserve">
          <source>case_sensitive_like</source>
          <target state="translated">case_sensitive_like</target>
        </trans-unit>
        <trans-unit id="50b9e78177f37e3c747f67abcc8af36a44f218f5" translate="yes" xml:space="preserve">
          <source>categories</source>
          <target state="translated">categories</target>
        </trans-unit>
        <trans-unit id="4a3cb97cd4cfcac17289f80d6f46ef87306d3a41" translate="yes" xml:space="preserve">
          <source>causes RBU to update the target database table in a way similar to:</source>
          <target state="translated">заставляет RBU обновлять целевую таблицу базы данных аналогичным образом:</target>
        </trans-unit>
        <trans-unit id="fe17bc27b3a14f5b30afed0f902ff9505d056c56" translate="yes" xml:space="preserve">
          <source>causes a result similar to:</source>
          <target state="translated">приводит к результатам,похожим на:</target>
        </trans-unit>
        <trans-unit id="226a58713f5977d32de603332766bd5a36db2ecc" translate="yes" xml:space="preserve">
          <source>causes the following to be automatically executed:</source>
          <target state="translated">приводит к автоматическому выполнению следующих действий:</target>
        </trans-unit>
        <trans-unit id="7b02f63162e2fced87ae72547a6634f57919ea06" translate="yes" xml:space="preserve">
          <source>cell_size_check</source>
          <target state="translated">cell_size_check</target>
        </trans-unit>
        <trans-unit id="6d0477e2f2cc97c01390aa575f6321009404e467" translate="yes" xml:space="preserve">
          <source>cfgerrors*</source>
          <target state="translated">cfgerrors*</target>
        </trans-unit>
        <trans-unit id="e972792374941d8d4fe4fa0e0cc48423903aa2d5" translate="yes" xml:space="preserve">
          <source>change counter</source>
          <target state="translated">счётчик изменений</target>
        </trans-unit>
        <trans-unit id="a83d2e201afaabf3e919837c2b2b2f6ce4d0b0e4" translate="yes" xml:space="preserve">
          <source>change, then the union-vtab should be &lt;a href=&quot;lang_droptable&quot;&gt;DROP&lt;/a&gt;-ed and recreated in order to cause the</source>
          <target state="translated">изменить, тогда union-vtab должен быть &lt;a href=&quot;lang_droptable&quot;&gt;DROP&lt;/a&gt; -ed и воссоздан, чтобы вызвать</target>
        </trans-unit>
        <trans-unit id="49a04ba4469678c38e0f6a327f8702ea61d9e8a4" translate="yes" xml:space="preserve">
          <source>changes</source>
          <target state="translated">changes</target>
        </trans-unit>
        <trans-unit id="d351a89f46179d26bc191f18fc2179aa54f11d09" translate="yes" xml:space="preserve">
          <source>changes()</source>
          <target state="translated">changes()</target>
        </trans-unit>
        <trans-unit id="75b3ca319b86ab9ed457089ce3c0d6813b67c7e8" translate="yes" xml:space="preserve">
          <source>char()</source>
          <target state="translated">char()</target>
        </trans-unit>
        <trans-unit id="1e8218612a73b58266796ebbf172959190598e1a" translate="yes" xml:space="preserve">
          <source>char(X1,X2,...,XN)</source>
          <target state="translated">char(X1,X2,...,XN)</target>
        </trans-unit>
        <trans-unit id="5c528ebc85c151361dc02ed08a25eb25f665fd8f" translate="yes" xml:space="preserve">
          <source>checkpoint</source>
          <target state="translated">checkpoint</target>
        </trans-unit>
        <trans-unit id="c3f74039885ef604c1d4f3178bd00e7ce115071d" translate="yes" xml:space="preserve">
          <source>checkpoint_fullfsync</source>
          <target state="translated">checkpoint_fullfsync</target>
        </trans-unit>
        <trans-unit id="9c139e5e6f91a16a9ebe833de88029b523b1b146" translate="yes" xml:space="preserve">
          <source>checkpointing</source>
          <target state="translated">checkpointing</target>
        </trans-unit>
        <trans-unit id="81d42e722cb107798201aeb49a69eee9b3d57ebb" translate="yes" xml:space="preserve">
          <source>checksum initializer</source>
          <target state="translated">инициализатор контрольной суммы</target>
        </trans-unit>
        <trans-unit id="821c07a03badb405e8ccaea45217e56e69e4f6e0" translate="yes" xml:space="preserve">
          <source>child1</source>
          <target state="translated">child1</target>
        </trans-unit>
        <trans-unit id="268c29732f90b4ddba639b3b0096cc468ceed2fb" translate="yes" xml:space="preserve">
          <source>child2</source>
          <target state="translated">child2</target>
        </trans-unit>
        <trans-unit id="e6339c2ed81bebfdeff82d941f056f5886ead16b" translate="yes" xml:space="preserve">
          <source>child3</source>
          <target state="translated">child3</target>
        </trans-unit>
        <trans-unit id="28b9aec1790a5f938ca75e64f04595548b7673f4" translate="yes" xml:space="preserve">
          <source>child4</source>
          <target state="translated">child4</target>
        </trans-unit>
        <trans-unit id="9520e2cb0c40c512b35a769f16522e084e3abe6c" translate="yes" xml:space="preserve">
          <source>child5</source>
          <target state="translated">child5</target>
        </trans-unit>
        <trans-unit id="4132c161ddf2b54d27d52899a80797c2d9d72a4e" translate="yes" xml:space="preserve">
          <source>child6</source>
          <target state="translated">child6</target>
        </trans-unit>
        <trans-unit id="066614c5ed226550169db27f8f9548496f68ad7d" translate="yes" xml:space="preserve">
          <source>child7</source>
          <target state="translated">child7</target>
        </trans-unit>
        <trans-unit id="a0286267234b8c885fd0fc15b19b756450c05ba9" translate="yes" xml:space="preserve">
          <source>clean page</source>
          <target state="translated">чистая страница</target>
        </trans-unit>
        <trans-unit id="da38860cb875cb64092e402d80d9fe29c4865b18" translate="yes" xml:space="preserve">
          <source>close</source>
          <target state="translated">close</target>
        </trans-unit>
        <trans-unit id="ef012eb9ab9274bc39e6f3ba7b30fcbdb66a7be5" translate="yes" xml:space="preserve">
          <source>closing_database_connection</source>
          <target state="translated">closing_database_connection</target>
        </trans-unit>
        <trans-unit id="76adb921eaed44cc708ca583cdd0e338927f3316" translate="yes" xml:space="preserve">
          <source>cnt</source>
          <target state="translated">cnt</target>
        </trans-unit>
        <trans-unit id="5b7f180eecc039ae376c82c59e5ee1dcfe7d898c" translate="yes" xml:space="preserve">
          <source>coalesce()</source>
          <target state="translated">coalesce()</target>
        </trans-unit>
        <trans-unit id="93ee168d879e9008c1ee334c5a433e25a9290167" translate="yes" xml:space="preserve">
          <source>coalesce(X,Y,...)</source>
          <target state="translated">coalesce(X,Y,...)</target>
        </trans-unit>
        <trans-unit id="58590a8e3ac0a0ee865c1f1181f860909805c3c3" translate="yes" xml:space="preserve">
          <source>col</source>
          <target state="translated">col</target>
        </trans-unit>
        <trans-unit id="b8d1c41c71debebe6731b7fbc51579f542ea6b03" translate="yes" xml:space="preserve">
          <source>colUsed field</source>
          <target state="translated">столбчатое поле</target>
        </trans-unit>
        <trans-unit id="c230b1ae2b543822f7ba074cf811294b1ea57201" translate="yes" xml:space="preserve">
          <source>collate</source>
          <target state="translated">collate</target>
        </trans-unit>
        <trans-unit id="1dd7cca96dde8aa339f6b9368997a442b9c56eae" translate="yes" xml:space="preserve">
          <source>collation_list</source>
          <target state="translated">collation_list</target>
        </trans-unit>
        <trans-unit id="bc5751139ff2b0e1ec01179e7c23568eec58d3af" translate="yes" xml:space="preserve">
          <source>collation_needed</source>
          <target state="translated">collation_needed</target>
        </trans-unit>
        <trans-unit id="136d18f212024d0a9fa211a790b9ac3159529ebf" translate="yes" xml:space="preserve">
          <source>cols</source>
          <target state="translated">cols</target>
        </trans-unit>
        <trans-unit id="aa60230ab00282b5a1f3f1993b2d1c503e7d15a5" translate="yes" xml:space="preserve">
          <source>column</source>
          <target state="translated">column</target>
        </trans-unit>
        <trans-unit id="6bee6bff97390df218e5a9e30731366c36706302" translate="yes" xml:space="preserve">
          <source>column OP EXPR</source>
          <target state="translated">колонка ОП ЭКСПР</target>
        </trans-unit>
        <trans-unit id="338c8d22948f278a320a693492416d784221d426" translate="yes" xml:space="preserve">
          <source>column OP expr</source>
          <target state="translated">столбец ОП экспр</target>
        </trans-unit>
        <trans-unit id="bb78c117f4a272980d2a8593fbde703cd9b82868" translate="yes" xml:space="preserve">
          <source>column is the child key and the</source>
          <target state="translated">столбец-это дочерний ключ и</target>
        </trans-unit>
        <trans-unit id="f4b4254d2105e72a6b2dcba041728d7c58cee9df" translate="yes" xml:space="preserve">
          <source>column is the parent key). Or, more generally:</source>
          <target state="translated">колонка-родительский ключ).Или,в общем:</target>
        </trans-unit>
        <trans-unit id="9b82a7e07a9244ab7a31cdf574713b5615dc9208" translate="yes" xml:space="preserve">
          <source>column of an instance virtual table always contains NULL. In this case there is one row in the table for each unique term/doc/col combination. Or, if the FTS5 table is created with 'detail' set to 'none', then both</source>
          <target state="translated">столбец виртуальной таблицы экземпляра всегда содержит NULL.В этом случае для каждой уникальной комбинации термина/дока/кола в таблице есть одна строка.Или,если таблица FTS5 создана со значением 'detail',равным 'none',то и то,и другое.</target>
        </trans-unit>
        <trans-unit id="ccf58ce314bfe47bfeade0d0a9c0eb5e34583a3c" translate="yes" xml:space="preserve">
          <source>column of the record being deleted from the</source>
          <target state="translated">столбец удаляемой записи из</target>
        </trans-unit>
        <trans-unit id="af014595553c0f1d49a2ca9763ddd464653e2c46" translate="yes" xml:space="preserve">
          <source>column, simply add the appropriate &quot;NOT NULL&quot; constraint to the schema.</source>
          <target state="translated">колонку,просто добавьте соответствующее ограничение &quot;NOT NULL&quot; в схему.</target>
        </trans-unit>
        <trans-unit id="d6f8bf1cca94c4a57d3cd7461612117c23ff8d12" translate="yes" xml:space="preserve">
          <source>column-constraint</source>
          <target state="translated">column-constraint</target>
        </trans-unit>
        <trans-unit id="4f21b7ce41daa4e64d8d61f451e4fdef76c5b02e" translate="yes" xml:space="preserve">
          <source>column-constraint:</source>
          <target state="translated">column-constraint:</target>
        </trans-unit>
        <trans-unit id="d70c05336a96997c56c21a291a0d77b4955bac9e" translate="yes" xml:space="preserve">
          <source>column-def</source>
          <target state="translated">column-def</target>
        </trans-unit>
        <trans-unit id="66e44cd2f2287f2f93695abbbe3119ad2587bccf" translate="yes" xml:space="preserve">
          <source>column-def:</source>
          <target state="translated">column-def:</target>
        </trans-unit>
        <trans-unit id="6843b9464f98389a8633dd64c12285a07ae852da" translate="yes" xml:space="preserve">
          <source>column-name</source>
          <target state="translated">column-name</target>
        </trans-unit>
        <trans-unit id="95924e167f11f16f68f0fcf4fdc508d7c5d0d7ea" translate="yes" xml:space="preserve">
          <source>column-name-list</source>
          <target state="translated">column-name-list</target>
        </trans-unit>
        <trans-unit id="9cf88017793afce7e687c4500462d025684d8af9" translate="yes" xml:space="preserve">
          <source>column-name-list:</source>
          <target state="translated">column-name-list:</target>
        </trans-unit>
        <trans-unit id="1fb56e596eae2558e429efa566257c5338d32ef2" translate="yes" xml:space="preserve">
          <source>columns wide.</source>
          <target state="translated">колонки шире.</target>
        </trans-unit>
        <trans-unit id="987e9e40192b34a63462ba648dfc4ffb8ea6b9bf" translate="yes" xml:space="preserve">
          <source>columns, and the right-hand dataset of</source>
          <target state="translated">колонки,и правый набор данных о</target>
        </trans-unit>
        <trans-unit id="73b827528f506b3a524ca91a105ec243076cefca" translate="yes" xml:space="preserve">
          <source>columns, then the cartesian product is a dataset of</source>
          <target state="translated">колонки,то картезианский продукт-это набор данных о</target>
        </trans-unit>
        <trans-unit id="805682fdf2befd0f72b7d16894fd58f0d033c065" translate="yes" xml:space="preserve">
          <source>columns.</source>
          <target state="translated">columns.</target>
        </trans-unit>
        <trans-unit id="37929e0a3b9a27eb82473ae04ede11fbc9f9b00a" translate="yes" xml:space="preserve">
          <source>commands</source>
          <target state="translated">commands</target>
        </trans-unit>
        <trans-unit id="118a9989815489c24b81b160782015890ed2085e" translate="yes" xml:space="preserve">
          <source>comment</source>
          <target state="translated">comment</target>
        </trans-unit>
        <trans-unit id="e119ac0fb8c5b54486119576d7c11f81bc2a54d5" translate="yes" xml:space="preserve">
          <source>comment-syntax</source>
          <target state="translated">comment-syntax</target>
        </trans-unit>
        <trans-unit id="456cd848bb1acdaa3777ed0e97942b18ad484699" translate="yes" xml:space="preserve">
          <source>comment-syntax:</source>
          <target state="translated">comment-syntax:</target>
        </trans-unit>
        <trans-unit id="e6c11b116433727b6f046fe87be5f8a7333aae7d" translate="yes" xml:space="preserve">
          <source>commit a write-transaction</source>
          <target state="translated">совершить операцию по письменному заявлению</target>
        </trans-unit>
        <trans-unit id="3c0263d83d4a887968602fe88ce64a16eed77121" translate="yes" xml:space="preserve">
          <source>commit-stmt</source>
          <target state="translated">commit-stmt</target>
        </trans-unit>
        <trans-unit id="3956737148709d966c337de952cde563dcfbfa29" translate="yes" xml:space="preserve">
          <source>commit-stmt:</source>
          <target state="translated">commit-stmt:</target>
        </trans-unit>
        <trans-unit id="3338c7bcb522849f94a6844a86c7f6c9bd55318c" translate="yes" xml:space="preserve">
          <source>commit_hook</source>
          <target state="translated">commit_hook</target>
        </trans-unit>
        <trans-unit id="7d4de112e44d2d2407016dca798b226c0aeb0440" translate="yes" xml:space="preserve">
          <source>committing_a_transaction</source>
          <target state="translated">committing_a_transaction</target>
        </trans-unit>
        <trans-unit id="52048fed5e9f61ee5356bbfad4741a053e85c9c2" translate="yes" xml:space="preserve">
          <source>common-table-expression</source>
          <target state="translated">common-table-expression</target>
        </trans-unit>
        <trans-unit id="7d19844bd08c451ba8acfc6e6128ada7dc03f99f" translate="yes" xml:space="preserve">
          <source>common-table-expression:</source>
          <target state="translated">common-table-expression:</target>
        </trans-unit>
        <trans-unit id="023646ce8406be5b9700f2babded876beaf4396b" translate="yes" xml:space="preserve">
          <source>compilation</source>
          <target state="translated">compilation</target>
        </trans-unit>
        <trans-unit id="3e724a12626d4662d396d696f4036dfeae4aca0c" translate="yes" xml:space="preserve">
          <source>compile-time option.</source>
          <target state="translated">Возможен вариант компиляции.</target>
        </trans-unit>
        <trans-unit id="5f93db780298d2d4e3eb1ab6a69c2c2894f6c56f" translate="yes" xml:space="preserve">
          <source>compile_options</source>
          <target state="translated">compile_options</target>
        </trans-unit>
        <trans-unit id="84c68aee611f269a51e8b51758fd1baac7a1775b" translate="yes" xml:space="preserve">
          <source>complements this by describing in more detail the assumptions made about VFS implementations on which the algorithms presented in this document depend. Some of these assumptions relate to performance issues, but most concern the expected state of the file-system following a failure that occurs midway through modifying a database file.</source>
          <target state="translated">дополняет это,более подробно описывая допущения,сделанные о реализации VFS,от которых зависят алгоритмы,представленные в данном документе.Некоторые из этих предположений относятся к проблемам производительности,но большинство из них касается ожидаемого состояния файловой системы после сбоя,который происходит в середине модификации файла базы данных.</target>
        </trans-unit>
        <trans-unit id="0737c22d3bfae812339732d14d8c7dbd6dc4e09c" translate="yes" xml:space="preserve">
          <source>complete</source>
          <target state="translated">complete</target>
        </trans-unit>
        <trans-unit id="60baec33a8c9bb6ad3828502597c4cfa3a0645c9" translate="yes" xml:space="preserve">
          <source>compound-operator</source>
          <target state="translated">compound-operator</target>
        </trans-unit>
        <trans-unit id="efca8ac0d619eaafc57d3ec14cc6d92d3caec514" translate="yes" xml:space="preserve">
          <source>compound-operator:</source>
          <target state="translated">compound-operator:</target>
        </trans-unit>
        <trans-unit id="c857b20b51f83f9c69657ab881d17983e92b0832" translate="yes" xml:space="preserve">
          <source>compound-select-stmt</source>
          <target state="translated">compound-select-stmt</target>
        </trans-unit>
        <trans-unit id="caf0f504fac309926a1a70f0e33b8d6c1f22ac33" translate="yes" xml:space="preserve">
          <source>compound-select-stmt:</source>
          <target state="translated">compound-select-stmt:</target>
        </trans-unit>
        <trans-unit id="89d6bb15c7a80cd824938d827ddf0502bb0bdefa" translate="yes" xml:space="preserve">
          <source>compress</source>
          <target state="translated">compress</target>
        </trans-unit>
        <trans-unit id="e2b4ba3672044e805f1ca1ee965dd97b38420b71" translate="yes" xml:space="preserve">
          <source>concatenation operator which always evaluates to either NULL or a text value.</source>
          <target state="translated">оператор конкатенация,который всегда оценивает либо NULL,либо текстовое значение.</target>
        </trans-unit>
        <trans-unit id="dfba7aade0868074c2861c98e2a9a92f3178a51b" translate="yes" xml:space="preserve">
          <source>config</source>
          <target state="translated">config</target>
        </trans-unit>
        <trans-unit id="edc90e6790d5a5fcf4e34b852f59db917acd920e" translate="yes" xml:space="preserve">
          <source>conflict-clause</source>
          <target state="translated">conflict-clause</target>
        </trans-unit>
        <trans-unit id="58506f7a6a34d1db6799e99f55da981115cc1a71" translate="yes" xml:space="preserve">
          <source>conflict-clause:</source>
          <target state="translated">conflict-clause:</target>
        </trans-unit>
        <trans-unit id="338f9886126339b0ab6877cc62e4d18233a54f59" translate="yes" xml:space="preserve">
          <source>consist of three steps:</source>
          <target state="translated">состоит из трех этапов:</target>
        </trans-unit>
        <trans-unit id="7e8819d6911e75f3f3fafd8067aefde82eccf106" translate="yes" xml:space="preserve">
          <source>consists of an eight byte block set to a well-known value, followed by five big-endian 32-bit unsigned integer fields.</source>
          <target state="translated">состоит из восьмибайтового блока,установленного в известное значение,за которым следуют пять биг-ендианских 32-битных целочисленных беззнаковых полей.</target>
        </trans-unit>
        <trans-unit id="c80793a6e25d89ba3679bb9bc53ac9a5ce454a2a" translate="yes" xml:space="preserve">
          <source>const char*</source>
          <target state="translated">констебль char*</target>
        </trans-unit>
        <trans-unit id="b93db90c74e59cca2710bbedbc56911482d72d3d" translate="yes" xml:space="preserve">
          <source>constraints</source>
          <target state="translated">constraints</target>
        </trans-unit>
        <trans-unit id="3a981e59a39be5b0216e7db8f54c5e1375f619eb" translate="yes" xml:space="preserve">
          <source>contain two entries for which both the</source>
          <target state="translated">содержат две записи,для которых обе</target>
        </trans-unit>
        <trans-unit id="aa68e1351317a69da0f259641b3413c57cc23051" translate="yes" xml:space="preserve">
          <source>contained before any modifications associated with</source>
          <target state="translated">содержащийся до любых изменений,связанных с</target>
        </trans-unit>
        <trans-unit id="538ab031b4597c643769b44883e02a5ddfa56499" translate="yes" xml:space="preserve">
          <source>contains NULL</source>
          <target state="translated">содержит NULL</target>
        </trans-unit>
        <trans-unit id="c2ba5f6f377839ddb7af35cfa8339514837f1c56" translate="yes" xml:space="preserve">
          <source>contains a description of and requirements governing the detection of a hot-journal file referred to in the above requirements.</source>
          <target state="translated">содержит описание и требования,регулирующие обнаружение файла горячего журнала,упомянутого в вышеуказанных требованиях.</target>
        </trans-unit>
        <trans-unit id="15c625b34d72762f2d197b06cc1d9a11c01aa5c5" translate="yes" xml:space="preserve">
          <source>contains any entries associated with the current</source>
          <target state="translated">содержит любые записи,связанные с текущим</target>
        </trans-unit>
        <trans-unit id="8b948105d3ac2b05b13b5a2589645bfbc713cacf" translate="yes" xml:space="preserve">
          <source>contains at least one instance of each phrase, and</source>
          <target state="translated">содержит,по крайней мере,по одному экземпляру каждой фразы,и</target>
        </trans-unit>
        <trans-unit id="bf196d9aca298a74d97826f95e98fb116424ce76" translate="yes" xml:space="preserve">
          <source>contains one or more entries belonging to the associated</source>
          <target state="translated">содержит одну или несколько записей,относящихся к ассоциируемому</target>
        </trans-unit>
        <trans-unit id="4adc378b527c3815b1d02b5eb4f308ad6d002e6d" translate="yes" xml:space="preserve">
          <source>contains the name of a</source>
          <target state="translated">содержит имя</target>
        </trans-unit>
        <trans-unit id="d1412ad07a8cdf8275a2893ab8a9a7e3e485fac6" translate="yes" xml:space="preserve">
          <source>contains the original data for a database page modified by the</source>
          <target state="translated">содержит исходные данные для страницы базы данных,измененной с помощью кнопки</target>
        </trans-unit>
        <trans-unit id="86ad43ada9216a11e9e1a859ee4310db18b88f69" translate="yes" xml:space="preserve">
          <source>contains too many modifications to be stored in the</source>
          <target state="translated">содержит слишком много модификаций,чтобы хранить их в</target>
        </trans-unit>
        <trans-unit id="c5a2c59e0585ad4db1fcebba442ef8c90cbddc37" translate="yes" xml:space="preserve">
          <source>contains zero or more</source>
          <target state="translated">содержит ноль или более</target>
        </trans-unit>
        <trans-unit id="040f06fd774092478d450774f5ba30c5da78acc8" translate="yes" xml:space="preserve">
          <source>content</source>
          <target state="translated">content</target>
        </trans-unit>
        <trans-unit id="b3af694f7a6a5abbe5744358210896626c8c10d1" translate="yes" xml:space="preserve">
          <source>copied via the &lt;a href=&quot;backup&quot;&gt;backup API&lt;/a&gt;</source>
          <target state="translated">скопировано через &lt;a href=&quot;backup&quot;&gt;API резервного копирования&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f84e2e2dadd87384fb55f25886926b777e8378f1" translate="yes" xml:space="preserve">
          <source>copy</source>
          <target state="translated">copy</target>
        </trans-unit>
        <trans-unit id="98febf4cc8232ad0d6e34ecf905ead284f9f959e" translate="yes" xml:space="preserve">
          <source>core functions</source>
          <target state="translated">основные функции</target>
        </trans-unit>
        <trans-unit id="fe49d663b0c018221aa05031af9e859670429cce" translate="yes" xml:space="preserve">
          <source>corresponding to page 1 becomes a</source>
          <target state="translated">в соответствии со страницей 1 становится</target>
        </trans-unit>
        <trans-unit id="42bef6a38164ce490cdd0863d6aa302c52ec9b2e" translate="yes" xml:space="preserve">
          <source>corresponding to the new page and insert it into the</source>
          <target state="translated">соответствующий новой странице и вставьте его в</target>
        </trans-unit>
        <trans-unit id="16d9f0a7338b4507ade71c9b26b4771bb12c3d8f" translate="yes" xml:space="preserve">
          <source>count() aggregate function</source>
          <target state="translated">суммарная функция count()</target>
        </trans-unit>
        <trans-unit id="cb626c05af0fb46c7ea34cdde2e9c401d37a2927" translate="yes" xml:space="preserve">
          <source>count(*)</source>
          <target state="translated">count(*)</target>
        </trans-unit>
        <trans-unit id="679a300599aba0ecfbd1664f5a5eaaf613b6993d" translate="yes" xml:space="preserve">
          <source>count(X)</source>
          <target state="translated">count(X)</target>
        </trans-unit>
        <trans-unit id="4d2928f547015ecfa811aa1b9d7acdd0eff1aea5" translate="yes" xml:space="preserve">
          <source>create-index-stmt</source>
          <target state="translated">create-index-stmt</target>
        </trans-unit>
        <trans-unit id="8595cd33fe8cba1d314487ae5e03625fe7459a18" translate="yes" xml:space="preserve">
          <source>create-index-stmt:</source>
          <target state="translated">create-index-stmt:</target>
        </trans-unit>
        <trans-unit id="5d8109b3f65ad9ee8685ed3eb2b48bbdab72ad3d" translate="yes" xml:space="preserve">
          <source>create-table-stmt</source>
          <target state="translated">create-table-stmt</target>
        </trans-unit>
        <trans-unit id="142ac5b24b61f33fe83a48d8250b22ab2cb616db" translate="yes" xml:space="preserve">
          <source>create-table-stmt:</source>
          <target state="translated">create-table-stmt:</target>
        </trans-unit>
        <trans-unit id="426d7ce108339352b32e38ca16102afe16bf1256" translate="yes" xml:space="preserve">
          <source>create-trigger-stmt</source>
          <target state="translated">create-trigger-stmt</target>
        </trans-unit>
        <trans-unit id="d0589c492bbecddb98911bd8b6bc8517cafdfaae" translate="yes" xml:space="preserve">
          <source>create-trigger-stmt:</source>
          <target state="translated">create-trigger-stmt:</target>
        </trans-unit>
        <trans-unit id="961c1b41e1be9ef9ace30fa6a9c8bbca01dc8b51" translate="yes" xml:space="preserve">
          <source>create-view-stmt</source>
          <target state="translated">create-view-stmt</target>
        </trans-unit>
        <trans-unit id="9df25821d307f1821ed4a97e1fe08122d19e4ab5" translate="yes" xml:space="preserve">
          <source>create-view-stmt:</source>
          <target state="translated">create-view-stmt:</target>
        </trans-unit>
        <trans-unit id="85ce53d1f4607276547a556d9afb69f2b3519ced" translate="yes" xml:space="preserve">
          <source>create-virtual-table-stmt</source>
          <target state="translated">create-virtual-table-stmt</target>
        </trans-unit>
        <trans-unit id="bd12e03c6e4ee24b49e3b2543b1a8cc743a8097f" translate="yes" xml:space="preserve">
          <source>create-virtual-table-stmt:</source>
          <target state="translated">create-virtual-table-stmt:</target>
        </trans-unit>
        <trans-unit id="3d64198db22a39299d0ddfb4a92aef9f6cea7291" translate="yes" xml:space="preserve">
          <source>createFlag</source>
          <target state="translated">createFlag</target>
        </trans-unit>
        <trans-unit id="05ae175a60349b62bdd027b73dfc82c39d53a264" translate="yes" xml:space="preserve">
          <source>created and destroyed at the start and end of a transaction, respectively. But there are exceptions to this rule.</source>
          <target state="translated">созданный и уничтоженный в начале и в конце сделки соответственно.Но есть и исключения из этого правила.</target>
        </trans-unit>
        <trans-unit id="6cc981744e5c893179434506139a3107851b061e" translate="yes" xml:space="preserve">
          <source>csv</source>
          <target state="translated">csv</target>
        </trans-unit>
        <trans-unit id="c39881d0bb15a885a28c90a1ff4ed3adb6c200d2" translate="yes" xml:space="preserve">
          <source>cte-table-name</source>
          <target state="translated">cte-table-name</target>
        </trans-unit>
        <trans-unit id="671fe39b0e6b27dc6a369eb30f06d63a5a0419df" translate="yes" xml:space="preserve">
          <source>cte-table-name:</source>
          <target state="translated">cte-table-name:</target>
        </trans-unit>
        <trans-unit id="774864017bf970c100baa7d2d6a33826e091044d" translate="yes" xml:space="preserve">
          <source>d, i</source>
          <target state="translated">d,i</target>
        </trans-unit>
        <trans-unit id="a17c9aaa61e80a1bf71d0d850af4e5baa9800bbd" translate="yes" xml:space="preserve">
          <source>data</source>
          <target state="translated">data</target>
        </trans-unit>
        <trans-unit id="ef4201d762c22d1e6661717cb6f45577f4b93811" translate="yes" xml:space="preserve">
          <source>data files. Contrary to intuition, SQLite can be &lt;a href=&quot;fasterthanfs&quot;&gt;faster than the filesystem&lt;/a&gt; for reading and writing content to disk.</source>
          <target state="translated">Дата файлы. Вопреки интуиции, SQLite может быть &lt;a href=&quot;fasterthanfs&quot;&gt;быстрее файловой системы&lt;/a&gt; для чтения и записи контента на диск.</target>
        </trans-unit>
        <trans-unit id="89d3a53dc90990a654b3163ba7f8f8b6ea4d8017" translate="yes" xml:space="preserve">
          <source>data_version</source>
          <target state="translated">data_version</target>
        </trans-unit>
        <trans-unit id="6d613a1ee01eec4c0f8ca66df0db71dca0c6e1cf" translate="yes" xml:space="preserve">
          <source>database</source>
          <target state="translated">database</target>
        </trans-unit>
        <trans-unit id="5fda431053cb6445fa9f6e17a24165d0670632ab" translate="yes" xml:space="preserve">
          <source>database connection</source>
          <target state="translated">подключение к базе данных</target>
        </trans-unit>
        <trans-unit id="8facb41419caf34b44e9962383d95c7c7d55f14b" translate="yes" xml:space="preserve">
          <source>database connections</source>
          <target state="translated">соединения баз данных</target>
        </trans-unit>
        <trans-unit id="960f77ff5160a5682d63b611b1262b520c30059e" translate="yes" xml:space="preserve">
          <source>database file</source>
          <target state="translated">файл базы данных</target>
        </trans-unit>
        <trans-unit id="68950d41f80356b648c93d1c744b73a913cc0a18" translate="yes" xml:space="preserve">
          <source>database file header</source>
          <target state="translated">заголовок файла базы данных</target>
        </trans-unit>
        <trans-unit id="7ed7b67ba7f3fa31ec1727810a8ab94dcf1be420" translate="yes" xml:space="preserve">
          <source>database handle</source>
          <target state="translated">ручка базы данных</target>
        </trans-unit>
        <trans-unit id="69d22efd748b18925aacdd268b3b7dd393396671" translate="yes" xml:space="preserve">
          <source>database handles</source>
          <target state="translated">дескрипторы базы данных</target>
        </trans-unit>
        <trans-unit id="4edbfd54a0e65f023e0ac46c4e3770b7151bc67d" translate="yes" xml:space="preserve">
          <source>database pages</source>
          <target state="translated">страницы базы данных</target>
        </trans-unit>
        <trans-unit id="10bf8d5b6df7a59ede5091e069e54ced149aaddd" translate="yes" xml:space="preserve">
          <source>database pages within the database file itself. The combination of the three steps above is referred to as</source>
          <target state="translated">страницы базы данных в самом файле базы данных.Комбинация из трех вышеперечисленных этапов называется</target>
        </trans-unit>
        <trans-unit id="b69c246a4eb45c16e239bcebdfe6f793e8d787ee" translate="yes" xml:space="preserve">
          <source>database_connections</source>
          <target state="translated">database_connections</target>
        </trans-unit>
        <trans-unit id="2b241d1055e5694fbdac1966c3ce2d71c0a7a829" translate="yes" xml:space="preserve">
          <source>database_list</source>
          <target state="translated">database_list</target>
        </trans-unit>
        <trans-unit id="c0fe13ee71761ea11b383aa3844ec503e8a67c9b" translate="yes" xml:space="preserve">
          <source>date and time functions</source>
          <target state="translated">функции даты и времени</target>
        </trans-unit>
        <trans-unit id="40bbd5623f6f12fdaa2f1c536c377a0e899975ea" translate="yes" xml:space="preserve">
          <source>date/time special case</source>
          <target state="translated">дата/время особый случай</target>
        </trans-unit>
        <trans-unit id="8e11d8a9579f5214ec5cefc224d788938b86738a" translate="yes" xml:space="preserve">
          <source>day of month: 00</source>
          <target state="translated">день месяца:00</target>
        </trans-unit>
        <trans-unit id="e06e1abbf41bc81d66b76c1df3dd7546afa61e77" translate="yes" xml:space="preserve">
          <source>day of week 0-6 with Sunday==0</source>
          <target state="translated">день недели 0-6 с воскресеньем==0</target>
        </trans-unit>
        <trans-unit id="e31e25a45f49d68a9c423b870e186d04264471c4" translate="yes" xml:space="preserve">
          <source>day of year: 001-366</source>
          <target state="translated">день года:001-366</target>
        </trans-unit>
        <trans-unit id="70d44ad4cc9cbbee22a2c85479ae4da103aaf7c3" translate="yes" xml:space="preserve">
          <source>dbcmd</source>
          <target state="translated">dbcmd</target>
        </trans-unit>
        <trans-unit id="85e55c203f43bb02f26666b3aea14e32e9c7b3d2" translate="yes" xml:space="preserve">
          <source>decimal_add(A,B)</source>
          <target state="translated">decimal_add(A,B)</target>
        </trans-unit>
        <trans-unit id="ad167fea088ae4651e751660967d6d78847c3670" translate="yes" xml:space="preserve">
          <source>decimal_mul(A,B)</source>
          <target state="translated">decimal_mul(A,B)</target>
        </trans-unit>
        <trans-unit id="7bfafaa1a2da4091aa468c271f92c45e0b9d610c" translate="yes" xml:space="preserve">
          <source>decimal_sub(A,B)</source>
          <target state="translated">decimal_sub(A,B)</target>
        </trans-unit>
        <trans-unit id="199cf7f4e49224bf19d4f6c9c054f356150be942" translate="yes" xml:space="preserve">
          <source>declarative</source>
          <target state="translated">declarative</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">default</target>
        </trans-unit>
        <trans-unit id="5cd5e3a7a50f5db4fc22d89f613685facd16d189" translate="yes" xml:space="preserve">
          <source>defensive 0 dqs_ddl 1 dqs_dml 1 enable_fkey 0 enable_qpsg 0 enable_trigger 1 enable_view 1 fts3_tokenizer 1 legacy_alter_table 0 legacy_file_format 0 load_extension 0 no_ckpt_on_close 0 reset_database 0 trigger_eqp 0 trusted_schema 1 writable_schema 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f017218a42c8d486a025d0afa37fe6f0f17099f5" translate="yes" xml:space="preserve">
          <source>defer_foreign_keys</source>
          <target state="translated">defer_foreign_keys</target>
        </trans-unit>
        <trans-unit id="7aacb2e0cfb5b6a423bf13b6b3400c4f70fbce5f" translate="yes" xml:space="preserve">
          <source>delete-stmt</source>
          <target state="translated">delete-stmt</target>
        </trans-unit>
        <trans-unit id="28642bed8afd594b16510fe3d5bddbf24a3233a1" translate="yes" xml:space="preserve">
          <source>delete-stmt-limited</source>
          <target state="translated">delete-stmt-limited</target>
        </trans-unit>
        <trans-unit id="141767a9d609ae8a7c859c0d9c85d0de8272b451" translate="yes" xml:space="preserve">
          <source>delete-stmt-limited:</source>
          <target state="translated">delete-stmt-limited:</target>
        </trans-unit>
        <trans-unit id="181bf9b1f804319f961a48284ce7dcf30734b86c" translate="yes" xml:space="preserve">
          <source>delete-stmt:</source>
          <target state="translated">delete-stmt:</target>
        </trans-unit>
        <trans-unit id="5af972e6a5bad5f8a02213c0d3ce6d95a8282ffc" translate="yes" xml:space="preserve">
          <source>describes some of the algorithms used to determine exactly which portions of the database file are cached by a</source>
          <target state="translated">описывает некоторые из алгоритмов,используемых для определения того,какие именно части файла базы данных кэшируются с помощью</target>
        </trans-unit>
        <trans-unit id="bf1999b0ee220c3ee54f18038526c80c362a673e" translate="yes" xml:space="preserve">
          <source>describes the assumptions made regarding the effects of a</source>
          <target state="translated">описывает допущения,сделанные в отношении последствий</target>
        </trans-unit>
        <trans-unit id="9a528a7e9dbce51dab53f8a5b9a3aec79b6966da" translate="yes" xml:space="preserve">
          <source>describes the circumstances under which changes are flushed through to the database file mid-transaction to free</source>
          <target state="translated">описывает обстоятельства,при которых изменения прошиваются в файл базы данных в середине операции бесплатно</target>
        </trans-unit>
        <trans-unit id="cade0d88fa8e849cbe1d933d8fe617c7703b8b5a" translate="yes" xml:space="preserve">
          <source>describes the process identified by step 3 above. Further detail on step 4 may be found in section</source>
          <target state="translated">описывает процесс,описанный выше в рамках этапа 3.Более подробная информация о шаге 4 может быть найдена в разделе</target>
        </trans-unit>
        <trans-unit id="f9e4901e01c114952dd3e60ebe255a3d7afaca6a" translate="yes" xml:space="preserve">
          <source>describes the steps required to open a</source>
          <target state="translated">описывает шаги,необходимые для открытия</target>
        </trans-unit>
        <trans-unit id="869303864f7e87986f1a7cc737f2ccd52a060f7c" translate="yes" xml:space="preserve">
          <source>describes the way in which aborted</source>
          <target state="translated">описывает,каким образом аборт</target>
        </trans-unit>
        <trans-unit id="59df4159d803b745d2984211a74ab01de3391cae" translate="yes" xml:space="preserve">
          <source>deserialize</source>
          <target state="translated">deserialize</target>
        </trans-unit>
        <trans-unit id="9b54dd03fde8f40b66409882bab8a3d1324200a7" translate="yes" xml:space="preserve">
          <source>detach-stmt</source>
          <target state="translated">detach-stmt</target>
        </trans-unit>
        <trans-unit id="831c93a338a49f452cae81e1af0854bfd23eb718" translate="yes" xml:space="preserve">
          <source>detach-stmt:</source>
          <target state="translated">detach-stmt:</target>
        </trans-unit>
        <trans-unit id="6ed39e9e31f90561db2f122db5b72e9f3e17c186" translate="yes" xml:space="preserve">
          <source>detection process, the attempt to upgrade to an</source>
          <target state="translated">процесс обнаружения,попытка обновления до</target>
        </trans-unit>
        <trans-unit id="420e43b373c8d5c79fee2f42e078886c15efbaa8" translate="yes" xml:space="preserve">
          <source>directly to an</source>
          <target state="translated">непосредственно к</target>
        </trans-unit>
        <trans-unit id="39110bb7c775458b48a02bbd327b0894344fa9e2" translate="yes" xml:space="preserve">
          <source>directly, that has the same effect as invoking the &quot;close&quot; method. So the following code is equivalent to the previous:</source>
          <target state="translated">непосредственно,что имеет тот же эффект,что и обращение к &quot;закрытому&quot; методу.Таким образом,следующий код эквивалентен предыдущему:</target>
        </trans-unit>
        <trans-unit id="5565eb4a19ef2caffbf35da323e13397704e42b8" translate="yes" xml:space="preserve">
          <source>directory-name</source>
          <target state="translated">directory-name</target>
        </trans-unit>
        <trans-unit id="aef4ddc9b92eed8b4a87b2c168b42fb9d919e7c5" translate="yes" xml:space="preserve">
          <source>dirty flag</source>
          <target state="translated">грязный флаг</target>
        </trans-unit>
        <trans-unit id="df01a5f0fe839819cbbd14447f41b612bc1b36f8" translate="yes" xml:space="preserve">
          <source>dirty page</source>
          <target state="translated">грязная страница</target>
        </trans-unit>
        <trans-unit id="563e0bfbed232376105ed9bdaa1eab31b4e1910e" translate="yes" xml:space="preserve">
          <source>dirty pages</source>
          <target state="translated">грязные страницы</target>
        </trans-unit>
        <trans-unit id="b1d9600b816a974c4bfd97179bd01ec878ab3322" translate="yes" xml:space="preserve">
          <source>do some harmless work if X is true</source>
          <target state="translated">делать какую-нибудь безобидную работу,если Х правда</target>
        </trans-unit>
        <trans-unit id="f7f029ecb98abe979074a3ab45b74dbd9af02d42" translate="yes" xml:space="preserve">
          <source>doc</source>
          <target state="translated">doc</target>
        </trans-unit>
        <trans-unit id="4f8278c89ad16da05fec4fdfc61fe44798b92720" translate="yes" xml:space="preserve">
          <source>document</source>
          <target state="translated">document</target>
        </trans-unit>
        <trans-unit id="ec96667ac8c50460893f4a00d5fdb401283145dd" translate="yes" xml:space="preserve">
          <source>documents</source>
          <target state="translated">documents</target>
        </trans-unit>
        <trans-unit id="ecc31770c692e5ec2844aa9c2e7e78ed1ce45454" translate="yes" xml:space="preserve">
          <source>does not end at an aligned offset, then unused space is left between the end of the</source>
          <target state="translated">не заканчивается на выровненном смещении,тогда между концом</target>
        </trans-unit>
        <trans-unit id="377fcffe9adee06ca02968edd5fd8a8071c1aba7" translate="yes" xml:space="preserve">
          <source>does not exist.</source>
          <target state="translated">не существует.</target>
        </trans-unit>
        <trans-unit id="641bca2ef38c73a659ef79785e62d3f5baa8f61f" translate="yes" xml:space="preserve">
          <source>does not have to exist ahead of time, but if it does, it must be a well-formed SQLite database.</source>
          <target state="translated">не обязательно должна существовать заранее,но если она существует,то это должна быть хорошо сформированная база данных SQLite.</target>
        </trans-unit>
        <trans-unit id="01ff142009a5f8032f7ee8c713d4862e99e8a179" translate="yes" xml:space="preserve">
          <source>does not matter</source>
          <target state="translated">не имеет значения</target>
        </trans-unit>
        <trans-unit id="74907fccd4ec54cd5d68b46e5c02fd033c0786ab" translate="yes" xml:space="preserve">
          <source>dot-commands</source>
          <target state="translated">dot-commands</target>
        </trans-unit>
        <trans-unit id="b9af05deb9ce5a02f5ce34200ded6f62e219cfd5" translate="yes" xml:space="preserve">
          <source>double-quoted string literal</source>
          <target state="translated">двускатный строковый литерал</target>
        </trans-unit>
        <trans-unit id="b1239cd29894d7adc0a5caa52e19006e8bd0efe0" translate="yes" xml:space="preserve">
          <source>drop-index-stmt</source>
          <target state="translated">drop-index-stmt</target>
        </trans-unit>
        <trans-unit id="76c34471476d701cbdc0fa45f2da766364b983fb" translate="yes" xml:space="preserve">
          <source>drop-index-stmt:</source>
          <target state="translated">drop-index-stmt:</target>
        </trans-unit>
        <trans-unit id="ad19a7f789c29f19fa5965edac971e3737c2d613" translate="yes" xml:space="preserve">
          <source>drop-table-stmt</source>
          <target state="translated">drop-table-stmt</target>
        </trans-unit>
        <trans-unit id="f601d19f2d691f1190bfcd7096505bebc6f1bf39" translate="yes" xml:space="preserve">
          <source>drop-table-stmt:</source>
          <target state="translated">drop-table-stmt:</target>
        </trans-unit>
        <trans-unit id="6b6c770971b63888525f230c63f2e6a35ba32b56" translate="yes" xml:space="preserve">
          <source>drop-trigger-stmt</source>
          <target state="translated">drop-trigger-stmt</target>
        </trans-unit>
        <trans-unit id="a3338f82f6c9a1fa5ef75645a876b4ca722b1f1c" translate="yes" xml:space="preserve">
          <source>drop-trigger-stmt:</source>
          <target state="translated">drop-trigger-stmt:</target>
        </trans-unit>
        <trans-unit id="93e268e62e706671b1ce86cef75677fb2c43cb53" translate="yes" xml:space="preserve">
          <source>drop-view-stmt</source>
          <target state="translated">drop-view-stmt</target>
        </trans-unit>
        <trans-unit id="98793d42d6e4a7e83a8345876f12e0c9d53e2eef" translate="yes" xml:space="preserve">
          <source>drop-view-stmt:</source>
          <target state="translated">drop-view-stmt:</target>
        </trans-unit>
        <trans-unit id="071260b746ba57f340500ae7cc4eb2fd719d515f" translate="yes" xml:space="preserve">
          <source>during the original sqlite3_set_auxdata() call when a memory allocation error occurs.</source>
          <target state="translated">во время оригинального вызова sqlite3_set_auxdata()при ошибке выделения памяти.</target>
        </trans-unit>
        <trans-unit id="d83d02812e459984c7d03919cfd55051e408562d" translate="yes" xml:space="preserve">
          <source>e, E</source>
          <target state="translated">д,е</target>
        </trans-unit>
        <trans-unit id="37c1125848657fc676c21c866beb464e38ef4b21" translate="yes" xml:space="preserve">
          <source>edit()</source>
          <target state="translated">edit()</target>
        </trans-unit>
        <trans-unit id="57a0f05317b3392c96b8f9ab6b229f95535f83d5" translate="yes" xml:space="preserve">
          <source>editdist3</source>
          <target state="translated">editdist3</target>
        </trans-unit>
        <trans-unit id="9bc5da07cdd1f4e53a6843c3642aa6902f3b0538" translate="yes" xml:space="preserve">
          <source>editdist3('TABLENAME');</source>
          <target state="translated">editdist3('TABLENAME');</target>
        </trans-unit>
        <trans-unit id="e08f7c1b870feec616cdc73f5ce80136301ad106" translate="yes" xml:space="preserve">
          <source>editdist3('string1', 'string2');</source>
          <target state="translated">editdist3('string1','string2');</target>
        </trans-unit>
        <trans-unit id="bca0a414dba249eb6942468f32d33fb4478e739b" translate="yes" xml:space="preserve">
          <source>editdist3('string1', 'string2', langid);</source>
          <target state="translated">editdist3('string1','string2',langid);</target>
        </trans-unit>
        <trans-unit id="792496cdf1c1b5b9ad44046ca6b64a42c3c4512e" translate="yes" xml:space="preserve">
          <source>embedded</source>
          <target state="translated">embedded</target>
        </trans-unit>
        <trans-unit id="998adb863cca09d9463736279c3fff74d91d1705" translate="yes" xml:space="preserve">
          <source>enable_fkey 0 enable_trigger 1 enable_view 1 fts3_tokenizer 0 load_extension 0 no_ckpt_on_close 0 enable_qpsg 0 trigger_eqp 0 reset_database 0 defensive 0 writable_schema 0 legacy_alter_table 0 dqs_dml 1 dqs_ddl 1</source>
          <target state="translated">enable_fkey 0 enable_trigger 1 enable_view 1 fts3_tokenizer 0 load_extension 0 no_ckpt_on_close 0 enable_qpsg 0 trigger_eqp 0 reset_database 0 defensive 0 writable_schema 0 legacy_alter_table 0 dqs_dml 1 dqs_ddl 1</target>
        </trans-unit>
        <trans-unit id="387f1b231751dfeb40b25d660e537ef1f69e6023" translate="yes" xml:space="preserve">
          <source>enable_load_extension</source>
          <target state="translated">enable_load_extension</target>
        </trans-unit>
        <trans-unit id="14a9dc09e10179b15beaf94c0aed53904ace0336" translate="yes" xml:space="preserve">
          <source>encoding</source>
          <target state="translated">encoding</target>
        </trans-unit>
        <trans-unit id="a75f3a2b4b34d39eea3b6ff66f1ecc4bffe9f184" translate="yes" xml:space="preserve">
          <source>end_block</source>
          <target state="translated">end_block</target>
        </trans-unit>
        <trans-unit id="a631752e25824821ffba31f3a39527a236cc61ff" translate="yes" xml:space="preserve">
          <source>entries associated with the current</source>
          <target state="translated">записи,связанные с текущим</target>
        </trans-unit>
        <trans-unit id="1ec5d4ed6ebb062be5d42f466e4efbd5e57e40f1" translate="yes" xml:space="preserve">
          <source>entries belonging to the</source>
          <target state="translated">записи,принадлежащие</target>
        </trans-unit>
        <trans-unit id="709aef6e118d5b76ab1148a0ab9f6d69f9279550" translate="yes" xml:space="preserve">
          <source>entries can be trusted. If the value has changed, then the</source>
          <target state="translated">Записям можно доверять.Если значение изменилось,то</target>
        </trans-unit>
        <trans-unit id="85f7b1bc55104e7e66c07dc1be04afa2bd664a0a" translate="yes" xml:space="preserve">
          <source>entries cannot be trusted and all entries associated with the current</source>
          <target state="translated">записям нельзя доверять,и все записи,связанные с текущими</target>
        </trans-unit>
        <trans-unit id="654d4f822486113f418837bf55e82916f0b35487" translate="yes" xml:space="preserve">
          <source>entries in the 4th argument are the datatypes for the corresponding columns.</source>
          <target state="translated">Записи в 4-м аргументе-это типы данных для соответствующих столбцов.</target>
        </trans-unit>
        <trans-unit id="f7945d1f26f95249028d72284c9490059689d13c" translate="yes" xml:space="preserve">
          <source>entries of the fourth argument. If the &lt;a href=&quot;pragma#pragma_show_datatypes&quot;&gt;SHOW_DATATYPES&lt;/a&gt; pragma is on (it is off by default) then the second</source>
          <target state="translated">записи четвертого аргумента. Если прагма &lt;a href=&quot;pragma#pragma_show_datatypes&quot;&gt;SHOW_DATATYPES включена&lt;/a&gt; (по умолчанию выключена), то вторая</target>
        </trans-unit>
        <trans-unit id="280f543cdbd254ab944d78741a27fdb8bf3f95cf" translate="yes" xml:space="preserve">
          <source>entries shall be discarded.</source>
          <target state="translated">записи должны быть отброшены.</target>
        </trans-unit>
        <trans-unit id="bf945df2f3095466adcb2167961016a9ea71944c" translate="yes" xml:space="preserve">
          <source>eponymous-only virtual table</source>
          <target state="translated">виртуальный стол только для одночленов</target>
        </trans-unit>
        <trans-unit id="0f99a5ff146904dbbda517050a5319eb3ca440d5" translate="yes" xml:space="preserve">
          <source>errorcode</source>
          <target state="translated">errorcode</target>
        </trans-unit>
        <trans-unit id="acceb80b5ac4c3e2e1d50a61df6b478034b5b756" translate="yes" xml:space="preserve">
          <source>errors before the analysis quits, with N defaulting to 100. If pragma integrity_check finds no errors, a single row with the value 'ok' is returned.</source>
          <target state="translated">ошибки до завершения анализа,с N по умолчанию 100.Если прагма integrity_check не находит ошибок,возвращается одна строка со значением 'ok'.</target>
        </trans-unit>
        <trans-unit id="822bc13e2d55b402eb4233cb23c9d414a7a03bc1" translate="yes" xml:space="preserve">
          <source>eval</source>
          <target state="translated">eval</target>
        </trans-unit>
        <trans-unit id="d3392809688926aba0df1d1831abdb9706773b01" translate="yes" xml:space="preserve">
          <source>evaluated against the first row in the window frame for each row.</source>
          <target state="translated">вычисляется по отношению к первой строке оконной рамы для каждой строки.</target>
        </trans-unit>
        <trans-unit id="fc9297b2765c344706da49c994de933ab6eda1b2" translate="yes" xml:space="preserve">
          <source>evaluated against the last row in the window frame for each row.</source>
          <target state="translated">вычисляется по последней строке оконной рамы для каждой строки.</target>
        </trans-unit>
        <trans-unit id="bdbb5e9a8b0844bb5560995cf77f56027a44cd67" translate="yes" xml:space="preserve">
          <source>evaluated against the row</source>
          <target state="translated">оценённый по строке</target>
        </trans-unit>
        <trans-unit id="02643424851ce77da1834f8919d239ba68c8db5e" translate="yes" xml:space="preserve">
          <source>events. In this context, this should be interpreted as any failure that causes the system to stop operating. For example a power failure or operating system crash.</source>
          <target state="translated">События.В этом контексте это следует понимать как любой сбой,приводящий к остановке работы системы.Например,сбой электропитания или отказ операционной системы.</target>
        </trans-unit>
        <trans-unit id="f286af69516747bcdd2047f09499b048e958ab72" translate="yes" xml:space="preserve">
          <source>every term within the subquery must have a FROM clause, and</source>
          <target state="translated">каждый срок в подзапросе должен иметь пункт FROM,и</target>
        </trans-unit>
        <trans-unit id="fa361dc6994cb4f44130d42a561627e721bc4af8" translate="yes" xml:space="preserve">
          <source>exactly</source>
          <target state="translated">exactly</target>
        </trans-unit>
        <trans-unit id="230817149d73cce07a82f8e696f89d9363ba8450" translate="yes" xml:space="preserve">
          <source>except that, for the purposes of auxiliary functions, the query still appears to contain just two phrases - &quot;(first OR 1st)&quot; being treated as a single phrase.</source>
          <target state="translated">за исключением того,что для целей вспомогательных функций запрос по-прежнему содержит всего две фразы-&quot;(первая ИЛИ 1)&quot;,трактуемые как одна фраза.</target>
        </trans-unit>
        <trans-unit id="b2dfded7c23121e68617a80642f76c91c6a0814c" translate="yes" xml:space="preserve">
          <source>except when one or both of the operands are NULL. In this case, if both operands are NULL, then the IS operator evaluates to 1 (true) and the IS NOT operator evaluates to 0 (false). If one operand is NULL and the other is not, then the IS operator evaluates to 0 (false) and the IS NOT operator is 1 (true). It is not possible for an IS or IS NOT expression to evaluate to NULL. Operators</source>
          <target state="translated">за исключением случаев,когда один или оба операнда NULL.В этом случае,если оба операнда NULL,оператор IS вычисляет значение 1 (истина),а оператор IS NOT вычисляет значение 0 (ложь).Если один операнд NULL,а другой нет,то оператор IS вычисляет 0 (ложь),а оператор IS NOT вычисляет 1 (истина).Выражение IS или IS NOT невозможно вычислить до NULL.Операторы</target>
        </trans-unit>
        <trans-unit id="341efea4ff7820d46f605881448f6b7199d2bff0" translate="yes" xml:space="preserve">
          <source>exclusive</source>
          <target state="translated">exclusive</target>
        </trans-unit>
        <trans-unit id="203f0f0676197cb25d628b21f6bd11182647b4a9" translate="yes" xml:space="preserve">
          <source>exclusive lock</source>
          <target state="translated">эксклюзивный замок</target>
        </trans-unit>
        <trans-unit id="1d51dc775c9b0ff2a9c2a77662259f03c5216e1b" translate="yes" xml:space="preserve">
          <source>exclusive of checkpoint time</source>
          <target state="translated">без учёта времени прохождения контрольно-пропускного пункта</target>
        </trans-unit>
        <trans-unit id="77ceec668669413e22d592af19e1db9dc1ee31da" translate="yes" xml:space="preserve">
          <source>exclusive-lock</source>
          <target state="translated">exclusive-lock</target>
        </trans-unit>
        <trans-unit id="4d68c8f13459c0edb40504de5003ec2a6b74e613" translate="yes" xml:space="preserve">
          <source>exists</source>
          <target state="translated">exists</target>
        </trans-unit>
        <trans-unit id="4dcb913c295ef75754c26deecb6ec94265c0810e" translate="yes" xml:space="preserve">
          <source>exists in the file-system. If one does, then it is rolled back before continuing.</source>
          <target state="translated">существует в файловой системе.Если она существует,то перед продолжением она откатывается.</target>
        </trans-unit>
        <trans-unit id="e5d67d3ea99a7f1ba02bb22695f0cfd741762e38" translate="yes" xml:space="preserve">
          <source>expected page size</source>
          <target state="translated">ожидаемый размер страницы</target>
        </trans-unit>
        <trans-unit id="5649c14de6e8ef0c56a2740800447bdb77834dc8" translate="yes" xml:space="preserve">
          <source>expected page-size</source>
          <target state="translated">ожидаемый размер страницы</target>
        </trans-unit>
        <trans-unit id="0fd1860204d6cee43392972817e66792ee702b89" translate="yes" xml:space="preserve">
          <source>expr</source>
          <target state="translated">expr</target>
        </trans-unit>
        <trans-unit id="75563894adecec54963ac1940529d987c940aac9" translate="yes" xml:space="preserve">
          <source>expr-list</source>
          <target state="translated">expr-list</target>
        </trans-unit>
        <trans-unit id="55830e93638a4f4898091a656bfff39ba93fffc1" translate="yes" xml:space="preserve">
          <source>expr-list-1</source>
          <target state="translated">expr-list-1</target>
        </trans-unit>
        <trans-unit id="2fcfb5d4476641dff7a1ef1b229a19391f9c4014" translate="yes" xml:space="preserve">
          <source>expr-list-N</source>
          <target state="translated">expr-list-N</target>
        </trans-unit>
        <trans-unit id="5fe6b6350858574c1dc707d3b12e3fe897032361" translate="yes" xml:space="preserve">
          <source>expr1</source>
          <target state="translated">expr1</target>
        </trans-unit>
        <trans-unit id="3b021f86608debf8d6cae1726bc4a1cfadb2c8ac" translate="yes" xml:space="preserve">
          <source>expr:</source>
          <target state="translated">expr:</target>
        </trans-unit>
        <trans-unit id="f525df0854c03feb0ab2a39d2a4c172e85f5a77e" translate="yes" xml:space="preserve">
          <source>expresses the same idea this way:</source>
          <target state="translated">выражает ту же идею:</target>
        </trans-unit>
        <trans-unit id="ec9814396ba26fa02dc3261046ba55a3b4bb32a6" translate="yes" xml:space="preserve">
          <source>expression</source>
          <target state="translated">expression</target>
        </trans-unit>
        <trans-unit id="62220ff14e33670fae0a39debe57275f251f511a" translate="yes" xml:space="preserve">
          <source>expression is evaluated exactly once in the first example but might be evaluated multiple times in the second:</source>
          <target state="translated">выражение вычисляется ровно один раз в первом примере,но может быть вычислено несколько раз во втором:</target>
        </trans-unit>
        <trans-unit id="40abbe6fcda7e9667d8386c5ca8449df1a8ebc39" translate="yes" xml:space="preserve">
          <source>expression is only evaluated once.</source>
          <target state="translated">выражение оценивается только один раз.</target>
        </trans-unit>
        <trans-unit id="42bf1371a52b4438f0dca3826a8cfb95b022d2d3" translate="yes" xml:space="preserve">
          <source>expression is only evaluated once. The precedence of the BETWEEN operator is the same as the precedence as operators &lt;b&gt;==&lt;/b&gt; and &lt;b&gt;!=&lt;/b&gt; and &lt;b&gt;LIKE&lt;/b&gt; and groups left to right.</source>
          <target state="translated">выражение оценивается только один раз. Приоритет оператора BETWEEN такой же, как приоритет операторов &lt;b&gt;==&lt;/b&gt; и &lt;b&gt;! =&lt;/b&gt; И &lt;b&gt;LIKE&lt;/b&gt; и групп слева направо.</target>
        </trans-unit>
        <trans-unit id="4d63a64bd738c5a0ff2f0a05eacd4de13d5d27bc" translate="yes" xml:space="preserve">
          <source>ext3 barrier problem</source>
          <target state="translated">проблема с барьером ext3</target>
        </trans-unit>
        <trans-unit id="4a0a19218e082a343a1b17e5333409af9d98f0f5" translate="yes" xml:space="preserve">
          <source>f</source>
          <target state="translated">f</target>
        </trans-unit>
        <trans-unit id="f16cea13e3b8106da900ae83a254afb3db8a17f6" translate="yes" xml:space="preserve">
          <source>f(q&lt;sub&gt;i&lt;/sub&gt;,D)</source>
          <target state="translated">f(q&lt;sub&gt;i&lt;/sub&gt;,D)</target>
        </trans-unit>
        <trans-unit id="ea0990af60b7768e3f9b51bc2a424c3ee004d7c7" translate="yes" xml:space="preserve">
          <source>factored-select-stmt</source>
          <target state="translated">factored-select-stmt</target>
        </trans-unit>
        <trans-unit id="c5c976c14ae01d1eef57a2b7773c2cf3486abd54" translate="yes" xml:space="preserve">
          <source>factored-select-stmt:</source>
          <target state="translated">factored-select-stmt:</target>
        </trans-unit>
        <trans-unit id="a602e216eb44a3ac5e096036eeaaef6bb9159677" translate="yes" xml:space="preserve">
          <source>fail</source>
          <target state="translated">fail</target>
        </trans-unit>
        <trans-unit id="4341c45abdd0ad82102a6068415546d5a2610a64" translate="yes" xml:space="preserve">
          <source>fails because the other connection is also holding a</source>
          <target state="translated">выходит из строя,потому что другое соединение также имеет</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="14f69e466bc2953f94d45bcccf6069d0a2108b51" translate="yes" xml:space="preserve">
          <source>feature is enabled, then the database file may be accessed through an existing</source>
          <target state="translated">включена функция,после чего к файлу базы данных можно получить доступ через существующую</target>
        </trans-unit>
        <trans-unit id="5b95b196735b5352d82785a3708e3f46b84376b1" translate="yes" xml:space="preserve">
          <source>feature, multiple</source>
          <target state="translated">многофункциональный</target>
        </trans-unit>
        <trans-unit id="7d0c9107964849899a3629a8ea2d17a81c9c5347" translate="yes" xml:space="preserve">
          <source>ff_sqlitert_requirements</source>
          <target state="translated">ff_sqlitert_requirements</target>
        </trans-unit>
        <trans-unit id="7936a6ee8bcdda090ac0b5e9cb8863346c75fb2a" translate="yes" xml:space="preserve">
          <source>field (see section</source>
          <target state="translated">поле (см.раздел</target>
        </trans-unit>
        <trans-unit id="4998d01ce25e18f161607629bc89f29f6c160bf6" translate="yes" xml:space="preserve">
          <source>field is incremented. The</source>
          <target state="translated">поле увеличивается.</target>
        </trans-unit>
        <trans-unit id="4f08083eec660508b6e642902f45b32e4e71e876" translate="yes" xml:space="preserve">
          <source>field of a</source>
          <target state="translated">сфера</target>
        </trans-unit>
        <trans-unit id="e1213369ab3a6b695c4ceb62b6648adf20a8e044" translate="yes" xml:space="preserve">
          <source>field of the</source>
          <target state="translated">сфера</target>
        </trans-unit>
        <trans-unit id="f1755d57cc8523089c31cfeac3dca19bee3f08fc" translate="yes" xml:space="preserve">
          <source>field of the preceding</source>
          <target state="translated">область предыдущего</target>
        </trans-unit>
        <trans-unit id="86de638affccc19c87b9be56b86e627e44bb8edc" translate="yes" xml:space="preserve">
          <source>field read from the</source>
          <target state="translated">поле считывания</target>
        </trans-unit>
        <trans-unit id="53ee6dcf0c112930dc23795fba4a2baa1ff6360a" translate="yes" xml:space="preserve">
          <source>field stored in the</source>
          <target state="translated">поле,хранящееся в</target>
        </trans-unit>
        <trans-unit id="59569095a2fb6c9b65bf6232c3671426d154e5da" translate="yes" xml:space="preserve">
          <source>field that appears in the database file header that consumes the first 100 bytes of the read block is not the same as the connections current</source>
          <target state="translated">поле,которое появляется в заголовке файла базы данных,потребляющее первые 100 байт блока чтения,не совпадает с текущими соединениями.</target>
        </trans-unit>
        <trans-unit id="86033ef88527ec50d3ec22ea79efeed558d8429a" translate="yes" xml:space="preserve">
          <source>field that appears in the database file header that consumes the first 100 bytes of the read block is the same as the connections current</source>
          <target state="translated">поле,которое появляется в заголовке файла базы данных,потребляющее первые 100 байт блока чтения,совпадает с текущими соединениями.</target>
        </trans-unit>
        <trans-unit id="c3cc57757edd2336f88ff17f0244daea9634334c" translate="yes" xml:space="preserve">
          <source>field, SQLite shall</source>
          <target state="translated">поле,SQLite должен</target>
        </trans-unit>
        <trans-unit id="609fd0aaefd7890b1db2233fb4f775833c411b9f" translate="yes" xml:space="preserve">
          <source>field, interpreting each byte as an 8-bit signed integer.</source>
          <target state="translated">поле,интерпретирующее каждый байт как 8-битное целое число со знаком.</target>
        </trans-unit>
        <trans-unit id="a328986a78b8302bf6a0da48e5b4d60bafdcad05" translate="yes" xml:space="preserve">
          <source>figure_journal_header</source>
          <target state="translated">figure_journal_header</target>
        </trans-unit>
        <trans-unit id="cd0d464e32eaac478e74931ba769a01dd7eaf937" translate="yes" xml:space="preserve">
          <source>figure_journal_record</source>
          <target state="translated">figure_journal_record</target>
        </trans-unit>
        <trans-unit id="69a2d80b76374c1ac34e1467b1c891d92db5ce17" translate="yes" xml:space="preserve">
          <source>figure_master_journal_ptr</source>
          <target state="translated">figure_master_journal_ptr</target>
        </trans-unit>
        <trans-unit id="a86ef353d5a904da9de2673057551c049d8fdc5a" translate="yes" xml:space="preserve">
          <source>figure_vfs_role</source>
          <target state="translated">figure_vfs_role</target>
        </trans-unit>
        <trans-unit id="971c419dd609331343dee105fffd0f4608dc0bf2" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">file</target>
        </trans-unit>
        <trans-unit id="702b87e4d75404614b300406a49c0285d756559d" translate="yes" xml:space="preserve">
          <source>file change counter</source>
          <target state="translated">счётчик изменений файла</target>
        </trans-unit>
        <trans-unit id="487307e7e61a38e4f8fe5135dd9bf9f3f7939a18" translate="yes" xml:space="preserve">
          <source>file handle.</source>
          <target state="translated">ручка файла.</target>
        </trans-unit>
        <trans-unit id="80e60dcfa9899ffcc0a009f862a9e2fe82df1c76" translate="yes" xml:space="preserve">
          <source>file handle. Each call to xWrite shall write the contents of a single</source>
          <target state="translated">ручка файла.Каждый вызов в xWrite должен записывать содержимое одиночного</target>
        </trans-unit>
        <trans-unit id="07cbce3132cfecf63ef2bb79f4c715b337fda5ff" translate="yes" xml:space="preserve">
          <source>file) to the persistent media. If a failure does occur, it is not known whether or not any of the write operations performed by SQLite since the last time a file was</source>
          <target state="translated">файл)на постоянный носитель.Если сбой все-таки произошел,то неизвестно,выполнялась ли какая-либо из операций записи SQLite с момента,когда последний раз файл был</target>
        </trans-unit>
        <trans-unit id="017bbae877af866c8e4c6c78a65996f22f5a3d08" translate="yes" xml:space="preserve">
          <source>file. Instead of rolling back the journal file, in this case it is deleted from the file-system by calling the VFS xDelete() method. TODO: Technically, there is a race condition here. This step should be moved to after the exclusive lock is held.</source>
          <target state="translated">Файл.Вместо отката файла журнала,в этом случае он удаляется из файловой системы вызовом метода VFS xDelete().TODO:Технически,здесь присутствует состояние гонки.На этот шаг следует перейти после удержания эксклюзивной блокировки.</target>
        </trans-unit>
        <trans-unit id="93b8f082ed0872df805e9eeff9b12dc1633a5bb9" translate="yes" xml:space="preserve">
          <source>file:///C:/Documents%20and%20Settings/fred/Desktop/data.db</source>
          <target state="translated">file:///C:/Documents%20and%20Settings/fred/Desktop/data.db</target>
        </trans-unit>
        <trans-unit id="7126e2ec25f8bcef2f62e27316b66bd99b382a02" translate="yes" xml:space="preserve">
          <source>file:///home/fred/data.db</source>
          <target state="translated">file:///home/fred/data.db</target>
        </trans-unit>
        <trans-unit id="df28c730be1a0f34c4100d4cd32f68000ae58487" translate="yes" xml:space="preserve">
          <source>file://darkstar/home/fred/data.db</source>
          <target state="translated">file://darkstar/home/fred/data.db</target>
        </trans-unit>
        <trans-unit id="4f4b9f0c1bc201b0c78caea2c0e5dc2b4a300e7c" translate="yes" xml:space="preserve">
          <source>file://localhost/home/fred/data.db</source>
          <target state="translated">file://localhost/home/fred/data.db</target>
        </trans-unit>
        <trans-unit id="a369f945a781ac847e589233201aa4c5cf535115" translate="yes" xml:space="preserve">
          <source>file:/home/fred/data.db</source>
          <target state="translated">file:/home/fred/data.db</target>
        </trans-unit>
        <trans-unit id="a38eab420e3fae2b33a2271a1e70ccf010e63a7b" translate="yes" xml:space="preserve">
          <source>file:/home/fred/data.db?vfs=unix-dotfile</source>
          <target state="translated">file:/home/fred/data.db?vfs=unix-dotfile</target>
        </trans-unit>
        <trans-unit id="6e47abb4b9297d6acb29b40245000fb51eb3063f" translate="yes" xml:space="preserve">
          <source>file:data.db</source>
          <target state="translated">file:data.db</target>
        </trans-unit>
        <trans-unit id="e768d6169c108ea99a13b0055c05d873034296d2" translate="yes" xml:space="preserve">
          <source>file:data.db?mode=readonly</source>
          <target state="translated">file:data.db?mode=readonly</target>
        </trans-unit>
        <trans-unit id="16c9d1e47363fd8226deb42c378187fd86275d4a" translate="yes" xml:space="preserve">
          <source>file:data.db?mode=ro&amp;amp;cache=private</source>
          <target state="translated">file:data.db?mode=ro&amp;amp;cache=private</target>
        </trans-unit>
        <trans-unit id="08ff138a21939da43c812bebd474e3402077be4a" translate="yes" xml:space="preserve">
          <source>file:somefile.db?psow=0</source>
          <target state="translated">file:somefile.db?psow=0</target>
        </trans-unit>
        <trans-unit id="3e70eeb3efdbfd686d07d796bca919e353e5d944" translate="yes" xml:space="preserve">
          <source>file:somefile.db?psow=1</source>
          <target state="translated">file:somefile.db?psow=1</target>
        </trans-unit>
        <trans-unit id="08deae8d9ea9bc0b84f94475d868351830e9f7e7" translate="yes" xml:space="preserve">
          <source>filename</source>
          <target state="translated">filename</target>
        </trans-unit>
        <trans-unit id="1b629eda5634be2bf7fb8c7db4cf226fb9e3c587" translate="yes" xml:space="preserve">
          <source>filter-clause</source>
          <target state="translated">filter-clause</target>
        </trans-unit>
        <trans-unit id="91e4a00203e0e6d72ee763d14af010349712798c" translate="yes" xml:space="preserve">
          <source>filter-clause:</source>
          <target state="translated">filter-clause:</target>
        </trans-unit>
        <trans-unit id="43943c27098a0569b9750ac86a573614a64fba4b" translate="yes" xml:space="preserve">
          <source>followed by a second set of zero or more</source>
          <target state="translated">затем второй набор нулей или более</target>
        </trans-unit>
        <trans-unit id="75e5395019e2f0c582c99713b769e4987dd7dacb" translate="yes" xml:space="preserve">
          <source>following a write operation that appends data to the end of the file without modifying any of the existing file content but before the file has been successfully</source>
          <target state="translated">после операции записи,которая добавляет данные в конец файла без изменения содержимого существующего файла,но до того,как файл был успешно выполнен.</target>
        </trans-unit>
        <trans-unit id="0cc4d93b27ec7ee23647d03b7f8c293a6075d276" translate="yes" xml:space="preserve">
          <source>following each operation.</source>
          <target state="translated">после каждой операции.</target>
        </trans-unit>
        <trans-unit id="88c86d9cbb50827b068a3a887ff7a2b182183295" translate="yes" xml:space="preserve">
          <source>for a complete description of the format used. The</source>
          <target state="translated">для полного описания используемого формата.</target>
        </trans-unit>
        <trans-unit id="9ed7689f27323ba5c7e9eecbd826e1d18033e631" translate="yes" xml:space="preserve">
          <source>for a description of exactly how and for how long page data is stored in the</source>
          <target state="translated">для описания того,как именно и в течение какого времени данные страницы хранятся в</target>
        </trans-unit>
        <trans-unit id="e25fcb15ddedf9e340fe4072b611b16fe9c43c55" translate="yes" xml:space="preserve">
          <source>for cells on non-leaf nodes, that there is an entry in the %_parent table mapping from the cell's child node to the node that it resides on.</source>
          <target state="translated">для ячеек на нелифтовых узлах,что в отображении таблицы %_parent есть запись от дочернего узла ячейки к узлу,на котором она находится.</target>
        </trans-unit>
        <trans-unit id="c05a5cfab4cf1dfc894fbe131813fcbf216d64d6" translate="yes" xml:space="preserve">
          <source>for details).</source>
          <target state="translated">для подробностей).</target>
        </trans-unit>
        <trans-unit id="f44cc3d49856296db60e43c79602664815fdf535" translate="yes" xml:space="preserve">
          <source>for details.</source>
          <target state="translated">для подробностей.</target>
        </trans-unit>
        <trans-unit id="d6b8e31349aa1de5f1e7e114d0b242ed445398f5" translate="yes" xml:space="preserve">
          <source>for each dimension, (coord1 &amp;lt;= coord2).</source>
          <target state="translated">для каждого измерения (координата1 &amp;lt;= координата2).</target>
        </trans-unit>
        <trans-unit id="d75ee088aa4dc8c5d96cb7a68d0105c32942baed" translate="yes" xml:space="preserve">
          <source>for leaf nodes, that there is an entry in the %_rowid table corresponding to the cell's rowid value that points to the correct node.</source>
          <target state="translated">для узлов листа,что в таблице %_rowid есть запись,соответствующая значению rowid ячейки,которая указывает на правильный узел.</target>
        </trans-unit>
        <trans-unit id="6ed4334dee5edc4804d8096a3489a2e6f21f2b1a" translate="yes" xml:space="preserve">
          <source>for purging, SQLite is required to</source>
          <target state="translated">для очистки,SQLite требуется,чтобы</target>
        </trans-unit>
        <trans-unit id="58e065d2d193d562f842763031ba260424e214d2" translate="yes" xml:space="preserve">
          <source>for the CREATE VIRTUAL TABLE statement of a union-vtab can be either a &lt;a href=&quot;lang_select&quot;&gt;SELECT&lt;/a&gt; statement or a &lt;a href=&quot;lang_select#values&quot;&gt;VALUES clause&lt;/a&gt;.</source>
          <target state="translated">для оператора CREATE VIRTUAL TABLE в union-vtab может быть либо &lt;a href=&quot;lang_select&quot;&gt;оператор SELECT,&lt;/a&gt; либо предложение &lt;a href=&quot;lang_select#values&quot;&gt;VALUES&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e40621d02c18c6ca688416b97984782ae4a243d3" translate="yes" xml:space="preserve">
          <source>for usable cached versions of the required database pages before loading it from the database file. If no usable cache entry can be found and the database page data is loaded from the database file, it is cached in the</source>
          <target state="translated">для полезных кэшированных версий требуемых страниц БД перед загрузкой из файла БД.Если полезная запись в кэше не найдена и данные о страницах БД загружаются из файла БД,то она кэшируется в</target>
        </trans-unit>
        <trans-unit id="949c65eb75010e5d270331d46f63458df6f5f162" translate="yes" xml:space="preserve">
          <source>for which it would be safe to update the corresponding database file page with the modified contents of without risking database corruption is known as a &lt;b&gt;&lt;i&gt;writable dirty page&lt;/i&gt;&lt;/b&gt;.</source>
          <target state="translated">для которой было бы безопасно обновить соответствующую страницу файла базы данных с измененным содержимым без риска повреждения базы данных, известной как &amp;laquo; &lt;b&gt;&lt;i&gt;грязная страница&lt;/i&gt;&lt;/b&gt; с возможностью &lt;b&gt;&lt;i&gt;записи&amp;raquo;&lt;/i&gt;&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="95b7d769bdfc126987b8ce4b70ae2c5cb728176a" translate="yes" xml:space="preserve">
          <source>for which the cached data has been modified since it was loaded from the database file, and so no longer matches the current contents of the corresponding database file page. A</source>
          <target state="translated">для которых кэшированные данные были изменены с момента их загрузки из файла базы данных,и поэтому больше не совпадают с текущим содержимым соответствующей страницы файла базы данных.A</target>
        </trans-unit>
        <trans-unit id="dc011d1671dd563ed28d923f25b9d7622688513e" translate="yes" xml:space="preserve">
          <source>for which the number of tokens between the end of the first phrase and the beginning of the last phrase in the clump is less than or equal to</source>
          <target state="translated">для которых количество жетонов между концом первой фразы и началом последней фразы в группе меньше или равно</target>
        </trans-unit>
        <trans-unit id="7e0a26a0682abd1d7eb923dce1c895082a1dc04e" translate="yes" xml:space="preserve">
          <source>foreign-key-clause</source>
          <target state="translated">foreign-key-clause</target>
        </trans-unit>
        <trans-unit id="1294a18af8fc268937bf921406cb7de68665980f" translate="yes" xml:space="preserve">
          <source>foreign-key-clause:</source>
          <target state="translated">foreign-key-clause:</target>
        </trans-unit>
        <trans-unit id="51c06b3a02e9e3be0d35f5e3eafbbfc88c30453e" translate="yes" xml:space="preserve">
          <source>foreign_key_check</source>
          <target state="translated">foreign_key_check</target>
        </trans-unit>
        <trans-unit id="54df0960bdf639384f9adf2b2f2aa62417d80e8e" translate="yes" xml:space="preserve">
          <source>foreign_key_list</source>
          <target state="translated">foreign_key_list</target>
        </trans-unit>
        <trans-unit id="ef6417ba62bd7d880cdf04cb98d07c7df1cee7e5" translate="yes" xml:space="preserve">
          <source>foreign_keys</source>
          <target state="translated">foreign_keys</target>
        </trans-unit>
        <trans-unit id="70d0b19e0133a558518e9d2224b7fac472beb074" translate="yes" xml:space="preserve">
          <source>format, time-value, modifier, modifier, ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b724f75adcb63bf73f46a042ee35422819ca08" translate="yes" xml:space="preserve">
          <source>format, timestring, modifier, modifier, ...</source>
          <target state="translated">формат,временные рамки,модификатор,...</target>
        </trans-unit>
        <trans-unit id="21ca3cd63f7248755286453d1f6fad13689b2d9a" translate="yes" xml:space="preserve">
          <source>fractional seconds: SS.SSS</source>
          <target state="translated">дробные секунды:SS.SSS</target>
        </trans-unit>
        <trans-unit id="04590f57b3ad8af8d897be877b72bd53f63dfcf2" translate="yes" xml:space="preserve">
          <source>fragments have been located, where</source>
          <target state="translated">были обнаружены фрагменты,где</target>
        </trans-unit>
        <trans-unit id="801256fc07e4cfa276e15afe56004fe584dea907" translate="yes" xml:space="preserve">
          <source>frame-spec</source>
          <target state="translated">frame-spec</target>
        </trans-unit>
        <trans-unit id="a2999b82461050b3eff25a3259b817948245cebd" translate="yes" xml:space="preserve">
          <source>frame-spec:</source>
          <target state="translated">frame-spec:</target>
        </trans-unit>
        <trans-unit id="e7d679448a726df93a0ecc139508c9d3ef48b980" translate="yes" xml:space="preserve">
          <source>frames</source>
          <target state="translated">frames</target>
        </trans-unit>
        <trans-unit id="e1049aca86359ac24bb9071b38a583f960a6e550" translate="yes" xml:space="preserve">
          <source>free()</source>
          <target state="translated">free()</target>
        </trans-unit>
        <trans-unit id="4dd9b8be0391a9ad429b3bbee9862044078d2b1e" translate="yes" xml:space="preserve">
          <source>free-list leaf page</source>
          <target state="translated">страница со свободным списком</target>
        </trans-unit>
        <trans-unit id="6f4ff995faf625678ced8bc724abda2ef290d022" translate="yes" xml:space="preserve">
          <source>freelist</source>
          <target state="translated">freelist</target>
        </trans-unit>
        <trans-unit id="5d9f53ab9a5c148a5ee567becefb86afbcb4fafa" translate="yes" xml:space="preserve">
          <source>freelist_count</source>
          <target state="translated">freelist_count</target>
        </trans-unit>
        <trans-unit id="48022c60b4d13a5cf9688afa2842ca3ca17758a4" translate="yes" xml:space="preserve">
          <source>from the</source>
          <target state="translated">из</target>
        </trans-unit>
        <trans-unit id="7db519f051c7e860042dd0953ef1c000d3f39b29" translate="yes" xml:space="preserve">
          <source>from the database file using the new file-handle.</source>
          <target state="translated">из файла базы данных с помощью новой файловой рукоятки.</target>
        </trans-unit>
        <trans-unit id="33e7b642cd8fe44075d99562fc10b3f38edcdd41" translate="yes" xml:space="preserve">
          <source>from the file system via a call to the VFS xDelete method.</source>
          <target state="translated">из файловой системы через вызов метода VFS xDelete.</target>
        </trans-unit>
        <trans-unit id="9d9b632c1f95568de79703b89bb55d1ed09137db" translate="yes" xml:space="preserve">
          <source>from the page cache.</source>
          <target state="translated">из кэша страниц.</target>
        </trans-unit>
        <trans-unit id="14927128755e114271d6a139d48dc14a7f5b3ab3" translate="yes" xml:space="preserve">
          <source>fs_assumption_details</source>
          <target state="translated">fs_assumption_details</target>
        </trans-unit>
        <trans-unit id="4ea463cf8401a05a5cf8481e697807e408ec072f" translate="yes" xml:space="preserve">
          <source>fs_characteristics</source>
          <target state="translated">fs_characteristics</target>
        </trans-unit>
        <trans-unit id="a76421afe7b84b4bbdeec0a33e690126a7e7b09e" translate="yes" xml:space="preserve">
          <source>fs_performance</source>
          <target state="translated">fs_performance</target>
        </trans-unit>
        <trans-unit id="8466173b526188e124597ac88e179254f0897ba2" translate="yes" xml:space="preserve">
          <source>fts3_tokenizer</source>
          <target state="translated">fts3_tokenizer</target>
        </trans-unit>
        <trans-unit id="7f7de817ad64e35306e3774650e3a81cf7b52eb0" translate="yes" xml:space="preserve">
          <source>fts3tokenize virtual table</source>
          <target state="translated">fts3tokenize виртуальный стол</target>
        </trans-unit>
        <trans-unit id="b054cb93f25a5c855c4a3e32029bc753ead50282" translate="yes" xml:space="preserve">
          <source>fts4 compress option</source>
          <target state="translated">возможность сжатия fts4</target>
        </trans-unit>
        <trans-unit id="697e9a1dcd344993567a5295632fc0c430abba20" translate="yes" xml:space="preserve">
          <source>fts4aux</source>
          <target state="translated">fts4aux</target>
        </trans-unit>
        <trans-unit id="8108deb1ef111b4472b338988d98a4ae3627c470" translate="yes" xml:space="preserve">
          <source>fts4aux languageid column</source>
          <target state="translated">колонка языка fts4aux</target>
        </trans-unit>
        <trans-unit id="10e7a4420509ce7b2c0ca4fe25d3a020a2863d52" translate="yes" xml:space="preserve">
          <source>fts5 shadow tables</source>
          <target state="translated">fts5 теневые таблицы</target>
        </trans-unit>
        <trans-unit id="98a33f17ed46c9ca3f67a16338503bb706dc9b89" translate="yes" xml:space="preserve">
          <source>fts5 technical differences</source>
          <target state="translated">fts5 технические различия</target>
        </trans-unit>
        <trans-unit id="b1429683d3f572eb298cfe5a02e1c6d8bd695759" translate="yes" xml:space="preserve">
          <source>fts5vocab</source>
          <target state="translated">fts5vocab</target>
        </trans-unit>
        <trans-unit id="808db789196a4f84ab903d8777587c7af5333a85" translate="yes" xml:space="preserve">
          <source>full table scan</source>
          <target state="translated">полное сканирование таблицы</target>
        </trans-unit>
        <trans-unit id="266e7dc89e2b3d9bd7737dd1315eb8bfe1f21481" translate="yes" xml:space="preserve">
          <source>fullfsync</source>
          <target state="translated">fullfsync</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="771d3aa1482eea9b3db222a4d202b055bcffa03f" translate="yes" xml:space="preserve">
          <source>function_list</source>
          <target state="translated">function_list</target>
        </trans-unit>
        <trans-unit id="ef1109da315b9b7441416d4b8ec7fee80d0cc77d" translate="yes" xml:space="preserve">
          <source>g, G</source>
          <target state="translated">г,дж</target>
        </trans-unit>
        <trans-unit id="8fdfcfae9d75939f4a247717b6dfdb6366d642fc" translate="yes" xml:space="preserve">
          <source>gcov</source>
          <target state="translated">gcov</target>
        </trans-unit>
        <trans-unit id="ffa0b1623ec0b7ed51100574d00825d198c77fbc" translate="yes" xml:space="preserve">
          <source>geopoly_area</source>
          <target state="translated">geopoly_area</target>
        </trans-unit>
        <trans-unit id="a606afdcf20f56dec1851d7a837d618d717019ae" translate="yes" xml:space="preserve">
          <source>geopoly_blob</source>
          <target state="translated">geopoly_blob</target>
        </trans-unit>
        <trans-unit id="7b44146fcc24df6db267bec2b0ebe8cafd91af86" translate="yes" xml:space="preserve">
          <source>geopoly_ccw</source>
          <target state="translated">geopoly_ccw</target>
        </trans-unit>
        <trans-unit id="88ba22ed60d50d941e958370906c3a528385c458" translate="yes" xml:space="preserve">
          <source>geopoly_contains_point</source>
          <target state="translated">geopoly_contains_point</target>
        </trans-unit>
        <trans-unit id="1ffa56fd5ad5b4adc4963ccb7ac2e1d9f6addb77" translate="yes" xml:space="preserve">
          <source>geopoly_group_bbox</source>
          <target state="translated">geopoly_group_bbox</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
