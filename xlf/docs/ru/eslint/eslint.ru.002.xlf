<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="eslint">
    <body>
      <group id="eslint">
        <trans-unit id="c7d2155ac722addd7b831828181dec9624fb266f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; or &lt;code&gt;commonjs&lt;/code&gt;&lt;a href=&quot;../user-guide/configuring#specifying-environments&quot;&gt;environments&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; &lt;a href=&quot;../user-guide/configuring#specifying-environments&quot;&gt;среды &lt;/a&gt;node или &lt;code&gt;commonjs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a07b9025274fa2a033cbaaa5f69bb41ee5298f7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodeType&lt;/code&gt; - the node or token type that was reported with the problem.</source>
          <target state="translated">&lt;code&gt;nodeType&lt;/code&gt; - тип узла или токена, о котором было сообщено о проблеме.</target>
        </trans-unit>
        <trans-unit id="d44be12fed8fe4c7cdf7e5e2f4471a6555a7bc6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node_modules/&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;code&gt;node_modules/&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="384f46cf64cff9e315b941696d4164896822a9be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; - do not check arguments.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; - не проверять аргументы.</target>
        </trans-unit>
        <trans-unit id="b090ad91390c1df68b5f72575cec6e341afcc480" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; - do not check error objects. This is the default setting.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; - не проверять ошибочные объекты. Это значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="edf95455a983a2b97d5a9423077a46ed2e047538" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; - import module without exported bindings.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; - импортировать модуль без экспортированных привязок.</target>
        </trans-unit>
        <trans-unit id="b78f70dc90333999fb966a4a706d4b0c96fba7c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; = import module without exported bindings.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; = модуль импорта без экспортированных привязок.</target>
        </trans-unit>
        <trans-unit id="e64fb5321925e14b22452de710bc2de3275fe99f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nonwords&lt;/code&gt; - applies to unary operators such as: &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;, &lt;code&gt;++&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;!!&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nonwords&lt;/code&gt; - относится к одинарным операторам , такие как: &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;--&lt;/code&gt; , &lt;code&gt;++&lt;/code&gt; , &lt;code&gt;!&lt;/code&gt; , &lt;code&gt;!!&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="765880a399ab6f02e04b6c0d3debfd72a2e2cd4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;npm run test:cli&lt;/code&gt; is an alias of the Mocha cli in &lt;code&gt;./node_modules/.bin/mocha&lt;/code&gt;. &lt;a href=&quot;https://mochajs.org/#command-line-usage&quot;&gt;Options&lt;/a&gt; are available to be provided to help to better control the test to run.</source>
          <target state="translated">&lt;code&gt;npm run test:cli&lt;/code&gt; - это псевдоним Mocha &lt;code&gt;./node_modules/.bin/mocha&lt;/code&gt; в ./node_modules/.bin/mocha . &lt;a href=&quot;https://mochajs.org/#command-line-usage&quot;&gt;Доступны параметры,&lt;/a&gt; которые помогут лучше контролировать выполнение теста.</target>
        </trans-unit>
        <trans-unit id="a8873b6f96c7780858e869c9b7d9e5ca536c3736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectLiteralComputedProperties&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-computed-property-names&quot;&gt;computed object literal property names&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;objectLiteralComputedProperties&lt;/code&gt; - включить &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-computed-property-names&quot;&gt;литеральные имена свойств вычисляемого объекта&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c073dee9bb2bb831da6b0239d1d4997ff4bdd561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectLiteralDuplicateProperties&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-duplicate-object-literal-properties&quot;&gt;duplicate object literal properties&lt;/a&gt; in strict mode</source>
          <target state="translated">&lt;code&gt;objectLiteralDuplicateProperties&lt;/code&gt; - включить &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-duplicate-object-literal-properties&quot;&gt;повторяющиеся свойства литерала объекта&lt;/a&gt; в строгом режиме</target>
        </trans-unit>
        <trans-unit id="2f8a75cc5423aa46591bea3ace7f2872c2417d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectLiteralShorthandMethods&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-method-initializer-shorthand&quot;&gt;object literal shorthand methods&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;objectLiteralShorthandMethods&lt;/code&gt; - включить &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-method-initializer-shorthand&quot;&gt;сокращенные методы объектных литералов&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e695be0dd3d7735f420ad57736da2ee2cce8ad9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectLiteralShorthandProperties&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-property-initializer-shorthand&quot;&gt;object literal shorthand properties&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;objectLiteralShorthandProperties&lt;/code&gt; - включить &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-property-initializer-shorthand&quot;&gt;сокращенные свойства литерала объекта&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4d20dd68438d09312041171ff8ab4750fa31cc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objects&lt;/code&gt; is for object literals and object patterns of destructuring. (e.g. &lt;code&gt;let {a,} = {a: 1};&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;objects&lt;/code&gt; - для объектных литералов и объектных шаблонов деструктуризации. (например, &lt;code&gt;let {a,} = {a: 1};&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="07c69ddb32ebf1cbf36659f8f44586caaff53914" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectsInArrays&lt;/code&gt; sets the spacings between the curly braces and square brackets of object literals that are the first or last element in an array.</source>
          <target state="translated">&lt;code&gt;objectsInArrays&lt;/code&gt; устанавливает интервалы между фигурными и квадратными скобками объектных литералов, которые являются первым или последним элементом в массиве.</target>
        </trans-unit>
        <trans-unit id="ce68e0b0c998b793c65ca22e5a473ec8ac9ff112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectsInObjects&lt;/code&gt; sets the spacing between the curly brace of an object literal that is the last element in an object and the curly brace of the containing object.</source>
          <target state="translated">&lt;code&gt;objectsInObjects&lt;/code&gt; устанавливает интервал между фигурной скобкой литерала объекта, который является последним элементом в объекте, и фигурной скобкой содержащего объекта.</target>
        </trans-unit>
        <trans-unit id="2de0f458dbd19aff17f068e875602abd4e80b48f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;octalLiterals&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-octal-and-binary-literals&quot;&gt;octal literals&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;octalLiterals&lt;/code&gt; - включить &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-octal-and-binary-literals&quot;&gt;восьмеричные литералы&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fb7c667bb1b38e1b80c46eca65068eceefb9ef6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.allowInlineConfig&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.allowInlineConfig&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e23e5a4fdf6ef6798ecc9fc8657da0f084d12940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.baseConfig&lt;/code&gt; (&lt;code&gt;ConfigData | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.baseConfig&lt;/code&gt; ( &lt;code&gt;ConfigData | null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ccc5a9b6d45fd0fefaadfcc2537c6cc4593337ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.cache&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.cache&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="86a2f54aad0168d57705de1cd30e38ecb8232f73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.cacheLocation&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.cacheLocation&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="eebf4a42d17fbf7c8c352d57fe143c8f15f7853d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.cwd&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.cwd&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7ef25eaaba1b54180e9f6cd76cbe7e32e4efa9b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.errorOnUnmatchedPattern&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.errorOnUnmatchedPattern&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1ead31ee810459d2ed1d3eb5277d567b2d10c8df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.extensions&lt;/code&gt; (&lt;code&gt;string[] | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.extensions&lt;/code&gt; ( &lt;code&gt;string[] | null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6328ee48bb61b008a603dcee99fcec0d73a09b21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.filePath&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.filePath&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bc222f360b00c900c6a5fe4c62e7a72ca1383d7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.fix&lt;/code&gt; (&lt;code&gt;boolean | (message: LintMessage) =&amp;gt; boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.fix&lt;/code&gt; ( &lt;code&gt;boolean | (message: LintMessage) =&amp;gt; boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8de54b2afaab07cc12a45d0bbead4cedc67202f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.fixTypes&lt;/code&gt; (&lt;code&gt;(&quot;problem&quot; | &quot;suggestion&quot; | &quot;layout&quot;)[] | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.fixTypes&lt;/code&gt; ( &lt;code&gt;(&quot;problem&quot; | &quot;suggestion&quot; | &quot;layout&quot;)[] | null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2444c2c65fd7e1b186d176cc6d7983f9c05afe46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.globInputPaths&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.globInputPaths&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7e33d5c782388edde327f82fa96f45c28dda35a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.ignore&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.ignore&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8daad7032846271f0bd78c7bc21d94bf72b12828" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.ignorePath&lt;/code&gt; (&lt;code&gt;string | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.ignorePath&lt;/code&gt; ( &lt;code&gt;string | null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3a03057d59997f2d91e7723ea9e8144c9708659d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.overrideConfig&lt;/code&gt; (&lt;code&gt;ConfigData | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.overrideConfig&lt;/code&gt; ( &lt;code&gt;ConfigData | null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9c293007a3b0029d05e7a017db4ecc5205eb33c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.overrideConfigFile&lt;/code&gt; (&lt;code&gt;string | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.overrideConfigFile&lt;/code&gt; ( &lt;code&gt;string | null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c485f9477a4d2c0355b033fcec13727b78e98a1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.plugins&lt;/code&gt; (&lt;code&gt;Record&amp;lt;string, Plugin&amp;gt; | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.plugins&lt;/code&gt; ( &lt;code&gt;Record&amp;lt;string, Plugin&amp;gt; | null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d6fa4ea1d951ef00153475188de16da6846af5fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.reportUnusedDisableDirectives&lt;/code&gt; (&lt;code&gt;&quot;error&quot; | &quot;warn&quot; | &quot;off&quot; | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.reportUnusedDisableDirectives&lt;/code&gt; ( &lt;code&gt;&quot;error&quot; | &quot;warn&quot; | &quot;off&quot; | null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8773d4b4dd2ccad9901ab5ce79a49cc34f928084" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.resolvePluginsRelativeTo&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt; | &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.resolvePluginsRelativeTo&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; | &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6706f2dcb883c6ac6a6f21cebb3c365d142ef04f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.rulePaths&lt;/code&gt; (&lt;code&gt;string[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.rulePaths&lt;/code&gt; ( &lt;code&gt;string[]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="344312b77cf7df150641cfd05c1c18b7243d3484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.useEslintrc&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.useEslintrc&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="97f933229f3cbd830f6e3b9d228fa646999b2f51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.warnIgnored&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.warnIgnored&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1f1eb81580fc13c3c53345c889589a701c11a131" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; (array, optional): The options passed to the rule. The rule severity should not be included in this list.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; (array, optional): параметры, переданные правилу. Серьезность правила не должна быть включена в этот список.</target>
        </trans-unit>
        <trans-unit id="2b2b0f7963fc35570f1e7afb28b068b3074f0e95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; - (optional) Additional options for this run.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; - (необязательно) Дополнительные параметры для этого запуска.</target>
        </trans-unit>
        <trans-unit id="3cfde74554784cd87b376036b229c10f24b876bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; - an array of rule options.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; - массив вариантов правила.</target>
        </trans-unit>
        <trans-unit id="953cca3d6e72a69e66f5bb55ea626d4968eea41a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; - an array of the &lt;a href=&quot;../user-guide/configuring#configuring-rules&quot;&gt;configured options&lt;/a&gt; for this rule. This array does not include the rule severity. For more information, see &lt;a href=&quot;#contextoptions&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; - массив &lt;a href=&quot;../user-guide/configuring#configuring-rules&quot;&gt;настроенных опций&lt;/a&gt; для этого правила. Этот массив не включает серьезность правила. Для получения дополнительной информации см. &lt;a href=&quot;#contextoptions&quot;&gt;Здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02f824487a88f212cffad864ce4af1140650de14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;other&lt;/code&gt;: any other kind of declaration</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; : любой другой вид декларации</target>
        </trans-unit>
        <trans-unit id="bc4477fbb65f6b8fcd53d64bb06b6c3629f2c357" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt; (&lt;code&gt;string | undefined&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; ( &lt;code&gt;string | undefined&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ca9650deea2a9d987054e7c74a4eb8ebd5059ca2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt; (string): A code string representing the result of applying the suggestion fix to the input code</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; (string): строка кода, представляющая результат применения исправления предложения к входному коду.</target>
        </trans-unit>
        <trans-unit id="6798006d75c739786f6b0047691c8976e28d2adc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt; (string, optional): Asserts the output that will be produced when using this rule for a single pass of autofixing (e.g. with the &lt;code&gt;--fix&lt;/code&gt; command line flag). If this is &lt;code&gt;null&lt;/code&gt;, asserts that none of the reported problems suggest autofixes.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; (строка, необязательно): Утверждает вывод, который будет произведен при использовании этого правила для одного прохода автофиксации (например, с &lt;code&gt;--fix&lt;/code&gt; командной строки --fix ). Если это &lt;code&gt;null&lt;/code&gt; , утверждает , что ни один из заявленных проблем не предполагают autofixes.</target>
        </trans-unit>
        <trans-unit id="1d4ec23e8add02587790fe0f2f9fbf4e5bde01de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt; (string, required if the rule fixes code): Asserts the output that will be produced when using this rule for a single pass of autofixing (e.g. with the &lt;code&gt;--fix&lt;/code&gt; command line flag). If this is &lt;code&gt;null&lt;/code&gt;, asserts that none of the reported problems suggest autofixes.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; (строка, обязательная, если код исправляет код): Утверждает вывод, который будет создан при использовании этого правила для одного прохода автофиксации (например, с &lt;code&gt;--fix&lt;/code&gt; командной строки --fix ). Если это &lt;code&gt;null&lt;/code&gt; , утверждает , что ни один из заявленных проблем не предполагают autofixes.</target>
        </trans-unit>
        <trans-unit id="0a71ecfa6375c836acf20e29f020847ba870e46f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt; - Fixed code text (might be the same as input if no fixes were applied).</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; - фиксированный текст кода (может быть таким же, как ввод, если не были применены исправления).</target>
        </trans-unit>
        <trans-unit id="12a06221f323f3b60d64937b61c3469af8706744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt; - The source code for the given file with as many fixes applied as possible, so you can use that to rewrite the files if necessary. This property is omitted if no fix is available.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; - исходный код для данного файла с максимально возможным количеством исправлений, поэтому вы можете использовать его для перезаписи файлов при необходимости. Это свойство опускается, если исправление недоступно.</target>
        </trans-unit>
        <trans-unit id="c42883e5282e3b6113d27d5d9e52ff0ce418dbb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;overrides&lt;/code&gt; - specifies overwriting usage of spacing for each operator, word or non word. This is empty by default, but can be used to enforce or disallow spacing around operators. For example:</source>
          <target state="translated">&lt;code&gt;overrides&lt;/code&gt; - указывает перезапись использования пробелов для каждого оператора, слова или не слова. По умолчанию это поле пусто, но может использоваться для принудительного или запрещения интервалов между операторами. Например:</target>
        </trans-unit>
        <trans-unit id="df212a0b1562019fdac6fcc446b5e67163169952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameters&lt;/code&gt; (default: 1) enforces indentation level for parameters in a function declaration. This can either be a number indicating indentation level, or the string &lt;code&gt;&quot;first&quot;&lt;/code&gt; indicating that all parameters of the declaration must be aligned with the first parameter. This can also be set to &lt;code&gt;&quot;off&quot;&lt;/code&gt; to disable checking for FunctionDeclaration parameters.</source>
          <target state="translated">&lt;code&gt;parameters&lt;/code&gt; (по умолчанию: 1) обеспечивает уровень отступа для параметров в объявлении функции. Это может быть число, указывающее уровень отступа, или строка &lt;code&gt;&quot;first&quot;&lt;/code&gt; указывающая, что все параметры объявления должны быть выровнены с первым параметром. Его также можно установить в положение &lt;code&gt;&quot;off&quot;&lt;/code&gt; чтобы отключить проверку параметров FunctionDeclaration.</target>
        </trans-unit>
        <trans-unit id="77267ac9c00c59606640d20dfda54ee67ffed0c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameters&lt;/code&gt; (default: 1) enforces indentation level for parameters in a function expression. This can either be a number indicating indentation level, or the string &lt;code&gt;&quot;first&quot;&lt;/code&gt; indicating that all parameters of the expression must be aligned with the first parameter. This can also be set to &lt;code&gt;&quot;off&quot;&lt;/code&gt; to disable checking for FunctionExpression parameters.</source>
          <target state="translated">&lt;code&gt;parameters&lt;/code&gt; (по умолчанию: 1) устанавливает уровень отступа для параметров в выражении функции. Это может быть число, указывающее уровень отступа, или строка &lt;code&gt;&quot;first&quot;&lt;/code&gt; указывающая, что все параметры выражения должны быть выровнены с первым параметром. Также можно установить значение &lt;code&gt;&quot;off&quot;&lt;/code&gt; чтобы отключить проверку параметров FunctionExpression.</target>
        </trans-unit>
        <trans-unit id="77af9e05de00995fa6b3a4d205aedf3f29ab3503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameters&lt;/code&gt; (off by default) enforces indentation level for parameters in a function declaration. This can either be a number indicating indentation level, or the string &lt;code&gt;&quot;first&quot;&lt;/code&gt; indicating that all parameters of the declaration must be aligned with the first parameter.</source>
          <target state="translated">&lt;code&gt;parameters&lt;/code&gt; (по умолчанию выключено) принудительно устанавливает уровень отступа для параметров в объявлении функции. Это может быть число, указывающее уровень отступа, или строка &lt;code&gt;&quot;first&quot;&lt;/code&gt; указывающая, что все параметры объявления должны быть выровнены с первым параметром.</target>
        </trans-unit>
        <trans-unit id="2e834567550c48cf2d4a16eea1bc1483bce31889" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameters&lt;/code&gt; (off by default) enforces indentation level for parameters in a function expression. This can either be a number indicating indentation level, or the string &lt;code&gt;&quot;first&quot;&lt;/code&gt; indicating that all parameters of the expression must be aligned with the first parameter.</source>
          <target state="translated">&lt;code&gt;parameters&lt;/code&gt; (по умолчанию выключено) устанавливает уровень отступа для параметров в выражении функции. Это может быть число, указывающее уровень отступа, или строка &lt;code&gt;&quot;first&quot;&lt;/code&gt; указывающая, что все параметры выражения должны быть выровнены с первым параметром.</target>
        </trans-unit>
        <trans-unit id="fc7bf95bd7ee592e11b5b6651deeda79fd043e22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser&lt;/code&gt; - Specify the parser to be used (default: &lt;code&gt;espree&lt;/code&gt;). Corresponds to &lt;code&gt;--parser&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;parser&lt;/code&gt; - укажите используемый синтаксический анализатор (по умолчанию: &lt;code&gt;espree&lt;/code&gt; ). Соответствует &lt;code&gt;--parser&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e6ca3e81d6c40d0b5138a230ae23b36a2fe3e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserOptions&lt;/code&gt; - An object containing parser options (default: empty object). Corresponds to &lt;code&gt;--parser-options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;parserOptions&lt;/code&gt; - объект, содержащий параметры парсера (по умолчанию: пустой объект). Соответствует &lt;code&gt;--parser-options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62d9be7532f101375fff14421e22dedbe27cefdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserOptions&lt;/code&gt; - acts the same as &lt;code&gt;parserOptions&lt;/code&gt; in a configuration file.</source>
          <target state="translated">&lt;code&gt;parserOptions&lt;/code&gt; - действует так же, как &lt;code&gt;parserOptions&lt;/code&gt; в файле конфигурации.</target>
        </trans-unit>
        <trans-unit id="b6236986a6f2bbaa813cea15a098e7e04f174efb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserOptions&lt;/code&gt; - the parser options configured for this run (more details &lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;here&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;parserOptions&lt;/code&gt; - параметры парсера, настроенные для этого запуска (подробнее &lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;здесь&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e957ea6aa911bb1036330b7acb419bd414111cf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserPath&lt;/code&gt; - the full path to the &lt;code&gt;parser&lt;/code&gt; from configuration.</source>
          <target state="translated">&lt;code&gt;parserPath&lt;/code&gt; - полный путь к &lt;code&gt;parser&lt;/code&gt; из конфигурации.</target>
        </trans-unit>
        <trans-unit id="eb9333f61a7b9f3ac236224816f41102b1af0104" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserPath&lt;/code&gt; - the name of the &lt;code&gt;parser&lt;/code&gt; from configuration.</source>
          <target state="translated">&lt;code&gt;parserPath&lt;/code&gt; - имя &lt;code&gt;parser&lt;/code&gt; из конфигурации.</target>
        </trans-unit>
        <trans-unit id="c62035ea48d839d0d39478e294eb9dc8235bbc53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserServices&lt;/code&gt; - an object containing parser-provided services for rules. The default parser does not provide any services. However, if a rule is intended to be used with a custom parser, it could use &lt;code&gt;parserServices&lt;/code&gt; to access anything provided by that parser. (For example, a TypeScript parser could provide the ability to get the computed type of a given node.)</source>
          <target state="translated">&lt;code&gt;parserServices&lt;/code&gt; - объект, содержащий предоставляемые парсером сервисы для правил. Парсер по умолчанию не предоставляет никаких услуг. Однако, если правило предназначено для использования с настраиваемым анализатором, оно может использовать &lt;code&gt;parserServices&lt;/code&gt; для доступа ко всему, что предоставляется этим анализатором. (Например, синтаксический анализатор TypeScript может предоставить возможность получить вычисленный тип данного узла.)</target>
        </trans-unit>
        <trans-unit id="22cbbb157d0e04d14c3d8ef457339050ae3dabd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;patterns&lt;/code&gt; (&lt;code&gt;string | string[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;patterns&lt;/code&gt; ( &lt;code&gt;string | string[]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="271b2c95f820e9ab84edb131af02224323f30ab7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;phantomjs&lt;/code&gt; - PhantomJS global variables.</source>
          <target state="translated">&lt;code&gt;phantomjs&lt;/code&gt; - глобальные переменные PhantomJS.</target>
        </trans-unit>
        <trans-unit id="a1080ace528b98eb07dee2d43c91aaf7c8ad0224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plugins&lt;/code&gt; - An array of plugins to load (default: empty array). Corresponds to &lt;code&gt;--plugin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;plugins&lt;/code&gt; - массив подключаемых модулей для загрузки (по умолчанию: пустой массив). Соответствует &lt;code&gt;--plugin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8d92334d46a87258e7d759c441b3a69a315ff2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;postprocess&lt;/code&gt; - (optional) A function that &lt;a href=&quot;working-with-plugins#processors-in-plugins&quot;&gt;Processors in Plugins&lt;/a&gt; documentation describes as the &lt;code&gt;postprocess&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;postprocess&lt;/code&gt; - (необязательно) функция, которую &lt;a href=&quot;working-with-plugins#processors-in-plugins&quot;&gt;процессоры в&lt;/a&gt; документации плагинов описывают как метод &lt;code&gt;postprocess&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce4ff3a6ad693db9b7f88ce66b482c27c2f6bb0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preprocess&lt;/code&gt; - (optional) A function that &lt;a href=&quot;working-with-plugins#processors-in-plugins&quot;&gt;Processors in Plugins&lt;/a&gt; documentation describes as the &lt;code&gt;preprocess&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;preprocess&lt;/code&gt; - (необязательно) функция, которую &lt;a href=&quot;working-with-plugins#processors-in-plugins&quot;&gt;процессоры в&lt;/a&gt; документации подключаемых модулей описывают как метод &lt;code&gt;preprocess&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83c103479177b2ca8bbd64b3b60366ab5cf9e137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prevSegments&lt;/code&gt; (&lt;code&gt;CodePathSegment[]&lt;/code&gt;) - The previous segments. If merging, there are two or more. If initial, there is nothing.</source>
          <target state="translated">&lt;code&gt;prevSegments&lt;/code&gt; ( &lt;code&gt;CodePathSegment[]&lt;/code&gt; ) - Предыдущие сегменты. При слиянии их два и более. Если исходный, то ничего.</target>
        </trans-unit>
        <trans-unit id="a48a350d7e90531b0eeb25b3e7e294822f866ae0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;problem&lt;/code&gt; - fix potential errors in the code</source>
          <target state="translated">&lt;code&gt;problem&lt;/code&gt; - исправить возможные ошибки в коде</target>
        </trans-unit>
        <trans-unit id="cd428966fd6374386740dd2c2d5d9219cb27af71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;propertyName&lt;/code&gt; sets the spacing in square brackets of computed member expressions.</source>
          <target state="translated">&lt;code&gt;propertyName&lt;/code&gt; устанавливает интервал в квадратных скобках вычисляемых выражений членов.</target>
        </trans-unit>
        <trans-unit id="23f8106c7ca5493c8b0b6adc3e39e383a688096e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;props&lt;/code&gt; - if this is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;no-self-assign&lt;/code&gt; rule warns self-assignments of properties. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;props&lt;/code&gt; - если это &lt;code&gt;true&lt;/code&gt; , правило &lt;code&gt;no-self-assign&lt;/code&gt; предупреждает о назначении свойств самостоятельно. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e83860b52ce8d0cabec51837fbf8650b0f1e04be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prototypejs&lt;/code&gt; - Prototype.js global variables.</source>
          <target state="translated">&lt;code&gt;prototypejs&lt;/code&gt; - глобальные переменные Prototype.js.</target>
        </trans-unit>
        <trans-unit id="e3c950d020992eb6c37fbfa53820cc9cbdf3598e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protractor&lt;/code&gt; - Protractor global variables.</source>
          <target state="translated">&lt;code&gt;protractor&lt;/code&gt; - глобальные переменные транспортира.</target>
        </trans-unit>
        <trans-unit id="a758b1fe1cfb1e786068a3d5f7c249a6a14be691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;qunit&lt;/code&gt; - QUnit global variables.</source>
          <target state="translated">&lt;code&gt;qunit&lt;/code&gt; - глобальные переменные QUnit.</target>
        </trans-unit>
        <trans-unit id="d18b3e513a0134dc0a99151f8041a45128d3688e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;range&lt;/code&gt; (&lt;code&gt;[number, number]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;range&lt;/code&gt; ( &lt;code&gt;[number, number]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="fdf3ffc780217c7b564e59898b21427c601c2ce4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;range&lt;/code&gt; (&lt;code&gt;number[]&lt;/code&gt;) is an array of two numbers. Both numbers are a 0-based index which is the position in the array of source code characters. The first is the start position of the node, the second is the end position of the node. &lt;code&gt;code.slice(node.range[0], node.range[1])&lt;/code&gt; must be the text of the node. This range does not include spaces/parentheses which are around the node.</source>
          <target state="translated">&lt;code&gt;range&lt;/code&gt; ( &lt;code&gt;number[]&lt;/code&gt; ) - это массив из двух чисел. Оба числа представляют собой индекс, отсчитываемый от 0, который является позицией в массиве символов исходного кода. Первая - это начальная позиция узла, вторая - конечная позиция узла. &lt;code&gt;code.slice(node.range[0], node.range[1])&lt;/code&gt; должен быть текстом узла. Этот диапазон не включает пробелы / круглые скобки вокруг узла.</target>
        </trans-unit>
        <trans-unit id="3bc82911a5abe75dd7022089706356e45d1eff63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rangeOptions&lt;/code&gt; is an object which has 1 property: &lt;code&gt;includeComments&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rangeOptions&lt;/code&gt; - это объект с одним свойством: &lt;code&gt;includeComments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7784b4a1bdf14d9bb9593a19deaf3f2538bd8501" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raw&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;) is the source code of this literal. This is the same as &lt;code&gt;code.slice(node.range[0], node.range[1])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;raw&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ) - это исходный код этого литерала. Это то же самое, что и &lt;code&gt;code.slice(node.range[0], node.range[1])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a13eb46f5bba31eb6d1f8a661b482fadcc21bc89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reachable&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;) - A flag which shows whether or not it's reachable. This becomes &lt;code&gt;false&lt;/code&gt; when preceded by &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, or &lt;code&gt;continue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reachable&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; ) - флаг , который показывает , является ли это или нет достижимы. Это становится &lt;code&gt;false&lt;/code&gt; если ему предшествуют &lt;code&gt;return&lt;/code&gt; , &lt;code&gt;throw&lt;/code&gt; , &lt;code&gt;break&lt;/code&gt; или &lt;code&gt;continue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8169fa75038493ba09bffa4d71ab00bdd4d51f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;recommended&lt;/code&gt; (boolean) is whether the &lt;code&gt;&quot;extends&quot;: &quot;eslint:recommended&quot;&lt;/code&gt; property in a &lt;a href=&quot;../user-guide/configuring#extending-configuration-files&quot;&gt;configuration file&lt;/a&gt; enables the rule</source>
          <target state="translated">&lt;code&gt;recommended&lt;/code&gt; (логический) - включает ли свойство &lt;code&gt;&quot;extends&quot;: &quot;eslint:recommended&quot;&lt;/code&gt; в &lt;a href=&quot;../user-guide/configuring#extending-configuration-files&quot;&gt;файле конфигурации&lt;/a&gt; правило</target>
        </trans-unit>
        <trans-unit id="2ee047d1edaaf57a4131d4225af9a2587a45bf1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regexUFlag&lt;/code&gt; - enable the &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-the-regular-expression-u-flag&quot;&gt;regular expression &lt;code&gt;u&lt;/code&gt; flag&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;regexUFlag&lt;/code&gt; - включить &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-the-regular-expression-u-flag&quot;&gt;флаг &lt;/a&gt; &lt;code&gt;u&lt;/code&gt; регулярного выражения</target>
        </trans-unit>
        <trans-unit id="8566d709a346d28d2b1faa01db650a08ab377add" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regexYFlag&lt;/code&gt; - enable the &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-the-regular-expression-y-flag&quot;&gt;regular expression &lt;code&gt;y&lt;/code&gt; flag&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;regexYFlag&lt;/code&gt; - включить &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-the-regular-expression-y-flag&quot;&gt;флаг &lt;/a&gt; &lt;code&gt;y&lt;/code&gt; регулярного выражения</target>
        </trans-unit>
        <trans-unit id="afd2d633c8d9807fdc3075c2fe07411ee2a058e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove(nodeOrToken)&lt;/code&gt; - removes the given node or token</source>
          <target state="translated">&lt;code&gt;remove(nodeOrToken)&lt;/code&gt; - удаляет указанный узел или токен</target>
        </trans-unit>
        <trans-unit id="11d39baf6060a2ad476e6e8619b794300a847485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;removeRange(range)&lt;/code&gt; - removes text in the given range</source>
          <target state="translated">&lt;code&gt;removeRange(range)&lt;/code&gt; - удаляет текст в заданном диапазоне</target>
        </trans-unit>
        <trans-unit id="42e61dda13ee147b1a62ef2c6293cff07b8b228f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replaceText(nodeOrToken, text)&lt;/code&gt; - replaces the text in the given node or token</source>
          <target state="translated">&lt;code&gt;replaceText(nodeOrToken, text)&lt;/code&gt; - заменяет текст в данном узле или токене</target>
        </trans-unit>
        <trans-unit id="a1e4e6752c215d2c65bb1e37dff8db13c743e532" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replaceTextRange(range, text)&lt;/code&gt; - replaces the text in the given range</source>
          <target state="translated">&lt;code&gt;replaceTextRange(range, text)&lt;/code&gt; - заменяет текст в заданном диапазоне</target>
        </trans-unit>
        <trans-unit id="e5ef2a6db19c2d0173abd286cb3d83e827e95c9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacedBy&lt;/code&gt; (array) in the case of a deprecated rule, specifies replacement rule(s)</source>
          <target state="translated">&lt;code&gt;replacedBy&lt;/code&gt; (массив) в случае устаревшего правила указывает правила замены</target>
        </trans-unit>
        <trans-unit id="b3ca8cd8d276fad65094fd4cf491b4ebc6870f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacedBy&lt;/code&gt; - An array of rules that replace the deprecated rule (e.g. &lt;code&gt;[&quot;indent&quot;]&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;replacedBy&lt;/code&gt; - массив правил, заменяющих устаревшее правило (например, &lt;code&gt;[&quot;indent&quot;]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8b008f6034627aab91885c2e655a5f996fa972fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;report(descriptor)&lt;/code&gt; - reports a problem in the code (see the &lt;a href=&quot;#context-report&quot;&gt;dedicated section&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;report(descriptor)&lt;/code&gt; - сообщает о проблеме в коде (см. &lt;a href=&quot;#context-report&quot;&gt;специальный раздел&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="673ed79127f467f90da4b20706efad40980cad39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;report(descriptor)&lt;/code&gt; - reports a problem in the code (see the &lt;a href=&quot;#contextreport&quot;&gt;dedicated section&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;report(descriptor)&lt;/code&gt; - сообщает о проблеме в коде (см. &lt;a href=&quot;#contextreport&quot;&gt;специальный раздел&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="44be526c0bf07640ca73389d24943d2ba6402b30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;report(descriptor)&lt;/code&gt; - reports a problem in the code.</source>
          <target state="translated">&lt;code&gt;report(descriptor)&lt;/code&gt; - сообщает о проблеме в коде.</target>
        </trans-unit>
        <trans-unit id="c1f576f0105a26406714f7c21c3d009aa937c466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;report(node, [location], message)&lt;/code&gt; - reports a problem in the code.</source>
          <target state="translated">&lt;code&gt;report(node, [location], message)&lt;/code&gt; - сообщает о проблеме в коде.</target>
        </trans-unit>
        <trans-unit id="0e70a123d190ad73ab6a4108ddc3ce1435f12922" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; - (optional) when set to &lt;code&gt;true&lt;/code&gt;, adds reported errors for unused &lt;code&gt;eslint-disable&lt;/code&gt; directives when no problems would be reported in the disabled area anyway.</source>
          <target state="translated">&lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; - (необязательно), если установлено значение &lt;code&gt;true&lt;/code&gt; , добавляет сообщения об ошибках для неиспользуемых директив &lt;code&gt;eslint-disable&lt;/code&gt; , если в отключенной области все равно не будет сообщаться о проблемах.</target>
        </trans-unit>
        <trans-unit id="44662217adc4a07fba54d6d07d774d1c9511d2d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; - When set to &lt;code&gt;true&lt;/code&gt;, adds reported errors for unused &lt;code&gt;eslint-disable&lt;/code&gt; directives when no problems would be reported in the disabled area anyway (default: false). Corresponds to &lt;code&gt;--report-unused-disable-directives&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; - если установлено значение &lt;code&gt;true&lt;/code&gt; , добавляет сообщения об ошибках для неиспользуемых директив &lt;code&gt;eslint-disable&lt;/code&gt; , если в отключенной области все равно не будет сообщаться о проблемах (по умолчанию: false). Соответствует &lt;code&gt;--report-unused-disable-directives&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="342e993def331cf204c8eb81611d758fe135c958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolvePluginsRelativeTo&lt;/code&gt; - Determines the folder where plugins should be resolved from. Should be used when an integration installs plugins and uses those plugins to lint code on behalf of the end user. Corresponds to &lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;resolvePluginsRelativeTo&lt;/code&gt; - определяет папку, из которой должны быть разрешены плагины. Следует использовать, когда интеграция устанавливает плагины и использует эти плагины для линтинга кода от имени конечного пользователя. Соответствует &lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f08895232fda29a1d46906fbd76c41944a98b08b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restParams&lt;/code&gt; - enable the &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-rest-parameters&quot;&gt;rest parameters&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;restParams&lt;/code&gt; - включить &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-rest-parameters&quot;&gt;остальные параметры&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="387ba243313b63a44f6fed3bf186a405dc18a3c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;results&lt;/code&gt; (&lt;code&gt;LintResult[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;results&lt;/code&gt; ( &lt;code&gt;LintResult[]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bf8f5ae89641eff23950db05e8f16628d1f4b207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;returnedSegments&lt;/code&gt; (&lt;code&gt;CodePathSegment[]&lt;/code&gt;) - The final segments which includes only returned.</source>
          <target state="translated">&lt;code&gt;returnedSegments&lt;/code&gt; &lt;code&gt;CodePathSegment[]&lt;/code&gt; ( CodePathSegment [] ) - последние сегменты, которые включают только возвращенные.</target>
        </trans-unit>
        <trans-unit id="d8a36ed1ea0df53b1d1108561ba04761d6a3f852" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ruleId&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt; | &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;ruleId&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; | &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e7677439df7966be65f67970f0b081d5c60e994b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ruleId&lt;/code&gt; - The name of the rule (e.g. &lt;code&gt;indent-legacy&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ruleId&lt;/code&gt; - имя правила (например, &lt;code&gt;indent-legacy&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8f201397e61a1941d94949ce05e396f2eb6be892" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ruleId&lt;/code&gt; - the ID of the rule that triggered the messages (or null if &lt;code&gt;fatal&lt;/code&gt; is true).</source>
          <target state="translated">&lt;code&gt;ruleId&lt;/code&gt; - идентификатор правила, которое запустило сообщения (или null, если &lt;code&gt;fatal&lt;/code&gt; - true).</target>
        </trans-unit>
        <trans-unit id="448d5336b959502dad8f9091921de730cd52d6f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rulePaths&lt;/code&gt; - An array of directories to load custom rules from (default: empty array). Corresponds to &lt;code&gt;--rulesdir&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rulePaths&lt;/code&gt; - массив каталогов, из которых загружаются пользовательские правила (по умолчанию: пустой массив). Соответствует &lt;code&gt;--rulesdir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e9e950b17b2f15687b78111419b093702a5f998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rules&lt;/code&gt; - An object of rules to use (default: null). Corresponds to &lt;code&gt;--rule&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rules&lt;/code&gt; - объект правил для использования (по умолчанию: null). Соответствует &lt;code&gt;--rule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb218e59d198a007db588129fdf4617116d0b205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rules&lt;/code&gt; - all source files defining rules</source>
          <target state="translated">&lt;code&gt;rules&lt;/code&gt; - все исходные файлы, определяющие правила</target>
        </trans-unit>
        <trans-unit id="033313294f0c24b5ba6cf94b3a35e48deb70bc28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rules&lt;/code&gt; - tests for the rules</source>
          <target state="translated">&lt;code&gt;rules&lt;/code&gt; - тесты на правила</target>
        </trans-unit>
        <trans-unit id="5244945f7f5609561b8d12a8e5d9113232f9758b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;schema&lt;/code&gt; (array) specifies the &lt;a href=&quot;#options-schemas&quot;&gt;options&lt;/a&gt; so ESLint can prevent invalid &lt;a href=&quot;../user-guide/configuring#configuring-rules&quot;&gt;rule configurations&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;schema&lt;/code&gt; (массив) определяет &lt;a href=&quot;#options-schemas&quot;&gt;параметры,&lt;/a&gt; поэтому ESLint может предотвратить недопустимые &lt;a href=&quot;../user-guide/configuring#configuring-rules&quot;&gt;конфигурации правил&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1a4737446920852b8f131e6d7ae69b4a97c6ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scopeManager&lt;/code&gt; - the &lt;a href=&quot;scope-manager-interface#scopemanager-interface&quot;&gt;ScopeManager&lt;/a&gt; object of the code.</source>
          <target state="translated">&lt;code&gt;scopeManager&lt;/code&gt; - объект &lt;a href=&quot;scope-manager-interface#scopemanager-interface&quot;&gt;ScopeManager&lt;/a&gt; кода.</target>
        </trans-unit>
        <trans-unit id="3d54fadc18a6887da37fa8545a87192989177d0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scopeManager&lt;/code&gt; can be a &lt;a href=&quot;scope-manager-interface&quot;&gt;ScopeManager&lt;/a&gt; object. Custom parsers can use customized scope analysis for experimental/enhancement syntaxes. Default is the &lt;code&gt;ScopeManager&lt;/code&gt; object which is created by &lt;a href=&quot;https://github.com/eslint/eslint-scope&quot;&gt;eslint-scope&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;scopeManager&lt;/code&gt; может быть объектом &lt;a href=&quot;scope-manager-interface&quot;&gt;ScopeManager&lt;/a&gt; . Пользовательские парсеры могут использовать индивидуальный анализ области для экспериментальных / улучшенных синтаксисов. По умолчанию это объект &lt;code&gt;ScopeManager&lt;/code&gt; , созданный &lt;a href=&quot;https://github.com/eslint/eslint-scope&quot;&gt;eslint-scope&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f8e07cc12ee3b5466a33cc3a5a2d3366bec5503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;services&lt;/code&gt; can contain any parser-dependent services (such as type checkers for nodes). The value of the &lt;code&gt;services&lt;/code&gt; property is available to rules as &lt;code&gt;context.parserServices&lt;/code&gt;. Default is an empty object.</source>
          <target state="translated">&lt;code&gt;services&lt;/code&gt; могут содержать любые службы, зависящие от анализатора (например, средства проверки типов для узлов). Значение свойства &lt;code&gt;services&lt;/code&gt; доступно для правил как &lt;code&gt;context.parserServices&lt;/code&gt; . По умолчанию - пустой объект.</target>
        </trans-unit>
        <trans-unit id="dd02fb5dc08b8103fec9545d2aaeae2326a714d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serviceworker&lt;/code&gt; - Service Worker global variables.</source>
          <target state="translated">&lt;code&gt;serviceworker&lt;/code&gt; - глобальные переменные Service Worker.</target>
        </trans-unit>
        <trans-unit id="b61808bb3f6746f75d108f844f3b4f545613c1d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setWithoutGet&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; will warn for setters without getters (Default &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;setWithoutGet&lt;/code&gt; , установленный в &lt;code&gt;true&lt;/code&gt; , будет предупреждать сеттеры без геттеров (по умолчанию &lt;code&gt;true&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c1098db1b64e3f105b8662a96224e640d047b839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;settings&lt;/code&gt; - the &lt;a href=&quot;../user-guide/configuring#adding-shared-settings&quot;&gt;shared settings&lt;/a&gt; from configuration.</source>
          <target state="translated">&lt;code&gt;settings&lt;/code&gt; - &lt;a href=&quot;../user-guide/configuring#adding-shared-settings&quot;&gt;общие настройки&lt;/a&gt; из конфигурации.</target>
        </trans-unit>
        <trans-unit id="78b464593816361428618f91b97e7892b603ac13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;settings&lt;/code&gt; - the &lt;code&gt;settings&lt;/code&gt; from configuration.</source>
          <target state="translated">&lt;code&gt;settings&lt;/code&gt; - &lt;code&gt;settings&lt;/code&gt; из конфигурации.</target>
        </trans-unit>
        <trans-unit id="ed495021db0964352f84b2956da94665584ccc71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;severity&lt;/code&gt; (&lt;code&gt;1 | 2&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;severity&lt;/code&gt; ( &lt;code&gt;1 | 2&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4b1505c7011f867593ec6ba31405c1d9d6786878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;severity&lt;/code&gt; - either 1 or 2, depending on your configuration.</source>
          <target state="translated">&lt;code&gt;severity&lt;/code&gt; - 1 или 2, в зависимости от вашей конфигурации.</target>
        </trans-unit>
        <trans-unit id="af2e074f2291e32a851386f6943c35c62691d3bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shared-node-browser&lt;/code&gt; - Globals common to both Node.js and Browser.</source>
          <target state="translated">&lt;code&gt;shared-node-browser&lt;/code&gt; - глобальные переменные, общие как для Node.js, так и для браузера.</target>
        </trans-unit>
        <trans-unit id="2384792d9b4129dc8e3cd5aa0f33c7583190dd2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shelljs&lt;/code&gt; - ShellJS global variables.</source>
          <target state="translated">&lt;code&gt;shelljs&lt;/code&gt; - глобальные переменные ShellJS.</target>
        </trans-unit>
        <trans-unit id="9c777d667874248097ecd8cebf907c1cbe0cea9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;single&lt;/code&gt; - import single member.</source>
          <target state="translated">&lt;code&gt;single&lt;/code&gt; - импорт одиночного элемента.</target>
        </trans-unit>
        <trans-unit id="d3e16e146a19049305bd1d48672791e81e83586c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;single&lt;/code&gt; = import single member.</source>
          <target state="translated">&lt;code&gt;single&lt;/code&gt; = импорт отдельного элемента.</target>
        </trans-unit>
        <trans-unit id="ba208adf6cb6bfa32e72d4683ef7409155bfc511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;singleValue&lt;/code&gt; sets the spacing of a single value inside of square brackets of an array.</source>
          <target state="translated">&lt;code&gt;singleValue&lt;/code&gt; устанавливает интервал одного значения внутри квадратных скобок массива.</target>
        </trans-unit>
        <trans-unit id="ffc60847f9ffed871ebb8e8a274977cb17506c82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skip&lt;/code&gt; is a positive integer, the number of skipping tokens. If &lt;code&gt;filter&lt;/code&gt; option is given at the same time, it doesn't count filtered tokens as skipped.</source>
          <target state="translated">&lt;code&gt;skip&lt;/code&gt; - положительное целое число, количество пропускаемых токенов. Если &lt;code&gt;filter&lt;/code&gt; задан параметр в то же время, он не учитывает отфильтрованные маркеры как пропускаются.</target>
        </trans-unit>
        <trans-unit id="d5bffd4721137f0668214feafc3f619665634c86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skipOptions&lt;/code&gt; is an object which has 3 properties; &lt;code&gt;skip&lt;/code&gt;, &lt;code&gt;includeComments&lt;/code&gt;, and &lt;code&gt;filter&lt;/code&gt;. Default is &lt;code&gt;{skip: 0, includeComments: false, filter: null}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;skipOptions&lt;/code&gt; - это объект с 3 свойствами; &lt;code&gt;skip&lt;/code&gt; , &lt;code&gt;includeComments&lt;/code&gt; и &lt;code&gt;filter&lt;/code&gt; . По умолчанию: &lt;code&gt;{skip: 0, includeComments: false, filter: null}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e00a007f4c3ff0bb6d68e192c15a3b74a01ed24f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; (&lt;code&gt;string | undefined&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; ( &lt;code&gt;string | undefined&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e0e2ecc0406df38b1d1ccf1ecac779fa61ca0ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; - The source code for the given file. This property is omitted if this file has no errors/warnings or if the &lt;code&gt;output&lt;/code&gt; property is present.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; - исходный код для данного файла. Это свойство опускается, если в этом файле нет ошибок / предупреждений или если свойство &lt;code&gt;output&lt;/code&gt; присутствует.</target>
        </trans-unit>
        <trans-unit id="8bab5102de076b0619a8aaab81f5b6bcd8aed840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceType&lt;/code&gt; - set to &lt;code&gt;&quot;script&quot;&lt;/code&gt; (default) or &lt;code&gt;&quot;module&quot;&lt;/code&gt; if your code is in ECMAScript modules.</source>
          <target state="translated">&lt;code&gt;sourceType&lt;/code&gt; - установите значение &lt;code&gt;&quot;script&quot;&lt;/code&gt; (по умолчанию) или &lt;code&gt;&quot;module&quot;&lt;/code&gt; если ваш код находится в модулях ECMAScript.</target>
        </trans-unit>
        <trans-unit id="60fc3fa75a643143fec43ea1214963f7a3090f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spread&lt;/code&gt; - enable the &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-the-spread-operator&quot;&gt;spread operator&lt;/a&gt; for arrays</source>
          <target state="translated">&lt;code&gt;spread&lt;/code&gt; - включить &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-the-spread-operator&quot;&gt;оператор спреда&lt;/a&gt; для массивов</target>
        </trans-unit>
        <trans-unit id="a74498937d9da6989b3826fb3f822c1a0e6d8ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; - An object of the start location.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; - объект начальной локации.</target>
        </trans-unit>
        <trans-unit id="562c297214c3079c86643ee742a66325060aefce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suggestion&lt;/code&gt; (boolean) specifies whether rules can return suggestions (defaults to false if omitted)</source>
          <target state="translated">&lt;code&gt;suggestion&lt;/code&gt; (логическое) указывает, могут ли правила возвращать предложения (по умолчанию false, если не указано)</target>
        </trans-unit>
        <trans-unit id="7001382730594d9af640d23183d826935097fc76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suggestion&lt;/code&gt; - apply fixes to the code that improve it</source>
          <target state="translated">&lt;code&gt;suggestion&lt;/code&gt; - применить исправления к коду, которые улучшают его</target>
        </trans-unit>
        <trans-unit id="a3841d6bcd3c378320e8c76cb8882a3092dfd451" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suggestions&lt;/code&gt; (&lt;code&gt;{ desc: string; fix: EditInfo }[] | undefined&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;suggestions&lt;/code&gt; ( &lt;code&gt;{ desc: string; fix: EditInfo }[] | undefined&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="17e1bd8b89f512b7c4dcfb3986baec9ba3d73bd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suggestions&lt;/code&gt; (array): An array of objects with suggestion details to check. See &lt;a href=&quot;#testing-suggestions&quot;&gt;Testing Suggestions&lt;/a&gt; for details</source>
          <target state="translated">&lt;code&gt;suggestions&lt;/code&gt; (массив): массив объектов с подробностями предложения для проверки. См. Подробности в разделе &quot; &lt;a href=&quot;#testing-suggestions&quot;&gt;Предложения&lt;/a&gt; по тестированию&quot;.</target>
        </trans-unit>
        <trans-unit id="01a9e2d4ed6fc53580ec1667bad9ffa002d21113" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suggestions&lt;/code&gt; - an array of objects describing possible lint fixes for editors to programmatically enable (see details in the &lt;a href=&quot;working-with-rules#providing-suggestions&quot;&gt;Working with Rules docs&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;suggestions&lt;/code&gt; - массив объектов, описывающих возможные исправления линтов, которые редакторы могут включить программно (подробности см. в документации по &lt;a href=&quot;working-with-rules#providing-suggestions&quot;&gt;работе с правилами&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1318fab7248c2f4b39f6afd96e36cbc603af759a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;superInFunctions&lt;/code&gt; - enable &lt;code&gt;super&lt;/code&gt; references inside of functions</source>
          <target state="translated">&lt;code&gt;superInFunctions&lt;/code&gt; - включить &lt;code&gt;super&lt;/code&gt; ссылки внутри функций</target>
        </trans-unit>
        <trans-unit id="7d7e78c26943268d03f5a72365c1eb3015043d08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;templateStrings&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-template-strings&quot;&gt;template strings&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;templateStrings&lt;/code&gt; - включить &lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-template-strings&quot;&gt;строки шаблона&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cbd54e9fd010557953cb7a0ef7ddae91972ffc35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tests&lt;/code&gt; - the main unit test folder</source>
          <target state="translated">&lt;code&gt;tests&lt;/code&gt; - основная папка unit test</target>
        </trans-unit>
        <trans-unit id="b7eed2b6d45348b720e65fb837c1ff1203bc507f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="08dcb9cef9adf8696d4c280589a87557cb5a4fd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt; - the full text of the code being linted. Unicode BOM has been stripped from this text.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; - полный текст линтируемого кода. Спецификация Unicode была удалена из этого текста.</target>
        </trans-unit>
        <trans-unit id="816e619a8bf7c281ba92a529d4c0642f418078aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throw&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;throw&lt;/code&gt; заявления.</target>
        </trans-unit>
        <trans-unit id="b115b1a6144f77e6a5aa3d71ef3e7bf2f0dc3aad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thrownSegments&lt;/code&gt; (&lt;code&gt;CodePathSegment[]&lt;/code&gt;) - The final segments which includes only thrown.</source>
          <target state="translated">&lt;code&gt;thrownSegments&lt;/code&gt; ( &lt;code&gt;CodePathSegment[]&lt;/code&gt; ) - последние сегменты, в которые входят только брошенные.</target>
        </trans-unit>
        <trans-unit id="7519d7afe92e54795456484fa28061d35ee23b0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tokens&lt;/code&gt; (&lt;code&gt;Token[]&lt;/code&gt;) is the array of tokens which affect the behavior of programs. Arbitrary spaces can exist between tokens, so rules check the &lt;code&gt;Token#range&lt;/code&gt; to detect spaces between tokens. This must be sorted by &lt;code&gt;Token#range[0]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tokens&lt;/code&gt; ( &lt;code&gt;Token[]&lt;/code&gt; ) - это массив токенов, которые влияют на поведение программ. Между токенами могут существовать произвольные пробелы, поэтому правила проверяют диапазон &lt;code&gt;Token#range&lt;/code&gt; для обнаружения пробелов между токенами. Это должно быть отсортировано по &lt;code&gt;Token#range[0]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85189a44e953487b618de67a3eb0fa859151682c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; (default) &lt;strong&gt;even if&lt;/strong&gt; the function or method does not have a &lt;code&gt;return&lt;/code&gt; statement (this option value does not apply to constructors)</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; (по умолчанию), &lt;strong&gt;даже если&lt;/strong&gt; функция или метод не имеют инструкции &lt;code&gt;return&lt;/code&gt; (значение этого параметра не применяется к конструкторам)</target>
        </trans-unit>
        <trans-unit id="398be4feb083902f29f8a7376d7e2c72ed38a618" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; means there should be &lt;strong&gt;one or more spaces&lt;/strong&gt; and &lt;code&gt;false&lt;/code&gt; means &lt;strong&gt;no spaces&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; означает, что должно быть &lt;strong&gt;один или несколько пробелов,&lt;/strong&gt; а &lt;code&gt;false&lt;/code&gt; означает &lt;strong&gt;отсутствие пробелов&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="164473cb1bdffa8a6ee69e081b7955161d6ce2fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; relaxes the rule and accepts parenthesis as a valid &quot;confusion-preventing&quot; syntax.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; ослабляет правило и принимает круглые скобки как допустимый синтаксис, предотвращающий путаницу.</target>
        </trans-unit>
        <trans-unit id="c110fc8578280c6d8b4187919d51e6880ee72955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;: requires at least one space between the colon and the value in object literals.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; : требуется хотя бы один пробел между двоеточием и значением в литералах объекта.</target>
        </trans-unit>
        <trans-unit id="32c944022b8d6ef52bb3b58ed7186232da7a278a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;: requires at least one space between the key and the colon in object literals.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; : требуется хотя бы один пробел между ключом и двоеточием в литералах объекта.</target>
        </trans-unit>
        <trans-unit id="ed51de71320a2a1ea9139a4f6dac950b128ae463" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; (string) indicates the type of rule, which is one of &lt;code&gt;&quot;problem&quot;&lt;/code&gt;, &lt;code&gt;&quot;suggestion&quot;&lt;/code&gt;, or &lt;code&gt;&quot;layout&quot;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; (строка) указывает тип правила, которое является одним из &lt;code&gt;&quot;problem&quot;&lt;/code&gt; , &lt;code&gt;&quot;suggestion&quot;&lt;/code&gt; или &lt;code&gt;&quot;layout&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ce2daaa0d1c129ced8360a8ffb8f746db1ac9b57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; (string): The type of the reported AST node</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; (string): Тип сообщаемого узла AST</target>
        </trans-unit>
        <trans-unit id="3e25050e2f24c7a7b3cbb85b0c2364d188dc9091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeof&lt;/code&gt; set to true will warn for variables used inside typeof check (Default false).</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; , установленный в true, будет предупреждать о переменных, используемых внутри проверки typeof (по умолчанию false).</target>
        </trans-unit>
        <trans-unit id="5fdcb0790e9c597696da493f71389a15eb982651" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt;. In this case, loads the &lt;code&gt;&quot;stylish&quot;&lt;/code&gt; built-in formatter.</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; . В этом случае загружается &lt;code&gt;&quot;stylish&quot;&lt;/code&gt; встроенный форматтер.</target>
        </trans-unit>
        <trans-unit id="d447c639868163e0b6f3e7e087f1876514ec1b40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unicodeCodePointEscapes&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-escaping-non-bmp-characters&quot;&gt;code point escapes&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;unicodeCodePointEscapes&lt;/code&gt; - включить &lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-escaping-non-bmp-characters&quot;&gt;экранирование кодовой точки&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54b2b3dcae0bc3c1af73d9d3ed3faff1b71eb602" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uninitialized&lt;/code&gt;: a declaration that is not initialized</source>
          <target state="translated">&lt;code&gt;uninitialized&lt;/code&gt; : объявление, которое не инициализировано</target>
        </trans-unit>
        <trans-unit id="b1b8fcea74b3c2723ae07350ad0c06fdf101540d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;upper&lt;/code&gt; (&lt;code&gt;CodePath|null&lt;/code&gt;) - The code path of the upper function/global scope.</source>
          <target state="translated">&lt;code&gt;upper&lt;/code&gt; ( &lt;code&gt;CodePath|null&lt;/code&gt; ) - Путь кода верхней функции / глобальной области.</target>
        </trans-unit>
        <trans-unit id="98dbb83ef9d84404723cc01fc7df3377147e2149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt; (string) specifies the URL at which the full documentation can be accessed</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; (строка) указывает URL-адрес, по которому можно получить доступ к полной документации</target>
        </trans-unit>
        <trans-unit id="d46d96d622b96dc5814ed780900e9336cc76ccc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;useEslintrc&lt;/code&gt; - Set to false to disable use of &lt;code&gt;.eslintrc&lt;/code&gt; files (default: true). Corresponds to &lt;code&gt;--no-eslintrc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;useEslintrc&lt;/code&gt; - Установите значение false, чтобы отключить использование файлов &lt;code&gt;.eslintrc&lt;/code&gt; (по умолчанию: true). Соответствует &lt;code&gt;--no-eslintrc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ac85eaf2f1ba91a9f688fea05ef09cd71330015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;usedDeprecatedRules&lt;/code&gt; (&lt;code&gt;{ ruleId: string; replacedBy: string[] }[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;usedDeprecatedRules&lt;/code&gt; ( &lt;code&gt;{ ruleId: string; replacedBy: string[] }[]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bb54b2ac875e39c6a5c69fbe0057d558eb17a51a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; and &lt;code&gt;function&lt;/code&gt; declarations</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; и &lt;code&gt;function&lt;/code&gt; декларации</target>
        </trans-unit>
        <trans-unit id="788e44194d9b2e6f3dfac11727ce139725216787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; declarations in the global.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; объявления в глобальном.</target>
        </trans-unit>
        <trans-unit id="fd77df796b591255e602e82be482bd2c1aadcf02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variable.eslintExplicitGlobal&lt;/code&gt; (&lt;code&gt;boolean | undefined&lt;/code&gt;) ... If &lt;code&gt;true&lt;/code&gt;, this global variable was defined by a &lt;code&gt;/* globals */&lt;/code&gt; directive comment in the source code file.</source>
          <target state="translated">&lt;code&gt;variable.eslintExplicitGlobal&lt;/code&gt; ( &lt;code&gt;boolean | undefined&lt;/code&gt; ) ... Если &lt;code&gt;true&lt;/code&gt; , эта глобальная переменная была определена комментарием директивы &lt;code&gt;/* globals */&lt;/code&gt; в файле исходного кода.</target>
        </trans-unit>
        <trans-unit id="41cdf97481d87a8abdd46b934132dc88e0f6bd53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variable.eslintExplicitGlobalComments&lt;/code&gt; (&lt;code&gt;Comment[] | undefined&lt;/code&gt;) ... The array of &lt;code&gt;/* globals */&lt;/code&gt; directive comments which defined this global variable in the source code file. This property is &lt;code&gt;undefined&lt;/code&gt; if there are no &lt;code&gt;/* globals */&lt;/code&gt; directive comments.</source>
          <target state="translated">&lt;code&gt;variable.eslintExplicitGlobalComments&lt;/code&gt; ( &lt;code&gt;Comment[] | undefined&lt;/code&gt; ) ... Массив комментариев директивы &lt;code&gt;/* globals */&lt;/code&gt; которые определяют эту глобальную переменную в файле исходного кода. Это свойство не &lt;code&gt;undefined&lt;/code&gt; если нет комментариев директивы &lt;code&gt;/* globals */&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8842bb6edd2d2a32b42577f5d2f9ff77c03dc964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variable.eslintImplicitGlobalSetting&lt;/code&gt; (&lt;code&gt;&quot;readonly&quot; | &quot;writable&quot; | undefined&lt;/code&gt;) ... The configured value in config files. This can be different from &lt;code&gt;variable.writeable&lt;/code&gt; if there are &lt;code&gt;/* globals */&lt;/code&gt; directive comments.</source>
          <target state="translated">&lt;code&gt;variable.eslintImplicitGlobalSetting&lt;/code&gt; ( &lt;code&gt;&quot;readonly&quot; | &quot;writable&quot; | undefined&lt;/code&gt; ) ... Настроенное значение в файлах конфигурации. Это может отличаться от &lt;code&gt;variable.writeable&lt;/code&gt; , если есть комментарии директивы &lt;code&gt;/* globals */&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ab0a21f7c02edcdbaf94c592f26a9debce3a664" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variable.writeable&lt;/code&gt; (&lt;code&gt;boolean | undefined&lt;/code&gt;) ... If &lt;code&gt;true&lt;/code&gt;, this global variable can be assigned arbitrary value. If &lt;code&gt;false&lt;/code&gt;, this global variable is read-only.</source>
          <target state="translated">&lt;code&gt;variable.writeable&lt;/code&gt; ( &lt;code&gt;boolean | undefined&lt;/code&gt; ) ... Если &lt;code&gt;true&lt;/code&gt; , этой глобальной переменной может быть присвоено произвольное значение. Если &lt;code&gt;false&lt;/code&gt; , эта глобальная переменная доступна только для чтения.</target>
        </trans-unit>
        <trans-unit id="5b8b2e84ad41c0b330735ef613256ce337ff37a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variables&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;) - This flag determines whether or not the rule checks variable declarations in upper scopes. If this is &lt;code&gt;true&lt;/code&gt;, the rule warns every reference to a variable before the variable declaration. Otherwise, the rule ignores a reference if the declaration is in an upper scope, while still reporting the reference if it's in the same scope as the declaration. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;variables&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; ) - этот флаг определяет, проверяет ли правило объявления переменных в верхних областях. Если это &lt;code&gt;true&lt;/code&gt; , правило предупреждает каждую ссылку на переменную перед объявлением переменной. В противном случае правило игнорирует ссылку, если объявление находится в верхней области, но по-прежнему сообщает ссылку, если она находится в той же области, что и объявление. По умолчанию &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ad405cae17dce59bbce81dd34c8a9459d0da26e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;visitorKeys&lt;/code&gt; - the visitor keys to traverse this AST.</source>
          <target state="translated">&lt;code&gt;visitorKeys&lt;/code&gt; - ключи посетителя для прохождения этого AST.</target>
        </trans-unit>
        <trans-unit id="32c0307db470eaeab159b0b85167c1ef69de6382" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;visitorKeys&lt;/code&gt; can be an object to customize AST traversal. The keys of the object are the type of AST nodes. Each value is an array of the property names which should be traversed. Default is &lt;a href=&quot;https://github.com/eslint/eslint-visitor-keys#evkkeys&quot;&gt;KEYS of &lt;code&gt;eslint-visitor-keys&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;visitorKeys&lt;/code&gt; может быть объектом для настройки обхода AST. Ключи объекта - это типы узлов AST. Каждое значение представляет собой массив имен свойств, по которым необходимо пройти. По умолчанию - &lt;a href=&quot;https://github.com/eslint/eslint-visitor-keys#evkkeys&quot;&gt;КЛЮЧИ для &lt;code&gt;eslint-visitor-keys&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="38a5b477d008fa55f98a37d2b9c603d027c9b335" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warningCount&lt;/code&gt; (&lt;code&gt;number&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;warningCount&lt;/code&gt; ( &lt;code&gt;number&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="45370b8098f934ae8cbddafa379e59a2d8b1a96b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;webextensions&lt;/code&gt; - WebExtensions globals.</source>
          <target state="translated">&lt;code&gt;webextensions&lt;/code&gt; - глобальные объекты WebExtensions.</target>
        </trans-unit>
        <trans-unit id="e8318d7f2494338ee26e4f979f86bef08671fb6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;words&lt;/code&gt; - applies to unary word operators such as: &lt;code&gt;new&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;typeof&lt;/code&gt;, &lt;code&gt;void&lt;/code&gt;, &lt;code&gt;yield&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;words&lt;/code&gt; - применяется к операторам унарных слов, таким как: &lt;code&gt;new&lt;/code&gt; , &lt;code&gt;delete&lt;/code&gt; , &lt;code&gt;typeof&lt;/code&gt; , &lt;code&gt;void&lt;/code&gt; , &lt;code&gt;yield&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8969774c77043e144aff4bf62101b043cce636d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;worker&lt;/code&gt; - web workers global variables.</source>
          <target state="translated">&lt;code&gt;worker&lt;/code&gt; - глобальные переменные веб-воркеров.</target>
        </trans-unit>
        <trans-unit id="300e058b27197d2fd30811e6a51b5c26466d8375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ &quot;allowNamedFunctions&quot;: true }&lt;/code&gt;&lt;strong&gt;will not&lt;/strong&gt; flag the following example:</source>
          <target state="translated">&lt;code&gt;{ &quot;allowNamedFunctions&quot;: true }&lt;/code&gt; &lt;strong&gt;не будет &lt;/strong&gt;отмечать следующий пример:</target>
        </trans-unit>
        <trans-unit id="be93815ae6cace6c54c18967749e32ebc2ca2fb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ &quot;allowTemplateLiterals&quot;: false }&lt;/code&gt; will not disallow the usage of all template literals. If you want to forbid any instance of template literals, use &lt;a href=&quot;no-restricted-syntax&quot;&gt;no-restricted-syntax&lt;/a&gt; and target the &lt;code&gt;TemplateLiteral&lt;/code&gt; selector.</source>
          <target state="translated">&lt;code&gt;{ &quot;allowTemplateLiterals&quot;: false }&lt;/code&gt; не запрещает использование всех шаблонных литералов. Если вы хотите запретить любой экземпляр шаблонных литералов, используйте &lt;a href=&quot;no-restricted-syntax&quot;&gt;синтаксис без ограничений&lt;/a&gt; и &lt;code&gt;TemplateLiteral&lt;/code&gt; селектор TemplateLiteral .</target>
        </trans-unit>
        <trans-unit id="26aa7eb76c77f36a5b4eef1017c7a9d4f09b8d1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ &quot;allowUnboundThis&quot;: false }&lt;/code&gt;&lt;strong&gt;will&lt;/strong&gt; flag the following examples:</source>
          <target state="translated">&lt;code&gt;{ &quot;allowUnboundThis&quot;: false }&lt;/code&gt; &lt;strong&gt;отметит&lt;/strong&gt; следующие примеры:</target>
        </trans-unit>
        <trans-unit id="85e2de4f7aaa1280b404b80f6d67d6de16259c8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ &quot;minItems&quot;: value }&lt;/code&gt; requires linebreaks inside function parentheses if the number of parameters/arguments is at least &lt;code&gt;value&lt;/code&gt;. Otherwise, it disallows linebreaks.</source>
          <target state="translated">&lt;code&gt;{ &quot;minItems&quot;: value }&lt;/code&gt; требует переноса строк внутри скобок функции, если количество параметров / аргументов не меньше &lt;code&gt;value&lt;/code&gt; . В противном случае он запрещает перенос строки.</target>
        </trans-unit>
        <trans-unit id="5bcbf5b0912aba565be18b51eb0ba63df89c59da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&quot;before&quot;: false, &quot;after&quot;: false}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;neither&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&quot;before&quot;: false, &quot;after&quot;: false}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;neither&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7736fafa7d8c87cab4049ac35addef0742b055ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&quot;before&quot;: false, &quot;after&quot;: true}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;after&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&quot;before&quot;: false, &quot;after&quot;: true}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;after&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd01b6771ae8b10b383444ed75ec0191ae1708e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&quot;before&quot;: true, &quot;after&quot;: false}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;before&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&quot;before&quot;: true, &quot;after&quot;: false}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;before&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24ec96246a35f0fb25934ca1f382fdf207a71ec5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&quot;before&quot;: true, &quot;after&quot;: true}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;both&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&quot;before&quot;: true, &quot;after&quot;: true}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;both&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="428a16477e45de88f5411d14063f1b262bf4c21e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~/.eslintrc.*&lt;/code&gt; files behave similarly to regular configuration files, with some exceptions:</source>
          <target state="translated">&lt;code&gt;~/.eslintrc.*&lt;/code&gt; ведут себя аналогично обычным файлам конфигурации, за некоторыми исключениями:</target>
        </trans-unit>
        <trans-unit id="6579dd2d87db720cf5022eece35bcbc5152bc405" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~/.eslintrc.*&lt;/code&gt; files load plugins from &lt;code&gt;$CWD/node_modules&lt;/code&gt; by default in order to identify plugins uniquely. If you want to use plugins with &lt;code&gt;~/.eslintrc.*&lt;/code&gt; files, plugins must be installed locally per project. Alternatively, you can use the &lt;a href=&quot;command-line-interface#--resolve-plugins-relative-to&quot;&gt;&lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt; CLI option&lt;/a&gt; to change the location from which ESLint loads plugins.</source>
          <target state="translated">&lt;code&gt;~/.eslintrc.*&lt;/code&gt; по умолчанию загружают плагины из &lt;code&gt;$CWD/node_modules&lt;/code&gt; , чтобы однозначно идентифицировать плагины. Если вы хотите использовать плагины с &lt;code&gt;~/.eslintrc.*&lt;/code&gt; , Плагины должны быть установлены локально для каждого проекта. В качестве альтернативы вы можете использовать параметр &lt;a href=&quot;command-line-interface#--resolve-plugins-relative-to&quot;&gt; &lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt; CLI,&lt;/a&gt; чтобы изменить место, из которого ESLint загружает плагины.</target>
        </trans-unit>
        <trans-unit id="b95ef68d43736af87f87d494b9aa35117f6abd6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~/.eslintrc.*&lt;/code&gt; files load shareable configs and custom parsers from &lt;code&gt;~/node_modules/&lt;/code&gt; &amp;ndash; similarly to &lt;code&gt;require()&lt;/code&gt; &amp;ndash; in the user's home directory. Please note that it doesn't load global-installed packages.</source>
          <target state="translated">&lt;code&gt;~/.eslintrc.*&lt;/code&gt; загружают общие конфигурации и пользовательские парсеры из &lt;code&gt;~/node_modules/&lt;/code&gt; - аналогично &lt;code&gt;require()&lt;/code&gt; - в домашний каталог пользователя. Обратите внимание, что он не загружает глобально установленные пакеты.</target>
        </trans-unit>
        <trans-unit id="7e650bf2ed65d3b6857b4caa24b44e2304666d78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~/&lt;/code&gt; refers to &lt;a href=&quot;https://nodejs.org/api/os.html#os_os_homedir&quot;&gt;the home directory of the current user on your preferred operating system&lt;/a&gt;. The personal configuration file being referred to here is &lt;code&gt;~/.eslintrc.*&lt;/code&gt; file, which is currently handled differently than other configuration files.</source>
          <target state="translated">&lt;code&gt;~/&lt;/code&gt; относится к &lt;a href=&quot;https://nodejs.org/api/os.html#os_os_homedir&quot;&gt;домашнему каталогу текущего пользователя в предпочитаемой вами операционной системе&lt;/a&gt; . Здесь упоминается файл личной конфигурации &lt;code&gt;~/.eslintrc.*&lt;/code&gt; , Который в настоящее время обрабатывается иначе, чем другие файлы конфигурации.</target>
        </trans-unit>
        <trans-unit id="dde79d0dfe135bbe249b7430587f5c88f439ddb2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;false negatives&lt;/em&gt; when this rule reports correct code, but the program calls the callback more than one time (which is incorrect behavior)</source>
          <target state="translated">&lt;em&gt;ложноотрицательные,&lt;/em&gt; когда это правило сообщает правильный код, но программа вызывает обратный вызов более одного раза (что является неправильным поведением)</target>
        </trans-unit>
        <trans-unit id="51dc182038cc3d39feed641c04dea65d51b78d8f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;false positives&lt;/em&gt; when this rule reports incorrect code, but the program calls the callback only one time (which is correct behavior)</source>
          <target state="translated">&lt;em&gt;ложные срабатывания,&lt;/em&gt; когда это правило сообщает о неправильном коде, но программа вызывает обратный вызов только один раз (что является правильным поведением)</target>
        </trans-unit>
        <trans-unit id="f95a880d3b307bb016a078ab0e2bc85db5ee24a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A character with Emoji modifiers:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Персонаж с модификаторами Emoji:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15e0d475752ce95cade194ae748f9c3ca1809f39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A character with combining characters:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Персонаж с сочетанием символов:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e3fab0654c27190e3d2eaab45ad1a04ef74343b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A pair of regional indicator symbols:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Пара символов региональных индикаторов:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a49a6d1dbffb69c2c9ac935a8c9954a3fcd707b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A surrogate pair without Unicode flag:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Суррогатная пара без флага Unicode:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="607fdb8cf66564d700da735af85d57e55ad73a2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Atomic.&lt;/strong&gt; Rules must function completely on their own. Rules are expressly forbidden from knowing about the state or presence of other rules.</source>
          <target state="translated">&lt;strong&gt;Atomic. &lt;/strong&gt;Правила должны функционировать полностью сами по себе. Правилам категорически запрещается знать о состоянии или наличии других правил.</target>
        </trans-unit>
        <trans-unit id="b9a077df30f5baa6d17cb6042cbd8c3773fd3bb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bugs&lt;/strong&gt; - problems with the project are actively affecting users. We want to get these resolved as quickly as possible.</source>
          <target state="translated">&lt;strong&gt;Баги&lt;/strong&gt; - проблемы с проектом активно затрагивают пользователей. Мы хотим решить эти проблемы как можно быстрее.</target>
        </trans-unit>
        <trans-unit id="fba6712942524dcf51cb8aee2c59d1ed42e073a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Characters that ZWJ joins:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Персонажи, к которым присоединяется ZWJ:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d08dc10fd87a158f990e8ab8a386b673f6b33bc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Configuration Comments&lt;/strong&gt; - use JavaScript comments to embed configuration information directly into a file.</source>
          <target state="translated">&lt;strong&gt;Комментарии к конфигурации&lt;/strong&gt; - используйте комментарии JavaScript для вставки информации о конфигурации непосредственно в файл.</target>
        </trans-unit>
        <trans-unit id="14e063069850efd0f1fddb86fa1f07284d1ce23f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Configuration File&lt;/strong&gt; - In JSCS, the configuration file is &lt;code&gt;.jscsrc&lt;/code&gt;, &lt;code&gt;.jscsrc.json&lt;/code&gt;, &lt;code&gt;.jscsrc.yaml&lt;/code&gt;, or &lt;code&gt;.jscsrs.js&lt;/code&gt;. In ESLint, the configuration file can be &lt;code&gt;.eslintrc.json&lt;/code&gt;, &lt;code&gt;.eslintrc.yml&lt;/code&gt;, &lt;code&gt;.eslintrc.yaml&lt;/code&gt;, or &lt;code&gt;.eslintrc.js&lt;/code&gt; (there is also a deprecated &lt;code&gt;.eslintrc&lt;/code&gt; file format).</source>
          <target state="translated">&lt;strong&gt;Файл конфигурации.&lt;/strong&gt; В JSCS это файл конфигурации &lt;code&gt;.jscsrc&lt;/code&gt; , &lt;code&gt;.jscsrc.json&lt;/code&gt; , &lt;code&gt;.jscsrc.yaml&lt;/code&gt; или &lt;code&gt;.jscsrs.js&lt;/code&gt; . В ESLint файл конфигурации может быть &lt;code&gt;.eslintrc.json&lt;/code&gt; , &lt;code&gt;.eslintrc.yml&lt;/code&gt; , &lt;code&gt;.eslintrc.yaml&lt;/code&gt; или &lt;code&gt;.eslintrc.js&lt;/code&gt; (существует также устаревший &lt;code&gt;.eslintrc&lt;/code&gt; файла .eslintrc ).</target>
        </trans-unit>
        <trans-unit id="7e7c60fdb40941a7c04650e930ca4ef5a27a43b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Configuration Files&lt;/strong&gt; - use a JavaScript, JSON or YAML file to specify configuration information for an entire directory and all of its subdirectories. This can be in the form of an &lt;a href=&quot;#configuration-file-formats&quot;&gt;&lt;code&gt;.eslintrc.*&lt;/code&gt;&lt;/a&gt; file or an &lt;code&gt;eslintConfig&lt;/code&gt; field in a &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file, both of which ESLint will look for and read automatically, or you can specify a configuration file on the &lt;a href=&quot;command-line-interface&quot;&gt;command line&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Файлы конфигурации&lt;/strong&gt; - используйте файл JavaScript, JSON или YAML, чтобы указать информацию о конфигурации для всего каталога и всех его подкаталогов. Это может быть файл &lt;a href=&quot;#configuration-file-formats&quot;&gt; &lt;code&gt;.eslintrc.*&lt;/code&gt; &lt;/a&gt; &lt;code&gt;eslintConfig&lt;/code&gt; поле eslintConfig в файле &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt; , оба из которых ESLint будет искать и читать автоматически, или вы можете указать файл конфигурации в &lt;a href=&quot;command-line-interface&quot;&gt;командной строке&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e8a5f8e101664426e49a35befa2755eaff5094c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Correct&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Correct&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="e6350cf7d6acc659eaca20917c1ca6ac8fd6666e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Instead of using this option use &quot;always&quot; and pass a &quot;null&quot; option property with value &quot;ignore&quot;. This will tell ESLint to always enforce strict equality except when comparing with the &lt;code&gt;null&lt;/code&gt; literal.</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; вместо использования этой опции используйте &amp;laquo;всегда&amp;raquo; и передайте свойство опции &amp;laquo;null&amp;raquo; со ​​значением &amp;laquo;игнорировать&amp;raquo;. Это укажет ESLint всегда обеспечивать строгое равенство, за исключением сравнения с &lt;code&gt;null&lt;/code&gt; литералом.</target>
        </trans-unit>
        <trans-unit id="e1fdd0ebbb5f72ace445a12113655c6a65804e0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The following methods on the &lt;code&gt;context&lt;/code&gt; object are deprecated. Please use the corresponding methods on &lt;code&gt;SourceCode&lt;/code&gt; instead:</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; следующие методы объекта &lt;code&gt;context&lt;/code&gt; устарели. &lt;code&gt;SourceCode&lt;/code&gt; этого используйте соответствующие методы в SourceCode :</target>
        </trans-unit>
        <trans-unit id="c26c1066ca9b4bcf09dcd1520419ccd5123d266c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The object property &lt;code&gt;maximum&lt;/code&gt; is deprecated; please use the object property &lt;code&gt;max&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Устарело: &lt;/strong&gt; &lt;code&gt;maximum&lt;/code&gt; свойства объекта устарело; используйте вместо этого свойство объекта &lt;code&gt;max&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07808693d351c1bf3961179bc77d8228df0bcab3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The options &lt;code&gt;&quot;unix&quot;&lt;/code&gt; and &lt;code&gt;&quot;windows&quot;&lt;/code&gt; are deprecated. If you need to enforce a specific linebreak style, use this rule in conjunction with &lt;code&gt;linebreak-style&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; параметры &lt;code&gt;&quot;unix&quot;&lt;/code&gt; и &lt;code&gt;&quot;windows&quot;&lt;/code&gt; устарели. Если вам нужно установить определенный стиль переноса строки, используйте это правило вместе со &lt;code&gt;linebreak-style&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f69cd7a86dfd50efb7075779240a06f30d11a5d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the object property &lt;code&gt;applyDefaultPatterns&lt;/code&gt; is deprecated. Please use the property &lt;code&gt;applyDefaultIgnorePatterns&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; свойство объекта &lt;code&gt;applyDefaultPatterns&lt;/code&gt; устарело. &lt;code&gt;applyDefaultIgnorePatterns&lt;/code&gt; этого используйте свойство applyDefaultIgnorePatterns .</target>
        </trans-unit>
        <trans-unit id="121d74800370c721111cd7b62fec7a4c3526b7a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the object property &lt;code&gt;maximum&lt;/code&gt; is deprecated. Please use the property &lt;code&gt;max&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Устарело: &lt;/strong&gt; &lt;code&gt;maximum&lt;/code&gt; свойства объекта устарело. Вместо этого используйте свойство &lt;code&gt;max&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6318908ad3986add6a5e1e373df74f506549530" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt; - use &lt;code&gt;.eslintrc&lt;/code&gt;, which can be either JSON or YAML.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется&lt;/strong&gt; - используйте &lt;code&gt;.eslintrc&lt;/code&gt; , который может быть JSON или YAML.</target>
        </trans-unit>
        <trans-unit id="6a411cecdb230e7393693a1f9d6fe3493cafaa02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt;: The object property &lt;code&gt;avoid-escape&lt;/code&gt; is deprecated; please use the object property &lt;code&gt;avoidEscape&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Устарело&lt;/strong&gt; : свойство объекта &lt;code&gt;avoid-escape&lt;/code&gt; устарело; используйте вместо этого свойство объекта &lt;code&gt;avoidEscape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c318c6dcba96b5fe81622562c4653a966b5f5d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; All scopes.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; Все области применения.</target>
        </trans-unit>
        <trans-unit id="1d63d07318ddd8f8176cae489ff8e9f2a3d7d8e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; Get the scope of a given AST node. The gotten scope's &lt;code&gt;block&lt;/code&gt; property is the node. This method never returns &lt;code&gt;function-expression-name&lt;/code&gt; scope. If the node does not have their scope, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; получить область действия данного узла AST. Свойство &lt;code&gt;block&lt;/code&gt; полученной области видимости - это узел. Этот метод никогда не возвращает область видимости &lt;code&gt;function-expression-name&lt;/code&gt; . Если узел не имеет своей области видимости, возвращается значение &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2502e7c0b0ca04673f7399d46d8f900e247c4a30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; Get the scopes of a given AST node. The gotten scopes' &lt;code&gt;block&lt;/code&gt; property is the node. If the node does not have their scope, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; получить области действия данного узла AST. Свойство &lt;code&gt;block&lt;/code&gt; полученных областей видимости - это узел. Если узел не имеет своей области видимости, возвращается значение &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d363b3e91012022cd70cf852479f174a720188a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; Get the variables that a given AST node defines. The gotten variables' &lt;code&gt;def[].node&lt;/code&gt;/&lt;code&gt;def[].parent&lt;/code&gt; property is the node. If the node does not define any variable, this returns an empty array.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; получить переменные, которые определяет данный узел AST. Свойство &lt;code&gt;def[].node&lt;/code&gt; / &lt;code&gt;def[].parent&lt;/code&gt; полученных переменных является узлом. Если узел не определяет никаких переменных, возвращается пустой массив.</target>
        </trans-unit>
        <trans-unit id="1d444ab979de6d99d2f0cd11b618cbf8e2ccfb36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; Returns &lt;code&gt;!this.dynamic&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; Возвращает &lt;code&gt;!this.dynamic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07297c7d844bcb4b55217d7bc274ac45715324d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; Returns &lt;code&gt;this.references.find(r =&amp;gt; r.identifier === node)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; возвращает &lt;code&gt;this.references.find(r =&amp;gt; r.identifier === node)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="007187a08867fb25c108f3639d15a1bea0e1d62a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; Returns &lt;code&gt;this.thisFound&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; возвращает &lt;code&gt;this.thisFound&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ad9c69bb1dc7f531761819279c2fdd71461cf98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;Identifier&lt;/code&gt; node of this definition.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; Узел &lt;code&gt;Identifier&lt;/code&gt; этого определения.</target>
        </trans-unit>
        <trans-unit id="1e87c3a915049bb9ad1e911500554f02ce7b30ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;Identifier&lt;/code&gt; node of this reference.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;Identifier&lt;/code&gt; узла этой ссылки.</target>
        </trans-unit>
        <trans-unit id="79543808d3d3ad8c145b7efc175082ee5b89fcdc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;Scope&lt;/code&gt; object that this reference is on.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;Scope&lt;/code&gt; объект, эта ссылка на.</target>
        </trans-unit>
        <trans-unit id="5353454d32fb26fa1a5e0e93c5ba931c946f60c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;Variable&lt;/code&gt; object that this reference refers. If such variable was not defined, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;Variable&lt;/code&gt; объект , который эта ссылка относится. Если такая переменная не была определена, это &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d1991cac1575dce694faec96e6d6752ac18ce19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;partial&lt;/code&gt; flag.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;partial&lt;/code&gt; флаг.</target>
        </trans-unit>
        <trans-unit id="5bfab1b4bccd169f5b14893af242e854123548d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;stack&lt;/code&gt; flag. (I'm not sure what this means.)</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;stack&lt;/code&gt; флаг. (Я не уверен, что это значит.)</target>
        </trans-unit>
        <trans-unit id="e9ebdac4b754584d17fe9ec564d80fb1092bcd79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;tainted&lt;/code&gt; flag. (always &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;tainted&lt;/code&gt; флаг. (всегда &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c932e741f1645e5cf3fa3ca9cd763120e9447732" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The AST node which created this scope.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; Узел AST, создавший эту область.</target>
        </trans-unit>
        <trans-unit id="038d84337b46b25fee8f60dd2b0197373fa0a772" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The ASTNode object which is right-hand side.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; объект ASTNode, который находится справа.</target>
        </trans-unit>
        <trans-unit id="c9a11ff5c2342225e6f07d27d0bc2fe49c905df0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of &lt;code&gt;Identifier&lt;/code&gt; nodes which define this variable. If this variable is redeclared, this array includes two or more nodes.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; массив узлов &lt;code&gt;Identifier&lt;/code&gt; которые определяют эту переменную. Если эта переменная повторно объявлена, этот массив включает два или более узлов.</target>
        </trans-unit>
        <trans-unit id="0e083b8ba70a3a809f455f303d81a522e42a59ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of all references on this scope. This does not include references in child scopes.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; массив всех ссылок в этой области. Это не включает ссылки в дочерних областях.</target>
        </trans-unit>
        <trans-unit id="8183238f4a04b2bad9ffb943be5777c9a692637f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of all variables which are defined on this scope. This does not include variables which are defined in child scopes.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; массив всех переменных, определенных в этой области. Сюда не входят переменные, которые определены в дочерних областях.</target>
        </trans-unit>
        <trans-unit id="236d1509a87098d65558b21013cf936514b86213" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of child scopes. This does not include grandchild scopes.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; Массив дочерних областей видимости. Это не включает объемы внуков.</target>
        </trans-unit>
        <trans-unit id="6a37c4e52b7a84f2d803647b07615988738adb15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of references which could not be resolved in this scope.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; массив ссылок, которые не удалось разрешить в этой области.</target>
        </trans-unit>
        <trans-unit id="30653239f2d91028d647f1ad7162ffeef9df6f30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of the definitions of this variable.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; массив определений этой переменной.</target>
        </trans-unit>
        <trans-unit id="305a2395e825dbde278bed861652d19721e0cfad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of the references of this variable.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; массив ссылок на эту переменную.</target>
        </trans-unit>
        <trans-unit id="58fb1488df081af5b68cee135690c98d00735f21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The enclosing node of the name.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; заключающий узел имени.</target>
        </trans-unit>
        <trans-unit id="d8ed0a2d527f28125603b4b3b5c8d394d591f8f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The enclosing statement node of the name.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; включающий узел оператора имени.</target>
        </trans-unit>
        <trans-unit id="be4a767ff967dddfb8222aad16461f1910ee0ea1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The index in the declaration statement.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; Индекс в заявлении объявления.</target>
        </trans-unit>
        <trans-unit id="df195fad0ad68009fb0edecdec164d3a68408d4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The kind of the declaration statement.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; вид декларации.</target>
        </trans-unit>
        <trans-unit id="df67f02c6460a8e894f70afd9828d8ac31cfb053" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The map from variable names to &lt;code&gt;tainted&lt;/code&gt; flag.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; Карта от имен переменных до &lt;code&gt;tainted&lt;/code&gt; флага.</target>
        </trans-unit>
        <trans-unit id="1f4b8428bb328cbc24d4974827b464982c783b86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The map from variable names to variable objects.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; Карта от имен переменных к объектам переменных.</target>
        </trans-unit>
        <trans-unit id="39e8bc09ba6281bf3aba9eda39636214bc5a8786" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The name of this variable.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; имя этой переменной.</target>
        </trans-unit>
        <trans-unit id="fb4a7a61464fd8acd801b1f5b8c015729f2ac5e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The parent scope. If this is the global scope then this property is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; родительская область. Если это глобальная область видимости, это свойство имеет значение &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9aca2fa95361a163dcc6e5d4f9ac2f5dea5fa996" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The root scope.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; Корневая область видимости.</target>
        </trans-unit>
        <trans-unit id="c551be088c876b85479e2dd36895051838e06f37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The scope which hosts variables which are defined by &lt;code&gt;var&lt;/code&gt; declarations.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; область, в которой размещаются переменные, определенные в объявлениях &lt;code&gt;var&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20468fe1f2bfbcc9f2e03707a8d0aa6a6f82e303" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The type of this definition. One of &lt;code&gt;&quot;CatchClause&quot;&lt;/code&gt;, &lt;code&gt;&quot;ClassName&quot;&lt;/code&gt;, &lt;code&gt;&quot;FunctionName&quot;&lt;/code&gt;, &lt;code&gt;&quot;ImplicitGlobalVariable&quot;&lt;/code&gt;, &lt;code&gt;&quot;ImportBinding&quot;&lt;/code&gt;, &lt;code&gt;&quot;Parameter&quot;&lt;/code&gt;, and &lt;code&gt;&quot;Variable&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; Тип этого определения. Одно из &lt;code&gt;&quot;CatchClause&quot;&lt;/code&gt; , &lt;code&gt;&quot;ClassName&quot;&lt;/code&gt; , &lt;code&gt;&quot;FunctionName&quot;&lt;/code&gt; , &lt;code&gt;&quot;ImplicitGlobalVariable&quot;&lt;/code&gt; , &lt;code&gt;&quot;ImportBinding&quot;&lt;/code&gt; , &lt;code&gt;&quot;Parameter&quot;&lt;/code&gt; и &lt;code&gt;&quot;Variable&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb7b205ac1c4de3b9fcd54fcf2f952a239cd24e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The type of this scope. This is one of &lt;code&gt;&quot;block&quot;&lt;/code&gt;, &lt;code&gt;&quot;catch&quot;&lt;/code&gt;, &lt;code&gt;&quot;class&quot;&lt;/code&gt;, &lt;code&gt;&quot;for&quot;&lt;/code&gt;, &lt;code&gt;&quot;function&quot;&lt;/code&gt;, &lt;code&gt;&quot;function-expression-name&quot;&lt;/code&gt;, &lt;code&gt;&quot;global&quot;&lt;/code&gt;, &lt;code&gt;&quot;module&quot;&lt;/code&gt;, &lt;code&gt;&quot;switch&quot;&lt;/code&gt;, &lt;code&gt;&quot;with&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Описание:&lt;/strong&gt; Тип этой области. Это одно из &lt;code&gt;&quot;block&quot;&lt;/code&gt; , &lt;code&gt;&quot;catch&quot;&lt;/code&gt; , &lt;code&gt;&quot;class&quot;&lt;/code&gt; , &lt;code&gt;&quot;for&quot;&lt;/code&gt; , &lt;code&gt;&quot;function&quot;&lt;/code&gt; , &lt;code&gt;&quot;function-expression-name&quot;&lt;/code&gt; , &lt;code&gt;&quot;global&quot;&lt;/code&gt; , &lt;code&gt;&quot;module&quot;&lt;/code&gt; , &lt;code&gt;&quot;switch&quot;&lt;/code&gt; , &lt;code&gt;&quot;with&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a58c91eaa02a13f4df54db1d615c3e064e860983" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;1&lt;/code&gt; is reading, &lt;code&gt;2&lt;/code&gt; is writing, &lt;code&gt;3&lt;/code&gt; is reading/writing.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;1&lt;/code&gt; - чтение, &lt;code&gt;2&lt;/code&gt; - запись, &lt;code&gt;3&lt;/code&gt; - чтение / запись.</target>
        </trans-unit>
        <trans-unit id="4cee383e7e07773e4a8112bf2c0a92da494d5121" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if a given name is used in variable names or reference names.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если данное имя используется в именах переменных или ссылочных именах.</target>
        </trans-unit>
        <trans-unit id="7894caac9879d2f195f04eb7f0745ebba5f4240d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this is a &lt;code&gt;&quot;function&quot;&lt;/code&gt; scope which has used &lt;code&gt;arguments&lt;/code&gt; variable.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если это область видимости &lt;code&gt;&quot;function&quot;&lt;/code&gt; которая использовала переменную &lt;code&gt;arguments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36605474d8f010edf63b7f0fe28ab85323907ba4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this program is module.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта программа является модульной.</target>
        </trans-unit>
        <trans-unit id="14b0b94037409dffb029ff1840fef7c70819c156" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this program is strict mode implicitly. I.e., &lt;code&gt;options.impliedStrict === true&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта программа неявно работает в строгом режиме. Т.е., &lt;code&gt;options.impliedStrict === true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1053cc9be0aa9bb51f7f33ef4d47b041c266a14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this program supports strict mode. I.e., &lt;code&gt;options.ecmaVersion &amp;gt;= 5&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; , если эта программа поддерживает строгий режим. Т.е. &lt;code&gt;options.ecmaVersion &amp;gt;= 5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8268f6830b81c4adb5dd52396c3c0d3dd9a35f46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this reference is reading and writing.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта ссылка предназначена для чтения и записи.</target>
        </trans-unit>
        <trans-unit id="b5d2b3adc78b6d3caf6e7aba6afd631e3ab0da6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this reference is reading but not writing.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта ссылка предназначена для чтения, но не для записи.</target>
        </trans-unit>
        <trans-unit id="30a6f8f425d563354b1f0baf37d6b5825edd72c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this reference is reading.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта ссылка читается.</target>
        </trans-unit>
        <trans-unit id="b59b18e6bff230841784342f7042d2b53154dee0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this reference is resolved statically.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта ссылка разрешена статически.</target>
        </trans-unit>
        <trans-unit id="dd20eb7a275e9c8ab5581bbc0c1c586f64331ecd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this reference is writing but not reading.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта ссылка записывает, но не читает.</target>
        </trans-unit>
        <trans-unit id="a1aba86f1bf531bae103ec9e3ff7bc4a4d3f7206" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this reference is writing.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта ссылка пишется.</target>
        </trans-unit>
        <trans-unit id="7a2ddd3a18cc341e823438611f09b6a959d5574e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this scope contains &lt;code&gt;eval()&lt;/code&gt; invocations.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта область содержит вызовы &lt;code&gt;eval()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a60b7f1e92c2caedd38861e969bb95ecd0ed131" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this scope contains &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта область содержит &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f506f32e92524b511ad88d3d8608cc02ae497b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this scope is &lt;code&gt;&quot;function-expression-name&quot;&lt;/code&gt; scope.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта область действия является областью &lt;code&gt;&quot;function-expression-name&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b19a491137b8c9b3b56cd0ed75d02e46d6e52eb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this scope is dynamic. I.e., the type of this scope is &lt;code&gt;&quot;global&quot;&lt;/code&gt; or &lt;code&gt;&quot;with&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта область видимости динамическая. Т.е. тип этой области - &lt;code&gt;&quot;global&quot;&lt;/code&gt; или &lt;code&gt;&quot;with&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd78455aefa04ad7b2c67b07777658d01b7730cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this scope is strict mode.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта область находится в строгом режиме.</target>
        </trans-unit>
        <trans-unit id="a395bb54efa49db4c3ce533e066f657b8faec55e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this writing reference is a variable initializer or a default value.</source>
          <target state="translated">&lt;strong&gt;Описание: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; если эта запись является инициализатором переменной или значением по умолчанию.</target>
        </trans-unit>
        <trans-unit id="d583721fdee9eda617809d6d5f0932df533809dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Description&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98d77b848a0abc76e21193a499c216a7c96c4336" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Documentation&lt;/strong&gt; - documentation issues are a type of bug in that they actively affect current users. As such, we want to address documentation issues as quickly as possible.</source>
          <target state="translated">&lt;strong&gt;Документация&lt;/strong&gt; - проблемы с документацией представляют собой тип ошибки, поскольку они активно влияют на текущих пользователей. Поэтому мы хотим как можно быстрее решать проблемы с документацией.</target>
        </trans-unit>
        <trans-unit id="cd8c901162291381cc0db68583bdf9faf0b01cf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ESLint Comment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Комментарий ESLint&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b02977e23c10e3c214a0ce10d03e5be4439204f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ESLint Shareable Config&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Конфигурация общего доступа ESLint&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb69c54f5fa4ad2445922301b88b27b35d084398" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Enhancements&lt;/strong&gt; - requested improvements for existing functionality.</source>
          <target state="translated">&lt;strong&gt;Улучшения&lt;/strong&gt; - запрошенные улучшения существующей функциональности.</target>
        </trans-unit>
        <trans-unit id="c797ac32aa4127046dcb874228b7074f7a5c0aab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Environments&lt;/strong&gt; - which environments your script is designed to run in. Each environment brings with it a certain set of predefined global variables.</source>
          <target state="translated">&lt;strong&gt;Среды&lt;/strong&gt; - среды, для которых предназначен ваш сценарий. Каждая среда имеет определенный набор предопределенных глобальных переменных.</target>
        </trans-unit>
        <trans-unit id="db36483c04f51816464104f9336215d65f9a9de4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Features&lt;/strong&gt; - new functionality that will aid users in the future.</source>
          <target state="translated">&lt;strong&gt;Особенности&lt;/strong&gt; - новые функции, которые помогут пользователям в будущем.</target>
        </trans-unit>
        <trans-unit id="af207494644ef63da627d549729c12fe3b8c4ad1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generic.&lt;/strong&gt; Rules cannot be so specific that users will have trouble understanding when to use them. A rule is typically too specific if describing what it does requires more than two &quot;and&quot;s (if a and b and c and d, then this rule warns).</source>
          <target state="translated">&lt;strong&gt;Generic. &lt;/strong&gt;Правила не могут быть настолько конкретными, чтобы пользователи не понимали, когда их использовать. Правило обычно слишком конкретное, если для описания того, что оно делает, требуется более двух &quot;и&quot; (если a и b, c и d, это правило предупреждает).</target>
        </trans-unit>
        <trans-unit id="6689c7c184eb755bc66eded45689e48fbf168a2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Globals&lt;/strong&gt; - the additional global variables your script accesses during execution.</source>
          <target state="translated">&lt;strong&gt;Globals&lt;/strong&gt; - дополнительные глобальные переменные, к которым ваш скрипт обращается во время выполнения.</target>
        </trans-unit>
        <trans-unit id="20f8d000c45d1a39c043aba161502703deeee9cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important note:&lt;/strong&gt; If the directory for the cache does not exist make sure you add a trailing &lt;code&gt;/&lt;/code&gt; on *nix systems or &lt;code&gt;\&lt;/code&gt; in windows. Otherwise the path will be assumed to be a file.</source>
          <target state="translated">&lt;strong&gt;Важное примечание:&lt;/strong&gt; если каталог для кеша не существует, убедитесь, что вы добавили конечный &lt;code&gt;/&lt;/code&gt; on * nix systems или &lt;code&gt;\&lt;/code&gt; in windows. В противном случае путь будет считаться файлом.</target>
        </trans-unit>
        <trans-unit id="235d36d7dcc57be47171dc560e7d69f443d908c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; If you are upgrading from 0.x, please refer to &lt;a href=&quot;migrating-to-1.0.0&quot;&gt;Migrating to 1.0.0&lt;/a&gt; as your starting point.</source>
          <target state="translated">&lt;strong&gt;Важно:&lt;/strong&gt; Если вы обновляетесь с 0.x, обратитесь к &lt;a href=&quot;migrating-to-1.0.0&quot;&gt;разделу &amp;laquo;Переход на 1.0.0&amp;raquo; в&lt;/a&gt; качестве отправной точки.</target>
        </trans-unit>
        <trans-unit id="ae2eaa51443c3258dd7e45dea4a5ac94bc4017db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; If you submit a &lt;strong&gt;core&lt;/strong&gt; rule to the ESLint repository, you &lt;strong&gt;must&lt;/strong&gt; follow some conventions explained below.</source>
          <target state="translated">&lt;strong&gt;Важно:&lt;/strong&gt; если вы отправляете &lt;strong&gt;основное&lt;/strong&gt; правило в репозиторий ESLint, вы &lt;strong&gt;должны&lt;/strong&gt; соблюдать некоторые соглашения, описанные ниже.</target>
        </trans-unit>
        <trans-unit id="ee492b684f6bb254969929ee2dd4880d1561b9fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; The &lt;code&gt;meta.fixable&lt;/code&gt; property is mandatory for fixable rules. ESLint will throw an error if a rule that implements &lt;code&gt;fix&lt;/code&gt; functions does not &lt;a href=&quot;#rule-basics&quot;&gt;export&lt;/a&gt; the &lt;code&gt;meta.fixable&lt;/code&gt; property.</source>
          <target state="translated">&lt;strong&gt;Важно: &lt;/strong&gt; &lt;code&gt;meta.fixable&lt;/code&gt; свойство является обязательным для фиксируемых правил. ESLint выдаст ошибку , если правило , которое реализует &lt;code&gt;fix&lt;/code&gt; функции не &lt;a href=&quot;#rule-basics&quot;&gt;экспортировать&lt;/a&gt; в &lt;code&gt;meta.fixable&lt;/code&gt; собственности.</target>
        </trans-unit>
        <trans-unit id="b42040c1488043bf228b71702cca0584f230373b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; This configuration is &lt;strong&gt;not recommended for production use&lt;/strong&gt; because it changes with every minor and major version of ESLint. Use at your own risk.</source>
          <target state="translated">&lt;strong&gt;Важно:&lt;/strong&gt; эта конфигурация &lt;strong&gt;не рекомендуется для производственного использования,&lt;/strong&gt; поскольку она изменяется с каждой дополнительной и основной версиями ESLint. Используйте на свой риск.</target>
        </trans-unit>
        <trans-unit id="84927636eae797794df96a60238b07a1ac6aff3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; Unless the rule &lt;a href=&quot;#rule-basics&quot;&gt;exports&lt;/a&gt; the &lt;code&gt;meta.fixable&lt;/code&gt; property, ESLint does not apply fixes even if the rule implements &lt;code&gt;fix&lt;/code&gt; functions.</source>
          <target state="translated">&lt;strong&gt;Важно:&lt;/strong&gt; Если правило &lt;a href=&quot;#rule-basics&quot;&gt;не экспортирует&lt;/a&gt; в &lt;code&gt;meta.fixable&lt;/code&gt; собственности, ESLint не применять исправления , даже если правило реализует &lt;code&gt;fix&lt;/code&gt; функции.</target>
        </trans-unit>
        <trans-unit id="69c7924d351034165acbbfab277838dd50f1a24a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; We strongly recommend always including a default config for your plugin to avoid errors.</source>
          <target state="translated">&lt;strong&gt;Важно:&lt;/strong&gt; мы настоятельно рекомендуем всегда включать конфигурацию по умолчанию для вашего плагина, чтобы избежать ошибок.</target>
        </trans-unit>
        <trans-unit id="bb214ee6eb5c7dc12ee59389822b7d98da3bd6fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; We will not be updating the ESLint v2.x versions going forward. All bug fixes and enhancements will land in ESLint v3.x.</source>
          <target state="translated">&lt;strong&gt;Важно:&lt;/strong&gt; мы не будем обновлять версии ESLint v2.x в будущем. Все исправления ошибок и улучшения появятся в ESLint v3.x.</target>
        </trans-unit>
        <trans-unit id="af1973d3d7abb5403d4358d2d444c4653aef3ef0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; Without the &lt;code&gt;fixable&lt;/code&gt; property, ESLint does not &lt;a href=&quot;#applying-fixes&quot;&gt;apply fixes&lt;/a&gt; even if the rule implements &lt;code&gt;fix&lt;/code&gt; functions. Omit the &lt;code&gt;fixable&lt;/code&gt; property if the rule is not fixable.</source>
          <target state="translated">&lt;strong&gt;Важно:&lt;/strong&gt; Без &lt;code&gt;fixable&lt;/code&gt; собственности, ESLint не &lt;a href=&quot;#applying-fixes&quot;&gt;применять исправления&lt;/a&gt; , даже если правило реализует &lt;code&gt;fix&lt;/code&gt; функции. Опустите &lt;code&gt;fixable&lt;/code&gt; свойство, если правило не исправимо.</target>
        </trans-unit>
        <trans-unit id="f318a381208ca097f538b4b037cad2f3286f2d39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; You must pass in the &lt;code&gt;results&lt;/code&gt; property of the report. Passing in &lt;code&gt;report&lt;/code&gt; directly will result in an error.</source>
          <target state="translated">&lt;strong&gt;Важно:&lt;/strong&gt; вы должны передать свойство &lt;code&gt;results&lt;/code&gt; отчета. Передача &lt;code&gt;report&lt;/code&gt; напрямую приведет к ошибке.</target>
        </trans-unit>
        <trans-unit id="d1c6167374ff4343d0a7bd093fb7451884c580ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; the &lt;code&gt;fixable&lt;/code&gt; property is mandatory for fixable rules. If this property isn't specified, ESLint will throw an error whenever the rule attempts to produce a fix. Omit the &lt;code&gt;fixable&lt;/code&gt; property if the rule is not fixable.</source>
          <target state="translated">&lt;strong&gt;Важно: &lt;/strong&gt; &lt;code&gt;fixable&lt;/code&gt; свойство является обязательным для фиксируемых правил. Если это свойство не указано, ESLint выдает ошибку всякий раз, когда правило пытается произвести исправление. Опустите &lt;code&gt;fixable&lt;/code&gt; свойство, если правило не исправимо.</target>
        </trans-unit>
        <trans-unit id="4ef58db4ffe765c889ba28c24dfbc531efe80a6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;: Note that &lt;code&gt;node_modules&lt;/code&gt; directories in, for example, a &lt;code&gt;packages&lt;/code&gt; directory in a mono repo are &lt;em&gt;not&lt;/em&gt; ignored by default and need to be added to &lt;code&gt;.eslintignore&lt;/code&gt; explicitly.</source>
          <target state="translated">&lt;strong&gt;Важно&lt;/strong&gt; : обратите внимание, что &lt;code&gt;node_modules&lt;/code&gt; , например, в каталоге &lt;code&gt;packages&lt;/code&gt; в монорепозитории, &lt;em&gt;не&lt;/em&gt; игнорируются по умолчанию и должны быть добавлены в &lt;code&gt;.eslintignore&lt;/code&gt; явно.</target>
        </trans-unit>
        <trans-unit id="06af978db0e74adafadd870923b8d60b542ceb0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incorrect&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Incorrect&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="5c2cebb95a12bc72dedb9ca39be6d153867f8883" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS Comment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;АОС Комментарий&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1f3fe61c5863162813e794c8b1b86796bc5e188" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS Preset&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Пресет АОС&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="875fa661818e2fa945668f13e89129e9902797bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesAfterBlocks&quot;&gt;disallowPaddingNewLinesAfterBlocks&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesAfterBlocks&quot;&gt;disallowPaddingNewLinesAfterBlocks&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1afdb12b91844a96b65e7fe73d8b3fe6d0a5bcf1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesAfterUseStrict&quot;&gt;disallowPaddingNewLinesAfterUseStrict&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesAfterUseStrict&quot;&gt;disallowPaddingNewLinesAfterUseStrict&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23b929bd9e971dba75ed1fca7e96be672a7b5b82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesBeforeExport&quot;&gt;disallowPaddingNewLinesBeforeExport&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesBeforeExport&quot;&gt;disallowPaddingNewLinesBeforeExport&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ca621a4a90b373c75564885bff675dd36886635" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewlinesBeforeKeywords&quot;&gt;disallowPaddingNewlinesBeforeKeywords&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewlinesBeforeKeywords&quot;&gt;disallowPaddingNewlinesBeforeKeywords&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cf1f14ed21f7fd76bd4ea944770b2b1261ccc06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLineAfterVariableDeclaration&quot;&gt;requirePaddingNewLineAfterVariableDeclaration&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLineAfterVariableDeclaration&quot;&gt;requirePaddingNewLineAfterVariableDeclaration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9238f9fbbd5e5293f233a55af524c54e7219926" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesAfterBlocks&quot;&gt;requirePaddingNewLinesAfterBlocks&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesAfterBlocks&quot;&gt;requirePaddingNewLinesAfterBlocks&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="096a0e921738b26458570243b333d4e31296e6e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesAfterUseStrict&quot;&gt;requirePaddingNewLinesAfterUseStrict&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesAfterUseStrict&quot;&gt;requirePaddingNewLinesAfterUseStrict&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74d28a0823e61957e5d2c5c16bede4f960cdf9ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesBeforeExport&quot;&gt;requirePaddingNewLinesBeforeExport&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesBeforeExport&quot;&gt;requirePaddingNewLinesBeforeExport&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="792713e14953df441ea953c5ccfabc5a465b6af2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewlinesBeforeKeywords&quot;&gt;requirePaddingNewlinesBeforeKeywords&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewlinesBeforeKeywords&quot;&gt;requirePaddingNewlinesBeforeKeywords&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6539cdeff7be733fe5f689599bef3381961e2a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/validateNewlineAfterArrayElements&quot;&gt;validateNewlineAfterArrayElements&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/validateNewlineAfterArrayElements&quot;&gt;validateNewlineAfterArrayElements&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b845858c98479877f5cd84e3e3d947a67cde0556" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/validateOrderInObjectKeys&quot;&gt;validateOrderInObjectKeys&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/validateOrderInObjectKeys&quot;&gt;validateOrderInObjectKeys&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92d02c2711b391996382780ce54c871ecfbcf61b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowAnonymousFunctions&quot;&gt;disallowAnonymousFunctions&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowAnonymousFunctions&quot;&gt;disallowAnonymousFunctions&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5518cb0a8307c096ca6e5181b41c3f34ded248b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowCapitalizedComments&quot;&gt;disallowCapitalizedComments&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowCapitalizedComments&quot;&gt;disallowCapitalizedComments&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3fce6c2919f5a7f4128db723289f261b2579f50e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowIdenticalDestructuringNames&quot;&gt;disallowIdenticalDestructuringNames&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowIdenticalDestructuringNames&quot;&gt;disallowIdenticalDestructuringNames&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2779a0f1925b729c25143da366d2ea05a156057c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesAfterUseStrict&quot;&gt;disallowPaddingNewLinesAfterUseStrict&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesAfterUseStrict&quot;&gt;disallowPaddingNewLinesAfterUseStrict&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc46dd82ef9a36adced582b80db251ee8098f353" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesInObjects&quot;&gt;disallowPaddingNewLinesInObjects&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesInObjects&quot;&gt;disallowPaddingNewLinesInObjects&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b76c35c4dec8659858707ea0d74f38aeff893a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowSpacesInCallExpression&quot;&gt;disallowSpacesInCallExpression&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowSpacesInCallExpression&quot;&gt;disallowSpacesInCallExpression&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecefb37a09083aea3ec664483f3936076aa7ca67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowTabs&quot;&gt;disallowTabs&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowTabs&quot;&gt;disallowTabs&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0b29a889bfed4db9fd94315be32c286fd2eb4d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/maximumNumberOfLines&quot;&gt;maximumNumberOfLines&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/maximumNumberOfLines&quot;&gt;maximumNumberOfLines&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="524522c208c793d67df0d70c51a25321ca6ead53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireAnonymousFunctions&quot;&gt;requireAnonymousFunctions&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/requireAnonymousFunctions&quot;&gt;requireAnonymousFunctions&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="186a02ade6372dc7fb4ce71dac0a15dd30047be7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireCapitalizedComments&quot;&gt;requireCapitalizedComments&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/requireCapitalizedComments&quot;&gt;requireCapitalizedComments&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c55f32f60480930c50ff24b3734d8f7612790aa2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireMatchingFunctionName&quot;&gt;requireMatchingFunctionName&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;ОНК&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/requireMatchingFunctionName&quot;&gt;requireMatchingFunctionName&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f3b86e456fcc92f2d512f9b8198df3c5dd8ed28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireMultiLineTernary&quot;&gt;requireMultiLineTernary&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;ОНК&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/requireMultiLineTernary&quot;&gt;requireMultiLineTernary&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="051352b9689b94454c403b5767b707d6004dd6d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireNumericLiterals&quot;&gt;requireNumericLiterals&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;АОС&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/requireNumericLiterals&quot;&gt;requireNumericLiterals&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e99f39f1e1bc94d80fc4189abd36d57e1c90285" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesAfterUseStrict&quot;&gt;requirePaddingNewLinesAfterUseStrict&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;АОС&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesAfterUseStrict&quot;&gt;requirePaddingNewLinesAfterUseStrict&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9e8eff6880ee488abbd0548b83266d9d9ea8b17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesInObjects&quot;&gt;requirePaddingNewLinesInObjects&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;АОС&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesInObjects&quot;&gt;requirePaddingNewLinesInObjects&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14c43f82c9f67bcd07edf26203adc57f971b82cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireSpacesInCallExpression&quot;&gt;requireSpacesInCallExpression&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/requireSpacesInCallExpression&quot;&gt;requireSpacesInCallExpression&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b01ba1c29dfda05eb2c7fc519aef9d76b7858fec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/validateCommentPosition&quot;&gt;validateCommentPosition&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/validateCommentPosition&quot;&gt;validateCommentPosition&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49b5a8cc5ef8759fcbb6679a20275bfc6b56da26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/validateIndentation&quot;&gt;validateIndentation&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/validateIndentation&quot;&gt;validateIndentation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f184acb203d5acc54ea98a65572c44f57115d4d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/validateLineBreaks&quot;&gt;validateLineBreaks&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;АОС&lt;/strong&gt; : &lt;a href=&quot;https://jscs-dev.github.io/rule/validateLineBreaks&quot;&gt;validateLineBreaks&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56c9d143227ac59dde41b0e45643f66838ae798d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: This rule option &lt;code&gt;separateRequires&lt;/code&gt; roughly maps to &lt;a href=&quot;https://jscs-dev.github.io/rule/requireMultipleVarDecl&quot;&gt;requireMultipleVarDecl&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;ОНК&lt;/strong&gt; : Это правило опция &lt;code&gt;separateRequires&lt;/code&gt; примерно сопоставляется &lt;a href=&quot;https://jscs-dev.github.io/rule/requireMultipleVarDecl&quot;&gt;requireMultipleVarDecl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ab1eb359d57bae17ce11110702185750e352610" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: This rule provides partial compatibility with &lt;a href=&quot;https://jscs-dev.github.io/rule/requireObjectKeysOnNewLine&quot;&gt;requireObjectKeysOnNewLine&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : это правило обеспечивает частичную совместимость с &lt;a href=&quot;https://jscs-dev.github.io/rule/requireObjectKeysOnNewLine&quot;&gt;requireObjectKeysOnNewLine&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cbaa291b1efb6425a2e95e390e53229057de31bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: This rule roughly maps to &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowMultipleVarDecl&quot;&gt;disallowMultipleVarDecl&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt; : это правило примерно соответствует &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowMultipleVarDecl&quot;&gt;disallowMultipleVarDecl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a02d0f0790e678981318f34a951582534122cfce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSHint&lt;/strong&gt;: &lt;code&gt;indent&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;JSHint&lt;/strong&gt; : &lt;code&gt;indent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b29586ffa53e44f145de605c41b6a451d5a6782" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSHint&lt;/strong&gt;: This rule corresponds to &lt;code&gt;scripturl&lt;/code&gt; rule of JSHint.</source>
          <target state="translated">&lt;strong&gt;JSHint&lt;/strong&gt; : это правило соответствует правилу &lt;code&gt;scripturl&lt;/code&gt; JSHint.</target>
        </trans-unit>
        <trans-unit id="cee936d2f9a974901b4dba5c409d18cbe0656291" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSHint&lt;/strong&gt;: This rule maps to the &lt;code&gt;onevar&lt;/code&gt; JSHint rule, but allows &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; to be configured separately.</source>
          <target state="translated">&lt;strong&gt;JSHint&lt;/strong&gt; : это правило соответствует правилу &lt;code&gt;onevar&lt;/code&gt; JSHint, но позволяет настраивать &lt;code&gt;let&lt;/code&gt; и &lt;code&gt;const&lt;/code&gt; отдельно.</target>
        </trans-unit>
        <trans-unit id="2d89295b6bfd37b6a9a89be78ffac98e4a06adde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSHint&lt;/strong&gt;: W008, W047</source>
          <target state="translated">&lt;strong&gt;JSHint&lt;/strong&gt; : W008, W047</target>
        </trans-unit>
        <trans-unit id="58e9531777492d743c03a56b4bfa95723630ba9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSHint&lt;/strong&gt;: W115</source>
          <target state="translated">&lt;strong&gt;JSHint&lt;/strong&gt; : W115</target>
        </trans-unit>
        <trans-unit id="5df1d4948f9e69843f18fd06ce2f27dcf683bc4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSLint&lt;/strong&gt;: &lt;code&gt;continue&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;JSLint&lt;/strong&gt; : &lt;code&gt;continue&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03abc3186a2e3ec2e4b5da6a44ca7df7223a5832" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSON&lt;/strong&gt; - use &lt;code&gt;.eslintrc.json&lt;/code&gt; to define the configuration structure. ESLint's JSON files also allow JavaScript-style comments.</source>
          <target state="translated">&lt;strong&gt;JSON&lt;/strong&gt; - используйте &lt;code&gt;.eslintrc.json&lt;/code&gt; для определения структуры конфигурации. Файлы JSON ESLint также допускают комментарии в стиле JavaScript.</target>
        </trans-unit>
        <trans-unit id="bf3b1c209a92ab9329d04e6738466afd50f9f514" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JavaScript (ESM)&lt;/strong&gt; - use &lt;code&gt;.eslintrc.cjs&lt;/code&gt; when running ESLint in JavaScript packages that specify &lt;code&gt;&quot;type&quot;:&quot;module&quot;&lt;/code&gt; in their &lt;code&gt;package.json&lt;/code&gt;. Note that ESLint does not support ESM configuration at this time.</source>
          <target state="translated">&lt;strong&gt;JavaScript (ESM)&lt;/strong&gt; - используйте &lt;code&gt;.eslintrc.cjs&lt;/code&gt; при запуске ESLint в пакетах JavaScript, которые указывают &lt;code&gt;&quot;type&quot;:&quot;module&quot;&lt;/code&gt; в своем &lt;code&gt;package.json&lt;/code&gt; . Обратите внимание, что ESLint в настоящее время не поддерживает конфигурацию ESM.</target>
        </trans-unit>
        <trans-unit id="5fc92ffbd2f937c19368c31d09300ab30f115610" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JavaScript&lt;/strong&gt; - use &lt;code&gt;.eslintrc.js&lt;/code&gt; and export an object containing your configuration.</source>
          <target state="translated">&lt;strong&gt;JavaScript&lt;/strong&gt; - используйте &lt;code&gt;.eslintrc.js&lt;/code&gt; и экспортируйте объект, содержащий вашу конфигурацию.</target>
        </trans-unit>
        <trans-unit id="97416c386b892ff9370bf9f0e2f0d31298565ade" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Library agnostic.&lt;/strong&gt; Rules must be based solely on JavaScript runtime environments and not on specific libraries or frameworks. For example, core rules shouldn't only apply if you're using jQuery but we may have some rules that apply only if you're using Node.js (a runtime).</source>
          <target state="translated">&lt;strong&gt;Библиотечный агностик. &lt;/strong&gt;Правила должны основываться исключительно на среде выполнения JavaScript, а не на определенных библиотеках или фреймворках. Например, основные правила должны применяться не только в том случае, если вы используете jQuery, но у нас могут быть некоторые правила, которые применяются только в том случае, если вы используете Node.js (среда выполнения).</target>
        </trans-unit>
        <trans-unit id="67e380d7569e0837d2446eb4b9acd155becbd4ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Make the regular expression handling UTF-16 surrogate pairs correctly.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Сделайте так, чтобы регулярное выражение обрабатывало суррогатные пары UTF-16 правильно.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70fae8edd3e9c149517dc5c247e1ce7e56536122" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Make the regular expression throwing syntax errors early as disabling &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-regular-expressions-patterns&quot;&gt;Annex B extensions&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Сделайте регулярные выражения синтаксических ошибок метательные еще отключив &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-regular-expressions-patterns&quot;&gt;расширения Приложение B&lt;/a&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1810758c9168765d6922336525d960f9b55650a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No conflicts.&lt;/strong&gt; No rule must directly conflict with another rule. For example, if we have a rule requiring semicolons, we cannot also have a rule disallowing semicolons (which is why we have one rule, &lt;code&gt;semi&lt;/code&gt;, that does both).</source>
          <target state="translated">&lt;strong&gt;Никаких конфликтов. &lt;/strong&gt;Ни одно правило не должно напрямую противоречить другому правилу. Например, если у нас есть правило, требующее точек с запятой, у нас также не может быть правила, запрещающего точки с запятой (вот почему у нас есть одно правило, &lt;code&gt;semi&lt;/code&gt; , которое выполняет обе функции).</target>
        </trans-unit>
        <trans-unit id="beb0a89baebb7d7ff29d07c57e6d6233ed7646ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Also available as a static function on &lt;code&gt;CLIEngine&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Также доступно как статическая функция в &lt;code&gt;CLIEngine&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50455ab1a93fffcef57eabe19fc8429ed85ead31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Arrow functions can never have their &lt;code&gt;this&lt;/code&gt; value set using &lt;code&gt;bind()&lt;/code&gt;. This rule flags all uses of &lt;code&gt;bind()&lt;/code&gt; with arrow functions as a problem</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Стрелочные функции никогда не могут иметь значение &lt;code&gt;this&lt;/code&gt; , установленное с помощью &lt;code&gt;bind()&lt;/code&gt; . Это правило отмечает все случаи использования &lt;code&gt;bind()&lt;/code&gt; со стрелочными функциями как проблему.</target>
        </trans-unit>
        <trans-unit id="8b0db7671e7884ec48eec75359ca82cf8bcab23c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; As of 2016, we accept only rules that are deemed extremely important for inclusion. We prefer that new rules be implemented in plugins.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; С 2016 года мы принимаем только те правила, которые считаются чрезвычайно важными для включения. Мы предпочитаем, чтобы новые правила были реализованы в плагинах.</target>
        </trans-unit>
        <trans-unit id="d281e2ec6a5c50e21574945636d77b62b8806afe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; As of 2020, we only accept rules related to new ECMAScript features. We prefer that new rules be implemented in plugins.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; С 2020 года мы принимаем только правила, связанные с новыми функциями ECMAScript. Мы предпочитаем, чтобы новые правила были реализованы в плагинах.</target>
        </trans-unit>
        <trans-unit id="5cd44b9d2b032786b403680c1e68b01291151ab8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Autofixed files are not placed in the cache. Subsequent linting that does not trigger an autofix will place it in the cache.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Файлы с автофиксацией не помещаются в кеш. Последующий линтинг, который не запускает автоисправление, поместит его в кеш.</target>
        </trans-unit>
        <trans-unit id="5e8afacc1817ba9914741b0463066a4e02852c26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Comments that disable warnings for a portion of a file tell ESLint not to report rule violations for the disabled code. ESLint still parses the entire file, however, so disabled code still needs to be syntactically valid JavaScript.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Комментарии, отключающие предупреждения для части файла, говорят ESLint не сообщать о нарушениях правил для отключенного кода. ESLint по-прежнему анализирует весь файл, поэтому отключенный код по-прежнему должен быть синтаксически корректным JavaScript.</target>
        </trans-unit>
        <trans-unit id="65e9cb21deb1f3e9b10ff060e4c51d4130334479" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Currently you need to use full JSON Schema object rather than array in case your schema has references ($ref), because in case of array format ESLint transforms this array into a single schema without updating references that makes them incorrect (they are ignored).</source>
          <target state="translated">&lt;strong&gt;Примечание: в&lt;/strong&gt; настоящее время вам нужно использовать полный объект схемы JSON, а не массив, если ваша схема имеет ссылки ($ ref), потому что в случае формата массива ESLint преобразует этот массив в единую схему без обновления ссылок, что делает их неверными (они игнорируются ).</target>
        </trans-unit>
        <trans-unit id="6581a69e00b07d618a535806a4a29285978cb0d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Do not combine fixes for multiple issues into one branch. Use a separate branch for each issue you're working on.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Не объединяйте исправления нескольких проблем в одну ветку. Используйте отдельную ветку для каждой проблемы, над которой вы работаете.</target>
        </trans-unit>
        <trans-unit id="e9afe00ea0bd3a5d7887bc0b406ce66c850f9fcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Earlier versions of ESLint supported additional methods on the &lt;code&gt;context&lt;/code&gt; object. Those methods were removed in the new format and should not be relied upon.</source>
          <target state="translated">&lt;strong&gt;Примечание:&lt;/strong&gt; более ранние версии ESLint поддерживали дополнительные методы для объекта &lt;code&gt;context&lt;/code&gt; . Эти методы были удалены в новом формате, и на них нельзя полагаться.</target>
        </trans-unit>
        <trans-unit id="4f2b5e8d74798a74e1d71cd719e14b5d2efbbfd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Enable the &lt;a href=&quot;../rules/no-global-assign&quot;&gt;no-global-assign&lt;/a&gt; rule to disallow modifications to read-only global variables in your code.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Включите правило &lt;a href=&quot;../rules/no-global-assign&quot;&gt;no-global-assign,&lt;/a&gt; чтобы запретить изменение глобальных переменных только для чтения в вашем коде.</target>
        </trans-unit>
        <trans-unit id="78f41789a9a1d7bd3b1dc89346014e3c63ca6aa5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you are coming from a version before 1.0.0 please see the &lt;a href=&quot;user-guide/migrating-to-1.0.0&quot;&gt;migration guide&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Если вы переходите с версии до 1.0.0, см. &lt;a href=&quot;user-guide/migrating-to-1.0.0&quot;&gt;Руководство&lt;/a&gt; по миграции .</target>
        </trans-unit>
        <trans-unit id="1a70a33e570e988ab48c7f6e6cc1e7f020ddfc32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you just have a question that won't necessarily result in a change to ESLint, such as asking how something works or how to contribute, please use the &lt;a href=&quot;https://groups.google.com/group/eslint&quot;&gt;mailing list&lt;/a&gt; or &lt;a href=&quot;https://eslint.org/chat&quot;&gt;chat&lt;/a&gt; instead of filing an issue.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Если у вас просто есть вопрос, который не обязательно приведет к изменению ESLint, например, вопрос о том, как что-то работает или как внести свой вклад, используйте &lt;a href=&quot;https://groups.google.com/group/eslint&quot;&gt;список рассылки&lt;/a&gt; или &lt;a href=&quot;https://eslint.org/chat&quot;&gt;чат&lt;/a&gt; вместо того, чтобы писать о проблеме.</target>
        </trans-unit>
        <trans-unit id="6d7f55b9ec463c0929ee2cc64c6034d205688a9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you just have a question that won't necessarily result in a change to ESLint, such as asking how something works or how to contribute, please use the &lt;a href=&quot;https://groups.google.com/group/eslint&quot;&gt;mailing list&lt;/a&gt; or &lt;a href=&quot;https://gitter.im/eslint/eslint&quot;&gt;chat&lt;/a&gt; instead of filing an issue.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Если у вас просто есть вопрос, который не обязательно приведет к изменению ESLint, например, вопрос о том, как что-то работает или как внести свой вклад, используйте &lt;a href=&quot;https://groups.google.com/group/eslint&quot;&gt;список рассылки&lt;/a&gt; или &lt;a href=&quot;https://gitter.im/eslint/eslint&quot;&gt;чат&lt;/a&gt; вместо того, чтобы сообщать о проблеме.</target>
        </trans-unit>
        <trans-unit id="d00083bc1ec54901ca5364535918d10c18eadbb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you run ESLint with &lt;code&gt;--cache&lt;/code&gt; and then run ESLint without &lt;code&gt;--cache&lt;/code&gt;, the &lt;code&gt;.eslintcache&lt;/code&gt; file will be deleted. This is necessary because the results of the lint might change and make &lt;code&gt;.eslintcache&lt;/code&gt; invalid. If you want to control when the cache file is deleted, then use &lt;code&gt;--cache-location&lt;/code&gt; to specify an alternate location for the cache file.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Если вы запустите ESLint с &lt;code&gt;--cache&lt;/code&gt; , а затем запустите ESLint без &lt;code&gt;--cache&lt;/code&gt; , файл &lt;code&gt;.eslintcache&lt;/code&gt; будет удален. Это необходимо, поскольку результаты lint могут измениться и сделать &lt;code&gt;.eslintcache&lt;/code&gt; недействительным. Если вы хотите контролировать, когда файл кеша удаляется, используйте &lt;code&gt;--cache-location&lt;/code&gt; , чтобы указать альтернативное расположение для файла кеша.</target>
        </trans-unit>
        <trans-unit id="21ca9d817155df1e8a547f18bbb0946f1c55facc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It is expected for this rule to emit one error for each mixed operator in a pair. As a result, for each two consecutive mixed operators used, a distinct error will be displayed, pointing to where the specific operator that breaks the rule is used:</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Ожидается, что это правило будет выдавать одну ошибку для каждого смешанного оператора в паре. В результате для каждых двух последовательных используемых смешанных операторов будет отображаться отдельная ошибка, указывающая на то, где используется конкретный оператор, который нарушает правило:</target>
        </trans-unit>
        <trans-unit id="87444ecd21d0cd1926f69065aba4e403244297e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It's a good idea to re-rerun &lt;code&gt;npm install&lt;/code&gt; whenever you pull from the main repository to ensure you have the latest development dependencies.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Рекомендуется повторно запускать &lt;code&gt;npm install&lt;/code&gt; всякий раз, когда вы извлекаете данные из основного репозитория, чтобы убедиться, что у вас есть новейшие зависимости для разработки.</target>
        </trans-unit>
        <trans-unit id="53466a99b9f7764d55c642b573e7a64a30debf03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It's a good idea to re-run &lt;code&gt;npm install&lt;/code&gt; whenever you pull from the main repository to ensure you have the latest development dependencies.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Рекомендуется повторно запускать &lt;code&gt;npm install&lt;/code&gt; всякий раз, когда вы извлекаете данные из основного репозитория, чтобы убедиться, что у вас есть новейшие зависимости для разработки.</target>
        </trans-unit>
        <trans-unit id="f2a4088cbd3a367e41689d6e94ffe74efaffd701" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; One of the libraries adds AST node properties for comments - do not use these properties. Always use &lt;code&gt;sourceCode.getComments()&lt;/code&gt; as this is the only guaranteed API for accessing comments (we will likely change how comments are handled later).</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Одна из библиотек добавляет свойства узла AST для комментариев - не используйте эти свойства. Всегда используйте &lt;code&gt;sourceCode.getComments()&lt;/code&gt; как это единственный гарантированный API для доступа к комментариям (мы, вероятно, изменим способ обработки комментариев позже).</target>
        </trans-unit>
        <trans-unit id="c521db88d92c84eb7d807bdf62cf2da54f024a3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Please note that configuration will not enable any of the plugin's rules by default, and instead should be treated as a standalone config. This means that you must specify your plugin name in the &lt;code&gt;plugins&lt;/code&gt; array as well as any rules you want to enable that are part of the plugin. Any plugin rules must be prefixed with the short or long plugin name. See &lt;a href=&quot;../user-guide/configuring#configuring-plugins&quot;&gt;Configuring Plugins&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;Примечание:&lt;/strong&gt; обратите внимание, что конфигурация не включает какие-либо правила плагина по умолчанию, и вместо этого должна рассматриваться как отдельная конфигурация. Это означает, что вы должны указать имя вашего плагина в массиве &lt;code&gt;plugins&lt;/code&gt; а также любые правила, которые вы хотите включить, которые являются частью плагина. Любые правила плагина должны иметь префикс с коротким или длинным именем плагина. См. &lt;a href=&quot;../user-guide/configuring#configuring-plugins&quot;&gt;Настройка плагинов&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="7faa123b30aef583c9cee838fcb46855b4a4bff2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Plugins are resolved relative to the current working directory of the ESLint process. In other words, ESLint will load the same plugin as a user would obtain by running &lt;code&gt;require('eslint-plugin-pluginname')&lt;/code&gt; in a Node REPL from their project root.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Плагины разрешаются относительно текущего рабочего каталога процесса ESLint. Другими словами, ESLint загрузит тот же плагин, который пользователь получит, запустив &lt;code&gt;require('eslint-plugin-pluginname')&lt;/code&gt; в Node REPL из корня своего проекта.</target>
        </trans-unit>
        <trans-unit id="c45f807c1f211c7c24235b84d560cd87554ee515" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Polyjuice does a good job of creating a reasonable ESLint configuration from your JSCS configuration, but it may not be 100%. You may still see different warnings than you saw with JSCS, and so you may need to further modify your configuration after using Polyjuice. This is especially true if you're using inline comments to enable/disable certain rules in JSCS (you'll need to manually convert those to use ESLint-style comments instead, see &quot;Disabling Rules Inline&quot; later in this page).</source>
          <target state="translated">&lt;strong&gt;Примечание:&lt;/strong&gt; Polyjuice хорошо справляется с созданием разумной конфигурации ESLint из вашей конфигурации JSCS, но это может не быть 100%. Вы по-прежнему можете видеть другие предупреждения, чем при использовании JSCS, поэтому вам может потребоваться дальнейшее изменение конфигурации после использования Polyjuice. Это особенно верно, если вы используете встроенные комментарии для включения / отключения определенных правил в JSCS (вам нужно будет вручную преобразовать их, чтобы вместо этого использовать комментарии в стиле ESLint, см. &amp;laquo;Отключение встроенных правил&amp;raquo; далее на этой странице).</target>
        </trans-unit>
        <trans-unit id="77611a061ac4806612783fac5430806211fdfab3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The full code coverage report is output into &lt;code&gt;/coverage&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Полный отчет о покрытии кода выводится в &lt;code&gt;/coverage&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a5b7848fc50678575012888201f2e9e660f4fd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This option only applies when you pass directory paths to the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method. If you pass glob patterns like &lt;code&gt;lib/**/*&lt;/code&gt;, ESLint will lint all files matching the glob pattern regardless of extension.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Этот параметр применяется только при передаче путей к &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt; методу eslint.lintFiles () . Если вы передадите шаблоны глобуса, такие как &lt;code&gt;lib/**/*&lt;/code&gt; , ESLint будет связывать все файлы, соответствующие шаблону глобуса, независимо от расширения.</target>
        </trans-unit>
        <trans-unit id="5354a4574d8823c1a4a4f34ce28ceb4a97458241" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This page covers the most recent rule format for ESLint &amp;gt;= 3.0.0. There is also a &lt;a href=&quot;working-with-rules-deprecated&quot;&gt;deprecated rule format&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание. На&lt;/strong&gt; этой странице представлен самый последний формат правил для ESLint&amp;gt; = 3.0.0. Также существует &lt;a href=&quot;working-with-rules-deprecated&quot;&gt;устаревший формат правила&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a477572548696d26bce47e489626b8817978c1af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This rule does not support all of the Google Closure documentation tool's use cases. As such, some code such as &lt;code&gt;(/**number*/ n =&amp;gt; n * 2);&lt;/code&gt; will be flagged as missing appropriate function JSDoc comments even though &lt;code&gt;/**number*/&lt;/code&gt; is intended to be a type hint and not a documentation block for the function. We don't recommend using this rule if you use type hints in this way.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Это правило не поддерживает все варианты использования инструмента документации Google Closure. Таким образом, некоторый код, такой как &lt;code&gt;(/**number*/ n =&amp;gt; n * 2);&lt;/code&gt; будут помечены как отсутствующие комментарии JSDoc соответствующей функции, даже если &lt;code&gt;/**number*/&lt;/code&gt; предназначено для указания типа, а не блока документации для функции. Мы не рекомендуем использовать это правило, если вы используете подсказки типа таким образом.</target>
        </trans-unit>
        <trans-unit id="631d65af1a47adbb9d740eaf0589e40e089c670e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Use undocumented parts of the API at your own risk. Only those parts that are specifically mentioned in this document are approved for use and will remain stable and reliable. Anything left undocumented is unstable and may change or be removed at any point.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Используйте недокументированные части API на свой страх и риск. Только те части, которые специально упомянуты в этом документе, одобрены для использования и останутся стабильными и надежными. Все, что осталось недокументированным, нестабильно и может быть изменено или удалено в любой момент.</target>
        </trans-unit>
        <trans-unit id="deda6c328c3804b27cfc41a400a33ce9851025db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When specifying rules from plugins, make sure to omit &lt;code&gt;eslint-plugin-&lt;/code&gt;. ESLint uses only the unprefixed name internally to locate rules.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; При указании правил из подключаемых &lt;code&gt;eslint-plugin-&lt;/code&gt; обязательно опускайте eslint-plugin- . ESLint внутренне использует только имя без префикса для поиска правил.</target>
        </trans-unit>
        <trans-unit id="c46e12d16db360f32eead01e7c08603bd2f9ecea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;--ext&lt;/code&gt; is only used when the arguments are directories. If you use glob patterns or file names, then &lt;code&gt;--ext&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;strong&gt;Примечание: &lt;/strong&gt; &lt;code&gt;--ext&lt;/code&gt; используется только тогда, когда аргументы являются каталогами. Если вы используете шаблоны &lt;code&gt;--ext&lt;/code&gt; или имена файлов, то --ext игнорируется.</target>
        </trans-unit>
        <trans-unit id="a7ff4f83c7b436d3b4b5999c8c1d638627a60796" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;--init&lt;/code&gt; assumes you have a &lt;code&gt;package.json&lt;/code&gt; file already. If you don't, make sure to run &lt;code&gt;npm init&lt;/code&gt; or &lt;code&gt;yarn init&lt;/code&gt; beforehand.</source>
          <target state="translated">&lt;strong&gt;Примечание. &lt;/strong&gt; &lt;code&gt;--init&lt;/code&gt; предполагает, что у вас уже есть файл &lt;code&gt;package.json&lt;/code&gt; . Если вы этого не сделаете, не забудьте заранее запустить &lt;code&gt;npm init&lt;/code&gt; или &lt;code&gt;yarn init&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="344dad29f241da2762dd7f62cc25793873438929" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Although this ensures zero empty lines at the EOF, most editors will still show one empty line at the end if the file ends with a line break, as illustrated below. There is no empty line at the end of a file after the last &lt;code&gt;\n&lt;/code&gt;, although editors may show an additional line. A true additional line would be represented by &lt;code&gt;\n\n&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Хотя это гарантирует отсутствие пустых строк в EOF, большинство редакторов все равно будут показывать одну пустую строку в конце, если файл заканчивается разрывом строки, как показано ниже. В конце файла после последнего &lt;code&gt;\n&lt;/code&gt; нет пустой строки , хотя редакторы могут отображать дополнительную строку. Настоящая дополнительная строка будет представлена &lt;code&gt;\n\n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b54e0f954bc408384240a6020714081d3ec40f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If you want to lint text and have your configuration be read and processed, use CLIEngine's &lt;a href=&quot;#cliengineexecuteonfiles&quot;&gt;&lt;code&gt;executeOnFiles&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#cliengineexecuteontext&quot;&gt;&lt;code&gt;executeOnText&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Если вы хотите, чтобы текст и ваша конфигурация была прочитана и обработана, используйте вместо этого &lt;a href=&quot;#cliengineexecuteonfiles&quot;&gt; &lt;code&gt;executeOnFiles&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#cliengineexecuteontext&quot;&gt; &lt;code&gt;executeOnText&lt;/code&gt; из CLIEngine&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6dc8e3bfd92b4dd07b36e616a5276ef8284b6034" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: It is not possible to determine if a variable will be referring to an object or an array at runtime. This rule therefore guesses the assignment type by checking whether the key being accessed is an integer. This can lead to the following possibly confusing situations:</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Невозможно определить, будет ли переменная ссылаться на объект или массив во время выполнения. Таким образом, это правило угадывает тип назначения, проверяя, является ли ключ, к которому осуществляется доступ, целым числом. Это может привести к следующим, возможно, запутанным ситуациям:</target>
        </trans-unit>
        <trans-unit id="ef937726101d6bbf1ea792d981c362dd127505c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Notes:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="277f9286419e058430f9a225cd4bc6a93b7b0f5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Other&lt;/strong&gt; - anything else.</source>
          <target state="translated">&lt;strong&gt;Другое&lt;/strong&gt; - что угодно.</target>
        </trans-unit>
        <trans-unit id="8cf6a6684f50f3ea7a170aa3398f4403873e6036" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parameters:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Parameters:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="478ebdcce0e7a6cf53a18ef6273ae4e36f4dc9ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Presets&lt;/strong&gt; - In JSCS, there were numerous predefined configurations shipped directly within JSCS. ESLint ships with just one predefined configuration (&lt;code&gt;eslint:recommended&lt;/code&gt;) that has no style rules enabled. However, ESLint does support &lt;a href=&quot;../developer-guide/shareable-configs&quot;&gt;shareable configs&lt;/a&gt;. Shareable configs are configurations that are published on their own to npm and there are shareable configs available for almost all of the JSCS presets (see the &quot;Converting Presets&quot; section below). Additionally, the &quot;preset&quot; option in a configuration file is the equivalent of the ESLint &quot;extends&quot; option.</source>
          <target state="translated">&lt;strong&gt;Пресеты.&lt;/strong&gt; В JSCS было множество предустановленных конфигураций, поставляемых непосредственно в JSCS. ESLint поставляется только с одной предопределенной конфигурацией ( &lt;code&gt;eslint:recommended&lt;/code&gt; ), в которой не включены правила стиля. Однако ESLint поддерживает &lt;a href=&quot;../developer-guide/shareable-configs&quot;&gt;общие конфигурации&lt;/a&gt; . Совместно используемые конфигурации - это конфигурации, которые публикуются отдельно в npm, и есть общие конфигурации, доступные почти для всех предустановок JSCS (см. Раздел &amp;laquo;Преобразование предустановок&amp;raquo; ниже). Кроме того, параметр &amp;laquo;preset&amp;raquo; в файле конфигурации эквивалентен параметру ESLint &amp;laquo;extends&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="9c696028f6af1644c6acfa8977f8a9d95ddde2d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/10125&quot;&gt;eslint/eslint#10125&lt;/a&gt;, &lt;a href=&quot;https://github.com/eslint/rfcs/pull/7&quot;&gt;eslint/rfcs#7&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/10125&quot;&gt;eslint / eslint # 10125&lt;/a&gt; , &lt;a href=&quot;https://github.com/eslint/rfcs/pull/7&quot;&gt;eslint / rfcs # 7&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d11743e23f5e0719add32b8626153c71ede5152" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/10768&quot;&gt;eslint/eslint#10768&lt;/a&gt;, &lt;a href=&quot;https://github.com/eslint/eslint/issues/10873&quot;&gt;eslint/eslint#10873&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/10768&quot;&gt;eslint / eslint # &lt;/a&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/10873&quot;&gt;10768&lt;/a&gt; , eslint / eslint # 10873</target>
        </trans-unit>
        <trans-unit id="9570d7403523bee0649cc979233838054b90e0b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11201&quot;&gt;eslint/eslint#11201&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11201&quot;&gt;eslint / eslint # 11201&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a1352f364143f800b534ad49bf1b88afe8fb865" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11370&quot;&gt;eslint/eslint#11370&lt;/a&gt;, &lt;a href=&quot;https://github.com/eslint/eslint/issues/11405&quot;&gt;eslint/eslint#11405&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11370&quot;&gt;eslint / eslint # 11370&lt;/a&gt; , &lt;a href=&quot;https://github.com/eslint/eslint/issues/11405&quot;&gt;eslint / eslint # 11405&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5cc19ee730984b2d00e99b9abe3a69195a55f2c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11423&quot;&gt;eslint/eslint#11423&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11423&quot;&gt;eslint / eslint # 11423&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb5c2b7ce826d5861457ba15a03402e7a5c6577d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11456&quot;&gt;eslint/eslint#11546&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11456&quot;&gt;eslint / eslint # 11546&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6b0ecaf60230944737d612577b682e88c9bbfa1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11473&quot;&gt;eslint/eslint#11473&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11473&quot;&gt;eslint / eslint # 11473&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5b6da2e886e1772f3ab4fec0748638891213bfd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11502&quot;&gt;eslint/eslint#11502&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11502&quot;&gt;eslint / eslint # 11502&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6e01fb628e67b1c3164471cbb18bc9a5c8047a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11503&quot;&gt;eslint/eslint#11503&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11503&quot;&gt;eslint / eslint # 11503&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03f328443143182343b0e7102e74b6baec83b2a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11510&quot;&gt;eslint/eslint#11510&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11510&quot;&gt;eslint / eslint # 11510&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fbf167343a6bb2d759453c0907fd72f00eb08d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11728&quot;&gt;eslint/eslint#11728&lt;/a&gt;, &lt;a href=&quot;https://github.com/eslint/eslint/issues/10125&quot;&gt;eslint/eslint#10125&lt;/a&gt;, &lt;a href=&quot;https://github.com/eslint/rfcs/pull/7&quot;&gt;eslint/rfcs#7&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11728&quot;&gt;eslint / eslint # 11728&lt;/a&gt; , &lt;a href=&quot;https://github.com/eslint/eslint/issues/10125&quot;&gt;eslint / eslint # 10125&lt;/a&gt; , &lt;a href=&quot;https://github.com/eslint/rfcs/pull/7&quot;&gt;eslint / rfcs # 7&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26bf2e8da0d7f94ec626e45a80bb23f4ea7b2167" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/9505&quot;&gt;eslint/eslint#9505&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/9505&quot;&gt;eslint / eslint # 9505&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69a50620377c84cb31a397fd1730933e6876170d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/9687&quot;&gt;eslint/eslint#9687&lt;/a&gt;, &lt;a href=&quot;https://github.com/eslint/espree/issues/384&quot;&gt;eslint/espree#384&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/9687&quot;&gt;eslint / eslint # 9687&lt;/a&gt; , &lt;a href=&quot;https://github.com/eslint/espree/issues/384&quot;&gt;eslint / espree # 384&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d85f50272f097ff20a2462fcb341c1ec53d175c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/9990&quot;&gt;eslint/eslint#9990&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/9990&quot;&gt;eslint / eslint # 9990&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8eae0a1381872f14248d2e837bdef9b8347dd237" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/rfcs/pull/17&quot;&gt;eslint/rfcs#17&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/rfcs/pull/17&quot;&gt;eslint / rfcs # 17&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbeb40a0dfa9d70841fc25cbea97d386230305a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/rfcs/pull/7&quot;&gt;eslint/rfcs#7&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Связанные вопросы: &lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/rfcs/pull/7&quot;&gt;eslint / rfcs # 7&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f13297e23427bb54e61678231e790974ac7f0f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return type:&lt;/strong&gt;&lt;code&gt;Reference | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Тип возврата: &lt;/strong&gt; &lt;code&gt;Reference | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c600ac93f00bbe066199904ff634a04fb92e332" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return type:&lt;/strong&gt;&lt;code&gt;Scope | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Тип возврата: &lt;/strong&gt; &lt;code&gt;Scope | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52aba0e4af1c9bc08abed1d9318fafb27d8d9ce7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return type:&lt;/strong&gt;&lt;code&gt;Scope[] | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Тип возврата: &lt;/strong&gt; &lt;code&gt;Scope[] | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21755435f998b6c23cd26f2246c08dc01146210c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return type:&lt;/strong&gt;&lt;code&gt;Variable[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Тип возврата: &lt;/strong&gt; &lt;code&gt;Variable[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bbfb63d32076d739044ec47055380412d316e10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return type:&lt;/strong&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Тип возврата: &lt;/strong&gt; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="332190df6c1c50af3cdd19c670dc2cb18f7acd4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rules&lt;/strong&gt; - which rules are enabled and at what error level.</source>
          <target state="translated">&lt;strong&gt;Правила&lt;/strong&gt; - какие правила включены и на каком уровне ошибки.</target>
        </trans-unit>
        <trans-unit id="09a065f720324325574daed8c05153981da617fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &lt;code&gt;postprocess&lt;/code&gt; method&lt;/strong&gt; takes a two-dimensional array of arrays of lint messages and the filename. Each item in the input array corresponds to the part that was returned from the &lt;code&gt;preprocess&lt;/code&gt; method. The &lt;code&gt;postprocess&lt;/code&gt; method must adjust the locations of all errors to correspond to locations in the original, unprocessed code, and aggregate them into a single flat array and return it.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;postprocess&lt;/code&gt; метод&lt;/strong&gt; принимает двумерный массив массивов линт сообщений и имя файла. Каждый элемент во входном массиве соответствует части, возвращенной методом &lt;code&gt;preprocess&lt;/code&gt; . Метод &lt;code&gt;postprocess&lt;/code&gt; должен скорректировать местоположения всех ошибок, чтобы они соответствовали местоположениям в исходном, необработанном коде, и объединить их в один плоский массив и вернуть его.</target>
        </trans-unit>
        <trans-unit id="34b590b64e5aa79c3fa18b45a59322291a219656" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &lt;code&gt;preprocess&lt;/code&gt; method&lt;/strong&gt; takes the file contents and filename as arguments, and returns an array of code blocks to lint. The code blocks will be linted separately but still be registered to the filename.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;preprocess&lt;/code&gt; метод&lt;/strong&gt; берет содержимое файла и имя файла в качестве аргументов и возвращает массив кодовых блоков для пуха. Блоки кода будут выделены отдельно, но все равно будут зарегистрированы для имени файла.</target>
        </trans-unit>
        <trans-unit id="b187a38081d30402a3978e56e14522b10ff436a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To Address:&lt;/strong&gt; You should be sure to use a configuration whenever you run ESLint. However, you can still run ESLint without a configuration by passing the &lt;code&gt;--no-eslintrc&lt;/code&gt; option on the command line or setting the &lt;code&gt;useEslintrc&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;CLIEngine&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Для адреса:&lt;/strong&gt; вы должны обязательно использовать конфигурацию при каждом запуске ESLint. Тем не менее, вы все равно можете запустить ESLint без конфигурации, передав параметр &lt;code&gt;--no-eslintrc&lt;/code&gt; в командной строке или задав для параметра &lt;code&gt;useEslintrc&lt;/code&gt; значение &lt;code&gt;false&lt;/code&gt; для &lt;code&gt;CLIEngine&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="576dd716e844bba5b1c0b942527d1cda249b46a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Адресовать:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc9d28a70914ce9eea0e57267f86f3ec660c8322" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; Convert all of your rule tests to use &lt;code&gt;RuleTester&lt;/code&gt;. If you have this as a test using &lt;code&gt;ESLintTester&lt;/code&gt;:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Преобразуйте все ваши тесты правил для использования &lt;code&gt;RuleTester&lt;/code&gt; . Если у вас есть это в качестве теста с помощью &lt;code&gt;ESLintTester&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8930c23ebdc44f581f19994b612663831d90e7ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If &lt;code&gt;RuleTester&lt;/code&gt; starts reporting an error about an invalid default, you can remove the &lt;code&gt;default&lt;/code&gt; property at the indicated location in your rule schema, and the rule will behave the same way. (If this happens, you might also want to verify that the rule behaves correctly when no option value is provided in that location.)</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если &lt;code&gt;RuleTester&lt;/code&gt; начинает сообщать об ошибке о недопустимом значении по умолчанию, вы можете удалить свойство по &lt;code&gt;default&lt;/code&gt; в указанном месте в схеме правил, и правило будет вести себя таким же образом. (Если это произойдет, вы также можете проверить правильность работы правила, если в этом месте не указано значение параметра.)</target>
        </trans-unit>
        <trans-unit id="d6ec9d60e5c2c0d06391a63cbdb3384b8833762f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If this change results in more linting errors in your codebase, you should fix them or reconfigure the rule.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если это изменение приводит к большему количеству ошибок линтинга в вашей кодовой базе, вы должны исправить их или перенастроить правило.</target>
        </trans-unit>
        <trans-unit id="770c5f27964d415381e58600e246b6e2a45ca7fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are currently using &lt;code&gt;--reset&lt;/code&gt;, then you should stop passing &lt;code&gt;--reset&lt;/code&gt; on the command line; no other changes are necessary. If you are not using &lt;code&gt;--reset&lt;/code&gt;, then you should review your configuration to determine which rules should be on by default. You can partially restore some of the default behavior by adding the following to your configuration file:</source>
          <target state="translated">&lt;strong&gt;Для адресации:&lt;/strong&gt; если вы в настоящее время используете &lt;code&gt;--reset&lt;/code&gt; , вам следует прекратить использование &lt;code&gt;--reset&lt;/code&gt; в командной строке; никаких других изменений не требуется. Если вы не используете &lt;code&gt;--reset&lt;/code&gt; , вам следует проверить свою конфигурацию, чтобы определить, какие правила должны быть включены по умолчанию. Вы можете частично восстановить поведение по умолчанию, добавив в файл конфигурации следующее:</target>
        </trans-unit>
        <trans-unit id="41f076cf8578b53e9f3a8986241de015ab8e0237" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are currently using &lt;code&gt;CLIEngine#executeOnText()&lt;/code&gt; in your project like this:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы в настоящее время используете &lt;code&gt;CLIEngine#executeOnText()&lt;/code&gt; в своем проекте, например:</target>
        </trans-unit>
        <trans-unit id="f807e75ac117796a23196980a6ad2170f058d220" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are exporting a rule schema that checks severity, you need to make several changes:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы экспортируете схему правил, которая проверяет серьезность, вам необходимо внести несколько изменений:</target>
        </trans-unit>
        <trans-unit id="b5e466b2d2419b0bad9ffaf3dce47a73933c8d0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are using &lt;code&gt;Scope#through&lt;/code&gt; to find references of a built-in global variable, you need to make several changes.</source>
          <target state="translated">&lt;strong&gt;Для адресации:&lt;/strong&gt; Если вы используете &lt;code&gt;Scope#through&lt;/code&gt; для поиска ссылок на встроенную глобальную переменную, вам необходимо внести несколько изменений.</target>
        </trans-unit>
        <trans-unit id="6cade783a3085679f35a97ecde650748cfd3e0a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are using &lt;code&gt;SourceCode&lt;/code&gt; constructor in your code, please parse the source code after it stripped BOM:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; если вы используете конструктор &lt;code&gt;SourceCode&lt;/code&gt; в своем коде, проанализируйте исходный код после удаления спецификации:</target>
        </trans-unit>
        <trans-unit id="27ae4cbeef62973e69f3f62ff24d032e27e36eed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are using a plugin in your configuration file, you will need to manually enable the plugin rules in the configuration file.</source>
          <target state="translated">&lt;strong&gt;Для адреса:&lt;/strong&gt; Если вы используете плагин в своем файле конфигурации, вам нужно будет вручную включить правила плагина в файле конфигурации.</target>
        </trans-unit>
        <trans-unit id="ba194d634d55561e298dceae820c8d85ef7450c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are using any ECMAScript 6 feature flags in &lt;code&gt;ecmaFeatures&lt;/code&gt;, you'll need to use &lt;code&gt;ecmaVersion: 6&lt;/code&gt; instead. The ECMAScript 6 feature flags are:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы используете какие-либо флаги &lt;code&gt;ecmaFeatures&lt;/code&gt; ECMAScript 6 в ecmaFeatures , вам нужно вместо этого использовать &lt;code&gt;ecmaVersion: 6&lt;/code&gt; . Флаги функций ECMAScript 6:</target>
        </trans-unit>
        <trans-unit id="2c99a6b84e038c0957a900f5de5d3eb5c3e6ebd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are using the exported &lt;code&gt;cli&lt;/code&gt; object, switch to using &lt;code&gt;CLIEngine&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Для того, чтобы адрес:&lt;/strong&gt; Если вы используете экспортированный &lt;code&gt;cli&lt;/code&gt; объект, перейти на использование &lt;code&gt;CLIEngine&lt;/code&gt; вместо.</target>
        </trans-unit>
        <trans-unit id="a1fbd9e1e8eef6c0b85a3e5ac9a507ed4dae9ee5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are writing ES6 code, enable the &lt;code&gt;es6&lt;/code&gt; environment if you have not already done so:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы пишете код ES6, включите среду &lt;code&gt;es6&lt;/code&gt; , если вы еще этого не сделали:</target>
        </trans-unit>
        <trans-unit id="56ea7ad6e98d40915dba63a00e6e1b16f3173653" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you don't want dotfiles to be matched by an override, consider adding something like &lt;code&gt;excludedFiles: [&quot;.*&quot;]&lt;/code&gt; to that &lt;code&gt;overrides&lt;/code&gt; section. See the &lt;a href=&quot;configuring#configuration-based-on-glob-patterns&quot;&gt;documentation&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы не хотите, чтобы точечные файлы совпадали с переопределением, подумайте о добавлении чего-то вроде &lt;code&gt;excludedFiles: [&quot;.*&quot;]&lt;/code&gt; этот раздел &lt;code&gt;overrides&lt;/code&gt; . Смотрите &lt;a href=&quot;configuring#configuration-based-on-glob-patterns&quot;&gt;документацию&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="c8a8953f9702269d96836ee318313f6a9e43c294" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you don't want to be notified by those rules, you can simply disable those rules.</source>
          <target state="translated">&lt;strong&gt;Для адреса:&lt;/strong&gt; Если вы не хотите получать уведомления по этим правилам, вы можете просто отключить эти правила.</target>
        </trans-unit>
        <trans-unit id="cf8d63e22446253b1a28eb32a79b01dc479fdd5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you encounter an error about missing files after upgrading to ESLint v5, you may want to double-check that there are no typos in the paths you provide to ESLint. To make the error go away, you can simply remove the given files or globs from the list of arguments provided to ESLint on the command line.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы столкнулись с ошибкой об отсутствии файлов после обновления до ESLint v5, вы можете дважды проверить, нет ли опечаток в путях, которые вы предоставляете ESLint. Чтобы ошибка исчезла, вы можете просто удалить указанные файлы или глобусы из списка аргументов, предоставленных ESLint в командной строке.</target>
        </trans-unit>
        <trans-unit id="587e0b5e7b7dde8c12b10a870eef785d9451aefe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you get rule option validation errors after upgrading, ensure that any regular expressions in your rule options have no invalid escape sequences.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы получаете ошибки проверки параметров правила после обновления, убедитесь, что любые регулярные выражения в параметрах правила не содержат недопустимых управляющих последовательностей.</target>
        </trans-unit>
        <trans-unit id="6bcfec1746b4cc64153f8610dfa226533b06a680" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have a custom rule that depends on the &lt;code&gt;leadingComments&lt;/code&gt; or &lt;code&gt;trailingComments&lt;/code&gt; properties of an AST node, you can now use &lt;code&gt;sourceCode.getCommentsBefore()&lt;/code&gt; and &lt;code&gt;sourceCode.getCommentsAfter()&lt;/code&gt; instead, respectively.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если у вас есть настраиваемое правило, которое зависит от свойств &lt;code&gt;leadingComments&lt;/code&gt; или &lt;code&gt;trailingComments&lt;/code&gt; узла AST, теперь вы можете использовать &lt;code&gt;sourceCode.getCommentsBefore()&lt;/code&gt; и &lt;code&gt;sourceCode.getCommentsAfter()&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="21c8ba13c4a7bc74d0557c888eb9c47ee3c701be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have a custom rule that performs operations on comments, some additional logic might be required to ensure that shebang comments are correctly handled or filtered out:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если у вас есть настраиваемое правило, которое выполняет операции с комментариями, может потребоваться некоторая дополнительная логика, чтобы гарантировать, что комментарии shebang правильно обрабатываются или отфильтровываются:</target>
        </trans-unit>
        <trans-unit id="8c51915a6fb2ba3acc4a34393b020cc435abafff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have a formatter or integration which relies on using the &lt;code&gt;source&lt;/code&gt; property on individual linting messages, you should update it to use the &lt;code&gt;source&lt;/code&gt; property on file results objects instead.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; если у вас есть средство форматирования или интеграция, которые полагаются на использование свойства &lt;code&gt;source&lt;/code&gt; в отдельных сообщениях линтинга, вам следует обновить его, чтобы вместо этого использовать свойство &lt;code&gt;source&lt;/code&gt; в объектах результатов файла.</target>
        </trans-unit>
        <trans-unit id="907aefd8c1867f5c184569bdf1f2c733e0197711" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have an empty file in your project and you don't want it to be linted, consider adding it to an &lt;a href=&quot;configuring#ignoring-files-and-directories&quot;&gt;&lt;code&gt;.eslintignore&lt;/code&gt; file&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Для адресации:&lt;/strong&gt; Если в вашем проекте есть пустой файл, и вы не хотите, чтобы он содержал линзы, подумайте о добавлении его в &lt;a href=&quot;configuring#ignoring-files-and-directories&quot;&gt;файл &lt;/a&gt; &lt;code&gt;.eslintignore&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d207ee9fbb85e86882b82f80f1d1a22e454fda12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have an integration that deals with the ranges of reported problems, make sure you handle large report ranges in a user-friendly way.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если у вас есть интеграция, которая имеет дело с диапазоном сообщаемых проблем, убедитесь, что вы обрабатываете большие диапазоны отчетов удобным для пользователя способом.</target>
        </trans-unit>
        <trans-unit id="d13d1c2c0ec09db8e58e52cefe33f1faeca1e45d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have an integration that detects all problems with linting runs by checking whether the exit code is equal to 1, update it to check whether the exit code is nonzero instead.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; если у вас есть интеграция, которая обнаруживает все проблемы с запусками линтинга, проверяя, равен ли код выхода 1, обновите его, чтобы вместо этого проверить, не является ли код выхода отличным от нуля.</target>
        </trans-unit>
        <trans-unit id="f196fb391f011f0260dd45968583f3c6afac7768" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have both an &lt;code&gt;.eslintrc.*&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt; with ESLint configuration information in the same directory, combine your configurations into just one of those files.</source>
          <target state="translated">&lt;strong&gt;Для адресации:&lt;/strong&gt; Если у вас есть &lt;code&gt;.eslintrc.*&lt;/code&gt; И &lt;code&gt;package.json&lt;/code&gt; с информацией о конфигурации ESLint в одном каталоге, объедините свои конфигурации только в один из этих файлов.</target>
        </trans-unit>
        <trans-unit id="c2cf3a1f46a8b6afe2db3a742f155b210a48bf89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have written a custom rule that enumerates all properties of an AST node, consider excluding the &lt;code&gt;parent&lt;/code&gt; property or implementing cycle detection to ensure that you obtain the correct result.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы написали настраиваемое правило, которое перечисляет все свойства узла AST, рассмотрите возможность исключения &lt;code&gt;parent&lt;/code&gt; свойства или реализации обнаружения цикла, чтобы гарантировать получение правильного результата.</target>
        </trans-unit>
        <trans-unit id="f0521f50b4ea0897fb5d9baf4c1aba7f6664d821" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have written a custom rule that relies on rest operators having the &lt;code&gt;ExperimentalRestProperty&lt;/code&gt; type, you should update it to also work with rest operators that have the &lt;code&gt;RestElement&lt;/code&gt; type.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; если вы написали настраиваемое правило, основанное на операторах rest, имеющих тип &lt;code&gt;ExperimentalRestProperty&lt;/code&gt; , вам следует обновить его, чтобы также работать с операторами rest, имеющими тип &lt;code&gt;RestElement&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a741a6e5457d1d703b33b668c213de4f3bd3949" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have written a custom rule that relies on spread operators having the &lt;code&gt;ExperimentalSpreadProperty&lt;/code&gt; type, you should update it to also work with spread operators that have the &lt;code&gt;SpreadElement&lt;/code&gt; type.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы написали настраиваемое правило, основанное на операторах распространения, имеющих тип &lt;code&gt;ExperimentalSpreadProperty&lt;/code&gt; , вам следует обновить его, чтобы оно также работало с операторами распространения, имеющими тип &lt;code&gt;SpreadElement&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97813ca617db45c596b02040eff0d9c98cc91b10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have written a custom rule that relies on text nodes in JSX elements having the &lt;code&gt;Literal&lt;/code&gt; type, you should update it to also work with nodes that have the &lt;code&gt;JSXText&lt;/code&gt; type.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; если вы написали настраиваемое правило, основанное на текстовых узлах в элементах JSX, имеющих тип &lt;code&gt;Literal&lt;/code&gt; , вам следует обновить его, чтобы также работать с узлами, имеющими тип &lt;code&gt;JSXText&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8655c1586aa80f6c2dac1db8eb7cfc6504d64456" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have written a custom rule that reports a problem without providing a message, update it to provide a message along with the report.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; если вы написали настраиваемое правило, которое сообщает о проблеме без предоставления сообщения, обновите его, чтобы оно предоставляло сообщение вместе с отчетом.</target>
        </trans-unit>
        <trans-unit id="93ce1b59082f4ae2bfb0511a01c79675050cbefb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have written a custom rule that uses the &lt;code&gt;context.getScope()&lt;/code&gt; method in node handlers, you may need to update it to account for the modified scope information.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы написали настраиваемое правило, которое использует метод &lt;code&gt;context.getScope()&lt;/code&gt; в обработчиках узлов, вам может потребоваться обновить его, чтобы учесть измененную информацию об области.</target>
        </trans-unit>
        <trans-unit id="089b7d47a2cc86930b289472505870eba900db84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you maintain a rule that uses the &lt;code&gt;eslintExplicitGlobalComment&lt;/code&gt; property, update it to use the &lt;code&gt;eslintExplicitGlobalComments&lt;/code&gt; property as a list instead.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы поддерживаете правило, использующее свойство &lt;code&gt;eslintExplicitGlobalComment&lt;/code&gt; , обновите его, чтобы вместо этого использовать свойство &lt;code&gt;eslintExplicitGlobalComments&lt;/code&gt; в виде списка.</target>
        </trans-unit>
        <trans-unit id="e16a4648dea2db7e4da75269412175cb302a26b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you reference a scoped NPM package as a plugin in a config file, be sure to include the scope wherever you reference it.</source>
          <target state="translated">&lt;strong&gt;Для адресации:&lt;/strong&gt; если вы ссылаетесь на пакет NPM с ограниченным объемом как на подключаемый модуль в файле конфигурации, обязательно укажите область действия везде, где вы на нее ссылаетесь.</target>
        </trans-unit>
        <trans-unit id="b57576e9f49ccb97c8478c916cc243f245ca7b88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you rely on ESLint loading a package like &lt;code&gt;eslint-config-@foo&lt;/code&gt;, consider renaming the package to something else.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; если вы полагаетесь на то, что ESLint загружает такой пакет, как &lt;code&gt;eslint-config-@foo&lt;/code&gt; , подумайте о переименовании пакета во что-нибудь другое.</target>
        </trans-unit>
        <trans-unit id="771bfe5ae6ad01e83be3811455586a25bd1bf56c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you rely on enumerating all the properties of the &lt;code&gt;eslint&lt;/code&gt; object, use something like &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; to ensure that non-enumerable keys are captured.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; если вы полагаетесь на перечисление всех свойств объекта &lt;code&gt;eslint&lt;/code&gt; , используйте что-то вроде &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; , чтобы обеспечить захват неперечислимых ключей.</target>
        </trans-unit>
        <trans-unit id="df4862d99b16336ac052fbd7de6b937b384ff20c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you rely on enumerating the methods of ESLint's Node.js APIs, use a function that can also access non-enumerable properties such as &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; если вы полагаетесь на перечисление методов API-интерфейсов ESLint Node.js, используйте функцию, которая также может обращаться к неперечисляемым свойствам, таким как &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2753e48e2ff870bb5294ecd04c0ac32cf093503" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you see a config validation error after upgrading, verify that your config doesn't contain any typos. If you are using an unrecognized property, you should be able to remove it from your config to restore the previous behavior.</source>
          <target state="translated">&lt;strong&gt;По адресу:&lt;/strong&gt; если после обновления вы видите ошибку проверки конфигурации, убедитесь, что в вашей конфигурации нет опечаток. Если вы используете нераспознанное свойство, вы сможете удалить его из своей конфигурации, чтобы восстановить предыдущее поведение.</target>
        </trans-unit>
        <trans-unit id="5d5035b705eda89a1ab0c7bd8c774c693536ecad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you see config validation errors related to globals after updating, ensure that all values configured for globals are either &lt;code&gt;readonly&lt;/code&gt;, &lt;code&gt;writable&lt;/code&gt;, or &lt;code&gt;off&lt;/code&gt;. (ESLint also accepts some alternate spellings and variants for compatibility.)</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; если после обновления вы видите ошибки проверки конфигурации, связанные с глобальными переменными, убедитесь, что все значения, настроенные для глобальных переменных , &lt;code&gt;writable&lt;/code&gt; &lt;code&gt;readonly&lt;/code&gt; , записи или &lt;code&gt;off&lt;/code&gt; . (ESLint также принимает некоторые альтернативные варианты написания и варианты для совместимости.)</target>
        </trans-unit>
        <trans-unit id="91438d242b64b6f41b78e018f2bebd3432720acc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you see new reported errors as a result of this change, ensure that your &lt;code&gt;eslint-disable-line&lt;/code&gt; directives only span a single line. Note that &quot;block comments&quot; (delimited by &lt;code&gt;/* */&lt;/code&gt;) are still allowed to be used for directives, provided that the block comments do not contain linebreaks.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы видите новые сообщения об ошибках в результате этого изменения, убедитесь, что ваши &lt;code&gt;eslint-disable-line&lt;/code&gt; охватывают только одну строку. Обратите внимание, что &amp;laquo;блочные комментарии&amp;raquo; (разделенные &lt;code&gt;/* */&lt;/code&gt; ) все еще разрешено использовать для директив, при условии, что блочные комментарии не содержат разрывов строк.</target>
        </trans-unit>
        <trans-unit id="d02aad4fe8cf3ae7e80f1541633f1af83882297d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use &lt;code&gt;RuleTester&lt;/code&gt; to write tests for your custom rules, make sure the expected values in your assertions are strictly equal to the actual values.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы используете &lt;code&gt;RuleTester&lt;/code&gt; для написания тестов для ваших пользовательских правил, убедитесь, что ожидаемые значения в ваших утверждениях строго равны фактическим значениям.</target>
        </trans-unit>
        <trans-unit id="2def4683d622c7ca990f22929b3d8fd2ec129a28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use &lt;code&gt;parser&lt;/code&gt; property with package names in test cases, update it with &lt;code&gt;require.resolve()&lt;/code&gt; function to resolve the package name to the absolute path to the package.</source>
          <target state="translated">&lt;strong&gt;Для адресации:&lt;/strong&gt; Если вы используете свойство &lt;code&gt;parser&lt;/code&gt; с именами пакетов в тестовых примерах, обновите его с помощью функции &lt;code&gt;require.resolve()&lt;/code&gt; чтобы преобразовать имя пакета в абсолютный путь к пакету.</target>
        </trans-unit>
        <trans-unit id="8c04e4b55d08a823682aa96facbb1f620bc73449" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use a global installation of ESLint (e.g. installed with &lt;code&gt;npm install eslint --global&lt;/code&gt;) along with plugins, you should install those plugins locally in the projects where you run ESLint. If your config file extends shareable configs and/or parsers, you should ensure that those packages are installed as dependencies of the project containing the config file.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы используете глобальную установку ESLint (например, установленную с помощью &lt;code&gt;npm install eslint --global&lt;/code&gt; ) вместе с плагинами, вы должны установить эти плагины локально в проектах, в которых вы запускаете ESLint. Если ваш файл конфигурации расширяет общие конфигурации и / или парсеры, вы должны убедиться, что эти пакеты установлены как зависимости проекта, содержащего файл конфигурации.</target>
        </trans-unit>
        <trans-unit id="932a8a0b5d53f352ef6e81141b400f1099c1cc90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use an &lt;code&gt;.eslintignore&lt;/code&gt; file and you frequently run ESLint from somewhere other than the project root, it's possible that the patterns will be matched differently. You should update the patterns in the &lt;code&gt;.eslintignore&lt;/code&gt; file to ensure they are relative to the file, not to the working directory.</source>
          <target state="translated">&lt;strong&gt;Для адресации:&lt;/strong&gt; если вы используете файл &lt;code&gt;.eslintignore&lt;/code&gt; и часто запускаете ESLint не из корня проекта, возможно, что шаблоны будут соответствовать другим. Вам следует обновить шаблоны в файле &lt;code&gt;.eslintignore&lt;/code&gt; , чтобы убедиться, что они относятся к файлу, а не к рабочему каталогу.</target>
        </trans-unit>
        <trans-unit id="2a41e765e3b022b9ee6cacf0dd0cc958e025067c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use deprecated globals in the &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;browser&lt;/code&gt;, or &lt;code&gt;jest&lt;/code&gt; environments, you can add a &lt;code&gt;globals&lt;/code&gt; section to your configuration to re-enable any globals you need. For example:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы используете устаревшие глобальные переменные в средах &lt;code&gt;node&lt;/code&gt; , &lt;code&gt;browser&lt;/code&gt; или &lt;code&gt;jest&lt;/code&gt; , вы можете добавить раздел &lt;code&gt;globals&lt;/code&gt; в свою конфигурацию, чтобы повторно включить любые нужные глобальные переменные. Например:</target>
        </trans-unit>
        <trans-unit id="384c76e78f089df83dae56f3eaf33a46d087f0e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use the &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; option, you should be able to upgrade to ESLint v5 without any changes, but you will encounter a deprecation warning. To avoid the warning, use &lt;code&gt;ecmaVersion: 2018&lt;/code&gt; in your config file rather than &lt;code&gt;ecmaFeatures: { experimentalObjectRestSpread: true }&lt;/code&gt;. If you would like to disallow the use of other ES2018 features, consider using rules such as &lt;a href=&quot;../rules/no-restricted-syntax&quot;&gt;&lt;code&gt;no-restricted-syntax&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; если вы используете опцию &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; , вы сможете обновиться до ESLint v5 без каких-либо изменений, но вы увидите предупреждение об устаревании. Чтобы избежать предупреждения, используйте в файле конфигурации &lt;code&gt;ecmaVersion: 2018&lt;/code&gt; а не &lt;code&gt;ecmaFeatures: { experimentalObjectRestSpread: true }&lt;/code&gt; . Если вы хотите запретить использование других функций ES2018, рассмотрите возможность использования таких правил, как &lt;a href=&quot;../rules/no-restricted-syntax&quot;&gt; &lt;code&gt;no-restricted-syntax&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="01db37c8acaa658a6bb43b82b83e0401cb1ad69d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use the &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; option, you should change your config to contain this instead:</source>
          <target state="translated">&lt;strong&gt;Для того, чтобы адрес:&lt;/strong&gt; Если вы используете &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; опцию, вы должны изменить свой конфиг , чтобы содержать вместо этого:</target>
        </trans-unit>
        <trans-unit id="d4c689e103cb28d77f2578eb10b0a1a4a6cbe60d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you want to mimic how &lt;code&gt;eslint:recommended&lt;/code&gt; worked in v2.x, you can use the following:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы хотите имитировать, как &lt;code&gt;eslint:recommended&lt;/code&gt; работает в v2.x, вы можете использовать следующее:</target>
        </trans-unit>
        <trans-unit id="d8019bb3aa93a5e4dae201b5bfa1578295dffe98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you were using the &lt;code&gt;global&lt;/code&gt; property, please use the &lt;code&gt;globals&lt;/code&gt; property instead, which does the same thing.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы использовали &lt;code&gt;global&lt;/code&gt; свойство, используйте вместо него свойство &lt;code&gt;globals&lt;/code&gt; , которое делает то же самое.</target>
        </trans-unit>
        <trans-unit id="c27b3129b5cebb205cf63438684e2accda668e14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you would like to maintain the previous behavior, update your configuration for &lt;code&gt;no-multiple-empty-lines&lt;/code&gt; by adding &lt;code&gt;{&quot;max&quot;: 2}&lt;/code&gt;, and change &lt;code&gt;func-style&lt;/code&gt; to &lt;code&gt;&quot;declaration&quot;&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы хотите сохранить предыдущее поведение, обновите свою конфигурацию для &lt;code&gt;no-multiple-empty-lines&lt;/code&gt; , добавив &lt;code&gt;{&quot;max&quot;: 2}&lt;/code&gt; , и измените &lt;code&gt;func-style&lt;/code&gt; на &lt;code&gt;&quot;declaration&quot;&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="d063f796a1fd8df02ce0b2b81e55064b5aaf28f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you're using &lt;code&gt;Linter&lt;/code&gt; with a custom parser, use &lt;a href=&quot;../developer-guide/nodejs-api#linterdefineparser&quot;&gt;&lt;code&gt;Linter#defineParser&lt;/code&gt;&lt;/a&gt; to explicitly define the parser before linting any code.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если вы используете &lt;code&gt;Linter&lt;/code&gt; с настраиваемым парсером, используйте &lt;a href=&quot;../developer-guide/nodejs-api#linterdefineparser&quot;&gt; &lt;code&gt;Linter#defineParser&lt;/code&gt; ,&lt;/a&gt; чтобы явно определить парсер перед линтингом любого кода.</target>
        </trans-unit>
        <trans-unit id="a657be2b85aec590670ffc3351944457ebd3919a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you've created an editor integration, or a tool that had to correct the column number, you'll need to update to just pass through the column number from ESLint. Otherwise, no change is necessary.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; если вы создали интеграцию редактора или инструмент, который должен был исправить номер столбца, вам нужно обновить, чтобы просто передать номер столбца из ESLint. В противном случае никаких изменений не требуется.</target>
        </trans-unit>
        <trans-unit id="7b0f91e6af4c0a67887070073ef1922afdcd7e4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If your config sets &lt;code&gt;ecmaVersion&lt;/code&gt; to something other than a number, you can restore the previous behavior by removing &lt;code&gt;ecmaVersion&lt;/code&gt;. (However, you may want to double-check that your config is actually working as expected.) If your config sets &lt;code&gt;parserOptions: { sourceType: &quot;module&quot; }&lt;/code&gt; without also setting &lt;code&gt;parserOptions.ecmaVersion&lt;/code&gt;, you should add &lt;code&gt;parserOptions: { ecmaVersion: 2015 }&lt;/code&gt; to restore the previous behavior.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если ваша конфигурация устанавливает для &lt;code&gt;ecmaVersion&lt;/code&gt; значение, отличное от числа, вы можете восстановить предыдущее поведение, удалив &lt;code&gt;ecmaVersion&lt;/code&gt; . (Однако вы можете дважды проверить, действительно ли ваша конфигурация работает &lt;code&gt;parserOptions: { sourceType: &quot;module&quot; }&lt;/code&gt; .) Если ваша конфигурация устанавливает parserOptions: {sourceType: &quot;module&quot;} без установки &lt;code&gt;parserOptions.ecmaVersion&lt;/code&gt; , вам следует добавить &lt;code&gt;parserOptions: { ecmaVersion: 2015 }&lt;/code&gt; для восстановления прежнего поведения.</target>
        </trans-unit>
        <trans-unit id="d6ff72762e9c2760c32f1fc4fc00dd7d80b6fbbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If your tests for custom rules have extra properties, you should remove those properties.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Если ваши тесты для настраиваемых правил имеют дополнительные свойства, вы должны удалить эти свойства.</target>
        </trans-unit>
        <trans-unit id="f472fde2bcf15025ec6cea9c37475bc3a49d3fd3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; Instead of relying on &lt;code&gt;LineComment&lt;/code&gt; and &lt;code&gt;BlockComment&lt;/code&gt;, rules can now use &lt;code&gt;sourceCode.getAllComments()&lt;/code&gt; to get all comments in a file. To check all comments of a specific type, rules can use the following pattern:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; вместо использования &lt;code&gt;LineComment&lt;/code&gt; и &lt;code&gt;BlockComment&lt;/code&gt; правила теперь могут использовать &lt;code&gt;sourceCode.getAllComments()&lt;/code&gt; для получения всех комментариев в файле. Чтобы проверить все комментарии определенного типа, правила могут использовать следующий шаблон:</target>
        </trans-unit>
        <trans-unit id="3991457302791a2ccf0e89f9e9beb8a7e37d9b98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; Make sure you upgrade to at least Node.js 6 when using ESLint v5. If you are unable to upgrade, we recommend continuing to use ESLint v4.x until you are able to upgrade Node.js.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; при использовании ESLint v5 убедитесь, что вы обновились до Node.js 6. Если вы не можете выполнить обновление, мы рекомендуем продолжать использовать ESLint v4.x до тех пор, пока вы не сможете обновить Node.js.</target>
        </trans-unit>
        <trans-unit id="19b9dd9ffb0b3c605455b34509820a64afccf522" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; Make sure you upgrade to at least Node.js 8 when using ESLint v6. If you are unable to upgrade, we recommend continuing to use ESLint v5.x until you are able to upgrade Node.js.</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; при использовании ESLint v6 убедитесь, что вы обновились до Node.js 8. Если вы не можете выполнить обновление, мы рекомендуем продолжать использовать ESLint v5.x до тех пор, пока вы не сможете обновить Node.js.</target>
        </trans-unit>
        <trans-unit id="247eb16e84dcf6771a5cd04c4fa93f82225f23ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; To mimic the &lt;code&gt;eslint:recommended&lt;/code&gt; behavior from 3.x, you can disable these rules in a config file:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Чтобы имитировать поведение &lt;code&gt;eslint:recommended&lt;/code&gt; из 3.x, вы можете отключить эти правила в файле конфигурации:</target>
        </trans-unit>
        <trans-unit id="1513d5e57c50f48dec7ed680ce7a5a40192356a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; To mimic the &lt;code&gt;eslint:recommended&lt;/code&gt; behavior from 4.x, you can disable these rules in a config file:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Чтобы имитировать поведение &lt;code&gt;eslint:recommended&lt;/code&gt; из 4.x, вы можете отключить эти правила в файле конфигурации:</target>
        </trans-unit>
        <trans-unit id="54fc81d9e8a3e8a0668fcf3702d5750b98c0abf6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; To mimic the &lt;code&gt;eslint:recommended&lt;/code&gt; behavior from 5.x, you can explicitly disable/enable rules in a config file as follows:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Чтобы имитировать поведение &lt;code&gt;eslint:recommended&lt;/code&gt; из 5.x, вы можете явно отключить / включить правила в файле конфигурации следующим образом:</target>
        </trans-unit>
        <trans-unit id="416d6ba52d8d24552229dac5193497ac7375e930" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; To mimic the default config from 3.x, you can use:</source>
          <target state="translated">&lt;strong&gt;Для адресации:&lt;/strong&gt; Чтобы имитировать конфигурацию по умолчанию из 3.x, вы можете использовать:</target>
        </trans-unit>
        <trans-unit id="ec581a37ebf9accbf967fe0fabaa5354c89f24d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; To restore the rule behavior from ESLint v4, you can update your config file to include the previous options:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Чтобы восстановить поведение правила из ESLint v4, вы можете обновить файл конфигурации, включив в него предыдущие параметры:</target>
        </trans-unit>
        <trans-unit id="b5e334b9b8c1b05fd9a886cd98c56fc14f47ed1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; We expect the impact of this issue to be very low because most shareable configs don't use &lt;code&gt;overrides&lt;/code&gt; blocks. However, if you use a shareable config with &lt;code&gt;overrides&lt;/code&gt; blocks, you might encounter a change in behavior due to something that is explicitly specified in your config but was inactive until now. If you would rather inherit the behavior from the shareable config, simply remove the corresponding entry from your own config. (In the example above, the previous behavior could be restored by removing &lt;code&gt;semi: &quot;off&quot;&lt;/code&gt; from &lt;code&gt;.eslintrc.js&lt;/code&gt;.)</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; мы ожидаем, что влияние этой проблемы будет очень низким, потому что большинство общих конфигураций не используют блоки &lt;code&gt;overrides&lt;/code&gt; . Однако, если вы используете общую конфигурацию с блоками &lt;code&gt;overrides&lt;/code&gt; , вы можете столкнуться с изменением поведения из-за того, что явно указано в вашей конфигурации, но было неактивным до сих пор. Если вы предпочитаете унаследовать поведение из общей конфигурации, просто удалите соответствующую запись из своей собственной конфигурации. (В приведенном выше примере предыдущее поведение можно восстановить, удалив &lt;code&gt;semi: &quot;off&quot;&lt;/code&gt; из &lt;code&gt;.eslintrc.js&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="2eb7b39d41b7eba1b375099a8306c792b28a00a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; We recommend upgrading without changing your &lt;code&gt;indent&lt;/code&gt; configuration, and fixing any new indentation errors that appear in your codebase. However, if you want to mimic how the &lt;code&gt;indent&lt;/code&gt; rule worked in 3.x, you can update your configuration:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; мы рекомендуем выполнить обновление без изменения конфигурации &lt;code&gt;indent&lt;/code&gt; и исправить любые новые ошибки отступа, которые появляются в вашей кодовой базе. Однако, если вы хотите имитировать работу правила &lt;code&gt;indent&lt;/code&gt; в 3.x, вы можете обновить свою конфигурацию:</target>
        </trans-unit>
        <trans-unit id="5448e647d1e18b8d154e70830c65d3ca281f27ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; You can remove the non-existent rule in your (inline) config.</source>
          <target state="translated">&lt;strong&gt;По адресу:&lt;/strong&gt; вы можете удалить несуществующее правило в своем (встроенном) файле config.</target>
        </trans-unit>
        <trans-unit id="258d65c83b7009266afa690a745fa8360311a395" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; You can restore the previous default behavior of the rule with:</source>
          <target state="translated">&lt;strong&gt;Для решения:&lt;/strong&gt; Вы можете восстановить предыдущее поведение правила по умолчанию с помощью:</target>
        </trans-unit>
        <trans-unit id="6d86228b26c28b3684eba95a90b5647e0f918ed6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; You'll need to update your rule configurations to use the new rules. ESLint v1.0.0 will also warn you when you're using a rule that has been removed and will suggest the replacement rules. Hopefully, this will result in few surprises during the upgrade process.</source>
          <target state="translated">&lt;strong&gt;Для адресации:&lt;/strong&gt; вам необходимо обновить конфигурации правил, чтобы использовать новые правила. ESLint v1.0.0 также предупредит вас, когда вы используете правило, которое было удалено, и предложит правила замены. Надеюсь, это принесет несколько сюрпризов в процессе обновления.</target>
        </trans-unit>
        <trans-unit id="44c64f85451fdde8fc3e5c5ba6dd407f68548a57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; You'll need to update your rule configurations to use the new rules. ESLint v2.0.0 will also warn you when you're using a rule that has been removed and will suggest the replacement rules. Hopefully, this will result in few surprises during the upgrade process.</source>
          <target state="translated">&lt;strong&gt;Для адресации:&lt;/strong&gt; вам необходимо обновить конфигурации правил, чтобы использовать новые правила. ESLint v2.0.0 также предупредит вас, когда вы используете правило, которое было удалено, и предложит правила замены. Надеюсь, это принесет несколько сюрпризов в процессе обновления.</target>
        </trans-unit>
        <trans-unit id="97a5526a5ada884ec86f1b6da70ee21b4903d17b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;ASTNode | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Тип: &lt;/strong&gt; &lt;code&gt;ASTNode | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ab6019f558b59757ac38ebadacdec6259b91761" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;ASTNode | undefined | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Тип: &lt;/strong&gt; &lt;code&gt;ASTNode | undefined | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d6feb4f8364f23f0762c4393f5bbbb273cddcb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;ASTNode&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;ASTNode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80fd28baa41a9e3c7c8727587a99aff5ec535f94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;ASTNode[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;ASTNode[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a378958772ebf1a161b9c3e72909a3a55ed82f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Definition[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Definition[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2da3b971c96f631825ad04dbf8b4d303c9967ffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Map&amp;lt;string, Variable&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Тип: &lt;/strong&gt; &lt;code&gt;Map&amp;lt;string, Variable&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2438c848579dbaa8779c8306f1c65c23fdeacd29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Map&amp;lt;string, boolean&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Тип: &lt;/strong&gt; &lt;code&gt;Map&amp;lt;string, boolean&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92251fe75e52951a303a026f484f69cfef77aa06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Reference[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Reference[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60abdbc401d84bb32a9cb0260d994a6ae6e2f1aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Scope | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Тип: &lt;/strong&gt; &lt;code&gt;Scope | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b121b96e01956cb2ea86298f8b70b0650f3cd36c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Scope&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Scope&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e9fdc725b8ea9f58f56be7c9222dd98788cc219" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Scope[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Scope[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9838d44d4785d1084ed93bf9fdef936c32cd25d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Variable | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Тип: &lt;/strong&gt; &lt;code&gt;Variable | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04e60ad93ca62b50f3f6e8c758fe0f26ffa69e40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Variable[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Variable[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="065aeffd64b55779e6665647b1f2bf408b580573" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a57f66aafb9f93efb062089ab9897cdf052d5120" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;number | undefined | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Тип: &lt;/strong&gt; &lt;code&gt;number | undefined | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="363e8dc93cca8bc600627e60044c5a563aae006f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef5e80bb801bf5debe255dec06519da8976703cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;string | undefined | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Тип: &lt;/strong&gt; &lt;code&gt;string | undefined | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a876dbc9023a0657cc28e3d65b8aab30cbad7834" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ec0a4b892636f7a0221b21073a02240fe72d8df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unique.&lt;/strong&gt; No two rules can produce the same warning. Overlapping rules confuse end users and there is an expectation that core ESLint rules do not overlap.</source>
          <target state="translated">&lt;strong&gt;Уникальный. &lt;/strong&gt;Никакие два правила не могут давать одно и то же предупреждение. Перекрывающиеся правила сбивают с толку конечных пользователей, и ожидается, что основные правила ESLint не перекрываются.</target>
        </trans-unit>
        <trans-unit id="cf67d99b50404ab4358e9e339b1b708bcab25ed7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: When using this option, it is possible that new errors will start being reported whenever ESLint or custom rules are upgraded. For example, suppose a rule has a bug that causes it to report a false positive, and an &lt;code&gt;eslint-disable&lt;/code&gt; comment is added to suppress the incorrect report. If the bug is then fixed in a patch release of ESLint, the &lt;code&gt;eslint-disable&lt;/code&gt; comment will become unused since ESLint is no longer generating an incorrect report. This will result in a new reported error for the unused directive if the &lt;code&gt;report-unused-disable-directives&lt;/code&gt; option is used.</source>
          <target state="translated">&lt;strong&gt;Предупреждение&lt;/strong&gt; : при использовании этой опции возможно, что новые ошибки начнут сообщаться при обновлении ESLint или пользовательских правил. Например, предположим, что в правиле есть ошибка, из-за которой оно сообщает о ложном срабатывании, и &lt;code&gt;eslint-disable&lt;/code&gt; комментарий eslint-disable для подавления неверного отчета. Если ошибка затем будет исправлена ​​в выпуске патча ESLint, комментарий &lt;code&gt;eslint-disable&lt;/code&gt; перестанет использоваться, поскольку ESLint больше не генерирует неверный отчет. Это приведет к новому сообщению об ошибке для неиспользуемой директивы, если &lt;code&gt;report-unused-disable-directives&lt;/code&gt; опция report-unused-disable-directives .</target>
        </trans-unit>
        <trans-unit id="690b7b8d94a1b3c9d962ba1e289c660831b66f06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Widely applicable.&lt;/strong&gt; The rules we distribute need to be of importance to a large number of developers. Individual preferences for uncommon patterns are not supported.</source>
          <target state="translated">&lt;strong&gt;Широко применимо. &lt;/strong&gt;Распространяемые нами правила должны быть важны для большого числа разработчиков. Индивидуальные настройки необычных узоров не поддерживаются.</target>
        </trans-unit>
        <trans-unit id="b7e9f07f31c58b5e90255be8dd4e9357ec5ea649" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;YAML&lt;/strong&gt; - use &lt;code&gt;.eslintrc.yaml&lt;/code&gt; or &lt;code&gt;.eslintrc.yml&lt;/code&gt; to define the configuration structure.</source>
          <target state="translated">&lt;strong&gt;YAML&lt;/strong&gt; - используйте &lt;code&gt;.eslintrc.yaml&lt;/code&gt; или &lt;code&gt;.eslintrc.yml&lt;/code&gt; для определения структуры конфигурации.</target>
        </trans-unit>
        <trans-unit id="6317608d852f5d6ad914b27925033eb82c9a3e34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;column&lt;/strong&gt;: the column where the issue is located.</source>
          <target state="translated">&lt;strong&gt;column&lt;/strong&gt; : столбец, в котором находится проблема.</target>
        </trans-unit>
        <trans-unit id="c793f9da1e8e133aff3fa2bad00a6d31fdba9a7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;errorCount&lt;/strong&gt;: The number of errors for the given file.</source>
          <target state="translated">&lt;strong&gt;errorCount&lt;/strong&gt; : количество ошибок для данного файла.</target>
        </trans-unit>
        <trans-unit id="6a543f31705d32791f173cab2adcad503f396575" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;filePath&lt;/strong&gt;: The absolute path to the file that was linted.</source>
          <target state="translated">&lt;strong&gt;filePath&lt;/strong&gt; : Абсолютный путь к файлу, к которому был добавлен линк.</target>
        </trans-unit>
        <trans-unit id="cea4713b9a2a74cb12b6d5b5fe7828d0536c07ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;line&lt;/strong&gt;: the line where the issue is located.</source>
          <target state="translated">&lt;strong&gt;line&lt;/strong&gt; : строка, в которой находится проблема.</target>
        </trans-unit>
        <trans-unit id="854fbee9878a2d6895114384f126d4f013d10900" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;message&lt;/strong&gt;: the human readable description of the error.</source>
          <target state="translated">&lt;strong&gt;message&lt;/strong&gt; : удобочитаемое описание ошибки.</target>
        </trans-unit>
        <trans-unit id="2c17ea1c475856f663a432014483567ba55bb191" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;messages&lt;/strong&gt;: An array of &lt;code&gt;message&lt;/code&gt; objects. See below for more info about messages.</source>
          <target state="translated">&lt;strong&gt;messages&lt;/strong&gt; : массив объектов &lt;code&gt;message&lt;/code&gt; . См. Ниже дополнительную информацию о сообщениях.</target>
        </trans-unit>
        <trans-unit id="6765e88da537247c90435e6a324b1062059fc3fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;nodeType&lt;/strong&gt;: the type of the node in the &lt;a href=&quot;https://github.com/estree/estree/blob/master/spec.md#node-objects&quot;&gt;AST&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;nodeType&lt;/strong&gt; : тип узла в &lt;a href=&quot;https://github.com/estree/estree/blob/master/spec.md#node-objects&quot;&gt;AST&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecaaa539bfcc75f4a627ffdf411f6db7d696f895" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;output&lt;/strong&gt;: The source code for the given file with as many fixes applied as possible. This property is omitted if no fix is available.</source>
          <target state="translated">&lt;strong&gt;вывод&lt;/strong&gt; : исходный код данного файла с максимально возможным количеством исправлений. Это свойство опускается, если исправление недоступно.</target>
        </trans-unit>
        <trans-unit id="edf4ab88e9d76bbc1db7e3e4f3a15e8073f7f66d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;package.json&lt;/strong&gt; - create an &lt;code&gt;eslintConfig&lt;/code&gt; property in your &lt;code&gt;package.json&lt;/code&gt; file and define your configuration there.</source>
          <target state="translated">&lt;strong&gt;package.json&lt;/strong&gt; - создайте свойство &lt;code&gt;eslintConfig&lt;/code&gt; в файле &lt;code&gt;package.json&lt;/code&gt; и определите там свою конфигурацию.</target>
        </trans-unit>
        <trans-unit id="0c36fc10e4db3d87c7e40b5bfcb948a6a13aa9fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ruleId&lt;/strong&gt;: the ID of the rule that produced the error or warning.</source>
          <target state="translated">&lt;strong&gt;ruleId&lt;/strong&gt; : идентификатор правила, &lt;strong&gt;вызвавшего&lt;/strong&gt; ошибку или предупреждение.</target>
        </trans-unit>
        <trans-unit id="c109eeec65f43a816559dc91fe2767810c7df9a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;severity&lt;/strong&gt;: the severity of the failure, &lt;code&gt;1&lt;/code&gt; for warnings and &lt;code&gt;2&lt;/code&gt; for errors.</source>
          <target state="translated">&lt;strong&gt;серьезность&lt;/strong&gt; : серьезность сбоя, &lt;code&gt;1&lt;/code&gt; для предупреждений и &lt;code&gt;2&lt;/code&gt; для ошибок.</target>
        </trans-unit>
        <trans-unit id="57dc6fa09a500c31ce3a0e575d3599f23582d063" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;source&lt;/strong&gt;: The source code for the given file. This property is omitted if this file has no errors/warnings or if the &lt;code&gt;output&lt;/code&gt; property is present.</source>
          <target state="translated">&lt;strong&gt;источник&lt;/strong&gt; : исходный код данного файла. Это свойство опускается, если в этом файле нет ошибок / предупреждений или если свойство &lt;code&gt;output&lt;/code&gt; присутствует.</target>
        </trans-unit>
        <trans-unit id="7d06a59a13d8a1e231cb9ac165a8acbbdd84a946" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;warningCount&lt;/strong&gt;: The number of warnings for the given file.</source>
          <target state="translated">&lt;strong&gt;warningCount&lt;/strong&gt; : количество предупреждений для данного файла.</target>
        </trans-unit>
        <trans-unit id="e5bb7e063e087e28e2ba54b1ad62519de9907a17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;※1&lt;/strong&gt; Only if the configured parser provided the block-scope feature. The default parser provides the block-scope feature if &lt;code&gt;parserOptions.ecmaVersion&lt;/code&gt; is not less than &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;※ 1&lt;/strong&gt; Только в том случае, если сконфигурированный синтаксический анализатор предоставил возможность блокирования. Парсер по умолчанию предоставляет функцию области видимости блока, если &lt;code&gt;parserOptions.ecmaVersion&lt;/code&gt; не меньше &lt;code&gt;6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b5b1372f368e9f1781486b1cdf873f6b6e922da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;※2&lt;/strong&gt; Only if the &lt;code&gt;for&lt;/code&gt; statement defines the iteration variable as a block-scoped variable (E.g., &lt;code&gt;for (let i = 0;;) {}&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;※ 2&lt;/strong&gt; Только если оператор &lt;code&gt;for&lt;/code&gt; определяет переменную итерации как переменную в области видимости блока (например, &lt;code&gt;for (let i = 0;;) {}&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="09f95d6c9ec993bf1003f5d6d554fb0443bff70d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;※3&lt;/strong&gt; The scope of the closest ancestor node which has own scope. If the closest ancestor node has multiple scopes then it chooses the innermost scope (E.g., the &lt;code&gt;Program&lt;/code&gt; node has a &lt;code&gt;global&lt;/code&gt; scope and a &lt;code&gt;module&lt;/code&gt; scope if &lt;code&gt;Program#sourceType&lt;/code&gt; is &lt;code&gt;&quot;module&quot;&lt;/code&gt;. The innermost scope is the &lt;code&gt;module&lt;/code&gt; scope.).</source>
          <target state="translated">&lt;strong&gt;※ 3&lt;/strong&gt; Область действия ближайшего узла-предка, имеющего собственную область действия. Если ближайший узел-предок имеет несколько областей видимости, он выбирает самую внутреннюю область видимости (например, узел &lt;code&gt;Program&lt;/code&gt; имеет &lt;code&gt;global&lt;/code&gt; область видимости и область видимости &lt;code&gt;module&lt;/code&gt; если &lt;code&gt;Program#sourceType&lt;/code&gt; имеет значение &lt;code&gt;&quot;module&quot;&lt;/code&gt; . Самая внутренняя область - это область видимости &lt;code&gt;module&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="02dd576fcd740e7b5e9d1205a01abf4062eb573e" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;The examples in this section were adapted from the &lt;a href=&quot;https://github.com/estools/esquery&quot;&gt;esquery&lt;/a&gt; documentation.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;Примеры в этом разделе были адаптированы из документации &lt;a href=&quot;https://github.com/estools/esquery&quot;&gt;esquery&lt;/a&gt; .&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="03c6124784996ca17201568f44be632340e6b1a5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../developer-guide/shareable-configs&quot;&gt;sharable configuration&lt;/a&gt; is an npm package that exports a configuration object. Make sure the package has been installed to a directory where ESLint can require it.</source>
          <target state="translated">&lt;a href=&quot;../developer-guide/shareable-configs&quot;&gt;Совместно используемой конфигурации&lt;/a&gt; является NPM пакет , который экспортирует объект конфигурации. Убедитесь, что пакет установлен в каталог, где он может потребоваться ESLint.</target>
        </trans-unit>
        <trans-unit id="7e3808288d05eda6a0a0bc6617b661283e01236f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../developer-guide/working-with-plugins&quot;&gt;plugin&lt;/a&gt; is an npm package that usually exports rules. Some plugins also export one or more named &lt;a href=&quot;../developer-guide/working-with-plugins#configs-in-plugins&quot;&gt;configurations&lt;/a&gt;. Make sure the package has been installed to a directory where ESLint can require it.</source>
          <target state="translated">&lt;a href=&quot;../developer-guide/working-with-plugins&quot;&gt;Плагин&lt;/a&gt; является NPM пакет , который обычно экспортирует правила. Некоторые плагины также экспортируют одну или несколько именованных &lt;a href=&quot;../developer-guide/working-with-plugins#configs-in-plugins&quot;&gt;конфигураций&lt;/a&gt; . Убедитесь, что пакет установлен в каталог, где он может потребоваться ESLint.</target>
        </trans-unit>
        <trans-unit id="1a0fff9a243305a444f630687fb971bc9bdfe21c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;.eslintrc.js&lt;/code&gt;, &lt;code&gt;.eslintrc.json&lt;/code&gt;, &lt;code&gt;.eslintrc.yml&lt;/code&gt;, &lt;code&gt;.eslintrc.yaml&lt;/code&gt;, or &lt;code&gt;.eslintrc&lt;/code&gt; file either in your project or home directory.</source>
          <target state="translated">&lt;code&gt;.eslintrc.js&lt;/code&gt; , &lt;code&gt;.eslintrc.json&lt;/code&gt; , &lt;code&gt;.eslintrc.yml&lt;/code&gt; , &lt;code&gt;.eslintrc.yaml&lt;/code&gt; или &lt;code&gt;.eslintrc&lt;/code&gt; файл либо в вашем проекте или домашнем каталоге.</target>
        </trans-unit>
        <trans-unit id="f3619e056c08299691ba58f3ad597b15a5f58a85" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;catch&lt;/code&gt; clause that only rethrows the original error is redundant, and has no effect on the runtime behavior of the program. These redundant clauses can be a source of confusion and code bloat, so it's better to disallow these unnecessary &lt;code&gt;catch&lt;/code&gt; clauses.</source>
          <target state="translated">Предложение &lt;code&gt;catch&lt;/code&gt; , которое вызывает только исходную ошибку, является избыточным и не влияет на поведение программы во время выполнения. Эти избыточные предложения могут быть источником путаницы и раздувания кода, поэтому лучше запретить эти ненужные предложения &lt;code&gt;catch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a389d325d348388839c0ea0782dd37813615760" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;fixing&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;fixing&lt;/code&gt; объекта.</target>
        </trans-unit>
        <trans-unit id="afc4e0872788b98de54fe4422f2e108e57fa3981" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;for&lt;/code&gt; loop with a stop condition that can never be reached, such as one with a counter that moves in the wrong direction, will run infinitely. While there are occasions when an infinite loop is intended, the convention is to construct such loops as &lt;code&gt;while&lt;/code&gt; loops. More typically, an infinite for loop is a bug.</source>
          <target state="translated">Цикл &lt;code&gt;for&lt;/code&gt; с условием остановки, которое никогда не может быть достигнуто, например цикл со счетчиком, который движется в неправильном направлении, будет работать бесконечно. Хотя бывают случаи, когда предполагается бесконечный цикл, по соглашению такие циклы строятся как циклы &lt;code&gt;while&lt;/code&gt; . Чаще всего бесконечный цикл for является ошибкой.</target>
        </trans-unit>
        <trans-unit id="2cd8c1349fe0d5d2b91629e8af2a67df9488040b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;return;&lt;/code&gt; statement with nothing after it is redundant, and has no effect on the runtime behavior of a function. This can be confusing, so it's better to disallow these redundant statements.</source>
          <target state="translated">&lt;code&gt;return;&lt;/code&gt; Оператор, после которого ничего не указано, является избыточным и не влияет на поведение функции во время выполнения. Это может сбивать с толку, поэтому лучше запретить эти повторяющиеся утверждения.</target>
        </trans-unit>
        <trans-unit id="427cd3d37ea17c688301c4da2e2f301a2ab49185" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;yield&lt;/code&gt; or &lt;code&gt;await&lt;/code&gt; expression interrupts the assignment after the old value is read, and before the new value is set.</source>
          <target state="translated">А &lt;code&gt;yield&lt;/code&gt; или &lt;code&gt;await&lt;/code&gt; выражение прерывает задание после того, как старое значение считывается, и до того , как новое значение устанавливается.</target>
        </trans-unit>
        <trans-unit id="a8008f59ac6bd0272b139f77f91c4eaec29b91f9" translate="yes" xml:space="preserve">
          <source>A base configuration is provided to CLIEngine using the &lt;code&gt;baseConfig&lt;/code&gt; option.</source>
          <target state="translated">Базовая конфигурация предоставляется CLIEngine с использованием опции &lt;code&gt;baseConfig&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e28f9cb5b2f38c73f333a34c925f89046619923e" translate="yes" xml:space="preserve">
          <source>A better coding convention for lists and object literals in JavaScript by isaacs</source>
          <target state="translated">Лучшая конвенция по кодированию списков и объектных литералов в JavaScript от isaac.</target>
        </trans-unit>
        <trans-unit id="d49d168e597f86961f6dcfcf63c7b9fc77704bde" translate="yes" xml:space="preserve">
          <source>A blank space should appear after commas in argument lists.</source>
          <target state="translated">Пустой пробел должен появляться после запятых в списках аргументов.</target>
        </trans-unit>
        <trans-unit id="ef78cae4223417784fc081e3049bf82c27f50e97" translate="yes" xml:space="preserve">
          <source>A boolean to specify if numbers used as array indexes are considered okay. &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">Логическое значение, указывающее, считаются ли числа, используемые в качестве индексов массива, допустимыми. по умолчанию &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b7b9c7e87b07ab8e6b27ae07b3318b9229c238c" translate="yes" xml:space="preserve">
          <source>A boolean to specify if numbers used in default value assignments are considered okay. &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">Логическое значение, указывающее, считаются ли числа, используемые при присвоении значений по умолчанию, допустимыми. по умолчанию &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ecfb57e8d83833b6672bf2fe7c3041c7c3250ac2" translate="yes" xml:space="preserve">
          <source>A boolean to specify if numbers used in the context of array indexes (e.g., &lt;code&gt;data[2]&lt;/code&gt;) are considered okay. &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">Логическое значение, указывающее , считаются ли числа, используемые в контексте индексов массива (например, &lt;code&gt;data[2]&lt;/code&gt; ), допустимыми. по умолчанию &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58cc5d7724902bc0ab2d7f5534386b2ad9db7d72" translate="yes" xml:space="preserve">
          <source>A boolean to specify if we should check for the const keyword in variable declaration of numbers. &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">Логическое значение, указывающее, должны ли мы проверять ключевое слово const в объявлении переменных чисел. по умолчанию &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8cedb82f008edd3bab5474e2a26c1601087ba6d" translate="yes" xml:space="preserve">
          <source>A boolean to specify if we should detect numbers when setting object properties for example. &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">Логическое значение, указывающее, должны ли мы обнаруживать числа, например, при установке свойств объекта. по умолчанию &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25a836ff88ff9ac017f2c0ded333e7db070f9c18" translate="yes" xml:space="preserve">
          <source>A boolean value that defaults to &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;considerPropertyDescriptor&lt;/code&gt; is set to true, the check will take into account the use of &lt;code&gt;Object.create&lt;/code&gt;, &lt;code&gt;Object.defineProperty&lt;/code&gt;, &lt;code&gt;Object.defineProperties&lt;/code&gt;, and &lt;code&gt;Reflect.defineProperty&lt;/code&gt;.</source>
          <target state="translated">Логическое значение, по умолчанию &lt;code&gt;false&lt;/code&gt; . Если для параметра &lt;code&gt;considerPropertyDescriptor&lt;/code&gt; установлено значение true, при проверке будет учитываться использование &lt;code&gt;Object.create&lt;/code&gt; , &lt;code&gt;Object.defineProperty&lt;/code&gt; , &lt;code&gt;Object.defineProperties&lt;/code&gt; и &lt;code&gt;Reflect.defineProperty&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5b15bec3881a375f3e36051b0e45319e9cb7dfa" translate="yes" xml:space="preserve">
          <source>A boolean value that defaults to &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;includeCommonJSModuleExports&lt;/code&gt; is set to true, &lt;code&gt;module.exports&lt;/code&gt; and &lt;code&gt;module[&quot;exports&quot;]&lt;/code&gt; will be checked by this rule.</source>
          <target state="translated">Логическое значение, по умолчанию &lt;code&gt;false&lt;/code&gt; . Если для &lt;code&gt;includeCommonJSModuleExports&lt;/code&gt; установлено значение true, по этому правилу будут проверяться &lt;code&gt;module.exports&lt;/code&gt; и &lt;code&gt;module[&quot;exports&quot;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d392c027987959cf72d4b9853225e2e854601add" translate="yes" xml:space="preserve">
          <source>A code block has two properties &lt;code&gt;text&lt;/code&gt; and &lt;code&gt;filename&lt;/code&gt;; the &lt;code&gt;text&lt;/code&gt; property is the content of the block and the &lt;code&gt;filename&lt;/code&gt; property is the name of the block. Name of the block can be anything, but should include the file extension, that would tell the linter how to process the current block. The linter will check &lt;a href=&quot;../user-guide/command-line-interface#--ext&quot;&gt;&lt;code&gt;--ext&lt;/code&gt; CLI option&lt;/a&gt; to see if the current block should be linted, and resolve &lt;code&gt;overrides&lt;/code&gt; configs to check how to process the current block.</source>
          <target state="translated">Блок кода имеет два свойства: &lt;code&gt;text&lt;/code&gt; и &lt;code&gt;filename&lt;/code&gt; ; &lt;code&gt;text&lt;/code&gt; свойство является содержимое блока и &lt;code&gt;filename&lt;/code&gt; Задает имя блока. Имя блока может быть любым, но должно включать расширение файла, которое сообщало бы линтеру, как обрабатывать текущий блок. &lt;a href=&quot;../user-guide/command-line-interface#--ext&quot;&gt; &lt;code&gt;--ext&lt;/code&gt; &lt;/a&gt; проверит опцию --ext CLI, чтобы увидеть, нужно ли линтировать текущий блок, и разрешит конфиги &lt;code&gt;overrides&lt;/code&gt; чтобы проверить, как обрабатывать текущий блок.</target>
        </trans-unit>
        <trans-unit id="64eea8b8a1570a4ad89b64de14a057281d21a3ef" translate="yes" xml:space="preserve">
          <source>A common suggestion to avoid this problem would be to wrap the inside of the &lt;code&gt;for&lt;/code&gt; loop with &lt;code&gt;users.hasOwnProperty(id)&lt;/code&gt;. However, if this rule is strictly enforced throughout your codebase you won't need to take that step.</source>
          <target state="translated">Общее предложение , чтобы избежать этой проблемы было бы , чтобы обернуть внутреннюю часть &lt;code&gt;for&lt;/code&gt; цикла с &lt;code&gt;users.hasOwnProperty(id)&lt;/code&gt; . Однако, если это правило строго соблюдается во всей вашей кодовой базе, вам не нужно делать этот шаг.</target>
        </trans-unit>
        <trans-unit id="2d60456477141b8b709fcd647cee4d38da3405ac" translate="yes" xml:space="preserve">
          <source>A common use case for this option is to avoid useless renaming when the identifier is not intended to be used later in the code.</source>
          <target state="translated">Обычным случаем использования данной опции является избежание бесполезного переименования,когда идентификатор не предназначен для использования в дальнейшем в коде.</target>
        </trans-unit>
        <trans-unit id="a0b21754babbfe85667b0e2efa5cf5de9ec46843" translate="yes" xml:space="preserve">
          <source>A configuration file can extend the set of enabled rules from base configurations.</source>
          <target state="translated">Конфигурационный файл может расширять набор включенных правил из базовых конфигураций.</target>
        </trans-unit>
        <trans-unit id="55883fdd5b9ae6a9a3a826f2405d1dbe3a0d2fed" translate="yes" xml:space="preserve">
          <source>A configuration file passed on the command line using &lt;code&gt;-c&lt;/code&gt; (or to CLIEngine using &lt;code&gt;configFile&lt;/code&gt;).</source>
          <target state="translated">Файл конфигурации, переданный в командной строке с помощью &lt;code&gt;-c&lt;/code&gt; (или в CLIEngine с помощью &lt;code&gt;configFile&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d16c6623d752e6bb2d6001c0a413fae9b0ced782" translate="yes" xml:space="preserve">
          <source>A configuration is an object which has 3 properties; &lt;code&gt;blankLine&lt;/code&gt;, &lt;code&gt;prev&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt;. For example, &lt;code&gt;{ blankLine: &quot;always&quot;, prev: &quot;var&quot;, next: &quot;return&quot; }&lt;/code&gt; means &quot;one or more blank lines are required between a variable declaration and a &lt;code&gt;return&lt;/code&gt; statement.&quot; You can supply any number of configurations. If a statement pair matches multiple configurations, the last matched configuration will be used.</source>
          <target state="translated">Конфигурация - это объект, который имеет 3 свойства; &lt;code&gt;blankLine&lt;/code&gt; , &lt;code&gt;prev&lt;/code&gt; и &lt;code&gt;next&lt;/code&gt; . Например, &lt;code&gt;{ blankLine: &quot;always&quot;, prev: &quot;var&quot;, next: &quot;return&quot; }&lt;/code&gt; означает, что &quot;между объявлением переменной и оператором &lt;code&gt;return&lt;/code&gt; требуется одна или несколько пустых строк &quot;. Вы можете поставить любое количество конфигураций. Если пара операторов соответствует нескольким конфигурациям, будет использоваться последняя согласованная конфигурация.</target>
        </trans-unit>
        <trans-unit id="20e05403cd1ed3924830384794a2169931e37d6c" translate="yes" xml:space="preserve">
          <source>A confusing aspect of JavaScript is that a function returns &lt;code&gt;undefined&lt;/code&gt; if any of the following are true:</source>
          <target state="translated">Непонятным аспектом JavaScript является то, что функция возвращает &lt;code&gt;undefined&lt;/code&gt; , если выполняется одно из следующих условий:</target>
        </trans-unit>
        <trans-unit id="b6b8b178eb884eddcdef7dfcdc5d1458ee22bc10" translate="yes" xml:space="preserve">
          <source>A constant expression (for example, a literal) as a test condition might be a typo or development trigger for a specific behavior. For example, the following code looks as if it is not ready for production.</source>
          <target state="translated">Константное выражение (например,буквальное)в качестве условия теста может быть опечаткой или триггером развития для конкретного поведения.Например,следующий код выглядит так,как будто он не готов к производству.</target>
        </trans-unit>
        <trans-unit id="43ef8f442efa45ca28465cdb5709982cce56b8d9" translate="yes" xml:space="preserve">
          <source>A criticism of the Single Var Pattern in JavaScript, and a simple alternative</source>
          <target state="translated">Критика одиночной вар-маскировки на JavaScript,и простая альтернатива.</target>
        </trans-unit>
        <trans-unit id="86af3e246df7da9e6606e3119d58789e53135d52" translate="yes" xml:space="preserve">
          <source>A file provided on the command line does not exist</source>
          <target state="translated">Файл,предоставленный в командной строке,не существует.</target>
        </trans-unit>
        <trans-unit id="ac0f8365160b25f524152aaae9aa2a1eda0000c5" translate="yes" xml:space="preserve">
          <source>A formatter that only cares about the total count of errors and warnings will look like this:</source>
          <target state="translated">Форматтер,который заботится только об общем количестве ошибок и предупреждений,будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="836d7f5bf58c6c5d4d4a624f7d1ee3a0a7646a0b" translate="yes" xml:space="preserve">
          <source>A getter and setter for the same property don't necessarily have to be defined adjacent to each other.</source>
          <target state="translated">Геттер и сеттер для одного и того же свойства не обязательно должны быть определены рядом друг с другом.</target>
        </trans-unit>
        <trans-unit id="5c7f11d210d922ba42114538c835a711d4da81d4" translate="yes" xml:space="preserve">
          <source>A glob or folder provided on the command line does not match any lintable files</source>
          <target state="translated">Глобус или папка,предоставленные в командной строке,не совпадают с файлами на строках.</target>
        </trans-unit>
        <trans-unit id="81ab6c931da3b6d371be8a93021d9e9b0d48645d" translate="yes" xml:space="preserve">
          <source>A glob specific configuration can have &lt;code&gt;extends&lt;/code&gt; setting, but the &lt;code&gt;root&lt;/code&gt; property in the extended configs is ignored. The &lt;code&gt;ignorePatterns&lt;/code&gt; property in the extended configs is used only for the files the glob specific configuration matched.</source>
          <target state="translated">Конфигурация, специфичная для glob, может иметь параметр &lt;code&gt;extends&lt;/code&gt; , но свойство &lt;code&gt;root&lt;/code&gt; в расширенных конфигурациях игнорируется. Свойство &lt;code&gt;ignorePatterns&lt;/code&gt; в расширенных конфигурациях используется только для файлов, соответствующих конкретной конфигурации glob.</target>
        </trans-unit>
        <trans-unit id="b522d213270e7f352fb5949b49df3ae85baa01a7" translate="yes" xml:space="preserve">
          <source>A glob specific configuration works almost the same as any other ESLint config. Override blocks can contain any configuration options that are valid in a regular config, with the exception of &lt;code&gt;root&lt;/code&gt; and &lt;code&gt;ignorePatterns&lt;/code&gt;.</source>
          <target state="translated">Конфигурация, специфичная для glob, работает почти так же, как и любая другая конфигурация ESLint. Блоки переопределения могут содержать любые параметры конфигурации, допустимые в обычной конфигурации, за исключением &lt;code&gt;root&lt;/code&gt; и &lt;code&gt;ignorePatterns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="206b9feb0f4bbb8e333ef78a8e28833be8f4c5ae" translate="yes" xml:space="preserve">
          <source>A keyword followed by a parenthesis should be separated by a space.</source>
          <target state="translated">Ключевое слово,за которым следует скобка,должно быть отделено пробелом.</target>
        </trans-unit>
        <trans-unit id="a25b0a4a01a0fa0cb35fab86df6cc5fb0278bfe8" translate="yes" xml:space="preserve">
          <source>A line of code containing too many statements can be difficult to read. Code is generally read from the top down, especially when scanning, so limiting the number of statements allowed on a single line can be very beneficial for readability and maintainability.</source>
          <target state="translated">Строка кода,содержащая слишком много утверждений,может быть трудна для чтения.Как правило,код читается сверху вниз,особенно при сканировании,поэтому ограничение количества выражений,разрешенных в одной строке,может быть очень полезно для читаемости и удобства обслуживания.</target>
        </trans-unit>
        <trans-unit id="bfdb73170961eda63243d915f3c732b85dd2985f" translate="yes" xml:space="preserve">
          <source>A module in Node.js is a simple or complex functionality organized in a JavaScript file which can be reused throughout the Node.js application. The keyword &lt;code&gt;require&lt;/code&gt; is used in Node.js/CommonJS to import modules into an application. This way you can have dynamic loading where the loaded module name isn't predefined /static, or where you conditionally load a module only if it's &quot;truly required&quot;.</source>
          <target state="translated">Модуль в Node.js - это простая или сложная функциональность, организованная в файле JavaScript, который можно повторно использовать во всем приложении Node.js. Ключевое слово &lt;code&gt;require&lt;/code&gt; используется в Node.js / CommonJS для импорта модулей в приложение. Таким образом, у вас может быть динамическая загрузка, когда имя загруженного модуля не предопределено / не статично, или где вы условно загружаете модуль, только если он &amp;laquo;действительно требуется&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="4e913c7680534d6cb99080f78a2661196f66cafe" translate="yes" xml:space="preserve">
          <source>A more complex report will look something like this:</source>
          <target state="translated">Более сложный отчет будет выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="308dd0db07bb7acf7df7d9b6b57f161aa88b87d2" translate="yes" xml:space="preserve">
          <source>A more detailed breakdown of supported patterns and directories ESLint ignores by default can be found in &lt;a href=&quot;configuring#ignoring-files-and-directories&quot;&gt;Configuring ESLint&lt;/a&gt;.</source>
          <target state="translated">Более подробную информацию о поддерживаемых шаблонах и каталогах, которые ESLint игнорирует по умолчанию, можно найти в &lt;a href=&quot;configuring#ignoring-files-and-directories&quot;&gt;разделе &amp;laquo;Настройка ESLint&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f24536f4837bf59d260b3c116ca923e95986c97" translate="yes" xml:space="preserve">
          <source>A name of &lt;a href=&quot;../user-guide/formatters/index&quot;&gt;built-in formatters&lt;/a&gt;.</source>
          <target state="translated">Имя &lt;a href=&quot;../user-guide/formatters/index&quot;&gt;встроенных средств форматирования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="575b2d931afc6e0399849bc47d0e35b312f3114f" translate="yes" xml:space="preserve">
          <source>A name of &lt;a href=&quot;https://www.npmjs.com/search?q=eslintformatter&quot;&gt;third-party formatters&lt;/a&gt;. For examples:</source>
          <target state="translated">Имя &lt;a href=&quot;https://www.npmjs.com/search?q=eslintformatter&quot;&gt;сторонних форматеров&lt;/a&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="11f95a5a52d06fa719a2b5d0e69c8f678b2e9461" translate="yes" xml:space="preserve">
          <source>A number of style guides require or disallow line breaks between arguments of a function call.</source>
          <target state="translated">Ряд руководств стилей требуют или запрещают разрыв строк между аргументами вызова функции.</target>
        </trans-unit>
        <trans-unit id="eacd1564ab62e8653cfd111bed2b118e40aadb40" translate="yes" xml:space="preserve">
          <source>A number of style guides require or disallow line breaks between array elements.</source>
          <target state="translated">Ряд руководств стилей требуют или запрещают разрыв строк между элементами массива.</target>
        </trans-unit>
        <trans-unit id="b6daa5b1d39d0ececccc70c8f1cdb04d99e441cc" translate="yes" xml:space="preserve">
          <source>A number of style guides require or disallow line breaks inside of array brackets.</source>
          <target state="translated">Ряд руководств по стилю требуют или запрещают перерывы строк внутри скобок массива.</target>
        </trans-unit>
        <trans-unit id="ba799235c50035c5b374a07ef2c2489a022d92f0" translate="yes" xml:space="preserve">
          <source>A number of style guides require or disallow line breaks inside of object braces and other tokens.</source>
          <target state="translated">Ряд руководств по стилю требуют или запрещают перерывы линий внутри фигурных скобок и других жетонов.</target>
        </trans-unit>
        <trans-unit id="0173ae7c66b71705fbe3bf702c3a75f916fc100b" translate="yes" xml:space="preserve">
          <source>A number of style guides require or disallow spaces between array brackets and other tokens. This rule applies to both array literals and destructuring assignments (ECMAScript 6).</source>
          <target state="translated">Ряд руководств по стилю требуют или запрещают пробелы между кронштейнами массива и другими маркерами.Это правило применяется как к литералам массивов,так и к деструктивным присваиваниям (ECMAScript 6).</target>
        </trans-unit>
        <trans-unit id="6685f6247b9014739a73df049fb6cc36b0707e79" translate="yes" xml:space="preserve">
          <source>A path to the file that defines a formatter. The path must contain one or more path separators (&lt;code&gt;/&lt;/code&gt;) in order to distinguish if it's a path or not. For example, start with &lt;code&gt;./&lt;/code&gt;.</source>
          <target state="translated">Путь к файлу, определяющему средство форматирования. Путь должен содержать один или несколько разделителей пути ( &lt;code&gt;/&lt;/code&gt; ), чтобы можно было различить, путь это или нет. Например, начните с &lt;code&gt;./&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96e7763e5080c827a61b70944488cf0e26f29ada" translate="yes" xml:space="preserve">
          <source>A pattern that's becoming more common is to give function expressions names to aid in debugging. For example:</source>
          <target state="translated">Становится все более распространенным паттерн,который дает имена выражений функций для помощи в отладке.Например:</target>
        </trans-unit>
        <trans-unit id="ea5cdd669b54ca8ffb4b5b8c7c790d4b0d11fa08" translate="yes" xml:space="preserve">
          <source>A read-only global variable can be a built-in ES global (e.g. &lt;code&gt;Array&lt;/code&gt;), an environment specific global (e.g. &lt;code&gt;window&lt;/code&gt; in the browser environment), or a global variable defined as &lt;code&gt;readonly&lt;/code&gt; in the configuration file or in a &lt;code&gt;/*global */&lt;/code&gt; comment.</source>
          <target state="translated">Глобальная переменная только для чтения может быть встроенной глобальной переменной ES (например, &lt;code&gt;Array&lt;/code&gt; ), глобальной переменной среды (например, &lt;code&gt;window&lt;/code&gt; в среде браузера) или глобальной переменной, определенной как &lt;code&gt;readonly&lt;/code&gt; в файле конфигурации или в &lt;code&gt;/*global */&lt;/code&gt; комментарий.</target>
        </trans-unit>
        <trans-unit id="9e0054f9727b38ae6114afa1db04f33844004776" translate="yes" xml:space="preserve">
          <source>A return statement with a value should not use parentheses unless they make the return value more obvious in some way. Example:</source>
          <target state="translated">Оператор возврата со значением не должен использовать круглые скобки,если только они не делают возвращаемое значение более очевидным.Пример:</target>
        </trans-unit>
        <trans-unit id="8f17ce2af731b0cf58f28e612f21a508401014a8" translate="yes" xml:space="preserve">
          <source>A rule can use the current node and its surrounding tree to report or fix problems.</source>
          <target state="translated">Правило может использовать текущий узел и окружающее его дерево для сообщения о проблемах или их устранения.</target>
        </trans-unit>
        <trans-unit id="4be5e6a9bd29b708e70db8babc0b03b78dbd1c85" translate="yes" xml:space="preserve">
          <source>A selector is a string that can be used to match nodes in an Abstract Syntax Tree (AST). This is useful for describing a particular syntax pattern in your code.</source>
          <target state="translated">Селектор-это строка,которая может быть использована для сопоставления узлов в абстрактном синтаксическом дереве (AST).Это полезно для описания конкретного синтаксического шаблона в вашем коде.</target>
        </trans-unit>
        <trans-unit id="6915f26f7dc1530331a66cc13216ce9e856f8f57" translate="yes" xml:space="preserve">
          <source>A simple fix for this problem could be to rewrite the offending line from scratch. This might also be a problem introduced by the text editor: if rewriting the line does not fix it, try using a different editor.</source>
          <target state="translated">Простым решением этой проблемы может быть перезапись оскорбительной строки с нуля.Это также может быть проблемой,введенной текстовым редактором:если перезапись строки не исправляет ее,попробуйте использовать другой редактор.</target>
        </trans-unit>
        <trans-unit id="a3e71be966e5f1571ea9763af48e414a021cf939" translate="yes" xml:space="preserve">
          <source>A strict mode directive is a &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; literal at the beginning of a script or function body. It enables strict mode semantics.</source>
          <target state="translated">Директива строгого режима - это литерал &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; в начале скрипта или тела функции. Он включает семантику строгого режима.</target>
        </trans-unit>
        <trans-unit id="9c57440c6b4f6db8e00e8b319bccc1d1604f8ba4" translate="yes" xml:space="preserve">
          <source>A string which must be either &lt;code&gt;&quot;always&quot;&lt;/code&gt; (the default), to enforce initialization at declaration, or &lt;code&gt;&quot;never&quot;&lt;/code&gt; to disallow initialization during declaration. This rule applies to &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, and &lt;code&gt;const&lt;/code&gt; variables, however &lt;code&gt;&quot;never&quot;&lt;/code&gt; is ignored for &lt;code&gt;const&lt;/code&gt; variables, as unassigned &lt;code&gt;const&lt;/code&gt;s generate a parse error.</source>
          <target state="translated">Строка, которая должна быть либо &lt;code&gt;&quot;always&quot;&lt;/code&gt; (по умолчанию), чтобы обеспечить инициализацию при объявлении, либо &lt;code&gt;&quot;never&quot;&lt;/code&gt; чтобы запретить инициализацию во время объявления. Это правило применяется к переменным &lt;code&gt;var&lt;/code&gt; , &lt;code&gt;let&lt;/code&gt; и &lt;code&gt;const&lt;/code&gt; , однако &lt;code&gt;&quot;never&quot;&lt;/code&gt; игнорируется для переменных &lt;code&gt;const&lt;/code&gt; , поскольку неназначенные &lt;code&gt;const&lt;/code&gt; генерируют ошибку синтаксического анализа.</target>
        </trans-unit>
        <trans-unit id="9575765dd4d7230fd057ffcbe983765b294ae80e" translate="yes" xml:space="preserve">
          <source>A test case is an object with the following properties:</source>
          <target state="translated">Тестовый случай-это объект со следующими свойствами:</target>
        </trans-unit>
        <trans-unit id="25402932feca00f38e09e6ca5b7c31477fe21891" translate="yes" xml:space="preserve">
          <source>A variable &lt;code&gt;foo&lt;/code&gt; is considered to be used if any of the following are true:</source>
          <target state="translated">Переменная &lt;code&gt;foo&lt;/code&gt; считается использованной, если выполняется одно из следующих условий:</target>
        </trans-unit>
        <trans-unit id="d66ca9673a95b3a663eaf3f3446fa9ff9cf7c024" translate="yes" xml:space="preserve">
          <source>A variable declaration is permitted anywhere a statement can go, even nested deeply inside other blocks. This is often undesirable due to variable hoisting, and moving declarations to the root of the program or function body can increase clarity. Note that &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-block-bindings&quot;&gt;block bindings&lt;/a&gt; (&lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;) are not hoisted and therefore they are not affected by this rule.</source>
          <target state="translated">Объявление переменной разрешено везде, где может идти оператор, даже глубоко вложенным в другие блоки. Это часто нежелательно из-за подъема переменных, а перемещение объявлений в корень программы или тела функции может повысить ясность. Обратите внимание, что &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-block-bindings&quot;&gt;привязки блоков&lt;/a&gt; ( &lt;code&gt;let&lt;/code&gt; , &lt;code&gt;const&lt;/code&gt; ) не поднимаются, и поэтому это правило не влияет на них.</target>
        </trans-unit>
        <trans-unit id="c94d0d2ff85b4c8409e8498075e6309cbae9ef3f" translate="yes" xml:space="preserve">
          <source>A variable is &lt;em&gt;not&lt;/em&gt; considered to be used if it is only ever declared (&lt;code&gt;var foo = 5&lt;/code&gt;) or assigned to (&lt;code&gt;foo = 7&lt;/code&gt;).</source>
          <target state="translated">Переменная &lt;em&gt;не&lt;/em&gt; считается использованной, если она только когда-либо была объявлена ​​( &lt;code&gt;var foo = 5&lt;/code&gt; ) или присвоена ( &lt;code&gt;foo = 7&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a874a11ae4a94e3610adc77e83b5927c07b204ca" translate="yes" xml:space="preserve">
          <source>A variable or property is reassigned to a new value which is based on its old value.</source>
          <target state="translated">Переменная или свойство переназначается на новое значение,основанное на старом значении.</target>
        </trans-unit>
        <trans-unit id="7dd32e4a288d5369cb2e79caa2870b11139743be" translate="yes" xml:space="preserve">
          <source>A way to determine the node types as defined by &lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTree&lt;/a&gt; is to use &lt;a href=&quot;https://astexplorer.net/&quot;&gt;AST Explorer&lt;/a&gt; with the espree parser.</source>
          <target state="translated">Способ определения типов узлов, определенных &lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTree,&lt;/a&gt; заключается в использовании &lt;a href=&quot;https://astexplorer.net/&quot;&gt;AST Explorer&lt;/a&gt; с парсером espree.</target>
        </trans-unit>
        <trans-unit id="2271b14edc45904cc47bb0f92baf4a74500757a6" translate="yes" xml:space="preserve">
          <source>ALE</source>
          <target state="translated">ALE</target>
        </trans-unit>
        <trans-unit id="e70d4e47700375d0be401f693c74eef6991b7082" translate="yes" xml:space="preserve">
          <source>AST Node Type</source>
          <target state="translated">Тип узла АСТ</target>
        </trans-unit>
        <trans-unit id="c446c962a2b4445cdb957511e0b5cc3393b8d123" translate="yes" xml:space="preserve">
          <source>AST Nodes no longer have comment properties</source>
          <target state="translated">AST узлы больше не имеют свойств комментариев</target>
        </trans-unit>
        <trans-unit id="d6692192c75f1af7938f07f9f1af0696b6f6b2d6" translate="yes" xml:space="preserve">
          <source>AST node type: &lt;code&gt;ForStatement&lt;/code&gt;</source>
          <target state="translated">Тип узла AST: &lt;code&gt;ForStatement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9bf40cf26a73c367ed22afa40853e78a88516d25" translate="yes" xml:space="preserve">
          <source>AST nodes no longer have comment properties</source>
          <target state="translated">Узлы AST больше не имеют свойств комментариев</target>
        </trans-unit>
        <trans-unit id="bd34e75aa7865f007f08ac294fd329a2d8cd24e1" translate="yes" xml:space="preserve">
          <source>About &lt;code&gt;onCodePathSegmentLoop&lt;/code&gt;</source>
          <target state="translated">О &lt;code&gt;onCodePathSegmentLoop&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="062e0e828a9d9112137faebc7569d53ad6b18eaa" translate="yes" xml:space="preserve">
          <source>About Complexity</source>
          <target state="translated">О сложности</target>
        </trans-unit>
        <trans-unit id="b779c06c341c07ca1ffb8dd81ce10a4a085087a6" translate="yes" xml:space="preserve">
          <source>Accepting a Rule</source>
          <target state="translated">Принятие правила</target>
        </trans-unit>
        <trans-unit id="81be0e1ba0ee31f4985c9d67dada1b00da7487bc" translate="yes" xml:space="preserve">
          <source>Accepting a Rule Change</source>
          <target state="translated">Принятие изменения в правилах</target>
        </trans-unit>
        <trans-unit id="ca36c601812025fe58057e92a05f6f683d6d84fa" translate="yes" xml:space="preserve">
          <source>Access further control over this rule's behavior via an options object.</source>
          <target state="translated">Дальнейший контроль над поведением этого правила через объект опций.</target>
        </trans-unit>
        <trans-unit id="2e08a06dd2fa9ae5c39052ab6543bc1691e9530b" translate="yes" xml:space="preserve">
          <source>Access the file system</source>
          <target state="translated">Доступ к файловой системе</target>
        </trans-unit>
        <trans-unit id="35b88db2f1e9e841f51c72fd0f61599541bb7876" translate="yes" xml:space="preserve">
          <source>Accessing Code Paths</source>
          <target state="translated">Пути доступа к коду</target>
        </trans-unit>
        <trans-unit id="bfb10a773b7cebdf807ce0cc70fe3dc0fe02182e" translate="yes" xml:space="preserve">
          <source>Accessing Comments</source>
          <target state="translated">Доступ к комментариям</target>
        </trans-unit>
        <trans-unit id="6d55809203eb5aff13f4e06c5c7e2bf1fb26217b" translate="yes" xml:space="preserve">
          <source>Accessing Shebangs</source>
          <target state="translated">Доступ к Шебангу</target>
        </trans-unit>
        <trans-unit id="7706485af3af832462d09475d2669526c29e13d8" translate="yes" xml:space="preserve">
          <source>Accessing an array element through a computed index will fall under the category &lt;code&gt;object&lt;/code&gt; destructuring.</source>
          <target state="translated">Доступ к элементу массива через вычисленный индекс будет подпадать под категорию деструктурирования &lt;code&gt;object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="460c13f18291c5bc04269d7fad531d4041f17a30" translate="yes" xml:space="preserve">
          <source>Accessing an object property whose key is an integer will fall under the category &lt;code&gt;array&lt;/code&gt; destructuring.</source>
          <target state="translated">Доступ к свойству объекта, ключ которого является целым числом, будет подпадать под категорию деструктурирования &lt;code&gt;array&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a776847f4d167c1b25e573491e2e435b11aa5da" translate="yes" xml:space="preserve">
          <source>Accessing comments</source>
          <target state="translated">Доступ к комментариям</target>
        </trans-unit>
        <trans-unit id="69ebcd59e2591617f7f8f6024f21a857d0c7360a" translate="yes" xml:space="preserve">
          <source>Actually labeled statements in JavaScript can be used with other than loop and switch statements. However, this way is ultra rare, not well-known, so this would be confusing developers.</source>
          <target state="translated">Фактически помеченные операторы в JavaScript могут быть использованы с другими операторами,кроме циклов и переключателей.Однако,этот способ крайне редкий,не известный,так что это сбило бы с толку разработчиков.</target>
        </trans-unit>
        <trans-unit id="02c3b754dfbd93ab56540aade8e2c3f780191601" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;supportsAutofix: true&lt;/code&gt; property to the processor.</source>
          <target state="translated">Добавьте к процессору свойство &lt;code&gt;supportsAutofix: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00858d2635ba9c2a9c7ac282d89b7f6cbcebc9c4" translate="yes" xml:space="preserve">
          <source>Add these &lt;code&gt;keywords&lt;/code&gt; to help users find your formatter:</source>
          <target state="translated">Добавьте эти &lt;code&gt;keywords&lt;/code&gt; чтобы помочь пользователям найти ваше средство форматирования:</target>
        </trans-unit>
        <trans-unit id="b19ea4bd9e18d3a1a7038fa04e68cdf64a34ab3f" translate="yes" xml:space="preserve">
          <source>Add these keywords into your &lt;code&gt;package.json&lt;/code&gt; file to make it easy for others to find.</source>
          <target state="translated">Добавьте эти ключевые слова в файл &lt;code&gt;package.json&lt;/code&gt; , чтобы их было проще найти.</target>
        </trans-unit>
        <trans-unit id="3b0ba8ee04639b15125daec80a1aac00deaef410" translate="yes" xml:space="preserve">
          <source>Adding &lt;code&gt;:exit&lt;/code&gt; to the end of a selector will cause the listener to be called when the matching nodes are exited during traversal, rather than when they are entered.</source>
          <target state="translated">Добавление &lt;code&gt;:exit&lt;/code&gt; в конец селектора приведет к тому, что слушатель будет вызываться при выходе из совпадающих узлов во время обхода, а не при их входе.</target>
        </trans-unit>
        <trans-unit id="b45b75823c55d8218979c87efd326a30b99d5341" translate="yes" xml:space="preserve">
          <source>Adding Shared Settings</source>
          <target state="translated">Добавление общих настроек</target>
        </trans-unit>
        <trans-unit id="474d40db0ddeac1b2a8f15efaa569bdb7394c2a2" translate="yes" xml:space="preserve">
          <source>Adding newlines visibly separates the return statements from the previous lines, making it clear where the function exits and what value it returns:</source>
          <target state="translated">Добавление новых строк заметно отделяет операторы возврата от предыдущих строк,ясно указывая,где функция выходит и какое значение она возвращает:</target>
        </trans-unit>
        <trans-unit id="f21fc61dc4820e7abd9d84a4d1d6ad03d3036bb0" translate="yes" xml:space="preserve">
          <source>Adding the second &lt;code&gt;bar&lt;/code&gt; in the above example is optional. If you leave off the function name then when the function throws an exception you are likely to get something similar to &lt;code&gt;anonymous function&lt;/code&gt; in the stack trace. If you provide the optional name for a function expression then you will get the name of the function expression in the stack trace.</source>
          <target state="translated">Добавление второй &lt;code&gt;bar&lt;/code&gt; в приведенном выше примере необязательно. Если вы опустите имя функции, то, когда функция выдает исключение, вы, вероятно, получите что-то похожее на &lt;code&gt;anonymous function&lt;/code&gt; в трассировке стека. Если вы укажете необязательное имя для выражения функции, вы получите имя выражения функции в трассировке стека.</target>
        </trans-unit>
        <trans-unit id="7e15f7cd7c678492038a3fb0df79c3d8a550be82" translate="yes" xml:space="preserve">
          <source>Additional empty lines may be inserted to group related properties or otherwise improve readability.</source>
          <target state="translated">Дополнительные пустые строки могут быть вставлены в группы связанных свойств или иным образом улучшить читабельность.</target>
        </trans-unit>
        <trans-unit id="6a56d991b0497bc7202cd311488f3455e1fb7855" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;context.getScope()&lt;/code&gt; incorrectly returned the parent scope of the proper scope on &lt;code&gt;CatchClause&lt;/code&gt; (in ES5), &lt;code&gt;ForStatement&lt;/code&gt; (in ≧ES2015), &lt;code&gt;ForInStatement&lt;/code&gt; (in ≧ES2015), &lt;code&gt;ForOfStatement&lt;/code&gt;, and &lt;code&gt;WithStatement&lt;/code&gt; nodes.</source>
          <target state="translated">Кроме того, &lt;code&gt;context.getScope()&lt;/code&gt; неправильно возвращал родительскую область видимости на &lt;code&gt;CatchClause&lt;/code&gt; (в ES5), &lt;code&gt;ForStatement&lt;/code&gt; (в ES2015), &lt;code&gt;ForInStatement&lt;/code&gt; (в ≧ ES2015), &lt;code&gt;ForOfStatement&lt;/code&gt; и &lt;code&gt;WithStatement&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d71b0e551b8a05566bb571b697959c043848b0db" translate="yes" xml:space="preserve">
          <source>Additionally, arrow functions are:</source>
          <target state="translated">Кроме того,функции стрелок:</target>
        </trans-unit>
        <trans-unit id="79ad21267e1505f504ad3b64cf80fe8e17376b42" translate="yes" xml:space="preserve">
          <source>Additionally, if you are using &lt;code&gt;context.ecmaFeatures&lt;/code&gt; inside of your rules, then you'll need to update your code in the following ways:</source>
          <target state="translated">Кроме того, если вы используете &lt;code&gt;context.ecmaFeatures&lt;/code&gt; внутри своих правил, вам необходимо обновить свой код следующими способами:</target>
        </trans-unit>
        <trans-unit id="23b72b358b52f3185d5a6b610477da5e25ee339c" translate="yes" xml:space="preserve">
          <source>Additionally, if you intend to access large array indices directly, like:</source>
          <target state="translated">Кроме того,если вы собираетесь получить прямой доступ к индексам больших массивов,например:</target>
        </trans-unit>
        <trans-unit id="9eb5d082a2557226722f3bf4035b8c0c5d988b88" translate="yes" xml:space="preserve">
          <source>Additionally, if you see new errors for &lt;code&gt;global&lt;/code&gt; comments in your code, you should remove those comments.</source>
          <target state="translated">Кроме того, если вы видите новые ошибки для &lt;code&gt;global&lt;/code&gt; комментариев в своем коде, вам следует удалить эти комментарии.</target>
        </trans-unit>
        <trans-unit id="6b39469792bfaba2ecb3083fe90ffe26058b9029" translate="yes" xml:space="preserve">
          <source>Additionally, objects can have properties that shadow the builtins on &lt;code&gt;Object.prototype&lt;/code&gt;, potentially causing unintended behavior or denial-of-service security vulnerabilities. For example, it would be unsafe for a webserver to parse JSON input from a client and call &lt;code&gt;hasOwnProperty&lt;/code&gt; directly on the resulting object, because a malicious client could send a JSON value like &lt;code&gt;{&quot;hasOwnProperty&quot;: 1}&lt;/code&gt; and cause the server to crash.</source>
          <target state="translated">Кроме того, объекты могут иметь свойства, которые скрывают встроенные в &lt;code&gt;Object.prototype&lt;/code&gt; свойства, что может привести к непреднамеренному поведению или уязвимостям защиты от отказа в обслуживании. Например, для веб-сервера было бы небезопасно анализировать ввод JSON от клиента и вызывать &lt;code&gt;hasOwnProperty&lt;/code&gt; непосредственно для полученного объекта, поскольку злонамеренный клиент может отправить значение JSON, например &lt;code&gt;{&quot;hasOwnProperty&quot;: 1}&lt;/code&gt; и вызвать сбой сервера.</target>
        </trans-unit>
        <trans-unit id="8aeab93591ed32ce88269713a4483a31fbd7449f" translate="yes" xml:space="preserve">
          <source>Additionally, since the maximum &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length&quot;&gt;array length&lt;/a&gt; is 2&lt;sup&gt;32&lt;/sup&gt; - 1, all values above 2&lt;sup&gt;32&lt;/sup&gt; - 2 also represent just normal property names and are thus not considered to be array indexes.</source>
          <target state="translated">Кроме того, поскольку максимальная &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length&quot;&gt;длина массива&lt;/a&gt; составляет 2 &lt;sup&gt;32&lt;/sup&gt; - 1, все значения выше 2 &lt;sup&gt;32&lt;/sup&gt; - 2 также представляют только обычные имена свойств и, таким образом, не считаются индексами массива.</target>
        </trans-unit>
        <trans-unit id="bd4b3925054b433c5116e43fc5991fd0d16a8d04" translate="yes" xml:space="preserve">
          <source>Additionally, the &lt;code&gt;context&lt;/code&gt; object has the following methods:</source>
          <target state="translated">Кроме того, у объекта &lt;code&gt;context&lt;/code&gt; есть следующие методы:</target>
        </trans-unit>
        <trans-unit id="d8c87778f3cc603b2fb143ad17fcf5c72a8f9a63" translate="yes" xml:space="preserve">
          <source>Additionally, the &lt;code&gt;sourceCode&lt;/code&gt; object now also has &lt;code&gt;sourceCode.getCommentsInside()&lt;/code&gt; (which returns all the comments inside a node), &lt;code&gt;sourceCode.getAllComments()&lt;/code&gt; (which returns all the comments in the file), and allows comments to be accessed through various other token iterator methods (such as &lt;code&gt;getTokenBefore()&lt;/code&gt; and &lt;code&gt;getTokenAfter()&lt;/code&gt;) with the &lt;code&gt;{ includeComments: true }&lt;/code&gt; option.</source>
          <target state="translated">Кроме того, объект &lt;code&gt;sourceCode&lt;/code&gt; теперь также имеет &lt;code&gt;sourceCode.getCommentsInside()&lt;/code&gt; (который возвращает все комментарии внутри узла), &lt;code&gt;sourceCode.getAllComments()&lt;/code&gt; (который возвращает все комментарии в файле) и позволяет получить доступ к комментариям через различные другие токены. методы итератора (такие как &lt;code&gt;getTokenBefore()&lt;/code&gt; и &lt;code&gt;getTokenAfter()&lt;/code&gt; ) с параметром &lt;code&gt;{ includeComments: true }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="955a15f42c7d00c744259f3cde915b716c8035f8" translate="yes" xml:space="preserve">
          <source>Additionally, the following rule has been &lt;em&gt;removed&lt;/em&gt; from &lt;code&gt;eslint:recommended&lt;/code&gt;:</source>
          <target state="translated">Кроме того, из &lt;code&gt;eslint:recommended&lt;/code&gt; было &lt;em&gt;удалено&lt;/em&gt; следующее правило : рекомендуется :</target>
        </trans-unit>
        <trans-unit id="813d924654bdcea721c482bee96ad4a150a5affe" translate="yes" xml:space="preserve">
          <source>Additionally, the rule accepts an optional object option with an &lt;code&gt;&quot;overrides&quot;&lt;/code&gt; key. This can be used to specify a location for particular statements that override the default. For example:</source>
          <target state="translated">Кроме того, правило допускает необязательный параметр объекта с ключом &lt;code&gt;&quot;overrides&quot;&lt;/code&gt; . Это можно использовать для указания местоположения для определенных операторов, которые отменяют значение по умолчанию. Например:</target>
        </trans-unit>
        <trans-unit id="02fd36ee79b3c753873be3e875d89e688ed0058a" translate="yes" xml:space="preserve">
          <source>Additionally, the rule takes an optional object configuration:</source>
          <target state="translated">Кроме того,правило принимает необязательную конфигурацию объекта:</target>
        </trans-unit>
        <trans-unit id="79ee2d95f84d63e0488662b62e6f527cc3ee9e35" translate="yes" xml:space="preserve">
          <source>Additionally, this rule allows further configurability via overrides per function type.</source>
          <target state="translated">Кроме того,это правило позволяет осуществлять дальнейшую настройку с помощью переопределения для каждого типа функций.</target>
        </trans-unit>
        <trans-unit id="bf52d0223b860a65d967da5e42817e7f5e564102" translate="yes" xml:space="preserve">
          <source>Adhere to the &lt;a href=&quot;new-rules#core-rule-guidelines&quot;&gt;Core Rule Guidelines&lt;/a&gt;</source>
          <target state="translated">Соблюдайте &lt;a href=&quot;new-rules#core-rule-guidelines&quot;&gt;основные правила&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed051adea84f976f94ec5df3e8c5e5ea11fec6fc" translate="yes" xml:space="preserve">
          <source>Adjust &lt;code&gt;maxItems&lt;/code&gt; by subtracting 1</source>
          <target state="translated">Настройте &lt;code&gt;maxItems&lt;/code&gt; , вычтя 1</target>
        </trans-unit>
        <trans-unit id="fb6a7a39ce6f2107737b7821e6cfbfb519b1b47d" translate="yes" xml:space="preserve">
          <source>Adjust &lt;code&gt;minItems&lt;/code&gt; from 1 to 0</source>
          <target state="translated">Отрегулируйте &lt;code&gt;minItems&lt;/code&gt; от 1 до 0</target>
        </trans-unit>
        <trans-unit id="fb8d480c5ed2f86d6a0f15310e0eda94ae41bd4b" translate="yes" xml:space="preserve">
          <source>After a rule has been deprecated, the team will no longer do any work on it. This includes bug fixes, enhancements, and updates to the rule's documentation. Issues and pull requests related to deprecated rule will not be accepted and will be closed.</source>
          <target state="translated">После того,как правило было отменено,команда больше не будет работать над ним.Это включает исправления ошибок,улучшения и обновления документации правила.Вопросы и запросы на вытаскивание,связанные с устаревшим правилом,не будут приниматься и будут закрыты.</target>
        </trans-unit>
        <trans-unit id="2a8391a640da107879132ab537ce183095c10f9e" translate="yes" xml:space="preserve">
          <source>After rebasing, be sure to run all of the tests once again to make sure nothing broke:</source>
          <target state="translated">После перезагрузки обязательно пройдите все тесты еще раз,чтобы убедиться,что ничего не сломалось:</target>
        </trans-unit>
        <trans-unit id="0a19182877a954b877a6e382865f5256d4acb007" translate="yes" xml:space="preserve">
          <source>After running &lt;code&gt;eslint --init&lt;/code&gt;, you'll have a &lt;code&gt;.eslintrc.{js,yml,json}&lt;/code&gt; file in your directory. In it, you'll see some rules configured like this:</source>
          <target state="translated">После запуска &lt;code&gt;eslint --init&lt;/code&gt; , вы будете иметь &lt;code&gt;.eslintrc.{js,yml,json}&lt;/code&gt; файл в каталоге. В нем вы увидите некоторые правила, настроенные следующим образом:</target>
        </trans-unit>
        <trans-unit id="6110b5332caa86a14f380ec237c4258e5ec6e3a9" translate="yes" xml:space="preserve">
          <source>After running &lt;code&gt;eslint --init&lt;/code&gt;, you'll have a &lt;code&gt;.eslintrc&lt;/code&gt; file in your directory. In it, you'll see some rules configured like this:</source>
          <target state="translated">После запуска &lt;code&gt;eslint --init&lt;/code&gt; , вы будете иметь &lt;code&gt;.eslintrc&lt;/code&gt; файл в каталоге. В нем вы увидите некоторые правила, настроенные следующим образом:</target>
        </trans-unit>
        <trans-unit id="0d8faac586a3ebc8cdb26c6cc7a57c27e0364800" translate="yes" xml:space="preserve">
          <source>After that, you can run ESLint on any file or directory like this:</source>
          <target state="translated">После этого вы можете запустить ESLint в любом файле или директории,подобной этому:</target>
        </trans-unit>
        <trans-unit id="8d757cb6f51d9c5e443378778cc41cdf3b2c5c8b" translate="yes" xml:space="preserve">
          <source>After that, you're ready to start working on code.</source>
          <target state="translated">После этого вы готовы начать работу над кодом.</target>
        </trans-unit>
        <trans-unit id="35c30fe94a928157a94135acef729424ab12ea31" translate="yes" xml:space="preserve">
          <source>All ECMAScript 6 &lt;code&gt;ecmaFeatures&lt;/code&gt; flags have been removed in favor of a &lt;code&gt;ecmaVersion&lt;/code&gt; property under &lt;code&gt;parserOptions&lt;/code&gt; that can be set to 3, 5 (default), or 6.</source>
          <target state="translated">Все флаги ECMAScript 6 &lt;code&gt;ecmaFeatures&lt;/code&gt; были удалены в пользу свойства &lt;code&gt;ecmaVersion&lt;/code&gt; в разделе &lt;code&gt;parserOptions&lt;/code&gt; , которое может иметь значение 3, 5 (по умолчанию) или 6.</target>
        </trans-unit>
        <trans-unit id="27168471545ed29e71d31a94a211caecdf8e0715" translate="yes" xml:space="preserve">
          <source>All Rules Off by Default</source>
          <target state="translated">Все правила отключены по умолчанию</target>
        </trans-unit>
        <trans-unit id="21415cf206ac89c1ae9a5902f7fa084ec28c3c4e" translate="yes" xml:space="preserve">
          <source>All binary operators except dot (&lt;code&gt;.&lt;/code&gt;) should be separated from their operands by spaces. Blank spaces should never separate unary operators such as unary minus, increment (&lt;code&gt;++&lt;/code&gt;), and decrement (&lt;code&gt;--&lt;/code&gt;) from their operands.</source>
          <target state="translated">Все бинарные операторы, кроме точки ( &lt;code&gt;.&lt;/code&gt; ), Должны отделяться от своих операндов пробелами. Пробелы никогда не должны отделять унарные операторы, такие как унарный минус, инкремент ( &lt;code&gt;++&lt;/code&gt; ) и декремент ( &lt;code&gt;--&lt;/code&gt; ), от их операндов.</target>
        </trans-unit>
        <trans-unit id="c04e4bad4ab494fa9ae0caae96f8d872ba006651" translate="yes" xml:space="preserve">
          <source>All changes must be accompanied by tests, even if the feature you're working on previously had no tests.</source>
          <target state="translated">Все изменения должны сопровождаться тестированием,даже если функция,над которой вы работаете,ранее не имела тестов.</target>
        </trans-unit>
        <trans-unit id="1fac9209227848cd5c566c056688fcbfeba1b6ec" translate="yes" xml:space="preserve">
          <source>All four options must be specified in the array, but you can customize their order.</source>
          <target state="translated">Все четыре опции должны быть указаны в массиве,но вы можете настроить их порядок.</target>
        </trans-unit>
        <trans-unit id="9f5c8e84361b28f241a1b31c82fca23efdb68a0d" translate="yes" xml:space="preserve">
          <source>All instances that should be flagged as warnings.</source>
          <target state="translated">Все случаи,которые должны быть отмечены как предупреждения.</target>
        </trans-unit>
        <trans-unit id="39a3c57a313f8a6f509ff9d3ffc36567771fb975" translate="yes" xml:space="preserve">
          <source>All nodes must have &lt;code&gt;range&lt;/code&gt; property.</source>
          <target state="translated">Все узлы должны иметь свойство &lt;code&gt;range&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16bc8a2ef6d842f8d4078628bf71b055989417cb" translate="yes" xml:space="preserve">
          <source>All nodes:</source>
          <target state="translated">Все узлы:</target>
        </trans-unit>
        <trans-unit id="380e6fbca39fdfd46a99f90e48d35959e1edf1ee" translate="yes" xml:space="preserve">
          <source>All of the above methods also work for plugin rules. For example, to disable &lt;code&gt;eslint-plugin-example&lt;/code&gt;'s &lt;code&gt;rule-name&lt;/code&gt; rule, combine the plugin's name (&lt;code&gt;example&lt;/code&gt;) and the rule's name (&lt;code&gt;rule-name&lt;/code&gt;) into &lt;code&gt;example/rule-name&lt;/code&gt;:</source>
          <target state="translated">Все вышеперечисленные методы также работают для правил плагинов. Например, чтобы отключить &lt;code&gt;eslint-plugin-example&lt;/code&gt; &amp;laquo;s &lt;code&gt;rule-name&lt;/code&gt; правило, сочетают имя плагина ( &lt;code&gt;example&lt;/code&gt; ) и имя правила ( &lt;code&gt;rule-name&lt;/code&gt; ) в &lt;code&gt;example/rule-name&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d86729b4f455fbcd7ffc0551c382021ba83dc3f7" translate="yes" xml:space="preserve">
          <source>All of these options give you fine-grained control over how ESLint treats your code.</source>
          <target state="translated">Все эти опции дают вам детальный контроль над тем,как ESLint обращается с вашим кодом.</target>
        </trans-unit>
        <trans-unit id="b981df969032075eba25dbbe4f15f91c780d355d" translate="yes" xml:space="preserve">
          <source>All user-facing changes must be accompanied by appropriate documentation.</source>
          <target state="translated">Все пользовательские изменения должны сопровождаться соответствующей документацией.</target>
        </trans-unit>
        <trans-unit id="d6ed9c633f11b7ae73f9eb30856004c5aa615a9d" translate="yes" xml:space="preserve">
          <source>All variables should be declared before they are used. Variable declarations should take place at the beginning of a function using a single &lt;code&gt;var&lt;/code&gt; statement with one variable per line. All lines after the first should be indented one level so the variable names line up. Variables should be initialized when declared if applicable and the equals operator should be at a consistent indentation level. Initialized variables should come first followed by uninitialized variables.</source>
          <target state="translated">Все переменные должны быть объявлены до их использования. Объявление переменных должно происходить в начале функции с использованием одного оператора &lt;code&gt;var&lt;/code&gt; с одной переменной на строку. Все строки после первой должны иметь отступ на один уровень, чтобы имена переменных совпадали. Переменные должны быть инициализированы при объявлении, если это применимо, и оператор равенства должен иметь согласованный уровень отступа. Сначала должны идти инициализированные переменные, а затем неинициализированные переменные.</target>
        </trans-unit>
        <trans-unit id="d7ceb6fc7b2eb8ab3c194e1131ea568a7b616a92" translate="yes" xml:space="preserve">
          <source>Allowlist and denylist rules specified via &lt;code&gt;--ignore-pattern&lt;/code&gt; or &lt;code&gt;.eslintignore&lt;/code&gt; are prioritized above implicit ignore rules.</source>
          <target state="translated">Правила Allowlist и denylist, указанные с помощью &lt;code&gt;--ignore-pattern&lt;/code&gt; или &lt;code&gt;.eslintignore&lt;/code&gt; , имеют приоритет над правилами неявного игнорирования.</target>
        </trans-unit>
        <trans-unit id="a5c0a91ce7688529b69563047855933d8f3fb1e8" translate="yes" xml:space="preserve">
          <source>Alphabetical list is maintained starting from the first variable and excluding any that are considered problems. So the following code will produce two problems:</source>
          <target state="translated">Алфавитный список поддерживается,начиная с первой переменной и исключая любые,которые считаются проблемными.Таким образом,следующий код вызовет две проблемы:</target>
        </trans-unit>
        <trans-unit id="2942eb64d68ab38cec3ef47c24c9ccfc2f1d7e6b" translate="yes" xml:space="preserve">
          <source>Also note in the above examples that if you switch a method to a static method, &lt;em&gt;instances&lt;/em&gt; of the class that call the static method (&lt;code&gt;let a = new A(); a.sayHi();&lt;/code&gt;) have to be updated to being a static call (&lt;code&gt;A.sayHi();&lt;/code&gt;) instead of having the instance of the &lt;em&gt;class&lt;/em&gt; call the method</source>
          <target state="translated">Также обратите внимание, что в приведенных выше примерах, если вы переключаете метод на статический метод, &lt;em&gt;экземпляры&lt;/em&gt; класса, вызывающего статический метод ( &lt;code&gt;let a = new A(); a.sayHi();&lt;/code&gt; ), должны быть обновлены до статического call ( &lt;code&gt;A.sayHi();&lt;/code&gt; ) вместо того, чтобы экземпляр &lt;em&gt;класса&lt;/em&gt; вызывал метод</target>
        </trans-unit>
        <trans-unit id="f7f8d2e506fae97d44675fd599bec988987ee20c" translate="yes" xml:space="preserve">
          <source>Also, this rule does not disallow duplicate keys in object literals and class definitions, and in certain cases with duplicate keys might not report a missing pair for a getter/setter, like in the following example:</source>
          <target state="translated">Также данное правило не запрещает дублирование ключей в литералах объектов и определениях классов,и в некоторых случаях с дублирующимися ключами может не сообщить о пропущенной паре для геттера/установщика,как это показано в следующем примере:</target>
        </trans-unit>
        <trans-unit id="a5391918dbef9fd9c4d7cea0937d59ade63a7af6" translate="yes" xml:space="preserve">
          <source>Also, this rule does not report any warnings for properties that have duplicate getters or setters.</source>
          <target state="translated">Также это правило не выдает никаких предупреждений для свойств,которые имеют дубликаты геттеров или сеттеров.</target>
        </trans-unit>
        <trans-unit id="6915f039925c6757b027241cf12e316770686bea" translate="yes" xml:space="preserve">
          <source>Alternate object option:</source>
          <target state="translated">Опция Альтернативный объект:</target>
        </trans-unit>
        <trans-unit id="c6c5ca112da18ace260ba6bb33f4d3c4cc7dca10" translate="yes" xml:space="preserve">
          <source>Alternative: Creating Your Own Rules</source>
          <target state="translated">Альтернатива:Создание собственных правил</target>
        </trans-unit>
        <trans-unit id="87e7deb2c19c3eced3590ab12970d7dd12c45695" translate="yes" xml:space="preserve">
          <source>Alternatively, different configurations can be specified for array expressions and array patterns:</source>
          <target state="translated">Кроме того,можно указать различные конфигурации для массивных выражений и шаблонов массивов:</target>
        </trans-unit>
        <trans-unit id="61b49ead1c63a69fdf7a8fef1d4e4527b0f4cbb6" translate="yes" xml:space="preserve">
          <source>Alternatively, the rule also accepts objects, where the global name and an optional custom message are specified:</source>
          <target state="translated">Кроме того,правило также принимает объекты,в которых указано глобальное имя и необязательное пользовательское сообщение:</target>
        </trans-unit>
        <trans-unit id="b5ea439ae2fc25b1a8e4dc3f7821000550fb475e" translate="yes" xml:space="preserve">
          <source>Alternatively, the rule also accepts objects, where the selector and an optional custom message are specified:</source>
          <target state="translated">Кроме того,правило также принимает объекты,в которых указан селектор и необязательное пользовательское сообщение:</target>
        </trans-unit>
        <trans-unit id="f42388818dce26fe88593798136ce9a613cefe72" translate="yes" xml:space="preserve">
          <source>Alternatively, you can relax the rule to allow brace-less single-line &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, or &lt;code&gt;do&lt;/code&gt;, while still enforcing the use of curly braces for other instances.</source>
          <target state="translated">В качестве альтернативы вы можете ослабить правило, чтобы разрешить однострочные &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;else if&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; , &lt;code&gt;for&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; или &lt;code&gt;do&lt;/code&gt; без фигурных скобок, но при этом принудительно использовать фигурные скобки для других экземпляров.</target>
        </trans-unit>
        <trans-unit id="a86c240750580618ea8e68ab3ee67459999fb917" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use separate configurations for different assignment types. It accepts 2 other keys instead of &lt;code&gt;array&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">В качестве альтернативы вы можете использовать отдельные конфигурации для разных типов назначения. Он принимает 2 других ключа вместо &lt;code&gt;array&lt;/code&gt; и &lt;code&gt;object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf9170b524599785b7c0aeb65895885be13571ba" translate="yes" xml:space="preserve">
          <source>Alternatively, you may specify a single integer for the &lt;code&gt;max&lt;/code&gt; option:</source>
          <target state="translated">В качестве альтернативы вы можете указать одно целое число для параметра &lt;code&gt;max&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7925c2ccec5e609c97b9e24b12ce869df70db789" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;let b&lt;/code&gt; in the &lt;code&gt;if&lt;/code&gt; statement is before the &lt;em&gt;function&lt;/em&gt; declaration in the outer scope, it is incorrect.</source>
          <target state="translated">Хотя &lt;code&gt;let b&lt;/code&gt; в операторе &lt;code&gt;if&lt;/code&gt; находится перед объявлением &lt;em&gt;функции&lt;/em&gt; во внешней области, это неверно.</target>
        </trans-unit>
        <trans-unit id="866f243570c8f44641b36ea00e456d84d75ed160" translate="yes" xml:space="preserve">
          <source>Although ASI allows for more freedom over your coding style, it can also make your code behave in an unexpected way, whether you use semicolons or not. Therefore, it is best to know when ASI takes place and when it does not, and have ESLint protect your code from these potentially unexpected cases. In short, as once described by Isaac Schlueter, a &lt;code&gt;\n&lt;/code&gt; character always ends a statement (just like a semicolon) unless one of the following is true:</source>
          <target state="translated">Хотя ASI дает больше свободы при выборе стиля кодирования, он также может заставить ваш код вести себя неожиданным образом, независимо от того, используете вы точки с запятой или нет. Следовательно, лучше всего знать, когда происходит ASI, а когда нет, и иметь ESLint для защиты вашего кода от этих потенциально неожиданных случаев. Короче говоря, как однажды описал Исаак Шлютер, символ &lt;code&gt;\n&lt;/code&gt; всегда заканчивает оператор (как точка с запятой), если не выполняется одно из следующих условий:</target>
        </trans-unit>
        <trans-unit id="a4f299f7bd27b6590317d120fdc51aa0f781de8e" translate="yes" xml:space="preserve">
          <source>Although it's possible to wrap functions in parentheses, this can be confusing when the code also contains immediately-invoked function expressions (IIFEs) since parentheses are often used to make this distinction. For example:</source>
          <target state="translated">Хотя функции можно заключать в круглые скобки,это может сбить с толку,если в коде также присутствуют выражения функций с немедленным вызовом (IIFE),так как для такого разграничения часто используются круглые скобки.Например:</target>
        </trans-unit>
        <trans-unit id="24d405c574edf2eaca4756329796edd9539cb601" translate="yes" xml:space="preserve">
          <source>Although not a syntax error, this format for numbers can make it difficult to distinguish between true decimal numbers and the dot operator. For this reason, some recommend that you should always include a number before and after a decimal point to make it clear the intent is to create a decimal number.</source>
          <target state="translated">Хотя такой формат чисел и не является синтаксической ошибкой,он может затруднить разграничение между истинными десятичными числами и оператором точки.По этой причине некоторые рекомендуют всегда включать число до и после десятичной точки,чтобы было ясно,что целью является создание десятичного числа.</target>
        </trans-unit>
        <trans-unit id="e81d773bf08a95ef47ad02f669bebf58abfe87c3" translate="yes" xml:space="preserve">
          <source>Although possible, there aren't any good reasons to use these primitive wrappers as constructors. They tend to confuse other developers more than anything else because they seem like they should act as primitives, but they do not. For example:</source>
          <target state="translated">Хотя это возможно,нет никаких веских причин использовать эти примитивные обертки в качестве конструкторов.Они больше всего склонны сбивать с толку других разработчиков,потому что им кажется,что они должны действовать как примитивы,но это не так.Например:</target>
        </trans-unit>
        <trans-unit id="de8a9fd5b3850b78355ba59c0786ce342032800d" translate="yes" xml:space="preserve">
          <source>Although this code might seem like an error, it actually works fine because JavaScript engines hoist the &lt;code&gt;function&lt;/code&gt; declarations to the top of the scope. That means this code is treated as if the declaration came before the invocation.</source>
          <target state="translated">Хотя этот код может показаться ошибкой, на самом деле он работает нормально, потому что движки JavaScript поднимают объявления &lt;code&gt;function&lt;/code&gt; в верхнюю часть области видимости. Это означает, что этот код обрабатывается так, как если бы объявление было сделано до вызова.</target>
        </trans-unit>
        <trans-unit id="5553a9fdd742079120793eebc8d2221f6b891b20" translate="yes" xml:space="preserve">
          <source>Always declare variables. Implied globals should not be used.</source>
          <target state="translated">Всегда объявлять переменные.Подразумеваемые глобусы не должны использоваться.</target>
        </trans-unit>
        <trans-unit id="10a7f009f495f80e7285c15fc4b4b3893ec6f362" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;extends&lt;/code&gt; property value &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt; enables a subset of core rules that report common problems, which have a check mark  on the &lt;a href=&quot;../rules/index&quot;&gt;rules page&lt;/a&gt;. The recommended subset can change only at major versions of ESLint.</source>
          <target state="translated">&lt;code&gt;extends&lt;/code&gt; свойства значения &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt; позволяет подмножество основных правил , которые сообщают общие проблемы, которые имеют отметку на &lt;a href=&quot;../rules/index&quot;&gt;странице правил&lt;/a&gt; . Рекомендуемое подмножество может измениться только в основных версиях ESLint.</target>
        </trans-unit>
        <trans-unit id="b0008c8dec87379b7985a8a544d103acfceac72e" translate="yes" xml:space="preserve">
          <source>An Open Letter to JavaScript Leaders Regarding Semicolons</source>
          <target state="translated">Открытое письмо лидерам JavaScript относительно точки с запятой</target>
        </trans-unit>
        <trans-unit id="f6dfcf2a1b3453d2a0633aaf0e9c90f54b4a3cdf" translate="yes" xml:space="preserve">
          <source>An array of numbers to ignore. It's set to &lt;code&gt;[]&lt;/code&gt; by default. If provided, it must be an &lt;code&gt;Array&lt;/code&gt;.</source>
          <target state="translated">Массив чисел, который следует игнорировать. По умолчанию установлено значение &lt;code&gt;[]&lt;/code&gt; . Если предоставлено, это должен быть &lt;code&gt;Array&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a0a90c8970e8cd98eda8ee49e8140bb8398cb04" translate="yes" xml:space="preserve">
          <source>An array which includes &lt;code&gt;fixing&lt;/code&gt; objects.</source>
          <target state="translated">Массив, включающий &lt;code&gt;fixing&lt;/code&gt; объекты.</target>
        </trans-unit>
        <trans-unit id="2b8611b9d9e5eaae2d252753440448d3feefcb89" translate="yes" xml:space="preserve">
          <source>An arrow function body can contain an implicit return as an expression instead of a block body. It can be useful to enforce a consistent location for the implicitly returned expression.</source>
          <target state="translated">Тело функции стрелки может содержать неявный возврат в виде выражения вместо тела блока.Это может быть полезно для обеспечения согласованного местоположения для неявно возвращаемого выражения.</target>
        </trans-unit>
        <trans-unit id="1884bdfcf4455f7e0f018c484d212b780f99886e" translate="yes" xml:space="preserve">
          <source>An environment defines global variables that are predefined. The available environments are:</source>
          <target state="translated">Окружение определяет глобальные переменные,которые предопределены.Доступные среды:</target>
        </trans-unit>
        <trans-unit id="4a993a714edad4c590ac5d9867159330b64ddc2c" translate="yes" xml:space="preserve">
          <source>An example configuration, with the defaults &lt;code&gt;VariableDeclarator&lt;/code&gt; and &lt;code&gt;AssignmentExpression&lt;/code&gt; filled in, looks like this:</source>
          <target state="translated">Пример конфигурации с заполненными значениями по умолчанию &lt;code&gt;VariableDeclarator&lt;/code&gt; и &lt;code&gt;AssignmentExpression&lt;/code&gt; выглядит так:</target>
        </trans-unit>
        <trans-unit id="341d56c5d6e304784de6633b08d9af06d30d0708" translate="yes" xml:space="preserve">
          <source>An example configuration, with the defaults &lt;code&gt;array&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt; filled in, looks like this:</source>
          <target state="translated">Пример конфигурации с заполненным &lt;code&gt;array&lt;/code&gt; значений по умолчанию и заполненным &lt;code&gt;object&lt;/code&gt; выглядит так:</target>
        </trans-unit>
        <trans-unit id="dd6f63391e9d21a63c3ea41d1ba8a96a2efd4e1d" translate="yes" xml:space="preserve">
          <source>An example configuration:</source>
          <target state="translated">Пример конфигурации:</target>
        </trans-unit>
        <trans-unit id="d23f10e88a66188c21919014d33eeac201e7bb6e" translate="yes" xml:space="preserve">
          <source>An example of a configuration with overrides:</source>
          <target state="translated">Пример конфигурации с переопределением:</target>
        </trans-unit>
        <trans-unit id="1d36764ba33569671f7edfa7cc1e47cbf393760a" translate="yes" xml:space="preserve">
          <source>An example of shorthand configuration:</source>
          <target state="translated">Пример настройки сокращений:</target>
        </trans-unit>
        <trans-unit id="7033976c72e3e35c02fd8336248a55e6ab23e1eb" translate="yes" xml:space="preserve">
          <source>An example use case is to enforce comma style &lt;em&gt;only&lt;/em&gt; in var statements.</source>
          <target state="translated">Примером использования является принудительное использование стиля запятой &lt;em&gt;только&lt;/em&gt; в операторах var.</target>
        </trans-unit>
        <trans-unit id="dddab7ddd0688573b5d9e27e8a285815d7261f07" translate="yes" xml:space="preserve">
          <source>An invalid pattern in a regular expression literal is a &lt;code&gt;SyntaxError&lt;/code&gt; when the code is parsed, but an invalid string in &lt;code&gt;RegExp&lt;/code&gt; constructors throws a &lt;code&gt;SyntaxError&lt;/code&gt; only when the code is executed.</source>
          <target state="translated">Недопустимый шаблон в &lt;code&gt;SyntaxError&lt;/code&gt; регулярного выражения - это SyntaxError, когда код анализируется, но недопустимая строка в конструкторах &lt;code&gt;RegExp&lt;/code&gt; вызывает &lt;code&gt;SyntaxError&lt;/code&gt; только при выполнении кода.</target>
        </trans-unit>
        <trans-unit id="b476bef9567eb94c0088de30121faf7682d5623a" translate="yes" xml:space="preserve">
          <source>An iterable object which enumerates &lt;code&gt;fixing&lt;/code&gt; objects. Especially, the &lt;code&gt;fix()&lt;/code&gt; function can be a generator.</source>
          <target state="translated">Итерируемый объект, который перечисляет &lt;code&gt;fixing&lt;/code&gt; объекты. В частности, функция &lt;code&gt;fix()&lt;/code&gt; может быть генератором.</target>
        </trans-unit>
        <trans-unit id="438d78e8f508d8dd7a89428814b76d0adf68590c" translate="yes" xml:space="preserve">
          <source>An npm-installed formatter is resolved with or without &lt;code&gt;eslint-formatter-&lt;/code&gt; prefix.</source>
          <target state="translated">Установленный npm форматтер разрешается с &lt;code&gt;eslint-formatter-&lt;/code&gt; или без него .</target>
        </trans-unit>
        <trans-unit id="e17d5deba51ad9da3d6d69e9127834d43c91175f" translate="yes" xml:space="preserve">
          <source>An object containing &lt;code&gt;valid&lt;/code&gt; and &lt;code&gt;invalid&lt;/code&gt; properties, each of which is an array containing test cases.</source>
          <target state="translated">Объект, содержащий &lt;code&gt;valid&lt;/code&gt; и &lt;code&gt;invalid&lt;/code&gt; свойства, каждое из которых представляет собой массив, содержащий тестовые примеры.</target>
        </trans-unit>
        <trans-unit id="7f65760ab68396ff18ca2c5e2cf5d15f9c0728d5" translate="yes" xml:space="preserve">
          <source>An object literal may be used as a third array item to specify exceptions, with the key &lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; and an array as the value. These exceptions work in the context of the first option. That is, if &lt;code&gt;&quot;always&quot;&lt;/code&gt; is set to enforce spacing, then any &quot;exception&quot; will &lt;em&gt;disallow&lt;/em&gt; spacing. Conversely, if &lt;code&gt;&quot;never&quot;&lt;/code&gt; is set to disallow spacing, then any &quot;exception&quot; will &lt;em&gt;enforce&lt;/em&gt; spacing.</source>
          <target state="translated">Литерал объекта может использоваться в качестве третьего элемента массива для указания исключений с ключом &lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; и массивом в качестве значения. Эти исключения работают в контексте первого варианта. То есть, если для принудительного использования интервала установлено &lt;code&gt;&quot;always&quot;&lt;/code&gt; , то любое &amp;laquo;исключение&amp;raquo; будет &lt;em&gt;запрещать&lt;/em&gt; интервал. И наоборот, если установлено &lt;code&gt;&quot;never&quot;&lt;/code&gt; чтобы запретить интервал, то любое &amp;laquo;исключение&amp;raquo; будет &lt;em&gt;применять&lt;/em&gt; интервал.</target>
        </trans-unit>
        <trans-unit id="6e32a74ed5fb1438e5b7dc7286797ba7ef696aba" translate="yes" xml:space="preserve">
          <source>An object literal may be used as a third array item to specify spacing exceptions. These exceptions work in the context of the first option. That is, if &lt;code&gt;&quot;always&quot;&lt;/code&gt; is set to enforce spacing and an exception is set to &lt;code&gt;false&lt;/code&gt;, it will disallow spacing for cases matching the exception. Likewise, if &lt;code&gt;&quot;never&quot;&lt;/code&gt; is set to disallow spacing and an exception is set to &lt;code&gt;true&lt;/code&gt;, it will enforce spacing for cases matching the exception.</source>
          <target state="translated">Литерал объекта может использоваться как третий элемент массива для указания исключений интервалов. Эти исключения работают в контексте первого варианта. То есть, если для принудительного использования интервала установлено значение &lt;code&gt;&quot;always&quot;&lt;/code&gt; а для исключения установлено значение &amp;laquo; &lt;code&gt;false&lt;/code&gt; , интервал будет запрещен для случаев, соответствующих исключению. Точно так же, если установлено &lt;code&gt;&quot;never&quot;&lt;/code&gt; чтобы запретить интервал, а для исключения установлено значение &lt;code&gt;true&lt;/code&gt; , он будет применять интервал для случаев, соответствующих исключению.</target>
        </trans-unit>
        <trans-unit id="4b176eca1a5e1018132cb2364182412c12d16e9d" translate="yes" xml:space="preserve">
          <source>An object that further controls the behavior of this rule. Currently, the only available parameter is &lt;code&gt;ignoreForLoopInit&lt;/code&gt;, which indicates if initialization at declaration is allowed in &lt;code&gt;for&lt;/code&gt; loops when &lt;code&gt;&quot;never&quot;&lt;/code&gt; is set, since it is a very typical use case.</source>
          <target state="translated">Объект, который дополнительно управляет поведением этого правила. В настоящее время единственным доступным параметром является &lt;code&gt;ignoreForLoopInit&lt;/code&gt; , который указывает, разрешена ли инициализация при объявлении в циклах &lt;code&gt;for&lt;/code&gt; , когда установлено &lt;code&gt;&quot;never&quot;&lt;/code&gt; , поскольку это очень типичный вариант использования.</target>
        </trans-unit>
        <trans-unit id="76f218533f4fe1fb32f27068a4f20c9c3a16dfc3" translate="yes" xml:space="preserve">
          <source>An unused expression which has no effect on the state of the program indicates a logic error.</source>
          <target state="translated">Неиспользованное выражение,не влияющее на состояние программы,указывает на логическую ошибку.</target>
        </trans-unit>
        <trans-unit id="49d4259045d26d22175e3f8251cfe300e5d181b6" translate="yes" xml:space="preserve">
          <source>And above of typed arrays.</source>
          <target state="translated">И выше типизированных массивов.</target>
        </trans-unit>
        <trans-unit id="659290b631b70886723f30f43c495d7a9f19a9d7" translate="yes" xml:space="preserve">
          <source>And here is an example that autofixes lint problems:</source>
          <target state="translated">И вот пример,что автоисправление проблем с ворсинками:</target>
        </trans-unit>
        <trans-unit id="4a2f05944f009f34fb2b41b47c60459ed7da7240" translate="yes" xml:space="preserve">
          <source>And in YAML:</source>
          <target state="translated">И в ЯМЛ:</target>
        </trans-unit>
        <trans-unit id="3a25dc5ee33e69f8b75c5fcba0c9db10f8928e94" translate="yes" xml:space="preserve">
          <source>And the &lt;a href=&quot;https://www.ecma-international.org/ecma-262/8.0/index.html#sec-atomics-object&quot;&gt;ECMAScript 2017 specification&lt;/a&gt; makes it clear that &lt;code&gt;Atomics&lt;/code&gt; cannot be invoked:</source>
          <target state="translated">А &lt;a href=&quot;https://www.ecma-international.org/ecma-262/8.0/index.html#sec-atomics-object&quot;&gt;спецификация ECMAScript 2017&lt;/a&gt; ясно дает понять, что &lt;code&gt;Atomics&lt;/code&gt; не может быть вызван:</target>
        </trans-unit>
        <trans-unit id="05dc9d622e3015b6bfa8811e104b85bb8205e25f" translate="yes" xml:space="preserve">
          <source>And the option has shorthand as a string keyword:</source>
          <target state="translated">А у опции есть сокращение в виде строкового ключевого слова:</target>
        </trans-unit>
        <trans-unit id="9777a1e6d65b67eb72edafff1e10fe081003864e" translate="yes" xml:space="preserve">
          <source>And then you run:</source>
          <target state="translated">А потом ты бежишь:</target>
        </trans-unit>
        <trans-unit id="b25ceb4859dadbd732ae104b9a92498a1e1db184" translate="yes" xml:space="preserve">
          <source>And then you would modify your configuration file like this:</source>
          <target state="translated">А потом вы бы изменили свой конфигурационный файл вот так:</target>
        </trans-unit>
        <trans-unit id="775bd2afb33b18dbf1a41f0531b3507d20a625e6" translate="yes" xml:space="preserve">
          <source>And this rule allows &lt;code&gt;this&lt;/code&gt; keywords in functions below:</source>
          <target state="translated">И это правило позволяет использовать &lt;code&gt;this&lt;/code&gt; ключевые слова в функциях ниже:</target>
        </trans-unit>
        <trans-unit id="2a3de4a9dc7c9f3bd23b0b53226033777b1c013b" translate="yes" xml:space="preserve">
          <source>AngularJS</source>
          <target state="translated">AngularJS</target>
        </trans-unit>
        <trans-unit id="591268d3d3fe5a72c8827ac84ee70b58e8c3d3e2" translate="yes" xml:space="preserve">
          <source>Annotated ES5 &amp;sect;7.8.5 - Regular Expression Literals</source>
          <target state="translated">Аннотированный ES5 &amp;sect;7.8.5 - Литералы регулярных выражений</target>
        </trans-unit>
        <trans-unit id="80e28c8818d9491b3223341a49c734105d436df1" translate="yes" xml:space="preserve">
          <source>Annotated ES5 - &amp;sect;15.1.1</source>
          <target state="translated">Аннотированный ES5 - &amp;sect;15.1.1</target>
        </trans-unit>
        <trans-unit id="d1483aa9f00c4b4bb5c32564c963065a2f0a0e12" translate="yes" xml:space="preserve">
          <source>Annotated ES5 - Annex C</source>
          <target state="translated">Аннотированное ES5-Приложение C</target>
        </trans-unit>
        <trans-unit id="9b8565a92875ea54b3f07cae6ab323d0096e5706" translate="yes" xml:space="preserve">
          <source>Anonymous functions may be used for assignment of object methods or as arguments to other functions. There should be no space between the &lt;code&gt;function&lt;/code&gt; keyword and the opening parentheses.</source>
          <target state="translated">Анонимные функции могут использоваться для назначения методов объекта или в качестве аргументов другим функциям. Между ключевым словом &lt;code&gt;function&lt;/code&gt; и открывающими скобками не должно быть пробелов .</target>
        </trans-unit>
        <trans-unit id="c4ad37defa448472e1ebec233962bd2d574a8d79" translate="yes" xml:space="preserve">
          <source>Another argument in favor of this style is that it improves the clarity of diffs when something in the method chain is changed:</source>
          <target state="translated">Еще одним аргументом в пользу этого стиля является то,что он улучшает четкость отличий,когда что-то в цепочке методов меняется:</target>
        </trans-unit>
        <trans-unit id="284affa5f5f9ddb144dedea5ee6895aafa4a76f6" translate="yes" xml:space="preserve">
          <source>Another benefit of this rule is specificity of diffs when a property is changed:</source>
          <target state="translated">Еще одним преимуществом этого правила является специфика различий при изменении свойства:</target>
        </trans-unit>
        <trans-unit id="68caf686c329b469a32cc27f694bcc136b6f4a77" translate="yes" xml:space="preserve">
          <source>Another case where you might not use this rule is if you want to enforce console calls and not console overwrites. For example:</source>
          <target state="translated">Еще одним случаем,когда вы можете не использовать это правило,является ситуация,когда вы хотите внедрить консольные вызовы,а не перезаписывать консольные.Например:</target>
        </trans-unit>
        <trans-unit id="3390320f4be3c19e524e28b23472d6dbb6cc689f" translate="yes" xml:space="preserve">
          <source>Another common case is to minify code as &lt;code&gt;void 0&lt;/code&gt; is shorter than &lt;code&gt;undefined&lt;/code&gt;:</source>
          <target state="translated">Другой распространенный случай - минимизировать код, поскольку &lt;code&gt;void 0&lt;/code&gt; короче &lt;code&gt;undefined&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="332efd74927ce8d1c939228b31fa1aaaba97f93a" translate="yes" xml:space="preserve">
          <source>Another common mistake is using a single variable as both the conditional test and the consequent. In such cases, the logical &lt;code&gt;OR&lt;/code&gt; can be used to provide the same functionality. Here is an example:</source>
          <target state="translated">Еще одна распространенная ошибка - использование одной переменной как в качестве условного теста, так и в качестве следствия. В таких случаях можно использовать логическое &lt;code&gt;OR&lt;/code&gt; для обеспечения той же функциональности. Вот пример:</target>
        </trans-unit>
        <trans-unit id="80b5fcb5558eb477f24af2cd32b33af9f5ee37f2" translate="yes" xml:space="preserve">
          <source>Another common use case for this option is in combination with &lt;code&gt;{ &quot;properties&quot;: &quot;never&quot; }&lt;/code&gt;, when the identifier is intended to be used only as a property shorthand.</source>
          <target state="translated">Другой распространенный вариант использования этой опции - комбинация с &lt;code&gt;{ &quot;properties&quot;: &quot;never&quot; }&lt;/code&gt; , когда идентификатор предназначен для использования только как сокращение свойства.</target>
        </trans-unit>
        <trans-unit id="58af9b94d3f9837624df663f80036dcc5b7e920a" translate="yes" xml:space="preserve">
          <source>Another example where quotes do matter is when using numeric literals as property keys:</source>
          <target state="translated">Другим примером,где кавычки имеют значение,является использование числовых литералов в качестве ключей свойств:</target>
        </trans-unit>
        <trans-unit id="1d1e1b0f8401d2b1c59b0f126cfa628ec7627bf2" translate="yes" xml:space="preserve">
          <source>Another solution would be to avoid using a mutable variable reference at all:</source>
          <target state="translated">Другим решением было бы вообще избежать использования ссылки на мутирующую переменную:</target>
        </trans-unit>
        <trans-unit id="1d60372e402e0715e69db2e70551f8dd90a5d6e9" translate="yes" xml:space="preserve">
          <source>Another style is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Indent_style#Allman_style&quot;&gt;Allman&lt;/a&gt;, in which all the braces are expected to be on their own lines without any extra indentation. For example:</source>
          <target state="translated">Другой стиль называется &lt;a href=&quot;https://en.wikipedia.org/wiki/Indent_style#Allman_style&quot;&gt;Allman&lt;/a&gt; , в котором предполагается, что все фигурные скобки находятся на отдельных строках без дополнительных отступов. Например:</target>
        </trans-unit>
        <trans-unit id="87a768a020f736c807eb3cee1ca2d1f14df684e7" translate="yes" xml:space="preserve">
          <source>Any additional properties of a test case will be passed directly to the linter as config options. For example, a test case can have a &lt;code&gt;parserOptions&lt;/code&gt; property to configure parser behavior:</source>
          <target state="translated">Любые дополнительные свойства тестового примера будут переданы непосредственно линтеру в качестве параметров конфигурации. Например, в тестовом примере может быть свойство &lt;code&gt;parserOptions&lt;/code&gt; для настройки поведения парсера:</target>
        </trans-unit>
        <trans-unit id="983552f9535f5fc056ba05e9fc491ecb6b8e9856" translate="yes" xml:space="preserve">
          <source>Any file that follows the standard ignore file format can be used. Keep in mind that specifying &lt;code&gt;--ignore-path&lt;/code&gt; means that any existing &lt;code&gt;.eslintignore&lt;/code&gt; file will not be used. Note that globbing rules in &lt;code&gt;.eslintignore&lt;/code&gt; follow those of &lt;code&gt;.gitignore&lt;/code&gt;.</source>
          <target state="translated">Можно использовать любой файл, соответствующий стандартному формату файла игнорирования. Имейте в виду, что указание &lt;code&gt;--ignore-path&lt;/code&gt; означает, что любой существующий файл &lt;code&gt;.eslintignore&lt;/code&gt; не будет использоваться. Обратите внимание, что правила подстановки в &lt;code&gt;.eslintignore&lt;/code&gt; следуют правилам &lt;code&gt;.gitignore&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cf92fd782072e232ee87ae387b92f10f733a45f" translate="yes" xml:space="preserve">
          <source>Any reference to an undeclared variable causes a warning, unless the variable is explicitly mentioned in a &lt;code&gt;/*global ...*/&lt;/code&gt; comment, or specified in the &lt;a href=&quot;../user-guide/configuring#specifying-globals&quot;&gt;&lt;code&gt;globals&lt;/code&gt; key in the configuration file&lt;/a&gt;. A common use case for these is if you intentionally use globals that are defined elsewhere (e.g. in a script sourced from HTML).</source>
          <target state="translated">Любая ссылка на необъявленную переменную вызывает предупреждение, если только переменная явно не упоминается в комментарии &lt;code&gt;/*global ...*/&lt;/code&gt; или не указана в &lt;a href=&quot;../user-guide/configuring#specifying-globals&quot;&gt; &lt;code&gt;globals&lt;/code&gt; ключе в файле конфигурации&lt;/a&gt; . Обычно они используются, если вы намеренно используете глобальные переменные, определенные в другом месте (например, в сценарии, полученном из HTML).</target>
        </trans-unit>
        <trans-unit id="0bb559fa969f749523424421aa9513fbc4bbf59e" translate="yes" xml:space="preserve">
          <source>Anyone not yet in an ES6 environment would not want to apply this rule. Others may find the terseness of the shorthand syntax harder to read and may not want to encourage it with this rule.</source>
          <target state="translated">Любой,кто еще не находится в среде ES6,не захочет применять это правило.Другие могут посчитать,что краткость синтаксиса сложнее прочитать,и,возможно,не захотят поощрять его с помощью этого правила.</target>
        </trans-unit>
        <trans-unit id="301c21f7a6fb57bce654e5a9d38ef620e86123d7" translate="yes" xml:space="preserve">
          <source>Anything above Node.js 11.10.1</source>
          <target state="translated">Все,что выше Node.js 11.10.1.</target>
        </trans-unit>
        <trans-unit id="9abfe4f65f0647e4ea0c5ac4810e9e579b855636" translate="yes" xml:space="preserve">
          <source>Anything above Node.js 9.10.0</source>
          <target state="translated">Все,что выше Node.js 9.10.0.</target>
        </trans-unit>
        <trans-unit id="b22274513fcf59b01e075e91572dcaa215b399d2" translate="yes" xml:space="preserve">
          <source>Applying Fixes</source>
          <target state="translated">Применение исправлений</target>
        </trans-unit>
        <trans-unit id="b040b4179b8b00702858fdb4c1afec3d6d284509" translate="yes" xml:space="preserve">
          <source>Architecture</source>
          <target state="translated">Architecture</target>
        </trans-unit>
        <trans-unit id="98436c6de89d4b1603f1e667da6c73ef406ed052" translate="yes" xml:space="preserve">
          <source>Arithmetic Operators: &lt;code&gt;&quot;+&quot;&lt;/code&gt;, &lt;code&gt;&quot;-&quot;&lt;/code&gt;, &lt;code&gt;&quot;*&quot;&lt;/code&gt;, &lt;code&gt;&quot;/&quot;&lt;/code&gt;, &lt;code&gt;&quot;%&quot;&lt;/code&gt;, &lt;code&gt;&quot;**&quot;&lt;/code&gt;</source>
          <target state="translated">Арифметические операторы: &lt;code&gt;&quot;+&quot;&lt;/code&gt; , &lt;code&gt;&quot;-&quot;&lt;/code&gt; , &lt;code&gt;&quot;*&quot;&lt;/code&gt; , &lt;code&gt;&quot;/&quot;&lt;/code&gt; , &lt;code&gt;&quot;%&quot;&lt;/code&gt; , &lt;code&gt;&quot;**&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73ef048c871e9426c677ce4026bf612fcbcc2927" translate="yes" xml:space="preserve">
          <source>ArrayExpression</source>
          <target state="translated">ArrayExpression</target>
        </trans-unit>
        <trans-unit id="732c5c8ecc734e72807c30052e877068cfabb79f" translate="yes" xml:space="preserve">
          <source>ArrayExpression and ArrayPattern</source>
          <target state="translated">ArrayExpression и ArrayPattern</target>
        </trans-unit>
        <trans-unit id="3ea5db1b781f5122a5eb2179ab2c211009c018a4" translate="yes" xml:space="preserve">
          <source>Arrays are objects, so they can have property names such as &lt;code&gt;&quot;-1&quot;&lt;/code&gt; or &lt;code&gt;&quot;2.5&quot;&lt;/code&gt;. However, those are just &quot;normal&quot; object properties that don't represent array elements. They don't influence the array's &lt;code&gt;length&lt;/code&gt;, and they are ignored by array methods like &lt;code&gt;.map&lt;/code&gt; or &lt;code&gt;.forEach&lt;/code&gt;.</source>
          <target state="translated">Массивы являются объектами, поэтому они могут иметь имена свойств, такие как &lt;code&gt;&quot;-1&quot;&lt;/code&gt; или &lt;code&gt;&quot;2.5&quot;&lt;/code&gt; . Однако это просто &amp;laquo;нормальные&amp;raquo; свойства объекта, которые не представляют элементы массива. Они не влияют на &lt;code&gt;length&lt;/code&gt; массива и игнорируются методами массива, такими как &lt;code&gt;.map&lt;/code&gt; или &lt;code&gt;.forEach&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f69ad151738c1fc440c6c498b7fc67ee1775b2df" translate="yes" xml:space="preserve">
          <source>Arrow functions (&lt;code&gt;=&amp;gt;&lt;/code&gt;) are similar in syntax to some comparison operators (&lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt;). This rule warns against using the arrow function syntax in places where a condition is expected. Even if the arguments of the arrow function are wrapped with parens, this rule still warns about it.</source>
          <target state="translated">Функции стрелок ( &lt;code&gt;=&amp;gt;&lt;/code&gt; ) аналогичны по синтаксису некоторым операторам сравнения ( &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; и &lt;code&gt;&amp;gt;=&lt;/code&gt; ). Это правило предостерегает от использования синтаксиса стрелочной функции там, где ожидается условие. Даже если аргументы стрелочной функции заключены в скобки, это правило все равно предупреждает об этом.</target>
        </trans-unit>
        <trans-unit id="4a3b43a8931184e9ca69c21c5bd72b49ed93b1e7" translate="yes" xml:space="preserve">
          <source>Arrow functions (&lt;code&gt;=&amp;gt;&lt;/code&gt;) are similar in syntax to some comparison operators (&lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt;). This rule warns against using the arrow function syntax in places where it could be confused with a comparison operator.</source>
          <target state="translated">Функции стрелок ( &lt;code&gt;=&amp;gt;&lt;/code&gt; ) аналогичны по синтаксису некоторым операторам сравнения ( &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; и &lt;code&gt;&amp;gt;=&lt;/code&gt; ). Это правило предостерегает от использования синтаксиса стрелочной функции там, где его можно спутать с оператором сравнения.</target>
        </trans-unit>
        <trans-unit id="bfd0c70c044d2f23664b1c4327d9b79430062401" translate="yes" xml:space="preserve">
          <source>Arrow functions can be an attractive alternative to function expressions for callbacks or function arguments.</source>
          <target state="translated">Функции со стрелками могут быть привлекательной альтернативой выражениям функций для обратных вызовов или аргументов функций.</target>
        </trans-unit>
        <trans-unit id="7e6cdc713a515de0161d2398e627f9ccf2d292b7" translate="yes" xml:space="preserve">
          <source>Arrow functions can omit parentheses when they have exactly one parameter. In all other cases the parameter(s) must be wrapped in parentheses. This rule enforces the consistent use of parentheses in arrow functions.</source>
          <target state="translated">Функции со стрелками могут опускать круглые скобки,когда они имеют ровно один параметр.Во всех остальных случаях параметр(ы)должен быть заключен в круглые скобки.Это правило обеспечивает последовательное использование круглых скобок в функциях со стрелками.</target>
        </trans-unit>
        <trans-unit id="86962e3d2106eae0514d3ca150fcb521360f7e33" translate="yes" xml:space="preserve">
          <source>Arrow functions have two syntactic forms for their function bodies. They may be defined with a &lt;em&gt;block&lt;/em&gt; body (denoted by curly braces) &lt;code&gt;() =&amp;gt; { ... }&lt;/code&gt; or with a single expression &lt;code&gt;() =&amp;gt; ...&lt;/code&gt;, whose value is implicitly returned.</source>
          <target state="translated">Стрелочные функции имеют две синтаксические формы для своих функциональных тел. Они могут быть определены с помощью тела &lt;em&gt;блока&lt;/em&gt; (обозначенного фигурными скобками) &lt;code&gt;() =&amp;gt; { ... }&lt;/code&gt; или с одним выражением &lt;code&gt;() =&amp;gt; ...&lt;/code&gt; , значение которого возвращается неявно.</target>
        </trans-unit>
        <trans-unit id="ad88ac6681f3fba161f8f17b35402682ae6dfd20" translate="yes" xml:space="preserve">
          <source>As a result, it was difficult for an integration to distinguish between the two cases to determine whether it should try to extract linting results from the output.</source>
          <target state="translated">В результате,для интеграции было трудно провести различие между этими двумя случаями,чтобы определить,следует ли пытаться извлечь результаты ворсовки из выходных данных.</target>
        </trans-unit>
        <trans-unit id="cef53b4059e20deb2e5c46250f59e175341842d1" translate="yes" xml:space="preserve">
          <source>As a rule of thumb: With ESLint v6, plugins should always be installed locally, even if ESLint was installed globally. More precisely, ESLint v6 resolves plugins relative to the end user's project by default, and always resolves shareable configs and parsers relative to the location of the config file that imports them.</source>
          <target state="translated">Как правило:С ESLint v6 плагины всегда должны быть установлены локально,даже если ESLint был установлен глобально.Точнее,ESLint v6 по умолчанию разрешает подключаемые модули относительно проекта конечного пользователя,и всегда разрешает разделяемые конфигурации и парсеры относительно местоположения импортирующего их конфигурационного файла.</target>
        </trans-unit>
        <trans-unit id="5ac2a5d22276a18b4b5cf02e2da7daf5734ca95f" translate="yes" xml:space="preserve">
          <source>As an alternative, you can use the &lt;a href=&quot;no-global-assign&quot;&gt;no-global-assign&lt;/a&gt; and &lt;a href=&quot;no-shadow-restricted-names&quot;&gt;no-shadow-restricted-names&lt;/a&gt; rules to prevent &lt;code&gt;undefined&lt;/code&gt; from being shadowed or assigned a different value. This ensures that &lt;code&gt;undefined&lt;/code&gt; will always hold its original, expected value.</source>
          <target state="translated">В качестве альтернативы вы можете использовать правила &lt;a href=&quot;no-global-assign&quot;&gt;no-global-assign&lt;/a&gt; и &lt;a href=&quot;no-shadow-restricted-names&quot;&gt;no-shadow-limited-names,&lt;/a&gt; чтобы предотвратить &lt;code&gt;undefined&lt;/code&gt; или присвоение другого значения. Это гарантирует, что &lt;code&gt;undefined&lt;/code&gt; всегда будет сохранять исходное ожидаемое значение.</target>
        </trans-unit>
        <trans-unit id="bfabdafd218d7722aa287977e6776b77c7c9d117" translate="yes" xml:space="preserve">
          <source>As an example, let's assume you're using the package name &lt;code&gt;eslint-config-myconfig&lt;/code&gt; and your package looks something like this:</source>
          <target state="translated">В качестве примера предположим, что вы используете имя пакета &lt;code&gt;eslint-config-myconfig&lt;/code&gt; и ваш пакет выглядит примерно так:</target>
        </trans-unit>
        <trans-unit id="1e03fe02a8a4faab337d273cf85be225f6274838" translate="yes" xml:space="preserve">
          <source>As an example, suppose that you are using the &lt;code&gt;airbnb&lt;/code&gt; preset, so your &lt;code&gt;.jscsrc&lt;/code&gt; file looks like this:</source>
          <target state="translated">В качестве примера предположим, что вы используете предустановку &lt;code&gt;airbnb&lt;/code&gt; , поэтому ваш файл &lt;code&gt;.jscsrc&lt;/code&gt; выглядит так:</target>
        </trans-unit>
        <trans-unit id="92656dee77e92e2cde09e2ed85c732113bec847a" translate="yes" xml:space="preserve">
          <source>As an example, you can create a file called &lt;code&gt;my-special-config.js&lt;/code&gt; in the root of your npm package and export a config, such as:</source>
          <target state="translated">Например, вы можете создать файл с именем &lt;code&gt;my-special-config.js&lt;/code&gt; в корне вашего пакета npm и экспортировать конфигурацию, например:</target>
        </trans-unit>
        <trans-unit id="ab00035935ca3b0baf7ecef1d9105a1cc7f8bbf3" translate="yes" xml:space="preserve">
          <source>As announced in &lt;a href=&quot;https://eslint.org/blog/2016/10/eslint-v3.8.0-released#additional-property-on-linting-results&quot;&gt;October 2016&lt;/a&gt;, the &lt;code&gt;source&lt;/code&gt; property has been removed from individual lint message objects.</source>
          <target state="translated">Как было объявлено в &lt;a href=&quot;https://eslint.org/blog/2016/10/eslint-v3.8.0-released#additional-property-on-linting-results&quot;&gt;октябре 2016 года&lt;/a&gt; , свойство &lt;code&gt;source&lt;/code&gt; было удалено из отдельных объектов сообщений lint.</target>
        </trans-unit>
        <trans-unit id="cc89e27f98a865cd56617be1e005e0fbabcceb74" translate="yes" xml:space="preserve">
          <source>As another example, you can disallow calls to &lt;code&gt;require()&lt;/code&gt;:</source>
          <target state="translated">В качестве другого примера вы можете запретить вызовы &lt;code&gt;require()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="35711e725121bb4daddca1b88df5389087578f01" translate="yes" xml:space="preserve">
          <source>As far as naming conventions for identifiers go, dangling underscores may be the most polarizing in JavaScript. Dangling underscores are underscores at either the beginning or end of an identifier, such as:</source>
          <target state="translated">Что касается соглашений об именовании идентификаторов,то висячие подчеркивания могут быть наиболее поляризованными в JavaScript.Висячие подчеркивания-это подчеркивания в начале или в конце идентификатора,например:</target>
        </trans-unit>
        <trans-unit id="359ddf699fe41e18d17c5cee4d7389854514dd09" translate="yes" xml:space="preserve">
          <source>As illustrated above, the &lt;code&gt;--fix&lt;/code&gt; option, applied to this rule, does not comply with other rules, such as &lt;code&gt;indent&lt;/code&gt;, but, if those other rules are also in effect, the option applies them, too.</source>
          <target state="translated">Как показано выше, опция &lt;code&gt;--fix&lt;/code&gt; , примененная к этому правилу, не соответствует другим правилам, таким как &lt;code&gt;indent&lt;/code&gt; , но, если эти другие правила также действуют, опция также применяет их.</target>
        </trans-unit>
        <trans-unit id="63c22f0243a6ef055657c0b394805c35de30c0bb" translate="yes" xml:space="preserve">
          <source>As long as you do not explicitly disallow empty parentheses using the &lt;code&gt;&quot;empty&quot;&lt;/code&gt; exception , &lt;code&gt;()&lt;/code&gt; will be allowed.</source>
          <target state="translated">Пока вы явно не запрещаете пустые скобки, используя &lt;code&gt;&quot;empty&quot;&lt;/code&gt; исключение, &lt;code&gt;()&lt;/code&gt; будет разрешено.</target>
        </trans-unit>
        <trans-unit id="36031e157974d6e4e95c8577f6c65001ba72eb53" translate="yes" xml:space="preserve">
          <source>As noted above, don't try to conform to user-defined styles.</source>
          <target state="translated">Как было отмечено выше,не пытайтесь соответствовать определенным пользователем стилям.</target>
        </trans-unit>
        <trans-unit id="6997d9f9481d3aa449f1f150ecff4a38d74cd109" translate="yes" xml:space="preserve">
          <source>As of April 2019, Node.js 6 will be at EOL and will no longer be receiving security updates. As a result, we have decided to drop support for it in ESLint v6. We now support the following versions of Node.js:</source>
          <target state="translated">С апреля 2019 года Node.js 6 будет находиться в EOL и больше не будет получать обновления безопасности.В результате мы решили отказаться от его поддержки в ESLint v6.Теперь мы поддерживаем следующие версии Node.js:</target>
        </trans-unit>
        <trans-unit id="b8e4d215a9b1053a82c1c3667c7e83f450b7e535" translate="yes" xml:space="preserve">
          <source>As of April 30th, 2018, Node.js 4 will be at EOL and will no longer be receiving security updates. As a result, we have decided to drop support for it in ESLint v5. We now support the following versions of Node.js:</source>
          <target state="translated">С 30 апреля 2018 года Node.js 4 будет в EOL и больше не будет получать обновления безопасности.В результате мы решили отказаться от его поддержки в ESLint v5.Теперь мы поддерживаем следующие версии Node.js:</target>
        </trans-unit>
        <trans-unit id="639737c9a0fcdaaf4de4d62a4eb3832bf70ec145" translate="yes" xml:space="preserve">
          <source>As of the ECMAScript 5 specification, octal escape sequences in string literals are deprecated and should not be used. Unicode escape sequences should be used instead.</source>
          <target state="translated">Начиная со спецификации ECMAScript 5,восьмеричные экранирующие последовательности в строковых литералах устаревают и не должны использоваться.Вместо этого следует использовать экранирующие юникодовые последовательности.</target>
        </trans-unit>
        <trans-unit id="e5f796d7f3a3af24d75131206d0abc1c2fc320e4" translate="yes" xml:space="preserve">
          <source>As of today there is no consistency in separating variable declarations from the rest of the code. Some developers leave an empty line between var statements and the rest of the code like:</source>
          <target state="translated">На сегодняшний день нет последовательности в отделении деклараций переменных от остального кода.Некоторые разработчики оставляют пустую строку между операторами var и остальным кодом как есть:</target>
        </trans-unit>
        <trans-unit id="919575f3efa6c0f02be94e623198fe4b3f3858de" translate="yes" xml:space="preserve">
          <source>As with other operators, whitespace is allowed between the rest or spread operator and the expression it is operating on, which can lead to inconsistent spacing within a codebase.</source>
          <target state="translated">Как и в случае с другими операторами,допускается использование пробела между остальным оператором или оператором спреда и выражением,над которым он работает,что может привести к несовместимости расстояний внутри кодовой базы.</target>
        </trans-unit>
        <trans-unit id="dcc322d290b8282a3ec6a0dcc7758c4cf606caee" translate="yes" xml:space="preserve">
          <source>Assignment to variables declared as function parameters can be misleading and lead to confusing behavior, as modifying function parameters will also mutate the &lt;code&gt;arguments&lt;/code&gt; object. Often, assignment to function parameters is unintended and indicative of a mistake or programmer error.</source>
          <target state="translated">Присвоение переменных, объявленных как параметры функции, может вводить в заблуждение и приводить к запутанному поведению, так как изменение параметров функции также приведет к изменению объекта &lt;code&gt;arguments&lt;/code&gt; . Часто назначение параметров функции является непреднамеренным и указывает на ошибку или ошибку программиста.</target>
        </trans-unit>
        <trans-unit id="057d58c74d80136578cabbeee1b89206c3250bd4" translate="yes" xml:space="preserve">
          <source>Assignments</source>
          <target state="translated">Assignments</target>
        </trans-unit>
        <trans-unit id="5b6a96371479cd831de3c86df48d3f84797d4f2d" translate="yes" xml:space="preserve">
          <source>Asynchronous functions are designed to work with promises such that throwing an error will cause a promise's rejection handler (such as &lt;code&gt;catch()&lt;/code&gt;) to be called. For example:</source>
          <target state="translated">Асинхронные функции предназначены для работы с обещаниями, так что при возникновении ошибки вызывается обработчик отклонения обещания (например, &lt;code&gt;catch()&lt;/code&gt; ). Например:</target>
        </trans-unit>
        <trans-unit id="5d9edce612edcef785910f3d8c06b7cc17be832d" translate="yes" xml:space="preserve">
          <source>Asynchronous functions in JavaScript behave differently than other functions in two important ways:</source>
          <target state="translated">Асинхронные функции в JavaScript ведут себя иначе,чем другие функции,двумя важными способами:</target>
        </trans-unit>
        <trans-unit id="d07b283087747dcb783d2c5638a96fb74be3a055" translate="yes" xml:space="preserve">
          <source>Asynchronous functions that don't use &lt;code&gt;await&lt;/code&gt; might not need to be asynchronous functions and could be the unintentional result of refactoring.</source>
          <target state="translated">Асинхронные функции, которые не используют &lt;code&gt;await&lt;/code&gt; , могут не быть асинхронными функциями и могут быть непреднамеренным результатом рефакторинга.</target>
        </trans-unit>
        <trans-unit id="495cf70b3cb0e5d5ab7aca92fdf16ff61b730e2a" translate="yes" xml:space="preserve">
          <source>At a high level, there are a few key parts to ESLint:</source>
          <target state="translated">На высоком уровне,есть несколько ключевых частей ESLint:</target>
        </trans-unit>
        <trans-unit id="621a7b37086b2293090e367d567f731b096f33e9" translate="yes" xml:space="preserve">
          <source>At least one pattern that should &lt;strong&gt;not&lt;/strong&gt; be flagged as a warning.</source>
          <target state="translated">По крайней мере, один шаблон, который &lt;strong&gt;не&lt;/strong&gt; следует отмечать как предупреждение.</target>
        </trans-unit>
        <trans-unit id="ceaa0640f64b301c62702fc1f3dbd78d5989a7d3" translate="yes" xml:space="preserve">
          <source>At the end of a line, describing the code before it.</source>
          <target state="translated">В конце строки,описывая код перед ним.</target>
        </trans-unit>
        <trans-unit id="72ebf06181ae179602daa4a6f7199df15311cc04" translate="yes" xml:space="preserve">
          <source>Atom: &lt;a href=&quot;https://atom.io/packages/linter-eslint&quot;&gt;linter-eslint&lt;/a&gt;</source>
          <target state="translated">Атом: &lt;a href=&quot;https://atom.io/packages/linter-eslint&quot;&gt;линтер-эслинт&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="abe4bd9fe57b0bcc1427ef624d7c93cec300a520" translate="yes" xml:space="preserve">
          <source>Autofix</source>
          <target state="translated">Autofix</target>
        </trans-unit>
        <trans-unit id="d4cddfb1d29a73864682c265654bb0f2ef5476d3" translate="yes" xml:space="preserve">
          <source>Avoid any fixes that could change the runtime behavior of code and cause it to stop working.</source>
          <target state="translated">Избегайте любых исправлений,которые могли бы изменить поведение кода во время выполнения и заставить его перестать работать.</target>
        </trans-unit>
        <trans-unit id="306c84fc19df225b2358435f3ea8025274a539d7" translate="yes" xml:space="preserve">
          <source>BackboneJS</source>
          <target state="translated">BackboneJS</target>
        </trans-unit>
        <trans-unit id="29f6864f9d968127a39d6137bd517abb38085639" translate="yes" xml:space="preserve">
          <source>Bad Parts: Appendix B - JavaScript: The Good Parts by Douglas Crockford</source>
          <target state="translated">Плохие части:Приложение Б-JavaScript:Хорошие части от Дугласа Крокфорда</target>
        </trans-unit>
        <trans-unit id="9d235dc23d56ee7523bf4a3040b040809b5d9d05" translate="yes" xml:space="preserve">
          <source>Bad names can lead to hard-to-decipher code. Generic names, such as &lt;code&gt;data&lt;/code&gt;, don't infer much about the code and the values it receives. This rule allows you to configure a blacklist of bad identifier names, that you don't want to see in your code.</source>
          <target state="translated">Плохие имена могут привести к тому, что код будет трудно расшифровать. Общие имена, такие как &lt;code&gt;data&lt;/code&gt; , мало что говорят о коде и получаемых им значениях. Это правило позволяет вам настроить черный список имен неверных идентификаторов, которые вы не хотите видеть в своем коде.</target>
        </trans-unit>
        <trans-unit id="45e3efa2edac0571ee67321d4540c6b50542b0b5" translate="yes" xml:space="preserve">
          <source>Balancing the trade-offs of improving a tool and the frustration these changes can cause is a difficult task. One key area in which this affects our users is in the removal of rules.</source>
          <target state="translated">Сбалансировать компромиссы,связанные с улучшением инструмента,и разочарование,которое могут вызвать эти изменения,является сложной задачей.Одной из ключевых областей,в которой это влияет на наших пользователей,является удаление правил.</target>
        </trans-unit>
        <trans-unit id="0a6c27b74b2f0cc0a381a8c3c2e72f8e524c139f" translate="yes" xml:space="preserve">
          <source>Base config: &lt;code&gt;&quot;eqeqeq&quot;: [&quot;error&quot;, &quot;allow-null&quot;]&lt;/code&gt;</source>
          <target state="translated">Базовая конфигурация: &lt;code&gt;&quot;eqeqeq&quot;: [&quot;error&quot;, &quot;allow-null&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9860705f28896b947024df2984725f09dd6c922e" translate="yes" xml:space="preserve">
          <source>Base config: &lt;code&gt;&quot;quotes&quot;: [&quot;error&quot;, &quot;single&quot;, &quot;avoid-escape&quot;]&lt;/code&gt;</source>
          <target state="translated">Базовая конфигурация: &lt;code&gt;&quot;quotes&quot;: [&quot;error&quot;, &quot;single&quot;, &quot;avoid-escape&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36c41688b96ebca8546b978b079367e1aa359e74" translate="yes" xml:space="preserve">
          <source>Basic configuration</source>
          <target state="translated">Базовая конфигурация</target>
        </trans-unit>
        <trans-unit id="01687ec15ad6446d986f944c334f8c817b38eb6c" translate="yes" xml:space="preserve">
          <source>Basically, this rule checks whether or not a function containing &lt;code&gt;this&lt;/code&gt; keyword is a constructor or a method.</source>
          <target state="translated">По сути, это правило проверяет, является ли функция, содержащая &lt;code&gt;this&lt;/code&gt; ключевое слово, конструктором или методом.</target>
        </trans-unit>
        <trans-unit id="af7d13a9632df81e6cb39ca5e79cc4662290eec7" translate="yes" xml:space="preserve">
          <source>Be general enough so as to apply for a large number of developers.</source>
          <target state="translated">Будьте достаточно общими,чтобы подать заявку большому количеству разработчиков.</target>
        </trans-unit>
        <trans-unit id="79bbf1337c47348353685759495b7a45014d286e" translate="yes" xml:space="preserve">
          <source>Be important enough that rule is deemed incomplete without this change</source>
          <target state="translated">Будьте достаточно важны,чтобы правило считалось неполным без этого изменения.</target>
        </trans-unit>
        <trans-unit id="5a54350365702eabd89e1fe99647f988f3033e85" translate="yes" xml:space="preserve">
          <source>Be related to an ECMAScript feature that has reached stage 4 in the preceding 12 months</source>
          <target state="translated">Быть связанным с функцией ECMAScript,которая за последние 12 месяцев достигла 4-й стадии.</target>
        </trans-unit>
        <trans-unit id="f4b55e25ea090a046d084a971240dfd3507ebe89" translate="yes" xml:space="preserve">
          <source>Be sure to replace &lt;code&gt;eslint-config-myconfig&lt;/code&gt; with the actual name of your module.</source>
          <target state="translated">Обязательно замените &lt;code&gt;eslint-config-myconfig&lt;/code&gt; фактическим именем вашего модуля.</target>
        </trans-unit>
        <trans-unit id="1ea22322c908aaf33db86bfe16cff237c8212ad5" translate="yes" xml:space="preserve">
          <source>Be sure to replace the value of &lt;code&gt;&quot;no-with&quot;&lt;/code&gt; with your rule's ID. There are plenty of examples in the &lt;code&gt;tests/lib/rules/&lt;/code&gt; directory.</source>
          <target state="translated">Обязательно замените значение &lt;code&gt;&quot;no-with&quot;&lt;/code&gt; на идентификатор вашего правила. В каталоге &lt;code&gt;tests/lib/rules/&lt;/code&gt; есть множество примеров .</target>
        </trans-unit>
        <trans-unit id="18aedaaa28198e2a59dec8437406e3c102dd1605" translate="yes" xml:space="preserve">
          <source>Be sure to run this after making changes and before sending a pull request with your changes.</source>
          <target state="translated">Обязательно выполните это после внесения изменений и перед отправкой запроса на подтягивание с вашими изменениями.</target>
        </trans-unit>
        <trans-unit id="51bc61c6b074f9a10af3f6c5c9591384318e3d81" translate="yes" xml:space="preserve">
          <source>Be very important for ESLint users because it either catches a serious problem or allows styling of code in accordance with a popular style guide</source>
          <target state="translated">Будьте очень важны для пользователей ESLint,потому что она либо поймает серьезную проблему,либо позволит стилизовать код в соответствии с популярным руководством по стилю.</target>
        </trans-unit>
        <trans-unit id="810e6eb159bb09246263948760aa70f2100cfe2c" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;NaN&lt;/code&gt; is unique in JavaScript by not being equal to anything, including itself, the results of comparisons to &lt;code&gt;NaN&lt;/code&gt; are confusing:</source>
          <target state="translated">Поскольку &lt;code&gt;NaN&lt;/code&gt; уникален в JavaScript, поскольку не равен чему-либо, в том числе самому себе, результаты сравнения с &lt;code&gt;NaN&lt;/code&gt; сбивают с толку:</target>
        </trans-unit>
        <trans-unit id="5df824196b86c8adee95b01269bc5eeb40dedbe4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;let a&lt;/code&gt; and &lt;code&gt;let b&lt;/code&gt; in the &lt;code&gt;if&lt;/code&gt; statement are before the declarations in the outer scope, they are correct.</source>
          <target state="translated">Поскольку &lt;code&gt;let a&lt;/code&gt; и &lt;code&gt;let b&lt;/code&gt; в операторе &lt;code&gt;if&lt;/code&gt; находятся перед объявлениями во внешней области видимости, они верны.</target>
        </trans-unit>
        <trans-unit id="5f0497ce3d58dfa25f479c41ca69d85c12b0f4d4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;let a&lt;/code&gt; in the &lt;code&gt;if&lt;/code&gt; statement is before the &lt;em&gt;variable&lt;/em&gt; declaration in the outer scope, it is correct.</source>
          <target state="translated">Поскольку &lt;code&gt;let a&lt;/code&gt; в операторе &lt;code&gt;if&lt;/code&gt; перед объявлением &lt;em&gt;переменной&lt;/em&gt; во внешней области видимости, это правильно.</target>
        </trans-unit>
        <trans-unit id="01b065ee83f0fe8d1c0b2ce8c11b0d2e7f30c46b" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;undefined&lt;/code&gt; can be overwritten or shadowed, reading &lt;code&gt;undefined&lt;/code&gt; can give an unexpected value. (This is not the case for &lt;code&gt;null&lt;/code&gt;, which is a keyword that always produces the same value.) To guard against this, you can avoid all uses of &lt;code&gt;undefined&lt;/code&gt;, which is what some style guides recommend and what this rule enforces. Those style guides then also recommend:</source>
          <target state="translated">Поскольку &lt;code&gt;undefined&lt;/code&gt; может быть перезаписано или затенено, чтение &lt;code&gt;undefined&lt;/code&gt; может дать неожиданное значение. (Это не относится к &lt;code&gt;null&lt;/code&gt; , которое является ключевым словом, которое всегда дает одно и то же значение.) Чтобы избежать этого, вы можете избежать любого использования &lt;code&gt;undefined&lt;/code&gt; , что рекомендуется некоторыми руководствами по стилю и что это правило обеспечивает. Эти руководства по стилю также рекомендуют:</target>
        </trans-unit>
        <trans-unit id="8a6961b1fc4ead961a35ac6fe169d9c4f639c4f8" translate="yes" xml:space="preserve">
          <source>Because ESLint knows to look for packages beginning with &lt;code&gt;eslint-formatter-&lt;/code&gt; when the specified formatter doesn't begin with a dot, there is no need to type &lt;code&gt;eslint-formatter-&lt;/code&gt; when using a packaged custom formatter.</source>
          <target state="translated">Поскольку ESLint знает, что нужно искать пакеты, начинающиеся с &lt;code&gt;eslint-formatter-&lt;/code&gt; когда указанное средство форматирования не начинается с точки, нет необходимости вводить &lt;code&gt;eslint-formatter-&lt;/code&gt; при использовании упакованного настраиваемого средства форматирования.</target>
        </trans-unit>
        <trans-unit id="4fc7dc53a3528436b27976bf4104d8d5429b3eba" translate="yes" xml:space="preserve">
          <source>Because empty character classes in regular expressions do not match anything, they might be typing mistakes.</source>
          <target state="translated">Так как пустые классы символов в регулярных выражениях ничего не совпадают,они могут ошибаться при вводе.</target>
        </trans-unit>
        <trans-unit id="193c90e929807d2fbef26a901a7c3ae14756f0af" translate="yes" xml:space="preserve">
          <source>Because it is difficult to understand the meaning of a program through static analysis, this rule has limitations:</source>
          <target state="translated">Поскольку через статический анализ трудно понять смысл программы,то данное правило имеет ограничения:</target>
        </trans-unit>
        <trans-unit id="fa8356d791c997a2386c33d523d57552d8123e0b" translate="yes" xml:space="preserve">
          <source>Because of historical reason, JavaScript regular expressions are tolerant of syntax errors. For example, &lt;code&gt;/\w{1, 2/&lt;/code&gt; is a syntax error, but JavaScript doesn't throw the error. It matches strings such as &lt;code&gt;&quot;a{1, 2&quot;&lt;/code&gt; instead. Such a recovering logic is defined in Annex B.</source>
          <target state="translated">По историческим причинам регулярные выражения JavaScript допускают синтаксические ошибки. Например, &lt;code&gt;/\w{1, 2/&lt;/code&gt; - это синтаксическая ошибка, но JavaScript не выдает ошибку. Вместо этого он соответствует таким строкам, как &lt;code&gt;&quot;a{1, 2&quot;&lt;/code&gt; . Такая логика восстановления определена в Приложении B.</target>
        </trans-unit>
        <trans-unit id="829485c20f3847468a65057a424a82114baf209a" translate="yes" xml:space="preserve">
          <source>Because of this ambiguity, it's considered a best practice to not use assignment in &lt;code&gt;return&lt;/code&gt; statements.</source>
          <target state="translated">Из-за этой двусмысленности рекомендуется не использовать присваивание в операторах &lt;code&gt;return&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bdcdf38242a7e8f4d4fcd5fc5368730a95fbd82" translate="yes" xml:space="preserve">
          <source>Because of this line, all of the rules marked &quot;&quot; on the &lt;a href=&quot;https://eslint.org/docs/rules&quot;&gt;rules page&lt;/a&gt; will be turned on. Alternatively, you can use configurations that others have created by searching for &quot;eslint-config&quot; on &lt;a href=&quot;https://www.npmjs.com/search?q=eslint-config&quot;&gt;npmjs.com&lt;/a&gt;. ESLint will not lint your code unless you extend from a shared configuration or explicitly turn rules on in your configuration.</source>
          <target state="translated">Благодаря этой строке будут включены все правила, отмеченные &quot;&quot; на &lt;a href=&quot;https://eslint.org/docs/rules&quot;&gt;странице правил&lt;/a&gt; . Кроме того, вы можете использовать конфигурации, созданные другими пользователями, выполнив поиск по запросу &amp;laquo;eslint-config&amp;raquo; на &lt;a href=&quot;https://www.npmjs.com/search?q=eslint-config&quot;&gt;npmjs.com&lt;/a&gt; . ESLint не будет линтовать ваш код, если вы не расширите общую конфигурацию или явно не включите правила в вашей конфигурации.</target>
        </trans-unit>
        <trans-unit id="c58cd425c976939ecd82b2995c639212a60ad578" translate="yes" xml:space="preserve">
          <source>Because rules are highly personal (and therefore very contentious), accepted rules should:</source>
          <target state="translated">Поскольку правила являются очень личными (и поэтому очень спорными),принятые правила должны быть:</target>
        </trans-unit>
        <trans-unit id="54ee4e3ecc629da796061aa811a204b0d0ede953" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, and &lt;code&gt;continue&lt;/code&gt; statements unconditionally exit a block of code, any statements after them cannot be executed. Unreachable statements are usually a mistake.</source>
          <target state="translated">Поскольку операторы &lt;code&gt;return&lt;/code&gt; , &lt;code&gt;throw&lt;/code&gt; , &lt;code&gt;break&lt;/code&gt; и &lt;code&gt;continue&lt;/code&gt; безоговорочно завершают блок кода, любые операторы после них не могут быть выполнены. Недостижимые утверждения обычно являются ошибкой.</target>
        </trans-unit>
        <trans-unit id="96acc830fffba196b06148e83e6c35be6a3547ca" translate="yes" xml:space="preserve">
          <source>Because the default formatter does not output the fixed code, you'll have to use another one (e.g. &lt;code&gt;json&lt;/code&gt;) to get the fixes. Here's an example of this pattern:</source>
          <target state="translated">Поскольку модуль форматирования по умолчанию не выводит фиксированный код, вам придется использовать другой код (например, &lt;code&gt;json&lt;/code&gt; ), чтобы получить исправления. Вот пример этого паттерна:</target>
        </trans-unit>
        <trans-unit id="2268244767d0a8979d97ea56564f6062501bc559" translate="yes" xml:space="preserve">
          <source>Because the leading zero which identifies an octal literal has been a source of confusion and error in JavaScript code, ECMAScript 5 deprecates the use of octal numeric literals.</source>
          <target state="translated">Поскольку ведущий ноль,идентифицирующий восьмеричный литерал,является источником путаницы и ошибки в коде JavaScript,ECMAScript 5 отменяет использование восьмеричных числовых литералов.</target>
        </trans-unit>
        <trans-unit id="8c82248abc6dfee06debb73cfce89a8e4f795a1b" translate="yes" xml:space="preserve">
          <source>Because the unary &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt; operators are subject to automatic semicolon insertion, differences in whitespace can change semantics of source code.</source>
          <target state="translated">Поскольку унарные операторы &lt;code&gt;++&lt;/code&gt; и &lt;code&gt;--&lt;/code&gt; автоматически вставляются точкой с запятой, различия в пробелах могут изменить семантику исходного кода.</target>
        </trans-unit>
        <trans-unit id="f604fe978a15911ed565d1015ff35e244c161a38" translate="yes" xml:space="preserve">
          <source>Before ES2015, one must use &lt;code&gt;Function.prototype.apply()&lt;/code&gt; to call variadic functions.</source>
          <target state="translated">До ES2015 нужно было использовать &lt;code&gt;Function.prototype.apply()&lt;/code&gt; для вызова вариативных функций.</target>
        </trans-unit>
        <trans-unit id="04d85842fb0b6614fec5658d9178bccc19435047" translate="yes" xml:space="preserve">
          <source>Before a multi-line or single-line comment</source>
          <target state="translated">Перед многострочным или однострочным комментарием</target>
        </trans-unit>
        <trans-unit id="6a8fc4a82c425da02c6e46947503f16797bbd31e" translate="yes" xml:space="preserve">
          <source>Before beginning the process of migrating to ESLint, it's helpful to understand some of the terminology that ESLint uses and how it relates to terminology that JSCS uses.</source>
          <target state="translated">Прежде чем начать процесс перехода на ESLint,полезно понять,какую терминологию использует ESLint и как она соотносится с терминологией,используемой АО&quot;.</target>
        </trans-unit>
        <trans-unit id="793c8c352b760ab25f360bc8326c9bc71cd0b225" translate="yes" xml:space="preserve">
          <source>Before using the plugin, you have to install it using npm.</source>
          <target state="translated">Перед использованием плагина необходимо установить его с помощью npm.</target>
        </trans-unit>
        <trans-unit id="6e511de50956811edeb578d59a0804fbfbe8dea8" translate="yes" xml:space="preserve">
          <source>Before you can get started developing, you'll need to have a couple of things installed:</source>
          <target state="translated">Перед тем,как начать разработку,вам нужно будет установить пару вещей:</target>
        </trans-unit>
        <trans-unit id="0130cfac353bfd32d8fda0c8f1e2c0f0eea17e6d" translate="yes" xml:space="preserve">
          <source>Before you can get started, you'll need to get a copy of the ESLint source code. This section explains how to do that and a little about the source code structure.</source>
          <target state="translated">Перед тем,как приступить к работе,необходимо получить копию исходного кода ESLint.В этом разделе объясняется,как это сделать,и немного о структуре исходного кода.</target>
        </trans-unit>
        <trans-unit id="995b6b46a3656fa3fd0e18ff29db167a9a0ad968" translate="yes" xml:space="preserve">
          <source>Before you send the pull request, be sure to rebase onto the upstream source. This ensures your code is running on the latest available code.</source>
          <target state="translated">Перед отправкой запроса на подтягивание убедитесь в том,что вы выполнили перезагрузку на источник,находящийся выше по течению.Это гарантирует,что ваш код будет работать на самом последнем доступном коде.</target>
        </trans-unit>
        <trans-unit id="992e83579bc6ea6859e6f627be4f4eab97b057be" translate="yes" xml:space="preserve">
          <source>Behind the scenes in this example, a &lt;code&gt;String&lt;/code&gt; object is constructed. The &lt;code&gt;substring()&lt;/code&gt; method exists on &lt;code&gt;String.prototype&lt;/code&gt; and so is accessible to the string instance.</source>
          <target state="translated">В этом примере за кулисами создается объект &lt;code&gt;String&lt;/code&gt; . Метод &lt;code&gt;substring()&lt;/code&gt; существует в &lt;code&gt;String.prototype&lt;/code&gt; и поэтому доступен для экземпляра строки.</target>
        </trans-unit>
        <trans-unit id="36de90e22d47f94d755a4b1bb70aaddc1bb47593" translate="yes" xml:space="preserve">
          <source>Best Practices</source>
          <target state="translated">Лучшие практики</target>
        </trans-unit>
        <trans-unit id="338ee79beaaaf18126ed94b8ed03f554024e0cfd" translate="yes" xml:space="preserve">
          <source>Best practices for fixes:</source>
          <target state="translated">Лучшая практика для исправлений:</target>
        </trans-unit>
        <trans-unit id="adf5c01b97b20119b71324bd7d7da5f8f31c07c4" translate="yes" xml:space="preserve">
          <source>Best practices for suggestions:</source>
          <target state="translated">Передовая практика для предложений:</target>
        </trans-unit>
        <trans-unit id="4386a3199d49f37540036167c2bb082a887d89c5" translate="yes" xml:space="preserve">
          <source>Between class and interface definitions</source>
          <target state="translated">Между определениями классов и интерфейсов</target>
        </trans-unit>
        <trans-unit id="e4f1e78655d2e55a66e32e73e443e9bfa69aad3b" translate="yes" xml:space="preserve">
          <source>Between logical sections inside a method to improve readability</source>
          <target state="translated">Между логическими разделами внутри метода для улучшения читабельности</target>
        </trans-unit>
        <trans-unit id="6d933ad8020c5b55ee20e6d8689eedf9c5360026" translate="yes" xml:space="preserve">
          <source>Between methods</source>
          <target state="translated">Между методами</target>
        </trans-unit>
        <trans-unit id="ef7e5a6d3249c554a4ce807b393edf17264edfd6" translate="yes" xml:space="preserve">
          <source>Between sections of a source file</source>
          <target state="translated">Между разделами исходного файла</target>
        </trans-unit>
        <trans-unit id="c6cc8a57f3e58d7cd4de8dbcbc697d3180b54db0" translate="yes" xml:space="preserve">
          <source>Between the local variables in a method and its first statement</source>
          <target state="translated">Между локальными переменными в методе и его первым утверждением</target>
        </trans-unit>
        <trans-unit id="bbf1b9521b28972220cbf79325e2c20617b6b053" translate="yes" xml:space="preserve">
          <source>Bitwise Operators: &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt;, &lt;code&gt;&quot;|&quot;&lt;/code&gt;, &lt;code&gt;&quot;^&quot;&lt;/code&gt;, &lt;code&gt;&quot;~&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;lt;&amp;lt;&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">Побитовые операторы: &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; , &lt;code&gt;&quot;|&quot;&lt;/code&gt; , &lt;code&gt;&quot;^&quot;&lt;/code&gt; , &lt;code&gt;&quot;~&quot;&lt;/code&gt; , &lt;code&gt;&quot;&amp;lt;&amp;lt;&quot;&lt;/code&gt; , &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt; , &lt;code&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e13b68b58d811fab318ca729a8f17b37d477b3d3" translate="yes" xml:space="preserve">
          <source>Blank lines improve readability by setting off sections of code that are logically related.</source>
          <target state="translated">Пустые строки улучшают читабельность,устанавливая фрагменты кода,логически связанные между собой.</target>
        </trans-unit>
        <trans-unit id="8cd96bd62f5564682b84ba6192bf191b1be28b43" translate="yes" xml:space="preserve">
          <source>Blank spaces should be used in the following circumstances:</source>
          <target state="translated">Пустые пространства следует использовать при следующих обстоятельствах:</target>
        </trans-unit>
        <trans-unit id="81e3cc1d3b5e5b1c0ad4b801e19204c1fb3921fc" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;path.join()&lt;/code&gt; and &lt;code&gt;path.resolve()&lt;/code&gt; are suitable replacements for string concatenation wherever file or directory paths are being created.</source>
          <target state="translated">И &lt;code&gt;path.join()&lt;/code&gt; и &lt;code&gt;path.resolve()&lt;/code&gt; являются подходящими заменами для конкатенации строк везде, где создаются пути к файлам или каталогам.</target>
        </trans-unit>
        <trans-unit id="fc21e1e88cd5040eb200959e21d74c582122508b" translate="yes" xml:space="preserve">
          <source>Both JSCS and ESLint have command line arguments corresponding to many of their configuration options. The following are the ESLint equivalents of JSCS command line options.</source>
          <target state="translated">Как АОБ,так и ESLint имеют аргументы командной строки,соответствующие многим параметрам их конфигурации.Ниже приведены эквиваленты ESLint опций командной строки АОБ.</target>
        </trans-unit>
        <trans-unit id="097359be4adea4dcbabe6e8d3e40261ed26fa3b4" translate="yes" xml:space="preserve">
          <source>Both JSCS and ESLint use comments inside of files to disable rules around certain parts of your code. The following table lists out the JSCS inline configuration comments and their ESLint equivalents.</source>
          <target state="translated">И АОБ,и ESLint используют комментарии внутри файлов для отключения правил,касающихся определенных частей Вашего кода.В следующей таблице приведены встроенные комментарии к конфигурации АО&quot; и их эквиваленты ESLint.</target>
        </trans-unit>
        <trans-unit id="fcd59eef72f9e0322f0828949f6c01aa1aa8058e" translate="yes" xml:space="preserve">
          <source>Both flags are also supported by ESLint:</source>
          <target state="translated">Оба флага также поддерживаются ESLint:</target>
        </trans-unit>
        <trans-unit id="7eb400d0db2fc241e32273e1dc9da88bebb4f838" translate="yes" xml:space="preserve">
          <source>Both the JSON and YAML configuration file formats support comments (&lt;code&gt;package.json&lt;/code&gt; files should not include them). You can use JavaScript-style comments or YAML-style comments in either type of file and ESLint will safely ignore them. This allows your configuration files to be more human-friendly. For example:</source>
          <target state="translated">Оба формата файла конфигурации JSON и YAML поддерживают комментарии ( файлы &lt;code&gt;package.json&lt;/code&gt; не должны включать их). Вы можете использовать комментарии в стиле JavaScript или комментарии в стиле YAML в любом типе файла, и ESLint будет их игнорировать. Это позволяет сделать ваши файлы конфигурации более удобными для человека. Например:</target>
        </trans-unit>
        <trans-unit id="7ca62df9fb4211495bebeb6ed476dbf24104a6bf" translate="yes" xml:space="preserve">
          <source>Brace style is closely related to &lt;a href=&quot;https://en.wikipedia.org/wiki/Indent_style&quot;&gt;indent style&lt;/a&gt; in programming and describes the placement of braces relative to their control statement and body. There are probably a dozen, if not more, brace styles in the world.</source>
          <target state="translated">Стиль фигурных скобок тесно связан со &lt;a href=&quot;https://en.wikipedia.org/wiki/Indent_style&quot;&gt;стилем отступов&lt;/a&gt; в программировании и описывает размещение фигурных скобок относительно их управляющего оператора и тела. В мире существует, вероятно, дюжина, если не больше стилей брекетов.</target>
        </trans-unit>
        <trans-unit id="e376515dc59aa7f7420b054f55c95a72840be55b" translate="yes" xml:space="preserve">
          <source>Braces are used around all statements, even single statements, when they are part of a control structure, such as a &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;for&lt;/code&gt; statement. This makes it easier to add statements without accidentally introducing bugs due to forgetting to add braces.</source>
          <target state="translated">Фигурные скобки используются вокруг всех операторов, даже отдельных операторов, когда они являются частью управляющей структуры, такой как оператор &lt;code&gt;if&lt;/code&gt; или &lt;code&gt;for&lt;/code&gt; . Это упрощает добавление операторов без случайного внесения ошибок из-за того, что вы забыли добавить фигурные скобки.</target>
        </trans-unit>
        <trans-unit id="6530074f50b1f9635a7588144e97521fd80531e4" translate="yes" xml:space="preserve">
          <source>Brackets: Included and &lt;a href=&quot;https://github.com/brackets-userland/brackets-eslint&quot;&gt;Brackets ESLint&lt;/a&gt;</source>
          <target state="translated">Кронштейны: в комплекте и &lt;a href=&quot;https://github.com/brackets-userland/brackets-eslint&quot;&gt;кронштейны ESLint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="340cf97750d96a23ba91ddb2d90b8154b27637af" translate="yes" xml:space="preserve">
          <source>Breaking changes for integration developers</source>
          <target state="translated">Разрушающие изменения для разработчиков интеграционных решений</target>
        </trans-unit>
        <trans-unit id="79e8db2e0b61dbfeb71d434b83b7fdf1e8353e53" translate="yes" xml:space="preserve">
          <source>Breaking changes for plugin/custom rule developers</source>
          <target state="translated">Нарушение изменений для разработчиков правил плагина/клиента</target>
        </trans-unit>
        <trans-unit id="0fbc2bcadf39845db18cc44b3b7cc8416c784aea" translate="yes" xml:space="preserve">
          <source>Breaking changes for users</source>
          <target state="translated">Изменения для пользователей</target>
        </trans-unit>
        <trans-unit id="18e01f9cc8e37b9339253d5f02203a453a4b8b23" translate="yes" xml:space="preserve">
          <source>Broccoli: &lt;a href=&quot;https://www.npmjs.com/package/broccoli-eslint&quot;&gt;broccoli-eslint&lt;/a&gt;</source>
          <target state="translated">Брокколи: &lt;a href=&quot;https://www.npmjs.com/package/broccoli-eslint&quot;&gt;брокколи-эслинт&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77fdd4bc652997ceee49d1ddc76041c440aafb4d" translate="yes" xml:space="preserve">
          <source>Browser-specific code is necessary but not obvious.</source>
          <target state="translated">Код,специфичный для браузера,необходим,но не очевиден.</target>
        </trans-unit>
        <trans-unit id="13842e2cda464c6e5b2211b8fc003ba47776341d" translate="yes" xml:space="preserve">
          <source>Browserify: &lt;a href=&quot;https://www.npmjs.com/package/eslintify&quot;&gt;eslintify&lt;/a&gt;</source>
          <target state="translated">Browserify: &lt;a href=&quot;https://www.npmjs.com/package/eslintify&quot;&gt;eslintify&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba1c2edbe22a1404f5105d58fea00b02f1cef470" translate="yes" xml:space="preserve">
          <source>Brunch: &lt;a href=&quot;https://www.npmjs.com/package/eslint-brunch&quot;&gt;eslint-brunch&lt;/a&gt;</source>
          <target state="translated">Бранч: &lt;a href=&quot;https://www.npmjs.com/package/eslint-brunch&quot;&gt;еслинт-бранч&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ad4810417150ac15e14a03f28bd425d2a3d5e0b" translate="yes" xml:space="preserve">
          <source>Buffer API documentation</source>
          <target state="translated">Документация по буферному API</target>
        </trans-unit>
        <trans-unit id="2c2ba055cfeabd97664f95c9afa9c9b3b42743eb" translate="yes" xml:space="preserve">
          <source>Buffer(number) is unsafe</source>
          <target state="translated">Буфер(номер)небезопасен</target>
        </trans-unit>
        <trans-unit id="cb16822f3ab4a4b7c7befbf6b7a12d0f7072950e" translate="yes" xml:space="preserve">
          <source>Bug Reporting</source>
          <target state="translated">Сообщение об ошибках</target>
        </trans-unit>
        <trans-unit id="dec3feb7fd8b128570af46d194a8fd5cfea9b359" translate="yes" xml:space="preserve">
          <source>Build Next</source>
          <target state="translated">Строить дальше</target>
        </trans-unit>
        <trans-unit id="822264b557dcda455c20fd570787ede9d1be28be" translate="yes" xml:space="preserve">
          <source>Build Scripts</source>
          <target state="translated">Строить скрипты</target>
        </trans-unit>
        <trans-unit id="2764e7dc64a6afa8f6572a70be9cc2ef88d207b2" translate="yes" xml:space="preserve">
          <source>Build tools</source>
          <target state="translated">Строить инструменты</target>
        </trans-unit>
        <trans-unit id="2d3d56e9ff9b13595d5908c502bfb869204bdf51" translate="yes" xml:space="preserve">
          <source>Built-In Global Variables</source>
          <target state="translated">Встроенные глобальные переменные</target>
        </trans-unit>
        <trans-unit id="d23289056db225350425b91c74287655e2695db4" translate="yes" xml:space="preserve">
          <source>But the modification is a mistake in most cases.</source>
          <target state="translated">Но в большинстве случаев модификация является ошибкой.</target>
        </trans-unit>
        <trans-unit id="c65cb686f365d97cef1431d92333403c589534f2" translate="yes" xml:space="preserve">
          <source>But this one, will only produce one:</source>
          <target state="translated">Но этот,будет производить только один:</target>
        </trans-unit>
        <trans-unit id="2faa4f26619721a43dbbcab57f8867c25e859b14" translate="yes" xml:space="preserve">
          <source>But until 1.x, the following variables and references had the wrong value (empty) in those properties:</source>
          <target state="translated">Но до 1.x следующие переменные и ссылки имели в этих свойствах неправильное (пустое)значение:</target>
        </trans-unit>
        <trans-unit id="a0a6bac896190981738cec1ee713180ff3599d1f" translate="yes" xml:space="preserve">
          <source>By activating the option &lt;code&gt;getWithoutSet&lt;/code&gt; it enforces the presence of a setter for every property which has a getter defined.</source>
          <target state="translated">Активируя опцию &lt;code&gt;getWithoutSet&lt;/code&gt; , он обеспечивает наличие сеттера для каждого свойства, для которого определен геттер.</target>
        </trans-unit>
        <trans-unit id="53edaff02bbaaf04f6f1ca246edc0a309d984524" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;{ &quot;allowNamedFunctions&quot;: false }&lt;/code&gt;, this &lt;code&gt;boolean&lt;/code&gt; option prohibits using named functions as callbacks or function arguments.</source>
          <target state="translated">По умолчанию &lt;code&gt;{ &quot;allowNamedFunctions&quot;: false }&lt;/code&gt; этот &lt;code&gt;boolean&lt;/code&gt; параметр запрещает использование именованных функций в качестве обратных вызовов или аргументов функции.</target>
        </trans-unit>
        <trans-unit id="142bee28961c86e6edb34112baf458575b649ec3" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;{ &quot;allowUnboundThis&quot;: true }&lt;/code&gt;, this &lt;code&gt;boolean&lt;/code&gt; option allows function expressions containing &lt;code&gt;this&lt;/code&gt; to be used as callbacks, as long as the function in question has not been explicitly bound.</source>
          <target state="translated">По умолчанию &lt;code&gt;{ &quot;allowUnboundThis&quot;: true }&lt;/code&gt; , этот &lt;code&gt;boolean&lt;/code&gt; параметр позволяет использовать выражения функций, содержащие &lt;code&gt;this&lt;/code&gt; , в качестве обратных вызовов, если рассматриваемая функция не была явно привязана.</target>
        </trans-unit>
        <trans-unit id="a9064adcb0fa99df7486883b2e36cc34c841823b" translate="yes" xml:space="preserve">
          <source>By default this rule ignores comments starting with the following words: &lt;code&gt;eslint&lt;/code&gt;, &lt;code&gt;jshint&lt;/code&gt;, &lt;code&gt;jslint&lt;/code&gt;, &lt;code&gt;istanbul&lt;/code&gt;, &lt;code&gt;global&lt;/code&gt;, &lt;code&gt;exported&lt;/code&gt;, &lt;code&gt;jscs&lt;/code&gt;, &lt;code&gt;falls through&lt;/code&gt;. An alternative regular expression can be provided.</source>
          <target state="translated">По умолчанию это правило игнорирует комментарии , начинающиеся со следующими словами: &lt;code&gt;eslint&lt;/code&gt; , &lt;code&gt;jshint&lt;/code&gt; , &lt;code&gt;jslint&lt;/code&gt; , &lt;code&gt;istanbul&lt;/code&gt; , &lt;code&gt;global&lt;/code&gt; , &lt;code&gt;exported&lt;/code&gt; , &lt;code&gt;jscs&lt;/code&gt; , &lt;code&gt;falls through&lt;/code&gt; . Может быть предоставлено альтернативное регулярное выражение.</target>
        </trans-unit>
        <trans-unit id="75f81ef36c9ff48cc1d11f83611fc3688316cd07" translate="yes" xml:space="preserve">
          <source>By default this rule ignores comments starting with the following words: &lt;code&gt;eslint&lt;/code&gt;, &lt;code&gt;jshint&lt;/code&gt;, &lt;code&gt;jslint&lt;/code&gt;, &lt;code&gt;istanbul&lt;/code&gt;, &lt;code&gt;global&lt;/code&gt;, &lt;code&gt;exported&lt;/code&gt;, &lt;code&gt;jscs&lt;/code&gt;. An alternative regular expression can be provided.</source>
          <target state="translated">По умолчанию это правило игнорирует комментарии , начинающиеся со следующими словами: &lt;code&gt;eslint&lt;/code&gt; , &lt;code&gt;jshint&lt;/code&gt; , &lt;code&gt;jslint&lt;/code&gt; , &lt;code&gt;istanbul&lt;/code&gt; , &lt;code&gt;global&lt;/code&gt; , &lt;code&gt;exported&lt;/code&gt; , &lt;code&gt;jscs&lt;/code&gt; . Может быть предоставлено альтернативное регулярное выражение.</target>
        </trans-unit>
        <trans-unit id="85f3d7dcb470f23f669e925692e8b09340b505aa" translate="yes" xml:space="preserve">
          <source>By default this rule ignores comments starting with the following words: &lt;code&gt;eslint&lt;/code&gt;, &lt;code&gt;jshint&lt;/code&gt;, &lt;code&gt;jslint&lt;/code&gt;, &lt;code&gt;istanbul&lt;/code&gt;, &lt;code&gt;global&lt;/code&gt;, &lt;code&gt;exported&lt;/code&gt;, &lt;code&gt;jscs&lt;/code&gt;. To ignore more comments in addition to the defaults, set the &lt;code&gt;ignorePattern&lt;/code&gt; option to a string pattern that will be passed to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt; constructor&lt;/a&gt;.</source>
          <target state="translated">По умолчанию это правило игнорирует комментарии , начинающиеся со следующими словами: &lt;code&gt;eslint&lt;/code&gt; , &lt;code&gt;jshint&lt;/code&gt; , &lt;code&gt;jslint&lt;/code&gt; , &lt;code&gt;istanbul&lt;/code&gt; , &lt;code&gt;global&lt;/code&gt; , &lt;code&gt;exported&lt;/code&gt; , &lt;code&gt;jscs&lt;/code&gt; . Чтобы игнорировать другие комментарии в дополнение к значениям по умолчанию, установите для параметра &lt;code&gt;ignorePattern&lt;/code&gt; шаблон строки, который будет передан &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp&quot;&gt;конструктору &lt;/a&gt; &lt;code&gt;RegExp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b090fa11c439d6a006cf50f9adb2d2cad2b33cde" translate="yes" xml:space="preserve">
          <source>By default this rule is enabled with &lt;code&gt;all&lt;/code&gt; option for variables and &lt;code&gt;after-used&lt;/code&gt; for arguments.</source>
          <target state="translated">По умолчанию это правило включено со &lt;code&gt;all&lt;/code&gt; параметрами для переменных и &lt;code&gt;after-used&lt;/code&gt; для аргументов.</target>
        </trans-unit>
        <trans-unit id="810c57ecacff43e1120c95269231677bb6903a5a" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;&quot;always&quot;&lt;/code&gt; does not allow newlines. To permit newlines when in &lt;code&gt;&quot;always&quot;&lt;/code&gt; mode, set the &lt;code&gt;allowNewlines&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;. Newlines are never required.</source>
          <target state="translated">По умолчанию &lt;code&gt;&quot;always&quot;&lt;/code&gt; не разрешает перевод строки. Чтобы разрешить переводы строк в режиме &lt;code&gt;&quot;always&quot;&lt;/code&gt; , установите для параметра &lt;code&gt;allowNewlines&lt;/code&gt; значение &lt;code&gt;true&lt;/code&gt; . Новые строки не требуются.</target>
        </trans-unit>
        <trans-unit id="8149432d30bea2fb7ccff7235a0e92b208229579" translate="yes" xml:space="preserve">
          <source>By default, ESLint uses &lt;a href=&quot;https://github.com/eslint/espree&quot;&gt;Espree&lt;/a&gt; as its parser. You can optionally specify that a different parser should be used in your configuration file so long as the parser meets the following requirements:</source>
          <target state="translated">По умолчанию ESLint использует &lt;a href=&quot;https://github.com/eslint/espree&quot;&gt;Espree в&lt;/a&gt; качестве парсера. При желании вы можете указать, что в вашем файле конфигурации должен использоваться другой анализатор, если он соответствует следующим требованиям:</target>
        </trans-unit>
        <trans-unit id="9577e9a635e28c68c848f26eabef31dbaa320c91" translate="yes" xml:space="preserve">
          <source>By default, ESLint will look for configuration files in all parent folders up to the root directory. This can be useful if you want all of your projects to follow a certain convention, but can sometimes lead to unexpected results. To limit ESLint to a specific project, place &lt;code&gt;&quot;root&quot;: true&lt;/code&gt; inside the &lt;code&gt;eslintConfig&lt;/code&gt; field of the &lt;code&gt;package.json&lt;/code&gt; file or in the &lt;code&gt;.eslintrc.*&lt;/code&gt; file at your project's root level. ESLint will stop looking in parent folders once it finds a configuration with &lt;code&gt;&quot;root&quot;: true&lt;/code&gt;.</source>
          <target state="translated">По умолчанию ESLint будет искать файлы конфигурации во всех родительских папках вплоть до корневого каталога. Это может быть полезно, если вы хотите, чтобы все ваши проекты следовали определенному соглашению, но иногда может привести к неожиданным результатам. Чтобы ограничить использование ESLint конкретным проектом, поместите &lt;code&gt;&quot;root&quot;: true&lt;/code&gt; в поле &lt;code&gt;eslintConfig&lt;/code&gt; файла &lt;code&gt;package.json&lt;/code&gt; или в файл &lt;code&gt;.eslintrc.*&lt;/code&gt; На корневом уровне вашего проекта. ESLint перестанет искать в родительских папках, как только найдет конфигурацию с &lt;code&gt;&quot;root&quot;: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3d5e5b4f445e783b9f14a4ed45e390a3c7a870a" translate="yes" xml:space="preserve">
          <source>By default, ESLint will not perform autofixes when a processor is used, even when the &lt;code&gt;--fix&lt;/code&gt; flag is enabled on the command line. To allow ESLint to autofix code when using your processor, you should take the following additional steps:</source>
          <target state="translated">По умолчанию ESLint не будет выполнять автофиксации при использовании процессора, даже если в командной строке включен флаг &lt;code&gt;--fix&lt;/code&gt; . Чтобы позволить ESLint автоматически исправлять код при использовании вашего процессора, вы должны предпринять следующие дополнительные шаги:</target>
        </trans-unit>
        <trans-unit id="642f4676bf0bdf93c93b4f8b0ebfa00e1a8aab5a" translate="yes" xml:space="preserve">
          <source>By default, all options are set to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">По умолчанию для всех параметров установлено значение &lt;code&gt;false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="328d8066eb8920bc57166e2447115dae7191b68f" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;../rules/no-multi-spaces&quot;&gt;&lt;code&gt;no-multi-spaces&lt;/code&gt;&lt;/a&gt; rule will now disallow multiple spaces before comments at the end of a line. Previously, the rule did not check this case.</source>
          <target state="translated">По умолчанию правило &lt;a href=&quot;../rules/no-multi-spaces&quot;&gt; &lt;code&gt;no-multi-spaces&lt;/code&gt; &lt;/a&gt; теперь запрещает использование нескольких пробелов перед комментариями в конце строки. Раньше этот случай правилом не проверялся.</target>
        </trans-unit>
        <trans-unit id="3ead8bee8725b19464565c53ddd55a35932fff07" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;../rules/padded-blocks&quot;&gt;&lt;code&gt;padded-blocks&lt;/code&gt;&lt;/a&gt; rule will now enforce padding in class bodies and switch statements. Previously, the rule would ignore these cases unless the user opted into enforcing them.</source>
          <target state="translated">По умолчанию правило &lt;a href=&quot;../rules/padded-blocks&quot;&gt; &lt;code&gt;padded-blocks&lt;/code&gt; &lt;/a&gt; теперь будет применять заполнение в телах классов и операторах переключения. Раньше правило игнорировало эти случаи, если пользователь не принимал их принудительно.</target>
        </trans-unit>
        <trans-unit id="cb25911cbcc93e8fb7965ef138c4639fb91fdaa5" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;../rules/space-before-function-paren&quot;&gt;&lt;code&gt;space-before-function-paren&lt;/code&gt;&lt;/a&gt; rule will now enforce spacing for async arrow functions. Previously, the rule would ignore these cases unless the user opted into enforcing them.</source>
          <target state="translated">По умолчанию правило &amp;laquo; &lt;a href=&quot;../rules/space-before-function-paren&quot;&gt; &lt;code&gt;space-before-function-paren&lt;/code&gt; &lt;/a&gt; теперь будет предписывать интервалы для асинхронных стрелочных функций. Раньше правило игнорировало эти случаи, если пользователь не принимал их принудительно.</target>
        </trans-unit>
        <trans-unit id="40a5c9e45294a4926d673ca17be828f827737310" translate="yes" xml:space="preserve">
          <source>By default, this method uses the configuration that applies to files in the current working directory (the &lt;code&gt;cwd&lt;/code&gt; constructor option). If you want to use a different configuration, pass &lt;code&gt;options.filePath&lt;/code&gt;, and ESLint will load the same configuration that &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; would use for a file at &lt;code&gt;options.filePath&lt;/code&gt;.</source>
          <target state="translated">По умолчанию этот метод использует конфигурацию, которая применяется к файлам в текущем рабочем каталоге ( &lt;code&gt;cwd&lt;/code&gt; конструктора cwd ). Если вы хотите использовать другую конфигурацию, передайте &lt;code&gt;options.filePath&lt;/code&gt; , и ESLint загрузит ту же конфигурацию, которую &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt; будет использовать для файла в &lt;code&gt;options.filePath&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="299d530060273666dadde871098da08bda8d3120" translate="yes" xml:space="preserve">
          <source>By default, this rule always allows the use of &lt;code&gt;this&lt;/code&gt; in functions which name starts with an uppercase and anonymous functions that are assigned to a variable which name starts with an uppercase, assuming that those functions are used as constructor functions.</source>
          <target state="translated">По умолчанию это правило всегда разрешает использование &lt;code&gt;this&lt;/code&gt; в функциях, имя которых начинается с верхнего регистра, и анонимных функциях, которые назначаются переменной, имя которой начинается с верхнего регистра, при условии, что эти функции используются как функции-конструкторы.</target>
        </trans-unit>
        <trans-unit id="dcebc7dd5e599c1fa7a260257a99e17c1b7b4f41" translate="yes" xml:space="preserve">
          <source>By default, this rule checks only object literals and property descriptors. If you want this rule to also check class declarations and class expressions, activate the option &lt;code&gt;enforceForClassMembers&lt;/code&gt;.</source>
          <target state="translated">По умолчанию это правило проверяет только литералы объектов и дескрипторы свойств. Если вы хотите, чтобы это правило также проверяло объявления классов и выражения классов, активируйте параметр &lt;code&gt;enforceForClassMembers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac583d46910ce2df6b784c5422f86d84784d80b9" translate="yes" xml:space="preserve">
          <source>By default, this rule does not check &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt; declarations.</source>
          <target state="translated">По умолчанию это правило не проверяет объявления &lt;code&gt;const&lt;/code&gt; , &lt;code&gt;let&lt;/code&gt; и &lt;code&gt;class&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d26744eeae2a34bc64432a235df5802392705e54" translate="yes" xml:space="preserve">
          <source>By default, this rule does not check class declarations and class expressions, as the default value for &lt;code&gt;enforceForClassMembers&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">По умолчанию это правило не проверяет объявления классов и выражения классов, поскольку значение по умолчанию для &lt;code&gt;enforceForClassMembers&lt;/code&gt; - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13b530f087cdcc901afdd2f0a3e8affc01b112e8" translate="yes" xml:space="preserve">
          <source>By default, this rule does not enforce getter/setter pairs in class declarations and class expressions, as the default value for &lt;code&gt;enforceForClassMembers&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">По умолчанию это правило не применяет пары получателей и установщиков в объявлениях классов и выражениях классов, поскольку значение по умолчанию для &lt;code&gt;enforceForClassMembers&lt;/code&gt; - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf0a6e019c5801a980d6436f9683c62ae6bbbd9c" translate="yes" xml:space="preserve">
          <source>By default, this rule doesn&amp;rsquo;t check when a regex literal is unnecessarily wrapped in a &lt;code&gt;RegExp&lt;/code&gt; constructor call. When the option &lt;code&gt;disallowRedundantWrapping&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the rule will also disallow such unnecessary patterns.</source>
          <target state="translated">По умолчанию это правило не проверяет, когда литерал регулярного выражения без необходимости заключен в вызов конструктора &lt;code&gt;RegExp&lt;/code&gt; . Когда для параметра &lt;code&gt;disallowRedundantWrapping&lt;/code&gt; установлено значение &lt;code&gt;true&lt;/code&gt; , правило также запрещает такие ненужные шаблоны.</target>
        </trans-unit>
        <trans-unit id="046441d01afdaf53feee5d9148871aec290a8572" translate="yes" xml:space="preserve">
          <source>By default, this rule warns whenever &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, or &lt;code&gt;do&lt;/code&gt; are used without block statements as their body. However, you can specify that block statements should be used only when there are multiple statements in the block and warn when there is only one statement in the block.</source>
          <target state="translated">По умолчанию это правило предупреждает всякий раз , когда &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; , &lt;code&gt;for&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; или &lt;code&gt;do&lt;/code&gt; используются без операторов блока в качестве их тела. Однако вы можете указать, что операторы блока должны использоваться только тогда, когда в блоке есть несколько операторов, и предупреждать, когда в блоке только один оператор.</target>
        </trans-unit>
        <trans-unit id="f9fcf545318b2ef2da7a24419f1e2ac87e444cd1" translate="yes" xml:space="preserve">
          <source>By default, this rule will require a non-lowercase letter at the beginning of comments.</source>
          <target state="translated">По умолчанию данное правило требует наличия нестрочной буквы в начале комментариев.</target>
        </trans-unit>
        <trans-unit id="b4eeaf5a9cfbd492c09302efd0a7e6ded91be252" translate="yes" xml:space="preserve">
          <source>By throwing an error in this way, other parts of the application have an opportunity to handle the error rather than stopping the application altogether. If the error bubbles all the way up to the process without being handled, then the process will exit and a non-zero exit code will returned, so the end result is the same.</source>
          <target state="translated">Бросая таким образом ошибку,другие части приложения имеют возможность справиться с ней,а не останавливать приложение вообще.Если ошибка пузырится до самого процесса,не будучи обработанной,то процесс выйдет и вернется ненулевой код выхода,так что конечный результат будет одинаковым.</target>
        </trans-unit>
        <trans-unit id="39a10e6844263ca8909b3bbe0de5a3537cac5758" translate="yes" xml:space="preserve">
          <source>By using the module name:</source>
          <target state="translated">Используя название модуля:</target>
        </trans-unit>
        <trans-unit id="ee2345f2e860e68629829d65710dd0df3385db35" translate="yes" xml:space="preserve">
          <source>CLIEngine</source>
          <target state="translated">CLIEngine</target>
        </trans-unit>
        <trans-unit id="fa84c30b67500e79c26e8f7e089f568a07247b99" translate="yes" xml:space="preserve">
          <source>CLIEngine (deprecated)</source>
          <target state="translated">КЛИЕНГИН (устаревший)</target>
        </trans-unit>
        <trans-unit id="39f0383de17763d08ff9f37db2edc301741ecfbc" translate="yes" xml:space="preserve">
          <source>CLIEngine#addPlugin()</source>
          <target state="translated">CLIEngine#addPlugin()</target>
        </trans-unit>
        <trans-unit id="a22267246c77d6f4c878ebd617018969e47dd10a" translate="yes" xml:space="preserve">
          <source>CLIEngine#executeOnFiles()</source>
          <target state="translated">CLIEngine#executeOnFiles()</target>
        </trans-unit>
        <trans-unit id="8aaf006cc9141b559c5c527aa262abaa02da9a68" translate="yes" xml:space="preserve">
          <source>CLIEngine#executeOnText()</source>
          <target state="translated">CLIEngine#executeOnText()</target>
        </trans-unit>
        <trans-unit id="5119e7a9a0f06a066d338a2a5227f1de3f2a3ba8" translate="yes" xml:space="preserve">
          <source>CLIEngine#getConfigForFile()</source>
          <target state="translated">CLIEngine#getConfigForFile()</target>
        </trans-unit>
        <trans-unit id="f248c6ca75d279906a5e83e020e644d56c01bcb3" translate="yes" xml:space="preserve">
          <source>CLIEngine#getErrorResults()</source>
          <target state="translated">CLIEngine#getErrorResults()</target>
        </trans-unit>
        <trans-unit id="33e37a3ba68b62fd095c124f08a8da94d579dc5e" translate="yes" xml:space="preserve">
          <source>CLIEngine#getFormatter()</source>
          <target state="translated">CLIEngine#getFormatter()</target>
        </trans-unit>
        <trans-unit id="f3f32f607dc57705731e718beaa6e7541390ea19" translate="yes" xml:space="preserve">
          <source>CLIEngine#getRules()</source>
          <target state="translated">CLIEngine#getRules()</target>
        </trans-unit>
        <trans-unit id="f5d91f42db796ef9fccb3113c5f1b379eee1985b" translate="yes" xml:space="preserve">
          <source>CLIEngine#isPathIgnored()</source>
          <target state="translated">CLIEngine#isPathIgnored()</target>
        </trans-unit>
        <trans-unit id="2c38fe2163d1a1410cce4874628be155c5420a54" translate="yes" xml:space="preserve">
          <source>CLIEngine#outputFixes()</source>
          <target state="translated">CLIEngine#outputFixes()</target>
        </trans-unit>
        <trans-unit id="64fe410eb3907152812ba29b988371e8c10c7930" translate="yes" xml:space="preserve">
          <source>CLIEngine#resolveFileGlobPatterns()</source>
          <target state="translated">CLIEngine#resolveFileGlobPatterns()</target>
        </trans-unit>
        <trans-unit id="4bec04eda41c2467258cf63a83bbcc00c182f096" translate="yes" xml:space="preserve">
          <source>CLIEngine.version</source>
          <target state="translated">CLIEngine.version</target>
        </trans-unit>
        <trans-unit id="f8afe6bb118117d4b5d879f4d42f4e3d845f343e" translate="yes" xml:space="preserve">
          <source>Cache-related</source>
          <target state="translated">Cache-related</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="cef5cdfb0c3e16bdf7d599da18abc72413e061a5" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;console.log()&lt;/code&gt; or any other similar method</source>
          <target state="translated">Вызовите &lt;code&gt;console.log()&lt;/code&gt; или любой другой аналогичный метод</target>
        </trans-unit>
        <trans-unit id="84a75cd5066765fb2d890a1abed4765af529054c" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;process.exit()&lt;/code&gt; directly</source>
          <target state="translated">Вызов &lt;code&gt;process.exit()&lt;/code&gt; напрямую</target>
        </trans-unit>
        <trans-unit id="8bc7444f8724edf2b88bce5ed493cab18f0f53e6" translate="yes" xml:space="preserve">
          <source>CallExpression</source>
          <target state="translated">CallExpression</target>
        </trans-unit>
        <trans-unit id="c9e282305742d4307b1579b438b6b7173c0418e7" translate="yes" xml:space="preserve">
          <source>Can be rewritten as:</source>
          <target state="translated">Можно переписать как:</target>
        </trans-unit>
        <trans-unit id="b517ab5d1cd37a417d38a4cf65c412ff68fbe5e1" translate="yes" xml:space="preserve">
          <source>Can't find just the right rule? Make your own &lt;a href=&quot;developer-guide/working-with-rules&quot;&gt;custom rule&lt;/a&gt;.</source>
          <target state="translated">Не можете найти подходящее правило? Создайте свое собственное &lt;a href=&quot;developer-guide/working-with-rules&quot;&gt;правило&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0f4ec3146a0731b4e0f2d9473519c2a5b1a229e" translate="yes" xml:space="preserve">
          <source>Care should be taken to name variables and functions properly. Names should be limited to alphanumeric characters and, in some cases, the underscore character. Do not use the dollar sign (&lt;code&gt;$&lt;/code&gt;) or back slash (&lt;code&gt;\&lt;/code&gt;) characters in any names.</source>
          <target state="translated">Следует проявлять осторожность, чтобы правильно называть переменные и функции. Имена должны быть ограничены буквенно-цифровыми символами и, в некоторых случаях, символом подчеркивания. Не используйте знак доллара ( &lt;code&gt;$&lt;/code&gt; ) или обратную косую черту ( &lt;code&gt;\&lt;/code&gt; ) в именах.</target>
        </trans-unit>
        <trans-unit id="9a7ca4c1fab7a8bdcf5fbc36f2e29b71084829bd" translate="yes" xml:space="preserve">
          <source>Certain properties on objects may be disallowed in a codebase. This is useful for deprecating an API or restricting usage of a module's methods. For example, you may want to disallow using &lt;code&gt;describe.only&lt;/code&gt; when using Mocha or telling people to use &lt;code&gt;Object.assign&lt;/code&gt; instead of &lt;code&gt;_.extend&lt;/code&gt;.</source>
          <target state="translated">Некоторые свойства объектов могут быть запрещены в кодовой базе. Это полезно для отказа от API или ограничения использования методов модуля. Например, вы можете запретить использование &lt;code&gt;describe.only&lt;/code&gt; при использовании Mocha или &lt;code&gt;Object.assign&lt;/code&gt; людям использовать Object.assign вместо &lt;code&gt;_.extend&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d641a78fe9f4d6c7cfe86253552245024f63f5eb" translate="yes" xml:space="preserve">
          <source>Chained method calls on a single line without line breaks are harder to read, so some developers place a newline character after each method call in the chain to make it more readable and easy to maintain.</source>
          <target state="translated">Цепные вызовы методов на одной линии без разрывов трудно читаются,поэтому некоторые разработчики помещают символ новой линии после каждого вызова метода в цепочку,чтобы сделать ее более читабельной и простой в обслуживании.</target>
        </trans-unit>
        <trans-unit id="d9c4b291d717c5eaf1d0d316458e1b370d150f8f" translate="yes" xml:space="preserve">
          <source>Chaining the assignment of variables can lead to unexpected results and be difficult to read.</source>
          <target state="translated">Цепочки присвоения переменных могут привести к неожиданным результатам и быть трудночитаемыми.</target>
        </trans-unit>
        <trans-unit id="af9a9fa473109c352185514e7756f6ec081ef71e" translate="yes" xml:space="preserve">
          <source>Change Requests</source>
          <target state="translated">Запросы на изменения</target>
        </trans-unit>
        <trans-unit id="b6cf5afac16871b650ff6a87357172efdfa460a8" translate="yes" xml:space="preserve">
          <source>Changes the folder where plugins are resolved from. By default, plugins are resolved from the current working directory. This option should be used when plugins were installed by someone other than the end user. It should be set to the project directory of the project that has a dependency on the necessary plugins. For example:</source>
          <target state="translated">Изменяет папку,из которой разрешаются плагины.По умолчанию плагины разрешаются из текущей рабочей директории.Эта опция должна использоваться,когда плагины были установлены кем-то другим,а не конечным пользователем.Она должна быть установлена в директорию проекта,которая имеет зависимость от необходимых подключаемых модулей.Например:</target>
        </trans-unit>
        <trans-unit id="1ab7e9a4540dddf2bc3e6493f496e69ddbf71e09" translate="yes" xml:space="preserve">
          <source>Changes to &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt;</source>
          <target state="translated">Изменения в &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afb36713f70f34ba6d1fb8bd99cb3672abc0961e" translate="yes" xml:space="preserve">
          <source>Changes to &lt;code&gt;CLIEngine#executeOnText()&lt;/code&gt;</source>
          <target state="translated">Изменения в &lt;code&gt;CLIEngine#executeOnText()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="095447aabddeac0d8a7df16e693b732d5fea7565" translate="yes" xml:space="preserve">
          <source>Changing this value to &lt;code&gt;true&lt;/code&gt; will reverse this option's behavior by allowing use of named functions without restriction.</source>
          <target state="translated">Изменение этого значения на &lt;code&gt;true&lt;/code&gt; полностью изменит поведение этого параметра, позволив использовать именованные функции без ограничений.</target>
        </trans-unit>
        <trans-unit id="040ad6ac92ed227db6349ec645d53783b624cd42" translate="yes" xml:space="preserve">
          <source>Checking if a value is &lt;code&gt;undefined&lt;/code&gt; should be done with &lt;code&gt;typeof&lt;/code&gt;.</source>
          <target state="translated">Проверка , если значение &lt;code&gt;undefined&lt;/code&gt; должно быть сделано с &lt;code&gt;typeof&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f92028ad17322f48fc90b63d905521dc748be675" translate="yes" xml:space="preserve">
          <source>Checks code coverage targets</source>
          <target state="translated">Проверяет охват кодовыми целями</target>
        </trans-unit>
        <trans-unit id="94ecadd605f6e4c20f69369c8c791bbdde62d160" translate="yes" xml:space="preserve">
          <source>Checks if a given path is ignored by ESLint.</source>
          <target state="translated">Проверяет,игнорируется ли данный путь ESLint.</target>
        </trans-unit>
        <trans-unit id="66c89bace5c803e88659649c37de3028b2ac5e3c" translate="yes" xml:space="preserve">
          <source>Class declarations and class expressions.</source>
          <target state="translated">Объявления классов и выражения классов.</target>
        </trans-unit>
        <trans-unit id="ed1846afee3be21521286932b99e2aeae9e6414a" translate="yes" xml:space="preserve">
          <source>Classes</source>
          <target state="translated">Classes</target>
        </trans-unit>
        <trans-unit id="f380e5d07ded1620db47a5ed2708b79c5a047d0a" translate="yes" xml:space="preserve">
          <source>Click on Profiles</source>
          <target state="translated">Нажмите на Профили</target>
        </trans-unit>
        <trans-unit id="0bfa56b6c32ec5c8d0cf77f1a810aef94408d0da" translate="yes" xml:space="preserve">
          <source>Coalesce Operator: &lt;code&gt;&quot;??&quot;&lt;/code&gt;</source>
          <target state="translated">Оператор объединения: &lt;code&gt;&quot;??&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1683105284987a3ae83b25ff1f118eb7bdf7595" translate="yes" xml:space="preserve">
          <source>Code Climate CLI</source>
          <target state="translated">Код Климат КЛИ</target>
        </trans-unit>
        <trans-unit id="e7dc1f58b1ebed71fbca665be08411c0b9cacaab" translate="yes" xml:space="preserve">
          <source>Code Conventions</source>
          <target state="translated">Кодексуальные конвенции</target>
        </trans-unit>
        <trans-unit id="e574f8f018ffa16527ccc1b75d7fb58fb118883c" translate="yes" xml:space="preserve">
          <source>Code Path Analysis Details</source>
          <target state="translated">Анализ пути кода Подробная информация</target>
        </trans-unit>
        <trans-unit id="580546c9363cde6a5b33a366bcefc914f6ff2498" translate="yes" xml:space="preserve">
          <source>Code Path Examples</source>
          <target state="translated">Примеры пути кода</target>
        </trans-unit>
        <trans-unit id="647c6137a359d2959ee6cdb4a5286bf7116ae92a" translate="yes" xml:space="preserve">
          <source>Code is difficult to understand.</source>
          <target state="translated">Кодекс трудно понять.</target>
        </trans-unit>
        <trans-unit id="e909b7052999369ed0534cff25d0dc0b37c6d995" translate="yes" xml:space="preserve">
          <source>Column Numbers are 1-based</source>
          <target state="translated">Колонка Номера столбцов основаны на 1</target>
        </trans-unit>
        <trans-unit id="dad481f8d97686324bbafc62077e08ab2a687407" translate="yes" xml:space="preserve">
          <source>Comma First style, in which commas are placed at the start of the next line</source>
          <target state="translated">Стиль Comma First,в котором запятые ставятся в начале следующей строки.</target>
        </trans-unit>
        <trans-unit id="39dd3cc04c40c9a332158c95e35269c0929ad6af" translate="yes" xml:space="preserve">
          <source>Comma style (comma-style)</source>
          <target state="translated">Стиль коммы (запятая)</target>
        </trans-unit>
        <trans-unit id="14c818412d017dcc7f2635ecf050b64a83410b23" translate="yes" xml:space="preserve">
          <source>Command Line Interface</source>
          <target state="translated">Интерфейс командной строки</target>
        </trans-unit>
        <trans-unit id="4b91918e82d5cef17a745f0886369f20996ba6c7" translate="yes" xml:space="preserve">
          <source>Command Line Options</source>
          <target state="translated">Опции командной строки</target>
        </trans-unit>
        <trans-unit id="1876987fa1a8f54ef9b28b3c2b0111b8b2e44d4a" translate="yes" xml:space="preserve">
          <source>Command Line Tools</source>
          <target state="translated">Инструменты командной строки</target>
        </trans-unit>
        <trans-unit id="0592b972c380e7e606d0a53966b0ff68a0453c1c" translate="yes" xml:space="preserve">
          <source>Command line options (or CLIEngine equivalents):</source>
          <target state="translated">Опции командной строки (или эквиваленты CLIEngine):</target>
        </trans-unit>
        <trans-unit id="e9303a3a7c7daf4c09eae8de6d13d8d831541fc8" translate="yes" xml:space="preserve">
          <source>Comment Annotations</source>
          <target state="translated">Как аннотации</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="5fe0316b6ae9d702e7dbf115bb378278ffbaddd1" translate="yes" xml:space="preserve">
          <source>Comments are useful for leaving information for future developers. In order for that information to be useful and not distracting, it is sometimes desirable for comments to follow a particular style. One element of comment formatting styles is whether the first word of a comment should be capitalized or lowercase.</source>
          <target state="translated">Комментарии полезны для того,чтобы оставить информацию будущим разработчикам.Для того чтобы информация была полезной и не отвлекала внимание,иногда желательно,чтобы комментарии следовали определенному стилю.Одним из элементов стилей форматирования комментариев является то,должно ли первое слово комментария быть заглавным или строчным.</target>
        </trans-unit>
        <trans-unit id="7f06b20dcab0aff5704c842c598f9dfcd0455108" translate="yes" xml:space="preserve">
          <source>Comments in Configuration Files</source>
          <target state="translated">Комментарии в конфигурационных файлах</target>
        </trans-unit>
        <trans-unit id="f0357ca1de3a2c1e41b225072c3ae58e313abf79" translate="yes" xml:space="preserve">
          <source>Comments inside the curly braces in JSX are allowed to be on the same line as the braces, but only if they are not on the same line with other code, and the braces do not enclose an actual expression.</source>
          <target state="translated">Комментарии внутри фигурных скобок в JSX допускаются на той же строке,что и скобки,но только если они не находятся на той же строке с другим кодом,а скобки не содержат действительного выражения.</target>
        </trans-unit>
        <trans-unit id="43c575a09fdacd956bc014b783c194f0a5c82e44" translate="yes" xml:space="preserve">
          <source>Comments may be used to annotate pieces of code with additional information. These annotations take the form of a single word followed by a colon. The acceptable annotations are:</source>
          <target state="translated">Комментарии могут быть использованы для аннотации фрагментов кода с дополнительной информацией.Эти аннотации имеют форму одного слова,за которым следует двоеточие.Допускаются аннотации:</target>
        </trans-unit>
        <trans-unit id="703eaaa66145aebfc6fb9e2dcf0469112d69267d" translate="yes" xml:space="preserve">
          <source>Comments on a line directly after var statements are treated like additional var statements.</source>
          <target state="translated">Комментарии к строке непосредственно после вариационных утверждений рассматриваются как дополнительные вариационные утверждения.</target>
        </trans-unit>
        <trans-unit id="c25c0b311a5988d7e130f54f188163a4ce9f26bd" translate="yes" xml:space="preserve">
          <source>Comparing a variable against itself is usually an error, either a typo or refactoring error. It is confusing to the reader and may potentially introduce a runtime error.</source>
          <target state="translated">Сравнение переменной с самой собой обычно является ошибкой,либо опечаткой,либо ошибкой рефакторинга.Это сбивает с толку читателя и может привести к ошибке во время выполнения.</target>
        </trans-unit>
        <trans-unit id="27bbabf9863dade6459d7cd65d288d55ad523bf4" translate="yes" xml:space="preserve">
          <source>Comparing against &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">Сравнение с &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3cbfe191b44761abe72c903dc68c5c8bcdebdb77" translate="yes" xml:space="preserve">
          <source>Comparing to &lt;code&gt;null&lt;/code&gt; without a type-checking operator (&lt;code&gt;==&lt;/code&gt; or &lt;code&gt;!=&lt;/code&gt;), can have unintended results as the comparison will evaluate to true when comparing to not just a &lt;code&gt;null&lt;/code&gt;, but also an &lt;code&gt;undefined&lt;/code&gt; value.</source>
          <target state="translated">Сравнение с &lt;code&gt;null&lt;/code&gt; без оператора проверки типа ( &lt;code&gt;==&lt;/code&gt; или &lt;code&gt;!=&lt;/code&gt; ) Может иметь непредвиденные результаты, поскольку сравнение будет иметь значение true при сравнении не только с &lt;code&gt;null&lt;/code&gt; , но и с &lt;code&gt;undefined&lt;/code&gt; значением.</target>
        </trans-unit>
        <trans-unit id="2d2f123387a2c9f00c23c76c07b00b0297d1dd1f" translate="yes" xml:space="preserve">
          <source>Comparing two literal values</source>
          <target state="translated">сравнение двух буквальных значений</target>
        </trans-unit>
        <trans-unit id="6a123b6cd74bccf28ec149c293edc9ff8bb839df" translate="yes" xml:space="preserve">
          <source>Comparison Operators: &lt;code&gt;&quot;==&quot;&lt;/code&gt;, &lt;code&gt;&quot;!=&quot;&lt;/code&gt;, &lt;code&gt;&quot;===&quot;&lt;/code&gt;, &lt;code&gt;&quot;!==&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;gt;=&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;lt;=&quot;&lt;/code&gt;</source>
          <target state="translated">Операторы сравнения: &lt;code&gt;&quot;==&quot;&lt;/code&gt; , &lt;code&gt;&quot;!=&quot;&lt;/code&gt; , &lt;code&gt;&quot;===&quot;&lt;/code&gt; , &lt;code&gt;&quot;!==&quot;&lt;/code&gt; , &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; , &lt;code&gt;&quot;&amp;gt;=&quot;&lt;/code&gt; , &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; , &lt;code&gt;&quot;&amp;lt;=&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d60c7dd62fdcf4abcc61a6a7d335b7117968b4d" translate="yes" xml:space="preserve">
          <source>Compatibility</source>
          <target state="translated">Compatibility</target>
        </trans-unit>
        <trans-unit id="5e22de54c6c14d3c1fd6b16beef446d0ab100418" translate="yes" xml:space="preserve">
          <source>Complex Argument Passing</source>
          <target state="translated">Прохождение сложного Аргумента</target>
        </trans-unit>
        <trans-unit id="59d9cf15f81bf409cdf559aa0a58b6382ca48d87" translate="yes" xml:space="preserve">
          <source>Complexity Analysis of JavaScript Code</source>
          <target state="translated">Анализ сложности JavaScript-кода</target>
        </trans-unit>
        <trans-unit id="fb6884eb8992b62c7c1af30d600b40339c50155a" translate="yes" xml:space="preserve">
          <source>Compound Statements</source>
          <target state="translated">Составные отчёты</target>
        </trans-unit>
        <trans-unit id="c70714def24eed02c974f5065578085314290afa" translate="yes" xml:space="preserve">
          <source>Compound statements are lists of statements enclosed inside of braces.</source>
          <target state="translated">Сложные утверждения-это списки утверждений,заключенные внутри фигурных скобок.</target>
        </trans-unit>
        <trans-unit id="2a731acf571864648fe825ad7f41f467ee967a7f" translate="yes" xml:space="preserve">
          <source>Concretely, the following function should be refactored as shown:</source>
          <target state="translated">Конкретно,следующая функция должна быть рефакторизована,как показано на рисунке:</target>
        </trans-unit>
        <trans-unit id="9ce36b3146d830ed2f9929916e1077a0694b8641" translate="yes" xml:space="preserve">
          <source>Configs in Plugins</source>
          <target state="translated">Конфигурации в плагинах</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="d08f9a283e38a276a0427e713b7b70848f862614" translate="yes" xml:space="preserve">
          <source>Configuration Based on Glob Patterns</source>
          <target state="translated">Конфигурация на основе шаблонных моделей</target>
        </trans-unit>
        <trans-unit id="054d13d110e94c15fda09fa3b87ba15c0ffb578c" translate="yes" xml:space="preserve">
          <source>Configuration Cascading Changes</source>
          <target state="translated">Каскадные изменения конфигурации</target>
        </trans-unit>
        <trans-unit id="637a597497ad1278a75e9c3cc4a37f73445fc358" translate="yes" xml:space="preserve">
          <source>Configuration Cascading and Hierarchy</source>
          <target state="translated">Каскадирование и иерархия конфигураций</target>
        </trans-unit>
        <trans-unit id="3367a800fa7c45bf91e141f3b7a7690040cb711f" translate="yes" xml:space="preserve">
          <source>Configuration File Formats</source>
          <target state="translated">Форматы файлов конфигурации</target>
        </trans-unit>
        <trans-unit id="8d7918432f45ce1b5b9c42fe241fd155b57d3095" translate="yes" xml:space="preserve">
          <source>Configuration comments can include descriptions to explain why the comment is necessary. The description must occur after the configuration and is separated from the configuration by two or more consecutive &lt;code&gt;-&lt;/code&gt; characters. For example:</source>
          <target state="translated">Комментарии к конфигурации могут включать описания, объясняющие, почему этот комментарий необходим. Описание должно находиться после конфигурации и отделяться от конфигурации двумя или более последовательными символами &lt;code&gt;-&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="f888285484327e1b26802fdfc517a3cdc283a16a" translate="yes" xml:space="preserve">
          <source>Configuration options passed on the command line using &lt;code&gt;--rule&lt;/code&gt; (or to CLIEngine using &lt;code&gt;rules&lt;/code&gt;).</source>
          <target state="translated">Параметры конфигурации передаются в командной строке с помощью &lt;code&gt;--rule&lt;/code&gt; (или в CLIEngine с помощью &lt;code&gt;rules&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4040faa0c40248a65b81d9d52f5e239c41634760" translate="yes" xml:space="preserve">
          <source>Configuration values for globals are now validated</source>
          <target state="translated">Конфигурационные значения для глобусов теперь проверены.</target>
        </trans-unit>
        <trans-unit id="32bc3c22148beccab28adad18f452f24bed405a4" translate="yes" xml:space="preserve">
          <source>Configuring</source>
          <target state="translated">Configuring</target>
        </trans-unit>
        <trans-unit id="b14e099732b8bf6338cd1082d4971a5345420749" translate="yes" xml:space="preserve">
          <source>Configuring ESLint</source>
          <target state="translated">Настройка ESLint</target>
        </trans-unit>
        <trans-unit id="90aee3621dbd643b7a1e7615a22bd29a1bf4fa46" translate="yes" xml:space="preserve">
          <source>Configuring Inline Comment Behaviors</source>
          <target state="translated">Настройка поведения онлайн-комментариев</target>
        </trans-unit>
        <trans-unit id="ac9cfd78cf61a7fad9eac13d10a069961ae79993" translate="yes" xml:space="preserve">
          <source>Configuring Plugins</source>
          <target state="translated">Настройка плагинов</target>
        </trans-unit>
        <trans-unit id="4bf4a45b927dfcce828ce6776ec3d92df65de710" translate="yes" xml:space="preserve">
          <source>Configuring Rules</source>
          <target state="translated">Правила настройки</target>
        </trans-unit>
        <trans-unit id="f110a7ccdd4b47d412214514a5686b597e3f8569" translate="yes" xml:space="preserve">
          <source>Configuring this rule with one boolean option &lt;code&gt;true&lt;/code&gt; is deprecated.</source>
          <target state="translated">Настроить это правило с одним логическим параметром &lt;code&gt;true&lt;/code&gt; не рекомендуется.</target>
        </trans-unit>
        <trans-unit id="ff58770cc1aa1258af1958af9c810dd60ffec1b2" translate="yes" xml:space="preserve">
          <source>Consider another scenario where you may want to run ESLint on a specific Dotfile or Dotfolder, but have forgotten to specifically allow those files in your &lt;code&gt;.eslintignore&lt;/code&gt; file. You would run something like this:</source>
          <target state="translated">Рассмотрим другой сценарий, в котором вы можете захотеть запустить ESLint для определенного Dotfile или Dotfolder, но забыли разрешить эти файлы в вашем файле &lt;code&gt;.eslintignore&lt;/code&gt; . Вы бы запустили что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="b4647e6ee60c305c9dabe8168f89b6e60301a075" translate="yes" xml:space="preserve">
          <source>Consistency in placing a newline before or after the dot can greatly increase readability.</source>
          <target state="translated">Последовательность в размещении новой строки до или после точки может значительно повысить читабельность.</target>
        </trans-unit>
        <trans-unit id="503aca9c53d9e27038ee3763f8c6a91d3531b09a" translate="yes" xml:space="preserve">
          <source>Consistency is an important part of any style guide. While it is a personal preference where to put the opening brace of blocks, it should be consistent across a whole project. Having an inconsistent style distracts the reader from seeing the important parts of the code.</source>
          <target state="translated">Последовательность является важной частью любого руководства по стилю.Хотя это личное предпочтение,где поставить открывающую скобу из блоков,оно должно быть последовательным на протяжении всего проекта.Непоследовательность стиля отвлекает читателя от просмотра важных частей кода.</target>
        </trans-unit>
        <trans-unit id="8c039d9f3cbca82ba5423ca0597e4fd0200e8a7a" translate="yes" xml:space="preserve">
          <source>Constructor functions, those functions used with the &lt;code&gt;new&lt;/code&gt; operator to create new objects, should be formatted in camel case but must begin with an uppercase letter. Constructor function names should begin with a non-verb because &lt;code&gt;new&lt;/code&gt; is the action of creating an object instance.</source>
          <target state="translated">Функции-конструкторы, те функции, которые используются с оператором &lt;code&gt;new&lt;/code&gt; для создания новых объектов, должны быть отформатированы в верблюжьем регистре, но должны начинаться с заглавной буквы. Имена функций конструктора должны начинаться с не-глагола, потому что &lt;code&gt;new&lt;/code&gt; - это действие по созданию экземпляра объекта.</target>
        </trans-unit>
        <trans-unit id="f1d09586ea37267aa69ef76a9f7c8bc0e29a0c72" translate="yes" xml:space="preserve">
          <source>Constructors of derived classes must call &lt;code&gt;super()&lt;/code&gt;. Constructors of non derived classes must not call &lt;code&gt;super()&lt;/code&gt;. If this is not observed, the JavaScript engine will raise a runtime error.</source>
          <target state="translated">Конструкторы производных классов должны вызывать &lt;code&gt;super()&lt;/code&gt; . Конструкторы непроизводных классов не должны вызывать &lt;code&gt;super()&lt;/code&gt; . Если это не соблюдается, движок JavaScript выдаст ошибку времени выполнения.</target>
        </trans-unit>
        <trans-unit id="1a1d18554936cd6e2390743e62910a063c5aa483" translate="yes" xml:space="preserve">
          <source>Continue searching for &lt;code&gt;.eslintrc&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt; files in ancestor directories (parent has highest precedence, then grandparent, etc.), up to and including the root directory or until a config with &lt;code&gt;&quot;root&quot;: true&lt;/code&gt; is found.</source>
          <target state="translated">Продолжайте поиск файлов &lt;code&gt;.eslintrc&lt;/code&gt; и &lt;code&gt;package.json&lt;/code&gt; в каталогах-предках (родительский приоритет, затем дедушка и т. Д.) До корневого каталога включительно или до тех пор, пока не будет найдена конфигурация с &lt;code&gt;&quot;root&quot;: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="527a09bcae64352259e895e37521e34bfd9a2d4c" translate="yes" xml:space="preserve">
          <source>Contribute code to ESLint</source>
          <target state="translated">Внести код в ESLint</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Contributing</target>
        </trans-unit>
        <trans-unit id="d2b869a4fc5ecdb32995495586ade690a4e7f25f" translate="yes" xml:space="preserve">
          <source>Control Flow in Node</source>
          <target state="translated">Поток управления в узле</target>
        </trans-unit>
        <trans-unit id="7d140e2dddfcbb8e672ff8053b01675a57d0ec7c" translate="yes" xml:space="preserve">
          <source>Control Flow in Node Part II</source>
          <target state="translated">Поток управления в узле Часть II</target>
        </trans-unit>
        <trans-unit id="35139eebf1ac066c1555c9bf6199c9f7eac4d85d" translate="yes" xml:space="preserve">
          <source>Control characters are special, invisible characters in the ASCII range 0-31. These characters are rarely used in JavaScript strings so a regular expression containing these characters is most likely a mistake.</source>
          <target state="translated">Управляющие символы-это специальные,невидимые символы в ASCII диапазоне 0-31.Эти символы редко используются в строках JavaScript,поэтому регулярное выражение,содержащее эти символы,скорее всего,является ошибкой.</target>
        </trans-unit>
        <trans-unit id="d0d571b1e9881fd0cf888f79914fb5ebfcbf482a" translate="yes" xml:space="preserve">
          <source>Control flow in Node.js</source>
          <target state="translated">Поток управления в Node.js</target>
        </trans-unit>
        <trans-unit id="afccb006c330732e4cff61f99359749160440bba" translate="yes" xml:space="preserve">
          <source>Convert Configuration Files Using Polyjuice</source>
          <target state="translated">Преобразование конфигурационных файлов с помощью Polyjuice</target>
        </trans-unit>
        <trans-unit id="ab58181014d84731967f50b05ed7c496f31e1d2a" translate="yes" xml:space="preserve">
          <source>Converting Presets</source>
          <target state="translated">Преобразование пресетов</target>
        </trans-unit>
        <trans-unit id="6a3a7d8e52a6d2e6a4f18d3e7ab1334f3cd4d5b6" translate="yes" xml:space="preserve">
          <source>Core Rule Guidelines</source>
          <target state="translated">Руководящие принципы по основным правилам</target>
        </trans-unit>
        <trans-unit id="b3de192a6a07e167ef31fbab7ac9622023130027" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;../user-guide/configuring&quot;&gt;configuration file&lt;/a&gt; and specify your rule ID error level under the &lt;code&gt;rules&lt;/code&gt; key. Your rule will not run unless it has a value of &lt;code&gt;&quot;warn&quot;&lt;/code&gt; or &lt;code&gt;&quot;error&quot;&lt;/code&gt; in the configuration file.</source>
          <target state="translated">Создайте &lt;a href=&quot;../user-guide/configuring&quot;&gt;файл конфигурации&lt;/a&gt; и укажите уровень ошибки идентификатора &lt;code&gt;rules&lt;/code&gt; разделе правил . Ваше правило не будет выполняться, если в файле конфигурации для него не указано значение &lt;code&gt;&quot;warn&quot;&lt;/code&gt; или &lt;code&gt;&quot;error&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95be29707180faf07146d398de09a6c4200d5320" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;../user-guide/configuring&quot;&gt;configuration file&lt;/a&gt; and specify your rule ID error level under the &lt;code&gt;rules&lt;/code&gt; key. Your rule will not run unless it has a value of &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt; in the configuration file.</source>
          <target state="translated">Создайте &lt;a href=&quot;../user-guide/configuring&quot;&gt;файл конфигурации&lt;/a&gt; и укажите уровень ошибки идентификатора &lt;code&gt;rules&lt;/code&gt; разделе правил . Ваше правило не будет выполняться, если в файле конфигурации для него не указано значение &lt;code&gt;1&lt;/code&gt; или &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f3cb20251d79f003cd52ffc32fabdac22ef9f06" translate="yes" xml:space="preserve">
          <source>Create a Plugin</source>
          <target state="translated">Создать плагин</target>
        </trans-unit>
        <trans-unit id="784442c08b8848bdf9bb4551c61da1d1ee40bcf5" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;ESLint&lt;/code&gt; instance.</source>
          <target state="translated">Создайте новый экземпляр &lt;code&gt;ESLint&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bd3ef2d8c97297fd3ac40631a5866542c068428" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;index.js&lt;/code&gt; file and export an object containing your settings:</source>
          <target state="translated">Создайте новый файл &lt;code&gt;index.js&lt;/code&gt; и экспортируйте объект, содержащий ваши настройки:</target>
        </trans-unit>
        <trans-unit id="11b24d2d7edb54bbd46ce7884ebad9bcadbb5e97" translate="yes" xml:space="preserve">
          <source>Create a new branch</source>
          <target state="translated">Создать новый филиал</target>
        </trans-unit>
        <trans-unit id="d22b463025ed1c1b87b33c315b932364a70efd63" translate="yes" xml:space="preserve">
          <source>Create their own rules for ESLint</source>
          <target state="translated">Создать свои собственные правила для ESLint</target>
        </trans-unit>
        <trans-unit id="a7a39d699ab72906f03ebeffbc60ea2aa1b3eeed" translate="yes" xml:space="preserve">
          <source>Creating a New Configuration From Scratch</source>
          <target state="translated">Создание новой конфигурации из царапин</target>
        </trans-unit>
        <trans-unit id="1bd92f8ba24ec7ef01b8b29783834176b3963fb9" translate="yes" xml:space="preserve">
          <source>Creating a Shareable Config</source>
          <target state="translated">Создание разделяемого конфигурационного файла</target>
        </trans-unit>
        <trans-unit id="482f648a7c151a3d617c673a13dd07998e557076" translate="yes" xml:space="preserve">
          <source>Creating an AST for the code</source>
          <target state="translated">Создание АСТ для кода</target>
        </trans-unit>
        <trans-unit id="733e449fda546e3a8b129948f856e5d4cfc8e56b" translate="yes" xml:space="preserve">
          <source>Currently the sole method for telling ESLint which file extensions to lint is by specifying a comma separated list of extensions using the &lt;a href=&quot;command-line-interface#ext&quot;&gt;&lt;code&gt;--ext&lt;/code&gt;&lt;/a&gt; command line option. Note this flag only takes effect in conjunction with directories, and will be ignored if used with filenames or glob patterns.</source>
          <target state="translated">В настоящее время единственный способ сообщить ESLint, какие расширения файлов нужно lint, - указать список расширений, разделенных запятыми, с помощью &lt;a href=&quot;command-line-interface#ext&quot;&gt; &lt;code&gt;--ext&lt;/code&gt; &lt;/a&gt; командной строки --ext . Обратите внимание, что этот флаг действует только в сочетании с каталогами и будет проигнорирован, если используется с именами файлов или шаблонами глобусов.</target>
        </trans-unit>
        <trans-unit id="d177cd85e91a4c278affcb9cde0b2fe2b8377110" translate="yes" xml:space="preserve">
          <source>Custom formatters can also be distributed through npm packages. To do so, create an npm package with a name in the format of &lt;code&gt;eslint-formatter-*&lt;/code&gt;, where &lt;code&gt;*&lt;/code&gt; is the name of your formatter (such as &lt;code&gt;eslint-formatter-awesome&lt;/code&gt;). Projects should then install the package and can use the custom formatter with the &lt;code&gt;-f&lt;/code&gt; (or &lt;code&gt;--format&lt;/code&gt;) flag like this:</source>
          <target state="translated">Пользовательские форматеры также могут распространяться через пакеты npm. Для этого создайте пакет npm с именем в формате &lt;code&gt;eslint-formatter-*&lt;/code&gt; , где &lt;code&gt;*&lt;/code&gt; - имя вашего средства форматирования (например, &lt;code&gt;eslint-formatter-awesome&lt;/code&gt; ). Затем проекты должны установить пакет и могут использовать настраиваемое средство форматирования с флагом &lt;code&gt;-f&lt;/code&gt; (или &lt;code&gt;--format&lt;/code&gt; ) следующим образом:</target>
        </trans-unit>
        <trans-unit id="09fdbd253240e582c58bf7112d231f0aea07470b" translate="yes" xml:space="preserve">
          <source>Custom formatters can also be distributed through npm packages. To do so, create an npm package with a name in the format of &lt;code&gt;eslint-formatter-*&lt;/code&gt;, where &lt;code&gt;*&lt;/code&gt; is the name of your formatter (such as &lt;code&gt;eslint-formatter-awesome&lt;/code&gt;). Projects should then install the package and can use the custom formatter with the &lt;code&gt;-f&lt;/code&gt; (or &lt;code&gt;--formatter&lt;/code&gt;) flag like this:</source>
          <target state="translated">Пользовательские форматеры также могут распространяться через пакеты npm. Для этого создайте пакет npm с именем в формате &lt;code&gt;eslint-formatter-*&lt;/code&gt; , где &lt;code&gt;*&lt;/code&gt; - имя вашего средства форматирования (например, &lt;code&gt;eslint-formatter-awesome&lt;/code&gt; ). Затем проекты должны установить пакет и могут использовать настраиваемое средство форматирования с флагом &lt;code&gt;-f&lt;/code&gt; (или &lt;code&gt;--formatter&lt;/code&gt; ) следующим образом:</target>
        </trans-unit>
        <trans-unit id="a49ca4f33339169f36b15576df0f6a281afa0ea0" translate="yes" xml:space="preserve">
          <source>Custom formatters have access to environment variables and so can change their behavior based on environment variable data. Here's an example that uses a &lt;code&gt;AF_SKIP_WARNINGS&lt;/code&gt; environment variable to determine whether or not to show warnings in the results:</source>
          <target state="translated">Пользовательские программы форматирования имеют доступ к переменным среды и поэтому могут изменять свое поведение в зависимости от данных переменных среды. Вот пример, который использует &lt;code&gt;AF_SKIP_WARNINGS&lt;/code&gt; среды AF_SKIP_WARNINGS, чтобы определить, отображать ли предупреждения в результатах:</target>
        </trans-unit>
        <trans-unit id="7ff15870ecf0785cf1ed6f565432cb4eab789c25" translate="yes" xml:space="preserve">
          <source>Customizing RuleTester</source>
          <target state="translated">Настройка тестера правил</target>
        </trans-unit>
        <trans-unit id="828863d4cbf7b3824c5a65d94542f5b6e50c30c6" translate="yes" xml:space="preserve">
          <source>Cyclomatic Complexity</source>
          <target state="translated">Цикломатическая сложность</target>
        </trans-unit>
        <trans-unit id="380d9bc0a9b56d3d4830a8ed4465765522454a9e" translate="yes" xml:space="preserve">
          <source>Cyclomatic complexity measures the number of linearly independent paths through a program's source code. This rule allows setting a cyclomatic complexity threshold.</source>
          <target state="translated">Цикломатическая сложность измеряет количество линейно независимых путей через исходный код программы.Это правило позволяет установить порог цикломатической сложности.</target>
        </trans-unit>
        <trans-unit id="3dea78e2b42ff6c53cdfe32a0caf66a693083f61" translate="yes" xml:space="preserve">
          <source>Debugger</source>
          <target state="translated">Debugger</target>
        </trans-unit>
        <trans-unit id="3eff362745911d820434d922e99ea187252312d8" translate="yes" xml:space="preserve">
          <source>Declarations that create one or more variables in the global scope.</source>
          <target state="translated">Декларации,создающие одну или несколько переменных в глобальном масштабе.</target>
        </trans-unit>
        <trans-unit id="ae36edf0e14affd7d5d4b81d1097df1dbe09bdac" translate="yes" xml:space="preserve">
          <source>Default Changes When Using &lt;code&gt;eslint:recommended&lt;/code&gt;</source>
          <target state="translated">Изменения по умолчанию при использовании &lt;code&gt;eslint:recommended&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc5b08caa16422344217917ff185d24cf8e1bd8a" translate="yes" xml:space="preserve">
          <source>Default callback names</source>
          <target state="translated">Имена по умолчанию для обратного вызова</target>
        </trans-unit>
        <trans-unit id="d593d0478aa303348496061be603076710abf565" translate="yes" xml:space="preserve">
          <source>Default ignore patterns are applied even when &lt;code&gt;ignorePattern&lt;/code&gt; is provided. If you want to omit default patterns, set this option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Шаблоны игнорирования по умолчанию применяются, даже если предоставляется &lt;code&gt;ignorePattern&lt;/code&gt; . Если вы хотите опустить шаблоны по умолчанию, установите для этого параметра значение &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e9c2225edfd884a60f52e23998677fc7ce228f5" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;.eslintcache&lt;/code&gt;. The &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method writes caches into this file.</source>
          <target state="translated">По умолчанию &lt;code&gt;.eslintcache&lt;/code&gt; . Метод &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt; записывает кеши в этот файл.</target>
        </trans-unit>
        <trans-unit id="25c7bbf1b91e722e82b0d09e64d1596bc8d41673" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[&quot;none&quot;, &quot;all&quot;, &quot;multiple&quot;, &quot;single&quot;]&lt;/code&gt;.</source>
          <target state="translated">По умолчанию &lt;code&gt;[&quot;none&quot;, &quot;all&quot;, &quot;multiple&quot;, &quot;single&quot;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b71cb2860070f2fc3d338679c4d922d4e3a44b0" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[]&lt;/code&gt;. An array of paths to directories to load custom rules from.</source>
          <target state="translated">По умолчанию &lt;code&gt;[]&lt;/code&gt; . Массив путей к каталогам, из которых загружаются пользовательские правила.</target>
        </trans-unit>
        <trans-unit id="b16e15890d3d5add9f5075d6403813ccbaeb0554" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">По умолчанию - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="598448b6fba9a28fcd37e1443c48fbce87e9516f" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt; is present, the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#-eslintlinttextcode-options&quot;&gt;&lt;code&gt;eslint.lintText()&lt;/code&gt;&lt;/a&gt; methods work in autofix mode. If a predicate function is present, the methods pass each lint message to the function, then use only the lint messages for which the function returned &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">По умолчанию - &lt;code&gt;false&lt;/code&gt; . Если присутствует &lt;code&gt;true&lt;/code&gt; , &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#-eslintlinttextcode-options&quot;&gt; &lt;code&gt;eslint.lintText()&lt;/code&gt; &lt;/a&gt; работают в режиме автофиксации. Если присутствует функция-предикат, методы передают в функцию каждое сообщение lint, а затем используют только те сообщения lint, для которых функция вернула &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27c3d915faf3f91fab9b1494e842e5553b619de7" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt; is present, the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method caches lint results and uses it if each target file is not changed. Please mind that ESLint doesn't clear the cache when you upgrade ESLint plugins. In that case, you have to remove the cache file manually. The &lt;a href=&quot;#-eslintlinttextcode-options&quot;&gt;&lt;code&gt;eslint.lintText()&lt;/code&gt;&lt;/a&gt; method doesn't use caches even if you pass the &lt;code&gt;options.filePath&lt;/code&gt; to the method.</source>
          <target state="translated">По умолчанию - &lt;code&gt;false&lt;/code&gt; . Если присутствует &lt;code&gt;true&lt;/code&gt; , метод &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt; кэширует результаты lint и использует их, если каждый целевой файл не изменяется. Помните, что ESLint не очищает кеш при обновлении плагинов ESLint. В этом случае вам придется удалить файл кеша вручную. Метод &lt;a href=&quot;#-eslintlinttextcode-options&quot;&gt; &lt;code&gt;eslint.lintText()&lt;/code&gt; &lt;/a&gt; не использует кеши, даже если вы передаете в метод &lt;code&gt;options.filePath&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0a023fac77be901f2566d4de14b51e9bebd6fba" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. &lt;a href=&quot;../user-guide/configuring&quot;&gt;Configuration object&lt;/a&gt;, extended by all configurations used with this instance. You can use this option to define the default settings that will be used if your configuration files don't configure it.</source>
          <target state="translated">По умолчанию - &lt;code&gt;null&lt;/code&gt; . &lt;a href=&quot;../user-guide/configuring&quot;&gt;Объект конфигурации&lt;/a&gt; , расширенный всеми конфигурациями, используемыми с этим экземпляром. Вы можете использовать этот параметр, чтобы определить параметры по умолчанию, которые будут использоваться, если ваши файлы конфигурации не настраивают его.</target>
        </trans-unit>
        <trans-unit id="1a41da4f6c453e3afabfc758a44eb4e66435e8bf" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. &lt;a href=&quot;../user-guide/configuring&quot;&gt;Configuration object&lt;/a&gt;, overrides all configurations used with this instance. You can use this option to define the settings that will be used even if your configuration files configure it.</source>
          <target state="translated">По умолчанию - &lt;code&gt;null&lt;/code&gt; . &lt;a href=&quot;../user-guide/configuring&quot;&gt;Объект конфигурации&lt;/a&gt; , отменяет все конфигурации, используемые с этим экземпляром. Вы можете использовать эту опцию, чтобы определить настройки, которые будут использоваться, даже если ваши файлы конфигурации настраивают их.</target>
        </trans-unit>
        <trans-unit id="8451c4e028e9ea78a284e8b9c474611132f93be9" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. If you pass directory paths to the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method, ESLint checks the files in those directories that have the given extensions. For example, when passing the &lt;code&gt;src/&lt;/code&gt; directory and &lt;code&gt;extensions&lt;/code&gt; is &lt;code&gt;[&quot;.js&quot;, &quot;.ts&quot;]&lt;/code&gt;, ESLint will lint &lt;code&gt;*.js&lt;/code&gt; and &lt;code&gt;*.ts&lt;/code&gt; files in &lt;code&gt;src/&lt;/code&gt;. If &lt;code&gt;extensions&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, ESLint checks &lt;code&gt;*.js&lt;/code&gt; files and files that match &lt;code&gt;overrides[].files&lt;/code&gt; patterns in your configuration.</source>
          <target state="translated">По умолчанию - &lt;code&gt;null&lt;/code&gt; . Если вы передаете пути к &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt; методу eslint.lintFiles () , ESLint проверяет файлы в тех каталогах, которые имеют указанные расширения. Например, при прохождении &lt;code&gt;src/&lt;/code&gt; каталога и &lt;code&gt;extensions&lt;/code&gt; является &lt;code&gt;[&quot;.js&quot;, &quot;.ts&quot;]&lt;/code&gt; , ESLint будет нибудь вкусненькое &lt;code&gt;*.js&lt;/code&gt; и &lt;code&gt;*.ts&lt;/code&gt; файлы в &lt;code&gt;src/&lt;/code&gt; . Если &lt;code&gt;extensions&lt;/code&gt; имеет значение &lt;code&gt;null&lt;/code&gt; , ESLint проверяет файлы &lt;code&gt;*.js&lt;/code&gt; и файлы, которые соответствуют шаблонам &lt;code&gt;overrides[].files&lt;/code&gt; Files в вашей конфигурации.</target>
        </trans-unit>
        <trans-unit id="66637e5e13f47d94c40ccc311c95cfbcd53e2a36" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. The path to a configuration file, overrides all configurations used with this instance. The &lt;code&gt;options.overrideConfig&lt;/code&gt; option is applied after this option is applied.</source>
          <target state="translated">По умолчанию - &lt;code&gt;null&lt;/code&gt; . Путь к файлу конфигурации отменяет все конфигурации, используемые с этим экземпляром. Параметр &lt;code&gt;options.overrideConfig&lt;/code&gt; применяется после применения этого параметра.</target>
        </trans-unit>
        <trans-unit id="dd986bcfdec2af9b44b83c4105ffc317e82dc37b" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. The path to a directory where plugins should be resolved from. If &lt;code&gt;null&lt;/code&gt; is present, ESLint loads plugins from the location of the configuration file that contains the plugin setting. If a path is present, ESLint loads all plugins from there.</source>
          <target state="translated">По умолчанию - &lt;code&gt;null&lt;/code&gt; . Путь к каталогу, из которого должны быть разрешены плагины. Если присутствует &lt;code&gt;null&lt;/code&gt; , ESLint загружает плагины из расположения файла конфигурации, который содержит настройку плагина. Если путь присутствует, ESLint загружает оттуда все плагины.</target>
        </trans-unit>
        <trans-unit id="b93b986f74766044e908a0e0f9654f75bfd847e4" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. The path to a file ESLint uses instead of &lt;code&gt;$CWD/.eslintignore&lt;/code&gt;. If a path is present and the file doesn't exist, this constructor will throw an error.</source>
          <target state="translated">По умолчанию - &lt;code&gt;null&lt;/code&gt; . Путь к файлу, который ESLint использует вместо &lt;code&gt;$CWD/.eslintignore&lt;/code&gt; . Если путь присутствует, а файл не существует, этот конструктор выдаст ошибку.</target>
        </trans-unit>
        <trans-unit id="10ea587d1e8f386a5439adc92d903a83c1cc54f6" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. The plugin implementations that ESLint uses for the &lt;code&gt;plugins&lt;/code&gt; setting of your configuration. This is a map-like object. Those keys are plugin IDs and each value is implementation.</source>
          <target state="translated">По умолчанию - &lt;code&gt;null&lt;/code&gt; . Реализации плагинов, которые ESLint использует для настройки &lt;code&gt;plugins&lt;/code&gt; в вашей конфигурации. Это объект, похожий на карту. Эти ключи являются идентификаторами плагинов, а каждое значение - реализацией.</target>
        </trans-unit>
        <trans-unit id="6b91dc204a2b0e2c5e37eb9d594841adc25d68ed" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. The severity to report unused eslint-disable directives. If this option is a severity, it overrides the &lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; setting in your configurations.</source>
          <target state="translated">По умолчанию - &lt;code&gt;null&lt;/code&gt; . Важность сообщения о неиспользуемых директивах eslint-disable. Если этот параметр является серьезностью, он переопределяет параметр &lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; в ваших конфигурациях.</target>
        </trans-unit>
        <trans-unit id="3e22638a24af5c5205f2724c137f21e8ca25a3fb" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. The types of the rules that the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#-eslintlinttextcode-options&quot;&gt;&lt;code&gt;eslint.lintText()&lt;/code&gt;&lt;/a&gt; methods use for autofix.</source>
          <target state="translated">По умолчанию - &lt;code&gt;null&lt;/code&gt; . Типы правил, которые используют &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#-eslintlinttextcode-options&quot;&gt; &lt;code&gt;eslint.lintText()&lt;/code&gt; &lt;/a&gt; для автоисправления.</target>
        </trans-unit>
        <trans-unit id="d91adc91c2f78f221f941fae0914eb5347afb841" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;process.cwd()&lt;/code&gt;. The working directory. This must be an absolute path.</source>
          <target state="translated">По умолчанию - &lt;code&gt;process.cwd()&lt;/code&gt; . Рабочий каталог. Это должен быть абсолютный путь.</target>
        </trans-unit>
        <trans-unit id="d8225cfda7d85f065c01c21ca1adebd0c97a5939" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;false&lt;/code&gt; is present, ESLint doesn't load configuration files (&lt;code&gt;.eslintrc.*&lt;/code&gt; files). Only the configuration of the constructor options is valid.</source>
          <target state="translated">По умолчанию &lt;code&gt;true&lt;/code&gt; . Если присутствует &lt;code&gt;false&lt;/code&gt; , ESLint не загружает файлы конфигурации (файлы &lt;code&gt;.eslintrc.*&lt;/code&gt; ). Действительна только конфигурация параметров конструктора.</target>
        </trans-unit>
        <trans-unit id="fcc58b35179718912edb0cdbff3d25e986675592" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;false&lt;/code&gt; is present, ESLint suppresses directive comments in source code. If this option is &lt;code&gt;false&lt;/code&gt;, it overrides the &lt;code&gt;noInlineConfig&lt;/code&gt; setting in your configurations.</source>
          <target state="translated">По умолчанию &lt;code&gt;true&lt;/code&gt; . Если присутствует &lt;code&gt;false&lt;/code&gt; , ESLint подавляет директивные комментарии в исходном коде. Если этот параметр имеет значение &lt;code&gt;false&lt;/code&gt; , он переопределяет параметр &lt;code&gt;noInlineConfig&lt;/code&gt; в ваших конфигурациях.</target>
        </trans-unit>
        <trans-unit id="f21d09d0c772e1d88c6aac405151585c851cc7d4" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;false&lt;/code&gt; is present, the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method doesn't interpret glob patterns.</source>
          <target state="translated">По умолчанию &lt;code&gt;true&lt;/code&gt; . Если присутствует &lt;code&gt;false&lt;/code&gt; , метод &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt; не интерпретирует шаблоны глобусов .</target>
        </trans-unit>
        <trans-unit id="1e4f9be584df6a71172ba8570141bcb2d1537b0b" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;false&lt;/code&gt; is present, the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method doesn't respect &lt;code&gt;.eslintignore&lt;/code&gt; files or &lt;code&gt;ignorePatterns&lt;/code&gt; in your configuration.</source>
          <target state="translated">По умолчанию &lt;code&gt;true&lt;/code&gt; . Если присутствует &lt;code&gt;false&lt;/code&gt; , метод &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt; не &lt;code&gt;.eslintignore&lt;/code&gt; файлы &lt;code&gt;ignorePatterns&lt;/code&gt; и не игнорирует шаблоны в вашей конфигурации.</target>
        </trans-unit>
        <trans-unit id="068c00200a1ac88d2a52cd341c1f988f7c7f5d38" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt;. Unless set to &lt;code&gt;false&lt;/code&gt;, the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method will throw an error when no target files are found.</source>
          <target state="translated">По умолчанию &lt;code&gt;true&lt;/code&gt; . Если не установлено значение &lt;code&gt;false&lt;/code&gt; , метод &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt; выдаст ошибку, если целевые файлы не найдены.</target>
        </trans-unit>
        <trans-unit id="5db254bea50a14b0e9eb1a7b0b2d120ed7192f40" translate="yes" xml:space="preserve">
          <source>Default option settings are:</source>
          <target state="translated">Настройки по умолчанию:</target>
        </trans-unit>
        <trans-unit id="57afbebd04d4d02458682eb7fa90339a9d41caac" translate="yes" xml:space="preserve">
          <source>Default settings</source>
          <target state="translated">Настройки по умолчанию</target>
        </trans-unit>
        <trans-unit id="7f9b50b419df7a7306166622f8485bc222304810" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;{ allowNamedFunctions: false, allowUnboundThis: true }&lt;/code&gt;</source>
          <target state="translated">По умолчанию: &lt;code&gt;{ allowNamedFunctions: false, allowUnboundThis: true }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="451675c2ac1c560bdc9110dbf215c31e25d75d4b" translate="yes" xml:space="preserve">
          <source>Definition interface</source>
          <target state="translated">Интерфейс определения</target>
        </trans-unit>
        <trans-unit id="f0a4e82467fb83dc35208cbfc344efc585b6c0fe" translate="yes" xml:space="preserve">
          <source>Demonstrate a possible issue that can be resolved by rewriting the code.</source>
          <target state="translated">Продемонстрировать возможную проблему,которая может быть решена путем переписывания кода.</target>
        </trans-unit>
        <trans-unit id="4b6d8366b797ab9ee8e0cc6db6b82788c4bc11e5" translate="yes" xml:space="preserve">
          <source>Depending on your coding conventions, you can choose either option by specifying it in your configuration:</source>
          <target state="translated">В зависимости от ваших соглашений о кодировании,вы можете выбрать любой из вариантов,указав его в вашей конфигурации:</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="600c4c32abbd0e6044d374f8d9f63e6c5b81d165" translate="yes" xml:space="preserve">
          <source>Deprecated APIs</source>
          <target state="translated">Исключенные API</target>
        </trans-unit>
        <trans-unit id="c4f155b5226ef5ac72a09b1d5a0533269a381da6" translate="yes" xml:space="preserve">
          <source>Deprecated and Obsolete Features</source>
          <target state="translated">Утраченные и устаревшие функции</target>
        </trans-unit>
        <trans-unit id="bf4371ef922e51fe0fbf59bbe7402cdd622276e4" translate="yes" xml:space="preserve">
          <source>Deprecated globals have been removed from the &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;browser&lt;/code&gt;, and &lt;code&gt;jest&lt;/code&gt; environments</source>
          <target state="translated">Устаревшие глобальные переменные были удалены из сред &lt;code&gt;node&lt;/code&gt; , &lt;code&gt;browser&lt;/code&gt; и &lt;code&gt;jest&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9c460045501a8ea3d1357c1eef23be6e4ef8098" translate="yes" xml:space="preserve">
          <source>Deprecated members</source>
          <target state="translated">Иностранные члены</target>
        </trans-unit>
        <trans-unit id="bd4941fe9de2de7fc433b3e9590719cbde5ce1aa" translate="yes" xml:space="preserve">
          <source>Deprecated rule</source>
          <target state="translated">Исключенное правило</target>
        </trans-unit>
        <trans-unit id="75e97da83707a37248cd49df2d934d2760fd166a" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Function.prototype.apply()&lt;/code&gt; and &lt;code&gt;Function.prototype.call()&lt;/code&gt;</source>
          <target state="translated">Устарела &lt;code&gt;Function.prototype.apply()&lt;/code&gt; и &lt;code&gt;Function.prototype.call()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e96f0d28fd9c327f3a8bd126ed5ddf0e9d31362" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.defineProperty()&lt;/code&gt;</source>
          <target state="translated">Принижает &lt;code&gt;Object.defineProperty()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4651e4f11985967e23527250c22fcf73a7b68d2" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;</source>
          <target state="translated">Принижает &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c85da6d70b6b0f2080d1abb54f535bc82832569" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;</source>
          <target state="translated">Принижает &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6a80f0a943444763e9338742b33411b38ddfd03" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;</source>
          <target state="translated">Принижает &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f56df2f09f86a9f6a057489f7ceb4b1e0b1c8ac" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.isExtensible&lt;/code&gt;</source>
          <target state="translated">принижает &lt;code&gt;Object.isExtensible&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b4a984ce7a52ddef7e2e804d2988e9b66ebb3da" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.preventExtensions()&lt;/code&gt;</source>
          <target state="translated">Устарела &lt;code&gt;Object.preventExtensions()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="697b260a0cee6bea439f0681489e15b057680498" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;</source>
          <target state="translated">Принижает &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5d843f5ea2093ccb6671aa0c04b0070848e9831" translate="yes" xml:space="preserve">
          <source>Deprecates the &lt;code&gt;delete&lt;/code&gt; keyword</source>
          <target state="translated">Устарело ключевое слово &lt;code&gt;delete&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c34fc5b3589467a8b7d78b90f9e856a1d025822a" translate="yes" xml:space="preserve">
          <source>Deprecating eslint-tester</source>
          <target state="translated">Исправительный эслинт-тестер</target>
        </trans-unit>
        <trans-unit id="58326a4f36308b30e682115f0391f02ad1f1cb6a" translate="yes" xml:space="preserve">
          <source>Derived config: &lt;code&gt;&quot;eqeqeq&quot;: &quot;warn&quot;&lt;/code&gt;</source>
          <target state="translated">Полученная конфигурация: &lt;code&gt;&quot;eqeqeq&quot;: &quot;warn&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50157f44d361dccb8b219046318d94280d12f251" translate="yes" xml:space="preserve">
          <source>Derived config: &lt;code&gt;&quot;quotes&quot;: [&quot;error&quot;, &quot;single&quot;]&lt;/code&gt;</source>
          <target state="translated">Полученная конфигурация: &lt;code&gt;&quot;quotes&quot;: [&quot;error&quot;, &quot;single&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab7e9672823162cea83632332d7f5bb05a7b1d63" translate="yes" xml:space="preserve">
          <source>Describe the syntax for creating selectors</source>
          <target state="translated">Опишите синтаксис создания селекторов</target>
        </trans-unit>
        <trans-unit id="01680ee6453e68589c3aabb95cdb46608254dfb5" translate="yes" xml:space="preserve">
          <source>Describe what selectors can be used for</source>
          <target state="translated">Опишите,какие селекторы можно использовать для</target>
        </trans-unit>
        <trans-unit id="d1c0aca59d56726527f2d287027312d0a2431f92" translate="yes" xml:space="preserve">
          <source>Despite being in an entirely different directory, you'll see that all &lt;code&gt;extends&lt;/code&gt; must use the full package path to the config file you wish to extend.</source>
          <target state="translated">Несмотря на то что в совершенно другом каталоге, вы увидите , что все &lt;code&gt;extends&lt;/code&gt; , должны использовать полный путь пакета в файл конфигурации , который вы хотите продлить.</target>
        </trans-unit>
        <trans-unit id="97de83a38aca7a49888fc2600669f90c3021604a" translate="yes" xml:space="preserve">
          <source>Destructuring Assignment (MDN)</source>
          <target state="translated">Деструктурирующее назначение (MDN)</target>
        </trans-unit>
        <trans-unit id="1af4d3a9d765ca9815a04de048f7476eee434543" translate="yes" xml:space="preserve">
          <source>Destructuring and parameter handling in ECMAScript 6 (2ality blog)</source>
          <target state="translated">Деструктуризация и обработка параметров в ECMAScript 6 (блог 2ality)</target>
        </trans-unit>
        <trans-unit id="be8b6eb7c46e6f508b4952b114beaadc64f12f31" translate="yes" xml:space="preserve">
          <source>Detailed formatter</source>
          <target state="translated">Детальное форматное устройство</target>
        </trans-unit>
        <trans-unit id="89d8307a053cef0b6777a2a38a4d8fb22f7faeb6" translate="yes" xml:space="preserve">
          <source>Details about each step are found below.</source>
          <target state="translated">Подробная информация о каждом шаге приведена ниже.</target>
        </trans-unit>
        <trans-unit id="45e199c34f2e47d26bd6cf3b0bc418229f9353d7" translate="yes" xml:space="preserve">
          <source>Developer Guide</source>
          <target state="translated">Руководство разработчика</target>
        </trans-unit>
        <trans-unit id="b48b68fd11698f8781f082afb08161421c5cb1fc" translate="yes" xml:space="preserve">
          <source>Developers often add comments to code which is not complete or needs review. Most likely you want to fix or review the code, and then remove the comment, before you consider the code to be production ready.</source>
          <target state="translated">Разработчики часто добавляют в код комментарии,которые не являются полными или нуждаются в пересмотре.Скорее всего,вы хотите исправить или просмотреть код,а затем удалить комментарий,прежде чем считать код готовым к работе.</target>
        </trans-unit>
        <trans-unit id="e3f134b627d779aaad681c98b57de489c6fa39f9" translate="yes" xml:space="preserve">
          <source>Developing for ESLint is a bit different than running it on the command line. This section shows you how to set up a development environment and get you ready to write code.</source>
          <target state="translated">Разработка для ESLint немного отличается от запуска в командной строке.В этом разделе показано,как настроить среду разработки и подготовиться к написанию кода.</target>
        </trans-unit>
        <trans-unit id="33b718e3426ebb543a11c3c5fcd59853368c8fdd" translate="yes" xml:space="preserve">
          <source>Development Environment</source>
          <target state="translated">Среда развития</target>
        </trans-unit>
        <trans-unit id="8013f0bbec79ed59d47cf77e67c933aae7cc1124" translate="yes" xml:space="preserve">
          <source>Directives are used in JavaScript to indicate to the execution environment that a script would like to opt into a feature such as &lt;code&gt;&quot;strict mode&quot;&lt;/code&gt;. Directives are grouped together in a &lt;a href=&quot;https://www.ecma-international.org/ecma-262/7.0/#directive-prologue&quot;&gt;directive prologue&lt;/a&gt; at the top of either a file or function block and are applied to the scope in which they occur.</source>
          <target state="translated">Директивы используются в JavaScript, чтобы указать среде выполнения, что сценарий желает использовать такую ​​функцию, как &lt;code&gt;&quot;strict mode&quot;&lt;/code&gt; . Директивы сгруппированы вместе в &lt;a href=&quot;https://www.ecma-international.org/ecma-262/7.0/#directive-prologue&quot;&gt;прологе директивы&lt;/a&gt; вверху файла или функционального блока и применяются к области, в которой они встречаются.</target>
        </trans-unit>
        <trans-unit id="07461fdd8bbd77721cfe447edf9e4bd20cbd0023" translate="yes" xml:space="preserve">
          <source>Directory structure</source>
          <target state="translated">Структура каталога</target>
        </trans-unit>
        <trans-unit id="459ceaedc40826269ef60f711ebad6d9c5aade2c" translate="yes" xml:space="preserve">
          <source>Disable all rules</source>
          <target state="translated">Отключить все правила</target>
        </trans-unit>
        <trans-unit id="1befa33ecf40b3dc4e5f34847334167468085d4f" translate="yes" xml:space="preserve">
          <source>Disable multiple rules</source>
          <target state="translated">Отключить несколько правил</target>
        </trans-unit>
        <trans-unit id="dca98b5d9eebc53d965cc8adf37f4f58b6bed991" translate="yes" xml:space="preserve">
          <source>Disable one rule</source>
          <target state="translated">Отключить одно правило</target>
        </trans-unit>
        <trans-unit id="bb0d9676523b61c6ad0b2165fb3aa81e81d0d170" translate="yes" xml:space="preserve">
          <source>Disable one rule on single line</source>
          <target state="translated">Отключить одно правило на одной линии</target>
        </trans-unit>
        <trans-unit id="287de7a611f443ad4166b545ab1f2bd47e9a0e4b" translate="yes" xml:space="preserve">
          <source>Disable this rule if sequence expressions with the comma operator are acceptable. Another case is where you might want to report all usages of the comma operator, even if they are wrapped in parentheses or in a for loop. You can achieve this using rule &lt;code&gt;no-restricted-syntax&lt;/code&gt;:</source>
          <target state="translated">Отключите это правило, если допустимы выражения последовательности с оператором запятой. Другой случай - когда вы можете захотеть сообщить обо всех случаях использования оператора запятой, даже если они заключены в круглые скобки или в цикле for. Вы можете добиться этого, используя &lt;code&gt;no-restricted-syntax&lt;/code&gt; правила без ограничений :</target>
        </trans-unit>
        <trans-unit id="bf3eb14ac0b636c4581b55b732a2fe4f35df8ba0" translate="yes" xml:space="preserve">
          <source>Disable this rule if the code is clearer without requiring the &lt;code&gt;else if&lt;/code&gt; form.</source>
          <target state="translated">Отключите это правило, если код более понятен и не требует формы &lt;code&gt;else if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8737efd5806494af343de944cb08475ed8ca65e" translate="yes" xml:space="preserve">
          <source>Disables excluding of files from &lt;code&gt;.eslintignore&lt;/code&gt;, &lt;code&gt;--ignore-path&lt;/code&gt;, &lt;code&gt;--ignore-pattern&lt;/code&gt;, and &lt;code&gt;ignorePatterns&lt;/code&gt; property in config files.</source>
          <target state="translated">Отключает исключение файлов из &lt;code&gt;.eslintignore&lt;/code&gt; , &lt;code&gt;--ignore-path&lt;/code&gt; , &lt;code&gt;--ignore-pattern&lt;/code&gt; и &lt;code&gt;ignorePatterns&lt;/code&gt; в файлах конфигурации.</target>
        </trans-unit>
        <trans-unit id="e0879e9fee4af87fa641a02d77d443c4f3580b8c" translate="yes" xml:space="preserve">
          <source>Disables use of configuration from &lt;code&gt;.eslintrc.*&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt; files.</source>
          <target state="translated">Отключает использование конфигурации из &lt;code&gt;.eslintrc.*&lt;/code&gt; И &lt;code&gt;package.json&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
