<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="ocaml">
    <body>
      <group id="ocaml">
        <trans-unit id="9b6f52b23ca4f9826b4afac22ef26467ec6a903d" translate="yes" xml:space="preserve">
          <source>backslash (\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df93ce81475de263e8c9cd99e6db886626f778cb" translate="yes" xml:space="preserve">
          <source>backspace (BS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d129197ad7bbf1516510a57dad2884265f6481" translate="yes" xml:space="preserve">
          <source>backstep [count]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5efbbeae5af04794d9bfdfa1b67fbd6b2a754b" translate="yes" xml:space="preserve">
          <source>backtrace [count], bt [count]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1c164d98ab04d2e7526e178c2bb0898d0e2c48" translate="yes" xml:space="preserve">
          <source>because the nested box &lt;code&gt;&quot;@[7@]&quot;&lt;/code&gt; is opened after the maximum indentation limit (&lt;code&gt;7&amp;gt;5&lt;/code&gt;) and its parent box does not fit on the current line. Either decreasing the length of the parent box to make it fit on a line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e58ac78738f8185ee5c7c2c3d83aca0198db529" translate="yes" xml:space="preserve">
          <source>becomes</source>
          <target state="translated">becomes</target>
        </trans-unit>
        <trans-unit id="a8b34082638e0ab7e5f1583cfeb4eaae1d137611" translate="yes" xml:space="preserve">
          <source>begin, &lt;a href=&quot;const#hevea_manual.kwd13&quot;&gt;7.5&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd38&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd58&quot;&gt;7.7.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbbaa8525df456049f378ce5f890b00b21d15f96" translate="yes" xml:space="preserve">
          <source>begin&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;end</source>
          <target state="translated">begin&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;end</target>
        </trans-unit>
        <trans-unit id="d1dc25355bd9b369668d0373cf8c41939c1455bb" translate="yes" xml:space="preserve">
          <source>beginend</source>
          <target state="translated">beginend</target>
        </trans-unit>
        <trans-unit id="3fe6381046bb4b68161f33c5c83f32615ed528b6" translate="yes" xml:space="preserve">
          <source>binary (radix 2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad022478fc3c13fcde899deb3d9a5f6c35ad6ff0" translate="yes" xml:space="preserve">
          <source>blank-line</source>
          <target state="translated">blank-line</target>
        </trans-unit>
        <trans-unit id="80a25bf9e5d787c109376c0b79d204a87d3b2159" translate="yes" xml:space="preserve">
          <source>booleans</source>
          <target state="translated">booleans</target>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>
        </trans-unit>
        <trans-unit id="8d6f2c43bf7d14f05fb406a9d11b58c27f57ccfa" translate="yes" xml:space="preserve">
          <source>break @ [module] #character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fb4da1603f2165312382ba6b7e3d575d006be2" translate="yes" xml:space="preserve">
          <source>break @ [module] line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d8bb500e6542711de79a9522950a0ad8d09ecb" translate="yes" xml:space="preserve">
          <source>break @ [module] line column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c887c2526d97de3130955f38f51b2710ab19ca84" translate="yes" xml:space="preserve">
          <source>break frag:pc, break pc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440c5d3712c1ce9be8754b77591e60e9d7572762" translate="yes" xml:space="preserve">
          <source>break function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71bf9164126dca1c327bcca37fd7ec31c7b94e2" translate="yes" xml:space="preserve">
          <source>buf:</source>
          <target state="translated">buf:</target>
        </trans-unit>
        <trans-unit id="885b44d5eac8ca9716435d7d2f0b938495af5313" translate="yes" xml:space="preserve">
          <source>build a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96e9b2af6622992b34c617e57c81324a1b22b0e" translate="yes" xml:space="preserve">
          <source>build an enumerated list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb7ca68f1d3edf023c22979b31f0f08c02a05b7" translate="yes" xml:space="preserve">
          <source>builds the C libraries dllzip.so and libzip.a. Notice that the support libraries (-lz) and the corresponding options (-L/usr/local/zlib) must be given on all three invocations of ocamlmklib, because they are needed at different times depending on whether shared libraries are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511cde4c103875c617ba39c165112bd2d73e4def" translate="yes" xml:space="preserve">
          <source>builds the bytecode library zip.cma, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bcc7f8344e049ea476cc39db2cb837f4351dfe" translate="yes" xml:space="preserve">
          <source>builds the native-code library zip.cmxa, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ab8be307405fed6a651c74d6a5644f4ff84d65" translate="yes" xml:space="preserve">
          <source>but they cannot be nested inside other patterns. For instance, the pattern Some (exception A) is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56b6970aa26b3b1dcd7e2c05df93eb8064f9bd3" translate="yes" xml:space="preserve">
          <source>but this means that any code of the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c415733b56482edd139e3f7e0964c8f096b31d0" translate="yes" xml:space="preserve">
          <source>by using the &lt;code&gt;&quot;-pp&quot;&lt;/code&gt; command-line switch of the compilers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf529a73101c2be626b99fc6938163e7a27620b" translate="yes" xml:space="preserve">
          <source>bytes</source>
          <target state="translated">bytes</target>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="translated">c</target>
        </trans-unit>
        <trans-unit id="41535945af8a1312d2d53c678e85ddeccdb77180" translate="yes" xml:space="preserve">
          <source>callback from C to OCaml (see section &amp;zwj;&lt;a href=&quot;#s%3Ac-callback&quot;&gt;18.7&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c15bf05ba15e346da77ead7dab8af27ed6c2f8" translate="yes" xml:space="preserve">
          <source>callback from C to OCaml (see section &lt;a href=&quot;#s%3Ac-callback&quot;&gt;20.7&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b71b4b35cc8fe63833d6e0e8185d7156c69e349" translate="yes" xml:space="preserve">
          <source>caml/alloc.h</source>
          <target state="translated">caml/alloc.h</target>
        </trans-unit>
        <trans-unit id="4471df25a307ba67e7aad2a84935b80ee087ba56" translate="yes" xml:space="preserve">
          <source>caml/callback.h</source>
          <target state="translated">caml/callback.h</target>
        </trans-unit>
        <trans-unit id="592c7ccf3ba8d4279c07377701d1330a620a0465" translate="yes" xml:space="preserve">
          <source>caml/custom.h</source>
          <target state="translated">caml/custom.h</target>
        </trans-unit>
        <trans-unit id="8792decdf7bf2bb976bd1e40904954d928525a86" translate="yes" xml:space="preserve">
          <source>caml/fail.h</source>
          <target state="translated">caml/fail.h</target>
        </trans-unit>
        <trans-unit id="f8667dfad754b997816f201603db4fba194f86fe" translate="yes" xml:space="preserve">
          <source>caml/intext.h</source>
          <target state="translated">caml/intext.h</target>
        </trans-unit>
        <trans-unit id="890fcb00d9fbe640855da092f035fa0325fa9d4d" translate="yes" xml:space="preserve">
          <source>caml/memory.h</source>
          <target state="translated">caml/memory.h</target>
        </trans-unit>
        <trans-unit id="3b9e73982305334ad406a6817eb43383bc9250f7" translate="yes" xml:space="preserve">
          <source>caml/mlvalues.h</source>
          <target state="translated">caml/mlvalues.h</target>
        </trans-unit>
        <trans-unit id="dffc05b944c1dae59e693eb0c0be9a909cd07363" translate="yes" xml:space="preserve">
          <source>caml/threads.h</source>
          <target state="translated">caml/threads.h</target>
        </trans-unit>
        <trans-unit id="81196066a86588828627518df7ffe94d080e24a7" translate="yes" xml:space="preserve">
          <source>caml_acquire_runtime_system() The calling thread re-acquires the master lock and other OCaml resources. It may block until no other thread uses the OCaml run-time system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a70c78f5895738a81bb9b00b34be9a45176c32b" translate="yes" xml:space="preserve">
          <source>caml_alloc(n, t) returns a fresh block of size n with tag t. If t is less than No_scan_tag, then the fields of the block are initialized with a valid value in order to satisfy the GC constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217c9f33ff108e05317aa80431b9421dd0778d61" translate="yes" xml:space="preserve">
          <source>caml_alloc_array(f, a) allocates an array of values, calling function f over each element of the input array a to transform it into a value. The array a is an array of pointers terminated by the null pointer. The function f receives each pointer as argument, and returns a value. The zero-tagged block returned by alloc_array(f, a) is filled with the values returned by the successive calls to f. (This function must not be used to build an array of floating-point numbers.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b412c2fbef85869c951a4a1fef5484672e0be067" translate="yes" xml:space="preserve">
          <source>caml_alloc_boxed(v) allocates and returns a value (of any boxed type) whose field is the value v.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665ee1b8b9002fba0f1725868331ec66b56f0143" translate="yes" xml:space="preserve">
          <source>caml_alloc_custom(ops, size, used, max)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf94616c15dadf23974ee9a2d762495d67bb2c7" translate="yes" xml:space="preserve">
          <source>caml_alloc_custom_mem(ops, size, used)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3323e558e84f1a7378e11e2db8ff7ed4082f12bc" translate="yes" xml:space="preserve">
          <source>caml_alloc_float_array(n) allocates an array of floating point numbers of size n. The array initially contains uninitialized values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e1c90ce20519fd8513d36af40857d4148bcf51" translate="yes" xml:space="preserve">
          <source>caml_alloc_initialized_string(n, p) returns a byte sequence (or string) value of length n bytes. The value is initialized from the n bytes starting at address p.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a46d60ca815b5fab7ffdb9b9cd4c97ff680a32a" translate="yes" xml:space="preserve">
          <source>caml_alloc_shr(n, t) returns a fresh block of size n, with tag t. The size of the block can be greater than &lt;code&gt;Max_young_wosize&lt;/code&gt;. (It can also be smaller, but in this case it is more efficient to call caml_alloc_small instead of caml_alloc_shr.) If this block is a structured block (i.e. if t &amp;lt; No_scan_tag), then the fields of the block (initially containing garbage) must be initialized with legal values (using the caml_initialize function described below) before the next allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9efca592b4526beda7a63fdc5fede30105d6950" translate="yes" xml:space="preserve">
          <source>caml_alloc_small(n, t) returns a fresh small block of size n &amp;le; Max_young_wosize words, with tag t. If this block is a structured block (i.e. if t &amp;lt; No_scan_tag), then the fields of the block (initially containing garbage) must be initialized with legal values (using direct assignment to the fields of the block) before the next allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d995bc4684aa63defb8fb71c7d027e91eff539d8" translate="yes" xml:space="preserve">
          <source>caml_alloc_some(v) allocates a block representing Some(v).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7cfd3343e5e4c212d14c75252c0e1b517c5e6d4" translate="yes" xml:space="preserve">
          <source>caml_alloc_string(n) returns a byte sequence (or string) value of length n bytes. The sequence initially contains uninitialized bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56f10eda49d4944e86ff916fd101e6b5dcaeec7" translate="yes" xml:space="preserve">
          <source>caml_alloc_tuple(n) returns a fresh block of size n words, with tag 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c404c865e60cbf5daaf2f85055a9b0b490a426" translate="yes" xml:space="preserve">
          <source>caml_alloc_unboxable(v) calls either caml_alloc_unboxed or caml_alloc_boxed according to the default representation of unboxable types in the current version of OCaml.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd673395971a1edb0e66a2e4c106d4bbdb61e94" translate="yes" xml:space="preserve">
          <source>caml_alloc_unboxed(v) returns the value (of any unboxed type) whose field is the value v.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35e29583ecb00b187c8009920908fc57e9ae396" translate="yes" xml:space="preserve">
          <source>caml_ba_alloc(kind|layout, numdims, p, dims)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a32453f66eadc5fcb7099b797e72909cbf1082" translate="yes" xml:space="preserve">
          <source>caml_ba_alloc_dims(kind|layout, numdims, p, (long) dim&lt;sub&gt;1&lt;/sub&gt;, (long) dim&lt;sub&gt;2&lt;/sub&gt;, &amp;hellip;, (long) dim&lt;sub&gt;numdims&lt;/sub&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a2d346413d8e0258d8e23db6f2ecb7f1515a8d" translate="yes" xml:space="preserve">
          <source>caml_c_thread_register() registers the calling thread with the OCaml run-time system. Returns 1 on success, 0 on error. Registering an already-registered thread does nothing and returns 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f5eeb608e25a7e56c4a9a10180e60be6106887" translate="yes" xml:space="preserve">
          <source>caml_c_thread_unregister() must be called before the thread terminates, to unregister it from the OCaml run-time system. Returns 1 on success, 0 on error. If the calling thread was not previously registered, does nothing and returns 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4c15069960846db21dc0fb24559cac35aa56ba" translate="yes" xml:space="preserve">
          <source>caml_callback(f, a) applies the functional value f to the value a and returns the value returned by &amp;zwj;f.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a88f8527c729e1b9db0097f427661299ac3aaf" translate="yes" xml:space="preserve">
          <source>caml_callback(f, a) applies the functional value f to the value a and returns the value returned by f.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820e3ded86f605764643a7eed336c5000064f192" translate="yes" xml:space="preserve">
          <source>caml_callback2(f, a, b) applies the functional value f (which is assumed to be a curried OCaml function with two arguments) to a and b.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5c03d3316677716a3d2a00f8d2ee24d6f972a1" translate="yes" xml:space="preserve">
          <source>caml_callback3(f, a, b, c) applies the functional value f (a curried OCaml function with three arguments) to a, b and c.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0233fd6bd1e96cfb8d2974ba591ba865db2ae1a0" translate="yes" xml:space="preserve">
          <source>caml_callbackN(f, n, args) applies the functional value f to the n arguments contained in the array of values args.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf354aacfc7103b94817ae65879f1489304072e" translate="yes" xml:space="preserve">
          <source>caml_copy_double(d) returns a floating-point value initialized with the doubled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec539f275c2dff88912942f70a765beb82287158" translate="yes" xml:space="preserve">
          <source>caml_copy_int32(i), caml_copy_int64(i) and caml_copy_nativeint(i) return a value of OCaml type int32, int64 and nativeint, respectively, initialized with the integer i.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2471864cc31009e8a1e62e42528d1575ed25f539" translate="yes" xml:space="preserve">
          <source>caml_copy_string(s) returns a string or byte sequence value containing a copy of the null-terminated C string s (a char *).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f9c7eaafeaaa2a5ea3107d6472ba41f837ffb2" translate="yes" xml:space="preserve">
          <source>caml_copy_string_array(p) allocates an array of strings or byte sequences, copied from the pointer to a string array p (a char **). p must be NULL-terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918cf518214782b1cc0e33fd17a49ac9aeacaa93" translate="yes" xml:space="preserve">
          <source>caml_deserialize_block_1</source>
          <target state="translated">caml_deserialize_block_1</target>
        </trans-unit>
        <trans-unit id="dac44adcc649f794a823bc613a4f99f79375c99d" translate="yes" xml:space="preserve">
          <source>caml_deserialize_block_2</source>
          <target state="translated">caml_deserialize_block_2</target>
        </trans-unit>
        <trans-unit id="35407d685d291cd8f9a87c8097d5cc11738aac8e" translate="yes" xml:space="preserve">
          <source>caml_deserialize_block_4</source>
          <target state="translated">caml_deserialize_block_4</target>
        </trans-unit>
        <trans-unit id="e33c938fab61721b51eed15194e2d30eb87000a0" translate="yes" xml:space="preserve">
          <source>caml_deserialize_block_8</source>
          <target state="translated">caml_deserialize_block_8</target>
        </trans-unit>
        <trans-unit id="01d9f69b15f4f41d9244f9c3804c975a64b6158a" translate="yes" xml:space="preserve">
          <source>caml_deserialize_error</source>
          <target state="translated">caml_deserialize_error</target>
        </trans-unit>
        <trans-unit id="1f492cf546e5c7087c942020ba6d5961ccc348b9" translate="yes" xml:space="preserve">
          <source>caml_deserialize_float_4</source>
          <target state="translated">caml_deserialize_float_4</target>
        </trans-unit>
        <trans-unit id="0b6e78572b4ac229628c458e0ecaa2fb7295151c" translate="yes" xml:space="preserve">
          <source>caml_deserialize_float_8</source>
          <target state="translated">caml_deserialize_float_8</target>
        </trans-unit>
        <trans-unit id="8a9cf39c1b25ec605de44f1545bee50da0e5401a" translate="yes" xml:space="preserve">
          <source>caml_deserialize_sint_1</source>
          <target state="translated">caml_deserialize_sint_1</target>
        </trans-unit>
        <trans-unit id="7136f8685a8e7a942bf14dcdcde72910b80d0e77" translate="yes" xml:space="preserve">
          <source>caml_deserialize_sint_2</source>
          <target state="translated">caml_deserialize_sint_2</target>
        </trans-unit>
        <trans-unit id="476465cf53e5d050cfacddced1f8c3835ba60d4a" translate="yes" xml:space="preserve">
          <source>caml_deserialize_sint_4</source>
          <target state="translated">caml_deserialize_sint_4</target>
        </trans-unit>
        <trans-unit id="3a0dc876c85eec7de4289c833125ae2cacd8a3aa" translate="yes" xml:space="preserve">
          <source>caml_deserialize_sint_8</source>
          <target state="translated">caml_deserialize_sint_8</target>
        </trans-unit>
        <trans-unit id="da233c41683a76e16c83d1a9ab274d83e246577a" translate="yes" xml:space="preserve">
          <source>caml_deserialize_uint_1</source>
          <target state="translated">caml_deserialize_uint_1</target>
        </trans-unit>
        <trans-unit id="c7e3e69e51156b2134966606c7ec2dc3f2e9ad44" translate="yes" xml:space="preserve">
          <source>caml_deserialize_uint_2</source>
          <target state="translated">caml_deserialize_uint_2</target>
        </trans-unit>
        <trans-unit id="f28316e19f353ff58baba442c8c6cd6d7884d9a9" translate="yes" xml:space="preserve">
          <source>caml_deserialize_uint_4</source>
          <target state="translated">caml_deserialize_uint_4</target>
        </trans-unit>
        <trans-unit id="aede7b6eb7681bcf0c5ebd81e6fceae87718bafa" translate="yes" xml:space="preserve">
          <source>caml_deserialize_uint_8</source>
          <target state="translated">caml_deserialize_uint_8</target>
        </trans-unit>
        <trans-unit id="416e7610539057f60428828cf59eb4906d8ddee0" translate="yes" xml:space="preserve">
          <source>caml_enter_blocking_section as an alias for caml_release_runtime_system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a7ce9f3a6006e7f1c8fad15bbf4d6a0f804631" translate="yes" xml:space="preserve">
          <source>caml_failwith(s), where s is a null-terminated C string (with type &lt;code&gt;char *&lt;/code&gt;), raises exception Failure with argument s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d27d8138c2cbd7e1f6803c0423040e3884da98e" translate="yes" xml:space="preserve">
          <source>caml_field_boxed(v) returns the value of the field of a value v of any boxed type (record or concrete data type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb81ee26ea7b5ed3a3714239c218e0aa5d478b7" translate="yes" xml:space="preserve">
          <source>caml_field_unboxable(v) calls either caml_field_unboxed or caml_field_boxed according to the default representation of unboxable types in the current version of OCaml.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31cce61ed462e58bd73936dd1de28e076cf6ae6" translate="yes" xml:space="preserve">
          <source>caml_field_unboxed(v) returns the value of the field of a value v of any unboxed type (record or concrete data type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabe664c7f517d5d094066c161e25ead36a65f60" translate="yes" xml:space="preserve">
          <source>caml_invalid_argument(s), where s is a null-terminated C string (with type &lt;code&gt;char *&lt;/code&gt;), raises exception Invalid_argument with argument s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bae75839fb1bf56fa1ec0b6cd98dfa5e4295f5" translate="yes" xml:space="preserve">
          <source>caml_leave_blocking_section as an alias for caml_acquire_runtime_system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356ae13a054640e5af072dd6bcc0d2834d37f10c" translate="yes" xml:space="preserve">
          <source>caml_raise_constant(id) raises the exception id with no argument;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858fd18e0bc5a5829c8ac6e60bb9d8283b082858" translate="yes" xml:space="preserve">
          <source>caml_raise_with_arg(id, v) raises the exception id with the OCaml value v as argument;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d64e10fe5ed3863f7d0bb0fe72f1513e8a8f2b" translate="yes" xml:space="preserve">
          <source>caml_raise_with_args(id, n, v) raises the exception id with the OCaml values v[0], &amp;hellip;, v[n-1] as arguments;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0c66567ef1c96c698ce066439e5f630905c3a9" translate="yes" xml:space="preserve">
          <source>caml_raise_with_string(id, s), where s is a null-terminated C string, raises the exception id with a copy of the C string s as argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287a35972bf162ebc29d2aa934cbd84dae2c36c2" translate="yes" xml:space="preserve">
          <source>caml_release_runtime_system() The calling thread releases the master lock and other OCaml resources, enabling other threads to run OCaml code in parallel with the execution of the calling thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae63c20bf1c4bb6a020f7324ec24e730e1502926" translate="yes" xml:space="preserve">
          <source>caml_serialize_block_1</source>
          <target state="translated">caml_serialize_block_1</target>
        </trans-unit>
        <trans-unit id="1f88a94e85c7f6efd8c4040e372002762ddd5ce1" translate="yes" xml:space="preserve">
          <source>caml_serialize_block_2</source>
          <target state="translated">caml_serialize_block_2</target>
        </trans-unit>
        <trans-unit id="7f65027df7939a869ab29fbc0899535001b0c56f" translate="yes" xml:space="preserve">
          <source>caml_serialize_block_4</source>
          <target state="translated">caml_serialize_block_4</target>
        </trans-unit>
        <trans-unit id="fdfab415c6d00981ab8eb822efb29e78a99a1d98" translate="yes" xml:space="preserve">
          <source>caml_serialize_block_8</source>
          <target state="translated">caml_serialize_block_8</target>
        </trans-unit>
        <trans-unit id="36a3049b031f4083e92b7d4b9711c0de54316b78" translate="yes" xml:space="preserve">
          <source>caml_serialize_float_4</source>
          <target state="translated">caml_serialize_float_4</target>
        </trans-unit>
        <trans-unit id="f743618d0b25010412d98c92620a0c84e87fff70" translate="yes" xml:space="preserve">
          <source>caml_serialize_float_8</source>
          <target state="translated">caml_serialize_float_8</target>
        </trans-unit>
        <trans-unit id="23603973b40d624874498ff401f6b6f1e7c4db00" translate="yes" xml:space="preserve">
          <source>caml_serialize_int_1</source>
          <target state="translated">caml_serialize_int_1</target>
        </trans-unit>
        <trans-unit id="e1ce658bb59ae754affc221a0fc0f480ede7017a" translate="yes" xml:space="preserve">
          <source>caml_serialize_int_2</source>
          <target state="translated">caml_serialize_int_2</target>
        </trans-unit>
        <trans-unit id="66dd30967cf335aca785df52b55e84a69dbbdc79" translate="yes" xml:space="preserve">
          <source>caml_serialize_int_4</source>
          <target state="translated">caml_serialize_int_4</target>
        </trans-unit>
        <trans-unit id="e8140ea757da273e868ac4101e99d59e556d53b4" translate="yes" xml:space="preserve">
          <source>caml_serialize_int_8</source>
          <target state="translated">caml_serialize_int_8</target>
        </trans-unit>
        <trans-unit id="4b456eebdecfa8b8e1aa7110502a15dfda1f3606" translate="yes" xml:space="preserve">
          <source>caml_string_length(v) returns the length (number of bytes) of the string or byte sequence v.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9351fe8845b904696063fb13e86c9bc94efe9685" translate="yes" xml:space="preserve">
          <source>can be refined in two ways. A definition [u] may add new field to [t], and the declaration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1e766cc8178e6f6ad74e38ff2897d6a38ad799" translate="yes" xml:space="preserve">
          <source>can only wait for a given PID, not any child process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df64e3c8e78211b701b9d8971c1063ca8f2e1b6" translate="yes" xml:space="preserve">
          <source>capitalized-ident</source>
          <target state="translated">capitalized-ident</target>
        </trans-unit>
        <trans-unit id="28e01c21872f76a357676cc09019dabc3abd13de" translate="yes" xml:space="preserve">
          <source>carriage return (CR)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338daab440e97efde55f37074a6c9d0cfceff0a2" translate="yes" xml:space="preserve">
          <source>cddirectory</source>
          <target state="translated">cddirectory</target>
        </trans-unit>
        <trans-unit id="4f5b1a054e184cc853d48ac01253e6ac5a470d9a" translate="yes" xml:space="preserve">
          <source>center &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71fafc4e2fc1e47e234762a96b80512b6b5534c2" translate="yes" xml:space="preserve">
          <source>char</source>
          <target state="translated">char</target>
        </trans-unit>
        <trans-unit id="7dbf01c25b781fe0b168381bf3b25fb375fb567f" translate="yes" xml:space="preserve">
          <source>char *identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d521d46e1370c48f989e9725c1abd207ee1d3a44" translate="yes" xml:space="preserve">
          <source>char* caml_stat_strdup_of_os(const char_os *) copies the argument while translating from the platform encoding to the OCaml encoding. It is the inverse of caml_stat_strdup_to_os. This function is typically used to convert a string obtained from the operating system before passing it on to OCaml code. Under Unix, it is equivalent to caml_stat_strdup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c841c7d2b2460cf8b4fae3611f52dff8e7413b4" translate="yes" xml:space="preserve">
          <source>char-literal</source>
          <target state="translated">char-literal</target>
        </trans-unit>
        <trans-unit id="0658481307f1c9bf812b837154f546a05ee9b13d" translate="yes" xml:space="preserve">
          <source>char_os* caml_stat_strdup_to_os(const char *) copies the argument while translating from OCaml encoding to the platform encoding. This function is typically used to convert the char * underlying an OCaml string before passing it to an operating system API that takes a Unicode argument. Under Unix, it is equivalent to caml_stat_strdup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa908a40ba515918f9d5edbdcad8ebc1fe5c2b42" translate="yes" xml:space="preserve">
          <source>characters</source>
          <target state="translated">characters</target>
        </trans-unit>
        <trans-unit id="0e2b31b5675ecfcea28e1bc6ea61266b418c839f" translate="yes" xml:space="preserve">
          <source>chown, fchown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f12e50e08974b895e2ed854996e592cd4c8a47" translate="yes" xml:space="preserve">
          <source>chroot</source>
          <target state="translated">chroot</target>
        </trans-unit>
        <trans-unit id="8d767bf5b72373d12f0efd4406677e9ed076f592" translate="yes" xml:space="preserve">
          <source>class</source>
          <target state="translated">class</target>
        </trans-unit>
        <trans-unit id="d52a33eead97a71117a46cf4e95a8a4ce30467f3" translate="yes" xml:space="preserve">
          <source>class method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8b29ba2c361968b2542a776a9c3dfff4a1f277" translate="yes" xml:space="preserve">
          <source>class names (&lt;a href=&quot;#class-name&quot;&gt;class-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf274f2daef387a23dffa13382373a5bcc2c55b" translate="yes" xml:space="preserve">
          <source>class type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e7be6c69d88342536203b1571fd7d8bfb2a3df" translate="yes" xml:space="preserve">
          <source>class, &lt;a href=&quot;classes#hevea_manual.kwd143&quot;&gt;7.9.3&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd145&quot;&gt;7.9.4&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd147&quot;&gt;7.9.5&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd159&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd169&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd170&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd187&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd197&quot;&gt;7.11.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd198&quot;&gt;7.11.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71bcf10511fad568b629d28c56ff7feff1ef22f7" translate="yes" xml:space="preserve">
          <source>class-binding</source>
          <target state="translated">class-binding</target>
        </trans-unit>
        <trans-unit id="0dfa40de86f0d8af7138c27b80cfce36b3e092c6" translate="yes" xml:space="preserve">
          <source>class-body</source>
          <target state="translated">class-body</target>
        </trans-unit>
        <trans-unit id="e3baf4e73ca120ee7eaaeeed64f1dc7bbc328d9e" translate="yes" xml:space="preserve">
          <source>class-body-type</source>
          <target state="translated">class-body-type</target>
        </trans-unit>
        <trans-unit id="b8003ad6cd8fb711d7fb1d099487681287d8df0d" translate="yes" xml:space="preserve">
          <source>class-definition</source>
          <target state="translated">class-definition</target>
        </trans-unit>
        <trans-unit id="9215a2ca4557897b343427716abc124d47fa6558" translate="yes" xml:space="preserve">
          <source>class-expr</source>
          <target state="translated">class-expr</target>
        </trans-unit>
        <trans-unit id="a3845894896b3c7333fdff3aa49c932e3bffd95e" translate="yes" xml:space="preserve">
          <source>class-field</source>
          <target state="translated">class-field</target>
        </trans-unit>
        <trans-unit id="b080298e07289b6ef306ac5023ced1575edeac2d" translate="yes" xml:space="preserve">
          <source>class-field-spec</source>
          <target state="translated">class-field-spec</target>
        </trans-unit>
        <trans-unit id="21af04aa3b5af0ea90010d0c0914efac38e9ea5a" translate="yes" xml:space="preserve">
          <source>class-name</source>
          <target state="translated">class-name</target>
        </trans-unit>
        <trans-unit id="d4c74f244ee67cc96905b30b781591e6acf2753f" translate="yes" xml:space="preserve">
          <source>class-path</source>
          <target state="translated">class-path</target>
        </trans-unit>
        <trans-unit id="06c5a4fb1e6da1b8f0f1f913fe3fafb4f95b0582" translate="yes" xml:space="preserve">
          <source>class-spec</source>
          <target state="translated">class-spec</target>
        </trans-unit>
        <trans-unit id="d9f224575fb0d8b3c6c3d80f66cef25947fff065" translate="yes" xml:space="preserve">
          <source>class-specification</source>
          <target state="translated">class-specification</target>
        </trans-unit>
        <trans-unit id="eda43ef03abd77f6ca03a3bb4e37dd8ba826fff5" translate="yes" xml:space="preserve">
          <source>class-type</source>
          <target state="translated">class-type</target>
        </trans-unit>
        <trans-unit id="ef958ab46a4f3085af1d4d4f55658cb4444ca230" translate="yes" xml:space="preserve">
          <source>class:</source>
          <target state="translated">class:</target>
        </trans-unit>
        <trans-unit id="400e5d81583e055c53bd38f8d5544fa644ba2712" translate="yes" xml:space="preserve">
          <source>class&lt;a href=&quot;#class-binding&quot;&gt;class-binding&lt;/a&gt; { and&lt;a href=&quot;#class-binding&quot;&gt;class-binding&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dadb31ea72fd62d213f58fa6711bc7b519a2ca1" translate="yes" xml:space="preserve">
          <source>class&lt;a href=&quot;#class-spec&quot;&gt;class-spec&lt;/a&gt; { and&lt;a href=&quot;#class-spec&quot;&gt;class-spec&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6ab98b836d6d64d4b9f3146b49cbcf9bee6717" translate="yes" xml:space="preserve">
          <source>classtype-def</source>
          <target state="translated">classtype-def</target>
        </trans-unit>
        <trans-unit id="d92dac5dc34da28e49df894b68924460d949a415" translate="yes" xml:space="preserve">
          <source>classtype-definition</source>
          <target state="translated">classtype-definition</target>
        </trans-unit>
        <trans-unit id="285d92bdbee34465a7fdf92fb82c39749f0f039e" translate="yes" xml:space="preserve">
          <source>classtype-path</source>
          <target state="translated">classtype-path</target>
        </trans-unit>
        <trans-unit id="4c04636c06981fe9f6d61d92d9456af7b3de3e8a" translate="yes" xml:space="preserve">
          <source>classtype:</source>
          <target state="translated">classtype:</target>
        </trans-unit>
        <trans-unit id="869829acd738c5dac3bc8510eb02c66e1ad5db8e" translate="yes" xml:space="preserve">
          <source>classtype&lt;a href=&quot;#classtype-def&quot;&gt;classtype-def&lt;/a&gt; { and&lt;a href=&quot;#classtype-def&quot;&gt;classtype-def&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68279b7a5c5dbc171919343dde1977e500869832" translate="yes" xml:space="preserve">
          <source>cmp:</source>
          <target state="translated">cmp:</target>
        </trans-unit>
        <trans-unit id="553768b3bee6925c1b6dd1539addb6cb588d0c7b" translate="yes" xml:space="preserve">
          <source>command subcommand &lt;code&gt;options&lt;/code&gt; where the list of options depends on the value of the subcommand argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428a468feca925744523643cf7e53ce50f474323" translate="yes" xml:space="preserve">
          <source>comparisons (&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, etc, as well as &lt;a href=&quot;stdlib#VALcompare&quot;&gt;&lt;code&gt;compare&lt;/code&gt;&lt;/a&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92feb91459c458aa6b1f76052516855e022d15d8" translate="yes" xml:space="preserve">
          <source>compile to native code. Without these conditions being satisfied the functions in this module will have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1877bd461ec69e59e632c38c04de5ad31c85ef37" translate="yes" xml:space="preserve">
          <source>configure the compiler with &quot;-spacetime&quot;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e084f18133250f2e634eae29d9045ab677b4937" translate="yes" xml:space="preserve">
          <source>const struct custom_fixed_length* fixed_length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc40c00b134ba2e17aaa12820a0f9d7af1fb7c5" translate="yes" xml:space="preserve">
          <source>const:</source>
          <target state="translated">const:</target>
        </trans-unit>
        <trans-unit id="d810ca965a236c6f46a932efff918a4b3a191918" translate="yes" xml:space="preserve">
          <source>constant</source>
          <target state="translated">constant</target>
        </trans-unit>
        <trans-unit id="d99aa54a7aa7e291a189a778f95a6a8b54eadd02" translate="yes" xml:space="preserve">
          <source>constr</source>
          <target state="translated">constr</target>
        </trans-unit>
        <trans-unit id="7c2459502a99827d118c6620780fd83c34d7c818" translate="yes" xml:space="preserve">
          <source>constr-args</source>
          <target state="translated">constr-args</target>
        </trans-unit>
        <trans-unit id="6aaf7dc052404a0def924d13cb7fefd2c5d46800" translate="yes" xml:space="preserve">
          <source>constr-decl</source>
          <target state="translated">constr-decl</target>
        </trans-unit>
        <trans-unit id="f14414ed569b076ce031ad6d07e8e61ed758ca68" translate="yes" xml:space="preserve">
          <source>constr-def</source>
          <target state="translated">constr-def</target>
        </trans-unit>
        <trans-unit id="26ced0ba99c41fdb04e52808108512ce54059fb1" translate="yes" xml:space="preserve">
          <source>constr-name</source>
          <target state="translated">constr-name</target>
        </trans-unit>
        <trans-unit id="07822dfb3ad950224ca5f923721fae3aaa4b28c5" translate="yes" xml:space="preserve">
          <source>constraint'&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt;=&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="translated">constraint'&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt;=&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33a4124293eb998e782195710e0d6c1e376e9593" translate="yes" xml:space="preserve">
          <source>constraint, &lt;a href=&quot;typedecl#hevea_manual.kwd97&quot;&gt;7.8.1&lt;/a&gt;, &lt;a href=&quot;typedecl#hevea_manual.kwd99&quot;&gt;7.8.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd109&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd117&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd129&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd141&quot;&gt;7.9.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12e05c5db5e00db727da146959722b2d63e6127" translate="yes" xml:space="preserve">
          <source>constraint&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;=&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="translated">constraint&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;=&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05d2609d4b6af181eb59c550508ff23be347961d" translate="yes" xml:space="preserve">
          <source>contains a reference to compilation unit M when compiled to bytecode. This reference forces M to be linked and its initialization code to be executed. The native-code compiler eliminates the reference to M, hence the compilation unit M may not be linked and executed. A workaround is to compile M with the -linkall flag so that it will always be linked and executed, even if not referenced. See also the Sys.opaque_identity function from the Sys standard library module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226d200456eb3bfd352f53e040b453787b46cc24" translate="yes" xml:space="preserve">
          <source>contextual</source>
          <target state="translated">contextual</target>
        </trans-unit>
        <trans-unit id="d32f507e70819a8b5872a31e2e7880f8f11db8fa" translate="yes" xml:space="preserve">
          <source>conversion specifications, each of which causes reading and conversion of one argument for the function &lt;code&gt;f&lt;/code&gt; (see &lt;a href=&quot;scanf#conversion&quot;&gt;&lt;i&gt;Conversion specifications in format strings&lt;/i&gt;&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333d8a7c2bd7fd4cefaebb4cc6271338502485c6" translate="yes" xml:space="preserve">
          <source>core-operator-char</source>
          <target state="translated">core-operator-char</target>
        </trans-unit>
        <trans-unit id="8a808c90d9a84d21576ddf0beed9d69f191be593" translate="yes" xml:space="preserve">
          <source>corresponds to private variant types. One cannot create a value of the private type [v], except using the constructors that are explicitly listed as present, (`A n) in this example; yet, when patter-matching on a [v], one should assume that any of the constructors of [t] could be present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7013e4aaa88a7fafd5559318a944cd9c6ec28404" translate="yes" xml:space="preserve">
          <source>create the file if it does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c363836cf4e16666669a25da280a1865c2d2874" translate="yes" xml:space="preserve">
          <source>d</source>
          <target state="translated">d</target>
        </trans-unit>
        <trans-unit id="e19492b548515ffbe34cf17cbd1ef522ab1414dc" translate="yes" xml:space="preserve">
          <source>decrements in process virtual time, and sends &lt;code&gt;SIGVTALRM&lt;/code&gt; when expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef778d13de8cafc01808a69b9932094f49798fdd" translate="yes" xml:space="preserve">
          <source>decrements in real time, and sends the signal &lt;code&gt;SIGALRM&lt;/code&gt; when expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22c6a976d9866fd964b6e5a20af7db6ea2ab552" translate="yes" xml:space="preserve">
          <source>define</source>
          <target state="translated">define</target>
        </trans-unit>
        <trans-unit id="03a76339fa4d42bfdc8e8baceab3440cef624007" translate="yes" xml:space="preserve">
          <source>defining the module B as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f1dd33eb2a8b380b64a830e5fd90eab77d9ff3" translate="yes" xml:space="preserve">
          <source>definition</source>
          <target state="translated">definition</target>
        </trans-unit>
        <trans-unit id="3e327c241738fea022a517d9eecee46776680496" translate="yes" xml:space="preserve">
          <source>definition of the value type, and conversion macros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed58bf3be1d2a5949990ba23d28e1f05c882f8a3" translate="yes" xml:space="preserve">
          <source>delete [breakpoint-numbers]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0179ecbcdaafefd6b259581d27637a1a01473312" translate="yes" xml:space="preserve">
          <source>directive-argument</source>
          <target state="translated">directive-argument</target>
        </trans-unit>
        <trans-unit id="8d392f56d616a516ceabb82ed8906418bce4647d" translate="yes" xml:space="preserve">
          <source>directory</source>
          <target state="translated">directory</target>
        </trans-unit>
        <trans-unit id="28dc9d3b1bb1b104a7917c77a1d97552e99c49a2" translate="yes" xml:space="preserve">
          <source>directorydirectorynames</source>
          <target state="translated">directorydirectorynames</target>
        </trans-unit>
        <trans-unit id="9b0115d2d38b2bf10f676e8332fc03cddd564a00" translate="yes" xml:space="preserve">
          <source>directorydirectorynamesformodulename</source>
          <target state="translated">directorydirectorynamesformodulename</target>
        </trans-unit>
        <trans-unit id="53c975b51fbabf80b49198bf9458a9e1d290fcf9" translate="yes" xml:space="preserve">
          <source>disable color output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0ea05e5435bb0df5d81d6e78b6d0af265162e9" translate="yes" xml:space="preserve">
          <source>display variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c0f9710c0d52c78a4d013cd66763d60d97bcb7" translate="yes" xml:space="preserve">
          <source>do not block if no child has died yet, but immediately return with a pid equal to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833c8b98d0224690df2f190dea1efcb42f344fbb" translate="yes" xml:space="preserve">
          <source>do, see while, for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84288230cbd24a8cc378cfb3d714310728faf29" translate="yes" xml:space="preserve">
          <source>does not need to be evaluated at all; and/or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fd56990cf282add706144ed22e70a66191320c" translate="yes" xml:space="preserve">
          <source>done, see while, for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07eb0e52b368fc215197e9dccccc06b07fad2958" translate="yes" xml:space="preserve">
          <source>dot-ext</source>
          <target state="translated">dot-ext</target>
        </trans-unit>
        <trans-unit id="453a36a657365591af7b5c95c20406ec99ef8b24" translate="yes" xml:space="preserve">
          <source>dot-operator-char</source>
          <target state="translated">dot-operator-char</target>
        </trans-unit>
        <trans-unit id="bdb36bb22deb169275b3094ba9005a29eeddd195" translate="yes" xml:space="preserve">
          <source>double</source>
          <target state="translated">double</target>
        </trans-unit>
        <trans-unit id="bfbe0565f9808b4fb0e1b18327fbb6c2ea967077" translate="yes" xml:space="preserve">
          <source>double quote (&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f65fab5c0d7d9bcd8d721da02004fedaedb68be" translate="yes" xml:space="preserve">
          <source>down [count]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="799e0a3b5afe04c89326401016fc0c66d4458b42" translate="yes" xml:space="preserve">
          <source>downto, see for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e407d8cdd0f285d5c62e80663efb9cc02851303c" translate="yes" xml:space="preserve">
          <source>drops all bindings of &lt;code&gt;m&lt;/code&gt; whose value is an empty list, and pops the first element of each value that is non-empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a6a677a43d8f38a109cb03dec2a64920269ab9" translate="yes" xml:space="preserve">
          <source>dst:</source>
          <target state="translated">dst:</target>
        </trans-unit>
        <trans-unit id="58e6b3a414a1e090dfc6029add0f3555ccba127f" translate="yes" xml:space="preserve">
          <source>e</source>
          <target state="translated">e</target>
        </trans-unit>
        <trans-unit id="757397c6e0613e4417358197d53f7db2c37b4724" translate="yes" xml:space="preserve">
          <source>e has no free occurrence of any of name&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; name&lt;sub&gt;n&lt;/sub&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fe7f7274e0449b5ed33b2fcaa9170dab3b3628" translate="yes" xml:space="preserve">
          <source>e has one of the following forms, where each one of &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt; is statically constructive with respect to name&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; name&lt;sub&gt;n&lt;/sub&gt;, and &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;0&lt;/sub&gt; is statically constructive with respect to name&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; name&lt;sub&gt;n&lt;/sub&gt;, xname&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; xname&lt;sub&gt;m&lt;/sub&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf7c2ddc6f44c64ae6b993a53f6e3ea4c518399" translate="yes" xml:space="preserve">
          <source>e has the form &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;; &amp;hellip; ;&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt; where &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt; is immediately linked to name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2817894d7dee8de8758ce8f735537aea0b6367" translate="yes" xml:space="preserve">
          <source>e has the form fun &amp;hellip; -&amp;gt; &amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8e665d7df99e337c22b1c4be2c513409b5eaa9" translate="yes" xml:space="preserve">
          <source>e has the form function &amp;hellip; -&amp;gt; &amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ac9ada8c9fe80980d92b1caa59645274bb0a33" translate="yes" xml:space="preserve">
          <source>e has the form lazy( &amp;hellip; )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4de602197c0cd9ccd7c6607098ee6083dc9167b" translate="yes" xml:space="preserve">
          <source>e has the form let [rec] xname&lt;sub&gt;1&lt;/sub&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;and &amp;hellip; andxname&lt;sub&gt;m&lt;/sub&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt;in&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;0&lt;/sub&gt; where &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;0&lt;/sub&gt; is immediately linked to name or to one of the xname&lt;sub&gt;i&lt;/sub&gt; such that &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;i&lt;/sub&gt; is immediately linked to name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0656ec9ffb0b7921a052be24cfb4ae15f4ee4e3" translate="yes" xml:space="preserve">
          <source>e is a variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a1d03b4fa9567db0939f772ff344bebbfe891b" translate="yes" xml:space="preserve">
          <source>e is name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da461a9fb84c0ad13f2efac393ac2ead59815a2" translate="yes" xml:space="preserve">
          <source>e. g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c318f6c6008d67b9664c3c45b78e7730ca703d" translate="yes" xml:space="preserve">
          <source>else, see if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d24c4d91f1728ade8f4dd643d87531b3263243" translate="yes" xml:space="preserve">
          <source>emphasize &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cedcf2a1a6ef9de21d881662e38b02d6d3f8384b" translate="yes" xml:space="preserve">
          <source>empty the file if it already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17ec36e9379c05dc57269321d86b686f2333096" translate="yes" xml:space="preserve">
          <source>enable colors unconditionally;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef0b24e7008d716738f718268f4d8c0207432a1" translate="yes" xml:space="preserve">
          <source>end, &lt;a href=&quot;const#hevea_manual.kwd14&quot;&gt;7.5&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd39&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd59&quot;&gt;7.7.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd102&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd119&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd151&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd164&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd180&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd192&quot;&gt;7.11.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711175fbdbe24885e9f9f679df119dc29c631f8b" translate="yes" xml:space="preserve">
          <source>entrypoint [exp&lt;sub&gt;1&lt;/sub&gt;&amp;hellip; exp&lt;sub&gt;n&lt;/sub&gt;] lexbuf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a365f95cb8551a2062717881f7d71e5306abd5" translate="yes" xml:space="preserve">
          <source>eof</source>
          <target state="translated">eof</target>
        </trans-unit>
        <trans-unit id="3d049c928df32d101c29c26b373821a507099452" translate="yes" xml:space="preserve">
          <source>escape-sequence</source>
          <target state="translated">escape-sequence</target>
        </trans-unit>
        <trans-unit id="8d2bca9a432a39e18786835ac3975c3b23f451e6" translate="yes" xml:space="preserve">
          <source>escaped-string</source>
          <target state="translated">escaped-string</target>
        </trans-unit>
        <trans-unit id="9766db168aaf6a914bfb8cbba6191943d675fe12" translate="yes" xml:space="preserve">
          <source>establish_server</source>
          <target state="translated">establish_server</target>
        </trans-unit>
        <trans-unit id="d8d42401720c70b1ce0ae3ec57d8973f649448c8" translate="yes" xml:space="preserve">
          <source>evaluates &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt; in some unspecified order and matches their values against the patterns &lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; &lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;. If the matchings succeed, &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt; is evaluated in the environment enriched by the bindings performed during matching, and the value of &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt; is returned as the value of the whole let expression. If one of the matchings fails, the exception Match_failure is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b7de6ac0851edd15ea66f92bc8e0791529d96f" translate="yes" xml:space="preserve">
          <source>evaluates the expression &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt; and returns its value if the evaluation of &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt; does not raise any exception. If the evaluation of &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt; raises an exception, the exception value is matched against the patterns &lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; to &lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;. If the matching against &lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;i&lt;/sub&gt; succeeds, the associated expression &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;i&lt;/sub&gt; is evaluated, and its value becomes the value of the whole try expression. The evaluation of &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;i&lt;/sub&gt; takes place in an environment enriched by the bindings performed during matching. If several patterns match the value of &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;, the one that occurs first in the try expression is selected. If none of the patterns matches the value of &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;, the exception value is raised again, thereby transparently &amp;ldquo;passing through&amp;rdquo; the try construct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d42ad1769f229c76031f30a404b4f7863d68de0" translate="yes" xml:space="preserve">
          <source>exception</source>
          <target state="translated">exception</target>
        </trans-unit>
        <trans-unit id="0ef70e6a0aa89b4ca352814bdbb1a646404b65f4" translate="yes" xml:space="preserve">
          <source>exception, &lt;a href=&quot;typedecl#hevea_manual.kwd100&quot;&gt;7.8.2&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd158&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd168&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd186&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd196&quot;&gt;7.11.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c059f88a3ed4105696537b7858f2b73b79d996" translate="yes" xml:space="preserve">
          <source>exception-definition</source>
          <target state="translated">exception-definition</target>
        </trans-unit>
        <trans-unit id="aafc45f113e4ee4827753cfa5ddd32f6b9b8e7dd" translate="yes" xml:space="preserve">
          <source>exception:</source>
          <target state="translated">exception:</target>
        </trans-unit>
        <trans-unit id="2194fd1cdf62726bf2b756afa4c471797a6ff1e0" translate="yes" xml:space="preserve">
          <source>exception&lt;a href=&quot;#constr-decl&quot;&gt;constr-decl&lt;/a&gt;</source>
          <target state="translated">exception&lt;a href=&quot;#constr-decl&quot;&gt;constr-decl&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56f0b21b284fbbc9f75a6e2a8846ecee8d477c99" translate="yes" xml:space="preserve">
          <source>exception&lt;a href=&quot;#pattern&quot;&gt;pattern&lt;/a&gt;</source>
          <target state="translated">exception&lt;a href=&quot;#pattern&quot;&gt;pattern&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff60ca6f137fe92c59a4b2a5d3687066ffd89487" translate="yes" xml:space="preserve">
          <source>exception&lt;a href=&quot;names#constr-name&quot;&gt;constr-name&lt;/a&gt;=&lt;a href=&quot;names#constr&quot;&gt;constr&lt;/a&gt;</source>
          <target state="translated">exception&lt;a href=&quot;names#constr-name&quot;&gt;constr-name&lt;/a&gt;=&lt;a href=&quot;names#constr&quot;&gt;constr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3f3369e0544e158e7e2b5b8651c3d09044a1d1f" translate="yes" xml:space="preserve">
          <source>exception&lt;a href=&quot;typedecl#constr-decl&quot;&gt;constr-decl&lt;/a&gt;</source>
          <target state="translated">exception&lt;a href=&quot;typedecl#constr-decl&quot;&gt;constr-decl&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70e23345fd17464f3946c94c84e3a27f3d6f3324" translate="yes" xml:space="preserve">
          <source>exception&lt;a href=&quot;typedecl#constr-decl&quot;&gt;constr-decl&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f940a5e2a0f28f13e77c8c0235ca963b9da6f81" translate="yes" xml:space="preserve">
          <source>execute permission X_OK cannot be tested, it just tests for read permission instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eea892eb403b39624a315f2ae9716d10340d45a" translate="yes" xml:space="preserve">
          <source>executes &lt;a href=&quot;stdlib#VALexit&quot;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2233dde714bc31bfef2d11ab471a8613d760dcd" translate="yes" xml:space="preserve">
          <source>executes the C function &lt;code&gt;caml_shutdown&lt;/code&gt;. The functions are called in 'last in, first out' order: the function most recently added with &lt;code&gt;at_exit&lt;/code&gt; is called first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d010ab9983c93c16174f45de4d2b802eadbf21cf" translate="yes" xml:space="preserve">
          <source>executes the compiled code contained in a.out, passing it as arguments the character strings arg&lt;sub&gt;1&lt;/sub&gt; to arg&lt;sub&gt;n&lt;/sub&gt;. (See chapter &amp;zwj;&lt;a href=&quot;runtime#c%3Aruntime&quot;&gt;11&lt;/a&gt; for more details.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac8da6660c112411ac5323ea656dc8387da47f8" translate="yes" xml:space="preserve">
          <source>executes the compiled code contained in a.out, passing it as arguments the character strings arg&lt;sub&gt;1&lt;/sub&gt; to arg&lt;sub&gt;n&lt;/sub&gt;. (See chapter &lt;a href=&quot;runtime#c%3Aruntime&quot;&gt;11&lt;/a&gt; for more details.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd1860204d6cee43392972817e66792ee702b89" translate="yes" xml:space="preserve">
          <source>expr</source>
          <target state="translated">expr</target>
        </trans-unit>
        <trans-unit id="40cd9d83462196d0446a104d1314917b241cd28a" translate="yes" xml:space="preserve">
          <source>expr&lt;sub&gt;1&lt;/sub&gt;</source>
          <target state="translated">expr&lt;sub&gt;1&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="75da4f81011bd9c9811b000d0be9a8105fc49a58" translate="yes" xml:space="preserve">
          <source>expr&lt;sub&gt;n&lt;/sub&gt;</source>
          <target state="translated">expr&lt;sub&gt;n&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="ec9814396ba26fa02dc3261046ba55a3b4bb32a6" translate="yes" xml:space="preserve">
          <source>expression</source>
          <target state="translated">expression</target>
        </trans-unit>
        <trans-unit id="21b411d35c8ac97309b209d8c63b60e26e26107b" translate="yes" xml:space="preserve">
          <source>ext-variance</source>
          <target state="translated">ext-variance</target>
        </trans-unit>
        <trans-unit id="ee9a5aff545773ac86403c5b3af14f29f43d0129" translate="yes" xml:space="preserve">
          <source>extended-module-name</source>
          <target state="translated">extended-module-name</target>
        </trans-unit>
        <trans-unit id="ca9b5a6728207cebac5f5a39be588ec15635879b" translate="yes" xml:space="preserve">
          <source>extended-module-path</source>
          <target state="translated">extended-module-path</target>
        </trans-unit>
        <trans-unit id="f98961015a0ac393630f4eda3749d644a716da64" translate="yes" xml:space="preserve">
          <source>extension</source>
          <target state="translated">extension</target>
        </trans-unit>
        <trans-unit id="2a57aaf39e1e3d7e8b157188c31ea9d76afdf843" translate="yes" xml:space="preserve">
          <source>external, &lt;a href=&quot;modtypes#hevea_manual.kwd156&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd166&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd184&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd194&quot;&gt;7.11.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f5dd6f61fb1f9bd3186ffb0b38b27e93e3825c" translate="yes" xml:space="preserve">
          <source>external-declaration</source>
          <target state="translated">external-declaration</target>
        </trans-unit>
        <trans-unit id="6ef49b996063dfbc19c08dd60476f57839f65e86" translate="yes" xml:space="preserve">
          <source>external&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;=&lt;a href=&quot;#external-declaration&quot;&gt;external-declaration&lt;/a&gt;</source>
          <target state="translated">external&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;=&lt;a href=&quot;#external-declaration&quot;&gt;external-declaration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95b6b9caa85c2f979fcb31c62d74121e5c5b6937" translate="yes" xml:space="preserve">
          <source>external&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;=&lt;a href=&quot;intfc#external-declaration&quot;&gt;external-declaration&lt;/a&gt;</source>
          <target state="translated">external&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;=&lt;a href=&quot;intfc#external-declaration&quot;&gt;external-declaration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87ead56e0f36bc7f70901dac6db8f05625d47c9d" translate="yes" xml:space="preserve">
          <source>external&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;=&lt;a href=&quot;intfc#external-declaration&quot;&gt;external-declaration&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0a19218e082a343a1b17e5333409af9d98f0f5" translate="yes" xml:space="preserve">
          <source>f</source>
          <target state="translated">f</target>
        </trans-unit>
        <trans-unit id="ea13d66a0d95450ede3525ba60b4eefa6dfd4db7" translate="yes" xml:space="preserve">
          <source>f has arity 1, but g has arity 2. This allows a primitive to return a functional value (as in the f example above): just remember to name the functional return type in a type abbreviation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8345c0c004d7bcb51022387c853c3313838f4d4b" translate="yes" xml:space="preserve">
          <source>f:</source>
          <target state="translated">f:</target>
        </trans-unit>
        <trans-unit id="5101c030405d6eb4625b82ddb234a24b78cc7fd8" translate="yes" xml:space="preserve">
          <source>fail if Open_creat and the file already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="dec9612177c91c75a84643a56634d8c023453c45" translate="yes" xml:space="preserve">
          <source>false, &lt;a href=&quot;const#hevea_manual.kwd11&quot;&gt;7.5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c99f0449b3ef1911061f6af48400d4f04a19034" translate="yes" xml:space="preserve">
          <source>fchmod</source>
          <target state="translated">fchmod</target>
        </trans-unit>
        <trans-unit id="2da0b68df8841752bb747a76780679bcd87c6215" translate="yes" xml:space="preserve">
          <source>field</source>
          <target state="translated">field</target>
        </trans-unit>
        <trans-unit id="501eee544c59dbac7271620c3b08ebf55c9d1e77" translate="yes" xml:space="preserve">
          <source>field &lt;code&gt;out_newline&lt;/code&gt; is equivalent to &lt;code&gt;out_string&amp;nbsp;&quot;\n&quot;&amp;nbsp;0&amp;nbsp;1&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f224b13da528327f36a0121f5d0030835cd2c673" translate="yes" xml:space="preserve">
          <source>field-decl</source>
          <target state="translated">field-decl</target>
        </trans-unit>
        <trans-unit id="ef34b6d49ac1b32c1828d0bcc806827363330301" translate="yes" xml:space="preserve">
          <source>field-name</source>
          <target state="translated">field-name</target>
        </trans-unit>
        <trans-unit id="0532f2b99db3b8d747dcdff72f0a33002abcd374" translate="yes" xml:space="preserve">
          <source>fields &lt;code&gt;out_spaces&lt;/code&gt; and &lt;code&gt;out_indent&lt;/code&gt; are equivalent to &lt;code&gt;out_string&amp;nbsp;(String.make&amp;nbsp;n&amp;nbsp;'&amp;nbsp;')&amp;nbsp;0&amp;nbsp;n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5693614f3e4fce5f121c7d2adbc136f1eb188a69" translate="yes" xml:space="preserve">
          <source>fields &lt;code&gt;out_string&lt;/code&gt; and &lt;code&gt;out_flush&lt;/code&gt; are output device specific; (e.g. &lt;a href=&quot;stdlib#VALoutput_string&quot;&gt;&lt;code&gt;output_string&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdlib#VALflush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; for a &lt;a href=&quot;stdlib#TYPEout_channel&quot;&gt;&lt;code&gt;out_channel&lt;/code&gt;&lt;/a&gt; device, or &lt;code&gt;Buffer.add_substring&lt;/code&gt; and &lt;a href=&quot;stdlib#VALignore&quot;&gt;&lt;code&gt;ignore&lt;/code&gt;&lt;/a&gt; for a &lt;code&gt;Buffer.t&lt;/code&gt; output device),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c623613cc9bdaaab8b62fd9a9afb5e42754862" translate="yes" xml:space="preserve">
          <source>filename: no such file or directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cce4a92f41fe3d55a72c27b922c093bdd0a4267" translate="yes" xml:space="preserve">
          <source>finish</source>
          <target state="translated">finish</target>
        </trans-unit>
        <trans-unit id="685e80366130387cb75c055248326976d16fdf8d" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="translated">float</target>
        </trans-unit>
        <trans-unit id="152c24c58170f9f64b90bef69fb4df49a1344c48" translate="yes" xml:space="preserve">
          <source>float-literal</source>
          <target state="translated">float-literal</target>
        </trans-unit>
        <trans-unit id="56dd3d388832df06eeeca9911121590de20974cf" translate="yes" xml:space="preserve">
          <source>floating-attribute</source>
          <target state="translated">floating-attribute</target>
        </trans-unit>
        <trans-unit id="02a3fcec3165f7305fbbb06668eb1f91f6a70f1d" translate="yes" xml:space="preserve">
          <source>for HTML &amp;zwj;: &lt;a href=&quot;https://github.com/ocaml/ocaml/blob/4.12/ocamldoc/odoc_html.ml&quot;&gt;odoc_html.ml&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e822f44ed236b883e4277bae70329de1a27f267" translate="yes" xml:space="preserve">
          <source>for HTML &amp;zwj;: Odoc_html.Html_generator (class html),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18978fed6c3afed1f7e9f12a99cb9fbaa75646cf" translate="yes" xml:space="preserve">
          <source>for HTML : &lt;a href=&quot;https://github.com/ocaml/ocaml/blob/4.11/ocamldoc/odoc_html.ml&quot;&gt;odoc_html.ml&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d106b43161cd02fd67405ae6ea93f44eec0d64c" translate="yes" xml:space="preserve">
          <source>for HTML : Odoc_html.Html_generator (class html),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2103b67c84215bde9de1c1ae13ac258e3286d31b" translate="yes" xml:space="preserve">
          <source>for L&lt;sup&gt;A&lt;/sup&gt;T&lt;sub&gt;E&lt;/sub&gt;X &amp;zwj;: &lt;a href=&quot;https://github.com/ocaml/ocaml/blob/4.12/ocamldoc/odoc_latex.ml&quot;&gt;odoc_latex.ml&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832bd0668346b16e5eee412dc339073ebbdfd1b6" translate="yes" xml:space="preserve">
          <source>for L&lt;sup&gt;A&lt;/sup&gt;T&lt;sub&gt;E&lt;/sub&gt;X &amp;zwj;: Odoc_latex.Latex_generator (class latex),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ec24787e3e07187530822bbc9bbcb6f4080e61" translate="yes" xml:space="preserve">
          <source>for L&lt;sup&gt;A&lt;/sup&gt;T&lt;sub&gt;E&lt;/sub&gt;X : &lt;a href=&quot;https://github.com/ocaml/ocaml/blob/4.11/ocamldoc/odoc_latex.ml&quot;&gt;odoc_latex.ml&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455dcbf553a3168bdbb6ede4dacf5924d575aa75" translate="yes" xml:space="preserve">
          <source>for L&lt;sup&gt;A&lt;/sup&gt;T&lt;sub&gt;E&lt;/sub&gt;X : Odoc_latex.Latex_generator (class latex),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0822ccc767c2866af926675cc5ff19e4c160e564" translate="yes" xml:space="preserve">
          <source>for TeXinfo &amp;zwj;: &lt;a href=&quot;https://github.com/ocaml/ocaml/blob/4.12/ocamldoc/odoc_texi.ml&quot;&gt;odoc_texi.ml&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fbafb01fd53a97c54da92110439f6abc3ba37b" translate="yes" xml:space="preserve">
          <source>for TeXinfo &amp;zwj;: Odoc_texi.Texi_generator (class texi),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef59934b5a2ed93691a76d31e92b245a003718f" translate="yes" xml:space="preserve">
          <source>for TeXinfo : &lt;a href=&quot;https://github.com/ocaml/ocaml/blob/4.11/ocamldoc/odoc_texi.ml&quot;&gt;odoc_texi.ml&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d546518fdef082969985cb4a5d48964086187b" translate="yes" xml:space="preserve">
          <source>for TeXinfo : Odoc_texi.Texi_generator (class texi),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac2f0bff5d8ffc2863125985295fc2941ca5e94" translate="yes" xml:space="preserve">
          <source>for graphviz (dot) &amp;zwj;: &lt;a href=&quot;https://github.com/ocaml/ocaml/blob/4.12/ocamldoc/odoc_dot.ml&quot;&gt;odoc_dot.ml&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626143334b8972b9638f976f89d58e1125efae1b" translate="yes" xml:space="preserve">
          <source>for graphviz (dot) &amp;zwj;: Odoc_dot.Dot_generator (class dot),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1086589c1e78e6e44f8a60b8a4e701ed49b09056" translate="yes" xml:space="preserve">
          <source>for graphviz (dot) : &lt;a href=&quot;https://github.com/ocaml/ocaml/blob/4.11/ocamldoc/odoc_dot.ml&quot;&gt;odoc_dot.ml&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b32c5544cf8a3bfcffa5e636e9eb153ea191e2" translate="yes" xml:space="preserve">
          <source>for graphviz (dot) : Odoc_dot.Dot_generator (class dot),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61537e297608ffd052d132d54cc8620b96416f5" translate="yes" xml:space="preserve">
          <source>for man pages &amp;zwj;: &lt;a href=&quot;https://github.com/ocaml/ocaml/blob/4.12/ocamldoc/odoc_man.ml&quot;&gt;odoc_man.ml&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b865a26ed49f827ef9031efd273d22bc538f51" translate="yes" xml:space="preserve">
          <source>for man pages &amp;zwj;: Odoc_man.Man_generator (class man),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a488e61ff6307d3aef44c40487ae194a336a6d10" translate="yes" xml:space="preserve">
          <source>for man pages : &lt;a href=&quot;https://github.com/ocaml/ocaml/blob/4.11/ocamldoc/odoc_man.ml&quot;&gt;odoc_man.ml&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9ef4d6ca06969b8a3fa544528c52c6647d2520" translate="yes" xml:space="preserve">
          <source>for man pages : Odoc_man.Man_generator (class man),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9531603df492892c114e073aa25d519f1aad43be" translate="yes" xml:space="preserve">
          <source>for other kinds &amp;zwj;: Odoc_gen.Base (class generator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecd5c5082f846d0c3ea7bfaaee77f196e9ebc5e" translate="yes" xml:space="preserve">
          <source>for other kinds : Odoc_gen.Base (class generator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192f048bf417e6a6d6f514420d0bd3eee9c0a580" translate="yes" xml:space="preserve">
          <source>for, &lt;a href=&quot;expr#hevea_manual.kwd32&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd68&quot;&gt;7.7.3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd727fdabede5ec0c811e0017d5a3f4219885c72" translate="yes" xml:space="preserve">
          <source>for&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt; ( to ∣ downto ) &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;do&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;done</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e69b30d6b1c590a88aa5c625c56998bf14254a4" translate="yes" xml:space="preserve">
          <source>force a new line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f673f2a8e0aacb6d0fa4504233f4f284e4a1b4c" translate="yes" xml:space="preserve">
          <source>fork</source>
          <target state="translated">fork</target>
        </trans-unit>
        <trans-unit id="bcc569a02cf33e8b74924ed5a4e4e1da66dbe5e7" translate="yes" xml:space="preserve">
          <source>format &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt; as a section header; the integer following { indicates the sectioning level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672f98e8704dee74fb33a9148bab315ac642331d" translate="yes" xml:space="preserve">
          <source>formatted input channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d88b573c35d2ff144e946255bd2194366a771f" translate="yes" xml:space="preserve">
          <source>frame</source>
          <target state="translated">frame</target>
        </trans-unit>
        <trans-unit id="3fc0a723c391767190bc47a90f7e16854954d80b" translate="yes" xml:space="preserve">
          <source>frameframe-number</source>
          <target state="translated">frameframe-number</target>
        </trans-unit>
        <trans-unit id="85023e071af1165c925db5758ebc1e1b71dad0ac" translate="yes" xml:space="preserve">
          <source>fun [&lt;a href=&quot;lex#label&quot;&gt;label&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;] &lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;-&amp;gt; &amp;hellip; fun [&lt;a href=&quot;lex#label&quot;&gt;label&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;] &lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;-&amp;gt;&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebcc2e338fd6f883611a4c1124a3332b19505bbd" translate="yes" xml:space="preserve">
          <source>fun { &lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt; }&lt;sup&gt;+&lt;/sup&gt; [ :&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt; ] -&amp;gt;&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a3a30cbc449e60d5eea6ce58e52209e32d4dd2" translate="yes" xml:space="preserve">
          <source>fun {&lt;a href=&quot;expr#parameter&quot;&gt;parameter&lt;/a&gt;}&lt;sup&gt;+&lt;/sup&gt;-&amp;gt;&lt;a href=&quot;#class-expr&quot;&gt;class-expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf7851db220b0ea5a996eba1089d7505fdbefd5" translate="yes" xml:space="preserve">
          <source>fun, &lt;a href=&quot;expr#hevea_manual.kwd26&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd46&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd61&quot;&gt;7.7.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd120&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;locallyabstract#hevea_manual.kwd211&quot;&gt;8.4&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b9b437a514a3e5ea1ea5491d21b80bdbae4bad" translate="yes" xml:space="preserve">
          <source>fun&lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; (&lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;)-&amp;gt;&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9269c0d955dc0d421de5199eac99141b1a96687" translate="yes" xml:space="preserve">
          <source>fun&lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; &lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;-&amp;gt;&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0239578aea3e4d87835c83b4662dc338046b96ad" translate="yes" xml:space="preserve">
          <source>fun&lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; &lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;-&amp;gt;&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0c99260cc10a58b6dc0630ee3174d14d0aa1d9" translate="yes" xml:space="preserve">
          <source>fun&lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;-&amp;gt; &amp;hellip; fun&lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;-&amp;gt; (&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt; )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840d7d5ed51ee8834a3ec7619f2285969a89a001" translate="yes" xml:space="preserve">
          <source>fun&lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;-&amp;gt; &amp;hellip; fun&lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;-&amp;gt;&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4733b6d32d7233706102a87ab6db3fc6a85167c9" translate="yes" xml:space="preserve">
          <source>fun&lt;a href=&quot;expr#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; &lt;a href=&quot;expr#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;-&amp;gt;&lt;a href=&quot;#class-expr&quot;&gt;class-expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8114885059afc292abf363c94d278f6d64ac92aa" translate="yes" xml:space="preserve">
          <source>fun&lt;a href=&quot;expr#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;-&amp;gt; &amp;hellip; fun&lt;a href=&quot;expr#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;-&amp;gt;&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9314ac9c1204837ab3797003476b3ca7266314" translate="yes" xml:space="preserve">
          <source>fun?&lt;a href=&quot;lex#label-name&quot;&gt;lab&lt;/a&gt;:&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt;-&amp;gt;let&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;=match&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt;withSome&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt;-&amp;gt;&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt;|None-&amp;gt;&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;0&lt;/sub&gt;in&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="translated">fun?&lt;a href=&quot;lex#label-name&quot;&gt;lab&lt;/a&gt;:&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt;-&amp;gt;let&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;=match&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt;withSome&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt;-&amp;gt;&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt;|None-&amp;gt;&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;0&lt;/sub&gt;in&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="8659e2b8073fc29425b0677a5b6c19e2e76348c8" translate="yes" xml:space="preserve">
          <source>function application, constructor application, tag application, assert, lazy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c4cd5b5726bc3667eac8f4ac101fe25a1ae130" translate="yes" xml:space="preserve">
          <source>function calls : a count point is set at the beginning of each function body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7a895abdf5399146a6baaa6269ab56bdbbb4a8" translate="yes" xml:space="preserve">
          <source>function, &lt;a href=&quot;expr#hevea_manual.kwd25&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd47&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd60&quot;&gt;7.7.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcef6bcb3d11e46effa16ee8ef49f89e47ce86e" translate="yes" xml:space="preserve">
          <source>function&lt;a href=&quot;#pattern-matching&quot;&gt;pattern-matching&lt;/a&gt;</source>
          <target state="translated">function&lt;a href=&quot;#pattern-matching&quot;&gt;pattern-matching&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3006f44001837a909b4840c5a7879a322570c712" translate="yes" xml:space="preserve">
          <source>function&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;-&amp;gt; &amp;hellip; function&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;-&amp;gt;&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d186e14f4ebd7c343d915e188df9f8bcc8cd628f" translate="yes" xml:space="preserve">
          <source>functions for raising exceptions (see section &amp;zwj;&lt;a href=&quot;#ss%3Ac-exceptions&quot;&gt;18.4.5&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5010927b2d6f54abfba53f9c6a4ff170122c1126" translate="yes" xml:space="preserve">
          <source>functions for raising exceptions (see section &lt;a href=&quot;#ss%3Ac-exceptions&quot;&gt;20.4.5&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a849b6b86a86f4a93285c056a690e4c3987619b8" translate="yes" xml:space="preserve">
          <source>functor()-&amp;gt;&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;</source>
          <target state="translated">functor()-&amp;gt;&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2844c175a443bbc8f0547152ba8237ba4ecece4e" translate="yes" xml:space="preserve">
          <source>functor()-&amp;gt;&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="translated">functor()-&amp;gt;&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e03f2859207c0e9433b4a2ecae4605a9e1b95b9" translate="yes" xml:space="preserve">
          <source>functor(&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;)-&amp;gt;&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;</source>
          <target state="translated">functor(&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;)-&amp;gt;&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a07f902d52bb9068d86a6477af50805473264aa" translate="yes" xml:space="preserve">
          <source>functor(&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;)-&amp;gt;&lt;a href=&quot;#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="translated">functor(&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;)-&amp;gt;&lt;a href=&quot;#module-expr&quot;&gt;module-expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68ab0059d66e906941e8678e513dd3f767afc42e" translate="yes" xml:space="preserve">
          <source>functor, &lt;a href=&quot;modtypes#hevea_manual.kwd152&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd177&quot;&gt;7.10.3&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd181&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd205&quot;&gt;7.11.3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034836e093abd26b76f58a37505acd3b47fde33b" translate="yes" xml:space="preserve">
          <source>generates compiled files P.cmx, P.o and P.cmi describing a compilation unit having three sub-modules A, B and C, corresponding to the contents of the object files A.cmx, B.cmx and C.cmx. These contents can be referenced as P.A, P.B and P.C in the remainder of the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d52daff09686e1418f2d39aa82517fedd484e4" translate="yes" xml:space="preserve">
          <source>generates compiled files p.cmo and p.cmi describing a compilation unit having three sub-modules A, B and C, corresponding to the contents of the object files a.cmo, b.cmo and c.cmo. These contents can be referenced as P.A, P.B and P.C in the remainder of the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bf2f768c998ce78f3881b1180914edc1e4be20" translate="yes" xml:space="preserve">
          <source>generation of documentation, through a documentation generator, which is an object of class Odoc_args.class_generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772355cea5ae74c202b3d91b1248e88961bb5c5f" translate="yes" xml:space="preserve">
          <source>getgrnam, getgrgid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e32675c123cd727f0309c3cb6c71464bb9f334c" translate="yes" xml:space="preserve">
          <source>getgroups</source>
          <target state="translated">getgroups</target>
        </trans-unit>
        <trans-unit id="e55f588522f530bcde02486503fd5ed646e768ba" translate="yes" xml:space="preserve">
          <source>getitimer, setitimer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760896bcddb7ce1b15ca782f91ef889393abaa62" translate="yes" xml:space="preserve">
          <source>getppid</source>
          <target state="translated">getppid</target>
        </trans-unit>
        <trans-unit id="334ebc7bbe07b5c7bb6cdde510912ea2d8e86671" translate="yes" xml:space="preserve">
          <source>getpwnam, getpwuid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83a311450d17a3faaf0c6a09453bd5d7c4351cd" translate="yes" xml:space="preserve">
          <source>getuid, geteuid, getgid, getegid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4731a0517aaa711cf010c5a678f6ef36ae7459" translate="yes" xml:space="preserve">
          <source>goto 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2279f19b3d2652baf02cc127be0db400bd45a5cd" translate="yes" xml:space="preserve">
          <source>goto time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d5482eebd075de44389774fce28c69f45c8a75" translate="yes" xml:space="preserve">
          <source>h</source>
          <target state="translated">h</target>
        </trans-unit>
        <trans-unit id="07db9dbabeac878d804109af5f1e65ed057d71af" translate="yes" xml:space="preserve">
          <source>h::t</source>
          <target state="translated">h::t</target>
        </trans-unit>
        <trans-unit id="cc1d68224a53245eabaed478fc55ec7d4d990e69" translate="yes" xml:space="preserve">
          <source>has arity 1, and the caml_ml_seek_in_pair C function receives one argument (which is a pair of OCaml values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0adddb4abfab0acb067c3a02f47aa9f4c79e9ec" translate="yes" xml:space="preserve">
          <source>has arity 1, and the input2 C function receives one argument (which is a quadruple of OCaml values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e61164ea46b16117879c920d874090355b1361" translate="yes" xml:space="preserve">
          <source>has type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a776c7d9b6a35b3352f96d1f8480eb2c595160" translate="yes" xml:space="preserve">
          <source>hashing (module &lt;code&gt;Hash&lt;/code&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92005ecf3788faea8346a7919fba0232188561ab" translate="yes" xml:space="preserve">
          <source>help</source>
          <target state="translated">help</target>
        </trans-unit>
        <trans-unit id="e4c1caea51cdee6abdfd423fa8b032afd9287b64" translate="yes" xml:space="preserve">
          <source>help command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7474a41cb68769c8ffe8911c26576fcd5fc9a56" translate="yes" xml:space="preserve">
          <source>help info topic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47fa7a5cd01887bd5c7edbb8d4489b33b798d72" translate="yes" xml:space="preserve">
          <source>help set variable, help show variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b369c7d8443ed75e8ee8664670a6b742e802dc9" translate="yes" xml:space="preserve">
          <source>hexadecimal (radix 16)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1216290c328643cb59675cb9c9de402377586669" translate="yes" xml:space="preserve">
          <source>horizontal tabulation (TAB)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042dc4512fa3d391c5170cf3aa61e6a638f84342" translate="yes" xml:space="preserve">
          <source>i</source>
          <target state="translated">i</target>
        </trans-unit>
        <trans-unit id="99600d7006d6b0a21d7833d055370ceeed1f8dad" translate="yes" xml:space="preserve">
          <source>i-th dimension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efee61c10bc322d0b636ba3dd5c3a2656badd1f" translate="yes" xml:space="preserve">
          <source>ident</source>
          <target state="translated">ident</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="62043fa493a7596b85a66a9829c21feeca0c4fdd" translate="yes" xml:space="preserve">
          <source>if &amp;hellip;then &amp;hellip;else &amp;hellip; : count points are set in both then branch and else branch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e87305e9cd23ad8be0325131e843361ec7f085" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;cmp&amp;nbsp;x&amp;nbsp;y&lt;/code&gt; &amp;gt;= 0 and &lt;code&gt;cmp&amp;nbsp;y&amp;nbsp;z&lt;/code&gt; &amp;gt;= 0 then &lt;code&gt;cmp&amp;nbsp;x&amp;nbsp;z&lt;/code&gt; &amp;gt;= 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a1e6217624587a482735c03d4f13ef4800b403" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;f&amp;nbsp;k&amp;nbsp;v&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; then &lt;code&gt;k&lt;/code&gt; is not in the result,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7962703df78171c0f6d9ead79f64d4c7e8be50" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;f&amp;nbsp;k&amp;nbsp;v&lt;/code&gt; is &lt;code&gt;Some&amp;nbsp;v'&lt;/code&gt; then the binding &lt;code&gt;(k,&amp;nbsp;v')&lt;/code&gt; is in the output map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e30de2d4b0b2e71bcdd74e8c14b9e91c256042" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;f&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;Left&amp;nbsp;y1&lt;/code&gt;, then &lt;code&gt;y1&lt;/code&gt; is in &lt;code&gt;l1&lt;/code&gt;, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905ceedb4539b22606c56ddcd826589570d2e458" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;f&amp;nbsp;x&lt;/code&gt; is &lt;code&gt;Right&amp;nbsp;y2&lt;/code&gt;, then &lt;code&gt;y2&lt;/code&gt; is in &lt;code&gt;l2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7691fd964f62c6c29778c4b5bb61b07497e4d81" translate="yes" xml:space="preserve">
          <source>if we define the receiver &lt;code&gt;f&lt;/code&gt; as &lt;code&gt;let&amp;nbsp;f&amp;nbsp;x&amp;nbsp;=&amp;nbsp;x&amp;nbsp;+&amp;nbsp;1&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d331b7cd9454df4e8c8b3e1d683f06da8756571" translate="yes" xml:space="preserve">
          <source>if we use &lt;code&gt;stdin&lt;/code&gt; as the source of characters (&lt;a href=&quot;scanf.scanning#VALstdin&quot;&gt;&lt;code&gt;Scanf.Scanning.stdin&lt;/code&gt;&lt;/a&gt; is the predefined formatted input channel that reads from standard input),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55fb127a497d1332b99a942053ffd4ac476c7f2" translate="yes" xml:space="preserve">
          <source>if your function is a primitive with more than 5 arguments for use with the byte-code runtime, its arguments are not values and must not be declared (they have types value * and int).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296e7f1f31d4668a2b2bb325f806d14637720d38" translate="yes" xml:space="preserve">
          <source>if, &lt;a href=&quot;expr#hevea_manual.kwd35&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd45&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd64&quot;&gt;7.7.3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171d50ad38cb8f575e802fca0b686221a4433fb9" translate="yes" xml:space="preserve">
          <source>if&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;then&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;2&lt;/sub&gt;elsefalse.</source>
          <target state="translated">if&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;then&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;2&lt;/sub&gt;elsefalse.</target>
        </trans-unit>
        <trans-unit id="5e235627b05b242764981acad185ad5869323de1" translate="yes" xml:space="preserve">
          <source>if&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;thentrueelse&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;2&lt;/sub&gt;.</source>
          <target state="translated">if&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;thentrueelse&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;2&lt;/sub&gt;.</target>
        </trans-unit>
        <trans-unit id="d2251fa912bc54f4d77afad5862d8faf8fa2e9e7" translate="yes" xml:space="preserve">
          <source>if&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;then&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt; [ else&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt; ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc04e85d3eaff1e4754370552b234e7099970281" translate="yes" xml:space="preserve">
          <source>immutable character strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde41be3ab9cf0b6ab971fbd9b886d94b0b4b958" translate="yes" xml:space="preserve">
          <source>implemented (since 3.02)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3030d0f8c1da9ff83ec620251f17a22db9a8f430" translate="yes" xml:space="preserve">
          <source>implemented (since 4.03.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891ec85132a284a769ba1ab2942a779e43516a83" translate="yes" xml:space="preserve">
          <source>implemented (since 4.10.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40c8c34a8bcd9afa7703ca4c2956eaa74a4dfa5" translate="yes" xml:space="preserve">
          <source>in a let expression, one may instead write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be4be48925b21377455741cb700dde1c9a583d9" translate="yes" xml:space="preserve">
          <source>in addition to the relevant digits, &lt;code&gt;'_'&lt;/code&gt; characters may appear inside numbers (this is reminiscent to the usual OCaml lexical conventions). If stricter scanning is desired, use the range conversion facility instead of the number conversions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36883d27fefa117c39f72ce3daaa5fc2f419b53b" translate="yes" xml:space="preserve">
          <source>in, see let</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcdd45c309dcba1d9d4b79f586b3a50297b8ee1c" translate="yes" xml:space="preserve">
          <source>include, &lt;a href=&quot;modtypes#hevea_manual.kwd162&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd176&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd190&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd204&quot;&gt;7.11.2&lt;/a&gt;, &lt;a href=&quot;moduletypeof#hevea_manual.kwd219&quot;&gt;8.6&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d5dde4ba62bff53b44acb3b42aff51ef7c5d8e" translate="yes" xml:space="preserve">
          <source>include&lt;a href=&quot;#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="translated">include&lt;a href=&quot;#module-expr&quot;&gt;module-expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f5c5afca60ad64d401873a558c35fd6bff585f7" translate="yes" xml:space="preserve">
          <source>include&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;</source>
          <target state="translated">include&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e3b5bde77f3da26ea678f77a329bb416842c919" translate="yes" xml:space="preserve">
          <source>include&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68cbdcde9321debc33dec929526538b84347f10" translate="yes" xml:space="preserve">
          <source>include&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775ff372a1335c3b0c06bc8b0c85a6b6498ebe97" translate="yes" xml:space="preserve">
          <source>indicates positions relative to the beginning of the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27f2d3b01cfed33f2bec50a5a60c1cdac631f09" translate="yes" xml:space="preserve">
          <source>indicates positions relative to the current position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efefe62ae6f51dcd0084f0f6719b3ae855eee713" translate="yes" xml:space="preserve">
          <source>indicates positions relative to the end of the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba84477b5b149f0c5490450bb80212dfa7bd5fd6" translate="yes" xml:space="preserve">
          <source>infix-op</source>
          <target state="translated">infix-op</target>
        </trans-unit>
        <trans-unit id="58d4778f3bf63e407d21101262292af7d3db6d3f" translate="yes" xml:space="preserve">
          <source>infix-symbol</source>
          <target state="translated">infix-symbol</target>
        </trans-unit>
        <trans-unit id="a01cf621a5b126ce5a4f57cd0d75a3b74e2b9743" translate="yes" xml:space="preserve">
          <source>info breakpoints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb662cc5b49179ba761a0ea47d1981ef3cfdc12e" translate="yes" xml:space="preserve">
          <source>info checkpoints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bd61066b3bdb2c60ecfab85e68f0363c0d3272" translate="yes" xml:space="preserve">
          <source>info events [module]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8baf2d9793c89398da706061b12c589ae0a3f294" translate="yes" xml:space="preserve">
          <source>info subject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d6a7dde203dfd472b7a4e7f5e5a584e6339416" translate="yes" xml:space="preserve">
          <source>inherit!&lt;a href=&quot;#class-expr&quot;&gt;class-expr&lt;/a&gt; [as&lt;a href=&quot;lex#lowercase-ident&quot;&gt;lowercase-ident&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13e5a8b4fe5a08b064bc16d80a3977d513efdba" translate="yes" xml:space="preserve">
          <source>inherit, &lt;a href=&quot;classes#hevea_manual.kwd103&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd110&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd123&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd131&quot;&gt;7.9.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35815a10f1288205de110bb61161fa1264dbb6b2" translate="yes" xml:space="preserve">
          <source>inherit&lt;a href=&quot;#class-body-type&quot;&gt;class-body-type&lt;/a&gt;</source>
          <target state="translated">inherit&lt;a href=&quot;#class-body-type&quot;&gt;class-body-type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d48c1446f94ecec3497c6872375f55ad7ec6ca55" translate="yes" xml:space="preserve">
          <source>inherit&lt;a href=&quot;#class-expr&quot;&gt;class-expr&lt;/a&gt; [as&lt;a href=&quot;lex#lowercase-ident&quot;&gt;lowercase-ident&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036d153e88ab680b671bdbedf7e1444f04c908b1" translate="yes" xml:space="preserve">
          <source>init:</source>
          <target state="translated">init:</target>
        </trans-unit>
        <trans-unit id="e86dc2769b8ae8fee363c2cb582840598378992e" translate="yes" xml:space="preserve">
          <source>initializer, &lt;a href=&quot;classes#hevea_manual.kwd130&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd142&quot;&gt;7.9.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaaa3b243e4649228bff320dc5c3acc9fdfa09ba" translate="yes" xml:space="preserve">
          <source>initializer&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="translated">initializer&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71df83800f1860ad619bb2536407dbc4a6e4b96a" translate="yes" xml:space="preserve">
          <source>injectivity</source>
          <target state="translated">injectivity</target>
        </trans-unit>
        <trans-unit id="83c96135f4995b87b4f776ba79612d93bc720331" translate="yes" xml:space="preserve">
          <source>insert a cross-reference to an element (see section &lt;a href=&quot;#sss%3Aocamldoc-crossref&quot;&gt;15.2.4.2&lt;/a&gt; for the syntax of cross-references).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf798a52d2dc37e7dfb868809e58d253376af19a" translate="yes" xml:space="preserve">
          <source>insert a cross-reference to an element (see section &lt;a href=&quot;#sss%3Aocamldoc-crossref&quot;&gt;16.2.4.2&lt;/a&gt; for the syntax of cross-references).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5ec8da0746562b7551764d2784b5dbed8e42b2" translate="yes" xml:space="preserve">
          <source>insert a table of links to the various indexes (types, values, modules, ...). Used in HTML only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eab95a58d831871b14532f1578fb7bcc8746581" translate="yes" xml:space="preserve">
          <source>insert an index table for the given module names. Used in HTML only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d3dc40acbee4c1cf049070f6e8e150169f78c5" translate="yes" xml:space="preserve">
          <source>inside a recursive module definition, M&lt;sub&gt;0&lt;/sub&gt; should not be one of the recursively defined modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8334416331188dc0834e0db7b1963e39705cb291" translate="yes" xml:space="preserve">
          <source>inside the body of a functor, M&lt;sub&gt;0&lt;/sub&gt; should not be one of the functor parameters;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016beb33a553ebe6cbafd2cf0d337d5272037130" translate="yes" xml:space="preserve">
          <source>inst-var-name</source>
          <target state="translated">inst-var-name</target>
        </trans-unit>
        <trans-unit id="87473fe55615f431e83a208ff1e59784e06d318b" translate="yes" xml:space="preserve">
          <source>install_printer printer-name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fb9f5c27ade72d14f775d79238f3d3209715b8" translate="yes" xml:space="preserve">
          <source>instance variable names (&lt;a href=&quot;#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb82821f5443620916128c66c024a61d87b0565d" translate="yes" xml:space="preserve">
          <source>instead of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="0ea590de0e2e1b0df5fabb92365ebfab2f515ee8" translate="yes" xml:space="preserve">
          <source>int (*compare)(value v1, value v2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d3df1568019e0870189f8da1f503280238e07e" translate="yes" xml:space="preserve">
          <source>int (*compare_ext)(value v1, value v2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320385ec0fbe6caa8b0b25269b069277f1d38959" translate="yes" xml:space="preserve">
          <source>int-literal</source>
          <target state="translated">int-literal</target>
        </trans-unit>
        <trans-unit id="d71739707a7eafbe926fe99f6312cc8634db005d" translate="yes" xml:space="preserve">
          <source>int32</source>
          <target state="translated">int32</target>
        </trans-unit>
        <trans-unit id="2d64d759ca34d47626889c287e575a64014e2611" translate="yes" xml:space="preserve">
          <source>int32-literal</source>
          <target state="translated">int32-literal</target>
        </trans-unit>
        <trans-unit id="8fcdcefeb8f1bbab3f3ff2567ecad9be78779217" translate="yes" xml:space="preserve">
          <source>int32_t</source>
          <target state="translated">int32_t</target>
        </trans-unit>
        <trans-unit id="3cf12f96228a3fa41a25040bdcc6eac3659e7844" translate="yes" xml:space="preserve">
          <source>int64</source>
          <target state="translated">int64</target>
        </trans-unit>
        <trans-unit id="a923917a4e8eff6007e98cf48d9156e9201a6b1b" translate="yes" xml:space="preserve">
          <source>int64-literal</source>
          <target state="translated">int64-literal</target>
        </trans-unit>
        <trans-unit id="f6311168933725d3149f768d180f96c9c216469f" translate="yes" xml:space="preserve">
          <source>int64_t</source>
          <target state="translated">int64_t</target>
        </trans-unit>
        <trans-unit id="01d0f81732577c9d24286ec4b5fb58d07e8ba766" translate="yes" xml:space="preserve">
          <source>integer-literal</source>
          <target state="translated">integer-literal</target>
        </trans-unit>
        <trans-unit id="e3e8ca21b3622c7ea8e9a869ffaa9cd96adcf19a" translate="yes" xml:space="preserve">
          <source>intnat</source>
          <target state="translated">intnat</target>
        </trans-unit>
        <trans-unit id="02122843af179f141e2c4a6904e5c9acf2767015" translate="yes" xml:space="preserve">
          <source>intnat (*hash)(value v)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee0a5c5c4c9be20b6830a469d62cd720e8cfc4a" translate="yes" xml:space="preserve">
          <source>is OK, but:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b574aa1f43197443eefcba8124d2dbfad978f23" translate="yes" xml:space="preserve">
          <source>is a short form for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9282601755d874f407044836ef141f061913a4b7" translate="yes" xml:space="preserve">
          <source>is a supertype of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2184c194395f85161b07451378b5380bd671a30" translate="yes" xml:space="preserve">
          <source>is automatically expanded into</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6084689797742b0df510436433eaf2024a8e9db" translate="yes" xml:space="preserve">
          <source>is displayed as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38e4c6cec12428e5871d2d1ce176a532d59c8d8" translate="yes" xml:space="preserve">
          <source>is easy to remember,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec285792f84b2006557cfe7a76ef03e4dffbd46" translate="yes" xml:space="preserve">
          <source>is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540dd9c65d0f35bb6866948231ccf0ff06d8f61f" translate="yes" xml:space="preserve">
          <source>is equivalent to defining it as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88f97f2587677395d348b83f07d9407ee2ea83c" translate="yes" xml:space="preserve">
          <source>is not because x cannot be given any type other than t, which only exists locally. Although the above would be OK if x too was local:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40660ad1062790f8a4059a197e03035fd5b1b62" translate="yes" xml:space="preserve">
          <source>is now broken and may suffer from uncaught exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b08ccf539cb48fc49109709c82df2f55d74672" translate="yes" xml:space="preserve">
          <source>is the set of halves of the even elements of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecc5e62f71fc1008ed4659593b5f4900693d3b6" translate="yes" xml:space="preserve">
          <source>it can also handle values of type x:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d89f7a06da14551b799622c9fa3b84961b60c5" translate="yes" xml:space="preserve">
          <source>it is a root value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49bc6901670ed54a5b0fcf425e311786a688356" translate="yes" xml:space="preserve">
          <source>it is reachable from alive value by usual pointers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7a4ba74bb307d677a2b4269826d5907405a002" translate="yes" xml:space="preserve">
          <source>it is the data of an alive ephemeron with all its full keys alive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d41b1d151ee2007d39bf9d3c182989341851535" translate="yes" xml:space="preserve">
          <source>it should be of the form M&lt;sub&gt;0&lt;/sub&gt;.M&lt;sub&gt;1&lt;/sub&gt;...M&lt;sub&gt;n&lt;/sub&gt; (&lt;em&gt;i.e.&lt;/em&gt; without functor applications);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ae9bb4b5a17414771d9e01942cf521816e0f1e" translate="yes" xml:space="preserve">
          <source>it would be observed that inlining of f would remove:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca7dd474781a6c615acad892d75948bf8064f9c" translate="yes" xml:space="preserve">
          <source>item-attribute</source>
          <target state="translated">item-attribute</target>
        </trans-unit>
        <trans-unit id="e7b0f2a22247c128455d40504270be579f19f9d2" translate="yes" xml:space="preserve">
          <source>item-extension</source>
          <target state="translated">item-extension</target>
        </trans-unit>
        <trans-unit id="c80f5bc166cd6739ba9ba6d94acabc0aa01494da" translate="yes" xml:space="preserve">
          <source>kill</source>
          <target state="translated">kill</target>
        </trans-unit>
        <trans-unit id="44e83b02b2e3da220aaeff4d32148c7927f0e049" translate="yes" xml:space="preserve">
          <source>kind of array elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c342be6e560e7f43842e2e21b774e61d85f047" translate="yes" xml:space="preserve">
          <source>l</source>
          <target state="translated">l</target>
        </trans-unit>
        <trans-unit id="64c65374dbab6fe3762748196d9d3a9610e2e5a9" translate="yes" xml:space="preserve">
          <source>label</source>
          <target state="translated">label</target>
        </trans-unit>
        <trans-unit id="ee222cf94d64e861d2744d3254da532946d05acb" translate="yes" xml:space="preserve">
          <source>label-name</source>
          <target state="translated">label-name</target>
        </trans-unit>
        <trans-unit id="eb30177c379daa8af3e491010580e04d9d896398" translate="yes" xml:space="preserve">
          <source>labels (&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;, defined in section &amp;zwj;&lt;a href=&quot;lex#sss%3Alabelname&quot;&gt;7.1&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8912d04d878e1b8ffa02572c532d88496f969d38" translate="yes" xml:space="preserve">
          <source>labels (&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;, defined in section &lt;a href=&quot;lex#sss%3Alabelname&quot;&gt;7.1&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3b60b2c381f8873f294894ef8428319a3b8546" translate="yes" xml:space="preserve">
          <source>land</source>
          <target state="translated">land</target>
        </trans-unit>
        <trans-unit id="28f670b865f6fca2de3f470253d67b5c4465f5a3" translate="yes" xml:space="preserve">
          <source>land, &lt;a href=&quot;names#hevea_manual.kwd1&quot;&gt;7.3&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd52&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd71&quot;&gt;7.7.5&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd78&quot;&gt;7.7.5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1320419400c075abf070279ee1a9106491c3e9c" translate="yes" xml:space="preserve">
          <source>last [count]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0751df7804d6550ba56c22d6296d36b3fb17c75a" translate="yes" xml:space="preserve">
          <source>lazy (see section &amp;zwj;&lt;a href=&quot;#sss%3Apat-lazy&quot;&gt;7.6&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07017c0924f3c0e74472c74b841e4df5732e971d" translate="yes" xml:space="preserve">
          <source>lazy (see section &lt;a href=&quot;#sss%3Apat-lazy&quot;&gt;7.6&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89127a029d917cfd54f0e731cd8a9aa6b71457d" translate="yes" xml:space="preserve">
          <source>lazy, &lt;a href=&quot;patterns#hevea_manual.kwd18&quot;&gt;7.6&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd43&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd87&quot;&gt;7.7.8&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55928783428cdda332c1be8b1d7555ae280204b2" translate="yes" xml:space="preserve">
          <source>lazy&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="translated">lazy&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1ee4c791de79ce5ffb892161d36b89f33683dec" translate="yes" xml:space="preserve">
          <source>lazy&lt;a href=&quot;#pattern&quot;&gt;pattern&lt;/a&gt;</source>
          <target state="translated">lazy&lt;a href=&quot;#pattern&quot;&gt;pattern&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12c0f1fbadc4046b5f2bb9e063b227ef8750d9d6" translate="yes" xml:space="preserve">
          <source>left</source>
          <target state="translated">left</target>
        </trans-unit>
        <trans-unit id="07785b23ac256aee37df3d7fcfaf27d25e175350" translate="yes" xml:space="preserve">
          <source>left align &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8c7ff93d6fe3f68a4d62ed2606920684027919" translate="yes" xml:space="preserve">
          <source>legacy mode: All path names, environment variables, command line arguments, etc. on the OCaml side are assumed to be encoded using the current 8-bit code page of the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0db465e09e54ce3393bf47c61f2ee7c97c2b5e" translate="yes" xml:space="preserve">
          <source>len:</source>
          <target state="translated">len:</target>
        </trans-unit>
        <trans-unit id="9e98136581c24c2d792e14300fde374673aac562" translate="yes" xml:space="preserve">
          <source>let (&lt;a href=&quot;lex#core-operator-char&quot;&gt;core-operator-char&lt;/a&gt; ∣ &amp;lt;) { &lt;a href=&quot;indexops#dot-operator-char&quot;&gt;dot-operator-char&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df58b9c3f5fe2b95daf952eae7061b425235eb7e" translate="yes" xml:space="preserve">
          <source>let [rec] &lt;a href=&quot;#let-binding&quot;&gt;let-binding&lt;/a&gt; { and&lt;a href=&quot;#let-binding&quot;&gt;let-binding&lt;/a&gt; } in&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1f39fe94b7fc1579703d33495402522ef33a2e" translate="yes" xml:space="preserve">
          <source>let [rec] &lt;a href=&quot;expr#let-binding&quot;&gt;let-binding&lt;/a&gt; { and&lt;a href=&quot;expr#let-binding&quot;&gt;let-binding&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8297b94132999eefacc15aae5b2caf50958960c" translate="yes" xml:space="preserve">
          <source>let [rec] &lt;a href=&quot;expr#let-binding&quot;&gt;let-binding&lt;/a&gt; {and&lt;a href=&quot;expr#let-binding&quot;&gt;let-binding&lt;/a&gt;} in&lt;a href=&quot;#class-expr&quot;&gt;class-expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e86db291ae252519fd411c0cbfa4701b2d69ce0" translate="yes" xml:space="preserve">
          <source>let [rec] xname&lt;sub&gt;1&lt;/sub&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;and &amp;hellip; andxname&lt;sub&gt;m&lt;/sub&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt;in&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;0&lt;/sub&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b719aded420f0b5d273d6d8702365a345f524e06" translate="yes" xml:space="preserve">
          <source>let match fun function try</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bf11b6308b221037d374e48cd470b0a5818594" translate="yes" xml:space="preserve">
          <source>let, &lt;a href=&quot;expr#hevea_manual.kwd23&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd50&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd63&quot;&gt;7.7.2&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd88&quot;&gt;7.7.8&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd90&quot;&gt;7.7.8&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd121&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd182&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd193&quot;&gt;7.11.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7901b57fcded468298de5ef006d54071437eb06" translate="yes" xml:space="preserve">
          <source>let-binding</source>
          <target state="translated">let-binding</target>
        </trans-unit>
        <trans-unit id="6088f290e02a7e2e06566bc7aab735a0992cd484" translate="yes" xml:space="preserve">
          <source>let-operator</source>
          <target state="translated">let-operator</target>
        </trans-unit>
        <trans-unit id="d9007e043d228a48400a566a231975c63cd6d03b" translate="yes" xml:space="preserve">
          <source>let&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt;&lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; &lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt;=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6f3793c4518968e3a11110a80f9c48b7d45b5c" translate="yes" xml:space="preserve">
          <source>let&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt;=fun&lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; &lt;a href=&quot;#parameter&quot;&gt;parameter&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt;-&amp;gt;&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045f0f4ea787a29a1bbe9d700d7fe0c4f428ab22" translate="yes" xml:space="preserve">
          <source>let&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;.typeexpr=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1932d364e34d9a4c1df147d9280d5b6c2c34f16" translate="yes" xml:space="preserve">
          <source>let&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;and &amp;hellip; and&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;in&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42eb3728a0a95a8f7cc668516e38099d5ab80194" translate="yes" xml:space="preserve">
          <source>letexception&lt;a href=&quot;typedecl#constr-decl&quot;&gt;constr-decl&lt;/a&gt;in&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="translated">letexception&lt;a href=&quot;typedecl#constr-decl&quot;&gt;constr-decl&lt;/a&gt;in&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56562fa39251b89546ee1424e158b35667fa9b24" translate="yes" xml:space="preserve">
          <source>letmodule &amp;hellip; in&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc36b154414e2417f92dcd686143b2dc6c21baf" translate="yes" xml:space="preserve">
          <source>letmodule&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt; { (&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;) } [ :&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt; ] =&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;in&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b92dbebf0b22df03683c261ba8c5b36dd336e6" translate="yes" xml:space="preserve">
          <source>letopen!&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;in&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="translated">letopen!&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;in&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11014a97c66d7c6e7339ec3ba6da475633773c5c" translate="yes" xml:space="preserve">
          <source>letopen!&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;in&lt;a href=&quot;classes#class-body-type&quot;&gt;class-body-type&lt;/a&gt;</source>
          <target state="translated">letopen!&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;in&lt;a href=&quot;classes#class-body-type&quot;&gt;class-body-type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b876ef201f4cf012020480cd1dfab1222f592001" translate="yes" xml:space="preserve">
          <source>letopen!&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;in&lt;a href=&quot;classes#class-expr&quot;&gt;class-expr&lt;/a&gt;</source>
          <target state="translated">letopen!&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;in&lt;a href=&quot;classes#class-expr&quot;&gt;class-expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92c929125a772fac69ddc25d63f7f08e4ec4f241" translate="yes" xml:space="preserve">
          <source>letopen!&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;in&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="translated">letopen!&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;in&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="641e0ba875b175ea7e480a5c1cf6c3a34d65b084" translate="yes" xml:space="preserve">
          <source>letopen&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;in&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="translated">letopen&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;in&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ab7577eb770be85dacb087541fc5e1733d1f3d8" translate="yes" xml:space="preserve">
          <source>letopen&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;in&lt;a href=&quot;#class-body-type&quot;&gt;class-body-type&lt;/a&gt;</source>
          <target state="translated">letopen&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;in&lt;a href=&quot;#class-body-type&quot;&gt;class-body-type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c6d98bf520d0a44be48bea2d7acc9524c23493e" translate="yes" xml:space="preserve">
          <source>letopen&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;in&lt;a href=&quot;#class-expr&quot;&gt;class-expr&lt;/a&gt;</source>
          <target state="translated">letopen&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;in&lt;a href=&quot;#class-expr&quot;&gt;class-expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52af1a8150b03cb2249048aa49b9307760ec15be" translate="yes" xml:space="preserve">
          <source>letopen&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;in&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="translated">letopen&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;in&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="310a5aa1b3381740d0c18cf6104a61696db10b40" translate="yes" xml:space="preserve">
          <source>letrec&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;and &amp;hellip; and&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;in&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4adcbb2abeb4b992c60a4bc707cf9a0d2bff2ce8" translate="yes" xml:space="preserve">
          <source>letrecname&lt;sub&gt;1&lt;/sub&gt;=1::name&lt;sub&gt;2&lt;/sub&gt;andname&lt;sub&gt;2&lt;/sub&gt;=2::name&lt;sub&gt;1&lt;/sub&gt;in&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="translated">letrecname&lt;sub&gt;1&lt;/sub&gt;=1::name&lt;sub&gt;2&lt;/sub&gt;andname&lt;sub&gt;2&lt;/sub&gt;=2::name&lt;sub&gt;1&lt;/sub&gt;in&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d2c3797b2547d8c84ae51b691a195de7f5ec187" translate="yes" xml:space="preserve">
          <source>letrecname&lt;sub&gt;1&lt;/sub&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;and &amp;hellip; andname&lt;sub&gt;n&lt;/sub&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;in&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea11c1fc7e46b9818b97453eacaaf9d5b35189c7" translate="yes" xml:space="preserve">
          <source>letrecname&lt;sub&gt;1&lt;/sub&gt;=fun &amp;hellip; and &amp;hellip; andname&lt;sub&gt;n&lt;/sub&gt;=fun &amp;hellip; in&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cc852c9ac803da9cde67a9fd74b4edd9bf98a9" translate="yes" xml:space="preserve">
          <source>letter</source>
          <target state="translated">letter</target>
        </trans-unit>
        <trans-unit id="f6dd55e8290282faf186f89026340988bbeaf29b" translate="yes" xml:space="preserve">
          <source>libraries and object code files (.o files) mentioned on the command line for the OCaml linker, that provide implementations for the user&amp;rsquo;s primitives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2b40a5fa876226908ddc3170c8d71c443dd5a0" translate="yes" xml:space="preserve">
          <source>like short, but also display the source code snippet corresponding to the location of the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43892f7ad1be0ef7d80e52ad4ee97884503efac" translate="yes" xml:space="preserve">
          <source>linefeed (LF)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538d5662b399dfa89388522bb51895493a521422" translate="yes" xml:space="preserve">
          <source>linenum-directive</source>
          <target state="translated">linenum-directive</target>
        </trans-unit>
        <trans-unit id="4f0aa52d656a3d75867f784b7e9c5d23bf1321c0" translate="yes" xml:space="preserve">
          <source>link</source>
          <target state="translated">link</target>
        </trans-unit>
        <trans-unit id="38b62be4bddaa5661c7d6b8e36e28159314df5c7" translate="yes" xml:space="preserve">
          <source>list</source>
          <target state="translated">list</target>
        </trans-unit>
        <trans-unit id="2126efbc35f0f38125d2dcb645d7dbb11147e4d1" translate="yes" xml:space="preserve">
          <source>list [module] [beginning] [end]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6ceaab00ab5f5571e9e76ed80536af01290222" translate="yes" xml:space="preserve">
          <source>load_printer &quot;file-name&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eef2c8c3538b5a80c5bed215aae8bd4f2193498" translate="yes" xml:space="preserve">
          <source>local-open</source>
          <target state="translated">local-open</target>
        </trans-unit>
        <trans-unit id="813bee93ab6fa289818ebeaebca612fefc3730cc" translate="yes" xml:space="preserve">
          <source>lor</source>
          <target state="translated">lor</target>
        </trans-unit>
        <trans-unit id="ddea6f9c04724c4c12a5f5ce62bbed894736fbe9" translate="yes" xml:space="preserve">
          <source>lor, &lt;a href=&quot;names#hevea_manual.kwd2&quot;&gt;7.3&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd53&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd72&quot;&gt;7.7.5&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd79&quot;&gt;7.7.5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171c1e65f95a4d4992c129151e673f844920649a" translate="yes" xml:space="preserve">
          <source>lowercase</source>
          <target state="translated">lowercase</target>
        </trans-unit>
        <trans-unit id="b3d7bc6dec9d4a5736f54335407387cb52cd9990" translate="yes" xml:space="preserve">
          <source>lowercase-ident</source>
          <target state="translated">lowercase-ident</target>
        </trans-unit>
        <trans-unit id="f7f2eb6bbc15d0ded786bf7b3f340e5c4e5db6a8" translate="yes" xml:space="preserve">
          <source>lowercase-letter</source>
          <target state="translated">lowercase-letter</target>
        </trans-unit>
        <trans-unit id="0c752315a1966211d0e696c3b3a70c6cab9bdcc3" translate="yes" xml:space="preserve">
          <source>lsl</source>
          <target state="translated">lsl</target>
        </trans-unit>
        <trans-unit id="4940e1d34c73989113408f4871b8a43b9211675d" translate="yes" xml:space="preserve">
          <source>lsl, &lt;a href=&quot;names#hevea_manual.kwd4&quot;&gt;7.3&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd55&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd74&quot;&gt;7.7.5&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd81&quot;&gt;7.7.5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291e20479a95bc25eca3f8a8ea285c5067de7d92" translate="yes" xml:space="preserve">
          <source>lsr</source>
          <target state="translated">lsr</target>
        </trans-unit>
        <trans-unit id="72f143b0c5a3e9618ed0a2276e7d0a2f9f7f8ba5" translate="yes" xml:space="preserve">
          <source>lsr, &lt;a href=&quot;names#hevea_manual.kwd5&quot;&gt;7.3&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd56&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd75&quot;&gt;7.7.5&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd82&quot;&gt;7.7.5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b316c879567a0ce0fc85005e0756822a16e896" translate="yes" xml:space="preserve">
          <source>lxor</source>
          <target state="translated">lxor</target>
        </trans-unit>
        <trans-unit id="6cfed45bd572474c709444aea7bce2673d33ac9a" translate="yes" xml:space="preserve">
          <source>lxor, &lt;a href=&quot;names#hevea_manual.kwd3&quot;&gt;7.3&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd54&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd73&quot;&gt;7.7.5&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd80&quot;&gt;7.7.5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0d31c0d563223024da45691584643ac78c96e8" translate="yes" xml:space="preserve">
          <source>m</source>
          <target state="translated">m</target>
        </trans-unit>
        <trans-unit id="386a0e08ae576045599a5bc72e69d77c43a6601f" translate="yes" xml:space="preserve">
          <source>makes programs more readable,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5c844eab88bcaca779bd2f3ad67b573bbbbfca" translate="yes" xml:space="preserve">
          <source>match</source>
          <target state="translated">match</target>
        </trans-unit>
        <trans-unit id="0b9b87661089dba83f207c00443e59cd0732c797" translate="yes" xml:space="preserve">
          <source>match branches: a count point is set at the beginning of the body of each branch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1c4e3594bfff0b597bb338d0192b0ed145c4a9" translate="yes" xml:space="preserve">
          <source>match, &lt;a href=&quot;expr#hevea_manual.kwd37&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd48&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd65&quot;&gt;7.7.3&lt;/a&gt;, &lt;a href=&quot;gadts#hevea_manual.kwd226&quot;&gt;8.10&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a47fbf471b30182c1c596bf642e7f451eae0c1" translate="yes" xml:space="preserve">
          <source>match&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;with&lt;a href=&quot;#pattern-matching&quot;&gt;pattern-matching&lt;/a&gt;</source>
          <target state="translated">match&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;with&lt;a href=&quot;#pattern-matching&quot;&gt;pattern-matching&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ab2f7945dcc0079f3d02ec3fae0eebfa2f5b92b" translate="yes" xml:space="preserve">
          <source>matches the value of &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt; against the patterns &lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; to &lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;. If the matching against &lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;&lt;sub&gt;i&lt;/sub&gt; succeeds, the associated expression &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;i&lt;/sub&gt; is evaluated, and its value becomes the value of the whole match expression. The evaluation of &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;i&lt;/sub&gt; takes place in an environment enriched by the bindings performed during matching. If several patterns match the value of &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;, the one that occurs first in the match expression is selected. If none of the patterns match the value of &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;, the exception Match_failure is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca29d521ef6f186e6e2d15f55cbe7e024ec6a84" translate="yes" xml:space="preserve">
          <source>matching-case</source>
          <target state="translated">matching-case</target>
        </trans-unit>
        <trans-unit id="7c73604104e94ed36100e6d479105b2b83f7b01f" translate="yes" xml:space="preserve">
          <source>may be duplicated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a80232d91ddcfb50da954cfc4b07afb601a27e" translate="yes" xml:space="preserve">
          <source>merge @author</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e74efa98c09b4ca89b5a183f94ff4536cc94af" translate="yes" xml:space="preserve">
          <source>merge @before</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b4f1a61e2feec40f97a21336727e1c3eaca7e3" translate="yes" xml:space="preserve">
          <source>merge @deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287e8cb68be7c090edf1807937932f2139847c64" translate="yes" xml:space="preserve">
          <source>merge @param</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be922b4f91d4ddf8d1c54fdebb3bab166e17cc7" translate="yes" xml:space="preserve">
          <source>merge @raise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c201dab801a62713c218da8e02e6c3a08882ec" translate="yes" xml:space="preserve">
          <source>merge @return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94394a5a243f3c0a5d73dac018a4602e03c9219" translate="yes" xml:space="preserve">
          <source>merge @see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e0b3b936c0c662ebcfdf810d2149281cf5964e" translate="yes" xml:space="preserve">
          <source>merge @since</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114d10054574c18342d8601a610ff500d4699c6f" translate="yes" xml:space="preserve">
          <source>merge @version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf3d63d0de7339512c7c20877b3493c69d4b391" translate="yes" xml:space="preserve">
          <source>merge description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081bf3eedfad8141702fa4a674de79254e0bba8d" translate="yes" xml:space="preserve">
          <source>merge everything</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2028205cfa2d777778b9c1917c1f319ccdc056" translate="yes" xml:space="preserve">
          <source>method [private] &lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt; {&lt;a href=&quot;expr#parameter&quot;&gt;parameter&lt;/a&gt;} [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] =&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a4d248969085dc90c6ba25671be9eb3e3a66e9" translate="yes" xml:space="preserve">
          <source>method [private] &lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;:&lt;a href=&quot;types#poly-typexpr&quot;&gt;poly-typexpr&lt;/a&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004b8055d31dce5d4e913167b004b3141837a0d3" translate="yes" xml:space="preserve">
          <source>method [private] &lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;:type { &lt;a href=&quot;names#typeconstr-name&quot;&gt;typeconstr-name&lt;/a&gt; }&lt;sup&gt;+&lt;/sup&gt;.&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d4eee113689a169ac1f1621aa0617f21c99c15" translate="yes" xml:space="preserve">
          <source>method [private] [virtual] &lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;:&lt;a href=&quot;types#poly-typexpr&quot;&gt;poly-typexpr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ce6bced41cd8c05830dddc0882debf66ac3928" translate="yes" xml:space="preserve">
          <source>method [private] virtual&lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;:&lt;a href=&quot;types#poly-typexpr&quot;&gt;poly-typexpr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a342a3b18641ab1a9d1a21182afb977dbb6aa77" translate="yes" xml:space="preserve">
          <source>method names (&lt;a href=&quot;#method-name&quot;&gt;method-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491ac61e8bf68487cd27e9b71f1b4310a54c3b00" translate="yes" xml:space="preserve">
          <source>method! [private] &lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt; {&lt;a href=&quot;expr#parameter&quot;&gt;parameter&lt;/a&gt;} [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] =&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f952509013443c536c201db74e15a8cbd892da" translate="yes" xml:space="preserve">
          <source>method! [private] &lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;:&lt;a href=&quot;types#poly-typexpr&quot;&gt;poly-typexpr&lt;/a&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70c4031b37141b9d489ed7a1a3e3ade74cc42dd" translate="yes" xml:space="preserve">
          <source>method! [private] &lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;:type { &lt;a href=&quot;names#typeconstr-name&quot;&gt;typeconstr-name&lt;/a&gt; }&lt;sup&gt;+&lt;/sup&gt;.&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d34da1d32cc0d6e3501e59432f8b5e192bd725" translate="yes" xml:space="preserve">
          <source>method, &lt;a href=&quot;classes#hevea_manual.kwd106&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd113&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd115&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd127&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd137&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd139&quot;&gt;7.9.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd20118ee7a7faac798544db735f202b14acf41" translate="yes" xml:space="preserve">
          <source>method-name</source>
          <target state="translated">method-name</target>
        </trans-unit>
        <trans-unit id="57d32765a281ea1c0a529b8ce8847eb1cd520e63" translate="yes" xml:space="preserve">
          <source>method-type</source>
          <target state="translated">method-type</target>
        </trans-unit>
        <trans-unit id="01a46fb52f0c14f92da476120be7afe1ef1ec52d" translate="yes" xml:space="preserve">
          <source>method:</source>
          <target state="translated">method:</target>
        </trans-unit>
        <trans-unit id="8334677a4eea51376469f929869216e0ab4616fd" translate="yes" xml:space="preserve">
          <source>methodvirtualprivate&lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;:&lt;a href=&quot;types#poly-typexpr&quot;&gt;poly-typexpr&lt;/a&gt;</source>
          <target state="translated">methodvirtualprivate&lt;a href=&quot;names#method-name&quot;&gt;method-name&lt;/a&gt;:&lt;a href=&quot;types#poly-typexpr&quot;&gt;poly-typexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="614383124112900fb6142b3695d7dfbf394c6335" translate="yes" xml:space="preserve">
          <source>miscellaneous memory-related functions and macros (for GC interface, in-place modification of structures, etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efca0a1c6b9e23ddc653fc69324668576ca551d" translate="yes" xml:space="preserve">
          <source>mkfifo</source>
          <target state="translated">mkfifo</target>
        </trans-unit>
        <trans-unit id="7dd30f0a95d522bfc058be4e75847f8b6df9f76b" translate="yes" xml:space="preserve">
          <source>mod</source>
          <target state="translated">mod</target>
        </trans-unit>
        <trans-unit id="06c208939b2262778ef29013e5908ca82e6e3245" translate="yes" xml:space="preserve">
          <source>mod ∣ land ∣ lor ∣ lxor ∣ lsl ∣ lsr ∣ asr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ab5a4895e2bc2ade8b04e93895b8fc37dd8e04" translate="yes" xml:space="preserve">
          <source>mod, &lt;a href=&quot;names#hevea_manual.kwd0&quot;&gt;7.3&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd51&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd70&quot;&gt;7.7.5&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd77&quot;&gt;7.7.5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d636f16bc4bdded1e9603e3215629abedd36a6b" translate="yes" xml:space="preserve">
          <source>mod-constraint</source>
          <target state="translated">mod-constraint</target>
        </trans-unit>
        <trans-unit id="3dae3b4efe9ff863260fe60d05952948b42579e8" translate="yes" xml:space="preserve">
          <source>mode:</source>
          <target state="translated">mode:</target>
        </trans-unit>
        <trans-unit id="008f58e566745159bf275b503f47ccc404114628" translate="yes" xml:space="preserve">
          <source>modtype-name</source>
          <target state="translated">modtype-name</target>
        </trans-unit>
        <trans-unit id="8f625b907f6d84171d5c22e1036e9fce19990a18" translate="yes" xml:space="preserve">
          <source>modtype-path</source>
          <target state="translated">modtype-path</target>
        </trans-unit>
        <trans-unit id="2078d9b7571dfde4914b5ce804793816f94bf991" translate="yes" xml:space="preserve">
          <source>modtype:</source>
          <target state="translated">modtype:</target>
        </trans-unit>
        <trans-unit id="fbd34a2b6e6a9fe8161f97dc435642609ac0bc29" translate="yes" xml:space="preserve">
          <source>module</source>
          <target state="translated">module</target>
        </trans-unit>
        <trans-unit id="7441763e8eadca2fc8f46b1c8e352dca85e44ef4" translate="yes" xml:space="preserve">
          <source>module names (&lt;a href=&quot;#module-name&quot;&gt;module-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8006ab4be9c917928e0ca82ba074953be1e5ab4" translate="yes" xml:space="preserve">
          <source>module type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff018ec921edc32afa3f9da1561f4efc690c0da0" translate="yes" xml:space="preserve">
          <source>module type names (&lt;a href=&quot;#modtype-name&quot;&gt;modtype-name&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ccaea6e2ca71b1b1450f0caf5262350d7e8783" translate="yes" xml:space="preserve">
          <source>module, &lt;a href=&quot;expr#hevea_manual.kwd89&quot;&gt;7.7.8&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd160&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd172&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd174&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd188&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd200&quot;&gt;7.11.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd202&quot;&gt;7.11.2&lt;/a&gt;, &lt;a href=&quot;manual024#hevea_manual.kwd206&quot;&gt;8.2&lt;/a&gt;, &lt;a href=&quot;firstclassmodules#hevea_manual.kwd212&quot;&gt;8.5&lt;/a&gt;, &lt;a href=&quot;moduletypeof#hevea_manual.kwd216&quot;&gt;8.6&lt;/a&gt;, &lt;a href=&quot;signaturesubstitution#hevea_manual.kwd221&quot;&gt;8.7&lt;/a&gt;, &lt;a href=&quot;modulealias#hevea_manual.kwd223&quot;&gt;8.8&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd15a4ce8a913b20909f69ed51f94dbccccc68f" translate="yes" xml:space="preserve">
          <source>module-expr</source>
          <target state="translated">module-expr</target>
        </trans-unit>
        <trans-unit id="4e3c9a4fceacf3d192e656bfc0847f9da785fa74" translate="yes" xml:space="preserve">
          <source>module-items</source>
          <target state="translated">module-items</target>
        </trans-unit>
        <trans-unit id="8ee15acbd165acaa3fef478e3d7ce0417164f411" translate="yes" xml:space="preserve">
          <source>module-name</source>
          <target state="translated">module-name</target>
        </trans-unit>
        <trans-unit id="1809db2c8ca3cd86dd0fdcf7aadd3f15ca27ad7e" translate="yes" xml:space="preserve">
          <source>module-path</source>
          <target state="translated">module-path</target>
        </trans-unit>
        <trans-unit id="29544219138b467872756c6b67b20584c7e6f25e" translate="yes" xml:space="preserve">
          <source>module-type</source>
          <target state="translated">module-type</target>
        </trans-unit>
        <trans-unit id="d1bf2e17e7158e60062b4c38d952e84b30ef30c3" translate="yes" xml:space="preserve">
          <source>module:</source>
          <target state="translated">module:</target>
        </trans-unit>
        <trans-unit id="99933645f3edbe7c64fff338a2636a8d018ffe92" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt; { (&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;) } :&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd25d37a9a6ec100221b48f42e245756859b23ab" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt; { (&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;) } :&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdadf480c8065207bb758b98366a71b036929433" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt; { (&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;) } [ :&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt; ] =&lt;a href=&quot;#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa34c20a9c7d986a37d6eddddd05986ad9258f5c" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt; { (&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;) } [ :&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt; ] =&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1effb736fd5f5334d101acbb2561cc9bfd106725" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt; { (&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;) ∣ () } :&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4983318ce2c3564851abf76d595b1d25621f08b7" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt; { (&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;) ∣ () } [ :&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt; ] =&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8467d40414b615a8d8b9b013ae16bc58757f7d3f" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;(name&lt;sub&gt;1&lt;/sub&gt;:&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;) &amp;hellip; (name&lt;sub&gt;n&lt;/sub&gt;:&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;):&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937c777204afe4c1bc132190a3d30d967a32788c" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;(name&lt;sub&gt;1&lt;/sub&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;) &amp;hellip; (name&lt;sub&gt;n&lt;/sub&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;)=&lt;a href=&quot;#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d038178fa9ade448767894d13aa64c21d48f6e0a" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;</source>
          <target state="translated">module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf3cf4d234053495820f28e041e9f40be3b34f64" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1390692de1de4cfcb57f9a157fc2b42b55f29f0" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;=&lt;a href=&quot;#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="translated">module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;=&lt;a href=&quot;#module-expr&quot;&gt;module-expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e00f00c98b176075f013ab125f5a6e633ed2b73" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:=&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</source>
          <target state="translated">module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:=&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="893c581556967dd03a0cd4ae837413e1977ae685" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:functor(name&lt;sub&gt;1&lt;/sub&gt;:&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;)-&amp;gt; &amp;hellip; -&amp;gt;&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8282410bc5bb37ea017816d776939482bd821c09" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;=(&lt;a href=&quot;#module-expr&quot;&gt;module-expr&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;).</source>
          <target state="translated">module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;=(&lt;a href=&quot;#module-expr&quot;&gt;module-expr&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="6af1b35072b1bdd68073e014ff1e584272c95d9f" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;=&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;</source>
          <target state="translated">module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;=&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7336f15fb0480fa2ee205a914a672034b9c084c" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;=functor(name&lt;sub&gt;1&lt;/sub&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;)-&amp;gt; &amp;hellip; -&amp;gt;&lt;a href=&quot;#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1df8a8fac4b6049e82b37d3ce9e01fabd42b44" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;:=&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</source>
          <target state="translated">module&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;:=&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b74f359ad86149c243dc44173e1ecb0773225bf7" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;=&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</source>
          <target state="translated">module&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;=&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29207b70fb88e2aefdf3a84da75213e132b12f20" translate="yes" xml:space="preserve">
          <source>modulerec&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt; { and&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcac047307ac113b21b6c631462456fe383141ed" translate="yes" xml:space="preserve">
          <source>modulerec&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;=&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; } { and&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;=&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; } }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dfba173ba4c9821e03e4e4cc39df13680b5088" translate="yes" xml:space="preserve">
          <source>modulerec&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;=&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt; { and&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;=&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4d84562161cbbc99b99ff64911ed2bf84dba9b" translate="yes" xml:space="preserve">
          <source>moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;</source>
          <target state="translated">moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18411232dd5284d89b711c314990e3038a3e9729" translate="yes" xml:space="preserve">
          <source>moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659734808c421834907590742b3bd9cad57c2fbf" translate="yes" xml:space="preserve">
          <source>moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;=&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;</source>
          <target state="translated">moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;=&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57bded66203318623afaa8c9f0cd14bfeaec01fd" translate="yes" xml:space="preserve">
          <source>moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;=&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;</source>
          <target state="translated">moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;=&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e83f1a79dd1dcf7d1f6580c9f0eb4681b628006c" translate="yes" xml:space="preserve">
          <source>moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;=&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be4a0aebee1f638e9b6e58b06a9376c214ce94d" translate="yes" xml:space="preserve">
          <source>moduletypeof&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="translated">moduletypeof&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd3cfe1f76eff86ad1ec9ba59771797b6179b566" translate="yes" xml:space="preserve">
          <source>moduleunit-name:sig&lt;a href=&quot;#unit-interface&quot;&gt;unit-interface&lt;/a&gt;end=struct&lt;a href=&quot;#unit-implementation&quot;&gt;unit-implementation&lt;/a&gt;end</source>
          <target state="translated">moduleunit-name:sig&lt;a href=&quot;#unit-interface&quot;&gt;unit-interface&lt;/a&gt;end=struct&lt;a href=&quot;#unit-implementation&quot;&gt;unit-implementation&lt;/a&gt;end</target>
        </trans-unit>
        <trans-unit id="6e038304501614c1e6aec3a766dc12211b3f25f4" translate="yes" xml:space="preserve">
          <source>mutable, &lt;a href=&quot;typedecl#hevea_manual.kwd96&quot;&gt;7.8.1&lt;/a&gt;, &lt;a href=&quot;typedecl#hevea_manual.kwd98&quot;&gt;7.8.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd105&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd112&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd126&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd134&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd136&quot;&gt;7.9.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">n</target>
        </trans-unit>
        <trans-unit id="3401ca97f7e6539ce2ab589ba812c541da58229a" translate="yes" xml:space="preserve">
          <source>name&lt;sub&gt;1&lt;/sub&gt;:sig&lt;a href=&quot;modtypes#specification&quot;&gt;specification&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;end &amp;hellip; name&lt;sub&gt;n&lt;/sub&gt;:sig&lt;a href=&quot;modtypes#specification&quot;&gt;specification&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c54af7effbd4ca0aaea9254845ed74e9c9fd5e5" translate="yes" xml:space="preserve">
          <source>nativeint</source>
          <target state="translated">nativeint</target>
        </trans-unit>
        <trans-unit id="7842b5cc68f46a5264ad22c6f3ac95a21cab1bbe" translate="yes" xml:space="preserve">
          <source>nativeint-literal</source>
          <target state="translated">nativeint-literal</target>
        </trans-unit>
        <trans-unit id="85777c03b72554cd08e721b6148dc27d2a50a7a6" translate="yes" xml:space="preserve">
          <source>never</source>
          <target state="translated">never</target>
        </trans-unit>
        <trans-unit id="c31f532ff7f5db85232dc564f48437b88a83759a" translate="yes" xml:space="preserve">
          <source>new, &lt;a href=&quot;expr#hevea_manual.kwd41&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd84&quot;&gt;7.7.6&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b4c2a18d75a7244757a18872d0ed66694e5a5a" translate="yes" xml:space="preserve">
          <source>new&lt;a href=&quot;names#class-path&quot;&gt;class-path&lt;/a&gt;</source>
          <target state="translated">new&lt;a href=&quot;names#class-path&quot;&gt;class-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="074dd873d8c2bce602dbeeddd1fa2317c3fa3aa3" translate="yes" xml:space="preserve">
          <source>next [count]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5929e58a5aa1fde36b80ecc26548c50423ddf943" translate="yes" xml:space="preserve">
          <source>nice</source>
          <target state="translated">nice</target>
        </trans-unit>
        <trans-unit id="02613494503daf7d9ed13a93e2d8b320c160d349" translate="yes" xml:space="preserve">
          <source>none of the slots in the trace come from modules compiled with debug information (&lt;code&gt;-g&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d01cec4632c7ff9d709479c742dd1d0a568021" translate="yes" xml:space="preserve">
          <source>nonrec, &lt;a href=&quot;typedecl#hevea_manual.kwd94&quot;&gt;7.8.1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5f08a32c1649f11d63d6491e8b76ffa17942ab" translate="yes" xml:space="preserve">
          <source>not implemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7680b128a8b69c3efc6d6c275b8e009a14c850" translate="yes" xml:space="preserve">
          <source>not implemented (make no sense on a DOS file system)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73489f2bdf6d70af09dd9401c32d9151e672b2ba" translate="yes" xml:space="preserve">
          <source>not implemented (meaningless under Windows)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ee7436529099ef87e2a1073f1f970993e06ff3" translate="yes" xml:space="preserve">
          <source>not implemented (no inter-process signals in Windows)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a177e59ecdc828972a5604ea991e551402c776f" translate="yes" xml:space="preserve">
          <source>not implemented (no inter-process signals on Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe6d428ca4d266bd1bb4732e6dcf7667e6b5eda" translate="yes" xml:space="preserve">
          <source>not implemented, use create_process or threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153f9e5597312a4464d71a2524df53cfaf941454" translate="yes" xml:space="preserve">
          <source>not implemented, use waitpid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7d8ba7bd0d989ed12477caad3d945573e56f88" translate="yes" xml:space="preserve">
          <source>not implemented; use threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74b00e5a8ebeade208bc452f2f09614af1b36bc" translate="yes" xml:space="preserve">
          <source>number of dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a81af3e591ac713f81ea1efe93dcf36157d8376" translate="yes" xml:space="preserve">
          <source>o</source>
          <target state="translated">o</target>
        </trans-unit>
        <trans-unit id="e53bfaca900144fa1b365399c6b4e272ed880606" translate="yes" xml:space="preserve">
          <source>object [(&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;)] {&lt;a href=&quot;#class-field-spec&quot;&gt;class-field-spec&lt;/a&gt;} end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba6c748e2a2a757d26239fccc7f134cf45cc579" translate="yes" xml:space="preserve">
          <source>object, &lt;a href=&quot;expr#hevea_manual.kwd42&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd85&quot;&gt;7.7.6&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd101&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd118&quot;&gt;7.9.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb3dd61d6059c19cdff21196dd0b7ecfc45e8da" translate="yes" xml:space="preserve">
          <source>object-expr</source>
          <target state="translated">object-expr</target>
        </trans-unit>
        <trans-unit id="cc654d311ee1cbdb2d0b3470bae8cae01e5bd1d6" translate="yes" xml:space="preserve">
          <source>object&lt;a href=&quot;#class-body&quot;&gt;class-body&lt;/a&gt;end</source>
          <target state="translated">object&lt;a href=&quot;#class-body&quot;&gt;class-body&lt;/a&gt;end</target>
        </trans-unit>
        <trans-unit id="4117c38473c498ee96b230fbb6000c97a66f66ed" translate="yes" xml:space="preserve">
          <source>object&lt;a href=&quot;classes#class-body&quot;&gt;class-body&lt;/a&gt;end</source>
          <target state="translated">object&lt;a href=&quot;classes#class-body&quot;&gt;class-body&lt;/a&gt;end</target>
        </trans-unit>
        <trans-unit id="3a476a08b4f3fcf8900d9f6f577b37263ef43523" translate="yes" xml:space="preserve">
          <source>ocaml.boxed or boxed can be used on type definitions to mean the opposite of ocaml.unboxed: keep the unoptimized representation of the type. When there is no annotation, the default is currently boxed but it may change in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3329e3ccc42a99bad5f86a09478c6c71c56cb3ae" translate="yes" xml:space="preserve">
          <source>ocaml.local or local take either never, always, maybe or nothing as payload on a function definition. If no payload is provided, the default is always. The attribute controls an optimization which consists in compiling a function into a static continuation. Contrary to inlining, this optimization does not duplicate the function&amp;rsquo;s body. This is possible when all references to the function are full applications, all sharing the same continuation (for instance, the returned value of several branches of a pattern matching). never disables the optimization, always asserts that the optimization applies (otherwise a warning 55 is emitted) and maybe lets the optimization apply when possible (this is the default behavior when the attribute is not specified). The optimization is implicitly disabled when using the bytecode compiler in debug mode (-g), and for functions marked with an ocaml.inline always or ocaml.unrolled attribute which supersede ocaml.local.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f09cadce4a4acccacb03161ee6c4384fa34d88f" translate="yes" xml:space="preserve">
          <source>ocaml.unboxed or unboxed can be used on a type definition if the type is a single-field record or a concrete type with a single constructor that has a single argument. It tells the compiler to optimize the representation of the type by removing the block that represents the record or the constructor (i.e. a value of this type is physically equal to its argument). In the case of GADTs, an additional restriction applies: the argument must not be an existential variable, represented by an existential type variable, or an abstract type constructor applied to an existential type variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2dff72f47287159cfed6681354434c7e795878" translate="yes" xml:space="preserve">
          <source>ocaml_compiler_internal_params (file in the stdlib directory)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1255e9f0c812dd9933db19609a9689e76d0d7a6" translate="yes" xml:space="preserve">
          <source>ocamldoc section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f421586882978eec02ecc275602d06a76bafa0f4" translate="yes" xml:space="preserve">
          <source>ocamllex: Position memory overflow, too many bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa1f25f017b7358c864e572fd3329776b13a358" translate="yes" xml:space="preserve">
          <source>ocamllex: transition table overflow, automaton is too big</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4274c6bb615edc55a825014050069ff7fb9f33e6" translate="yes" xml:space="preserve">
          <source>octal (radix 8)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f08e7eda942f071ca9c688e28e2f5b37883ba42" translate="yes" xml:space="preserve">
          <source>of, &lt;a href=&quot;types#hevea_manual.kwd10&quot;&gt;7.4&lt;/a&gt;, &lt;a href=&quot;typedecl#hevea_manual.kwd95&quot;&gt;7.8.1&lt;/a&gt;, &lt;a href=&quot;moduletypeof#hevea_manual.kwd218&quot;&gt;8.6&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0daee83e09e27e7fd1e287c07dc0c952da2d8b86" translate="yes" xml:space="preserve">
          <source>on entrance to the toplevel. The modules Foo, Bar and Gee are not opened, though; you still have to do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8aaf9d05529fcef6793bc5c848a62e2cf8ad26" translate="yes" xml:space="preserve">
          <source>once a pretty-printing box is open, display its material with basic printing functions (e. g. &lt;code&gt;print_int&lt;/code&gt; and &lt;code&gt;print_string&lt;/code&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ce94bf17a17ba6346351fc70a64e6ad98312df" translate="yes" xml:space="preserve">
          <source>one conditional branch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba9f2ac90705c299198b689aa706dcdc93f9d99" translate="yes" xml:space="preserve">
          <source>one direct call;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86eeebdffbc3d84ae7e425c1e972b8f0af5fa858" translate="yes" xml:space="preserve">
          <source>only print the error and its location;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fe687be54c68c578a3e86855cf1b484e9247cc" translate="yes" xml:space="preserve">
          <source>open for appending: always write at end of file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a77a0ea46c71e6edd7192a331d28ef94a8dce95" translate="yes" xml:space="preserve">
          <source>open for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9953d001a747618c320c309949bcf7f3a66aa7" translate="yes" xml:space="preserve">
          <source>open for writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec5f518c2623a1af90909e49ca15b0b0040fdfc" translate="yes" xml:space="preserve">
          <source>open in binary mode (no conversion).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe1a092f020ad685eb2a89eb271967bf4167af6" translate="yes" xml:space="preserve">
          <source>open in non-blocking mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30dcf4157633c24c720127187068ce21584b1899" translate="yes" xml:space="preserve">
          <source>open in text mode (may perform conversions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71756747df34775fb3dcae40141b155c565baed" translate="yes" xml:space="preserve">
          <source>open!, &lt;a href=&quot;overridingopen#hevea_manual.kwd224&quot;&gt;8.9&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9a487c02ff14262b332da63556a84dd14c7fac" translate="yes" xml:space="preserve">
          <source>open!&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="translated">open!&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68cae50c9a8898c99e4366a7b75c2dea89acbfb4" translate="yes" xml:space="preserve">
          <source>open!&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</source>
          <target state="translated">open!&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54eed8b376cd6c694272aeeb4285b38f42ba0cce" translate="yes" xml:space="preserve">
          <source>open!&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;</source>
          <target state="translated">open!&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f7c1608152285f255961824039b92e9598b6fc8" translate="yes" xml:space="preserve">
          <source>open, &lt;a href=&quot;expr#hevea_manual.kwd91&quot;&gt;7.7.8&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e52e42c706b036301d0a8159657fcf08367936" translate="yes" xml:space="preserve">
          <source>open, &lt;a href=&quot;patterns#hevea_manual.kwd19&quot;&gt;7.6&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd161&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd175&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd189&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd203&quot;&gt;7.11.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb82c703338b0488e06c716e48ea77354a5cc038" translate="yes" xml:space="preserve">
          <source>open&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="translated">open&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3072dbccf6c60f5467c1b938c7e85b9b6e48a2d1" translate="yes" xml:space="preserve">
          <source>open&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</source>
          <target state="translated">open&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d96f9a71341cc6c8687f30bbf644c9c9600ffc66" translate="yes" xml:space="preserve">
          <source>open&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;</source>
          <target state="translated">open&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="613102eb4d4622cbdceccb0a5309939c6f774b83" translate="yes" xml:space="preserve">
          <source>open&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3035d049150f6003da8afbc102326a6d19d66784" translate="yes" xml:space="preserve">
          <source>operations for interfacing in the presence of multiple threads (see section &amp;zwj;&lt;a href=&quot;#s%3AC-multithreading&quot;&gt;18.12&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a59b558ef1a960d79e06fbca9408f9872c581e" translate="yes" xml:space="preserve">
          <source>operations for interfacing in the presence of multiple threads (see section &lt;a href=&quot;#s%3AC-multithreading&quot;&gt;20.12&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895634d0bc956df0b2d43c266df1d87eae8752d7" translate="yes" xml:space="preserve">
          <source>operations for writing user-defined serialization and deserialization functions for custom blocks (see section &amp;zwj;&lt;a href=&quot;#s%3Ac-custom&quot;&gt;18.9&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7991440c6725a4b7d9b05bb01ff6b3e7f9982728" translate="yes" xml:space="preserve">
          <source>operations for writing user-defined serialization and deserialization functions for custom blocks (see section &lt;a href=&quot;#s%3Ac-custom&quot;&gt;20.9&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c5b00c267d091565487cfe16b9840f8409d36b" translate="yes" xml:space="preserve">
          <source>operations on custom blocks (see section &amp;zwj;&lt;a href=&quot;#s%3Ac-custom&quot;&gt;18.9&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78d67c739b926efa81cd8583ac817b7a12b7374" translate="yes" xml:space="preserve">
          <source>operations on custom blocks (see section &lt;a href=&quot;#s%3Ac-custom&quot;&gt;20.9&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4326a7291b555b7b4144d7cdbe5bf76de9149c" translate="yes" xml:space="preserve">
          <source>operator-char</source>
          <target state="translated">operator-char</target>
        </trans-unit>
        <trans-unit id="23929881068289997647a1e58eeaf90af7f562dc" translate="yes" xml:space="preserve">
          <source>operator-name</source>
          <target state="translated">operator-name</target>
        </trans-unit>
        <trans-unit id="33f478a78d3e35096f057b77dd86706dba814486" translate="yes" xml:space="preserve">
          <source>options are described below. objects are filenames ending in .cmo or .cma; they are loaded into the interpreter immediately after options are set. scriptfile is any file name not ending in .cmo or .cma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c08b84fa0059a9e1fe83a5468af354214d8f15c" translate="yes" xml:space="preserve">
          <source>optlabel</source>
          <target state="translated">optlabel</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="aba0e980e8685a904adc7408d29accd1b356b65b" translate="yes" xml:space="preserve">
          <source>or (if dynamic linking of C libraries is supported on your platform), start ocaml and type #load &quot;bigarray.cma&quot;;;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c57b90ceb494fc9f0717e6864635ecd7288c247" translate="yes" xml:space="preserve">
          <source>or (if dynamic linking of C libraries is supported on your platform), start ocaml and type #load &quot;str.cma&quot;;;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2febfd3517805650089e439e2f9af6599d42d36a" translate="yes" xml:space="preserve">
          <source>or (if dynamic linking of C libraries is supported on your platform), start ocaml and type #load &quot;unix.cma&quot;;;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722779f9ecf0f465fb97e211a417fcee6f19812a" translate="yes" xml:space="preserve">
          <source>or a pointer to a block inside the heap, allocated through one of the &lt;code&gt;caml_alloc_*&lt;/code&gt; functions described in section &amp;zwj;&lt;a href=&quot;#ss%3Ac-block-allocation&quot;&gt;18.4.4&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1521bd19c1027ddb9d6576a7824cba8e82515f6" translate="yes" xml:space="preserve">
          <source>or a pointer to a block inside the heap, allocated through one of the &lt;code&gt;caml_alloc_*&lt;/code&gt; functions described in section &lt;a href=&quot;#ss%3Ac-block-allocation&quot;&gt;20.4.4&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b86884761a9a549ff5c5eddd1ef01cbe478854" translate="yes" xml:space="preserve">
          <source>or combined with with aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f100475bfa49b140480e6aec3513ee4725a77565" translate="yes" xml:space="preserve">
          <source>or equivalently a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea440246f2e7b9109a9e5e8b525eb10973c96b8" translate="yes" xml:space="preserve">
          <source>or opening an intermediary box before the maximum indentation limit which fits on the current line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef7b08ec4669e4370b916c64f0ed1f38f78868b" translate="yes" xml:space="preserve">
          <source>or the object one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ccaccd24555fa7b456e2f23cc6e6bcaa8710a72" translate="yes" xml:space="preserve">
          <source>or to rename one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57322f84e41f29227cebb6d6311b8b59b3b77bfa" translate="yes" xml:space="preserve">
          <source>or ||</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db483b8d79c3bb78b6732f40313b4f64b06d0c0" translate="yes" xml:space="preserve">
          <source>or, &lt;a href=&quot;expr#hevea_manual.kwd36&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd44&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd66&quot;&gt;7.7.3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bd1d980497fee2e42c782fbce695ebbb560bc2" translate="yes" xml:space="preserve">
          <source>or, even simpler,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed80c4ea72bd0e7df15f51dc00447753fb2a2299" translate="yes" xml:space="preserve">
          <source>other systems: you may have to add one or more of -lcurses, -lm, -ldl, depending on your OS and C compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d11671ba6e900cb25da86e8000840e07df7802" translate="yes" xml:space="preserve">
          <source>outside of the following text formatting : {ul&lt;a href=&quot;#list&quot;&gt;list&lt;/a&gt;} , {ol&lt;a href=&quot;#list&quot;&gt;list&lt;/a&gt;} , [string] , {[string]} , {vstringv} , {%string%} , {!string} , {^&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;} , {_&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;} .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516b9783fca517eecbd1d064da2d165310b19759" translate="yes" xml:space="preserve">
          <source>p</source>
          <target state="translated">p</target>
        </trans-unit>
        <trans-unit id="5ea8f97d901fca5f9742ff0e1501c336c1ae4513" translate="yes" xml:space="preserve">
          <source>package-constraint</source>
          <target state="translated">package-constraint</target>
        </trans-unit>
        <trans-unit id="f21c2cc05a4b4c67e48be9f9a381407a955f3be8" translate="yes" xml:space="preserve">
          <source>package-type</source>
          <target state="translated">package-type</target>
        </trans-unit>
        <trans-unit id="b75381f00486e5b8409bb3475762882a8ac61715" translate="yes" xml:space="preserve">
          <source>parameter</source>
          <target state="translated">parameter</target>
        </trans-unit>
        <trans-unit id="be93c25ada08aa974008b386cde742fcaf131fd1" translate="yes" xml:space="preserve">
          <source>partially implemented (since 4.00.0): only the sigkill signal is implemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceae7a7ad4759e0857a54fbc58229c54045def8d" translate="yes" xml:space="preserve">
          <source>partially implemented, will not report timings for child processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91cc2e927b3bfb1d4477b744f7c70221ddb86ef1" translate="yes" xml:space="preserve">
          <source>pattern</source>
          <target state="translated">pattern</target>
        </trans-unit>
        <trans-unit id="9a14f979f0c796f87fd20ef4cb8c362f76bc6cda" translate="yes" xml:space="preserve">
          <source>pattern-matching</source>
          <target state="translated">pattern-matching</target>
        </trans-unit>
        <trans-unit id="6290e553a98d87f63eefc0b32b1e36d78aa7f83f" translate="yes" xml:space="preserve">
          <source>pattern&lt;sub&gt;1&lt;/sub&gt;</source>
          <target state="translated">pattern&lt;sub&gt;1&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="56eb0a31bbe7297da60db8aa72f09ac2853b44d5" translate="yes" xml:space="preserve">
          <source>pattern&lt;sub&gt;1&lt;/sub&gt; [whencond&lt;sub&gt;1&lt;/sub&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42685c268babbf976946e86d48b8ff111c06c2d" translate="yes" xml:space="preserve">
          <source>pattern&lt;sub&gt;n&lt;/sub&gt;</source>
          <target state="translated">pattern&lt;sub&gt;n&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="5da796c7c6c6610c99b5e3ac4648fa06813e8085" translate="yes" xml:space="preserve">
          <source>pattern&lt;sub&gt;n&lt;/sub&gt; [whencond&lt;sub&gt;n&lt;/sub&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8d29955a725c39916a4626f3921a0104242439" translate="yes" xml:space="preserve">
          <source>pause</source>
          <target state="translated">pause</target>
        </trans-unit>
        <trans-unit id="ebd590ce9a1efa1abfa7812beeb711d73a435d1b" translate="yes" xml:space="preserve">
          <source>plain characters, which are simply matched with the characters of the input (with a special case for space and line feed, see &lt;a href=&quot;scanf#space&quot;&gt;&lt;i&gt;The space character in format strings&lt;/i&gt;&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee289cc6a10ef81e7a6e9035ef88c0e4f972fa7" translate="yes" xml:space="preserve">
          <source>platform-native signed integers (32 bits on 32-bit architectures, 64 bits on 64-bit architectures) (&lt;a href=&quot;bigarray#TYPEnativeint_elt&quot;&gt;&lt;code&gt;Bigarray.nativeint_elt&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11159efea35812809fd340e198fdb6d19710acda" translate="yes" xml:space="preserve">
          <source>poly-typexpr</source>
          <target state="translated">poly-typexpr</target>
        </trans-unit>
        <trans-unit id="43783285fac067823fd1b628608bb5b900bbad79" translate="yes" xml:space="preserve">
          <source>polymorphic variant tags (&lt;a href=&quot;#tag-name&quot;&gt;tag-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e500b7ee0e045dfba4476dcfd5c9db9a363da702" translate="yes" xml:space="preserve">
          <source>polymorphic-variant-type</source>
          <target state="translated">polymorphic-variant-type</target>
        </trans-unit>
        <trans-unit id="e9b0086c168c737ac0b963d76497a5856daed63f" translate="yes" xml:space="preserve">
          <source>pos:</source>
          <target state="translated">pos:</target>
        </trans-unit>
        <trans-unit id="415154a2c7a095fc1c9fa0cc6a4804a1cc2734f3" translate="yes" xml:space="preserve">
          <source>prefix-symbol</source>
          <target state="translated">prefix-symbol</target>
        </trans-unit>
        <trans-unit id="4af3f385bf96a502111e12df398a8b68f6aa92c6" translate="yes" xml:space="preserve">
          <source>previous [count]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d388c1de363ddd59601c6b3cd7a300c08c5e57" translate="yes" xml:space="preserve">
          <source>print variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21600c854976437bcf87861f8d6dc972146277fa" translate="yes" xml:space="preserve">
          <source>prints the source code for the foo module, with comments indicating how many times the functions in this module have been called. Naturally, this information is accurate only if the source file has not been modified after it was compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fc999c04deaad5e43a18564d2f9ebd13e721e5" translate="yes" xml:space="preserve">
          <source>private, &lt;a href=&quot;classes#hevea_manual.kwd107&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd114&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd116&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd128&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd138&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd140&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;privatetypes#hevea_manual.kwd208&quot;&gt;8.3&lt;/a&gt;, &lt;a href=&quot;privatetypes#hevea_manual.kwd209&quot;&gt;8.3.3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6972b7a74a0d91636d3bd4853ddc80d9b261ae" translate="yes" xml:space="preserve">
          <source>produces OCaml code for a lexical analyzer in file lexer.ml. This file defines one lexing function per entry point in the lexer definition. These functions have the same names as the entry points. Lexing functions take as argument a lexer buffer, and return the semantic attribute of the corresponding entry point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16aeb52d9b6e78a5ade36aca960146507dd41cc" translate="yes" xml:space="preserve">
          <source>produces OCaml code for a parser in the file grammar.ml, and its interface in file grammar.mli.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11155c3306549f07ad5395657ab6287170fe5c06" translate="yes" xml:space="preserve">
          <source>provided that none of the following functions was called in between:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3568c954a19b6a056da65303deb914b703e841" translate="yes" xml:space="preserve">
          <source>put a link to the given address (given as string) on the given &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fa265330ad83eaa879efb1e2db6380896cf639" translate="yes" xml:space="preserve">
          <source>pwd</source>
          <target state="translated">pwd</target>
        </trans-unit>
        <trans-unit id="2d69b301e45a7341841fdf76669df5cc4679a3b6" translate="yes" xml:space="preserve">
          <source>quoted-string-id</source>
          <target state="translated">quoted-string-id</target>
        </trans-unit>
        <trans-unit id="4dc7c9ec434ed06502767136789763ec11d2c4b7" translate="yes" xml:space="preserve">
          <source>r</source>
          <target state="translated">r</target>
        </trans-unit>
        <trans-unit id="6e60cb78047c71746b80924fcb869fc0134e13c9" translate="yes" xml:space="preserve">
          <source>rec, see let, module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3819c35d877b1345807e3d9d3f338e6bc9724a6" translate="yes" xml:space="preserve">
          <source>recfield:</source>
          <target state="translated">recfield:</target>
        </trans-unit>
        <trans-unit id="5966a61e5a61d832aef9b581e6f18e1db33d2760" translate="yes" xml:space="preserve">
          <source>record field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22a6006d4e8731e062cba5aa7d96d38977f4874" translate="yes" xml:space="preserve">
          <source>record fields (&lt;a href=&quot;#field-name&quot;&gt;field-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55737a8e3a12122649717732b0cb9e68c95eeaf" translate="yes" xml:space="preserve">
          <source>record-decl</source>
          <target state="translated">record-decl</target>
        </trans-unit>
        <trans-unit id="0f063ea5f97a119e87951764645f80f0deea6925" translate="yes" xml:space="preserve">
          <source>recursive functions can be handled, by &lt;em&gt;specialisation&lt;/em&gt; (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6e666dc84ae3e952007f0972dc117193df7744" translate="yes" xml:space="preserve">
          <source>regexp</source>
          <target state="translated">regexp</target>
        </trans-unit>
        <trans-unit id="3b31a056d843a03afc5690886093d038735d5be1" translate="yes" xml:space="preserve">
          <source>regular-string-char</source>
          <target state="translated">regular-string-char</target>
        </trans-unit>
        <trans-unit id="d5e544e0891fb811fc2a6ed9cde7c97c37ad40e7" translate="yes" xml:space="preserve">
          <source>release 4.11</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f25c37bb409b86b6e68a8fa1dff4f4f1a7d3546" translate="yes" xml:space="preserve">
          <source>release 4.12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0486156d07fa718333ecb7fde3ac1eac4107c8e7" translate="yes" xml:space="preserve">
          <source>remove all dead bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45279a26094da8a9a18d68e1d73165175b125193" translate="yes" xml:space="preserve">
          <source>remove all dead bindings. Done automatically during automatic resizing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2f1d16440a5318a8598dae524d43687a2fca6a" translate="yes" xml:space="preserve">
          <source>remove_printer printer-name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d163ccdcc0dee1165d0048e0bb9001bf9ba51f0" translate="yes" xml:space="preserve">
          <source>report also the children that receive stop signals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1979a6d6e6fc87096cf5f15850445279b5052ee1" translate="yes" xml:space="preserve">
          <source>return if the tables are currently created in randomized mode by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16465e18c1f61545fd38aba7ebd8dd9cf7cfa8e" translate="yes" xml:space="preserve">
          <source>return the number of keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e9a016242857636e035b28aa8ca530ccdb96f1" translate="yes" xml:space="preserve">
          <source>returns a formatter to the &lt;a href=&quot;stdlib#TYPEout_channel&quot;&gt;&lt;code&gt;out_channel&lt;/code&gt;&lt;/a&gt;&lt;code&gt;oc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eaceb6209b07531ea6432fb37e8016312ee51aa" translate="yes" xml:space="preserve">
          <source>returns a fresh custom block, with room for size bytes of user data, and whose associated operations are given by ops (a pointer to a struct custom_operations, usually statically allocated as a C global variable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21575df2b7c11a34a5a1cc7e5f16e078757d6d0" translate="yes" xml:space="preserve">
          <source>returns the string &lt;code&gt;&quot;world&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75470a3076d8da06e21a0f542f3a535af3f72e94" translate="yes" xml:space="preserve">
          <source>reverse</source>
          <target state="translated">reverse</target>
        </trans-unit>
        <trans-unit id="d27a1f11771200949714b1af99f048a416f5d6f4" translate="yes" xml:space="preserve">
          <source>right</source>
          <target state="translated">right</target>
        </trans-unit>
        <trans-unit id="5850d2239fad415c0255443cedda838c249845ba" translate="yes" xml:space="preserve">
          <source>right align &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6ad19037c97987c4ff9792810c0e145356717c" translate="yes" xml:space="preserve">
          <source>run</source>
          <target state="translated">run</target>
        </trans-unit>
        <trans-unit id="a0f1490a20d0211c997b44bc357e1972deab8ae3" translate="yes" xml:space="preserve">
          <source>s</source>
          <target state="translated">s</target>
        </trans-unit>
        <trans-unit id="968ed85773fa350f2241ef05a1035096c6d88d47" translate="yes" xml:space="preserve">
          <source>same as &lt;a href=&quot;gc#VALfinalise&quot;&gt;&lt;code&gt;Gc.finalise&lt;/code&gt;&lt;/a&gt; except the value is not given as argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62b1d24f70d6d246d875e29be3edb2a04745817" translate="yes" xml:space="preserve">
          <source>same as &lt;a href=&quot;gc#VALfinalise&quot;&gt;&lt;code&gt;Gc.finalise&lt;/code&gt;&lt;/a&gt; except the value is not given as argument. So you can't use the given value for the computation of the finalisation function. The benefit is that the function is called after the value is unreachable for the last time instead of the first time. So contrary to &lt;a href=&quot;gc#VALfinalise&quot;&gt;&lt;code&gt;Gc.finalise&lt;/code&gt;&lt;/a&gt; the value will never be reachable again or used again. In particular every weak pointer and ephemeron that contained this value as key or data is unset before running the finalisation function. Moreover the finalisation functions attached with &lt;a href=&quot;gc#VALfinalise&quot;&gt;&lt;code&gt;Gc.finalise&lt;/code&gt;&lt;/a&gt; are always called before the finalisation functions attached with &lt;a href=&quot;gc#VALfinalise_last&quot;&gt;&lt;code&gt;Gc.finalise_last&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d44613726075381bdb5f43c380e4d53b22f246c" translate="yes" xml:space="preserve">
          <source>same as &lt;a href=&quot;hashtbl.seededs#VALstats&quot;&gt;&lt;code&gt;Hashtbl.SeededS.stats&lt;/code&gt;&lt;/a&gt; but only count the alive bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f98e09592f066948cf57623f56105b09e568c90" translate="yes" xml:space="preserve">
          <source>same, but also associate the name label to the current point. This point can be referenced by its fully-qualified label in a {! command, just like any other element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9836f5bbe38a0854816d52fffab3509398cb256d" translate="yes" xml:space="preserve">
          <source>scanning buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2f93e100e9090ce6d2751faa4c1f74ec57cf6e" translate="yes" xml:space="preserve">
          <source>scanning indications to specify boundaries of tokens (see scanning &lt;a href=&quot;scanf#indication&quot;&gt;&lt;i&gt;Scanning indications in format strings&lt;/i&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56be4a67b583f1345391ed9b2315737f2e22642" translate="yes" xml:space="preserve">
          <source>section:</source>
          <target state="translated">section:</target>
        </trans-unit>
        <trans-unit id="c2c5e842a80cc1fb2b034d7e9f5cf78a1f1f5d2a" translate="yes" xml:space="preserve">
          <source>set &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt; in bold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1b74b518127b0f51c6769ab814e97151f6fd98" translate="yes" xml:space="preserve">
          <source>set &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt; in italic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca75f1666a2a3243b761f9e1143bb96af224bdb" translate="yes" xml:space="preserve">
          <source>set argumentsarguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fe33796ac57e05eb60018a3ab4d2885d9df7e4" translate="yes" xml:space="preserve">
          <source>set bigstepcount</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc51049e498e9e4efe7a9500c9c0811f28fd155" translate="yes" xml:space="preserve">
          <source>set break_on_loadon/off</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec05d71860441a51254a895411868c4c7ae7e5c" translate="yes" xml:space="preserve">
          <source>set checkpointson/off</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5ab3f4ab234145f57111580ff4c6467dddf3e3" translate="yes" xml:space="preserve">
          <source>set follow_fork_modechild/parent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0009acc902525b064459fcbea07c9ad4fa3e07" translate="yes" xml:space="preserve">
          <source>set history size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deeb5448effea3c7278cd53ff544d2518dc00805" translate="yes" xml:space="preserve">
          <source>set loadingmode direct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8382e6ca89628dcedc1d8974c95c59494b37619" translate="yes" xml:space="preserve">
          <source>set loadingmode manual</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c3380ae13428c7774eeacce5ecffd6364d88a4" translate="yes" xml:space="preserve">
          <source>set loadingmode runtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab8a54602a6ccdf9db166db07a593ec9fc348e0" translate="yes" xml:space="preserve">
          <source>set print_depthd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b36c1b159fcc895076b743640cd5625e51d206" translate="yes" xml:space="preserve">
          <source>set print_lengthl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff594ba67afb75cbaf8636cba3382da5494d123" translate="yes" xml:space="preserve">
          <source>set processcountcount</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8468945a815e2a2a6fdd57511e67c4aeed90f5" translate="yes" xml:space="preserve">
          <source>set programfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8489bef8090f60920a78a2655d8a4be413dd9756" translate="yes" xml:space="preserve">
          <source>set smallstepcount</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3dcc58e30c162ba7ad9431e659aa71f38adf073" translate="yes" xml:space="preserve">
          <source>set socketsocket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f54b69460b544fd53302997dfaa278e49f02e5b" translate="yes" xml:space="preserve">
          <source>set text in subscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a46aa759863e9408a821e816badeda8462a836a" translate="yes" xml:space="preserve">
          <source>set text in superscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcdb02e7998235854c388b494d8f02c2ad8ba91" translate="yes" xml:space="preserve">
          <source>set the given string in preformatted source code style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2e7eb932f5e7e911bc45baa5de8a602614564c" translate="yes" xml:space="preserve">
          <source>set the given string in source code style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a579a43e06203a705899a890b730433adc7bef2" translate="yes" xml:space="preserve">
          <source>set the given string in verbatim style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90839a0911ca203048b2d6b5aaabba3e627c6acb" translate="yes" xml:space="preserve">
          <source>set variable value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276820dec21e40190119d5f15eeca6e64648aa82" translate="yes" xml:space="preserve">
          <source>setsid</source>
          <target state="translated">setsid</target>
        </trans-unit>
        <trans-unit id="74263fa81b209a785fda1829bdf441e1b7360625" translate="yes" xml:space="preserve">
          <source>setuid, setgid, setgroups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eee8e5753e4e9e5721663e483b1c922231e4636" translate="yes" xml:space="preserve">
          <source>setuid, setgid, setgroups, initgroups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f4ea7d91495df92bbac2e2149dfb850fe81396" translate="yes" xml:space="preserve">
          <source>short</source>
          <target state="translated">short</target>
        </trans-unit>
        <trans-unit id="1426daa44ce8183e1ffc3e200fb0f8ec0c77ee7f" translate="yes" xml:space="preserve">
          <source>should be rewritten into more atomic tests. For example, using the exception patterns documented in Section &amp;zwj;&lt;a href=&quot;patterns#sss%3Aexception-match&quot;&gt;7.6&lt;/a&gt;, one can write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6725d36266f8bd8f77697e05cdd63b548fe67957" translate="yes" xml:space="preserve">
          <source>should be rewritten into more atomic tests. For example, using the exception patterns documented in Section &lt;a href=&quot;patterns#sss%3Aexception-match&quot;&gt;7.6&lt;/a&gt;, one can write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101ffa3bb90d655707ddf9c6d21b6c7edf11058e" translate="yes" xml:space="preserve">
          <source>show variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54afc01f932822904314a3bc86c66644a5e756b" translate="yes" xml:space="preserve">
          <source>sig { &lt;a href=&quot;#specification&quot;&gt;specification&lt;/a&gt; [;;] } end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f5b602d5f5476804e64389fdf303fabc7122fe" translate="yes" xml:space="preserve">
          <source>sig, &lt;a href=&quot;modtypes#hevea_manual.kwd150&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd163&quot;&gt;7.10.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cdc1b02c51cbd537ba2c50f109a5aa572f5f9c8" translate="yes" xml:space="preserve">
          <source>sigprocmask, sigpending, sigsuspend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e46c8d87b616744ee9a568d63d5fcf6ba07ee3" translate="yes" xml:space="preserve">
          <source>simple-expr</source>
          <target state="translated">simple-expr</target>
        </trans-unit>
        <trans-unit id="c3a5f58835b645c095559fa458357d5199183c30" translate="yes" xml:space="preserve">
          <source>since 'a,'b and 'c denote type variables that may or may not be polymorphic. Whereas, it is an error to unify an explicitly polymorphic type with a non-polymorphic type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34eb858e98f1c124c876e6f064524b99718c2a7e" translate="yes" xml:space="preserve">
          <source>single quote (')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f3d36b9b396ea98380a14125b64e2cd276be90" translate="yes" xml:space="preserve">
          <source>some C compilers give bogus warnings about unused variables caml__dummy_xxx at each use of CAMLparam and CAMLlocal. You should ignore them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25f00e396d8f6448d8690bb5a1ea90675e3307d" translate="yes" xml:space="preserve">
          <source>sourcefilename</source>
          <target state="translated">sourcefilename</target>
        </trans-unit>
        <trans-unit id="ce92d33015f07736419ede421887d4d2f9a6f62e" translate="yes" xml:space="preserve">
          <source>space (SPC)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888a1396778fab4430d3cd30424904faace422e4" translate="yes" xml:space="preserve">
          <source>space: for signed numerical conversions, prefix number with a space if positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d6a194f4b02abf07f3fda776760ecf88ab4ca6" translate="yes" xml:space="preserve">
          <source>specification</source>
          <target state="translated">specification</target>
        </trans-unit>
        <trans-unit id="7b0a5f40f71f72821fc1f14a3d6492676b156a47" translate="yes" xml:space="preserve">
          <source>src:</source>
          <target state="translated">src:</target>
        </trans-unit>
        <trans-unit id="2b020927d3c6eb407223a1baa3d6ce3597a3f88d" translate="yes" xml:space="preserve">
          <source>start</source>
          <target state="translated">start</target>
        </trans-unit>
        <trans-unit id="b2b70fd6d8f7ad1ec4e37e24dfcad4cdbbfab70c" translate="yes" xml:space="preserve">
          <source>step [count]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb252044b5ea0f679ee78ec1a12904739e2904d" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="translated">string</target>
        </trans-unit>
        <trans-unit id="65294de333b98fa47838572397740ea65f3e40d5" translate="yes" xml:space="preserve">
          <source>string-character</source>
          <target state="translated">string-character</target>
        </trans-unit>
        <trans-unit id="32069a84e164f50b9c29c6e07d0c88fc879ff39e" translate="yes" xml:space="preserve">
          <source>string-literal</source>
          <target state="translated">string-literal</target>
        </trans-unit>
        <trans-unit id="6ee38842670e5dfd92874838972ab44cb8fa237d" translate="yes" xml:space="preserve">
          <source>struct [ &lt;a href=&quot;#module-items&quot;&gt;module-items&lt;/a&gt; ] end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284f4d502a3ebb828769f45a6e33b08e45f27ffe" translate="yes" xml:space="preserve">
          <source>struct, &lt;a href=&quot;modules#hevea_manual.kwd179&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd191&quot;&gt;7.11.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc421b884ddc02ab2710c9c989fc32bb3edbd3ec" translate="yes" xml:space="preserve">
          <source>symbolic flush command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198be5c8ee0cf6822687b007913992e8a524bf32" translate="yes" xml:space="preserve">
          <source>symbolic newline command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3589bbfd0d7e82c778726059eb9ab862cbab19b" translate="yes" xml:space="preserve">
          <source>symlink, readlink</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142c488297f534944135346bc4736cd566c979e9" translate="yes" xml:space="preserve">
          <source>syntactic class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efd86fb78a56a5145ed7739dcb00c78581c5375" translate="yes" xml:space="preserve">
          <source>t</source>
          <target state="translated">t</target>
        </trans-unit>
        <trans-unit id="5e9b60f69165f32f8930843ca718e10fdee30c52" translate="yes" xml:space="preserve">
          <source>tag</source>
          <target state="translated">tag</target>
        </trans-unit>
        <trans-unit id="d595f206abbbebd6bdec9294b36d0e822feb19b0" translate="yes" xml:space="preserve">
          <source>tag-name</source>
          <target state="translated">tag-name</target>
        </trans-unit>
        <trans-unit id="56a1e8c2db584faf20894fc385c0423fbaf4abf4" translate="yes" xml:space="preserve">
          <source>tag-spec</source>
          <target state="translated">tag-spec</target>
        </trans-unit>
        <trans-unit id="09974d4763d1fa2e2e36d70ca07a3b6460fc6fd0" translate="yes" xml:space="preserve">
          <source>tag-spec-first</source>
          <target state="translated">tag-spec-first</target>
        </trans-unit>
        <trans-unit id="cef3a74bbe6ef48016ea13925a547b73a9a8d9d5" translate="yes" xml:space="preserve">
          <source>tag-spec-full</source>
          <target state="translated">tag-spec-full</target>
        </trans-unit>
        <trans-unit id="8b914d9c17247b1330a2f508ee0f85d069450114" translate="yes" xml:space="preserve">
          <source>target-specific content (L&lt;sup&gt;A&lt;/sup&gt;T&lt;sub&gt;E&lt;/sub&gt;X code by default, see details in &lt;a href=&quot;#sss%3Aocamldoc-target-specific-syntax&quot;&gt;15.2.4.4&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388856baad0995c6b0ff3465750bdc0bf7c669e0" translate="yes" xml:space="preserve">
          <source>target-specific content (L&lt;sup&gt;A&lt;/sup&gt;T&lt;sub&gt;E&lt;/sub&gt;X code by default, see details in &lt;a href=&quot;#sss%3Aocamldoc-target-specific-syntax&quot;&gt;16.2.4.4&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e44812c499793901940cb64271e0438c8506bcf" translate="yes" xml:space="preserve">
          <source>tells a subsequent ocamlrun to print backtraces for uncaught exceptions, set its initial minor heap size to 1 &amp;zwj;megabyte and print a message at the start of each major GC cycle, when the heap size changes, and when compaction is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e46ba8de5595411d66300f906dec99fe6b8ed40" translate="yes" xml:space="preserve">
          <source>tells a subsequent ocamlrun to print backtraces for uncaught exceptions, set its initial minor heap size to 1 megabyte and print a message at the start of each major GC cycle, when the heap size changes, and when compaction is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3f016c232c175de9b644f6824ae516d56e0a0f" translate="yes" xml:space="preserve">
          <source>terminal functions (tc*)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8899bb3860c5a37cd411d2b5dae310188c4b60" translate="yes" xml:space="preserve">
          <source>terminates, either normally or because of an uncaught exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372ea08cab33e71c02c651dbc83a474d32c676ea" translate="yes" xml:space="preserve">
          <source>text</source>
          <target state="translated">text</target>
        </trans-unit>
        <trans-unit id="8458d42f0a73df9b5601fce2e685e2cb793b383d" translate="yes" xml:space="preserve">
          <source>text-element</source>
          <target state="translated">text-element</target>
        </trans-unit>
        <trans-unit id="3d6c8a6b5986d00e8bb60a9ef7a04504fa4452b4" translate="yes" xml:space="preserve">
          <source>the &amp;ldquo;unit&amp;rdquo; value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad731b36e920eb80ac82d11fcd3ef8721a23d3c" translate="yes" xml:space="preserve">
          <source>the 'cut': split the line if appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7306772afe9dc1c65bf041957b39c7464deb6aa0" translate="yes" xml:space="preserve">
          <source>the 'space': output a space or split the line if appropriate,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11fcd197e2228a06a7b4fa47446a3abcca2cbb1" translate="yes" xml:space="preserve">
          <source>the -custom option;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a17d3becb59f324b12cc6ab7a93be9ef2b7423" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;out_flush&lt;/code&gt; function flushes the pretty-printer output device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf48552b333a8d9af0766abf98bf02eefd8c0c5c" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;out_indent&lt;/code&gt; function performs new line indentation when the pretty-printer splits the line. It is called with the indentation value of the new line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144c54a7b926b721e709c7c2fd1b7fc3e31064de" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;out_spaces&lt;/code&gt; function outputs spaces when a break hint leads to spaces instead of a line split. It is called with the number of spaces to output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eff04b95813868f021ca91f70069901f9850b4d" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;out_string&lt;/code&gt; function performs all the pretty-printer string output. It is called with a string &lt;code&gt;s&lt;/code&gt;, a start position &lt;code&gt;p&lt;/code&gt;, and a number of characters &lt;code&gt;n&lt;/code&gt;; it is supposed to output characters &lt;code&gt;p&lt;/code&gt; to &lt;code&gt;p&amp;nbsp;+&amp;nbsp;n&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3006109716cd91281c1a891e5f99002ddd94d8" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;scanf&lt;/code&gt; facility is not intended for heavy duty lexical analysis and parsing. If it appears not expressive enough for your needs, several alternative exists: regular expressions (module &lt;a href=&quot;str&quot;&gt;&lt;code&gt;Str&lt;/code&gt;&lt;/a&gt;), stream parsers, &lt;code&gt;ocamllex&lt;/code&gt;-generated lexers, &lt;code&gt;ocamlyacc&lt;/code&gt;-generated parsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948b742e9e0297d4393837bc50179053e26fb3d1" translate="yes" xml:space="preserve">
          <source>the &lt;em&gt;inlining depth&lt;/em&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219d77297b1f73a9d339073f2d9ca20838d6b9b6" translate="yes" xml:space="preserve">
          <source>the &lt;em&gt;inlining threshold&lt;/em&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b06ebfa0efe1d671662da6b63a3bfe7d838717" translate="yes" xml:space="preserve">
          <source>the &lt;em&gt;unrolling depth&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d30ffa991dff9a941f57302934a31acf9dabeb0" translate="yes" xml:space="preserve">
          <source>the boolean false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9bfe9886a0f985c2c3289dbecad4ef9074744a6" translate="yes" xml:space="preserve">
          <source>the boolean true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4a03e65ed250e76664dc03ca4dbe083f9c3dac" translate="yes" xml:space="preserve">
          <source>the character with ASCII code ddd in decimal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac7d9323c74ab2f79d56eaa866d328de524ea8e" translate="yes" xml:space="preserve">
          <source>the character with ASCII code hh in hexadecimal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6a03f2b896dfd5dccca2dd73c8e3a6d1268892" translate="yes" xml:space="preserve">
          <source>the character with ASCII code ooo in octal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77511292e4647760d05717ac7144bfede7ae997" translate="yes" xml:space="preserve">
          <source>the compiler is in -Oclassic mode;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cd00a56d784a1a597b4c46f0cf2a3ef605289d" translate="yes" xml:space="preserve">
          <source>the container is dead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51f532e4323cdf02cc2f03c4cacbb9d4f83041f" translate="yes" xml:space="preserve">
          <source>the corresponding C stub can be written as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a8d50c2da48ea76e01f513e44dae8d074cf60c" translate="yes" xml:space="preserve">
          <source>the destination of an operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ccf0ae17b95e2027a42bb55eeb37d5e7ccdb01" translate="yes" xml:space="preserve">
          <source>the empty list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ea33b7d02edecf5e0e0501c0e759b43e4f3f9c" translate="yes" xml:space="preserve">
          <source>the empty list &lt;code&gt;[]&lt;/code&gt; is strictly smaller than non-empty lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c082ff760f54f7b9a24a07cefaa49dd086bf62" translate="yes" xml:space="preserve">
          <source>the end-of-input has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1790670b1697ab36866fc144e38c49908cdcf5" translate="yes" xml:space="preserve">
          <source>the first argument is a source of characters for the input,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dad80a6d847401c825d95d13e43c3331c6464b8" translate="yes" xml:space="preserve">
          <source>the first blank line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220c14db04513b9f70465564f26dc3e89013dc97" translate="yes" xml:space="preserve">
          <source>the first dot followed by a blank, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929493a9ddd4750d1079dfaa6b28501c613a7521" translate="yes" xml:space="preserve">
          <source>the first parameter, &lt;code&gt;'a&lt;/code&gt;, is the OCaml type for accessing array elements (&lt;code&gt;float&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;nativeint&lt;/code&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5979409470086d9e45eafcc61c1c1d2116096f84" translate="yes" xml:space="preserve">
          <source>the function f cannot raise a Done exception, which removes an entire class of misbehaving functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fdda4ec39b15699cbc6090d6f587477e0a7aeb6" translate="yes" xml:space="preserve">
          <source>the function is not closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7cec462187751ac41a16bcb2c57dec9ac22dc8" translate="yes" xml:space="preserve">
          <source>the function is not obviously recursive;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003e585b213afb8bd1048f65475b01da57a2b381" translate="yes" xml:space="preserve">
          <source>the function is not recursive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f42ec7d812d4c125ccd93dfadf0da7519ad89e0" translate="yes" xml:space="preserve">
          <source>the implementation file A.ml, which contains a sequence of definitions, analogous to the inside of a struct&amp;hellip;end construct;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1490ce9266fa86927cb792fc09c06cd323932664" translate="yes" xml:space="preserve">
          <source>the initial value for an iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f290b1c4bacc852ddb953b3dff310185ac6112e" translate="yes" xml:space="preserve">
          <source>the inlining decision is made at the call site; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4208b49d953376d96ba0fd901e8610f784866279" translate="yes" xml:space="preserve">
          <source>the interface file A.mli, which contains a sequence of specifications, analogous to the inside of a sig&amp;hellip;end construct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0727d7a9e9225f27e118bf41d64c7b356066855a" translate="yes" xml:space="preserve">
          <source>the measured size (in unspecified units) is smaller than that of a function call plus the argument of the -inline command-line flag; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59cf6992c48dac2e872e2362c038897e17e1a390" translate="yes" xml:space="preserve">
          <source>the names of the C object files and libraries (.o and .a files) that implement the required primitives. Under Unix and Windows, a library named libname.a (respectively, .lib) residing in one of the standard library directories can also be specified as -cclib -lname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418a7dcb294addc35732eaf128ce497367f3b7ef" translate="yes" xml:space="preserve">
          <source>the names of the C object files and libraries (.o, .a, .so or .dll files) that implement the required primitives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13cecf1d63aac4c89238753643839ac52301f3c8" translate="yes" xml:space="preserve">
          <source>the names of the C shared libraries (.so or .dll files) that implement the required primitives. Under Unix and Windows, a library named dllname.so (respectively, .dll) residing in one of the standard library directories can also be specified as -dllib -lname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0a8c850de9b80dca261c93c03bb01f5f566ab7" translate="yes" xml:space="preserve">
          <source>the names of the desired OCaml native object files (.cmx and .cmxa files);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e427b683f078389a4eb094471c19490d863ba69" translate="yes" xml:space="preserve">
          <source>the names of the desired OCaml object files (.cmo and .cma files) ;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ec61e92ad27b6edf56e5664eda7f4a609af342" translate="yes" xml:space="preserve">
          <source>the program is a bytecode program that has not been linked with debug information enabled (&lt;code&gt;ocamlc&amp;nbsp;-g&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1656069bc115f19825c7973dc6770f4806115feb" translate="yes" xml:space="preserve">
          <source>the second argument is a format string that specifies the values to read,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939bb89f7b497be7deabcda9d49d97fd135f7422" translate="yes" xml:space="preserve">
          <source>the second parameter, &lt;code&gt;'b&lt;/code&gt;, is the actual kind of array elements (&lt;code&gt;float32_elt&lt;/code&gt;, &lt;code&gt;float64_elt&lt;/code&gt;, &lt;code&gt;int8_signed_elt&lt;/code&gt;, &lt;code&gt;int8_unsigned_elt&lt;/code&gt;, etc);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87dacf92378f4c4b6ebcdaa8272b0bd89792267b" translate="yes" xml:space="preserve">
          <source>the slot corresponds to a compiler-inserted raise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7078d7ab223da2165f22701e2cbd0da2734f478d" translate="yes" xml:space="preserve">
          <source>the slot corresponds to a part of the program that has not been compiled with debug information (&lt;code&gt;-g&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878132b799181d0e6f4d7a6fbf66b8330fa25c19" translate="yes" xml:space="preserve">
          <source>the source of an operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e4aa658a1098409e5ea36a3b4dd63d8f05fd59" translate="yes" xml:space="preserve">
          <source>the table of the required primitives;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b637083cb170866f97ae74801d8dd771f9d44880" translate="yes" xml:space="preserve">
          <source>the third argument is a &lt;em&gt;receiver function&lt;/em&gt; that is applied to the values read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0411fbe22a0f67d1984a12ca56d1f8ffb944ce" translate="yes" xml:space="preserve">
          <source>the third parameter, &lt;code&gt;'c&lt;/code&gt;, identifies the array layout (&lt;code&gt;c_layout&lt;/code&gt; or &lt;code&gt;fortran_layout&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16500d1eb24ac44e5ececdf4e15aabe3ec9ee5fb" translate="yes" xml:space="preserve">
          <source>then &lt;code&gt;bscanf&amp;nbsp;Scanning.stdin&amp;nbsp;&quot;%d&quot;&amp;nbsp;f&lt;/code&gt; reads an integer &lt;code&gt;n&lt;/code&gt; from the standard input and returns &lt;code&gt;f&amp;nbsp;n&lt;/code&gt; (that is &lt;code&gt;n&amp;nbsp;+&amp;nbsp;1&lt;/code&gt;). Thus, if we evaluate &lt;code&gt;bscanf&amp;nbsp;stdin&amp;nbsp;&quot;%d&quot;&amp;nbsp;f&lt;/code&gt;, and then enter &lt;code&gt;41&lt;/code&gt; at the keyboard, the result we get is &lt;code&gt;42&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00052008fd76a0e6317b5d93f506ffe763b7a70e" translate="yes" xml:space="preserve">
          <source>then S with type t=int denotes the signature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7bb47fb69ab11ca9258b988c7220d84f4e6331" translate="yes" xml:space="preserve">
          <source>then it will be attached to both items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa8fc54851470eb4257123f9fa63929d6a86906" translate="yes" xml:space="preserve">
          <source>then, see if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5677410f9f3b2e5e3d317bfd65d2cf5773b1707" translate="yes" xml:space="preserve">
          <source>thus hiding their implementation as C functions, or explicitly as &amp;ldquo;manifest&amp;rdquo; external functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7196b5875f713c826bd279dbda843c897e2a60c2" translate="yes" xml:space="preserve">
          <source>times</source>
          <target state="translated">times</target>
        </trans-unit>
        <trans-unit id="25121918e25b2eadb05756e86fea5d3c5fefbba8" translate="yes" xml:space="preserve">
          <source>to handle both cases uniformly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a321e6d89ecafd4933bb93fb1e4ef0d1e91d88" translate="yes" xml:space="preserve">
          <source>to reduce instruction cache misses by expressing frequently-taken paths through the program using fewer machine instructions; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35808a5d184c3440c6d5969b9aea658865e3be37" translate="yes" xml:space="preserve">
          <source>to reduce the amount of allocation (especially of closures).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7860810da9294b4fa20f6fe561d55e3fbdb9fde6" translate="yes" xml:space="preserve">
          <source>to reduce the runtime overhead caused by function calls (including setting up for such calls and returning afterwards);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3073d4fd4a446b8673ab4ae9e5830000b1b256" translate="yes" xml:space="preserve">
          <source>to support the syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f18d6b3aa1bd3b636131dcf73039ae16b799d7" translate="yes" xml:space="preserve">
          <source>to, see for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a79a33e706eb5a2eead89c405781cd398f1fb1" translate="yes" xml:space="preserve">
          <source>toplevel-input</source>
          <target state="translated">toplevel-input</target>
        </trans-unit>
        <trans-unit id="efd7fd7f2954713c1ee7facf9750fe53e8cf589c" translate="yes" xml:space="preserve">
          <source>translation</source>
          <target state="translated">translation</target>
        </trans-unit>
        <trans-unit id="5ffe533b830f08a0326348a9160afafc8ada44db" translate="yes" xml:space="preserve">
          <source>true</source>
          <target state="translated">true</target>
        </trans-unit>
        <trans-unit id="51c71ee5b9fc4abfeecef3c099bedcaff8ffd4fb" translate="yes" xml:space="preserve">
          <source>true ∣ false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a9a4148fb5f998d8be0f164af3ce471e13e01e" translate="yes" xml:space="preserve">
          <source>true, &lt;a href=&quot;const#hevea_manual.kwd12&quot;&gt;7.5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2898ba57c577d325e28784df56740c3ec4cf4c8f" translate="yes" xml:space="preserve">
          <source>truncate, ftruncate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3240aa0fe3ca15051680641a59e8d7b61c286b23" translate="yes" xml:space="preserve">
          <source>try</source>
          <target state="translated">try</target>
        </trans-unit>
        <trans-unit id="7608f55d467f20f7d2510c088f3a1ff71354ad5f" translate="yes" xml:space="preserve">
          <source>try &amp;hellip;with &amp;hellip; branches: a count point is set at the beginning of the body of each branch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a8fa9fa202fc210a2aa5b9d93eeb6165454f4c" translate="yes" xml:space="preserve">
          <source>try &amp;zwj;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6df95e2eed40a69457c6d101ee7678b6f029854" translate="yes" xml:space="preserve">
          <source>try, &lt;a href=&quot;expr#hevea_manual.kwd24&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd49&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd69&quot;&gt;7.7.3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce87fcdbc98e8590af9cc9e87bc3196841395344" translate="yes" xml:space="preserve">
          <source>try&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;with&lt;a href=&quot;#pattern-matching&quot;&gt;pattern-matching&lt;/a&gt;</source>
          <target state="translated">try&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;with&lt;a href=&quot;#pattern-matching&quot;&gt;pattern-matching&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0a3e7f81a9885e99049d1cae0336d269d5e47a9" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="translated">type</target>
        </trans-unit>
        <trans-unit id="babed8e1a10bb2a430dab0a620c391c733366bbd" translate="yes" xml:space="preserve">
          <source>type [&lt;a href=&quot;typedecl#type-params&quot;&gt;type-params&lt;/a&gt;] &lt;a href=&quot;names#typeconstr&quot;&gt;typeconstr&lt;/a&gt;&lt;a href=&quot;#type-extension-def&quot;&gt;type-extension-def&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d142cbb65f4c48a257dd8d961fad1a693cdb09b" translate="yes" xml:space="preserve">
          <source>type [&lt;a href=&quot;typedecl#type-params&quot;&gt;type-params&lt;/a&gt;] &lt;a href=&quot;names#typeconstr&quot;&gt;typeconstr&lt;/a&gt;&lt;a href=&quot;#type-extension-spec&quot;&gt;type-extension-spec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f301396deb67f83392529e38ce21a2c45daf702" translate="yes" xml:space="preserve">
          <source>type [&lt;a href=&quot;typedecl#type-params&quot;&gt;type-params&lt;/a&gt;] &lt;a href=&quot;names#typeconstr&quot;&gt;typeconstr&lt;/a&gt;&lt;a href=&quot;typedecl#type-equation&quot;&gt;type-equation&lt;/a&gt; { &lt;a href=&quot;typedecl#type-constraint&quot;&gt;type-constraint&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20847a1b49d60b0393b6312fab276de486302458" translate="yes" xml:space="preserve">
          <source>type [&lt;a href=&quot;typedecl#type-params&quot;&gt;type-params&lt;/a&gt;] &lt;a href=&quot;names#typeconstr-name&quot;&gt;typeconstr-name&lt;/a&gt;:=&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fc1784cb91fb00ef9c34f8bb76e2a5d3fe2545" translate="yes" xml:space="preserve">
          <source>type [nonrec] &lt;a href=&quot;#typedef&quot;&gt;typedef&lt;/a&gt; { and&lt;a href=&quot;#typedef&quot;&gt;typedef&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57adbde71429317a4db0ab6f601bab4cb4fb8401" translate="yes" xml:space="preserve">
          <source>type constructors (&lt;a href=&quot;#typeconstr-name&quot;&gt;typeconstr-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941f472fa43d7f96dc99e8196c5d94838cc27226" translate="yes" xml:space="preserve">
          <source>type socket_domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af523fa3e8e48f02ae871ac52d6192a2d88094fc" translate="yes" xml:space="preserve">
          <source>type, &lt;a href=&quot;typedecl#hevea_manual.kwd92&quot;&gt;7.8.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd148&quot;&gt;7.9.5&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd157&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd167&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd171&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd173&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd185&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd195&quot;&gt;7.11.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd199&quot;&gt;7.11.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd201&quot;&gt;7.11.2&lt;/a&gt;, &lt;a href=&quot;locallyabstract#hevea_manual.kwd210&quot;&gt;8.4&lt;/a&gt;, &lt;a href=&quot;moduletypeof#hevea_manual.kwd217&quot;&gt;8.6&lt;/a&gt;, &lt;a href=&quot;signaturesubstitution#hevea_manual.kwd222&quot;&gt;8.7&lt;/a&gt;, &lt;a href=&quot;gadts#hevea_manual.kwd225&quot;&gt;8.10&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc40a669554c9e099c65f8e65c140e8fe7f92a50" translate="yes" xml:space="preserve">
          <source>type-constraint</source>
          <target state="translated">type-constraint</target>
        </trans-unit>
        <trans-unit id="1f22f42bd7d249558427d64c200cbd5954202d93" translate="yes" xml:space="preserve">
          <source>type-definition</source>
          <target state="translated">type-definition</target>
        </trans-unit>
        <trans-unit id="134b04108b3d68f2e5cfffabbf94b32d4c8e4882" translate="yes" xml:space="preserve">
          <source>type-equation</source>
          <target state="translated">type-equation</target>
        </trans-unit>
        <trans-unit id="b02f944615d4b99db2807759d7927f92d05bd1c8" translate="yes" xml:space="preserve">
          <source>type-extension-def</source>
          <target state="translated">type-extension-def</target>
        </trans-unit>
        <trans-unit id="d9fb9e466ed6c87c555f90c3f3715abce5c473ed" translate="yes" xml:space="preserve">
          <source>type-extension-spec</source>
          <target state="translated">type-extension-spec</target>
        </trans-unit>
        <trans-unit id="118e9a92122d86cb5b7e3720492df10da78540d7" translate="yes" xml:space="preserve">
          <source>type-information</source>
          <target state="translated">type-information</target>
        </trans-unit>
        <trans-unit id="6de056bf33c927fbf6906704335ee3b1614e66ec" translate="yes" xml:space="preserve">
          <source>type-param</source>
          <target state="translated">type-param</target>
        </trans-unit>
        <trans-unit id="0ac49a96c4f568f7efa70d395eb42b4feec4c1f1" translate="yes" xml:space="preserve">
          <source>type-parameters</source>
          <target state="translated">type-parameters</target>
        </trans-unit>
        <trans-unit id="951a65558c64c74fb3e712e6ac5e9687fe17c2ea" translate="yes" xml:space="preserve">
          <source>type-params</source>
          <target state="translated">type-params</target>
        </trans-unit>
        <trans-unit id="13f4016b2daded5a581c7732a294233950b2c803" translate="yes" xml:space="preserve">
          <source>type-representation</source>
          <target state="translated">type-representation</target>
        </trans-unit>
        <trans-unit id="e9a10e13c49bb81f1ae069227011af40c2714494" translate="yes" xml:space="preserve">
          <source>type-subst</source>
          <target state="translated">type-subst</target>
        </trans-unit>
        <trans-unit id="b5df65f621344e98b11c4cc86909abafec506808" translate="yes" xml:space="preserve">
          <source>type:</source>
          <target state="translated">type:</target>
        </trans-unit>
        <trans-unit id="1cfd088007e8d1fd73113c7d55489f5fa68a6c7b" translate="yes" xml:space="preserve">
          <source>type&lt;a href=&quot;#type-subst&quot;&gt;type-subst&lt;/a&gt; { and&lt;a href=&quot;#type-subst&quot;&gt;type-subst&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c971fc44c56dc322dbce17e8f28a43f0ef8ce10" translate="yes" xml:space="preserve">
          <source>type&lt;a href=&quot;names#typeconstr&quot;&gt;typeconstr&lt;/a&gt;=&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="translated">type&lt;a href=&quot;names#typeconstr&quot;&gt;typeconstr&lt;/a&gt;=&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ec367692e11ac178aa443bcb1551f8101a80cbc" translate="yes" xml:space="preserve">
          <source>typeconstr</source>
          <target state="translated">typeconstr</target>
        </trans-unit>
        <trans-unit id="d56776d64de8759b33fbd6156442aa023721d252" translate="yes" xml:space="preserve">
          <source>typeconstr-name</source>
          <target state="translated">typeconstr-name</target>
        </trans-unit>
        <trans-unit id="6dc2082b65ff3a9aefc09caca29756531dea041a" translate="yes" xml:space="preserve">
          <source>typedef</source>
          <target state="translated">typedef</target>
        </trans-unit>
        <trans-unit id="6982e13065c22c113645b3a0208416d6be7f686b" translate="yes" xml:space="preserve">
          <source>typeset the given string as is; special characters (&amp;rsquo;{&amp;rsquo;, &amp;rsquo;}&amp;rsquo;, &amp;rsquo;[&amp;rsquo;, &amp;rsquo;]&amp;rsquo; and &amp;rsquo;@&amp;rsquo;) must be escaped by a &amp;rsquo;\&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b24f40013c26793ea520c8c76a4e4bbb1701b92" translate="yes" xml:space="preserve">
          <source>typexpr</source>
          <target state="translated">typexpr</target>
        </trans-unit>
        <trans-unit id="bb0088e38a034140a9aabafbccafb339834d51d4" translate="yes" xml:space="preserve">
          <source>uintnat (*deserialize)(void * dst)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b824f445e8d64ec6f262547c18a3ab02a6fd22c" translate="yes" xml:space="preserve">
          <source>umask</source>
          <target state="translated">umask</target>
        </trans-unit>
        <trans-unit id="7a2c2239b70e4e4ffcb0783ce1c391f9f04c4af8" translate="yes" xml:space="preserve">
          <source>unit-implementation</source>
          <target state="translated">unit-implementation</target>
        </trans-unit>
        <trans-unit id="d2cb1c39bf3d00e2dfb2c79364c3d7d98ab151ec" translate="yes" xml:space="preserve">
          <source>unit-interface</source>
          <target state="translated">unit-interface</target>
        </trans-unit>
        <trans-unit id="5f63ae83d15d29f7c5e3df488b1181d4fe7c845e" translate="yes" xml:space="preserve">
          <source>unrolling once at the call site fact 4 produces (with the body of fact unchanged):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0981575717dbfcb26ab6cea3556662d080a4a49" translate="yes" xml:space="preserve">
          <source>up [count]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117ec720ea4b96702ba69fad917ef776ef5efe4e" translate="yes" xml:space="preserve">
          <source>uppercase</source>
          <target state="translated">uppercase</target>
        </trans-unit>
        <trans-unit id="dcd490061ad0a8126efb7b9257f00689abadf644" translate="yes" xml:space="preserve">
          <source>uppercase-letter</source>
          <target state="translated">uppercase-letter</target>
        </trans-unit>
        <trans-unit id="5574b76599397c25622cfcd3ed20c448c77cbe86" translate="yes" xml:space="preserve">
          <source>use heuristics to enable colors only if the output supports them (an ANSI-compatible tty terminal);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14cbef7ff25c11a63e5af4e4074c447975f756b6" translate="yes" xml:space="preserve">
          <source>use simple break hints as obtained by &lt;code&gt;print_cut&amp;nbsp;()&lt;/code&gt; that outputs a simple break hint, or by &lt;code&gt;print_space&amp;nbsp;()&lt;/code&gt; that outputs a space indicating a break hint;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148d3d6f55738c67976a7b4d28d83b1c61e40e6c" translate="yes" xml:space="preserve">
          <source>use simple pretty-printing boxes (as obtained by &lt;code&gt;open_box&amp;nbsp;0&lt;/code&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbd13cd0fe77d0ed7a3a2b1a43691b14b6d6c39" translate="yes" xml:space="preserve">
          <source>users of the library can simply link with mylib.cma:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a38d8cbd20d9932ba948efaa364bb62651d5ad4" translate="yes" xml:space="preserve">
          <source>v</source>
          <target state="translated">v</target>
        </trans-unit>
        <trans-unit id="29b3667ff7d69912ca8ae59793755785c507b602" translate="yes" xml:space="preserve">
          <source>val [mutable] &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] =&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944ab829485add74a6682c6065dc7ab6cec72480" translate="yes" xml:space="preserve">
          <source>val [mutable] [virtual] &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febbb3ab70913d5d92d33a38a9b83be14600faa6" translate="yes" xml:space="preserve">
          <source>val [mutable] virtual&lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9dde004271a974bd2641a5db0b7bba27c02941" translate="yes" xml:space="preserve">
          <source>val! [mutable] &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] =&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5edb0ac3f5dd8298bd8c785cf01ad81ff4a3e9" translate="yes" xml:space="preserve">
          <source>val, &lt;a href=&quot;classes#hevea_manual.kwd104&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd111&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd125&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd133&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd135&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd155&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd165&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;firstclassmodules#hevea_manual.kwd213&quot;&gt;8.5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbed835fc625d745a29e4bcfb8efe2be86ffd35" translate="yes" xml:space="preserve">
          <source>val:</source>
          <target state="translated">val:</target>
        </trans-unit>
        <trans-unit id="d53e1ddfd7fd1ac40d5a6baf4c69f26cd6fa02cf" translate="yes" xml:space="preserve">
          <source>val&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="translated">val&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="791e11372a0c8d62bfc31460994dbca6ef272d41" translate="yes" xml:space="preserve">
          <source>val&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32b67c7e26342af42efabc674d441dca0a281c5" translate="yes" xml:space="preserve">
          <source>value</source>
          <target state="translated">value</target>
        </trans-unit>
        <trans-unit id="487d3a76feab316ffdb6bf7f5bce40afc80ecc4e" translate="yes" xml:space="preserve">
          <source>value caml_copy_string_of_os(char_os *) allocates an OCaml string with contents equal to the argument string converted to the OCaml encoding. This function is essentially equivalent to caml_stat_strdup_of_os followed by caml_copy_string, except that it avoids the allocation of the intermediate string returned by caml_stat_strdup_of_os. Under Unix, it is equivalent to caml_copy_string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a105530c31a0302a1d3cc82013e49a735e517f" translate="yes" xml:space="preserve">
          <source>value constructors and exception constructors (class &lt;a href=&quot;#constr-name&quot;&gt;constr-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af91d56e80aa944e31f339c27ec3958dc3aa204" translate="yes" xml:space="preserve">
          <source>value names (syntactic class &lt;a href=&quot;#value-name&quot;&gt;value-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfe69dc23292720cf2ab43cfb76b0672c611285" translate="yes" xml:space="preserve">
          <source>value-name</source>
          <target state="translated">value-name</target>
        </trans-unit>
        <trans-unit id="8cff6eba7c252a8e2948257a320e820666ddbf2e" translate="yes" xml:space="preserve">
          <source>value-path</source>
          <target state="translated">value-path</target>
        </trans-unit>
        <trans-unit id="d960ac57e06736a0be46491cbf048c446f761e27" translate="yes" xml:space="preserve">
          <source>valvirtualmutable&lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="translated">valvirtualmutable&lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e596b996f92d68200dc2e4a9011b6707b07b0ea0" translate="yes" xml:space="preserve">
          <source>variance</source>
          <target state="translated">variance</target>
        </trans-unit>
        <trans-unit id="0d86e6efcd5042fb65510a3dc4ea6db49423e27a" translate="yes" xml:space="preserve">
          <source>variant constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6949aa2edf6f6f08ede955e0fcacde057b0c60bb" translate="yes" xml:space="preserve">
          <source>virtual, see val, method, class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b65af586c4417ca0027ffbc53baf186cc6ccd2" translate="yes" xml:space="preserve">
          <source>void (*finalize)(value v)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e2b902fd563b10ba488c3f96caed04c4171f71" translate="yes" xml:space="preserve">
          <source>void (*serialize)(value v, uintnat * bsize_32, uintnat * bsize_64)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaad336276d15594d0e765f96c17cd746bf4971" translate="yes" xml:space="preserve">
          <source>wait</source>
          <target state="translated">wait</target>
        </trans-unit>
        <trans-unit id="2adada1e71a33f071825f68863aa78076956f91c" translate="yes" xml:space="preserve">
          <source>waitpid</source>
          <target state="translated">waitpid</target>
        </trans-unit>
        <trans-unit id="715f78a20ef2734b18b78afedb64c3e479d09bc8" translate="yes" xml:space="preserve">
          <source>warnings 1, 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24095efd977ef83fd1b5357602292a3372fd9dca" translate="yes" xml:space="preserve">
          <source>warnings 11, 12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c81e3bab8b9225199d1017019f84040c34f5744" translate="yes" xml:space="preserve">
          <source>warnings 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8949fc0dcce5bb706fd18834ec6ad6fc4fc6797d" translate="yes" xml:space="preserve">
          <source>warnings 32, 33, 34, 35, 36, 37, 38, 39.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ba4c70a8905ecb88077bd922e70ca2afe26f3c" translate="yes" xml:space="preserve">
          <source>when possible, allows useful partial applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d43429e8546d3b597b573fc23b0645a0c2c2b49" translate="yes" xml:space="preserve">
          <source>when the material for a pretty-printing box has been printed, call &lt;code&gt;close_box&amp;nbsp;()&lt;/code&gt; to close the box;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227e0fbfa0a93149ccbd42195c1b01b6ed56a01f" translate="yes" xml:space="preserve">
          <source>when, &lt;a href=&quot;expr#hevea_manual.kwd40&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd62&quot;&gt;7.7.2&lt;/a&gt;, &lt;a href=&quot;attributes#hevea_manual.kwd227&quot;&gt;8.12&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc65e34de1a64f690eeac41aff9805dd710c7692" translate="yes" xml:space="preserve">
          <source>where (let*) is bound to the bind operation, and (and*) is also bound to the monoidal product operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7375fe375560ca41b42ad6b70bad7dc71d3ca6" translate="yes" xml:space="preserve">
          <source>where (let+) is bound to the map operation and (and+) is bound to the monoidal product operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bed3bc542925e9b1f6bdd8ff3c917e547c1b66" translate="yes" xml:space="preserve">
          <source>where *.mli *.ml expands to all source files in the current directory and .depend is the file that should contain the dependencies. (See below for a typical Makefile.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9c37904983908415c0a68f1e981d19b839b68b" translate="yes" xml:space="preserve">
          <source>where &lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt; is a fresh variable, except that it is unspecified when &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;0&lt;/sub&gt; is evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26c9464bab3d3bfe54cba3d6d906f2d09900282" translate="yes" xml:space="preserve">
          <source>where Module1, &amp;hellip;, ModuleN are the names of the compilation units referenced within the file filename, but these names are not resolved to source file names. Such raw dependencies cannot be used by make, but can be post-processed by other tools such as Omake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cdacead91f7a9620b7b5345171147fa564f8f5" translate="yes" xml:space="preserve">
          <source>where c&lt;sub&gt;1&lt;/sub&gt;, c&lt;sub&gt;2&lt;/sub&gt;, &amp;hellip;, c&lt;sub&gt;n&lt;/sub&gt; are the characters that occur between c and d in the ASCII character set. For instance, the pattern '0'..'9' matches all characters that are digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59661c0172174d583e67325a095413ef312bf04" translate="yes" xml:space="preserve">
          <source>where name&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; name&lt;sub&gt;n&lt;/sub&gt; are the names of the other compilation units available in the search path (see chapter &amp;zwj;&lt;a href=&quot;comp#c%3Acamlc&quot;&gt;9&lt;/a&gt; for more details) and &lt;a href=&quot;modtypes#specification&quot;&gt;specification&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; &lt;a href=&quot;modtypes#specification&quot;&gt;specification&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt; are their respective interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230823145e66664ad50807459b76a9ee4784779a" translate="yes" xml:space="preserve">
          <source>where name&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; name&lt;sub&gt;n&lt;/sub&gt; are the names of the other compilation units available in the search path (see chapter &lt;a href=&quot;comp#c%3Acamlc&quot;&gt;9&lt;/a&gt; for more details) and &lt;a href=&quot;modtypes#specification&quot;&gt;specification&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; &lt;a href=&quot;modtypes#specification&quot;&gt;specification&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt; are their respective interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0111be8edec79ef1a5ed409da3448a0bdb139358" translate="yes" xml:space="preserve">
          <source>where the first argument is the continuation which captures the processing ocamllex would usually perform (refilling the buffer, then calling the lexing function again), and the result type that instantiates [&amp;rsquo;a] should unify with the result type of all lexing rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c36892eab13427fa58ca045328abc2e1a01434" translate="yes" xml:space="preserve">
          <source>which binds name&lt;sub&gt;1&lt;/sub&gt; to the cyclic list 1::2::1::2::&amp;hellip;, and name&lt;sub&gt;2&lt;/sub&gt; to the cyclic list 2::1::2::1::&amp;hellip;Informally, the class of accepted definitions consists of those definitions where the defined names occur only inside function bodies or as argument to a data constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a10cb50c25a9ced0107e459a89034b87e9e922" translate="yes" xml:space="preserve">
          <source>which breaks in OCaml &amp;ge; 4.10, you should include the minor_gc header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d561af8c9e8b6392513c4423ae94126f62239aa" translate="yes" xml:space="preserve">
          <source>which is called when an index literals contain a semicolon separated list of expressions with two and more elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c6ac4120301d7049af98011b0e572414db64b0" translate="yes" xml:space="preserve">
          <source>which is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80966fa071c90c9cb601c4213404ba8769b64286" translate="yes" xml:space="preserve">
          <source>which is equivalent to this expanded form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b673c6873e35d78a487d5303d294f4abcf56b2ef" translate="yes" xml:space="preserve">
          <source>which may be a shrinkable type, is a subtype of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9153e1e18f5334bc86e2d75720d27fb2cbe6420e" translate="yes" xml:space="preserve">
          <source>which may be an extensible type, if every &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&lt;sub&gt;i&lt;/sub&gt; is a subtype of &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&amp;prime;&lt;sub&gt;i&lt;/sub&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca4af5ec2cb4358258532f4f794a686264f6b04" translate="yes" xml:space="preserve">
          <source>which may contain an ellipsis .. if every &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&lt;sub&gt;i&lt;/sub&gt; is a supertype of the corresponding &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&amp;prime;&lt;sub&gt;i&lt;/sub&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95bced2ad79641b5fd9fddf6482fb059ef66d877" translate="yes" xml:space="preserve">
          <source>while, &lt;a href=&quot;expr#hevea_manual.kwd67&quot;&gt;7.7.3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9c2e0230df49d38ce9812031b89f6d6b929a0b" translate="yes" xml:space="preserve">
          <source>while, for loops: a count point is set at the beginning of the loop body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6465e8ad01ac1db0e8dbd0bd554307e0107c5277" translate="yes" xml:space="preserve">
          <source>while&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;do&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;done</source>
          <target state="translated">while&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;do&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;done</target>
        </trans-unit>
        <trans-unit id="d5b7cd1437968a1f475adf581f130242d9d38ac8" translate="yes" xml:space="preserve">
          <source>whilst:</source>
          <target state="translated">whilst:</target>
        </trans-unit>
        <trans-unit id="f456192f39662bdb92c7cf283301451aa7229935" translate="yes" xml:space="preserve">
          <source>will be converted directly to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67803ac11d1ac14539ea7fa73c0f118790c4d755" translate="yes" xml:space="preserve">
          <source>will be converted to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee862a2fd17873de2302f857351d576808ee06f" translate="yes" xml:space="preserve">
          <source>will keep those new fields abstract. Construction of values of type [u] is possible using the known variants of [t], but any pattern-matching will require a default case to handle the potential extra fields. Dually, a declaration [u] may restrict the fields of [t] through abstraction: the declaration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">with</target>
        </trans-unit>
        <trans-unit id="26d2ed84d41b06caf683fa5abe45f33fd29848f2" translate="yes" xml:space="preserve">
          <source>with an extra type variable capturing the open object type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bebdbfff69b0b612b7983e2209ea8681d43c31" translate="yes" xml:space="preserve">
          <source>with, &lt;a href=&quot;expr#hevea_manual.kwd27&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd153&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd178&quot;&gt;7.10.4&lt;/a&gt;, &lt;a href=&quot;firstclassmodules#hevea_manual.kwd214&quot;&gt;8.5&lt;/a&gt;, &lt;a href=&quot;signaturesubstitution#hevea_manual.kwd220&quot;&gt;8.7&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70383bf107a0cb20da30eca8dcb4b8f6a2705740" translate="yes" xml:space="preserve">
          <source>within a &lt;em&gt;compacting&lt;/em&gt; box, a break hint never splits the line, unless there is no more room on the current line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61401227a747398a1083ea114933af26741b2820" translate="yes" xml:space="preserve">
          <source>within a &lt;em&gt;vertical&lt;/em&gt; box, break hints always split the line,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3b50890089be45ca65e33936ded3d666712963" translate="yes" xml:space="preserve">
          <source>within an &lt;em&gt;horizontal/vertical&lt;/em&gt; box, if the box fits on the current line then break hints never split the line, otherwise break hint always split the line,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de12a28d7bbb82235a6a118c5444c70f119c667" translate="yes" xml:space="preserve">
          <source>within an &lt;em&gt;horizontal&lt;/em&gt; box, break hints never split the line (but the line may be split in a box nested deeper),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbe5db2d326ed86d7dad3132ca18eca776c8c1c" translate="yes" xml:space="preserve">
          <source>works exactly as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d0c6c1c29e6ad5164072a5b21340dca7fcb052" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="translated">write</target>
        </trans-unit>
        <trans-unit id="edb0f5b1f639a3886e3180c47fe86c3a6a263842" translate="yes" xml:space="preserve">
          <source>yields</source>
          <target state="translated">yields</target>
        </trans-unit>
        <trans-unit id="47a14e01aae21050f2554cbef6cf4aaab38c5345" translate="yes" xml:space="preserve">
          <source>yields a compilation error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0327e79f381718451039ff741b1e6a4bee55bd20" translate="yes" xml:space="preserve">
          <source>yourself, if this is what you wish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca3153cc45a1ef5f0c433e287acf1380a9c5fe7" translate="yes" xml:space="preserve">
          <source>{ '&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt; }&lt;sup&gt;+&lt;/sup&gt;.&lt;a href=&quot;#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231d672cf1d46fae367ae78b7961a5cc69927e2f" translate="yes" xml:space="preserve">
          <source>{ &lt;a href=&quot;lex#capitalized-ident&quot;&gt;capitalized-ident&lt;/a&gt;. } &lt;a href=&quot;lex#lowercase-ident&quot;&gt;lowercase-ident&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da720fc77c2ffcf64e0bc0102c57d40974224c8" translate="yes" xml:space="preserve">
          <source>{ &lt;a href=&quot;modtypes#specification&quot;&gt;specification&lt;/a&gt; [;;] }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf1862bf04de832469eea4f288d28c6fffa55fc" translate="yes" xml:space="preserve">
          <source>{ &lt;a href=&quot;modules#definition&quot;&gt;definition&lt;/a&gt; }&lt;sup&gt;+&lt;/sup&gt;;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c3713457346c55f240eb94ef1eeba11eca1b62" translate="yes" xml:space="preserve">
          <source>{ a...z ∣ _ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f096e65d68a3de49aaf16a7332aaa6ccac69ab3b" translate="yes" xml:space="preserve">
          <source>{ { 0 &amp;hellip; 9 }&lt;sup&gt;+&lt;/sup&gt;:label&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e76b45ba626838219b8db9ca4a9903b5dcd3ce" translate="yes" xml:space="preserve">
          <source>{ { 0 &amp;hellip; 9 }&lt;sup&gt;+&lt;/sup&gt;&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33a661bed3a38116346c391ed411b10a78e2231" translate="yes" xml:space="preserve">
          <source>{ {-&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;} }&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa72a77a333e9d1c52bd72aec2dbed85ce92faa" translate="yes" xml:space="preserve">
          <source>{ {li&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;} }&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3b183fc543aac44f38249386d61ff9fb21635e" translate="yes" xml:space="preserve">
          <source>{!indexlist}</source>
          <target state="translated">{!indexlist}</target>
        </trans-unit>
        <trans-unit id="8d60ac733c2b0221d17520ecf20041414b8c28d7" translate="yes" xml:space="preserve">
          <source>{!modules:stringstring ... }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce4d0ff2a37aa427a6ddbbac9a857a0000badc3" translate="yes" xml:space="preserve">
          <source>{!string}</source>
          <target state="translated">{!string}</target>
        </trans-unit>
        <trans-unit id="ff5076583fcb4d630e924501e1b078ba9af0a1be" translate="yes" xml:space="preserve">
          <source>{%string%}</source>
          <target state="translated">{%string%}</target>
        </trans-unit>
        <trans-unit id="15647fe1c3addf1ebdd8818c5573eca5f230440b" translate="yes" xml:space="preserve">
          <source>{&amp;lt; [ &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt; [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] { ;&lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt; [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] } [;] ] &amp;gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8846e5ad0ae158fa6c32c6635d705f210bf6f3e" translate="yes" xml:space="preserve">
          <source>{&amp;lt; [ &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt; { ;&lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt; } [;] ] &amp;gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4e8ca28fb70f43c273ace1982d60c0b301bc56" translate="yes" xml:space="preserve">
          <source>{;;} ( &lt;a href=&quot;#definition&quot;&gt;definition&lt;/a&gt; ∣ &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt; ) { {;;} ( &lt;a href=&quot;#definition&quot;&gt;definition&lt;/a&gt; ∣ ;;&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;) } {;;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e9dd41d09763f24c046992e9a861ece15d9342" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;with&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] { ;&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] } [;] }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2460fb5316280971dce69a7e478ea8a18f7f24fd" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;#field-decl&quot;&gt;field-decl&lt;/a&gt; { ;&lt;a href=&quot;#field-decl&quot;&gt;field-decl&lt;/a&gt; } [;] }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81eb41c2a2c70b717e06b2967856fc51fe833313" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;#quoted-string-id&quot;&gt;quoted-string-id&lt;/a&gt;| { any-char } |&lt;a href=&quot;#quoted-string-id&quot;&gt;quoted-string-id&lt;/a&gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ed375baa2473263c500b59f5326efc0e4e552e" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;#text-element&quot;&gt;text-element&lt;/a&gt;}&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="translated">{&lt;a href=&quot;#text-element&quot;&gt;text-element&lt;/a&gt;}&lt;sup&gt;+&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d93137cba66e04d428f393a9fb1e5fccd067247a" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;with&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt;&lt;sub&gt;2&lt;/sub&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;2&lt;/sub&gt;; &amp;hellip; ;&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt; = &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt;} where &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; is not immediately linked to name&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; name&lt;sub&gt;n&lt;/sub&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79decd7d20f72c88753d94b9dfff2c63ad6816b3" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] { ;&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] } [;] }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33dd188d7253414b4c62a1d7f9ef1ca351f8352b" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#pattern&quot;&gt;pattern&lt;/a&gt;] { ;&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#pattern&quot;&gt;pattern&lt;/a&gt;] } [;_ ] [ ; ] }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca2f9f607f94b285079cf3009a46f969c6dc41a" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;; &amp;hellip; ;&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt; = &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08959e04f1ddf135d01b3412d2702e9be204e3fe" translate="yes" xml:space="preserve">
          <source>{C&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{C&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="e53fb7a1725226ea67b050f6e24969ec7910fd39" translate="yes" xml:space="preserve">
          <source>{L&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{L&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="823b520f46fa3b6241badf6bf940281a82788ca7" translate="yes" xml:space="preserve">
          <source>{R&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{R&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="ff47d4221994d7b2317aab7dc289c35d49e10126" translate="yes" xml:space="preserve">
          <source>{[string]}</source>
          <target state="translated">{[string]}</target>
        </trans-unit>
        <trans-unit id="bcdd4c44b4ecc09f01c23272ae65f25e7267faa9" translate="yes" xml:space="preserve">
          <source>{^&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{^&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="bf28378c04de8461f1f3d9e5e5af58ad98594235" translate="yes" xml:space="preserve">
          <source>{_&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{_&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
