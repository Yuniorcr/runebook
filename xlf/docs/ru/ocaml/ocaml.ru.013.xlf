<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="ocaml">
    <body>
      <group id="ocaml">
        <trans-unit id="6af1b35072b1bdd68073e014ff1e584272c95d9f" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;=&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;</source>
          <target state="translated">module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;=&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7336f15fb0480fa2ee205a914a672034b9c084c" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;=functor(name&lt;sub&gt;1&lt;/sub&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;)-&amp;gt; &amp;hellip; -&amp;gt;&lt;a href=&quot;#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1df8a8fac4b6049e82b37d3ce9e01fabd42b44" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;:=&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</source>
          <target state="translated">module&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;:=&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b74f359ad86149c243dc44173e1ecb0773225bf7" translate="yes" xml:space="preserve">
          <source>module&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;=&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</source>
          <target state="translated">module&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;=&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29207b70fb88e2aefdf3a84da75213e132b12f20" translate="yes" xml:space="preserve">
          <source>modulerec&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt; { and&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcac047307ac113b21b6c631462456fe383141ed" translate="yes" xml:space="preserve">
          <source>modulerec&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;=&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; } { and&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;=&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; } }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dfba173ba4c9821e03e4e4cc39df13680b5088" translate="yes" xml:space="preserve">
          <source>modulerec&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;=&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt; { and&lt;a href=&quot;names#module-name&quot;&gt;module-name&lt;/a&gt;:&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;=&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4d84562161cbbc99b99ff64911ed2bf84dba9b" translate="yes" xml:space="preserve">
          <source>moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;</source>
          <target state="translated">moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18411232dd5284d89b711c314990e3038a3e9729" translate="yes" xml:space="preserve">
          <source>moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659734808c421834907590742b3bd9cad57c2fbf" translate="yes" xml:space="preserve">
          <source>moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;=&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;</source>
          <target state="translated">moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;=&lt;a href=&quot;#module-type&quot;&gt;module-type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57bded66203318623afaa8c9f0cd14bfeaec01fd" translate="yes" xml:space="preserve">
          <source>moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;=&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;</source>
          <target state="translated">moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;=&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e83f1a79dd1dcf7d1f6580c9f0eb4681b628006c" translate="yes" xml:space="preserve">
          <source>moduletype&lt;a href=&quot;names#modtype-name&quot;&gt;modtype-name&lt;/a&gt;=&lt;a href=&quot;modtypes#module-type&quot;&gt;module-type&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be4a0aebee1f638e9b6e58b06a9376c214ce94d" translate="yes" xml:space="preserve">
          <source>moduletypeof&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="translated">moduletypeof&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd3cfe1f76eff86ad1ec9ba59771797b6179b566" translate="yes" xml:space="preserve">
          <source>moduleunit-name:sig&lt;a href=&quot;#unit-interface&quot;&gt;unit-interface&lt;/a&gt;end=struct&lt;a href=&quot;#unit-implementation&quot;&gt;unit-implementation&lt;/a&gt;end</source>
          <target state="translated">moduleunit-name:sig&lt;a href=&quot;#unit-interface&quot;&gt;unit-interface&lt;/a&gt;end=struct&lt;a href=&quot;#unit-implementation&quot;&gt;unit-implementation&lt;/a&gt;end</target>
        </trans-unit>
        <trans-unit id="6e038304501614c1e6aec3a766dc12211b3f25f4" translate="yes" xml:space="preserve">
          <source>mutable, &lt;a href=&quot;typedecl#hevea_manual.kwd96&quot;&gt;7.8.1&lt;/a&gt;, &lt;a href=&quot;typedecl#hevea_manual.kwd98&quot;&gt;7.8.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd105&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd112&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd126&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd134&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd136&quot;&gt;7.9.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">n</target>
        </trans-unit>
        <trans-unit id="3401ca97f7e6539ce2ab589ba812c541da58229a" translate="yes" xml:space="preserve">
          <source>name&lt;sub&gt;1&lt;/sub&gt;:sig&lt;a href=&quot;modtypes#specification&quot;&gt;specification&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;end &amp;hellip; name&lt;sub&gt;n&lt;/sub&gt;:sig&lt;a href=&quot;modtypes#specification&quot;&gt;specification&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt;end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c54af7effbd4ca0aaea9254845ed74e9c9fd5e5" translate="yes" xml:space="preserve">
          <source>nativeint</source>
          <target state="translated">nativeint</target>
        </trans-unit>
        <trans-unit id="7842b5cc68f46a5264ad22c6f3ac95a21cab1bbe" translate="yes" xml:space="preserve">
          <source>nativeint-literal</source>
          <target state="translated">nativeint-literal</target>
        </trans-unit>
        <trans-unit id="85777c03b72554cd08e721b6148dc27d2a50a7a6" translate="yes" xml:space="preserve">
          <source>never</source>
          <target state="translated">never</target>
        </trans-unit>
        <trans-unit id="c31f532ff7f5db85232dc564f48437b88a83759a" translate="yes" xml:space="preserve">
          <source>new, &lt;a href=&quot;expr#hevea_manual.kwd41&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd84&quot;&gt;7.7.6&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b4c2a18d75a7244757a18872d0ed66694e5a5a" translate="yes" xml:space="preserve">
          <source>new&lt;a href=&quot;names#class-path&quot;&gt;class-path&lt;/a&gt;</source>
          <target state="translated">new&lt;a href=&quot;names#class-path&quot;&gt;class-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="074dd873d8c2bce602dbeeddd1fa2317c3fa3aa3" translate="yes" xml:space="preserve">
          <source>next [count]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5929e58a5aa1fde36b80ecc26548c50423ddf943" translate="yes" xml:space="preserve">
          <source>nice</source>
          <target state="translated">nice</target>
        </trans-unit>
        <trans-unit id="02613494503daf7d9ed13a93e2d8b320c160d349" translate="yes" xml:space="preserve">
          <source>none of the slots in the trace come from modules compiled with debug information (&lt;code&gt;-g&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d01cec4632c7ff9d709479c742dd1d0a568021" translate="yes" xml:space="preserve">
          <source>nonrec, &lt;a href=&quot;typedecl#hevea_manual.kwd94&quot;&gt;7.8.1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5f08a32c1649f11d63d6491e8b76ffa17942ab" translate="yes" xml:space="preserve">
          <source>not implemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7680b128a8b69c3efc6d6c275b8e009a14c850" translate="yes" xml:space="preserve">
          <source>not implemented (make no sense on a DOS file system)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73489f2bdf6d70af09dd9401c32d9151e672b2ba" translate="yes" xml:space="preserve">
          <source>not implemented (meaningless under Windows)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ee7436529099ef87e2a1073f1f970993e06ff3" translate="yes" xml:space="preserve">
          <source>not implemented (no inter-process signals in Windows)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe6d428ca4d266bd1bb4732e6dcf7667e6b5eda" translate="yes" xml:space="preserve">
          <source>not implemented, use create_process or threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153f9e5597312a4464d71a2524df53cfaf941454" translate="yes" xml:space="preserve">
          <source>not implemented, use waitpid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7d8ba7bd0d989ed12477caad3d945573e56f88" translate="yes" xml:space="preserve">
          <source>not implemented; use threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74b00e5a8ebeade208bc452f2f09614af1b36bc" translate="yes" xml:space="preserve">
          <source>number of dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a81af3e591ac713f81ea1efe93dcf36157d8376" translate="yes" xml:space="preserve">
          <source>o</source>
          <target state="translated">o</target>
        </trans-unit>
        <trans-unit id="e53bfaca900144fa1b365399c6b4e272ed880606" translate="yes" xml:space="preserve">
          <source>object [(&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;)] {&lt;a href=&quot;#class-field-spec&quot;&gt;class-field-spec&lt;/a&gt;} end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba6c748e2a2a757d26239fccc7f134cf45cc579" translate="yes" xml:space="preserve">
          <source>object, &lt;a href=&quot;expr#hevea_manual.kwd42&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd85&quot;&gt;7.7.6&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd101&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd118&quot;&gt;7.9.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb3dd61d6059c19cdff21196dd0b7ecfc45e8da" translate="yes" xml:space="preserve">
          <source>object-expr</source>
          <target state="translated">object-expr</target>
        </trans-unit>
        <trans-unit id="cc654d311ee1cbdb2d0b3470bae8cae01e5bd1d6" translate="yes" xml:space="preserve">
          <source>object&lt;a href=&quot;#class-body&quot;&gt;class-body&lt;/a&gt;end</source>
          <target state="translated">object&lt;a href=&quot;#class-body&quot;&gt;class-body&lt;/a&gt;end</target>
        </trans-unit>
        <trans-unit id="4117c38473c498ee96b230fbb6000c97a66f66ed" translate="yes" xml:space="preserve">
          <source>object&lt;a href=&quot;classes#class-body&quot;&gt;class-body&lt;/a&gt;end</source>
          <target state="translated">object&lt;a href=&quot;classes#class-body&quot;&gt;class-body&lt;/a&gt;end</target>
        </trans-unit>
        <trans-unit id="3a476a08b4f3fcf8900d9f6f577b37263ef43523" translate="yes" xml:space="preserve">
          <source>ocaml.boxed or boxed can be used on type definitions to mean the opposite of ocaml.unboxed: keep the unoptimized representation of the type. When there is no annotation, the default is currently boxed but it may change in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3329e3ccc42a99bad5f86a09478c6c71c56cb3ae" translate="yes" xml:space="preserve">
          <source>ocaml.local or local take either never, always, maybe or nothing as payload on a function definition. If no payload is provided, the default is always. The attribute controls an optimization which consists in compiling a function into a static continuation. Contrary to inlining, this optimization does not duplicate the function&amp;rsquo;s body. This is possible when all references to the function are full applications, all sharing the same continuation (for instance, the returned value of several branches of a pattern matching). never disables the optimization, always asserts that the optimization applies (otherwise a warning 55 is emitted) and maybe lets the optimization apply when possible (this is the default behavior when the attribute is not specified). The optimization is implicitly disabled when using the bytecode compiler in debug mode (-g), and for functions marked with an ocaml.inline always or ocaml.unrolled attribute which supersede ocaml.local.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f09cadce4a4acccacb03161ee6c4384fa34d88f" translate="yes" xml:space="preserve">
          <source>ocaml.unboxed or unboxed can be used on a type definition if the type is a single-field record or a concrete type with a single constructor that has a single argument. It tells the compiler to optimize the representation of the type by removing the block that represents the record or the constructor (i.e. a value of this type is physically equal to its argument). In the case of GADTs, an additional restriction applies: the argument must not be an existential variable, represented by an existential type variable, or an abstract type constructor applied to an existential type variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2dff72f47287159cfed6681354434c7e795878" translate="yes" xml:space="preserve">
          <source>ocaml_compiler_internal_params (file in the stdlib directory)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1255e9f0c812dd9933db19609a9689e76d0d7a6" translate="yes" xml:space="preserve">
          <source>ocamldoc section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f421586882978eec02ecc275602d06a76bafa0f4" translate="yes" xml:space="preserve">
          <source>ocamllex: Position memory overflow, too many bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa1f25f017b7358c864e572fd3329776b13a358" translate="yes" xml:space="preserve">
          <source>ocamllex: transition table overflow, automaton is too big</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4274c6bb615edc55a825014050069ff7fb9f33e6" translate="yes" xml:space="preserve">
          <source>octal (radix 8)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f08e7eda942f071ca9c688e28e2f5b37883ba42" translate="yes" xml:space="preserve">
          <source>of, &lt;a href=&quot;types#hevea_manual.kwd10&quot;&gt;7.4&lt;/a&gt;, &lt;a href=&quot;typedecl#hevea_manual.kwd95&quot;&gt;7.8.1&lt;/a&gt;, &lt;a href=&quot;moduletypeof#hevea_manual.kwd218&quot;&gt;8.6&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0daee83e09e27e7fd1e287c07dc0c952da2d8b86" translate="yes" xml:space="preserve">
          <source>on entrance to the toplevel. The modules Foo, Bar and Gee are not opened, though; you still have to do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8aaf9d05529fcef6793bc5c848a62e2cf8ad26" translate="yes" xml:space="preserve">
          <source>once a pretty-printing box is open, display its material with basic printing functions (e. g. &lt;code&gt;print_int&lt;/code&gt; and &lt;code&gt;print_string&lt;/code&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ce94bf17a17ba6346351fc70a64e6ad98312df" translate="yes" xml:space="preserve">
          <source>one conditional branch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba9f2ac90705c299198b689aa706dcdc93f9d99" translate="yes" xml:space="preserve">
          <source>one direct call;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86eeebdffbc3d84ae7e425c1e972b8f0af5fa858" translate="yes" xml:space="preserve">
          <source>only print the error and its location;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fe687be54c68c578a3e86855cf1b484e9247cc" translate="yes" xml:space="preserve">
          <source>open for appending: always write at end of file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a77a0ea46c71e6edd7192a331d28ef94a8dce95" translate="yes" xml:space="preserve">
          <source>open for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9953d001a747618c320c309949bcf7f3a66aa7" translate="yes" xml:space="preserve">
          <source>open for writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec5f518c2623a1af90909e49ca15b0b0040fdfc" translate="yes" xml:space="preserve">
          <source>open in binary mode (no conversion).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe1a092f020ad685eb2a89eb271967bf4167af6" translate="yes" xml:space="preserve">
          <source>open in non-blocking mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30dcf4157633c24c720127187068ce21584b1899" translate="yes" xml:space="preserve">
          <source>open in text mode (may perform conversions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71756747df34775fb3dcae40141b155c565baed" translate="yes" xml:space="preserve">
          <source>open!, &lt;a href=&quot;overridingopen#hevea_manual.kwd224&quot;&gt;8.9&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9a487c02ff14262b332da63556a84dd14c7fac" translate="yes" xml:space="preserve">
          <source>open!&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="translated">open!&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68cae50c9a8898c99e4366a7b75c2dea89acbfb4" translate="yes" xml:space="preserve">
          <source>open!&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</source>
          <target state="translated">open!&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54eed8b376cd6c694272aeeb4285b38f42ba0cce" translate="yes" xml:space="preserve">
          <source>open!&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;</source>
          <target state="translated">open!&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f7c1608152285f255961824039b92e9598b6fc8" translate="yes" xml:space="preserve">
          <source>open, &lt;a href=&quot;expr#hevea_manual.kwd91&quot;&gt;7.7.8&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e52e42c706b036301d0a8159657fcf08367936" translate="yes" xml:space="preserve">
          <source>open, &lt;a href=&quot;patterns#hevea_manual.kwd19&quot;&gt;7.6&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd161&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd175&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd189&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd203&quot;&gt;7.11.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb82c703338b0488e06c716e48ea77354a5cc038" translate="yes" xml:space="preserve">
          <source>open&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</source>
          <target state="translated">open&lt;a href=&quot;modules#module-expr&quot;&gt;module-expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3072dbccf6c60f5467c1b938c7e85b9b6e48a2d1" translate="yes" xml:space="preserve">
          <source>open&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</source>
          <target state="translated">open&lt;a href=&quot;names#extended-module-path&quot;&gt;extended-module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d96f9a71341cc6c8687f30bbf644c9c9600ffc66" translate="yes" xml:space="preserve">
          <source>open&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;</source>
          <target state="translated">open&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="613102eb4d4622cbdceccb0a5309939c6f774b83" translate="yes" xml:space="preserve">
          <source>open&lt;a href=&quot;names#module-path&quot;&gt;module-path&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a59b558ef1a960d79e06fbca9408f9872c581e" translate="yes" xml:space="preserve">
          <source>operations for interfacing in the presence of multiple threads (see section &lt;a href=&quot;#s%3AC-multithreading&quot;&gt;20.12&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7991440c6725a4b7d9b05bb01ff6b3e7f9982728" translate="yes" xml:space="preserve">
          <source>operations for writing user-defined serialization and deserialization functions for custom blocks (see section &lt;a href=&quot;#s%3Ac-custom&quot;&gt;20.9&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78d67c739b926efa81cd8583ac817b7a12b7374" translate="yes" xml:space="preserve">
          <source>operations on custom blocks (see section &lt;a href=&quot;#s%3Ac-custom&quot;&gt;20.9&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4326a7291b555b7b4144d7cdbe5bf76de9149c" translate="yes" xml:space="preserve">
          <source>operator-char</source>
          <target state="translated">operator-char</target>
        </trans-unit>
        <trans-unit id="23929881068289997647a1e58eeaf90af7f562dc" translate="yes" xml:space="preserve">
          <source>operator-name</source>
          <target state="translated">operator-name</target>
        </trans-unit>
        <trans-unit id="33f478a78d3e35096f057b77dd86706dba814486" translate="yes" xml:space="preserve">
          <source>options are described below. objects are filenames ending in .cmo or .cma; they are loaded into the interpreter immediately after options are set. scriptfile is any file name not ending in .cmo or .cma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c08b84fa0059a9e1fe83a5468af354214d8f15c" translate="yes" xml:space="preserve">
          <source>optlabel</source>
          <target state="translated">optlabel</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="aba0e980e8685a904adc7408d29accd1b356b65b" translate="yes" xml:space="preserve">
          <source>or (if dynamic linking of C libraries is supported on your platform), start ocaml and type #load &quot;bigarray.cma&quot;;;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c57b90ceb494fc9f0717e6864635ecd7288c247" translate="yes" xml:space="preserve">
          <source>or (if dynamic linking of C libraries is supported on your platform), start ocaml and type #load &quot;str.cma&quot;;;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2febfd3517805650089e439e2f9af6599d42d36a" translate="yes" xml:space="preserve">
          <source>or (if dynamic linking of C libraries is supported on your platform), start ocaml and type #load &quot;unix.cma&quot;;;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1521bd19c1027ddb9d6576a7824cba8e82515f6" translate="yes" xml:space="preserve">
          <source>or a pointer to a block inside the heap, allocated through one of the &lt;code&gt;caml_alloc_*&lt;/code&gt; functions described in section &lt;a href=&quot;#ss%3Ac-block-allocation&quot;&gt;20.4.4&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b86884761a9a549ff5c5eddd1ef01cbe478854" translate="yes" xml:space="preserve">
          <source>or combined with with aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f100475bfa49b140480e6aec3513ee4725a77565" translate="yes" xml:space="preserve">
          <source>or equivalently a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea440246f2e7b9109a9e5e8b525eb10973c96b8" translate="yes" xml:space="preserve">
          <source>or opening an intermediary box before the maximum indentation limit which fits on the current line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef7b08ec4669e4370b916c64f0ed1f38f78868b" translate="yes" xml:space="preserve">
          <source>or the object one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ccaccd24555fa7b456e2f23cc6e6bcaa8710a72" translate="yes" xml:space="preserve">
          <source>or to rename one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57322f84e41f29227cebb6d6311b8b59b3b77bfa" translate="yes" xml:space="preserve">
          <source>or ||</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db483b8d79c3bb78b6732f40313b4f64b06d0c0" translate="yes" xml:space="preserve">
          <source>or, &lt;a href=&quot;expr#hevea_manual.kwd36&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd44&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd66&quot;&gt;7.7.3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bd1d980497fee2e42c782fbce695ebbb560bc2" translate="yes" xml:space="preserve">
          <source>or, even simpler,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed80c4ea72bd0e7df15f51dc00447753fb2a2299" translate="yes" xml:space="preserve">
          <source>other systems: you may have to add one or more of -lcurses, -lm, -ldl, depending on your OS and C compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d11671ba6e900cb25da86e8000840e07df7802" translate="yes" xml:space="preserve">
          <source>outside of the following text formatting : {ul&lt;a href=&quot;#list&quot;&gt;list&lt;/a&gt;} , {ol&lt;a href=&quot;#list&quot;&gt;list&lt;/a&gt;} , [string] , {[string]} , {vstringv} , {%string%} , {!string} , {^&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;} , {_&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;} .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516b9783fca517eecbd1d064da2d165310b19759" translate="yes" xml:space="preserve">
          <source>p</source>
          <target state="translated">p</target>
        </trans-unit>
        <trans-unit id="5ea8f97d901fca5f9742ff0e1501c336c1ae4513" translate="yes" xml:space="preserve">
          <source>package-constraint</source>
          <target state="translated">package-constraint</target>
        </trans-unit>
        <trans-unit id="f21c2cc05a4b4c67e48be9f9a381407a955f3be8" translate="yes" xml:space="preserve">
          <source>package-type</source>
          <target state="translated">package-type</target>
        </trans-unit>
        <trans-unit id="b75381f00486e5b8409bb3475762882a8ac61715" translate="yes" xml:space="preserve">
          <source>parameter</source>
          <target state="translated">parameter</target>
        </trans-unit>
        <trans-unit id="be93c25ada08aa974008b386cde742fcaf131fd1" translate="yes" xml:space="preserve">
          <source>partially implemented (since 4.00.0): only the sigkill signal is implemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceae7a7ad4759e0857a54fbc58229c54045def8d" translate="yes" xml:space="preserve">
          <source>partially implemented, will not report timings for child processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91cc2e927b3bfb1d4477b744f7c70221ddb86ef1" translate="yes" xml:space="preserve">
          <source>pattern</source>
          <target state="translated">pattern</target>
        </trans-unit>
        <trans-unit id="9a14f979f0c796f87fd20ef4cb8c362f76bc6cda" translate="yes" xml:space="preserve">
          <source>pattern-matching</source>
          <target state="translated">pattern-matching</target>
        </trans-unit>
        <trans-unit id="6290e553a98d87f63eefc0b32b1e36d78aa7f83f" translate="yes" xml:space="preserve">
          <source>pattern&lt;sub&gt;1&lt;/sub&gt;</source>
          <target state="translated">pattern&lt;sub&gt;1&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="56eb0a31bbe7297da60db8aa72f09ac2853b44d5" translate="yes" xml:space="preserve">
          <source>pattern&lt;sub&gt;1&lt;/sub&gt; [whencond&lt;sub&gt;1&lt;/sub&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42685c268babbf976946e86d48b8ff111c06c2d" translate="yes" xml:space="preserve">
          <source>pattern&lt;sub&gt;n&lt;/sub&gt;</source>
          <target state="translated">pattern&lt;sub&gt;n&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="5da796c7c6c6610c99b5e3ac4648fa06813e8085" translate="yes" xml:space="preserve">
          <source>pattern&lt;sub&gt;n&lt;/sub&gt; [whencond&lt;sub&gt;n&lt;/sub&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8d29955a725c39916a4626f3921a0104242439" translate="yes" xml:space="preserve">
          <source>pause</source>
          <target state="translated">pause</target>
        </trans-unit>
        <trans-unit id="ebd590ce9a1efa1abfa7812beeb711d73a435d1b" translate="yes" xml:space="preserve">
          <source>plain characters, which are simply matched with the characters of the input (with a special case for space and line feed, see &lt;a href=&quot;scanf#space&quot;&gt;&lt;i&gt;The space character in format strings&lt;/i&gt;&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee289cc6a10ef81e7a6e9035ef88c0e4f972fa7" translate="yes" xml:space="preserve">
          <source>platform-native signed integers (32 bits on 32-bit architectures, 64 bits on 64-bit architectures) (&lt;a href=&quot;bigarray#TYPEnativeint_elt&quot;&gt;&lt;code&gt;Bigarray.nativeint_elt&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11159efea35812809fd340e198fdb6d19710acda" translate="yes" xml:space="preserve">
          <source>poly-typexpr</source>
          <target state="translated">poly-typexpr</target>
        </trans-unit>
        <trans-unit id="43783285fac067823fd1b628608bb5b900bbad79" translate="yes" xml:space="preserve">
          <source>polymorphic variant tags (&lt;a href=&quot;#tag-name&quot;&gt;tag-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e500b7ee0e045dfba4476dcfd5c9db9a363da702" translate="yes" xml:space="preserve">
          <source>polymorphic-variant-type</source>
          <target state="translated">polymorphic-variant-type</target>
        </trans-unit>
        <trans-unit id="e9b0086c168c737ac0b963d76497a5856daed63f" translate="yes" xml:space="preserve">
          <source>pos:</source>
          <target state="translated">pos:</target>
        </trans-unit>
        <trans-unit id="415154a2c7a095fc1c9fa0cc6a4804a1cc2734f3" translate="yes" xml:space="preserve">
          <source>prefix-symbol</source>
          <target state="translated">prefix-symbol</target>
        </trans-unit>
        <trans-unit id="4af3f385bf96a502111e12df398a8b68f6aa92c6" translate="yes" xml:space="preserve">
          <source>previous [count]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d388c1de363ddd59601c6b3cd7a300c08c5e57" translate="yes" xml:space="preserve">
          <source>print variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21600c854976437bcf87861f8d6dc972146277fa" translate="yes" xml:space="preserve">
          <source>prints the source code for the foo module, with comments indicating how many times the functions in this module have been called. Naturally, this information is accurate only if the source file has not been modified after it was compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fc999c04deaad5e43a18564d2f9ebd13e721e5" translate="yes" xml:space="preserve">
          <source>private, &lt;a href=&quot;classes#hevea_manual.kwd107&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd114&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd116&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd128&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd138&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd140&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;privatetypes#hevea_manual.kwd208&quot;&gt;8.3&lt;/a&gt;, &lt;a href=&quot;privatetypes#hevea_manual.kwd209&quot;&gt;8.3.3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6972b7a74a0d91636d3bd4853ddc80d9b261ae" translate="yes" xml:space="preserve">
          <source>produces OCaml code for a lexical analyzer in file lexer.ml. This file defines one lexing function per entry point in the lexer definition. These functions have the same names as the entry points. Lexing functions take as argument a lexer buffer, and return the semantic attribute of the corresponding entry point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16aeb52d9b6e78a5ade36aca960146507dd41cc" translate="yes" xml:space="preserve">
          <source>produces OCaml code for a parser in the file grammar.ml, and its interface in file grammar.mli.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11155c3306549f07ad5395657ab6287170fe5c06" translate="yes" xml:space="preserve">
          <source>provided that none of the following functions was called in between:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3568c954a19b6a056da65303deb914b703e841" translate="yes" xml:space="preserve">
          <source>put a link to the given address (given as string) on the given &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fa265330ad83eaa879efb1e2db6380896cf639" translate="yes" xml:space="preserve">
          <source>pwd</source>
          <target state="translated">pwd</target>
        </trans-unit>
        <trans-unit id="2d69b301e45a7341841fdf76669df5cc4679a3b6" translate="yes" xml:space="preserve">
          <source>quoted-string-id</source>
          <target state="translated">quoted-string-id</target>
        </trans-unit>
        <trans-unit id="4dc7c9ec434ed06502767136789763ec11d2c4b7" translate="yes" xml:space="preserve">
          <source>r</source>
          <target state="translated">r</target>
        </trans-unit>
        <trans-unit id="6e60cb78047c71746b80924fcb869fc0134e13c9" translate="yes" xml:space="preserve">
          <source>rec, see let, module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3819c35d877b1345807e3d9d3f338e6bc9724a6" translate="yes" xml:space="preserve">
          <source>recfield:</source>
          <target state="translated">recfield:</target>
        </trans-unit>
        <trans-unit id="5966a61e5a61d832aef9b581e6f18e1db33d2760" translate="yes" xml:space="preserve">
          <source>record field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22a6006d4e8731e062cba5aa7d96d38977f4874" translate="yes" xml:space="preserve">
          <source>record fields (&lt;a href=&quot;#field-name&quot;&gt;field-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55737a8e3a12122649717732b0cb9e68c95eeaf" translate="yes" xml:space="preserve">
          <source>record-decl</source>
          <target state="translated">record-decl</target>
        </trans-unit>
        <trans-unit id="0f063ea5f97a119e87951764645f80f0deea6925" translate="yes" xml:space="preserve">
          <source>recursive functions can be handled, by &lt;em&gt;specialisation&lt;/em&gt; (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6e666dc84ae3e952007f0972dc117193df7744" translate="yes" xml:space="preserve">
          <source>regexp</source>
          <target state="translated">regexp</target>
        </trans-unit>
        <trans-unit id="3b31a056d843a03afc5690886093d038735d5be1" translate="yes" xml:space="preserve">
          <source>regular-string-char</source>
          <target state="translated">regular-string-char</target>
        </trans-unit>
        <trans-unit id="d5e544e0891fb811fc2a6ed9cde7c97c37ad40e7" translate="yes" xml:space="preserve">
          <source>release 4.11</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0486156d07fa718333ecb7fde3ac1eac4107c8e7" translate="yes" xml:space="preserve">
          <source>remove all dead bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45279a26094da8a9a18d68e1d73165175b125193" translate="yes" xml:space="preserve">
          <source>remove all dead bindings. Done automatically during automatic resizing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2f1d16440a5318a8598dae524d43687a2fca6a" translate="yes" xml:space="preserve">
          <source>remove_printer printer-name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d163ccdcc0dee1165d0048e0bb9001bf9ba51f0" translate="yes" xml:space="preserve">
          <source>report also the children that receive stop signals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1979a6d6e6fc87096cf5f15850445279b5052ee1" translate="yes" xml:space="preserve">
          <source>return if the tables are currently created in randomized mode by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16465e18c1f61545fd38aba7ebd8dd9cf7cfa8e" translate="yes" xml:space="preserve">
          <source>return the number of keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e9a016242857636e035b28aa8ca530ccdb96f1" translate="yes" xml:space="preserve">
          <source>returns a formatter to the &lt;a href=&quot;stdlib#TYPEout_channel&quot;&gt;&lt;code&gt;out_channel&lt;/code&gt;&lt;/a&gt;&lt;code&gt;oc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eaceb6209b07531ea6432fb37e8016312ee51aa" translate="yes" xml:space="preserve">
          <source>returns a fresh custom block, with room for size bytes of user data, and whose associated operations are given by ops (a pointer to a struct custom_operations, usually statically allocated as a C global variable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21575df2b7c11a34a5a1cc7e5f16e078757d6d0" translate="yes" xml:space="preserve">
          <source>returns the string &lt;code&gt;&quot;world&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75470a3076d8da06e21a0f542f3a535af3f72e94" translate="yes" xml:space="preserve">
          <source>reverse</source>
          <target state="translated">reverse</target>
        </trans-unit>
        <trans-unit id="d27a1f11771200949714b1af99f048a416f5d6f4" translate="yes" xml:space="preserve">
          <source>right</source>
          <target state="translated">right</target>
        </trans-unit>
        <trans-unit id="5850d2239fad415c0255443cedda838c249845ba" translate="yes" xml:space="preserve">
          <source>right align &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6ad19037c97987c4ff9792810c0e145356717c" translate="yes" xml:space="preserve">
          <source>run</source>
          <target state="translated">run</target>
        </trans-unit>
        <trans-unit id="a0f1490a20d0211c997b44bc357e1972deab8ae3" translate="yes" xml:space="preserve">
          <source>s</source>
          <target state="translated">s</target>
        </trans-unit>
        <trans-unit id="968ed85773fa350f2241ef05a1035096c6d88d47" translate="yes" xml:space="preserve">
          <source>same as &lt;a href=&quot;gc#VALfinalise&quot;&gt;&lt;code&gt;Gc.finalise&lt;/code&gt;&lt;/a&gt; except the value is not given as argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62b1d24f70d6d246d875e29be3edb2a04745817" translate="yes" xml:space="preserve">
          <source>same as &lt;a href=&quot;gc#VALfinalise&quot;&gt;&lt;code&gt;Gc.finalise&lt;/code&gt;&lt;/a&gt; except the value is not given as argument. So you can't use the given value for the computation of the finalisation function. The benefit is that the function is called after the value is unreachable for the last time instead of the first time. So contrary to &lt;a href=&quot;gc#VALfinalise&quot;&gt;&lt;code&gt;Gc.finalise&lt;/code&gt;&lt;/a&gt; the value will never be reachable again or used again. In particular every weak pointer and ephemeron that contained this value as key or data is unset before running the finalisation function. Moreover the finalisation functions attached with &lt;a href=&quot;gc#VALfinalise&quot;&gt;&lt;code&gt;Gc.finalise&lt;/code&gt;&lt;/a&gt; are always called before the finalisation functions attached with &lt;a href=&quot;gc#VALfinalise_last&quot;&gt;&lt;code&gt;Gc.finalise_last&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d44613726075381bdb5f43c380e4d53b22f246c" translate="yes" xml:space="preserve">
          <source>same as &lt;a href=&quot;hashtbl.seededs#VALstats&quot;&gt;&lt;code&gt;Hashtbl.SeededS.stats&lt;/code&gt;&lt;/a&gt; but only count the alive bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f98e09592f066948cf57623f56105b09e568c90" translate="yes" xml:space="preserve">
          <source>same, but also associate the name label to the current point. This point can be referenced by its fully-qualified label in a {! command, just like any other element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9836f5bbe38a0854816d52fffab3509398cb256d" translate="yes" xml:space="preserve">
          <source>scanning buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2f93e100e9090ce6d2751faa4c1f74ec57cf6e" translate="yes" xml:space="preserve">
          <source>scanning indications to specify boundaries of tokens (see scanning &lt;a href=&quot;scanf#indication&quot;&gt;&lt;i&gt;Scanning indications in format strings&lt;/i&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56be4a67b583f1345391ed9b2315737f2e22642" translate="yes" xml:space="preserve">
          <source>section:</source>
          <target state="translated">section:</target>
        </trans-unit>
        <trans-unit id="c2c5e842a80cc1fb2b034d7e9f5cf78a1f1f5d2a" translate="yes" xml:space="preserve">
          <source>set &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt; in bold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1b74b518127b0f51c6769ab814e97151f6fd98" translate="yes" xml:space="preserve">
          <source>set &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt; in italic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca75f1666a2a3243b761f9e1143bb96af224bdb" translate="yes" xml:space="preserve">
          <source>set argumentsarguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fe33796ac57e05eb60018a3ab4d2885d9df7e4" translate="yes" xml:space="preserve">
          <source>set bigstepcount</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc51049e498e9e4efe7a9500c9c0811f28fd155" translate="yes" xml:space="preserve">
          <source>set break_on_loadon/off</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec05d71860441a51254a895411868c4c7ae7e5c" translate="yes" xml:space="preserve">
          <source>set checkpointson/off</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5ab3f4ab234145f57111580ff4c6467dddf3e3" translate="yes" xml:space="preserve">
          <source>set follow_fork_modechild/parent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0009acc902525b064459fcbea07c9ad4fa3e07" translate="yes" xml:space="preserve">
          <source>set history size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deeb5448effea3c7278cd53ff544d2518dc00805" translate="yes" xml:space="preserve">
          <source>set loadingmode direct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8382e6ca89628dcedc1d8974c95c59494b37619" translate="yes" xml:space="preserve">
          <source>set loadingmode manual</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c3380ae13428c7774eeacce5ecffd6364d88a4" translate="yes" xml:space="preserve">
          <source>set loadingmode runtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab8a54602a6ccdf9db166db07a593ec9fc348e0" translate="yes" xml:space="preserve">
          <source>set print_depthd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b36c1b159fcc895076b743640cd5625e51d206" translate="yes" xml:space="preserve">
          <source>set print_lengthl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff594ba67afb75cbaf8636cba3382da5494d123" translate="yes" xml:space="preserve">
          <source>set processcountcount</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8468945a815e2a2a6fdd57511e67c4aeed90f5" translate="yes" xml:space="preserve">
          <source>set programfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8489bef8090f60920a78a2655d8a4be413dd9756" translate="yes" xml:space="preserve">
          <source>set smallstepcount</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3dcc58e30c162ba7ad9431e659aa71f38adf073" translate="yes" xml:space="preserve">
          <source>set socketsocket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f54b69460b544fd53302997dfaa278e49f02e5b" translate="yes" xml:space="preserve">
          <source>set text in subscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a46aa759863e9408a821e816badeda8462a836a" translate="yes" xml:space="preserve">
          <source>set text in superscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcdb02e7998235854c388b494d8f02c2ad8ba91" translate="yes" xml:space="preserve">
          <source>set the given string in preformatted source code style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2e7eb932f5e7e911bc45baa5de8a602614564c" translate="yes" xml:space="preserve">
          <source>set the given string in source code style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a579a43e06203a705899a890b730433adc7bef2" translate="yes" xml:space="preserve">
          <source>set the given string in verbatim style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90839a0911ca203048b2d6b5aaabba3e627c6acb" translate="yes" xml:space="preserve">
          <source>set variable value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74263fa81b209a785fda1829bdf441e1b7360625" translate="yes" xml:space="preserve">
          <source>setuid, setgid, setgroups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f4ea7d91495df92bbac2e2149dfb850fe81396" translate="yes" xml:space="preserve">
          <source>short</source>
          <target state="translated">short</target>
        </trans-unit>
        <trans-unit id="6725d36266f8bd8f77697e05cdd63b548fe67957" translate="yes" xml:space="preserve">
          <source>should be rewritten into more atomic tests. For example, using the exception patterns documented in Section &lt;a href=&quot;patterns#sss%3Aexception-match&quot;&gt;7.6&lt;/a&gt;, one can write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101ffa3bb90d655707ddf9c6d21b6c7edf11058e" translate="yes" xml:space="preserve">
          <source>show variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54afc01f932822904314a3bc86c66644a5e756b" translate="yes" xml:space="preserve">
          <source>sig { &lt;a href=&quot;#specification&quot;&gt;specification&lt;/a&gt; [;;] } end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f5b602d5f5476804e64389fdf303fabc7122fe" translate="yes" xml:space="preserve">
          <source>sig, &lt;a href=&quot;modtypes#hevea_manual.kwd150&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd163&quot;&gt;7.10.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e46c8d87b616744ee9a568d63d5fcf6ba07ee3" translate="yes" xml:space="preserve">
          <source>simple-expr</source>
          <target state="translated">simple-expr</target>
        </trans-unit>
        <trans-unit id="c3a5f58835b645c095559fa458357d5199183c30" translate="yes" xml:space="preserve">
          <source>since 'a,'b and 'c denote type variables that may or may not be polymorphic. Whereas, it is an error to unify an explicitly polymorphic type with a non-polymorphic type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34eb858e98f1c124c876e6f064524b99718c2a7e" translate="yes" xml:space="preserve">
          <source>single quote (')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f3d36b9b396ea98380a14125b64e2cd276be90" translate="yes" xml:space="preserve">
          <source>some C compilers give bogus warnings about unused variables caml__dummy_xxx at each use of CAMLparam and CAMLlocal. You should ignore them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25f00e396d8f6448d8690bb5a1ea90675e3307d" translate="yes" xml:space="preserve">
          <source>sourcefilename</source>
          <target state="translated">sourcefilename</target>
        </trans-unit>
        <trans-unit id="ce92d33015f07736419ede421887d4d2f9a6f62e" translate="yes" xml:space="preserve">
          <source>space (SPC)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888a1396778fab4430d3cd30424904faace422e4" translate="yes" xml:space="preserve">
          <source>space: for signed numerical conversions, prefix number with a space if positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d6a194f4b02abf07f3fda776760ecf88ab4ca6" translate="yes" xml:space="preserve">
          <source>specification</source>
          <target state="translated">specification</target>
        </trans-unit>
        <trans-unit id="7b0a5f40f71f72821fc1f14a3d6492676b156a47" translate="yes" xml:space="preserve">
          <source>src:</source>
          <target state="translated">src:</target>
        </trans-unit>
        <trans-unit id="2b020927d3c6eb407223a1baa3d6ce3597a3f88d" translate="yes" xml:space="preserve">
          <source>start</source>
          <target state="translated">start</target>
        </trans-unit>
        <trans-unit id="b2b70fd6d8f7ad1ec4e37e24dfcad4cdbbfab70c" translate="yes" xml:space="preserve">
          <source>step [count]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb252044b5ea0f679ee78ec1a12904739e2904d" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="translated">string</target>
        </trans-unit>
        <trans-unit id="65294de333b98fa47838572397740ea65f3e40d5" translate="yes" xml:space="preserve">
          <source>string-character</source>
          <target state="translated">string-character</target>
        </trans-unit>
        <trans-unit id="32069a84e164f50b9c29c6e07d0c88fc879ff39e" translate="yes" xml:space="preserve">
          <source>string-literal</source>
          <target state="translated">string-literal</target>
        </trans-unit>
        <trans-unit id="6ee38842670e5dfd92874838972ab44cb8fa237d" translate="yes" xml:space="preserve">
          <source>struct [ &lt;a href=&quot;#module-items&quot;&gt;module-items&lt;/a&gt; ] end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284f4d502a3ebb828769f45a6e33b08e45f27ffe" translate="yes" xml:space="preserve">
          <source>struct, &lt;a href=&quot;modules#hevea_manual.kwd179&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd191&quot;&gt;7.11.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc421b884ddc02ab2710c9c989fc32bb3edbd3ec" translate="yes" xml:space="preserve">
          <source>symbolic flush command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198be5c8ee0cf6822687b007913992e8a524bf32" translate="yes" xml:space="preserve">
          <source>symbolic newline command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3589bbfd0d7e82c778726059eb9ab862cbab19b" translate="yes" xml:space="preserve">
          <source>symlink, readlink</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142c488297f534944135346bc4736cd566c979e9" translate="yes" xml:space="preserve">
          <source>syntactic class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efd86fb78a56a5145ed7739dcb00c78581c5375" translate="yes" xml:space="preserve">
          <source>t</source>
          <target state="translated">t</target>
        </trans-unit>
        <trans-unit id="5e9b60f69165f32f8930843ca718e10fdee30c52" translate="yes" xml:space="preserve">
          <source>tag</source>
          <target state="translated">tag</target>
        </trans-unit>
        <trans-unit id="d595f206abbbebd6bdec9294b36d0e822feb19b0" translate="yes" xml:space="preserve">
          <source>tag-name</source>
          <target state="translated">tag-name</target>
        </trans-unit>
        <trans-unit id="56a1e8c2db584faf20894fc385c0423fbaf4abf4" translate="yes" xml:space="preserve">
          <source>tag-spec</source>
          <target state="translated">tag-spec</target>
        </trans-unit>
        <trans-unit id="09974d4763d1fa2e2e36d70ca07a3b6460fc6fd0" translate="yes" xml:space="preserve">
          <source>tag-spec-first</source>
          <target state="translated">tag-spec-first</target>
        </trans-unit>
        <trans-unit id="cef3a74bbe6ef48016ea13925a547b73a9a8d9d5" translate="yes" xml:space="preserve">
          <source>tag-spec-full</source>
          <target state="translated">tag-spec-full</target>
        </trans-unit>
        <trans-unit id="388856baad0995c6b0ff3465750bdc0bf7c669e0" translate="yes" xml:space="preserve">
          <source>target-specific content (L&lt;sup&gt;A&lt;/sup&gt;T&lt;sub&gt;E&lt;/sub&gt;X code by default, see details in &lt;a href=&quot;#sss%3Aocamldoc-target-specific-syntax&quot;&gt;16.2.4.4&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e46ba8de5595411d66300f906dec99fe6b8ed40" translate="yes" xml:space="preserve">
          <source>tells a subsequent ocamlrun to print backtraces for uncaught exceptions, set its initial minor heap size to 1 megabyte and print a message at the start of each major GC cycle, when the heap size changes, and when compaction is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3f016c232c175de9b644f6824ae516d56e0a0f" translate="yes" xml:space="preserve">
          <source>terminal functions (tc*)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8899bb3860c5a37cd411d2b5dae310188c4b60" translate="yes" xml:space="preserve">
          <source>terminates, either normally or because of an uncaught exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372ea08cab33e71c02c651dbc83a474d32c676ea" translate="yes" xml:space="preserve">
          <source>text</source>
          <target state="translated">text</target>
        </trans-unit>
        <trans-unit id="8458d42f0a73df9b5601fce2e685e2cb793b383d" translate="yes" xml:space="preserve">
          <source>text-element</source>
          <target state="translated">text-element</target>
        </trans-unit>
        <trans-unit id="3d6c8a6b5986d00e8bb60a9ef7a04504fa4452b4" translate="yes" xml:space="preserve">
          <source>the &amp;ldquo;unit&amp;rdquo; value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad731b36e920eb80ac82d11fcd3ef8721a23d3c" translate="yes" xml:space="preserve">
          <source>the 'cut': split the line if appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7306772afe9dc1c65bf041957b39c7464deb6aa0" translate="yes" xml:space="preserve">
          <source>the 'space': output a space or split the line if appropriate,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11fcd197e2228a06a7b4fa47446a3abcca2cbb1" translate="yes" xml:space="preserve">
          <source>the -custom option;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a17d3becb59f324b12cc6ab7a93be9ef2b7423" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;out_flush&lt;/code&gt; function flushes the pretty-printer output device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf48552b333a8d9af0766abf98bf02eefd8c0c5c" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;out_indent&lt;/code&gt; function performs new line indentation when the pretty-printer splits the line. It is called with the indentation value of the new line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144c54a7b926b721e709c7c2fd1b7fc3e31064de" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;out_spaces&lt;/code&gt; function outputs spaces when a break hint leads to spaces instead of a line split. It is called with the number of spaces to output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eff04b95813868f021ca91f70069901f9850b4d" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;out_string&lt;/code&gt; function performs all the pretty-printer string output. It is called with a string &lt;code&gt;s&lt;/code&gt;, a start position &lt;code&gt;p&lt;/code&gt;, and a number of characters &lt;code&gt;n&lt;/code&gt;; it is supposed to output characters &lt;code&gt;p&lt;/code&gt; to &lt;code&gt;p&amp;nbsp;+&amp;nbsp;n&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3006109716cd91281c1a891e5f99002ddd94d8" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;scanf&lt;/code&gt; facility is not intended for heavy duty lexical analysis and parsing. If it appears not expressive enough for your needs, several alternative exists: regular expressions (module &lt;a href=&quot;str&quot;&gt;&lt;code&gt;Str&lt;/code&gt;&lt;/a&gt;), stream parsers, &lt;code&gt;ocamllex&lt;/code&gt;-generated lexers, &lt;code&gt;ocamlyacc&lt;/code&gt;-generated parsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948b742e9e0297d4393837bc50179053e26fb3d1" translate="yes" xml:space="preserve">
          <source>the &lt;em&gt;inlining depth&lt;/em&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219d77297b1f73a9d339073f2d9ca20838d6b9b6" translate="yes" xml:space="preserve">
          <source>the &lt;em&gt;inlining threshold&lt;/em&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b06ebfa0efe1d671662da6b63a3bfe7d838717" translate="yes" xml:space="preserve">
          <source>the &lt;em&gt;unrolling depth&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d30ffa991dff9a941f57302934a31acf9dabeb0" translate="yes" xml:space="preserve">
          <source>the boolean false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9bfe9886a0f985c2c3289dbecad4ef9074744a6" translate="yes" xml:space="preserve">
          <source>the boolean true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4a03e65ed250e76664dc03ca4dbe083f9c3dac" translate="yes" xml:space="preserve">
          <source>the character with ASCII code ddd in decimal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac7d9323c74ab2f79d56eaa866d328de524ea8e" translate="yes" xml:space="preserve">
          <source>the character with ASCII code hh in hexadecimal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6a03f2b896dfd5dccca2dd73c8e3a6d1268892" translate="yes" xml:space="preserve">
          <source>the character with ASCII code ooo in octal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77511292e4647760d05717ac7144bfede7ae997" translate="yes" xml:space="preserve">
          <source>the compiler is in -Oclassic mode;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cd00a56d784a1a597b4c46f0cf2a3ef605289d" translate="yes" xml:space="preserve">
          <source>the container is dead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51f532e4323cdf02cc2f03c4cacbb9d4f83041f" translate="yes" xml:space="preserve">
          <source>the corresponding C stub can be written as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a8d50c2da48ea76e01f513e44dae8d074cf60c" translate="yes" xml:space="preserve">
          <source>the destination of an operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ccf0ae17b95e2027a42bb55eeb37d5e7ccdb01" translate="yes" xml:space="preserve">
          <source>the empty list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c082ff760f54f7b9a24a07cefaa49dd086bf62" translate="yes" xml:space="preserve">
          <source>the end-of-input has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1790670b1697ab36866fc144e38c49908cdcf5" translate="yes" xml:space="preserve">
          <source>the first argument is a source of characters for the input,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dad80a6d847401c825d95d13e43c3331c6464b8" translate="yes" xml:space="preserve">
          <source>the first blank line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220c14db04513b9f70465564f26dc3e89013dc97" translate="yes" xml:space="preserve">
          <source>the first dot followed by a blank, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929493a9ddd4750d1079dfaa6b28501c613a7521" translate="yes" xml:space="preserve">
          <source>the first parameter, &lt;code&gt;'a&lt;/code&gt;, is the OCaml type for accessing array elements (&lt;code&gt;float&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;nativeint&lt;/code&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5979409470086d9e45eafcc61c1c1d2116096f84" translate="yes" xml:space="preserve">
          <source>the function f cannot raise a Done exception, which removes an entire class of misbehaving functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fdda4ec39b15699cbc6090d6f587477e0a7aeb6" translate="yes" xml:space="preserve">
          <source>the function is not closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7cec462187751ac41a16bcb2c57dec9ac22dc8" translate="yes" xml:space="preserve">
          <source>the function is not obviously recursive;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003e585b213afb8bd1048f65475b01da57a2b381" translate="yes" xml:space="preserve">
          <source>the function is not recursive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f42ec7d812d4c125ccd93dfadf0da7519ad89e0" translate="yes" xml:space="preserve">
          <source>the implementation file A.ml, which contains a sequence of definitions, analogous to the inside of a struct&amp;hellip;end construct;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1490ce9266fa86927cb792fc09c06cd323932664" translate="yes" xml:space="preserve">
          <source>the initial value for an iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f290b1c4bacc852ddb953b3dff310185ac6112e" translate="yes" xml:space="preserve">
          <source>the inlining decision is made at the call site; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4208b49d953376d96ba0fd901e8610f784866279" translate="yes" xml:space="preserve">
          <source>the interface file A.mli, which contains a sequence of specifications, analogous to the inside of a sig&amp;hellip;end construct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0727d7a9e9225f27e118bf41d64c7b356066855a" translate="yes" xml:space="preserve">
          <source>the measured size (in unspecified units) is smaller than that of a function call plus the argument of the -inline command-line flag; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59cf6992c48dac2e872e2362c038897e17e1a390" translate="yes" xml:space="preserve">
          <source>the names of the C object files and libraries (.o and .a files) that implement the required primitives. Under Unix and Windows, a library named libname.a (respectively, .lib) residing in one of the standard library directories can also be specified as -cclib -lname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418a7dcb294addc35732eaf128ce497367f3b7ef" translate="yes" xml:space="preserve">
          <source>the names of the C object files and libraries (.o, .a, .so or .dll files) that implement the required primitives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13cecf1d63aac4c89238753643839ac52301f3c8" translate="yes" xml:space="preserve">
          <source>the names of the C shared libraries (.so or .dll files) that implement the required primitives. Under Unix and Windows, a library named dllname.so (respectively, .dll) residing in one of the standard library directories can also be specified as -dllib -lname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0a8c850de9b80dca261c93c03bb01f5f566ab7" translate="yes" xml:space="preserve">
          <source>the names of the desired OCaml native object files (.cmx and .cmxa files);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e427b683f078389a4eb094471c19490d863ba69" translate="yes" xml:space="preserve">
          <source>the names of the desired OCaml object files (.cmo and .cma files) ;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ec61e92ad27b6edf56e5664eda7f4a609af342" translate="yes" xml:space="preserve">
          <source>the program is a bytecode program that has not been linked with debug information enabled (&lt;code&gt;ocamlc&amp;nbsp;-g&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1656069bc115f19825c7973dc6770f4806115feb" translate="yes" xml:space="preserve">
          <source>the second argument is a format string that specifies the values to read,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939bb89f7b497be7deabcda9d49d97fd135f7422" translate="yes" xml:space="preserve">
          <source>the second parameter, &lt;code&gt;'b&lt;/code&gt;, is the actual kind of array elements (&lt;code&gt;float32_elt&lt;/code&gt;, &lt;code&gt;float64_elt&lt;/code&gt;, &lt;code&gt;int8_signed_elt&lt;/code&gt;, &lt;code&gt;int8_unsigned_elt&lt;/code&gt;, etc);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87dacf92378f4c4b6ebcdaa8272b0bd89792267b" translate="yes" xml:space="preserve">
          <source>the slot corresponds to a compiler-inserted raise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7078d7ab223da2165f22701e2cbd0da2734f478d" translate="yes" xml:space="preserve">
          <source>the slot corresponds to a part of the program that has not been compiled with debug information (&lt;code&gt;-g&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878132b799181d0e6f4d7a6fbf66b8330fa25c19" translate="yes" xml:space="preserve">
          <source>the source of an operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e4aa658a1098409e5ea36a3b4dd63d8f05fd59" translate="yes" xml:space="preserve">
          <source>the table of the required primitives;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b637083cb170866f97ae74801d8dd771f9d44880" translate="yes" xml:space="preserve">
          <source>the third argument is a &lt;em&gt;receiver function&lt;/em&gt; that is applied to the values read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0411fbe22a0f67d1984a12ca56d1f8ffb944ce" translate="yes" xml:space="preserve">
          <source>the third parameter, &lt;code&gt;'c&lt;/code&gt;, identifies the array layout (&lt;code&gt;c_layout&lt;/code&gt; or &lt;code&gt;fortran_layout&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16500d1eb24ac44e5ececdf4e15aabe3ec9ee5fb" translate="yes" xml:space="preserve">
          <source>then &lt;code&gt;bscanf&amp;nbsp;Scanning.stdin&amp;nbsp;&quot;%d&quot;&amp;nbsp;f&lt;/code&gt; reads an integer &lt;code&gt;n&lt;/code&gt; from the standard input and returns &lt;code&gt;f&amp;nbsp;n&lt;/code&gt; (that is &lt;code&gt;n&amp;nbsp;+&amp;nbsp;1&lt;/code&gt;). Thus, if we evaluate &lt;code&gt;bscanf&amp;nbsp;stdin&amp;nbsp;&quot;%d&quot;&amp;nbsp;f&lt;/code&gt;, and then enter &lt;code&gt;41&lt;/code&gt; at the keyboard, the result we get is &lt;code&gt;42&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00052008fd76a0e6317b5d93f506ffe763b7a70e" translate="yes" xml:space="preserve">
          <source>then S with type t=int denotes the signature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7bb47fb69ab11ca9258b988c7220d84f4e6331" translate="yes" xml:space="preserve">
          <source>then it will be attached to both items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa8fc54851470eb4257123f9fa63929d6a86906" translate="yes" xml:space="preserve">
          <source>then, see if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5677410f9f3b2e5e3d317bfd65d2cf5773b1707" translate="yes" xml:space="preserve">
          <source>thus hiding their implementation as C functions, or explicitly as &amp;ldquo;manifest&amp;rdquo; external functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7196b5875f713c826bd279dbda843c897e2a60c2" translate="yes" xml:space="preserve">
          <source>times</source>
          <target state="translated">times</target>
        </trans-unit>
        <trans-unit id="e7a321e6d89ecafd4933bb93fb1e4ef0d1e91d88" translate="yes" xml:space="preserve">
          <source>to reduce instruction cache misses by expressing frequently-taken paths through the program using fewer machine instructions; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35808a5d184c3440c6d5969b9aea658865e3be37" translate="yes" xml:space="preserve">
          <source>to reduce the amount of allocation (especially of closures).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7860810da9294b4fa20f6fe561d55e3fbdb9fde6" translate="yes" xml:space="preserve">
          <source>to reduce the runtime overhead caused by function calls (including setting up for such calls and returning afterwards);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3073d4fd4a446b8673ab4ae9e5830000b1b256" translate="yes" xml:space="preserve">
          <source>to support the syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f18d6b3aa1bd3b636131dcf73039ae16b799d7" translate="yes" xml:space="preserve">
          <source>to, see for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a79a33e706eb5a2eead89c405781cd398f1fb1" translate="yes" xml:space="preserve">
          <source>toplevel-input</source>
          <target state="translated">toplevel-input</target>
        </trans-unit>
        <trans-unit id="efd7fd7f2954713c1ee7facf9750fe53e8cf589c" translate="yes" xml:space="preserve">
          <source>translation</source>
          <target state="translated">translation</target>
        </trans-unit>
        <trans-unit id="5ffe533b830f08a0326348a9160afafc8ada44db" translate="yes" xml:space="preserve">
          <source>true</source>
          <target state="translated">true</target>
        </trans-unit>
        <trans-unit id="51c71ee5b9fc4abfeecef3c099bedcaff8ffd4fb" translate="yes" xml:space="preserve">
          <source>true ∣ false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a9a4148fb5f998d8be0f164af3ce471e13e01e" translate="yes" xml:space="preserve">
          <source>true, &lt;a href=&quot;const#hevea_manual.kwd12&quot;&gt;7.5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2898ba57c577d325e28784df56740c3ec4cf4c8f" translate="yes" xml:space="preserve">
          <source>truncate, ftruncate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3240aa0fe3ca15051680641a59e8d7b61c286b23" translate="yes" xml:space="preserve">
          <source>try</source>
          <target state="translated">try</target>
        </trans-unit>
        <trans-unit id="7608f55d467f20f7d2510c088f3a1ff71354ad5f" translate="yes" xml:space="preserve">
          <source>try &amp;hellip;with &amp;hellip; branches: a count point is set at the beginning of the body of each branch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6df95e2eed40a69457c6d101ee7678b6f029854" translate="yes" xml:space="preserve">
          <source>try, &lt;a href=&quot;expr#hevea_manual.kwd24&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd49&quot;&gt;7.7.1&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd69&quot;&gt;7.7.3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce87fcdbc98e8590af9cc9e87bc3196841395344" translate="yes" xml:space="preserve">
          <source>try&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;with&lt;a href=&quot;#pattern-matching&quot;&gt;pattern-matching&lt;/a&gt;</source>
          <target state="translated">try&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;with&lt;a href=&quot;#pattern-matching&quot;&gt;pattern-matching&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0a3e7f81a9885e99049d1cae0336d269d5e47a9" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="translated">type</target>
        </trans-unit>
        <trans-unit id="babed8e1a10bb2a430dab0a620c391c733366bbd" translate="yes" xml:space="preserve">
          <source>type [&lt;a href=&quot;typedecl#type-params&quot;&gt;type-params&lt;/a&gt;] &lt;a href=&quot;names#typeconstr&quot;&gt;typeconstr&lt;/a&gt;&lt;a href=&quot;#type-extension-def&quot;&gt;type-extension-def&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d142cbb65f4c48a257dd8d961fad1a693cdb09b" translate="yes" xml:space="preserve">
          <source>type [&lt;a href=&quot;typedecl#type-params&quot;&gt;type-params&lt;/a&gt;] &lt;a href=&quot;names#typeconstr&quot;&gt;typeconstr&lt;/a&gt;&lt;a href=&quot;#type-extension-spec&quot;&gt;type-extension-spec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f301396deb67f83392529e38ce21a2c45daf702" translate="yes" xml:space="preserve">
          <source>type [&lt;a href=&quot;typedecl#type-params&quot;&gt;type-params&lt;/a&gt;] &lt;a href=&quot;names#typeconstr&quot;&gt;typeconstr&lt;/a&gt;&lt;a href=&quot;typedecl#type-equation&quot;&gt;type-equation&lt;/a&gt; { &lt;a href=&quot;typedecl#type-constraint&quot;&gt;type-constraint&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20847a1b49d60b0393b6312fab276de486302458" translate="yes" xml:space="preserve">
          <source>type [&lt;a href=&quot;typedecl#type-params&quot;&gt;type-params&lt;/a&gt;] &lt;a href=&quot;names#typeconstr-name&quot;&gt;typeconstr-name&lt;/a&gt;:=&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fc1784cb91fb00ef9c34f8bb76e2a5d3fe2545" translate="yes" xml:space="preserve">
          <source>type [nonrec] &lt;a href=&quot;#typedef&quot;&gt;typedef&lt;/a&gt; { and&lt;a href=&quot;#typedef&quot;&gt;typedef&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57adbde71429317a4db0ab6f601bab4cb4fb8401" translate="yes" xml:space="preserve">
          <source>type constructors (&lt;a href=&quot;#typeconstr-name&quot;&gt;typeconstr-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941f472fa43d7f96dc99e8196c5d94838cc27226" translate="yes" xml:space="preserve">
          <source>type socket_domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af523fa3e8e48f02ae871ac52d6192a2d88094fc" translate="yes" xml:space="preserve">
          <source>type, &lt;a href=&quot;typedecl#hevea_manual.kwd92&quot;&gt;7.8.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd148&quot;&gt;7.9.5&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd157&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd167&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd171&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd173&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd185&quot;&gt;7.11&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd195&quot;&gt;7.11.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd199&quot;&gt;7.11.2&lt;/a&gt;, &lt;a href=&quot;modules#hevea_manual.kwd201&quot;&gt;7.11.2&lt;/a&gt;, &lt;a href=&quot;locallyabstract#hevea_manual.kwd210&quot;&gt;8.4&lt;/a&gt;, &lt;a href=&quot;moduletypeof#hevea_manual.kwd217&quot;&gt;8.6&lt;/a&gt;, &lt;a href=&quot;signaturesubstitution#hevea_manual.kwd222&quot;&gt;8.7&lt;/a&gt;, &lt;a href=&quot;gadts#hevea_manual.kwd225&quot;&gt;8.10&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc40a669554c9e099c65f8e65c140e8fe7f92a50" translate="yes" xml:space="preserve">
          <source>type-constraint</source>
          <target state="translated">type-constraint</target>
        </trans-unit>
        <trans-unit id="1f22f42bd7d249558427d64c200cbd5954202d93" translate="yes" xml:space="preserve">
          <source>type-definition</source>
          <target state="translated">type-definition</target>
        </trans-unit>
        <trans-unit id="134b04108b3d68f2e5cfffabbf94b32d4c8e4882" translate="yes" xml:space="preserve">
          <source>type-equation</source>
          <target state="translated">type-equation</target>
        </trans-unit>
        <trans-unit id="b02f944615d4b99db2807759d7927f92d05bd1c8" translate="yes" xml:space="preserve">
          <source>type-extension-def</source>
          <target state="translated">type-extension-def</target>
        </trans-unit>
        <trans-unit id="d9fb9e466ed6c87c555f90c3f3715abce5c473ed" translate="yes" xml:space="preserve">
          <source>type-extension-spec</source>
          <target state="translated">type-extension-spec</target>
        </trans-unit>
        <trans-unit id="118e9a92122d86cb5b7e3720492df10da78540d7" translate="yes" xml:space="preserve">
          <source>type-information</source>
          <target state="translated">type-information</target>
        </trans-unit>
        <trans-unit id="6de056bf33c927fbf6906704335ee3b1614e66ec" translate="yes" xml:space="preserve">
          <source>type-param</source>
          <target state="translated">type-param</target>
        </trans-unit>
        <trans-unit id="0ac49a96c4f568f7efa70d395eb42b4feec4c1f1" translate="yes" xml:space="preserve">
          <source>type-parameters</source>
          <target state="translated">type-parameters</target>
        </trans-unit>
        <trans-unit id="951a65558c64c74fb3e712e6ac5e9687fe17c2ea" translate="yes" xml:space="preserve">
          <source>type-params</source>
          <target state="translated">type-params</target>
        </trans-unit>
        <trans-unit id="13f4016b2daded5a581c7732a294233950b2c803" translate="yes" xml:space="preserve">
          <source>type-representation</source>
          <target state="translated">type-representation</target>
        </trans-unit>
        <trans-unit id="e9a10e13c49bb81f1ae069227011af40c2714494" translate="yes" xml:space="preserve">
          <source>type-subst</source>
          <target state="translated">type-subst</target>
        </trans-unit>
        <trans-unit id="b5df65f621344e98b11c4cc86909abafec506808" translate="yes" xml:space="preserve">
          <source>type:</source>
          <target state="translated">type:</target>
        </trans-unit>
        <trans-unit id="1cfd088007e8d1fd73113c7d55489f5fa68a6c7b" translate="yes" xml:space="preserve">
          <source>type&lt;a href=&quot;#type-subst&quot;&gt;type-subst&lt;/a&gt; { and&lt;a href=&quot;#type-subst&quot;&gt;type-subst&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c971fc44c56dc322dbce17e8f28a43f0ef8ce10" translate="yes" xml:space="preserve">
          <source>type&lt;a href=&quot;names#typeconstr&quot;&gt;typeconstr&lt;/a&gt;=&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="translated">type&lt;a href=&quot;names#typeconstr&quot;&gt;typeconstr&lt;/a&gt;=&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ec367692e11ac178aa443bcb1551f8101a80cbc" translate="yes" xml:space="preserve">
          <source>typeconstr</source>
          <target state="translated">typeconstr</target>
        </trans-unit>
        <trans-unit id="d56776d64de8759b33fbd6156442aa023721d252" translate="yes" xml:space="preserve">
          <source>typeconstr-name</source>
          <target state="translated">typeconstr-name</target>
        </trans-unit>
        <trans-unit id="6dc2082b65ff3a9aefc09caca29756531dea041a" translate="yes" xml:space="preserve">
          <source>typedef</source>
          <target state="translated">typedef</target>
        </trans-unit>
        <trans-unit id="6982e13065c22c113645b3a0208416d6be7f686b" translate="yes" xml:space="preserve">
          <source>typeset the given string as is; special characters (&amp;rsquo;{&amp;rsquo;, &amp;rsquo;}&amp;rsquo;, &amp;rsquo;[&amp;rsquo;, &amp;rsquo;]&amp;rsquo; and &amp;rsquo;@&amp;rsquo;) must be escaped by a &amp;rsquo;\&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b24f40013c26793ea520c8c76a4e4bbb1701b92" translate="yes" xml:space="preserve">
          <source>typexpr</source>
          <target state="translated">typexpr</target>
        </trans-unit>
        <trans-unit id="bb0088e38a034140a9aabafbccafb339834d51d4" translate="yes" xml:space="preserve">
          <source>uintnat (*deserialize)(void * dst)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b824f445e8d64ec6f262547c18a3ab02a6fd22c" translate="yes" xml:space="preserve">
          <source>umask</source>
          <target state="translated">umask</target>
        </trans-unit>
        <trans-unit id="7a2c2239b70e4e4ffcb0783ce1c391f9f04c4af8" translate="yes" xml:space="preserve">
          <source>unit-implementation</source>
          <target state="translated">unit-implementation</target>
        </trans-unit>
        <trans-unit id="d2cb1c39bf3d00e2dfb2c79364c3d7d98ab151ec" translate="yes" xml:space="preserve">
          <source>unit-interface</source>
          <target state="translated">unit-interface</target>
        </trans-unit>
        <trans-unit id="5f63ae83d15d29f7c5e3df488b1181d4fe7c845e" translate="yes" xml:space="preserve">
          <source>unrolling once at the call site fact 4 produces (with the body of fact unchanged):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0981575717dbfcb26ab6cea3556662d080a4a49" translate="yes" xml:space="preserve">
          <source>up [count]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117ec720ea4b96702ba69fad917ef776ef5efe4e" translate="yes" xml:space="preserve">
          <source>uppercase</source>
          <target state="translated">uppercase</target>
        </trans-unit>
        <trans-unit id="dcd490061ad0a8126efb7b9257f00689abadf644" translate="yes" xml:space="preserve">
          <source>uppercase-letter</source>
          <target state="translated">uppercase-letter</target>
        </trans-unit>
        <trans-unit id="5574b76599397c25622cfcd3ed20c448c77cbe86" translate="yes" xml:space="preserve">
          <source>use heuristics to enable colors only if the output supports them (an ANSI-compatible tty terminal);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14cbef7ff25c11a63e5af4e4074c447975f756b6" translate="yes" xml:space="preserve">
          <source>use simple break hints as obtained by &lt;code&gt;print_cut&amp;nbsp;()&lt;/code&gt; that outputs a simple break hint, or by &lt;code&gt;print_space&amp;nbsp;()&lt;/code&gt; that outputs a space indicating a break hint;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148d3d6f55738c67976a7b4d28d83b1c61e40e6c" translate="yes" xml:space="preserve">
          <source>use simple pretty-printing boxes (as obtained by &lt;code&gt;open_box&amp;nbsp;0&lt;/code&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbd13cd0fe77d0ed7a3a2b1a43691b14b6d6c39" translate="yes" xml:space="preserve">
          <source>users of the library can simply link with mylib.cma:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a38d8cbd20d9932ba948efaa364bb62651d5ad4" translate="yes" xml:space="preserve">
          <source>v</source>
          <target state="translated">v</target>
        </trans-unit>
        <trans-unit id="29b3667ff7d69912ca8ae59793755785c507b602" translate="yes" xml:space="preserve">
          <source>val [mutable] &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] =&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944ab829485add74a6682c6065dc7ab6cec72480" translate="yes" xml:space="preserve">
          <source>val [mutable] [virtual] &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febbb3ab70913d5d92d33a38a9b83be14600faa6" translate="yes" xml:space="preserve">
          <source>val [mutable] virtual&lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9dde004271a974bd2641a5db0b7bba27c02941" translate="yes" xml:space="preserve">
          <source>val! [mutable] &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] =&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5edb0ac3f5dd8298bd8c785cf01ad81ff4a3e9" translate="yes" xml:space="preserve">
          <source>val, &lt;a href=&quot;classes#hevea_manual.kwd104&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd111&quot;&gt;7.9.1&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd125&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd133&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;classes#hevea_manual.kwd135&quot;&gt;7.9.2&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd155&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd165&quot;&gt;7.10.2&lt;/a&gt;, &lt;a href=&quot;firstclassmodules#hevea_manual.kwd213&quot;&gt;8.5&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbed835fc625d745a29e4bcfb8efe2be86ffd35" translate="yes" xml:space="preserve">
          <source>val:</source>
          <target state="translated">val:</target>
        </trans-unit>
        <trans-unit id="d53e1ddfd7fd1ac40d5a6baf4c69f26cd6fa02cf" translate="yes" xml:space="preserve">
          <source>val&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="translated">val&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="791e11372a0c8d62bfc31460994dbca6ef272d41" translate="yes" xml:space="preserve">
          <source>val&lt;a href=&quot;names#value-name&quot;&gt;value-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt; { &lt;a href=&quot;#item-attribute&quot;&gt;item-attribute&lt;/a&gt; }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32b67c7e26342af42efabc674d441dca0a281c5" translate="yes" xml:space="preserve">
          <source>value</source>
          <target state="translated">value</target>
        </trans-unit>
        <trans-unit id="487d3a76feab316ffdb6bf7f5bce40afc80ecc4e" translate="yes" xml:space="preserve">
          <source>value caml_copy_string_of_os(char_os *) allocates an OCaml string with contents equal to the argument string converted to the OCaml encoding. This function is essentially equivalent to caml_stat_strdup_of_os followed by caml_copy_string, except that it avoids the allocation of the intermediate string returned by caml_stat_strdup_of_os. Under Unix, it is equivalent to caml_copy_string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a105530c31a0302a1d3cc82013e49a735e517f" translate="yes" xml:space="preserve">
          <source>value constructors and exception constructors (class &lt;a href=&quot;#constr-name&quot;&gt;constr-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af91d56e80aa944e31f339c27ec3958dc3aa204" translate="yes" xml:space="preserve">
          <source>value names (syntactic class &lt;a href=&quot;#value-name&quot;&gt;value-name&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfe69dc23292720cf2ab43cfb76b0672c611285" translate="yes" xml:space="preserve">
          <source>value-name</source>
          <target state="translated">value-name</target>
        </trans-unit>
        <trans-unit id="8cff6eba7c252a8e2948257a320e820666ddbf2e" translate="yes" xml:space="preserve">
          <source>value-path</source>
          <target state="translated">value-path</target>
        </trans-unit>
        <trans-unit id="d960ac57e06736a0be46491cbf048c446f761e27" translate="yes" xml:space="preserve">
          <source>valvirtualmutable&lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="translated">valvirtualmutable&lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e596b996f92d68200dc2e4a9011b6707b07b0ea0" translate="yes" xml:space="preserve">
          <source>variance</source>
          <target state="translated">variance</target>
        </trans-unit>
        <trans-unit id="0d86e6efcd5042fb65510a3dc4ea6db49423e27a" translate="yes" xml:space="preserve">
          <source>variant constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6949aa2edf6f6f08ede955e0fcacde057b0c60bb" translate="yes" xml:space="preserve">
          <source>virtual, see val, method, class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b65af586c4417ca0027ffbc53baf186cc6ccd2" translate="yes" xml:space="preserve">
          <source>void (*finalize)(value v)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e2b902fd563b10ba488c3f96caed04c4171f71" translate="yes" xml:space="preserve">
          <source>void (*serialize)(value v, uintnat * bsize_32, uintnat * bsize_64)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaad336276d15594d0e765f96c17cd746bf4971" translate="yes" xml:space="preserve">
          <source>wait</source>
          <target state="translated">wait</target>
        </trans-unit>
        <trans-unit id="2adada1e71a33f071825f68863aa78076956f91c" translate="yes" xml:space="preserve">
          <source>waitpid</source>
          <target state="translated">waitpid</target>
        </trans-unit>
        <trans-unit id="715f78a20ef2734b18b78afedb64c3e479d09bc8" translate="yes" xml:space="preserve">
          <source>warnings 1, 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24095efd977ef83fd1b5357602292a3372fd9dca" translate="yes" xml:space="preserve">
          <source>warnings 11, 12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c81e3bab8b9225199d1017019f84040c34f5744" translate="yes" xml:space="preserve">
          <source>warnings 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8949fc0dcce5bb706fd18834ec6ad6fc4fc6797d" translate="yes" xml:space="preserve">
          <source>warnings 32, 33, 34, 35, 36, 37, 38, 39.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ba4c70a8905ecb88077bd922e70ca2afe26f3c" translate="yes" xml:space="preserve">
          <source>when possible, allows useful partial applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d43429e8546d3b597b573fc23b0645a0c2c2b49" translate="yes" xml:space="preserve">
          <source>when the material for a pretty-printing box has been printed, call &lt;code&gt;close_box&amp;nbsp;()&lt;/code&gt; to close the box;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227e0fbfa0a93149ccbd42195c1b01b6ed56a01f" translate="yes" xml:space="preserve">
          <source>when, &lt;a href=&quot;expr#hevea_manual.kwd40&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;expr#hevea_manual.kwd62&quot;&gt;7.7.2&lt;/a&gt;, &lt;a href=&quot;attributes#hevea_manual.kwd227&quot;&gt;8.12&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc65e34de1a64f690eeac41aff9805dd710c7692" translate="yes" xml:space="preserve">
          <source>where (let*) is bound to the bind operation, and (and*) is also bound to the monoidal product operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7375fe375560ca41b42ad6b70bad7dc71d3ca6" translate="yes" xml:space="preserve">
          <source>where (let+) is bound to the map operation and (and+) is bound to the monoidal product operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bed3bc542925e9b1f6bdd8ff3c917e547c1b66" translate="yes" xml:space="preserve">
          <source>where *.mli *.ml expands to all source files in the current directory and .depend is the file that should contain the dependencies. (See below for a typical Makefile.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9c37904983908415c0a68f1e981d19b839b68b" translate="yes" xml:space="preserve">
          <source>where &lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt; is a fresh variable, except that it is unspecified when &lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;0&lt;/sub&gt; is evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26c9464bab3d3bfe54cba3d6d906f2d09900282" translate="yes" xml:space="preserve">
          <source>where Module1, &amp;hellip;, ModuleN are the names of the compilation units referenced within the file filename, but these names are not resolved to source file names. Such raw dependencies cannot be used by make, but can be post-processed by other tools such as Omake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cdacead91f7a9620b7b5345171147fa564f8f5" translate="yes" xml:space="preserve">
          <source>where c&lt;sub&gt;1&lt;/sub&gt;, c&lt;sub&gt;2&lt;/sub&gt;, &amp;hellip;, c&lt;sub&gt;n&lt;/sub&gt; are the characters that occur between c and d in the ASCII character set. For instance, the pattern '0'..'9' matches all characters that are digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230823145e66664ad50807459b76a9ee4784779a" translate="yes" xml:space="preserve">
          <source>where name&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; name&lt;sub&gt;n&lt;/sub&gt; are the names of the other compilation units available in the search path (see chapter &lt;a href=&quot;comp#c%3Acamlc&quot;&gt;9&lt;/a&gt; for more details) and &lt;a href=&quot;modtypes#specification&quot;&gt;specification&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; &lt;a href=&quot;modtypes#specification&quot;&gt;specification&lt;/a&gt;&lt;sub&gt;n&lt;/sub&gt; are their respective interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0111be8edec79ef1a5ed409da3448a0bdb139358" translate="yes" xml:space="preserve">
          <source>where the first argument is the continuation which captures the processing ocamllex would usually perform (refilling the buffer, then calling the lexing function again), and the result type that instantiates [&amp;rsquo;a] should unify with the result type of all lexing rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c36892eab13427fa58ca045328abc2e1a01434" translate="yes" xml:space="preserve">
          <source>which binds name&lt;sub&gt;1&lt;/sub&gt; to the cyclic list 1::2::1::2::&amp;hellip;, and name&lt;sub&gt;2&lt;/sub&gt; to the cyclic list 2::1::2::1::&amp;hellip;Informally, the class of accepted definitions consists of those definitions where the defined names occur only inside function bodies or as argument to a data constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a10cb50c25a9ced0107e459a89034b87e9e922" translate="yes" xml:space="preserve">
          <source>which breaks in OCaml &amp;ge; 4.10, you should include the minor_gc header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d561af8c9e8b6392513c4423ae94126f62239aa" translate="yes" xml:space="preserve">
          <source>which is called when an index literals contain a semicolon separated list of expressions with two and more elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c6ac4120301d7049af98011b0e572414db64b0" translate="yes" xml:space="preserve">
          <source>which is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80966fa071c90c9cb601c4213404ba8769b64286" translate="yes" xml:space="preserve">
          <source>which is equivalent to this expanded form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b673c6873e35d78a487d5303d294f4abcf56b2ef" translate="yes" xml:space="preserve">
          <source>which may be a shrinkable type, is a subtype of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9153e1e18f5334bc86e2d75720d27fb2cbe6420e" translate="yes" xml:space="preserve">
          <source>which may be an extensible type, if every &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&lt;sub&gt;i&lt;/sub&gt; is a subtype of &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&amp;prime;&lt;sub&gt;i&lt;/sub&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca4af5ec2cb4358258532f4f794a686264f6b04" translate="yes" xml:space="preserve">
          <source>which may contain an ellipsis .. if every &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&lt;sub&gt;i&lt;/sub&gt; is a supertype of the corresponding &lt;a href=&quot;types#typexpr&quot;&gt;typ&lt;/a&gt;&amp;prime;&lt;sub&gt;i&lt;/sub&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95bced2ad79641b5fd9fddf6482fb059ef66d877" translate="yes" xml:space="preserve">
          <source>while, &lt;a href=&quot;expr#hevea_manual.kwd67&quot;&gt;7.7.3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9c2e0230df49d38ce9812031b89f6d6b929a0b" translate="yes" xml:space="preserve">
          <source>while, for loops: a count point is set at the beginning of the loop body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6465e8ad01ac1db0e8dbd0bd554307e0107c5277" translate="yes" xml:space="preserve">
          <source>while&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;do&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;done</source>
          <target state="translated">while&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;do&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;done</target>
        </trans-unit>
        <trans-unit id="d5b7cd1437968a1f475adf581f130242d9d38ac8" translate="yes" xml:space="preserve">
          <source>whilst:</source>
          <target state="translated">whilst:</target>
        </trans-unit>
        <trans-unit id="f456192f39662bdb92c7cf283301451aa7229935" translate="yes" xml:space="preserve">
          <source>will be converted directly to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67803ac11d1ac14539ea7fa73c0f118790c4d755" translate="yes" xml:space="preserve">
          <source>will be converted to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee862a2fd17873de2302f857351d576808ee06f" translate="yes" xml:space="preserve">
          <source>will keep those new fields abstract. Construction of values of type [u] is possible using the known variants of [t], but any pattern-matching will require a default case to handle the potential extra fields. Dually, a declaration [u] may restrict the fields of [t] through abstraction: the declaration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">with</target>
        </trans-unit>
        <trans-unit id="26d2ed84d41b06caf683fa5abe45f33fd29848f2" translate="yes" xml:space="preserve">
          <source>with an extra type variable capturing the open object type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bebdbfff69b0b612b7983e2209ea8681d43c31" translate="yes" xml:space="preserve">
          <source>with, &lt;a href=&quot;expr#hevea_manual.kwd27&quot;&gt;7.7&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd153&quot;&gt;7.10&lt;/a&gt;, &lt;a href=&quot;modtypes#hevea_manual.kwd178&quot;&gt;7.10.4&lt;/a&gt;, &lt;a href=&quot;firstclassmodules#hevea_manual.kwd214&quot;&gt;8.5&lt;/a&gt;, &lt;a href=&quot;signaturesubstitution#hevea_manual.kwd220&quot;&gt;8.7&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70383bf107a0cb20da30eca8dcb4b8f6a2705740" translate="yes" xml:space="preserve">
          <source>within a &lt;em&gt;compacting&lt;/em&gt; box, a break hint never splits the line, unless there is no more room on the current line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61401227a747398a1083ea114933af26741b2820" translate="yes" xml:space="preserve">
          <source>within a &lt;em&gt;vertical&lt;/em&gt; box, break hints always split the line,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3b50890089be45ca65e33936ded3d666712963" translate="yes" xml:space="preserve">
          <source>within an &lt;em&gt;horizontal/vertical&lt;/em&gt; box, if the box fits on the current line then break hints never split the line, otherwise break hint always split the line,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de12a28d7bbb82235a6a118c5444c70f119c667" translate="yes" xml:space="preserve">
          <source>within an &lt;em&gt;horizontal&lt;/em&gt; box, break hints never split the line (but the line may be split in a box nested deeper),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbe5db2d326ed86d7dad3132ca18eca776c8c1c" translate="yes" xml:space="preserve">
          <source>works exactly as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d0c6c1c29e6ad5164072a5b21340dca7fcb052" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="translated">write</target>
        </trans-unit>
        <trans-unit id="edb0f5b1f639a3886e3180c47fe86c3a6a263842" translate="yes" xml:space="preserve">
          <source>yields</source>
          <target state="translated">yields</target>
        </trans-unit>
        <trans-unit id="47a14e01aae21050f2554cbef6cf4aaab38c5345" translate="yes" xml:space="preserve">
          <source>yields a compilation error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0327e79f381718451039ff741b1e6a4bee55bd20" translate="yes" xml:space="preserve">
          <source>yourself, if this is what you wish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca3153cc45a1ef5f0c433e287acf1380a9c5fe7" translate="yes" xml:space="preserve">
          <source>{ '&lt;a href=&quot;lex#ident&quot;&gt;ident&lt;/a&gt; }&lt;sup&gt;+&lt;/sup&gt;.&lt;a href=&quot;#typexpr&quot;&gt;typexpr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231d672cf1d46fae367ae78b7961a5cc69927e2f" translate="yes" xml:space="preserve">
          <source>{ &lt;a href=&quot;lex#capitalized-ident&quot;&gt;capitalized-ident&lt;/a&gt;. } &lt;a href=&quot;lex#lowercase-ident&quot;&gt;lowercase-ident&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da720fc77c2ffcf64e0bc0102c57d40974224c8" translate="yes" xml:space="preserve">
          <source>{ &lt;a href=&quot;modtypes#specification&quot;&gt;specification&lt;/a&gt; [;;] }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf1862bf04de832469eea4f288d28c6fffa55fc" translate="yes" xml:space="preserve">
          <source>{ &lt;a href=&quot;modules#definition&quot;&gt;definition&lt;/a&gt; }&lt;sup&gt;+&lt;/sup&gt;;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c3713457346c55f240eb94ef1eeba11eca1b62" translate="yes" xml:space="preserve">
          <source>{ a...z ∣ _ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f096e65d68a3de49aaf16a7332aaa6ccac69ab3b" translate="yes" xml:space="preserve">
          <source>{ { 0 &amp;hellip; 9 }&lt;sup&gt;+&lt;/sup&gt;:label&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e76b45ba626838219b8db9ca4a9903b5dcd3ce" translate="yes" xml:space="preserve">
          <source>{ { 0 &amp;hellip; 9 }&lt;sup&gt;+&lt;/sup&gt;&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33a661bed3a38116346c391ed411b10a78e2231" translate="yes" xml:space="preserve">
          <source>{ {-&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;} }&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa72a77a333e9d1c52bd72aec2dbed85ce92faa" translate="yes" xml:space="preserve">
          <source>{ {li&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;} }&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3b183fc543aac44f38249386d61ff9fb21635e" translate="yes" xml:space="preserve">
          <source>{!indexlist}</source>
          <target state="translated">{!indexlist}</target>
        </trans-unit>
        <trans-unit id="8d60ac733c2b0221d17520ecf20041414b8c28d7" translate="yes" xml:space="preserve">
          <source>{!modules:stringstring ... }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce4d0ff2a37aa427a6ddbbac9a857a0000badc3" translate="yes" xml:space="preserve">
          <source>{!string}</source>
          <target state="translated">{!string}</target>
        </trans-unit>
        <trans-unit id="ff5076583fcb4d630e924501e1b078ba9af0a1be" translate="yes" xml:space="preserve">
          <source>{%string%}</source>
          <target state="translated">{%string%}</target>
        </trans-unit>
        <trans-unit id="15647fe1c3addf1ebdd8818c5573eca5f230440b" translate="yes" xml:space="preserve">
          <source>{&amp;lt; [ &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt; [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] { ;&lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt; [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] } [;] ] &amp;gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8846e5ad0ae158fa6c32c6635d705f210bf6f3e" translate="yes" xml:space="preserve">
          <source>{&amp;lt; [ &lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt; { ;&lt;a href=&quot;names#inst-var-name&quot;&gt;inst-var-name&lt;/a&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt; } [;] ] &amp;gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4e8ca28fb70f43c273ace1982d60c0b301bc56" translate="yes" xml:space="preserve">
          <source>{;;} ( &lt;a href=&quot;#definition&quot;&gt;definition&lt;/a&gt; ∣ &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt; ) { {;;} ( &lt;a href=&quot;#definition&quot;&gt;definition&lt;/a&gt; ∣ ;;&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;) } {;;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e9dd41d09763f24c046992e9a861ece15d9342" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;with&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] { ;&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] } [;] }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2460fb5316280971dce69a7e478ea8a18f7f24fd" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;#field-decl&quot;&gt;field-decl&lt;/a&gt; { ;&lt;a href=&quot;#field-decl&quot;&gt;field-decl&lt;/a&gt; } [;] }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81eb41c2a2c70b717e06b2967856fc51fe833313" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;#quoted-string-id&quot;&gt;quoted-string-id&lt;/a&gt;| { any-char } |&lt;a href=&quot;#quoted-string-id&quot;&gt;quoted-string-id&lt;/a&gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ed375baa2473263c500b59f5326efc0e4e552e" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;#text-element&quot;&gt;text-element&lt;/a&gt;}&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="translated">{&lt;a href=&quot;#text-element&quot;&gt;text-element&lt;/a&gt;}&lt;sup&gt;+&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d93137cba66e04d428f393a9fb1e5fccd067247a" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;with&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt;&lt;sub&gt;2&lt;/sub&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;2&lt;/sub&gt;; &amp;hellip; ;&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt; = &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt;} where &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt; is not immediately linked to name&lt;sub&gt;1&lt;/sub&gt; &amp;hellip; name&lt;sub&gt;n&lt;/sub&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79decd7d20f72c88753d94b9dfff2c63ad6816b3" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] { ;&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;] } [;] }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33dd188d7253414b4c62a1d7f9ef1ca351f8352b" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#pattern&quot;&gt;pattern&lt;/a&gt;] { ;&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] [=&lt;a href=&quot;#pattern&quot;&gt;pattern&lt;/a&gt;] } [;_ ] [ ; ] }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca2f9f607f94b285079cf3009a46f969c6dc41a" translate="yes" xml:space="preserve">
          <source>{&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;=&lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;1&lt;/sub&gt;; &amp;hellip; ;&lt;a href=&quot;names#field&quot;&gt;field&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt; = &lt;a href=&quot;expr#expr&quot;&gt;expr&lt;/a&gt;&lt;sub&gt;m&lt;/sub&gt;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08959e04f1ddf135d01b3412d2702e9be204e3fe" translate="yes" xml:space="preserve">
          <source>{C&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{C&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="e53fb7a1725226ea67b050f6e24969ec7910fd39" translate="yes" xml:space="preserve">
          <source>{L&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{L&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="823b520f46fa3b6241badf6bf940281a82788ca7" translate="yes" xml:space="preserve">
          <source>{R&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{R&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="ff47d4221994d7b2317aab7dc289c35d49e10126" translate="yes" xml:space="preserve">
          <source>{[string]}</source>
          <target state="translated">{[string]}</target>
        </trans-unit>
        <trans-unit id="bcdd4c44b4ecc09f01c23272ae65f25e7267faa9" translate="yes" xml:space="preserve">
          <source>{^&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{^&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="bf28378c04de8461f1f3d9e5e5af58ad98594235" translate="yes" xml:space="preserve">
          <source>{_&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{_&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="d7bc48183069385cbfe2362e1c9f0ff697cf8236" translate="yes" xml:space="preserve">
          <source>{b&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{b&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="fcff94c8e94841629140275b5304b7a98820870e" translate="yes" xml:space="preserve">
          <source>{e&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{e&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="4c3ba072c7fab6d4c7c35f363dc40713e205bc1c" translate="yes" xml:space="preserve">
          <source>{i&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{i&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="c75c2b3635e88003576751f5fd36a93808124254" translate="yes" xml:space="preserve">
          <source>{ol&lt;a href=&quot;#list&quot;&gt;list&lt;/a&gt;}</source>
          <target state="translated">{ol&lt;a href=&quot;#list&quot;&gt;list&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="a864efaacbd838e4ea7cd9be744ce742f8c70639" translate="yes" xml:space="preserve">
          <source>{ul&lt;a href=&quot;#list&quot;&gt;list&lt;/a&gt;}</source>
          <target state="translated">{ul&lt;a href=&quot;#list&quot;&gt;list&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="d996bde91b4d94e2ec69d42fc55ee04757756297" translate="yes" xml:space="preserve">
          <source>{vstringv}</source>
          <target state="translated">{vstringv}</target>
        </trans-unit>
        <trans-unit id="e12bdd66a975e32cf918f8d103479977fd83faec" translate="yes" xml:space="preserve">
          <source>{{:string}&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</source>
          <target state="translated">{{:string}&lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt;}</target>
        </trans-unit>
        <trans-unit id="3eb416223e9e69e6bb8ee19793911ad1ad2027d8" translate="yes" xml:space="preserve">
          <source>|</source>
          <target state="translated">|</target>
        </trans-unit>
        <trans-unit id="1e58a74d27e6448dbe8f2210120ab66111f91165" translate="yes" xml:space="preserve">
          <source>|| or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f19707b0b2b1c6a0ba8e845acaea2b1621c3809" translate="yes" xml:space="preserve">
          <source>~ ∣ ! ∣ ? ∣ &lt;a href=&quot;#core-operator-char&quot;&gt;core-operator-char&lt;/a&gt; ∣ % ∣ &amp;lt; ∣ : ∣ .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e83ef2de28a3dcb15515342f4a174db71af65e3" translate="yes" xml:space="preserve">
          <source>~(&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt; [:&lt;a href=&quot;types#typexpr&quot;&gt;typexpr&lt;/a&gt;] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e71c19db9015057db8608d2b0ab1807090349c" translate="yes" xml:space="preserve">
          <source>~- - (prefix)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea9efb310621b84f78493b6949a5db98e46128f" translate="yes" xml:space="preserve">
          <source>~-. -. (prefix)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fe7d9129a18845b7176615721b1b4a3424c15e" translate="yes" xml:space="preserve">
          <source>~&lt;a href=&quot;#label-name&quot;&gt;label-name&lt;/a&gt;:</source>
          <target state="translated">~&lt;a href=&quot;#label-name&quot;&gt;label-name&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="5fceab0682136033432c69a4468caab0cf126eb9" translate="yes" xml:space="preserve">
          <source>~&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;</source>
          <target state="translated">~&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc467cba38b04ec4792ca80b043b8608cc96e5ba" translate="yes" xml:space="preserve">
          <source>~&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;:&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</source>
          <target state="translated">~&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;:&lt;a href=&quot;#expr&quot;&gt;expr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95ed9f458c8a0541d8dddd1165a52d6774a8388a" translate="yes" xml:space="preserve">
          <source>~&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;:&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;</source>
          <target state="translated">~&lt;a href=&quot;lex#label-name&quot;&gt;label-name&lt;/a&gt;:&lt;a href=&quot;patterns#pattern&quot;&gt;pattern&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02b4a8380d80c10ae04b24c080d2f9c890ce6453" translate="yes" xml:space="preserve">
          <source>∣</source>
          <target state="translated">∣</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
