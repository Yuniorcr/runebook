<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="cpp">
    <body>
      <group id="cpp">
        <trans-unit id="53eb135842e807fd564b356932c4d424ca10a468" translate="yes" xml:space="preserve">
          <source>high1</source>
          <target state="translated">high1</target>
        </trans-unit>
        <trans-unit id="3f2fe7fb2ccd61a15494a614759e45d3bc75ccbf" translate="yes" xml:space="preserve">
          <source>high2</source>
          <target state="translated">high2</target>
        </trans-unit>
        <trans-unit id="e8ffbb2fae82a95dadd0ab8932a1aabba13c1593" translate="yes" xml:space="preserve">
          <source>high_resolution_clock</source>
          <target state="translated">high_resolution_clock</target>
        </trans-unit>
        <trans-unit id="734c3c67dba099bc9f9d716c5b06aa5d84014b4f" translate="yes" xml:space="preserve">
          <source>hint</source>
          <target state="translated">hint</target>
        </trans-unit>
        <trans-unit id="4cc000ef5b20d5eff88a76b4d17c7886eee76f86" translate="yes" xml:space="preserve">
          <source>holds a platform-dependent error code</source>
          <target state="translated">содержит платформенно-зависимый код ошибки</target>
        </trans-unit>
        <trans-unit id="92d9f0055781132963f5cbb3e5885b454761e74f" translate="yes" xml:space="preserve">
          <source>holds a portable error code</source>
          <target state="translated">содержит переносной код ошибки</target>
        </trans-unit>
        <trans-unit id="3bc2a26376da43181b23e95d46201d85b9fa9b1c" translate="yes" xml:space="preserve">
          <source>holds the information needed by va_start, va_arg, va_end, and va_copy</source>
          <target state="translated">содержит информацию,необходимую для va_start,va_arg,va_end и va_copy.</target>
        </trans-unit>
        <trans-unit id="d3d50f14ab6cdc7aabb0395eae97177817305bee" translate="yes" xml:space="preserve">
          <source>holds_alternative</source>
          <target state="translated">holds_alternative</target>
        </trans-unit>
        <trans-unit id="840335b8f41f2168b82077c6520c948eb5434936" translate="yes" xml:space="preserve">
          <source>horizontal tab</source>
          <target state="translated">горизонтальная вкладка</target>
        </trans-unit>
        <trans-unit id="b492ee52d837af6b3c460403d6043003cde87967" translate="yes" xml:space="preserve">
          <source>horizontal tab (&lt;code&gt;0x09&lt;/code&gt;, &lt;code&gt;'\t'&lt;/code&gt;)</source>
          <target state="translated">горизонтальная вкладка ( &lt;code&gt;0x09&lt;/code&gt; , &lt;code&gt;'\t'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9b6ab7c209f54febadbb587a5f4b68e861a7a68a" translate="yes" xml:space="preserve">
          <source>hosted</source>
          <target state="translated">hosted</target>
        </trans-unit>
        <trans-unit id="5aedee0964c6b2b3fc2c57843d266e138c2f128a" translate="yes" xml:space="preserve">
          <source>hours</source>
          <target state="translated">hours</target>
        </trans-unit>
        <trans-unit id="29cc7be1b8d2db59f24ca5a259033b58f6d3a0e1" translate="yes" xml:space="preserve">
          <source>hours since midnight &amp;ndash; [0, 23]</source>
          <target state="translated">часы с полуночи - [0, 23]</target>
        </trans-unit>
        <trans-unit id="7736405fff788a91e7b759006ead5be3a50eb699" translate="yes" xml:space="preserve">
          <source>hoursminutessecondssubseconds</source>
          <target state="translated">hoursminutessecondssubseconds</target>
        </trans-unit>
        <trans-unit id="5d6f0f84fd7b29fe51acc1da1bfec8ba94cd04eb" translate="yes" xml:space="preserve">
          <source>however, this makes the class prone to slicing, which is why polymorphic classes often define copy as deleted (see &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#Rc-copy-virtual&quot;&gt;C.67: A polymorphic class should suppress copying&lt;/a&gt; in C++ Core Guidelines), which leads to the following generic wording for the Rule of Five:  &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#Rc-five&quot;&gt;C.21: If you define or =delete any default operation, define or =delete them all&lt;/a&gt;.</source>
          <target state="translated">однако это делает класс склонным к нарезке, поэтому полиморфные классы часто определяют копирование как удаленное (см. &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#Rc-copy-virtual&quot;&gt;C.67: полиморфный класс должен подавлять копирование&lt;/a&gt; в C ++ Core Guidelines), что приводит к следующей общей формулировке для Правила Пяти : &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#Rc-five&quot;&gt;C.21: Если вы определите или = удалить какую-либо операцию по умолчанию, определите или = удалите их все&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a23c4292a16bf3974bf6137dcc34339d7e0d0301" translate="yes" xml:space="preserve">
          <source>hrs</source>
          <target state="translated">hrs</target>
        </trans-unit>
        <trans-unit id="ce055a63f5c61d42269655c447cb8e0b84e7d4b6" translate="yes" xml:space="preserve">
          <source>hyperbolic tangent</source>
          <target state="translated">гиперболический тангенс</target>
        </trans-unit>
        <trans-unit id="3d1a119ffc5cdbc41ff93993183f87cbfe567049" translate="yes" xml:space="preserve">
          <source>hypothypotfhypotl</source>
          <target state="translated">hypothypotfhypotl</target>
        </trans-unit>
        <trans-unit id="042dc4512fa3d391c5170cf3aa61e6a638f84342" translate="yes" xml:space="preserve">
          <source>i</source>
          <target state="translated">i</target>
        </trans-unit>
        <trans-unit id="6acc9f2eacb7e29f7cd4b5c49008f0f144d4ec1b" translate="yes" xml:space="preserve">
          <source>i = unary_op(xmin + &amp;delta;/2 + i &amp;middot; &amp;delta;), where &amp;delta; =</source>
          <target state="translated">i = unary_op (xmin + &amp;delta; / 2 + i &amp;middot; &amp;delta;), где &amp;delta; =</target>
        </trans-unit>
        <trans-unit id="6f3c1dc76c3bc404b669714ed998cd98f9b0f398" translate="yes" xml:space="preserve">
          <source>i [ln(1 - iz) - ln (1 + iz)]</source>
          <target state="translated">i [ln(1-iz)-ln (1+iz)]</target>
        </trans-unit>
        <trans-unit id="89b39ff533410b077c62e9f84bc96c0b88daed01" translate="yes" xml:space="preserve">
          <source>i and the set of weights at boundaries w</source>
          <target state="translated">я и набор весов на границах w</target>
        </trans-unit>
        <trans-unit id="9cc8022bf567d68d3c604a220189b1c12a9304d7" translate="yes" xml:space="preserve">
          <source>i are the parameters of this distribution.</source>
          <target state="translated">Я-параметры этого распределения.</target>
        </trans-unit>
        <trans-unit id="ac4386cbdadbfa4e9ec38c3056d551d9ded67feb" translate="yes" xml:space="preserve">
          <source>i are zero, replacing X</source>
          <target state="translated">Я ноль,заменяю Х</target>
        </trans-unit>
        <trans-unit id="ad59d24ac1140eeb9274e6ca555946e2214e58b7" translate="yes" xml:space="preserve">
          <source>i is initialized to [f&amp;middot;(X</source>
          <target state="translated">я инициализируется в [f &amp;middot; (X</target>
        </trans-unit>
        <trans-unit id="3742284d66a2b21af18215a1c4552ef23042dda1" translate="yes" xml:space="preserve">
          <source>i of type &lt;code&gt;result_type&lt;/code&gt;) as follows: value mod 2w</source>
          <target state="translated">я типа &lt;code&gt;result_type&lt;/code&gt; ) следующим образом: значение mod 2w</target>
        </trans-unit>
        <trans-unit id="f1d61e05ea2addd1357c77b9615e323b00992d5a" translate="yes" xml:space="preserve">
          <source>i to (&amp;Sigma;k-1</source>
          <target state="translated">я к (&amp;Sigma;k-1</target>
        </trans-unit>
        <trans-unit id="07bc5b5e513ddc102cf23ed4d30a68c303eb3684" translate="yes" xml:space="preserve">
          <source>i!</source>
          <target state="translated">i!</target>
        </trans-unit>
        <trans-unit id="5ee28fe42658f80779a91d5bce36095265023b37" translate="yes" xml:space="preserve">
          <source>i&amp;le;x&amp;lt;b</source>
          <target state="translated">i&amp;le;x&amp;lt;b</target>
        </trans-unit>
        <trans-unit id="8f4345f1dded9146569944ab2f8622ec22d86b3b" translate="yes" xml:space="preserve">
          <source>i(e-iz</source>
          <target state="translated">i(e-iz</target>
        </trans-unit>
        <trans-unit id="0738a35d96f24e10285955e15749e6f27d02c52f" translate="yes" xml:space="preserve">
          <source>i)</source>
          <target state="translated">i)</target>
        </trans-unit>
        <trans-unit id="61a31d248f73e7b09cda86a3f7f540edbf79d258" translate="yes" xml:space="preserve">
          <source>i).</source>
          <target state="translated">i).</target>
        </trans-unit>
        <trans-unit id="d486769e211609dedccedb4783eeba8a6bb90cfa" translate="yes" xml:space="preserve">
          <source>i+1</source>
          <target state="translated">i+1</target>
        </trans-unit>
        <trans-unit id="3bfd92af59ceba0db970eb4aa442d133a5ed5000" translate="yes" xml:space="preserve">
          <source>i+1 &amp;larr; (ax</source>
          <target state="translated">я + 1 &amp;larr; (топор</target>
        </trans-unit>
        <trans-unit id="02015dc5e0c4e5a061b3893178736bf86a3c675d" translate="yes" xml:space="preserve">
          <source>i+1 - b</source>
          <target state="translated">i+1-b</target>
        </trans-unit>
        <trans-unit id="53703580e8283d509e82a79f250576e5860615b0" translate="yes" xml:space="preserve">
          <source>i+1 is</source>
          <target state="translated">i+1</target>
        </trans-unit>
        <trans-unit id="568730b592c1862890eebb685e24fb3efd58c32f" translate="yes" xml:space="preserve">
          <source>i+1 is p</source>
          <target state="translated">i+1-p</target>
        </trans-unit>
        <trans-unit id="a00e991df43c700bb0bd8e0f1dc2b74ebb94409d" translate="yes" xml:space="preserve">
          <source>i+1), each with its own weight w</source>
          <target state="translated">i+1),каждый со своим весом w</target>
        </trans-unit>
        <trans-unit id="780746d2b612c3e2bcb7f7fc7beddb5bee9a5bc0" translate="yes" xml:space="preserve">
          <source>i+1). The distribution is such that the probability density at each interval boundary is exactly the predefined value p</source>
          <target state="translated">i+1).Распределение таково,что плотность вероятности на границе каждого интервала в точности равна предопределенному значению p</target>
        </trans-unit>
        <trans-unit id="c19b6b9214ff01e3b37dd7954012bcc0175c77a6" translate="yes" xml:space="preserve">
          <source>i+1-b</source>
          <target state="translated">i+1-b</target>
        </trans-unit>
        <trans-unit id="44f06ac8ea9cdeafa57ee90d6cd54c0bfae91d78" translate="yes" xml:space="preserve">
          <source>i+1-x</source>
          <target state="translated">i+1-x</target>
        </trans-unit>
        <trans-unit id="7d19a786e53433009f140a2cd15b559d2fdaa781" translate="yes" xml:space="preserve">
          <source>i+c) mod m.</source>
          <target state="translated">i+c)мод.m.</target>
        </trans-unit>
        <trans-unit id="907ebf13a2a9151a7c53d6adf53605b14f1ba0e5" translate="yes" xml:space="preserve">
          <source>i, b</source>
          <target state="translated">я,б</target>
        </trans-unit>
        <trans-unit id="4b06ac12ce218befb3af45ced0be2ae0de7b7e96" translate="yes" xml:space="preserve">
          <source>i-1rshift(w-2)))+i mod n] mod 2w</source>
          <target state="translated">i-1rshift(w-2)))+i mod n]mod 2w</target>
        </trans-unit>
        <trans-unit id="da45e6c599d1b4b66e0d1d711952dc22f6c56dbe" translate="yes" xml:space="preserve">
          <source>i-1xor(X</source>
          <target state="translated">i-1xor(X</target>
        </trans-unit>
        <trans-unit id="785437b7668e56e9053df2fa45abe483dd9c5a5e" translate="yes" xml:space="preserve">
          <source>i.  The probability density for any b.</source>
          <target state="translated">i.Плотность вероятности для любого b.</target>
        </trans-unit>
        <trans-unit id="5c93f819e3c9b976f794a85d4dea0abd101cc7bb" translate="yes" xml:space="preserve">
          <source>i. The set of interval boundaries and the set of weights are the parameters of this distribution.  The probability density for any b.</source>
          <target state="translated">i.Параметрами данного распределения являются набор границ интервалов и набор весов.Плотность вероятности для любого b.</target>
        </trans-unit>
        <trans-unit id="8a2aca56c6ed20fb3103d932cea56d4baef2864e" translate="yes" xml:space="preserve">
          <source>i/S, that is the</source>
          <target state="translated">ай/с,то есть</target>
        </trans-unit>
        <trans-unit id="ab979d4b97cce777c6d17fc2cc95deed1605bc7e" translate="yes" xml:space="preserve">
          <source>i=0P</source>
          <target state="translated">i=0P</target>
        </trans-unit>
        <trans-unit id="14a30d1f4ee4e61b953b030089ae2e550c067f4d" translate="yes" xml:space="preserve">
          <source>icase</source>
          <target state="translated">icase</target>
        </trans-unit>
        <trans-unit id="87ea5dfc8b8e384d848979496e706390b497e547" translate="yes" xml:space="preserve">
          <source>id</source>
          <target state="translated">id</target>
        </trans-unit>
        <trans-unit id="cb926e318c668204b1a5cdf025644e3079509efb" translate="yes" xml:space="preserve">
          <source>id-expression</source>
          <target state="translated">id-expression</target>
        </trans-unit>
        <trans-unit id="d3f2311914ceec55ab66ec44608900bd1580bdf1" translate="yes" xml:space="preserve">
          <source>identical</source>
          <target state="translated">identical</target>
        </trans-unit>
        <trans-unit id="fae9fd39301eb7e657d4dad32a828cda5d7399e5" translate="yes" xml:space="preserve">
          <source>identifier</source>
          <target state="translated">identifier</target>
        </trans-unit>
        <trans-unit id="f785bf1ca8e12f5745333050ac38ca6be38b2ca1" translate="yes" xml:space="preserve">
          <source>identifier of message catalog obtained from &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; and not yet passed to &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">идентификатор каталога сообщений, полученный из &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; и еще не переданный в &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="296601994b61de5f7ace18984cf2e907a827f20f" translate="yes" xml:space="preserve">
          <source>identifier(optional)attr(optional)&lt;code&gt;:&lt;/code&gt;size</source>
          <target state="translated">identifier(optional)attr(optional)&lt;code&gt;:&lt;/code&gt;size</target>
        </trans-unit>
        <trans-unit id="3823861296217ac3f02865bb5c57879df7bb649c" translate="yes" xml:space="preserve">
          <source>identifier(optional)attr(optional)&lt;code&gt;:&lt;/code&gt;sizebrace-or-equal-initializer</source>
          <target state="translated">identifier(optional)attr(optional)&lt;code&gt;:&lt;/code&gt;sizebrace-or-equal-initializer</target>
        </trans-unit>
        <trans-unit id="9cc31106287064197c4c64fc5c6a3a275de0ccf4" translate="yes" xml:space="preserve">
          <source>identifier-list</source>
          <target state="translated">identifier-list</target>
        </trans-unit>
        <trans-unit id="f2ae3bf2b78cbdced242fe9eeec34bc72f25c1ee" translate="yes" xml:space="preserve">
          <source>identifier&lt;code&gt;(&lt;/code&gt;argument-list&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">identifier&lt;code&gt;(&lt;/code&gt;argument-list&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98ccc7441f73bbc89dc7555e2e28a2ddba773d5a" translate="yes" xml:space="preserve">
          <source>identifier&lt;code&gt;...&lt;/code&gt;</source>
          <target state="translated">identifier&lt;code&gt;...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47563a12b2b93699ff07a4fb99c53a3b24a0638b" translate="yes" xml:space="preserve">
          <source>identifierinitializer</source>
          <target state="translated">identifierinitializer</target>
        </trans-unit>
        <trans-unit id="1a0b1a18d9ddfb4541f740031c8216bc2982e335" translate="yes" xml:space="preserve">
          <source>identifiers with special meaning</source>
          <target state="translated">идентификаторы особого значения</target>
        </trans-unit>
        <trans-unit id="2a93dd0f3e75265b38e251449d2cd3ab36b5804e" translate="yes" xml:space="preserve">
          <source>identifies a class as an error_code enumeration</source>
          <target state="translated">идентифицирует класс как перечисление error_code</target>
        </trans-unit>
        <trans-unit id="c80cdd928ea15db2823a67351b94b742cde46736" translate="yes" xml:space="preserve">
          <source>identifies a namespace</source>
          <target state="translated">идентифицирует пространство имён</target>
        </trans-unit>
        <trans-unit id="2a04f9443e263c090050be485a20d74537dc5a73" translate="yes" xml:space="preserve">
          <source>identifies an enumeration as an &lt;code&gt;&lt;a href=&quot;../error/error_condition&quot;&gt;std::error_condition&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">идентифицирует перечисление как &lt;code&gt;&lt;a href=&quot;../error/error_condition&quot;&gt;std::error_condition&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8fb7cffb4a4e9b0dcd89f7eb0676238df48375fd" translate="yes" xml:space="preserve">
          <source>identifies an enumeration as an &lt;code&gt;&lt;a href=&quot;../error_condition&quot;&gt;std::error_condition&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">идентифицирует перечисление как &lt;code&gt;&lt;a href=&quot;../error_condition&quot;&gt;std::error_condition&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22801ddda4db0ee4a79330d239b8ea9ab278e802" translate="yes" xml:space="preserve">
          <source>identifies an enumeration as an &lt;code&gt;std::error_condition&lt;/code&gt;</source>
          <target state="translated">идентифицирует перечисление как &lt;code&gt;std::error_condition&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="372635360a16d12ac0b744958ea66c720dd8c494" translate="yes" xml:space="preserve">
          <source>identifies exact types</source>
          <target state="translated">определяет точные типы</target>
        </trans-unit>
        <trans-unit id="abdb555e2de5822091f2ac2fd449dcd473e9c493" translate="yes" xml:space="preserve">
          <source>identifies file system permissions</source>
          <target state="translated">разрешения файловой системы</target>
        </trans-unit>
        <trans-unit id="f04a02d01344ffd21e67b4fd56e2d8718d04ef91" translate="yes" xml:space="preserve">
          <source>identifies floating-point types that can represent the special value &quot;positive infinity&quot;</source>
          <target state="translated">идентифицирует типы с плавающей точкой,которые могут представлять собой специальное значение &quot;положительная бесконечность&quot;.</target>
        </trans-unit>
        <trans-unit id="70581ad4239cc848e9500c9826ab3887250a4787" translate="yes" xml:space="preserve">
          <source>identifies floating-point types that can represent the special value &quot;quiet not-a-number&quot; (NaN)</source>
          <target state="translated">идентифицирует типы с плавающей точкой,которые могут представлять собой специальное значение &quot;тихий не-а-нумер&quot; (NaN)</target>
        </trans-unit>
        <trans-unit id="813fe0681b30238edc66359fc5035f0bcc309fdb" translate="yes" xml:space="preserve">
          <source>identifies floating-point types that can represent the special value &quot;signaling not-a-number&quot; (NaN)</source>
          <target state="translated">идентифицирует типы с плавающей запятой,которые могут представлять собой специальное значение &quot;signaling not-a-number&quot; (NaN).</target>
        </trans-unit>
        <trans-unit id="ff83423c1873e71239713630f3f5086c2034639f" translate="yes" xml:space="preserve">
          <source>identifies floating-point types that detect tinyness before rounding</source>
          <target state="translated">определяет типы с плавающей точкой,которые обнаруживают оловянность до округления</target>
        </trans-unit>
        <trans-unit id="0fd29a63e0831a9fc0da5175edc06a3fbc28743d" translate="yes" xml:space="preserve">
          <source>identifies integer types</source>
          <target state="translated">идентифицирует целочисленные типы</target>
        </trans-unit>
        <trans-unit id="a97dd318c576273e70920b424798a47e15ccab20" translate="yes" xml:space="preserve">
          <source>identifies one regular expression match, including all sub-expression matches</source>
          <target state="translated">определяет одно совпадение регулярных выражений,включая все подвыражения</target>
        </trans-unit>
        <trans-unit id="3090c85f374d9712fa2ad2c771e9a8df6aaa45b5" translate="yes" xml:space="preserve">
          <source>identifies signed types</source>
          <target state="translated">идентифицирует подписанные типы</target>
        </trans-unit>
        <trans-unit id="228f72a6bb1acc6fddeadba5fcad66385b871e0f" translate="yes" xml:space="preserve">
          <source>identifies the IEC 559/IEEE 754 floating-point types</source>
          <target state="translated">определяет типы плавающей запятой IEC 559/IEEE 754</target>
        </trans-unit>
        <trans-unit id="1915f00a3b14b88545a13a5f6408f8e8168aa518" translate="yes" xml:space="preserve">
          <source>identifies the category used by &lt;code&gt;&lt;a href=&quot;iswalnum&quot;&gt;std::iswalnum&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">определяет категорию, используемую &lt;code&gt;&lt;a href=&quot;iswalnum&quot;&gt;std::iswalnum&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12463e9d6cc6e53f2b5acccdca118232d8eb0ece" translate="yes" xml:space="preserve">
          <source>identifies the category used by &lt;code&gt;&lt;a href=&quot;iswalpha&quot;&gt;std::iswalpha&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">идентифицирует категорию, используемую &lt;code&gt;&lt;a href=&quot;iswalpha&quot;&gt;std::iswalpha&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a9caa1df8f680dd8321992bc23188c51fdab14c" translate="yes" xml:space="preserve">
          <source>identifies the category used by &lt;code&gt;&lt;a href=&quot;iswblank&quot;&gt;std::iswblank&lt;/a&gt;&lt;/code&gt;(C++11)</source>
          <target state="translated">определяет категорию, используемую &lt;code&gt;&lt;a href=&quot;iswblank&quot;&gt;std::iswblank&lt;/a&gt;&lt;/code&gt; (C ++ 11)</target>
        </trans-unit>
        <trans-unit id="835ad88c1598d47a1fcd75070f97e1e3e2cc14bd" translate="yes" xml:space="preserve">
          <source>identifies the category used by &lt;code&gt;&lt;a href=&quot;iswcntrl&quot;&gt;std::iswcntrl&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">определяет категорию, используемую &lt;code&gt;&lt;a href=&quot;iswcntrl&quot;&gt;std::iswcntrl&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c078090f8ff6033cdd9db09bd3238a1a4957726e" translate="yes" xml:space="preserve">
          <source>identifies the category used by &lt;code&gt;&lt;a href=&quot;iswdigit&quot;&gt;std::iswdigit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">определяет категорию, используемую &lt;code&gt;&lt;a href=&quot;iswdigit&quot;&gt;std::iswdigit&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac5a35d8d6df546f7c622b244a3690b66ef7c89d" translate="yes" xml:space="preserve">
          <source>identifies the category used by &lt;code&gt;&lt;a href=&quot;iswgraph&quot;&gt;std::iswgraph&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">определяет категорию, используемую &lt;code&gt;&lt;a href=&quot;iswgraph&quot;&gt;std::iswgraph&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b5e3c5bca1c896307e09859648a7e4f57630201" translate="yes" xml:space="preserve">
          <source>identifies the category used by &lt;code&gt;&lt;a href=&quot;iswlower&quot;&gt;std::iswlower&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">идентифицирует категорию, используемую &lt;code&gt;&lt;a href=&quot;iswlower&quot;&gt;std::iswlower&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39219557d217763715ef525523135735d1ebc3af" translate="yes" xml:space="preserve">
          <source>identifies the category used by &lt;code&gt;&lt;a href=&quot;iswprint&quot;&gt;std::iswprint&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">определяет категорию, используемую &lt;code&gt;&lt;a href=&quot;iswprint&quot;&gt;std::iswprint&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cbbcba75b83d9e5611030a31bedf9a63c8399415" translate="yes" xml:space="preserve">
          <source>identifies the category used by &lt;code&gt;&lt;a href=&quot;iswspace&quot;&gt;std::iswspace&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">определяет категорию, используемую &lt;code&gt;&lt;a href=&quot;iswspace&quot;&gt;std::iswspace&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e965311c73fcb799ef9f73173c46806d8d9dfdf4" translate="yes" xml:space="preserve">
          <source>identifies the category used by &lt;code&gt;&lt;a href=&quot;iswupper&quot;&gt;std::iswupper&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">определяет категорию, используемую &lt;code&gt;&lt;a href=&quot;iswupper&quot;&gt;std::iswupper&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d6bc4bcae79d5129d4084e5c77d4f9ce811df684" translate="yes" xml:space="preserve">
          <source>identifies the category used by &lt;code&gt;&lt;a href=&quot;iswxdigit&quot;&gt;std::iswxdigit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">определяет категорию, используемую &lt;code&gt;&lt;a href=&quot;iswxdigit&quot;&gt;std::iswxdigit&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e2ca39e5491f8ef45ffc3ba15d54582a50ec3a2" translate="yes" xml:space="preserve">
          <source>identifies the denormalization style used by the floating-point type</source>
          <target state="translated">определяет стиль денормализации,используемый типом с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="2a88e9970872e86038a6fac2454393ce46d1f431" translate="yes" xml:space="preserve">
          <source>identifies the floating-point types that detect loss of precision as denormalization loss rather than inexact result</source>
          <target state="translated">идентифицирует типы с плавающей точкой,которые обнаруживают потерю точности как потери денормализации,а не как неточный результат</target>
        </trans-unit>
        <trans-unit id="d0302e8937e83618267cb1810149062a5f252921" translate="yes" xml:space="preserve">
          <source>identifies the future error category</source>
          <target state="translated">определяет будущую категорию ошибок</target>
        </trans-unit>
        <trans-unit id="88b0a4d283135555246c9be3cadf594f8382af91" translate="yes" xml:space="preserve">
          <source>identifies the future error codes</source>
          <target state="translated">определяет будущие коды ошибок</target>
        </trans-unit>
        <trans-unit id="65bc9036eeb52dccb18352610df11ff5850602d3" translate="yes" xml:space="preserve">
          <source>identifies the generic error category</source>
          <target state="translated">определяет категорию общей ошибки</target>
        </trans-unit>
        <trans-unit id="766899353eb0708df9d939d59ee6f35cc608c699" translate="yes" xml:space="preserve">
          <source>identifies the iostream error category</source>
          <target state="translated">определяет категорию ошибки iostream</target>
        </trans-unit>
        <trans-unit id="3fea36ea3d0784d9a273c1fee6000eec68161c4b" translate="yes" xml:space="preserve">
          <source>identifies the mapping used by &lt;code&gt;towlower&lt;/code&gt;</source>
          <target state="translated">идентифицирует отображение, используемое &lt;code&gt;towlower&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15de401caa1de09f312aa0b6a6bd1b24273d3fb7" translate="yes" xml:space="preserve">
          <source>identifies the mapping used by &lt;code&gt;towupper&lt;/code&gt;</source>
          <target state="translated">идентифицирует отображение, используемое &lt;code&gt;towupper&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a1544c910ca33d69ee0248fab4761791e38a136" translate="yes" xml:space="preserve">
          <source>identifies the operating system error category</source>
          <target state="translated">определяет категорию ошибок операционной системы</target>
        </trans-unit>
        <trans-unit id="a6ac7ea51f64b9a5e582d83f414af59c72f9aae4" translate="yes" xml:space="preserve">
          <source>identifies the rounding style used by the type</source>
          <target state="translated">определяет стиль округления,используемый данным типом</target>
        </trans-unit>
        <trans-unit id="a7fac1fe024006db2c41f0ce05a2dfca9a84dbf1" translate="yes" xml:space="preserve">
          <source>identifies the sequence of characters matched by a sub-expression</source>
          <target state="translated">определяет последовательность символов,совпадающую с подвыражением</target>
        </trans-unit>
        <trans-unit id="92cf961fbcae59a040961d7332569738ec3aaef2" translate="yes" xml:space="preserve">
          <source>identifies types for which &lt;code&gt;std::numeric_limits&lt;/code&gt; is specialized</source>
          <target state="translated">типы идентифицирует , для которых &lt;code&gt;std::numeric_limits&lt;/code&gt; специализирована</target>
        </trans-unit>
        <trans-unit id="88ae54ff22f5bc01b6f54a56b5fcc26b34ac68bf" translate="yes" xml:space="preserve">
          <source>identifies types that handle overflows with modulo arithmetic</source>
          <target state="translated">определяет типы,которые обрабатывают переполнения с помощью модульной арифметики</target>
        </trans-unit>
        <trans-unit id="be28538df885ef8f36fff93a54b7aea1d594137a" translate="yes" xml:space="preserve">
          <source>identifies types that represent a finite set of values</source>
          <target state="translated">определяет типы,которые представляют собой конечный набор значений</target>
        </trans-unit>
        <trans-unit id="18d941fd2dbbb28eaa5b92b61994406b86e0d976" translate="yes" xml:space="preserve">
          <source>identifies types which can cause arithmetic operations to trap</source>
          <target state="translated">определяет типы,которые могут привести к арифметическим операциям в ловушку</target>
        </trans-unit>
        <trans-unit id="1db089a9f84e14e95f11dcb5c57fa10d60aa84bb" translate="yes" xml:space="preserve">
          <source>identity</source>
          <target state="translated">identity</target>
        </trans-unit>
        <trans-unit id="336cd578bbcf490ae6933af4f3db0376e5b6d898" translate="yes" xml:space="preserve">
          <source>identity conversion</source>
          <target state="translated">преобразование личности</target>
        </trans-unit>
        <trans-unit id="4e7f626df794f6491574a236f22c100c34ed804f" translate="yes" xml:space="preserve">
          <source>idx</source>
          <target state="translated">idx</target>
        </trans-unit>
        <trans-unit id="bb2dee1cc00c0224bec54d043def082f7286ba23" translate="yes" xml:space="preserve">
          <source>iexp</source>
          <target state="translated">iexp</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="68e23283f8196c994d9bf4bc69def7b58bc91c88" translate="yes" xml:space="preserve">
          <source>if &lt;a href=&quot;../io/ios_base/iostate&quot;&gt;&lt;code&gt;eofbit&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../io/ios_base/iostate&quot;&gt;&lt;code&gt;badbit&lt;/code&gt;&lt;/a&gt; are set on the input stream, sets the &lt;code&gt;failbit&lt;/code&gt; as well, and if exceptions on failbit are enabled in this input stream's exception mask, throws &lt;a href=&quot;../io/ios_base/failure&quot;&gt;&lt;code&gt;ios_base::failure&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">если &lt;a href=&quot;../io/ios_base/iostate&quot;&gt; &lt;code&gt;eofbit&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../io/ios_base/iostate&quot;&gt; &lt;code&gt;badbit&lt;/code&gt; &lt;/a&gt; установлены во входном потоке, также устанавливает &lt;code&gt;failbit&lt;/code&gt; , и если исключения в failbit включены в маске исключений этого входного потока, выдает &lt;a href=&quot;../io/ios_base/failure&quot;&gt; &lt;code&gt;ios_base::failure&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d4e78c7727f292b99e1713de1f646e60d2456e4" translate="yes" xml:space="preserve">
          <source>if &lt;a href=&quot;../io/ios_base/iostate&quot;&gt;&lt;code&gt;eofbit&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../io/ios_base/iostate&quot;&gt;&lt;code&gt;badbit&lt;/code&gt;&lt;/a&gt; are set on the output stream, sets the &lt;code&gt;failbit&lt;/code&gt; as well, and if exceptions on failbit are enabled in this output stream's exception mask, throws &lt;a href=&quot;../io/ios_base/failure&quot;&gt;&lt;code&gt;ios_base::failure&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">если &lt;a href=&quot;../io/ios_base/iostate&quot;&gt; &lt;code&gt;eofbit&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../io/ios_base/iostate&quot;&gt; &lt;code&gt;badbit&lt;/code&gt; &lt;/a&gt; установлены в выходном потоке, также устанавливает &lt;code&gt;failbit&lt;/code&gt; , и если исключения в failbit включены в маске исключений этого выходного потока, выдает &lt;a href=&quot;../io/ios_base/failure&quot;&gt; &lt;code&gt;ios_base::failure&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7475e93cf8b9ed741ccfe68a4544e274eceee5f4" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;*this&lt;/code&gt; is the first instance created, initializes the default C++ streams</source>
          <target state="translated">если &lt;code&gt;*this&lt;/code&gt; первый созданный экземпляр, инициализируются потоки C ++ по умолчанию</target>
        </trans-unit>
        <trans-unit id="09515816e4a69506faac8f700ef653315d3f4f79" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;*this&lt;/code&gt; is the last instance destroyed, flushes the default C++ streams</source>
          <target state="translated">если &lt;code&gt;*this&lt;/code&gt; последний уничтоженный экземпляр, сбрасывает потоки C ++ по умолчанию</target>
        </trans-unit>
        <trans-unit id="7eb427674e797701b98f49b81ef1ca185219f236" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;&lt;a href=&quot;../basic_ios/rdbuf&quot;&gt;rdbuf()&lt;/a&gt;&lt;/code&gt; is a null pointer, returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">если &lt;code&gt;&lt;a href=&quot;../basic_ios/rdbuf&quot;&gt;rdbuf()&lt;/a&gt;&lt;/code&gt; - нулевой указатель, возвращает &lt;code&gt;-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ea6ef2f240c06f677b910e99161898a5182ddfd" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;&lt;a href=&quot;../numeric_limits&quot;&gt;std::numeric_limits&lt;/a&gt;&amp;lt;double&amp;gt;::is_iec559 == true&lt;/code&gt;</source>
          <target state="translated">if &lt;code&gt;&lt;a href=&quot;../numeric_limits&quot;&gt;std::numeric_limits&lt;/a&gt;&amp;lt;double&amp;gt;::is_iec559 == true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ecbfe57fee7a03ef094341065c886cd99f14aa5" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;&lt;a href=&quot;../numeric_limits&quot;&gt;std::numeric_limits&lt;/a&gt;&amp;lt;float&amp;gt;::is_iec559 == true&lt;/code&gt;</source>
          <target state="translated">if &lt;code&gt;&lt;a href=&quot;../numeric_limits&quot;&gt;std::numeric_limits&lt;/a&gt;&amp;lt;float&amp;gt;::is_iec559 == true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9eb67e862dd8287fad37ad0fef22c584815cc1d" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;CharT&lt;/code&gt; is &lt;code&gt;char&lt;/code&gt;, the following member of &lt;code&gt;std::ctype&amp;lt;char&amp;gt;&lt;/code&gt; is inherited</source>
          <target state="translated">если &lt;code&gt;CharT&lt;/code&gt; является &lt;code&gt;char&lt;/code&gt; , следующий член &lt;code&gt;std::ctype&amp;lt;char&amp;gt;&lt;/code&gt; наследуется</target>
        </trans-unit>
        <trans-unit id="c2617e13fbf4b136383cb40e10fa6e9096fe4141" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;CharT&lt;/code&gt; is &lt;code&gt;char&lt;/code&gt;, the following members of &lt;code&gt;&lt;a href=&quot;ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; are NOT inherited</source>
          <target state="translated">если &lt;code&gt;CharT&lt;/code&gt; является &lt;code&gt;char&lt;/code&gt; , следующие члены &lt;code&gt;&lt;a href=&quot;ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; НЕ наследуются</target>
        </trans-unit>
        <trans-unit id="54e5140ca97aaed6d382cc86ef94e209b762a065" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;CharT&lt;/code&gt; is &lt;code&gt;char&lt;/code&gt;, the following members of &lt;code&gt;std::ctype&amp;lt;char&amp;gt;&lt;/code&gt; are inherited</source>
          <target state="translated">если &lt;code&gt;CharT&lt;/code&gt; является &lt;code&gt;char&lt;/code&gt; , следующие члены &lt;code&gt;std::ctype&amp;lt;char&amp;gt;&lt;/code&gt; наследуются</target>
        </trans-unit>
        <trans-unit id="a231b9ec85d84dfed96eaacbbf5fe8eee2439faa" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;E1&lt;/code&gt; is an lvalue, the result is an lvalue designating that data member,</source>
          <target state="translated">если &lt;code&gt;E1&lt;/code&gt; является lvalue, результатом является lvalue, обозначающий этот элемент данных,</target>
        </trans-unit>
        <trans-unit id="4051b871bd932446f1a055597a588d2e40805ef3" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;E2&lt;/code&gt; is of reference type &lt;code&gt;T&amp;amp;&lt;/code&gt; or &lt;code&gt;T&amp;amp;&amp;amp;&lt;/code&gt;, the result is an lvalue of type &lt;code&gt;T&lt;/code&gt; designating the object or function to which &lt;code&gt;E2&lt;/code&gt; refers,</source>
          <target state="translated">если &lt;code&gt;E2&lt;/code&gt; имеет ссылочный тип &lt;code&gt;T&amp;amp;&lt;/code&gt; или &lt;code&gt;T&amp;amp;&amp;amp;&lt;/code&gt; , результатом является lvalue типа &lt;code&gt;T&lt;/code&gt; , обозначающее объект или функцию, к которой относится &lt;code&gt;E2&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="92f79d5b8ad467f4aa0587c45fef0364c43eb4ea" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;P&lt;/code&gt; is not a parameter pack, &lt;code&gt;E&lt;/code&gt; is simply &lt;code&gt;C&amp;lt;P&amp;gt;&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;P&lt;/code&gt; не является пакетом параметров, &lt;code&gt;E&lt;/code&gt; просто &lt;code&gt;C&amp;lt;P&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5db20c215d19b4a458b9cdf08fc9bb7062243b13" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;Q&lt;/code&gt; is &lt;code&gt;C&amp;lt;A1,A2...,AN&amp;gt;&lt;/code&gt;, then &lt;code&gt;E&lt;/code&gt; is &lt;code&gt;C&amp;lt;P,A1,A2,...AN&amp;gt;&lt;/code&gt; or &lt;code&gt;(C&amp;lt;P,A1,A2,...AN&amp;gt; &amp;amp;&amp;amp; ...)&lt;/code&gt;, respectively.</source>
          <target state="translated">если &lt;code&gt;Q&lt;/code&gt; является &lt;code&gt;C&amp;lt;A1,A2...,AN&amp;gt;&lt;/code&gt; , то &lt;code&gt;E&lt;/code&gt; является &lt;code&gt;C&amp;lt;P,A1,A2,...AN&amp;gt;&lt;/code&gt; или &lt;code&gt;(C&amp;lt;P,A1,A2,...AN&amp;gt; &amp;amp;&amp;amp; ...)&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="b4ef8ba02f34087b92b9c53fe2647766377b6483" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;Q&lt;/code&gt; is &lt;code&gt;C&lt;/code&gt; (without an argument list),</source>
          <target state="translated">если &lt;code&gt;Q&lt;/code&gt; является &lt;code&gt;C&lt;/code&gt; (без списка аргументов),</target>
        </trans-unit>
        <trans-unit id="02d001e64c195f1cbf57acf811fac8c525ec8bcf" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;T&lt;/code&gt; does not use a compatible allocator (&lt;code&gt;std::uses_allocator_v&amp;lt;T, Alloc&amp;gt;&lt;/code&gt; is false), then &lt;code&gt;alloc&lt;/code&gt; is ignored.</source>
          <target state="translated">если &lt;code&gt;T&lt;/code&gt; не использует совместимый распределитель ( &lt;code&gt;std::uses_allocator_v&amp;lt;T, Alloc&amp;gt;&lt;/code&gt; имеет значение false), &lt;code&gt;alloc&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="77826e1def188bb279d408c4b57b0af8fa5376d1" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;T&lt;/code&gt; is a class type</source>
          <target state="translated">если &lt;code&gt;T&lt;/code&gt; является типом класса</target>
        </trans-unit>
        <trans-unit id="2d73692cead6152b069656e0a56dab2f67500de1" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;T&lt;/code&gt; is a non-POD(until C++11) class type, the constructors are considered and subjected to &lt;a href=&quot;overload_resolution&quot;&gt;overload resolution&lt;/a&gt; against the empty argument list. The constructor selected (which is one of the &lt;a href=&quot;default_constructor&quot;&gt;default constructors&lt;/a&gt;) is called to provide the initial value for the new object;</source>
          <target state="translated">если &lt;code&gt;T&lt;/code&gt; является типом класса не POD (до C ++ 11), конструкторы рассматриваются и подвергаются &lt;a href=&quot;overload_resolution&quot;&gt;разрешению перегрузки&lt;/a&gt; для пустого списка аргументов. Выбранный конструктор (который является одним из &lt;a href=&quot;default_constructor&quot;&gt;конструкторов&lt;/a&gt; по умолчанию ) вызывается для предоставления начального значения для нового объекта;</target>
        </trans-unit>
        <trans-unit id="2a978bcf58b305bd261b9272829de359b927c736" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;T&lt;/code&gt; is a non-class type</source>
          <target state="translated">если &lt;code&gt;T&lt;/code&gt; не тип класса</target>
        </trans-unit>
        <trans-unit id="9bb36a7de212b3698afef225d862127a9cb7f0be" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;T&lt;/code&gt; is an array type, every element of the array is default-initialized;</source>
          <target state="translated">если &lt;code&gt;T&lt;/code&gt; является типом массива, каждый элемент массива инициализируется по умолчанию;</target>
        </trans-unit>
        <trans-unit id="c00753504c029ea4edac77cdc7d5a40cf6d28814" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;T&lt;/code&gt; models &lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/iterator/Iterator&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;decltype((F))&lt;/code&gt; models &lt;code&gt;ConvertibleTo&amp;lt;iter_difference_t&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;,</source>
          <target state="translated">если &lt;code&gt;T&lt;/code&gt; моделирует &lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/iterator/Iterator&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;decltype((F))&lt;/code&gt; модели &lt;code&gt;ConvertibleTo&amp;lt;iter_difference_t&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="bd9111d32e16ecc537a432853bb2e140acdc1d79" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;T&lt;/code&gt; uses the</source>
          <target state="translated">если &lt;code&gt;T&lt;/code&gt; использует</target>
        </trans-unit>
        <trans-unit id="8f381580680c5b388078bf10ca9f5ec36689340b" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;X::eq_int_type(e, X::eof())&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, returns &lt;code&gt;e&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;X::eq_int_type(e, X::eof())&lt;/code&gt; равно &lt;code&gt;false&lt;/code&gt; , возвращает &lt;code&gt;e&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1c84551708efe8ff874630dec1693b307b1dbf4" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;a &amp;lt; b&lt;/code&gt; and &lt;code&gt;b &amp;lt; c&lt;/code&gt; then &lt;code&gt;a &amp;lt; c&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;a &amp;lt; b&lt;/code&gt; и &lt;code&gt;b &amp;lt; c&lt;/code&gt; то &lt;code&gt;a &amp;lt; c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e53945f53006175eff539e46d56b17deddf5cb4a" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;a &amp;lt; b&lt;/code&gt; then &lt;code&gt;!(b &amp;lt; a)&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;a &amp;lt; b&lt;/code&gt; то &lt;code&gt;!(b &amp;lt; a)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="250513a611ee80a1bd9d483afeb9a1157fb8f2d0" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;a == b&lt;/code&gt; equals &lt;code&gt;true&lt;/code&gt;, returns &lt;code&gt;std::strong_equality::equal&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;a == b&lt;/code&gt; равно &lt;code&gt;true&lt;/code&gt; , возвращает &lt;code&gt;std::strong_equality::equal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbfebc473c39e665555656b9d76009753fa6e41a" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;a == b&lt;/code&gt; equals &lt;code&gt;true&lt;/code&gt;, returns &lt;code&gt;std::strong_ordering::equal&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;a == b&lt;/code&gt; равно &lt;code&gt;true&lt;/code&gt; , возвращает &lt;code&gt;std::strong_ordering::equal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2171eb0a6e88f1c2c3aea91656c2bb53c40d1a9f" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;a == b&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns &lt;code&gt;std::partial_ordering::equivalent&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;a == b&lt;/code&gt; является &lt;code&gt;true&lt;/code&gt; , возвращается &lt;code&gt;std::partial_ordering::equivalent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e42895161c8cf392ede5b72f29a0a0e0a6c3c67b" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;a == b&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns &lt;code&gt;std::strong_equality::equal&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;a == b&lt;/code&gt; является &lt;code&gt;true&lt;/code&gt; , возвращается &lt;code&gt;std::strong_equality::equal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f253465bf3abbeabcae41a5a7416eb4ebe28836" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;a == b&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns &lt;code&gt;std::strong_ordering::equal&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;a == b&lt;/code&gt; является &lt;code&gt;true&lt;/code&gt; , возвращается &lt;code&gt;std::strong_ordering::equal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c22af0f30af03464a6e631d1c4457395a1a012d" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;a == b&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns &lt;code&gt;std::weak_equality::equivalent&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;a == b&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; , возвращает &lt;code&gt;std::weak_equality::equivalent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83c38a14fa8caadb2d64b7a6f1d16ca17798fd4c" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;a == b&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns &lt;code&gt;std::weak_ordering::equivalent&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;a == b&lt;/code&gt; имеет значение &lt;code&gt;true&lt;/code&gt; , возвращает &lt;code&gt;std::weak_ordering::equivalent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3494c95a6a5310a03a479ef3d6289424299043d" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;a == end()&lt;/code&gt; and &lt;code&gt;b == base.end()&lt;/code&gt;, returns &lt;code&gt;path(&quot;.&quot;)&lt;/code&gt;;</source>
          <target state="translated">если &lt;code&gt;a == end()&lt;/code&gt; и &lt;code&gt;b == base.end()&lt;/code&gt; , возвращает &lt;code&gt;path(&quot;.&quot;)&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="d85b664f2322f4ae30c2d2d9da9ac2b1cae265b7" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;comp(a,b)==true&lt;/code&gt; and &lt;code&gt;comp(b,c)==true&lt;/code&gt; then &lt;code&gt;comp(a,c)==true&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;comp(a,b)==true&lt;/code&gt; и &lt;code&gt;comp(b,c)==true&lt;/code&gt; то &lt;code&gt;comp(a,c)==true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c21ce49e43178fdb352e1f25008965fbc29ce718" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;f&lt;/code&gt; is a &lt;a href=&quot;../language/pointer#Pointers_to_member_functions&quot;&gt;pointer to member function&lt;/a&gt; of class &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="translated">если &lt;code&gt;f&lt;/code&gt; является &lt;a href=&quot;../language/pointer#Pointers_to_member_functions&quot;&gt;указателем на функцию - член&lt;/a&gt; класса &lt;code&gt;T&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5cd290b3853ee48fa340b1cbdecfc45cf14da218" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;fmt&lt;/code&gt; has &lt;a href=&quot;chars_format&quot;&gt;&lt;code&gt;std::chars_format::fixed&lt;/code&gt;&lt;/a&gt; set but not &lt;a href=&quot;chars_format&quot;&gt;&lt;code&gt;std::chars_format::scientific&lt;/code&gt;&lt;/a&gt;, the optional exponent is not permitted</source>
          <target state="translated">если &lt;code&gt;fmt&lt;/code&gt; имеет &lt;a href=&quot;chars_format&quot;&gt; &lt;code&gt;std::chars_format::fixed&lt;/code&gt; &lt;/a&gt; но не &lt;a href=&quot;chars_format&quot;&gt; &lt;code&gt;std::chars_format::scientific&lt;/code&gt; &lt;/a&gt; , дополнительный показатель не разрешен</target>
        </trans-unit>
        <trans-unit id="cc744955cdf573979a8eadce8989ebc62a92d4e3" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;fmt&lt;/code&gt; has &lt;a href=&quot;chars_format&quot;&gt;&lt;code&gt;std::chars_format::scientific&lt;/code&gt;&lt;/a&gt; set but not &lt;a href=&quot;chars_format&quot;&gt;&lt;code&gt;std::chars_format::fixed&lt;/code&gt;&lt;/a&gt;, the exponent part is required (otherwise it is optional)</source>
          <target state="translated">если &lt;code&gt;fmt&lt;/code&gt; имеет &lt;a href=&quot;chars_format&quot;&gt; &lt;code&gt;std::chars_format::scientific&lt;/code&gt; &lt;/a&gt; набор, но не &lt;a href=&quot;chars_format&quot;&gt; &lt;code&gt;std::chars_format::fixed&lt;/code&gt; &lt;/a&gt; , экспоненциальная часть обязательна (в противном случае она необязательна)</target>
        </trans-unit>
        <trans-unit id="e5845552010400926e4da82b1938c7f1e375eb1c" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;fmt&lt;/code&gt; is &lt;a href=&quot;chars_format&quot;&gt;&lt;code&gt;std::chars_format::hex&lt;/code&gt;&lt;/a&gt;, the prefix &quot;0x&quot; or &quot;0X&quot; is not permitted (the string &quot;0x123&quot; parses as the value &quot;0&quot; with unparsed remainder &quot;x123&quot;).</source>
          <target state="translated">если &lt;code&gt;fmt&lt;/code&gt; является &lt;a href=&quot;chars_format&quot;&gt; &lt;code&gt;std::chars_format::hex&lt;/code&gt; &lt;/a&gt; , префикс &quot;0x&quot; или &quot;0X&quot; не разрешен (строка &quot;0x123&quot; анализируется как значение &quot;0&quot; с непарсированным остатком &quot;x123&quot;).</target>
        </trans-unit>
        <trans-unit id="03c59d2db29a6b5c59310b3d42615fc9c756c427" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;from&lt;/code&gt; does not equal &lt;code&gt;to&lt;/code&gt; and the result is subnormal or zero, raises &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_UNDERFLOW&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;from&lt;/code&gt; не равна , &lt;code&gt;to&lt;/code&gt; и результат субнормальна или равен нулю, поднимает &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_UNDERFLOW&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35d078b788aadc146ffe2e40c1d4a983eed4b1a4" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;from&lt;/code&gt; is finite, but the expected result is an infinity, raises &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_OVERFLOW&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">если &lt;code&gt;from&lt;/code&gt; конечно, но ожидаемый результат равен бесконечности, вызывает &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_OVERFLOW&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d53a0eb6a295fc74bc7c612bd3522e63ac38a22" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;ios_base::skipws&lt;/code&gt; flag is set on this input stream, extracts and discards characters from the input stream until one of the following becomes true:</source>
          <target state="translated">если в этом входном потоке установлен флаг &lt;code&gt;ios_base::skipws&lt;/code&gt; , извлекает и удаляет символы из входного потока до тех пор, пока одно из следующего не станет истинным:</target>
        </trans-unit>
        <trans-unit id="c07114b77fa49a33c5bd3a4b2f901533c2b0c447" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;n &amp;gt;= size()&lt;/code&gt;, a length of the unmatched match is returned.</source>
          <target state="translated">если &lt;code&gt;n &amp;gt;= size()&lt;/code&gt; , длина несоответствующего соответствия возвращается.</target>
        </trans-unit>
        <trans-unit id="5b499bd3a8f6c675ec551edf5681f52c3c6d2f9e" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;n &amp;gt;= size()&lt;/code&gt;, a position of the first character of the unmatched match is returned.</source>
          <target state="translated">если &lt;code&gt;n &amp;gt;= size()&lt;/code&gt; , возвращается позиция первого символа несопоставленного соответствия.</target>
        </trans-unit>
        <trans-unit id="620982c9da4e03cfbd6b25025d6b0c00887f3dad" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;n &amp;gt;= size()&lt;/code&gt;, a string representing the unmatched match is returned.</source>
          <target state="translated">если &lt;code&gt;n &amp;gt;= size()&lt;/code&gt; , возвращается строка, представляющая несоответствующее совпадение.</target>
        </trans-unit>
        <trans-unit id="c85d4fd0f3ce2266f53262d385646c94fd2804c1" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;n &amp;gt;= size()&lt;/code&gt;, returns a reference to a &lt;code&gt;&lt;a href=&quot;../sub_match&quot;&gt;std::sub_match&lt;/a&gt;&lt;/code&gt; representing an unmatched sub-expression (an empty subrange of the target sequence).</source>
          <target state="translated">если &lt;code&gt;n &amp;gt;= size()&lt;/code&gt; , возвращает ссылку на &lt;code&gt;&lt;a href=&quot;../sub_match&quot;&gt;std::sub_match&lt;/a&gt;&lt;/code&gt; представляющую несоответствующее подвыражение (пустой поддиапазон целевой последовательности).</target>
        </trans-unit>
        <trans-unit id="45f453024a714fb203937ad43e8a08d11fa2e42c" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;rhs&lt;/code&gt; is a glvalue:</source>
          <target state="translated">если &lt;code&gt;rhs&lt;/code&gt; является glvalue:</target>
        </trans-unit>
        <trans-unit id="a63d553ada28fba92b5fe3018749252b0f9eb29f" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;sizeof...(B) == 0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;integral_constant&quot;&gt;std::false_type&lt;/a&gt;&lt;/code&gt;; otherwise</source>
          <target state="translated">если &lt;code&gt;sizeof...(B) == 0&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;integral_constant&quot;&gt;std::false_type&lt;/a&gt;&lt;/code&gt; ; в противном случае</target>
        </trans-unit>
        <trans-unit id="8a5b5fc27280d8e91443633f1aef02ad82adc1ef" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;sizeof...(B) == 0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;integral_constant&quot;&gt;std::true_type&lt;/a&gt;&lt;/code&gt;; otherwise</source>
          <target state="translated">если &lt;code&gt;sizeof...(B) == 0&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;integral_constant&quot;&gt;std::true_type&lt;/a&gt;&lt;/code&gt; ; в противном случае</target>
        </trans-unit>
        <trans-unit id="a9bedbe56da6206d66f9b19b3a53a06c06f2577b" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;sizeof...(InnerAllocs) &amp;gt; 0&lt;/code&gt;, &lt;code&gt;lhs.inner_allocator() == rhs.inner_allocator()&lt;/code&gt;.</source>
          <target state="translated">если &lt;code&gt;sizeof...(InnerAllocs) &amp;gt; 0&lt;/code&gt; , &lt;code&gt;lhs.inner_allocator() == rhs.inner_allocator()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba798e0d7cdf4bb5d38a93f2355a8d3350137d47" translate="yes" xml:space="preserve">
          <source>if N &amp;gt; 1, op(GNSUM(op, a</source>
          <target state="translated">если N&amp;gt; 1, op (GNSUM (op, a</target>
        </trans-unit>
        <trans-unit id="5b081be2b7da210edffc84a6c9989ad266aabf5b" translate="yes" xml:space="preserve">
          <source>if N &amp;gt; 1, op(GSUM(op, b</source>
          <target state="translated">если N&amp;gt; 1, оп (GSUM (оп, б</target>
        </trans-unit>
        <trans-unit id="7a07462b06fa562dbed818deff8e30c0f1635ffd" translate="yes" xml:space="preserve">
          <source>if N=1, a</source>
          <target state="translated">если N=1,a</target>
        </trans-unit>
        <trans-unit id="4ac254f2cf94511ff3b54307cf68aaeeab6eca87" translate="yes" xml:space="preserve">
          <source>if T models &lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/iterator/RandomAccessIterator&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&lt;code&gt;RandomAccessIterator&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;view::counted(E, F)&lt;/code&gt; is expression-equivalent to &lt;code&gt;ranges::subrange{E, E + static_cast&amp;lt;std::iter_difference_t&amp;lt;T&amp;gt;&amp;gt;(F)}&lt;/code&gt;</source>
          <target state="translated">если T моделирует &lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/iterator/RandomAccessIterator&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt; &lt;code&gt;RandomAccessIterator&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;view::counted(E, F)&lt;/code&gt; countted (E, F) является выражением, эквивалентным &lt;code&gt;ranges::subrange{E, E + static_cast&amp;lt;std::iter_difference_t&amp;lt;T&amp;gt;&amp;gt;(F)}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f6692289cae8b78deb2b75afe4ab1191ac1918b" translate="yes" xml:space="preserve">
          <source>if a constructor of the object that is being allocated throws an exception.</source>
          <target state="translated">если конструктор выделяемого объекта бросает исключение.</target>
        </trans-unit>
        <trans-unit id="2277f13e74083d4b904a098b0b1eacd06e30c703" translate="yes" xml:space="preserve">
          <source>if a function-local (block-scope) static object was initialized during construction of a subobject of a class or array, it is only destroyed after all subobjects of that class or all elements of that array were destroyed.</source>
          <target state="translated">если при построении подобъекта класса или массива инициализировался функционально-локальный (блочно-скопический)статический объект,то он уничтожается только после того,как уничтожены все подобъекты этого класса или все элементы этого массива.</target>
        </trans-unit>
        <trans-unit id="11d1ce3f86491022ca185ec104822408192adfda" translate="yes" xml:space="preserve">
          <source>if an exception is thrown during input, sets &lt;code&gt;badbit&lt;/code&gt; in the input stream. If exceptions on badbit are enabled in this stream's exception mask, the exception is also rethrown.</source>
          <target state="translated">если исключение &lt;code&gt;badbit&lt;/code&gt; во время ввода, устанавливает битбит во входном потоке. Если в маске исключений этого потока включены исключения на бэдбит, исключение также перебрасывается.</target>
        </trans-unit>
        <trans-unit id="3db84cf1ba08eaff6f7e802d8635fcfec2f4ebe9" translate="yes" xml:space="preserve">
          <source>if an exception is thrown during output, sets &lt;code&gt;badbit&lt;/code&gt; in the output stream. If exceptions on badbit are enabled in this stream's exception mask, the exception is also rethrown.</source>
          <target state="translated">если исключение &lt;code&gt;badbit&lt;/code&gt; во время вывода, устанавливает badbit в выходном потоке. Если в маске исключений этого потока включены исключения на бэдбит, исключение также перебрасывается.</target>
        </trans-unit>
        <trans-unit id="798aa3ff88921a8ef7ded1a2ccc68400a86c285a" translate="yes" xml:space="preserve">
          <source>if an indeterminate value of type &lt;code&gt;unsigned char&lt;/code&gt;or &lt;a href=&quot;../types/byte&quot;&gt;&lt;code&gt;std::byte&lt;/code&gt;&lt;/a&gt;(since C++17) is assigned to another variable of type (possibly cv-qualified) &lt;code&gt;unsigned char&lt;/code&gt;or &lt;a href=&quot;../types/byte&quot;&gt;&lt;code&gt;std::byte&lt;/code&gt;&lt;/a&gt;(since C++17)(the value of the variable becomes indeterminate, but the behavior is not undefined);</source>
          <target state="translated">если неопределенное значение типа &lt;code&gt;unsigned char&lt;/code&gt; или &lt;a href=&quot;../types/byte&quot;&gt; &lt;code&gt;std::byte&lt;/code&gt; &lt;/a&gt; (начиная с C ++ 17) присваивается другой переменной типа (возможно, cv-квалифицированной) &lt;code&gt;unsigned char&lt;/code&gt; или &lt;a href=&quot;../types/byte&quot;&gt; &lt;code&gt;std::byte&lt;/code&gt; &lt;/a&gt; (начиная с C ++ 17) (значение переменной становится неопределенной, но поведение не является неопределенным);</target>
        </trans-unit>
        <trans-unit id="47beffed95594f8c451a0de61cd781388d7ef815" translate="yes" xml:space="preserve">
          <source>if an indeterminate value of type &lt;code&gt;unsigned char&lt;/code&gt;or &lt;a href=&quot;../types/byte&quot;&gt;&lt;code&gt;std::byte&lt;/code&gt;&lt;/a&gt;(since C++17) is used to initialize another variable of type (possibly cv-qualified) &lt;code&gt;unsigned char&lt;/code&gt;or &lt;a href=&quot;../types/byte&quot;&gt;&lt;code&gt;std::byte&lt;/code&gt;&lt;/a&gt;(since C++17);</source>
          <target state="translated">если неопределенное значение типа &lt;code&gt;unsigned char&lt;/code&gt; или &lt;a href=&quot;../types/byte&quot;&gt; &lt;code&gt;std::byte&lt;/code&gt; &lt;/a&gt; (начиная с C ++ 17) используется для инициализации другой переменной типа (возможно с cv) &lt;code&gt;unsigned char&lt;/code&gt; или &lt;a href=&quot;../types/byte&quot;&gt; &lt;code&gt;std::byte&lt;/code&gt; &lt;/a&gt; (начиная с C ++ 17);</target>
        </trans-unit>
        <trans-unit id="e010cf877ddae279a95994c55ec49fa12cde20ea" translate="yes" xml:space="preserve">
          <source>if an indeterminate value of type &lt;code&gt;unsigned char&lt;/code&gt;or &lt;a href=&quot;../types/byte&quot;&gt;&lt;code&gt;std::byte&lt;/code&gt;&lt;/a&gt;(since C++17) results from</source>
          <target state="translated">если неопределенное значение типа &lt;code&gt;unsigned char&lt;/code&gt; или &lt;a href=&quot;../types/byte&quot;&gt; &lt;code&gt;std::byte&lt;/code&gt; &lt;/a&gt; (начиная с C ++ 17) получается из</target>
        </trans-unit>
        <trans-unit id="4122154d676b200a14f7b63518784fa5469e9b63" translate="yes" xml:space="preserve">
          <source>if and only if &lt;code&gt;T2&lt;/code&gt; can be &lt;a href=&quot;copy_initialization&quot;&gt;copy-initialized&lt;/a&gt; from &lt;code&gt;e&lt;/code&gt;, that is the declaration &lt;code&gt;T2 t = e;&lt;/code&gt; is well-formed (can be compiled), for some invented temporary &lt;code&gt;t&lt;/code&gt;. Note that this is different from &lt;a href=&quot;direct_initialization&quot;&gt;direct initialization&lt;/a&gt; (&lt;code&gt;T2 t(e)&lt;/code&gt;), where explicit constructors and conversion functions would additionally be considered.</source>
          <target state="translated">тогда и только тогда, когда &lt;code&gt;T2&lt;/code&gt; можно &lt;a href=&quot;copy_initialization&quot;&gt;инициализировать&lt;/a&gt; с помощью &lt;code&gt;e&lt;/code&gt; , то есть объявление &lt;code&gt;T2 t = e;&lt;/code&gt; является правильно сформированным (может быть скомпилировано), для некоторых изобретенных временных &lt;code&gt;t&lt;/code&gt; . Обратите внимание, что это отличается от &lt;a href=&quot;direct_initialization&quot;&gt;прямой инициализации&lt;/a&gt; ( &lt;code&gt;T2 t(e)&lt;/code&gt; ), где дополнительно будут рассматриваться явные конструкторы и функции преобразования.</target>
        </trans-unit>
        <trans-unit id="9adcb01d7e4e4d1be1008daa580953933bb6f0bf" translate="yes" xml:space="preserve">
          <source>if any function registered with &lt;code&gt;atexit&lt;/code&gt; or any destructor of static/thread-local object throws an exception, &lt;code&gt;&lt;a href=&quot;../../error/terminate&quot;&gt;std::terminate&lt;/a&gt;&lt;/code&gt; is called</source>
          <target state="translated">если любая функция , зарегистрированная с &lt;code&gt;atexit&lt;/code&gt; или любого деструктора статического / локального потока объекта генерирует исключение, &lt;code&gt;&lt;a href=&quot;../../error/terminate&quot;&gt;std::terminate&lt;/a&gt;&lt;/code&gt; называется</target>
        </trans-unit>
        <trans-unit id="1bef5cdd7789ad93c2ffab8eb3e093c1cb15d9d9" translate="yes" xml:space="preserve">
          <source>if any of &lt;code&gt;Args...&lt;/code&gt; has a top-level cv-qualifier, it is discarded;</source>
          <target state="translated">если любой из &lt;code&gt;Args...&lt;/code&gt; имеет cv-квалификатор верхнего уровня, он отбрасывается;</target>
        </trans-unit>
        <trans-unit id="1c3f2c6107c52841b42682d9879e9400ec3ca6e2" translate="yes" xml:space="preserve">
          <source>if any of the &lt;code&gt;Args&lt;/code&gt; has type &quot;array of &lt;code&gt;T&lt;/code&gt;&quot; or a function type &lt;code&gt;T&lt;/code&gt;, it is automatically adjusted to &lt;code&gt;T*&lt;/code&gt;;</source>
          <target state="translated">если какой-либо из &lt;code&gt;Args&lt;/code&gt; имеет тип &amp;laquo;массив &lt;code&gt;T&lt;/code&gt; &amp;raquo; или тип функции &lt;code&gt;T&lt;/code&gt; , он автоматически устанавливается на &lt;code&gt;T*&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="84da85eee9e35d34f6830b5bcecb13bbeb9ee28f" translate="yes" xml:space="preserve">
          <source>if any of the following conditions are true:</source>
          <target state="translated">если одно из следующих условий верно:</target>
        </trans-unit>
        <trans-unit id="6330ba75c5e1a2151405416028d6a95e79622ba9" translate="yes" xml:space="preserve">
          <source>if any of the following is true:</source>
          <target state="translated">если что-то из этого правда:</target>
        </trans-unit>
        <trans-unit id="ebc836882e1db1f8fc8fd2f6f799e51cd179bfc0" translate="yes" xml:space="preserve">
          <source>if at some level &lt;code&gt;k&lt;/code&gt; the &lt;code&gt;P2&lt;/code&gt; is</source>
          <target state="translated">если на каком - то уровне &lt;code&gt;k&lt;/code&gt; &lt;code&gt;P2&lt;/code&gt; является</target>
        </trans-unit>
        <trans-unit id="79237dd253fbe128e221ea451749089427cf4a67" translate="yes" xml:space="preserve">
          <source>if await_suspend returns a coroutine handle for some other coroutine, that handle is resumed (by a call to &lt;code&gt;handle.resume()&lt;/code&gt;) (note this may chain to eventually cause the current coroutine to resume)</source>
          <target state="translated">если await_suspend возвращает дескриптор сопрограммы для некоторой другой сопрограммы, этот дескриптор возобновляется (с помощью вызова &lt;code&gt;handle.resume()&lt;/code&gt; ) (обратите внимание, что это может привести к возобновлению работы текущей сопрограммы)</target>
        </trans-unit>
        <trans-unit id="84e758ee98391ba8090c7956a6e2c2447ef98cee" translate="yes" xml:space="preserve">
          <source>if await_suspend returns bool,</source>
          <target state="translated">если waitit_suspend вернет bool,</target>
        </trans-unit>
        <trans-unit id="892140a81a8b3a9e9b19a26bc4428baf68b7ed1d" translate="yes" xml:space="preserve">
          <source>if await_suspend returns void, control is immediately returned to the caller/resumer of the current coroutine (this coroutine remains suspended), otherwise</source>
          <target state="translated">если функция waitit_suspend возвращает void,то управление немедленно возвращается вызывающему абоненту/реципиенту текущей корутины (эта корутина остается приостановленной),в противном случае</target>
        </trans-unit>
        <trans-unit id="d653d2957d367c8720bbad04d55265b24108dfb4" translate="yes" xml:space="preserve">
          <source>if await_suspend throws an exception, the exception is caught, the coroutine is resumed, and the exception is immediately re-thrown</source>
          <target state="translated">если waitit_suspend бросает исключение,исключение попадает,корутин возобновляется,и исключение немедленно перебрасывается.</target>
        </trans-unit>
        <trans-unit id="13f05e5bf8bf2df4f1a2780700aff368b61d3898" translate="yes" xml:space="preserve">
          <source>if both &lt;code&gt;*this&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; are valueless by exception, does nothing</source>
          <target state="translated">если и &lt;code&gt;*this&lt;/code&gt; , и &lt;code&gt;rhs&lt;/code&gt; исключены, ничего не делает</target>
        </trans-unit>
        <trans-unit id="0c742cdd007e404a8c29a76dfa6f38c15781484c" translate="yes" xml:space="preserve">
          <source>if both of the following are true regardless of whether &lt;code&gt;T&lt;/code&gt; is a complete type:</source>
          <target state="translated">если оба из следующих условий являются истинными независимо от того, является ли &lt;code&gt;T&lt;/code&gt; полным типом:</target>
        </trans-unit>
        <trans-unit id="24e1ab130eca212b1c3bd5468c2cf0c4bf48fd8e" translate="yes" xml:space="preserve">
          <source>if either &lt;code&gt;from&lt;/code&gt; or &lt;code&gt;to&lt;/code&gt; is NaN, NaN is returned</source>
          <target state="translated">если &lt;code&gt;from&lt;/code&gt; или &lt;code&gt;to&lt;/code&gt; NaN, NaN возвращается</target>
        </trans-unit>
        <trans-unit id="f7c0807aae87adb1793e82c50b36aa8ea8b93325" translate="yes" xml:space="preserve">
          <source>if every subobject already added to the lookup set of &lt;code&gt;C&lt;/code&gt; is a base of at least one subobject in the lookup set of &lt;code&gt;Bi&lt;/code&gt;, then the lookup set of &lt;code&gt;C&lt;/code&gt; is discarded and replaced with the lookup set of &lt;code&gt;Bi&lt;/code&gt;</source>
          <target state="translated">если каждый подобъект, уже добавленный к поисковому набору &lt;code&gt;C&lt;/code&gt; , является базой по меньшей мере одного подобъекта в поисковом наборе &lt;code&gt;Bi&lt;/code&gt; , то поисковый набор &lt;code&gt;C&lt;/code&gt; отбрасывается и заменяется поисковым набором &lt;code&gt;Bi&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a8c9b8f6646a24150eb2b0c8800bd26c385db49" translate="yes" xml:space="preserve">
          <source>if every subobject in the lookup set of &lt;code&gt;Bi&lt;/code&gt; is a base of at least one of the subobjects already added to the lookup set of &lt;code&gt;C&lt;/code&gt;, the lookup set of &lt;code&gt;Bi&lt;/code&gt; is discarded.</source>
          <target state="translated">если каждый подобъект в поисковом наборе &lt;code&gt;Bi&lt;/code&gt; является базой по меньшей мере одного из подобъектов, уже добавленных в поисковый набор &lt;code&gt;C&lt;/code&gt; , поисковый набор &lt;code&gt;Bi&lt;/code&gt; отбрасывается.</target>
        </trans-unit>
        <trans-unit id="f8657ab4844a92ee4fb9bd0434db96a6c9cfd8ad" translate="yes" xml:space="preserve">
          <source>if expr is produced by an initial suspend point, a final suspend point, or a yield expression, the awaitable is expr, as-is.</source>
          <target state="translated">если экспр произведен начальной точкой подвеса,конечной точкой подвеса или выражением урожая,то ожидаемый-это экспр,как есть.</target>
        </trans-unit>
        <trans-unit id="a307a27cee9e60c6a068607db43ebab6c48f223c" translate="yes" xml:space="preserve">
          <source>if it is either.</source>
          <target state="translated">если это тоже так.</target>
        </trans-unit>
        <trans-unit id="76687ce73a10336483c11d646c6ceff29cac74cb" translate="yes" xml:space="preserve">
          <source>if it is representable in the return type, otherwise the behavior is undefined.</source>
          <target state="translated">если он представлен в типе возврата,в противном случае поведение не определено.</target>
        </trans-unit>
        <trans-unit id="b906f0e1e05a0a01510f7d0c40aa2dc6e8003b51" translate="yes" xml:space="preserve">
          <source>if it is user-declared and not explicitly defaulted on its first declaration.</source>
          <target state="translated">если он заявлен пользователем и не имеет явных дефолтов при первом заявлении.</target>
        </trans-unit>
        <trans-unit id="709baedc31a766f53d54ae7eb29f446ccd2b8741" translate="yes" xml:space="preserve">
          <source>if it performs one of the execution steps above (I/O, volatile, atomic, or synchronization), blocks in a standard library function, or calls an atomic lock-free function that does not complete because of a non-blocked concurrent thread.</source>
          <target state="translated">если она выполняет один из вышеперечисленных шагов выполнения (ввод/вывод,volatile,atomic или синхронизация),блокирует в стандартной библиотечной функции или вызывает атомарную безблокировочную функцию,которая не завершается из-за неблокированного параллельного потока.</target>
        </trans-unit>
        <trans-unit id="895d9c7784f4f4dfb5da2e73cdee11ddf0759206" translate="yes" xml:space="preserve">
          <source>if it results in equal outputs given equal inputs.</source>
          <target state="translated">если в результате получаются равные выходы с равными входами.</target>
        </trans-unit>
        <trans-unit id="55f63898800ecca4e27d8753de445220869763b9" translate="yes" xml:space="preserve">
          <source>if one of the arguments is &amp;plusmn;&amp;infin;, &lt;code&gt;hypot(x,y)&lt;/code&gt; returns +&amp;infin; even if the other argument is NaN</source>
          <target state="translated">если один из аргументов равен &amp;plusmn; &amp;infin;, &lt;code&gt;hypot(x,y)&lt;/code&gt; возвращает + &amp;infin;, даже если другой аргумент равен NaN</target>
        </trans-unit>
        <trans-unit id="bae1ecfb270593fe11429e6bf3aaade0a2737b60" translate="yes" xml:space="preserve">
          <source>if one of the arguments is &amp;plusmn;0, &lt;code&gt;hypot(x,y)&lt;/code&gt; is equivalent to &lt;code&gt;fabs&lt;/code&gt; called with the non-zero argument</source>
          <target state="translated">если один из аргументов равен &amp;plusmn; 0, &lt;code&gt;hypot(x,y)&lt;/code&gt; эквивалентен &lt;code&gt;fabs&lt;/code&gt; , вызываемым с ненулевым аргументом</target>
        </trans-unit>
        <trans-unit id="921efda858e0dd348e57dd781a8107652cc923b5" translate="yes" xml:space="preserve">
          <source>if one operand is NaN, the result is NaN</source>
          <target state="translated">если один операнд-NaN,результат-NaN.</target>
        </trans-unit>
        <trans-unit id="2c78e42f0b15d5d8991d2928776ea0ba18f8a88d" translate="yes" xml:space="preserve">
          <source>if over-allocation strategy is used by &lt;code&gt;&lt;a href=&quot;basic_stringbuf/overflow&quot;&gt;overflow()&lt;/a&gt;&lt;/code&gt;, an additional high-watermark pointer may be stored to track the last initialized character</source>
          <target state="translated">если в &lt;code&gt;&lt;a href=&quot;basic_stringbuf/overflow&quot;&gt;overflow()&lt;/a&gt;&lt;/code&gt; используется стратегия избыточного выделения, может быть сохранен дополнительный указатель верхнего водяного знака для отслеживания последнего инициализированного символа</target>
        </trans-unit>
        <trans-unit id="ef83fd19e1ccddf99aac498945ab74dee0cb2ee2" translate="yes" xml:space="preserve">
          <source>if overload resolution fails at phase 1, phase 2 is entered, where the candidate functions are all constructors of &lt;code&gt;T&lt;/code&gt; and the argument list for the purpose of overload resolution consists of the individual elements of the initializer list.</source>
          <target state="translated">если на этапе 1 не удается разрешить перегрузку, вводится фаза 2, где все функции-кандидаты являются конструкторами &lt;code&gt;T&lt;/code&gt; , а список аргументов для разрешения перегрузки состоит из отдельных элементов списка инициализатора.</target>
        </trans-unit>
        <trans-unit id="450149bdd4b1543ce23b964c2285568fbb9ecb7b" translate="yes" xml:space="preserve">
          <source>if overload resolution for &lt;code&gt;operator co_await&lt;/code&gt; gives a single best overload, the awaiter is the result of that call (&lt;code&gt;awaitable.operator co_await()&lt;/code&gt; for member overload, &lt;code&gt;operator co_await(static_cast&amp;lt;Awaitable&amp;amp;&amp;amp;&amp;gt;(awaitable))&lt;/code&gt; for the non-member overload)</source>
          <target state="translated">если разрешение перегрузки для &lt;code&gt;operator co_await&lt;/code&gt; дает единственную наилучшую перегрузку, ожидание является результатом этого вызова ( &lt;code&gt;awaitable.operator co_await()&lt;/code&gt; для перегрузки элемента, &lt;code&gt;operator co_await(static_cast&amp;lt;Awaitable&amp;amp;&amp;amp;&amp;gt;(awaitable))&lt;/code&gt; для перегрузки не члена)</target>
        </trans-unit>
        <trans-unit id="6d31151071d57eb3a515779b7295a17f68d860b0" translate="yes" xml:space="preserve">
          <source>if present, makes this an inline namespace (see below). Cannot appear on the</source>
          <target state="translated">если присутствует,делает это пространство имён в строке (см.ниже).Не может отображаться на</target>
        </trans-unit>
        <trans-unit id="2b1e4d2fd5184e4c3384679d4c5c493a2c0e3b6b" translate="yes" xml:space="preserve">
          <source>if statement</source>
          <target state="translated">если заявление</target>
        </trans-unit>
        <trans-unit id="667e201a6c76a64485d130c822a50949f03e8bfe" translate="yes" xml:space="preserve">
          <source>if supported by the implementation, when passing or returning an object of trivially-copyable type in a &lt;a href=&quot;operator_other#Built-in_function_call_operator&quot;&gt;function call expression&lt;/a&gt; (this models passing structs in CPU registers)</source>
          <target state="translated">если поддерживается реализацией, при передаче или возврате объекта тривиально копируемого типа в &lt;a href=&quot;operator_other#Built-in_function_call_operator&quot;&gt;выражении вызова функции&lt;/a&gt; (это моделирует структуры передачи в регистрах ЦП)</target>
        </trans-unit>
        <trans-unit id="823c5c75472b28251d58d678737c34bba07c92c2" translate="yes" xml:space="preserve">
          <source>if the</source>
          <target state="translated">если</target>
        </trans-unit>
        <trans-unit id="75c8fa5228ed3748134c2e32444720b78643cc25" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;&amp;infin;, NaN is returned and &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; is raised</source>
          <target state="translated">если аргумент &amp;plusmn; &amp;infin;, NaN , возвращается и &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; поднимается</target>
        </trans-unit>
        <trans-unit id="f0d9eed5147b72562e4ab054f2506f13d1c89fd8" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;0 or &amp;plusmn;&amp;infin;, it is returned unmodified</source>
          <target state="translated">если аргумент равен &amp;plusmn; 0 или &amp;plusmn; &amp;infin;, он возвращается без изменений</target>
        </trans-unit>
        <trans-unit id="7e8f5618d1c7c914a0aec620dc95184c32f5cea1" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;0 or &amp;plusmn;&amp;infin;, it is returned, unchanged</source>
          <target state="translated">если аргумент равен &amp;plusmn; 0 или &amp;plusmn; &amp;infin;, он возвращается без изменений</target>
        </trans-unit>
        <trans-unit id="c2df7edfa7b4405703f581445a8452367771902b" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;0, &amp;plusmn;0 is returned</source>
          <target state="translated">если аргумент равен &amp;plusmn; 0, возвращается &amp;plusmn; 0</target>
        </trans-unit>
        <trans-unit id="d3bf1a94fe47eaf53d0780a1d9299def8dfd8d23" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;0, 1 is returned</source>
          <target state="translated">если аргумент равен &amp;plusmn; 0, возвращается 1</target>
        </trans-unit>
        <trans-unit id="60113d53785a368f483ea6644990b1f55f92d158" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;0, it is returned unmodified</source>
          <target state="translated">если аргумент равен &amp;plusmn; 0, он возвращается без изменений</target>
        </trans-unit>
        <trans-unit id="c25505d46685192a9f482e11f919518f7ee8a1f1" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;0, the result is 1.0</source>
          <target state="translated">если аргумент равен &amp;plusmn; 0, результат равен 1,0</target>
        </trans-unit>
        <trans-unit id="9e81f5cce3fedaf5208c7fdd5827d5d8bcabc9c5" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;1, &amp;plusmn;&amp;infin; is returned and &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_DIVBYZERO&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">если аргумент равен &amp;plusmn; 1, возвращается &amp;plusmn; &amp;infin; и &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_DIVBYZERO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0c8a32a1a67b049dd0a34bb9d8fc4b8271ec492" translate="yes" xml:space="preserve">
          <source>if the argument is +&amp;infin;, +&amp;infin; is returned</source>
          <target state="translated">если аргумент + &amp;infin;, + &amp;infin; возвращается</target>
        </trans-unit>
        <trans-unit id="d01a2a2f5aac5ae430863c5b4f3d7cae19226d6a" translate="yes" xml:space="preserve">
          <source>if the argument is 1, +0 is returned</source>
          <target state="translated">если аргумент 1,то возвращается +0.</target>
        </trans-unit>
        <trans-unit id="5d2354a411a328d6f45042db43663a98e23dd056" translate="yes" xml:space="preserve">
          <source>if the argument is NaN, NaN is returned</source>
          <target state="translated">если аргумент NaN,возвращается NaN.</target>
        </trans-unit>
        <trans-unit id="60a7e9baa06698e6bb8d974bc0c976545459866d" translate="yes" xml:space="preserve">
          <source>if the argument is NaN, NaN is returned.</source>
          <target state="translated">если аргумент NaN,NaN возвращается.</target>
        </trans-unit>
        <trans-unit id="08d00088511496e12a2d600f1ec98edb72f74077" translate="yes" xml:space="preserve">
          <source>if the argument is less than 1, &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; is raised an NaN is returned</source>
          <target state="translated">если аргумент меньше 1, &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; повышается, возвращается NaN</target>
        </trans-unit>
        <trans-unit id="2b068376ff6240a0c34f77fc6b76823a62c253b2" translate="yes" xml:space="preserve">
          <source>if the capture is by-copy, the non-static data member of the closure object is another way to refer to that auto variable.</source>
          <target state="translated">если захват осуществляется путем бай-копирования,то нестатический член данных объекта закрытия-это еще один способ обращения к этой автоматической переменной.</target>
        </trans-unit>
        <trans-unit id="64c86ef6f7cfb872a781713783631ab1ce88cc31" translate="yes" xml:space="preserve">
          <source>if the capture is by-reference, the reference variable's lifetime ends when the lifetime of the closure object ends</source>
          <target state="translated">если захват является побочным,то время жизни ссылочной переменной заканчивается,когда заканчивается время жизни объекта закрытия</target>
        </trans-unit>
        <trans-unit id="1b871e2aa8bbfe41701cc3ba5410adf1c8a8d518" translate="yes" xml:space="preserve">
          <source>if the compiler opted to lift dynamic initialization of an object to the static initialization phase of &lt;a href=&quot;../../language/initialization&quot;&gt;non-local initialization&lt;/a&gt;, the sequencing of destruction honors its would-be dynamic initialization.</source>
          <target state="translated">если компилятор решил поднять динамическую инициализацию объекта до статической фазы инициализации &lt;a href=&quot;../../language/initialization&quot;&gt;нелокальной инициализации&lt;/a&gt; , последовательность уничтожения учитывает его потенциальную динамическую инициализацию.</target>
        </trans-unit>
        <trans-unit id="7a703fd8cd37ff2b77a9a52aa26e6e83c4bf2837" translate="yes" xml:space="preserve">
          <source>if the definition invokes a function with a precondition (&lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;expects:&lt;/a&gt;]]&lt;/code&gt;) or is a function that contains an assertion (&lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;assert:&lt;/a&gt;]]&lt;/code&gt;) or has a contract condition (&lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;expects:&lt;/a&gt;]]&lt;/code&gt; or &lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;ensures:&lt;/a&gt;]]&lt;/code&gt;), it is implementation-defined under which conditions all definitions must be translated using the same build level and violation continuation mode</source>
          <target state="translated">если определение вызывает функцию с предварительным условием ( &lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;expects:&lt;/a&gt;]]&lt;/code&gt; ) или является функцией, которая содержит утверждение ( &lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;assert:&lt;/a&gt;]]&lt;/code&gt; ) или имеет условие контракта ( &lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;expects:&lt;/a&gt;]]&lt;/code&gt; или &lt;code&gt;[[&lt;a href=&quot;attributes/contract&quot;&gt;ensures:&lt;/a&gt;]]&lt;/code&gt; ), это определяется реализацией, при которой все определения должны переводиться с использованием одного и того же уровня сборки и режима продолжения нарушения</target>
        </trans-unit>
        <trans-unit id="bb1846e6eb2c64f52e0f012ec22f439208d268ad" translate="yes" xml:space="preserve">
          <source>if the definition is for a class with an implicitly-declared constructor, every translation unit where it is odr-used must call the same constructor for the base and members</source>
          <target state="translated">если определение дано для класса с неявно декларируемым конструктором,каждая единица перевода,в которой она используется,должна вызывать один и тот же конструктор для базы и ее членов</target>
        </trans-unit>
        <trans-unit id="90944be8e3b59a1aabba68bb1a112cc4fa3a0bc8" translate="yes" xml:space="preserve">
          <source>if the definition is for a template, then all these requirements apply to both names at the point of definition and dependent names at the point of instantiation</source>
          <target state="translated">если определение предназначено для шаблона,то все эти требования применяются как к именам в точке определения,так и к зависимым именам в точке инстанцирования</target>
        </trans-unit>
        <trans-unit id="947fa764719e2231c9905508ab79eb34a71aebcd" translate="yes" xml:space="preserve">
          <source>if the elements within each equivalent key group are arranged in the same order (happens when the containers are copies of each other).</source>
          <target state="translated">если элементы внутри каждой эквивалентной группы ключей расположены в одном порядке (это происходит,когда контейнеры являются копиями друг друга).</target>
        </trans-unit>
        <trans-unit id="362ceb9b54804ac6f77095b2abb2ab098db36e63" translate="yes" xml:space="preserve">
          <source>if the enclosing lambda &lt;code&gt;m1&lt;/code&gt; captures by copy, &lt;code&gt;m2&lt;/code&gt; is capturing the non-static member of &lt;code&gt;m1&lt;/code&gt;'s closure type, not the original variable or &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">если вмещающая лямбда &lt;code&gt;m1&lt;/code&gt; захватывает путем копирования, &lt;code&gt;m2&lt;/code&gt; захватывает нестатический член типа закрытия &lt;code&gt;m1&lt;/code&gt; , а не исходную переменную или &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85a971554dcc7d10485ce7cae1741c8d694f7ec3" translate="yes" xml:space="preserve">
          <source>if the enclosing lambda &lt;code&gt;m1&lt;/code&gt; captures by reference, &lt;code&gt;m2&lt;/code&gt; is capturing the original variable or &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">если охватывающая лямбда &lt;code&gt;m1&lt;/code&gt; захватывает по ссылке, &lt;code&gt;m2&lt;/code&gt; захватывает исходную переменную или &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca6a64963df3a707ba2558aa99892c632a363ab7" translate="yes" xml:space="preserve">
          <source>if the end of the stream is reached (the call to &lt;code&gt;rdbuf()-&amp;gt;sbumpc()&lt;/code&gt; or &lt;code&gt;rdbuf()-&amp;gt;sgetc()&lt;/code&gt; returns &lt;code&gt;Traits::eof()&lt;/code&gt;), sets &lt;code&gt;eofbit&lt;/code&gt;. If exceptions on eofbit are enabled in this stream's exception mask, throws &lt;a href=&quot;../io/ios_base/failure&quot;&gt;&lt;code&gt;ios_base::failure&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">если достигнут конец потока (вызов &lt;code&gt;rdbuf()-&amp;gt;sbumpc()&lt;/code&gt; или &lt;code&gt;rdbuf()-&amp;gt;sgetc()&lt;/code&gt; возвращает &lt;code&gt;Traits::eof()&lt;/code&gt; ), устанавливает &lt;code&gt;eofbit&lt;/code&gt; . Если исключения в eofbit включены в маске исключений этого потока, выдает &lt;a href=&quot;../io/ios_base/failure&quot;&gt; &lt;code&gt;ios_base::failure&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f1647b4c2035bd97d546ffeff50229f953015dbc" translate="yes" xml:space="preserve">
          <source>if the end of the stream is reached (the call to &lt;code&gt;rdbuf()-&amp;gt;sbumpc()&lt;/code&gt; or &lt;code&gt;rdbuf()-&amp;gt;sgetc()&lt;/code&gt; returns &lt;code&gt;Traits::eof()&lt;/code&gt;, sets &lt;code&gt;eofbit&lt;/code&gt;. If exceptions on eofbit are enabled in this stream's exception mask, throws &lt;a href=&quot;../io/ios_base/failure&quot;&gt;&lt;code&gt;ios_base::failure&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">если достигнут конец потока (вызов &lt;code&gt;rdbuf()-&amp;gt;sbumpc()&lt;/code&gt; или &lt;code&gt;rdbuf()-&amp;gt;sgetc()&lt;/code&gt; возвращает &lt;code&gt;Traits::eof()&lt;/code&gt; , устанавливает &lt;code&gt;eofbit&lt;/code&gt; . Если исключения в eofbit включены в исключении этого потока) маска, выбрасывает &lt;a href=&quot;../io/ios_base/failure&quot;&gt; &lt;code&gt;ios_base::failure&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e05feb73fddb2ee16675ac944658be481454797" translate="yes" xml:space="preserve">
          <source>if the expression &lt;code&gt;E1&lt;/code&gt; has class type, the syntax &lt;code&gt;E1 = {args...}&lt;/code&gt; generates a call to the assignment operator with the</source>
          <target state="translated">если выражение &lt;code&gt;E1&lt;/code&gt; имеет тип класса, синтаксис &lt;code&gt;E1 = {args...}&lt;/code&gt; генерирует вызов оператора присваивания с</target>
        </trans-unit>
        <trans-unit id="b6c06be532dff5dc2975120c0df95c01e9a2203a" translate="yes" xml:space="preserve">
          <source>if the expression &lt;code&gt;E1&lt;/code&gt; has scalar type,</source>
          <target state="translated">если выражение &lt;code&gt;E1&lt;/code&gt; имеет скалярный тип,</target>
        </trans-unit>
        <trans-unit id="63235306f31d2470168b5c1edb3b9dc2d7e4e7df" translate="yes" xml:space="preserve">
          <source>if the function is named by an expression of type noexcept function or by an expression of type pointer to noexcept function, the set is empty</source>
          <target state="translated">если функция именована выражением типа noexcept function или выражением указателя типа noexcept function,то множество пустое</target>
        </trans-unit>
        <trans-unit id="42b540ec0bd60da02a96d8b26f06b578e1ef3855" translate="yes" xml:space="preserve">
          <source>if the function was called to write to an array of &lt;code&gt;CharT&lt;/code&gt;, writes &lt;code&gt;CharT()&lt;/code&gt; (the null character) to the first location of the array</source>
          <target state="translated">если функция была вызвана для записи в массив &lt;code&gt;CharT&lt;/code&gt; , записывает &lt;code&gt;CharT()&lt;/code&gt; (нулевой символ) в первое местоположение массива</target>
        </trans-unit>
        <trans-unit id="a4d6bae842d5fcacc61a76673a6c9e8f99ffbfaa" translate="yes" xml:space="preserve">
          <source>if the identifier names a function, a variable, a template parameter object(since C++20), or a data member, and</source>
          <target state="translated">если идентификатор имена функции,переменной,объекта шаблонного параметра (начиная с C++20),или члена данных,а также</target>
        </trans-unit>
        <trans-unit id="0f8bbdcfaca61a4a670392f8227fc1998d344c5a" translate="yes" xml:space="preserve">
          <source>if the initializer is a &lt;a href=&quot;value_category&quot;&gt;prvalue&lt;/a&gt; expression whose type is the same class as &lt;code&gt;T&lt;/code&gt; (ignoring cv-qualification), the initializer expression itself, rather than a temporary materialized from it, is used to initialize the destination object: see &lt;a href=&quot;copy_elision&quot;&gt;copy elision&lt;/a&gt;</source>
          <target state="translated">если инициализатор является выражением &lt;a href=&quot;value_category&quot;&gt;prvalue&lt;/a&gt; , тип которого совпадает с классом &lt;code&gt;T&lt;/code&gt; (игнорируя квалификацию cv), то для инициализации объекта назначения используется само выражение инициализатора, а не временное материализованное из него: см. &lt;a href=&quot;copy_elision&quot;&gt;copy elision&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7ebd9a9b443463c6922b703b2c74a09de3fa678" translate="yes" xml:space="preserve">
          <source>if the lookup set of &lt;code&gt;C&lt;/code&gt; built so far is empty, it is replaced by the lookup set of &lt;code&gt;Bi&lt;/code&gt;</source>
          <target state="translated">если поисковый набор &lt;code&gt;C&lt;/code&gt; , созданный до сих пор, пуст, он заменяется поисковым набором &lt;code&gt;Bi&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7044569dc67a9e051a2071d9323d71dc8158521f" translate="yes" xml:space="preserve">
          <source>if the original object had class type, it does not contain any non-static data member whose type is const-qualified or a reference type</source>
          <target state="translated">если исходный объект имел тип класса,то он не содержит никакого нестатического члена данных,тип которого является const-qualified или типом ссылки</target>
        </trans-unit>
        <trans-unit id="70b2a666946eb2ccce1b7b6a5a04acfeb3224f1a" translate="yes" xml:space="preserve">
          <source>if the return object or provider holds the last reference to its shared state, the shared state is destroyed; and</source>
          <target state="translated">если возвращаемый объект или провайдер держит последнюю ссылку на его общее состояние,общее состояние уничтожается;и</target>
        </trans-unit>
        <trans-unit id="062e9fb296773dc1c3c68994dfc785e008603de9" translate="yes" xml:space="preserve">
          <source>if the set of declarations in &lt;code&gt;Bi&lt;/code&gt; is empty, it is discarded</source>
          <target state="translated">если набор объявлений в &lt;code&gt;Bi&lt;/code&gt; пуст, он отбрасывается</target>
        </trans-unit>
        <trans-unit id="da7f3d8d912fbc4c337474a778de604677b06e9f" translate="yes" xml:space="preserve">
          <source>if the shared state is not ready, stores an exception object of type &lt;code&gt;&lt;a href=&quot;../future_error&quot;&gt;std::future_error&lt;/a&gt;&lt;/code&gt; with an error condition &lt;code&gt;&lt;a href=&quot;../future_errc&quot;&gt;std::future_errc::broken_promise&lt;/a&gt;&lt;/code&gt;, makes the shared state ready and releases it.</source>
          <target state="translated">если общее состояние не готово, сохраняет объект исключения типа &lt;code&gt;&lt;a href=&quot;../future_error&quot;&gt;std::future_error&lt;/a&gt;&lt;/code&gt; с условием ошибки &lt;code&gt;&lt;a href=&quot;../future_errc&quot;&gt;std::future_errc::broken_promise&lt;/a&gt;&lt;/code&gt; , готовит общее состояние и освобождает его.</target>
        </trans-unit>
        <trans-unit id="6e00ba6932a1cff9bc797f0b637fb58f02d88fb8" translate="yes" xml:space="preserve">
          <source>if the shared state is ready, releases it.</source>
          <target state="translated">если общее состояние готово,освободите его.</target>
        </trans-unit>
        <trans-unit id="de1984e0e1375ac9d8aec07f7ebca5ec49cd5cfb" translate="yes" xml:space="preserve">
          <source>if the type of &lt;code&gt;ranges::begin(E)&lt;/code&gt; models &lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/iterator/ForwardIterator&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt;&lt;code&gt;ForwardIterator&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;ranges::begin(E)&lt;/code&gt; is equality-preserving (in other words, forward iterators support multi-pass algorithms)</source>
          <target state="translated">если тип &lt;a href=&quot;https://en.cppreference.com/mwiki/index.php?title=cpp/iterator/ForwardIterator&amp;amp;action=edit&amp;amp;redlink=1&quot;&gt; &lt;code&gt;ForwardIterator&lt;/code&gt; &lt;/a&gt; &lt;code&gt;ranges::begin(E)&lt;/code&gt; моделирует ForwardIterator , range &lt;code&gt;ranges::begin(E)&lt;/code&gt; сохраняет равенство (другими словами, прямые итераторы поддерживают многопроходные алгоритмы)</target>
        </trans-unit>
        <trans-unit id="f8cfe4af30f321cb2b8986fef900c30e7560ba81" translate="yes" xml:space="preserve">
          <source>if the value is an object of class or array type, each subobject satisfies these constraints for values</source>
          <target state="translated">если значение является объектом класса или типа массива,то каждый подобъект удовлетворяет этим ограничениям для значений</target>
        </trans-unit>
        <trans-unit id="3851e5c0f92286819e234a6f0a52e8a8db562818" translate="yes" xml:space="preserve">
          <source>if the value is an object of class type, each non-static data member of reference type refers to an entity that satisfies the constraints for glvalues above</source>
          <target state="translated">если значение является объектом типа класса,то каждый нестатический член данных типа ссылок относится к сущности,удовлетворяющей ограничениям для значений glvalues выше</target>
        </trans-unit>
        <trans-unit id="0a33223fe5793837f26e70785e7294c9181dce4a" translate="yes" xml:space="preserve">
          <source>if the value is of pointer type, it holds</source>
          <target state="translated">если значение имеет тип указателя,то оно содержит</target>
        </trans-unit>
        <trans-unit id="19c9714a595577042ec8f38c3e3ba2e8c89cae76" translate="yes" xml:space="preserve">
          <source>if the value is of pointer-to-member-function type, it does not designate an &lt;a href=&quot;consteval&quot;&gt;immediate function&lt;/a&gt;(since C++20)</source>
          <target state="translated">если значение имеет тип указатель на функцию-член, оно не обозначает &lt;a href=&quot;consteval&quot;&gt;непосредственную функцию&lt;/a&gt; (начиная с C ++ 20)</target>
        </trans-unit>
        <trans-unit id="0e9f1bb123cc3750ff59e4eb5051b93bad1d4c07" translate="yes" xml:space="preserve">
          <source>if their constraints are specified differently, but they accept and are satisfied by the same set of template argument lists.</source>
          <target state="translated">если их ограничения заданы по-разному,но они принимают и удовлетворяются одним и тем же набором шаблонных списков аргументов.</target>
        </trans-unit>
        <trans-unit id="bd4665bf17310f6bddbce78eb83c8b4934974323" translate="yes" xml:space="preserve">
          <source>if there exist values &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;c1 == X::to_int_type(a)&lt;/code&gt; and &lt;code&gt;c2 == X::to_int_type(b)&lt;/code&gt;, yields the same as &lt;code&gt;X::eq(a,b)&lt;/code&gt;</source>
          <target state="translated">если существуют такие значения &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;b&lt;/code&gt; , что &lt;code&gt;c1 == X::to_int_type(a)&lt;/code&gt; и &lt;code&gt;c2 == X::to_int_type(b)&lt;/code&gt; , то же самое, что и &lt;code&gt;X::eq(a,b)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="376ec917f8e563c32136ebb1e090db169e44ecf8" translate="yes" xml:space="preserve">
          <source>if there is a &lt;code&gt;const&lt;/code&gt; in the cv1</source>
          <target state="translated">если есть &lt;code&gt;const&lt;/code&gt; в cv1</target>
        </trans-unit>
        <trans-unit id="c8e7e2dc2e330a9da24dd4a8870b7884fd0f902e" translate="yes" xml:space="preserve">
          <source>if there is a &lt;code&gt;volatile&lt;/code&gt; in the cv1</source>
          <target state="translated">если в cv1 есть &lt;code&gt;volatile&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38771ef9fe2ec9797ec1eb9a6a76a14bc4c084f9" translate="yes" xml:space="preserve">
          <source>if they are</source>
          <target state="translated">если они</target>
        </trans-unit>
        <trans-unit id="ba89d0575e7196e5b975a4b2ca5e120020b937c3" translate="yes" xml:space="preserve">
          <source>if they are formed from the same expression at the source level and their parameter mappings are equivalent.</source>
          <target state="translated">если они формируются из одного и того же выражения на уровне источника и их отображения параметров эквивалентны.</target>
        </trans-unit>
        <trans-unit id="6217f4c6e6fe65f9269d2f4a504e8f021c092c23" translate="yes" xml:space="preserve">
          <source>if they are not</source>
          <target state="translated">в противном случае</target>
        </trans-unit>
        <trans-unit id="df9248f698cc1d7fa3913cbeb91e0a4c8dae0a32" translate="yes" xml:space="preserve">
          <source>if they are the same type ignoring cv-qualifiers, if any(since C++14), are layout-compatible &lt;a href=&quot;enum&quot;&gt;enumerations&lt;/a&gt;, or if their</source>
          <target state="translated">если они одного типа, игнорирующие cv-квалификаторы, если таковые имеются (начиная с C ++ 14), &lt;a href=&quot;enum&quot;&gt;перечисления&lt;/a&gt; , совместимые с компоновкой , или если их</target>
        </trans-unit>
        <trans-unit id="8ff8d04ab26ba60d63edb2a1a4339a79f5154114" translate="yes" xml:space="preserve">
          <source>if they have the same number of non-static data members and corresponding non-static data members (in any order) have layout-compatible types.</source>
          <target state="translated">если они имеют одинаковое количество нестатических членов данных,а соответствующие нестатические члены данных (в любом порядке)имеют совместимые с макетами типы.</target>
        </trans-unit>
        <trans-unit id="8814e9bcdfa3cacf110a68a92f61b3c267a98cbd" translate="yes" xml:space="preserve">
          <source>if this is &lt;a href=&quot;direct_initialization&quot;&gt;direct-initialization&lt;/a&gt;, the explicit user-defined conversion functions of &lt;code&gt;S&lt;/code&gt; and its base classes (unless hidden) that produce type &lt;code&gt;T&lt;/code&gt; or a type convertible to &lt;code&gt;T&lt;/code&gt; by a &lt;a href=&quot;implicit_cast&quot;&gt;qualification conversion&lt;/a&gt;, or a reference to such type, are also considered.</source>
          <target state="translated">если это &lt;a href=&quot;direct_initialization&quot;&gt;прямая инициализация&lt;/a&gt; , также рассматриваются явные определяемые пользователем функции преобразования &lt;code&gt;S&lt;/code&gt; и его базовых классов (если не скрытые), которые создают тип &lt;code&gt;T&lt;/code&gt; или тип, преобразуемый в &lt;code&gt;T&lt;/code&gt; посредством &lt;a href=&quot;implicit_cast&quot;&gt;преобразования квалификации&lt;/a&gt; , или ссылку на такой тип.</target>
        </trans-unit>
        <trans-unit id="e5c28ca5a952343b4f2b60c81a3c8bc34026769b" translate="yes" xml:space="preserve">
          <source>if true, ignores the upper/lower case distinction in the character classification</source>
          <target state="translated">если верно,игнорирует разницу в верхнем/нижнем регистре в классификации символов.</target>
        </trans-unit>
        <trans-unit id="a96075f5a69975c20991a135c15091ca266d076c" translate="yes" xml:space="preserve">
          <source>if two function definitions that contain these expressions would be the same under &lt;a href=&quot;definition#One_Definition_Rule&quot;&gt;ODR rules&lt;/a&gt;, that is, the two expressions contain the same sequence of tokens whose names are resolved to same entities via name lookup, except template parameters may be differently named. Two &lt;a href=&quot;lambda&quot;&gt;lambda expressions&lt;/a&gt; are never equivalent.(since C++20).</source>
          <target state="translated">если два определения функций, которые содержат эти выражения, будут одинаковыми в &lt;a href=&quot;definition#One_Definition_Rule&quot;&gt;правилах ODR&lt;/a&gt; , то есть два выражения содержат одинаковую последовательность токенов, имена которых разрешаются в одни и те же объекты посредством поиска имен, за исключением того, что параметры шаблона могут иметь разные имена. Два &lt;a href=&quot;lambda&quot;&gt;лямбда-выражения&lt;/a&gt; никогда не бывают эквивалентными. (Начиная с C ++ 20).</target>
        </trans-unit>
        <trans-unit id="f3a5fb4322ea2556ee927d3c399d46dd6332ea15" translate="yes" xml:space="preserve">
          <source>if |arg|&amp;gt;1, NaN is returned and &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="translated">если | arg |&amp;gt; 1, возвращается NaN и &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="900ef63b24e3c156d41e48a83b660c07efc29da9" translate="yes" xml:space="preserve">
          <source>if, after conversion to &lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt;, the first dimension is a &lt;a href=&quot;constant_expression&quot;&gt;core constant expression&lt;/a&gt;, the program is ill-formed (a compile-time error is issued);</source>
          <target state="translated">если после преобразования в &lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; первое измерение является &lt;a href=&quot;constant_expression&quot;&gt;выражением основной константы&lt;/a&gt; , программа некорректна (выдается ошибка времени компиляции);</target>
        </trans-unit>
        <trans-unit id="412d4c88fd8ad65b71952e51b57ea09c3dec3868" translate="yes" xml:space="preserve">
          <source>if, for a glvalue &lt;code&gt;x&lt;/code&gt; of type &lt;code&gt;const T&lt;/code&gt;,</source>
          <target state="translated">если для glvalue &lt;code&gt;x&lt;/code&gt; типа &lt;code&gt;const T&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="b75bebccb9706ce79eca967d03168c403a9e9407" translate="yes" xml:space="preserve">
          <source>if, ignoring top-level cv-qualification:</source>
          <target state="translated">если,проигнорировав высокоуровневую квалификацию на СВ:</target>
        </trans-unit>
        <trans-unit id="34d34fab300b65888ec8f4c8ab5753aef9d68fd0" translate="yes" xml:space="preserve">
          <source>if.</source>
          <target state="translated">if.</target>
        </trans-unit>
        <trans-unit id="fd91710cf0e7d507cef2adf49e96a675c89abcf4" translate="yes" xml:space="preserve">
          <source>if:</source>
          <target state="translated">if:</target>
        </trans-unit>
        <trans-unit id="8ccbde832c3e0f90c55b72c598844679fff2167d" translate="yes" xml:space="preserve">
          <source>ignore</source>
          <target state="translated">ignore</target>
        </trans-unit>
        <trans-unit id="53c1d6afa31aaad85a6930481133ca5da8e088ce" translate="yes" xml:space="preserve">
          <source>il</source>
          <target state="translated">il</target>
        </trans-unit>
        <trans-unit id="8fdde041d7c8f7bc1978905f360006fae406ab23" translate="yes" xml:space="preserve">
          <source>il, args</source>
          <target state="translated">аргументы</target>
        </trans-unit>
        <trans-unit id="65e3b4d15ab11d54d88da1b5f6c7b26ea31e87a3" translate="yes" xml:space="preserve">
          <source>ilist</source>
          <target state="translated">ilist</target>
        </trans-unit>
        <trans-unit id="81c9a1e11c8b89bf9d5ee742a1e79a5a9741c1e8" translate="yes" xml:space="preserve">
          <source>ilist_i</source>
          <target state="translated">ilist_i</target>
        </trans-unit>
        <trans-unit id="6eae08af7ee7d1468e6e7140d5fe6f61d8028e6e" translate="yes" xml:space="preserve">
          <source>ill-formed</source>
          <target state="translated">ill-formed</target>
        </trans-unit>
        <trans-unit id="6a77f2af16709766831023c7793ae5e96a91cff2" translate="yes" xml:space="preserve">
          <source>ill-formed for &amp;gt;1 element, deduce element type for single element</source>
          <target state="translated">неправильно сформирован для&amp;gt; 1 элемента, выведите тип элемента для одного элемента</target>
        </trans-unit>
        <trans-unit id="aad612c2f92957723f23650064d21a0fd8b174e8" translate="yes" xml:space="preserve">
          <source>ill-formed no diagnostic required</source>
          <target state="translated">неудачная диагностика</target>
        </trans-unit>
        <trans-unit id="e6c497d5962269f21689c66eee4adb7dc2972768" translate="yes" xml:space="preserve">
          <source>ilog(P</source>
          <target state="translated">ilog(P</target>
        </trans-unit>
        <trans-unit id="c68b2045f03cd246ac10e9ec103c00dab1b5458f" translate="yes" xml:space="preserve">
          <source>ilogbilogbfilogbl</source>
          <target state="translated">ilogbilogbfilogbl</target>
        </trans-unit>
        <trans-unit id="42a0d3068dfe7945d084813fd66eb69745020815" translate="yes" xml:space="preserve">
          <source>im</source>
          <target state="translated">im</target>
        </trans-unit>
        <trans-unit id="c0ab4ae6443f3600e2f5fa0b615dafddb25a2731" translate="yes" xml:space="preserve">
          <source>imag</source>
          <target state="translated">imag</target>
        </trans-unit>
        <trans-unit id="e4aca5735c9c51de556ff01d9f228f6cf22f2dd3" translate="yes" xml:space="preserve">
          <source>imaxdiv_t</source>
          <target state="translated">imaxdiv_t</target>
        </trans-unit>
        <trans-unit id="cf512eeb0c46f95011aa1f33f68f63523733820b" translate="yes" xml:space="preserve">
          <source>imbue</source>
          <target state="translated">imbue</target>
        </trans-unit>
        <trans-unit id="36936cd70c95033f751226e5c9b9b68d0dd6f579" translate="yes" xml:space="preserve">
          <source>immediate context</source>
          <target state="translated">непосредственный контекст</target>
        </trans-unit>
        <trans-unit id="695161150c243aec820d04afe5c946e65171fbc7" translate="yes" xml:space="preserve">
          <source>immediate function</source>
          <target state="translated">непосредственная функция</target>
        </trans-unit>
        <trans-unit id="522781b18819dc6c775d749bf413ae4535008680" translate="yes" xml:space="preserve">
          <source>immediate invocation</source>
          <target state="translated">немедленное обращение</target>
        </trans-unit>
        <trans-unit id="d2b2e4509558030252595d634c0f91608b741d4a" translate="yes" xml:space="preserve">
          <source>immediate invocations</source>
          <target state="translated">немедленные вызовы</target>
        </trans-unit>
        <trans-unit id="797efd83f8c15deef7f4d4762a8c92d8b5a9305f" translate="yes" xml:space="preserve">
          <source>implementation</source>
          <target state="translated">implementation</target>
        </trans-unit>
        <trans-unit id="82ebe9a814b330c1b3e451ed383f6b0c55f53f2b" translate="yes" xml:space="preserve">
          <source>implementation defined</source>
          <target state="translated">описание применения</target>
        </trans-unit>
        <trans-unit id="412cac22d8c4a7558193645c50631bd8f5ed8570" translate="yes" xml:space="preserve">
          <source>implementation defined handle type representing the thread.</source>
          <target state="translated">Реализация заданного типа хэндла,представляющего поток.</target>
        </trans-unit>
        <trans-unit id="bff48f4b6bea135116a966e2bbf764f028166af2" translate="yes" xml:space="preserve">
          <source>implementation defined name of the type</source>
          <target state="translated">имя типа,определённое в реализации</target>
        </trans-unit>
        <trans-unit id="538515ff6f91de1d962966eb86680765714a21a0" translate="yes" xml:space="preserve">
          <source>implementation execution may happen without an operating system.</source>
          <target state="translated">Реализация может произойти и без операционной системы.</target>
        </trans-unit>
        <trans-unit id="eab1c9bb5a461af02f658c90627711746c5bbac8" translate="yes" xml:space="preserve">
          <source>implementation has an implementation-defined set of headers. This set includes at least the headers in the following table:</source>
          <target state="translated">Реализация имеет определенный набор заголовков.Этот набор включает в себя,как минимум,заголовки в следующей таблице:</target>
        </trans-unit>
        <trans-unit id="a7d4ed726693ee385fdd7c4bb0bb7c632916f7f6" translate="yes" xml:space="preserve">
          <source>implementation test to see if showmanyc() is implemented for filebuf.</source>
          <target state="translated">тест реализации,чтобы посмотреть,реализован ли showmanyc()для файловой системы.</target>
        </trans-unit>
        <trans-unit id="68d5111aa8bee25970382f92f1312d5a70a872d3" translate="yes" xml:space="preserve">
          <source>implementation, a C++ program can have more than one &lt;a href=&quot;thread&quot;&gt;thread&lt;/a&gt; running concurrently.</source>
          <target state="translated">Реализация, C ++ программа может иметь более одного &lt;a href=&quot;thread&quot;&gt;потока,&lt;/a&gt; запущенного одновременно.</target>
        </trans-unit>
        <trans-unit id="d8d444c47acacacf739342b883f2b94265f2a9bd" translate="yes" xml:space="preserve">
          <source>implementation, a program must contain a global function called &lt;a href=&quot;language/main_function&quot;&gt;&lt;code&gt;main&lt;/code&gt;&lt;/a&gt;. Executing a program starts a main &lt;a href=&quot;thread&quot;&gt;thread of execution&lt;/a&gt; in which the &lt;code&gt;main&lt;/code&gt; function is invoked, and in which variables of static &lt;a href=&quot;language/storage_duration&quot;&gt;storage duration&lt;/a&gt; might be initialized and destroyed.</source>
          <target state="translated">Реализация, программа должна содержать глобальную функцию с именем &lt;a href=&quot;language/main_function&quot;&gt; &lt;code&gt;main&lt;/code&gt; &lt;/a&gt; . Выполнение программы запускает основной &lt;a href=&quot;thread&quot;&gt;поток выполнения,&lt;/a&gt; в котором вызывается &lt;code&gt;main&lt;/code&gt; функция, и в котором переменные продолжительности статического &lt;a href=&quot;language/storage_duration&quot;&gt;хранения&lt;/a&gt; могут быть инициализированы и уничтожены.</target>
        </trans-unit>
        <trans-unit id="5c186961e350369e63f44a63f5e5f519892954c3" translate="yes" xml:space="preserve">
          <source>implementation, it is implementation-defined whether a program can have more than one &lt;a href=&quot;thread&quot;&gt;thread of execution&lt;/a&gt;.</source>
          <target state="translated">реализация, это определяется реализацией, может ли программа иметь более одного &lt;a href=&quot;thread&quot;&gt;потока выполнения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dcf32ed53b9fcb0d99cebda123df2125073a53ae" translate="yes" xml:space="preserve">
          <source>implementation, it is implementation-defined whether a program is required to define a &lt;a href=&quot;language/main_function&quot;&gt;&lt;code&gt;main&lt;/code&gt;&lt;/a&gt; function. Start-up and termination is implementation-defined; start-up contains the execution of &lt;a href=&quot;language/constructor&quot;&gt;constructors&lt;/a&gt; for objects of &lt;a href=&quot;language/scope#Namespace_scope&quot;&gt;namespace scope&lt;/a&gt; with static storage duration; termination contains the execution of &lt;a href=&quot;language/destructor&quot;&gt;destructors&lt;/a&gt; for objects with static &lt;a href=&quot;language/storage_duration&quot;&gt;storage duration&lt;/a&gt;.</source>
          <target state="translated">реализация, это определяется реализацией, требуется ли программе определить &lt;a href=&quot;language/main_function&quot;&gt; &lt;code&gt;main&lt;/code&gt; &lt;/a&gt; функцию. Запуск и завершение определяется реализацией; запуск содержит выполнение &lt;a href=&quot;language/constructor&quot;&gt;конструкторов&lt;/a&gt; для объектов области &lt;a href=&quot;language/scope#Namespace_scope&quot;&gt;пространства имен&lt;/a&gt; со статической продолжительностью хранения; Завершение содержит выполнение &lt;a href=&quot;language/destructor&quot;&gt;деструкторов&lt;/a&gt; для объектов со статической &lt;a href=&quot;language/storage_duration&quot;&gt;длительностью хранения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ff7808b91ea3d12391a4e5b0bc8e78eec5f18df" translate="yes" xml:space="preserve">
          <source>implementation-defined</source>
          <target state="translated">implementation-defined</target>
        </trans-unit>
        <trans-unit id="5011af40b08460372ad86933c979a25e367984b7" translate="yes" xml:space="preserve">
          <source>implementation-defined &lt;a href=&quot;../named_req/randomaccessiterator&quot;&gt;LegacyRandomAccessIterator&lt;/a&gt;, &lt;a href=&quot;../named_req/constexpriterator&quot;&gt;ConstexprIterator&lt;/a&gt;, and &lt;a href=&quot;../named_req/contiguousiterator&quot;&gt;LegacyContiguousIterator&lt;/a&gt; whose &lt;code&gt;value_type&lt;/code&gt; is &lt;code&gt;value_type&lt;/code&gt;</source>
          <target state="translated">от реализации &lt;a href=&quot;../named_req/randomaccessiterator&quot;&gt;LegacyRandomAccessIterator&lt;/a&gt; , &lt;a href=&quot;../named_req/constexpriterator&quot;&gt;ConstexprIterator&lt;/a&gt; и &lt;a href=&quot;../named_req/contiguousiterator&quot;&gt;LegacyContiguousIterator&lt;/a&gt; которого &lt;code&gt;value_type&lt;/code&gt; является &lt;code&gt;value_type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3d5acd4bc65fe867a7ad90e4afd17518bf62958" translate="yes" xml:space="preserve">
          <source>implementation-defined argument, message id in POSIX</source>
          <target state="translated">параметр,определяемый реализацией,идентификатор сообщения в POSIX</target>
        </trans-unit>
        <trans-unit id="dc571b4db03be2ca1d50944023091426389e6033" translate="yes" xml:space="preserve">
          <source>implementation-defined argument, message set in POSIX</source>
          <target state="translated">параметр,определяемый реализацией,сообщение,установленное в POSIX</target>
        </trans-unit>
        <trans-unit id="2f624b7b9583b9f5991df27b2520bb844b1dd862" translate="yes" xml:space="preserve">
          <source>implementation-defined behavior</source>
          <target state="translated">определяемое внедрение поведение</target>
        </trans-unit>
        <trans-unit id="d70d1ad221062fb9d532c2fdbf1296fe55010bfb" translate="yes" xml:space="preserve">
          <source>implementation-defined constant &lt;a href=&quot;../named_req/randomaccessiterator&quot;&gt;LegacyRandomAccessIterator&lt;/a&gt;, &lt;a href=&quot;../named_req/constexpriterator&quot;&gt;ConstexprIterator&lt;/a&gt;(since C++20) and &lt;a href=&quot;../named_req/contiguousiterator&quot;&gt;LegacyContiguousIterator&lt;/a&gt; whose &lt;code&gt;value_type&lt;/code&gt; is &lt;code&gt;CharT&lt;/code&gt;</source>
          <target state="translated">константа, определяемая реализацией &lt;a href=&quot;../named_req/randomaccessiterator&quot;&gt;LegacyRandomAccessIterator&lt;/a&gt; , &lt;a href=&quot;../named_req/constexpriterator&quot;&gt;ConstexprIterator&lt;/a&gt; (начиная с C ++ 20) и &lt;a href=&quot;../named_req/contiguousiterator&quot;&gt;LegacyContiguousIterator&lt;/a&gt; , &lt;code&gt;value_type&lt;/code&gt; типом которого является &lt;code&gt;CharT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="318575972f465ba4bbe41c610197a992fa79b46b" translate="yes" xml:space="preserve">
          <source>implementation-defined constant &lt;a href=&quot;../named_req/randomaccessiterator&quot;&gt;LegacyRandomAccessIterator&lt;/a&gt;, &lt;a href=&quot;../named_req/constexpriterator&quot;&gt;ConstexprIterator&lt;/a&gt;, and &lt;a href=&quot;../named_req/contiguousiterator&quot;&gt;LegacyContiguousIterator&lt;/a&gt; whose &lt;code&gt;value_type&lt;/code&gt; is &lt;code&gt;value_type&lt;/code&gt;</source>
          <target state="translated">константа, определяемая реализацией &lt;a href=&quot;../named_req/randomaccessiterator&quot;&gt;LegacyRandomAccessIterator&lt;/a&gt; , &lt;a href=&quot;../named_req/constexpriterator&quot;&gt;ConstexprIterator&lt;/a&gt; и &lt;a href=&quot;../named_req/contiguousiterator&quot;&gt;LegacyContiguousIterator&lt;/a&gt; , &lt;code&gt;value_type&lt;/code&gt; типом которого является значение- &lt;code&gt;value_type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b8f67da593a5376d50427e5d5a1b1c43f6270c7" translate="yes" xml:space="preserve">
          <source>implementation-defined error message string describing the error code stored in &lt;code&gt;errno&lt;/code&gt;, followed by &lt;code&gt;'\n'&lt;/code&gt;. The error message string is identical to the result of &lt;code&gt;&lt;a href=&quot;../../string/byte/strerror&quot;&gt;std::strerror&lt;/a&gt;(errno)&lt;/code&gt;.</source>
          <target state="translated">определяемая реализацией строка сообщения об ошибке, описывающая код ошибки, сохраненный в &lt;code&gt;errno&lt;/code&gt; , за которым следует &lt;code&gt;'\n'&lt;/code&gt; . Строка сообщения об ошибке идентична результату &lt;code&gt;&lt;a href=&quot;../../string/byte/strerror&quot;&gt;std::strerror&lt;/a&gt;(errno)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49d49698c0f7fa1c31e4c46d9dac513eb2d15ab0" translate="yes" xml:space="preserve">
          <source>implementation-defined format, auto-detected where possible</source>
          <target state="translated">формат,определяемый реализацией,с автоматическим определением,где это возможно.</target>
        </trans-unit>
        <trans-unit id="db2b3f1bcf7b982f139f8323813b02c7949213e2" translate="yes" xml:space="preserve">
          <source>implementation-defined null pointer constant</source>
          <target state="translated">реализованная нулевая константа указателя</target>
        </trans-unit>
        <trans-unit id="ec893b85fdfef47340443e0dd029b43cec50cc70" translate="yes" xml:space="preserve">
          <source>implementation-defined value, if present</source>
          <target state="translated">значение,определяемое реализацией,если оно присутствует</target>
        </trans-unit>
        <trans-unit id="7d1561b969dec3f7aaf5e3a9f5ef670013977ea2" translate="yes" xml:space="preserve">
          <source>implementation-defined value, if present, typically used to indicate C conformance</source>
          <target state="translated">значение,определяемое реализацией,если оно присутствует,обычно используется для указания соответствия C</target>
        </trans-unit>
        <trans-unit id="55fe25832f7348f35e7bd83f9b8bafc478e21674" translate="yes" xml:space="preserve">
          <source>implementations the set of standard library headers required by the C++ standard is much larger than for</source>
          <target state="translated">реализации набор заголовков стандартных библиотек,требуемый стандартом C++,намного больше,чем для</target>
        </trans-unit>
        <trans-unit id="2165f2f20d88cbd97c922add1f3e3a9172a77513" translate="yes" xml:space="preserve">
          <source>implementations. For</source>
          <target state="translated">внедрения.Для</target>
        </trans-unit>
        <trans-unit id="b58b2707194c2af693832efab2cfce47f75ad7d8" translate="yes" xml:space="preserve">
          <source>implements &lt;a href=&quot;https://en.wikipedia.org/wiki/Linear_congruential_generator&quot;&gt; linear congruential&lt;/a&gt; algorithm</source>
          <target state="translated">реализует &lt;a href=&quot;https://en.wikipedia.org/wiki/Linear_congruential_generator&quot;&gt;линейный конгруэнтный&lt;/a&gt; алгоритм</target>
        </trans-unit>
        <trans-unit id="73be3da67ba1abeb2113bf4a436be8543011d704" translate="yes" xml:space="preserve">
          <source>implements &lt;a href=&quot;https://en.wikipedia.org/wiki/Mersenne_twister&quot;&gt; Mersenne twister&lt;/a&gt; algorithm</source>
          <target state="translated">реализует алгоритм &lt;a href=&quot;https://en.wikipedia.org/wiki/Mersenne_twister&quot;&gt;Твистера Мерсенна&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f69f6c61a5d31047187ba103138ab3409d78ae55" translate="yes" xml:space="preserve">
          <source>implements a strictly scope-based mutex ownership wrapper</source>
          <target state="translated">реализует обёртку в собственное владение из мютекса строго по объёму</target>
        </trans-unit>
        <trans-unit id="daef85cadbf0976cae9ac67784ac75831e407ed4" translate="yes" xml:space="preserve">
          <source>implements a subtract-with-carry (&lt;a href=&quot;https://en.wikipedia.org/wiki/Lagged_Fibonacci_generator&quot;&gt; lagged Fibonacci&lt;/a&gt;) algorithm</source>
          <target state="translated">реализует алгоритм вычитания с переносом (с &lt;a href=&quot;https://en.wikipedia.org/wiki/Lagged_Fibonacci_generator&quot;&gt;запаздыванием по Фибоначчи&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="3232026dc791c7f064a9735018d2e31142b17dec" translate="yes" xml:space="preserve">
          <source>implements arithmetic operations with durations as arguments</source>
          <target state="translated">реализует арифметические операции с длительностью в качестве аргументов</target>
        </trans-unit>
        <trans-unit id="1053630c685b3f6c7345fc4a4366390562755586" translate="yes" xml:space="preserve">
          <source>implements basic logic for preparation of the stream for input operations</source>
          <target state="translated">реализует базовую логику подготовки потока к входным операциям</target>
        </trans-unit>
        <trans-unit id="0ec3026e4e0c340ccef4fa48c3ddcb43bb0272d7" translate="yes" xml:space="preserve">
          <source>implements basic logic for preparation of the stream for output operations</source>
          <target state="translated">реализует базовую логику подготовки потока к выходным операциям</target>
        </trans-unit>
        <trans-unit id="fc4a226abc4008134515131ae3cb1c9cbe4730b4" translate="yes" xml:space="preserve">
          <source>implements binary tuple, i.e. a pair of values</source>
          <target state="translated">реализует двоичный кортеж,т.е.пару значений.</target>
        </trans-unit>
        <trans-unit id="bea7dfc8af3d44e672c76ffeb97194597c30daab" translate="yes" xml:space="preserve">
          <source>implements character array input operations</source>
          <target state="translated">реализует операции ввода символьного массива</target>
        </trans-unit>
        <trans-unit id="af9b020b38e4c7d5d05c5eac21cc1f3ff4bca746" translate="yes" xml:space="preserve">
          <source>implements character array input/output operations</source>
          <target state="translated">реализует операции ввода/вывода символьных массивов</target>
        </trans-unit>
        <trans-unit id="25734fde7b481a7b83af9291ed4ee6a0c8f89a26" translate="yes" xml:space="preserve">
          <source>implements character array output operations</source>
          <target state="translated">реализует операции вывода символьного массива</target>
        </trans-unit>
        <trans-unit id="c697c0b7c33f816fbbb8c274dde63092440d2a30" translate="yes" xml:space="preserve">
          <source>implements compile-time sequence of integers</source>
          <target state="translated">реализует компиляционную последовательность целых чисел</target>
        </trans-unit>
        <trans-unit id="b6f80f04d7c36f4d87db7db2c6e7825cfebe96b5" translate="yes" xml:space="preserve">
          <source>implements compound assignment between two durations</source>
          <target state="translated">распределение соединений между двумя длинами</target>
        </trans-unit>
        <trans-unit id="6b957be7bc07bbdf08f87ad1dae1590767dec27a" translate="yes" xml:space="preserve">
          <source>implements constant length bit array</source>
          <target state="translated">реализует битовый массив постоянной длины</target>
        </trans-unit>
        <trans-unit id="08fbdb5d046a5c95857465fadacee48895099cc0" translate="yes" xml:space="preserve">
          <source>implements fixed size container, which holds elements of possibly different types</source>
          <target state="translated">реализует контейнер фиксированного размера,в котором хранятся элементы,возможно,различных типов</target>
        </trans-unit>
        <trans-unit id="de234dfc9f55a0d15a4ab6f55207772d98878855" translate="yes" xml:space="preserve">
          <source>implements high-level file stream input operations</source>
          <target state="translated">реализует высокоуровневые операции ввода файлового потока</target>
        </trans-unit>
        <trans-unit id="63ea7fd96cae0354297545b742a4bf2b4fc85e2a" translate="yes" xml:space="preserve">
          <source>implements high-level file stream input/output operations</source>
          <target state="translated">реализует высокоуровневые операции ввода/вывода файлового потока</target>
        </trans-unit>
        <trans-unit id="610bb2c41252403274d4f5288ef3f65708fdf4ba" translate="yes" xml:space="preserve">
          <source>implements high-level file stream output operations</source>
          <target state="translated">реализует высокоуровневые операции вывода файлового потока</target>
        </trans-unit>
        <trans-unit id="acc7e8625a5850ba91f45b31959a4c066cac42af" translate="yes" xml:space="preserve">
          <source>implements high-level string stream input operations</source>
          <target state="translated">реализует высокоуровневые операции ввода строковых потоков</target>
        </trans-unit>
        <trans-unit id="b2c0fe4e7e96fd576cd244498050fc77094f5e26" translate="yes" xml:space="preserve">
          <source>implements high-level string stream input/output operations</source>
          <target state="translated">реализует высокоуровневые операции ввода/вывода потока строк</target>
        </trans-unit>
        <trans-unit id="a46fded20c16e64daefd817e7642cb2c69507c63" translate="yes" xml:space="preserve">
          <source>implements high-level string stream output operations</source>
          <target state="translated">реализует высокоуровневые операции вывода строковых потоков</target>
        </trans-unit>
        <trans-unit id="a221d9c1d3a91fd1c0903efa208b0d021384769c" translate="yes" xml:space="preserve">
          <source>implements lexicographical ordering of byte strings</source>
          <target state="translated">реализует лексикографическое упорядочение байтовых строк</target>
        </trans-unit>
        <trans-unit id="220aaec261fc8fb97a7230ca1028c11dde2aeb2c" translate="yes" xml:space="preserve">
          <source>implements lexicographical ordering of wide strings</source>
          <target state="translated">реализует лексикографический заказ широких струн</target>
        </trans-unit>
        <trans-unit id="1bfa65669f5cef0f4f8a15fd2a8513c3e9517ec5" translate="yes" xml:space="preserve">
          <source>implements movable mutex ownership wrapper</source>
          <target state="translated">оснастка съёмная обёртка для мьютекса в собственности</target>
        </trans-unit>
        <trans-unit id="f5002e567ec698f5ea31a43fdb2c816b52c3125c" translate="yes" xml:space="preserve">
          <source>implements movable shared mutex ownership wrapper</source>
          <target state="translated">реализует движимую общую обёртку в собственность из мютекса</target>
        </trans-unit>
        <trans-unit id="4b9631b7164f49be4a82a0c10d19c51fc95032d6" translate="yes" xml:space="preserve">
          <source>implements multi-level allocator for multi-level containers</source>
          <target state="translated">реализует многоуровневый аллокатор для многоуровневых контейнеров</target>
        </trans-unit>
        <trans-unit id="8ad05bf6cf0d635878f30314d1460eb499e7bfe1" translate="yes" xml:space="preserve">
          <source>implements raw character array device</source>
          <target state="translated">реализует устройство массива символов raw</target>
        </trans-unit>
        <trans-unit id="079d4a2da457867f928c0e005a47a084c042ada9" translate="yes" xml:space="preserve">
          <source>implements raw file device</source>
          <target state="translated">реализует файловое устройство raw</target>
        </trans-unit>
        <trans-unit id="f0d18f3d37109de87089d752847ff6778fc60b42" translate="yes" xml:space="preserve">
          <source>implements raw string device</source>
          <target state="translated">реализует устройство необработанной строки</target>
        </trans-unit>
        <trans-unit id="a7e0b0725b0e70d6ccdb2bf0ae900684704952c4" translate="yes" xml:space="preserve">
          <source>implements retrieval of strings from message catalogs</source>
          <target state="translated">реализует извлечение строк из каталогов сообщений</target>
        </trans-unit>
        <trans-unit id="bcb8efe0cec6ea777ff63620713cb4f3b279b39e" translate="yes" xml:space="preserve">
          <source>implements unary + and unary -</source>
          <target state="translated">орудия унарные+и унарные -</target>
        </trans-unit>
        <trans-unit id="09d7304dc0a40d12a940a73706708cbfad2740dc" translate="yes" xml:space="preserve">
          <source>implicit</source>
          <target state="translated">implicit</target>
        </trans-unit>
        <trans-unit id="2ccbddeadd37f5dc64a8669e87d9edceb8e46fe6" translate="yes" xml:space="preserve">
          <source>implicit conversion sequence</source>
          <target state="translated">последовательность неявного преобразования</target>
        </trans-unit>
        <trans-unit id="27369325eb6bb818656331922ef7f566137464fa" translate="yes" xml:space="preserve">
          <source>implicit conversion to &lt;code&gt;std::partial_ordering&lt;/code&gt;</source>
          <target state="translated">неявное преобразование в &lt;code&gt;std::partial_ordering&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3b292693740d18ede54785161da93af07c84ad6" translate="yes" xml:space="preserve">
          <source>implicit conversion to &lt;code&gt;std::strong_equality&lt;/code&gt;</source>
          <target state="translated">неявное преобразование в &lt;code&gt;std::strong_equality&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3def6628ea931165263f19191d822864adcd00b" translate="yes" xml:space="preserve">
          <source>implicit conversion to &lt;code&gt;std::weak_equality&lt;/code&gt;</source>
          <target state="translated">неявное преобразование в &lt;code&gt;std::weak_equality&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d91685acfd32b6b441959b9394940dfa5c1fbc8" translate="yes" xml:space="preserve">
          <source>implicit conversion to &lt;code&gt;std::weak_ordering&lt;/code&gt;</source>
          <target state="translated">неявное преобразование в &lt;code&gt;std::weak_ordering&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36e60d4d62ea9097637f9a46cce6ccd60ccb3750" translate="yes" xml:space="preserve">
          <source>implicit conversions</source>
          <target state="translated">неявные преобразования</target>
        </trans-unit>
        <trans-unit id="a21ef474b316e57a67474f8ae8cc36dc50fbf3cc" translate="yes" xml:space="preserve">
          <source>implicit conversions from one type to another</source>
          <target state="translated">неявные приведения от одного типа к другому</target>
        </trans-unit>
        <trans-unit id="5c35a8852a43d093b7eeb938743d79d276099c8c" translate="yes" xml:space="preserve">
          <source>implicit destructor</source>
          <target state="translated">неявный деструктор</target>
        </trans-unit>
        <trans-unit id="86881fb1c7d5801c80e3c02cc6838caf0bedf312" translate="yes" xml:space="preserve">
          <source>implicit expression variations</source>
          <target state="translated">неявные колебания выражений</target>
        </trans-unit>
        <trans-unit id="fd225734acfef692d988fbc6eac831433d8d0ac8" translate="yes" xml:space="preserve">
          <source>implicit object argument</source>
          <target state="translated">неявный объектный аргумент</target>
        </trans-unit>
        <trans-unit id="07ca02ce762d0035a9a048a409dc6a26a5a4ad98" translate="yes" xml:space="preserve">
          <source>implicit object parameter</source>
          <target state="translated">неявный объектный параметр</target>
        </trans-unit>
        <trans-unit id="78f70caf59d07a2749fb018b8edf03fd43fe6d87" translate="yes" xml:space="preserve">
          <source>implicitly</source>
          <target state="translated">implicitly</target>
        </trans-unit>
        <trans-unit id="5ec1b0f0b0416f5056ee2c4cf54b27bfcf8bead6" translate="yes" xml:space="preserve">
          <source>implicitly convertible to &lt;code&gt;T2&lt;/code&gt;</source>
          <target state="translated">неявно преобразуется в &lt;code&gt;T2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ebe551ecb2b5d5ed38fa1bfb89ad08e176b7c87d" translate="yes" xml:space="preserve">
          <source>implied object argument</source>
          <target state="translated">подразумеваемый объектный аргумент</target>
        </trans-unit>
        <trans-unit id="ea7016aa58c825bea9b4368bf7ec50e55f06f55a" translate="yes" xml:space="preserve">
          <source>implies substitutability: if a is equivalent to b, f(a) is also equivalent to f(b), where f denotes a function that reads only comparison-salient state that is accessible via the argument's public const members. In other words, equivalent values are indistinguishable.</source>
          <target state="translated">подразумевает заменяемость:если a эквивалентно b,то f(a)также эквивалентно f(b),где f обозначает функцию,которая читает только сравнительно сальдированное состояние,доступное через членов аргумента public const.Другими словами,эквивалентные значения неразличимы.</target>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">in</target>
        </trans-unit>
        <trans-unit id="341165676bdad32c5134987f260f2450731dcd98" translate="yes" xml:space="preserve">
          <source>in &lt;a href=&quot;except_spec&quot;&gt;dynamic exception specification&lt;/a&gt;.</source>
          <target state="translated">в &lt;a href=&quot;except_spec&quot;&gt;спецификации динамических исключений&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da52a62dc28d146efc5e10666f0fe7c9faf2b805" translate="yes" xml:space="preserve">
          <source>in &lt;a href=&quot;friend#Template_friends&quot;&gt;friend class template&lt;/a&gt; declarations</source>
          <target state="translated">в объявлениях &lt;a href=&quot;friend#Template_friends&quot;&gt;шаблона класса друга&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a10d2809873205bc4fe2a433d81672edf1179d03" translate="yes" xml:space="preserve">
          <source>in a class template definition:</source>
          <target state="translated">в определении шаблона класса:</target>
        </trans-unit>
        <trans-unit id="2a3758beddb4f482995f2db68d5b9d376efff557" translate="yes" xml:space="preserve">
          <source>in a friend declaration</source>
          <target state="translated">по дружеской договоренности</target>
        </trans-unit>
        <trans-unit id="41e56fbc448161088368e1be8c8ba8060d2432e4" translate="yes" xml:space="preserve">
          <source>in a function call expression</source>
          <target state="translated">в выражении вызова функции</target>
        </trans-unit>
        <trans-unit id="5202e3ec9a913ca0cf310c4f80858c7fc70d8b9b" translate="yes" xml:space="preserve">
          <source>in a function call expression is classified as</source>
          <target state="translated">в выражении вызова функции классифицируется как</target>
        </trans-unit>
        <trans-unit id="bd6f01b3271f76bb8a521108b08193c4125653cc" translate="yes" xml:space="preserve">
          <source>in a function definition</source>
          <target state="translated">в определении функции</target>
        </trans-unit>
        <trans-unit id="523ce56d01ddcf5fa6d69690d2ca6995125e3f79" translate="yes" xml:space="preserve">
          <source>in a function or function template declaration, specifies an &lt;a href=&quot;http://en.cppreference.com/w/cpp/experimental/constraints&quot;&gt; associated constraint&lt;/a&gt;(concepts TS)</source>
          <target state="translated">в объявлении функции или шаблона функции указывает &lt;a href=&quot;http://en.cppreference.com/w/cpp/experimental/constraints&quot;&gt;связанное ограничение&lt;/a&gt; (понятия TS)</target>
        </trans-unit>
        <trans-unit id="da710de0b8ee9798454875673e1d05fbf79a35ee" translate="yes" xml:space="preserve">
          <source>in a primary class template definition or in the definition of its member:</source>
          <target state="translated">в определении шаблона первичного класса или в определении его члена:</target>
        </trans-unit>
        <trans-unit id="5dfdb3172478846541fceb955f32ff5117d4b00b" translate="yes" xml:space="preserve">
          <source>in a template argument expression</source>
          <target state="translated">в выражении шаблонного аргумента</target>
        </trans-unit>
        <trans-unit id="28d12c6fb2e35ac0973fb1c0e9f258a28d79a59a" translate="yes" xml:space="preserve">
          <source>in addition, if the union-like class is a union, its non-static data members that are not anonymous unions.</source>
          <target state="translated">Кроме того,если профсоюзный класс является профсоюзом,то его нестатические члены,не являющиеся анонимными профсоюзами.</target>
        </trans-unit>
        <trans-unit id="f446a937080acf37c433c050684e124ef428ec25" translate="yes" xml:space="preserve">
          <source>in an explicit instantiation</source>
          <target state="translated">в явной форме</target>
        </trans-unit>
        <trans-unit id="8839c72d7b2893e6ec23d24118c97c0ededf0bff" translate="yes" xml:space="preserve">
          <source>in an explicit specialization</source>
          <target state="translated">в явной специализации</target>
        </trans-unit>
        <trans-unit id="7ce18f7332017d341daabfd6711f04738864e5be" translate="yes" xml:space="preserve">
          <source>in an expression used in function declaration</source>
          <target state="translated">в выражении,используемом в объявлении функции</target>
        </trans-unit>
        <trans-unit id="c56dda09f0f142dfc3576d9eb89566917dd679b4" translate="yes" xml:space="preserve">
          <source>in an expression, where the function is selected by overload resolution</source>
          <target state="translated">в выражении,где функция выбирается по разрешению перегрузки</target>
        </trans-unit>
        <trans-unit id="5c0b14f00d4385a76f9b4656711756ba06e7b53b" translate="yes" xml:space="preserve">
          <source>in any &lt;a href=&quot;function_template&quot;&gt;function template&lt;/a&gt; declaration or definition</source>
          <target state="translated">в любом объявлении или определении &lt;a href=&quot;function_template&quot;&gt;шаблона функции&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="246b79a92008bf25fe7ea34e9ea0a13124753c49" translate="yes" xml:space="preserve">
          <source>in any case, the returned value is independent of the current rounding mode</source>
          <target state="translated">в любом случае,возвращаемое значение не зависит от текущего режима округления</target>
        </trans-unit>
        <trans-unit id="575349d5d876c36366f945f3870023a791d09bd8" translate="yes" xml:space="preserve">
          <source>in its own class scope or in the class scope of a derived class</source>
          <target state="translated">в собственной области видимости класса или в области видимости класса производного класса</target>
        </trans-unit>
        <trans-unit id="7bd136afc839f593d349d8aa562aa16afe57246b" translate="yes" xml:space="preserve">
          <source>in other contexts, the function template type is used</source>
          <target state="translated">в других контекстах используется тип шаблона функции</target>
        </trans-unit>
        <trans-unit id="25eb6caa4bc0abf7fed53ff611d1f412666fac6b" translate="yes" xml:space="preserve">
          <source>in other languages) are permitted.</source>
          <target state="translated">на других языках)разрешены.</target>
        </trans-unit>
        <trans-unit id="739cd9144ceca7a1ccd108a4a78310cbb6a026d3" translate="yes" xml:space="preserve">
          <source>in other words, &lt;code&gt;reduce&lt;/code&gt; behaves like &lt;code&gt;&lt;a href=&quot;accumulate&quot;&gt;std::accumulate&lt;/a&gt;&lt;/code&gt; except the elements of the range may be grouped and rearranged in arbitrary order.</source>
          <target state="translated">иными словами, &lt;code&gt;reduce&lt;/code&gt; ведет себя как &lt;code&gt;&lt;a href=&quot;accumulate&quot;&gt;std::accumulate&lt;/a&gt;&lt;/code&gt; за исключением того, что элементы диапазона могут быть сгруппированы и переставлены в произвольном порядке.</target>
        </trans-unit>
        <trans-unit id="dbca263b1d37b381e039afa119aa7c83ce49d65e" translate="yes" xml:space="preserve">
          <source>in other words, the results of unary_op or of binary_op1 may be grouped and arranged in arbitrary order.</source>
          <target state="translated">Другими словами,результаты unary_op или binary_op1 могут быть сгруппированы и упорядочены в произвольном порядке.</target>
        </trans-unit>
        <trans-unit id="e0d21519dd510e280330aa529e16373e9858b4d8" translate="yes" xml:space="preserve">
          <source>in particular, member typedefs value_type and difference_type are added</source>
          <target state="translated">в частности,добавляются member typedefs value_type и difference_type</target>
        </trans-unit>
        <trans-unit id="6d7ec6a96154b109df5e9c59f6e8946fde0e40d4" translate="yes" xml:space="preserve">
          <source>in that case, coroutine state is embedded in the caller's stack frame (if the caller is an ordinary function) or coroutine state (if the caller is a coroutine).</source>
          <target state="translated">в этом случае состояние корутины встраивается во фрейм стека вызывающего абонента (если вызывающий абонент является обычной функцией)или в состояние корутины (если вызывающий абонент является корутиной).</target>
        </trans-unit>
        <trans-unit id="d70e63cd7c3312b759e7595f09429144d4dbb569" translate="yes" xml:space="preserve">
          <source>in the binding-to-members case, the members are required to be public</source>
          <target state="translated">в деле о привязке к членам,члены должны быть публичными.</target>
        </trans-unit>
        <trans-unit id="d40636c2e6182984a02449c60a716d872ede0553" translate="yes" xml:space="preserve">
          <source>in the complex plane and has no branch cuts.</source>
          <target state="translated">в сложной плоскости и не имеет срезов ветвей.</target>
        </trans-unit>
        <trans-unit id="16e7df3e9b637c1060c7091433dde54de5b8c6d0" translate="yes" xml:space="preserve">
          <source>in the context of a call to a user-defined conversion function, the return types of the conversion function templates are used</source>
          <target state="translated">в контексте вызова пользовательской функции преобразования используются возвращаемые типы шаблонов функции преобразования</target>
        </trans-unit>
        <trans-unit id="55dd68039689e7f74ae51bc875fe9a0ad461d79a" translate="yes" xml:space="preserve">
          <source>in the context of a function call, the types are those function parameter types for which the function call has arguments (default function arguments, parameter packs, and ellipsis parameters are not considered -- see examples below)</source>
          <target state="translated">в контексте вызова функции-это типы параметров функции,для которых вызов функции имеет аргументы (аргументы функции по умолчанию,пакеты параметров и параметры эллипсиса не рассматриваются-см.примеры ниже).</target>
        </trans-unit>
        <trans-unit id="968a63001d5daa68002cd4b15634b029109455e0" translate="yes" xml:space="preserve">
          <source>in the current scope that nominates this unnamed namespace.</source>
          <target state="translated">в текущем диапазоне,который назначает это безымянное пространство имён.</target>
        </trans-unit>
        <trans-unit id="10c8000a8360311ebf098cd64f11f819de706e20" translate="yes" xml:space="preserve">
          <source>in the definition of a nested class or class template:</source>
          <target state="translated">в определении вложенного класса или шаблона класса:</target>
        </trans-unit>
        <trans-unit id="3465297c7bb754f52fa579353681191dfe7b28cf" translate="yes" xml:space="preserve">
          <source>in the definition of a partial specialization or of a member of a partial specialization</source>
          <target state="translated">в определении частичной специализации или члена частичной специализации</target>
        </trans-unit>
        <trans-unit id="048154cbf157dbc3b94f12f804a6a889ca8ecc3b" translate="yes" xml:space="preserve">
          <source>in the expressions &lt;code&gt;i == j&lt;/code&gt;, &lt;code&gt;i != j&lt;/code&gt;, &lt;code&gt;i &amp;lt; j&lt;/code&gt;, &lt;code&gt;i &amp;lt;= j&lt;/code&gt;, &lt;code&gt;i &amp;gt;= j&lt;/code&gt;, &lt;code&gt;i &amp;gt; j&lt;/code&gt;, &lt;code&gt;i - j&lt;/code&gt;, either or both may be replaced by an object of the container's &lt;code&gt;const_iterator&lt;/code&gt; type referring to the same element with no change in semantics.</source>
          <target state="translated">в выражениях &lt;code&gt;i == j&lt;/code&gt; , &lt;code&gt;i != j&lt;/code&gt; , &lt;code&gt;i &amp;lt; j&lt;/code&gt; , &lt;code&gt;i &amp;lt;= j&lt;/code&gt; , &lt;code&gt;i &amp;gt;= j&lt;/code&gt; , &lt;code&gt;i &amp;gt; j&lt;/code&gt; , &lt;code&gt;i - j&lt;/code&gt; , оба или оба могут быть заменены объектом типа &lt;code&gt;const_iterator&lt;/code&gt; контейнера, ссылаясь на к тому же элементу без изменения семантики.</target>
        </trans-unit>
        <trans-unit id="0f12cc0a3540854da06506f6641d70a90166c942" translate="yes" xml:space="preserve">
          <source>in the following conditions:</source>
          <target state="translated">в следующих условиях:</target>
        </trans-unit>
        <trans-unit id="ca048418281745d52cc220eb5531b461a2fc2c67" translate="yes" xml:space="preserve">
          <source>in the following contexts.</source>
          <target state="translated">в следующих контекстах.</target>
        </trans-unit>
        <trans-unit id="34afce9c934e92a6c37e43500f0cec44c201a3a9" translate="yes" xml:space="preserve">
          <source>in the invented declaration &lt;code&gt;T x init;&lt;/code&gt;.</source>
          <target state="translated">в выдуманной декларации &lt;code&gt;T x init;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="7f799cb521eb6025aaf3d46f32c448a41c3abb98" translate="yes" xml:space="preserve">
          <source>in the name of a &lt;a href=&quot;cast_operator&quot;&gt;user-defined conversion function&lt;/a&gt;, the abstract declarator cannot include function or array operators.</source>
          <target state="translated">в имени определяемой &lt;a href=&quot;cast_operator&quot;&gt;пользователем функции преобразования&lt;/a&gt; абстрактный декларатор не может включать операторы функции или массива.</target>
        </trans-unit>
        <trans-unit id="cd60ddfdc52c29f37df0cfcaee071dfa75647838" translate="yes" xml:space="preserve">
          <source>in the out-of-class definition of a member of a &lt;a href=&quot;class_template&quot;&gt;class template&lt;/a&gt; (they have to be provided in the declaration inside the class body). Note that &lt;a href=&quot;member_template&quot;&gt;member templates&lt;/a&gt; of non-template classes can use default parameters in their out-of-class definitions (see &lt;a href=&quot;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=53856&quot;&gt;GCC bug 53856&lt;/a&gt;)</source>
          <target state="translated">во внеклассном определении члена &lt;a href=&quot;class_template&quot;&gt;шаблона класса&lt;/a&gt; (они должны быть указаны в объявлении внутри тела класса). Обратите внимание, что &lt;a href=&quot;member_template&quot;&gt;шаблоны-члены&lt;/a&gt; не шаблонных классов могут использовать параметры по умолчанию в своих определениях вне класса (см. &lt;a href=&quot;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=53856&quot;&gt;Ошибку GCC 53856&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="63e5b25724417474a2cae0ee8d8276a310d9b548" translate="yes" xml:space="preserve">
          <source>in the parameter list of a &lt;a href=&quot;function#Parameter_list&quot;&gt;function&lt;/a&gt; (when the parameter name is omitted), type-id uses</source>
          <target state="translated">в списке параметров &lt;a href=&quot;function#Parameter_list&quot;&gt;функции&lt;/a&gt; (если имя параметра опущено), используется идентификатор типа</target>
        </trans-unit>
        <trans-unit id="90e12df27e93d4468c576318c1cca3b8d1e7cbab" translate="yes" xml:space="preserve">
          <source>in the range</source>
          <target state="translated">в пределах</target>
        </trans-unit>
        <trans-unit id="d1fa31c58313db496edcdcd2a0f9e9226c464e09" translate="yes" xml:space="preserve">
          <source>in the range &lt;code&gt;[first, last)&lt;/code&gt;. The first version of the function uses &lt;code&gt;operator&amp;lt;&lt;/code&gt; to compare the elements, the second uses the given comparison function &lt;code&gt;comp&lt;/code&gt;.</source>
          <target state="translated">в диапазоне &lt;code&gt;[first, last)&lt;/code&gt; . Первая версия функции использует &lt;code&gt;operator&amp;lt;&lt;/code&gt; для сравнения элементов, вторая использует заданную функцию сравнения &lt;code&gt;comp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c551c67cb956acbf80cd21ebdd478ad08b472dec" translate="yes" xml:space="preserve">
          <source>in the range [1, 5]. It represents the first, second, third, fourth, or fifth weekday of some month.</source>
          <target state="translated">в диапазоне [1,5].Он представляет собой первый,второй,третий,четвертый или пятый день недели какого-то месяца.</target>
        </trans-unit>
        <trans-unit id="634048ca8507f3d6902676b654d3aa23df6773f3" translate="yes" xml:space="preserve">
          <source>in the thread that did a load), but also establish a</source>
          <target state="translated">в резьбе,которая делала нагрузку),но также установить</target>
        </trans-unit>
        <trans-unit id="a66e51add6b1da1210711773ed1be903c74c5927" translate="yes" xml:space="preserve">
          <source>in the tuple-like case, member &lt;code&gt;get&lt;/code&gt; is used if lookup finds a &lt;code&gt;get&lt;/code&gt; of whatever kind</source>
          <target state="translated">в случае кортежа, член &lt;code&gt;get&lt;/code&gt; используется, если lookup находит &lt;code&gt;get&lt;/code&gt; любого вида</target>
        </trans-unit>
        <trans-unit id="7fc01882d74fe41e61aa9ef59f7dc1755de092ef" translate="yes" xml:space="preserve">
          <source>in the type specifier of a variable: &lt;code&gt;auto x = expr;&lt;/code&gt;. The type is deduced from the initializer.</source>
          <target state="translated">в спецификаторе типа переменной: &lt;code&gt;auto x = expr;&lt;/code&gt; , Тип выводится из инициализатора.</target>
        </trans-unit>
        <trans-unit id="7b71412e21f427b4655d9e22a7781ca0389483d4" translate="yes" xml:space="preserve">
          <source>in the type-id of a &lt;a href=&quot;new&quot;&gt;new expression&lt;/a&gt;. The type is deduced from the initializer. For &lt;code&gt;new &lt;i&gt;T&lt;/i&gt; &lt;i&gt;init&lt;/i&gt;&lt;/code&gt; (where</source>
          <target state="translated">в идентификаторе типа &lt;a href=&quot;new&quot;&gt;нового выражения&lt;/a&gt; . Тип выводится из инициализатора. Для &lt;code&gt;new &lt;i&gt;T&lt;/i&gt; &lt;i&gt;init&lt;/i&gt;&lt;/code&gt; (где</target>
        </trans-unit>
        <trans-unit id="6968b8bd4e5ac8b8aae311c74313ec8c636bfb0e" translate="yes" xml:space="preserve">
          <source>in the worst case where</source>
          <target state="translated">в худшем случае,когда</target>
        </trans-unit>
        <trans-unit id="887c435763a2f14ffaaefa11e63df5ca12b3c6fa" translate="yes" xml:space="preserve">
          <source>in the worst case, where</source>
          <target state="translated">в худшем случае,когда</target>
        </trans-unit>
        <trans-unit id="1082b851c28b5bd3d7dea812ebfb175ea1fba947" translate="yes" xml:space="preserve">
          <source>in this table, &lt;code&gt;@&lt;/code&gt; is a placeholder representing all matching operators: all prefix operators in @a, all postfix operators other than -&amp;gt; in a@, all infix operators other than = in a@b.</source>
          <target state="translated">в этой таблице &lt;code&gt;@&lt;/code&gt; - это заполнитель, представляющий все соответствующие операторы: все префиксные операторы в @a, все постфиксные операторы, кроме -&amp;gt; в a @, все инфиксные операторы, кроме = в a @ b.</target>
        </trans-unit>
        <trans-unit id="f88e3c495ee266fe956f83190b49341f56d03745" translate="yes" xml:space="preserve">
          <source>in thread B. That is, once the atomic load is completed, thread B is guaranteed to see everything thread A wrote to memory.</source>
          <target state="translated">в потоке B.То есть,как только атомная нагрузка будет завершена,поток B гарантированно увидит все,что поток A записал в память.</target>
        </trans-unit>
        <trans-unit id="7407a18c1335b21c9aa58aa4ab22f75dc5aa41cf" translate="yes" xml:space="preserve">
          <source>in-place construction tag</source>
          <target state="translated">строительная метка</target>
        </trans-unit>
        <trans-unit id="92224beb922e3c388eb48d76304e01e156cc1755" translate="yes" xml:space="preserve">
          <source>in-recursive-copy</source>
          <target state="translated">in-recursive-copy</target>
        </trans-unit>
        <trans-unit id="f0ca7ea2f3133339871b222aa52a1f9472268c67" translate="yes" xml:space="preserve">
          <source>in_avail</source>
          <target state="translated">in_avail</target>
        </trans-unit>
        <trans-unit id="46300ccf095e3c890ff3d20186e4e88f04f16cb3" translate="yes" xml:space="preserve">
          <source>in_place  in_place_type  in_place_index  in_place_t in_place_type_t in_place_index_t</source>
          <target state="translated">in_place in_place_type in_place_index in_place_t in_place_type_t in_place_index_t</target>
        </trans-unit>
        <trans-unit id="01c7ed68f55970624482e9b4f91cf2223db29947" translate="yes" xml:space="preserve">
          <source>includes</source>
          <target state="translated">includes</target>
        </trans-unit>
        <trans-unit id="ddfac1709eba59b55eb6847710ae93b6bd0f9fd6" translate="yes" xml:space="preserve">
          <source>inclusive OR</source>
          <target state="translated">включительно ИЛИ</target>
        </trans-unit>
        <trans-unit id="196b1c9ad0a431d69f75060482a7e849b4cb8c79" translate="yes" xml:space="preserve">
          <source>inclusive_scan</source>
          <target state="translated">inclusive_scan</target>
        </trans-unit>
        <trans-unit id="453915b7f98e847ba0153de68b8783451897d165" translate="yes" xml:space="preserve">
          <source>incomplete enumeration types were allowed</source>
          <target state="translated">неполные переписи разрешены</target>
        </trans-unit>
        <trans-unit id="f722e265fe84d9f9b1bb54c599bea30c75b6acb5" translate="yes" xml:space="preserve">
          <source>incomplete return type allowed</source>
          <target state="translated">допустимый тип возврата из-за неполноты</target>
        </trans-unit>
        <trans-unit id="cf67022b710de7616366e4beff84048a7eba3492" translate="yes" xml:space="preserve">
          <source>incomplete types</source>
          <target state="translated">неполные виды</target>
        </trans-unit>
        <trans-unit id="b820b6ef74d042fad5733b5e7ca377647195199e" translate="yes" xml:space="preserve">
          <source>increment (with multiple passes)</source>
          <target state="translated">приращение (с несколькими проходами)</target>
        </trans-unit>
        <trans-unit id="cef9992b4c750348ac70183cc962063d32d5bac5" translate="yes" xml:space="preserve">
          <source>increment (without multiple passes)</source>
          <target state="translated">прирост (без многократных проходов)</target>
        </trans-unit>
        <trans-unit id="ed0d5f3841dc61c4fa669113715c1327eea687a0" translate="yes" xml:space="preserve">
          <source>increment an iterator</source>
          <target state="translated">увеличивать итератор</target>
        </trans-unit>
        <trans-unit id="fb3ef5878c4697e44e23445fac3ce0b0b6ba7dbb" translate="yes" xml:space="preserve">
          <source>increment an iterator by a given distance or to a bound</source>
          <target state="translated">увеличивает итератор на заданное расстояние или на границу</target>
        </trans-unit>
        <trans-unit id="0b801fef35ef2b62aa102a8705aeeb484dcd2ed8" translate="yes" xml:space="preserve">
          <source>increment and decrement</source>
          <target state="translated">инкремент и декремент</target>
        </trans-unit>
        <trans-unit id="1ea5249e766e24269dad40576842e89fc6665652" translate="yes" xml:space="preserve">
          <source>increment&lt;br/&gt;decrement</source>
          <target state="translated">increment&lt;br/&gt;decrement</target>
        </trans-unit>
        <trans-unit id="bfba462ca3b9da15085acdfdf43168ef0b5b3533" translate="yes" xml:space="preserve">
          <source>incrementable</source>
          <target state="translated">incrementable</target>
        </trans-unit>
        <trans-unit id="43fc2a09602b27e60f871697d4fbc19b027d74c9" translate="yes" xml:space="preserve">
          <source>incrementable_traits</source>
          <target state="translated">incrementable_traits</target>
        </trans-unit>
        <trans-unit id="8f014e2d51fd841ee8ef13a87c937a0469706298" translate="yes" xml:space="preserve">
          <source>incrementing a copy of &lt;code&gt;a&lt;/code&gt; does not change the value read from &lt;code&gt;a&lt;/code&gt; (formally, either &lt;code&gt;It&lt;/code&gt; is a raw pointer type or the expression &lt;code&gt;(void)++It(a), *a&lt;/code&gt; is equivalent to the expression &lt;code&gt;*a&lt;/code&gt;)</source>
          <target state="translated">приращение копии не изменяет значение , считанного из (формально, либо &lt;code&gt;It&lt;/code&gt; является исходным типом указателя или выражение &lt;code&gt;(void)++It(a), *a&lt;/code&gt; это эквивалентен выражению &lt;code&gt;*a&lt;/code&gt; ) &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d1c05f197c4fbb722839879ac19c7503cdb2bda" translate="yes" xml:space="preserve">
          <source>incrementoperator++</source>
          <target state="translated">incrementoperator++</target>
        </trans-unit>
        <trans-unit id="02857340902cc9f384a104407e618b9cbe80603a" translate="yes" xml:space="preserve">
          <source>increments or decrements the atomic value by one</source>
          <target state="translated">увеличивает или уменьшает атомную стоимость на единицу</target>
        </trans-unit>
        <trans-unit id="8a12f76123bc9918850f56e27ae53afc00ca16db" translate="yes" xml:space="preserve">
          <source>increments or decrements the day</source>
          <target state="translated">приращения или постановления в день</target>
        </trans-unit>
        <trans-unit id="0be2437c8b08ef914d6d72a6e47d2ea30dbde993" translate="yes" xml:space="preserve">
          <source>increments or decrements the duration</source>
          <target state="translated">приращения или постановления продолжительность</target>
        </trans-unit>
        <trans-unit id="263a9b56c8e87554d0aa779d01c856250c38e732" translate="yes" xml:space="preserve">
          <source>increments or decrements the month</source>
          <target state="translated">приращения или постановления за месяц</target>
        </trans-unit>
        <trans-unit id="6f3ae8bb1a56b19f945d6a346b4508db15bd1da8" translate="yes" xml:space="preserve">
          <source>increments or decrements the tick count</source>
          <target state="translated">приращения или постановления подсчёт тиков</target>
        </trans-unit>
        <trans-unit id="a40e8cfde47e78a9dd71dc1dc7027b9d0fe4e865" translate="yes" xml:space="preserve">
          <source>increments or decrements the weekday</source>
          <target state="translated">приращения или постановления в будний день</target>
        </trans-unit>
        <trans-unit id="784d2984c04c0f8cb1faf51d6bc88608f911b8ca" translate="yes" xml:space="preserve">
          <source>increments or decrements the year</source>
          <target state="translated">приращения или постановления за год</target>
        </trans-unit>
        <trans-unit id="6d7a3bedf04d719c420d74bb39e357a1c8254519" translate="yes" xml:space="preserve">
          <source>independent_bits_engine</source>
          <target state="translated">independent_bits_engine</target>
        </trans-unit>
        <trans-unit id="a14ef28c9c19220ed60636009c15cf038c66f616" translate="yes" xml:space="preserve">
          <source>indeterminate unsigned char is allowed</source>
          <target state="translated">неподписанный символ разрешён</target>
        </trans-unit>
        <trans-unit id="e540cdd1328b2b21e29a95405c301b9313b7c346" translate="yes" xml:space="preserve">
          <source>index</source>
          <target state="translated">index</target>
        </trans-unit>
        <trans-unit id="7316a6db0c2472ec4940d9513f533567b7c04972" translate="yes" xml:space="preserve">
          <source>index of the first character to take</source>
          <target state="translated">индекс первого персонажа</target>
        </trans-unit>
        <trans-unit id="3260031765db9b05411c9e981265481e0f3f4d84" translate="yes" xml:space="preserve">
          <source>index of the variant in the invalid state</source>
          <target state="translated">индекс варианта в недействительном состоянии</target>
        </trans-unit>
        <trans-unit id="8e0bb3a3b31a3617aee6dbbb0d5a747e3c84a3b2" translate="yes" xml:space="preserve">
          <source>index to look up</source>
          <target state="translated">индекс для поиска</target>
        </trans-unit>
        <trans-unit id="ae64c2b0fde35763ad75a6c48d5a5173c41d171c" translate="yes" xml:space="preserve">
          <source>index value of the element</source>
          <target state="translated">значение индекса элемента</target>
        </trans-unit>
        <trans-unit id="72b69536325b7926c9bdc063610e72398ac7cbbb" translate="yes" xml:space="preserve">
          <source>index_str</source>
          <target state="translated">index_str</target>
        </trans-unit>
        <trans-unit id="f7edaf3282dafb609c7d421b786486f127371e76" translate="yes" xml:space="preserve">
          <source>indicate</source>
          <target state="translated">indicate</target>
        </trans-unit>
        <trans-unit id="cfdf1939371162fd51a66847dcbdc79903def336" translate="yes" xml:space="preserve">
          <source>indicates a floating-point category</source>
          <target state="translated">указывает на категорию с плавающей запятой</target>
        </trans-unit>
        <trans-unit id="2327e5189ab71a925d23a6199479e329ac10d879" translate="yes" xml:space="preserve">
          <source>indicates floating-point denormalization modes</source>
          <target state="translated">указывает режимы денормализации с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="40af79ca281f626fb346b9171a00c987006c1513" translate="yes" xml:space="preserve">
          <source>indicates floating-point rounding modes</source>
          <target state="translated">указывает на режимы округления с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="4789efc674b22b6fbf7706ad5f8309a86bb33f51" translate="yes" xml:space="preserve">
          <source>indicates membership in a character class</source>
          <target state="translated">указывает на принадлежность к классу символов</target>
        </trans-unit>
        <trans-unit id="32a0fe1606b46cadb05b2cdcda319298a0068f09" translate="yes" xml:space="preserve">
          <source>indicates membership in a localized character class</source>
          <target state="translated">указывает на принадлежность к локальному классу символов</target>
        </trans-unit>
        <trans-unit id="b8cf4b212c2cf8b6480e6a56a5f08c17f2a71ccb" translate="yes" xml:space="preserve">
          <source>indicates program execution execution status</source>
          <target state="translated">указывает на состояние выполнения программы</target>
        </trans-unit>
        <trans-unit id="5ec49d3b5e400df08ef734700cd4d17897304ecb" translate="yes" xml:space="preserve">
          <source>indicates that UTF-16 encoding is used by mbrtoc16 and c16rtomb</source>
          <target state="translated">указывает на то,что кодировка UTF-16 используется mbrtoc16 и c16rtomb</target>
        </trans-unit>
        <trans-unit id="1c700f909e5824414c852c3779e62d88d9d67153" translate="yes" xml:space="preserve">
          <source>indicates that UTF-32 encoding is used by mbrtoc32 and c32rtomb</source>
          <target state="translated">указывает на то,что кодировка UTF-32 используется mbrtoc32 и c32rtomb</target>
        </trans-unit>
        <trans-unit id="077b173a417cdd2a8efc2dfee4573c39bd1e89c1" translate="yes" xml:space="preserve">
          <source>indicates that a duration is convertible to duration with different tick period</source>
          <target state="translated">указывает,что продолжительность конвертируется в продолжительность с разным тиковым периодом</target>
        </trans-unit>
        <trans-unit id="ee281d51a371d613bd3878583e52f44a78703fe9" translate="yes" xml:space="preserve">
          <source>indicates that a non-static data member need not have an address distinct from all other non-static data members of its class</source>
          <target state="translated">указывает на то,что нестатический член данных не обязательно должен иметь адрес,отличный от всех других нестатических членов его класса данных</target>
        </trans-unit>
        <trans-unit id="e3c802f2af957f6d33179c0aa4575d29cf50f70b" translate="yes" xml:space="preserve">
          <source>indicates that an object is &lt;code&gt;std::bind&lt;/code&gt; expression or can be used as one</source>
          <target state="translated">указывает, что объект является выражением &lt;code&gt;std::bind&lt;/code&gt; или может использоваться как один</target>
        </trans-unit>
        <trans-unit id="19167176e50ce935b5a42e174e568da12fb72e09" translate="yes" xml:space="preserve">
          <source>indicates that an object is a standard placeholder or can be used as one</source>
          <target state="translated">указывает на то,что объект является стандартным заполнителем или может быть использован в качестве такового</target>
        </trans-unit>
        <trans-unit id="5659a210fbf35b10ad8a334d4f66638845a89c7c" translate="yes" xml:space="preserve">
          <source>indicates that dependency chain in release-consume &lt;code&gt;&lt;a href=&quot;../atomic/memory_order&quot;&gt;std::memory_order&lt;/a&gt;&lt;/code&gt; propagates in and out of the function</source>
          <target state="translated">указывает, что цепочка зависимостей в выпуске-потреблении &lt;code&gt;&lt;a href=&quot;../atomic/memory_order&quot;&gt;std::memory_order&lt;/a&gt;&lt;/code&gt; распространяется внутри и вне функции</target>
        </trans-unit>
        <trans-unit id="c1c42770147d206b915c4ac299bb9df9829e9b21" translate="yes" xml:space="preserve">
          <source>indicates that floating-point exceptions are used: at least &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_DIVBYZERO&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_OVERFLOW&lt;/a&gt;&lt;/code&gt; are defined in &lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">указывает, что используются исключения с плавающей запятой: по крайней мере &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_DIVBYZERO&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_OVERFLOW&lt;/a&gt;&lt;/code&gt; определены в &lt;code&gt;&amp;lt;cfenv&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53f7d3cb74d715c55cd905df869401d3cc018b4d" translate="yes" xml:space="preserve">
          <source>indicates that floating-point operations use the variable &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; to report errors.</source>
          <target state="translated">указывает, что операции с плавающей точкой используют переменную &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; для сообщения об ошибках.</target>
        </trans-unit>
        <trans-unit id="341e928028796b3a94fbbbd9d7b454ea7f1fc58f" translate="yes" xml:space="preserve">
          <source>indicates that the compiler should optimize for the case where a path of execution through a statement is more or less likely than any other path of execution</source>
          <target state="translated">указывает на то,что компилятор должен оптимизировать для случая,когда путь выполнения через оператор более или менее вероятен,чем любой другой путь выполнения</target>
        </trans-unit>
        <trans-unit id="245dd2c965ee7300186a832b3544057a1c0306ae" translate="yes" xml:space="preserve">
          <source>indicates that the fall through from the previous case label is intentional and should not be diagnosed by a compiler that warns on fall-through</source>
          <target state="translated">указывает на то,что падение с предыдущей метки случая является преднамеренным и не должно диагностироваться компилятором,предупреждающим о падениях</target>
        </trans-unit>
        <trans-unit id="8825de64ef1d5fa281a20007c6889cb07fa09453" translate="yes" xml:space="preserve">
          <source>indicates that the file status has not been evaluated yet, or an error occurred when evaluating it</source>
          <target state="translated">указывает на то,что статус файла еще не был оценен или произошла ошибка при его оценке.</target>
        </trans-unit>
        <trans-unit id="0c6ba26792986ef08968cf75c7a67c3d1022f34c" translate="yes" xml:space="preserve">
          <source>indicates that the file was not found (this is not considered an error)</source>
          <target state="translated">указывает на то,что файл не был найден (это не считается ошибкой)</target>
        </trans-unit>
        <trans-unit id="ca50941a97cd212208c7eb16a353dfa1a6c7dd81" translate="yes" xml:space="preserve">
          <source>indicates that the function definition should be optimized for invocation from a &lt;a href=&quot;transactional_memory&quot;&gt;synchronized statement&lt;/a&gt;</source>
          <target state="translated">указывает, что определение функции должно быть оптимизировано для вызова из &lt;a href=&quot;transactional_memory&quot;&gt;синхронизированного оператора&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80a3d1e5906b4b6c5e780e83d40a2785969826d6" translate="yes" xml:space="preserve">
          <source>indicates that the function does not return</source>
          <target state="translated">указывает на то,что функция не возвращается</target>
        </trans-unit>
        <trans-unit id="1202aa4a81d1f249ae80868ff80173f4c8657480" translate="yes" xml:space="preserve">
          <source>indicates that the required alignment of an object to be referenced by &lt;code&gt;atomic_ref&lt;/code&gt;</source>
          <target state="translated">указывает на то, что &lt;code&gt;atomic_ref&lt;/code&gt; требует выравнивания объекта, на который должна ссылаться</target>
        </trans-unit>
        <trans-unit id="5a033c1dde8da99bd528c577b1a25840fa0bbb4b" translate="yes" xml:space="preserve">
          <source>indicates that the type is always lock-free</source>
          <target state="translated">указывает на то,что тип всегда без замков</target>
        </trans-unit>
        <trans-unit id="3ceb50322dc9ef9f54a640cb03ab2abb5861886f" translate="yes" xml:space="preserve">
          <source>indicates that the use of the name or entity declared with this attribute is allowed, but discouraged for some reason</source>
          <target state="translated">указывает на то,что использование имени или сущности,объявленной с данным атрибутом,разрешено,но по каким-то причинам не рекомендуется</target>
        </trans-unit>
        <trans-unit id="a78faf8e75856ded52fc25740c7f1bd5e61eff87" translate="yes" xml:space="preserve">
          <source>indicates that the value Y is set in the object X</source>
          <target state="translated">указывает на то,что значение Y установлено в объекте X</target>
        </trans-unit>
        <trans-unit id="806bfa041a25dd51fda55c4d1c52dd9df94a4bd9" translate="yes" xml:space="preserve">
          <source>indicates that the value is</source>
          <target state="translated">указывает на то,что значение</target>
        </trans-unit>
        <trans-unit id="849bc88ece107ff50d73b4f26fc56a277345d4a6" translate="yes" xml:space="preserve">
          <source>indicates that the value is not representable by the underlying type (positive or negative infinity)</source>
          <target state="translated">указывает на то,что значение не может быть представлено типом,лежащим в основе (положительная или отрицательная бесконечность)</target>
        </trans-unit>
        <trans-unit id="fc12ba5965741eb0922a18e2a7e4711dba8f074f" translate="yes" xml:space="preserve">
          <source>indicates that the value is not-a-number (NaN)</source>
          <target state="translated">указывает на то,что значение не является номером (NaN).</target>
        </trans-unit>
        <trans-unit id="0e4ec00185a81c122e15a2c322dc3a022e65db19" translate="yes" xml:space="preserve">
          <source>indicates that the value is positive or negative zero</source>
          <target state="translated">указывает на то,что значение положительного или отрицательного нуля</target>
        </trans-unit>
        <trans-unit id="bcf02385e8131c96948dbd0cafc611795b5731bb" translate="yes" xml:space="preserve">
          <source>indicates the endianness of scalar types</source>
          <target state="translated">указывает на эндианность скалярных типов</target>
        </trans-unit>
        <trans-unit id="7766e045e1275d8efe1a6402f075b92da71f7d7d" translate="yes" xml:space="preserve">
          <source>indicates the overflow value for &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;long double&lt;/code&gt; respectively</source>
          <target state="translated">указывает значение переполнения для &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; и &lt;code&gt;long double&lt;/code&gt; соответственно</target>
        </trans-unit>
        <trans-unit id="eff3e968a6df5975e78fa301b04e0b52f2b9c386" translate="yes" xml:space="preserve">
          <source>indicates the position of &lt;code&gt;negative_sign&lt;/code&gt; in a negative international monetary value</source>
          <target state="translated">указывает на &lt;code&gt;negative_sign&lt;/code&gt; позицию в отрицательном международном денежном выражении</target>
        </trans-unit>
        <trans-unit id="c1670e296e615ed4a26c1e0a553c68a81403bdd8" translate="yes" xml:space="preserve">
          <source>indicates the position of &lt;code&gt;negative_sign&lt;/code&gt; in a negative monetary value</source>
          <target state="translated">указывает на &lt;code&gt;negative_sign&lt;/code&gt; знак в отрицательном денежном выражении</target>
        </trans-unit>
        <trans-unit id="59eee5fec7a1da3d80c55ef4783befa57d45f99e" translate="yes" xml:space="preserve">
          <source>indicates the position of &lt;code&gt;positive_sign&lt;/code&gt; in a non-negative international monetary value</source>
          <target state="translated">указывает &lt;code&gt;positive_sign&lt;/code&gt; позицию в неотрицательном международном денежном выражении</target>
        </trans-unit>
        <trans-unit id="9e871fd849356ea35ab4e888bda91171d99f6181" translate="yes" xml:space="preserve">
          <source>indicates the position of &lt;code&gt;positive_sign&lt;/code&gt; in a non-negative monetary value</source>
          <target state="translated">указывает на &lt;code&gt;positive_sign&lt;/code&gt; знак в неотрицательном денежном выражении</target>
        </trans-unit>
        <trans-unit id="972bbef3d21092dea4f7372dd8ddaf86e4ef1bcd" translate="yes" xml:space="preserve">
          <source>indicates the separation of &lt;code&gt;currency_symbol&lt;/code&gt;, &lt;code&gt;negative_sign&lt;/code&gt;, and the negative monetary value</source>
          <target state="translated">указывает на разделение &lt;code&gt;currency_symbol&lt;/code&gt; , &lt;code&gt;negative_sign&lt;/code&gt; и отрицательного денежного значения</target>
        </trans-unit>
        <trans-unit id="6d26909f8fe48e8e6b4c922a82eed05dd33673dd" translate="yes" xml:space="preserve">
          <source>indicates the separation of &lt;code&gt;currency_symbol&lt;/code&gt;, &lt;code&gt;positive_sign&lt;/code&gt;, and the non-negative monetary value</source>
          <target state="translated">указывает на разделение &lt;code&gt;currency_symbol&lt;/code&gt; , &lt;code&gt;positive_sign&lt;/code&gt; и неотрицательного денежного значения</target>
        </trans-unit>
        <trans-unit id="7daa6e01931feda8c9c7353aa42a0b505c8b3b22" translate="yes" xml:space="preserve">
          <source>indicates the separation of &lt;code&gt;int_curr_symbol&lt;/code&gt;, &lt;code&gt;negative_sign&lt;/code&gt;, and the negative international monetary value</source>
          <target state="translated">указывает на разделение &lt;code&gt;int_curr_symbol&lt;/code&gt; , &lt;code&gt;negative_sign&lt;/code&gt; и негативную международную денежную стоимость</target>
        </trans-unit>
        <trans-unit id="fe0e4ff2e434c8cc8b8d576c2998607a958b6c30" translate="yes" xml:space="preserve">
          <source>indicates the separation of &lt;code&gt;int_curr_symbol&lt;/code&gt;, &lt;code&gt;positive_sign&lt;/code&gt;, and the non-negative international monetary value</source>
          <target state="translated">указывает на разделение &lt;code&gt;int_curr_symbol&lt;/code&gt; , &lt;code&gt;positive_sign&lt;/code&gt; и неотрицательного международного денежного значения</target>
        </trans-unit>
        <trans-unit id="4b2d8da343f1c993a04097fe302e6cbb0196c55d" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;feof&quot;&gt;std::feof()&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;. If the failure has been caused by some other error, sets the</source>
          <target state="translated">индикатор (см. &lt;code&gt;&lt;a href=&quot;feof&quot;&gt;std::feof()&lt;/a&gt;&lt;/code&gt; ) на стандартный &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; . Если сбой был вызван какой-либо другой ошибкой, задайте</target>
        </trans-unit>
        <trans-unit id="38966ad4452e95454eec89b99842fcdeb057d847" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;feof&quot;&gt;std::feof()&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;stream&lt;/code&gt;. If the failure has been caused by some other error, sets the</source>
          <target state="translated">индикатор (см. &lt;code&gt;&lt;a href=&quot;feof&quot;&gt;std::feof()&lt;/a&gt;&lt;/code&gt; ) в &lt;code&gt;stream&lt;/code&gt; . Если сбой был вызван какой-либо другой ошибкой, задайте</target>
        </trans-unit>
        <trans-unit id="a02da756cce06966db4965680dca70311a3bccab" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;feof&quot;&gt;std::feof()&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;stream&lt;/code&gt;. The contents of the array pointed to by &lt;code&gt;str&lt;/code&gt; are not altered in this case.</source>
          <target state="translated">индикатор (см. &lt;code&gt;&lt;a href=&quot;feof&quot;&gt;std::feof()&lt;/a&gt;&lt;/code&gt; ) в &lt;code&gt;stream&lt;/code&gt; . Содержимое массива, на которое указывает &lt;code&gt;str&lt;/code&gt; , в этом случае не изменяется.</target>
        </trans-unit>
        <trans-unit id="172150fb53cdfe709a6836c64882b1fce20c0bcb" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;std::ferror()&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">индикатор (см. &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;std::ferror()&lt;/a&gt;&lt;/code&gt; ) на стандартный &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6d6da5b629592c0cc8d850ef13eb796bcfe48b9" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;std::ferror()&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;stream&lt;/code&gt;.</source>
          <target state="translated">индикатор (см. &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;std::ferror()&lt;/a&gt;&lt;/code&gt; ) в &lt;code&gt;stream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83e27ccb6a77a5e312b7e4fbf1917f5880dd0bb5" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;std::ferror()&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;stream&lt;/code&gt;. The contents of the array pointed to by &lt;code&gt;str&lt;/code&gt; are indeterminate (it may not even be null-terminated).</source>
          <target state="translated">индикатор (см. &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;std::ferror()&lt;/a&gt;&lt;/code&gt; ) в &lt;code&gt;stream&lt;/code&gt; . Содержимое массива, на которое указывает &lt;code&gt;str&lt;/code&gt; , является неопределенным (оно может даже не заканчиваться нулем).</target>
        </trans-unit>
        <trans-unit id="2c6de687fcdfd0e9572232921200c688d538a646" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;std::ferror&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;stdout&lt;/code&gt;.</source>
          <target state="translated">индикатор (см. &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;std::ferror&lt;/a&gt;&lt;/code&gt; ) на стандартный &lt;code&gt;stdout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf1a4c706b8c183f7e9eee1a8ebe9cdca22a555f" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;std::ferror&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;stream&lt;/code&gt;.</source>
          <target state="translated">индикатор (см. &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;std::ferror&lt;/a&gt;&lt;/code&gt; ) в &lt;code&gt;stream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e0bfb08aa1ed8740f1d08c90bceb8fbb5e2b121" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;feof()&lt;/code&gt;) on &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;. If the failure has been caused by some other error, sets the</source>
          <target state="translated">индикатор (см. &lt;code&gt;feof()&lt;/code&gt; ) на стандартный &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; . Если сбой был вызван какой-либо другой ошибкой, задайте</target>
        </trans-unit>
        <trans-unit id="e6c7439425dd770cbc5889d17eaa8c90af36472d" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;ferror()&lt;/code&gt;) on &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">индикатор (см. &lt;code&gt;ferror()&lt;/code&gt; ) на стандартный &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d407cdc1947863d2f110d627f96e4526e403c421" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;ferror()&lt;/code&gt;) on &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">индикатор (см. &lt;code&gt;ferror()&lt;/code&gt; ) на стандартный &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1dcc49fbd92815125a88b4eb739099c6efcb52a" translate="yes" xml:space="preserve">
          <source>indicator of optional type with uninitialized state</source>
          <target state="translated">индикатор необязательного типа с неинициализированным состоянием</target>
        </trans-unit>
        <trans-unit id="8686929f85de8bfc60a119ca9b3217c69f55b1eb" translate="yes" xml:space="preserve">
          <source>indicator whether the table needs to be deleted.</source>
          <target state="translated">индикатор необходимости удаления таблицы.</target>
        </trans-unit>
        <trans-unit id="e09af31bfb137337c7df250ce131e664d1893f17" translate="yes" xml:space="preserve">
          <source>indirect_array</source>
          <target state="translated">indirect_array</target>
        </trans-unit>
        <trans-unit id="f3183764f35527f99b9b7769f22ed7aedf5dc7ab" translate="yes" xml:space="preserve">
          <source>indirect_result_t</source>
          <target state="translated">indirect_result_t</target>
        </trans-unit>
        <trans-unit id="729ece9fa830e654008eba24ff4f01836443b468" translate="yes" xml:space="preserve">
          <source>indirection</source>
          <target state="translated">indirection</target>
        </trans-unit>
        <trans-unit id="e27950070687f3cfa1b19046630f1decd4829d30" translate="yes" xml:space="preserve">
          <source>indistinguishable</source>
          <target state="translated">indistinguishable</target>
        </trans-unit>
        <trans-unit id="6f0d5d82cecb2110dac17adecc5d6bec29a0c2cf" translate="yes" xml:space="preserve">
          <source>induced by this type, and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">вызвано этим типом, и &lt;code&gt;false&lt;/code&gt; противном случае.</target>
        </trans-unit>
        <trans-unit id="a0e9d7bd7c98073ac045f5ead7f4554c0622e961" translate="yes" xml:space="preserve">
          <source>inexact result: rounding was necessary to store the result of an earlier floating-point operation</source>
          <target state="translated">неточный результат:округление было необходимо для сохранения результата более ранней операции с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="0c4c6b12888e68a0828006f4e252af0b387cc357" translate="yes" xml:space="preserve">
          <source>infinity</source>
          <target state="translated">infinity</target>
        </trans-unit>
        <trans-unit id="803ad7670f66366ba8119d3b7dbf071fcb6ca592" translate="yes" xml:space="preserve">
          <source>infinity expression. It consists of the following parts:</source>
          <target state="translated">бесконечное выражение.Оно состоит из следующих частей:</target>
        </trans-unit>
        <trans-unit id="ebe87b51dec7f718a5d96a4ec9c833c0e23b6a79" translate="yes" xml:space="preserve">
          <source>infinity minus infinity is NaN and &lt;code&gt;&lt;a href=&quot;../numeric/fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; is raised</source>
          <target state="translated">бесконечность минус бесконечность равна NaN и &lt;code&gt;&lt;a href=&quot;../numeric/fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; повышается</target>
        </trans-unit>
        <trans-unit id="0c81c5c5fbdc8d68305e1243453b46f6e9d0c25c" translate="yes" xml:space="preserve">
          <source>infinity plus the negative infinity is NaN and &lt;code&gt;&lt;a href=&quot;../numeric/fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; is raised</source>
          <target state="translated">бесконечность плюс отрицательная бесконечность равна NaN, а &lt;code&gt;&lt;a href=&quot;../numeric/fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; повышается</target>
        </trans-unit>
        <trans-unit id="59bd0a3ff43b32849b319e645d4798d8a5d1e889" translate="yes" xml:space="preserve">
          <source>info</source>
          <target state="translated">info</target>
        </trans-unit>
        <trans-unit id="936602e88caef486ed487c30bb96bd40e150927f" translate="yes" xml:space="preserve">
          <source>informal syntax:</source>
          <target state="translated">неформальный синтаксис:</target>
        </trans-unit>
        <trans-unit id="f603ac14f147785d67ddfa049af79591fc6cf6bb" translate="yes" xml:space="preserve">
          <source>information about free and available space on the filesystem</source>
          <target state="translated">информация о свободном и доступном месте в файловой системе</target>
        </trans-unit>
        <trans-unit id="f2eaed9214b08ee0d1ff19b7248b7738c3ca6c6b" translate="yes" xml:space="preserve">
          <source>informs the compiler that a pointer is aligned</source>
          <target state="translated">сообщает компилятору,что указатель выровнен</target>
        </trans-unit>
        <trans-unit id="5423e3aaf0c909049429740d2f59f20c04b32363" translate="yes" xml:space="preserve">
          <source>inheriting constructor declaration injects additional constructors in the derived class</source>
          <target state="translated">наследующая декларация конструктора вводит дополнительные конструкторы в производный класс</target>
        </trans-unit>
        <trans-unit id="fd62812fbd9ec4c7f99aa4f6253fead2388eb238" translate="yes" xml:space="preserve">
          <source>init</source>
          <target state="translated">init</target>
        </trans-unit>
        <trans-unit id="6dbdaa47e7f1a917e83e3e611a63de9a30879046" translate="yes" xml:space="preserve">
          <source>init-declarator-list</source>
          <target state="translated">init-declarator-list</target>
        </trans-unit>
        <trans-unit id="7e35250a143748a3928580b317562e2f41046600" translate="yes" xml:space="preserve">
          <source>init-declarator-list is a comma-separated sequence of one or more init-declarators, which have the following syntax:</source>
          <target state="translated">init-declarator-list-это разделенная запятыми последовательность одного или нескольких init-деклараторов,которые имеют следующий синтаксис:</target>
        </trans-unit>
        <trans-unit id="f312ac0c9592b5e487188abb7e6f8c06ee838e1e" translate="yes" xml:space="preserve">
          <source>init-list ctors lost to copy ctors when list-initializing X from {X}</source>
          <target state="translated">вит-листе потерянные для копирования врачи,когда инициализировали X из {X}.</target>
        </trans-unit>
        <trans-unit id="dd32f3d08d7992d1e9962bff1e8835569c2e0888" translate="yes" xml:space="preserve">
          <source>init-statement</source>
          <target state="translated">init-statement</target>
        </trans-unit>
        <trans-unit id="f358af20b617d3603a1bb143a0f753df17cad580" translate="yes" xml:space="preserve">
          <source>init-statement(C++17)</source>
          <target state="translated">init-statement(C++17)</target>
        </trans-unit>
        <trans-unit id="7217b469119e9ec857b170618166daf8293738c0" translate="yes" xml:space="preserve">
          <source>init-statement(C++20)</source>
          <target state="translated">init-statement(C++20)</target>
        </trans-unit>
        <trans-unit id="e193abf78f819bb5acd17bcc69d1644f61db8b6e" translate="yes" xml:space="preserve">
          <source>init_statement</source>
          <target state="translated">init_statement</target>
        </trans-unit>
        <trans-unit id="f01082d06bc0d15e745063496e5a66f52953e6a1" translate="yes" xml:space="preserve">
          <source>initial value of the conversion shift state</source>
          <target state="translated">начальное значение состояния сдвига конверсии</target>
        </trans-unit>
        <trans-unit id="151e0c55d2a1cf354c7b25ae352a6ee955803dde" translate="yes" xml:space="preserve">
          <source>initial value of the sum</source>
          <target state="translated">начальная стоимость суммы</target>
        </trans-unit>
        <trans-unit id="404cf4a7d3131006e12d32856de27104a16417fb" translate="yes" xml:space="preserve">
          <source>initial value of the sum of the products</source>
          <target state="translated">начальная стоимость суммы продуктов</target>
        </trans-unit>
        <trans-unit id="930dbecb89ab4ce55df1c15378d8a6057179ad16" translate="yes" xml:space="preserve">
          <source>initial value to store, the expression ++value must be well-formed</source>
          <target state="translated">начальное значение для хранения,выражение ++значение должно быть хорошо сформировано</target>
        </trans-unit>
        <trans-unit id="262f79fdab7525997ffb08fb6bd67468ff3b976e" translate="yes" xml:space="preserve">
          <source>initial_size</source>
          <target state="translated">initial_size</target>
        </trans-unit>
        <trans-unit id="c7eb7eb69d1437c35eb1ac4e02f759dd3dec677a" translate="yes" xml:space="preserve">
          <source>initialization by list-initialization where the initializer list has exactly one element that is itself an initializer list, and the target is the first parameter of a constructor of class X, and the conversion is to X or reference to (possibly cv-qualified) X</source>
          <target state="translated">инициализация по списку инициализаторов,где список инициализаторов имеет ровно один элемент,который сам по себе является списком инициализаторов,а целью является первый параметр конструктора класса X,и преобразование в X или ссылка на (возможно,cv-qualified)X</target>
        </trans-unit>
        <trans-unit id="3e462f06585b27e49fd9249ac4751677d21bab24" translate="yes" xml:space="preserve">
          <source>initialization defined</source>
          <target state="translated">определение инициализации</target>
        </trans-unit>
        <trans-unit id="f573a018a47bd3ab568823c161ea74dc81e8483f" translate="yes" xml:space="preserve">
          <source>initialization of a static variable that performs &lt;a href=&quot;../../language/initialization#Non-local_variables&quot;&gt;dynamic non-local initialization&lt;/a&gt; (including delayed until first ODR-use)</source>
          <target state="translated">инициализация статической переменной, которая выполняет &lt;a href=&quot;../../language/initialization#Non-local_variables&quot;&gt;динамическую нелокальную инициализацию&lt;/a&gt; (включая задержку до первого использования ODR)</target>
        </trans-unit>
        <trans-unit id="e90fa5c3756c0541003111a20ee97ac9ad5faaff" translate="yes" xml:space="preserve">
          <source>initialization: &lt;code&gt;T a = b;&lt;/code&gt; or &lt;code&gt;T a(b);&lt;/code&gt;, where b is of type &lt;code&gt;T&lt;/code&gt;;</source>
          <target state="translated">инициализация: &lt;code&gt;T a = b;&lt;/code&gt; или &lt;code&gt;T a(b);&lt;/code&gt; где b имеет тип &lt;code&gt;T&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="60e95df9efeace5f6af3ea461f78742b4aac5b17" translate="yes" xml:space="preserve">
          <source>initialization: &lt;code&gt;T a = std::move(b);&lt;/code&gt; or &lt;code&gt;T a(std::move(b));&lt;/code&gt;, where b is of type &lt;code&gt;T&lt;/code&gt;;</source>
          <target state="translated">инициализация: &lt;code&gt;T a = std::move(b);&lt;/code&gt; или &lt;code&gt;T a(std::move(b));&lt;/code&gt; где b имеет тип &lt;code&gt;T&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="19599648fdfadbba9e036717ebca1204198e5b32" translate="yes" xml:space="preserve">
          <source>initialized characters</source>
          <target state="translated">инициализированные символы</target>
        </trans-unit>
        <trans-unit id="d1e5671576679c9c26af5735e25a3cc5651ae1d4" translate="yes" xml:space="preserve">
          <source>initializer</source>
          <target state="translated">initializer</target>
        </trans-unit>
        <trans-unit id="895d5fda52464e754565a66773a2a9edb196157c" translate="yes" xml:space="preserve">
          <source>initializer list containing characters to assign</source>
          <target state="translated">список инициализаторов,содержащий символы для назначения</target>
        </trans-unit>
        <trans-unit id="c371158e771d28aa49134fcfe73f93a881f9a6c9" translate="yes" xml:space="preserve">
          <source>initializer list containing the weights</source>
          <target state="translated">список инициализаторов,содержащий веса</target>
        </trans-unit>
        <trans-unit id="36cc1d93875cea9ee38eedfc4aa02a76918879c5" translate="yes" xml:space="preserve">
          <source>initializer list to assign</source>
          <target state="translated">список инициализаторов для назначения</target>
        </trans-unit>
        <trans-unit id="2673b0d6bb4c47a206dc5ec4281982436d76ce4a" translate="yes" xml:space="preserve">
          <source>initializer list to copy the values from</source>
          <target state="translated">список инициализаторов для копирования значений из</target>
        </trans-unit>
        <trans-unit id="39495758742000518bfd0eb99f7efd7c2a9bc0a7" translate="yes" xml:space="preserve">
          <source>initializer list to initialize the contained value with</source>
          <target state="translated">список инициализаторов для инициализации содержащегося значения с помощью</target>
        </trans-unit>
        <trans-unit id="ad51589639d152bfe790d6d43fdee1192bb9bc3f" translate="yes" xml:space="preserve">
          <source>initializer list to initialize the elements of the container with</source>
          <target state="translated">список инициализаторов для инициализации элементов контейнера с помощью</target>
        </trans-unit>
        <trans-unit id="013a46eb7b39dd8237bfd2c3480950997112f7e2" translate="yes" xml:space="preserve">
          <source>initializer list to initialize the elements with</source>
          <target state="translated">список инициализаторов для инициализации элементов с помощью</target>
        </trans-unit>
        <trans-unit id="17052051ac24c78a200c36d6a71b8f97919c7da6" translate="yes" xml:space="preserve">
          <source>initializer list to insert the values from</source>
          <target state="translated">список инициализаторов для вставки значений из</target>
        </trans-unit>
        <trans-unit id="abe776d9c3751b500aeefac67c3b53ddc2bce109" translate="yes" xml:space="preserve">
          <source>initializer list to use as data source</source>
          <target state="translated">список инициализаторов для использования в качестве источника данных</target>
        </trans-unit>
        <trans-unit id="d08a7e4909a9d62dcebb3335422cc75e03126eee" translate="yes" xml:space="preserve">
          <source>initializer list used to initialize the regex</source>
          <target state="translated">список инициализаторов,используемый для инициализации регекса</target>
        </trans-unit>
        <trans-unit id="5f08af4b62292d528c8695ceded274d3ab5474dc" translate="yes" xml:space="preserve">
          <source>initializer list with the characters to append</source>
          <target state="translated">список инициализаторов с добавлением символов</target>
        </trans-unit>
        <trans-unit id="0d46342b23f419c777c834778138a0162f2a2e40" translate="yes" xml:space="preserve">
          <source>initializer list with the characters to use for replacement</source>
          <target state="translated">список инициализаторов с символами для замены</target>
        </trans-unit>
        <trans-unit id="d734d291c14a4f71acb9ee40e67c6c0723f241b8" translate="yes" xml:space="preserve">
          <source>initializer list with the values to compare</source>
          <target state="translated">список инициализаторов со значениями для сравнения</target>
        </trans-unit>
        <trans-unit id="ec3210dad609775bf28413331c0fd656bec47d7c" translate="yes" xml:space="preserve">
          <source>initializer list with which to initialize the contained value</source>
          <target state="translated">список инициализаторов,с помощью которого инициализируется содержащееся в нем значение</target>
        </trans-unit>
        <trans-unit id="dacb4f73576ac76552a16b53145c1edb6757f143" translate="yes" xml:space="preserve">
          <source>initializer-clause</source>
          <target state="translated">initializer-clause</target>
        </trans-unit>
        <trans-unit id="d65762088a07fbaab513124db20b3d6dfb885ffd" translate="yes" xml:space="preserve">
          <source>initializer-list</source>
          <target state="translated">initializer-list</target>
        </trans-unit>
        <trans-unit id="fda9c9249a492f1cb5da4835178f4805f43c021d" translate="yes" xml:space="preserve">
          <source>initializer-list guides take &lt;code&gt;&lt;a href=&quot;../../utility/pair&quot;&gt;std::pair&lt;/a&gt;&amp;lt;const Key, T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">руководства по списку инициализаторов принимают &lt;code&gt;&lt;a href=&quot;../../utility/pair&quot;&gt;std::pair&lt;/a&gt;&amp;lt;const Key, T&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d02088777002d1cd79538772767302bd2d3074ec" translate="yes" xml:space="preserve">
          <source>initializer-list phase skipped when copying</source>
          <target state="translated">фаза инициализатора-перечня пропущена при копировании</target>
        </trans-unit>
        <trans-unit id="ef8877c6312cdba13456afd9d9be901ef065505e" translate="yes" xml:space="preserve">
          <source>initializer_list</source>
          <target state="translated">initializer_list</target>
        </trans-unit>
        <trans-unit id="9065ddaad8dad1f477a6a0244a092eb2be47833f" translate="yes" xml:space="preserve">
          <source>initializer_list argument to use when constructing the new value</source>
          <target state="translated">аргумент инициализатор_список для использования при построении нового значения</target>
        </trans-unit>
        <trans-unit id="e15b66f6d2c5cd15925f5da0459a2dcef73ad6fc" translate="yes" xml:space="preserve">
          <source>initializer_list yielding the interval sequence</source>
          <target state="translated">инициализатор_список,дающий интервальную последовательность</target>
        </trans-unit>
        <trans-unit id="6297e91c02b3f50a6c42a06da5038a80fd1df33a" translate="yes" xml:space="preserve">
          <source>initializer_list yielding the interval sequnce</source>
          <target state="translated">инициализатор_список,содержащий последовательность интервалов</target>
        </trans-unit>
        <trans-unit id="1405ad61668d495ef3216b4ddec12f871a730baf" translate="yes" xml:space="preserve">
          <source>initializers</source>
          <target state="translated">initializers</target>
        </trans-unit>
        <trans-unit id="faf7833fa0747a70537e6712f0a1ea7bb826e03b" translate="yes" xml:space="preserve">
          <source>initializers of &lt;a href=&quot;../language/constexpr&quot;&gt;constexpr variables&lt;/a&gt;</source>
          <target state="translated">инициализаторы &lt;a href=&quot;../language/constexpr&quot;&gt;переменных constexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8c0ccf8150e09e677e3ae4d632a2701e4005859" translate="yes" xml:space="preserve">
          <source>initializers of static and thread local variables, when all subexpressions of the initializers (including constructor calls and implicit conversions) are &lt;a href=&quot;../language/constant_expression&quot;&gt;constant expressions&lt;/a&gt; (that is, when the initializers are &lt;a href=&quot;../language/constant_initialization&quot;&gt;constant initializers&lt;/a&gt;)</source>
          <target state="translated">инициализаторы статических и потоковых локальных переменных, когда все подвыражения инициализаторов (включая вызовы конструктора и неявные преобразования) являются &lt;a href=&quot;../language/constant_expression&quot;&gt;константными выражениями&lt;/a&gt; (то есть, когда инициализаторы являются &lt;a href=&quot;../language/constant_initialization&quot;&gt;постоянными инициализаторами&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="ac8fa58efa6df1b5cfdb7e8602ebcd224264edf6" translate="yes" xml:space="preserve">
          <source>initializers of variables that are</source>
          <target state="translated">инициализаторы переменных,которые</target>
        </trans-unit>
        <trans-unit id="7bd8463163825b8e16ad35f2e1b77613344af40e" translate="yes" xml:space="preserve">
          <source>initializers of variables with reference type or const-qualified integral or enumeration type, when the initializers are &lt;a href=&quot;../language/constant_expression&quot;&gt;constant expressions&lt;/a&gt;</source>
          <target state="translated">инициализаторы переменных со ссылочным типом или &lt;a href=&quot;../language/constant_expression&quot;&gt;константным&lt;/a&gt; интегралом или типом перечисления, когда инициализаторы являются константными выражениями</target>
        </trans-unit>
        <trans-unit id="42372f42968a68ae36603bc748fa46a5864256d9" translate="yes" xml:space="preserve">
          <source>initializes a default-constructed &lt;code&gt;std::basic_ios&lt;/code&gt;</source>
          <target state="translated">инициализирует построенный по умолчанию &lt;code&gt;std::basic_ios&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94fe108cb35aef1fb9336a7a411d2ac4b289bf31" translate="yes" xml:space="preserve">
          <source>initializes an &lt;code&gt;&lt;a href=&quot;../atomic/atomic_flag&quot;&gt;std::atomic_flag&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">инициализирует &lt;code&gt;&lt;a href=&quot;../atomic/atomic_flag&quot;&gt;std::atomic_flag&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8a48e31ec5b738bf4341f1c2de0f71d76c8ac26" translate="yes" xml:space="preserve">
          <source>initializes an &lt;code&gt;&lt;a href=&quot;../atomic_flag&quot;&gt;std::atomic_flag&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">инициализирует &lt;code&gt;&lt;a href=&quot;../atomic_flag&quot;&gt;std::atomic_flag&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="735cbbf84b4c6f7c72b2df219ca31db5120d579b" translate="yes" xml:space="preserve">
          <source>initializes an &lt;code&gt;&lt;a href=&quot;atomic/atomic_flag&quot;&gt;std::atomic_flag&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">инициализирует &lt;code&gt;&lt;a href=&quot;atomic/atomic_flag&quot;&gt;std::atomic_flag&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1052971cf84289bd88fa0fb310334edf82ac072" translate="yes" xml:space="preserve">
          <source>initializes an &lt;code&gt;std::atomic_flag&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">инициализирует &lt;code&gt;std::atomic_flag&lt;/code&gt; в &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ca0292d29a8ed86dec3008be8c5fcc2d0986d2a" translate="yes" xml:space="preserve">
          <source>initializes an object or a bit-field (such prvalue is said to have a</source>
          <target state="translated">инициализирует объект или битовое поле (такое prvalue,как говорят,имеет значение</target>
        </trans-unit>
        <trans-unit id="1aee200709fe6a34fe10de46dcd66f17271a5f00" translate="yes" xml:space="preserve">
          <source>initializes standard stream objects</source>
          <target state="translated">инициализирует стандартные потоковые объекты</target>
        </trans-unit>
        <trans-unit id="2d03fcbcc6772201ce5fe0fb357624ae266ec702" translate="yes" xml:space="preserve">
          <source>initializes the array following the rules of &lt;a href=&quot;../language/aggregate_initialization&quot;&gt;aggregate initialization&lt;/a&gt; (note that default initialization may result in indeterminate values for non-class &lt;code&gt;T&lt;/code&gt;)</source>
          <target state="translated">инициализирует массив в соответствии с правилами &lt;a href=&quot;../language/aggregate_initialization&quot;&gt;агрегатной инициализации&lt;/a&gt; (обратите внимание, что инициализация по умолчанию может привести к неопределенным значениям для не-класса &lt;code&gt;T&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6112e999213a8f4bf964fc30e0262d19e70921c1" translate="yes" xml:space="preserve">
          <source>injected-class-name</source>
          <target state="translated">injected-class-name</target>
        </trans-unit>
        <trans-unit id="f2511fc2683f57fb00d3275e49857efabf1ec5f1" translate="yes" xml:space="preserve">
          <source>injected-class-name and constructors</source>
          <target state="translated">название класса инъекций и конструкторы</target>
        </trans-unit>
        <trans-unit id="6e9937e7ddf42c6644513492f9c75aa07378e781" translate="yes" xml:space="preserve">
          <source>inline</source>
          <target state="translated">inline</target>
        </trans-unit>
        <trans-unit id="b3aa56d756e09273cf4dd303d1d6e06a51ee31d9" translate="yes" xml:space="preserve">
          <source>inline function</source>
          <target state="translated">встроенная функция</target>
        </trans-unit>
        <trans-unit id="8ec34fda20aba17e878aa777b345fa21a16af33c" translate="yes" xml:space="preserve">
          <source>inline implementation: private members and public members are members of the same class</source>
          <target state="translated">поточная реализация:частные и государственные члены являются членами одного и того же класса</target>
        </trans-unit>
        <trans-unit id="aca77d2989095b04e71e84e427389e4e8cc44d82" translate="yes" xml:space="preserve">
          <source>inline specifier</source>
          <target state="translated">встроенный спецификатор</target>
        </trans-unit>
        <trans-unit id="f24add97d048d50c9803d4e2e56a496c3c774591" translate="yes" xml:space="preserve">
          <source>inline variable</source>
          <target state="translated">строчная переменная</target>
        </trans-unit>
        <trans-unit id="9527dd241d123c16e90c7d75f5ab045cd00ebcf5" translate="yes" xml:space="preserve">
          <source>innerAllocs...</source>
          <target state="translated">innerAllocs...</target>
        </trans-unit>
        <trans-unit id="c581a781df48feae88924d4cd3b4ee941bff8758" translate="yes" xml:space="preserve">
          <source>inner_allocator</source>
          <target state="translated">inner_allocator</target>
        </trans-unit>
        <trans-unit id="613c4fe378431b7ed0dd86e4d07abb9524c49c8a" translate="yes" xml:space="preserve">
          <source>inner_product</source>
          <target state="translated">inner_product</target>
        </trans-unit>
        <trans-unit id="e5584b59ccf2a92dd98b9c31f7d36008c4c2a2f2" translate="yes" xml:space="preserve">
          <source>inplace_merge</source>
          <target state="translated">inplace_merge</target>
        </trans-unit>
        <trans-unit id="140f86aae51ab9e1cda9b4254fe98a74eb54c1a1" translate="yes" xml:space="preserve">
          <source>input</source>
          <target state="translated">input</target>
        </trans-unit>
        <trans-unit id="1b30bcdcf0e17b00a35ec5b4c9ba24047d05e90a" translate="yes" xml:space="preserve">
          <source>input and output. Non-mutable iterators are called</source>
          <target state="translated">вход и выход.Ненаправляемые итераторы называются</target>
        </trans-unit>
        <trans-unit id="fff0c771644b6a7bfe62ad76115bc0fd87a99162" translate="yes" xml:space="preserve">
          <source>input file stream to read from</source>
          <target state="translated">поток входных файлов для чтения из</target>
        </trans-unit>
        <trans-unit id="1c2a0393ab98f63c918c55665f3ca0fc3f38a54a" translate="yes" xml:space="preserve">
          <source>input iterator that reads from &lt;code&gt;&lt;a href=&quot;../io/basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">входной итератор, который читает из &lt;code&gt;&lt;a href=&quot;../io/basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="800a3cdca9d08c4e719f5130cefeb5d8d26d6220" translate="yes" xml:space="preserve">
          <source>input iterator that reads from &lt;code&gt;&lt;a href=&quot;../io/basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">входной итератор, который читает из &lt;code&gt;&lt;a href=&quot;../io/basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9caec458261ff41c7256f4eca2e25de3e035933" translate="yes" xml:space="preserve">
          <source>input iterator that reads from &lt;code&gt;&lt;a href=&quot;io/basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">входной итератор, который читает из &lt;code&gt;&lt;a href=&quot;io/basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85345e8844784a892d477b9bcedbaa6c76209422" translate="yes" xml:space="preserve">
          <source>input iterator that reads from &lt;code&gt;&lt;a href=&quot;io/basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">входной итератор, который читает из &lt;code&gt;&lt;a href=&quot;io/basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="82c857d02c43a67873b6d5c4c0792630a4b2b648" translate="yes" xml:space="preserve">
          <source>input iterator to be converted to move iterator</source>
          <target state="translated">ввести итератор,который будет преобразован в итератор перемещения</target>
        </trans-unit>
        <trans-unit id="1000c433155e4367732cc57d680c7958eb10666c" translate="yes" xml:space="preserve">
          <source>input of a signed decimal integer value</source>
          <target state="translated">ввод подписанного десятичного целого значения</target>
        </trans-unit>
        <trans-unit id="23afacd9f3026411cc8ef69cf95b13785bebc536" translate="yes" xml:space="preserve">
          <source>input of a signed integer value</source>
          <target state="translated">ввод подписанного целого числа</target>
        </trans-unit>
        <trans-unit id="f305dea755be32e1c72aad2ea1e47e2f8dd34fdc" translate="yes" xml:space="preserve">
          <source>input of an unsigned decimal integer value</source>
          <target state="translated">ввод беззнакового десятичного целого значения</target>
        </trans-unit>
        <trans-unit id="cac60292dbc094322e1085b1e4bfc6c56501cf00" translate="yes" xml:space="preserve">
          <source>input of an unsigned hexadecimal integer value</source>
          <target state="translated">ввод неподписанного целочисленного шестнадцатеричного значения</target>
        </trans-unit>
        <trans-unit id="0b430e48e366d8d43d7f09a388d2dba686d962a8" translate="yes" xml:space="preserve">
          <source>input of an unsigned octal integer value</source>
          <target state="translated">ввод беззнакового восьмеричного целого значения</target>
        </trans-unit>
        <trans-unit id="a470c41e4e722e7995a5bbd4b18e8815e6062a85" translate="yes" xml:space="preserve">
          <source>input sequence</source>
          <target state="translated">последовательность ввода</target>
        </trans-unit>
        <trans-unit id="5197cb0cf58ca7b99df183916265bb2c543dc643" translate="yes" xml:space="preserve">
          <source>input stream to extract the data from</source>
          <target state="translated">входной поток для извлечения данных из</target>
        </trans-unit>
        <trans-unit id="fb12aa5a154abdef267e8f88c23c11715e047e58" translate="yes" xml:space="preserve">
          <source>input stream to prepare</source>
          <target state="translated">входной поток для подготовки</target>
        </trans-unit>
        <trans-unit id="df6273ea9becf11cb5627b51996188b351d68f6b" translate="yes" xml:space="preserve">
          <source>input/output operation failed (formatting or extraction error)</source>
          <target state="translated">сбой при вводе/выводе (ошибка форматирования или извлечения)</target>
        </trans-unit>
        <trans-unit id="d09fa7866e1c15bc04af4ca47fc332463eb838ad" translate="yes" xml:space="preserve">
          <source>input_iterator_tagoutput_iterator_tagforward_iterator_tagbidirectional_iterator_tagrandom_access_iterator_tagcontiguous_iterator_tag</source>
          <target state="translated">input_iterator_tagoutput_iterator_tagforward_iterator_tagbidirectional_iterator_tagrandom_access_iterator_tagcontiguous_iterator_tag</target>
        </trans-unit>
        <trans-unit id="a26aafc1f521420b84a65c0884ceaff6c083f05b" translate="yes" xml:space="preserve">
          <source>insert</source>
          <target state="translated">insert</target>
        </trans-unit>
        <trans-unit id="734fbc5935e3a25494773f06b4fa1d905beffada" translate="yes" xml:space="preserve">
          <source>insert and extract &lt;code&gt;bool&lt;/code&gt; type in alphanumeric format: see &lt;code&gt;&lt;a href=&quot;../manip/boolalpha&quot;&gt;std::boolalpha&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">вставьте и извлеките тип &lt;code&gt;bool&lt;/code&gt; в буквенно-цифровом формате: см. &lt;code&gt;&lt;a href=&quot;../manip/boolalpha&quot;&gt;std::boolalpha&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2dd8f4b34ffc73f034d4d3d8e8fd305d57ee3b84" translate="yes" xml:space="preserve">
          <source>insert and extract &lt;code&gt;bool&lt;/code&gt; type in alphanumeric format: see &lt;code&gt;&lt;a href=&quot;manip/boolalpha&quot;&gt;std::boolalpha&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">вставьте и извлеките тип &lt;code&gt;bool&lt;/code&gt; в буквенно-цифровом формате: см. &lt;code&gt;&lt;a href=&quot;manip/boolalpha&quot;&gt;std::boolalpha&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ba3c3d9f0234c881084a9515381afb66ce16161" translate="yes" xml:space="preserve">
          <source>insert_after</source>
          <target state="translated">insert_after</target>
        </trans-unit>
        <trans-unit id="08083c8fdd59cfe66b77aa48e08e0115fa315a73" translate="yes" xml:space="preserve">
          <source>insert_iterator</source>
          <target state="translated">insert_iterator</target>
        </trans-unit>
        <trans-unit id="e7ac80429e69bcec20ed13e2f0f189b17231d038" translate="yes" xml:space="preserve">
          <source>insert_or_assign</source>
          <target state="translated">insert_or_assign</target>
        </trans-unit>
        <trans-unit id="591ec344f40cb6c554aee37fddb574bc07c51fc2" translate="yes" xml:space="preserve">
          <source>inserter</source>
          <target state="translated">inserter</target>
        </trans-unit>
        <trans-unit id="2707943c59b41329650716fa286342b4e19a914a" translate="yes" xml:space="preserve">
          <source>inserting in the output sequence fails (in which case the character to be inserted is not extracted);</source>
          <target state="translated">вставка в выходную последовательность не удается (в этом случае вставляемый символ не извлекается);</target>
        </trans-unit>
        <trans-unit id="6d3b33adfc830fe4458f33e1ea1797a77621bad4" translate="yes" xml:space="preserve">
          <source>inserting into the output sequence fails (in which case &lt;code&gt;setstate(badbit)&lt;/code&gt; is called)</source>
          <target state="translated">вставка в выходную последовательность завершается неудачно (в этом случае &lt;code&gt;setstate(badbit)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="111bb38ed054d5bf94abd8ad4ed6da001ef5516b" translate="yes" xml:space="preserve">
          <source>inserting into the output sequence fails (in which case the character that could not be inserted, is not extracted)</source>
          <target state="translated">вставка в выходную последовательность не удается (в этом случае символ,который не удалось вставить,не извлекается)</target>
        </trans-unit>
        <trans-unit id="cb0d8d141cc1961b5999bd78a13e94e0341e7594" translate="yes" xml:space="preserve">
          <source>inserts a character</source>
          <target state="translated">вставляет символ</target>
        </trans-unit>
        <trans-unit id="69b25bfc6df8f53b8aac7a358197c467d83d154a" translate="yes" xml:space="preserve">
          <source>inserts an element or assigns to the current element if the key already exists</source>
          <target state="translated">вставляет элемент или присваивает текущий элемент,если ключ уже существует</target>
        </trans-unit>
        <trans-unit id="98169efad88290b508828b41464266c479b9cc62" translate="yes" xml:space="preserve">
          <source>inserts an element to the beginning</source>
          <target state="translated">вставляет элемент в начало</target>
        </trans-unit>
        <trans-unit id="a686b7b22fbac01cbbdb443aa813067079f8b118" translate="yes" xml:space="preserve">
          <source>inserts an object into the associated container</source>
          <target state="translated">вставляет объект в соответствующий контейнер</target>
        </trans-unit>
        <trans-unit id="e3c564279631cdc145f7aa8343e53c84684af059" translate="yes" xml:space="preserve">
          <source>inserts and extracts quoted strings with embedded spaces</source>
          <target state="translated">вставляет и извлекает цитируемые строки со встроенными пробелами</target>
        </trans-unit>
        <trans-unit id="fba560fe7e0f848ea3adef83041b6a4687e3705f" translate="yes" xml:space="preserve">
          <source>inserts blocks of characters</source>
          <target state="translated">вставляет блоки символов</target>
        </trans-unit>
        <trans-unit id="d9c16020c0ce0dafdf3dc354e86a36876210cfe0" translate="yes" xml:space="preserve">
          <source>inserts character data</source>
          <target state="translated">вставляет символьные данные</target>
        </trans-unit>
        <trans-unit id="47d056f3e1c50fa403d212d5c779999dbbc5686b" translate="yes" xml:space="preserve">
          <source>inserts characters</source>
          <target state="translated">вставки символов</target>
        </trans-unit>
        <trans-unit id="be39f6aec27fba27134e2ee12ada121c6c96a41c" translate="yes" xml:space="preserve">
          <source>inserts element and sorts the underlying container</source>
          <target state="translated">вставляет элемент и сортирует базовый контейнер</target>
        </trans-unit>
        <trans-unit id="772db9f932971b49fff89ddbbda5f3f12acf4227" translate="yes" xml:space="preserve">
          <source>inserts element at the end</source>
          <target state="translated">вставляемый элемент на конце</target>
        </trans-unit>
        <trans-unit id="fd30aa7b1f158b817d098668b52d9c0c387f2f52" translate="yes" xml:space="preserve">
          <source>inserts element at the top</source>
          <target state="translated">вставляемый элемент сверху</target>
        </trans-unit>
        <trans-unit id="3f1d172b31028643235ea1edf84a6de23b41c9df" translate="yes" xml:space="preserve">
          <source>inserts elements</source>
          <target state="translated">вставки элементов</target>
        </trans-unit>
        <trans-unit id="2b062aa7067396b5e91030c68c157634e7ecc70c" translate="yes" xml:space="preserve">
          <source>inserts elements after an element</source>
          <target state="translated">вставляет элементы после элемента</target>
        </trans-unit>
        <trans-unit id="b4c14eafdf8543900f3782ee7d01723770dc2d2e" translate="yes" xml:space="preserve">
          <source>inserts elements or nodes(since C++17)</source>
          <target state="translated">вставляет элементы или узлы (начиная с C++17)</target>
        </trans-unit>
        <trans-unit id="d9795b5913dc98dd990f29261dd29e961821f680" translate="yes" xml:space="preserve">
          <source>inserts formatted data</source>
          <target state="translated">вставки отформатированных данных</target>
        </trans-unit>
        <trans-unit id="8debd9e6cc468c3711cc1c4749c88993d0ec0d87" translate="yes" xml:space="preserve">
          <source>inserts in-place if the key does not exist, does nothing if the key exists</source>
          <target state="translated">вставляет на место,если ключ не существует,ничего не делает,если ключ существует</target>
        </trans-unit>
        <trans-unit id="8a4e3cd33010eebb04b7b62fb16236e115ee01df" translate="yes" xml:space="preserve">
          <source>inside T&lt;code&gt;&amp;amp;&lt;/code&gt;fn&lt;code&gt;()&lt;/code&gt; or T&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;fn&lt;code&gt;()&lt;/code&gt;</source>
          <target state="translated">внутри T &lt;code&gt;&amp;amp;&lt;/code&gt; fn &lt;code&gt;()&lt;/code&gt; или T &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; fn &lt;code&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f2645d0dae78b2698663b390fc463bdfc47d62e" translate="yes" xml:space="preserve">
          <source>inside a lambda-expression, a reference to &lt;code&gt;this&lt;/code&gt; or to a variable defined outside that lambda, if that reference would be an odr-use</source>
          <target state="translated">внутри лямбда-выражения - ссылка на &lt;code&gt;this&lt;/code&gt; или на переменную, определенную вне этой лямбды, если эта ссылка будет использовать odr</target>
        </trans-unit>
        <trans-unit id="cea2da1c8a10c8ce4eb8ab97b3170c0f3c0669d1" translate="yes" xml:space="preserve">
          <source>instantiated</source>
          <target state="translated">instantiated</target>
        </trans-unit>
        <trans-unit id="b07ed11905b74eae944e58993e346bc5f8851769" translate="yes" xml:space="preserve">
          <source>instantiated with template arguments &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;node_type&lt;/code&gt;.</source>
          <target state="translated">создается с помощью аргументов шаблона &lt;code&gt;iterator&lt;/code&gt; и &lt;code&gt;node_type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="371b145c969675ec671c1b5478e4038cf4c62a4c" translate="yes" xml:space="preserve">
          <source>instantiation units</source>
          <target state="translated">инстанцинационные единицы</target>
        </trans-unit>
        <trans-unit id="cb82821f5443620916128c66c024a61d87b0565d" translate="yes" xml:space="preserve">
          <source>instead of</source>
          <target state="translated">вместо</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="3743becc8d5e1373805a3c21fc8204e388e92352" translate="yes" xml:space="preserve">
          <source>int tm_hour</source>
          <target state="translated">int tm_hour</target>
        </trans-unit>
        <trans-unit id="79d0634598e522eae95f2d2694ba47896156cce0" translate="yes" xml:space="preserve">
          <source>int tm_isdst</source>
          <target state="translated">int tm_isdst</target>
        </trans-unit>
        <trans-unit id="6bf729acbf650fa9e02f01a0c30b534db55b1776" translate="yes" xml:space="preserve">
          <source>int tm_mday</source>
          <target state="translated">int tm_mday</target>
        </trans-unit>
        <trans-unit id="53685a1b332c60ce9dce697f09e86d2841fee1ce" translate="yes" xml:space="preserve">
          <source>int tm_min</source>
          <target state="translated">int tm_min</target>
        </trans-unit>
        <trans-unit id="e4d9cc68caf92806b1e3dbae4157ae8c7c5a4154" translate="yes" xml:space="preserve">
          <source>int tm_mon</source>
          <target state="translated">int tm_mon</target>
        </trans-unit>
        <trans-unit id="80340f2c3316f1d433af292daf833fea5548abd0" translate="yes" xml:space="preserve">
          <source>int tm_sec</source>
          <target state="translated">int tm_sec</target>
        </trans-unit>
        <trans-unit id="833fd473005e754b2caa0c41a6e8b5cb49276d2c" translate="yes" xml:space="preserve">
          <source>int tm_wday</source>
          <target state="translated">int tm_wday</target>
        </trans-unit>
        <trans-unit id="c1a3b190e6a973c8b5a9530fa743442c754ab994" translate="yes" xml:space="preserve">
          <source>int tm_yday</source>
          <target state="translated">ежедневно</target>
        </trans-unit>
        <trans-unit id="93573526004ba985bf6e192d369769a45dfd1ffe" translate="yes" xml:space="preserve">
          <source>int tm_year</source>
          <target state="translated">int tm_year</target>
        </trans-unit>
        <trans-unit id="892d699a218b3c0bc419f7d65741689b394798ac" translate="yes" xml:space="preserve">
          <source>int8_tint16_tint32_tint64_t</source>
          <target state="translated">int8_tint16_tint32_tint64_t</target>
        </trans-unit>
        <trans-unit id="8c24b1eeb8ba6217d363191d4679b5178a82b7d2" translate="yes" xml:space="preserve">
          <source>int_fast8_tint_fast16_tint_fast32_tint_fast64_t</source>
          <target state="translated">int_fast8_tint_fast16_tint_fast32_tint_fast64_t</target>
        </trans-unit>
        <trans-unit id="bb698ac908066b3229f1151574aefc1ba9f70c98" translate="yes" xml:space="preserve">
          <source>int_least8_tint_least16_tint_least32_tint_least64_t</source>
          <target state="translated">int_least8_tint_least16_tint_least32_tint_least64_t</target>
        </trans-unit>
        <trans-unit id="1178cafbd64bbbfa77f5ac0a9d5032ed88162781" translate="yes" xml:space="preserve">
          <source>integer</source>
          <target state="translated">integer</target>
        </trans-unit>
        <trans-unit id="d81e5a318c4dc193d0e7e0133dcab84ab5349453" translate="yes" xml:space="preserve">
          <source>integer base to use: a value between 2 and 36 (inclusive).</source>
          <target state="translated">целочисленная база для использования:значение от 2 до 36 (включительно).</target>
        </trans-unit>
        <trans-unit id="af859169b3746ba4b6680c2332b3d882e1437828" translate="yes" xml:space="preserve">
          <source>integer constant expression of type &lt;code&gt;int&lt;/code&gt; and negative value</source>
          <target state="translated">целочисленное константное выражение типа &lt;code&gt;int&lt;/code&gt; и отрицательного значения</target>
        </trans-unit>
        <trans-unit id="c62a8cc6365b35bd7f6b0efc3e58d64f303864e7" translate="yes" xml:space="preserve">
          <source>integer literal</source>
          <target state="translated">целочисленный буквенный</target>
        </trans-unit>
        <trans-unit id="049c59cde21fd40acc8fa85b48db5fb1c2622c37" translate="yes" xml:space="preserve">
          <source>integer type that can hold any valid wide character and at least one more value</source>
          <target state="translated">целочисленный тип,который может содержать любой допустимый широкий символ и,по крайней мере,еще одно значение</target>
        </trans-unit>
        <trans-unit id="1b4d06b3a4cadf1874fac4b5e0737d4be999e83e" translate="yes" xml:space="preserve">
          <source>integer type that may be used like &lt;code&gt;iostate&lt;/code&gt;</source>
          <target state="translated">целочисленный тип, который можно использовать как &lt;code&gt;iostate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5646213686dbc5dc09f5dbbcb2892d9438adeb9" translate="yes" xml:space="preserve">
          <source>integer type that may be used like &lt;code&gt;openmode&lt;/code&gt;</source>
          <target state="translated">целочисленный тип, который можно использовать как &lt;code&gt;openmode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9883fb5f497beb546fa2ac66699927ccbcc63c47" translate="yes" xml:space="preserve">
          <source>integer type that may be used like &lt;code&gt;seekdir&lt;/code&gt;</source>
          <target state="translated">целочисленный тип, который можно использовать как &lt;code&gt;seekdir&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a58d730501fa1ad9f02e2d098900ec47c26af30" translate="yes" xml:space="preserve">
          <source>integer value</source>
          <target state="translated">целое значение</target>
        </trans-unit>
        <trans-unit id="bf6bbf11c0ecbf9d6fbd2a47c9d463a4ea5135be" translate="yes" xml:space="preserve">
          <source>integer value greater than zero to set the stream wide, less than zero to set the stream narrow, or zero to query only</source>
          <target state="translated">целое значение больше нуля,чтобы установить поток широким,меньше нуля,чтобы установить поток узким,или ноль,чтобы запросить только</target>
        </trans-unit>
        <trans-unit id="f57bd731d0a1a1f715267bb71cdf3c8f0fab29e7" translate="yes" xml:space="preserve">
          <source>integer value specifying the number of times to advance the state by</source>
          <target state="translated">целое значение,указывающее количество раз для продвижения состояния на</target>
        </trans-unit>
        <trans-unit id="88f1dacb54bad6941e7b7eb6dbc0135bfa126545" translate="yes" xml:space="preserve">
          <source>integer value to construct the underlying engine with</source>
          <target state="translated">целое значение для построения базового двигателя с</target>
        </trans-unit>
        <trans-unit id="fd51974824e9b446e985918004540e44ee58085c" translate="yes" xml:space="preserve">
          <source>integer values</source>
          <target state="translated">целые значения</target>
        </trans-unit>
        <trans-unit id="a4331a4f235e30a7cd862dd4c590ceb372662d25" translate="yes" xml:space="preserve">
          <source>integer, floating-point, boolean, or pointer value to insert</source>
          <target state="translated">целое число,с плавающей точкой,логическое или указательное значение для вставки</target>
        </trans-unit>
        <trans-unit id="e3bd769ff06d0246fadb832285c2ed0c3cb72598" translate="yes" xml:space="preserve">
          <source>integer-suffix, if provided, may contain one or both of the following (if both are provided, they may appear in any order:</source>
          <target state="translated">Целые числа-суффиксы,если таковые предусмотрены,могут содержать одно или оба из следующего (если предусмотрены оба,то они могут появиться в любом порядке):</target>
        </trans-unit>
        <trans-unit id="e2f2ff8ecb00be08bcb4addd508236725f637c4b" translate="yes" xml:space="preserve">
          <source>integer_sequence</source>
          <target state="translated">integer_sequence</target>
        </trans-unit>
        <trans-unit id="ca129f38115aa2c6dbfc1282721729737f3a1cd6" translate="yes" xml:space="preserve">
          <source>integral and enumeration (until C++17)non-type &lt;a href=&quot;template_parameters&quot;&gt;template arguments&lt;/a&gt;.</source>
          <target state="translated">интеграл и перечисление (до C ++ 17) &lt;a href=&quot;template_parameters&quot;&gt;нетиповые аргументы шаблона&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa3be40b74ed66932b22bac2945301a22f82f646" translate="yes" xml:space="preserve">
          <source>integral constant expression</source>
          <target state="translated">интегральная постоянная экспрессия</target>
        </trans-unit>
        <trans-unit id="1af7f4e7e207a3555fd05b032b7b97de0bdd4783" translate="yes" xml:space="preserve">
          <source>integral number specifying which match to examine</source>
          <target state="translated">интегральное число,указывающее,какое совпадение следует изучить</target>
        </trans-unit>
        <trans-unit id="26461c710d8b354c60d663ee1014367ae23668d2" translate="yes" xml:space="preserve">
          <source>integral number specifying which match to return</source>
          <target state="translated">интегральное число,указывающее,какое совпадение можно вернуть</target>
        </trans-unit>
        <trans-unit id="dd37402b60cf1e65265d712de68f68d79571fc36" translate="yes" xml:space="preserve">
          <source>integral promotions</source>
          <target state="translated">комплексные рекламные акции</target>
        </trans-unit>
        <trans-unit id="a4b13b90de540160c427c585005c7a19aff525b0" translate="yes" xml:space="preserve">
          <source>integral types (see also &lt;code&gt;&lt;a href=&quot;../types/is_integral&quot;&gt;std::is_integral&lt;/a&gt;&lt;/code&gt;):</source>
          <target state="translated">целочисленные типы (см. также &lt;code&gt;&lt;a href=&quot;../types/is_integral&quot;&gt;std::is_integral&lt;/a&gt;&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="c44904b7ebf8e53677c7c69ebeeb660597be37f9" translate="yes" xml:space="preserve">
          <source>integral value referring to a error code</source>
          <target state="translated">интегральное значение,относящееся к коду ошибки</target>
        </trans-unit>
        <trans-unit id="6e48d250b3754d5764fa4e941f0bfa08ab33ec8d" translate="yes" xml:space="preserve">
          <source>integral_constant</source>
          <target state="translated">integral_constant</target>
        </trans-unit>
        <trans-unit id="bc35148d06895a6db4034dd82d5602de9ec44cb2" translate="yes" xml:space="preserve">
          <source>integral_constantbool_constant</source>
          <target state="translated">integral_constantbool_constant</target>
        </trans-unit>
        <trans-unit id="5c35497df479d719873619edfe817c50f8a8d9cb" translate="yes" xml:space="preserve">
          <source>intended to be called with a &lt;code&gt;&lt;a href=&quot;exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt; but rather an actual exception reference.</source>
          <target state="translated">предназначен для вызова с &lt;code&gt;&lt;a href=&quot;exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt; а скорее с фактической ссылкой на исключение.</target>
        </trans-unit>
        <trans-unit id="2451d70ffee414418cf388135ddf5a0b320e23ff" translate="yes" xml:space="preserve">
          <source>inter-thread happens before</source>
          <target state="translated">межпоточное взаимодействие происходит раньше</target>
        </trans-unit>
        <trans-unit id="ed692e033e87e073940fdbc04bc16c33826f9133" translate="yes" xml:space="preserve">
          <source>inter-thread happens-before</source>
          <target state="translated">между потоками-до того,как</target>
        </trans-unit>
        <trans-unit id="5ea2d81a89e0cdc89baf7cd1ff38cdfefa33ba78" translate="yes" xml:space="preserve">
          <source>interface</source>
          <target state="translated">interface</target>
        </trans-unit>
        <trans-unit id="fffacb3ab8d396df731f02ea85ea28af307b8e53" translate="yes" xml:space="preserve">
          <source>intergers, floating-points, or pointer values</source>
          <target state="translated">интергеры,плавающие точки или значения указателей</target>
        </trans-unit>
        <trans-unit id="9f33a7c798af6fd6abb28049d9c1b3edfa2fd24a" translate="yes" xml:space="preserve">
          <source>internal</source>
          <target state="translated">internal</target>
        </trans-unit>
        <trans-unit id="4a1c8d53853ff22c774ea9b244b36eb409404ee0" translate="yes" xml:space="preserve">
          <source>internal adjustment (adds fill characters to the internal designated point): see &lt;code&gt;&lt;a href=&quot;../manip/left&quot;&gt;std::internal&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">внутренняя корректировка (добавляет символы заполнения во внутреннюю обозначенную точку): см. &lt;code&gt;&lt;a href=&quot;../manip/left&quot;&gt;std::internal&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f26f28034c166fc6616c3649802d0f779e96b5c2" translate="yes" xml:space="preserve">
          <source>internal adjustment (adds fill characters to the internal designated point): see &lt;code&gt;&lt;a href=&quot;manip/left&quot;&gt;std::internal&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">внутренняя корректировка (добавляет символы заполнения во внутреннюю обозначенную точку): см. &lt;code&gt;&lt;a href=&quot;manip/left&quot;&gt;std::internal&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ed8f36626adab2fb2164c1e76a3b4b939a5a315" translate="yes" xml:space="preserve">
          <source>internal references (e.g. member pointer which might hold the address of another member).</source>
          <target state="translated">внутренние ссылки (например,указатель члена,в котором может содержаться адрес другого члена).</target>
        </trans-unit>
        <trans-unit id="dd0cac4216c5c78fedf80e603b90e954b4533dfc" translate="yes" xml:space="preserve">
          <source>internalleftright</source>
          <target state="translated">internalleftright</target>
        </trans-unit>
        <trans-unit id="f52503fa313c43cb91700fa5e44d02a42dfec590" translate="yes" xml:space="preserve">
          <source>intervalsdensities</source>
          <target state="translated">intervalsdensities</target>
        </trans-unit>
        <trans-unit id="919b03e583a3e7e44bec07badea4cfbc7ee1ac05" translate="yes" xml:space="preserve">
          <source>intl</source>
          <target state="translated">intl</target>
        </trans-unit>
        <trans-unit id="c5c7aa1df4fb5e68977d7dd5dfc6a6b0d80ac027" translate="yes" xml:space="preserve">
          <source>intmax_t</source>
          <target state="translated">intmax_t</target>
        </trans-unit>
        <trans-unit id="3044e48ec9290159ee1f38956327421d8ddaa798" translate="yes" xml:space="preserve">
          <source>into zero or more comma-separated instantiations of the pattern, where the name of the parameter pack is replaced by each of the elements from the pack, in order.</source>
          <target state="translated">в нулевую или более разделенных запятыми инстанций шаблона,где имя пакета параметров по порядку заменяется именем каждого элемента из пакета.</target>
        </trans-unit>
        <trans-unit id="391d728e774cc0b4d2ae1b6b460fc89d8fe0137d" translate="yes" xml:space="preserve">
          <source>intptr_t</source>
          <target state="translated">intptr_t</target>
        </trans-unit>
        <trans-unit id="0b5b95b65671308963fbe1a5c1b1286d5c0ceebb" translate="yes" xml:space="preserve">
          <source>introduce (or re-introduce) names into the C++ program. Each kind of entity is declared differently. &lt;a href=&quot;definition&quot;&gt;Definitions&lt;/a&gt; are declarations that are sufficient to use the entity identified by the name.</source>
          <target state="translated">ввести (или заново ввести) имена в программу на C ++. Каждый вид сущности объявляется по-разному. &lt;a href=&quot;definition&quot;&gt;Определения&lt;/a&gt; - это объявления, достаточные для использования объекта, идентифицируемого по имени.</target>
        </trans-unit>
        <trans-unit id="582ba1ea85f07520c47b313ebf59b18b50d8fe12" translate="yes" xml:space="preserve">
          <source>introductory &lt;code&gt;%&lt;/code&gt; character</source>
          <target state="translated">вводный символ &lt;code&gt;%&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4df6f0ac832ae39900309cdbc0efe64cb741635d" translate="yes" xml:space="preserve">
          <source>invalid UTF-16 code unit</source>
          <target state="translated">недействительный код блока UTF-16</target>
        </trans-unit>
        <trans-unit id="7bf6432c8a0136a696a516b8c62c8c5cef6f7bdb" translate="yes" xml:space="preserve">
          <source>invalid UTF-32 code unit</source>
          <target state="translated">недействительный код UTF-32</target>
        </trans-unit>
        <trans-unit id="e68164031b920fc1a0e52b0a2fb8467a8a185e1f" translate="yes" xml:space="preserve">
          <source>invalid UTF-8 code unit</source>
          <target state="translated">недействительный код блока UTF-8</target>
        </trans-unit>
        <trans-unit id="03ccb2fe49fb034561209a29625b448812a742c6" translate="yes" xml:space="preserve">
          <source>invalid memory access (segmentation fault)</source>
          <target state="translated">некорректный доступ к памяти (ошибка сегментации)</target>
        </trans-unit>
        <trans-unit id="7a550e4704cb163d23f2078ff9713ab632031b91" translate="yes" xml:space="preserve">
          <source>invalid pointer value</source>
          <target state="translated">недопустимое значение указателя</target>
        </trans-unit>
        <trans-unit id="8ac4c22c12305fb98ebc7f50ca1e873db09d03ad" translate="yes" xml:space="preserve">
          <source>invalid program image, such as invalid instruction</source>
          <target state="translated">некорректный образ программы,например,некорректная инструкция</target>
        </trans-unit>
        <trans-unit id="bdcaddd18a21960c80f61a1a95a52fa220b2ea66" translate="yes" xml:space="preserve">
          <source>invalid_argument</source>
          <target state="translated">invalid_argument</target>
        </trans-unit>
        <trans-unit id="1372d73764eb06f80431e9db557cc7d136885e89" translate="yes" xml:space="preserve">
          <source>invalidate &lt;code&gt;&lt;a href=&quot;container/deque/end&quot;&gt;std::deque::end&lt;/a&gt;&lt;/code&gt; is an erasure which deletes the first element, but not the last.</source>
          <target state="translated">invalidate &lt;code&gt;&lt;a href=&quot;container/deque/end&quot;&gt;std::deque::end&lt;/a&gt;&lt;/code&gt; - это стирание, которое удаляет первый элемент, но не последний.</target>
        </trans-unit>
        <trans-unit id="9f1903b582ae123956f9957909374032d39d018a" translate="yes" xml:space="preserve">
          <source>invalidate the past-the-end iterator, even though it is not an erased element of the container (or an element at all). Combined with the general rules for &lt;code&gt;&lt;a href=&quot;container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt; iterators, the net result is that the only modifying operation which does</source>
          <target state="translated">аннулировать последний итератор, даже если он не является стертым элементом контейнера (или вообще элементом). В сочетании с общими правилами для итераторов &lt;code&gt;&lt;a href=&quot;container/deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt; , чистый результат - единственная модифицирующая операция, которая делает</target>
        </trans-unit>
        <trans-unit id="d6aa1f3a789f3f3108666e0ac807ca5ca7dc5fa5" translate="yes" xml:space="preserve">
          <source>invoke</source>
          <target state="translated">invoke</target>
        </trans-unit>
        <trans-unit id="f8bf9b918a6eae23263dd26e9208465b3da2fa6c" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_always_noconv&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_always_noconv&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a5ae3566ac29e29511c32fc633330023cd03e61f" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_close&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_close&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="721cd964e88c3e8ddca8fbbc4587bc3d578dc26a" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_compare&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_compare&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="016cb5d9dd23963c80429f5ff15b41d54d2edfd4" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_curr_symbol&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_curr_symbol&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f61436a66bf7503d50b3110af1683a6eea2b3ac9" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_date_order&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_date_order&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bec99cdc8029894f81000daf1143cdb45073a9c4" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_decimal_point&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_decimal_point&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e0061e7050f61801536027470355de8e8a6625c" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_encoding&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_encoding&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c79742e3dc9ab2e58c6d3fa7308aa409de92881d" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_frac_digits&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_frac_digits&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d593db393c3e2d54a9290ddb155cb063affaaa7" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_get&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_get&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dcebe11116ea9f273008d37a7c66632031bfea9d" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_get_date&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_get_date&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="839cbb3a4ef53c8b2f59b7d240492df8c9ccc958" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_get_monthname&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_get_monthname&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41bbb5bd4fb111aa0b84ca4f0666769d04b06300" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_get_time&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_get_time&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a8311477cb8217ace6facd9c65f280948cefc5e" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_get_weekday&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_get_weekday&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="022349994032c5a65d2a915c6fb1a4a610cd3708" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_get_year&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_get_year&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4470f413157808201c98ac4be0b92b7dad5b1f1e" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_grouping&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_grouping&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f26d07754c29dfadb99b1b02efa4a095d3f42ecd" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_hash&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_hash&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="610d81bd4022541e91a7a0291b9231b0c556ece7" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_in&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_in&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ebab17480e94ac820a5206d22ee0b2e03d391d52" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_is&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_is&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47c2bb9720a079e7d958065d29ce4a909bd8574a" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_length&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_length&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="904b24263eee444dae47fba420db5aa460b44d62" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_max_length&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_max_length&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a23d0d00355ee49ca19750866c7fc9130219866c" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_narrow&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_narrow&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20849e14a0fa7f35367f734f95da571d7b04b4e9" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_open&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_open&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81c734949549fc4021cc5f28551ecd553fe613d5" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_out&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_out&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad13c710f69bd7f7f4e4acf7f4a548e0182706c9" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_pos_format&lt;/code&gt;/&lt;code&gt;do_neg_format&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_pos_format&lt;/code&gt; / &lt;code&gt;do_neg_format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7309346e54818cc9c1f1a4b7d51602b373c94e17" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_positive_sign&lt;/code&gt; or &lt;code&gt;do_negative_sign&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_positive_sign&lt;/code&gt; или &lt;code&gt;do_negative_sign&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21b0f3bea1f60da139e1450fa35fffabe5d44279" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_put&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_put&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c7d8bfded33efe736a75eaac5fe02bbba61f448" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_scan_is&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_scan_is&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24a568eda75412b1878ed6b004fb0a0106d71c6b" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_scan_not&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_scan_not&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edf4d394c55a6a9b0642c4c663469901a5f17f64" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_thousands_sep&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_thousands_sep&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44a6f207aed489b6c1cc53e245cad96b72b9e700" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_tolower&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_tolower&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54ae52f005f3621466adeaf634bebb45cacee325" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_toupper&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_toupper&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30798ad78eb907e7f4d661445167c4df8d722f68" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_transform&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_transform&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aeb31f7004cecd6161dd6385fab5ea9b2059781c" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_truename&lt;/code&gt; or &lt;code&gt;do_falsename&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_truename&lt;/code&gt; или &lt;code&gt;do_falsename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c588ad1941c8b66514c4e4beec6c45bc0bc267bc" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_unshift&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_unshift&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c11fce37ca854447bdd40af473194c5fb601cbeb" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;do_widen&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;do_widen&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e53b72b31185ab119861442923118f52054347c" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;imbue()&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;imbue()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d925d6ea3342886ce21d3a495b65cbe83fdba747" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;seekoff()&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;seekoff()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5826eb575a4b76a618adf6f2ff2b2d307007efc0" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;seekpos()&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;seekpos()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5404145a0cef875f0793f57327198b16d8010f53" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;setbuf()&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;setbuf()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d3f0bc2f448ab1b163d23ca70854c42ff4e0762" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;sync()&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;sync()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4b52bbf95352ef0241423b1c41164cb3caf08fb" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;xsgetn()&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;xsgetn()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0e6eb6e89bcbdb2f3f1525b9ea390e4a2adbeb0" translate="yes" xml:space="preserve">
          <source>invokes &lt;code&gt;xsputn()&lt;/code&gt;</source>
          <target state="translated">вызывает &lt;code&gt;xsputn()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e580e92c69a0b8047c30076a7e0315a56729f93a" translate="yes" xml:space="preserve">
          <source>invokes a function only once even if called from multiple threads</source>
          <target state="translated">вызывает функцию только один раз,даже если она вызывается из нескольких потоков.</target>
        </trans-unit>
        <trans-unit id="fd840f86bc695d2ca9e85e4c2f513a95aacb33ea" translate="yes" xml:space="preserve">
          <source>invokes any &lt;a href=&quot;../../../named_req/callable&quot;&gt;Callable&lt;/a&gt; object with given arguments</source>
          <target state="translated">вызывает любой &lt;a href=&quot;../../../named_req/callable&quot;&gt;вызываемый&lt;/a&gt; объект с заданными аргументами</target>
        </trans-unit>
        <trans-unit id="e4b761773b89f70cb6220993b91e137b8fab2d98" translate="yes" xml:space="preserve">
          <source>invokes any &lt;a href=&quot;../named_req/callable&quot;&gt;Callable&lt;/a&gt; object with given arguments</source>
          <target state="translated">вызывает любой &lt;a href=&quot;../named_req/callable&quot;&gt;вызываемый&lt;/a&gt; объект с заданными аргументами</target>
        </trans-unit>
        <trans-unit id="961bdbe0b017f11630b70afa828a73d85c909ba1" translate="yes" xml:space="preserve">
          <source>invokes the target</source>
          <target state="translated">вызывает мишень</target>
        </trans-unit>
        <trans-unit id="987b550a0778837951d2b1d60504fbdb6ec9e317" translate="yes" xml:space="preserve">
          <source>io_errc</source>
          <target state="translated">io_errc</target>
        </trans-unit>
        <trans-unit id="ae28ab2d367ed7d42eb321383037c7cb5ef4615f" translate="yes" xml:space="preserve">
          <source>iomanip</source>
          <target state="translated">iomanip</target>
        </trans-unit>
        <trans-unit id="0f8d25735ff76a079d6c88c1e05650b7dd4f02ee" translate="yes" xml:space="preserve">
          <source>ios</source>
          <target state="translated">ios</target>
        </trans-unit>
        <trans-unit id="aa6164f161119e61270d9e6cf11939639156efce" translate="yes" xml:space="preserve">
          <source>ios_base</source>
          <target state="translated">ios_base</target>
        </trans-unit>
        <trans-unit id="a2ae3879fa6bce9b3f3c5b9ced5e57e24dc0a5c9" translate="yes" xml:space="preserve">
          <source>iosfwd</source>
          <target state="translated">iosfwd</target>
        </trans-unit>
        <trans-unit id="6a8f0cdea3fe1cc0900d5c9de7e16b5a69a6be8e" translate="yes" xml:space="preserve">
          <source>iostate</source>
          <target state="translated">iostate</target>
        </trans-unit>
        <trans-unit id="cedda28bbdbdb7e49eaf18e4a985fc3735e0382c" translate="yes" xml:space="preserve">
          <source>iostream</source>
          <target state="translated">iostream</target>
        </trans-unit>
        <trans-unit id="658e425c3b99ce5d240bea90f6cd31ac914b24a8" translate="yes" xml:space="preserve">
          <source>iostream_category</source>
          <target state="translated">iostream_category</target>
        </trans-unit>
        <trans-unit id="660c444535d9f6024214bd9e3fd09ece298217a4" translate="yes" xml:space="preserve">
          <source>iota</source>
          <target state="translated">iota</target>
        </trans-unit>
        <trans-unit id="1b1ab186f18920e85b077376f9540681ce9d42dd" translate="yes" xml:space="preserve">
          <source>iota_viewview::iota</source>
          <target state="translated">iota_viewview::iota</target>
        </trans-unit>
        <trans-unit id="ad79a664f30ba181b6c4c72dabb2f39e3be1948d" translate="yes" xml:space="preserve">
          <source>iptr</source>
          <target state="translated">iptr</target>
        </trans-unit>
        <trans-unit id="5b6b78680d71dfc42bf937322396da67ccdb9f3f" translate="yes" xml:space="preserve">
          <source>irrecoverable stream error</source>
          <target state="translated">неустранимая ошибка потока</target>
        </trans-unit>
        <trans-unit id="4221c8496b49dcd6efdd20b474dce58ba276c2d3" translate="yes" xml:space="preserve">
          <source>irregular modified cylindrical Bessel functions</source>
          <target state="translated">неравномерные изменения цилиндрических функций Бесселя</target>
        </trans-unit>
        <trans-unit id="b47f363e2b430c0647f14deea3eced9b0ef300ce" translate="yes" xml:space="preserve">
          <source>is</source>
          <target state="translated">is</target>
        </trans-unit>
        <trans-unit id="9dc49ac3ec278d541eee997a58b9b81d722d0776" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;(__range + __bound)&lt;/code&gt;, where &lt;code&gt;__bound&lt;/code&gt; is the number of elements in the array (if the array has unknown size or is of an incomplete type, the program is ill-formed)</source>
          <target state="translated">is &lt;code&gt;(__range + __bound)&lt;/code&gt; , где &lt;code&gt;__bound&lt;/code&gt; - количество элементов в массиве (если массив имеет неизвестный размер или имеет неполный тип, программа некорректна)</target>
        </trans-unit>
        <trans-unit id="56b3340d7a120fa81a978a2f637e7c2744c82999" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;__range.begin()&lt;/code&gt; and</source>
          <target state="translated">это &lt;code&gt;__range.begin()&lt;/code&gt; и</target>
        </trans-unit>
        <trans-unit id="7ba86688040d90a87e99e1308f3f0cbd08985a09" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;__range.end()&lt;/code&gt;;</source>
          <target state="translated">is &lt;code&gt;__range.end()&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="bd44b32a7aef215a6ef5cea03d7671727094a23b" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;__range&lt;/code&gt; and</source>
          <target state="translated">является &lt;code&gt;__range&lt;/code&gt; и</target>
        </trans-unit>
        <trans-unit id="52b3249392263321b7f2109bb0e79a66ec941a33" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;begin(__range)&lt;/code&gt; and</source>
          <target state="translated">это &lt;code&gt;begin(__range)&lt;/code&gt; и</target>
        </trans-unit>
        <trans-unit id="4b9155ab236b351da487b9092a3da7f219d74cd8" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;class-template-name&amp;lt;T&amp;gt;&lt;/code&gt; and T is &lt;code&gt;type[i]&lt;/code&gt;.</source>
          <target state="translated">является &lt;code&gt;class-template-name&amp;lt;T&amp;gt;&lt;/code&gt; а T является &lt;code&gt;type[i]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a3e2aa4f9540e42a9006d7d18a58cb95cac7e76" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;constexpr&lt;/code&gt; and has no mutable members.</source>
          <target state="translated">является &lt;code&gt;constexpr&lt;/code&gt; и не имеет изменяемых членов.</target>
        </trans-unit>
        <trans-unit id="d99ac2b22d8bde6be69ce95b8beb513a44f658cc" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;end(__range)&lt;/code&gt;, which are found via &lt;a href=&quot;adl&quot;&gt;argument-dependent lookup&lt;/a&gt; (non-ADL lookup is not performed).</source>
          <target state="translated">является &lt;code&gt;end(__range)&lt;/code&gt; , который находится с помощью &lt;a href=&quot;adl&quot;&gt;поиска, зависящего от аргумента&lt;/a&gt; ( поиск без ADL не выполняется).</target>
        </trans-unit>
        <trans-unit id="d25aea1366972a148eacf1f39f73234a892d1d9f" translate="yes" xml:space="preserve">
          <source>is a &lt;a href=&quot;declarations&quot;&gt;block-declaration&lt;/a&gt; with the following syntax:</source>
          <target state="translated">это объявление &lt;a href=&quot;declarations&quot;&gt;блока&lt;/a&gt; со следующим синтаксисом:</target>
        </trans-unit>
        <trans-unit id="e1de7694d2eed475337171013efff07115df30df" translate="yes" xml:space="preserve">
          <source>is a &lt;a href=&quot;standardlayouttype&quot;&gt;standard layout type&lt;/a&gt;;</source>
          <target state="translated">это &lt;a href=&quot;standardlayouttype&quot;&gt;стандартный тип компоновки&lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="178522003afa81c6aaa9a4aa937e39363a87e048" translate="yes" xml:space="preserve">
          <source>is a &lt;a href=&quot;trivialtype&quot;&gt;trivial type&lt;/a&gt;;</source>
          <target state="translated">является &lt;a href=&quot;trivialtype&quot;&gt;тривиальным типом&lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="2fab183cd049d204712a4ddab72f5f81f89517d7" translate="yes" xml:space="preserve">
          <source>is a constant with a literal type, initialized from a value-dependent expression</source>
          <target state="translated">является константой с буквальным типом,инициализированной из зависящего от значения выражения</target>
        </trans-unit>
        <trans-unit id="95c78be34177b1d5ad28401ae4a53a7915397c31" translate="yes" xml:space="preserve">
          <source>is a distinct type whose value is restricted to a range of values (see below for details), which may include several explicitly named constants (&quot;</source>
          <target state="translated">это отдельный тип,значение которого ограничено диапазоном значений (подробнее см.ниже),который может включать в себя несколько явно названных констант (&quot;</target>
        </trans-unit>
        <trans-unit id="ead6bd2916c78908f22921b642c0516519cefdfb" translate="yes" xml:space="preserve">
          <source>is a function object returning unsigned integer values such that each value in the range of possible results has (ideally) equal probability of being returned.</source>
          <target state="translated">объект функции,возвращающий беззнаковые целочисленные значения таким образом,что каждое значение в диапазоне возможных результатов имеет (в идеале)равную вероятность быть возвращенным.</target>
        </trans-unit>
        <trans-unit id="b24d314c831ad86556af29da30fa52709d3b5198" translate="yes" xml:space="preserve">
          <source>is a function pointer or a &lt;code&gt;&lt;a href=&quot;../reference_wrapper&quot;&gt;std::reference_wrapper&lt;/a&gt;&lt;/code&gt;, otherwise may throw &lt;code&gt;&lt;a href=&quot;../../../memory/new/bad_alloc&quot;&gt;std::bad_alloc&lt;/a&gt;&lt;/code&gt; or any exception thrown by the constructor used to copy or move the stored callable object.</source>
          <target state="translated">является указателем на функцию или &lt;code&gt;&lt;a href=&quot;../reference_wrapper&quot;&gt;std::reference_wrapper&lt;/a&gt;&lt;/code&gt; , в противном случае может &lt;code&gt;&lt;a href=&quot;../../../memory/new/bad_alloc&quot;&gt;std::bad_alloc&lt;/a&gt;&lt;/code&gt; или любое исключение, сгенерированное конструктором, используемым для копирования или перемещения сохраненного вызываемого объекта.</target>
        </trans-unit>
        <trans-unit id="ca442231d5de74df1d0bb9b944a37ac8d3320947" translate="yes" xml:space="preserve">
          <source>is a function pointer or a &lt;code&gt;&lt;a href=&quot;../reference_wrapper&quot;&gt;std::reference_wrapper&lt;/a&gt;&lt;/code&gt;, small object optimization is guaranteed, that is, these targets are always directly stored inside the &lt;code&gt;&lt;a href=&quot;../function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; object, no dynamic allocation takes place. Other large objects may be constructed in dynamic allocated storage and accessed by the &lt;code&gt;&lt;a href=&quot;../function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; object through a pointer.</source>
          <target state="translated">является указателем на функцию или &lt;code&gt;&lt;a href=&quot;../reference_wrapper&quot;&gt;std::reference_wrapper&lt;/a&gt;&lt;/code&gt; , оптимизация небольших объектов гарантирована, то есть эти цели всегда хранятся непосредственно внутри объекта &lt;code&gt;&lt;a href=&quot;../function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; , динамическое выделение не происходит. Другие большие объекты могут быть созданы в динамически выделенном хранилище и доступны объекту &lt;code&gt;&lt;a href=&quot;../function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; через указатель.</target>
        </trans-unit>
        <trans-unit id="f976f6178ec98529929240864d1c2e57e4e3b157" translate="yes" xml:space="preserve">
          <source>is a literal constant expression, a reference constant expression, or an address constant expression.</source>
          <target state="translated">является буквальным константным выражением,выражением ссылочной константы или адресной константы.</target>
        </trans-unit>
        <trans-unit id="2e2acf9036be797cec282a0a6f0156e74a9db886" translate="yes" xml:space="preserve">
          <source>is a name of a non-type template parameter</source>
          <target state="translated">это имя нетипового шаблонного параметра</target>
        </trans-unit>
        <trans-unit id="0cc09e900fdf6b909b6992d6124ca4e667494c99" translate="yes" xml:space="preserve">
          <source>is a namespace definition of the form.</source>
          <target state="translated">это определение пространства имён формы.</target>
        </trans-unit>
        <trans-unit id="48ac6a640d67a3ea54be2b61e0ce283a5606f6d8" translate="yes" xml:space="preserve">
          <source>is a non-local variable or has static or thread local &lt;a href=&quot;storage_duration&quot;&gt;storage duration&lt;/a&gt; (in which case the variable cannot be captured), or</source>
          <target state="translated">является нелокальной переменной или имеет статическую или потоковую локальную &lt;a href=&quot;storage_duration&quot;&gt;продолжительность хранения&lt;/a&gt; (в этом случае переменная не может быть захвачена), или</target>
        </trans-unit>
        <trans-unit id="e6871aa1a1d78b89e3b98cd7e555db523d8c704b" translate="yes" xml:space="preserve">
          <source>is a non-volatile glvalue that refers to an element of a string literal</source>
          <target state="translated">это нелетучий клей,который относится к элементу струнного букваля.</target>
        </trans-unit>
        <trans-unit id="5711472d0de0e875585ba8642b451328aead24ed" translate="yes" xml:space="preserve">
          <source>is a null pointer.</source>
          <target state="translated">это нулевой указатель.</target>
        </trans-unit>
        <trans-unit id="635df4bf04aaebbfa91a7a6dab626146668b35f4" translate="yes" xml:space="preserve">
          <source>is a prvalue</source>
          <target state="translated">цена</target>
        </trans-unit>
        <trans-unit id="92a1be544d52d7c32551d9a9a1d8c5155674ea44" translate="yes" xml:space="preserve">
          <source>is a prvalue core constant expression (after conversions required by context) of type &lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; or of a pointer type, which points to an object with static storage duration, one past the end of an array with static storage duration, to a function, or is a null pointer.</source>
          <target state="translated">является основным значением постоянной константы (после преобразований, требуемых контекстом) типа &lt;code&gt;&lt;a href=&quot;../types/nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; или типа указателя, который указывает на объект со статической продолжительностью хранения, один за концом массива со статической длительностью хранения, на функцию или является нулевым указателем.</target>
        </trans-unit>
        <trans-unit id="faf441c4a514e1fad3915748bab557912694967f" translate="yes" xml:space="preserve">
          <source>is a prvalue of the specified type designating a temporary(until C++17)whose result object is(since C++17)&lt;a href=&quot;list_initialization&quot;&gt;direct-list-initialized&lt;/a&gt; with the specified</source>
          <target state="translated">является значением указанного типа, обозначающим временный (до C ++ 17), чей результирующий объект (начиная с C ++ 17) &lt;a href=&quot;list_initialization&quot;&gt;инициализируется прямым списком&lt;/a&gt; с указанным</target>
        </trans-unit>
        <trans-unit id="7e367468932c5450ae209b82b3d77af1858b6cd5" translate="yes" xml:space="preserve">
          <source>is a range of elements &lt;code&gt;[f,l)&lt;/code&gt; that has the following properties:</source>
          <target state="translated">это диапазон элементов &lt;code&gt;[f,l)&lt;/code&gt; , который имеет следующие свойства:</target>
        </trans-unit>
        <trans-unit id="bbe5637f0064a9e539e7f9ab655e1d8743bffbde" translate="yes" xml:space="preserve">
          <source>is a reference that has been initialized with a &lt;a href=&quot;constant_expression#Constant_expression&quot;&gt;constant expression&lt;/a&gt;.</source>
          <target state="translated">является ссылкой, которая была инициализирована с помощью &lt;a href=&quot;constant_expression#Constant_expression&quot;&gt;константного выражения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c8252354e1eb20b7fe3d295dc28dfafd0d0404b0" translate="yes" xml:space="preserve">
          <source>is a representable finite value of the floating-point type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">является представимым конечным значением типа &lt;code&gt;T&lt;/code&gt; с плавающей точкой .</target>
        </trans-unit>
        <trans-unit id="7b825fa968d0d6cfd8e3999e3c52902256796ea8" translate="yes" xml:space="preserve">
          <source>is a special bit that has no other effect when set in &lt;code&gt;options&lt;/code&gt;. (The sole purpose of setting this bit is to prevent recursive copying subdirectories if &lt;code&gt;options&lt;/code&gt; is &lt;code&gt;copy_options::none&lt;/code&gt;.)</source>
          <target state="translated">это специальный бит, который не имеет никакого другого эффекта, если установлен в &lt;code&gt;options&lt;/code&gt; . (Единственная цель установки этого бита - предотвратить рекурсивное копирование подкаталогов, если &lt;code&gt;options&lt;/code&gt; имеет значение &lt;code&gt;copy_options::none&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="7f4023de2562bb33369cbd381b792e7f67b09a44" translate="yes" xml:space="preserve">
          <source>is a valid iterator position. When set, causes</source>
          <target state="translated">это действительное положение итератора.Когда установлено,причины</target>
        </trans-unit>
        <trans-unit id="4921b49e301053cc4c7e0f4fdf82f9178cd55ba2" translate="yes" xml:space="preserve">
          <source>is a valid normalized value of the floating-point type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">является допустимым нормализованным значением типа &lt;code&gt;T&lt;/code&gt; с плавающей точкой .</target>
        </trans-unit>
        <trans-unit id="b6880389320581be2e77aba6b718c6bcb9bdf7fc" translate="yes" xml:space="preserve">
          <source>is a wrapper class template which behaves exactly like &lt;code&gt;&lt;a href=&quot;../utility/optional&quot;&gt;std::optional&lt;/a&gt;&lt;/code&gt; except for some small differences. The name</source>
          <target state="translated">это шаблон класса-обертки, который ведет себя точно так же, как &lt;code&gt;&lt;a href=&quot;../utility/optional&quot;&gt;std::optional&lt;/a&gt;&lt;/code&gt; за исключением некоторых небольших различий. Имя</target>
        </trans-unit>
        <trans-unit id="8a12e53d29361ab4426676dd2bb0020fd6886a4f" translate="yes" xml:space="preserve">
          <source>is allowed to produce &lt;code&gt;r1 == 1 &amp;amp;&amp;amp; r2 == 3 &amp;amp;&amp;amp; r3 == 0&lt;/code&gt;, where A</source>
          <target state="translated">разрешено производить &lt;code&gt;r1 == 1 &amp;amp;&amp;amp; r2 == 3 &amp;amp;&amp;amp; r3 == 0&lt;/code&gt; , где A</target>
        </trans-unit>
        <trans-unit id="2795e5033f1f31fcb549dcbe0eb4c63afcbc7a7b" translate="yes" xml:space="preserve">
          <source>is allowed to produce &lt;code&gt;r1 == r2 == 42&lt;/code&gt; because, although A is</source>
          <target state="translated">разрешено производить &lt;code&gt;r1 == r2 == 42&lt;/code&gt; потому что, хотя A является</target>
        </trans-unit>
        <trans-unit id="1a5a90aeb590ab4ee57091235496477d8b8b361f" translate="yes" xml:space="preserve">
          <source>is an &lt;a href=&quot;../language/aggregate_initialization&quot;&gt;aggregate type&lt;/a&gt;;</source>
          <target state="translated">является &lt;a href=&quot;../language/aggregate_initialization&quot;&gt;агрегатным типом&lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="45dbc8caaed2b525ace4cbd8a6d2f19dfb48534e" translate="yes" xml:space="preserve">
          <source>is an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, and most Unicode characters (see below for details). A valid identifier must begin with a non-digit character (Latin letter, underscore, or Unicode non-digit character). Identifiers are case-sensitive (lowercase and uppercase letters are distinct), and every character is significant.</source>
          <target state="translated">это произвольно длинная последовательность цифр,символов подчеркивания,строчных и прописных латинских букв и большинства символов Юникода (подробнее см.ниже).Действительный идентификатор должен начинаться с нецифрового символа (латинской буквы,символа подчеркивания или нецифрового символа в стандарте Юникод).Идентификаторы чувствительны к регистру (различаются строчные и прописные буквы),и каждый символ является значимым.</target>
        </trans-unit>
        <trans-unit id="0be80f7fe5770f53bdcdb2c496242bc7e749af53" translate="yes" xml:space="preserve">
          <source>is an expression of integral or unscoped enumeration type implicitly converted to a prvalue, where the converted expression is a</source>
          <target state="translated">является выражением интегрального или некопируемого типа перечисления,неявно преобразованного в prvalue,где преобразованное выражение представляет собой</target>
        </trans-unit>
        <trans-unit id="02eec2e9fbdeef5fcafa046b0dfb9dffc8b977c0" translate="yes" xml:space="preserve">
          <source>is an expression that is used for its side-effects only. The value calculated from such expression is discarded. Such expressions include the full expression of any &lt;a href=&quot;statements#Expression_statements&quot;&gt;expression statement&lt;/a&gt;, the left-hand argument of the built-in comma operator, or the argument of a cast-expression that casts to the type &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">это выражение, которое используется только для его побочных эффектов. Значение, рассчитанное по такому выражению, отбрасывается. Такие выражения включают полное выражение любого &lt;a href=&quot;statements#Expression_statements&quot;&gt;выражения выражения&lt;/a&gt; , левый аргумент встроенного оператора запятой или аргумент выражения приведения, который приводит к типу &lt;code&gt;void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1501c819c9aa4183cec2f819be505367fe4d4a1" translate="yes" xml:space="preserve">
          <source>is an expression, &lt;a href=&quot;implicit_cast#Contextual_conversions&quot;&gt;contextually converted to &lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;, where the converted expression is a constant expression and the conversion sequence contains only the conversions above.</source>
          <target state="translated">является выражением, &lt;a href=&quot;implicit_cast#Contextual_conversions&quot;&gt;контекстно преобразованным в &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt; , где преобразованное выражение является константным выражением, а последовательность преобразования содержит только приведенные выше преобразования.</target>
        </trans-unit>
        <trans-unit id="5a27571ee6ac399afa8d9d78d3f63499c7d57e2e" translate="yes" xml:space="preserve">
          <source>is an lvalue core constant expression that designates an object with static storage duration or a function.</source>
          <target state="translated">является константным выражением ядра значений,которое обозначает объект со статической длительностью хранения или функцию.</target>
        </trans-unit>
        <trans-unit id="f8df68296c6495fc7a531e981216ac99eaee309f" translate="yes" xml:space="preserve">
          <source>is an object or a reference that is not a non-static data member, that is introduced by a &lt;a href=&quot;declarations&quot;&gt;declaration&lt;/a&gt;.</source>
          <target state="translated">является объектом или ссылкой, которая не является нестатическим элементом данных, который вводится &lt;a href=&quot;declarations&quot;&gt;объявлением&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2bac3cbe2a9f92adeaa506d50170562ddcd0c9e" translate="yes" xml:space="preserve">
          <source>is an ordered sequence of characters composed into lines (zero or more characters plus a terminating &lt;code&gt;'\n'&lt;/code&gt;). Whether the last line requires a terminating &lt;code&gt;'\n'&lt;/code&gt; is implementation-defined. Characters may have to be added, altered, or deleted on input and output to conform to the conventions for representing text in the OS (in particular, C streams on Windows OS convert &lt;code&gt;\n&lt;/code&gt; to &lt;code&gt;\r\n&lt;/code&gt; on output, and convert &lt;code&gt;\r\n&lt;/code&gt; to &lt;code&gt;\n&lt;/code&gt; on input).</source>
          <target state="translated">упорядоченная последовательность символов, состоящая из строк (ноль или более символов плюс завершающий символ &lt;code&gt;'\n'&lt;/code&gt; ). Требует ли последняя строка завершающего &lt;code&gt;'\n'&lt;/code&gt; определяется реализацией. Символы могут быть добавлены, изменены или удалены при вводе и выводе, чтобы соответствовать соглашениям для представления текста в ОС (в частности, потоки C в ОС Windows преобразуют &lt;code&gt;\n&lt;/code&gt; в &lt;code&gt;\r\n&lt;/code&gt; при выводе и преобразуют &lt;code&gt;\r\n&lt;/code&gt; to &lt;code&gt;\n&lt;/code&gt; на входе).</target>
        </trans-unit>
        <trans-unit id="18011902ecb8e7c0e07be455a6dac9c03ac55c3c" translate="yes" xml:space="preserve">
          <source>is an ordered sequence of characters that can transparently record internal data. Data read in from a binary stream always equals to the data that were earlier written out to that stream. Implementations are only allowed to append a number of null characters to the end of the stream. A wide binary stream doesn't need to end in the initial shift state.</source>
          <target state="translated">это упорядоченная последовательность символов,которая может прозрачно записывать внутренние данные.Данные,считанные из бинарного потока,всегда равны данным,которые были ранее записаны в этот поток.Допускается только добавление в конец потока нескольких нулевых символов.Широкий бинарный поток не должен заканчиваться в начальном состоянии сдвига.</target>
        </trans-unit>
        <trans-unit id="4ede5d0a1c7c24d09be03d82362f5cc314b9d318" translate="yes" xml:space="preserve">
          <source>is an unnamed union definition that does not simultaneously define any variables (including objects of the union type, references, or pointers to the union).</source>
          <target state="translated">это неназванное определение союза,которое не определяет одновременно никаких переменных (включая объекты типа союза,ссылки или указатели на союз).</target>
        </trans-unit>
        <trans-unit id="4601703bc0ef108af41f22c09d6f842127aff4dc" translate="yes" xml:space="preserve">
          <source>is an unqualified id-expression prepended by a scope resolution operator &lt;code&gt;::&lt;/code&gt;, and optionally, a sequence of enumeration, (since C++11)class or namespace names or &lt;code&gt;decltype&lt;/code&gt; expressions(since C++11) separated by scope resolution operators. For example, the expression &lt;code&gt;&lt;a href=&quot;../string/basic_string/npos&quot;&gt;std::string::npos&lt;/a&gt;&lt;/code&gt; is an expression that names the static member &lt;code&gt;npos&lt;/code&gt; in the class &lt;code&gt;string&lt;/code&gt; in namespace &lt;code&gt;std&lt;/code&gt;. The expression &lt;code&gt;::tolower&lt;/code&gt; names the function &lt;code&gt;tolower&lt;/code&gt; in the global namespace. The expression &lt;code&gt;::&lt;a href=&quot;../io/cout&quot;&gt;std::cout&lt;/a&gt;&lt;/code&gt; names the global variable &lt;code&gt;cout&lt;/code&gt; in namespace &lt;code&gt;std&lt;/code&gt;, which is a top-level namespace. The expression &lt;code&gt;boost::signals2::connection&lt;/code&gt; names the type &lt;code&gt;connection&lt;/code&gt; declared in namespace &lt;code&gt;signals2&lt;/code&gt;, which is declared in namespace &lt;code&gt;boost&lt;/code&gt;.</source>
          <target state="translated">является неквалифицированным id-выражением, которому предшествует оператор разрешения области действия &lt;code&gt;::&lt;/code&gt; и, необязательно, последовательность перечисления (с C ++ 11) имен классов или пространств имен или выражений типа &lt;code&gt;decltype&lt;/code&gt; (с C ++ 11), разделенных операторами разрешения области. Например, выражение &lt;code&gt;&lt;a href=&quot;../string/basic_string/npos&quot;&gt;std::string::npos&lt;/a&gt;&lt;/code&gt; является выражением, которое называет статический член &lt;code&gt;npos&lt;/code&gt; в &lt;code&gt;string&lt;/code&gt; класса в пространстве имен &lt;code&gt;std&lt;/code&gt; . Выражение &lt;code&gt;::tolower&lt;/code&gt; называет функцию &lt;code&gt;tolower&lt;/code&gt; в глобальном пространстве имен. Выражение &lt;code&gt;::&lt;a href=&quot;../io/cout&quot;&gt;std::cout&lt;/a&gt;&lt;/code&gt; называет глобальную переменную &lt;code&gt;cout&lt;/code&gt; в пространстве имен &lt;code&gt;std&lt;/code&gt; , которое является пространством имен верхнего уровня. Выражение &lt;code&gt;boost::signals2::connection&lt;/code&gt; именует тип &lt;code&gt;connection&lt;/code&gt; объявлен в пространстве имен &lt;code&gt;signals2&lt;/code&gt; , который объявлен в пространстве имен &lt;code&gt;boost&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ff05099872fbcb5f4980c65b57b922e3b4becb7" translate="yes" xml:space="preserve">
          <source>is any expression whose evaluation</source>
          <target state="translated">является любым выражением,оценка которого</target>
        </trans-unit>
        <trans-unit id="506f48c036cb081b3cbbdc69d7e52252d55ca885" translate="yes" xml:space="preserve">
          <source>is any object for which the function call operator is defined. C++ provides many built-in function objects as well as support for creation and manipulation of new function objects.</source>
          <target state="translated">это любой объект,для которого определен оператор вызова функции.C++предоставляет множество встроенных объектов функций,а также поддержку создания новых объектов функций и манипуляций с ними.</target>
        </trans-unit>
        <trans-unit id="eb7a632b3b8577656403bc766b9082c30c1d0f3c" translate="yes" xml:space="preserve">
          <source>is any situation when the type or expression above would be ill-formed (with a required diagnostic), if written using the substituted arguments.</source>
          <target state="translated">это любая ситуация,когда тип или выражение,приведенное выше,будет плохо оформлено (с требуемой диагностикой),если написано с использованием подстановочных аргументов.</target>
        </trans-unit>
        <trans-unit id="d7ef8d66897a179d0d3572a2354fc77a1fcb6d7c" translate="yes" xml:space="preserve">
          <source>is as follows:</source>
          <target state="translated">это следующее:</target>
        </trans-unit>
        <trans-unit id="14f8c23d990bbccbba3890be52c5a9ca59ab597e" translate="yes" xml:space="preserve">
          <source>is available, and the next pointer may be decremented, dereferenced, and assigned to, in order to put a character back into the get area.</source>
          <target state="translated">доступен,а следующий указатель может быть декрементирован,разыменован и назначен,чтобы поместить символ обратно в область get.</target>
        </trans-unit>
        <trans-unit id="9a51dfdc17a89d05fb4b4a02ba9691c9384a6f6d" translate="yes" xml:space="preserve">
          <source>is available. The next pointer can be dereferenced and assigned to.</source>
          <target state="translated">доступен.Следующий указатель может быть разыменован и назначен.</target>
        </trans-unit>
        <trans-unit id="76c0af20c025d5fb1d84ff07a4ae9e365687255e" translate="yes" xml:space="preserve">
          <source>is available. The next pointer can be dereferenced and read from.</source>
          <target state="translated">доступен.Следующий указатель может быть разыменован и прочитан.</target>
        </trans-unit>
        <trans-unit id="2faae13c90e87c83d430cb9ef1a28d1f2a2b8bdc" translate="yes" xml:space="preserve">
          <source>is bound to &lt;a href=&quot;../language/auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt;, including in a &lt;a href=&quot;../language/range-for&quot;&gt; ranged for loop&lt;/a&gt;</source>
          <target state="translated">связан с &lt;a href=&quot;../language/auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt; , в том числе в &lt;a href=&quot;../language/range-for&quot;&gt;дальнем цикле&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42d3304a37e3d3ffde033dcc4fbd62d3fb078a5d" translate="yes" xml:space="preserve">
          <source>is bound to &lt;code&gt;auto&lt;/code&gt;, including in a &lt;a href=&quot;../../language/range-for&quot;&gt; ranged for loop&lt;/a&gt;</source>
          <target state="translated">связан с &lt;code&gt;auto&lt;/code&gt; , в том числе в &lt;a href=&quot;../../language/range-for&quot;&gt;дальнем цикле&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4171e571605ed98ac42b6c2b2679170d7aaee8e" translate="yes" xml:space="preserve">
          <source>is composed of  a) All non-template constructors of the base class (after omitting ellipsis parameters, if any)(since C++14)b) For each constructor with default arguments or the ellipsis parameter, all constructor signatures that are formed by dropping the ellipsis and omitting default arguments from the ends of argument lists one by one c) All constructor templates of the base class (after omitting ellipsis parameters, if any)(since C++14)d) For each constructor template with default arguments or the ellipsis, all constructor signatures that are formed by dropping the ellipsis and omitting default arguments from the ends of argument lists one by one 2) All candidate inherited constructors that aren't the default constructor or the copy/move constructor and whose signatures do not match user-defined constructors in the derived class, are implicitly declared in the derived class. The default parameters are not inherited:</source>
          <target state="translated">состоит из a)всех нешаблонных конструкторов базового класса (после опускания параметров эллипсиса,если таковые имеются)(начиная с C++14)b)Для каждого конструктора с аргументами по умолчанию или параметром эллипсиса,все подписи конструктора,которые формируются при опускании эллипсиса и опускании аргументов по умолчанию из концов списков аргументов по одному c)всех шаблонов конструкторов базового класса (после опускания параметров эллипсиса),если таковые имеются)(начиная с C++14)d)Для каждого шаблона конструктора с аргументами по умолчанию или эллипсиса,все подписи конструктора,которые образуются при отбрасывании эллипсиса и опускании аргументов по умолчанию из концов списков аргументов по одному за одним 2)Все унаследованные конструкторы-кандидаты,которые не являются конструкторами по умолчанию или конструкторами копирования/перемещения и подписи которых не совпадают с определяемыми пользователем конструкторами в производном классе,неявно объявляются в производном классе.Параметры по умолчанию не наследуются:</target>
        </trans-unit>
        <trans-unit id="b710c2537fc7c2982991d831f0d24917a894fd04" translate="yes" xml:space="preserve">
          <source>is considered to match any object: its type is not examined and no conversion sequence is attempted for it.</source>
          <target state="translated">считается подходящим для любого объекта:его тип не проверяется и для него не предпринимается попытка последовательного преобразования.</target>
        </trans-unit>
        <trans-unit id="bf89c1cbff1a21e80e3095caada626864ec8dc44" translate="yes" xml:space="preserve">
          <source>is constructed, which consists of the declarations and the subobjects in which these declarations were found. Using-declarations are replaced by the members they represent and type declarations, including injected-class-names are replaced by the types they represent. If &lt;code&gt;C&lt;/code&gt; is the class in whose scope the name was used, &lt;code&gt;C&lt;/code&gt; is examined first. If the list of declarations in &lt;code&gt;C&lt;/code&gt; is empty, lookup set is built for each of its direct bases &lt;code&gt;Bi&lt;/code&gt; (recursively applying these rules if &lt;code&gt;Bi&lt;/code&gt; has its own bases). Once built, the lookup sets for the direct bases are merged into the lookup set in &lt;code&gt;C&lt;/code&gt; as follows</source>
          <target state="translated">построен, который состоит из объявлений и подобъектов, в которых эти объявления были найдены. Объявления использования заменяются членами, которые они представляют, и объявлениями типов, в том числе имена введенных классов заменяются типами, которые они представляют. Если &lt;code&gt;C&lt;/code&gt; - это класс, в области которого использовалось имя, сначала проверяется &lt;code&gt;C&lt;/code&gt; . Если список объявлений в &lt;code&gt;C&lt;/code&gt; пуст, набор поиска создается для каждого из его прямых баз &lt;code&gt;Bi&lt;/code&gt; (рекурсивно применяя эти правила, если &lt;code&gt;Bi&lt;/code&gt; имеет свои собственные базы). После создания наборы поиска для прямых баз объединяются в набор поиска в &lt;code&gt;C&lt;/code&gt; следующим образом</target>
        </trans-unit>
        <trans-unit id="d29c4dd34a26ee38037069b88daded7e8c77a5ba" translate="yes" xml:space="preserve">
          <source>is converted to the operand with the greater integer conversion rank</source>
          <target state="translated">преобразуется в операнд с большим целочисленным рангом преобразования</target>
        </trans-unit>
        <trans-unit id="9401ee35776c4c6ca97230cbc61f4862b24e83dd" translate="yes" xml:space="preserve">
          <source>is deduced as if for variable</source>
          <target state="translated">вычисляется как для переменной</target>
        </trans-unit>
        <trans-unit id="c56aa121993c15ff401e131119df310477ef36f2" translate="yes" xml:space="preserve">
          <source>is defined as &lt;code&gt;static_cast&amp;lt;void&amp;gt;(INVOKE(f, t1, t2, ..., tN))&lt;/code&gt; if &lt;code&gt;R&lt;/code&gt; is possibly cv-qualified &lt;code&gt;void&lt;/code&gt;, otherwise</source>
          <target state="translated">определяется как &lt;code&gt;static_cast&amp;lt;void&amp;gt;(INVOKE(f, t1, t2, ..., tN))&lt;/code&gt; если &lt;code&gt;R&lt;/code&gt; возможно cv-квалифицированный &lt;code&gt;void&lt;/code&gt; , в противном случае</target>
        </trans-unit>
        <trans-unit id="bdf7608477b66b0605337f1ec42de729339fb022" translate="yes" xml:space="preserve">
          <source>is defined as follows:</source>
          <target state="translated">определяется следующим образом:</target>
        </trans-unit>
        <trans-unit id="77b4545eea8c115ebb0a2da74f43a3433107a722" translate="yes" xml:space="preserve">
          <source>is defined as the set of enclosing scopes up to and including the innermost enclosing function (and its parameters). This includes nested block scopes and the scopes of enclosing lambdas if this lambda is nested.</source>
          <target state="translated">определяется как набор ограждающих диапазонов вплоть до самой внутренней ограждающей функции (и ее параметров).Сюда входят вложенные блочные оптические прицелы и оптические прицелы ограждающих лямбда,если эта лямбда вложена.</target>
        </trans-unit>
        <trans-unit id="86115209ce5e26f88ad4f58f6fa590801db65ea9" translate="yes" xml:space="preserve">
          <source>is destroyed also.</source>
          <target state="translated">тоже уничтожен.</target>
        </trans-unit>
        <trans-unit id="d3461ae064cdace83ef28657427affb3087c9eeb" translate="yes" xml:space="preserve">
          <source>is divisible by 4 and not divisible by 100; or</source>
          <target state="translated">делится на 4 и не делится на 100;или</target>
        </trans-unit>
        <trans-unit id="54aabeac59d40c106be9bcbe832a1f3819763ba8" translate="yes" xml:space="preserve">
          <source>is divisible by 400.</source>
          <target state="translated">делится на 400.</target>
        </trans-unit>
        <trans-unit id="147acd6d2359801a24371a0d557227d6d5dd7fe7" translate="yes" xml:space="preserve">
          <source>is either</source>
          <target state="translated">также</target>
        </trans-unit>
        <trans-unit id="afc4ef66c7a21c53345904094d1e8daecf23e3ba" translate="yes" xml:space="preserve">
          <source>is either a (non-union) class that has at least one anonymous union as a member or a union. A union-like class has a set of</source>
          <target state="translated">является либо классом (не состоящим в профсоюзе),который имеет,по крайней мере,один анонимный профсоюз в качестве члена,либо профсоюз.Профсоюзный класс имеет набор</target>
        </trans-unit>
        <trans-unit id="baa097b3288968fe878b06574b02213cf0dd0e51" translate="yes" xml:space="preserve">
          <source>is either a parenthesized initializer or a brace-enclosed initializer list), the type of</source>
          <target state="translated">это либо инициализатор в скобках,либо список инициализаторов,заключенный в скобки),тип</target>
        </trans-unit>
        <trans-unit id="4950660dd3032e9591f79ec4f2e393522639d825" translate="yes" xml:space="preserve">
          <source>is either lvalue or xvalue.</source>
          <target state="translated">это либо стоимость,либо х стоимость.</target>
        </trans-unit>
        <trans-unit id="9a5a0762214db206a3a8403ca1aca5b09339a6f8" translate="yes" xml:space="preserve">
          <source>is either prvalue or xvalue.</source>
          <target state="translated">это либо цена,либо стоимость.</target>
        </trans-unit>
        <trans-unit id="f6bcf017c7cb643f6066ec4aa0be49f28633bfd8" translate="yes" xml:space="preserve">
          <source>is either.</source>
          <target state="translated">это тоже.</target>
        </trans-unit>
        <trans-unit id="93a2bcf88046659ff80ddc0182532baf8067ca4d" translate="yes" xml:space="preserve">
          <source>is encountered, the compiler attempts to interpret it as the following cast expressions, in this order:</source>
          <target state="translated">встречается,компилятор пытается интерпретировать его как следующие выражения каста,в таком порядке:</target>
        </trans-unit>
        <trans-unit id="3d80dd3417979d87b3a28f8d65767b640ac97a1c" translate="yes" xml:space="preserve">
          <source>is for exposition purposes only and not normative.</source>
          <target state="translated">носит исключительно экспозиционный,а не нормативный характер.</target>
        </trans-unit>
        <trans-unit id="c72d2f760866b01ac8a4aae09160fa47c5e94a47" translate="yes" xml:space="preserve">
          <source>is included in this definition because it is omitted from the definition of Pm</source>
          <target state="translated">включено в это определение,потому что оно опущено из определения Pm</target>
        </trans-unit>
        <trans-unit id="e70abb6133988c49f2b9097d3c828881c8b39bf0" translate="yes" xml:space="preserve">
          <source>is indistinguishable from other arguments, but the following special rules apply to the</source>
          <target state="translated">неотличимы от других аргументов,но следующие специальные правила применяются к</target>
        </trans-unit>
        <trans-unit id="60edcb90b2fc3eab35a4bcc92c06ea04fa5a48d9" translate="yes" xml:space="preserve">
          <source>is known as</source>
          <target state="translated">известный как</target>
        </trans-unit>
        <trans-unit id="e82fdbe87df063bbd6188f48b5ff47c8f53b5e5b" translate="yes" xml:space="preserve">
          <source>is not</source>
          <target state="translated">не</target>
        </trans-unit>
        <trans-unit id="082f9b0b627c8a57057fb6496cfaa1088f3abfbf" translate="yes" xml:space="preserve">
          <source>is not a cross-thread relationship, unlike</source>
          <target state="translated">не является перекрёстным отношением,в отличие от</target>
        </trans-unit>
        <trans-unit id="e85dab425f3a53ea37923d1d7793a7adc61fa5f1" translate="yes" xml:space="preserve">
          <source>is not a pointer to member type;</source>
          <target state="translated">это не указатель на тип члена;</target>
        </trans-unit>
        <trans-unit id="ca036ae3bc68be760a219f1ce90d6fc5cb86e392" translate="yes" xml:space="preserve">
          <source>is not a pointer type;</source>
          <target state="translated">это не тип указателя;</target>
        </trans-unit>
        <trans-unit id="6d5dd8b1dd88e5b9e16dcb17a36bffde684eb0b4" translate="yes" xml:space="preserve">
          <source>is not a union type;</source>
          <target state="translated">это не профсоюзный тип;</target>
        </trans-unit>
        <trans-unit id="36aa33291343f09aa5f328632326d5001c6d3520" translate="yes" xml:space="preserve">
          <source>is not a volatile-qualified type; and</source>
          <target state="translated">не относится к классу волатильных;и</target>
        </trans-unit>
        <trans-unit id="fbf1666874a5b104ff22467ecb1bc28e5a62ba14" translate="yes" xml:space="preserve">
          <source>is not allowed to produce &lt;code&gt;r1 == r2 == 42&lt;/code&gt; since the store of 42 to y is only possible if the store to x stores 42, which circularly depends on the store to y storing 42. Note that until C++14, this was technically allowed by the specification, but not recommended for implementors.</source>
          <target state="translated">не разрешается производить &lt;code&gt;r1 == r2 == 42&lt;/code&gt; поскольку сохранение от 42 до y возможно только в том случае, если в хранилище до x хранится 42, что циклически зависит от хранилища до y, хранящего 42. Обратите внимание, что до C ++ 14 это технически разрешено спецификацией, но не рекомендуется для разработчиков.</target>
        </trans-unit>
        <trans-unit id="9b1e9aba2d1603ce460ccb83d71f23d582558a63" translate="yes" xml:space="preserve">
          <source>is not considered to be a template name unless the disambiguation keyword &lt;code&gt;template&lt;/code&gt; is used or unless it was already established as a template name:</source>
          <target state="translated">не считается именем шаблона, если не используется &lt;code&gt;template&lt;/code&gt; ключевого слова устранения неоднозначности или если он уже не был установлен в качестве имени шаблона:</target>
        </trans-unit>
        <trans-unit id="c5b49308fe795976367e0b1da6a5919d367d2de4" translate="yes" xml:space="preserve">
          <source>is not specified, writes every byte up to and not including the first null terminator. If the &lt;b&gt;l&lt;/b&gt; specifier is used, the argument must be a pointer to the initial element of an array of &lt;code&gt;wchar_t&lt;/code&gt;, which is converted to char array as if by a call to &lt;code&gt;wcrtomb&lt;/code&gt; with zero-initialized conversion state.</source>
          <target state="translated">не указывается, записывает каждый байт до и без первого нулевого терминатора. Если используется спецификатор &lt;b&gt;l&lt;/b&gt; , аргумент должен быть указателем на начальный элемент массива &lt;code&gt;wchar_t&lt;/code&gt; , который преобразуется в массив char, как если бы он вызывал &lt;code&gt;wcrtomb&lt;/code&gt; с нулевым инициализированным состоянием преобразования.</target>
        </trans-unit>
        <trans-unit id="540f17ba8d6fe7af3013ea37133b6da773e9a1d9" translate="yes" xml:space="preserve">
          <source>is not specified, writes every wide characters up to and not including the first null terminator. If the &lt;b&gt;l&lt;/b&gt; specifier is used, the argument must be a pointer to the initial element of an array of &lt;code&gt;wchar_t&lt;/code&gt;.</source>
          <target state="translated">не указывается, записывает все широкие символы до и без первого нулевого терминатора. Если используется спецификатор &lt;b&gt;l&lt;/b&gt; , аргумент должен быть указателем на начальный элемент массива &lt;code&gt;wchar_t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e369f1dfb768fc60f212e8e48821680b465735b1" translate="yes" xml:space="preserve">
          <source>is omitted from this definition.</source>
          <target state="translated">опущено из этого определения.</target>
        </trans-unit>
        <trans-unit id="adb49a452d5bfaaddb5d3cb26f08332f32766a15" translate="yes" xml:space="preserve">
          <source>is performed to select the best match.</source>
          <target state="translated">выполняется для выбора наилучшего варианта.</target>
        </trans-unit>
        <trans-unit id="8d92695df1c84576d02e73551d644b8657fae86e" translate="yes" xml:space="preserve">
          <source>is performed to select the function that will actually be called.</source>
          <target state="translated">выполняется для выбора функции,которая действительно будет вызвана.</target>
        </trans-unit>
        <trans-unit id="dd05416278064415e558dadbefa675b304bbe148" translate="yes" xml:space="preserve">
          <source>is performed: the first call to a non-timed wait function on the &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; that &lt;code&gt;async&lt;/code&gt; returned to the caller will cause the copy of &lt;code&gt;f&lt;/code&gt; to be invoked (as an rvalue) with the copies of &lt;code&gt;args...&lt;/code&gt; (also passed as rvalues) in the current thread (which does not have to be the thread that originally called &lt;code&gt;std::async&lt;/code&gt;). The result or exception is placed in the shared state associated with the future and only then it is made ready. All further accesses to the same &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; will return the result immediately.</source>
          <target state="translated">выполняется: первый вызов функции несвоевременного ожидания в &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; &lt;code&gt;async&lt;/code&gt; которую async вернул вызывающей программе, вызовет вызов копии &lt;code&gt;f&lt;/code&gt; (как значения) с копиями &lt;code&gt;args...&lt;/code&gt; (также передается как значения r) в текущем потоке (который не обязательно должен быть потоком, который изначально вызывал &lt;code&gt;std::async&lt;/code&gt; ). Результат или исключение помещается в общее состояние, связанное с будущим, и только после этого оно становится готовым. Все дальнейшие обращения к одному и тому же &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; немедленно вернут результат.</target>
        </trans-unit>
        <trans-unit id="bf6fd3497088ef6d6c84d7d4512ca4eebdbbf0aa" translate="yes" xml:space="preserve">
          <source>is postponed until lookup takes place.</source>
          <target state="translated">откладывается до начала поиска.</target>
        </trans-unit>
        <trans-unit id="a1d2a85fa47e0d97884cfa77243c2b849c1bc4f3" translate="yes" xml:space="preserve">
          <source>is representable in the unsigned version of the return type, then that value, &lt;a href=&quot;implicit_cast#Integral_conversions&quot;&gt;converted&lt;/a&gt; to signed, is the value of &lt;code&gt;a &amp;lt;&amp;lt; b&lt;/code&gt; (this makes it legal to create &lt;code&gt;&lt;a href=&quot;../types/climits&quot;&gt;INT_MIN&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;1&amp;lt;&amp;lt;31&lt;/code&gt;); otherwise the behavior is undefined.</source>
          <target state="translated">представимо в беззнаковой версии возвращаемого типа, тогда это значение, &lt;a href=&quot;implicit_cast#Integral_conversions&quot;&gt;преобразованное&lt;/a&gt; в знаковое, является значением &lt;code&gt;a &amp;lt;&amp;lt; b&lt;/code&gt; (это делает законным создание &lt;code&gt;&lt;a href=&quot;../types/climits&quot;&gt;INT_MIN&lt;/a&gt;&lt;/code&gt; как &lt;code&gt;1&amp;lt;&amp;lt;31&lt;/code&gt; ); в противном случае поведение не определено.</target>
        </trans-unit>
        <trans-unit id="be606ed006710cc3555e8998792c95ba1afe0b57" translate="yes" xml:space="preserve">
          <source>is requested the trailing zeros are removed, also the decimal point character is removed if no fractional part is left. For infinity and not-a-number conversion style see notes.</source>
          <target state="translated">запрашивается удаление трейлинговых нулей,а также удаление знака десятичной запятой,если не осталось дробной части.Стиль бесконечного и не числового преобразования см.в примечаниях.</target>
        </trans-unit>
        <trans-unit id="8ebc194a91003710ab47ad960a71914bf90860b7" translate="yes" xml:space="preserve">
          <source>is required to be equality preserving and stable, and the evaluation of the expression may only modify its non-constant operands. Operands that are constant must not be modified.</source>
          <target state="translated">требует сохранения равенства и стабильности,а оценка выражения может только изменять его не постоянные операнды.Нельзя изменять постоянные операнды.</target>
        </trans-unit>
        <trans-unit id="7ad4a3565785a534438b101cc5085800e5361016" translate="yes" xml:space="preserve">
          <source>is returned</source>
          <target state="translated">возвращённый</target>
        </trans-unit>
        <trans-unit id="dab1f8b59686974bbcd2707bc651d6707dac406f" translate="yes" xml:space="preserve">
          <source>is returned.</source>
          <target state="translated">возвращается.</target>
        </trans-unit>
        <trans-unit id="68043d2be8c9bd2958875396b3ed85683463516c" translate="yes" xml:space="preserve">
          <source>is rounded to nearest and is stored as 0x1.3333333333333*2-2</source>
          <target state="translated">округлено до ближайшего и хранится как 0x1.33333333333*2-2.</target>
        </trans-unit>
        <trans-unit id="a12e81ede9109246a418728fcfbce9817e3ecce1" translate="yes" xml:space="preserve">
          <source>is specified by an additional argument of type &lt;code&gt;int&lt;/code&gt;. If the value of this argument is negative, it is ignored. If neither a number nor &lt;code&gt;*&lt;/code&gt; is used, the precision is taken as zero. See the table below for exact effects of</source>
          <target state="translated">определяется дополнительным аргументом типа &lt;code&gt;int&lt;/code&gt; . Если значение этого аргумента отрицательно, оно игнорируется. Если ни число, ни &lt;code&gt;*&lt;/code&gt; не используются, точность принимается за ноль. Смотрите таблицу ниже для точных эффектов</target>
        </trans-unit>
        <trans-unit id="e44e8fb011fb09cfe11c2a0cabf779a344408c38" translate="yes" xml:space="preserve">
          <source>is the cv-qualifiers in the cv-auto sequence, and each element of &lt;code&gt;&lt;i&gt;e&lt;/i&gt;&lt;/code&gt; is copy- (for (1)) or direct- (for (2,3)) initialized from the corresponding element of expression.</source>
          <target state="translated">это cv-квалификаторы в последовательности cv-auto, и каждый элемент &lt;code&gt;&lt;i&gt;e&lt;/i&gt;&lt;/code&gt; инициализируется копией (для (1)) или прямым (для (2,3)) из соответствующего элемента выражения.</target>
        </trans-unit>
        <trans-unit id="419d22fe4a5e5d691470d4be56acf21c37e16bbd" translate="yes" xml:space="preserve">
          <source>is the operation defined in &lt;a href=&quot;../../named_req/callable&quot;&gt;Callable&lt;/a&gt;. (Thus, the return type of &lt;code&gt;operator()&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../types/result_of&quot;&gt;std::result_of&lt;/a&gt;&amp;lt;decltype(pm)(Args&amp;amp;&amp;amp;...)&amp;gt;::type&lt;/code&gt;.).</source>
          <target state="translated">это операция, определенная в &lt;a href=&quot;../../named_req/callable&quot;&gt;Callable&lt;/a&gt; . (Таким образом, возвращаемый тип &lt;code&gt;operator()&lt;/code&gt; : &lt;code&gt;&lt;a href=&quot;../../types/result_of&quot;&gt;std::result_of&lt;/a&gt;&amp;lt;decltype(pm)(Args&amp;amp;&amp;amp;...)&amp;gt;::type&lt;/code&gt; .).</target>
        </trans-unit>
        <trans-unit id="26f86d6f8a774126af46757bc1886abe6f4106f0" translate="yes" xml:space="preserve">
          <source>is the process that transforms a constraint expression into a sequence of conjunctions and disjunctions of atomic constraints. The</source>
          <target state="translated">это процесс,который превращает выражение ограничений в последовательность соединений и дизъюнкций атомных ограничений.</target>
        </trans-unit>
        <trans-unit id="2e59e28c4c03e479a518798a153fd5ea79ea2845" translate="yes" xml:space="preserve">
          <source>is the same as.</source>
          <target state="translated">это то же самое.</target>
        </trans-unit>
        <trans-unit id="13549c35320e062079415e62facca9bc4bb7e643" translate="yes" xml:space="preserve">
          <source>is the sequence of &lt;code&gt;sizeof(T)&lt;/code&gt; objects of type &lt;code&gt;unsigned char&lt;/code&gt; (or, equivalently, &lt;a href=&quot;../types/byte&quot;&gt;&lt;code&gt;std::byte&lt;/code&gt;&lt;/a&gt;) beginning at the same address as the &lt;code&gt;T&lt;/code&gt; object.</source>
          <target state="translated">является последовательностью объектов &lt;code&gt;sizeof(T)&lt;/code&gt; типа &lt;code&gt;unsigned char&lt;/code&gt; (или, что то же самое, &lt;a href=&quot;../types/byte&quot;&gt; &lt;code&gt;std::byte&lt;/code&gt; &lt;/a&gt; ), начинающихся с того же адреса, что и объект &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53f7853c7d4d3b9c9c45ee3d16be80e5e9bc074d" translate="yes" xml:space="preserve">
          <source>is the size of the</source>
          <target state="translated">размер</target>
        </trans-unit>
        <trans-unit id="568cb38d3e44486e22471a376b53e4b01eaa4458" translate="yes" xml:space="preserve">
          <source>is the size of the container.</source>
          <target state="translated">это размер контейнера.</target>
        </trans-unit>
        <trans-unit id="2db6f72f3bb78dd2f2a723ee975333ebd1043e3b" translate="yes" xml:space="preserve">
          <source>is the size of the container. Average case becomes proportional to</source>
          <target state="translated">это размер контейнера.Средний случай становится пропорциональным</target>
        </trans-unit>
        <trans-unit id="21f19cc99dd2c64309f0a19b5def527c30e04ed3" translate="yes" xml:space="preserve">
          <source>is the smallest addressable unit of memory. It is defined as a contiguous sequence of bits, large enough to hold the value of any &lt;code&gt;UTF-8&lt;/code&gt; code unit (256 distinct values) and of (since C++14)any member of the</source>
          <target state="translated">это наименьшая адресуемая единица памяти. Он определяется как непрерывная последовательность битов, достаточно большая, чтобы содержать значение любой кодовой единицы &lt;code&gt;UTF-8&lt;/code&gt; (256 различных значений) и любого (начиная с C ++ 14) любого члена</target>
        </trans-unit>
        <trans-unit id="1c48f27af3f18f46f75cffcbba4094113551ba7b" translate="yes" xml:space="preserve">
          <source>is the static type of expression with top-level &lt;a href=&quot;cv&quot;&gt;cv-qualifiers&lt;/a&gt; removed. Array and function types are adjusted to pointer and pointer to function types, respectively. If the type of the exception object would be an &lt;a href=&quot;incomplete_type&quot;&gt;incomplete type&lt;/a&gt;, an &lt;a href=&quot;abstract_class&quot;&gt;abstract class&lt;/a&gt; type, or pointer to incomplete type other than pointer to (cv-qualified) void, the throw-expression is a compile-time error. If the type of expression is a class type, its copy/move constructor and destructor must be accessible even if &lt;a href=&quot;copy_elision&quot;&gt;copy elision&lt;/a&gt; takes place.</source>
          <target state="translated">статический тип выражения с удаленными &lt;a href=&quot;cv&quot;&gt;cv-квалификаторами&lt;/a&gt; верхнего уровня . Массив и типы функций настраиваются на указатель и указатель на типы функций соответственно. Если тип объекта исключения будет &lt;a href=&quot;incomplete_type&quot;&gt;неполным типом&lt;/a&gt; , &lt;a href=&quot;abstract_class&quot;&gt;абстрактным&lt;/a&gt; типом класса или указателем на неполный тип, отличный от указателя на (cv-qualified) void, выражение throw является ошибкой времени компиляции. Если тип выражения является типом класса, его конструктор копирования / перемещения и деструктор должны быть доступны, даже если имеет место &lt;a href=&quot;copy_elision&quot;&gt;удаление копии&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81c5d1ff510c2736470bc4e48eb54b66f6fc40c3" translate="yes" xml:space="preserve">
          <source>is the substring beginning at the rightmost period (including the period) and until the end of the pathname.</source>
          <target state="translated">это подстрока,начинающаяся с самого правого периода (включая период)и до конца патнама.</target>
        </trans-unit>
        <trans-unit id="4e23d0d31481e46775c21e9e19df67ab73ea5c60" translate="yes" xml:space="preserve">
          <source>is the union of</source>
          <target state="translated">является союзом</target>
        </trans-unit>
        <trans-unit id="8472ac6d4b1e309191e5fead036d47b657157a1f" translate="yes" xml:space="preserve">
          <source>is the use of one of the following to refer to an entity or to a label:</source>
          <target state="translated">это использование одного из следующих способов обозначения сущности или этикетки:</target>
        </trans-unit>
        <trans-unit id="8ed5fe59a795c162b72ea533a213e82d875a7ca8" translate="yes" xml:space="preserve">
          <source>is type-dependent</source>
          <target state="translated">зависящий от типа</target>
        </trans-unit>
        <trans-unit id="f6b8cd57d6f50c4be595a5aa118afeedac38b816" translate="yes" xml:space="preserve">
          <source>is undefined.</source>
          <target state="translated">не определено.</target>
        </trans-unit>
        <trans-unit id="c84b8d36709fce0fca86a91da227bc754c915a87" translate="yes" xml:space="preserve">
          <source>is used</source>
          <target state="translated">использованный</target>
        </trans-unit>
        <trans-unit id="5c99c0fd029a3d065dbd613d5bc75a3571579acc" translate="yes" xml:space="preserve">
          <source>is used as the right operand of &lt;a href=&quot;../language/operator_assignment#Builtin_direct_assignment&quot;&gt;assignment&lt;/a&gt; or as a &lt;a href=&quot;../language/overload_resolution#Implicit_conversion_sequence_in_list-initialization&quot;&gt;function call argument&lt;/a&gt;, and the corresponding assignment operator/function accepts an &lt;code&gt;std::initializer_list&lt;/code&gt; parameter</source>
          <target state="translated">используется в качестве правого операнда &lt;a href=&quot;../language/operator_assignment#Builtin_direct_assignment&quot;&gt;присваивания&lt;/a&gt; или &lt;a href=&quot;../language/overload_resolution#Implicit_conversion_sequence_in_list-initialization&quot;&gt;аргумента вызова функции&lt;/a&gt; , а соответствующий оператор / функция присваивания принимает параметр &lt;code&gt;std::initializer_list&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9d56c04fdd7e2884407b7b4e26a7e9aca304ad8" translate="yes" xml:space="preserve">
          <source>is used by certain facilities when an explicit memory resource is not supplied. The initial default memory resource pointer is the return value of &lt;code&gt;&lt;a href=&quot;new_delete_resource&quot;&gt;std::pmr::new_delete_resource&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">используется определенными средствами, когда явный ресурс памяти не предоставлен. Исходный указатель ресурса памяти по умолчанию является возвращаемым значением &lt;code&gt;&lt;a href=&quot;new_delete_resource&quot;&gt;std::pmr::new_delete_resource&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a556d39a6d6d0b80baa29f6a81f79ce868019682" translate="yes" xml:space="preserve">
          <source>is used in &lt;a href=&quot;../../language/list_initialization&quot;&gt;list-initialization&lt;/a&gt;, including function-call list initialization and assignment expressions (not to be confused with &lt;a href=&quot;../../language/constructor&quot;&gt; constructor initializer lists&lt;/a&gt;)</source>
          <target state="translated">используется при &lt;a href=&quot;../../language/list_initialization&quot;&gt;инициализации списка&lt;/a&gt; , включая инициализацию списка вызовов функций и выражения присваивания (не путать со &lt;a href=&quot;../../language/constructor&quot;&gt;списками инициализатора конструктора&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="0cd2b56421550eb09bb8559be354b8e06af8a924" translate="yes" xml:space="preserve">
          <source>is used in place of a constructor argument. Copy-list-initialization initializes the constructor's parameter (note; the type U in this example is not the type that's being list-initialized; U's constructor's parameter is)</source>
          <target state="translated">используется вместо аргумента конструктора.Copy-list-initialization инициализирует параметр конструктора (обратите внимание;тип U в данном примере не является типом,который инициализируется;параметр конструктора U является параметром).</target>
        </trans-unit>
        <trans-unit id="650ce7285b080bf5e9d507f9ea4352bf63a20b07" translate="yes" xml:space="preserve">
          <source>is used to &lt;a href=&quot;../language/list_initialization&quot;&gt;list-initialize&lt;/a&gt; an object, where the corresponding constructor accepts an &lt;code&gt;std::initializer_list&lt;/code&gt; parameter</source>
          <target state="translated">используется для &lt;a href=&quot;../language/list_initialization&quot;&gt;инициализации списка&lt;/a&gt; объекта, где соответствующий конструктор принимает параметр &lt;code&gt;std::initializer_list&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67e4b3aef25cba134b9ddafeb76a957d03fb301a" translate="yes" xml:space="preserve">
          <source>is used to initialize X</source>
          <target state="translated">используется для инициализации X</target>
        </trans-unit>
        <trans-unit id="a6839d76bbb7783af5dc7927fd3ea8c02821e91c" translate="yes" xml:space="preserve">
          <source>is used.</source>
          <target state="translated">используется.</target>
        </trans-unit>
        <trans-unit id="8341ed3eb188b28a7521f956dad478d599e47a0d" translate="yes" xml:space="preserve">
          <source>is.</source>
          <target state="translated">is.</target>
        </trans-unit>
        <trans-unit id="392140062909b5bb864c995eab01cae4c3b8e31f" translate="yes" xml:space="preserve">
          <source>is:</source>
          <target state="translated">is:</target>
        </trans-unit>
        <trans-unit id="66dee6498564838828e6e74d8752cf1be551496a" translate="yes" xml:space="preserve">
          <source>is_absoluteis_relative</source>
          <target state="translated">is_absoluteis_relative</target>
        </trans-unit>
        <trans-unit id="17e5362e94e378d85569605d6225515a4d4f22e5" translate="yes" xml:space="preserve">
          <source>is_abstract</source>
          <target state="translated">is_abstract</target>
        </trans-unit>
        <trans-unit id="605eea2ebf64b26bc7010874fea20ac9f10e0b7f" translate="yes" xml:space="preserve">
          <source>is_aggregate</source>
          <target state="translated">is_aggregate</target>
        </trans-unit>
        <trans-unit id="d15089c24eaf05a45b2fa977b3cdad27166d794d" translate="yes" xml:space="preserve">
          <source>is_always_lock_free</source>
          <target state="translated">is_always_lock_free</target>
        </trans-unit>
        <trans-unit id="7308377adbb9faaa08eb09f33fa79031b677bda8" translate="yes" xml:space="preserve">
          <source>is_arithmetic</source>
          <target state="translated">is_arithmetic</target>
        </trans-unit>
        <trans-unit id="08fbe7c8a693c654429a8dcbe88eee1185b17262" translate="yes" xml:space="preserve">
          <source>is_array</source>
          <target state="translated">is_array</target>
        </trans-unit>
        <trans-unit id="e60ff4db2e78e26161b3ad04e35be254d9a9ad81" translate="yes" xml:space="preserve">
          <source>is_assignableis_trivially_assignableis_nothrow_assignable</source>
          <target state="translated">is_assignableis_trivially_assignableis_nothrow_assignable</target>
        </trans-unit>
        <trans-unit id="46e9982e54e5fb6fd2ecb155123424ff7c65049a" translate="yes" xml:space="preserve">
          <source>is_base_of</source>
          <target state="translated">is_base_of</target>
        </trans-unit>
        <trans-unit id="a7ff0eb2ea72584fa6267fc2c0648981f1e84253" translate="yes" xml:space="preserve">
          <source>is_bind_expression</source>
          <target state="translated">is_bind_expression</target>
        </trans-unit>
        <trans-unit id="bf246da9e6672d5adb21df2ee11b5e84171887a9" translate="yes" xml:space="preserve">
          <source>is_block_file</source>
          <target state="translated">is_block_file</target>
        </trans-unit>
        <trans-unit id="7a1fc29825369abbc83afa26955067b569c04d2f" translate="yes" xml:space="preserve">
          <source>is_bounded</source>
          <target state="translated">is_bounded</target>
        </trans-unit>
        <trans-unit id="843f7ee44733526eef73429fd99bdc4926cbbcba" translate="yes" xml:space="preserve">
          <source>is_bounded_array</source>
          <target state="translated">is_bounded_array</target>
        </trans-unit>
        <trans-unit id="d6afbfd9da017fc95146534ba91b38052d6a78d9" translate="yes" xml:space="preserve">
          <source>is_character_file</source>
          <target state="translated">is_character_file</target>
        </trans-unit>
        <trans-unit id="ba985ec640dd4011d8d15284e7dfc44ff208ebb0" translate="yes" xml:space="preserve">
          <source>is_class</source>
          <target state="translated">is_class</target>
        </trans-unit>
        <trans-unit id="687500ec294b5feab155cc5f7216a4c9e88dc838" translate="yes" xml:space="preserve">
          <source>is_clockis_clock_v</source>
          <target state="translated">is_clockis_clock_v</target>
        </trans-unit>
        <trans-unit id="5626c49790087a934378fc65a10f6aa3c776cbf0" translate="yes" xml:space="preserve">
          <source>is_compound</source>
          <target state="translated">is_compound</target>
        </trans-unit>
        <trans-unit id="372ee9801426899cc6a416b71c4b75dd71724030" translate="yes" xml:space="preserve">
          <source>is_const</source>
          <target state="translated">is_const</target>
        </trans-unit>
        <trans-unit id="fb5beb1a8f4b831f8d7407b9ea07d9d4685c8841" translate="yes" xml:space="preserve">
          <source>is_constant_evaluated</source>
          <target state="translated">is_constant_evaluated</target>
        </trans-unit>
        <trans-unit id="a7e653c77e4b4b979386ae58f3590822d0c718b1" translate="yes" xml:space="preserve">
          <source>is_constructibleis_trivially_constructibleis_nothrow_constructible</source>
          <target state="translated">is_constructibleis_trivially_constructibleis_nothrow_constructible</target>
        </trans-unit>
        <trans-unit id="f8b51d0f367a8ce9a4c04b558af1054e555beb23" translate="yes" xml:space="preserve">
          <source>is_convertibleis_nothrow_convertible</source>
          <target state="translated">is_convertibleis_nothrow_convertible</target>
        </trans-unit>
        <trans-unit id="afc1099790703f800a7f99fbb2958c387a1d3406" translate="yes" xml:space="preserve">
          <source>is_copy_assignableis_trivially_copy_assignableis_nothrow_copy_assignable</source>
          <target state="translated">is_copy_assignableis_trivially_copy_assignableis_nothrow_copy_assignable</target>
        </trans-unit>
        <trans-unit id="f256694f8a823f86928f43aaa77e39f57d1985d0" translate="yes" xml:space="preserve">
          <source>is_copy_constructibleis_trivially_copy_constructibleis_nothrow_copy_constructible</source>
          <target state="translated">is_copy_constructibleis_trivially_copy_constructibleis_nothrow_copy_constructible</target>
        </trans-unit>
        <trans-unit id="0ffd1862d9b8f6433bbc50fbd23348ff2838557e" translate="yes" xml:space="preserve">
          <source>is_default_constructibleis_trivially_default_constructibleis_nothrow_default_constructible</source>
          <target state="translated">is_default_constructibleis_trivially_default_constructibleis_nothrow_default_constructible</target>
        </trans-unit>
        <trans-unit id="d3ab24724603d5bb656e31bd087180d6fab3c2d5" translate="yes" xml:space="preserve">
          <source>is_destructibleis_trivially_destructibleis_nothrow_destructible</source>
          <target state="translated">is_destructibleis_trivially_destructibleis_nothrow_destructible</target>
        </trans-unit>
        <trans-unit id="c6ba4c88c0a678012689a092e6b6ddd4e36098f6" translate="yes" xml:space="preserve">
          <source>is_directory</source>
          <target state="translated">is_directory</target>
        </trans-unit>
        <trans-unit id="fe5f07f24c1181069a77c62a492457f083db6d09" translate="yes" xml:space="preserve">
          <source>is_empty</source>
          <target state="translated">is_empty</target>
        </trans-unit>
        <trans-unit id="b3a973422c7bb92e58b9e4710647fa97959af963" translate="yes" xml:space="preserve">
          <source>is_enum</source>
          <target state="translated">is_enum</target>
        </trans-unit>
        <trans-unit id="1929d8c6b20e2754171cc29334980894d37523b4" translate="yes" xml:space="preserve">
          <source>is_eqis_neqis_ltis_lteqis_gtis_gteq</source>
          <target state="translated">is_eqis_neqis_ltis_lteqis_gtis_gteq</target>
        </trans-unit>
        <trans-unit id="db2d881e7ee0cb9efa41f3a5e258efee66051419" translate="yes" xml:space="preserve">
          <source>is_equal</source>
          <target state="translated">is_equal</target>
        </trans-unit>
        <trans-unit id="0d1498904f17aa8ddb01794e646199887822f546" translate="yes" xml:space="preserve">
          <source>is_error_code_enum</source>
          <target state="translated">is_error_code_enum</target>
        </trans-unit>
        <trans-unit id="13a56bf15e302eec9d90d1d15e796f5d03e47fd0" translate="yes" xml:space="preserve">
          <source>is_error_code_enum&amp;lt;std::future_errc&amp;gt;</source>
          <target state="translated">is_error_code_enum&amp;lt;std::future_errc&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0f9303d45d2972a08fff6af8d355434cba160395" translate="yes" xml:space="preserve">
          <source>is_error_code_enum&amp;lt;std::io_errc&amp;gt;</source>
          <target state="translated">is_error_code_enum&amp;lt;std::io_errc&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2bedc8e4c740f359228c8aaef4bdb412a81229ac" translate="yes" xml:space="preserve">
          <source>is_error_condition_enum</source>
          <target state="translated">is_error_condition_enum</target>
        </trans-unit>
        <trans-unit id="d43afecd3407dead64711ff50a5267917a7babe7" translate="yes" xml:space="preserve">
          <source>is_error_condition_enum&amp;lt;std::errc&amp;gt;</source>
          <target state="translated">is_error_condition_enum&amp;lt;std::errc&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5d28020d3a17e506937ac115f95fa1765a9192cc" translate="yes" xml:space="preserve">
          <source>is_exact</source>
          <target state="translated">is_exact</target>
        </trans-unit>
        <trans-unit id="bc7340f34d6ff1903d5b4902f48c4790bd79b750" translate="yes" xml:space="preserve">
          <source>is_execution_policy</source>
          <target state="translated">is_execution_policy</target>
        </trans-unit>
        <trans-unit id="3aa0bd003f4ee4228291b8b26dd2e9f3adab7ded" translate="yes" xml:space="preserve">
          <source>is_fifo</source>
          <target state="translated">is_fifo</target>
        </trans-unit>
        <trans-unit id="52527841ad0d602e316cb9fc306448017f6f9775" translate="yes" xml:space="preserve">
          <source>is_final</source>
          <target state="translated">is_final</target>
        </trans-unit>
        <trans-unit id="5d991a0b8919ad9e95ddcffd5f63051c91079dfc" translate="yes" xml:space="preserve">
          <source>is_floating_point</source>
          <target state="translated">is_floating_point</target>
        </trans-unit>
        <trans-unit id="fa503a3e92e7dce0d98221decded40592e12e882" translate="yes" xml:space="preserve">
          <source>is_function</source>
          <target state="translated">is_function</target>
        </trans-unit>
        <trans-unit id="470a4684bf17eb71f377a32d9d09efddd7274582" translate="yes" xml:space="preserve">
          <source>is_fundamental</source>
          <target state="translated">is_fundamental</target>
        </trans-unit>
        <trans-unit id="5938d7b51ce189f09407340d8bb71ee092be56f0" translate="yes" xml:space="preserve">
          <source>is_heap</source>
          <target state="translated">is_heap</target>
        </trans-unit>
        <trans-unit id="98dbd5363f158bc72ba53d9c0707fe56c076969a" translate="yes" xml:space="preserve">
          <source>is_heap_until</source>
          <target state="translated">is_heap_until</target>
        </trans-unit>
        <trans-unit id="410cabe42edadac18b2a8dc51bcb29cbd87952b2" translate="yes" xml:space="preserve">
          <source>is_iec559</source>
          <target state="translated">is_iec559</target>
        </trans-unit>
        <trans-unit id="4fb31589196b2b752e544a12d9d39499ccc190ec" translate="yes" xml:space="preserve">
          <source>is_integer</source>
          <target state="translated">is_integer</target>
        </trans-unit>
        <trans-unit id="ec97d583078a2f395d1b7b84f262504f993c5019" translate="yes" xml:space="preserve">
          <source>is_integral</source>
          <target state="translated">is_integral</target>
        </trans-unit>
        <trans-unit id="665403a8c47466dacf98a296303a3afd36500d83" translate="yes" xml:space="preserve">
          <source>is_invocableis_invocable_ris_nothrow_invocableis_nothrow_invocable_r</source>
          <target state="translated">is_invocableis_invocable_ris_nothrow_invocableis_nothrow_invocable_r</target>
        </trans-unit>
        <trans-unit id="0453c1fad53392e81faa6b8948336f586318cff4" translate="yes" xml:space="preserve">
          <source>is_leap</source>
          <target state="translated">is_leap</target>
        </trans-unit>
        <trans-unit id="80ef41b8cbc0320df2a72c06eaa9f1ba26980e9a" translate="yes" xml:space="preserve">
          <source>is_literal_type</source>
          <target state="translated">is_literal_type</target>
        </trans-unit>
        <trans-unit id="0e487fadeab15fbf77ebbb1b725abb64503caab0" translate="yes" xml:space="preserve">
          <source>is_lock_free</source>
          <target state="translated">is_lock_free</target>
        </trans-unit>
        <trans-unit id="edd405f8bd87ad0dd707c15beba187dace28a687" translate="yes" xml:space="preserve">
          <source>is_lvalue_reference</source>
          <target state="translated">is_lvalue_reference</target>
        </trans-unit>
        <trans-unit id="ab5f76cb93cdf8c9baf3ca0f3e45be94e15a43b0" translate="yes" xml:space="preserve">
          <source>is_member_function_pointer</source>
          <target state="translated">is_member_function_pointer</target>
        </trans-unit>
        <trans-unit id="019ec0b0c120f09cda79c9ab929b162d224ebfa2" translate="yes" xml:space="preserve">
          <source>is_member_object_pointer</source>
          <target state="translated">is_member_object_pointer</target>
        </trans-unit>
        <trans-unit id="6fc6a5ad31556f23f23e9cff2e074752eeb8b40c" translate="yes" xml:space="preserve">
          <source>is_member_pointer</source>
          <target state="translated">is_member_pointer</target>
        </trans-unit>
        <trans-unit id="d54eaf4e67c60afa007ad21120976195841295ed" translate="yes" xml:space="preserve">
          <source>is_modulo</source>
          <target state="translated">is_modulo</target>
        </trans-unit>
        <trans-unit id="837ccc9ef63807842d2a2a195bae1fee8a0eeb29" translate="yes" xml:space="preserve">
          <source>is_move_assignableis_trivially_move_assignableis_nothrow_move_assignable</source>
          <target state="translated">is_move_assignableis_trivially_move_assignableis_nothrow_move_assignable</target>
        </trans-unit>
        <trans-unit id="c9c82b00280adeeb2054c6b0d27b3c73e919b688" translate="yes" xml:space="preserve">
          <source>is_move_constructibleis_trivially_move_constructibleis_nothrow_move_constructible</source>
          <target state="translated">is_move_constructibleis_trivially_move_constructibleis_nothrow_move_constructible</target>
        </trans-unit>
        <trans-unit id="e51f7d5237b89fa9b5b9f463992585cc113b1cca" translate="yes" xml:space="preserve">
          <source>is_null_pointer</source>
          <target state="translated">is_null_pointer</target>
        </trans-unit>
        <trans-unit id="bd7befe30dfd607ec9be8f44e80fead497c9d87d" translate="yes" xml:space="preserve">
          <source>is_object</source>
          <target state="translated">is_object</target>
        </trans-unit>
        <trans-unit id="0fd95d0c86c785e1b6af81440630b8c5db509b3f" translate="yes" xml:space="preserve">
          <source>is_open</source>
          <target state="translated">is_open</target>
        </trans-unit>
        <trans-unit id="a945e0950acc57a0815ddccc781dd7664c341317" translate="yes" xml:space="preserve">
          <source>is_other</source>
          <target state="translated">is_other</target>
        </trans-unit>
        <trans-unit id="b2da9d9fb58271f2f76bfca7412a5274970595f6" translate="yes" xml:space="preserve">
          <source>is_partitioned</source>
          <target state="translated">is_partitioned</target>
        </trans-unit>
        <trans-unit id="f24b70c02875960886f8d239c463ba480f62577e" translate="yes" xml:space="preserve">
          <source>is_permutation</source>
          <target state="translated">is_permutation</target>
        </trans-unit>
        <trans-unit id="6b8443f9201594a915e25e3593ec075cd7b6f1be" translate="yes" xml:space="preserve">
          <source>is_placeholder</source>
          <target state="translated">is_placeholder</target>
        </trans-unit>
        <trans-unit id="2e3ac8e99cfb4e604ea1773659cf473d37d86702" translate="yes" xml:space="preserve">
          <source>is_pod</source>
          <target state="translated">is_pod</target>
        </trans-unit>
        <trans-unit id="b346b72c8a1086889c8df6baf36c28d62a8c3cb1" translate="yes" xml:space="preserve">
          <source>is_pointer</source>
          <target state="translated">is_pointer</target>
        </trans-unit>
        <trans-unit id="0cd1c5e7d49dd9bc44bc4802b135c3a5987f29ca" translate="yes" xml:space="preserve">
          <source>is_polymorphic</source>
          <target state="translated">is_polymorphic</target>
        </trans-unit>
        <trans-unit id="104af419be7ce5324220420aa2243477bfacb420" translate="yes" xml:space="preserve">
          <source>is_reference</source>
          <target state="translated">is_reference</target>
        </trans-unit>
        <trans-unit id="c3798cd736801ad05edb9f41253266f0300ebff8" translate="yes" xml:space="preserve">
          <source>is_regular_file</source>
          <target state="translated">is_regular_file</target>
        </trans-unit>
        <trans-unit id="f112c53c6888eae206933c7c0ceb2ff7ab69e355" translate="yes" xml:space="preserve">
          <source>is_rvalue_reference</source>
          <target state="translated">is_rvalue_reference</target>
        </trans-unit>
        <trans-unit id="183cf9ff021f5574c579b41894eb9d8354d984fe" translate="yes" xml:space="preserve">
          <source>is_same</source>
          <target state="translated">is_same</target>
        </trans-unit>
        <trans-unit id="b610c06f1a6b36c6f2407ae8f675af6035104611" translate="yes" xml:space="preserve">
          <source>is_scalar</source>
          <target state="translated">is_scalar</target>
        </trans-unit>
        <trans-unit id="2a21ba8be8148d4255fc30ffd43ee2a453caa4af" translate="yes" xml:space="preserve">
          <source>is_signed</source>
          <target state="translated">is_signed</target>
        </trans-unit>
        <trans-unit id="5bd85167760b3d0b98fa6333e3102a28c5f77b67" translate="yes" xml:space="preserve">
          <source>is_socket</source>
          <target state="translated">is_socket</target>
        </trans-unit>
        <trans-unit id="4d46ca77f3c603d0f87dc91854b89c0ded720753" translate="yes" xml:space="preserve">
          <source>is_sorted</source>
          <target state="translated">is_sorted</target>
        </trans-unit>
        <trans-unit id="c28fb6b7efad2018d830030c927be60a7a77f502" translate="yes" xml:space="preserve">
          <source>is_sorted_until</source>
          <target state="translated">is_sorted_until</target>
        </trans-unit>
        <trans-unit id="e5d081da029215e46202a5f753c4b50e74542673" translate="yes" xml:space="preserve">
          <source>is_specialized</source>
          <target state="translated">is_specialized</target>
        </trans-unit>
        <trans-unit id="d23809430b5de089a4d0a677b8b61b011c4cd7da" translate="yes" xml:space="preserve">
          <source>is_standard_layout</source>
          <target state="translated">is_standard_layout</target>
        </trans-unit>
        <trans-unit id="211eb01ff299da131ddf22890f6e2f5c5dcce3a7" translate="yes" xml:space="preserve">
          <source>is_swappable_withis_swappableis_nothrow_swappable_withis_nothrow_swappable</source>
          <target state="translated">is_swappable_withis_swappableis_nothrow_swappable_withis_nothrow_swappable</target>
        </trans-unit>
        <trans-unit id="59393a16f6578bd3c98c66d9a6e511469a5e7f8f" translate="yes" xml:space="preserve">
          <source>is_symlink</source>
          <target state="translated">is_symlink</target>
        </trans-unit>
        <trans-unit id="a2aa8f5dc7ed697c7c3fdcfb0a371415f89631ee" translate="yes" xml:space="preserve">
          <source>is_trivial</source>
          <target state="translated">is_trivial</target>
        </trans-unit>
        <trans-unit id="dc588b34c5f13ee148ab5597cf922af3ab1a4bd8" translate="yes" xml:space="preserve">
          <source>is_trivially_copyable</source>
          <target state="translated">is_trivially_copyable</target>
        </trans-unit>
        <trans-unit id="1ca5a0f4a02630d287f87a5e2a14503652078643" translate="yes" xml:space="preserve">
          <source>is_unbounded_array</source>
          <target state="translated">is_unbounded_array</target>
        </trans-unit>
        <trans-unit id="128cca1aee3d39a603e7d96c15f92481d5cf55b5" translate="yes" xml:space="preserve">
          <source>is_union</source>
          <target state="translated">is_union</target>
        </trans-unit>
        <trans-unit id="4473eb8497144ed749ff4afa8117210c69bc63e6" translate="yes" xml:space="preserve">
          <source>is_unsigned</source>
          <target state="translated">is_unsigned</target>
        </trans-unit>
        <trans-unit id="2fb67285106a66bdf62fecb5707c52e432ecde5f" translate="yes" xml:space="preserve">
          <source>is_void</source>
          <target state="translated">is_void</target>
        </trans-unit>
        <trans-unit id="fbff3738c0596ad9d56be72185ae8495d8c61c8c" translate="yes" xml:space="preserve">
          <source>is_volatile</source>
          <target state="translated">is_volatile</target>
        </trans-unit>
        <trans-unit id="f98603d244240ad696c623414f9d8c44d4388b08" translate="yes" xml:space="preserve">
          <source>isalnum</source>
          <target state="translated">isalnum</target>
        </trans-unit>
        <trans-unit id="db0f94c03c9a80041558552fbe28d48a106f6667" translate="yes" xml:space="preserve">
          <source>isalnum(std::locale)</source>
          <target state="translated">isalnum(std::locale)</target>
        </trans-unit>
        <trans-unit id="a80bcf955c9bf2ee8ca03a442b78cc0d9115191b" translate="yes" xml:space="preserve">
          <source>isalpha</source>
          <target state="translated">isalpha</target>
        </trans-unit>
        <trans-unit id="0f56108298763f4683d99c2c769342bb44d90c6a" translate="yes" xml:space="preserve">
          <source>isalpha(std::locale)</source>
          <target state="translated">isalpha(std::locale)</target>
        </trans-unit>
        <trans-unit id="82d00548829fd775bc03447056c6090323f0b173" translate="yes" xml:space="preserve">
          <source>isblank</source>
          <target state="translated">isblank</target>
        </trans-unit>
        <trans-unit id="4bfcfa395616e6b8245d94c9dbe822f531a3aa5b" translate="yes" xml:space="preserve">
          <source>isblank(std::locale)</source>
          <target state="translated">isblank(std::locale)</target>
        </trans-unit>
        <trans-unit id="d106236f8f591c26002d10b884251cd86b65929a" translate="yes" xml:space="preserve">
          <source>iscntrl</source>
          <target state="translated">iscntrl</target>
        </trans-unit>
        <trans-unit id="1c7febd3f4be5cc626118a6445c66e3c20a47ea0" translate="yes" xml:space="preserve">
          <source>iscntrl(std::locale)</source>
          <target state="translated">iscntrl(std::locale)</target>
        </trans-unit>
        <trans-unit id="56df12d7a4b8053daf49b42dc542bf5238d433c8" translate="yes" xml:space="preserve">
          <source>isctype</source>
          <target state="translated">isctype</target>
        </trans-unit>
        <trans-unit id="a4f850ec663f1a95a7308acdd7c0882ac96284f1" translate="yes" xml:space="preserve">
          <source>isdigit</source>
          <target state="translated">isdigit</target>
        </trans-unit>
        <trans-unit id="5bfc43eadd3fb8213b1d82759247684750a9a3dc" translate="yes" xml:space="preserve">
          <source>isdigit(std::locale)</source>
          <target state="translated">isdigit(std::locale)</target>
        </trans-unit>
        <trans-unit id="22e8d3e589ddf297337028d15f802a31d0f9a148" translate="yes" xml:space="preserve">
          <source>isfinite</source>
          <target state="translated">isfinite</target>
        </trans-unit>
        <trans-unit id="6fa9a8b269f20808a2e6e24c0b729ade652ac472" translate="yes" xml:space="preserve">
          <source>isgraph</source>
          <target state="translated">isgraph</target>
        </trans-unit>
        <trans-unit id="c4cf3ace8cce6ef6b0ddba8ff4b6758d1fd20c9a" translate="yes" xml:space="preserve">
          <source>isgraph(std::locale)</source>
          <target state="translated">isgraph(std::locale)</target>
        </trans-unit>
        <trans-unit id="204780ba157e282abd5f8f565a5355c6e0d785f6" translate="yes" xml:space="preserve">
          <source>isgreater</source>
          <target state="translated">isgreater</target>
        </trans-unit>
        <trans-unit id="f440857bcb6299311f5ee06bdf27b84d3598eb29" translate="yes" xml:space="preserve">
          <source>isgreaterequal</source>
          <target state="translated">isgreaterequal</target>
        </trans-unit>
        <trans-unit id="d056083a86a1bbffc86d863e094b919b223684ba" translate="yes" xml:space="preserve">
          <source>isinf</source>
          <target state="translated">isinf</target>
        </trans-unit>
        <trans-unit id="c297f9ca66668fa2e932162df4fb382d37eb2a56" translate="yes" xml:space="preserve">
          <source>isless</source>
          <target state="translated">isless</target>
        </trans-unit>
        <trans-unit id="a5230cbaa088d30ee63eaecad1f3e474015889d4" translate="yes" xml:space="preserve">
          <source>islessequal</source>
          <target state="translated">islessequal</target>
        </trans-unit>
        <trans-unit id="c11b530966ef1b6a3fcc91785240aa47bc624a73" translate="yes" xml:space="preserve">
          <source>islessgreater</source>
          <target state="translated">islessgreater</target>
        </trans-unit>
        <trans-unit id="f30fa1adac02a3cbe31556d8b28823fdaff84ca4" translate="yes" xml:space="preserve">
          <source>islower</source>
          <target state="translated">islower</target>
        </trans-unit>
        <trans-unit id="50b834ca17fef399299058fbebd7fd97f87a4f41" translate="yes" xml:space="preserve">
          <source>islower(std::locale)</source>
          <target state="translated">islower(std::locale)</target>
        </trans-unit>
        <trans-unit id="6a0e9e2fc662576a9398259e75fd3a2ece885f1b" translate="yes" xml:space="preserve">
          <source>isnan</source>
          <target state="translated">isnan</target>
        </trans-unit>
        <trans-unit id="561964c38dda95853fe56cdfcbe872562da5817e" translate="yes" xml:space="preserve">
          <source>isnormal</source>
          <target state="translated">isnormal</target>
        </trans-unit>
        <trans-unit id="f76b741b6d21d2727042016216a332e8085e8926" translate="yes" xml:space="preserve">
          <source>isocpp.org Super-FAQ &lt;a href=&quot;https://isocpp.org/wiki/faq/exceptions#what-to-catch&quot;&gt;&quot;What should I catch?&quot;&lt;/a&gt;</source>
          <target state="translated">isocpp.org Супер-FAQ &lt;a href=&quot;https://isocpp.org/wiki/faq/exceptions#what-to-catch&quot;&gt;&quot;Что мне ловить?&quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6e6aae12d5162e7e31969eb1102c5ce0caef09b" translate="yes" xml:space="preserve">
          <source>isocpp.org Super-FAQ &lt;a href=&quot;https://isocpp.org/wiki/faq/exceptions#what-to-throw&quot;&gt;&quot;What should I throw?&quot;&lt;/a&gt;</source>
          <target state="translated">isocpp.org Super-FAQ &lt;a href=&quot;https://isocpp.org/wiki/faq/exceptions#what-to-throw&quot;&gt;&quot;Что я должен бросить?&quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bba42e7b299c57d601cd2ad8f38b715f29676a31" translate="yes" xml:space="preserve">
          <source>isolated (statements in a transaction may not observe half-written writes made by another transaction, even if they execute in parallel)</source>
          <target state="translated">изолированные (операторы в транзакции не могут наблюдать наполовину написанные записи,сделанные другой транзакцией,даже если они выполняются параллельно)</target>
        </trans-unit>
        <trans-unit id="0130b1f728177265295ee251b48f7e63d3e0cf27" translate="yes" xml:space="preserve">
          <source>ispow2</source>
          <target state="translated">ispow2</target>
        </trans-unit>
        <trans-unit id="3eaa77e81ec3e7315da64522588fa78653f04c48" translate="yes" xml:space="preserve">
          <source>isprint</source>
          <target state="translated">isprint</target>
        </trans-unit>
        <trans-unit id="3cb8091cfa413684a054ffd3b0b5f5f1e4299cc8" translate="yes" xml:space="preserve">
          <source>isprint(std::locale)</source>
          <target state="translated">isprint(std::locale)</target>
        </trans-unit>
        <trans-unit id="b46a43e82705327e79eab10ba90a2c7256ae5f43" translate="yes" xml:space="preserve">
          <source>ispunct</source>
          <target state="translated">ispunct</target>
        </trans-unit>
        <trans-unit id="b5f0289f7eda93d73ef0057f1c30761f85ce39c1" translate="yes" xml:space="preserve">
          <source>ispunct(std::locale)</source>
          <target state="translated">ispunct(std::locale)</target>
        </trans-unit>
        <trans-unit id="dcb83ac7d6a6b5f11ee201d1f2de0695c01d47a8" translate="yes" xml:space="preserve">
          <source>isspace</source>
          <target state="translated">isspace</target>
        </trans-unit>
        <trans-unit id="c1cb1cccb6c5fc628240748503b52b9974208451" translate="yes" xml:space="preserve">
          <source>isspace(std::locale)</source>
          <target state="translated">isspace(std::locale)</target>
        </trans-unit>
        <trans-unit id="2be3ed358e8989d90adc2ae14c77c4e792173e16" translate="yes" xml:space="preserve">
          <source>issued on &lt;a href=&quot;../basic_ios/copyfmt&quot;&gt;&lt;code&gt;basic_ios::copyfmt()&lt;/code&gt;&lt;/a&gt; (after the copy of members takes place, but before the exception settings are copied)</source>
          <target state="translated">выдается на &lt;a href=&quot;../basic_ios/copyfmt&quot;&gt; &lt;code&gt;basic_ios::copyfmt()&lt;/code&gt; &lt;/a&gt; (после того, как происходит копирование членов, но до копирования настроек исключения)</target>
        </trans-unit>
        <trans-unit id="14a717e8a1b383e395cdc64f915ee9d87ef851d0" translate="yes" xml:space="preserve">
          <source>issued on &lt;code&gt;&lt;a href=&quot;imbue&quot;&gt;imbue()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">выдан на имя &lt;code&gt;&lt;a href=&quot;imbue&quot;&gt;imbue()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08261b1eee75be476d0ca112b6cee093062692b7" translate="yes" xml:space="preserve">
          <source>issued on &lt;code&gt;~ios_base()&lt;/code&gt; or &lt;a href=&quot;../basic_ios/copyfmt&quot;&gt;&lt;code&gt;basic_ios::copyfmt()&lt;/code&gt;&lt;/a&gt; (before the copy of members takes place)</source>
          <target state="translated">выдается в &lt;code&gt;~ios_base()&lt;/code&gt; или &lt;a href=&quot;../basic_ios/copyfmt&quot;&gt; &lt;code&gt;basic_ios::copyfmt()&lt;/code&gt; &lt;/a&gt; (до того, как произойдет копирование членов)</target>
        </trans-unit>
        <trans-unit id="60ae1b3bb0312cc62002df81b235875d2499dcc3" translate="yes" xml:space="preserve">
          <source>ist</source>
          <target state="translated">ist</target>
        </trans-unit>
        <trans-unit id="a33232d492022bd69dfae196fb039c789e67073a" translate="yes" xml:space="preserve">
          <source>istream</source>
          <target state="translated">istream</target>
        </trans-unit>
        <trans-unit id="3123af182b83f750ccb9a02474533a2dcfd314a1" translate="yes" xml:space="preserve">
          <source>istream_iterator</source>
          <target state="translated">istream_iterator</target>
        </trans-unit>
        <trans-unit id="6b63b5cba3bff0daf5f68dfe6d18afb0e79861c5" translate="yes" xml:space="preserve">
          <source>istreambuf_iterator</source>
          <target state="translated">istreambuf_iterator</target>
        </trans-unit>
        <trans-unit id="a3b2c89cbf3a3573923825d983f01be579c50fe2" translate="yes" xml:space="preserve">
          <source>istrstream</source>
          <target state="translated">istrstream</target>
        </trans-unit>
        <trans-unit id="5b6e8a867432c68f5c4d719267fe581bcdc67cba" translate="yes" xml:space="preserve">
          <source>isunordered</source>
          <target state="translated">isunordered</target>
        </trans-unit>
        <trans-unit id="a75940e15c80a9f6f3e3f1f35e71a404899ffbb3" translate="yes" xml:space="preserve">
          <source>isupper</source>
          <target state="translated">isupper</target>
        </trans-unit>
        <trans-unit id="3a84739e234fbc536ce007f364a8685a04ab9814" translate="yes" xml:space="preserve">
          <source>isupper(std::locale)</source>
          <target state="translated">isupper(std::locale)</target>
        </trans-unit>
        <trans-unit id="d2dfa72d5f7687c8fc5c3805442df6dee4f6c3b1" translate="yes" xml:space="preserve">
          <source>iswalnum</source>
          <target state="translated">iswalnum</target>
        </trans-unit>
        <trans-unit id="554df484ee827039f6d55b688d751dc800be894e" translate="yes" xml:space="preserve">
          <source>iswalpha</source>
          <target state="translated">iswalpha</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
