<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="cpp">
    <body>
      <group id="cpp">
        <trans-unit id="0d19b02053245fd658744be05acb66f6795dfec5" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;declarations&quot;&gt;simple declaration&lt;/a&gt;, typically a declaration of a loop counter variable with initializer, but it may declare arbitrary many variables</source>
          <target state="translated">&lt;a href=&quot;declarations&quot;&gt;простая декларация&lt;/a&gt; , как правило , декларация счетчик цикла переменного с инициализатором, но он может объявить произвольные много переменных</target>
        </trans-unit>
        <trans-unit id="c20d095ecceecc0d92c5b636f980edf3d560c27f" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;declarations&quot;&gt;simple declaration&lt;/a&gt;, typically a declaration of a variable with initializer, but it may declare arbitrary many variables or be a &lt;a href=&quot;structured_binding&quot;&gt;structured binding declaration&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;declarations&quot;&gt;простая декларация&lt;/a&gt; , как правило , декларация переменного с инициализатором, но он может объявить произвольные много переменных или быть &lt;a href=&quot;structured_binding&quot;&gt;структурирована декларацией связывания&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c035c17095b570541b804043bd0d5c99497e6655" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;declarations&quot;&gt;simple declaration&lt;/a&gt;, typically a declaration of a variable with initializer, but it may declare arbitrary many variables or be a decomposition declaration</source>
          <target state="translated">&lt;a href=&quot;declarations&quot;&gt;простая декларация&lt;/a&gt; , как правило , декларация переменного с инициализатором, но он может объявить произвольные много переменных или быть декларацией разложения</target>
        </trans-unit>
        <trans-unit id="4b734860e87e75b35551beb9fadebdf9940d0be6" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;declarations&quot;&gt;simple declaration&lt;/a&gt;, typically a declaration of a variable with initializer, but it may declare arbitrary many variables or structured bindings</source>
          <target state="translated">&lt;a href=&quot;declarations&quot;&gt;простая декларация&lt;/a&gt; , как правило , декларация переменного с инициализатором, но он может объявить произвольные много переменных или структурированные привязки</target>
        </trans-unit>
        <trans-unit id="2201d89e3d55486c60323b0565f06038ff02c6ab" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;declarations#Simple_declaration&quot;&gt;simple declaration&lt;/a&gt; or &lt;a href=&quot;function#Function_definition&quot;&gt;function definition&lt;/a&gt; at namespace scope;</source>
          <target state="translated">&lt;a href=&quot;declarations#Simple_declaration&quot;&gt;простое объявление&lt;/a&gt; или &lt;a href=&quot;function#Function_definition&quot;&gt;определение функции&lt;/a&gt; в области видимости пространства имен;</target>
        </trans-unit>
        <trans-unit id="c8bcda74ea89e3702ab08c50656a296f15b010fd" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;expressions#Literals&quot;&gt;literal&lt;/a&gt; (except for &lt;a href=&quot;string_literal&quot;&gt;string literal&lt;/a&gt;), such as &lt;code&gt;42&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;nullptr&lt;/code&gt;;</source>
          <target state="translated">&lt;a href=&quot;expressions#Literals&quot;&gt;буквальный&lt;/a&gt; (за исключением &lt;a href=&quot;string_literal&quot;&gt;строкового литерала&lt;/a&gt; ), такие как &lt;code&gt;42&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;nullptr&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="8446974ce0d221e5eb27350acb15252dd76acf23" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;expressions#Primary_expressions&quot;&gt;primary expression&lt;/a&gt;, e.g. &lt;code&gt;&lt;a href=&quot;../concepts/swappable&quot;&gt;Swappable&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/is_integral&quot;&gt;std::is_integral&lt;/a&gt;&amp;lt;T&amp;gt;::value&lt;/code&gt;, &lt;code&gt;(&lt;a href=&quot;../types/is_object&quot;&gt;std::is_object_v&lt;/a&gt;&amp;lt;Args&amp;gt; &amp;amp;&amp;amp; ...)&lt;/code&gt;, or any parenthesized expression</source>
          <target state="translated">&lt;a href=&quot;expressions#Primary_expressions&quot;&gt;первичное выражение&lt;/a&gt; , например &lt;code&gt;&lt;a href=&quot;../concepts/swappable&quot;&gt;Swappable&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../types/is_integral&quot;&gt;std::is_integral&lt;/a&gt;&amp;lt;T&amp;gt;::value&lt;/code&gt; , &lt;code&gt;(&lt;a href=&quot;../types/is_object&quot;&gt;std::is_object_v&lt;/a&gt;&amp;lt;Args&amp;gt; &amp;amp;&amp;amp; ...)&lt;/code&gt; , или любое выражение в скобках</target>
        </trans-unit>
        <trans-unit id="500e95ea5cc0ecd68e30742d9d61e3323034d850" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;function&quot;&gt;function declaration&lt;/a&gt; where the type of at least one parameter uses the placeholder &lt;a href=&quot;auto&quot;&gt;auto&lt;/a&gt; or &lt;code&gt;Concept auto&lt;/code&gt;: the template parameter list will have one invented parameter for each placeholder (see Abbreviated function templates below</source>
          <target state="translated">&lt;a href=&quot;function&quot;&gt;объявление функции&lt;/a&gt; , когда тип по меньшей мере , одного параметра используется заполнитель &lt;a href=&quot;auto&quot;&gt;авто&lt;/a&gt; или &lt;code&gt;Concept auto&lt;/code&gt; : список параметров шаблона будет иметь один изобретенный параметр для каждого заполнителя (см сокращенных шаблонов функций ниже</target>
        </trans-unit>
        <trans-unit id="cf8f5a052390f7a051f82e9f9d21d32ee1c4a82a" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;function&quot;&gt;function declaration&lt;/a&gt;. The function name declared becomes a template name.</source>
          <target state="translated">&lt;a href=&quot;function&quot;&gt;объявление функции&lt;/a&gt; . Объявленное имя функции становится именем шаблона.</target>
        </trans-unit>
        <trans-unit id="c2f7755c6029f6a2726cac9e6db3c67772cad590" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;function&quot;&gt;trailing return type&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;function&quot;&gt;тип возвращаемого трейлинг&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="7edca23af0f84105b599f5a7b5d639d2bc955bbd" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;function#Parameter_list&quot;&gt;parameter declaration&lt;/a&gt; in a &lt;a href=&quot;class#Member_specification&quot;&gt;class member declaration&lt;/a&gt; (including friend function declarations), outside of default arguments;</source>
          <target state="translated">&lt;a href=&quot;function#Parameter_list&quot;&gt;объявление параметра&lt;/a&gt; в &lt;a href=&quot;class#Member_specification&quot;&gt;объявлении члена класса&lt;/a&gt; ( в том числе друга функции деклараций), за пределами аргументов по умолчанию;</target>
        </trans-unit>
        <trans-unit id="c118f25111af636da74b78a8eacfb1f5f20cd6c6" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;function#Parameter_list&quot;&gt;parameter declaration&lt;/a&gt; of a &lt;a href=&quot;function&quot;&gt;declarator for a function or function template&lt;/a&gt; whose name is qualified, outside of default arguments;</source>
          <target state="translated">&lt;a href=&quot;function#Parameter_list&quot;&gt;параметр декларация&lt;/a&gt; о &lt;a href=&quot;function&quot;&gt;описателе для шаблона функции или функции&lt;/a&gt; , чье имя квалифицировано, вне аргументов по умолчанию;</target>
        </trans-unit>
        <trans-unit id="f1184f488a359d5c1d1504b481c38dad94714e6b" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;function#Parameter_list&quot;&gt;parameter declaration&lt;/a&gt; of a &lt;a href=&quot;lambda&quot;&gt;lambda expression&lt;/a&gt; outside of default arguments;</source>
          <target state="translated">&lt;a href=&quot;function#Parameter_list&quot;&gt;параметр декларации&lt;/a&gt; о &lt;a href=&quot;lambda&quot;&gt;лямбда - выражения&lt;/a&gt; внешней аргументов по умолчанию;</target>
        </trans-unit>
        <trans-unit id="642baf6869f125ceaec67c589e398539c6e7f6ed" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; statement</source>
          <target state="translated">&lt;a href=&quot;goto&quot;&gt;Гото&lt;/a&gt; заявление</target>
        </trans-unit>
        <trans-unit id="c907e534b1c94f336b7e2cf57a58189deb97fe5d" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;implicit_cast&quot;&gt;standard conversion&lt;/a&gt;, &lt;a href=&quot;dynamic_cast&quot;&gt;dynamic_cast&lt;/a&gt;, or &lt;a href=&quot;static_cast&quot;&gt;static_cast&lt;/a&gt; to type &lt;code&gt;T*&lt;/code&gt; or &lt;code&gt;T&amp;amp;&lt;/code&gt;, except when converting from the &lt;a href=&quot;../types/null&quot;&gt;null pointer constant&lt;/a&gt; or from a &lt;a href=&quot;pointer#Pointers_to_void&quot;&gt;pointer to void&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;implicit_cast&quot;&gt;стандартное преобразование&lt;/a&gt; , &lt;a href=&quot;dynamic_cast&quot;&gt;dynamic_cast&lt;/a&gt; или &lt;a href=&quot;static_cast&quot;&gt;static_cast&lt;/a&gt; к типу &lt;code&gt;T*&lt;/code&gt; или &lt;code&gt;T&amp;amp;&lt;/code&gt; , за исключением того, при преобразовании из &lt;a href=&quot;../types/null&quot;&gt;постоянной указателя NULL&lt;/a&gt; или из &lt;a href=&quot;pointer#Pointers_to_void&quot;&gt;указателя недействительными&lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="ff7412a5c700e7e775fdf95f63af3f717686860b" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;implicit_cast#Function_pointer_conversions&quot;&gt;function pointer conversion&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;implicit_cast#Function_pointer_conversions&quot;&gt;преобразование указателя на функцию&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd862ebece74d9a647884bc1f7ae05595e84d3dd" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;implicit_cast#Qualification_conversions&quot;&gt;qualification conversion&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;implicit_cast#Qualification_conversions&quot;&gt;квалификация преобразования&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78294718f1c4d725f8f92854d2e7408626ebcedd" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;lambda&quot;&gt;lambda expression&lt;/a&gt;, such as &lt;code&gt;[](int x){ return x * x; }&lt;/code&gt;;</source>
          <target state="translated">&lt;a href=&quot;lambda&quot;&gt;лямбда - выражение&lt;/a&gt; , например, &lt;code&gt;[](int x){ return x * x; }&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="84b39eaf4ad707d4a4dec485e938308dab148b12" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;name#Qualified_identifiers&quot;&gt;sequence of names and scope resolution operators &lt;code&gt;::&lt;/code&gt; &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;name#Qualified_identifiers&quot;&gt;последовательность имен и операторов разрешения области видимости &lt;code&gt;::&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b9cefe53156bc46a61aba49ceb2bcf93ec727d8" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;named_req/basiclockable&quot;&gt;BasicLockable&lt;/a&gt; that supports attempted lock acquisition</source>
          <target state="translated">&lt;a href=&quot;named_req/basiclockable&quot;&gt;BasicLockable&lt;/a&gt; , который поддерживает попытку приобретения блокировки</target>
        </trans-unit>
        <trans-unit id="b2e74295624d6557dcdd2cc01e3b042f422a51a5" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;named_req/binarypredicate&quot;&gt;BinaryPredicate&lt;/a&gt; that establishes an ordering relation</source>
          <target state="translated">&lt;a href=&quot;named_req/binarypredicate&quot;&gt;BinaryPredicate&lt;/a&gt; , что устанавливает отношение порядка</target>
        </trans-unit>
        <trans-unit id="c9fc14a958079406695f087786e7323e37febb5f" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;named_req/clock&quot;&gt;Clock&lt;/a&gt; that does not throw exceptions</source>
          <target state="translated">&lt;a href=&quot;named_req/clock&quot;&gt;часы&lt;/a&gt; , не бросать исключения</target>
        </trans-unit>
        <trans-unit id="a8f9bb45156d6a61bb73c330f242efbcd3e0fcea" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;named_req/functionobject&quot;&gt;FunctionObject&lt;/a&gt; that for inputs with different values has a low probability of giving the same output</source>
          <target state="translated">&lt;a href=&quot;named_req/functionobject&quot;&gt;функциональный объект&lt;/a&gt; , что для входов с различными значениями имеют низкую вероятность дает тот же результат</target>
        </trans-unit>
        <trans-unit id="ea59a46b0fa1e2f0e7670029ccdde75669c8d886" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;named_req/functionobject&quot;&gt;FunctionObject&lt;/a&gt; that returns a value convertible to &lt;code&gt;bool&lt;/code&gt; for one argument without modifying it</source>
          <target state="translated">&lt;a href=&quot;named_req/functionobject&quot;&gt;функциональный объект&lt;/a&gt; , который возвращает значение , конвертируемые в &lt;code&gt;bool&lt;/code&gt; для одного аргумента , не изменяя его</target>
        </trans-unit>
        <trans-unit id="b54d733aca75c1dec32ecb63027a79406e738ca0" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;named_req/functionobject&quot;&gt;FunctionObject&lt;/a&gt; that returns a value convertible to &lt;code&gt;bool&lt;/code&gt; for two arguments without modifying them</source>
          <target state="translated">&lt;a href=&quot;named_req/functionobject&quot;&gt;функциональный объект&lt;/a&gt; , который возвращает значение конвертируется в &lt;code&gt;bool&lt;/code&gt; для двух аргументов , не изменяя их</target>
        </trans-unit>
        <trans-unit id="60356dec3126ca424603f3524c2c59c0f4d0e0b3" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;named_req/lockable&quot;&gt;Lockable&lt;/a&gt; that protects against data races and sequentially consistent synchronization</source>
          <target state="translated">&lt;a href=&quot;named_req/lockable&quot;&gt;Блокируемый&lt;/a&gt; , который защищает от гонок данных и последовательно последовательной синхронизации</target>
        </trans-unit>
        <trans-unit id="78a14075ec6e560d582c534d1ea3a8368ec01c15" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;named_req/lockable&quot;&gt;Lockable&lt;/a&gt; that supports timed lock acquisition</source>
          <target state="translated">&lt;a href=&quot;named_req/lockable&quot;&gt;Lockable&lt;/a&gt; что поддерживает приуроченное приобретение замка</target>
        </trans-unit>
        <trans-unit id="2420df90cbe1b6e70248694fed79e630531d3b06" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;named_req/mutex&quot;&gt;Mutex&lt;/a&gt; that supports shared ownership semantics</source>
          <target state="translated">&lt;a href=&quot;named_req/mutex&quot;&gt;мьютекс&lt;/a&gt; , который поддерживает долевую собственность семантику</target>
        </trans-unit>
        <trans-unit id="79e44acb7900ed6728581d5d8a9042f7e17f14c3" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;named_req/randomnumberengine&quot;&gt;RandomNumberEngine&lt;/a&gt; that transforms the output of another &lt;a href=&quot;named_req/randomnumberengine&quot;&gt;RandomNumberEngine&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;named_req/randomnumberengine&quot;&gt;RandomNumberEngine&lt;/a&gt; , который преобразует выходной сигнал другого &lt;a href=&quot;named_req/randomnumberengine&quot;&gt;RandomNumberEngine&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e17ffa05e7a19b50f16c2ab3c2e4a41b726df14f" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;named_req/timedlockable&quot;&gt;TimedLockable&lt;/a&gt; that protects against data races and sequentially consistent synchronization</source>
          <target state="translated">&lt;a href=&quot;named_req/timedlockable&quot;&gt;TimedLockable&lt;/a&gt; , который защищает от гонок данных и последовательно последовательной синхронизации</target>
        </trans-unit>
        <trans-unit id="782471ed828c26fe873bde60284584c9dc102f92" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;named_req/timedmutex&quot;&gt;TimedMutex&lt;/a&gt; that supports shared ownership semantics</source>
          <target state="translated">&lt;a href=&quot;named_req/timedmutex&quot;&gt;TimedMutex&lt;/a&gt; , который поддерживает долевую собственность семантику</target>
        </trans-unit>
        <trans-unit id="7d0093b4c5c45dc52be9aea4ff3837e330ec42b4" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;pointer&quot;&gt;pointer type&lt;/a&gt; (to object or to function);</source>
          <target state="translated">&lt;a href=&quot;pointer&quot;&gt;тип указателя&lt;/a&gt; (для объекта или функции);</target>
        </trans-unit>
        <trans-unit id="ae90d6992e65874408f2a555b237871969050472" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;pointer#Pointers_to_members&quot;&gt;pointer to member type&lt;/a&gt; (to member object or to member function);</source>
          <target state="translated">&lt;a href=&quot;pointer#Pointers_to_members&quot;&gt;указатель типа элемента&lt;/a&gt; (к объекту члена или к функции члена);</target>
        </trans-unit>
        <trans-unit id="089b5759d49b3f3e3e05a4ed136cf4cb2e556331" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;qualified_lookup&quot;&gt;qualified name&lt;/a&gt;, if any name that appears to the left of &lt;code&gt;::&lt;/code&gt; is a</source>
          <target state="translated">&lt;a href=&quot;qualified_lookup&quot;&gt;квалифицированное имя&lt;/a&gt; , если имя , которое отображается в левой части &lt;code&gt;::&lt;/code&gt; является</target>
        </trans-unit>
        <trans-unit id="49c176e338afd9bd3c2793dd3aab24e8628e50cf" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;qualified_lookup&quot;&gt;qualified name&lt;/a&gt;, whose qualifier is the</source>
          <target state="translated">&lt;a href=&quot;qualified_lookup&quot;&gt;квалифицированное имя&lt;/a&gt; , которого классификатор является</target>
        </trans-unit>
        <trans-unit id="906617abbba3f5b3395186a0beb57b664902cb46" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; consisting of a sequence generated by repeatedly incrementing an initial value</source>
          <target state="translated">&lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; , состоящий из последовательности , сформированной путем многократного приращения начального значения</target>
        </trans-unit>
        <trans-unit id="584a08c6718b46b2d5bafb7362ec47101daa6021" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; consisting of the first N elements of another &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; , состоящий из первых N элементов другого &lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87aecd3717fd037445fe9653742baf83e68058f8" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; consisting of the sequence obtained from flattening a &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;ranges/range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;s&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; , состоящий из последовательности , полученной из выпрямления &lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; из &lt;a href=&quot;ranges/range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a37c7d31d124ed7013e20399a2b928cc3860b13d" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; of a sequence that applies a transformation function to each element</source>
          <target state="translated">&lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; последовательности , которая применяет функцию преобразования к каждому элементу</target>
        </trans-unit>
        <trans-unit id="15d88520977b781a636bb3e5929f30daaf0cc794" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; of the elements of some other &lt;a href=&quot;ranges/range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; из элементов некоторого другого &lt;a href=&quot;ranges/range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a744d52e04d21449948de57a486e1984145b091d" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; over the subranges obtained from splitting another &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; using a delimiter</source>
          <target state="translated">a. &lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; на поддиапазоны, полученный при разбиении другого &lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; с использованием разделителя.</target>
        </trans-unit>
        <trans-unit id="ea2a829aa46d29fe3671781db0df1002a16f9f56" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; that consists of the elements of a &lt;a href=&quot;ranges/range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; that satisfies a predicate</source>
          <target state="translated">&lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; , который состоит из элементов &lt;a href=&quot;ranges/range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; , который удовлетворяет предикатный</target>
        </trans-unit>
        <trans-unit id="3270d31c1a13794c926d9de62c84a1561042e839" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; that contains a single element of a specified value</source>
          <target state="translated">&lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; , который содержит один элемент заданного значения</target>
        </trans-unit>
        <trans-unit id="8ee5c0dac3dcdfb720bfc6c40ed3163b50c59d15" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; that includes all elements of a &lt;a href=&quot;ranges/range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; , который включает в себя все элементы &lt;a href=&quot;ranges/range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="569c82165b27db13ed5aaf3e2bd4eadc158f3978" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; that iterates over the elements of another bidirectional view in reverse order</source>
          <target state="translated">&lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; , который перебирает элементы другого двунаправленного зрения в обратном порядке</target>
        </trans-unit>
        <trans-unit id="65f096eb23ce29a61ddace2d9bc3762ad47d07e2" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;string_literal&quot;&gt;string literal&lt;/a&gt;, such as &lt;code&gt;&quot;Hello, world!&quot;&lt;/code&gt;;</source>
          <target state="translated">&lt;a href=&quot;string_literal&quot;&gt;строковый литерал&lt;/a&gt; , например, &lt;code&gt;&quot;Hello, world!&quot;&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="f91dfaeafd98f430989545790f287e35b5f20dc9" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;string_literal&quot;&gt;string literal&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;string_literal&quot;&gt;строковый литерал&lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="191a5a89aef337a4a629add8645510717aab9bf2" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;template_parameters#Type_template_parameter&quot;&gt;default argument of a type template parameter&lt;/a&gt;, or</source>
          <target state="translated">&lt;a href=&quot;template_parameters#Type_template_parameter&quot;&gt;по умолчанию аргумент параметра шаблона типа&lt;/a&gt; , или</target>
        </trans-unit>
        <trans-unit id="25def632dd3eeeb127af967f287d3c112d182fe9" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;templates&quot;&gt;template&lt;/a&gt; name followed by its argument list, such as &lt;code&gt;MyTemplate&amp;lt;int&amp;gt;&lt;/code&gt;;</source>
          <target state="translated">&lt;a href=&quot;templates&quot;&gt;шаблон&lt;/a&gt; имени следует список аргументов, таких как &lt;code&gt;MyTemplate&amp;lt;int&amp;gt;&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="552d64c54cb700af2ff2ba1111b75b5ffde66790" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;templates#template-id&quot;&gt;template-id&lt;/a&gt; where either</source>
          <target state="translated">&lt;a href=&quot;templates#template-id&quot;&gt;шаблон-идентификатор&lt;/a&gt; , где либо</target>
        </trans-unit>
        <trans-unit id="663fb41f0d766e7269a5347cbd45d461e373d362" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;try_catch&quot;&gt;catch-clause&lt;/a&gt; for an exception of type &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;T&amp;amp;&lt;/code&gt;, or &lt;code&gt;T*&lt;/code&gt;.</source>
          <target state="translated">предложение &lt;a href=&quot;try_catch&quot;&gt;catch&lt;/a&gt; для исключения типа &lt;code&gt;T&lt;/code&gt; , &lt;code&gt;T&amp;amp;&lt;/code&gt; или &lt;code&gt;T*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="208a7da5d29804a28adcf5b9f0314d6ff0dd0293" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;try_catch&quot;&gt;try-block&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;try_catch&quot;&gt;примерки блок&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e94d0262c8aa644df44502fbb216fd3ee7762db" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;user_literal&quot;&gt;user-defined literal operator&lt;/a&gt; name, such as &lt;code&gt;operator &quot;&quot; _km&lt;/code&gt;;</source>
          <target state="translated">&lt;a href=&quot;user_literal&quot;&gt;определенного пользователь буквального оператор&lt;/a&gt; имя, например, &lt;code&gt;operator &quot;&quot; _km&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="99934e9b58a1babae9be931f9f2fea4fc18fc0ee" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; that includes all elements of a &lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; , который включает в себя все элементы &lt;a href=&quot;range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="316d511c8aa53b7526805d4e5457d26523ec3796" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;&lt;a href=&quot;../../io/basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt; to insert &lt;code&gt;p&lt;/code&gt; into</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../io/basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt; для вставки &lt;code&gt;p&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="fbd12644c821ad9dd5361ab305ce3eacebcd4452" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;&lt;a href=&quot;../../io/basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt; to insert &lt;code&gt;ptr&lt;/code&gt; into</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../io/basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt; для вставки &lt;code&gt;ptr&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="a4b2b6efcf66147f984a4f4c3f1b193be394563b" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../../string/basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt;, pointer to a null-terminated character/wide character string, or an input iterator that points to a null-terminated character/wide character sequence. The character type must be one of &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;char8_t&lt;/code&gt;, (since C++20)&lt;code&gt;char16_t&lt;/code&gt;, &lt;code&gt;char32_t&lt;/code&gt;, &lt;code&gt;wchar_t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../../string/basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; , указатель на символьный / строку широких символов , оканчивающийся нуля, или входной итератор , который указует на характер / широкую последовательность символов , оканчивающийся нуля. Тип символа должен иметь тип &lt;code&gt;char&lt;/code&gt; , &lt;code&gt;char8_t&lt;/code&gt; , (начиная с C ++ 20) &lt;code&gt;char16_t&lt;/code&gt; , &lt;code&gt;char32_t&lt;/code&gt; , &lt;code&gt;wchar_t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b73bd2673de988b6a6630c49706a06b3e5e3bc7" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;&lt;a href=&quot;../../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; representing the hash value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; , представляющий значение хеш - функции.</target>
        </trans-unit>
        <trans-unit id="2d166a98420f3d07a1a5cfa0f15025354bc8ab03" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object to compare</source>
          <target state="translated">объект &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; для сравнения</target>
        </trans-unit>
        <trans-unit id="d5b6a5305c4cd7829271fc0bef5a5469bcdbe9cb" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; type representing the tick period of the clock, in seconds</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../numeric/ratio/ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; типа , представляющий период такта часов, в секундах</target>
        </trans-unit>
        <trans-unit id="28c282d6688b8d9817fe3654bc3aea6ec9948374" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;&lt;a href=&quot;../path&quot;&gt;std::filesystem::path&lt;/a&gt;&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../path&quot;&gt;std::filesystem::path&lt;/a&gt;&lt;/code&gt; объекта</target>
        </trans-unit>
        <trans-unit id="5c15ad055910b7bab983130d3d0318587f713ea8" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;&lt;a href=&quot;../pool_options&quot;&gt;std::pmr::pool_options&lt;/a&gt;&lt;/code&gt; struct containing the constructor options</source>
          <target state="translated">структура &lt;code&gt;&lt;a href=&quot;../pool_options&quot;&gt;std::pmr::pool_options&lt;/a&gt;&lt;/code&gt; содержащая параметры конструктора</target>
        </trans-unit>
        <trans-unit id="54930ae4d23e136dcc5b456eec1ed82612b38402" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e940f25cbf8cd2aa56592576ed0c20278acc2bff" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&lt;/code&gt; that will be viewed by this &lt;code&gt;&lt;a href=&quot;../weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&lt;/code&gt; , которые будут рассматриваться этим &lt;code&gt;&lt;a href=&quot;../weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ecdb524f3aba763d3ff8829b8227e31bef82cacf" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;basic_string&lt;/code&gt; used to initialize the buffer</source>
          <target state="translated">&lt;code&gt;basic_string&lt;/code&gt; используется для инициализации буфера</target>
        </trans-unit>
        <trans-unit id="a0e668eabf5840cd34ea3e0f28321b311fe77422" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;duration&lt;/code&gt; to copy from</source>
          <target state="translated">&lt;code&gt;duration&lt;/code&gt; копирования с</target>
        </trans-unit>
        <trans-unit id="6b0c69e8badd1554c8a8794737ab30e685ebbeb0" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;memory_order_seq_cst&lt;/code&gt; fence Y, then A precedes Y in S c) if a &lt;code&gt;memory_order_seq_cst&lt;/code&gt; fence X</source>
          <target state="translated">a &lt;code&gt;memory_order_seq_cst&lt;/code&gt; ограда Y, тогда A предшествует Y в S c) если &lt;code&gt;memory_order_seq_cst&lt;/code&gt; ограда X</target>
        </trans-unit>
        <trans-unit id="f0b51354e700071d41d8e696cc9589f3f0e23e24" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;memory_order_seq_cst&lt;/code&gt; fence Y, then X precedes Y in S</source>
          <target state="translated">&lt;code&gt;memory_order_seq_cst&lt;/code&gt; забор Y, то Х предшествует Y в S</target>
        </trans-unit>
        <trans-unit id="9d2d1cf5df9aa21b5f43d6c3730e0127bacfd20a" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;mutex&lt;/code&gt; from the time that it successfully calls either &lt;a href=&quot;mutex/lock&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mutex/try_lock&quot;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt; until it calls &lt;a href=&quot;mutex/unlock&quot;&gt;&lt;code&gt;unlock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;mutex&lt;/code&gt; с того времени, она успешно вызывает либо &lt;a href=&quot;mutex/lock&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;mutex/try_lock&quot;&gt; &lt;code&gt;try_lock&lt;/code&gt; &lt;/a&gt; , пока он не вызывает &lt;a href=&quot;mutex/unlock&quot;&gt; &lt;code&gt;unlock&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="863d62328d5f1e3a0af927034efd3cb49a858007" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;recursive_mutex&lt;/code&gt; for a period of time that starts when it successfully calls either &lt;a href=&quot;recursive_mutex/lock&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mutex/try_lock&quot;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt;. During this period, the thread may make additional calls to &lt;a href=&quot;recursive_mutex/lock&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;recursive_mutex/try_lock&quot;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt;. The period of ownership ends when the thread makes a matching number of calls to &lt;a href=&quot;recursive_mutex/unlock&quot;&gt;&lt;code&gt;unlock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;recursive_mutex&lt;/code&gt; в течение периода времени , который начинается , когда он успешно вызывает либо &lt;a href=&quot;recursive_mutex/lock&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;mutex/try_lock&quot;&gt; &lt;code&gt;try_lock&lt;/code&gt; &lt;/a&gt; . В течение этого периода поток может сделать дополнительные вызовы для &lt;a href=&quot;recursive_mutex/lock&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;recursive_mutex/try_lock&quot;&gt; &lt;code&gt;try_lock&lt;/code&gt; &lt;/a&gt; . Период владения заканчивается, когда поток делает соответствующее количество вызовов, чтобы &lt;a href=&quot;recursive_mutex/unlock&quot;&gt; &lt;code&gt;unlock&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60b02f0b0cd6b462a069eb540be8a96dc7f7ee1a" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;regex_iterator&lt;/code&gt; to compare to</source>
          <target state="translated">&lt;code&gt;regex_iterator&lt;/code&gt; сравнить с</target>
        </trans-unit>
        <trans-unit id="5f914aa0db45d26f593fbd3b3acb0736aa4d7f34" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;std::chrono::local_info&lt;/code&gt; describing the result of the conversion attempt</source>
          <target state="translated">&lt;code&gt;std::chrono::local_info&lt;/code&gt; , описывающее результат попытки преобразования</target>
        </trans-unit>
        <trans-unit id="e92b7ebf5ac6699b0419aafc5019fd69e5b495d1" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;std::future&lt;/code&gt; that will transfer state to &lt;code&gt;*this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;std::future&lt;/code&gt; , который будет передавать состояние на &lt;code&gt;*this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45c38558d576f7077eb936fedf2e6993f71552d0" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;std::partial_ordering &lt;/code&gt; value to check</source>
          <target state="translated">&lt;code&gt;std::partial_ordering &lt;/code&gt; значение для проверки</target>
        </trans-unit>
        <trans-unit id="6cb6d8aec9d0d7086c8d7b490355b651816e9f71" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;std::partial_ordering&lt;/code&gt; value to check</source>
          <target state="translated">&lt;code&gt;std::partial_ordering&lt;/code&gt; значение для проверки</target>
        </trans-unit>
        <trans-unit id="2abc4eda553b7e2119f385f0dd8fe079b5901fc1" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;std::shared_future&lt;/code&gt; that will transfer state to &lt;code&gt;*this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;std::shared_future&lt;/code&gt; , который будет передавать состояние на &lt;code&gt;*this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea1ec8d4b72649962e567349201f78a7aecef264" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;std::strong_equality&lt;/code&gt; value to check</source>
          <target state="translated">значение &lt;code&gt;std::strong_equality&lt;/code&gt; для проверки</target>
        </trans-unit>
        <trans-unit id="842ba00de4d8ab8dd4f532e899b87cf7099a8622" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;std::strong_ordering&lt;/code&gt; value to check</source>
          <target state="translated">значение &lt;code&gt;std::strong_ordering&lt;/code&gt; для проверки</target>
        </trans-unit>
        <trans-unit id="0253836014928024de0859d29625df2f344d46ad" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;std::weak_equality&lt;/code&gt; value to check</source>
          <target state="translated">&lt;code&gt;std::weak_equality&lt;/code&gt; значение для проверки</target>
        </trans-unit>
        <trans-unit id="f76354e64cc6e23de23245adc7499dc00576366f" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;std::weak_ordering &lt;/code&gt; value to check</source>
          <target state="translated">значение &lt;code&gt;std::weak_ordering &lt;/code&gt; для проверки</target>
        </trans-unit>
        <trans-unit id="05358986f183ddf4595d8859a958cc712f0ab225" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;std::weak_ordering&lt;/code&gt; value to check</source>
          <target state="translated">значение &lt;code&gt;std::weak_ordering&lt;/code&gt; для проверки</target>
        </trans-unit>
        <trans-unit id="d9610770cf81d239e7a04362e6d0fadfaa64deec" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;sub_match&lt;/code&gt;, &lt;code&gt;basic_string&lt;/code&gt;, pointer to a null-terminated string or a character to compare</source>
          <target state="translated">&lt;code&gt;sub_match&lt;/code&gt; , &lt;code&gt;basic_string&lt;/code&gt; , указатель на строку с нулевым символом или символ для сравнения</target>
        </trans-unit>
        <trans-unit id="63b26ec0d5fac3c3232b5ffc726c7befaaed3d72" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;time_point&lt;/code&gt; to convert from</source>
          <target state="translated">&lt;code&gt;time_point&lt;/code&gt; конвертировать из</target>
        </trans-unit>
        <trans-unit id="816fe47038210aaf21ca1a99d9e95e7a3f42b5cc" translate="yes" xml:space="preserve">
          <source>a FIFO (also known as pipe) file</source>
          <target state="translated">файл FIFO (также известный как трубный).</target>
        </trans-unit>
        <trans-unit id="54a9c6eed1e0626765604b3dcde6dced86c39ba2" translate="yes" xml:space="preserve">
          <source>a UTF-8 encoded &lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::string&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../../string/basic_string_view&quot;&gt;std::string_view&lt;/a&gt;&lt;/code&gt;, a pointer to a null-terminated multibyte string, or an input iterator with char value type that points to a null-terminated multibyte string</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::string&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../../string/basic_string_view&quot;&gt;std::string_view&lt;/a&gt;&lt;/code&gt; в кодировке UTF-8 , указатель на многобайтовую строку с нулевым символом в конце или итератор ввода с типом значения char, указывающим на многобайтовую строку с нулевым символом в конце</target>
        </trans-unit>
        <trans-unit id="d879d1e4b9050e4ddcaaf4d1177df97586b36972" translate="yes" xml:space="preserve">
          <source>a base class subobject, or</source>
          <target state="translated">подобъект базового класса,или</target>
        </trans-unit>
        <trans-unit id="f4918892ac7e83e823a2320d1ac12b97395fb22e" translate="yes" xml:space="preserve">
          <source>a basic stream output function</source>
          <target state="translated">базовая функция вывода потока</target>
        </trans-unit>
        <trans-unit id="b40f7d626aeddea7dd6317df88183469b83e1e8c" translate="yes" xml:space="preserve">
          <source>a basic_ostream of the same type to swap with</source>
          <target state="translated">basic_ostream того же типа для обмена на</target>
        </trans-unit>
        <trans-unit id="7bf28d638858caf4f712e1c44d5c9646f9188b75" translate="yes" xml:space="preserve">
          <source>a basic_string used as a source used to initialize the regex</source>
          <target state="translated">строка basic_string,используемая в качестве источника для инициализации регекса</target>
        </trans-unit>
        <trans-unit id="6e9b8e3d4e8d4b69f9fcb8e7bf96871b00610a3b" translate="yes" xml:space="preserve">
          <source>a bitmask value of type &lt;code&gt;category&lt;/code&gt; indicating the collate facet category</source>
          <target state="translated">значение битовой маски &lt;code&gt;category&lt;/code&gt; типа, указывающее категорию аспекта сопоставления</target>
        </trans-unit>
        <trans-unit id="9f85b8ca8bc6020d25703e2cd3d781082f967763" translate="yes" xml:space="preserve">
          <source>a bitmask value of type &lt;code&gt;category&lt;/code&gt; indicating the ctype facet category</source>
          <target state="translated">значение битовой маски &lt;code&gt;category&lt;/code&gt; типа, указывающее категорию фасета ctype</target>
        </trans-unit>
        <trans-unit id="a9222a22156a69a4cc22429a74768f81e03c8001" translate="yes" xml:space="preserve">
          <source>a bitmask value of type &lt;code&gt;category&lt;/code&gt; indicating the messages facet category</source>
          <target state="translated">значение битовой маски &lt;code&gt;category&lt;/code&gt; типа, указывающее категорию фасета сообщения</target>
        </trans-unit>
        <trans-unit id="952a4bcb614afbf75d9c9379f3e6fad36cbc2407" translate="yes" xml:space="preserve">
          <source>a bitmask value of type &lt;code&gt;category&lt;/code&gt; indicating the monetary facet category</source>
          <target state="translated">значение битовой маски типа type, указывающее &lt;code&gt;category&lt;/code&gt; денежного фасета</target>
        </trans-unit>
        <trans-unit id="a321349b7f9b76dc26dc645283a6f6c0d3935161" translate="yes" xml:space="preserve">
          <source>a bitmask value of type &lt;code&gt;category&lt;/code&gt; indicating the numeric facet category</source>
          <target state="translated">значение битовой маски типа &lt;code&gt;category&lt;/code&gt; указывающее числовую категорию фасетов</target>
        </trans-unit>
        <trans-unit id="b2849fb686ecb1e5989a880cd4bb3d2e85d8c6f8" translate="yes" xml:space="preserve">
          <source>a bitmask value of type &lt;code&gt;category&lt;/code&gt; indicating the time facet category</source>
          <target state="translated">значение битовой маски &lt;code&gt;category&lt;/code&gt; типа, указывающее категорию временного аспекта</target>
        </trans-unit>
        <trans-unit id="5378f3a4e98f36da8d1cc7ac9fde2e0f766b8ce0" translate="yes" xml:space="preserve">
          <source>a block special file</source>
          <target state="translated">специальный файл блока</target>
        </trans-unit>
        <trans-unit id="31510aaf6cad0411c7217a1f61ae7d5e0d11e988" translate="yes" xml:space="preserve">
          <source>a callable object used to determine equality</source>
          <target state="translated">вызываемый объект,используемый для определения равенства</target>
        </trans-unit>
        <trans-unit id="16cbd5bc356bd1da4d6938d770e5e05cf23f18f0" translate="yes" xml:space="preserve">
          <source>a callable object used to hash the elements of the string</source>
          <target state="translated">вызываемый объект,используемый для хэширования элементов строки</target>
        </trans-unit>
        <trans-unit id="e104c12ef41e3cdab35da94692fcec6545e90e82" translate="yes" xml:space="preserve">
          <source>a callable to initialize the</source>
          <target state="translated">вызываемый для инициализации</target>
        </trans-unit>
        <trans-unit id="a43b347761e3e1642f174ca5ec98e18e3c558b21" translate="yes" xml:space="preserve">
          <source>a callable used to initialize &lt;code&gt;*this&lt;/code&gt;</source>
          <target state="translated">вызываемый используется для инициализации &lt;code&gt;*this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc6aead76d9ee30f0a5c5d4684ed174e264c2836" translate="yes" xml:space="preserve">
          <source>a cast expression to lvalue reference type, such as &lt;code&gt;static_cast&amp;lt;int&amp;amp;&amp;gt;(x)&lt;/code&gt;;</source>
          <target state="translated">выражение приведения к типу ссылки lvalue, например &lt;code&gt;static_cast&amp;lt;int&amp;amp;&amp;gt;(x)&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="9115722d18c29f111bc7117bd95ced839664bc51" translate="yes" xml:space="preserve">
          <source>a cast expression to non-reference type, such as &lt;code&gt;static_cast&amp;lt;double&amp;gt;(x)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt;{}&lt;/code&gt;, or &lt;code&gt;(int)42&lt;/code&gt;;</source>
          <target state="translated">приведение выражения к не ссылочному типу, такому как &lt;code&gt;static_cast&amp;lt;double&amp;gt;(x)&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt;{}&lt;/code&gt; или &lt;code&gt;(int)42&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="e763fd172d6152f43975ef5910f0aa8ba9d50062" translate="yes" xml:space="preserve">
          <source>a cast expression to rvalue reference to function type, such as &lt;code&gt;static_cast&amp;lt;void (&amp;amp;&amp;amp;)(int)&amp;gt;(x)&lt;/code&gt;.</source>
          <target state="translated">приведенное выражение для rvalue ссылки на тип функции, например &lt;code&gt;static_cast&amp;lt;void (&amp;amp;&amp;amp;)(int)&amp;gt;(x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be2abbbe2e0dfe771f0371f123450bb9bd07c9bb" translate="yes" xml:space="preserve">
          <source>a cast expression to rvalue reference to object type, such as &lt;code&gt;static_cast&amp;lt;char&amp;amp;&amp;amp;&amp;gt;(x)&lt;/code&gt;;</source>
          <target state="translated">приведенное выражение для rvalue ссылки на тип объекта, например &lt;code&gt;static_cast&amp;lt;char&amp;amp;&amp;amp;&amp;gt;(x)&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="53484ba10b1e424e0b9496d35157e69373bf554a" translate="yes" xml:space="preserve">
          <source>a character from the source character set minus single-quote (&lt;code&gt;'&lt;/code&gt;), backslash (&lt;code&gt;\&lt;/code&gt;), or the newline character,</source>
          <target state="translated">символ из исходного набора символов минус одинарные кавычки ( &lt;code&gt;'&lt;/code&gt; ), обратный слеш ( &lt;code&gt;\&lt;/code&gt; ) или символ новой строки,</target>
        </trans-unit>
        <trans-unit id="242427c6b2eafcaf248ee1b9d7c883407593539a" translate="yes" xml:space="preserve">
          <source>a character input stream</source>
          <target state="translated">поток ввода символов</target>
        </trans-unit>
        <trans-unit id="0efbbee14797deed6a7056276c65b5e154453b0a" translate="yes" xml:space="preserve">
          <source>a character output stream</source>
          <target state="translated">поток вывода символов</target>
        </trans-unit>
        <trans-unit id="70a6bbc7a457f3e06d375719052224054e262911" translate="yes" xml:space="preserve">
          <source>a character range to use</source>
          <target state="translated">диапазон символов</target>
        </trans-unit>
        <trans-unit id="f1cf02ceb7cec86411208ea818ed5141785e1a23" translate="yes" xml:space="preserve">
          <source>a character range to use, represented as &lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::string&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../../string/basic_string_view&quot;&gt;std::string_view&lt;/a&gt;&lt;/code&gt;, pointer to a null-terminated multibyte string, or as an input iterator with char value type that points to a null-terminated multibyte string</source>
          <target state="translated">диапазон символов для использования, представленный как &lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::string&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../../string/basic_string_view&quot;&gt;std::string_view&lt;/a&gt;&lt;/code&gt; , указатель на многобайтовую строку с нулевым символом в конце или как итератор ввода с типом значения char, указывающим на многобайтовую строку с нулевым символом в конце</target>
        </trans-unit>
        <trans-unit id="1736d8d35a09815a4736564ec0af7bbafefb5389" translate="yes" xml:space="preserve">
          <source>a character sequence or a single character to compare to the end of the string</source>
          <target state="translated">последовательность символов или один символ для сравнения с концом строки</target>
        </trans-unit>
        <trans-unit id="eb17e0910a8a3e8109807493a04ca35e79111c97" translate="yes" xml:space="preserve">
          <source>a character sequence or a single character to compare to the end of the string view</source>
          <target state="translated">последовательность символов или один символ для сравнения с концом строкового представления</target>
        </trans-unit>
        <trans-unit id="792cac041ed6c9d94e7546b52a466c7057d1833f" translate="yes" xml:space="preserve">
          <source>a character sequence or a single character to compare to the start of the string</source>
          <target state="translated">последовательность символов или один символ для сравнения с началом строки</target>
        </trans-unit>
        <trans-unit id="cf6ca109dc96019eacef9105cfc32c6bb8adf9f3" translate="yes" xml:space="preserve">
          <source>a character sequence or a single character to compare to the start of the string view</source>
          <target state="translated">последовательность символов или один символ для сравнения с началом представления строки</target>
        </trans-unit>
        <trans-unit id="a36ddc3729dac1840b73df74f47d5b5381de7021" translate="yes" xml:space="preserve">
          <source>a character special file</source>
          <target state="translated">файл со специальными символами</target>
        </trans-unit>
        <trans-unit id="a5250d7e3929a03629a280317471b3d3c146b682" translate="yes" xml:space="preserve">
          <source>a class type (&lt;code&gt;class&lt;/code&gt; or &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;union&lt;/code&gt;) that:</source>
          <target state="translated">тип класса ( &lt;code&gt;class&lt;/code&gt; или &lt;code&gt;struct&lt;/code&gt; или &lt;code&gt;union&lt;/code&gt; ), который:</target>
        </trans-unit>
        <trans-unit id="f075c0a2aeaae5daa8fce7ca9d846ae302099ae2" translate="yes" xml:space="preserve">
          <source>a class type that contains allocation information</source>
          <target state="translated">тип класса,содержащий информацию о распределении</target>
        </trans-unit>
        <trans-unit id="691a4be3772ad8ef069a61765f06c1d8bc2961d8" translate="yes" xml:space="preserve">
          <source>a class/function/variable template</source>
          <target state="translated">шаблон класса/функции/переменной</target>
        </trans-unit>
        <trans-unit id="8af3fd16bec574be1984ea9e734c9bf45f25959e" translate="yes" xml:space="preserve">
          <source>a comma-separated list of parameters like in a function declaration, except that default arguments are not allowed and it cannot end with an ellipsis (other than one signifying a pack expansion). These parameters have no storage, linkage or lifetime, and are only used to assist in specifying requirements. These parameters are in scope until the closing &lt;code&gt;} &lt;/code&gt; of the requirement-seq.</source>
          <target state="translated">список параметров, разделенных запятыми, как в объявлении функции, за исключением того, что аргументы по умолчанию недопустимы и не могут заканчиваться многоточием (кроме одного, обозначающего расширение пакета). Эти параметры не имеют хранения, связи или срока службы и используются только для определения требований. Эти параметры находятся в области действия до закрытия &lt;code&gt;} &lt;/code&gt; require-seq.</target>
        </trans-unit>
        <trans-unit id="f11728936e3c6825ff0c40fb8190cad46110b798" translate="yes" xml:space="preserve">
          <source>a comma-separated list of zero or more &lt;a href=&quot;lambda#Lambda_capture&quot;&gt;captures&lt;/a&gt;, optionally beginning with a capture-default.</source>
          <target state="translated">разделенный запятыми список от нуля или более &lt;a href=&quot;lambda#Lambda_capture&quot;&gt;перехватов&lt;/a&gt; , опционально начинающихся с перехвата по умолчанию.</target>
        </trans-unit>
        <trans-unit id="34fd2e1333d218ba0d65569377b79829eed062f3" translate="yes" xml:space="preserve">
          <source>a compatible &lt;a href=&quot;../node_handle&quot;&gt;node handle&lt;/a&gt;</source>
          <target state="translated">совместимый &lt;a href=&quot;../node_handle&quot;&gt;дескриптор узла&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12cf74b9d504b7de17cb8733f3089bb0c746c26c" translate="yes" xml:space="preserve">
          <source>a complex number determined by &lt;code&gt;r&lt;/code&gt; and &lt;code&gt;theta&lt;/code&gt;.</source>
          <target state="translated">комплексное число, определяемое &lt;code&gt;r&lt;/code&gt; и &lt;code&gt;theta&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="832f4c5d564988716ce6fc985261dbaeef18716f" translate="yes" xml:space="preserve">
          <source>a complex number type</source>
          <target state="translated">тип комплексного номера</target>
        </trans-unit>
        <trans-unit id="87f7888775f37c05d22b86f373fe58cc238751cb" translate="yes" xml:space="preserve">
          <source>a complex or scalar value of matching type (&lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;long double&lt;/code&gt;)</source>
          <target state="translated">комплексное или скалярное значение соответствующего типа ( &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;long double&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b420ae5c7d6bcd895849ec43707c9cd9b5295f2a" translate="yes" xml:space="preserve">
          <source>a compound type constructed from a dependent type</source>
          <target state="translated">составной тип,построенный из зависимого типа</target>
        </trans-unit>
        <trans-unit id="3e10ceabf9c0862a21d4c968a88d28cf606e6ae4" translate="yes" xml:space="preserve">
          <source>a concept (&lt;a href=&quot;constraints&quot;&gt;constraints and concepts&lt;/a&gt;) (since C++20)</source>
          <target state="translated">концепция ( &lt;a href=&quot;constraints&quot;&gt;ограничения и концепции&lt;/a&gt; ) (начиная с C ++ 20)</target>
        </trans-unit>
        <trans-unit id="705840ece91c45959e8d8b85562f78f90621fb91" translate="yes" xml:space="preserve">
          <source>a constant &lt;a href=&quot;../named_req/bidirectionaliterator&quot;&gt;LegacyBidirectionalIterator&lt;/a&gt; with a &lt;code&gt;value_type&lt;/code&gt; of &lt;code&gt;path&lt;/code&gt;, except that for dereferenceable iterators &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; of type &lt;code&gt;path::iterator&lt;/code&gt; with &lt;code&gt;a == b&lt;/code&gt;, there is no requirement that &lt;code&gt;*a&lt;/code&gt; and &lt;code&gt;*b&lt;/code&gt; are bound to the same object</source>
          <target state="translated">константа &lt;a href=&quot;../named_req/bidirectionaliterator&quot;&gt;LegacyBidirectionalIterator&lt;/a&gt; с &lt;code&gt;value_type&lt;/code&gt; по &lt;code&gt;path&lt;/code&gt; , за исключением того, что для разыменовываемых итераторов и &lt;code&gt;b&lt;/code&gt; типа &lt;code&gt;path::iterator&lt;/code&gt; с &lt;code&gt;a == b&lt;/code&gt; , не существует требования , чтобы &lt;code&gt;*a&lt;/code&gt; и &lt;code&gt;*b&lt;/code&gt; связаны с тем же объектом &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0861d8f96c22cf00ddd38be06d579dc5846fa4bb" translate="yes" xml:space="preserve">
          <source>a constant expression of the same type as the type of condition after conversions and &lt;a href=&quot;implicit_cast&quot;&gt;integral promotions&lt;/a&gt;</source>
          <target state="translated">постоянное выражение того же типа, что и тип условия после преобразований и &lt;a href=&quot;implicit_cast&quot;&gt;интегральных повышений&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa1e013cc131d9284341359f6bccff749d73ab2d" translate="yes" xml:space="preserve">
          <source>a constant of type &lt;code&gt;&lt;a href=&quot;codecvt_mode&quot;&gt;std::codecvt_mode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">константа типа &lt;code&gt;&lt;a href=&quot;codecvt_mode&quot;&gt;std::codecvt_mode&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2092e802512bd4b6672ffecf3059eab3c2dc675a" translate="yes" xml:space="preserve">
          <source>a constant of type &lt;code&gt;size_t&lt;/code&gt; signifying that the &lt;code&gt;span&lt;/code&gt; has dynamic extent</source>
          <target state="translated">константа типа &lt;code&gt;size_t&lt;/code&gt; , означающая, что &lt;code&gt;span&lt;/code&gt; имеет динамический экстент</target>
        </trans-unit>
        <trans-unit id="43883e62b71e2ce20764378f921e1463f7c5e2fb" translate="yes" xml:space="preserve">
          <source>a constructor for a base or member that the implicit definition of the constructor would call is</source>
          <target state="translated">конструктор для базы или члена,который неявное определение конструктора будет вызывать следующим образом</target>
        </trans-unit>
        <trans-unit id="1e0e47bbea0419696dda53a2c740d527152ed34a" translate="yes" xml:space="preserve">
          <source>a container (such as &lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;) of non-recursive &lt;a href=&quot;directory_iterator&quot;&gt;&lt;code&gt;directory_iterator&lt;/code&gt;s&lt;/a&gt; that forms the recursion stack</source>
          <target state="translated">контейнер (такой как &lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt; ) нерекурсивных &lt;a href=&quot;directory_iterator&quot;&gt; &lt;code&gt;directory_iterator&lt;/code&gt; s,&lt;/a&gt; который формирует стек рекурсии</target>
        </trans-unit>
        <trans-unit id="6da0ef251a56bef0d297d95fb6f03dcddc9d4d68" translate="yes" xml:space="preserve">
          <source>a container with a &lt;code&gt;begin&lt;/code&gt; method</source>
          <target state="translated">контейнер с методом &lt;code&gt;begin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ab7db750fffecfbea2fd7f3a1826d7a47ff6dfd" translate="yes" xml:space="preserve">
          <source>a container with a &lt;code&gt;data()&lt;/code&gt; method</source>
          <target state="translated">контейнер с методом &lt;code&gt;data()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d42aaf6f8dfa2ceb1302ac9a7aae99e65ad76dd7" translate="yes" xml:space="preserve">
          <source>a container with a &lt;code&gt;rbegin&lt;/code&gt; method</source>
          <target state="translated">контейнер с методом &lt;code&gt;rbegin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a255f3578bec602079f216affbbb6421964db15" translate="yes" xml:space="preserve">
          <source>a container with a &lt;code&gt;rend&lt;/code&gt; method</source>
          <target state="translated">контейнер с методом &lt;code&gt;rend&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d76e199c3451be874b54d52909a700c365bc58d9" translate="yes" xml:space="preserve">
          <source>a container with a &lt;code&gt;size&lt;/code&gt; method</source>
          <target state="translated">контейнер с &lt;code&gt;size&lt;/code&gt; метода</target>
        </trans-unit>
        <trans-unit id="5936962ad861e75e91156317d373da013aa2a18b" translate="yes" xml:space="preserve">
          <source>a container with an &lt;code&gt;empty&lt;/code&gt; method</source>
          <target state="translated">контейнер с &lt;code&gt;empty&lt;/code&gt; методом</target>
        </trans-unit>
        <trans-unit id="8eecf2dba113b51a014b2681b5af4fc06cf180a3" translate="yes" xml:space="preserve">
          <source>a container with an &lt;code&gt;end&lt;/code&gt; method</source>
          <target state="translated">контейнер с &lt;code&gt;end&lt;/code&gt; методом</target>
        </trans-unit>
        <trans-unit id="32ae34e0c2ff3b97cd9427b79233b671fd97c530" translate="yes" xml:space="preserve">
          <source>a copy of the base() iterator</source>
          <target state="translated">копия итератора base()</target>
        </trans-unit>
        <trans-unit id="7332ce803122087bfbb9401270891b4faedd3f1f" translate="yes" xml:space="preserve">
          <source>a copy of the base() iterator, the name is for exposition only</source>
          <target state="translated">копия итератора base(),имя предназначено только для экспозиции.</target>
        </trans-unit>
        <trans-unit id="311bf83f22bc4bb383f24fd37ba3cb18d0aeb36d" translate="yes" xml:space="preserve">
          <source>a copy of the value returned by &lt;code&gt;&lt;a href=&quot;../../locale/locale&quot;&gt;std::locale&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">копия значения, возвращаемого &lt;code&gt;&lt;a href=&quot;../../locale/locale&quot;&gt;std::locale&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f958f7a6a78be01a6805b5c1af1d682eeb8a134" translate="yes" xml:space="preserve">
          <source>a cv-qualified version of a dependent type</source>
          <target state="translated">cv-квалифицированный вариант зависимого типа</target>
        </trans-unit>
        <trans-unit id="fc96c9e2930591a8d0a0e1f5aef8a747ab1ae764" translate="yes" xml:space="preserve">
          <source>a declaration</source>
          <target state="translated">заявление</target>
        </trans-unit>
        <trans-unit id="de382bf6f6303f1d66d3ee9fa105e4cb909ae0fb" translate="yes" xml:space="preserve">
          <source>a default member initializer (for default constructor only) is</source>
          <target state="translated">инициализатором члена по умолчанию (только для конструктора по умолчанию)является</target>
        </trans-unit>
        <trans-unit id="c35c5385471cf8ca008de727f3a8bb03a39d8fc4" translate="yes" xml:space="preserve">
          <source>a default-constructed &lt;code&gt;path()&lt;/code&gt; followed by</source>
          <target state="translated">созданный по умолчанию &lt;code&gt;path()&lt;/code&gt; за которым следует</target>
        </trans-unit>
        <trans-unit id="3720dd36cc49fe927d2449b3b2fe294001d00344" translate="yes" xml:space="preserve">
          <source>a definition of a variable for which &lt;a href=&quot;default_initialization&quot;&gt;no initialization is performed&lt;/a&gt;.</source>
          <target state="translated">определение переменной, для которой &lt;a href=&quot;default_initialization&quot;&gt;не выполняется инициализация&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8574bc2dee7611873d6999d1419b5b65057eda6e" translate="yes" xml:space="preserve">
          <source>a definition of a variable of non-literal type</source>
          <target state="translated">определение переменной нелитературного типа</target>
        </trans-unit>
        <trans-unit id="bf8e57bf98d46c7f4282d67c960acf8da327fef4" translate="yes" xml:space="preserve">
          <source>a definition of a variable of static or thread &lt;a href=&quot;storage_duration&quot;&gt;storage duration&lt;/a&gt;</source>
          <target state="translated">определение переменной статической или &lt;a href=&quot;storage_duration&quot;&gt;длительности хранения&lt;/a&gt; потока</target>
        </trans-unit>
        <trans-unit id="39cd8bcb29b6ae12a4df802c4fe0c9397f3f8893" translate="yes" xml:space="preserve">
          <source>a deleter to copy from</source>
          <target state="translated">удаление для копирования с</target>
        </trans-unit>
        <trans-unit id="94a71c43d37808b7131ebf1bfafb843815bd7985" translate="yes" xml:space="preserve">
          <source>a deleter to use to destroy the object</source>
          <target state="translated">удалитель для использования с целью уничтожения объекта</target>
        </trans-unit>
        <trans-unit id="24ff51d02f7ddaf5794e2da95d7baf8bf41c271f" translate="yes" xml:space="preserve">
          <source>a deterministic &lt;a href=&quot;named_req/uniformrandombitgenerator&quot;&gt;UniformRandomBitGenerator&lt;/a&gt;, defined by the seed</source>
          <target state="translated">детерминированный &lt;a href=&quot;named_req/uniformrandombitgenerator&quot;&gt;UniformRandomBitGenerator&lt;/a&gt; , определяемый начальным числом</target>
        </trans-unit>
        <trans-unit id="534eb8b60097429551e576498f52d179c2f4e5dd" translate="yes" xml:space="preserve">
          <source>a directory</source>
          <target state="translated">каталог</target>
        </trans-unit>
        <trans-unit id="8bddca722adcb261998df0de3bb3c97a6c748832" translate="yes" xml:space="preserve">
          <source>a directory entry</source>
          <target state="translated">запись каталога</target>
        </trans-unit>
        <trans-unit id="927fd0565fdd62ffef9d7df984e6c6f5ed72f85d" translate="yes" xml:space="preserve">
          <source>a directory_iterator</source>
          <target state="translated">каталог_iterator</target>
        </trans-unit>
        <trans-unit id="867723c6d0ee2b6557184f124ed60f12f45d1dd0" translate="yes" xml:space="preserve">
          <source>a discarded-value expression.</source>
          <target state="translated">отбракованное ценностное выражение.</target>
        </trans-unit>
        <trans-unit id="336c91ab3bd545d36262022c4abcf1ea256c10d5" translate="yes" xml:space="preserve">
          <source>a disjunctive clause subsumes a conjunctive clause if and only if there is an atomic constraint &lt;code&gt;U&lt;/code&gt; in the disjunctive clause and an atomic constraint &lt;code&gt;V&lt;/code&gt; in the conjunctive clause such that &lt;code&gt;U&lt;/code&gt; subsumes &lt;code&gt;V&lt;/code&gt;;</source>
          <target state="translated">дизъюнктивное предложение относится к конъюнктивному предложению тогда и только тогда, когда в дизъюнктивном предложении есть атомное ограничение &lt;code&gt;U&lt;/code&gt; и атомарное ограничение &lt;code&gt;V&lt;/code&gt; в конъюнктивном предложении, так что &lt;code&gt;U&lt;/code&gt; включает &lt;code&gt;V&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="6b5747ff852acba8c48d1a6cb5da34fc9e296730" translate="yes" xml:space="preserve">
          <source>a duration to copy from</source>
          <target state="translated">продолжительность копирования с</target>
        </trans-unit>
        <trans-unit id="c350a90cf1671cc555d57758875af84ffdbe33a9" translate="yes" xml:space="preserve">
          <source>a family of classes (&lt;a href=&quot;class_template&quot;&gt;class template&lt;/a&gt;), which may be &lt;a href=&quot;member_template&quot;&gt;nested classes&lt;/a&gt;</source>
          <target state="translated">семейство классов ( &lt;a href=&quot;class_template&quot;&gt;шаблон класса&lt;/a&gt; ), в которое могут быть &lt;a href=&quot;member_template&quot;&gt;вложенные классы&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ac66b538aae3ff5b2eebbb9164d6b15968c2655" translate="yes" xml:space="preserve">
          <source>a family of functions (&lt;a href=&quot;function_template&quot;&gt;function template&lt;/a&gt;), which may be &lt;a href=&quot;member_template&quot;&gt;member functions&lt;/a&gt;</source>
          <target state="translated">семейство функций ( &lt;a href=&quot;function_template&quot;&gt;шаблон функции&lt;/a&gt; ), которые могут быть &lt;a href=&quot;member_template&quot;&gt;функциями-членами&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b225fab8be27928cedcf387d1202d942115cf6f7" translate="yes" xml:space="preserve">
          <source>a family of variables (&lt;a href=&quot;variable_template&quot;&gt;variable template&lt;/a&gt;) (since C++14)</source>
          <target state="translated">семейство переменных ( &lt;a href=&quot;variable_template&quot;&gt;шаблон переменной&lt;/a&gt; ) (начиная с C ++ 14)</target>
        </trans-unit>
        <trans-unit id="fa031b408b61feecac632070eb11680ef7afef0a" translate="yes" xml:space="preserve">
          <source>a function call expression that calls a function (or a constructor) that is not declared &lt;a href=&quot;constexpr&quot;&gt;constexpr&lt;/a&gt;</source>
          <target state="translated">выражение вызова функции, которое вызывает функцию (или конструктор), которая не объявлена &lt;a href=&quot;constexpr&quot;&gt;constexpr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1cc0ab25d190ee32f3fbd65c276911c0bf316acb" translate="yes" xml:space="preserve">
          <source>a function call or an overloaded operator expression, whose return type is lvalue reference, such as &lt;code&gt;&lt;a href=&quot;../string/basic_string/getline&quot;&gt;std::getline&lt;/a&gt;(&lt;a href=&quot;../io/cin&quot;&gt;std::cin&lt;/a&gt;, str)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../io/cout&quot;&gt;std::cout&lt;/a&gt; &amp;lt;&amp;lt; 1&lt;/code&gt;, &lt;code&gt;str1 = str2&lt;/code&gt;, or &lt;code&gt;++it&lt;/code&gt;;</source>
          <target state="translated">вызов функции или перегруженное выражение оператора, тип возвращаемого значения которого является ссылкой на lvalue, например &lt;code&gt;&lt;a href=&quot;../string/basic_string/getline&quot;&gt;std::getline&lt;/a&gt;(&lt;a href=&quot;../io/cin&quot;&gt;std::cin&lt;/a&gt;, str)&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../io/cout&quot;&gt;std::cout&lt;/a&gt; &amp;lt;&amp;lt; 1&lt;/code&gt; , &lt;code&gt;str1 = str2&lt;/code&gt; или &lt;code&gt;++it&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="fe3271b2a2bdf8654d96145285508cb27eb7fa3c" translate="yes" xml:space="preserve">
          <source>a function call or an overloaded operator expression, whose return type is non-reference, such as &lt;code&gt;str.substr(1, 2)&lt;/code&gt;, &lt;code&gt;str1 + str2&lt;/code&gt;, or &lt;code&gt;it++&lt;/code&gt;;</source>
          <target state="translated">вызов функции или перегруженное выражение оператора, тип возвращаемого значения которого не является ссылочным, например &lt;code&gt;str.substr(1, 2)&lt;/code&gt; , &lt;code&gt;str1 + str2&lt;/code&gt; или &lt;code&gt;it++&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="0aac9ce8ff230dee25d75b3c0b2e89e1a93af6fb" translate="yes" xml:space="preserve">
          <source>a function call or an overloaded operator expression, whose return type is rvalue reference to function;</source>
          <target state="translated">вызов функции или перегруженное выражение оператора,типом возврата которого является ссылка на функцию по значению rvalue;</target>
        </trans-unit>
        <trans-unit id="06b3616b9a0b9e911ad389bfd163627a7c1c34bc" translate="yes" xml:space="preserve">
          <source>a function call or an overloaded operator expression, whose return type is rvalue reference to object, such as &lt;code&gt;std::move(x)&lt;/code&gt;;</source>
          <target state="translated">вызов функции или перегруженное выражение оператора, тип возвращаемого значения которого является rvalue ссылкой на объект, такой как &lt;code&gt;std::move(x)&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="89282f06fce2e206dcc5d91b9a98ea7c21e34204" translate="yes" xml:space="preserve">
          <source>a function call to a &lt;code&gt;constexpr&lt;/code&gt; function which is declared, but not defined</source>
          <target state="translated">вызов функции для функции &lt;code&gt;constexpr&lt;/code&gt; , которая объявлена, но не определена</target>
        </trans-unit>
        <trans-unit id="10915ad1ef913f2efda469b6ef4db5fda7260bf8" translate="yes" xml:space="preserve">
          <source>a function call to a &lt;code&gt;constexpr&lt;/code&gt; function/constructor template instantiation where the instantiation fails to satisfy &lt;a href=&quot;constexpr&quot;&gt;constexpr function/constructor&lt;/a&gt; requirements.</source>
          <target state="translated">вызов функции для экземпляра шаблона функции / конструктора &lt;code&gt;constexpr&lt;/code&gt; , где экземпляр не удовлетворяет &lt;a href=&quot;constexpr&quot;&gt;требованиям к функции / конструктору constexpr&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1a1e14620347e6a891947bb343ed08d832b480d5" translate="yes" xml:space="preserve">
          <source>a function object type. The behavior is undefined if its return type is not one of the five comparison category types (strong_equality, weak_equality, strong_ordering, weak_ordering, or partial_ordering)</source>
          <target state="translated">тип объекта функции.Поведение не определено,если возвращаемый тип не является одним из пяти типов категории сравнения (strong_equality,weak_equality,strong_ordering,weak_ordering или partial_ordering).</target>
        </trans-unit>
        <trans-unit id="8d0e3c882e6f573300e1c9692eab26458b8cdc46" translate="yes" xml:space="preserve">
          <source>a function type whose exception specification is value-dependent</source>
          <target state="translated">тип функции,спецификация исключения которой зависит от значения</target>
        </trans-unit>
        <trans-unit id="e47b118e9260ac46b886dbed4343d2d945bd3192" translate="yes" xml:space="preserve">
          <source>a glvalue</source>
          <target state="translated">клейкая ценность</target>
        </trans-unit>
        <trans-unit id="7ba358203ed2199073a8967bad6e8c7ab1203303" translate="yes" xml:space="preserve">
          <source>a glvalue (&amp;ldquo;generalized&amp;rdquo; lvalue) is an expression whose evaluation determines the identity of an object, bit-field, or function;</source>
          <target state="translated">glvalue (&amp;laquo;обобщенное&amp;raquo; lvalue) - это выражение, оценка которого определяет идентичность объекта, битового поля или функции;</target>
        </trans-unit>
        <trans-unit id="1722e15c868333813efd4b104be814668519a817" translate="yes" xml:space="preserve">
          <source>a is dereferenceable</source>
          <target state="translated">безотносительный</target>
        </trans-unit>
        <trans-unit id="af85be30541cf3c1cc1786357554bba31960be49" translate="yes" xml:space="preserve">
          <source>a is the &lt;a href=&quot;https://en.wikipedia.org/wiki/shape_parameter&quot;&gt;shape parameter&lt;/a&gt; and b the &lt;a href=&quot;https://en.wikipedia.org/wiki/scale_parameter&quot;&gt;scale parameter&lt;/a&gt;.</source>
          <target state="translated">a - &lt;a href=&quot;https://en.wikipedia.org/wiki/shape_parameter&quot;&gt;параметр формы,&lt;/a&gt; а b - &lt;a href=&quot;https://en.wikipedia.org/wiki/scale_parameter&quot;&gt;параметр масштаба&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b49bd9a9dd26bfb24d2da2f9f77f66b3d4c1c288" translate="yes" xml:space="preserve">
          <source>a key to identify the node to be extracted</source>
          <target state="translated">ключ для идентификации узла,который нужно извлечь.</target>
        </trans-unit>
        <trans-unit id="4a149b7b74e6a65a47273f584dd7c7ac232d1fa6" translate="yes" xml:space="preserve">
          <source>a list of C++ Standard Library header files</source>
          <target state="translated">список заголовочных файлов Стандартной библиотеки C++</target>
        </trans-unit>
        <trans-unit id="2e8782b3de9ae3f2417bd220b13bb2753cc1f4be" translate="yes" xml:space="preserve">
          <source>a locale object that provides additional facets that may be required to read messages from the catalog, such as &lt;code&gt;&lt;a href=&quot;../codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt; to perform wide/multibyte conversions</source>
          <target state="translated">объект языкового стандарта, который предоставляет дополнительные аспекты, которые могут потребоваться для чтения сообщений из каталога, например &lt;code&gt;&lt;a href=&quot;../codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt; для выполнения широких / многобайтовых преобразований</target>
        </trans-unit>
        <trans-unit id="e9e71868cb3f365476f368f47844d913217a9137" translate="yes" xml:space="preserve">
          <source>a member of a templated entity (such as a non-template member function of a class template)</source>
          <target state="translated">член шаблонного сущности (например,не шаблонный член функции шаблона класса)</target>
        </trans-unit>
        <trans-unit id="9e28839ea32750c08a2fcd8971020b14fc326e0f" translate="yes" xml:space="preserve">
          <source>a member of an</source>
          <target state="translated">член</target>
        </trans-unit>
        <trans-unit id="7dafc3ce0f573b8e84a41347cce43e380ea63de6" translate="yes" xml:space="preserve">
          <source>a mixin type to capture and store current exceptions</source>
          <target state="translated">тип смеси для захвата и хранения текущих исключений.</target>
        </trans-unit>
        <trans-unit id="ba80959166b65a2092d8b1d991eb3e7d2787b4dc" translate="yes" xml:space="preserve">
          <source>a monetary value, either &lt;code&gt;long double&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">денежное значение, &lt;code&gt;long double&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52d85d8357d0050652ab03340eb1701af2b493c4" translate="yes" xml:space="preserve">
          <source>a name of a member in a class member access expression (the &lt;code&gt;y&lt;/code&gt; in &lt;code&gt;x.y&lt;/code&gt; or &lt;code&gt;xp-&amp;gt;y&lt;/code&gt;), if the type of the object expression (&lt;code&gt;x&lt;/code&gt; or &lt;code&gt;*xp&lt;/code&gt;) is a</source>
          <target state="translated">имя члена в выражении доступа к члену класса ( &lt;code&gt;y&lt;/code&gt; в &lt;code&gt;x.y&lt;/code&gt; или &lt;code&gt;xp-&amp;gt;y&lt;/code&gt; ), если тип выражения объекта ( &lt;code&gt;x&lt;/code&gt; или &lt;code&gt;*xp&lt;/code&gt; ) является</target>
        </trans-unit>
        <trans-unit id="ccc2f025564c04637d56eb7e1c1db450237cc2bc" translate="yes" xml:space="preserve">
          <source>a name of a member in a class member access expression (the &lt;code&gt;y&lt;/code&gt; in &lt;code&gt;x.y&lt;/code&gt; or &lt;code&gt;xp-&amp;gt;y&lt;/code&gt;), if the type of the object expression (&lt;code&gt;x&lt;/code&gt; or &lt;code&gt;*xp&lt;/code&gt;) is the</source>
          <target state="translated">имя члена в выражении доступа к члену класса ( &lt;code&gt;y&lt;/code&gt; в &lt;code&gt;x.y&lt;/code&gt; или &lt;code&gt;xp-&amp;gt;y&lt;/code&gt; ), если тип выражения объекта ( &lt;code&gt;x&lt;/code&gt; или &lt;code&gt;*xp&lt;/code&gt; ) является</target>
        </trans-unit>
        <trans-unit id="f7fec02bc24240c6336e648373dca10e3f1cd110" translate="yes" xml:space="preserve">
          <source>a name of a namespace. When looking up this name, &lt;a href=&quot;lookup&quot;&gt;lookup&lt;/a&gt; considers namespace declarations only</source>
          <target state="translated">имя пространства имен. При поиске этого имени, &lt;a href=&quot;lookup&quot;&gt;поиск&lt;/a&gt; учитывает только объявления пространства имен</target>
        </trans-unit>
        <trans-unit id="f2b60882ea5e865333ab32e7038bdef32efd7376" translate="yes" xml:space="preserve">
          <source>a name used in a class member access expression (&lt;code&gt;y&lt;/code&gt; in &lt;code&gt;x.y&lt;/code&gt; or &lt;code&gt;xp-&amp;gt;y&lt;/code&gt;), where the object expression (&lt;code&gt;x&lt;/code&gt; or &lt;code&gt;*xp&lt;/code&gt;) is the current instantiation and lookup finds the name in the current instantiation or in its non-dependent base</source>
          <target state="translated">имя, используемое в выражении доступа к члену класса ( &lt;code&gt;y&lt;/code&gt; в &lt;code&gt;x.y&lt;/code&gt; или &lt;code&gt;xp-&amp;gt;y&lt;/code&gt; ), где выражение объекта ( &lt;code&gt;x&lt;/code&gt; или &lt;code&gt;*xp&lt;/code&gt; ) является текущим экземпляром, а поиск находит имя в текущем экземпляре или в его независимой базе</target>
        </trans-unit>
        <trans-unit id="64c9a82dbc22eb48eb675b3701b9f16dc6fb33b5" translate="yes" xml:space="preserve">
          <source>a nested class has the same access as the enclosing class</source>
          <target state="translated">вложенный класс имеет такой же доступ,как и вложенный класс.</target>
        </trans-unit>
        <trans-unit id="fe001c43317d1caf882ae52178a7f54675e62e41" translate="yes" xml:space="preserve">
          <source>a nested class, a member of class template, a member of a nested class, the injected-class-name of the template, the injected-class-name of a nested class</source>
          <target state="translated">вложенный класс,член шаблона класса,член вложенного класса,имя инжектируемого класса шаблона,имя инжектируемого класса во вложенном классе</target>
        </trans-unit>
        <trans-unit id="540d2493abe6a42b078ac5d86144b04f3f12a771" translate="yes" xml:space="preserve">
          <source>a nested class/enum that is a dependent member of</source>
          <target state="translated">вложенный класс/группа,являющийся зависимым членом</target>
        </trans-unit>
        <trans-unit id="545d99d1454f0207b81b1bc7be52eccdd294e3cc" translate="yes" xml:space="preserve">
          <source>a new element can be added using &lt;code&gt;&lt;a href=&quot;push_heap&quot;&gt;std::push_heap&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">новый элемент может быть добавлен с помощью &lt;code&gt;&lt;a href=&quot;push_heap&quot;&gt;std::push_heap&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="749dfce19c5ac8954c5ede633a28f4a894cd9958" translate="yes" xml:space="preserve">
          <source>a new element can be added using &lt;code&gt;std::push_heap()&lt;/code&gt;</source>
          <target state="translated">новый элемент может быть добавлен с помощью &lt;code&gt;std::push_heap()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f44eb17a21756c348fac70e75744952e031b2322" translate="yes" xml:space="preserve">
          <source>a new thread is launched to execute the task asynchronously</source>
          <target state="translated">запускается новый поток для выполнения задачи асинхронно.</target>
        </trans-unit>
        <trans-unit id="cbb1684f0137f8bce7cee9377801f48c517a480d" translate="yes" xml:space="preserve">
          <source>a new-expression or a delete-expression</source>
          <target state="translated">новое выражение или удаление</target>
        </trans-unit>
        <trans-unit id="3da42c1634834970bc80c6244a53b46732819f21" translate="yes" xml:space="preserve">
          <source>a non-&lt;a href=&quot;consteval&quot;&gt;immediate&lt;/a&gt;(since C++20) function</source>
          <target state="translated">не &lt;a href=&quot;consteval&quot;&gt;немедленная&lt;/a&gt; (начиная с C ++ 20) функция</target>
        </trans-unit>
        <trans-unit id="0504278be6e31ecdf6a05b32909135da1f2b6e21" translate="yes" xml:space="preserve">
          <source>a non-character value of type wint_t used to indicate errors</source>
          <target state="translated">несимвольное значение типа wint_t,используемое для указания ошибок</target>
        </trans-unit>
        <trans-unit id="18c1a4e879cc2341bfa20f35f662761b43d28451" translate="yes" xml:space="preserve">
          <source>a non-empty comma-separated list of the &lt;a href=&quot;template_parameters&quot;&gt;template parameters&lt;/a&gt;, each of which is either &lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;non-type parameter&lt;/a&gt;, a &lt;a href=&quot;template_parameters#Type_template_parameter&quot;&gt;type parameter&lt;/a&gt;, a &lt;a href=&quot;template_parameters#Template_template_parameter&quot;&gt;template parameter&lt;/a&gt;, or a &lt;a href=&quot;parameter_pack&quot;&gt;parameter pack&lt;/a&gt; of any of those.</source>
          <target state="translated">непустой разделенный запятыми список &lt;a href=&quot;template_parameters&quot;&gt;параметров шаблона&lt;/a&gt; , каждый из которых является либо &lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;нетиповым параметром&lt;/a&gt; , либо &lt;a href=&quot;template_parameters#Type_template_parameter&quot;&gt;параметром типа&lt;/a&gt; , либо &lt;a href=&quot;template_parameters#Template_template_parameter&quot;&gt;параметром шаблона&lt;/a&gt; , либо &lt;a href=&quot;parameter_pack&quot;&gt;пакетом параметров&lt;/a&gt; любого из них.</target>
        </trans-unit>
        <trans-unit id="9d4ebfb99ed70e96c02304eef57e908d98001dcd" translate="yes" xml:space="preserve">
          <source>a non-empty comma-separated list of the &lt;a href=&quot;template_parameters&quot;&gt;template parameters&lt;/a&gt;, each of which is either &lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;non-type parameter&lt;/a&gt;, a &lt;a href=&quot;template_parameters#Type_template_parameter&quot;&gt;type parameter&lt;/a&gt;, a &lt;a href=&quot;template_parameters#Template_template_parameter&quot;&gt;template parameter&lt;/a&gt;, or a &lt;a href=&quot;parameter_pack&quot;&gt;parameter pack&lt;/a&gt; of any of those. As with any template, parameters may be &lt;a href=&quot;template_parameters#Constrained_template_parameter&quot;&gt;constrained&lt;/a&gt;(since C++20)</source>
          <target state="translated">непустой разделенный запятыми список &lt;a href=&quot;template_parameters&quot;&gt;параметров шаблона&lt;/a&gt; , каждый из которых является либо &lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;нетиповым параметром&lt;/a&gt; , либо &lt;a href=&quot;template_parameters#Type_template_parameter&quot;&gt;параметром типа&lt;/a&gt; , либо &lt;a href=&quot;template_parameters#Template_template_parameter&quot;&gt;параметром шаблона&lt;/a&gt; , либо &lt;a href=&quot;parameter_pack&quot;&gt;пакетом параметров&lt;/a&gt; любого из них. Как и в любом шаблоне, параметры могут быть &lt;a href=&quot;template_parameters#Constrained_template_parameter&quot;&gt;ограничены&lt;/a&gt; (начиная с C ++ 20)</target>
        </trans-unit>
        <trans-unit id="7df00c8eca7cd2fbea4f0f8f3fd5145439625f83" translate="yes" xml:space="preserve">
          <source>a non-empty comma-separated list of the &lt;a href=&quot;template_parameters&quot;&gt;template parameters&lt;/a&gt;, each of which is either a &lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;non-type parameter&lt;/a&gt;, a &lt;a href=&quot;template_parameters#Type_template_parameter&quot;&gt;type parameter&lt;/a&gt;, a &lt;a href=&quot;template_parameters#Template_template_parameter&quot;&gt;template parameter&lt;/a&gt;, or a &lt;a href=&quot;parameter_pack&quot;&gt;parameter pack&lt;/a&gt; of any of those.</source>
          <target state="translated">непустой разделенный запятыми список &lt;a href=&quot;template_parameters&quot;&gt;параметров шаблона&lt;/a&gt; , каждый из которых является либо &lt;a href=&quot;template_parameters#Non-type_template_parameter&quot;&gt;нетиповым параметром&lt;/a&gt; , либо &lt;a href=&quot;template_parameters#Type_template_parameter&quot;&gt;параметром типа&lt;/a&gt; , либо &lt;a href=&quot;template_parameters#Template_template_parameter&quot;&gt;параметром шаблона&lt;/a&gt; , либо &lt;a href=&quot;parameter_pack&quot;&gt;пакетом параметров&lt;/a&gt; любого из них.</target>
        </trans-unit>
        <trans-unit id="dc2b37fa81072e9b1ee1c89273bcc9953318390f" translate="yes" xml:space="preserve">
          <source>a non-owning view over a contiguous sequence of objects</source>
          <target state="translated">неведомый вид на сопредельную последовательность объектов</target>
        </trans-unit>
        <trans-unit id="461721f9a0ca00bb17ac6e76a814f42d3e1749ad" translate="yes" xml:space="preserve">
          <source>a non-static data member cannot have the same name as the name of the class if at least one user-declared constructor is present;</source>
          <target state="translated">нестатический член данных не может иметь того же имени,что и имя класса,если присутствует хотя бы один заявленный пользователем конструктор;</target>
        </trans-unit>
        <trans-unit id="f37e501675842cf2ce7c09fa70ab5dedc837075c" translate="yes" xml:space="preserve">
          <source>a non-static data member declared with the &lt;code&gt;[[&lt;a href=&quot;attributes/no_unique_address&quot;&gt;no_unique_address&lt;/a&gt;]]&lt;/code&gt; attribute.</source>
          <target state="translated">элемент нестатических данных, объявленный с атрибутом &lt;code&gt;[[&lt;a href=&quot;attributes/no_unique_address&quot;&gt;no_unique_address&lt;/a&gt;]]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8571e5948696fa3a0d7b2c6ae463dee17f772680" translate="yes" xml:space="preserve">
          <source>a non-type parameter pack representing the sequence</source>
          <target state="translated">нетипный пакет параметров,представляющий последовательность</target>
        </trans-unit>
        <trans-unit id="44cc829918d8039aacb098625c56b83243566e33" translate="yes" xml:space="preserve">
          <source>a non-type template parameter;</source>
          <target state="translated">параметр шаблона нестандартного типа;</target>
        </trans-unit>
        <trans-unit id="474020ddb353b3a7c9d5609e0855d065e8423ab6" translate="yes" xml:space="preserve">
          <source>a null pointer value</source>
          <target state="translated">нулевое значение указателя</target>
        </trans-unit>
        <trans-unit id="8fbf373994e28a1e1683fece568f496734931823" translate="yes" xml:space="preserve">
          <source>a null-terminated string representing path to compare to</source>
          <target state="translated">ноль-терминированная строка,представляющая собой путь для сравнения с</target>
        </trans-unit>
        <trans-unit id="c3f358100ff79892ae8c6aa39c12d943832cbb71" translate="yes" xml:space="preserve">
          <source>a numeric array</source>
          <target state="translated">числовой массив</target>
        </trans-unit>
        <trans-unit id="50eebd4a62a63da3379b0f959cb5cac5a605f069" translate="yes" xml:space="preserve">
          <source>a numeric value to convert</source>
          <target state="translated">числовая величина для конвертации</target>
        </trans-unit>
        <trans-unit id="cc05679f204cefd3297a264e8271e75dbb0b32be" translate="yes" xml:space="preserve">
          <source>a pair consisting of an iterator to the smallest element as the first element and an iterator to the greatest element as the second. Returns &lt;code&gt;&lt;a href=&quot;../utility/pair/make_pair&quot;&gt;std::make_pair&lt;/a&gt;(first, first)&lt;/code&gt; if the range is empty. If several elements are equivalent to the smallest element, the iterator to the first such element is returned. If several elements are equivalent to the largest element, the iterator to the last such element is returned.</source>
          <target state="translated">пара, состоящая из итератора для наименьшего элемента в качестве первого элемента и итератора для наибольшего элемента в качестве второго. Возвращает &lt;code&gt;&lt;a href=&quot;../utility/pair/make_pair&quot;&gt;std::make_pair&lt;/a&gt;(first, first)&lt;/code&gt; если диапазон пуст. Если несколько элементов эквивалентны наименьшему элементу, возвращается итератор первого такого элемента. Если несколько элементов эквивалентны наибольшему элементу, возвращается итератор последнего такого элемента.</target>
        </trans-unit>
        <trans-unit id="401666526833d8d067bfb72fb17f04373230d70e" translate="yes" xml:space="preserve">
          <source>a pair of &lt;a href=&quot;../../named_req/forwarditerator&quot;&gt;LegacyForwardIterators&lt;/a&gt; which determines the sequence of characters to compare</source>
          <target state="translated">пара &lt;a href=&quot;../../named_req/forwarditerator&quot;&gt;LegacyForwardIterators,&lt;/a&gt; которая определяет последовательность символов для сравнения</target>
        </trans-unit>
        <trans-unit id="7164733e330d8dc6927dccc306c53f65b665f498" translate="yes" xml:space="preserve">
          <source>a pair of iterators designating the string to be examined</source>
          <target state="translated">пара итераторов,обозначающих исследуемую струну.</target>
        </trans-unit>
        <trans-unit id="bd6130cae2494d09eea176a9eaa187a9c3f7aedc" translate="yes" xml:space="preserve">
          <source>a pair of iterators designating the string to be searched for</source>
          <target state="translated">пара итераторов,обозначающих строку,которую нужно искать.</target>
        </trans-unit>
        <trans-unit id="aa50634d9f567585abe6b3edfc6d15becbf88956" translate="yes" xml:space="preserve">
          <source>a pair of iterators which determines the sequence of characters that represents a collating element name</source>
          <target state="translated">пара итераторов,определяющих последовательность символов,которая представляет собой имя элемента коллекционирования</target>
        </trans-unit>
        <trans-unit id="52e40823682c802e981306e57a0531f74a7ff0d6" translate="yes" xml:space="preserve">
          <source>a pair of iterators which determines the sequence of characters that represents a name of a character class</source>
          <target state="translated">пара итераторов,определяющих последовательность символов,которая представляет собой имя класса символов.</target>
        </trans-unit>
        <trans-unit id="ba476fff70bcd3d883d784d6eec18f9d074be5cd" translate="yes" xml:space="preserve">
          <source>a pair of iterators which determines the sequence of characters to compare</source>
          <target state="translated">пара итераторов,которые определяют последовательность символов для сравнения</target>
        </trans-unit>
        <trans-unit id="f4e4bdbce3a24b56029c1aee2555efccb1289aca" translate="yes" xml:space="preserve">
          <source>a pair whose .first will be passed to the constructor of T's .first and .second will be passed to the constructor of T's .second</source>
          <target state="translated">пара,чей .first будет передан конструктору T's .first,а .second будет передан конструктору T's .second.</target>
        </trans-unit>
        <trans-unit id="9ccf77a4b5560eb0becb3d0bce7233f78e2be5e5" translate="yes" xml:space="preserve">
          <source>a path to assign</source>
          <target state="translated">способ назначения</target>
        </trans-unit>
        <trans-unit id="fdd2615f6015a70bc916b006aa8a8125c89e1932" translate="yes" xml:space="preserve">
          <source>a path to compare to</source>
          <target state="translated">путь в сравнении с</target>
        </trans-unit>
        <trans-unit id="4834456d3b856ca67b42a154fc1d42dd1e9aaf74" translate="yes" xml:space="preserve">
          <source>a path to copy</source>
          <target state="translated">путь копирования</target>
        </trans-unit>
        <trans-unit id="2294ad04d12f4c16c90d68fcca9b3e1b32e7aac8" translate="yes" xml:space="preserve">
          <source>a path which may be absolute or relative; for &lt;code&gt;canonical&lt;/code&gt; it must be an existing path</source>
          <target state="translated">путь, который может быть абсолютным или относительным; для &lt;code&gt;canonical&lt;/code&gt; это должен быть существующий путь</target>
        </trans-unit>
        <trans-unit id="07aee4d7b70106efad51a98cc866d256c5eb24f7" translate="yes" xml:space="preserve">
          <source>a placeholder (&lt;code&gt;auto&lt;/code&gt; or &lt;code&gt;decltype(auto)&lt;/code&gt;(since C++14)) is used in &lt;code&gt;type&lt;/code&gt;</source>
          <target state="translated">заполнитель ( &lt;code&gt;auto&lt;/code&gt; или &lt;code&gt;decltype(auto)&lt;/code&gt; (начиная с C ++ 14)) используется в &lt;code&gt;type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4a0fc97beb6cd4fb9c50affc4f6998de2941e06" translate="yes" xml:space="preserve">
          <source>a placeholder type indicating that an iterator or a &lt;code&gt;subrange&lt;/code&gt; should not be returned since it would be dangling</source>
          <target state="translated">тип заполнителя, указывающий, что итератор или &lt;code&gt;subrange&lt;/code&gt; не должны быть возвращены, так как это может привести к зависанию</target>
        </trans-unit>
        <trans-unit id="193bf0b0d9050bc404b3cdf44245e12794ae8d1c" translate="yes" xml:space="preserve">
          <source>a point in time</source>
          <target state="translated">момент времени</target>
        </trans-unit>
        <trans-unit id="96eb8d1fe4496dccbe007afd457c85b8d8d0f374" translate="yes" xml:space="preserve">
          <source>a pointer of type &lt;code&gt;Container*&lt;/code&gt;</source>
          <target state="translated">указатель типа &lt;code&gt;Container*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f9e2ce233996a34e6002e70673dcd72c40e7824" translate="yes" xml:space="preserve">
          <source>a pointer to</source>
          <target state="translated">указатель на</target>
        </trans-unit>
        <trans-unit id="2ff40e20ebe7a952e5f0e41d5dc0a0d24f856aae" translate="yes" xml:space="preserve">
          <source>a pointer to &lt;code&gt;const&lt;/code&gt; type can be converted to a pointer to &lt;code&gt;const volatile&lt;/code&gt;;</source>
          <target state="translated">указатель на тип &lt;code&gt;const&lt;/code&gt; может быть преобразован в указатель на &lt;code&gt;const volatile&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="aa94b3e75ee0b28536222ee7e71f66f004a35b00" translate="yes" xml:space="preserve">
          <source>a pointer to &lt;code&gt;volatile&lt;/code&gt; type can be converted to a pointer to &lt;code&gt;const volatile&lt;/code&gt;.</source>
          <target state="translated">указатель на тип &lt;code&gt;volatile&lt;/code&gt; может быть преобразован в указатель на &lt;code&gt;const volatile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5806dbd5cc714f5d22449c10d270d04fa821079f" translate="yes" xml:space="preserve">
          <source>a pointer to a &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">указатель на &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f17da070450247f77f91bb43db58967387c15893" translate="yes" xml:space="preserve">
          <source>a pointer to a null-terminated character sequence of the underlying &lt;code&gt;value_type&lt;/code&gt; to compare to</source>
          <target state="translated">указатель на завершающуюся нулем последовательность символов базового &lt;code&gt;value_type&lt;/code&gt; для сравнения с</target>
        </trans-unit>
        <trans-unit id="5868f86a6ff0331b3d62617e594ed6c42d614c96" translate="yes" xml:space="preserve">
          <source>a pointer to a null-terminated target character sequence</source>
          <target state="translated">указатель на нулевую последовательность целевых символов</target>
        </trans-unit>
        <trans-unit id="c26e74b89fa7b45bd653c4faa65a7d07cba9456c" translate="yes" xml:space="preserve">
          <source>a pointer to an object previously declared reachable and not destructed since then</source>
          <target state="translated">указатель на объект,ранее объявленный достижимым и не уничтоженным с тех пор.</target>
        </trans-unit>
        <trans-unit id="8efe109d0f282a2cb4dac348461d4191b0d06c42" translate="yes" xml:space="preserve">
          <source>a pointer to an object to manage</source>
          <target state="translated">указатель на объект управления</target>
        </trans-unit>
        <trans-unit id="f47e7e0accf01a683e168ad7cabf5a3c2fe36188" translate="yes" xml:space="preserve">
          <source>a pointer to one past the last element in the initializer list.</source>
          <target state="translated">указатель на один последний элемент в списке инициализатора.</target>
        </trans-unit>
        <trans-unit id="6d5766a829033a5221af62a829dfc7bfe307fedf" translate="yes" xml:space="preserve">
          <source>a pointer to the control block; and</source>
          <target state="translated">указатель на блок управления;и</target>
        </trans-unit>
        <trans-unit id="22e59b74fcd897391168335d0c5af56c34fc3908" translate="yes" xml:space="preserve">
          <source>a pointer to the first element in the initializer list.</source>
          <target state="translated">указатель на первый элемент в списке инициализатора.</target>
        </trans-unit>
        <trans-unit id="0182a86b94415d71bd302996076ea3a6bdd7fee1" translate="yes" xml:space="preserve">
          <source>a pointer to the object to be destroyed</source>
          <target state="translated">указатель на уничтожаемый объект</target>
        </trans-unit>
        <trans-unit id="af4aa5073712889a735a830905f358a121d64ac7" translate="yes" xml:space="preserve">
          <source>a pointer type &lt;code&gt;T*&lt;/code&gt; if either &lt;code&gt;Y*&lt;/code&gt; is convertible to &lt;code&gt;T*&lt;/code&gt; or &lt;code&gt;Y&lt;/code&gt; is the array type &lt;code&gt;U[N]&lt;/code&gt; and &lt;code&gt;T&lt;/code&gt; is &lt;code&gt;U cv []&lt;/code&gt; (where cv is some set of cv-qualifiers).</source>
          <target state="translated">тип указателя &lt;code&gt;T*&lt;/code&gt; если &lt;code&gt;Y*&lt;/code&gt; может быть преобразован в &lt;code&gt;T*&lt;/code&gt; или &lt;code&gt;Y&lt;/code&gt; является типом массива &lt;code&gt;U[N]&lt;/code&gt; а &lt;code&gt;T&lt;/code&gt; является &lt;code&gt;U cv []&lt;/code&gt; (где cv - некоторый набор cv-квалификаторов).</target>
        </trans-unit>
        <trans-unit id="d18f0cda8e8f7ed1487c3f8e9b21b1efcd3886a0" translate="yes" xml:space="preserve">
          <source>a pointer-like type supporting a null value</source>
          <target state="translated">указатель-подобный тип,поддерживающий нулевое значение</target>
        </trans-unit>
        <trans-unit id="642ef2320577c98feaf2f935169ad215e1202ed9" translate="yes" xml:space="preserve">
          <source>a positive integer value if the first argument is</source>
          <target state="translated">положительное целое значение,если первым аргументом является</target>
        </trans-unit>
        <trans-unit id="ac6cc03f4988d728ce081139bdfc45bfb8bd3735" translate="yes" xml:space="preserve">
          <source>a possibly empty list of types</source>
          <target state="translated">возможно пустой список типов</target>
        </trans-unit>
        <trans-unit id="dd6ea4c3b9c17b6dc92aee8c5dd47071001c91c3" translate="yes" xml:space="preserve">
          <source>a prvalue</source>
          <target state="translated">стоимость</target>
        </trans-unit>
        <trans-unit id="7e1d95163d3517c2604ea137c4ba1953d3f8ac75" translate="yes" xml:space="preserve">
          <source>a prvalue (&amp;ldquo;pure&amp;rdquo; rvalue) is an expression whose evaluation either</source>
          <target state="translated">prvalue (&amp;laquo;чистое&amp;raquo; rvalue) - это выражение, оценка которого либо</target>
        </trans-unit>
        <trans-unit id="2f1f652d46041654d8a240c2bf30af99c268dbd1" translate="yes" xml:space="preserve">
          <source>a prvalue if new_type is a pointer type</source>
          <target state="translated">значение принтера,если new_type является типом указателя</target>
        </trans-unit>
        <trans-unit id="38c30795b63cb566bca79b869124caee872837e7" translate="yes" xml:space="preserve">
          <source>a prvalue otherwise.</source>
          <target state="translated">в противном случае.</target>
        </trans-unit>
        <trans-unit id="3ae16f22aa50f08d46bb5378890a1cb963ca51a0" translate="yes" xml:space="preserve">
          <source>a range identifying the target character sequence</source>
          <target state="translated">диапазон,определяющий последовательность символов</target>
        </trans-unit>
        <trans-unit id="963453d16288073b804281c7702af3fe9e1801b2" translate="yes" xml:space="preserve">
          <source>a recursive_directory_iterator</source>
          <target state="translated">рекурсивный_директория_iterator</target>
        </trans-unit>
        <trans-unit id="5132c6b64613105873d229f027aa15ec9143314c" translate="yes" xml:space="preserve">
          <source>a redundant deduction guide from &lt;code&gt;reference_wrapper&amp;lt;T&amp;gt;&lt;/code&gt; was provided</source>
          <target state="translated">избыточный вычет руководство из &lt;code&gt;reference_wrapper&amp;lt;T&amp;gt;&lt;/code&gt; было предоставлено</target>
        </trans-unit>
        <trans-unit id="f9d7405b3f39459f6d35e16ee3b9ded3a80c9e59" translate="yes" xml:space="preserve">
          <source>a reference to a string to compare to</source>
          <target state="translated">ссылка на строку для сравнения с</target>
        </trans-unit>
        <trans-unit id="cea668576cf594d47b3fcb6faaa85a0840df63c9" translate="yes" xml:space="preserve">
          <source>a reference to another sub_match</source>
          <target state="translated">ссылка на другой sub_match</target>
        </trans-unit>
        <trans-unit id="42daa13b557361b08a60cee4245497cf3bf4c9a4" translate="yes" xml:space="preserve">
          <source>a regular file</source>
          <target state="translated">обычное дело</target>
        </trans-unit>
        <trans-unit id="fe7264916bfbb477a822b4f5961b4c7e3c2d8b81" translate="yes" xml:space="preserve">
          <source>a safely-derived pointer or a null pointer</source>
          <target state="translated">безопасно полученный указатель или нулевой указатель</target>
        </trans-unit>
        <trans-unit id="7014cfa9492edab94fbea8def737c5863f9ee75b" translate="yes" xml:space="preserve">
          <source>a sequence of aforementioned expressions joined with the operator &lt;code&gt;||&lt;/code&gt;</source>
          <target state="translated">последовательность вышеупомянутых выражений, соединенных с оператором &lt;code&gt;||&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1271d5dc7168a2db58191e9dc37812929e036665" translate="yes" xml:space="preserve">
          <source>a sequence of declarations, which may include nested linkage specifications</source>
          <target state="translated">последовательность деклараций,которые могут включать вложенные спецификации связывания</target>
        </trans-unit>
        <trans-unit id="492a0055d77ea0e7979cf99d3b9100bf9e6853bf" translate="yes" xml:space="preserve">
          <source>a sequence of digits</source>
          <target state="translated">последовательность цифр</target>
        </trans-unit>
        <trans-unit id="437ad04c499151144ca622e6de6ccb56ac4ed3f0" translate="yes" xml:space="preserve">
          <source>a sequence of names and scope resolution operators &lt;code&gt;::&lt;/code&gt;, ending with a scope resolution operator. A single &lt;code&gt;::&lt;/code&gt; refers to the global namespace.</source>
          <target state="translated">последовательность имен и операторов разрешения области &lt;code&gt;::&lt;/code&gt; , заканчивающаяся оператором разрешения области. Одиночный &lt;code&gt;::&lt;/code&gt; относится к глобальному пространству имен.</target>
        </trans-unit>
        <trans-unit id="a969aeabc8b8b20a4d37355be80304529fc8aac9" translate="yes" xml:space="preserve">
          <source>a sequence of primary expressions joined with the operator &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;</source>
          <target state="translated">последовательность первичных выражений, соединенных с оператором &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41815073a182a0e93d9d1f5bb461a6dd95f33c48" translate="yes" xml:space="preserve">
          <source>a set of constructor options for pool resources</source>
          <target state="translated">набор вариантов конструктора для пула ресурсов</target>
        </trans-unit>
        <trans-unit id="657d57ff00cbd7f0b4c8c5fca1a4b16b8fe92fdf" translate="yes" xml:space="preserve">
          <source>a set of potential results</source>
          <target state="translated">комплекс потенциальных результатов</target>
        </trans-unit>
        <trans-unit id="5a80b6b789109b97b000dd6b67e08d846ccd344a" translate="yes" xml:space="preserve">
          <source>a shared pointer whose deleter needs to be accessed</source>
          <target state="translated">общий указатель,к удалителю которого необходимо получить доступ</target>
        </trans-unit>
        <trans-unit id="c38297cac1f2492ccb4361346a5b04f3c3ce5344" translate="yes" xml:space="preserve">
          <source>a single member of type &lt;code&gt;value_type _Complex&lt;/code&gt; (encapsulating the corresponding &lt;a href=&quot;http://en.cppreference.com/w/c/language/arithmetic_types.html#Complex_floating_types&quot;&gt;C language complex number type&lt;/a&gt;) (e.g. GNU libstdc++);</source>
          <target state="translated">один член типа &lt;code&gt;value_type _Complex&lt;/code&gt; (инкапсулирующий соответствующий &lt;a href=&quot;http://en.cppreference.com/w/c/language/arithmetic_types.html#Complex_floating_types&quot;&gt;тип комплексных чисел языка C&lt;/a&gt; ) (например, GNU libstdc ++);</target>
        </trans-unit>
        <trans-unit id="a6b7583b927d79bd0e6443cb077caa1e3a605abe" translate="yes" xml:space="preserve">
          <source>a socket file</source>
          <target state="translated">сокет-файл</target>
        </trans-unit>
        <trans-unit id="ab1ee6d49146119c2667dd25d1b1f7677b194c6a" translate="yes" xml:space="preserve">
          <source>a span</source>
          <target state="translated">промежуток</target>
        </trans-unit>
        <trans-unit id="f91796b64b657a4ea88113e721436cde4d24901e" translate="yes" xml:space="preserve">
          <source>a special-purpose &lt;code&gt;&lt;a href=&quot;../memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; that releases the allocated memory only when the resource is destroyed</source>
          <target state="translated">специализированный &lt;code&gt;&lt;a href=&quot;../memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; который освобождает выделенную память только при уничтожении ресурса</target>
        </trans-unit>
        <trans-unit id="bb71949bec343c285e93494c68e69b194b467f35" translate="yes" xml:space="preserve">
          <source>a special-purpose &lt;code&gt;&lt;a href=&quot;memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; that releases the allocated memory only when the resource is destroyed</source>
          <target state="translated">специализированный &lt;code&gt;&lt;a href=&quot;memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; который освобождает выделенную память только при уничтожении ресурса</target>
        </trans-unit>
        <trans-unit id="55315057b1e6ca22b588933379ab53dc4dbb5d28" translate="yes" xml:space="preserve">
          <source>a specialization of &lt;a href=&quot;node_handle&quot;&gt;node handle&lt;/a&gt; representing a container node</source>
          <target state="translated">специализация &lt;a href=&quot;node_handle&quot;&gt;дескриптора узла,&lt;/a&gt; представляющего узел контейнера</target>
        </trans-unit>
        <trans-unit id="16d6f69c5a1bfa9da7a9302a7d31031ed0d75fa7" translate="yes" xml:space="preserve">
          <source>a specialization of a &lt;a href=&quot;constraints&quot;&gt;concept&lt;/a&gt;, such as &lt;code&gt;&lt;a href=&quot;../concepts/equalitycomparable&quot;&gt;EqualityComparable&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">специализация &lt;a href=&quot;constraints&quot;&gt;концепции&lt;/a&gt; , такой как &lt;code&gt;&lt;a href=&quot;../concepts/equalitycomparable&quot;&gt;EqualityComparable&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71afb134e4d76a9c9d6e4a17d57f0fc5b78879e6" translate="yes" xml:space="preserve">
          <source>a standard &lt;a href=&quot;implicit_cast#Pointer_conversions&quot;&gt;pointer conversion&lt;/a&gt; other than one to a private, protected, or ambiguous base class</source>
          <target state="translated">стандартное &lt;a href=&quot;implicit_cast#Pointer_conversions&quot;&gt;преобразование указателя,&lt;/a&gt; кроме единицы, в закрытый, защищенный или неоднозначный базовый класс</target>
        </trans-unit>
        <trans-unit id="2883f86f638bc30ab0d51069c57c2d488cd03bdf" translate="yes" xml:space="preserve">
          <source>a starting offset into &lt;code&gt;str&lt;/code&gt;</source>
          <target state="translated">начальное смещение в &lt;code&gt;str&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="482c44d3087fdfc1fe38429c3878d8c8d9282549" translate="yes" xml:space="preserve">
          <source>a statement with a &lt;a href=&quot;statements#Labels&quot;&gt;label&lt;/a&gt; other than &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt;</source>
          <target state="translated">оператор с &lt;a href=&quot;statements#Labels&quot;&gt;меткой,&lt;/a&gt; отличной от &lt;code&gt;case&lt;/code&gt; и &lt;code&gt;default&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="092e5d5910cd24daae23118a07aa91b2b252f93d" translate="yes" xml:space="preserve">
          <source>a store in one thread becomes a</source>
          <target state="translated">магазин на одной ниточке становится</target>
        </trans-unit>
        <trans-unit id="e9f9f715d088c71a225a10a34cdb210f72724438" translate="yes" xml:space="preserve">
          <source>a stream input function that does not skip leading whitespace and counts the processed characters</source>
          <target state="translated">функция потокового ввода,которая не пропускает лидирующие пробелы и подсчитывает обработанные символы.</target>
        </trans-unit>
        <trans-unit id="86acac3440ff6574b7aafc85db3e9612510b1eaa" translate="yes" xml:space="preserve">
          <source>a stream input function that skips leading whitespace</source>
          <target state="translated">функция ввода потока,которая пропускает лидирующие пробелы</target>
        </trans-unit>
        <trans-unit id="52577f0845ce0978ebbcc527dd47bbdcd7227491" translate="yes" xml:space="preserve">
          <source>a stream object that this function uses to obtain locale facets when needed, e.g. &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; to narrow characters</source>
          <target state="translated">объект потока, который эта функция использует для получения фасетов локали при необходимости, например, &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; для сужения символов</target>
        </trans-unit>
        <trans-unit id="984cb3566b9dee3ad097d1c34b021c5a7f4b4f28" translate="yes" xml:space="preserve">
          <source>a stream object that this function uses to obtain locale facets when needed, e.g. &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; to skip whitespace</source>
          <target state="translated">объект потока, который эта функция использует для получения фасетов локали при необходимости, например, &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; для пропуска пробелов</target>
        </trans-unit>
        <trans-unit id="4997f497c3e302df90742a22dea3b52227c3c2e8" translate="yes" xml:space="preserve">
          <source>a stream object that this function uses to obtain locale facets when needed, e.g. &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; to skip whitespace or &lt;code&gt;&lt;a href=&quot;../collate&quot;&gt;std::collate&lt;/a&gt;&lt;/code&gt; to compare strings</source>
          <target state="translated">объект потока, который эта функция использует для получения фасетов локали при необходимости, например, &lt;code&gt;&lt;a href=&quot;../ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; для пропуска пробелов или &lt;code&gt;&lt;a href=&quot;../collate&quot;&gt;std::collate&lt;/a&gt;&lt;/code&gt; для сравнения строк</target>
        </trans-unit>
        <trans-unit id="500a903f5f9e867d5804cc0dd5e4e3858f927056" translate="yes" xml:space="preserve">
          <source>a stream output function that sets failbit on errors and returns a reference to the stream</source>
          <target state="translated">функция потокового вывода,которая устанавливает failbit на ошибки и возвращает ссылку на поток</target>
        </trans-unit>
        <trans-unit id="d93f2d3d77836f607fc40e7a8b0697722e29183b" translate="yes" xml:space="preserve">
          <source>a streambuf object to copy</source>
          <target state="translated">объект streambuf для копирования</target>
        </trans-unit>
        <trans-unit id="6bdb9278e4568fa8950fb769970b38dd80b915eb" translate="yes" xml:space="preserve">
          <source>a string holding the converted value.</source>
          <target state="translated">строка,содержащая преобразованное значение.</target>
        </trans-unit>
        <trans-unit id="d1edcd1c115e0107359a93a302fc7301b585bf2e" translate="yes" xml:space="preserve">
          <source>a string identifying target character sequence</source>
          <target state="translated">последовательность символов,идентифицирующая строку</target>
        </trans-unit>
        <trans-unit id="a136b5c3b60eaae1495c69987303a26e06fabe0c" translate="yes" xml:space="preserve">
          <source>a string object holding the replacement character sequence</source>
          <target state="translated">строковый объект,содержащий последовательность символов замены</target>
        </trans-unit>
        <trans-unit id="998c1dfcdc6cff6fd352ac2ce6caf38a4c863f61" translate="yes" xml:space="preserve">
          <source>a string or string view representing path to compare to</source>
          <target state="translated">строковое или строковое представление,представляющее путь для сравнения с</target>
        </trans-unit>
        <trans-unit id="425bf9812e28d908720f162b8a9d1517a6cc2c8d" translate="yes" xml:space="preserve">
          <source>a string used to indicate negative monetary quantity</source>
          <target state="translated">строка,используемая для указания отрицательной денежной величины</target>
        </trans-unit>
        <trans-unit id="757d7a97b6240cce0f9fe837451991e14db0783e" translate="yes" xml:space="preserve">
          <source>a string used to indicate non-negative monetary quantity</source>
          <target state="translated">строка,используемая для указания неотрицательной денежной величины</target>
        </trans-unit>
        <trans-unit id="3b9575d67efdbcb362fb37d3399a2d1499fafcd8" translate="yes" xml:space="preserve">
          <source>a string whose elements indicate the sizes of digit groups</source>
          <target state="translated">строка,элементы которой указывают на размеры групп цифр.</target>
        </trans-unit>
        <trans-unit id="9508c6033989957b6f8e8de2d15f2ea90ecf6a21" translate="yes" xml:space="preserve">
          <source>a string_view</source>
          <target state="translated">просмотр строки</target>
        </trans-unit>
        <trans-unit id="c64f01d954d3375d8cfd201538c42f6b59d21019" translate="yes" xml:space="preserve">
          <source>a sub-match object to output</source>
          <target state="translated">объект для вывода</target>
        </trans-unit>
        <trans-unit id="e8908ec1b7cfd8b0032130dfdefccf5436e4d74d" translate="yes" xml:space="preserve">
          <source>a subexpression of such an initialization, such as a default argument expression, is</source>
          <target state="translated">подвыражение такой инициализации,например,выражение аргумента по умолчанию,имеет вид</target>
        </trans-unit>
        <trans-unit id="26ac6992277d634908b4c31697fb961fa7868174" translate="yes" xml:space="preserve">
          <source>a subobject (including non-static class member, base subobject, or array element);</source>
          <target state="translated">подобъект (включая нестатический член класса,базовый подобъект или элемент массива);</target>
        </trans-unit>
        <trans-unit id="73e0d3d09899be3eceef7f232ff3b29daf7bb557" translate="yes" xml:space="preserve">
          <source>a substring can be found only if &lt;code&gt;pos &amp;lt;= size() - str.size()&lt;/code&gt;</source>
          <target state="translated">подстрока может быть найдена только если &lt;code&gt;pos &amp;lt;= size() - str.size()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="927effb766064e06036e26183214b36aef8d068a" translate="yes" xml:space="preserve">
          <source>a symbolic link</source>
          <target state="translated">символическая связь</target>
        </trans-unit>
        <trans-unit id="f99e9e35c54d46b7221907dcb8419820577caa33" translate="yes" xml:space="preserve">
          <source>a template name followed by its argument list (&lt;code&gt;MyTemplate&amp;lt;int&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">имя шаблона, за которым следует список аргументов ( &lt;code&gt;MyTemplate&amp;lt;int&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c7e703bd520d64c3124cead64d278558a15a5e90" translate="yes" xml:space="preserve">
          <source>a template parameter list (in angle brackets), used to provide names to the template parameters of a generic lambda (see &lt;code&gt;ClosureType::operator()&lt;/code&gt; below). Like in a &lt;a href=&quot;templates&quot;&gt;template declaration&lt;/a&gt;, the template parameter list may be followed by an optional requires-clause, which specifies the &lt;a href=&quot;constraints&quot;&gt;constraints&lt;/a&gt; on the template arguments. If provided, the template parameter list cannot be empty (&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; is not allowed).</source>
          <target state="translated">список параметров шаблона (в угловых скобках), используемый для предоставления имен параметрам шаблона общей лямбды (см. ниже &lt;code&gt;ClosureType::operator()&lt;/code&gt; ). Как и в &lt;a href=&quot;templates&quot;&gt;объявлении&lt;/a&gt; шаблона, список параметров шаблона может сопровождаться необязательным предложением require, которое указывает &lt;a href=&quot;constraints&quot;&gt;ограничения&lt;/a&gt; на аргументы шаблона. Если указан, список параметров шаблона не может быть пустым ( &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; не допускается).</target>
        </trans-unit>
        <trans-unit id="6001cde94a687b293e3f3c935010c267d550468f" translate="yes" xml:space="preserve">
          <source>a template template parameter.</source>
          <target state="translated">параметр шаблона.</target>
        </trans-unit>
        <trans-unit id="fdfbda2f69b96c358999cea754fa765931beaa31" translate="yes" xml:space="preserve">
          <source>a temporary bound to a reference in a reference element of an aggregate initialized using direct-initialization syntax (parentheses) as opposed to list-initialization syntax (braces) exists until the end of the full expression containing the initializer.</source>
          <target state="translated">временная привязка к ссылке в ссылочном элементе агрегата,инициализированного с использованием синтаксиса прямой инициализации (скобки)в отличие от синтаксиса листа-инициализации (фигурные скобки),существует до конца полного выражения,содержащего инициализатор.</target>
        </trans-unit>
        <trans-unit id="fef11c35b4169d244776ebb848ca8905903eb26d" translate="yes" xml:space="preserve">
          <source>a temporary bound to a reference in the initializer used in a new-expression exists until the end of the full expression containing that new-expression, not as long as the initialized object. If the initialized object outlives the full expression, its reference member becomes a dangling reference.</source>
          <target state="translated">временная привязка к ссылке в инициализаторе,используемом в новом выражении,существует до конца полного выражения,содержащего это новое выражение,а не до тех пор,пока инициализированный объект.Если инициализированный объект переживает полное выражение,то его ссылочный член становится висячей ссылкой.</target>
        </trans-unit>
        <trans-unit id="a66afb7bc32c460b11c77d25a4eacd0e23bc435b" translate="yes" xml:space="preserve">
          <source>a temporary bound to a reference member in a constructor &lt;a href=&quot;constructor&quot;&gt;initializer list&lt;/a&gt; persists only until the constructor exits, not as long as the object exists. (note: such initialization is ill-formed as of DR 1696).</source>
          <target state="translated">временная привязка к элементу ссылки в &lt;a href=&quot;constructor&quot;&gt;списке инициализатора&lt;/a&gt; конструктора сохраняется только до выхода из конструктора, а не до тех пор, пока объект существует. (примечание: такая инициализация некорректна с DR 1696).</target>
        </trans-unit>
        <trans-unit id="7b5f2240079a48372e54bcd314fc06560bc3e66d" translate="yes" xml:space="preserve">
          <source>a temporary bound to a reference parameter in a function call exists until the end of the full expression containing that function call: if the function returns a reference, which outlives the full expression, it becomes a dangling reference.</source>
          <target state="translated">временная привязка к параметру ссылки в вызове функции существует до конца полного выражения,содержащего этот вызов функции:если функция возвращает ссылку,которая перекрывает полное выражение,она становится висячей ссылкой.</target>
        </trans-unit>
        <trans-unit id="4d22ac303e4e078978b441757085a536a55abdaf" translate="yes" xml:space="preserve">
          <source>a temporary bound to a return value of a function in a &lt;code&gt;return&lt;/code&gt; statement is not extended: it is destroyed immediately at the end of the return expression. Such function always returns a dangling reference.</source>
          <target state="translated">временная привязка к возвращаемому значению функции в операторе &lt;code&gt;return&lt;/code&gt; не расширяется: она уничтожается сразу в конце выражения возврата. Такая функция всегда возвращает висячую ссылку.</target>
        </trans-unit>
        <trans-unit id="4f37e155ccfd31cd00dc799ade120dce794bc3ae" translate="yes" xml:space="preserve">
          <source>a temporary object (including one created during &lt;a href=&quot;reference_initialization&quot;&gt;reference initialization&lt;/a&gt;);</source>
          <target state="translated">временный объект (в том числе созданный во время &lt;a href=&quot;reference_initialization&quot;&gt;инициализации ссылки&lt;/a&gt; );</target>
        </trans-unit>
        <trans-unit id="98f7ff1c375a28052c78c1149363125994a622f4" translate="yes" xml:space="preserve">
          <source>a temporary object that is equivalent to &lt;code&gt;nullptr&lt;/code&gt;</source>
          <target state="translated">временный объект, эквивалентный &lt;code&gt;nullptr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f5028d0a52df56b3d6f291ed51bdfc55e00cc04" translate="yes" xml:space="preserve">
          <source>a thread-safe &lt;code&gt;&lt;a href=&quot;../memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; for managing allocations in pools of different block sizes</source>
          <target state="translated">потокобезопасный &lt;code&gt;&lt;a href=&quot;../memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; для управления выделениями в пулах разных размеров блоков</target>
        </trans-unit>
        <trans-unit id="3b5df43300d9139f59894b3e49b4f65598c84a06" translate="yes" xml:space="preserve">
          <source>a thread-safe &lt;code&gt;&lt;a href=&quot;memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; for managing allocations in pools of different block sizes</source>
          <target state="translated">потокобезопасный &lt;code&gt;&lt;a href=&quot;memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; для управления выделениями в пулах разных размеров блоков</target>
        </trans-unit>
        <trans-unit id="a4d4c600af47017db2e04952f95e36fbda455a3d" translate="yes" xml:space="preserve">
          <source>a thread-safe &lt;code&gt;&lt;a href=&quot;memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; for managing allocations in pools of different block sizes</source>
          <target state="translated">потокобезопасный &lt;code&gt;&lt;a href=&quot;memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; для управления выделениями в пулах разных размеров блоков</target>
        </trans-unit>
        <trans-unit id="717aa65ba116416bb08189a081c45f1bbba0a4b6" translate="yes" xml:space="preserve">
          <source>a thread-unsafe &lt;code&gt;&lt;a href=&quot;../memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; for managing allocations in pools of different block sizes</source>
          <target state="translated">небезопасный поток &lt;code&gt;&lt;a href=&quot;../memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; для управления выделениями в пулах блоков разных размеров</target>
        </trans-unit>
        <trans-unit id="97cbd52f42d851827351ef766c69d2eacb3ba951" translate="yes" xml:space="preserve">
          <source>a thread-unsafe &lt;code&gt;&lt;a href=&quot;memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; for managing allocations in pools of different block sizes</source>
          <target state="translated">небезопасный поток &lt;code&gt;&lt;a href=&quot;memory/memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; для управления выделениями в пулах блоков разных размеров</target>
        </trans-unit>
        <trans-unit id="b6bb30d639da8e4257b1b474bd258fa692566326" translate="yes" xml:space="preserve">
          <source>a thread-unsafe &lt;code&gt;&lt;a href=&quot;memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; for managing allocations in pools of different block sizes</source>
          <target state="translated">небезопасный поток &lt;code&gt;&lt;a href=&quot;memory_resource&quot;&gt;std::pmr::memory_resource&lt;/a&gt;&lt;/code&gt; для управления выделениями в пулах блоков разных размеров</target>
        </trans-unit>
        <trans-unit id="0da795458e60bf769fa7d3bfeeabd3197aa03886" translate="yes" xml:space="preserve">
          <source>a throw expression</source>
          <target state="translated">броское выражение</target>
        </trans-unit>
        <trans-unit id="9992c06f3dda6b98e3078a55bb93468c7365b674" translate="yes" xml:space="preserve">
          <source>a tick count</source>
          <target state="translated">подсчёт галочек</target>
        </trans-unit>
        <trans-unit id="308d29b99480635b3b889f22de83b89b658667c2" translate="yes" xml:space="preserve">
          <source>a time interval</source>
          <target state="translated">временной интервал</target>
        </trans-unit>
        <trans-unit id="88c52e9185a5e6c699afc88474a23c38be8c48a4" translate="yes" xml:space="preserve">
          <source>a time offset</source>
          <target state="translated">временной смещение</target>
        </trans-unit>
        <trans-unit id="51fff032de40100efc4423b61a137d82bdabe10a" translate="yes" xml:space="preserve">
          <source>a time offset to apply</source>
          <target state="translated">смещение во времени для применения</target>
        </trans-unit>
        <trans-unit id="1aafdc9c4f71f89896f69ba3a260977a5d749e8e" translate="yes" xml:space="preserve">
          <source>a time point to apply the offset to</source>
          <target state="translated">временная точка для применения смещения к</target>
        </trans-unit>
        <trans-unit id="f8e82d4fc99dd0bbd35ba2ed884ad40ffc38786a" translate="yes" xml:space="preserve">
          <source>a tuple of values used to initialize each element of the tuple</source>
          <target state="translated">кортеж значений,используемых для инициализации каждого элемента кортежа</target>
        </trans-unit>
        <trans-unit id="efbe90e7947875ebf8641fc690eadf8fb038fb0f" translate="yes" xml:space="preserve">
          <source>a type for which initialization is effectively equal to assignment</source>
          <target state="translated">тип,для которого инициализация фактически равнозначна присвоению</target>
        </trans-unit>
        <trans-unit id="9200a53975557197af2fdd76ddceb09b50c730be" translate="yes" xml:space="preserve">
          <source>a type for which the invoke operation is defined</source>
          <target state="translated">тип,для которого определена операция вызова</target>
        </trans-unit>
        <trans-unit id="cbd32cf89a8666287fb1343694860c6ff3364e49" translate="yes" xml:space="preserve">
          <source>a type satisfying &lt;a href=&quot;binarypredicate&quot;&gt;BinaryPredicate&lt;/a&gt;</source>
          <target state="translated">тип, удовлетворяющий &lt;a href=&quot;binarypredicate&quot;&gt;BinaryPredicate&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="045c0dbc6d3a870b4565b20ac200df178565dfd8" translate="yes" xml:space="preserve">
          <source>a type template parameter;</source>
          <target state="translated">параметр шаблона типа;</target>
        </trans-unit>
        <trans-unit id="0f678a6907e22e6165258f688483cf2d1036ec7d" translate="yes" xml:space="preserve">
          <source>a type that</source>
          <target state="translated">тип,который</target>
        </trans-unit>
        <trans-unit id="4581704f4191c3fffe1ece3b9ca5d9dbc8ec09be" translate="yes" xml:space="preserve">
          <source>a type that can be used to identify distance between iterators</source>
          <target state="translated">тип,который может быть использован для определения расстояния между итераторами.</target>
        </trans-unit>
        <trans-unit id="ed832d1e24d469eb0046c0819408351b92476211" translate="yes" xml:space="preserve">
          <source>a type to check</source>
          <target state="translated">тип проверки</target>
        </trans-unit>
        <trans-unit id="cd3bd0227506c8291d623702eb4fdf05aaaf0672" translate="yes" xml:space="preserve">
          <source>a type to retrieve numeric properties for</source>
          <target state="translated">тип для получения числовых свойств для</target>
        </trans-unit>
        <trans-unit id="f444599f692a39876563cf208495abe3933ed3e2" translate="yes" xml:space="preserve">
          <source>a type used in a non-dependent name is &lt;a href=&quot;incomplete_type&quot;&gt;incomplete&lt;/a&gt; at the point of definition but complete at the point of instantiation</source>
          <target state="translated">тип, используемый в независимом имени, является &lt;a href=&quot;incomplete_type&quot;&gt;неполным&lt;/a&gt; в момент определения, но завершенным в момент создания</target>
        </trans-unit>
        <trans-unit id="71547d0347d5e9bd8b13ce274b82ab27c4198722" translate="yes" xml:space="preserve">
          <source>a type with at least one constexpr (possibly template) constructor that is not a copy or move constructor,</source>
          <target state="translated">тип с хотя бы одним конструктором constexpr (возможно,с шаблоном),который не является конструктором копирования или перемещения,</target>
        </trans-unit>
        <trans-unit id="93c0f69387e116eb317a69b8048ee7291703964a" translate="yes" xml:space="preserve">
          <source>a type with constexpr constructor</source>
          <target state="translated">тип с конструктором созвездия</target>
        </trans-unit>
        <trans-unit id="e4fc821a8ad0dc6f4ba2c6891c72a9cae774bc10" translate="yes" xml:space="preserve">
          <source>a type-safe discriminated union</source>
          <target state="translated">профсоюз,защищённый от дискриминации по признаку типа</target>
        </trans-unit>
        <trans-unit id="4095426d3d1fd2ffe5f481c37155b695734cc34a" translate="yes" xml:space="preserve">
          <source>a user-defined conversion function name (&lt;code&gt;operator bool&lt;/code&gt;);</source>
          <target state="translated">определяемое пользователем имя функции преобразования ( &lt;code&gt;operator bool&lt;/code&gt; );</target>
        </trans-unit>
        <trans-unit id="ca679d4be25a81ca569a485fb6d7bf4a65d2d747" translate="yes" xml:space="preserve">
          <source>a user-defined literal operator name (&lt;code&gt;operator &quot;&quot; _km&lt;/code&gt;);</source>
          <target state="translated">пользовательское литеральное имя &lt;code&gt;operator &quot;&quot; _km&lt;/code&gt; ( operator &quot;&quot; _km );</target>
        </trans-unit>
        <trans-unit id="e5e4dbc39affde54dbf8f6a76063346fe130209d" translate="yes" xml:space="preserve">
          <source>a valid iterator into this container</source>
          <target state="translated">действующий итератор в этот контейнер</target>
        </trans-unit>
        <trans-unit id="57fdbbe218208d0ca21418cb78e3c66d2d42418f" translate="yes" xml:space="preserve">
          <source>a valid open catalog identifier, on which &lt;code&gt;close()&lt;/code&gt; has not yet been called</source>
          <target state="translated">действительный идентификатор открытого каталога, для которого &lt;code&gt;close()&lt;/code&gt; еще не был вызван</target>
        </trans-unit>
        <trans-unit id="f87227a4dddeac1b41ae163c715d434b858cade7" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::partial_ordering&lt;/code&gt; indicating equivalence (neither ordered before nor ordered after)</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::partial_ordering&lt;/code&gt; указывающее эквивалентность (ни упорядочено до, ни упорядочено после)</target>
        </trans-unit>
        <trans-unit id="ba94eb1d71ba696823314c6cbc2ed8c248c0d120" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::partial_ordering&lt;/code&gt; indicating greater-than (ordered after) relationship</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::partial_ordering&lt;/code&gt; указывающее отношение больше чем (упорядочено после)</target>
        </trans-unit>
        <trans-unit id="40d394512a7a5e31441f4b4f116b0e5274e6c9e4" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::partial_ordering&lt;/code&gt; indicating less-than (ordered before) relationship</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::partial_ordering&lt;/code&gt; указывающее отношение меньше чем (упорядочено до)</target>
        </trans-unit>
        <trans-unit id="a7717f9207eb8be37483adf1191c3a4d95108489" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::partial_ordering&lt;/code&gt; indicating relationship with an incomparable value</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::partial_ordering&lt;/code&gt; указывающее отношение с несопоставимым значением</target>
        </trans-unit>
        <trans-unit id="01f22e8f322a297dff544d454acdb8cca3f36808" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::strong_equality&lt;/code&gt; indicating equality</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::strong_equality&lt;/code&gt; указывающее равенство</target>
        </trans-unit>
        <trans-unit id="7d658ac8c6c7e11c334bb7cb5437f86e3f9648a4" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::strong_equality&lt;/code&gt; indicating non-equality</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::strong_equality&lt;/code&gt; указывающее на неравенство</target>
        </trans-unit>
        <trans-unit id="3eac86f05902f06966d72a8ec74fa5d4ed506a77" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::strong_ordering&lt;/code&gt; indicating equivalence (neither ordered before nor ordered after)</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::strong_ordering&lt;/code&gt; указывающее эквивалентность (ни упорядочено до, ни упорядочено после)</target>
        </trans-unit>
        <trans-unit id="36aa5a014c4c6fe990c3b8d75f775bffe494d32d" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::strong_ordering&lt;/code&gt; indicating greater-than (ordered after) relationship</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::strong_ordering&lt;/code&gt; указывающее отношение больше чем (упорядочено после)</target>
        </trans-unit>
        <trans-unit id="31267ca3a1b2839497f833541aaac8188e150ad8" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::strong_ordering&lt;/code&gt; indicating less-than (ordered before) relationship</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::strong_ordering&lt;/code&gt; указывающее отношение меньше чем (упорядочено до)</target>
        </trans-unit>
        <trans-unit id="e3bb51bceb2f22c0db7c3da172a15239f85727a2" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::weak_equality&lt;/code&gt; indicating equivalence</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::weak_equality&lt;/code&gt; указывающее эквивалентность</target>
        </trans-unit>
        <trans-unit id="bd2d3d576ad39d0142abb43ea30a38d42f8cc965" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::weak_equality&lt;/code&gt; indicating non-equivalence</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::weak_equality&lt;/code&gt; указывающее на неэквивалентность</target>
        </trans-unit>
        <trans-unit id="810421beac9a0ec676c860cca7f53f3d47ac75c5" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::weak_ordering&lt;/code&gt; indicating equivalence (neither ordered before nor ordered after)</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::weak_ordering&lt;/code&gt; указывающее эквивалентность (ни упорядочено до, ни упорядочено после)</target>
        </trans-unit>
        <trans-unit id="49cc37a19f58d1d8929fd1f8068b05ef4273a56f" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::weak_ordering&lt;/code&gt; indicating greater-than (ordered after) relationship</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::weak_ordering&lt;/code&gt; указывающее отношение больше чем (упорядочено после)</target>
        </trans-unit>
        <trans-unit id="d046f4e8dcf3051da87803127b0c3ea01e8721f2" translate="yes" xml:space="preserve">
          <source>a valid value of the type &lt;code&gt;std::weak_ordering&lt;/code&gt; indicating less-than (ordered before) relationship</source>
          <target state="translated">допустимое значение типа &lt;code&gt;std::weak_ordering&lt;/code&gt; указывающее отношение меньше чем (упорядочено до)</target>
        </trans-unit>
        <trans-unit id="9e4647f796987297ce25c638aa6797954b40b730" translate="yes" xml:space="preserve">
          <source>a value</source>
          <target state="translated">ценность</target>
        </trans-unit>
        <trans-unit id="0080a9fe08a7b863dd9e687917ff52d787569044" translate="yes" xml:space="preserve">
          <source>a value computation (a read) B of M, then the evaluation B shall take its value from X or from a side effect Y that follows X in the modification order of M</source>
          <target state="translated">вычисление значения (читать)B из М,тогда оценка B берет его значение из Х или из побочного эффекта Y,который следует за Х в порядке изменения M</target>
        </trans-unit>
        <trans-unit id="ed91d57f15e2c287ca2c6b1611f90ef848643f68" translate="yes" xml:space="preserve">
          <source>a value computation B on M, and if the value of A comes from a write X on M, then the value of B is either the value stored by X, or the value stored by a side effect Y on M that appears later than X in the</source>
          <target state="translated">вычисление значения B на M,и если значение A происходит от записи X на M,то значение B является либо значением,сохраненным X,либо значением,сохраненным побочным эффектом Y на M,который появляется позже,чем X на</target>
        </trans-unit>
        <trans-unit id="a838c345c6c351622fb852312c931cf0edefcf2a" translate="yes" xml:space="preserve">
          <source>a value defining the base</source>
          <target state="translated">значение,определяющее базу</target>
        </trans-unit>
        <trans-unit id="e0b30833f253e4b436746ae3b71512c5fd52717e" translate="yes" xml:space="preserve">
          <source>a value defining the exponent</source>
          <target state="translated">значение,определяющее экспоненту</target>
        </trans-unit>
        <trans-unit id="4fce5a421893ea83b109ec3ef6c84048a8a4e5c1" translate="yes" xml:space="preserve">
          <source>a value of any type that can be transparently compared with a key</source>
          <target state="translated">значение любого типа,которое можно прозрачно сравнить с ключом.</target>
        </trans-unit>
        <trans-unit id="123a8d42bb84535e98ee2dd720b3dcf227832869" translate="yes" xml:space="preserve">
          <source>a value of type &lt;code&gt;&lt;a href=&quot;fpos&quot;&gt;std::fpos&lt;/a&gt;&lt;/code&gt; is constructible from a value of type &lt;code&gt;std::streamoff&lt;/code&gt;</source>
          <target state="translated">значение типа &lt;code&gt;&lt;a href=&quot;fpos&quot;&gt;std::fpos&lt;/a&gt;&lt;/code&gt; является конструктивным из значения типа &lt;code&gt;std::streamoff&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="524bc50a99aecd65256021ca2670cbce9d7b90e1" translate="yes" xml:space="preserve">
          <source>a value of type &lt;code&gt;&lt;a href=&quot;fpos&quot;&gt;std::fpos&lt;/a&gt;&lt;/code&gt; is implicitly convertible to &lt;code&gt;std::streamoff&lt;/code&gt; (the conversion result is the offset from the beginning of the file).</source>
          <target state="translated">значение типа &lt;code&gt;&lt;a href=&quot;fpos&quot;&gt;std::fpos&lt;/a&gt;&lt;/code&gt; неявно преобразуется в &lt;code&gt;std::streamoff&lt;/code&gt; (результатом преобразования является смещение от начала файла).</target>
        </trans-unit>
        <trans-unit id="9906ec61d6eb5d18cab351a3da11f3d62c7fbdc2" translate="yes" xml:space="preserve">
          <source>a value of type &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">значение типа &lt;code&gt;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1412ee9859fb3808f7e885a723fa58485f6ccb3" translate="yes" xml:space="preserve">
          <source>a value of type &lt;code&gt;std::streamoff&lt;/code&gt; may be added or subtracted from &lt;code&gt;&lt;a href=&quot;fpos&quot;&gt;std::fpos&lt;/a&gt;&lt;/code&gt; yielding a different &lt;code&gt;&lt;a href=&quot;fpos&quot;&gt;std::fpos&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">значение типа &lt;code&gt;std::streamoff&lt;/code&gt; может быть добавлено или вычтено из &lt;code&gt;&lt;a href=&quot;fpos&quot;&gt;std::fpos&lt;/a&gt;&lt;/code&gt; получением другого &lt;code&gt;&lt;a href=&quot;fpos&quot;&gt;std::fpos&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81c678d289ccdf886ceeb43e22df82d9ec59a85b" translate="yes" xml:space="preserve">
          <source>a value to assign to all of the referred elements</source>
          <target state="translated">значение для присвоения всем переданным элементам</target>
        </trans-unit>
        <trans-unit id="388c22b783a1c552e32f454816813bd8b6bed90f" translate="yes" xml:space="preserve">
          <source>a variant</source>
          <target state="translated">вариант</target>
        </trans-unit>
        <trans-unit id="ef78772f4ff009c1de352b6b5fb86b2c09121d43" translate="yes" xml:space="preserve">
          <source>a variant object to swap with</source>
          <target state="translated">вариант объекта для замены на</target>
        </trans-unit>
        <trans-unit id="08fcd2ed3c9e77b89178462e113bac02023b8ce0" translate="yes" xml:space="preserve">
          <source>a whitespace character (as determined by the &lt;a href=&quot;../../locale/ctype&quot;&gt;&lt;code&gt;ctype&amp;lt;CharT&amp;gt;&lt;/code&gt;&lt;/a&gt; facet) is found. The whitespace character is not extracted.</source>
          <target state="translated">найден символ пробела (как определено фасетом &lt;a href=&quot;../../locale/ctype&quot;&gt; &lt;code&gt;ctype&amp;lt;CharT&amp;gt;&lt;/code&gt; &lt;/a&gt; ). Пробельный символ не извлекается.</target>
        </trans-unit>
        <trans-unit id="fea335a82904fdc0ff7ed8d67686a2da59de347f" translate="yes" xml:space="preserve">
          <source>a wide string holding the converted value.</source>
          <target state="translated">широкая строка,содержащая преобразованное значение.</target>
        </trans-unit>
        <trans-unit id="d6fc49a513178412bd26585a1951e60e1512df6c" translate="yes" xml:space="preserve">
          <source>a wrapper that may or may not hold an object</source>
          <target state="translated">обертку,которая может держать или не держать предмет.</target>
        </trans-unit>
        <trans-unit id="49c1e12768af8227029571c7e937613f3d1dd4d4" translate="yes" xml:space="preserve">
          <source>a zero value of type &lt;code&gt;category&lt;/code&gt; indicating no facet category</source>
          <target state="translated">нулевое значение &lt;code&gt;category&lt;/code&gt; типа, указывающее отсутствие категории фасета</target>
        </trans-unit>
        <trans-unit id="f273695a5a1599ad5b5ca77ec4a73b0683a9ab3b" translate="yes" xml:space="preserve">
          <source>a(b...)</source>
          <target state="translated">a(b...)</target>
        </trans-unit>
        <trans-unit id="b7f70cb2bc562eb0488f01aebc9ebd032140296e" translate="yes" xml:space="preserve">
          <source>a) 5 whitespace characters (space, horizontal tab, vertical tab, form feed, new-line)</source>
          <target state="translated">a)5 пробельных символов (пробел,горизонтальная закладка,вертикальная закладка,перевод формы,новая строка)</target>
        </trans-unit>
        <trans-unit id="b12c756fdbcbb92b84994d84f0a2a18f6e350df3" translate="yes" xml:space="preserve">
          <source>a) Additionally, if the set of overloads is named by a &lt;a href=&quot;templates#template-id&quot;&gt;template-id&lt;/a&gt;, all of its type template arguments and template template arguments (but not non-type template arguments) are examined and their associated set of classes and namespaces are added to the set.</source>
          <target state="translated">а) Кроме того, если набор перегрузок назван с помощью &lt;a href=&quot;templates#template-id&quot;&gt;идентификатора шаблона&lt;/a&gt; , все его аргументы шаблона типа и аргументы шаблона шаблона (но не аргументы шаблона нетипизированного типа) проверяются, и связанный с ними набор классов и пространств имен добавляется в устанавливать.</target>
        </trans-unit>
        <trans-unit id="437f1f887f108bd8e9d9c9a167ac433a1868259a" translate="yes" xml:space="preserve">
          <source>a) All characters have been read from the format string (&lt;code&gt;fmtbeg == fmtend&lt;/code&gt;)</source>
          <target state="translated">а) Все символы были прочитаны из строки формата ( &lt;code&gt;fmtbeg == fmtend&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c5a157ebe1520696e0d5fa9829ecbafdf2d7c298" translate="yes" xml:space="preserve">
          <source>a) Constructors specified to call &lt;code&gt;traits::default_zone()&lt;/code&gt;(1-2) do not participate in overload resolution if that expression is not well-formed.</source>
          <target state="translated">a) Конструкторы, указанные для вызова &lt;code&gt;traits::default_zone()&lt;/code&gt; (1-2), не участвуют в разрешении перегрузки, если это выражение не правильно сформировано.</target>
        </trans-unit>
        <trans-unit id="6cd0a95fe5df6c4409914437d488e07b4c97ee7a" translate="yes" xml:space="preserve">
          <source>a) First, checks if there is a putback position, and if there isn't, backs up the get area by re-reading the file starting one byte earlier.</source>
          <target state="translated">a)Сначала проверяет,есть ли позиция отката,а если нет,делает резервную копию области get,перечитывая файл,начинающийся на один байт раньше.</target>
        </trans-unit>
        <trans-unit id="70339178f31d9c4b203af61ebfb3de6bac3e343d" translate="yes" xml:space="preserve">
          <source>a) First, checks if there is a putback position, and if there isn't, fails.</source>
          <target state="translated">a)Во-первых,проверяет,есть ли позиция отката,а если нет,то неудачно.</target>
        </trans-unit>
        <trans-unit id="266f244142e555e17245e516616d2942410a672e" translate="yes" xml:space="preserve">
          <source>a) First, checks if there is a putback position, and if there really isn't, fails. (stringbuf has no external character source to re-read)</source>
          <target state="translated">a)Во-первых,проверяет,есть ли позиция отката,а если нет,то проваливается.(stringbuf не имеет внешнего источника символов для повторного чтения).</target>
        </trans-unit>
        <trans-unit id="4f06d25a28e83158d3b062e8fbd9c4c1906e02be" translate="yes" xml:space="preserve">
          <source>a) First, checks if there is a putback position, and if there really isn't, fails. (strstreambuf has no external character source to re-read)</source>
          <target state="translated">a)Во-первых,проверяет,есть ли позиция отката,а если нет,то проваливается.(strstreambuf не имеет внешнего источника символов для повторного чтения).</target>
        </trans-unit>
        <trans-unit id="bfd4d72a2e404d093102dbf4ffd691103314cc54" translate="yes" xml:space="preserve">
          <source>a) First, the character &lt;code&gt;delim&lt;/code&gt; is added to the sequence</source>
          <target state="translated">а) Сначала в &lt;code&gt;delim&lt;/code&gt; добавляется разделитель символов</target>
        </trans-unit>
        <trans-unit id="65bd11e1267cf1174bd8f32fbdbc7fedac11d5ab" translate="yes" xml:space="preserve">
          <source>a) If &lt;code&gt;D&lt;/code&gt; is non-reference type &lt;code&gt;A&lt;/code&gt;, then the signatures are:</source>
          <target state="translated">а) Если &lt;code&gt;D&lt;/code&gt; не ссылочный тип &lt;code&gt;A&lt;/code&gt; , то подписи:</target>
        </trans-unit>
        <trans-unit id="0fc003912afddad6053db83d5148e7cdc01edceb" translate="yes" xml:space="preserve">
          <source>a) If &lt;code&gt;str.size()&lt;/code&gt; is not less than &lt;code&gt;os.width()&lt;/code&gt;, uses the range &lt;code&gt;[str.begin(), str.end())&lt;/code&gt; as-is</source>
          <target state="translated">a) Если &lt;code&gt;str.size()&lt;/code&gt; не меньше, чем &lt;code&gt;os.width()&lt;/code&gt; , использует диапазон &lt;code&gt;[str.begin(), str.end())&lt;/code&gt; как есть</target>
        </trans-unit>
        <trans-unit id="89a5f788593c8daf9e9ddffc020a930e268fbd9a" translate="yes" xml:space="preserve">
          <source>a) If &lt;code&gt;v.size()&lt;/code&gt; is not less than &lt;code&gt;os.width()&lt;/code&gt;, uses the range &lt;code&gt;[v.begin(), v.end())&lt;/code&gt; as-is</source>
          <target state="translated">a) Если &lt;code&gt;v.size()&lt;/code&gt; не меньше, чем &lt;code&gt;os.width()&lt;/code&gt; , использует диапазон &lt;code&gt;[v.begin(), v.end())&lt;/code&gt; как есть</target>
        </trans-unit>
        <trans-unit id="8b8c44237f1afed0004cf3c4a245cc4d1c4bbddd" translate="yes" xml:space="preserve">
          <source>a) If expression is a &lt;a href=&quot;value_category&quot;&gt;glvalue expression&lt;/a&gt; that identifies an &lt;a href=&quot;objects#Polymorphic_objects&quot;&gt;object of a polymorphic type&lt;/a&gt; (that is, a class that declares or inherits at least one &lt;a href=&quot;virtual&quot;&gt;virtual function&lt;/a&gt;), the &lt;code&gt;typeid&lt;/code&gt; expression evaluates the expression and then refers to the &lt;code&gt;&lt;a href=&quot;../types/type_info&quot;&gt;std::type_info&lt;/a&gt;&lt;/code&gt; object that represents the dynamic type of the expression. If the glvalue expression is obtained by applying the unary * operator to a pointer and the pointer is a null pointer value, an exception of type &lt;code&gt;&lt;a href=&quot;../types/bad_typeid&quot;&gt;std::bad_typeid&lt;/a&gt;&lt;/code&gt; or a type derived from &lt;code&gt;&lt;a href=&quot;../types/bad_typeid&quot;&gt;std::bad_typeid&lt;/a&gt;&lt;/code&gt; is thrown.</source>
          <target state="translated">a) Если выражение является выражением &lt;a href=&quot;value_category&quot;&gt;glvalue,&lt;/a&gt; которое идентифицирует &lt;a href=&quot;objects#Polymorphic_objects&quot;&gt;объект полиморфного типа&lt;/a&gt; (то есть класс, который объявляет или наследует хотя бы одну &lt;a href=&quot;virtual&quot;&gt;виртуальную функцию&lt;/a&gt; ), выражение &lt;code&gt;typeid&lt;/code&gt; оценивает выражение и затем ссылается на объект &lt;code&gt;&lt;a href=&quot;../types/type_info&quot;&gt;std::type_info&lt;/a&gt;&lt;/code&gt; который представляет динамический тип выражения. Если выражение glvalue получено путем применения унарного оператора * к указателю, и указатель является нулевым значением указателя, исключение типа &lt;code&gt;&lt;a href=&quot;../types/bad_typeid&quot;&gt;std::bad_typeid&lt;/a&gt;&lt;/code&gt; или типа, производного от &lt;code&gt;&lt;a href=&quot;../types/bad_typeid&quot;&gt;std::bad_typeid&lt;/a&gt;&lt;/code&gt; , выбрасывается.</target>
        </trans-unit>
        <trans-unit id="b1682667f6f58387c4a3a5eb5d60565f9e8c0ee3" translate="yes" xml:space="preserve">
          <source>a) If the first character extracted does not equal &lt;code&gt;delim&lt;/code&gt; (as determined by the stream's &lt;code&gt;traits_type::eq&lt;/code&gt;), then simply performs &lt;code&gt;in &amp;gt;&amp;gt; s&lt;/code&gt;.</source>
          <target state="translated">a) Если первый извлеченный символ не равен &lt;code&gt;delim&lt;/code&gt; (как определено &lt;code&gt;traits_type::eq&lt;/code&gt; ) потока , тогда просто выполняется &lt;code&gt;in &amp;gt;&amp;gt; s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cf877b1bb6d84626c8b2480a35ab58ddc09aac4" translate="yes" xml:space="preserve">
          <source>a) If the overload set includes a literal operator with the parameter type &lt;code&gt;long double&lt;/code&gt;, the user-defined literal expression is treated as a function call &lt;code&gt;operator &quot;&quot; X(fL)&lt;/code&gt;, where &lt;code&gt;f&lt;/code&gt; is the literal without ud-suffix</source>
          <target state="translated">а) Если в набор перегрузки входит оператор литерала с типом параметра &lt;code&gt;long double&lt;/code&gt; , пользовательское литеральное выражение обрабатывается как &lt;code&gt;operator &quot;&quot; X(fL)&lt;/code&gt; вызова функции &quot;&quot; X (fL) , где &lt;code&gt;f&lt;/code&gt; - литерал без суффикса ud</target>
        </trans-unit>
        <trans-unit id="2a10c79ee5b49281c2c3402d762bbc9e13c5f52e" translate="yes" xml:space="preserve">
          <source>a) If the overload set includes a string literal operator template with a non-type template parameter for which &lt;code&gt;str&lt;/code&gt; is a well-formed template argument, then the user-defined literal expression is treated as a function call &lt;code&gt;operator &quot;&quot; X&amp;lt;str&amp;gt;()&lt;/code&gt;,</source>
          <target state="translated">a) Если набор перегрузки включает шаблон строкового литерального оператора с нетиповым параметром шаблона, для которого &lt;code&gt;str&lt;/code&gt; является правильно сформированным аргументом шаблона, то пользовательское литеральное выражение обрабатывается как &lt;code&gt;operator &quot;&quot; X&amp;lt;str&amp;gt;()&lt;/code&gt; вызова функции &quot;&quot; X &amp;lt;str&amp;gt; () ,</target>
        </trans-unit>
        <trans-unit id="3f946980c27e51eef79ec387ad641f4792c71801" translate="yes" xml:space="preserve">
          <source>a) Initializes the base class by calling the default constructor of &lt;code&gt;&lt;a href=&quot;../basic_streambuf&quot;&gt;std::streambuf&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">а) Инициализирует базовый класс, вызывая конструктор по умолчанию &lt;code&gt;&lt;a href=&quot;../basic_streambuf&quot;&gt;std::streambuf&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="107a2fb46199d233745f2a933254fe3517b475f3" translate="yes" xml:space="preserve">
          <source>a) Template arguments are substituted into the return-type-requirement;</source>
          <target state="translated">a)Аргументы шаблонов подставляются в требование типа возврата;</target>
        </trans-unit>
        <trans-unit id="8ea62973ffbaf6e4b7be3215f3e34664f8df82be" translate="yes" xml:space="preserve">
          <source>a) The class itself</source>
          <target state="translated">а)Сам класс</target>
        </trans-unit>
        <trans-unit id="466fce6e76439d17f18e4aea7f97216937bf04cf" translate="yes" xml:space="preserve">
          <source>a) The most derived object pointed/identified by expression is examined. If, in that object, expression points/refers to a public base of &lt;code&gt;Derived&lt;/code&gt;, and if only one subobject of &lt;code&gt;Derived&lt;/code&gt; type is derived from the subobject pointed/identified by expression, then the result of the cast points/refers to that &lt;code&gt;Derived&lt;/code&gt; subobject. (This is known as a &quot;downcast&quot;.)</source>
          <target state="translated">а) Исследуется наиболее производный объект, указанный / идентифицированный выражением. Если в этом объекте выражение указывает / ссылается на общедоступную базу &lt;code&gt;Derived&lt;/code&gt; , и если только один подобъект типа &lt;code&gt;Derived&lt;/code&gt; получен из подобъекта, указанного / идентифицированного выражением, то результат точек приведения / ссылается на этот &lt;code&gt;Derived&lt;/code&gt; подобъект. (Это известно как &amp;laquo;удрученный&amp;raquo;.)</target>
        </trans-unit>
        <trans-unit id="987633d7111212e5e8e7663207a7b93bc7019313" translate="yes" xml:space="preserve">
          <source>a) The types of all template arguments provided for type template parameters (skipping non-type template parameters and skipping template template parameters)</source>
          <target state="translated">a)Типы всех аргументов шаблонов,предусмотренных для параметров шаблона типа (пропущенные параметры шаблонов,не относящихся к типу и пропущенные параметры шаблонов)</target>
        </trans-unit>
        <trans-unit id="7a518d047a5d3a8b77c37fbf7069dabf9cecb089" translate="yes" xml:space="preserve">
          <source>a) Then checks what character is in the putback position. If the character held there is already equal to &lt;code&gt;c&lt;/code&gt;, as determined by &lt;code&gt;Traits::eq(to_char_type(c), gptr()[-1])&lt;/code&gt;, then simply decrements &lt;a href=&quot;../basic_streambuf/gptr&quot;&gt;&lt;code&gt;basic_streambuf::gptr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">а) Затем проверяет, какой персонаж находится в положении возврата. Если удерживаемый там символ уже равен &lt;code&gt;c&lt;/code&gt; , как определено в &lt;code&gt;Traits::eq(to_char_type(c), gptr()[-1])&lt;/code&gt; , тогда просто уменьшается &lt;a href=&quot;../basic_streambuf/gptr&quot;&gt; &lt;code&gt;basic_streambuf::gptr()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2a8ed2e6f2abdfefbc372215e5d0630692101cbb" translate="yes" xml:space="preserve">
          <source>a) all non-member functions (in which case the argument list for the purpose of overload resolution is exactly the argument list used in the function call expression)</source>
          <target state="translated">a)все функции,не являющиеся членами (в этом случае список аргументов с целью разрешения перегрузки является именно тем списком аргументов,который используется в выражении вызова функции)</target>
        </trans-unit>
        <trans-unit id="3600f271d2e3151d703465b10d1c79c86ecf96f2" translate="yes" xml:space="preserve">
          <source>a) at every level other than top level, the union of the cv-qualifications of P1 and P2 at that level b) if the resulting cv-qualification at any level is different from P1's or P2's cv-qualification at the same level, then const is added to every level between the top level and this one.</source>
          <target state="translated">a)на каждом уровне,кроме верхнего,союз cv-квалификаций Р1 и Р2 на этом уровне b)если результирующая cv-квалификация на любом уровне отличается от cv-квалификации Р1 или Р2 на том же уровне,то const добавляется к каждому уровню между верхним и этим уровнем.</target>
        </trans-unit>
        <trans-unit id="0fd7f604404718216681289b701b2019db7cabf8" translate="yes" xml:space="preserve">
          <source>a) end-of-file condition on &lt;code&gt;input&lt;/code&gt;, in which case, &lt;code&gt;getline&lt;/code&gt; sets &lt;a href=&quot;../../io/ios_base/iostate&quot;&gt;&lt;code&gt;eofbit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">а) условие конца файла при &lt;code&gt;input&lt;/code&gt; , в этом случае &lt;code&gt;getline&lt;/code&gt; устанавливает &lt;a href=&quot;../../io/ios_base/iostate&quot;&gt; &lt;code&gt;eofbit&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a57ad183139e2466db24858c2f6b437736f099b1" translate="yes" xml:space="preserve">
          <source>a) expanding or contracting the existing area pointed to by &lt;code&gt;ptr&lt;/code&gt;, if possible. The contents of the area remain unchanged up to the lesser of the new and old sizes. If the area is expanded, the contents of the new part of the array are undefined.</source>
          <target state="translated">а) расширение или сокращение существующей области, на которую указывает &lt;code&gt;ptr&lt;/code&gt; , если это возможно. Содержание области остается неизменным вплоть до меньшего из новых и старых размеров. Если область расширяется, содержимое новой части массива не определено.</target>
        </trans-unit>
        <trans-unit id="1b4a80e9567643deb27123df938bbea4e9deeb55" translate="yes" xml:space="preserve">
          <source>a) header names such as &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt; or &lt;code&gt;&quot;myfile.h&quot;&lt;/code&gt;</source>
          <target state="translated">а) имена заголовков, такие как &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt; или &lt;code&gt;&quot;myfile.h&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa7a443418dd879e2d3885e2eeffb2a19cb00ec5" translate="yes" xml:space="preserve">
          <source>a) if &lt;code&gt;A&lt;/code&gt; is a reference type, &lt;code&gt;A&lt;/code&gt; can be more cv-qualified than the deduced &lt;code&gt;A&lt;/code&gt;;</source>
          <target state="translated">a) если &lt;code&gt;A&lt;/code&gt; является ссылочным типом, &lt;code&gt;A&lt;/code&gt; может быть более квалифицированным по cv, чем выведенный &lt;code&gt;A&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="f4629c4d4e36547d54a5ff31cb306103dd320521" translate="yes" xml:space="preserve">
          <source>a) if &lt;code&gt;A&lt;/code&gt; is an array type, &lt;code&gt;A&lt;/code&gt; is replaced by the pointer type obtained from array-to-pointer conversion;</source>
          <target state="translated">a) если &lt;code&gt;A&lt;/code&gt; является типом массива, &lt;code&gt;A&lt;/code&gt; заменяется типом указателя, полученным при преобразовании массива в указатель;</target>
        </trans-unit>
        <trans-unit id="86bf0dd3de46a355e6f516c216a3d299b1d3c83c" translate="yes" xml:space="preserve">
          <source>a) if &lt;code&gt;E&lt;/code&gt; is a reference type, this deleter is copy constructed from &lt;code&gt;u&lt;/code&gt;'s deleter (requires that this construction does not throw)</source>
          <target state="translated">а) если &lt;code&gt;E&lt;/code&gt; является ссылочным типом, это Deleter является копия строится из &lt;code&gt;u&lt;/code&gt; &amp;laquo;s Deleter (требует , чтобы эта конструкция не бросает)</target>
        </trans-unit>
        <trans-unit id="75935c9c6507a48245ed01cc000eac33523c73f2" translate="yes" xml:space="preserve">
          <source>a) if &lt;code&gt;dir == ios_base::beg&lt;/code&gt;, then &lt;code&gt;newoff&lt;/code&gt; is zero</source>
          <target state="translated">а) если &lt;code&gt;dir == ios_base::beg&lt;/code&gt; , то &lt;code&gt;newoff&lt;/code&gt; равен нулю</target>
        </trans-unit>
        <trans-unit id="36876e0da5a6352311db14fe41a6ef11b5558dc4" translate="yes" xml:space="preserve">
          <source>a) if &lt;code&gt;way == ios_base::beg&lt;/code&gt;, then &lt;code&gt;newoff&lt;/code&gt; is zero</source>
          <target state="translated">а) если &lt;code&gt;way == ios_base::beg&lt;/code&gt; , то &lt;code&gt;newoff&lt;/code&gt; равен нулю</target>
        </trans-unit>
        <trans-unit id="9415c3eca36aef401421e81341c99e5d0258e061" translate="yes" xml:space="preserve">
          <source>a) if B is a call to &lt;code&gt;&lt;a href=&quot;kill_dependency&quot;&gt;std::kill_dependency&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">а) если B является вызовом &lt;code&gt;&lt;a href=&quot;kill_dependency&quot;&gt;std::kill_dependency&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4325cff51c1a1b727a056e105a42662966383a79" translate="yes" xml:space="preserve">
          <source>a) if the &lt;a href=&quot;value_category&quot;&gt;value category&lt;/a&gt; of expression is</source>
          <target state="translated">а) если &lt;a href=&quot;value_category&quot;&gt;категория значения&lt;/a&gt; выражения</target>
        </trans-unit>
        <trans-unit id="fefeba7499751b0acaf52cae7444340f065e725f" translate="yes" xml:space="preserve">
          <source>a) if the &lt;code&gt;app&lt;/code&gt; bit is not set in &lt;code&gt;mode&lt;/code&gt;, constructs the buffer by calling &lt;code&gt;strstreambuf(s, n, s)&lt;/code&gt;. The behavior is undefined if there are less than &lt;code&gt;n&lt;/code&gt; elements in the array whose first element is pointed to by &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">а) если бит &lt;code&gt;app&lt;/code&gt; не установлен в &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;strstreambuf(s, n, s)&lt;/code&gt; буфер, вызывая strstreambuf (s, n, s) . Поведение не определено, если в массиве меньше &lt;code&gt;n&lt;/code&gt; элементов, на первый элемент которых указывает &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7894b98d334227df25984f2365ff6c6cc8b0636" translate="yes" xml:space="preserve">
          <source>a) if the next character in the format string is &lt;code&gt;'%'&lt;/code&gt;, followed by one or two characters that form a valid &lt;code&gt;&lt;a href=&quot;../../io/manip/get_time&quot;&gt;std::get_time&lt;/a&gt;&lt;/code&gt; conversion specifier (see below), these characters are used in the call &lt;code&gt;do_get(beg, end, str, err, t, format, modifier)&lt;/code&gt;, where &lt;code&gt;format&lt;/code&gt; is the primary conversion specifier character, and &lt;code&gt;modifier&lt;/code&gt; is the optional modifier (which appears between &lt;code&gt;%&lt;/code&gt; and the format character, if present). If there is no modifier, the value &lt;code&gt;'\0'&lt;/code&gt; is used. If the format string is ambiguous or ends too early to determine the conversion specifier after &lt;code&gt;'%'&lt;/code&gt;, &lt;code&gt;eofbit&lt;/code&gt; is set in &lt;code&gt;err&lt;/code&gt; and the loop is terminated. If, after the call to &lt;code&gt;do_get&lt;/code&gt;, no error bits are set in &lt;code&gt;err&lt;/code&gt;, the function increments &lt;code&gt;fmtbeg&lt;/code&gt; to point right after the conversion specifier and continues the loop.</source>
          <target state="translated">a) если следующий символ в строке формата - &lt;code&gt;'%'&lt;/code&gt; , за которым следуют один или два символа, которые образуют действительный &lt;code&gt;&lt;a href=&quot;../../io/manip/get_time&quot;&gt;std::get_time&lt;/a&gt;&lt;/code&gt; преобразования std :: get_time (см. ниже), эти символы используются в вызове &lt;code&gt;do_get(beg, end, str, err, t, format, modifier)&lt;/code&gt; , где &lt;code&gt;format&lt;/code&gt; является основным символом спецификатора преобразования, а &lt;code&gt;modifier&lt;/code&gt; является необязательным модификатором (который отображается между &lt;code&gt;%&lt;/code&gt; и символом формата, если имеется). Если модификатора нет, используется значение &lt;code&gt;'\0'&lt;/code&gt; . Если строка формата является неоднозначной или заканчивается слишком рано для определения спецификатора преобразования после &lt;code&gt;'%'&lt;/code&gt; , &lt;code&gt;eofbit&lt;/code&gt; устанавливается в &lt;code&gt;err&lt;/code&gt; и цикл прекращается. Если после вызова &lt;code&gt;do_get&lt;/code&gt; биты ошибок не установлены в &lt;code&gt;err&lt;/code&gt; , функция увеличивает &lt;code&gt;fmtbeg&lt;/code&gt; до точки сразу после спецификатора преобразования и продолжает цикл.</target>
        </trans-unit>
        <trans-unit id="2a3f9733550f79127464bd1985d73fd844c27e51" translate="yes" xml:space="preserve">
          <source>a) if the overload set includes a literal operator with the parameter type &lt;code&gt;unsigned long long&lt;/code&gt;, the user-defined literal expression is treated as a function call &lt;code&gt;operator &quot;&quot; X(nULL)&lt;/code&gt;, where n is the literal without ud-suffix</source>
          <target state="translated">a) если набор перегрузки включает литеральный оператор с типом параметра &lt;code&gt;unsigned long long&lt;/code&gt; , пользовательское литеральное выражение обрабатывается как &lt;code&gt;operator &quot;&quot; X(nULL)&lt;/code&gt; вызова функции &quot;&quot; X (nULL) , где n - литерал без ud-суффикса</target>
        </trans-unit>
        <trans-unit id="8ff1d91e7bf01a52263d9ca6bf6d54deabdf55f1" translate="yes" xml:space="preserve">
          <source>a) if the return type is a reference type then &lt;code&gt;P&lt;/code&gt; is the referred type;</source>
          <target state="translated">а) если возвращаемый тип является ссылочным типом, то &lt;code&gt;P&lt;/code&gt; является ссылочным типом;</target>
        </trans-unit>
        <trans-unit id="d6ca939dac63496ce1a7896929a05af6de16b4c0" translate="yes" xml:space="preserve">
          <source>a) in particular, it cannot be called recursively</source>
          <target state="translated">а)в частности,его нельзя назвать рекурсивным.</target>
        </trans-unit>
        <trans-unit id="32f66b4fdfcb16fba7881642ecfaf01a274dbc58" translate="yes" xml:space="preserve">
          <source>a) lvalue expression that refers to a function</source>
          <target state="translated">a)выражение значения,которое относится к функции</target>
        </trans-unit>
        <trans-unit id="90d549a3d6e3e7a42f31186199a89ec8f7ea7f71" translate="yes" xml:space="preserve">
          <source>a) non-static data members, including &lt;a href=&quot;bit_field&quot;&gt;bit fields&lt;/a&gt;.</source>
          <target state="translated">а) нестатические элементы данных, включая &lt;a href=&quot;bit_field&quot;&gt;битовые поля&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="01a68e221021efbc30c8b4f61ab50cd59c5c9506" translate="yes" xml:space="preserve">
          <source>a) the body of the class in which the name is used until the point of use</source>
          <target state="translated">a)тело класса,в котором имя используется до точки использования</target>
        </trans-unit>
        <trans-unit id="96aeb2c24c928e697969ee5996046eb5bad88f4a" translate="yes" xml:space="preserve">
          <source>a)&lt;a href=&quot;member_functions&quot;&gt;non-static member functions&lt;/a&gt;</source>
          <target state="translated">а) &lt;a href=&quot;member_functions&quot;&gt;нестатические функции-члены&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc15a74be8b6296570c4d7251452f29a134e7ee5" translate="yes" xml:space="preserve">
          <source>a)&lt;a href=&quot;nested_classes&quot;&gt;nested classes&lt;/a&gt; and &lt;a href=&quot;enum&quot;&gt;enumerations&lt;/a&gt; defined within the class definition</source>
          <target state="translated">а) &lt;a href=&quot;nested_classes&quot;&gt;вложенные классы&lt;/a&gt; и &lt;a href=&quot;enum&quot;&gt;перечисления,&lt;/a&gt; определенные в определении класса</target>
        </trans-unit>
        <trans-unit id="4c051741c0c7f67c6c50951fdfe67640e795795e" translate="yes" xml:space="preserve">
          <source>a)&lt;code&gt;&lt;a href=&quot;const_cast&quot;&gt;const_cast&lt;/a&gt;&amp;lt;new_type&amp;gt;(expression)&lt;/code&gt;;</source>
          <target state="translated">a)&lt;code&gt;&lt;a href=&quot;const_cast&quot;&gt;const_cast&lt;/a&gt;&amp;lt;new_type&amp;gt;(expression)&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="4f84ea299f7b645cd8d86774845675ab03032e27" translate="yes" xml:space="preserve">
          <source>a)&lt;code&gt;Derived*&lt;/code&gt; to &lt;code&gt;Mid*&lt;/code&gt; is better than &lt;code&gt;Derived*&lt;/code&gt; to &lt;code&gt;Base*&lt;/code&gt;</source>
          <target state="translated">a) &lt;code&gt;Derived*&lt;/code&gt; в &lt;code&gt;Mid*&lt;/code&gt; лучше, чем &lt;code&gt;Derived*&lt;/code&gt; в &lt;code&gt;Base*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31737b5a9eaba866293c4ef9008f5fae1736f1d8" translate="yes" xml:space="preserve">
          <source>a)&lt;code&gt;S1&lt;/code&gt; is a subsequence of &lt;code&gt;S2&lt;/code&gt;, excluding lvalue transformations. The identity conversion sequence is considered a subsequence of any other conversion</source>
          <target state="translated">а) &lt;code&gt;S1&lt;/code&gt; является подпоследовательностью &lt;code&gt;S2&lt;/code&gt; , исключая преобразования lvalue. Последовательность преобразования идентичности считается подпоследовательностью любого другого преобразования</target>
        </trans-unit>
        <trans-unit id="20561dfb4af837c2c1253d337b24b4377276e9c3" translate="yes" xml:space="preserve">
          <source>a)&lt;code&gt;unique_ptr&amp;lt;U, E&amp;gt;::pointer&lt;/code&gt; is implicitly convertible to &lt;code&gt;pointer&lt;/code&gt;</source>
          <target state="translated">а) &lt;code&gt;unique_ptr&amp;lt;U, E&amp;gt;::pointer&lt;/code&gt; неявно преобразуется в &lt;code&gt;pointer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1bd666a395a45955a30af87360ff4202a5b546c3" translate="yes" xml:space="preserve">
          <source>a, b</source>
          <target state="translated">a,b</target>
        </trans-unit>
        <trans-unit id="4f66a14585189df94fde24c6b596c110334603ba" translate="yes" xml:space="preserve">
          <source>a, b, t</source>
          <target state="translated">а,б,т</target>
        </trans-unit>
        <trans-unit id="cdbcd756eb8f17f7dc2acf4d5c4c960ce69213d5" translate="yes" xml:space="preserve">
          <source>a-&amp;gt;</source>
          <target state="translated">a-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5445080535365b5d9e518cf1e903081f400c3601" translate="yes" xml:space="preserve">
          <source>a-x</source>
          <target state="translated">a-x</target>
        </trans-unit>
        <trans-unit id="ccff2fee4b15e0b46f79f86ce5d1de59163bb483" translate="yes" xml:space="preserve">
          <source>a=b</source>
          <target state="translated">a=b</target>
        </trans-unit>
        <trans-unit id="0c2e6999146b2e5d98e688ae468db68d0b172c4d" translate="yes" xml:space="preserve">
          <source>a@</source>
          <target state="translated">a@</target>
        </trans-unit>
        <trans-unit id="d0338b23241f124f2c83fa6f5821920039bf85db" translate="yes" xml:space="preserve">
          <source>a@b</source>
          <target state="translated">a@b</target>
        </trans-unit>
        <trans-unit id="357888d6b962c5c8b3e8a734b8a8a0c6ee4f908d" translate="yes" xml:space="preserve">
          <source>a[b]</source>
          <target state="translated">a[b]</target>
        </trans-unit>
        <trans-unit id="da23614e02469a0d7c7bd1bdab5c9c474b1904dc" translate="yes" xml:space="preserve">
          <source>ab</source>
          <target state="translated">ab</target>
        </trans-unit>
        <trans-unit id="f930859e3099495023c7f4c15223e146e3fb6fdd" translate="yes" xml:space="preserve">
          <source>abandon</source>
          <target state="translated">abandon</target>
        </trans-unit>
        <trans-unit id="d884ac7276623dfd54d1861aa636cd9fdc3be252" translate="yes" xml:space="preserve">
          <source>abnormal termination condition, as is e.g. initiated by &lt;code&gt;&lt;a href=&quot;abort&quot;&gt;std::abort()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">ненормальное условие завершения, например, инициируемое &lt;code&gt;&lt;a href=&quot;abort&quot;&gt;std::abort()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b61646f016483b318b49a910668a966b6ce09ede" translate="yes" xml:space="preserve">
          <source>abort</source>
          <target state="translated">abort</target>
        </trans-unit>
        <trans-unit id="7923a997e5ef7f7635917efd7303a93b2c10c23a" translate="yes" xml:space="preserve">
          <source>aborts the program if the user-specified condition is not &lt;code&gt;true&lt;/code&gt;. May be disabled for release builds</source>
          <target state="translated">прерывает программу, если указанное пользователем условие не &lt;code&gt;true&lt;/code&gt; . Может быть отключен для сборок релиза</target>
        </trans-unit>
        <trans-unit id="fad868aafb711de55855c42148bd81a55818c60c" translate="yes" xml:space="preserve">
          <source>above increases in order &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;signed char&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;long long&lt;/code&gt;. The rank of any unsigned type is equal to the rank of the corresponding signed type. The rank of &lt;code&gt;char&lt;/code&gt; is equal to the rank of &lt;code&gt;signed char&lt;/code&gt; and &lt;code&gt;unsigned char&lt;/code&gt;. The ranks of &lt;code&gt;char8_t&lt;/code&gt;, &lt;code&gt;char16_t&lt;/code&gt;, &lt;code&gt;char32_t&lt;/code&gt;, and &lt;code&gt;wchar_t&lt;/code&gt; are equal to the ranks of their underlying types.</source>
          <target state="translated">выше увеличивается в порядке &lt;code&gt;bool&lt;/code&gt; , &lt;code&gt;signed char&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;long long&lt;/code&gt; . Ранг любого беззнакового типа равен рангу соответствующего знакового типа. Ранг &lt;code&gt;char&lt;/code&gt; равен чину &lt;code&gt;signed char&lt;/code&gt; и &lt;code&gt;unsigned char&lt;/code&gt; . Ранги &lt;code&gt;char8_t&lt;/code&gt; , &lt;code&gt;char16_t&lt;/code&gt; , &lt;code&gt;char32_t&lt;/code&gt; и &lt;code&gt;wchar_t&lt;/code&gt; равны рангу их базовых типов.</target>
        </trans-unit>
        <trans-unit id="1e65ff3ef356705efc535c261cce7e89f8cee0c9" translate="yes" xml:space="preserve">
          <source>abs(float)fabsfabsffabsl</source>
          <target state="translated">abs(float)fabsfabsffabsl</target>
        </trans-unit>
        <trans-unit id="c29936715c0d2c3e4408351c24894294d22a4ba5" translate="yes" xml:space="preserve">
          <source>abs(int)labsllabs</source>
          <target state="translated">abs(int)labsllabs</target>
        </trans-unit>
        <trans-unit id="2865c132ee8862e2b1023420a048b9e64f309b98" translate="yes" xml:space="preserve">
          <source>abs(std::chrono::duration)</source>
          <target state="translated">abs(std::chrono::duration)</target>
        </trans-unit>
        <trans-unit id="77b54798bb142efabb4fbf3dd7388194d673d55b" translate="yes" xml:space="preserve">
          <source>abs(std::complex)</source>
          <target state="translated">abs(std::complex)</target>
        </trans-unit>
        <trans-unit id="3f6f84ee958d0dc342ab556a62bf9eb387f756c7" translate="yes" xml:space="preserve">
          <source>abs(std::intmax_t)imaxabs</source>
          <target state="translated">abs(std::intmax_t)imaxabs</target>
        </trans-unit>
        <trans-unit id="629c21ff1782d677e2f74b1c590cfef416bae5f9" translate="yes" xml:space="preserve">
          <source>abs(std::valarray)</source>
          <target state="translated">abs(std::valarray)</target>
        </trans-unit>
        <trans-unit id="da4dbfbc4fdc56237451cf5e9f9933b2b64f1ba6" translate="yes" xml:space="preserve">
          <source>absolute</source>
          <target state="translated">absolute</target>
        </trans-unit>
        <trans-unit id="c3900ea911127bf782b2d7bb9ec9503ece3dbba7" translate="yes" xml:space="preserve">
          <source>absolute path</source>
          <target state="translated">абсолютный путь</target>
        </trans-unit>
        <trans-unit id="5c3c5f72a420848d90e6c04225f08b02aa9c2b77" translate="yes" xml:space="preserve">
          <source>absolute position to set the input position indicator to.</source>
          <target state="translated">абсолютное положение для установки индикатора входного положения.</target>
        </trans-unit>
        <trans-unit id="61c2c580bcfab0cf5a1a4df3f332159163772460" translate="yes" xml:space="preserve">
          <source>absolute position to set the output position indicator to.</source>
          <target state="translated">абсолютное положение для установки выходного индикатора положения.</target>
        </trans-unit>
        <trans-unit id="bfcfa36ce011dfe9750e6271779802f950b0a9b0" translate="yes" xml:space="preserve">
          <source>absolute position to set the position indicator to.</source>
          <target state="translated">абсолютное положение для установки индикатора положения.</target>
        </trans-unit>
        <trans-unit id="f9357a557ff847531cb060f45d0abddb82c2e47d" translate="yes" xml:space="preserve">
          <source>absolute value of a floating point value (|x|)</source>
          <target state="translated">абсолютное значение значения с плавающей точкой (|x|).</target>
        </trans-unit>
        <trans-unit id="017e5cf729552cb794a307d6d89e749da467a128" translate="yes" xml:space="preserve">
          <source>abstract class</source>
          <target state="translated">абстрактный класс</target>
        </trans-unit>
        <trans-unit id="5038d042023e40d6ce8d0e80922c41525d5ae4cc" translate="yes" xml:space="preserve">
          <source>abstract classes</source>
          <target state="translated">абстрактные занятия</target>
        </trans-unit>
        <trans-unit id="94f6c5f94ae2b366113b13448ac6d33dc55f5680" translate="yes" xml:space="preserve">
          <source>abstract declarator or any other valid type-id (which may introduce a new type, as noted in &lt;a href=&quot;type-id#Type_naming&quot;&gt;type-id&lt;/a&gt;). The type-id cannot directly or indirectly refer to identifier. Note that the &lt;a href=&quot;scope#Point_of_declaration&quot;&gt;point of declaration&lt;/a&gt; of the identifier is at the semicolon following type-id.</source>
          <target state="translated">абстрактный декларатор или любой другой действительный идентификатор типа (который может вводить новый тип, как отмечено в &lt;a href=&quot;type-id#Type_naming&quot;&gt;идентификаторе типа&lt;/a&gt; ). Идентификатор типа не может прямо или косвенно ссылаться на идентификатор. Обратите внимание, что &lt;a href=&quot;scope#Point_of_declaration&quot;&gt;точка объявления&lt;/a&gt; идентификатора находится в точке с запятой после идентификатора типа.</target>
        </trans-unit>
        <trans-unit id="d2d95fa2bdf5419d67eecaf3bb0a95f06cbfc5c5" translate="yes" xml:space="preserve">
          <source>abstract-declarator</source>
          <target state="translated">abstract-declarator</target>
        </trans-unit>
        <trans-unit id="3f84dc8735c33645c3c6ec2b28ddc61872ade6e8" translate="yes" xml:space="preserve">
          <source>abstracts a raw device</source>
          <target state="translated">абстрагированное устройство</target>
        </trans-unit>
        <trans-unit id="0f12541afcce175fb34bb05a79c95b76e765488b" translate="yes" xml:space="preserve">
          <source>access</source>
          <target state="translated">access</target>
        </trans-unit>
        <trans-unit id="c13446887417f0ee1ca70bfd31ec213b1aae9588" translate="yes" xml:space="preserve">
          <source>access or insert specified element</source>
          <target state="translated">доступ или вставка заданного элемента</target>
        </trans-unit>
        <trans-unit id="56b973053d2fa8c95ecb2d733569768e1b0c037a" translate="yes" xml:space="preserve">
          <source>access specified element</source>
          <target state="translated">элемент доступа</target>
        </trans-unit>
        <trans-unit id="540303d3ae3cc4182bfdfad65005d31f4c07d893" translate="yes" xml:space="preserve">
          <source>access specified element with bounds checking</source>
          <target state="translated">элемент доступа с проверкой границ</target>
        </trans-unit>
        <trans-unit id="e00c2f98a2c96fa7830c21ad2f4a52eb01af5a35" translate="yes" xml:space="preserve">
          <source>access specifiers</source>
          <target state="translated">спецификаторы доступа</target>
        </trans-unit>
        <trans-unit id="a3ea0ce8f9724c6d4ab410d11a69b840ea5c34aa" translate="yes" xml:space="preserve">
          <source>access the first element</source>
          <target state="translated">доступ к первому элементу</target>
        </trans-unit>
        <trans-unit id="acf967c793171648e632f4e2726650884752bf0d" translate="yes" xml:space="preserve">
          <source>access the last element</source>
          <target state="translated">доступ к последнему элементу</target>
        </trans-unit>
        <trans-unit id="5fde07b591a1754fefc77ce5787cb7a391bd992a" translate="yes" xml:space="preserve">
          <source>access the stored &lt;a href=&quot;weekday&quot;&gt;&lt;code&gt;weekday&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">получить доступ к сохраненному &lt;a href=&quot;weekday&quot;&gt; &lt;code&gt;weekday&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="906a2b305ff3d81ef8cd00a47f6738b44a0703ea" translate="yes" xml:space="preserve">
          <source>access the stored index</source>
          <target state="translated">доступ к сохранённому индексу</target>
        </trans-unit>
        <trans-unit id="87ca35991bb3e79fd6877c160c25ae7faf5ede6c" translate="yes" xml:space="preserve">
          <source>access to an object with thread storage duration</source>
          <target state="translated">доступ к объекту с длительностью хранения резьбы</target>
        </trans-unit>
        <trans-unit id="fb4e35cb551b39ac5df3d0f5c072966de7e0bc5c" translate="yes" xml:space="preserve">
          <source>access to the list of environment variables</source>
          <target state="translated">доступ к списку переменных окружения</target>
        </trans-unit>
        <trans-unit id="b1308c40aaf0b391d87fbd3a01390b94a22792ed" translate="yes" xml:space="preserve">
          <source>access-specifier</source>
          <target state="translated">access-specifier</target>
        </trans-unit>
        <trans-unit id="915e34ef992cc2b0613cc3c40edfc6452401e5af" translate="yes" xml:space="preserve">
          <source>accesses a member of the current character, if &lt;code&gt;CharT&lt;/code&gt; has members</source>
          <target state="translated">получает доступ к члену текущего персонажа, если в &lt;code&gt;CharT&lt;/code&gt; есть члены</target>
        </trans-unit>
        <trans-unit id="ec8859cf199e5045f6063afe2a1c74fb02d86310" translate="yes" xml:space="preserve">
          <source>accesses an element by index</source>
          <target state="translated">получает доступ к элементам по индексу</target>
        </trans-unit>
        <trans-unit id="05f9e2f158d116ffcd2ec763b7eb6ae7093b6c93" translate="yes" xml:space="preserve">
          <source>accesses an element of a &lt;code&gt;pair&lt;/code&gt;</source>
          <target state="translated">получает доступ к элементу &lt;code&gt;pair&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="307893ffb3af2e8fb68336d7ef2e7a1929e77102" translate="yes" xml:space="preserve">
          <source>accesses an element of a static-extent &lt;code&gt;span&lt;/code&gt;</source>
          <target state="translated">получает доступ к элементу статического &lt;code&gt;span&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0182010f2c943b8a28936254d752a9929a1a678d" translate="yes" xml:space="preserve">
          <source>accesses an element of an &lt;code&gt;array&lt;/code&gt;</source>
          <target state="translated">обращается к элементу &lt;code&gt;array&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37a1948643b02777abcafeaf44b6d60a9d38302f" translate="yes" xml:space="preserve">
          <source>accesses an element of the sequence</source>
          <target state="translated">получает доступ к элементу последовательности</target>
        </trans-unit>
        <trans-unit id="16f588403ceac81d8595da43738008c3fc6e1445" translate="yes" xml:space="preserve">
          <source>accesses and controls the global time zone database information</source>
          <target state="translated">получает доступ к информации о глобальных базах данных о часовых поясах и контролирует ее.</target>
        </trans-unit>
        <trans-unit id="f5416cec259aea9dfa39a3f2ce38b554c84d8a5e" translate="yes" xml:space="preserve">
          <source>accesses components of the broken-down time</source>
          <target state="translated">получает доступ к компонентам времени простоя</target>
        </trans-unit>
        <trans-unit id="465fe1107a769f9ce97b786479c03fa486b03376" translate="yes" xml:space="preserve">
          <source>accesses current submatch</source>
          <target state="translated">доступы к текущему субматчу</target>
        </trans-unit>
        <trans-unit id="bca0b5aaf98d0590c7928ca275f5956143cdec63" translate="yes" xml:space="preserve">
          <source>accesses narrow string message catalog</source>
          <target state="translated">получает доступ к каталогу узкострочных сообщений</target>
        </trans-unit>
        <trans-unit id="c444b9366752a59b27a9b7ac65ca3c9498e20709" translate="yes" xml:space="preserve">
          <source>accesses specific bit</source>
          <target state="translated">бит доступа</target>
        </trans-unit>
        <trans-unit id="95954de39efedbbd11c945a66e5aa8c3f1d1887b" translate="yes" xml:space="preserve">
          <source>accesses the contained value</source>
          <target state="translated">получает доступ к содержанию</target>
        </trans-unit>
        <trans-unit id="775eaef77e89b2353f245e0a7c595a3a78725127" translate="yes" xml:space="preserve">
          <source>accesses the current match</source>
          <target state="translated">получает доступ к текущему совпадению</target>
        </trans-unit>
        <trans-unit id="b44ceda3ed70328cb739aa2ee008c5eb1278dfad" translate="yes" xml:space="preserve">
          <source>accesses the fields of this object</source>
          <target state="translated">получает доступ к полям этого объекта</target>
        </trans-unit>
        <trans-unit id="d84b05b447149685099b9b6948031163a1e2d5e0" translate="yes" xml:space="preserve">
          <source>accesses the first character</source>
          <target state="translated">получает доступ к первому персонажу</target>
        </trans-unit>
        <trans-unit id="62acc20490bfabe7d01394dca5e559d356299170" translate="yes" xml:space="preserve">
          <source>accesses the imaginary part of the complex number</source>
          <target state="translated">получает доступ к воображаемой части комплексного номера</target>
        </trans-unit>
        <trans-unit id="59ae76f4b08e3760a696737fcbacb908be66ad5b" translate="yes" xml:space="preserve">
          <source>accesses the last character</source>
          <target state="translated">получает доступ к последнему персонажу</target>
        </trans-unit>
        <trans-unit id="b940a59bb00a6f07c41d32193cc93f4d06c689f3" translate="yes" xml:space="preserve">
          <source>accesses the managed object</source>
          <target state="translated">получает доступ к управляемому объекту</target>
        </trans-unit>
        <trans-unit id="6cecf7b31cbb5f621fc8950954889fe16ee84e34" translate="yes" xml:space="preserve">
          <source>accesses the name and target of this &lt;code&gt;link&lt;/code&gt;</source>
          <target state="translated">получает доступ к имени и цели этой &lt;code&gt;link&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c24822cdeb7c5c6b787dbc0cfccf8c9b4d0844f" translate="yes" xml:space="preserve">
          <source>accesses the next variadic function argument</source>
          <target state="translated">получает доступ к аргументу следующей вариадической функции</target>
        </trans-unit>
        <trans-unit id="a723286dc7c96e200ca879444de3ca39d101395a" translate="yes" xml:space="preserve">
          <source>accesses the output buffer</source>
          <target state="translated">получает доступ к буферу вывода</target>
        </trans-unit>
        <trans-unit id="cc9c132adacee5a38570bd948d96708f25f22c70" translate="yes" xml:space="preserve">
          <source>accesses the pointed-to element</source>
          <target state="translated">доступ к указанному элементу</target>
        </trans-unit>
        <trans-unit id="f659a4329cc71af1f8453875837d8bdeea128bc3" translate="yes" xml:space="preserve">
          <source>accesses the pointed-to entry</source>
          <target state="translated">доступ к записям</target>
        </trans-unit>
        <trans-unit id="06749fb65deecc2a5f99c07aeba3c78da06c5d99" translate="yes" xml:space="preserve">
          <source>accesses the real part of the complex number</source>
          <target state="translated">получает доступ к реальной части номера комплекса</target>
        </trans-unit>
        <trans-unit id="d8d22c1f14bb5705d73a83db309c93df994c0ec3" translate="yes" xml:space="preserve">
          <source>accesses the specified character</source>
          <target state="translated">получает доступ к указанному символу</target>
        </trans-unit>
        <trans-unit id="a7e98c24cae4eb960b8d4836ab8f3ea920d5cd33" translate="yes" xml:space="preserve">
          <source>accesses the specified character with bounds checking</source>
          <target state="translated">получает доступ к указанному символу с проверкой границ</target>
        </trans-unit>
        <trans-unit id="e6cb980e3d73e943d3a98d43bbd0ddc2b636c900" translate="yes" xml:space="preserve">
          <source>accesses the stored &lt;a href=&quot;month&quot;&gt;&lt;code&gt;month&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Доступ к сохраненному &lt;a href=&quot;month&quot;&gt; &lt;code&gt;month&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04dd43f3cd3807aca556b12a774affdf6d647640" translate="yes" xml:space="preserve">
          <source>accesses the stored &lt;a href=&quot;weekday&quot;&gt;&lt;code&gt;weekday&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">получает доступ к сохраненному &lt;a href=&quot;weekday&quot;&gt; &lt;code&gt;weekday&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="492bb42c77a0e5c1f01c3f2f21b3a95dd660f213" translate="yes" xml:space="preserve">
          <source>accesses the stored &lt;code&gt;&lt;a href=&quot;duration&quot;&gt;std::chrono::duration&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">получает доступ к сохраненному &lt;code&gt;&lt;a href=&quot;duration&quot;&gt;std::chrono::duration&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b02198e8684eaef8960a2b5511c750f28ce6f3c" translate="yes" xml:space="preserve">
          <source>accesses the stored reference</source>
          <target state="translated">получает доступ к сохраненной ссылке</target>
        </trans-unit>
        <trans-unit id="5a0949910f4e9ce70df4b5a6858d42a95bb5fe8a" translate="yes" xml:space="preserve">
          <source>accesses the stored year and month</source>
          <target state="translated">получает доступ к сохраненным году и месяцу</target>
        </trans-unit>
        <trans-unit id="3a3bee2d9fd1bebfbec951f94b4fbc358b038699" translate="yes" xml:space="preserve">
          <source>accesses the top element</source>
          <target state="translated">доступ к верхнему элементу</target>
        </trans-unit>
        <trans-unit id="1238af1dbae2bdff4827ecd767faaec52cd2f0c9" translate="yes" xml:space="preserve">
          <source>accesses the underlying iterator</source>
          <target state="translated">получает доступ к основному итератору</target>
        </trans-unit>
        <trans-unit id="79724327f1dd9bba356678fd364c9a023950fff5" translate="yes" xml:space="preserve">
          <source>accesses the year, month, and day stored in this object</source>
          <target state="translated">получает доступ к году,месяцу и дню,хранящимся в этом объекте.</target>
        </trans-unit>
        <trans-unit id="1a9feb44130ba9645d99b9eecc75f447bc1d8761" translate="yes" xml:space="preserve">
          <source>accesses wide string message catalog</source>
          <target state="translated">получает доступ к каталогу широкополосных сообщений</target>
        </trans-unit>
        <trans-unit id="df78b3677e55c6ee07efc2d06b164bd63f9a9955" translate="yes" xml:space="preserve">
          <source>according to the &lt;a href=&quot;function_template#Function_template_overloading&quot;&gt;partial ordering rules for template specializations&lt;/a&gt;</source>
          <target state="translated">согласно &lt;a href=&quot;function_template#Function_template_overloading&quot;&gt;правилам частичного заказа для шаблонных специализаций&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da612b00046cfa57f5be01bb44f03c97ee5fcb20" translate="yes" xml:space="preserve">
          <source>accumulate</source>
          <target state="translated">accumulate</target>
        </trans-unit>
        <trans-unit id="969d0d833f2295227c83dba1aaddeb7931e8c815" translate="yes" xml:space="preserve">
          <source>acos(std::complex)</source>
          <target state="translated">acos(std::complex)</target>
        </trans-unit>
        <trans-unit id="58e3fcc77d138cab4f6a774c9c292bfa85c21b49" translate="yes" xml:space="preserve">
          <source>acos(std::valarray)</source>
          <target state="translated">acos(std::valarray)</target>
        </trans-unit>
        <trans-unit id="147d0b37b30b50556b9e55d6a8ce932951fad569" translate="yes" xml:space="preserve">
          <source>acos(z), or simply i acos(z) in the upper half of the complex plane.</source>
          <target state="translated">acos(z),или просто i acos(z)в верхней половине комплексной плоскости.</target>
        </trans-unit>
        <trans-unit id="7065e6c51c4483cfded5cc061fbccd9a93bc104c" translate="yes" xml:space="preserve">
          <source>acosacosfacosl</source>
          <target state="translated">acosacosfacosl</target>
        </trans-unit>
        <trans-unit id="7bace49638bf06b1efa71fbfdf894ebe60780854" translate="yes" xml:space="preserve">
          <source>acosh(std::complex)</source>
          <target state="translated">acosh(std::complex)</target>
        </trans-unit>
        <trans-unit id="1824220df1c196fec7eafe8955123ab045039cc2" translate="yes" xml:space="preserve">
          <source>acoshacoshfacoshl</source>
          <target state="translated">acoshacoshfacoshl</target>
        </trans-unit>
        <trans-unit id="d264d67e573f09fc23a4fe379a6118f55837fca5" translate="yes" xml:space="preserve">
          <source>acquire a &lt;code&gt;&lt;a href=&quot;unique_lock&quot;&gt;std::unique_lock&lt;/a&gt;&amp;lt;&lt;a href=&quot;mutex&quot;&gt;std::mutex&lt;/a&gt;&amp;gt;&lt;/code&gt;, on the same mutex as used to protect the shared variable</source>
          <target state="translated">получить &lt;code&gt;&lt;a href=&quot;unique_lock&quot;&gt;std::unique_lock&lt;/a&gt;&amp;lt;&lt;a href=&quot;mutex&quot;&gt;std::mutex&lt;/a&gt;&amp;gt;&lt;/code&gt; на том же мьютексе, который используется для защиты разделяемой переменной</target>
        </trans-unit>
        <trans-unit id="a9bc8fed02b026b5da76bada25db9dd881ed6ed4" translate="yes" xml:space="preserve">
          <source>acquire a &lt;code&gt;std::mutex&lt;/code&gt; (typically via &lt;code&gt;&lt;a href=&quot;lock_guard&quot;&gt;std::lock_guard&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">получить &lt;code&gt;std::mutex&lt;/code&gt; (обычно через &lt;code&gt;&lt;a href=&quot;lock_guard&quot;&gt;std::lock_guard&lt;/a&gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1c52002b743e4db150df31d4c92e7f8849bd4395" translate="yes" xml:space="preserve">
          <source>acquire operation</source>
          <target state="translated">приобретать операцию</target>
        </trans-unit>
        <trans-unit id="4ef76fa8e24cfa0361d135d67b2541d876650e36" translate="yes" xml:space="preserve">
          <source>acquiring</source>
          <target state="translated">acquiring</target>
        </trans-unit>
        <trans-unit id="8ffffc286d453e652bfac9de12106da90371064f" translate="yes" xml:space="preserve">
          <source>acquiring ownership of uniquely-owned objects with dynamic lifetime from functions</source>
          <target state="translated">приобретение в собственность уникальных объектов с динамическим сроком службы от функций</target>
        </trans-unit>
        <trans-unit id="6d00e89ff1449e7e4f2a840cddb77d23fd2b2f24" translate="yes" xml:space="preserve">
          <source>acquisition of the same mutex by another thread, which makes it possible to use mutex locks to guard against data races).</source>
          <target state="translated">приобретение того же мьютекса другой нитью,что позволяет использовать замки мьютекса для защиты от информационных гонок).</target>
        </trans-unit>
        <trans-unit id="2bb6b986c5d6fb26dd9dd1054b545ce022371b0c" translate="yes" xml:space="preserve">
          <source>active</source>
          <target state="translated">active</target>
        </trans-unit>
        <trans-unit id="753dd87e8ccc64b87d0bbcfaa4d22967e3fe4b37" translate="yes" xml:space="preserve">
          <source>adaptor-compatible binary function base class</source>
          <target state="translated">совместимый с адаптером базовый класс двоичной функции</target>
        </trans-unit>
        <trans-unit id="72447ffa88b09df99068afb67c29d3a54cb5fadf" translate="yes" xml:space="preserve">
          <source>adaptor-compatible unary function base class</source>
          <target state="translated">совместимый с адаптером унарный базовый класс функции</target>
        </trans-unit>
        <trans-unit id="69d271afa26b810f304986f7a3e42710dedd5b5b" translate="yes" xml:space="preserve">
          <source>adaptor-compatible wrapper for a pointer to binary function</source>
          <target state="translated">совместимая с адаптером обёртка для указателя на двоичную функцию</target>
        </trans-unit>
        <trans-unit id="0ef0bdc337d7db60af26ef685049203e69bffbeb" translate="yes" xml:space="preserve">
          <source>adaptor-compatible wrapper for a pointer to unary function</source>
          <target state="translated">совместимая с адаптером обёртка для указателя на унарную функцию</target>
        </trans-unit>
        <trans-unit id="6b45e3e66241b53da4d372bf38ebef61cf4fa88c" translate="yes" xml:space="preserve">
          <source>adapts a container to provide priority queue</source>
          <target state="translated">адаптирует контейнер для обеспечения приоритетной очереди</target>
        </trans-unit>
        <trans-unit id="f44b1f587e06014ffd1b396959d7e5924f35d62a" translate="yes" xml:space="preserve">
          <source>adapts a container to provide queue (FIFO data structure)</source>
          <target state="translated">адаптирует контейнер для обеспечения очереди (структура данных FIFO).</target>
        </trans-unit>
        <trans-unit id="a2c2542b48319c34907ef62c76a9dba9a9d67eb8" translate="yes" xml:space="preserve">
          <source>adapts a container to provide stack (LIFO data structure)</source>
          <target state="translated">адаптирует контейнер для обеспечения стека (структура данных LIFO).</target>
        </trans-unit>
        <trans-unit id="769883e6d1100ebda5d28fd6042a37be3876b9d1" translate="yes" xml:space="preserve">
          <source>adapts an iterator type and its sentinel into a common iterator type</source>
          <target state="translated">адаптирует тип итератора и его отправителя к общему типу итератора.</target>
        </trans-unit>
        <trans-unit id="f210596b4591c28cf506b0bc0f3ee050ecaceda5" translate="yes" xml:space="preserve">
          <source>add_cvadd_constadd_volatile</source>
          <target state="translated">add_cvadd_constadd_volatile</target>
        </trans-unit>
        <trans-unit id="d2fd8a962f37dd070cb8e7ef291455be3fbb7839" translate="yes" xml:space="preserve">
          <source>add_lvalue_referenceadd_rvalue_reference</source>
          <target state="translated">add_lvalue_referenceadd_rvalue_reference</target>
        </trans-unit>
        <trans-unit id="c10db3e5e79ca19d9a95535feab621d6dc4439dc" translate="yes" xml:space="preserve">
          <source>add_pointer</source>
          <target state="translated">add_pointer</target>
        </trans-unit>
        <trans-unit id="b5068a6027c02c7ea48d5a113f86725adb944ad0" translate="yes" xml:space="preserve">
          <source>added deduction guide to compensate</source>
          <target state="translated">дополнительное руководство по вычетам для компенсации</target>
        </trans-unit>
        <trans-unit id="8d3b71db02e3e60dba8f024dd42576f9999bc4df" translate="yes" xml:space="preserve">
          <source>added specializations for the (optional)&lt;a href=&quot;../types/integer&quot;&gt;fixed width integer types&lt;/a&gt;</source>
          <target state="translated">добавлены специализации для (необязательных) &lt;a href=&quot;../types/integer&quot;&gt;целочисленных типов фиксированной ширины&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5cfb5004dd2067d94f66ff490b9093a36cb5ddb1" translate="yes" xml:space="preserve">
          <source>added when outputting the value zero.</source>
          <target state="translated">добавляется при выводе значения &quot;ноль&quot;.</target>
        </trans-unit>
        <trans-unit id="c3805175370d19c334b59f45b87343b9f2b7f5e1" translate="yes" xml:space="preserve">
          <source>addition</source>
          <target state="translated">addition</target>
        </trans-unit>
        <trans-unit id="1ea3777754d6be1f3458ef90dda1cf54a1ddb440" translate="yes" xml:space="preserve">
          <source>addition assignment</source>
          <target state="translated">назначение добавок</target>
        </trans-unit>
        <trans-unit id="c662180230cad14787d4ab7e77aa08681ce783fa" translate="yes" xml:space="preserve">
          <source>address</source>
          <target state="translated">address</target>
        </trans-unit>
        <trans-unit id="5b315dc02e14c809919f68f522b349b9c44f2925" translate="yes" xml:space="preserve">
          <source>address of a non-&lt;a href=&quot;consteval&quot;&gt;immediate&lt;/a&gt;(since C++20) function</source>
          <target state="translated">адрес не &lt;a href=&quot;consteval&quot;&gt;немедленной&lt;/a&gt; (начиная с C ++ 20) функции</target>
        </trans-unit>
        <trans-unit id="eb34dc0bc6ab99b271ca355327b72d566de03a71" translate="yes" xml:space="preserve">
          <source>address of a static data member of class template wasn't listed as value-dependent</source>
          <target state="translated">адрес статического члена данных шаблона класса не был указан как зависимый от значения</target>
        </trans-unit>
        <trans-unit id="747910511a469f592f853abcf9bbe779225bb93a" translate="yes" xml:space="preserve">
          <source>address of an integer to store the number of characters processed</source>
          <target state="translated">адрес целого числа для хранения количества обрабатываемых символов</target>
        </trans-unit>
        <trans-unit id="b1043904678dc10589deecfc3da04acb5a909ace" translate="yes" xml:space="preserve">
          <source>address of an object with static storage duration</source>
          <target state="translated">адрес объекта со статической длительностью хранения</target>
        </trans-unit>
        <trans-unit id="0ef9e5f21c4b2a452958acd3ccc12cf3b8916f74" translate="yes" xml:space="preserve">
          <source>address past the end of an object with static storage duration</source>
          <target state="translated">адрес,прошедший мимо конца объекта со статической длительностью хранения данных</target>
        </trans-unit>
        <trans-unit id="b809a213f1ad9d43201369bb2544ce80339a7b6e" translate="yes" xml:space="preserve">
          <source>address-of</source>
          <target state="translated">address-of</target>
        </trans-unit>
        <trans-unit id="40f2dae54e0ddb0fc4b0c849314643b8388e724f" translate="yes" xml:space="preserve">
          <source>address-of expression where the argument is &lt;a href=&quot;name&quot;&gt;qualified-id&lt;/a&gt; that names a dependent member of the</source>
          <target state="translated">выражение адреса, где аргумент является &lt;a href=&quot;name&quot;&gt;квалифицированным идентификатором,&lt;/a&gt; который называет зависимого члена</target>
        </trans-unit>
        <trans-unit id="cbe672bfb7df9114e5a5d7a66255465d2c48ff65" translate="yes" xml:space="preserve">
          <source>address-of expression where the argument is any expression which, evaluated as a core &lt;a href=&quot;constant_expression&quot;&gt;constant expression&lt;/a&gt;, refers to a &lt;a href=&quot;templates#Templated_entity&quot;&gt;templated entity&lt;/a&gt; that is an object with static or thread storage duration or a member function.</source>
          <target state="translated">выражение адреса, где аргумент - это любое выражение, которое, оцениваемое как &lt;a href=&quot;constant_expression&quot;&gt;выражение&lt;/a&gt; основной константы , относится к &lt;a href=&quot;templates#Templated_entity&quot;&gt;шаблонному объекту,&lt;/a&gt; который является объектом со статическим или потоковым хранением или функцией-членом.</target>
        </trans-unit>
        <trans-unit id="c61f395dd6c8d7db141019a92a343c477926fdb6" translate="yes" xml:space="preserve">
          <source>addressof</source>
          <target state="translated">addressof</target>
        </trans-unit>
        <trans-unit id="51bc29a86b300c5d53c7c38e96bed8c9018766ee" translate="yes" xml:space="preserve">
          <source>adds &lt;code&gt;const&lt;/code&gt; or/and &lt;code&gt;volatile&lt;/code&gt; specifiers to the given type</source>
          <target state="translated">добавляет &lt;code&gt;const&lt;/code&gt; или / и &lt;code&gt;volatile&lt;/code&gt; спецификаторы к данному типу</target>
        </trans-unit>
        <trans-unit id="b238ca924247f57ca82beb00323fe6d99be66d06" translate="yes" xml:space="preserve">
          <source>adds a</source>
          <target state="translated">добавляет</target>
        </trans-unit>
        <trans-unit id="03818ca3df5100fffe7e66cc0c01eee5dcda218f" translate="yes" xml:space="preserve">
          <source>adds a &lt;a href=&quot;constraints&quot;&gt;constraint&lt;/a&gt; to operator() of the closure type</source>
          <target state="translated">добавляет &lt;a href=&quot;constraints&quot;&gt;ограничение&lt;/a&gt; для оператора () типа замыкания</target>
        </trans-unit>
        <trans-unit id="928dd687718dec5749821a6a94b19c15fead030b" translate="yes" xml:space="preserve">
          <source>adds a non-atomic value to an atomic object and obtains the previous value of the atomic</source>
          <target state="translated">добавляет неатомарное значение к атомарному объекту и получает предыдущее значение атомарного</target>
        </trans-unit>
        <trans-unit id="ba8b0284257b6a715c5318a6287d71aa39129b46" translate="yes" xml:space="preserve">
          <source>adds a pointer to the given type</source>
          <target state="translated">добавляет указатель к данному типу</target>
        </trans-unit>
        <trans-unit id="f80dd4d2cd0bcee4ee8526b1165ffa3c1c6a39d3" translate="yes" xml:space="preserve">
          <source>adds an element to a max heap</source>
          <target state="translated">добавляет элемент в максимальную кучу</target>
        </trans-unit>
        <trans-unit id="1c7096c9072e1ca6c63ca31328a3157cbeff6767" translate="yes" xml:space="preserve">
          <source>adds an element to the end</source>
          <target state="translated">добавляет элемент в конец</target>
        </trans-unit>
        <trans-unit id="ff998f914138c2792fec23c9de0b27f0108cea2d" translate="yes" xml:space="preserve">
          <source>adds or removes const</source>
          <target state="translated">добавляет или удаляет const</target>
        </trans-unit>
        <trans-unit id="2b8dd459f1819e2baac7e08339e8c7455a092a7f" translate="yes" xml:space="preserve">
          <source>adds or subtracts a &lt;code&gt;year_month_day&lt;/code&gt; and some number of years or months</source>
          <target state="translated">добавляет или вычитает &lt;code&gt;year_month_day&lt;/code&gt; и некоторое количество лет или месяцев</target>
        </trans-unit>
        <trans-unit id="2f40085ed3b0d6a4d5dab5973feef24b014f6418" translate="yes" xml:space="preserve">
          <source>adds or subtracts a &lt;code&gt;year_month_day_last&lt;/code&gt; and some number of years or months</source>
          <target state="translated">добавляет или вычитает &lt;code&gt;year_month_day_last&lt;/code&gt; и некоторое количество лет или месяцев</target>
        </trans-unit>
        <trans-unit id="df9e35fec334df66c0459ad64f74f0df4ccb8fad" translate="yes" xml:space="preserve">
          <source>adds or subtracts a &lt;code&gt;year_month_weekday&lt;/code&gt; and some number of years or months</source>
          <target state="translated">добавляет или вычитает &lt;code&gt;year_month_weekday&lt;/code&gt; и некоторое количество лет или месяцев</target>
        </trans-unit>
        <trans-unit id="27b6bfdf71e28fce1e5820ba5944eb30487a9ae7" translate="yes" xml:space="preserve">
          <source>adds or subtracts a &lt;code&gt;year_month_weekday_last&lt;/code&gt; and some number of years or months</source>
          <target state="translated">добавляет или вычитает &lt;code&gt;year_month_weekday_last&lt;/code&gt; и некоторое количество лет или месяцев</target>
        </trans-unit>
        <trans-unit id="46744eba2f263ac50d0bb53146c85c29e5ef862e" translate="yes" xml:space="preserve">
          <source>adds or subtracts a number of days</source>
          <target state="translated">добавляет или вычитает несколько дней</target>
        </trans-unit>
        <trans-unit id="0e94466f0d6c6b1d04bc7dcf164dd75dcc82fb94" translate="yes" xml:space="preserve">
          <source>adds or subtracts a number of days and a &lt;code&gt;day&lt;/code&gt;, or find the difference between two &lt;code&gt;day&lt;/code&gt;s</source>
          <target state="translated">адды или вычитает количество дней и &lt;code&gt;day&lt;/code&gt; , или найти разницу между двумя &lt;code&gt;day&lt;/code&gt; с</target>
        </trans-unit>
        <trans-unit id="36a8e881003bae15154cade1d3de8544ef289da5" translate="yes" xml:space="preserve">
          <source>adds or subtracts a number of months</source>
          <target state="translated">добавляет или вычитает несколько месяцев</target>
        </trans-unit>
        <trans-unit id="6d8f8fdcc2133aaaedb971370c1037715af72054" translate="yes" xml:space="preserve">
          <source>adds or subtracts a number of years from a &lt;code&gt;year&lt;/code&gt;</source>
          <target state="translated">добавляет или вычитает количество лет из &lt;code&gt;year&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ab8df456b68ba122fa332dc22e2d6dd371deebf" translate="yes" xml:space="preserve">
          <source>adds two &lt;code&gt;ratio&lt;/code&gt; objects at compile-time</source>
          <target state="translated">добавляет два объекта &lt;code&gt;ratio&lt;/code&gt; во время компиляции</target>
        </trans-unit>
        <trans-unit id="bd7c8b874f8476bf23fb5746e3ad7ddf342699a8" translate="yes" xml:space="preserve">
          <source>adds, subtracts, or performs bitwise AND, OR, XOR with the atomic value</source>
          <target state="translated">добавляет,вычитает или выполняет побитовое И,ИЛИ,XOR с атомным значением</target>
        </trans-unit>
        <trans-unit id="5b96d09fd002a16c88879f25e2a6d46b1776ec5e" translate="yes" xml:space="preserve">
          <source>adjacent_difference</source>
          <target state="translated">adjacent_difference</target>
        </trans-unit>
        <trans-unit id="5bc99e08c4036b497f248dd8c29d272802f1c8c2" translate="yes" xml:space="preserve">
          <source>adjacent_find</source>
          <target state="translated">adjacent_find</target>
        </trans-unit>
        <trans-unit id="6901746c7f6191f9249123a2d36164bf27e0d8fa" translate="yes" xml:space="preserve">
          <source>admits all six relational operators (==, !=, &amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=)</source>
          <target state="translated">допускает все шесть операторов отношений (==,! =, &amp;lt;, &amp;lt;=,&amp;gt;,&amp;gt; =)</target>
        </trans-unit>
        <trans-unit id="11be2e9fb9ae9dbef66cae3f5e0c99972a0e29ba" translate="yes" xml:space="preserve">
          <source>admits incomparable values: a &amp;lt; b, a == b, and a &amp;gt; b may all be false</source>
          <target state="translated">допускает несопоставимые значения: a &amp;lt;b, a == b и a&amp;gt; b могут быть ложными</target>
        </trans-unit>
        <trans-unit id="e8b205294e7822e95a5076fbcfdb12ca2ecc357e" translate="yes" xml:space="preserve">
          <source>admits only equality and inequality comparisons (no less-than/greater-than)</source>
          <target state="translated">допускает только сравнение равенства и неравенства (не меньше/грубее чем)</target>
        </trans-unit>
        <trans-unit id="6ef7c4c1946020fe892f9a105408da1f3c1932f2" translate="yes" xml:space="preserve">
          <source>advance</source>
          <target state="translated">advance</target>
        </trans-unit>
        <trans-unit id="62a9574b1b52d4bdf2f22c00b41676b3a37eb2ba" translate="yes" xml:space="preserve">
          <source>advances an iterator by given distance</source>
          <target state="translated">выдвигает итератор на заданное расстояние</target>
        </trans-unit>
        <trans-unit id="32894453397b1ec438842aab66d61f0014f55735" translate="yes" xml:space="preserve">
          <source>advances an iterator by given distance or to a given bound</source>
          <target state="translated">выдвигает итератор на заданное расстояние или на заданную границу</target>
        </trans-unit>
        <trans-unit id="5b11aa1a0b7aed524d2d6b5953269d3487fe4006" translate="yes" xml:space="preserve">
          <source>advances or decrements the iterator</source>
          <target state="translated">авансы или постановления итератор</target>
        </trans-unit>
        <trans-unit id="26991be4a6a6a7e3cdb3f24da3c127d7daf2c573" translate="yes" xml:space="preserve">
          <source>advances the adaptor's state by a specified amount</source>
          <target state="translated">изменяет состояние адаптера на указанную сумму</target>
        </trans-unit>
        <trans-unit id="0e38309f5798f45f0928e7adc091f016f56f5367" translate="yes" xml:space="preserve">
          <source>advances the engine's state and returns the generated value</source>
          <target state="translated">улучшает состояние двигателя и возвращает сгенерированное значение.</target>
        </trans-unit>
        <trans-unit id="087bd78f7232fdb4595a6ddb197dbef2480dccfe" translate="yes" xml:space="preserve">
          <source>advances the engine's state by a specified amount</source>
          <target state="translated">улучшает состояние двигателя на указанную сумму</target>
        </trans-unit>
        <trans-unit id="512f99862e0b3cef5daf3f659857c58234696d03" translate="yes" xml:space="preserve">
          <source>advances the input sequence as if by calling &lt;code&gt;&lt;a href=&quot;basic_streambuf/sbumpc&quot;&gt;sbumpc()&lt;/a&gt;&lt;/code&gt; and discarding the result</source>
          <target state="translated">продвигает входную последовательность, как будто вызывая &lt;code&gt;&lt;a href=&quot;basic_streambuf/sbumpc&quot;&gt;sbumpc()&lt;/a&gt;&lt;/code&gt; и отбрасывая результат</target>
        </trans-unit>
        <trans-unit id="bb689b3e4c92225b392a0c437f2426ea88d7073d" translate="yes" xml:space="preserve">
          <source>advances the input sequence, then reads one character without advancing again</source>
          <target state="translated">продвигает входную последовательность,затем считывает один символ,не продвигаясь снова.</target>
        </trans-unit>
        <trans-unit id="3e13f0cdc4bff252b3fc12b0073b17cb1b26df62" translate="yes" xml:space="preserve">
          <source>advances the iterator</source>
          <target state="translated">выдвигает итератор</target>
        </trans-unit>
        <trans-unit id="26ac3976cc204081f7fc170c2c508a90375e9644" translate="yes" xml:space="preserve">
          <source>advances the iterator to the next match</source>
          <target state="translated">переносит итератора на следующий матч</target>
        </trans-unit>
        <trans-unit id="0e67a355e08e5b859135a061941cc3f77f483383" translate="yes" xml:space="preserve">
          <source>advances the iterator to the next submatch</source>
          <target state="translated">выдвигает итератор на следующий субматч</target>
        </trans-unit>
        <trans-unit id="3afa71bd5aae54366f0176f23fdcf9c35f840990" translate="yes" xml:space="preserve">
          <source>advances the next pointer in the input sequence</source>
          <target state="translated">выдвигает следующий указатель в входной последовательности</target>
        </trans-unit>
        <trans-unit id="c58a866e45db788dbb423a6437f920e7370928c3" translate="yes" xml:space="preserve">
          <source>advances the next pointer of the output sequence</source>
          <target state="translated">выдвигает следующий указатель выходной последовательности</target>
        </trans-unit>
        <trans-unit id="b3d9641a1bbcdddee4fcac615f587a53006d2ba5" translate="yes" xml:space="preserve">
          <source>advances the state of the underlying engine and returns the generated value</source>
          <target state="translated">улучшает состояние основного двигателя и возвращает генерируемую стоимость</target>
        </trans-unit>
        <trans-unit id="3972074b9d38dd740738bd690ccb38704bb4545c" translate="yes" xml:space="preserve">
          <source>advances to the next entry</source>
          <target state="translated">переход к следующей записи</target>
        </trans-unit>
        <trans-unit id="427cdea0690695ffb9ba09fd84e9a45170427076" translate="yes" xml:space="preserve">
          <source>affect the input sequence</source>
          <target state="translated">влиять на последовательность ввода</target>
        </trans-unit>
        <trans-unit id="e14e0f397eb39ecfdfefc2379c5edce32cb8b646" translate="yes" xml:space="preserve">
          <source>affect the output sequence</source>
          <target state="translated">влиять на выходную последовательность</target>
        </trans-unit>
        <trans-unit id="405906c9d5be6ae5393ca65fb0e7c38e0d585ecb" translate="yes" xml:space="preserve">
          <source>after</source>
          <target state="translated">after</target>
        </trans-unit>
        <trans-unit id="6e48dd1f81b90b5ef9d19a8697cec332f063485c" translate="yes" xml:space="preserve">
          <source>after an equals sign</source>
          <target state="translated">знак равенства</target>
        </trans-unit>
        <trans-unit id="05ea1c7bbe06cd6f5183f0d4cfdc7686d9a02264" translate="yes" xml:space="preserve">
          <source>after the &lt;code&gt;-&amp;gt;&lt;/code&gt; operator applied to an expression of the type of pointer to its class or pointers to a class derived from it</source>
          <target state="translated">после того, как оператор &lt;code&gt;-&amp;gt;&lt;/code&gt; применяется к выражению типа указателя на его класс или указателей на класс, производный от него</target>
        </trans-unit>
        <trans-unit id="4b19efdbd915cbe7a7f2ecb49542a5a39a4f51e4" translate="yes" xml:space="preserve">
          <source>after the &lt;code&gt;.&lt;/code&gt; operator applied to an expression of the type of its class or a class derived from it</source>
          <target state="translated">после &lt;code&gt;.&lt;/code&gt; оператор применяется к выражению типа своего класса или класса, производного от него</target>
        </trans-unit>
        <trans-unit id="5839243b5a43130a5ea4dc26ee8372c6ea9df901" translate="yes" xml:space="preserve">
          <source>after the &lt;code&gt;::&lt;/code&gt; operator applied to the name of its class or the name of a class derived from it</source>
          <target state="translated">после того, как оператор &lt;code&gt;::&lt;/code&gt; применяется к имени своего класса или имени производного от него класса</target>
        </trans-unit>
        <trans-unit id="5f7f0dbfa03eb36f4c89d8bab9714325281a5a5a" translate="yes" xml:space="preserve">
          <source>after the application of the &lt;a href=&quot;implicit_cast#Lvalue_to_rvalue_conversion&quot;&gt;lvalue-to-rvalue&lt;/a&gt;, &lt;a href=&quot;implicit_cast#Array_to_pointer_conversion&quot;&gt;array-to-pointer&lt;/a&gt; and &lt;a href=&quot;implicit_cast#Function_to_pointer&quot;&gt;function-to-pointer&lt;/a&gt; standard conversions. The comparison is deprecated if both operands have array type prior to the application of these conversions.(since C++20).</source>
          <target state="translated">после применения стандартных преобразований &lt;a href=&quot;implicit_cast#Lvalue_to_rvalue_conversion&quot;&gt;lvalue-to-rvalue&lt;/a&gt; , &lt;a href=&quot;implicit_cast#Array_to_pointer_conversion&quot;&gt;array-to-pointer&lt;/a&gt; и &lt;a href=&quot;implicit_cast#Function_to_pointer&quot;&gt;function-to-pointer&lt;/a&gt; . Сравнение не рекомендуется, если оба операнда имеют тип массива до применения этих преобразований (начиная с C ++ 20).</target>
        </trans-unit>
        <trans-unit id="e646cfd5197867599b5bfdc248a50dc7f2c6029b" translate="yes" xml:space="preserve">
          <source>after the call on success, or &lt;code&gt;Traits::eof()&lt;/code&gt; otherwise.</source>
          <target state="translated">после успешного вызова или &lt;code&gt;Traits::eof()&lt;/code&gt; противном случае.</target>
        </trans-unit>
        <trans-unit id="d0b27f05c4ff0d5f0c6004e98dcf902967b09268" translate="yes" xml:space="preserve">
          <source>after the call too. For (4), &lt;code&gt;other&lt;/code&gt; is in a valid but unspecified state after the call.</source>
          <target state="translated">после звонка тоже. Для (4) &lt;code&gt;other&lt;/code&gt; находится в допустимом, но неопределенном состоянии после вызова.</target>
        </trans-unit>
        <trans-unit id="d7d932429ad84f98779e593f1c81b4a4882e8446" translate="yes" xml:space="preserve">
          <source>after the call.</source>
          <target state="translated">после звонка.</target>
        </trans-unit>
        <trans-unit id="7ed31c5224bc4c94df956ddd1235d777c56ab800" translate="yes" xml:space="preserve">
          <source>after the call. This constructor does not participate in overload resolution unless f is &lt;a href=&quot;../../../named_req/callable&quot;&gt;Callable&lt;/a&gt; for argument types &lt;code&gt;Args...&lt;/code&gt; and return type &lt;code&gt;R&lt;/code&gt;.(since C++14)</source>
          <target state="translated">после звонка. Этот конструктор не участвует в разрешении перегрузки, если f не &lt;a href=&quot;../../../named_req/callable&quot;&gt;Callable&lt;/a&gt; для типов аргумента &lt;code&gt;Args...&lt;/code&gt; и тип возврата &lt;code&gt;R&lt;/code&gt; (начиная с C ++ 14)</target>
        </trans-unit>
        <trans-unit id="b4fb7da36b3f7b1ae724970a76f93b7f00de0969" translate="yes" xml:space="preserve">
          <source>again if the allocation fails again. To end the loop,</source>
          <target state="translated">снова,если распределение опять провалится.Чтобы закончить цикл,</target>
        </trans-unit>
        <trans-unit id="b97cc48483b2e9ab91fb4dfda48842061307336c" translate="yes" xml:space="preserve">
          <source>aggregate initialization</source>
          <target state="translated">совокупная инициализация</target>
        </trans-unit>
        <trans-unit id="7ce8df7233e7763053efdfc8b30a51bb12732ac6" translate="yes" xml:space="preserve">
          <source>aggregate type</source>
          <target state="translated">вид агрегата</target>
        </trans-unit>
        <trans-unit id="0fb81bb695dc05e2098698bb66a355f5399be395" translate="yes" xml:space="preserve">
          <source>aggregates</source>
          <target state="translated">aggregates</target>
        </trans-unit>
        <trans-unit id="a8efddf9234b5a08fb372a8c355e6d0da3f8237e" translate="yes" xml:space="preserve">
          <source>aggregates a duration, a time point, and a function to get the current time point</source>
          <target state="translated">объединяет продолжительность,точку времени и функцию для получения текущей точки времени.</target>
        </trans-unit>
        <trans-unit id="2f9ee2b336682012cb445da6f3a0a52c68caf471" translate="yes" xml:space="preserve">
          <source>al</source>
          <target state="translated">al</target>
        </trans-unit>
        <trans-unit id="9a53b0819e7b65cebdd2f94ad43011ac678d3fc3" translate="yes" xml:space="preserve">
          <source>algorithm</source>
          <target state="translated">algorithm</target>
        </trans-unit>
        <trans-unit id="62a3e0aa372bf4b401d0e7a602d9babe0b0d2499" translate="yes" xml:space="preserve">
          <source>alias_name must be a name not previously used. alias_name is valid for the duration of the scope in which it is introduced.</source>
          <target state="translated">Псевдоним_имени должен быть именем,ранее не использованным.Псевдоним_имени действителен в течение всего времени,в течение которого он вводится в область,в которой он вводится.</target>
        </trans-unit>
        <trans-unit id="f9d315d167d647121565fbea4852b58f8b3dc6d6" translate="yes" xml:space="preserve">
          <source>aliasing constructor</source>
          <target state="translated">наклонно-направляющий конструктор</target>
        </trans-unit>
        <trans-unit id="ae21c64a87f6bb0b8e16e55c48be4cc638d7bd3f" translate="yes" xml:space="preserve">
          <source>align</source>
          <target state="translated">align</target>
        </trans-unit>
        <trans-unit id="d2fd65ac811685fa0c12ff97f47c846cb3b3719d" translate="yes" xml:space="preserve">
          <source>align_val_t</source>
          <target state="translated">align_val_t</target>
        </trans-unit>
        <trans-unit id="062f903e7a5b5fa5dd018873a2aa70adfb2020bd" translate="yes" xml:space="preserve">
          <source>alignas</source>
          <target state="translated">alignas</target>
        </trans-unit>
        <trans-unit id="d2fd59c3ec9ad34bd953e5f11ac1c941456814c1" translate="yes" xml:space="preserve">
          <source>alignas specifier</source>
          <target state="translated">спецификатор alignas</target>
        </trans-unit>
        <trans-unit id="7cdc609c186c4733a2acbfc607c3318867c326ab" translate="yes" xml:space="preserve">
          <source>alignas specifier (since C++11)</source>
          <target state="translated">спецификатор alignas (начиная с C++11)</target>
        </trans-unit>
        <trans-unit id="0d80ec85b39f8b9faf623f44b5b53e8f41051306" translate="yes" xml:space="preserve">
          <source>aligned_alloc</source>
          <target state="translated">aligned_alloc</target>
        </trans-unit>
        <trans-unit id="9c3a9b579cec2bdb9322f5605f74a3d98056ed51" translate="yes" xml:space="preserve">
          <source>aligned_storage</source>
          <target state="translated">aligned_storage</target>
        </trans-unit>
        <trans-unit id="49f74c445d08f09040cb65c50b58af8f07aa8e20" translate="yes" xml:space="preserve">
          <source>aligned_union</source>
          <target state="translated">aligned_union</target>
        </trans-unit>
        <trans-unit id="05dfeae5db3ff37e5e9f1f43350a95604f04689b" translate="yes" xml:space="preserve">
          <source>alignment</source>
          <target state="translated">alignment</target>
        </trans-unit>
        <trans-unit id="26c97894bec5624fddec14d478e62cceb596b4ac" translate="yes" xml:space="preserve">
          <source>alignment of the object or array element that was allocated</source>
          <target state="translated">выравнивание выделенного объекта или элемента массива</target>
        </trans-unit>
        <trans-unit id="7a5e5f751184b7bff89789dac0da42a54bbc4cb6" translate="yes" xml:space="preserve">
          <source>alignment requirement</source>
          <target state="translated">требование к выравниванию</target>
        </trans-unit>
        <trans-unit id="00e9f9e998ccc9a76d9e5fad02d091ad27213609" translate="yes" xml:space="preserve">
          <source>alignment requirement (can be determined with &lt;a href=&quot;alignof&quot;&gt;alignof&lt;/a&gt;);</source>
          <target state="translated">требование выравнивания (может быть определено с помощью &lt;a href=&quot;alignof&quot;&gt;alignof&lt;/a&gt; );</target>
        </trans-unit>
        <trans-unit id="c7f8cbc1cdcb2845ca1812c9627f4ec0336bd0e4" translate="yes" xml:space="preserve">
          <source>alignment to use. The behavior is undefined if this is not a valid alignment value</source>
          <target state="translated">выравнивание для использования.Поведение не определено,если это не является допустимым значением выравнивания.</target>
        </trans-unit>
        <trans-unit id="0f946d5f03de6bcc544296f461581864284613ab" translate="yes" xml:space="preserve">
          <source>alignment_of</source>
          <target state="translated">alignment_of</target>
        </trans-unit>
        <trans-unit id="6618af8ce931111a95a28db4c0927c80f0031c05" translate="yes" xml:space="preserve">
          <source>alignment_value</source>
          <target state="translated">alignment_value</target>
        </trans-unit>
        <trans-unit id="fb1a5c1c7487cd993b4929316313ab9c483a04a2" translate="yes" xml:space="preserve">
          <source>alignments</source>
          <target state="translated">alignments</target>
        </trans-unit>
        <trans-unit id="867318e23a3e63655204aafd2975563685ee0462" translate="yes" xml:space="preserve">
          <source>alignof</source>
          <target state="translated">alignof</target>
        </trans-unit>
        <trans-unit id="dd364569569c4e5e9276d4d34bfb0fcdd849599b" translate="yes" xml:space="preserve">
          <source>alignof operator</source>
          <target state="translated">выравнивающий оператор</target>
        </trans-unit>
        <trans-unit id="cb3cd5554ff7dcd354a29739b3112d6db786e43d" translate="yes" xml:space="preserve">
          <source>alignof operator (since C++11)</source>
          <target state="translated">оператор выравнивания (начиная с C++11)</target>
        </trans-unit>
        <trans-unit id="15c8254583df5906df07f2568c7f8d1b13a1e7b7" translate="yes" xml:space="preserve">
          <source>aligns a pointer in a buffer</source>
          <target state="translated">выравнивает указатель в буфере</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="c4e67993ae4c393a178997385da8d1e3b47df7f9" translate="yes" xml:space="preserve">
          <source>all &lt;a href=&quot;converting_constructor&quot;&gt;converting constructors&lt;/a&gt; of &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">все &lt;a href=&quot;converting_constructor&quot;&gt;преобразующие конструкторы&lt;/a&gt; из &lt;code&gt;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d863447d51813268aa2d5d7e4f422c9c24a3518" translate="yes" xml:space="preserve">
          <source>all characters from the temporary storage were successfully sent into the wrapped stream</source>
          <target state="translated">все символы из временного хранилища были успешно отправлены в обёрнутый поток.</target>
        </trans-unit>
        <trans-unit id="b9ca98d9138b7d54be7788dff1be4f90f113b969" translate="yes" xml:space="preserve">
          <source>all evaluations in B.</source>
          <target state="translated">все оценки в B.</target>
        </trans-unit>
        <trans-unit id="24212f16ea9a29476d3a21d5305c8817444d5024" translate="yes" xml:space="preserve">
          <source>all expressions used in a template parameter declaration</source>
          <target state="translated">все выражения,используемые в объявлении параметра шаблона</target>
        </trans-unit>
        <trans-unit id="e0e255b3b724efee3ff0d70b1bf9f8f3fb6223e8" translate="yes" xml:space="preserve">
          <source>all expressions used in the &lt;a href=&quot;explicit&quot;&gt;explicit specifier&lt;/a&gt;</source>
          <target state="translated">все выражения, используемые в &lt;a href=&quot;explicit&quot;&gt;явном спецификаторе&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d8b8b85aafe58095d2be5369429b85db0fcf2e0" translate="yes" xml:space="preserve">
          <source>all expressions used in the function type</source>
          <target state="translated">все выражения,используемые в типе функции</target>
        </trans-unit>
        <trans-unit id="ea48c4767b3a597344b0121caa2b0cef82fdb4bc" translate="yes" xml:space="preserve">
          <source>all member declarations must be in the same class</source>
          <target state="translated">все заявления членов должны быть в одном классе</target>
        </trans-unit>
        <trans-unit id="b2d2de1fe7482f81dfe786a0ca809b50f409d946" translate="yes" xml:space="preserve">
          <source>all necessary characters were written. &lt;code&gt;state&lt;/code&gt; now represents initial shift state</source>
          <target state="translated">все необходимые символы были написаны. &lt;code&gt;state&lt;/code&gt; теперь представляет начальное смещение</target>
        </trans-unit>
        <trans-unit id="3901bef67eedb38614a5e32484e45e30423b9d8b" translate="yes" xml:space="preserve">
          <source>all non-static data members and base classes are of non-volatile literal types.</source>
          <target state="translated">все нестатические члены данных и базовые классы имеют энергонезависимые буквальные типы.</target>
        </trans-unit>
        <trans-unit id="40aa30cb2d1798c0dac5498329a86ce6d8f0ebe4" translate="yes" xml:space="preserve">
          <source>all of &lt;code&gt;T&lt;/code&gt;'s base class subobjects and non-static data members have strong structural equality, recursively, and</source>
          <target state="translated">все подобъекты базового класса &lt;code&gt;T&lt;/code&gt; и нестатические члены данных имеют сильное структурное равенство, рекурсивно, и</target>
        </trans-unit>
        <trans-unit id="cdb708b79dfd7d3f13e68022e4110062dda87cf2" translate="yes" xml:space="preserve">
          <source>all operations and constants evaluate in the range and precision of &lt;code&gt;double&lt;/code&gt;. Additionally, both &lt;code&gt;float_t&lt;/code&gt; and &lt;code&gt;double_t&lt;/code&gt; are equivalent to &lt;code&gt;double&lt;/code&gt;</source>
          <target state="translated">Все операции и константы оцениваются в диапазоне и точности в &lt;code&gt;double&lt;/code&gt; . Кроме того, &lt;code&gt;float_t&lt;/code&gt; и &lt;code&gt;double_t&lt;/code&gt; эквивалентны &lt;code&gt;double&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3353ab95ebb14131e875c614b1df72dfe1c566c" translate="yes" xml:space="preserve">
          <source>all operations and constants evaluate in the range and precision of &lt;code&gt;long double&lt;/code&gt;. Additionally, both &lt;code&gt;float_t&lt;/code&gt; and &lt;code&gt;double_t&lt;/code&gt; are equivalent to &lt;code&gt;long double&lt;/code&gt;</source>
          <target state="translated">Все операции и константы оцениваются по дальности и точности &lt;code&gt;long double&lt;/code&gt; . Кроме того, и &lt;code&gt;float_t&lt;/code&gt; , и &lt;code&gt;double_t&lt;/code&gt; эквивалентны &lt;code&gt;long double&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="977083d5e09600da9c4eccd257809269b4c94c59" translate="yes" xml:space="preserve">
          <source>all operations and constants evaluate in the range and precision of the type used. Additionally, &lt;code&gt;float_t&lt;/code&gt; and &lt;code&gt;double_t&lt;/code&gt; are equivalent to &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; respectively</source>
          <target state="translated">все операции и константы оцениваются в диапазоне и точности используемого типа. Кроме того, &lt;code&gt;float_t&lt;/code&gt; и &lt;code&gt;double_t&lt;/code&gt; эквивалентны &lt;code&gt;float&lt;/code&gt; и &lt;code&gt;double&lt;/code&gt; соответственно</target>
        </trans-unit>
        <trans-unit id="4c93f9c5c93d8529858e42db5a92eafeeb94b62a" translate="yes" xml:space="preserve">
          <source>all other random number distributions</source>
          <target state="translated">все остальные распределения случайных чисел</target>
        </trans-unit>
        <trans-unit id="bdc8fc06ebb459060cec43180cbc2fe0bb2682df" translate="yes" xml:space="preserve">
          <source>all specializations</source>
          <target state="translated">все специальности</target>
        </trans-unit>
        <trans-unit id="8cc37a9798c99802d5e16c87bf1d51cb01e4c61d" translate="yes" xml:space="preserve">
          <source>all types used in the function type (which includes return type and the types of all parameters)</source>
          <target state="translated">все типы,используемые в типе функции (который включает тип возврата и типы всех параметров)</target>
        </trans-unit>
        <trans-unit id="b1e3f1fa0142e35c3d68f5759209902c948890a7" translate="yes" xml:space="preserve">
          <source>all types used in the template parameter declarations</source>
          <target state="translated">все типы,используемые в объявлениях параметров шаблона</target>
        </trans-unit>
        <trans-unit id="9965fec9771df1424c76170f0eaf55cab25ac5ba" translate="yes" xml:space="preserve">
          <source>all_ofany_ofnone_of</source>
          <target state="translated">all_ofany_ofnone_of</target>
        </trans-unit>
        <trans-unit id="85a5b40d3210faca14f0fc86c593bc951575bfda" translate="yes" xml:space="preserve">
          <source>all_viewview::all</source>
          <target state="translated">all_viewview::all</target>
        </trans-unit>
        <trans-unit id="7ad018dcd5f39366b56e8476ab5aa4827e1960fb" translate="yes" xml:space="preserve">
          <source>allanynone</source>
          <target state="translated">allanynone</target>
        </trans-unit>
        <trans-unit id="acaab3b723a4d70b19f7b4e34895a97f703f7ab8" translate="yes" xml:space="preserve">
          <source>alloc</source>
          <target state="translated">alloc</target>
        </trans-unit>
        <trans-unit id="7a81a830c9c574c6b04f98079cd737902e095291" translate="yes" xml:space="preserve">
          <source>allocate</source>
          <target state="translated">allocate</target>
        </trans-unit>
        <trans-unit id="4f339ebc0a9ea5041c9eb2fcc9063237294d1c29" translate="yes" xml:space="preserve">
          <source>allocate_bytes</source>
          <target state="translated">allocate_bytes</target>
        </trans-unit>
        <trans-unit id="2fe0fbf2dac901753b121e9a7cae6d30e015431c" translate="yes" xml:space="preserve">
          <source>allocate_object</source>
          <target state="translated">allocate_object</target>
        </trans-unit>
        <trans-unit id="34947d278edd17446af44c865f2206c59ffd2250" translate="yes" xml:space="preserve">
          <source>allocate_sharedallocate_shared_default_init</source>
          <target state="translated">allocate_sharedallocate_shared_default_init</target>
        </trans-unit>
        <trans-unit id="5f3e8f3c8913ee0556612ac56f1100bdc54d4b6b" translate="yes" xml:space="preserve">
          <source>allocates aligned memory</source>
          <target state="translated">выделяет выровненную память</target>
        </trans-unit>
        <trans-unit id="8454d15e4c9c8e6f3a57a97cf499f9a12a5b9c45" translate="yes" xml:space="preserve">
          <source>allocates and zeroes memory</source>
          <target state="translated">выделяет и обнуляет память</target>
        </trans-unit>
        <trans-unit id="b8a8fad17819140ae5245db5e27c1653353c978b" translate="yes" xml:space="preserve">
          <source>allocates memory</source>
          <target state="translated">выделяет память</target>
        </trans-unit>
        <trans-unit id="f3b1c58ea599100474ff90e9e1e358661bc50a86" translate="yes" xml:space="preserve">
          <source>allocates storage suitable for &lt;code&gt;n&lt;/code&gt; objects of type &lt;code&gt;T&lt;/code&gt;, but does not construct them. May throw exceptions.</source>
          <target state="translated">выделяет хранилище, подходящее для &lt;code&gt;n&lt;/code&gt; объектов типа &lt;code&gt;T&lt;/code&gt; , но не создает их. Может бросить исключения.</target>
        </trans-unit>
        <trans-unit id="388ed931f6f8d8adc5a57ad8ac534799fac6b48d" translate="yes" xml:space="preserve">
          <source>allocates the coroutine state object using &lt;code&gt;&lt;a href=&quot;../memory/new/operator_new&quot;&gt;operator new&lt;/a&gt;&lt;/code&gt; (see below)</source>
          <target state="translated">выделяет объект состояния сопрограммы с помощью &lt;code&gt;&lt;a href=&quot;../memory/new/operator_new&quot;&gt;operator new&lt;/a&gt;&lt;/code&gt; (см. ниже)</target>
        </trans-unit>
        <trans-unit id="960f505351846cc4c241fb18008ec9aa02e244ca" translate="yes" xml:space="preserve">
          <source>allocates uninitialized storage</source>
          <target state="translated">выделяет неинициализированное хранилище</target>
        </trans-unit>
        <trans-unit id="62aefc4b7140426f689704833e340aa74fe40095" translate="yes" xml:space="preserve">
          <source>allocates uninitialized storage using the allocator</source>
          <target state="translated">распределяет неинициализированное хранилище с помощью аллокатора</target>
        </trans-unit>
        <trans-unit id="381072ecb040a7074dcc90563fc6ebbd79acf891" translate="yes" xml:space="preserve">
          <source>allocates uninitialized storage using the outer allocator</source>
          <target state="translated">распределяет неинициализированное хранилище с помощью внешнего аллокатора</target>
        </trans-unit>
        <trans-unit id="853e6cc39dbe15cd3b444a9fecc8fee07d0d1243" translate="yes" xml:space="preserve">
          <source>allocation function</source>
          <target state="translated">функция распределения</target>
        </trans-unit>
        <trans-unit id="4d5e3e903e667bc41e0495bd041f88d12c1940a9" translate="yes" xml:space="preserve">
          <source>allocation functions</source>
          <target state="translated">функции распределения</target>
        </trans-unit>
        <trans-unit id="d4a0f47da7c87075003063e44e1776f95fd95404" translate="yes" xml:space="preserve">
          <source>allocator</source>
          <target state="translated">allocator</target>
        </trans-unit>
        <trans-unit id="9a412cacef0f375483408fe9340b6baffd12cbda" translate="yes" xml:space="preserve">
          <source>allocator completeness requirements</source>
          <target state="translated">требования к полноте распределения</target>
        </trans-unit>
        <trans-unit id="98200656f043b106b3bedd32014857ff7e17e076" translate="yes" xml:space="preserve">
          <source>allocator to construct the string with</source>
          <target state="translated">аллокатор для построения строки с</target>
        </trans-unit>
        <trans-unit id="d07da36ee300180e70a4f2e8639cb3cf580c4331" translate="yes" xml:space="preserve">
          <source>allocator to use</source>
          <target state="translated">аллокатор для использования</target>
        </trans-unit>
        <trans-unit id="64a533c446ee651ec42a7e679c32a38a1516a169" translate="yes" xml:space="preserve">
          <source>allocator to use for all memory allocations of the underlying container</source>
          <target state="translated">аллокатор для использования для всех распределений памяти базового контейнера</target>
        </trans-unit>
        <trans-unit id="5b1cd99d8efa85ec2449c1e148084e590a2041ef" translate="yes" xml:space="preserve">
          <source>allocator to use for all memory allocations of this container</source>
          <target state="translated">аллокатор для использования для всех назначений памяти этого контейнера</target>
        </trans-unit>
        <trans-unit id="3b2ff0c8c8429e1eb51a9b995b423903f2192d1c" translate="yes" xml:space="preserve">
          <source>allocator to use for all memory allocations of this string</source>
          <target state="translated">аллокатор для использования для всех назначений памяти этой строки</target>
        </trans-unit>
        <trans-unit id="8e534626a78c7ede33b95313b93b75e308502a6a" translate="yes" xml:space="preserve">
          <source>allocator to use for construction</source>
          <target state="translated">аллокатор для использования в строительстве</target>
        </trans-unit>
        <trans-unit id="d95cf09265f86f3c992ecda655cda96b9819cb22" translate="yes" xml:space="preserve">
          <source>allocator to use for destruction</source>
          <target state="translated">аллокатор для использования в целях уничтожения</target>
        </trans-unit>
        <trans-unit id="d83ae542c4312db23a95814bb22fb08aa5e9ece0" translate="yes" xml:space="preserve">
          <source>allocator to use for internal allocations</source>
          <target state="translated">распределитель для использования в целях внутренних распределений</target>
        </trans-unit>
        <trans-unit id="579db56ecc261be6ec34fd6efb59767f43cefe63" translate="yes" xml:space="preserve">
          <source>allocator to use in uses-allocator construction</source>
          <target state="translated">аллокатор для использования в конструкции планировщик-исполнитель</target>
        </trans-unit>
        <trans-unit id="88c7d6068af2a5f828fafe3e74648b7eddfefdf4" translate="yes" xml:space="preserve">
          <source>allocator to use to allocate memory for the internal data structures</source>
          <target state="translated">аллокатор для выделения памяти для внутренних структур данных</target>
        </trans-unit>
        <trans-unit id="25c95bbd2601c16682e7c9e1bf353e0329c03d0d" translate="yes" xml:space="preserve">
          <source>allocator to use to allocate the shared state</source>
          <target state="translated">аллокатор,который будет использоваться для распределения общего состояния</target>
        </trans-unit>
        <trans-unit id="46a751615d31e244b9a6529e76765b0e6753e6c2" translate="yes" xml:space="preserve">
          <source>allocator used by a standard container passed as an argument to a container copy constructor</source>
          <target state="translated">аллокатор,используемый стандартным контейнером,передаваемый в качестве аргумента конструктору контейнерной копии</target>
        </trans-unit>
        <trans-unit id="a000f7546c3a8c77f9aaa7e3289e55e46d48e7dd" translate="yes" xml:space="preserve">
          <source>allocator-aware constructors provided but &lt;code&gt;variant&lt;/code&gt; can't properly support allocators</source>
          <target state="translated">предоставлены конструкторы с поддержкой распределителя, но &lt;code&gt;variant&lt;/code&gt; не может должным образом поддерживать распределители</target>
        </trans-unit>
        <trans-unit id="ea28d2b6b29df51de3d4c0b887d296d777df04ac" translate="yes" xml:space="preserve">
          <source>allocator_arg</source>
          <target state="translated">allocator_arg</target>
        </trans-unit>
        <trans-unit id="160e20d66c80fa3dbd6e0d198e00591799eb2d5f" translate="yes" xml:space="preserve">
          <source>allocator_arg_t</source>
          <target state="translated">allocator_arg_t</target>
        </trans-unit>
        <trans-unit id="cb73fcbd01eafbc8cfe0ef39ae4cbd832f438893" translate="yes" xml:space="preserve">
          <source>allocator_traits</source>
          <target state="translated">allocator_traits</target>
        </trans-unit>
        <trans-unit id="c3de44d531c00ca3e0383de27927f390a0f419ac" translate="yes" xml:space="preserve">
          <source>allowed</source>
          <target state="translated">allowed</target>
        </trans-unit>
        <trans-unit id="1930a955f5febc472e55c23c910374e742614c44" translate="yes" xml:space="preserve">
          <source>allowed comparison of everything convertible to &lt;code&gt;path&lt;/code&gt; in the presence of a</source>
          <target state="translated">допускается сравнение всего конвертируемого на &lt;code&gt;path&lt;/code&gt; при наличии</target>
        </trans-unit>
        <trans-unit id="dbf8c714749730ae413354eab9159c02ad8c19fb" translate="yes" xml:space="preserve">
          <source>allowed concatenating everything convertible to &lt;code&gt;path&lt;/code&gt; in the presence of a</source>
          <target state="translated">разрешено объединять все конвертируемые в &lt;code&gt;path&lt;/code&gt; при наличии</target>
        </trans-unit>
        <trans-unit id="9a57d56c76bc9bf01f06298a86b4331286882a11" translate="yes" xml:space="preserve">
          <source>allowed if the object was created within the constant expression</source>
          <target state="translated">разрешено,если объект был создан в константном выражении</target>
        </trans-unit>
        <trans-unit id="a534594aca62a8753dc1d3e871b665eddf358a3d" translate="yes" xml:space="preserve">
          <source>allowed in constant initialization</source>
          <target state="translated">разрешённая постоянная инициализация</target>
        </trans-unit>
        <trans-unit id="f80e72369a5cf1caba9791e592ec23ad71dfc523" translate="yes" xml:space="preserve">
          <source>allowed insertion of everything convertible to &lt;code&gt;path&lt;/code&gt; in the presence of a</source>
          <target state="translated">допускается вставка всего конвертируемого в &lt;code&gt;path&lt;/code&gt; при наличии</target>
        </trans-unit>
        <trans-unit id="50e5f036389ae2c44e5d9e01c3103a33d72e3c91" translate="yes" xml:space="preserve">
          <source>allows an object to create a &lt;code&gt;shared_ptr&lt;/code&gt; referring to itself</source>
          <target state="translated">позволяет объекту создавать &lt;code&gt;shared_ptr&lt;/code&gt; со ссылкой на себя</target>
        </trans-unit>
        <trans-unit id="8a45473c00df4237856ba187a25e5a589d47975b" translate="yes" xml:space="preserve">
          <source>allows the use of &lt;a href=&quot;language/list_initialization&quot;&gt; initializer list syntax&lt;/a&gt; to initialize non-aggregate types</source>
          <target state="translated">позволяет использовать &lt;a href=&quot;language/list_initialization&quot;&gt;синтаксис списка&lt;/a&gt; инициализатора для инициализации неагрегированных типов</target>
        </trans-unit>
        <trans-unit id="2681b9c80ecd5edeed8711a3a98148e0ff1a5d7a" translate="yes" xml:space="preserve">
          <source>alnum</source>
          <target state="translated">alnum</target>
        </trans-unit>
        <trans-unit id="be76331b95dfc399cd776d2fc68021e0db03cc4f" translate="yes" xml:space="preserve">
          <source>alpha</source>
          <target state="translated">alpha</target>
        </trans-unit>
        <trans-unit id="0c645492c58ad3fe8338329bbd9ad42a0ae78456" translate="yes" xml:space="preserve">
          <source>alphabeta</source>
          <target state="translated">alphabeta</target>
        </trans-unit>
        <trans-unit id="57fc2642d89ce1e097c263a684eb5a024daeebb1" translate="yes" xml:space="preserve">
          <source>already exists</source>
          <target state="translated">уже существует</target>
        </trans-unit>
        <trans-unit id="fb72320fe359ad5b2450500dcac9745c2ae684ac" translate="yes" xml:space="preserve">
          <source>alsize</source>
          <target state="translated">alsize</target>
        </trans-unit>
        <trans-unit id="42156a4ea4707d2615ad3d22dce6d3b401f90365" translate="yes" xml:space="preserve">
          <source>alternate character for set bits in &lt;code&gt;str&lt;/code&gt;</source>
          <target state="translated">альтернативный символ для набора битов в &lt;code&gt;str&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1db599f34a84a3e8289aed57a3e35a28bf35bb6" translate="yes" xml:space="preserve">
          <source>alternate character for unset bits in &lt;code&gt;str&lt;/code&gt;</source>
          <target state="translated">альтернативный символ для неустановленных битов в &lt;code&gt;str&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="784997019ac9b66e468705ff5ea6b263957cb258" translate="yes" xml:space="preserve">
          <source>alternative directory separator which may be used in addition to the portable &lt;code&gt;/&lt;/code&gt;. On Windows, this is the backslash character &lt;code&gt;\&lt;/code&gt;. On POSIX, this is the same forward slash &lt;code&gt;/&lt;/code&gt; as the portable separator</source>
          <target state="translated">альтернативный разделитель каталогов, который может использоваться в дополнение к переносимому каталогу &lt;code&gt;/&lt;/code&gt; . В Windows это символ обратной косой черты &lt;code&gt;\&lt;/code&gt; . На POSIX, это тот же самый прямой слэш &lt;code&gt;/&lt;/code&gt; в качестве портативного сепаратора</target>
        </trans-unit>
        <trans-unit id="a66468d63e91e596a97d876019fbaff6d95089c8" translate="yes" xml:space="preserve">
          <source>alternative form</source>
          <target state="translated">альтернативная форма</target>
        </trans-unit>
        <trans-unit id="e8af47c361b758726325c4a5d8f6d520db8f84f6" translate="yes" xml:space="preserve">
          <source>alternative implementation</source>
          <target state="translated">альтернативное исполнение</target>
        </trans-unit>
        <trans-unit id="7a3889426121edfa53717bdb3ef97045d05ffc26" translate="yes" xml:space="preserve">
          <source>alternative representation</source>
          <target state="translated">альтернативное представление</target>
        </trans-unit>
        <trans-unit id="0b412bfb356ff7ad99dc970b4a1dd36dc81c9bd1" translate="yes" xml:space="preserve">
          <source>alternative value that can be compared to &lt;code&gt;Key&lt;/code&gt;</source>
          <target state="translated">альтернативное значение, которое можно сравнить с &lt;code&gt;Key&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6cc6d93df9e49ef79fee8dcc90a71979500caed4" translate="yes" xml:space="preserve">
          <source>alternative value to compare to the keys</source>
          <target state="translated">альтернативное значение по сравнению с ключами</target>
        </trans-unit>
        <trans-unit id="b42c985d41c532bc31d8e8ab3753f9d795fdfd28" translate="yes" xml:space="preserve">
          <source>always linear for &lt;code&gt;&lt;a href=&quot;../container/forward_list&quot;&gt;std::forward_list&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">всегда линейно для &lt;code&gt;&lt;a href=&quot;../container/forward_list&quot;&gt;std::forward_list&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e1e28aa027a2ad7928d73713303f1ccb3925e73" translate="yes" xml:space="preserve">
          <source>always resulting in rvalue</source>
          <target state="translated">всегда приводящий к увеличению стоимости</target>
        </trans-unit>
        <trans-unit id="8ca14898e5a72c55a06d9d9c0a8d1acf5f22e2ac" translate="yes" xml:space="preserve">
          <source>always use the resource via an instance of a RAII-class that either</source>
          <target state="translated">всегда использовать ресурс через экземпляр RAII-класса,который либо</target>
        </trans-unit>
        <trans-unit id="52a363165d9cc670f00d7b6a7ff956fa1bce638e" translate="yes" xml:space="preserve">
          <source>always_noconv</source>
          <target state="translated">always_noconv</target>
        </trans-unit>
        <trans-unit id="10573f1c3020ceba5e54a6f8de1d4330250b3e1b" translate="yes" xml:space="preserve">
          <source>ambiguous_local_time</source>
          <target state="translated">ambiguous_local_time</target>
        </trans-unit>
        <trans-unit id="de73eac0c305038f0437bc6a1f994a5a4379ed28" translate="yes" xml:space="preserve">
          <source>an</source>
          <target state="translated">an</target>
        </trans-unit>
        <trans-unit id="3ae3337def9d40cd9eea75193a8155899d5d8654" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;../../../named_req/allocator&quot;&gt;Allocator&lt;/a&gt; used for internal memory allocation</source>
          <target state="translated">&lt;a href=&quot;../../../named_req/allocator&quot;&gt;Распределитель&lt;/a&gt; используется для внутреннего распределения памяти</target>
        </trans-unit>
        <trans-unit id="84fd5cc6a61a6533d7e3e27403a6ff028e15af83" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;../language/aggregate_initialization&quot;&gt;aggregate type&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../language/aggregate_initialization&quot;&gt;агрегат типа&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="f8189976f2c55717a796da34a2124394731b9212" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;../language/integer_literal&quot;&gt;integer literal&lt;/a&gt; with value zero, or a prvalue of type &lt;code&gt;&lt;a href=&quot;nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../language/integer_literal&quot;&gt;целочисленный литерал&lt;/a&gt; с нулевым значением или prvalue типа &lt;code&gt;&lt;a href=&quot;nullptr_t&quot;&gt;std::nullptr_t&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="472bf9c9bac152a6297e8a8f7626b5eb6ce21bba" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;asm&quot;&gt;asm declaration&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;asm&quot;&gt;декларация ASM&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="387d8b6cadefbee6fda24c3db43ee1e8b5428d41" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;constant_expression&quot;&gt;integral constant expression&lt;/a&gt;(until C++14)a &lt;a href=&quot;constant_expression&quot;&gt;converted constant expression&lt;/a&gt; of type &lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt;(since C++14), which evaluates to a value greater than zero</source>
          <target state="translated">&lt;a href=&quot;constant_expression&quot;&gt;интегральное выражение постоянной&lt;/a&gt; (до С ++ 14) &lt;a href=&quot;constant_expression&quot;&gt;преобразованное постоянное выражение&lt;/a&gt; типа &lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;std::size_t&lt;/a&gt;&lt;/code&gt; (так как C ++ , 14), который имеет значение большее значение , чем ноль</target>
        </trans-unit>
        <trans-unit id="c8f1748d426ba425e26e27fefc4ffc9ddfdf8db8" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;constant_expression#Integral_constant_expression&quot;&gt;integral constant expression&lt;/a&gt; with a value greater or equal to zero. When greater than zero, this is the number of bits that this bit field will occupy. The value zero is only allowed for nameless bitfields and has special meaning: it specifies that the next bit field in the class definition will begin at an allocation unit's boundary.</source>
          <target state="translated">&lt;a href=&quot;constant_expression#Integral_constant_expression&quot;&gt;интегральное выражение постоянной&lt;/a&gt; со значением , большим или равным нулю. Если оно больше нуля, это число битов, которое будет занимать это битовое поле. Нулевое значение допускается только для безымянных битовых полей и имеет особое значение: оно указывает, что следующее битовое поле в определении класса начнется с границы единицы выделения.</target>
        </trans-unit>
        <trans-unit id="8bf38a2884ba37de5a4c964f6706ab4ec3a36b9e" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;enum&quot;&gt;&lt;i&gt;unscoped enumeration&lt;/i&gt;&lt;/a&gt; type whose underlying type is not fixed can be converted to the first type from the following list able to hold their entire value range: &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;unsigned int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;unsigned long&lt;/code&gt;, &lt;code&gt;long long&lt;/code&gt;, or &lt;code&gt;unsigned long long&lt;/code&gt;, extended integer types (in size order, signed given preference over unsigned)(since C++11). If the value range is greater, no integral promotions apply;</source>
          <target state="translated">тип &lt;a href=&quot;enum&quot;&gt;&lt;i&gt;перечисления&lt;/i&gt;&lt;/a&gt; с &lt;i&gt;незаданной областью&lt;/i&gt; , базовый тип которого не является фиксированным, может быть преобразован в первый тип из следующего списка, который может содержать весь диапазон значений: &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;unsigned int&lt;/code&gt; , &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;unsigned long&lt;/code&gt; , &lt;code&gt;long long&lt;/code&gt; или &lt;code&gt;unsigned long long&lt;/code&gt; , расширенные целочисленные типы (в порядке размера, со знаком предпочтение над без знака) (начиная с C ++ 11). Если диапазон значений больше, интегральные продвижения не применяются;</target>
        </trans-unit>
        <trans-unit id="67ffce5b1047515e5e5ca1b2aa9c8ead0a367645" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;enum&quot;&gt;enumeration type&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;enum&quot;&gt;тип перечисления&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e0a7d8226a587f0c124179c0169a46f5b931e9a" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;enum&quot;&gt;enumerator&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;enum&quot;&gt;перечислитель&lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="3e6cea5831256e2757b62728328a0379c4196bba" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;expressions&quot;&gt;expression&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;expressions&quot;&gt;выражение&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2844d97c9df8ada1db0a3a7efb73d4114ea3377" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;expressions&quot;&gt;expression&lt;/a&gt; which is &lt;a href=&quot;implicit_cast&quot;&gt;contextually convertible&lt;/a&gt; to bool. This expression is evaluated before each iteration, and if it yields &lt;code&gt;false&lt;/code&gt;, the loop is exited.</source>
          <target state="translated">&lt;a href=&quot;expressions&quot;&gt;выражение&lt;/a&gt; , которое является &lt;a href=&quot;implicit_cast&quot;&gt;контекстуально , конвертируемым&lt;/a&gt; в BOOL. Это выражение вычисляется перед каждой итерацией, и если оно возвращает &lt;code&gt;false&lt;/code&gt; , цикл завершается.</target>
        </trans-unit>
        <trans-unit id="b3969f17af73f0951765f95b57f4ddd6c5ecd0f9" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;implicit_cast&quot;&gt;implicit&lt;/a&gt; or &lt;a href=&quot;explicit_cast&quot;&gt;explicit&lt;/a&gt; conversion to type &lt;code&gt;T&lt;/code&gt;;</source>
          <target state="translated">&lt;a href=&quot;implicit_cast&quot;&gt;неявное&lt;/a&gt; или &lt;a href=&quot;explicit_cast&quot;&gt;явное&lt;/a&gt; преобразование в типе &lt;code&gt;T&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="77dbfd4ae32b7e689311b1e1982ab244feb4889f" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;name&quot;&gt;id-expression&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;name&quot;&gt;ID-выражение&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3567190b8a18795a4d5e5dd5c43622daf4c7b1ae" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;name&quot;&gt;id-expression&lt;/a&gt; that</source>
          <target state="translated">&lt;a href=&quot;name&quot;&gt;ID-выражение&lt;/a&gt; , что</target>
        </trans-unit>
        <trans-unit id="448649b1df5dacbbd62ef71ca067be479a0262c5" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;named_req/iterator&quot;&gt;LegacyIterator&lt;/a&gt; that dereferences to a &lt;a href=&quot;named_req/swappable&quot;&gt;Swappable&lt;/a&gt; type</source>
          <target state="translated">&lt;a href=&quot;named_req/iterator&quot;&gt;LegacyIterator&lt;/a&gt; что разыменовывает в виде &lt;a href=&quot;named_req/swappable&quot;&gt;Swappable&lt;/a&gt; типа</target>
        </trans-unit>
        <trans-unit id="38a323d3ade2b9d3b66dadee85b38092c6f9493b" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;operators&quot;&gt;overloaded operator&lt;/a&gt; name in function notation, such as &lt;code&gt;operator+&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../memory/new/operator_new&quot;&gt;operator new&lt;/a&gt;&lt;/code&gt;;</source>
          <target state="translated">&lt;a href=&quot;operators&quot;&gt;перегруженный оператор&lt;/a&gt; имя в функции записи, такие как &lt;code&gt;operator+&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../memory/new/operator_new&quot;&gt;operator new&lt;/a&gt;&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="7bd7facc21ee3bc278b044f98883a9d3ba728f34" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;statements&quot;&gt;expression statement&lt;/a&gt; (which may be a</source>
          <target state="translated">&lt;a href=&quot;statements&quot;&gt;выражение утверждение&lt;/a&gt; (которое может быть</target>
        </trans-unit>
        <trans-unit id="59fb35e19da7966f93398cf8a56ce6e855628598" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;statements#Expression_statements&quot;&gt;expression statement&lt;/a&gt; (which may be a</source>
          <target state="translated">&lt;a href=&quot;statements#Expression_statements&quot;&gt;выражение утверждение&lt;/a&gt; (которое может быть</target>
        </trans-unit>
        <trans-unit id="8a5772f8a0339600be3b87515fbc016630d60402" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;type-id&quot;&gt;integral type&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;type-id&quot;&gt;интегрального типа&lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="afd975df2da4915a72046d4619f5ed96c2eab99c" translate="yes" xml:space="preserve">
          <source>an &lt;code&gt;enable_shared_from_this&lt;/code&gt; to assign to &lt;code&gt;*this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;enable_shared_from_this&lt;/code&gt; присвоить &lt;code&gt;*this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c117c3d548063809a4b05929c2c93e007eb1a53" translate="yes" xml:space="preserve">
          <source>an &lt;code&gt;enable_shared_from_this&lt;/code&gt; to copy</source>
          <target state="translated">&lt;code&gt;enable_shared_from_this&lt;/code&gt; для копирования</target>
        </trans-unit>
        <trans-unit id="796b3962146edf5b9f697d67083212cfbae5f935" translate="yes" xml:space="preserve">
          <source>an &lt;code&gt;initializer_list&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;initializer_list&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6eaa75d8b909313367fb6304e746ea8854fb8ea" translate="yes" xml:space="preserve">
          <source>an &lt;code&gt;optional&lt;/code&gt; object to compare</source>
          <target state="translated">&lt;code&gt;optional&lt;/code&gt; объект для сравнения</target>
        </trans-unit>
        <trans-unit id="e96cd64b2f9080a0352b72b34481601195c41c99" translate="yes" xml:space="preserve">
          <source>an abstract interface for classes that encapsulate memory resources</source>
          <target state="translated">абстрактный интерфейс для классов,инкапсулирующих ресурсы памяти.</target>
        </trans-unit>
        <trans-unit id="d55535fada1d4cfe5fdce86ea5edd482252c36fa" translate="yes" xml:space="preserve">
          <source>an additional implementation-defined constant for each additional file type supported by the implementation</source>
          <target state="translated">дополнительная константа,определяемая реализацией,для каждого дополнительного типа файлов,поддерживаемого реализацией.</target>
        </trans-unit>
        <trans-unit id="6100d7d2cff24d086bc8507dea8853fe0914d208" translate="yes" xml:space="preserve">
          <source>an alias to &lt;code&gt;const_iterator&lt;/code&gt;</source>
          <target state="translated">псевдоним &lt;code&gt;const_iterator&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ebff0e74f2fb04e575fcfe4352b41391f7eb199" translate="yes" xml:space="preserve">
          <source>an alias to a family of types (&lt;a href=&quot;type_alias&quot;&gt;alias template&lt;/a&gt;) (since C++11)</source>
          <target state="translated">псевдоним для семейства типов ( &lt;a href=&quot;type_alias&quot;&gt;шаблон псевдонима&lt;/a&gt; ) (начиная с C ++ 11)</target>
        </trans-unit>
        <trans-unit id="6880d9749d85612a5bd0693561bdaa6c18ac4341" translate="yes" xml:space="preserve">
          <source>an allocator that supports run-time polymorphism based on the &lt;code&gt;std::memory_resource&lt;/code&gt; it is constructed with</source>
          <target state="translated">распределитель, который поддерживает полиморфизм во время выполнения на основе &lt;code&gt;std::memory_resource&lt;/code&gt; он построен</target>
        </trans-unit>
        <trans-unit id="86ad518277c412687860d0d6e97e60d70b6524a1" translate="yes" xml:space="preserve">
          <source>an allocator to use for allocations of data for internal use</source>
          <target state="translated">аллокатор,который будет использоваться для распределения данных для внутреннего пользования</target>
        </trans-unit>
        <trans-unit id="000004f7569980998afd7b29e1f1ddbe843e95d5" translate="yes" xml:space="preserve">
          <source>an allocator type</source>
          <target state="translated">тип аллокатора</target>
        </trans-unit>
        <trans-unit id="48e2f07f9944a688ea3ef0ffc58ca8de0a7c3328" translate="yes" xml:space="preserve">
          <source>an array of arbitrary type</source>
          <target state="translated">массив произвольного типа</target>
        </trans-unit>
        <trans-unit id="a90d2ddfbef6ade356002793175a517ba3c6ad16" translate="yes" xml:space="preserve">
          <source>an array of literal type;</source>
          <target state="translated">массив буквального типа;</target>
        </trans-unit>
        <trans-unit id="0e2eb9f6eaaa71974cfbed65bb05164bd10dfe50" translate="yes" xml:space="preserve">
          <source>an array of such type.</source>
          <target state="translated">массив такого типа.</target>
        </trans-unit>
        <trans-unit id="64ca138c107d595ddd836abb90adec281f82d7b6" translate="yes" xml:space="preserve">
          <source>an array of type &lt;code&gt;value_type[2]&lt;/code&gt;, with the first element holding the real component and the second element holding the imaginary component (e.g. Microsoft Visual Studio)</source>
          <target state="translated">массив типа &lt;code&gt;value_type[2]&lt;/code&gt; , в котором первый элемент содержит реальный компонент, а второй элемент содержит мнимый компонент (например, Microsoft Visual Studio)</target>
        </trans-unit>
        <trans-unit id="b8199f201fecef5db4fa3bad9567c9ab13e60c24" translate="yes" xml:space="preserve">
          <source>an array that defines the number of elements in each dimension</source>
          <target state="translated">массив,определяющий количество элементов в каждом измерении</target>
        </trans-unit>
        <trans-unit id="aca7081eae4413c88cd25f50f30dc39364b94277" translate="yes" xml:space="preserve">
          <source>an array that defines the number of positions between successive elements in each dimension</source>
          <target state="translated">массив,определяющий количество позиций между последовательными элементами в каждом измерении</target>
        </trans-unit>
        <trans-unit id="16074be546a94d9a77426f0371b70fdffdb072fb" translate="yes" xml:space="preserve">
          <source>an array type whose element type is dependent or whose bound (if any) is value-dependent</source>
          <target state="translated">тип массива,тип элемента которого является зависимым,или граница которого (если есть)является зависимой от значения</target>
        </trans-unit>
        <trans-unit id="9ea73f7c684b0ecce2864c001d26913c099109ff" translate="yes" xml:space="preserve">
          <source>an atomic constraint &lt;code&gt;A&lt;/code&gt; subsumes an atomic constraint &lt;code&gt;B&lt;/code&gt; if and only if they are identical using the rules described &lt;a href=&quot;constraints#Atomic_constraints&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">атомарное ограничение &lt;code&gt;A&lt;/code&gt; включает атомарное ограничение &lt;code&gt;B&lt;/code&gt; тогда и только тогда, когда они идентичны, используя правила, описанные &lt;a href=&quot;constraints#Atomic_constraints&quot;&gt;выше&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a62929c7399057555508b395851b71177ec32e6" translate="yes" xml:space="preserve">
          <source>an empty &lt;a href=&quot;../ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; with no elements</source>
          <target state="translated">пустой &lt;a href=&quot;../ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; без элементов</target>
        </trans-unit>
        <trans-unit id="e1b2c225b54f39edd6792ca749f1785c961a71e3" translate="yes" xml:space="preserve">
          <source>an empty &lt;a href=&quot;ranges/view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; with no elements</source>
          <target state="translated">пустой &lt;a href=&quot;ranges/view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; без элементов</target>
        </trans-unit>
        <trans-unit id="b280ff7488d7a435dee148093f68dd226727edcf" translate="yes" xml:space="preserve">
          <source>an empty substring is found at &lt;code&gt;pos&lt;/code&gt; if and only if &lt;code&gt;pos &amp;lt;= size()&lt;/code&gt;</source>
          <target state="translated">пустая подстрока находится в &lt;code&gt;pos&lt;/code&gt; , если и только если &lt;code&gt;pos &amp;lt;= size()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7c6ea596d73805cee8577bd8d04dbfea3276146" translate="yes" xml:space="preserve">
          <source>an enumerator of an enumeration that is a templated entity</source>
          <target state="translated">перечислитель перечисления,которое является шаблонной сущностью</target>
        </trans-unit>
        <trans-unit id="bbe7022531cf74560375b82ee4c10e68abed4546" translate="yes" xml:space="preserve">
          <source>an equality or relational operator when the result is unspecified</source>
          <target state="translated">оператор равенства или отношения,когда результат не указан.</target>
        </trans-unit>
        <trans-unit id="5c93459f573b5d9ddf06e1e2236da81eee3a2696" translate="yes" xml:space="preserve">
          <source>an exception occurs (in which case the exception is caught and not rethrown)</source>
          <target state="translated">происходит исключение (в этом случае исключение поймано,а не переизбрано).</target>
        </trans-unit>
        <trans-unit id="b787b4568e113e6c94e9246fdf94403b3361f0b7" translate="yes" xml:space="preserve">
          <source>an exception occurs (in which case the exception is caught).</source>
          <target state="translated">происходит исключение (в этом случае исключение попадается).</target>
        </trans-unit>
        <trans-unit id="8109f27c3336040c6342bdea20af9ca118f30332" translate="yes" xml:space="preserve">
          <source>an exception occurs (in which case the exception is caught, and only rethrown if &lt;code&gt;failbit&lt;/code&gt; is enabled in &lt;code&gt;exceptions()&lt;/code&gt;).</source>
          <target state="translated">возникает исключение (в этом случае исключение перехватывается и перебрасывается только в том случае, если &lt;code&gt;failbit&lt;/code&gt; включен в &lt;code&gt;exceptions()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2602e8c2fe1b1ebbd8e04698d9aa2f678a4a8f96" translate="yes" xml:space="preserve">
          <source>an exception thrown on file system errors</source>
          <target state="translated">исключение,брошенное на ошибки файловой системы</target>
        </trans-unit>
        <trans-unit id="cffba1904d0d21ed7c40707da3faadbc9f089398" translate="yes" xml:space="preserve">
          <source>an existing path</source>
          <target state="translated">существующий путь</target>
        </trans-unit>
        <trans-unit id="7ae9e81cc2676bd6629b46d7cbde064091e202aa" translate="yes" xml:space="preserve">
          <source>an explicit &lt;a href=&quot;../language/destructor&quot;&gt;destructor&lt;/a&gt; call (if &lt;code&gt;It&lt;/code&gt; is a class type); or</source>
          <target state="translated">явный &lt;a href=&quot;../language/destructor&quot;&gt;деструктор&lt;/a&gt; вызов (если &lt;code&gt;It&lt;/code&gt; тип класса); или</target>
        </trans-unit>
        <trans-unit id="d9dc0ae4ddd65129b714940c655826dce25b11bd" translate="yes" xml:space="preserve">
          <source>an expression that contains an unexpanded &lt;a href=&quot;parameter_pack&quot;&gt;parameter pack&lt;/a&gt; and does not contain an operator with &lt;a href=&quot;operator_precedence&quot;&gt;precedence&lt;/a&gt; lower than cast at the top level (formally, a cast-expression)</source>
          <target state="translated">выражение, которое содержит нерасширенный &lt;a href=&quot;parameter_pack&quot;&gt;пакет параметров&lt;/a&gt; и не содержит оператора с &lt;a href=&quot;operator_precedence&quot;&gt;приоритетом&lt;/a&gt; ниже, чем приведение на верхнем уровне (формально выражение преобразования )</target>
        </trans-unit>
        <trans-unit id="9d0d63ffe2d87a5127a3370c64a97bb90d99dfdc" translate="yes" xml:space="preserve">
          <source>an expression that does not contain an unexpanded &lt;a href=&quot;parameter_pack&quot;&gt;parameter pack&lt;/a&gt; and does not contain an operator with &lt;a href=&quot;operator_precedence&quot;&gt;precedence&lt;/a&gt; lower than cast at the top level (formally, a cast-expression)</source>
          <target state="translated">выражение, которое не содержит нерасширенный &lt;a href=&quot;parameter_pack&quot;&gt;пакет параметров&lt;/a&gt; и не содержит оператора с &lt;a href=&quot;operator_precedence&quot;&gt;приоритетом&lt;/a&gt; ниже, чем приведение на верхнем уровне (формально выражение преобразования )</target>
        </trans-unit>
        <trans-unit id="5c440e74edd81459fdbf196f0181cbfa7d71eb97" translate="yes" xml:space="preserve">
          <source>an expression that does not have the comma operator at the top level (grammatically, an</source>
          <target state="translated">выражение,в котором на верхнем уровне нет оператора запятой (грамматически,an</target>
        </trans-unit>
        <trans-unit id="f4bc645855c00ecaf058a4b5e28768e8ce1dffd9" translate="yes" xml:space="preserve">
          <source>an expression that would exceed the implementation-defined limits</source>
          <target state="translated">выражение,выходящее за пределы,установленные в ходе реализации.</target>
        </trans-unit>
        <trans-unit id="c10fb13275bf89d36aa8218b3258fe438a9838d9" translate="yes" xml:space="preserve">
          <source>an expression used in context where &lt;a href=&quot;constant_expression&quot;&gt;constant expression&lt;/a&gt; is required, and whose any subexpression is value-dependent</source>
          <target state="translated">выражение, используемое в контексте, где требуется &lt;a href=&quot;constant_expression&quot;&gt;константное выражение&lt;/a&gt; , и любое подвыражение которого зависит от значения</target>
        </trans-unit>
        <trans-unit id="e2774fd1078ff72dabc9757302abd83ee4b9c2c0" translate="yes" xml:space="preserve">
          <source>an expression whose any subexpression is a type-dependent expression</source>
          <target state="translated">выражение,любое подвыражение которого является тип-зависимым выражением</target>
        </trans-unit>
        <trans-unit id="ee236ad91c93c867f80d03449d18fe8887cce234" translate="yes" xml:space="preserve">
          <source>an expression whose evaluation leads to any form of core language undefined behavior (including signed integer overflow, division by zero, pointer arithmetic outside array bounds, etc). Whether standard library undefined behavior is detected is unspecified.</source>
          <target state="translated">выражение,оценка которого приводит к любой форме неопределённого поведения языка ядра (в том числе к переполнению знакового целого,делению на ноль,арифметике с указателями за пределами массива и т.п.).Обнаруживается ли стандартная библиотека неопределённого поведения-неуточнено.</target>
        </trans-unit>
        <trans-unit id="908eec67a30117f5ec4055b0cee79003e7503ec7" translate="yes" xml:space="preserve">
          <source>an expression, &lt;a href=&quot;../implicit_cast#Contextual_conversions&quot;&gt;contextually converted to &lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;, that specifies the predicate of the contract; its top-level operator may not be an assignment or comma operator</source>
          <target state="translated">выражение, &lt;a href=&quot;../implicit_cast#Contextual_conversions&quot;&gt;контекстно преобразованное в &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt; , которое определяет предикат контракта; его оператор верхнего уровня не может быть оператором присваивания или запятой</target>
        </trans-unit>
        <trans-unit id="1f77181d673019860afe7c62667cbe84f18bf83e" translate="yes" xml:space="preserve">
          <source>an id-expression referring to a variable or a data member of reference type, unless it was initialized with a constant expression or its lifetime began within the evaluation of this expression</source>
          <target state="translated">id-выражение,относящееся к переменной или элементу данных ссылочного типа,если только оно не было инициализировано константным выражением или его время жизни не начиналось в пределах оценки этого выражения</target>
        </trans-unit>
        <trans-unit id="9fe90faf435d439bf153faa4d45f0309674b742d" translate="yes" xml:space="preserve">
          <source>an identifier that is taken to denote the return value of the function; any ambiguity on whether something is a contract-level or an identifier is resolved in favor of it being a contract-level</source>
          <target state="translated">идентификатор,который принимается за обратное значение функции;любая неясность в отношении того,является ли что-то уровнем контракта или идентификатор разрешается в пользу того,что это уровень контракта</target>
        </trans-unit>
        <trans-unit id="ddf974809dc080d549f8a1da366fbf23cafbf2f3" translate="yes" xml:space="preserve">
          <source>an identifier, introduced by a</source>
          <target state="translated">идентификатор,введённый</target>
        </trans-unit>
        <trans-unit id="570c566b55f586748ff7abd3dade4daa31c49947" translate="yes" xml:space="preserve">
          <source>an identifier;</source>
          <target state="translated">идентификатор;</target>
        </trans-unit>
        <trans-unit id="cc78a1605c049efc786eae21eb9d5075658aed5f" translate="yes" xml:space="preserve">
          <source>an implementation-defined type that holds a reference to &lt;code&gt;auto_ptr&lt;/code&gt;</source>
          <target state="translated">определяемый реализацией тип, который содержит ссылку на &lt;code&gt;auto_ptr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b42717110b8d0a7776f30be846ac217347f5a2c" translate="yes" xml:space="preserve">
          <source>an initializer list</source>
          <target state="translated">список инициализаторов</target>
        </trans-unit>
        <trans-unit id="b47132ebe9d876dbd5b1bc1e29b0796693923fba" translate="yes" xml:space="preserve">
          <source>an initializer-list constructor can pre-empt the copy deduction candidate, resulting in wrapping</source>
          <target state="translated">конструктор списка инициализаторов может предвосхитить кандидата на вычет копирования,что приводит к обёртыванию</target>
        </trans-unit>
        <trans-unit id="f81cd14e2ac6a4cb408cb77730759ebb3882ce56" translate="yes" xml:space="preserve">
          <source>an instance of the &lt;code&gt;&lt;a href=&quot;va_list&quot;&gt;va_list&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="translated">экземпляр &lt;code&gt;&lt;a href=&quot;va_list&quot;&gt;va_list&lt;/a&gt;&lt;/code&gt; типа</target>
        </trans-unit>
        <trans-unit id="cc996f3afc8c2536b70ad0a4ae981f8e0c06a7e8" translate="yes" xml:space="preserve">
          <source>an instance of the &lt;code&gt;&lt;a href=&quot;va_list&quot;&gt;va_list&lt;/a&gt;&lt;/code&gt; type to clean up</source>
          <target state="translated">экземпляр типа &lt;code&gt;&lt;a href=&quot;va_list&quot;&gt;va_list&lt;/a&gt;&lt;/code&gt; для очистки</target>
        </trans-unit>
        <trans-unit id="d3a404d8fe01cf49c25ef813241bb657ad645ad3" translate="yes" xml:space="preserve">
          <source>an instance of the &lt;code&gt;&lt;a href=&quot;va_list&quot;&gt;va_list&lt;/a&gt;&lt;/code&gt; type to initialize</source>
          <target state="translated">экземпляр типа &lt;code&gt;&lt;a href=&quot;va_list&quot;&gt;va_list&lt;/a&gt;&lt;/code&gt; для инициализации</target>
        </trans-unit>
        <trans-unit id="367e70fed9ac85c68b63a10d660891b1ad3dcb8b" translate="yes" xml:space="preserve">
          <source>an integer type that can hold all values of &lt;code&gt;char_type&lt;/code&gt; plus &lt;code&gt;EOF&lt;/code&gt;</source>
          <target state="translated">целочисленный тип, который может содержать все значения &lt;code&gt;char_type&lt;/code&gt; плюс &lt;code&gt;EOF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab6b2bc1cb5e8360e1e7c8b281167bab53a1fab7" translate="yes" xml:space="preserve">
          <source>an integer type to use for the elements of the sequence</source>
          <target state="translated">целочисленный тип,используемый для элементов последовательности</target>
        </trans-unit>
        <trans-unit id="141784106a77c950820e9f61fc6bb9129457db3f" translate="yes" xml:space="preserve">
          <source>an integral &lt;a href=&quot;../language/constant_expression&quot;&gt;constant expression&lt;/a&gt;&lt;a href=&quot;../language/value_category&quot;&gt;rvalue&lt;/a&gt; of integer type that evaluates to zero.</source>
          <target state="translated">целочисленное &lt;a href=&quot;../language/constant_expression&quot;&gt;константное выражение &lt;/a&gt;&lt;a href=&quot;../language/value_category&quot;&gt;rvalue&lt;/a&gt; целочисленного типа, которое оценивается как ноль.</target>
        </trans-unit>
        <trans-unit id="6fcb0fad38e6f47567ba4df839c0f6494308d597" translate="yes" xml:space="preserve">
          <source>an invocation of an implicitly-defined copy/move constructor or copy/move assignment operator for a union whose active member (if any) is mutable, unless the lifetime of the union object began within the evaluation of this expression</source>
          <target state="translated">вызов неявно определенного конструктора копирования/перемещения или оператора копирования/перемещения присваивания для профсоюза,активный член которого (если таковой имеется)является изменчивым,если только срок жизни объекта профсоюза не начался в рамках оценки этого выражения</target>
        </trans-unit>
        <trans-unit id="09984bdaa28ebf8fbfc48647e7e78af46a28e511" translate="yes" xml:space="preserve">
          <source>an iterator</source>
          <target state="translated">итератор</target>
        </trans-unit>
        <trans-unit id="5905a16d2947726f16b30e3ab2c462b1bff66ce1" translate="yes" xml:space="preserve">
          <source>an iterator of type &lt;code&gt;Container::iterator&lt;/code&gt;(until C++20)&lt;code&gt;ranges::iterator_t&amp;lt;Container&amp;gt;&lt;/code&gt;(since C++20)</source>
          <target state="translated">итератор типа &lt;code&gt;Container::iterator&lt;/code&gt; (до C ++ 20) &lt;code&gt;ranges::iterator_t&amp;lt;Container&amp;gt;&lt;/code&gt; (начиная с C ++ 20)</target>
        </trans-unit>
        <trans-unit id="11c9f36ac5027c6f7ca1d813b6d666fd34206d40" translate="yes" xml:space="preserve">
          <source>an iterator that allows standard algorithms to store results in uninitialized memory</source>
          <target state="translated">итератор,позволяющий стандартным алгоритмам хранить результаты в неинициализированной памяти</target>
        </trans-unit>
        <trans-unit id="f6d2887123b738cfe76a5744755a901f0ef661f6" translate="yes" xml:space="preserve">
          <source>an iterator to an element in &lt;code&gt;[first, last)&lt;/code&gt; that should appear at the beginning of the new range</source>
          <target state="translated">итератор элемента в &lt;code&gt;[first, last)&lt;/code&gt; который должен появиться в начале нового диапазона</target>
        </trans-unit>
        <trans-unit id="31cb2f2f482a8b2a4a6f8b95006a67a9f2787e77" translate="yes" xml:space="preserve">
          <source>an iterator to the contents of a directory and its subdirectories</source>
          <target state="translated">итератор к содержимому каталога и его подкаталогов</target>
        </trans-unit>
        <trans-unit id="faa231b45cede68579ae40634398baa8842faf70" translate="yes" xml:space="preserve">
          <source>an iterator to the contents of the directory</source>
          <target state="translated">итератор к содержимому каталога</target>
        </trans-unit>
        <trans-unit id="1cecf3c2ab0232b5ba4c533b7c5f59f1a0a0681b" translate="yes" xml:space="preserve">
          <source>an iterator to the element defining the upper boundary of the sorted range, i.e. &lt;code&gt;d_first + min(last - first, d_last - d_first)&lt;/code&gt;.</source>
          <target state="translated">итератор элемента, определяющего верхнюю границу отсортированного диапазона, т.е. &lt;code&gt;d_first + min(last - first, d_last - d_first)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2d06d8eca4a9adb0faf2495926e94357ce0385c" translate="yes" xml:space="preserve">
          <source>an iterator to the first of the first pair of identical elements, that is, the first iterator &lt;code&gt;it&lt;/code&gt; such that &lt;code&gt;*it == *(it+1)&lt;/code&gt; for the first version or &lt;code&gt;p(*it, *(it + 1)) != false&lt;/code&gt; for the second version.</source>
          <target state="translated">итератор первой из первой пары идентичных элементов, то есть первый итератор &lt;code&gt;it&lt;/code&gt; такой, что &lt;code&gt;*it == *(it+1)&lt;/code&gt; для первой версии или &lt;code&gt;p(*it, *(it + 1)) != false&lt;/code&gt; для второй версии.</target>
        </trans-unit>
        <trans-unit id="bcda13e9500f1ec3bb3524e77029827ee332f0af" translate="yes" xml:space="preserve">
          <source>an lvalue (so-called, historically, because lvalues could appear on the left-hand side of an assignment expression) is a glvalue that is not an xvalue;</source>
          <target state="translated">значение l (так называемое,исторически,потому что значения могут появляться в левой части выражения задания)-это значение,которое не является значением x;</target>
        </trans-unit>
        <trans-unit id="76325a31880b436fe986466bfc76df8e66916324" translate="yes" xml:space="preserve">
          <source>an lvalue if new_type is an lvalue reference type (expression must be an lvalue)</source>
          <target state="translated">lvalue,если new_type является типом ссылки на lvalue (выражение должно быть lvalue)</target>
        </trans-unit>
        <trans-unit id="a40bdfb1b2c3f43725a67bdbb1978d8dec9f9d82" translate="yes" xml:space="preserve">
          <source>an lvalue if new_type is an lvalue reference type or an rvalue reference to function type;</source>
          <target state="translated">lvalue,если new_type является типом ссылки на значение l или ссылкой на тип функции rvalue;</target>
        </trans-unit>
        <trans-unit id="7d1203310c67a1512611c179e6acbd7a5d35da1f" translate="yes" xml:space="preserve">
          <source>an lvalue of type &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">значение типа &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74cf9ae76fc7b4cdaa5e4df2913d4bbdd10e3725" translate="yes" xml:space="preserve">
          <source>an lvalue-to-rvalue &lt;a href=&quot;implicit_cast&quot;&gt;implicit conversion&lt;/a&gt; or modification applied to a non-active member of a &lt;a href=&quot;union&quot;&gt;union&lt;/a&gt; or its subobject (even if it shares a common initial sequence with the active member)</source>
          <target state="translated">&lt;a href=&quot;implicit_cast&quot;&gt;неявное преобразование&lt;/a&gt; lvalue-to-rvalue или модификация, примененная к неактивному члену &lt;a href=&quot;union&quot;&gt;объединения&lt;/a&gt; или его подобъекта (даже если он разделяет общую начальную последовательность с активным членом)</target>
        </trans-unit>
        <trans-unit id="e1bbea71fa2405ed37c2029a504c50ea5f78b191" translate="yes" xml:space="preserve">
          <source>an lvalue-to-rvalue &lt;a href=&quot;implicit_cast&quot;&gt;implicit conversion&lt;/a&gt;, unless the lvalue...</source>
          <target state="translated">&lt;a href=&quot;implicit_cast&quot;&gt;неявное преобразование&lt;/a&gt; из lvalue в rvalue , если только lvalue ...</target>
        </trans-unit>
        <trans-unit id="3efd4891cef04ddd0af7eee4aa62c30bae6918ac" translate="yes" xml:space="preserve">
          <source>an object &lt;code&gt;X&lt;/code&gt; is located at the address &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">объект &lt;code&gt;X&lt;/code&gt; расположен по адресу &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81c3287d55668d8dd4500c4946a5035eb7528a76" translate="yes" xml:space="preserve">
          <source>an object of &lt;a href=&quot;type-id&quot;&gt;scalar type&lt;/a&gt; (arithmetic type, pointer type, enumeration type, or std::nullptr_t)</source>
          <target state="translated">объект &lt;a href=&quot;type-id&quot;&gt;скалярного типа&lt;/a&gt; (арифметический тип, тип указателя, тип перечисления или std :: nullptr_t)</target>
        </trans-unit>
        <trans-unit id="7c5ce392cbf715bfa9f125fc92fc49758f418cb8" translate="yes" xml:space="preserve">
          <source>an object of type &lt;code&gt;&lt;a href=&quot;../../chrono/duration&quot;&gt;std::chrono::duration&lt;/a&gt;&lt;/code&gt; representing the maximum time to spend waiting. Note that rel_time must be small enough not to overflow when added to &lt;code&gt;&lt;a href=&quot;../../chrono/steady_clock/now&quot;&gt;std::chrono::steady_clock::now()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">объект типа &lt;code&gt;&lt;a href=&quot;../../chrono/duration&quot;&gt;std::chrono::duration&lt;/a&gt;&lt;/code&gt; представляющий максимальное время ожидания. Обратите внимание, что rel_time должно быть достаточно маленьким, чтобы не переполняться при добавлении в &lt;code&gt;&lt;a href=&quot;../../chrono/steady_clock/now&quot;&gt;std::chrono::steady_clock::now()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5dfa60e5b8b80b2730021ccff5c75aade7dfdbb5" translate="yes" xml:space="preserve">
          <source>an object of type &lt;code&gt;&lt;a href=&quot;../../chrono/time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&lt;/code&gt; representing the time when to stop waiting</source>
          <target state="translated">объект типа &lt;code&gt;&lt;a href=&quot;../../chrono/time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&lt;/code&gt; представляющий время, когда следует прекратить ожидание</target>
        </trans-unit>
        <trans-unit id="964460337b5e67af53887d11d3b61b84d1e547cc" translate="yes" xml:space="preserve">
          <source>an object of type &lt;code&gt;&lt;a href=&quot;../memory/allocator_arg_t&quot;&gt;std::allocator_arg_t&lt;/a&gt;&lt;/code&gt; used to select allocator-aware constructors</source>
          <target state="translated">объект типа &lt;code&gt;&lt;a href=&quot;../memory/allocator_arg_t&quot;&gt;std::allocator_arg_t&lt;/a&gt;&lt;/code&gt; используемый для выбора конструкторов с поддержкой распределителя</target>
        </trans-unit>
        <trans-unit id="bf307d78b6488959eb5507c1b5f30c56efdabc8e" translate="yes" xml:space="preserve">
          <source>an object of type &lt;code&gt;&lt;a href=&quot;../unique_lock&quot;&gt;std::unique_lock&lt;/a&gt;&amp;lt;&lt;a href=&quot;../mutex&quot;&gt;std::mutex&lt;/a&gt;&amp;gt;&lt;/code&gt;, which must be locked by the current thread</source>
          <target state="translated">объект типа &lt;code&gt;&lt;a href=&quot;../unique_lock&quot;&gt;std::unique_lock&lt;/a&gt;&amp;lt;&lt;a href=&quot;../mutex&quot;&gt;std::mutex&lt;/a&gt;&amp;gt;&lt;/code&gt; , который должен быть заблокирован текущим потоком</target>
        </trans-unit>
        <trans-unit id="e892f955bdb51176fa89e459647a8faa76c12adb" translate="yes" xml:space="preserve">
          <source>an object of type &lt;code&gt;&lt;a href=&quot;allocator_arg_t&quot;&gt;std::allocator_arg_t&lt;/a&gt;&lt;/code&gt; used to select allocator-aware constructors</source>
          <target state="translated">объект типа &lt;code&gt;&lt;a href=&quot;allocator_arg_t&quot;&gt;std::allocator_arg_t&lt;/a&gt;&lt;/code&gt; используемый для выбора конструкторов с поддержкой распределителя</target>
        </trans-unit>
        <trans-unit id="1db4e581597381c8233027b370e2e4429d00abf5" translate="yes" xml:space="preserve">
          <source>an object of type &lt;code&gt;&lt;a href=&quot;memory/allocator_arg_t&quot;&gt;std::allocator_arg_t&lt;/a&gt;&lt;/code&gt; used to select allocator-aware constructors</source>
          <target state="translated">объект типа &lt;code&gt;&lt;a href=&quot;memory/allocator_arg_t&quot;&gt;std::allocator_arg_t&lt;/a&gt;&lt;/code&gt; используемый для выбора конструкторов с поддержкой распределителя</target>
        </trans-unit>
        <trans-unit id="58f6d60e72e54fb287eaf3a812e6b85e4961d79c" translate="yes" xml:space="preserve">
          <source>an object of type &lt;code&gt;Lock&lt;/code&gt; that meets the &lt;a href=&quot;../../named_req/basiclockable&quot;&gt;BasicLockable&lt;/a&gt; requirements, which must be locked by the current thread</source>
          <target state="translated">объект типа &lt;code&gt;Lock&lt;/code&gt; , отвечающий требованиям &lt;a href=&quot;../../named_req/basiclockable&quot;&gt;BasicLockable&lt;/a&gt; , который должен быть заблокирован текущим потоком</target>
        </trans-unit>
        <trans-unit id="7bff55b18230cf954ec3b86e2cf53e8e03e06ba3" translate="yes" xml:space="preserve">
          <source>an object of type &lt;code&gt;Lock&lt;/code&gt; that meets the requirements of &lt;a href=&quot;../../named_req/basiclockable&quot;&gt;BasicLockable&lt;/a&gt;, which must be locked by the current thread</source>
          <target state="translated">объект типа &lt;code&gt;Lock&lt;/code&gt; , отвечающий требованиям &lt;a href=&quot;../../named_req/basiclockable&quot;&gt;BasicLockable&lt;/a&gt; , который должен быть заблокирован текущим потоком</target>
        </trans-unit>
        <trans-unit id="5322b4b168a4b961845d8f99a1fe7965eff27733" translate="yes" xml:space="preserve">
          <source>an object of type &lt;code&gt;nothrow_t&lt;/code&gt; used to select an non-throwing</source>
          <target state="translated">объект типа &lt;code&gt;nothrow_t&lt;/code&gt; , используемый для выбора не-броска</target>
        </trans-unit>
        <trans-unit id="2be88b45bb7942d9f2345145b1d9cdc7cc6398cc" translate="yes" xml:space="preserve">
          <source>an object of type &lt;code&gt;nullopt_t&lt;/code&gt;</source>
          <target state="translated">объект типа &lt;code&gt;nullopt_t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52168f68f1b84a6d1f30c9b4cc9283daec21e8b6" translate="yes" xml:space="preserve">
          <source>an object of type &lt;code&gt;piecewise_construct_t&lt;/code&gt; used to disambiguate functions for piecewise construction</source>
          <target state="translated">объект типа &lt;code&gt;piecewise_construct_t&lt;/code&gt; , используемый для устранения неоднозначности функций для кусочной конструкции</target>
        </trans-unit>
        <trans-unit id="c4fe6e639f00cb310af002b9950878569b200c0d" translate="yes" xml:space="preserve">
          <source>an object of type &lt;code&gt;std::allocator_arg_t&lt;/code&gt; used to select allocator-aware constructors</source>
          <target state="translated">объект типа &lt;code&gt;std::allocator_arg_t&lt;/code&gt; используемый для выбора конструкторов с поддержкой распределителя</target>
        </trans-unit>
        <trans-unit id="f6083870f2cb8c5713916770259d90871d8c98b5" translate="yes" xml:space="preserve">
          <source>an object of type std::unique_lock&amp;lt;std::mutex&amp;gt;, which must be locked by the current thread</source>
          <target state="translated">объект типа std :: unique_lock &amp;lt;std :: mutex&amp;gt;, который должен быть заблокирован текущим потоком</target>
        </trans-unit>
        <trans-unit id="2b6c58c4088de257a700b2becdfac5598560bb53" translate="yes" xml:space="preserve">
          <source>an object or array to delete</source>
          <target state="translated">объект или массив для удаления</target>
        </trans-unit>
        <trans-unit id="099a7aed74315d0767e5ec9765e5a9f890eb4597" translate="yes" xml:space="preserve">
          <source>an object that can be called with the function call syntax</source>
          <target state="translated">объект,который может быть вызван с синтаксисом вызова функции</target>
        </trans-unit>
        <trans-unit id="d664d95127823d51deb88418052fb6557dc15131" translate="yes" xml:space="preserve">
          <source>an object to wrap</source>
          <target state="translated">объект для упаковки</target>
        </trans-unit>
        <trans-unit id="ca48530abbb318a89a30ea4bff460fe254a12d31" translate="yes" xml:space="preserve">
          <source>an object with static storage duration that is a temporary, but whose value satisfies the constraints for prvalues below, or</source>
          <target state="translated">объект со статической длительностью хранения,который является временным,но стоимость которого удовлетворяет ограничениям для prvalues ниже,или</target>
        </trans-unit>
        <trans-unit id="2bb58f20ee5edd9f60d66f3a085b84514df6d93e" translate="yes" xml:space="preserve">
          <source>an object with static storage duration that is not a temporary, or</source>
          <target state="translated">объект со статической длительностью хранения,не являющийся временным,или</target>
        </trans-unit>
        <trans-unit id="199271b9e703e70510bc9a835922d6a6ae8db776" translate="yes" xml:space="preserve">
          <source>an object, for which exactly one function gets executed</source>
          <target state="translated">объект,для которого выполняется ровно одна функция.</target>
        </trans-unit>
        <trans-unit id="bdb2cffb6d355a50203b2e61898c26892cce71ff" translate="yes" xml:space="preserve">
          <source>an operation B on M (a write), then the value of A comes from a side-effect (a write) X that appears earlier than B in the</source>
          <target state="translated">операция B на M (запись),тогда значение A поступает от побочного эффекта (запись)X,который появляется раньше,чем B в</target>
        </trans-unit>
        <trans-unit id="b983895e95fc643db9cd995fd978a360a67adfd0" translate="yes" xml:space="preserve">
          <source>an output stream to set as the tied stream</source>
          <target state="translated">выходной поток для установки в качестве связанного потока</target>
        </trans-unit>
        <trans-unit id="dcfe47363f4c72caf6e527b88eb770675c7a38e5" translate="yes" xml:space="preserve">
          <source>an overloaded operator name in function notation (&lt;code&gt;operator+&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../memory/new/operator_new&quot;&gt;operator new&lt;/a&gt;&lt;/code&gt;);</source>
          <target state="translated">перегруженное имя оператора в нотации функции ( &lt;code&gt;operator+&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../memory/new/operator_new&quot;&gt;operator new&lt;/a&gt;&lt;/code&gt; );</target>
        </trans-unit>
        <trans-unit id="60d62d8ca3983db3dccb11f75b1a8d1afe29c8f3" translate="yes" xml:space="preserve">
          <source>an rvalue (so-called, historically, because rvalues could appear on the right-hand side of an assignment expression) is a prvalue or an xvalue.</source>
          <target state="translated">значение (так называемое,исторически,поскольку значения могут появляться справа от выражения присваивания)является pr-значением или x-значением.</target>
        </trans-unit>
        <trans-unit id="41af2b10e05290a5610b2e5806f36efe8f088c02" translate="yes" xml:space="preserve">
          <source>an uniform random bit generator object</source>
          <target state="translated">объект-генератор единообразных случайных битов</target>
        </trans-unit>
        <trans-unit id="296dce13ffd169132a847f0c33fef2ae561dbbef" translate="yes" xml:space="preserve">
          <source>an unqualified name that is found by &lt;a href=&quot;unqualified_lookup&quot;&gt;unqualified lookup&lt;/a&gt; in the current instantiation or in its non-dependent base.</source>
          <target state="translated">неквалифицированное имя, найденное &lt;a href=&quot;unqualified_lookup&quot;&gt;неквалифицированным поиском&lt;/a&gt; в текущем экземпляре или в его независимой базе.</target>
        </trans-unit>
        <trans-unit id="9ab749df51e1c697b72e5126a1fbb223c47c37a9" translate="yes" xml:space="preserve">
          <source>an unused parameter of any type that accepts literal zero argument</source>
          <target state="translated">неиспользуемый параметр любого типа,который принимает буквально нулевой аргумент.</target>
        </trans-unit>
        <trans-unit id="4ea04886d20110c7170b7946407b7ad1860e9d7d" translate="yes" xml:space="preserve">
          <source>an xvalue (an &amp;ldquo;eXpiring&amp;rdquo; value) is a glvalue that denotes an object or bit-field whose resources can be reused;</source>
          <target state="translated">xvalue (значение &amp;laquo;eXpiring&amp;raquo;) - это glvalue, которое обозначает объект или битовое поле, ресурсы которого могут быть повторно использованы;</target>
        </trans-unit>
        <trans-unit id="a1024d4ee291bcae7632505e7bc25546d7007437" translate="yes" xml:space="preserve">
          <source>an xvalue if new_type is an rvalue reference to object type;</source>
          <target state="translated">xvalue,если new_type является ссылкой на тип объекта по значению rvalue;</target>
        </trans-unit>
        <trans-unit id="f67f4a1529ce6a7c1ac54e7534b9bf2b21ab169d" translate="yes" xml:space="preserve">
          <source>an xvalue if new_type is an rvalue reference type (expressionmay be lvalue or rvalue(until C++17)must be a glvalue (prvalues are &lt;a href=&quot;implicit_cast#Temporary_materialization&quot;&gt;materialized&lt;/a&gt;)(since C++17) of a complete class type)</source>
          <target state="translated">xvalue, если new_type является ссылочным типом rvalue (выражение может быть lvalue или rvalue (до C ++ 17), должно быть glvalue (prvalues &lt;a href=&quot;implicit_cast#Temporary_materialization&quot;&gt;материализованы&lt;/a&gt; ) (начиная с C ++ 17) полного типа класса)</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="98fe4661485041b393bacbb3cbe2fd7fe974479a" translate="yes" xml:space="preserve">
          <source>and 0x1.3333333333334*2-2</source>
          <target state="translated">and 0x1.33333333334*2-2</target>
        </trans-unit>
        <trans-unit id="26c5cf0dec9ea72f001b2191056b176b077af457" translate="yes" xml:space="preserve">
          <source>and 0x1.999999999999a*2-4</source>
          <target state="translated">и 0x1.9999999999a*2-4</target>
        </trans-unit>
        <trans-unit id="f752657f890ddb6aed04f28650bddbf998a970f1" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;T(x) = x ^ (x &amp;gt;&amp;gt; 27)&lt;/code&gt;</source>
          <target state="translated">и &lt;code&gt;T(x) = x ^ (x &amp;gt;&amp;gt; 27)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b903e9bb549aea5dca253acd848c75d48b6ffce" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;false&lt;/code&gt; if it</source>
          <target state="translated">и &lt;code&gt;false&lt;/code&gt; если это</target>
        </trans-unit>
        <trans-unit id="25dab0b86558fadf9237d03860f554f474829e9f" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;m&lt;/code&gt; is not less than &lt;code&gt;alignment&lt;/code&gt;. It sets the new buffer as the</source>
          <target state="translated">и &lt;code&gt;m&lt;/code&gt; не меньше, чем &lt;code&gt;alignment&lt;/code&gt; . Он устанавливает новый буфер как</target>
        </trans-unit>
        <trans-unit id="800cea74ae2f02798003febbb1c1e218da0f277c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;n=end-begin&lt;/code&gt;</source>
          <target state="translated">и &lt;code&gt;n=end-begin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="969b4410c3fbf4aa187367c2d80d9297a0ea6a7e" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;q=p+t&lt;/code&gt;</source>
          <target state="translated">и &lt;code&gt;q=p+t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07dffc033a9020c2edfab62773798908643d9808" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;r1=1664525 * T(begin[k]^begin[k+p]^begin[k&amp;minus;1])&lt;/code&gt;</source>
          <target state="translated">и &lt;code&gt;r1=1664525 * T(begin[k]^begin[k+p]^begin[k&amp;minus;1])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fde845ef2d6a9c2b69caae194238a0512007889c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;r2=r1+s&lt;/code&gt; if &lt;code&gt;k==0&lt;/code&gt;, &lt;code&gt;r2=r1 + k%n + v[k-1]&lt;/code&gt; if &lt;code&gt;0&amp;lt;k&amp;lt;=s&lt;/code&gt;, &lt;code&gt;r2=r1 + k%n&lt;/code&gt; if &lt;code&gt;k&amp;gt;s&lt;/code&gt;.</source>
          <target state="translated">и &lt;code&gt;r2=r1+s&lt;/code&gt; , если &lt;code&gt;k==0&lt;/code&gt; , &lt;code&gt;r2=r1 + k%n + v[k-1]&lt;/code&gt; если &lt;code&gt;0&amp;lt;k&amp;lt;=s&lt;/code&gt; , &lt;code&gt;r2=r1 + k%n&lt;/code&gt; если &lt;code&gt;k&amp;gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52d61110b053d0bfa13eade4c9d0272b968ceb09" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;r4=r3 - k%n&lt;/code&gt;.</source>
          <target state="translated">и &lt;code&gt;r4=r3 - k%n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df490510e7721318eff8faa4bd4d0719780b31d5" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;s=v.size()&lt;/code&gt;</source>
          <target state="translated">и &lt;code&gt;s=v.size()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="010cf6ba8e1ac8b8e794b801591e06f9360aa199" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;t=(n &amp;gt;= 623) ? 11 : (n &amp;gt;= 68) ? 7 : (n &amp;gt;= 39) ? 5 : (n &amp;gt;= 7) ? 3 : (n - 1) / 2&lt;/code&gt;</source>
          <target state="translated">и &lt;code&gt;t=(n &amp;gt;= 623) ? 11 : (n &amp;gt;= 68) ? 7 : (n &amp;gt;= 39) ? 5 : (n &amp;gt;= 7) ? 3 : (n - 1) / 2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f84ca74b7dcbe1c7def71d643dca485ecc9df2e4" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;v&lt;/code&gt; is the private container holding the values originally provided by the constructor of this &lt;code&gt;seed_seq&lt;/code&gt; object,</source>
          <target state="translated">и &lt;code&gt;v&lt;/code&gt; - закрытый контейнер, содержащий значения, изначально предоставленные конструктором этого объекта &lt;code&gt;seed_seq&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="04f3ea1263fe354b1a1abaea9c1143c043077794" translate="yes" xml:space="preserve">
          <source>and a</source>
          <target state="translated">и</target>
        </trans-unit>
        <trans-unit id="6efccda8eda14b1353298f8ca95648b324e69dae" translate="yes" xml:space="preserve">
          <source>and a list of zero or more</source>
          <target state="translated">и список нулей или больше</target>
        </trans-unit>
        <trans-unit id="fa1c4070ad54a25251af9b36a5eaa444418f96ca" translate="yes" xml:space="preserve">
          <source>and asserts properties of the named expression. Substitution and semantic constraint checking proceeds in the following order:</source>
          <target state="translated">и утверждает свойства названного выражения.Проверка подстановок и семантических ограничений продолжается в следующем порядке:</target>
        </trans-unit>
        <trans-unit id="906f835871c36a0c6135b54fb7443d6dada3ace6" translate="yes" xml:space="preserve">
          <source>and conversions from base class to derived class prvalue were not considered</source>
          <target state="translated">и пересчеты из базового класса в производный класс не рассматривались.</target>
        </trans-unit>
        <trans-unit id="b2f2b3a902aff4f654fa23e732bbee33f92a5bf5" translate="yes" xml:space="preserve">
          <source>and i &amp;isin; {0, ..., count&amp;minus;1}. &lt;code&gt;xmin&lt;/code&gt; and &lt;code&gt;xmax&lt;/code&gt; must be such that &amp;delta; &amp;gt; 0. If &lt;code&gt;count == 0&lt;/code&gt; the effects are the same as of the default constructor.</source>
          <target state="translated">и i &amp;isin; {0, ..., count &amp;minus; 1}. &lt;code&gt;xmin&lt;/code&gt; и &lt;code&gt;xmax&lt;/code&gt; должны быть такими, чтобы &amp;delta;&amp;gt; 0. Если &lt;code&gt;count == 0&lt;/code&gt; эффекты такие же, как и у конструктора по умолчанию.</target>
        </trans-unit>
        <trans-unit id="c89527db227a4534f1e40d00d5f908e871bec52b" translate="yes" xml:space="preserve">
          <source>and if a particular source file only uses pointers and references to the class, this makes it possible to reduce #include dependencies:</source>
          <target state="translated">и если в конкретном файле-источнике используются только указатели и ссылки на класс,это позволяет уменьшить зависимости #include:</target>
        </trans-unit>
        <trans-unit id="1164a9e969672ff7524f8943cc57781803e1211f" translate="yes" xml:space="preserve">
          <source>and is dependent on a template parameter is not considered to be a type unless the keyword &lt;code&gt;typename&lt;/code&gt; is used or unless it was already established as a type name, e.g. with a typedef declaration or by being used to name a base class.</source>
          <target state="translated">и зависит от шаблона, параметр не считается типом, если только не используется ключевое слово &lt;code&gt;typename&lt;/code&gt; или если оно уже не было установлено как имя типа, например, с помощью объявления typedef или путем использования в качестве имени базового класса.</target>
        </trans-unit>
        <trans-unit id="950274bf28c90117dcf84b466407f68714f22325" translate="yes" xml:space="preserve">
          <source>and is not initialized.</source>
          <target state="translated">и не инициализирован.</target>
        </trans-unit>
        <trans-unit id="35026bd7f2e10f9485d0e4dc9327f4da752dd352" translate="yes" xml:space="preserve">
          <source>and is not the</source>
          <target state="translated">и не</target>
        </trans-unit>
        <trans-unit id="bcff4d611d74aaa6bd233bf6771d56841cac94b2" translate="yes" xml:space="preserve">
          <source>and its</source>
          <target state="translated">и его</target>
        </trans-unit>
        <trans-unit id="03f4307d97f6466f265686740a1e5e49af6e54a1" translate="yes" xml:space="preserve">
          <source>and manages no objects (whether or not its stored pointer is null). In multithreaded environment, this does not imply that the destructor of the managed object has completed.</source>
          <target state="translated">и не управляет никакими объектами (независимо от того,равен ли его хранимый указатель нулю или нет).В многопоточной среде это не означает,что деструктор управляемого объекта завершен.</target>
        </trans-unit>
        <trans-unit id="9322412fae94c4cc8107c93b8280d12fd73444be" translate="yes" xml:space="preserve">
          <source>and non-</source>
          <target state="translated">и не</target>
        </trans-unit>
        <trans-unit id="1f7ab723f37de5dc308eaf85cd7b68eb7a70a475" translate="yes" xml:space="preserve">
          <source>and postfix versions return</source>
          <target state="translated">возврат постфиксных версий</target>
        </trans-unit>
        <trans-unit id="e8ce5cade27acbd9b4fedf5377b2ce949dd9fd9a" translate="yes" xml:space="preserve">
          <source>and provides high-level input interface</source>
          <target state="translated">и обеспечивает высокоуровневый входной интерфейс</target>
        </trans-unit>
        <trans-unit id="4d886914a37a7de825074fb622e73899f4bdcec0" translate="yes" xml:space="preserve">
          <source>and provides high-level input/output interface</source>
          <target state="translated">и предоставляет высокоуровневый интерфейс ввода/вывода</target>
        </trans-unit>
        <trans-unit id="f0261e8061ae7be8cae49d9b71cce30439097acd" translate="yes" xml:space="preserve">
          <source>and provides high-level output interface</source>
          <target state="translated">и обеспечивает высокоуровневый выходной интерфейс</target>
        </trans-unit>
        <trans-unit id="951761a069f4bf2829731140274f90f7409a1ee0" translate="yes" xml:space="preserve">
          <source>and requires another path as the starting location to resolve to a file name.</source>
          <target state="translated">и требует другого пути в качестве исходного места для преобразования в имя файла.</target>
        </trans-unit>
        <trans-unit id="54faa719f73ab6da9b9f268194f9a0c19aa05c31" translate="yes" xml:space="preserve">
          <source>and supports dynamic dispatch. It may only appear in the decl-specifier-seq of the initial declaration of a non-static member function (i.e., when it is declared in the class definition).</source>
          <target state="translated">и поддерживает динамическую диспетчерскую службу.Она может появиться только в decl-specifier-seq начального объявления нестатической функции-члена (т.е.когда она объявлена в определении класса).</target>
        </trans-unit>
        <trans-unit id="38d402cb5ba5ced669d83f33b900f232ec58d72a" translate="yes" xml:space="preserve">
          <source>and the</source>
          <target state="translated">и</target>
        </trans-unit>
        <trans-unit id="cc0933c8a8ed2545d4c8fb125d9f5453c59e4261" translate="yes" xml:space="preserve">
          <source>and the following conditions are met:</source>
          <target state="translated">и выполняются следующие условия:</target>
        </trans-unit>
        <trans-unit id="7f3be2fcf6ca74869ed5c2b7a0f817eb689d0bf6" translate="yes" xml:space="preserve">
          <source>and the name is neither a member of</source>
          <target state="translated">и имя не является членом</target>
        </trans-unit>
        <trans-unit id="9152cd78177e88dee91bbed108729caf714922a7" translate="yes" xml:space="preserve">
          <source>and the value of other members is undefined.</source>
          <target state="translated">а ценность других членов не определена.</target>
        </trans-unit>
        <trans-unit id="9fd29300b85768a1234d6f664159b64c48c91452" translate="yes" xml:space="preserve">
          <source>and their</source>
          <target state="translated">и их</target>
        </trans-unit>
        <trans-unit id="a3551827a3a8d65e4492701294bc05e0b81d61c0" translate="yes" xml:space="preserve">
          <source>and where the indexing of the output range (&lt;code&gt;begin[x]&lt;/code&gt;) is taken modulo n.</source>
          <target state="translated">и где индексация выходного диапазона ( &lt;code&gt;begin[x]&lt;/code&gt; ) берется по модулю n.</target>
        </trans-unit>
        <trans-unit id="fb0416aa14d74afde308590f0e07546abbf5c866" translate="yes" xml:space="preserve">
          <source>and.</source>
          <target state="translated">and.</target>
        </trans-unit>
        <trans-unit id="ef8a6fa6a9b7effa353f93b9c470b3b24fd71b02" translate="yes" xml:space="preserve">
          <source>and_eq</source>
          <target state="translated">and_eq</target>
        </trans-unit>
        <trans-unit id="80a011b32fef63606811d73e091cc0b24ee0357f" translate="yes" xml:space="preserve">
          <source>anonymous union</source>
          <target state="translated">анонимный союз</target>
        </trans-unit>
        <trans-unit id="e29cab2d9873ccdcf44e8a9cc21cdeabb2d547ae" translate="yes" xml:space="preserve">
          <source>anonymous unions only allowed non-static data members</source>
          <target state="translated">анонимные союзы разрешено только нестатистическим членам данных</target>
        </trans-unit>
        <trans-unit id="135d0d8f640a14f97cab4a9305c9646ad3d5f177" translate="yes" xml:space="preserve">
          <source>another (see &lt;code&gt;&lt;a href=&quot;../atomic/memory_order&quot;&gt;std::memory_order&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">другое (см. &lt;code&gt;&lt;a href=&quot;../atomic/memory_order&quot;&gt;std::memory_order&lt;/a&gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="00022edda2e36bcc827bdc09c8841203a7e60cd7" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;any&lt;/code&gt; object to copy or move from</source>
          <target state="translated">другой &lt;code&gt;any&lt;/code&gt; объект для копирования или перемещения</target>
        </trans-unit>
        <trans-unit id="49fe4eb8b6c70eac6abab3dec74c275fa68fe63e" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;atomic_ref&lt;/code&gt; object to copy from</source>
          <target state="translated">другой объект &lt;code&gt;atomic_ref&lt;/code&gt; для копирования</target>
        </trans-unit>
        <trans-unit id="bab5b7c33c684c60a96010d30f346fe68e510530" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;auto_ptr&lt;/code&gt; to transfer the ownership of the object from</source>
          <target state="translated">другой &lt;code&gt;auto_ptr&lt;/code&gt; для передачи права собственности на объект</target>
        </trans-unit>
        <trans-unit id="61aea66c80f5dcb2fbcb422f8be3df52c09e8dda" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;bad_exception&lt;/code&gt; object to assign</source>
          <target state="translated">другой объект &lt;code&gt;bad_exception&lt;/code&gt; для назначения</target>
        </trans-unit>
        <trans-unit id="5f2b857c5d93adfcc325c5119f880d0279299ad7" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;basic_filebuf&lt;/code&gt;</source>
          <target state="translated">еще один &lt;code&gt;basic_filebuf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f20cffda9718eae11594f32a9720b08dbe01d598" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;basic_filebuf&lt;/code&gt; that will be moved from</source>
          <target state="translated">другой &lt;code&gt;basic_filebuf&lt;/code&gt; , который будет перемещен из</target>
        </trans-unit>
        <trans-unit id="9d957d7696c988069b00221bb6328e7a4602fef6" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;basic_stringbuf&lt;/code&gt;</source>
          <target state="translated">еще один &lt;code&gt;basic_stringbuf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7dcf45c17fe9b5bd395651b52f0a84936920d3ee" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;basic_stringbuf&lt;/code&gt; that will be moved from</source>
          <target state="translated">еще один &lt;code&gt;basic_stringbuf&lt;/code&gt; , который будет перемещен из</target>
        </trans-unit>
        <trans-unit id="1fa322b22fd72c13f24633c8657d5752421f881f" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;optional&lt;/code&gt; object whose contained value is copied</source>
          <target state="translated">другой &lt;code&gt;optional&lt;/code&gt; объект, содержимое которого копируется</target>
        </trans-unit>
        <trans-unit id="c2ffba491ce89b6f66dda5f5d20338f55534e7dc" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;optional&lt;/code&gt; object whose contained value to assign</source>
          <target state="translated">другой &lt;code&gt;optional&lt;/code&gt; объект, содержащее значение для назначения</target>
        </trans-unit>
        <trans-unit id="b894d64983ecbb0d78decc55b934bf826b3eb3ef" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;polymorphic_allocator&lt;/code&gt; to copy from</source>
          <target state="translated">другой &lt;code&gt;polymorphic_allocator&lt;/code&gt; для копирования</target>
        </trans-unit>
        <trans-unit id="c3a54d7d05617c63cb5bfc38adeeb3d0fd376a85" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;promise&lt;/code&gt; to acquire the state from</source>
          <target state="translated">еще одно &lt;code&gt;promise&lt;/code&gt; приобрести государство от</target>
        </trans-unit>
        <trans-unit id="1cce65cb351c2c82a289dbdc11b9058133db0535" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;shared_lock&lt;/code&gt; to initialize the state with</source>
          <target state="translated">еще один &lt;code&gt;shared_lock&lt;/code&gt; для инициализации состояния с</target>
        </trans-unit>
        <trans-unit id="18da495f6882ee37775c303b09a885a45b89a707" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;shared_lock&lt;/code&gt; to replace the state with</source>
          <target state="translated">еще один &lt;code&gt;shared_lock&lt;/code&gt; для замены состояния на</target>
        </trans-unit>
        <trans-unit id="d79054b948bba7c443d4a369bf75bbd9faa8e4b9" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;std::function&lt;/code&gt; object to copy the target of</source>
          <target state="translated">другой объект &lt;code&gt;std::function&lt;/code&gt; для копирования цели</target>
        </trans-unit>
        <trans-unit id="123cc4eb80a8d7d2c492278fdd51a564e485112b" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;std::future&lt;/code&gt; to acquire shared state from</source>
          <target state="translated">другой стандарт &lt;code&gt;std::future&lt;/code&gt; чтобы получить общее состояние от</target>
        </trans-unit>
        <trans-unit id="9cdbe6cc57eb6f854ebce270325ae097db76a7ac" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;std::scoped_allocator_adaptor&lt;/code&gt;</source>
          <target state="translated">другой &lt;code&gt;std::scoped_allocator_adaptor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73bc7f37083f24d0162e500ffaf4e27882684a55" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;type_index&lt;/code&gt; object to compare to</source>
          <target state="translated">другой объект &lt;code&gt;type_index&lt;/code&gt; для сравнения</target>
        </trans-unit>
        <trans-unit id="9a634ee6725ff4a9aed350210e20a8ff91668da4" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;unique_lock&lt;/code&gt; to initialize the state with</source>
          <target state="translated">еще один &lt;code&gt;unique_lock&lt;/code&gt; для инициализации состояния</target>
        </trans-unit>
        <trans-unit id="edcd61ea7b059a5412236de7dedfb20d3804d814" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;unique_lock&lt;/code&gt; to replace the state with</source>
          <target state="translated">еще один &lt;code&gt;unique_lock&lt;/code&gt; для замены состояния на</target>
        </trans-unit>
        <trans-unit id="682ea5bcf9b39c141d109fd1de1e5d233c59c152" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;unique_ptr&lt;/code&gt; object to swap the managed object and the deleter with</source>
          <target state="translated">другой объект &lt;code&gt;unique_ptr&lt;/code&gt; для замены управляемого объекта и средства удаления на</target>
        </trans-unit>
        <trans-unit id="011cd8987035657434b5098fe4fba4bb6b2ed566" translate="yes" xml:space="preserve">
          <source>another &lt;code&gt;variant&lt;/code&gt; object whose contained value to copy/move</source>
          <target state="translated">другой &lt;code&gt;variant&lt;/code&gt; объекта, содержащее значение для копирования / перемещения</target>
        </trans-unit>
        <trans-unit id="c07d0e00b598d90529fd6e393bd6e85d54d3c05b" translate="yes" xml:space="preserve">
          <source>another allocator to construct with</source>
          <target state="translated">другой аллокатор,который необходимо построить с</target>
        </trans-unit>
        <trans-unit id="69c5e18e38e4640192412c5bd0729b775bd4d65d" translate="yes" xml:space="preserve">
          <source>another atomic operation B on M if any of the following is true:</source>
          <target state="translated">другая атомная операция Б на М,если хоть одно из нижеследующих утверждений верно:</target>
        </trans-unit>
        <trans-unit id="295beb699ffe72cdff214290612770eb874e48ef" translate="yes" xml:space="preserve">
          <source>another bitset</source>
          <target state="translated">другой битсет</target>
        </trans-unit>
        <trans-unit id="ab9d45d08ea852900154d75a1c3d270e72c0b7f5" translate="yes" xml:space="preserve">
          <source>another complex to use as source</source>
          <target state="translated">другой комплекс для использования в качестве источника</target>
        </trans-unit>
        <trans-unit id="011b0157f40a1049e9efddd2f99bce8b6f92ee44" translate="yes" xml:space="preserve">
          <source>another container adaptor to be used as source</source>
          <target state="translated">другой адаптер контейнера для использования в качестве источника</target>
        </trans-unit>
        <trans-unit id="cc5454a7cd862fd70c5eff90f6a792ed8de0d960" translate="yes" xml:space="preserve">
          <source>another container adaptor to be used as source to initialize the underlying container</source>
          <target state="translated">другой адаптер контейнера для использования в качестве источника для инициализации лежащего в основе контейнера</target>
        </trans-unit>
        <trans-unit id="44c224e93b0f756960ac267ec33ef27094096892" translate="yes" xml:space="preserve">
          <source>another container to be used as source to initialize the elements of the container with</source>
          <target state="translated">другой контейнер,используемый в качестве источника для инициализации элементов контейнера с помощью</target>
        </trans-unit>
        <trans-unit id="070cdd40a8d0b59181ac887aa5a96da6b7c18f22" translate="yes" xml:space="preserve">
          <source>another container to merge</source>
          <target state="translated">другой контейнер для слияния</target>
        </trans-unit>
        <trans-unit id="0cbddc779d87809500ccec493a7fc545701d7757" translate="yes" xml:space="preserve">
          <source>another container to move the content from</source>
          <target state="translated">другой контейнер для перемещения содержимого</target>
        </trans-unit>
        <trans-unit id="e13621cd5fafadbc09abd45892c2c2c74f9e1e00" translate="yes" xml:space="preserve">
          <source>another container to transfer the content from</source>
          <target state="translated">другой контейнер для передачи содержимого из</target>
        </trans-unit>
        <trans-unit id="008c3f5de6a82b3452b39acbd86a4b89b483b4e5" translate="yes" xml:space="preserve">
          <source>another container to use as data source</source>
          <target state="translated">другой контейнер для использования в качестве источника данных</target>
        </trans-unit>
        <trans-unit id="8ac312f5c2c4e28916ef836b28abb754ddcbb194" translate="yes" xml:space="preserve">
          <source>another directory iterator to assign</source>
          <target state="translated">другой итератор каталогов для назначения</target>
        </trans-unit>
        <trans-unit id="ff4a237da678e141f9ebbd3744bd4bd1ddec53a8" translate="yes" xml:space="preserve">
          <source>another error condition to initialize with</source>
          <target state="translated">другое состояние ошибки для инициализации с</target>
        </trans-unit>
        <trans-unit id="9319faf8c55f374fc6a55801f21dfcc4b4c19f3c" translate="yes" xml:space="preserve">
          <source>another exception object to assign</source>
          <target state="translated">другой объект исключения</target>
        </trans-unit>
        <trans-unit id="53c39399a46863589ae5b93ff93e4673b7a0403c" translate="yes" xml:space="preserve">
          <source>another exception to assign the contents of</source>
          <target state="translated">другое исключение для присвоения содержания</target>
        </trans-unit>
        <trans-unit id="9697f6147b67a136825a02c0ba8fb518e802f98d" translate="yes" xml:space="preserve">
          <source>another file stream to use as source</source>
          <target state="translated">другой поток файлов для использования в качестве источника</target>
        </trans-unit>
        <trans-unit id="dfebfaa5acb2d9fea369a15c40ec185f54ac2cc0" translate="yes" xml:space="preserve">
          <source>another file_status object to assign</source>
          <target state="translated">другой объект file_status для присвоения</target>
        </trans-unit>
        <trans-unit id="82484a99b3d8e9af3e5dc188c8209c8d0b88e8cd" translate="yes" xml:space="preserve">
          <source>another future object to initialize with</source>
          <target state="translated">другой будущий объект для инициализации с</target>
        </trans-unit>
        <trans-unit id="1eb94211f7b299e9eee83736cc7e9bd9bae5503a" translate="yes" xml:space="preserve">
          <source>another istream_iterator of the same type</source>
          <target state="translated">другой istream_iterator того же типа</target>
        </trans-unit>
        <trans-unit id="da1286ef3586464302913a563cf0529846dba438" translate="yes" xml:space="preserve">
          <source>another locale to copy</source>
          <target state="translated">другая местность для копирования</target>
        </trans-unit>
        <trans-unit id="0f2f075ca1f1159310726a2ea26858a6be7582ab" translate="yes" xml:space="preserve">
          <source>another locale to take facets from</source>
          <target state="translated">другая местность,чтобы принять фасеты от</target>
        </trans-unit>
        <trans-unit id="299d122b37b4556be79fcba0eafe7f58b134ed01" translate="yes" xml:space="preserve">
          <source>another match results object</source>
          <target state="translated">другой объект матча</target>
        </trans-unit>
        <trans-unit id="55e91901632b7fa7654f85d5fe354cf0bbf963b1" translate="yes" xml:space="preserve">
          <source>another match_result to use as source to initialize the match_result with</source>
          <target state="translated">другое значение параметра match_result для использования в качестве источника для инициализации параметра match_result с помощью параметра</target>
        </trans-unit>
        <trans-unit id="f4cef26571547644e1a2ab50cb3b57c82c83de68" translate="yes" xml:space="preserve">
          <source>another numeric array</source>
          <target state="translated">другой числовой массив</target>
        </trans-unit>
        <trans-unit id="b2d199aec079135435793908129f99df5b7dcea0" translate="yes" xml:space="preserve">
          <source>another numeric array (or a mask) to assign</source>
          <target state="translated">другой числовой массив (или маску)для назначения</target>
        </trans-unit>
        <trans-unit id="9202e73c6b838b7e74f12fb1b3bb9016bfc0f65a" translate="yes" xml:space="preserve">
          <source>another numeric array to use as source to initialize the contents</source>
          <target state="translated">другой числовой массив для использования в качестве источника для инициализации содержимого</target>
        </trans-unit>
        <trans-unit id="10f4b2a38667ef44af316081ef7717396e08d21a" translate="yes" xml:space="preserve">
          <source>another osyncstream to move from</source>
          <target state="translated">другой осинкулист,чтобы перейти от</target>
        </trans-unit>
        <trans-unit id="e886dbbbb760ffe370cd54cd2bd12a9033b45cfe" translate="yes" xml:space="preserve">
          <source>another path to exchange the contents with</source>
          <target state="translated">другой способ обмена содержимым с</target>
        </trans-unit>
        <trans-unit id="01ad6739c344a8ab7ca8b63544a5591345cfd0c7" translate="yes" xml:space="preserve">
          <source>another reference wrapper</source>
          <target state="translated">другая справочная обёртка</target>
        </trans-unit>
        <trans-unit id="585f6648cbcbca92d008141bd3109d52f4e7a5fb" translate="yes" xml:space="preserve">
          <source>another regex object</source>
          <target state="translated">другой регекс-объект</target>
        </trans-unit>
        <trans-unit id="34fa0107a502103eeaed03f33a06d2ee2857285a" translate="yes" xml:space="preserve">
          <source>another regex to use as source to initialize the regex</source>
          <target state="translated">другой регекс для использования в качестве источника для инициализации регекса</target>
        </trans-unit>
        <trans-unit id="3247286e31fe53b7f24e65de3ba98e0583a9207e" translate="yes" xml:space="preserve">
          <source>another regular expression to assign</source>
          <target state="translated">другое регулярное выражение для назначения</target>
        </trans-unit>
        <trans-unit id="5b16caf61bb99f1c8857ca1cb7a2a4e21dac5026" translate="yes" xml:space="preserve">
          <source>another slice to copy</source>
          <target state="translated">другой ломтик для копирования</target>
        </trans-unit>
        <trans-unit id="a9fbaff45a95db1b269061aaffd0fec6e67c3042" translate="yes" xml:space="preserve">
          <source>another smart pointer to acquire the ownership from</source>
          <target state="translated">еще один умный указатель,чтобы получить право собственности от</target>
        </trans-unit>
        <trans-unit id="8fb14df8a69745aa9094f941af1dab50fa04dcaa" translate="yes" xml:space="preserve">
          <source>another smart pointer to share the ownership to or acquire the ownership from</source>
          <target state="translated">еще один умный указатель,чтобы поделиться правом собственности или приобрести право собственности у</target>
        </trans-unit>
        <trans-unit id="8bc86cc5e36a55810011a187370b9f645ad89203" translate="yes" xml:space="preserve">
          <source>another span to convert from</source>
          <target state="translated">другой диапазон для перехода от</target>
        </trans-unit>
        <trans-unit id="d8fe9e2a37c3bd9d2fe3391bb168e3e6ecd3a0f2" translate="yes" xml:space="preserve">
          <source>another span to copy from</source>
          <target state="translated">другой диапазон для копирования с</target>
        </trans-unit>
        <trans-unit id="49642b2a7a75575bf5b3f4cba9740bf1e08670be" translate="yes" xml:space="preserve">
          <source>another std::basic_syncbuf to move from</source>
          <target state="translated">другой std::basic_syncbuf для перехода от</target>
        </trans-unit>
        <trans-unit id="3154068cac6cae3d907324ba750fd28c6d765879" translate="yes" xml:space="preserve">
          <source>another stream buffer iterator to compare to</source>
          <target state="translated">другой буферный итератор потока для сравнения с</target>
        </trans-unit>
        <trans-unit id="81f50d895354b1691e55d2b0d771a6fe1938552a" translate="yes" xml:space="preserve">
          <source>another stream to assign state of</source>
          <target state="translated">другой поток для назначения состояния</target>
        </trans-unit>
        <trans-unit id="b01fbe6142d0a0dfc3c771c41b98eabf246d50ca" translate="yes" xml:space="preserve">
          <source>another stream to exchange the state with</source>
          <target state="translated">другой поток для обмена государством с</target>
        </trans-unit>
        <trans-unit id="b9dc52dd593ff3a90d2ce6139244210cdeb7737f" translate="yes" xml:space="preserve">
          <source>another stream to initialize with</source>
          <target state="translated">другой поток для инициализации с</target>
        </trans-unit>
        <trans-unit id="106cdb3912c17bd580a2a45c5d3d7d5f1885e996" translate="yes" xml:space="preserve">
          <source>another stream to use as source</source>
          <target state="translated">другой поток для использования в качестве источника</target>
        </trans-unit>
        <trans-unit id="f752ff35970f51e96737e8399f80371505927f48" translate="yes" xml:space="preserve">
          <source>another string stream to use as source</source>
          <target state="translated">другой поток строк для использования в качестве источника</target>
        </trans-unit>
        <trans-unit id="e8b7aea8fa71707b230bcd2cf3fba2cb377725bc" translate="yes" xml:space="preserve">
          <source>another string to use as source to initialize the string with</source>
          <target state="translated">другая строка для использования в качестве источника для инициализации строки с помощью</target>
        </trans-unit>
        <trans-unit id="25dee2605190994cf7d29db49a6b2c9635a767d9" translate="yes" xml:space="preserve">
          <source>another thread object to assign to this thread object</source>
          <target state="translated">другой объект потока для присвоения этому объекту потока</target>
        </trans-unit>
        <trans-unit id="a11fa54ae925c9198453c8c91bd86737c94d32cb" translate="yes" xml:space="preserve">
          <source>another thread object to construct this thread object with</source>
          <target state="translated">другой объект потока,чтобы построить этот объект потока с</target>
        </trans-unit>
        <trans-unit id="2e3b6cbe47ff45fcc332f6fb3317c3353759dddc" translate="yes" xml:space="preserve">
          <source>another type information object to compare to</source>
          <target state="translated">другой тип объекта информации для сравнения с</target>
        </trans-unit>
        <trans-unit id="da24d3befb6891705354d1d9019ef1ff224d78b9" translate="yes" xml:space="preserve">
          <source>another valarray to swap the contents with</source>
          <target state="translated">еще один валаррей,чтобы поменять содержимое на</target>
        </trans-unit>
        <trans-unit id="0c93f3b149a9d27f59d4b6d97ab570a90623e79b" translate="yes" xml:space="preserve">
          <source>another view to initialize the view with</source>
          <target state="translated">другой вид для инициализации вида с</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="d5970456ab549a8f0e8111871213023bcd162e52" translate="yes" xml:space="preserve">
          <source>any &lt;a href=&quot;declarations&quot;&gt;declaration&lt;/a&gt; that specifies initialization of a variable and variable template</source>
          <target state="translated">любое &lt;a href=&quot;declarations&quot;&gt;объявление,&lt;/a&gt; которое определяет инициализацию переменной и шаблон переменной</target>
        </trans-unit>
        <trans-unit id="8e3df9cc81ecc4c3fa749c0e28c77c8014afe93d" translate="yes" xml:space="preserve">
          <source>any &lt;a href=&quot;declarations&quot;&gt;declarator&lt;/a&gt; except another reference declarator (there are no references to references)</source>
          <target state="translated">любой &lt;a href=&quot;declarations&quot;&gt;декларатор&lt;/a&gt; кроме другого ссылочного декларатора (нет ссылок на ссылки)</target>
        </trans-unit>
        <trans-unit id="a73c0e5ebe0d0b7db8448fd2ab0c860d139b82c9" translate="yes" xml:space="preserve">
          <source>any &lt;a href=&quot;declarations&quot;&gt;declarator&lt;/a&gt; other than a reference declarator (there are no pointers to references). It can be another pointer declarator (pointer to pointers are allowed)</source>
          <target state="translated">любой &lt;a href=&quot;declarations&quot;&gt;декларатор,&lt;/a&gt; кроме ссылочного (нет указателей на ссылки). Это может быть другой указатель указателя (указатель на указатель разрешен)</target>
        </trans-unit>
        <trans-unit id="51afdfd6915485c4ada63c562fa452e9ddebc10e" translate="yes" xml:space="preserve">
          <source>any &lt;a href=&quot;expressions&quot;&gt;expression&lt;/a&gt; of integral or enumeration type, or of a class type &lt;a href=&quot;implicit_cast&quot;&gt;contextually implicitly convertible&lt;/a&gt; to an integral or enumeration type, or a &lt;a href=&quot;declarations&quot;&gt;declaration&lt;/a&gt; of a single non-array variable of such type with a brace-or-equals &lt;a href=&quot;initialization&quot;&gt;initializer&lt;/a&gt;.</source>
          <target state="translated">любое &lt;a href=&quot;expressions&quot;&gt;выражение&lt;/a&gt; целочисленного или перечислимого типа, или типа класса, &lt;a href=&quot;implicit_cast&quot;&gt;контекстуально неявно преобразуемого&lt;/a&gt; в целочисленный или перечислимый тип, или &lt;a href=&quot;declarations&quot;&gt;объявление&lt;/a&gt; единственной переменной, не являющейся массивом, такого типа с &lt;a href=&quot;initialization&quot;&gt;инициализатором&lt;/a&gt; скобки или равенства .</target>
        </trans-unit>
        <trans-unit id="e5cd6152cb85a6373bb246013fba4636e1dc4a05" translate="yes" xml:space="preserve">
          <source>any &lt;a href=&quot;expressions&quot;&gt;expression&lt;/a&gt; that represents a suitable sequence (either an array or an object for which &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; member functions or free functions are defined, see below) or a &lt;a href=&quot;list_initialization&quot;&gt;braced-init-list&lt;/a&gt;.</source>
          <target state="translated">любое &lt;a href=&quot;expressions&quot;&gt;выражение&lt;/a&gt; , представляющее подходящую последовательность (либо массив, либо объект, для которого определены функции-члены &lt;code&gt;begin&lt;/code&gt; и &lt;code&gt;end&lt;/code&gt; или свободные функции, см. ниже) или список &lt;a href=&quot;list_initialization&quot;&gt;фигурных скобок&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="03170d0f618ae1a51a5cbc39b3306db6f81c968a" translate="yes" xml:space="preserve">
          <source>any &lt;a href=&quot;expressions&quot;&gt;expression&lt;/a&gt; which is &lt;a href=&quot;implicit_cast&quot;&gt;contextually convertible&lt;/a&gt; to bool or a &lt;a href=&quot;declarations&quot;&gt;declaration&lt;/a&gt; of a single variable with a brace-or-equals &lt;a href=&quot;initialization&quot;&gt;initializer&lt;/a&gt;. This expression is evaluated before each iteration, and if it yields &lt;code&gt;false&lt;/code&gt;, the loop is exited. If this is a declaration, the initializer is evaluated before each iteration, and if the value of the declared variable converts to &lt;code&gt;false&lt;/code&gt;, the loop is exited.</source>
          <target state="translated">любое &lt;a href=&quot;expressions&quot;&gt;выражение,&lt;/a&gt; которое может быть &lt;a href=&quot;implicit_cast&quot;&gt;контекстно преобразовано&lt;/a&gt; в bool или &lt;a href=&quot;declarations&quot;&gt;объявление&lt;/a&gt; одной переменной с &lt;a href=&quot;initialization&quot;&gt;инициализатором&lt;/a&gt; скобок или равно . Это выражение вычисляется перед каждой итерацией, и если оно возвращает &lt;code&gt;false&lt;/code&gt; , цикл завершается. Если это объявление, инициализатор вычисляется перед каждой итерацией, и если значение объявленной переменной преобразуется в &lt;code&gt;false&lt;/code&gt; , цикл завершается.</target>
        </trans-unit>
        <trans-unit id="48f335514ab109799e7ab284a2632cd9a2b9f6bb" translate="yes" xml:space="preserve">
          <source>any &lt;a href=&quot;expressions&quot;&gt;expression&lt;/a&gt; which is &lt;a href=&quot;implicit_cast&quot;&gt;contextually convertible&lt;/a&gt; to bool. This expression is evaluated after each iteration, and if it yields &lt;code&gt;false&lt;/code&gt;, the loop is exited.</source>
          <target state="translated">любое &lt;a href=&quot;expressions&quot;&gt;выражение,&lt;/a&gt; которое &lt;a href=&quot;implicit_cast&quot;&gt;контекстуально конвертируется&lt;/a&gt; в bool. Это выражение вычисляется после каждой итерации, и если оно возвращает &lt;code&gt;false&lt;/code&gt; , цикл завершается.</target>
        </trans-unit>
        <trans-unit id="4b65f0bfbc6035756de17f1757b2d62e95eba2fc" translate="yes" xml:space="preserve">
          <source>any &lt;a href=&quot;expressions&quot;&gt;expression&lt;/a&gt;, which is executed after every iteration of the loop and before re-evaluating condition. Typically, this is the expression that increments the loop counter</source>
          <target state="translated">любое &lt;a href=&quot;expressions&quot;&gt;выражение&lt;/a&gt; , которое выполняется после каждой итерации цикла и перед переоценкой условия. Как правило, это выражение, которое увеличивает счетчик цикла</target>
        </trans-unit>
        <trans-unit id="ffa7b44c78203770d0494101f952ad0b312076d3" translate="yes" xml:space="preserve">
          <source>any &lt;a href=&quot;statements&quot;&gt;statement&lt;/a&gt; (often a compound statement), which is executed if condition evaluates to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">любой &lt;a href=&quot;statements&quot;&gt;оператор&lt;/a&gt; (часто составной оператор), который выполняется, если условие оценивается как &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c4c04b5e00064e421d36053d837365853a7413e" translate="yes" xml:space="preserve">
          <source>any &lt;a href=&quot;statements&quot;&gt;statement&lt;/a&gt; (often a compound statement), which is executed if condition evaluates to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">любой &lt;a href=&quot;statements&quot;&gt;оператор&lt;/a&gt; (часто составной оператор), который выполняется, если условие оценивается как &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0836fd475864fad2ab078edd2e0248af268ac973" translate="yes" xml:space="preserve">
          <source>any &lt;a href=&quot;statements&quot;&gt;statement&lt;/a&gt; (typically a compound statement). &lt;code&gt;case:&lt;/code&gt; and &lt;code&gt;default:&lt;/code&gt; labels are permitted in statement and &lt;code&gt;break;&lt;/code&gt; statement has special meaning.</source>
          <target state="translated">любое &lt;a href=&quot;statements&quot;&gt;утверждение&lt;/a&gt; (обычно составное утверждение). &lt;code&gt;case:&lt;/code&gt; и &lt;code&gt;default:&lt;/code&gt; метки разрешены в операторе и &lt;code&gt;break;&lt;/code&gt; Заявление имеет особое значение.</target>
        </trans-unit>
        <trans-unit id="ff8f57a6fc50c3b928eca64028a6f3e218dfa5cd" translate="yes" xml:space="preserve">
          <source>any &lt;a href=&quot;statements&quot;&gt;statement&lt;/a&gt;, typically a compound statement, which is the body of the loop</source>
          <target state="translated">любой &lt;a href=&quot;statements&quot;&gt;оператор&lt;/a&gt; , обычно составной оператор, который является телом цикла</target>
        </trans-unit>
        <trans-unit id="11194795bfd6fd6432a2cc5f653234d4d4b4e479" translate="yes" xml:space="preserve">
          <source>any &lt;code&gt;T&lt;/code&gt; that is trivially copyable but not copyable</source>
          <target state="translated">любой &lt;code&gt;T&lt;/code&gt; , который легко копируется, но не копируется</target>
        </trans-unit>
        <trans-unit id="67e7db25e0ac3067286f3304c45004cf8ffb2e36" translate="yes" xml:space="preserve">
          <source>any cast expression to a dependent type</source>
          <target state="translated">любое гипсовое выражение зависимого типа</target>
        </trans-unit>
        <trans-unit id="7ceb162e2bc076e2a2faeccd4e9bfd7a6c11e4f8" translate="yes" xml:space="preserve">
          <source>any cast expression to a dependent type or from a value-dependent expression</source>
          <target state="translated">любое кастное выражение к зависимому типу или из зависящего от значения выражения</target>
        </trans-unit>
        <trans-unit id="63d6f4bef936c2ea29f4ddd64808a15de3781230" translate="yes" xml:space="preserve">
          <source>any declarations of &lt;code&gt;swap&lt;/code&gt; found by &lt;a href=&quot;../../language/adl&quot;&gt;argument-dependent lookup&lt;/a&gt;.</source>
          <target state="translated">любые заявления &lt;code&gt;swap&lt;/code&gt; найдены &lt;a href=&quot;../../language/adl&quot;&gt;аргумент-зависимый поиск&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="03a723e53759bf3d43747ded6da95b57cdaaffb2" translate="yes" xml:space="preserve">
          <source>any entity defined or created within a templated entity: a local class, a local variable, a friend function, etc</source>
          <target state="translated">любая сущность,определенная или созданная внутри шаблонированной сущности:локальный класс,локальная переменная,функция друга и т.д.</target>
        </trans-unit>
        <trans-unit id="2a747febab87ebe637686e0c05893426ae5e0185" translate="yes" xml:space="preserve">
          <source>any exception thrown by &lt;code&gt;Allocator::allocate()&lt;/code&gt; (typically &lt;code&gt;&lt;a href=&quot;../../memory/new/bad_alloc&quot;&gt;std::bad_alloc&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">любое исключение, &lt;code&gt;Allocator::allocate()&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../../memory/new/bad_alloc&quot;&gt;std::bad_alloc&lt;/a&gt;&lt;/code&gt; () (обычно std :: bad_alloc )</target>
        </trans-unit>
        <trans-unit id="44137e60af3bc90a716d7b0b3737ce4fc3dacdca" translate="yes" xml:space="preserve">
          <source>any exception thrown by &lt;code&gt;f&lt;/code&gt;</source>
          <target state="translated">любое исключение, выброшенное &lt;code&gt;f&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbd9d384b5059a7f44331b59cc2761cfa59600a5" translate="yes" xml:space="preserve">
          <source>any exception thrown by the &lt;a href=&quot;packaged_task&quot;&gt; move constructor&lt;/a&gt; of the new &lt;code&gt;packaged_task&lt;/code&gt;</source>
          <target state="translated">любое исключение, сгенерированное &lt;a href=&quot;packaged_task&quot;&gt;конструктором перемещения&lt;/a&gt; новой &lt;code&gt;packaged_task&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ebccef32090d2c6052694cf4bd1d998d7c88ab8" translate="yes" xml:space="preserve">
          <source>any expression that designates a temporary object, after &lt;a href=&quot;implicit_cast#Temporary_materialization&quot;&gt;temporary materialization&lt;/a&gt;.</source>
          <target state="translated">любое выражение, обозначающее временный объект, после &lt;a href=&quot;implicit_cast#Temporary_materialization&quot;&gt;временной материализации&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c340d13cc9c10595d41f6618d70f0c1aa4d302fd" translate="yes" xml:space="preserve">
          <source>any identifier, class name, or &lt;code&gt;decltype&lt;/code&gt; expression that names a non-static data member, a direct or virtual base, or (for delegating constructors) the class itself</source>
          <target state="translated">любой идентификатор, имя класса или выражение типа &lt;code&gt;decltype&lt;/code&gt; ,в котором указан нестатический член данных, прямая или виртуальная база или (для делегирования конструкторов) сам класс</target>
        </trans-unit>
        <trans-unit id="bdf5a65c5c98dbeb42583fd9014de947d2b10067" translate="yes" xml:space="preserve">
          <source>any number of &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;</source>
          <target state="translated">любое количество &lt;a href=&quot;attributes&quot;&gt;атрибутов&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb7c13fa3a2a34751caac9176eeabd6e27791742" translate="yes" xml:space="preserve">
          <source>any number of &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt; that apply to this using-directive</source>
          <target state="translated">любое количество &lt;a href=&quot;attributes&quot;&gt;атрибутов,&lt;/a&gt; которые применяются к этой директиве using</target>
        </trans-unit>
        <trans-unit id="8a788049d59a0abb76f0db465a64adb830af3085" translate="yes" xml:space="preserve">
          <source>any of template arguments is type-dependent, value-dependent, or is a pack expansion (even if the template-id is used without its argument list, as injected-class-name)</source>
          <target state="translated">любой из аргументов шаблона зависит от типа,значения или является расширением пакета (даже если шаблон-ид используется без списка аргументов,в качестве имени инжектируемого класса)</target>
        </trans-unit>
        <trans-unit id="7921d5ed795c6ff45f8024019ef400ddbbfb5c2a" translate="yes" xml:space="preserve">
          <source>any of the following 32</source>
          <target state="translated">любой из следующих 32</target>
        </trans-unit>
        <trans-unit id="f071f1031c80f9014bf31124720633d611048d26" translate="yes" xml:space="preserve">
          <source>any of the following 38(until C++20)40(since C++20) operators:&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;&lt;code&gt;%&lt;/code&gt;&lt;code&gt;^&lt;/code&gt;&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;code&gt;|&lt;/code&gt;&lt;code&gt;~&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;&lt;code&gt;^=&lt;/code&gt;&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;code&gt;|=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;==&lt;/code&gt;&lt;code&gt;!=&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;(since C++20)&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;||&lt;/code&gt;&lt;code&gt;++&lt;/code&gt;&lt;code&gt;--&lt;/code&gt;&lt;code&gt;,&lt;/code&gt;&lt;code&gt;-&amp;gt;*&lt;/code&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;code&gt;( )&lt;/code&gt;&lt;code&gt;[ ]&lt;/code&gt;co_await(since C++20)</source>
          <target state="translated">любой из следующих 38 (до C ++ 20) 40 (начиная с C ++ 20) операторов: &lt;code&gt;+&lt;/code&gt; &lt;code&gt;-&lt;/code&gt; &lt;code&gt;*&lt;/code&gt; &lt;code&gt;/&lt;/code&gt; &lt;code&gt;%&lt;/code&gt; &lt;code&gt;^&lt;/code&gt; &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;code&gt;|&lt;/code&gt; &lt;code&gt;~&lt;/code&gt; &lt;code&gt;!&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;+=&lt;/code&gt; &lt;code&gt;-=&lt;/code&gt; &lt;code&gt;*=&lt;/code&gt; &lt;code&gt;/=&lt;/code&gt; &lt;code&gt;%=&lt;/code&gt; &lt;code&gt;^=&lt;/code&gt; &lt;code&gt;&amp;amp;=&lt;/code&gt; &lt;code&gt;|=&lt;/code&gt; &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; &lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt; &lt;code&gt;==&lt;/code&gt; &lt;code&gt;!=&lt;/code&gt; &lt;code&gt;&amp;lt;=&lt;/code&gt; &lt;code&gt;&amp;gt;=&lt;/code&gt; &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; (с C ++ 20) &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;code&gt;||&lt;/code&gt; &lt;code&gt;++&lt;/code&gt; &lt;code&gt;--&lt;/code&gt; &lt;code&gt;,&lt;/code&gt; &lt;code&gt;-&amp;gt;*&lt;/code&gt; &lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;code&gt;( )&lt;/code&gt; &lt;code&gt;[ ]&lt;/code&gt; co_await (начиная с C ++ 20)</target>
        </trans-unit>
        <trans-unit id="0d662fe4feb90b46896e3dc4a9b19518ce02a39f" translate="yes" xml:space="preserve">
          <source>any other expression that may be accepted by the currently installed C &lt;code&gt;&lt;a href=&quot;../../locale/setlocale&quot;&gt;locale&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">любое другое выражение, которое может быть принято текущим установленным &lt;code&gt;&lt;a href=&quot;../../locale/setlocale&quot;&gt;locale&lt;/a&gt;&lt;/code&gt; C</target>
        </trans-unit>
        <trans-unit id="e19e90a8cecdfb694e6d06e2f66ae9e7c4ded441" translate="yes" xml:space="preserve">
          <source>any resources held by the argument. For example, a move constructor of a linked list might copy the pointer to the head of the list and store &lt;code&gt;nullptr&lt;/code&gt; in the argument instead of allocating and copying individual nodes.</source>
          <target state="translated">любые ресурсы, удерживаемые аргументом. Например, конструктор перемещения связанного списка может скопировать указатель на &lt;code&gt;nullptr&lt;/code&gt; списка и сохранить в аргументе значение nullptr вместо выделения и копирования отдельных узлов.</target>
        </trans-unit>
        <trans-unit id="c55cf07b1b634c2c58374a17e459ebe12d7cec57" translate="yes" xml:space="preserve">
          <source>any standard attribute token</source>
          <target state="translated">любой стандартный атрибут токена</target>
        </trans-unit>
        <trans-unit id="720c33ec9b731b5c25ba46912abe2c60be5c84ce" translate="yes" xml:space="preserve">
          <source>any type such that the expression &lt;code&gt;bool(B::value)&lt;/code&gt; is a valid constant expression</source>
          <target state="translated">любой тип такой, что выражение &lt;code&gt;bool(B::value)&lt;/code&gt; является допустимым константным выражением</target>
        </trans-unit>
        <trans-unit id="be30e38eb05ec00c29f0579f65cca600ce8665c7" translate="yes" xml:space="preserve">
          <source>any valid declarator, but if it begins with *, &amp;amp;, or &amp;amp;&amp;amp;, it has to be surrounded by parentheses.</source>
          <target state="translated">любой допустимый декларатор, но если он начинается с *, &amp;amp;, или &amp;amp;&amp;amp;, он должен быть заключен в круглые скобки.</target>
        </trans-unit>
        <trans-unit id="f1929c23f4eb3ba0ca6393380ebe32397f69058a" translate="yes" xml:space="preserve">
          <source>any valid declarator, but if it begins with &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, or &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, it has to be surrounded by parentheses.</source>
          <target state="translated">любой допустимый декларатор, но если он начинается с &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;&amp;amp;&lt;/code&gt; , или &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; , он должен быть заключен в круглые скобки.</target>
        </trans-unit>
        <trans-unit id="bf69d24a18b828410a324409435e558734816ec4" translate="yes" xml:space="preserve">
          <source>any_cast</source>
          <target state="translated">any_cast</target>
        </trans-unit>
        <trans-unit id="ac78b022715c5b8357b4dca8045e8463b4de2124" translate="yes" xml:space="preserve">
          <source>ap</source>
          <target state="translated">ap</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="4bfbd9f07437718b73115a6a0356598c7d27a84a" translate="yes" xml:space="preserve">
          <source>append extended</source>
          <target state="translated">дополнительное дополнение</target>
        </trans-unit>
        <trans-unit id="c032f27dd210ce161368c8500fbb4f266829d622" translate="yes" xml:space="preserve">
          <source>appendoperator/=</source>
          <target state="translated">appendoperator/=</target>
        </trans-unit>
        <trans-unit id="cea4e18dac8b6b256584c24f08f1c66e6c79b375" translate="yes" xml:space="preserve">
          <source>appends a certain amount of wide characters from one wide string to another</source>
          <target state="translated">добавляет определенное количество широких символов из одной широкой строки в другую</target>
        </trans-unit>
        <trans-unit id="b75c84d536a3d55644b99f1da7b1d69c0c8b7a29" translate="yes" xml:space="preserve">
          <source>appends a character to the end</source>
          <target state="translated">добавляет характер до конца</target>
        </trans-unit>
        <trans-unit id="8c546d375272cf0c80c66cbfccc64570877a84bf" translate="yes" xml:space="preserve">
          <source>appends a character to the output sequence</source>
          <target state="translated">добавляет символ к выходной последовательности</target>
        </trans-unit>
        <trans-unit id="f2dbf792e9efe34706c151bbda79daf6e8690c2d" translate="yes" xml:space="preserve">
          <source>appends a character to the output sequence, may reallocate or initially allocate the buffer if dynamic and not frozen</source>
          <target state="translated">добавляет символ к выходной последовательности,может перераспределять или изначально выделять буфер,если он динамический и не заморожен.</target>
        </trans-unit>
        <trans-unit id="1975c46fbfd68df17ca6344eed23e3a6512c750c" translate="yes" xml:space="preserve">
          <source>appends a copy of one wide string to another</source>
          <target state="translated">добавляет копию одной широкой строки к другой</target>
        </trans-unit>
        <trans-unit id="b009ad82b77bc277d05792d6f0183f6ac5dd553e" translate="yes" xml:space="preserve">
          <source>appends characters to the end</source>
          <target state="translated">добавляет символы в конце</target>
        </trans-unit>
        <trans-unit id="b3f4277e38aea8d2a6bfcc6bbaa7e955b636f674" translate="yes" xml:space="preserve">
          <source>appends elements to the path with a directory separator</source>
          <target state="translated">добавляет элементы к пути с помощью разделителя каталогов</target>
        </trans-unit>
        <trans-unit id="3ff157b6dedfe5264af985b3abd3ddbdadec5319" translate="yes" xml:space="preserve">
          <source>applies &lt;a href=&quot;../language/static_cast&quot;&gt;&lt;code&gt;static_cast&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../language/dynamic_cast&quot;&gt;&lt;code&gt;dynamic_cast&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../language/const_cast&quot;&gt;&lt;code&gt;const_cast&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../language/reinterpret_cast&quot;&gt;&lt;code&gt;reinterpret_cast&lt;/code&gt;&lt;/a&gt; to the stored pointer</source>
          <target state="translated">применяет &lt;a href=&quot;../language/static_cast&quot;&gt; &lt;code&gt;static_cast&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../language/dynamic_cast&quot;&gt; &lt;code&gt;dynamic_cast&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../language/const_cast&quot;&gt; &lt;code&gt;const_cast&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../language/reinterpret_cast&quot;&gt; &lt;code&gt;reinterpret_cast&lt;/code&gt; &lt;/a&gt; к сохраненному указателю</target>
        </trans-unit>
        <trans-unit id="454dd44b475d7a5b6cd5366111c66df19f01418f" translate="yes" xml:space="preserve">
          <source>applies &lt;code&gt;operator!&lt;/code&gt; to its argument</source>
          <target state="translated">применяется &lt;code&gt;operator!&lt;/code&gt; к его аргументу</target>
        </trans-unit>
        <trans-unit id="281573407aa5782ca1b08b62a52e83f4d540e5b2" translate="yes" xml:space="preserve">
          <source>applies &lt;code&gt;operator&amp;amp;&amp;amp;&lt;/code&gt; to lhs and rhs</source>
          <target state="translated">применяет &lt;code&gt;operator&amp;amp;&amp;amp;&lt;/code&gt; к lhs и rhs</target>
        </trans-unit>
        <trans-unit id="40c3f550bb4b0741b7895d6a2becc72b1fa8f759" translate="yes" xml:space="preserve">
          <source>applies &lt;code&gt;operator&amp;amp;&lt;/code&gt; to lhs and rhs</source>
          <target state="translated">применяет &lt;code&gt;operator&amp;amp;&lt;/code&gt; к lhs и rhs</target>
        </trans-unit>
        <trans-unit id="33740c91c164c4d51ae096a6a35cb4ef67389699" translate="yes" xml:space="preserve">
          <source>applies &lt;code&gt;operator^&lt;/code&gt; to lhs and rhs</source>
          <target state="translated">применяет &lt;code&gt;operator^&lt;/code&gt; к lhs и rhs</target>
        </trans-unit>
        <trans-unit id="e412a00bdec6a854fccbd7d6cb5911f7abecf04f" translate="yes" xml:space="preserve">
          <source>applies &lt;code&gt;operator|&lt;/code&gt; to lhs and rhs</source>
          <target state="translated">применяет &lt;code&gt;operator|&lt;/code&gt; к левым и правым</target>
        </trans-unit>
        <trans-unit id="a7c24adbfc7574b7c514229bacf5d004f9f22251" translate="yes" xml:space="preserve">
          <source>applies &lt;code&gt;operator||&lt;/code&gt; to lhs and rhs</source>
          <target state="translated">применяет &lt;code&gt;operator||&lt;/code&gt; к левым и правым</target>
        </trans-unit>
        <trans-unit id="5f96399e768b44c3c93dfcbd9ed84e976d88d0ae" translate="yes" xml:space="preserve">
          <source>applies &lt;code&gt;operator~&lt;/code&gt; to its argument</source>
          <target state="translated">применяет &lt;code&gt;operator~&lt;/code&gt; к своему аргументу</target>
        </trans-unit>
        <trans-unit id="dee56b7751b3e4d26a33f8e7c45b3d36984e0202" translate="yes" xml:space="preserve">
          <source>applies a function object to the first n elements of a sequence</source>
          <target state="translated">применяет объект функции к первым n элементам последовательности</target>
        </trans-unit>
        <trans-unit id="0b0c9ef17a12518f06f1b4e88d37459232a04688" translate="yes" xml:space="preserve">
          <source>applies a function to a range of elements</source>
          <target state="translated">применяет функцию к ряду элементов</target>
        </trans-unit>
        <trans-unit id="eb102bab446745e0cac0ad87c1d6990d67bb8052" translate="yes" xml:space="preserve">
          <source>applies a function to every element of a valarray</source>
          <target state="translated">применяет функцию к каждому элементу валаррея</target>
        </trans-unit>
        <trans-unit id="fbe7a7b546f5b21ddbea5cb24456fd7b754fcd6e" translate="yes" xml:space="preserve">
          <source>applies a functor, then calculates exclusive scan</source>
          <target state="translated">применяет functor,а затем рассчитывает эксклюзивное сканирование.</target>
        </trans-unit>
        <trans-unit id="5e1ac75fa7f8321ec871eb7a4d3755f93be2905e" translate="yes" xml:space="preserve">
          <source>applies a functor, then calculates inclusive scan</source>
          <target state="translated">применяет functor,а затем рассчитывает инклюзивное сканирование</target>
        </trans-unit>
        <trans-unit id="e815a6b3c98ed90b82ee4f9cf650f7e6e9aa50cd" translate="yes" xml:space="preserve">
          <source>applies a functor, then reduces out of order</source>
          <target state="translated">применяет functor,а затем уменьшает не по назначению.</target>
        </trans-unit>
        <trans-unit id="ba91187721e29cce6583ff99fd3829967c861695" translate="yes" xml:space="preserve">
          <source>applies a unary arithmetic operator to each element of the valarray</source>
          <target state="translated">применяет одинарный арифметический оператор к каждому элементу валаррея</target>
        </trans-unit>
        <trans-unit id="5be96d43066f4dcf3996e3649c95c0bf24ad160d" translate="yes" xml:space="preserve">
          <source>applies binary operators to each element of two valarrays, or a valarray and a value</source>
          <target state="translated">применяет двоичные операторы к каждому элементу двух валаров,или валаррей и значение</target>
        </trans-unit>
        <trans-unit id="d5805c8ffc01d2c3212822511d783a5e6e55463e" translate="yes" xml:space="preserve">
          <source>applies compound assignment operator to each element of the valarray</source>
          <target state="translated">применяет составной оператор присваивания к каждому элементу валаррея</target>
        </trans-unit>
        <trans-unit id="e2e8404c4482f298299821e82b26b32a5125a4d5" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/acos&quot;&gt;std::acos&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/acos&quot;&gt;std::acos&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="650bb15ab86effcc9a4c703288d8597536f00adc" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/asin&quot;&gt;std::asin&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/asin&quot;&gt;std::asin&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="20dfbdc6949ee290fb6897b2ffe8b475d8b169fa" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/atan&quot;&gt;std::atan&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/atan&quot;&gt;std::atan&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="40e5c43bd25d13e11603e08e5a890bb70ac1d114" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/atan2&quot;&gt;std::atan2&lt;/a&gt;&lt;/code&gt; to a valarray and a value</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/atan2&quot;&gt;std::atan2&lt;/a&gt;&lt;/code&gt; к значению valarray и значению</target>
        </trans-unit>
        <trans-unit id="32e089574c3ee120b15f45c7d23c095cda530549" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/cos&quot;&gt;std::cos&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/cos&quot;&gt;std::cos&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="4e955803c3e1a81261c1cc372908009b7eb0a8b7" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/cosh&quot;&gt;std::cosh&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/cosh&quot;&gt;std::cosh&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="fab870cefc9f6be984f135e3f2bbe927cfc7d2be" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/exp&quot;&gt;std::exp&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/exp&quot;&gt;std::exp&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="c61d851f8d52007354406a5864aa285ae4967cda" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/log&quot;&gt;std::log&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/log&quot;&gt;std::log&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="0432606632ed4d6ed309d052a0027832f2ef8118" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/log10&quot;&gt;std::log10&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/log10&quot;&gt;std::log10&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="11688ddff7aa8b2c6b86c350e8ab708018302f73" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/pow&quot;&gt;std::pow&lt;/a&gt;&lt;/code&gt; to two valarrays or a valarray and a value</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/pow&quot;&gt;std::pow&lt;/a&gt;&lt;/code&gt; к двум valarrays или valarray и значению</target>
        </trans-unit>
        <trans-unit id="c230c7445a1f6bf0184d92fc8f4a408559cdda0c" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/sin&quot;&gt;std::sin&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/sin&quot;&gt;std::sin&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="5c0adb0c9e67b27d5b56b73aff936cad96885251" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/sinh&quot;&gt;std::sinh&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/sinh&quot;&gt;std::sinh&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="a1234b1b4a94ee4d90a1a306b4c14ebc0bceccd5" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/sqrt&quot;&gt;std::sqrt&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/sqrt&quot;&gt;std::sqrt&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="304d7e95b5f36c673a5adc5e2462b54bba246e18" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/tan&quot;&gt;std::tan&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/tan&quot;&gt;std::tan&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="b8debcd65edebb79c5011771c3624e5f154292d4" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../math/tanh&quot;&gt;std::tanh&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../math/tanh&quot;&gt;std::tanh&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="5658a8afbb3b89e4b00acce3b7ffa885813543b2" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../numeric/math/acos&quot;&gt;std::acos&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../numeric/math/acos&quot;&gt;std::acos&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="d4248dc2d3e970f268c15b20cd80bf6a6c0e225f" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../numeric/math/asin&quot;&gt;std::asin&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../numeric/math/asin&quot;&gt;std::asin&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="0809419257c584532aacc37911c1b6388281e8e5" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../numeric/math/atan&quot;&gt;std::atan&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../numeric/math/atan&quot;&gt;std::atan&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
        <trans-unit id="39b66dd87a6f2893d8596b7f67c61528e709f4aa" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../numeric/math/atan2&quot;&gt;std::atan2&lt;/a&gt;&lt;/code&gt; to a valarray and a value</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../numeric/math/atan2&quot;&gt;std::atan2&lt;/a&gt;&lt;/code&gt; к значению valarray и значению</target>
        </trans-unit>
        <trans-unit id="a70c7a6700c85952835aade8f4bd00920c5b07f1" translate="yes" xml:space="preserve">
          <source>applies the function &lt;code&gt;&lt;a href=&quot;../numeric/math/cos&quot;&gt;std::cos&lt;/a&gt;&lt;/code&gt; to each element of valarray</source>
          <target state="translated">применяет функцию &lt;code&gt;&lt;a href=&quot;../numeric/math/cos&quot;&gt;std::cos&lt;/a&gt;&lt;/code&gt; к каждому элементу valarray</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
