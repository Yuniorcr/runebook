<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="scikit_learn">
    <body>
      <group id="scikit_learn">
        <trans-unit id="5f7fe500f6a163e946df405096cb05bcbb642b49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;LogisticRegressionCV&lt;/code&gt;&lt;/a&gt; implements Logistic Regression with builtin cross-validation to find out the optimal C parameter. &amp;ldquo;newton-cg&amp;rdquo;, &amp;ldquo;sag&amp;rdquo;, &amp;ldquo;saga&amp;rdquo; and &amp;ldquo;lbfgs&amp;rdquo; solvers are found to be faster for high-dimensional dense data, due to warm-starting. For the multiclass case, if &lt;code&gt;multi_class&lt;/code&gt; option is set to &amp;ldquo;ovr&amp;rdquo;, an optimal C is obtained for each class and if the &lt;code&gt;multi_class&lt;/code&gt; option is set to &amp;ldquo;multinomial&amp;rdquo;, an optimal C is obtained by minimizing the cross-entropy loss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb52fca0b9554a7bc0d942859b6dedae79406a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;linear_model.LogisticRegressionCV&lt;/code&gt;&lt;/a&gt;([Cs, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b41e9710da750e528a16662f808c3a36f50943e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;sklearn.linear_model.LogisticRegressionCV&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;multinomial&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62161fcd419cbb993025b5417f1bdc6ec21685e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;sklearn.linear_model.LogisticRegressionCV&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;ovr&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405d294c7e04b7b10ac1230c80f90eae6ade9e42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitaskelasticnet#sklearn.linear_model.MultiTaskElasticNet&quot;&gt;&lt;code&gt;linear_model.MultiTaskElasticNet&lt;/code&gt;&lt;/a&gt;([alpha, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a63211b0aabe4faba36d4e45cd30a14b9b712cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitaskelasticnetcv#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;linear_model.MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.multitaskelasticnetcv#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;linear_model.MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7760ce392ed26864b431e66a041080aa45172417" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitasklasso#sklearn.linear_model.MultiTaskLasso&quot;&gt;&lt;code&gt;linear_model.MultiTaskLasso&lt;/code&gt;&lt;/a&gt;([alpha, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561fe99c60fda49820a4077cda1eafe603e88742" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitasklassocv#sklearn.linear_model.MultiTaskLassoCV&quot;&gt;&lt;code&gt;linear_model.MultiTaskLassoCV&lt;/code&gt;&lt;/a&gt;([eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430f692b6def8e513401bdb0e7603ed256a17322" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;linear_model.orthogonal_mp&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccdb567ce658b7290c2a2774715b126b6394f87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp_gram#sklearn.linear_model.orthogonal_mp_gram&quot;&gt;&lt;code&gt;linear_model.orthogonal_mp_gram&lt;/code&gt;&lt;/a&gt;(Gram, Xy[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad9d0ea0b8c7fc58c3c3323cff008e5ea4d36b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;orthogonal_mp&lt;/code&gt;&lt;/a&gt; implements the OMP algorithm for approximating the fit of a linear model with constraints imposed on the number of non-zero coefficients (ie. the L &lt;sub&gt;0&lt;/sub&gt; pseudo-norm).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2aaef516d717e163886b2593d69f09af4fa258" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9e136cc7f452a43e6575040310db410b65682fa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuitcv#sklearn.linear_model.OrthogonalMatchingPursuitCV&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuitCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuitcv#sklearn.linear_model.OrthogonalMatchingPursuitCV&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuitCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b48387c92086d5b7e2e7df17f23be1f7e2396b0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveclassifier#sklearn.linear_model.PassiveAggressiveClassifier&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveclassifier#sklearn.linear_model.PassiveAggressiveClassifier&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="96d3285db04f5c5aea982ffdd253a2127db924a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveregressor#sklearn.linear_model.PassiveAggressiveRegressor&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveRegressor&lt;/code&gt;&lt;/a&gt;([C, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7541fdb961e26731ba9e6ca71375098ce610f2de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.perceptron#sklearn.linear_model.Perceptron&quot;&gt;&lt;code&gt;linear_model.Perceptron&lt;/code&gt;&lt;/a&gt;([penalty, alpha, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8a96cdd61b7e903112e87af81166325d820301" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.randomizedlasso#sklearn.linear_model.RandomizedLasso&quot;&gt;&lt;code&gt;linear_model.RandomizedLasso&lt;/code&gt;&lt;/a&gt;(*args, **kwargs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81da02cd5d324f06a59a4f217383ea7191fec75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.randomizedlogisticregression#sklearn.linear_model.RandomizedLogisticRegression&quot;&gt;&lt;code&gt;linear_model.RandomizedLogisticRegression&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.randomizedlogisticregression#sklearn.linear_model.RandomizedLogisticRegression&quot;&gt;&lt;code&gt;linear_model.RandomizedLogisticRegression&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="fe84b99c32c92bcec146c407c6a8afab5da366e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ransacregressor#sklearn.linear_model.RANSACRegressor&quot;&gt;&lt;code&gt;linear_model.RANSACRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ransacregressor#sklearn.linear_model.RANSACRegressor&quot;&gt;&lt;code&gt;linear_model.RANSACRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e9a350b22dad2212bd3d9d24d852990982fa018d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt; regression addresses some of the problems of &lt;a href=&quot;#ordinary-least-squares&quot;&gt;Ordinary Least Squares&lt;/a&gt; by imposing a penalty on the size of coefficients. The ridge coefficients minimize a penalized residual sum of squares,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6b703cca66415cd15341c40f378a048fedfb70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;linear_model.Ridge&lt;/code&gt;&lt;/a&gt;([alpha, fit_intercept, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bfd9ff1752f80364e362781e05ab8a54719454" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridge_regression#sklearn.linear_model.ridge_regression&quot;&gt;&lt;code&gt;linear_model.ridge_regression&lt;/code&gt;&lt;/a&gt;(X, y, alpha[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e163705030687e88d469e2936228447890b622" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridgeclassifier#sklearn.linear_model.RidgeClassifier&quot;&gt;&lt;code&gt;linear_model.RidgeClassifier&lt;/code&gt;&lt;/a&gt;([alpha, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5745dc98a0741f4ced2c0b50303c2e40f523e205" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridgeclassifiercv#sklearn.linear_model.RidgeClassifierCV&quot;&gt;&lt;code&gt;linear_model.RidgeClassifierCV&lt;/code&gt;&lt;/a&gt;([alphas, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ec5deb7b4d5506eea68ea0bcfac5ba07314f7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridgecv#sklearn.linear_model.RidgeCV&quot;&gt;&lt;code&gt;RidgeCV&lt;/code&gt;&lt;/a&gt; implements ridge regression with built-in cross-validation of the alpha parameter. The object works in the same way as GridSearchCV except that it defaults to Generalized Cross-Validation (GCV), an efficient form of leave-one-out cross-validation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220e364d8f7843dd2c60eba6d89b3111c88ea922" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridgecv#sklearn.linear_model.RidgeCV&quot;&gt;&lt;code&gt;linear_model.RidgeCV&lt;/code&gt;&lt;/a&gt;([alphas, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75405cda57083d7644b5700b33fd06c38bc467c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; supports averaged SGD (ASGD). Averaging can be enabled by setting &lt;code&gt;`average=True`&lt;/code&gt;. ASGD works by averaging the coefficients of the plain SGD over each iteration over a sample. When using ASGD the learning rate can be larger and even constant leading on some datasets to a speed up in training time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6526e9882ab2a712026b51fd440ecd58c5a4d42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; supports both weighted classes and weighted instances via the fit parameters &lt;code&gt;class_weight&lt;/code&gt; and &lt;code&gt;sample_weight&lt;/code&gt;. See the examples below and the doc string of &lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier.fit&quot;&gt;&lt;code&gt;SGDClassifier.fit&lt;/code&gt;&lt;/a&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb65f144814037383da79748d09855b3e6bdc429" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; supports multi-class classification by combining multiple binary classifiers in a &amp;ldquo;one versus all&amp;rdquo; (OVA) scheme. For each of the \(K\) classes, a binary classifier is learned that discriminates between that and all other \(K-1\) classes. At testing time, we compute the confidence score (i.e. the signed distances to the hyperplane) for each classifier and choose the class with the highest confidence. The Figure below illustrates the OVA approach on the iris dataset. The dashed lines represent the three OVA classifiers; the background colors show the decision surface induced by the three classifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63890c28d41a79b72601dca28594018a216e2437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;linear_model.SGDClassifier&lt;/code&gt;&lt;/a&gt;([loss, penalty, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9abd9abad448a0d68f5d6136ebfe2c611f12a9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;SGDRegressor&lt;/code&gt;&lt;/a&gt; supports averaged SGD as &lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt;. Averaging can be enabled by setting &lt;code&gt;`average=True`&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3318424d4c487157b671901bdcdbbad91740f6e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;linear_model.SGDRegressor&lt;/code&gt;&lt;/a&gt;([loss, penalty, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73aef0828ef291a27c1af87537f3e49e4cd3be6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.theilsenregressor#sklearn.linear_model.TheilSenRegressor&quot;&gt;&lt;code&gt;TheilSenRegressor&lt;/code&gt;&lt;/a&gt; is comparable to the &lt;a href=&quot;#ordinary-least-squares&quot;&gt;Ordinary Least Squares (OLS)&lt;/a&gt; in terms of asymptotic efficiency and as an unbiased estimator. In contrast to OLS, Theil-Sen is a non-parametric method which means it makes no assumption about the underlying distribution of the data. Since Theil-Sen is a median-based estimator, it is more robust against corrupted data aka outliers. In univariate setting, Theil-Sen has a breakdown point of about 29.3% in case of a simple linear regression which means that it can tolerate arbitrary corrupted data of up to 29.3%.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78ecf2afca80fc1f0cb01ba6720640958c508fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.theilsenregressor#sklearn.linear_model.TheilSenRegressor&quot;&gt;&lt;code&gt;linear_model.TheilSenRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.theilsenregressor#sklearn.linear_model.TheilSenRegressor&quot;&gt;&lt;code&gt;linear_model.TheilSenRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e16f6846ead489a805d5268a0989d49c9adcba81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.isomap#sklearn.manifold.Isomap&quot;&gt;&lt;code&gt;manifold.Isomap&lt;/code&gt;&lt;/a&gt;([n_neighbors, n_components, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9977621e4918fd92c32a53ef59ecd4f3fa4fe80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.locally_linear_embedding#sklearn.manifold.locally_linear_embedding&quot;&gt;&lt;code&gt;manifold.locally_linear_embedding&lt;/code&gt;&lt;/a&gt;(X, &amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9cff79f6fb556527a449e14e58e28a7eadd6f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.locallylinearembedding#sklearn.manifold.LocallyLinearEmbedding&quot;&gt;&lt;code&gt;manifold.LocallyLinearEmbedding&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.locallylinearembedding#sklearn.manifold.LocallyLinearEmbedding&quot;&gt;&lt;code&gt;manifold.LocallyLinearEmbedding&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="43d25ff4452139d0c7b5143aa3cd657324926892" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.mds#sklearn.manifold.MDS&quot;&gt;&lt;code&gt;manifold.MDS&lt;/code&gt;&lt;/a&gt;([n_components, metric, n_init, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da40f534f3f8957e12cabff483d7807c93c64dcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.smacof#sklearn.manifold.smacof&quot;&gt;&lt;code&gt;manifold.smacof&lt;/code&gt;&lt;/a&gt;(dissimilarities[, metric, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049576d011b6452684f25fb1fa6e9184a1db8204" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.spectral_embedding#sklearn.manifold.spectral_embedding&quot;&gt;&lt;code&gt;manifold.spectral_embedding&lt;/code&gt;&lt;/a&gt;(adjacency[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5d3b1487f8401627f2c81a670ffd8188ab09bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.spectralembedding#sklearn.manifold.SpectralEmbedding&quot;&gt;&lt;code&gt;manifold.SpectralEmbedding&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc82ca3aebb671d854010e240331655d0021151f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.tsne#sklearn.manifold.TSNE&quot;&gt;&lt;code&gt;manifold.TSNE&lt;/code&gt;&lt;/a&gt;([n_components, perplexity, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca06d3db09115f4a2bd0486ade0162c5c55ddb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, normalize, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a6e639f8b15ea914f39eb4c73657519065186c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;metrics.accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42450c817fec8598a41aa2bc594bb37bb9ed0a00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.adjusted_mutual_info_score#sklearn.metrics.adjusted_mutual_info_score&quot;&gt;&lt;code&gt;metrics.adjusted_mutual_info_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19ffc352279495dec5b7a2e79d93119a8d658ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.adjusted_rand_score#sklearn.metrics.adjusted_rand_score&quot;&gt;&lt;code&gt;metrics.adjusted_rand_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc5c1baff1eabc15ac4cc0462335e3ef1127286" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.auc#sklearn.metrics.auc&quot;&gt;&lt;code&gt;metrics.auc&lt;/code&gt;&lt;/a&gt;(x, y[, reorder])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115164329fd1eb43ec219f713b05f0647df46668" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt;&lt;code&gt;average_precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f337b7aa61edd37ee5067920277a94bd9571fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt;&lt;code&gt;metrics.average_precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed7de4657e89e361665ebc2739fc0043b5d95c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt;&lt;code&gt;balanced_accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f318acdaeade8445683db03d0de352a6da9d6d0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt;&lt;code&gt;metrics.balanced_accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518b0ee171d7383a4dfa83154ff878b00c2efb70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.brier_score_loss#sklearn.metrics.brier_score_loss&quot;&gt;&lt;code&gt;metrics.brier_score_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_prob[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ec130993d3dec170503a83765c2f08b25b1cc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.calinski_harabaz_score#sklearn.metrics.calinski_harabaz_score&quot;&gt;&lt;code&gt;metrics.calinski_harabaz_score&lt;/code&gt;&lt;/a&gt;(X, labels)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6819694c0d2c3075e4ec7d7d4d6865e42149a22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.check_scoring#sklearn.metrics.check_scoring&quot;&gt;&lt;code&gt;metrics.check_scoring&lt;/code&gt;&lt;/a&gt;(estimator[, scoring, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd1789147412af0b8a25ff211cc76994a6ab4ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt;&lt;code&gt;classification_report&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01326779a02906bc694323633d7d4ac43f41297f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt;&lt;code&gt;metrics.classification_report&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e667df22bbe43d1b397057631e0ef4fd359af1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.cluster.contingency_matrix#sklearn.metrics.cluster.contingency_matrix&quot;&gt;&lt;code&gt;metrics.cluster.contingency_matrix&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c3cf92808cfcb6ba314b1910354e417c5b45db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt;&lt;code&gt;cohen_kappa_score&lt;/code&gt;&lt;/a&gt;(y1, y2[, labels, weights, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0508c996bffe2bbbd1f542e102c39f9f059f476c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt;&lt;code&gt;metrics.cohen_kappa_score&lt;/code&gt;&lt;/a&gt;(y1, y2[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50a0faad697fac695cdd34a6056c09f2567cb1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.completeness_score#sklearn.metrics.completeness_score&quot;&gt;&lt;code&gt;metrics.completeness_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f449a771955b13f372fd5cc991687e1a2e9b80be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt;&lt;code&gt;confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14def393ff43672f999afbcde10cc8af40ad6e6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt;&lt;code&gt;metrics.confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84940a184a8fb862b513934e5be9cca7a1a4335" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.consensus_score#sklearn.metrics.consensus_score&quot;&gt;&lt;code&gt;metrics.consensus_score&lt;/code&gt;&lt;/a&gt;(a, b[, similarity])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea6a69e67b4dd0c56df0b9d9f3cf0910b9e846e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.coverage_error#sklearn.metrics.coverage_error&quot;&gt;&lt;code&gt;metrics.coverage_error&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edf3ec5897c57b7d0f7f2d90776691b908a7afc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.davies_bouldin_score#sklearn.metrics.davies_bouldin_score&quot;&gt;&lt;code&gt;metrics.davies_bouldin_score&lt;/code&gt;&lt;/a&gt;(X, labels)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4585efe73e8721fa9194d084a6a42f2aad197411" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.explained_variance_score#sklearn.metrics.explained_variance_score&quot;&gt;&lt;code&gt;metrics.explained_variance_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33455e3ec85b7a5241dc32ebc4a9352e12ffcab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;f1_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1331880df8107052479a3f50c2964fd07c4058bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;metrics.f1_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc9bc3d79efff9118ea74b433b8afc29cd8774c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt;&lt;code&gt;fbeta_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, beta[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f0570545009a65b7313cd8018fce6c6cef837b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt;&lt;code&gt;metrics.fbeta_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, beta[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136237868cf2dd5bdd9cda5197649ecab5f491b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.fowlkes_mallows_score#sklearn.metrics.fowlkes_mallows_score&quot;&gt;&lt;code&gt;metrics.fowlkes_mallows_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d642290e877d2252a9ed0817d66591bf44d471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.get_scorer#sklearn.metrics.get_scorer&quot;&gt;&lt;code&gt;metrics.get_scorer&lt;/code&gt;&lt;/a&gt;(scoring)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.get_scorer#sklearn.metrics.get_scorer&quot;&gt;&lt;code&gt;metrics.get_scorer&lt;/code&gt;&lt;/a&gt;(scoring)</target>
        </trans-unit>
        <trans-unit id="aeac7a3e8b7290409ce2069b775933934afc58e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt;&lt;code&gt;hamming_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38e16260589fa6b93b773c5168b9289484d8af0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt;&lt;code&gt;metrics.hamming_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1983028f247edee1b8ce66e446c535108d97d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt;&lt;code&gt;hinge_loss&lt;/code&gt;&lt;/a&gt;(y_true, pred_decision[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3f579bb481dfe29cacba52210694024875b347" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt;&lt;code&gt;metrics.hinge_loss&lt;/code&gt;&lt;/a&gt;(y_true, pred_decision[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f80070e87a216fbdb60499328a823596213efe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.homogeneity_completeness_v_measure#sklearn.metrics.homogeneity_completeness_v_measure&quot;&gt;&lt;code&gt;metrics.homogeneity_completeness_v_measure&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.homogeneity_completeness_v_measure#sklearn.metrics.homogeneity_completeness_v_measure&quot;&gt;&lt;code&gt;metrics.homogeneity_completeness_v_measure&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="230d8b1efb230df71cd701df80478ca2758e6351" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.homogeneity_score#sklearn.metrics.homogeneity_score&quot;&gt;&lt;code&gt;metrics.homogeneity_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a7b04ca323c5dc52841fb17cb8dcb421f0a1e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.jaccard_similarity_score#sklearn.metrics.jaccard_similarity_score&quot;&gt;&lt;code&gt;jaccard_similarity_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e743eb987e20e6c904359e71de0095772927afbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.jaccard_similarity_score#sklearn.metrics.jaccard_similarity_score&quot;&gt;&lt;code&gt;metrics.jaccard_similarity_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89ea8e30e3c5dc62222b774d3442eb72aba1194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.label_ranking_average_precision_score#sklearn.metrics.label_ranking_average_precision_score&quot;&gt;&lt;code&gt;metrics.label_ranking_average_precision_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.label_ranking_average_precision_score#sklearn.metrics.label_ranking_average_precision_score&quot;&gt;&lt;code&gt;metrics.label_ranking_average_precision_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="f8a0cec34505e7675ef24f8c0f72b781d76abb1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.label_ranking_loss#sklearn.metrics.label_ranking_loss&quot;&gt;&lt;code&gt;metrics.label_ranking_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_score)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff30307c3e93aa3b3d2b032fc08f6e5d4842d852" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt;&lt;code&gt;log_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, eps, normalize, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcf1154e7eb4ebb97e5c0b0b66b803608b91235" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt;&lt;code&gt;metrics.log_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fbfea8a39bdae39a985f32124b9666db89a614" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.make_scorer#sklearn.metrics.make_scorer&quot;&gt;&lt;code&gt;metrics.make_scorer&lt;/code&gt;&lt;/a&gt;(score_func[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d869dc6c8d89d54b886e970bbfa21358fb3b5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt;&lt;code&gt;matthews_corrcoef&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bc2ef47c98cc6a3d18404cd14faa44fe3ef52c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt;&lt;code&gt;metrics.matthews_corrcoef&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c0be874b88c6452a418f652c180d842b7f6821" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_absolute_error#sklearn.metrics.mean_absolute_error&quot;&gt;&lt;code&gt;metrics.mean_absolute_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3289d457452bf79f70f4e545ea62a8f9b74022" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_squared_error#sklearn.metrics.mean_squared_error&quot;&gt;&lt;code&gt;metrics.mean_squared_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a99be033d780c89a26380078c25be0410db63e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_squared_log_error#sklearn.metrics.mean_squared_log_error&quot;&gt;&lt;code&gt;metrics.mean_squared_log_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e54595f22880b31b064071ce71406b172bc82a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.median_absolute_error#sklearn.metrics.median_absolute_error&quot;&gt;&lt;code&gt;metrics.median_absolute_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d76dcd64afd60860d3db9bbd44cd8fb3fcaedd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mutual_info_score#sklearn.metrics.mutual_info_score&quot;&gt;&lt;code&gt;metrics.mutual_info_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a702c0eb05f50ca1e247a9b5e62f28a596afb43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.normalized_mutual_info_score#sklearn.metrics.normalized_mutual_info_score&quot;&gt;&lt;code&gt;metrics.normalized_mutual_info_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d6b060215e46a3c5f7cc1e3fe45e462824ea68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.additive_chi2_kernel#sklearn.metrics.pairwise.additive_chi2_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.additive_chi2_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfae0e0223b57e54672884d64e5f753e4f1bcc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.chi2_kernel#sklearn.metrics.pairwise.chi2_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.chi2_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, gamma])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fec23b88836a55dacba5cda35c73880269ed53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_distances#sklearn.metrics.pairwise.cosine_distances&quot;&gt;&lt;code&gt;metrics.pairwise.cosine_distances&lt;/code&gt;&lt;/a&gt;(X[, Y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516dd8a92e3fe1a5ff9b735e4103d12317b70eb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt;&lt;code&gt;cosine_similarity&lt;/code&gt;&lt;/a&gt; computes the L2-normalized dot product of vectors. That is, if \(x\) and \(y\) are row vectors, their cosine similarity \(k\) is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51be90ddb6cfff8939459aefa1531facc132bcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt;&lt;code&gt;metrics.pairwise.cosine_similarity&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca078f31e9f0264fa3fdf0b868b6b48ddeaba18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.distance_metrics#sklearn.metrics.pairwise.distance_metrics&quot;&gt;&lt;code&gt;metrics.pairwise.distance_metrics&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.distance_metrics#sklearn.metrics.pairwise.distance_metrics&quot;&gt;&lt;code&gt;metrics.pairwise.distance_metrics&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="02fa06873d7ae6e743287863eb0c2c5400cd54c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.euclidean_distances#sklearn.metrics.pairwise.euclidean_distances&quot;&gt;&lt;code&gt;metrics.pairwise.euclidean_distances&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49ba1b0044824b27093c413751a215f61b76ff8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.kernel_metrics#sklearn.metrics.pairwise.kernel_metrics&quot;&gt;&lt;code&gt;metrics.pairwise.kernel_metrics&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.kernel_metrics#sklearn.metrics.pairwise.kernel_metrics&quot;&gt;&lt;code&gt;metrics.pairwise.kernel_metrics&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="befbc67231334b2301f2d9cce35a95028c4bb4cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.laplacian_kernel#sklearn.metrics.pairwise.laplacian_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.laplacian_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, gamma])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8888c1e796f4c2797dd5072c57e800e9a529764c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.linear_kernel#sklearn.metrics.pairwise.linear_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.linear_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de4414fc49f46303b5202b9de68954923fe70b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.manhattan_distances#sklearn.metrics.pairwise.manhattan_distances&quot;&gt;&lt;code&gt;metrics.pairwise.manhattan_distances&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d285af17f3f864745356dbcf11079de3f851996c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_cosine_distances#sklearn.metrics.pairwise.paired_cosine_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_cosine_distances&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66425e6640b5605e8a4778475e447040775ade9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_distances#sklearn.metrics.pairwise.paired_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_distances&lt;/code&gt;&lt;/a&gt;(X, Y[, metric])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989ac0d0d7e50a566e76df6405f98b1ebfbb9e8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_euclidean_distances#sklearn.metrics.pairwise.paired_euclidean_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_euclidean_distances&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d129f9020632e1e732d0b3becd968dd53a40d8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_manhattan_distances#sklearn.metrics.pairwise.paired_manhattan_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_manhattan_distances&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fe656fcf3c22351435eeabab839a9aab56a478" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.pairwise_kernels#sklearn.metrics.pairwise.pairwise_kernels&quot;&gt;&lt;code&gt;metrics.pairwise.pairwise_kernels&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920c2335f02cec189da8dc1bdf83b36c38677bd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.polynomial_kernel#sklearn.metrics.pairwise.polynomial_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.polynomial_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8ab65eb268a371cc32dbe8241f5bba2900bcbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.rbf_kernel#sklearn.metrics.pairwise.rbf_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.rbf_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, gamma])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf0d27e7a63843e1cc7b49b021de81c3e39f933" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.sigmoid_kernel#sklearn.metrics.pairwise.sigmoid_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.sigmoid_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc319dd25faa6977bcede1110bc736980839019" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances#sklearn.metrics.pairwise_distances&quot;&gt;&lt;code&gt;metrics.pairwise_distances&lt;/code&gt;&lt;/a&gt;(X[, Y, metric, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5e685da980638552134c3fccda7335d774fc1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin#sklearn.metrics.pairwise_distances_argmin&quot;&gt;&lt;code&gt;metrics.pairwise_distances_argmin&lt;/code&gt;&lt;/a&gt;(X, Y[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9d76f22402485a21b18bc2ad1f0638a2e16685" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin_min#sklearn.metrics.pairwise_distances_argmin_min&quot;&gt;&lt;code&gt;metrics.pairwise_distances_argmin_min&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba628c7031a5d0ea578d20ea605706a1c651fa55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_chunked#sklearn.metrics.pairwise_distances_chunked&quot;&gt;&lt;code&gt;metrics.pairwise_distances_chunked&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff640cc505f29e816eac84dd1e8cb2add2c38e91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_curve#sklearn.metrics.precision_recall_curve&quot;&gt;&lt;code&gt;metrics.precision_recall_curve&lt;/code&gt;&lt;/a&gt;(y_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3b0022f5b282a51d63dce8d50ba8675220c58b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_curve#sklearn.metrics.precision_recall_curve&quot;&gt;&lt;code&gt;precision_recall_curve&lt;/code&gt;&lt;/a&gt;(y_true, probas_pred)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e730d4484b9169ac15ec99c164dd62349dc5dd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;metrics.precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;metrics.precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="9985525d633c42e944a563170af01920c7bcd0ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a8fb4fcc9ed93549a73c87b7422e37cea309ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt;&lt;code&gt;metrics.precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3601afdaf343d1911ddad9c52ec1a3e3d5832dae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt;&lt;code&gt;precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f68fea98c57127efba0e0bbd11175998310f39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.r2_score#sklearn.metrics.r2_score&quot;&gt;&lt;code&gt;metrics.r2_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1012b134faf4510d6581f6f871d1ce33dd6d0e3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;metrics.recall_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03edf0ab3bc08a300860ac752381b74a70f28f65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;recall_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054fb756965230a8694203880b072a83cfa1eacf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt;&lt;code&gt;metrics.roc_auc_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a61864a7909213497d8da3a36e2abf35fcf0a08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt;&lt;code&gt;roc_auc_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, average, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871803b28b7a5d5621c9449064931630b01aa09a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt;&lt;code&gt;metrics.roc_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68259d68163fc35f4264aa268b3ca675e3ef80b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt;&lt;code&gt;roc_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, pos_label, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256c2ae5c11ff01401a23bbf0f53dcbb32799bc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.silhouette_samples#sklearn.metrics.silhouette_samples&quot;&gt;&lt;code&gt;metrics.silhouette_samples&lt;/code&gt;&lt;/a&gt;(X, labels[, metric])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab3e31f881de9b59a6cb93a7e1e057f9fa01dbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.silhouette_score#sklearn.metrics.silhouette_score&quot;&gt;&lt;code&gt;metrics.silhouette_score&lt;/code&gt;&lt;/a&gt;(X, labels[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791361a2c951ebea1be4fe4f04c96ccf6006605e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt;&lt;code&gt;metrics.v_measure_score&lt;/code&gt;&lt;/a&gt;(labels_true, labels_pred)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a20831223963ad6b577990bc0df333dc898a5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt;&lt;code&gt;v_measure_score&lt;/code&gt;&lt;/a&gt; is &lt;strong&gt;symmetric&lt;/strong&gt;: it can be used to evaluate the &lt;strong&gt;agreement&lt;/strong&gt; of two independent assignments on the same dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11e5a02ea8f02b9c1b2d6a4808f855f7fdaca96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt;&lt;code&gt;metrics.zero_one_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7622fc184b380772f258797bb0af537a938c55e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt;&lt;code&gt;zero_one_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, normalize, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330d0414c477271cf843e5d313deaca5d143e455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt;&lt;code&gt;mixture.BayesianGaussianMixture&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt;&lt;code&gt;mixture.BayesianGaussianMixture&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2a2adc8e9ac75966ece39eb5cc369d61af606544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.mixture.gaussianmixture#sklearn.mixture.GaussianMixture&quot;&gt;&lt;code&gt;mixture.GaussianMixture&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a8d3a028d0afb4562f94b2767840e4809583c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.check_cv#sklearn.model_selection.check_cv&quot;&gt;&lt;code&gt;model_selection.check_cv&lt;/code&gt;&lt;/a&gt;([cv, y, classifier])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04afbc03b466916ff6ee790aaba00db041895be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.cross_val_predict#sklearn.model_selection.cross_val_predict&quot;&gt;&lt;code&gt;model_selection.cross_val_predict&lt;/code&gt;&lt;/a&gt;(estimator, X)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8b4237b0e8b2e771b39a6a29ef9e3994bedf8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt;&lt;code&gt;model_selection.cross_val_score&lt;/code&gt;&lt;/a&gt;(estimator, X)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15da6fb2306caab2f9c7c47f8e1f82b53b6440d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.cross_validate#sklearn.model_selection.cross_validate&quot;&gt;&lt;code&gt;model_selection.cross_validate&lt;/code&gt;&lt;/a&gt;(estimator, X)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14807d3070569abb986dbd0966ec00b0d0edf4ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.fit_grid_point#sklearn.model_selection.fit_grid_point&quot;&gt;&lt;code&gt;model_selection.fit_grid_point&lt;/code&gt;&lt;/a&gt;(X, y, &amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183d83ae83b45906f3b5f33f65ceac4bc22a0379" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt;&lt;code&gt;GridSearchCV&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.model_selection.randomizedsearchcv#sklearn.model_selection.RandomizedSearchCV&quot;&gt;&lt;code&gt;RandomizedSearchCV&lt;/code&gt;&lt;/a&gt; evaluate each parameter setting independently. Computations can be run in parallel if your OS supports it, by using the keyword &lt;code&gt;n_jobs=-1&lt;/code&gt;. See function signature for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7cf2e763018321ac20801d9fe922740cae452c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt;&lt;code&gt;model_selection.GridSearchCV&lt;/code&gt;&lt;/a&gt;(estimator, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b97527ba72207f0586c0829ce4406e10bf02b3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;GroupKFold&lt;/code&gt;&lt;/a&gt; is a variation of k-fold which ensures that the same group is not represented in both testing and training sets. For example if the data is obtained from different subjects with several samples per-subject and if the model is flexible enough to learn from highly person specific features it could fail to generalize to new subjects. &lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;GroupKFold&lt;/code&gt;&lt;/a&gt; makes it possible to detect this kind of overfitting situations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf78bd298d83802ec0868a0320da79e345e1c3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;model_selection.GroupKFold&lt;/code&gt;&lt;/a&gt;([n_splits])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;model_selection.GroupKFold&lt;/code&gt;&lt;/a&gt;([n_splits])</target>
        </trans-unit>
        <trans-unit id="75b94d74125119734988e4587691c8368ab4d68c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.groupshufflesplit#sklearn.model_selection.GroupShuffleSplit&quot;&gt;&lt;code&gt;model_selection.GroupShuffleSplit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.groupshufflesplit#sklearn.model_selection.GroupShuffleSplit&quot;&gt;&lt;code&gt;model_selection.GroupShuffleSplit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5d525c53c96fc601b1814435bc8dd2a1e815e8f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt; divides all the samples in \(k\) groups of samples, called folds (if \(k = n\), this is equivalent to the &lt;em&gt;Leave One Out&lt;/em&gt; strategy), of equal sizes (if possible). The prediction function is learned using \(k - 1\) folds, and the fold left out is used for test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c318541f7809097db03cc2c4c929e1e69690416" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;model_selection.KFold&lt;/code&gt;&lt;/a&gt;([n_splits, shuffle, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d37125d9b9f5d015b083786c1ac208fb257f026" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.learning_curve#sklearn.model_selection.learning_curve&quot;&gt;&lt;code&gt;model_selection.learning_curve&lt;/code&gt;&lt;/a&gt;(estimator, X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306f754cc8eb54da216588bd1c9a296c11f39228" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt; is a cross-validation scheme which holds out the samples according to a third-party provided array of integer groups. This group information can be used to encode arbitrary domain specific pre-defined cross-validation folds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ade3102d5b46283b770a43651835b77303de35f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;model_selection.LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;model_selection.LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="1bc4a694b4724b5766d84c78fc02897e31629ac5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt; (or LOO) is a simple cross-validation. Each learning set is created by taking all the samples except one, the test set being the sample left out. Thus, for \(n\) samples, we have \(n\) different training sets and \(n\) different tests set. This cross-validation procedure does not waste much data as only one sample is removed from the training set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc43efe437de7e280c4dc95ec8aa58db9a130fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;model_selection.LeaveOneOut&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;model_selection.LeaveOneOut&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="6be1d6b6d07331d34ea841bdfb01ba937bd10897" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;LeavePGroupsOut&lt;/code&gt;&lt;/a&gt; is similar as &lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;, but removes samples related to \(P\) groups for each training/test set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316c020c7acc565e8c2e63d46353618fc0fcbf03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;model_selection.LeavePGroupsOut&lt;/code&gt;&lt;/a&gt;(n_groups)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;model_selection.LeavePGroupsOut&lt;/code&gt;&lt;/a&gt;(n_groups)</target>
        </trans-unit>
        <trans-unit id="866b3d39c95ea4724371fa9b770e5f79f89afbbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;LeavePOut&lt;/code&gt;&lt;/a&gt; is very similar to &lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt; as it creates all the possible training/test sets by removing \(p\) samples from the complete set. For \(n\) samples, this produces \({n \choose p}\) train-test pairs. Unlike &lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt;, the test sets will overlap for \(p &amp;gt; 1\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d09c866378cad32de3d3081d7ff25e71c44d30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;model_selection.LeavePOut&lt;/code&gt;&lt;/a&gt;(p)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;model_selection.LeavePOut&lt;/code&gt;&lt;/a&gt;(p)</target>
        </trans-unit>
        <trans-unit id="41aaab95cc47ec6eeb4b703393fddc68f271fc9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.parametergrid#sklearn.model_selection.ParameterGrid&quot;&gt;&lt;code&gt;model_selection.ParameterGrid&lt;/code&gt;&lt;/a&gt;(param_grid)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.parametergrid#sklearn.model_selection.ParameterGrid&quot;&gt;&lt;code&gt;model_selection.ParameterGrid&lt;/code&gt;&lt;/a&gt;(param_grid)</target>
        </trans-unit>
        <trans-unit id="2c49665ea93c6bccf110b0d876c9b51d1421c6b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.parametersampler#sklearn.model_selection.ParameterSampler&quot;&gt;&lt;code&gt;model_selection.ParameterSampler&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29149d5ab3bb9c611a4bc26e308c80a0c07267f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.permutation_test_score#sklearn.model_selection.permutation_test_score&quot;&gt;&lt;code&gt;model_selection.permutation_test_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.permutation_test_score#sklearn.model_selection.permutation_test_score&quot;&gt;&lt;code&gt;model_selection.permutation_test_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="e03f22b8ad3f4876b45b4304be636b7057801329" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.predefinedsplit#sklearn.model_selection.PredefinedSplit&quot;&gt;&lt;code&gt;model_selection.PredefinedSplit&lt;/code&gt;&lt;/a&gt;(test_fold)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.predefinedsplit#sklearn.model_selection.PredefinedSplit&quot;&gt;&lt;code&gt;model_selection.PredefinedSplit&lt;/code&gt;&lt;/a&gt;(test_fold)</target>
        </trans-unit>
        <trans-unit id="bd5fb5f1c96589c845d86db170e1f76f8b14c7ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.randomizedsearchcv#sklearn.model_selection.RandomizedSearchCV&quot;&gt;&lt;code&gt;model_selection.RandomizedSearchCV&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3e205fd7a6efa15e84a475e23ce53e67812715" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.repeatedkfold#sklearn.model_selection.RepeatedKFold&quot;&gt;&lt;code&gt;RepeatedKFold&lt;/code&gt;&lt;/a&gt; repeats K-Fold n times. It can be used when one requires to run &lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt; n times, producing different splits in each repetition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c631e765f5533564f71099cda6cf9a287b6f5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.repeatedkfold#sklearn.model_selection.RepeatedKFold&quot;&gt;&lt;code&gt;model_selection.RepeatedKFold&lt;/code&gt;&lt;/a&gt;([n_splits, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d9e2abe73fcc0693712cd14620a4f51f064224" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.repeatedstratifiedkfold#sklearn.model_selection.RepeatedStratifiedKFold&quot;&gt;&lt;code&gt;RepeatedStratifiedKFold&lt;/code&gt;&lt;/a&gt; can be used to repeat Stratified K-Fold n times with different randomization in each repetition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7153ce3bfa2f0a1f18ecbc01761466f5adc48ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.repeatedstratifiedkfold#sklearn.model_selection.RepeatedStratifiedKFold&quot;&gt;&lt;code&gt;model_selection.RepeatedStratifiedKFold&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.repeatedstratifiedkfold#sklearn.model_selection.RepeatedStratifiedKFold&quot;&gt;&lt;code&gt;model_selection.RepeatedStratifiedKFold&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2aece9da8cb1431c46a0dae233811727c3bf5991" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.shufflesplit#sklearn.model_selection.ShuffleSplit&quot;&gt;&lt;code&gt;ShuffleSplit&lt;/code&gt;&lt;/a&gt; is thus a good alternative to &lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt; cross validation that allows a finer control on the number of iterations and the proportion of samples on each side of the train / test split.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee4e0ae04f32503fbbf0c0ae55382b15415c17b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.shufflesplit#sklearn.model_selection.ShuffleSplit&quot;&gt;&lt;code&gt;model_selection.ShuffleSplit&lt;/code&gt;&lt;/a&gt;([n_splits, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532d2b58cc947217fd99e4987bb40db639d912df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.stratifiedkfold#sklearn.model_selection.StratifiedKFold&quot;&gt;&lt;code&gt;StratifiedKFold&lt;/code&gt;&lt;/a&gt; is a variation of &lt;em&gt;k-fold&lt;/em&gt; which returns &lt;em&gt;stratified&lt;/em&gt; folds: each set contains approximately the same percentage of samples of each target class as the complete set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc1889ffd0e35430ea6e13e38a3f4b2fa9c719c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.stratifiedkfold#sklearn.model_selection.StratifiedKFold&quot;&gt;&lt;code&gt;model_selection.StratifiedKFold&lt;/code&gt;&lt;/a&gt;([n_splits, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c335b1d286fd3c9fa38fb3cb2c23d904c0fffc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.stratifiedshufflesplit#sklearn.model_selection.StratifiedShuffleSplit&quot;&gt;&lt;code&gt;StratifiedShuffleSplit&lt;/code&gt;&lt;/a&gt; is a variation of &lt;em&gt;ShuffleSplit&lt;/em&gt;, which returns stratified splits, &lt;em&gt;i.e&lt;/em&gt; which creates splits by preserving the same percentage for each target class as in the complete set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59fb6d38ae710e883a79030c35c119421571e644" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.stratifiedshufflesplit#sklearn.model_selection.StratifiedShuffleSplit&quot;&gt;&lt;code&gt;model_selection.StratifiedShuffleSplit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.stratifiedshufflesplit#sklearn.model_selection.StratifiedShuffleSplit&quot;&gt;&lt;code&gt;model_selection.StratifiedShuffleSplit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="fcdc8d5ef4241581a7a876efc4d33ae6c244d691" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.timeseriessplit#sklearn.model_selection.TimeSeriesSplit&quot;&gt;&lt;code&gt;TimeSeriesSplit&lt;/code&gt;&lt;/a&gt; is a variation of &lt;em&gt;k-fold&lt;/em&gt; which returns first \(k\) folds as train set and the \((k+1)\) th fold as test set. Note that unlike standard cross-validation methods, successive training sets are supersets of those that come before them. Also, it adds all surplus data to the first training partition, which is always used to train the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa80af25419d6a3575d89b78c68916ab19de37d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.timeseriessplit#sklearn.model_selection.TimeSeriesSplit&quot;&gt;&lt;code&gt;model_selection.TimeSeriesSplit&lt;/code&gt;&lt;/a&gt;([n_splits, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae1ef5ebf369d2072aa4c4e7ce255120d4c6133" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.train_test_split#sklearn.model_selection.train_test_split&quot;&gt;&lt;code&gt;model_selection.train_test_split&lt;/code&gt;&lt;/a&gt;(*arrays, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b61a0e9adc81839589083bef8359eeb0bb912f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.validation_curve#sklearn.model_selection.validation_curve&quot;&gt;&lt;code&gt;model_selection.validation_curve&lt;/code&gt;&lt;/a&gt;(estimator, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7c9fbf653a2d2049d1abc9e49357a7bb6d6f74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.multiclass.onevsoneclassifier#sklearn.multiclass.OneVsOneClassifier&quot;&gt;&lt;code&gt;OneVsOneClassifier&lt;/code&gt;&lt;/a&gt; constructs one classifier per pair of classes. At prediction time, the class which received the most votes is selected. In the event of a tie (among two classes with an equal number of votes), it selects the class with the highest aggregate classification confidence by summing over the pair-wise classification confidence levels computed by the underlying binary classifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fea843b2a9a104e5b24540d59ab62771a758e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.multiclass.onevsoneclassifier#sklearn.multiclass.OneVsOneClassifier&quot;&gt;&lt;code&gt;multiclass.OneVsOneClassifier&lt;/code&gt;&lt;/a&gt;(estimator[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7991c97d07719fac75186ca796911557725a2da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.multiclass.onevsrestclassifier#sklearn.multiclass.OneVsRestClassifier&quot;&gt;&lt;code&gt;OneVsRestClassifier&lt;/code&gt;&lt;/a&gt; also supports multilabel classification. To use this feature, feed the classifier an indicator matrix, in which cell [i, j] indicates the presence of label j in sample i.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a197fef620d2971ba2ba365f8954de32493bf03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.multiclass.onevsrestclassifier#sklearn.multiclass.OneVsRestClassifier&quot;&gt;&lt;code&gt;multiclass.OneVsRestClassifier&lt;/code&gt;&lt;/a&gt;(estimator[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7507d5f72e20ae27f7cb3b379ccd43b7702c7562" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.multiclass.outputcodeclassifier#sklearn.multiclass.OutputCodeClassifier&quot;&gt;&lt;code&gt;multiclass.OutputCodeClassifier&lt;/code&gt;&lt;/a&gt;(estimator[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e5af3a885fa7fe4871270698ef0654528752e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.multioutput.classifierchain#sklearn.multioutput.ClassifierChain&quot;&gt;&lt;code&gt;multioutput.ClassifierChain&lt;/code&gt;&lt;/a&gt;(base_estimator)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.multioutput.classifierchain#sklearn.multioutput.ClassifierChain&quot;&gt;&lt;code&gt;multioutput.ClassifierChain&lt;/code&gt;&lt;/a&gt;(base_estimator)</target>
        </trans-unit>
        <trans-unit id="433c45f70d338f46b431e95761b3df845742e52d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.multioutput.multioutputclassifier#sklearn.multioutput.MultiOutputClassifier&quot;&gt;&lt;code&gt;multioutput.MultiOutputClassifier&lt;/code&gt;&lt;/a&gt;(estimator)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.multioutput.multioutputclassifier#sklearn.multioutput.MultiOutputClassifier&quot;&gt;&lt;code&gt;multioutput.MultiOutputClassifier&lt;/code&gt;&lt;/a&gt;(estimator)</target>
        </trans-unit>
        <trans-unit id="663d76f05761e1617893be7573e942a183f2783a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.multioutput.multioutputregressor#sklearn.multioutput.MultiOutputRegressor&quot;&gt;&lt;code&gt;multioutput.MultiOutputRegressor&lt;/code&gt;&lt;/a&gt;(estimator)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.multioutput.multioutputregressor#sklearn.multioutput.MultiOutputRegressor&quot;&gt;&lt;code&gt;multioutput.MultiOutputRegressor&lt;/code&gt;&lt;/a&gt;(estimator)</target>
        </trans-unit>
        <trans-unit id="fe3901e95be0adce64dd8bccacb5991612f54385" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.multioutput.regressorchain#sklearn.multioutput.RegressorChain&quot;&gt;&lt;code&gt;multioutput.RegressorChain&lt;/code&gt;&lt;/a&gt;(base_estimator[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e4bd3bae86a81b5f326da42328a2c9ce8266ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.naive_bayes.bernoullinb#sklearn.naive_bayes.BernoulliNB&quot;&gt;&lt;code&gt;BernoulliNB&lt;/code&gt;&lt;/a&gt; implements the naive Bayes training and classification algorithms for data that is distributed according to multivariate Bernoulli distributions; i.e., there may be multiple features but each one is assumed to be a binary-valued (Bernoulli, boolean) variable. Therefore, this class requires samples to be represented as binary-valued feature vectors; if handed any other kind of data, a &lt;code&gt;BernoulliNB&lt;/code&gt; instance may binarize its input (depending on the &lt;code&gt;binarize&lt;/code&gt; parameter).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a90ffa39b54f7582bd94a834e14c5114be8658" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.naive_bayes.bernoullinb#sklearn.naive_bayes.BernoulliNB&quot;&gt;&lt;code&gt;naive_bayes.BernoulliNB&lt;/code&gt;&lt;/a&gt;([alpha, binarize, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b13ebbdd0a7862ac03c8a06019828204ec15cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.naive_bayes.complementnb#sklearn.naive_bayes.ComplementNB&quot;&gt;&lt;code&gt;ComplementNB&lt;/code&gt;&lt;/a&gt; implements the complement naive Bayes (CNB) algorithm. CNB is an adaptation of the standard multinomial naive Bayes (MNB) algorithm that is particularly suited for imbalanced data sets. Specifically, CNB uses statistics from the &lt;em&gt;complement&lt;/em&gt; of each class to compute the model&amp;rsquo;s weights. The inventors of CNB show empirically that the parameter estimates for CNB are more stable than those for MNB. Further, CNB regularly outperforms MNB (often by a considerable margin) on text classification tasks. The procedure for calculating the weights is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e0d35c88f28ad24f7f2bea006443346b10b33d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.naive_bayes.complementnb#sklearn.naive_bayes.ComplementNB&quot;&gt;&lt;code&gt;naive_bayes.ComplementNB&lt;/code&gt;&lt;/a&gt;([alpha, fit_prior, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5322b0207c600f1f8d19325fdd5b4c11507be5d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.naive_bayes.gaussiannb#sklearn.naive_bayes.GaussianNB&quot;&gt;&lt;code&gt;GaussianNB&lt;/code&gt;&lt;/a&gt; implements the Gaussian Naive Bayes algorithm for classification. The likelihood of the features is assumed to be Gaussian:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b64c1a20f8685e408583d896c5c17e197b8704" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.naive_bayes.gaussiannb#sklearn.naive_bayes.GaussianNB&quot;&gt;&lt;code&gt;GaussianNB&lt;/code&gt;&lt;/a&gt; tends to push probabilities to 0 or 1 (note the counts in the histograms). This is mainly because it makes the assumption that features are conditionally independent given the class, which is not the case in this dataset which contains 2 redundant features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee20553683f08ae09ebc5abcedf232dc1a26369a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.naive_bayes.gaussiannb#sklearn.naive_bayes.GaussianNB&quot;&gt;&lt;code&gt;naive_bayes.GaussianNB&lt;/code&gt;&lt;/a&gt;([priors, var_smoothing])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84df608ac1c96fcb84d7149f08fe4e8734d394d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.naive_bayes.multinomialnb#sklearn.naive_bayes.MultinomialNB&quot;&gt;&lt;code&gt;MultinomialNB&lt;/code&gt;&lt;/a&gt; implements the naive Bayes algorithm for multinomially distributed data, and is one of the two classic naive Bayes variants used in text classification (where the data are typically represented as word vector counts, although tf-idf vectors are also known to work well in practice). The distribution is parametrized by vectors \(\theta_y = (\theta_{y1},\ldots,\theta_{yn})\) for each class \(y\), where \(n\) is the number of features (in text classification, the size of the vocabulary) and \(\theta_{yi}\) is the probability \(P(x_i \mid y)\) of feature \(i\) appearing in a sample belonging to class \(y\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad676c1e4dbd2513947d65640fe491b1271c32a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.naive_bayes.multinomialnb#sklearn.naive_bayes.MultinomialNB&quot;&gt;&lt;code&gt;naive_bayes.MultinomialNB&lt;/code&gt;&lt;/a&gt;([alpha, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83efd1a618d420efacab8109cd88c7d92dcf2aa9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neighbors.kerneldensity#sklearn.neighbors.KernelDensity&quot;&gt;&lt;code&gt;neighbors.KernelDensity&lt;/code&gt;&lt;/a&gt;([bandwidth, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94f37c78bf9b08398c9d3fcffe1b21b4239c10d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neighbors.kerneldensity#sklearn.neighbors.KernelDensity&quot;&gt;&lt;code&gt;sklearn.neighbors.KernelDensity&lt;/code&gt;&lt;/a&gt; implements several common kernel forms, which are shown in the following figure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae2582acdf2c735fb98a7de49b3fd3d6ecaf649" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neighbors.kneighbors_graph#sklearn.neighbors.kneighbors_graph&quot;&gt;&lt;code&gt;neighbors.kneighbors_graph&lt;/code&gt;&lt;/a&gt;(X, n_neighbors[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0092a47d8033673e022aeaa20f70d440365bc244" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neighbors.kneighborsclassifier#sklearn.neighbors.KNeighborsClassifier&quot;&gt;&lt;code&gt;neighbors.KNeighborsClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.neighbors.kneighborsclassifier#sklearn.neighbors.KNeighborsClassifier&quot;&gt;&lt;code&gt;neighbors.KNeighborsClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0d0c7f5ad65a1bec5db67ce7d0b96e4e405e9b31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neighbors.kneighborsregressor#sklearn.neighbors.KNeighborsRegressor&quot;&gt;&lt;code&gt;neighbors.KNeighborsRegressor&lt;/code&gt;&lt;/a&gt;([n_neighbors, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e3d6be7820ab7d7ad945057ab827ce00c1f5e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neighbors.localoutlierfactor#sklearn.neighbors.LocalOutlierFactor&quot;&gt;&lt;code&gt;neighbors.LocalOutlierFactor&lt;/code&gt;&lt;/a&gt;([n_neighbors, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d220d55fca774d815df7bac7320e269bee578fbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neighbors.lshforest#sklearn.neighbors.LSHForest&quot;&gt;&lt;code&gt;neighbors.LSHForest&lt;/code&gt;&lt;/a&gt;([n_estimators, radius, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91ce0ec95695e12ebe6262b3104fb1056e6a145" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neighbors.nearestcentroid#sklearn.neighbors.NearestCentroid&quot;&gt;&lt;code&gt;neighbors.NearestCentroid&lt;/code&gt;&lt;/a&gt;([metric, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1786de3bf55717cde9484d44980103f45e52f8c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neighbors.nearestneighbors#sklearn.neighbors.NearestNeighbors&quot;&gt;&lt;code&gt;NearestNeighbors&lt;/code&gt;&lt;/a&gt; implements unsupervised nearest neighbors learning. It acts as a uniform interface to three different nearest neighbors algorithms: &lt;a href=&quot;generated/sklearn.neighbors.balltree#sklearn.neighbors.BallTree&quot;&gt;&lt;code&gt;BallTree&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.neighbors.kdtree#sklearn.neighbors.KDTree&quot;&gt;&lt;code&gt;KDTree&lt;/code&gt;&lt;/a&gt;, and a brute-force algorithm based on routines in &lt;a href=&quot;classes#module-sklearn.metrics.pairwise&quot;&gt;&lt;code&gt;sklearn.metrics.pairwise&lt;/code&gt;&lt;/a&gt;. The choice of neighbors search algorithm is controlled through the keyword &lt;code&gt;'algorithm'&lt;/code&gt;, which must be one of &lt;code&gt;['auto', 'ball_tree', 'kd_tree', 'brute']&lt;/code&gt;. When the default value &lt;code&gt;'auto'&lt;/code&gt; is passed, the algorithm attempts to determine the best approach from the training data. For a discussion of the strengths and weaknesses of each option, see &lt;a href=&quot;#nearest-neighbor-algorithms&quot;&gt;Nearest Neighbor Algorithms&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc3ccefe1909e933669941342223415cb219310" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neighbors.nearestneighbors#sklearn.neighbors.NearestNeighbors&quot;&gt;&lt;code&gt;neighbors.NearestNeighbors&lt;/code&gt;&lt;/a&gt;([n_neighbors, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c71f3100c391af789c2b479fe68a6dd01c4e8c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neighbors.radius_neighbors_graph#sklearn.neighbors.radius_neighbors_graph&quot;&gt;&lt;code&gt;neighbors.radius_neighbors_graph&lt;/code&gt;&lt;/a&gt;(X, radius)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8234d765ffc6547db910bb374060598b85aa38d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neighbors.radiusneighborsclassifier#sklearn.neighbors.RadiusNeighborsClassifier&quot;&gt;&lt;code&gt;neighbors.RadiusNeighborsClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.neighbors.radiusneighborsclassifier#sklearn.neighbors.RadiusNeighborsClassifier&quot;&gt;&lt;code&gt;neighbors.RadiusNeighborsClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3936daf9f22e572136fa3ef561db4d884f5a1534" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neighbors.radiusneighborsregressor#sklearn.neighbors.RadiusNeighborsRegressor&quot;&gt;&lt;code&gt;neighbors.RadiusNeighborsRegressor&lt;/code&gt;&lt;/a&gt;([radius, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42557913756d936de19055d0ca3c12f77cda70e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neural_network.bernoullirbm#sklearn.neural_network.BernoulliRBM&quot;&gt;&lt;code&gt;neural_network.BernoulliRBM&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a16841aa10f02965172ecbaf5ea6907987e16e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neural_network.mlpclassifier#sklearn.neural_network.MLPClassifier&quot;&gt;&lt;code&gt;MLPClassifier&lt;/code&gt;&lt;/a&gt; supports multi-class classification by applying &lt;a href=&quot;https://en.wikipedia.org/wiki/Softmax_activation_function&quot;&gt;Softmax&lt;/a&gt; as the output function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b965e5715d5986e055c8470f6da2966c2cf28c20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neural_network.mlpclassifier#sklearn.neural_network.MLPClassifier&quot;&gt;&lt;code&gt;neural_network.MLPClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.neural_network.mlpclassifier#sklearn.neural_network.MLPClassifier&quot;&gt;&lt;code&gt;neural_network.MLPClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9e204511bd0b7c4a8d1e0752dddb1f8716a21a8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neural_network.mlpregressor#sklearn.neural_network.MLPRegressor&quot;&gt;&lt;code&gt;MLPRegressor&lt;/code&gt;&lt;/a&gt; also supports multi-output regression, in which a sample can have more than one target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc638b71ae43e2d1383706bb7f1f4129f93f052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.neural_network.mlpregressor#sklearn.neural_network.MLPRegressor&quot;&gt;&lt;code&gt;neural_network.MLPRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.neural_network.mlpregressor#sklearn.neural_network.MLPRegressor&quot;&gt;&lt;code&gt;neural_network.MLPRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d6a20b9c025604e3ff4ac48a5d1e0d855b935f9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.pipeline.featureunion#sklearn.pipeline.FeatureUnion&quot;&gt;&lt;code&gt;FeatureUnion&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;Pipeline&lt;/code&gt;&lt;/a&gt; can be combined to create complex models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454592fbeec02958db7a841cde29c13bbcc3d61e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.pipeline.featureunion#sklearn.pipeline.FeatureUnion&quot;&gt;&lt;code&gt;FeatureUnion&lt;/code&gt;&lt;/a&gt; combines several transformer objects into a new transformer that combines their output. A &lt;a href=&quot;generated/sklearn.pipeline.featureunion#sklearn.pipeline.FeatureUnion&quot;&gt;&lt;code&gt;FeatureUnion&lt;/code&gt;&lt;/a&gt; takes a list of transformer objects. During fitting, each of these is fit to the data independently. The transformers are applied in parallel, and the feature matrices they output are concatenated side-by-side into a larger matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28528eba5f075bae7c7d6233f9e914626824e00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.pipeline.featureunion#sklearn.pipeline.FeatureUnion&quot;&gt;&lt;code&gt;FeatureUnion&lt;/code&gt;&lt;/a&gt; serves the same purposes as &lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;Pipeline&lt;/code&gt;&lt;/a&gt; - convenience and joint parameter estimation and validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9926adb80dc19487862dd329b1e208bbf134c94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.pipeline.featureunion#sklearn.pipeline.FeatureUnion&quot;&gt;&lt;code&gt;pipeline.FeatureUnion&lt;/code&gt;&lt;/a&gt;(transformer_list[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c432ac5af02ee95c0848214a76b3f58cead99f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.pipeline.make_pipeline#sklearn.pipeline.make_pipeline&quot;&gt;&lt;code&gt;pipeline.make_pipeline&lt;/code&gt;&lt;/a&gt;(*steps, **kwargs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea0b04a8c036690e0d7bbcea3ee129bc3e71fb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.pipeline.make_union#sklearn.pipeline.make_union&quot;&gt;&lt;code&gt;pipeline.make_union&lt;/code&gt;&lt;/a&gt;(*transformers, **kwargs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1535ef173d931a4f66ecc46fb3937f9b9d87f484" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;Pipeline&lt;/code&gt;&lt;/a&gt; can be used to chain multiple estimators into one. This is useful as there is often a fixed sequence of steps in processing the data, for example feature selection, normalization and classification. &lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;Pipeline&lt;/code&gt;&lt;/a&gt; serves multiple purposes here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52a6fe6fc9375d2d1e00fc5b42dded348228386" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;pipeline.Pipeline&lt;/code&gt;&lt;/a&gt;(steps[, memory])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ddb6e700310620abd64d6ba5bb56545bea47b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.add_dummy_feature#sklearn.preprocessing.add_dummy_feature&quot;&gt;&lt;code&gt;preprocessing.add_dummy_feature&lt;/code&gt;&lt;/a&gt;(X[, value])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85cff7179cef05a04f1e089f48a1036e0cfab8d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.binarize#sklearn.preprocessing.binarize&quot;&gt;&lt;code&gt;binarize&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.preprocessing.binarizer#sklearn.preprocessing.Binarizer&quot;&gt;&lt;code&gt;Binarizer&lt;/code&gt;&lt;/a&gt; accept &lt;strong&gt;both dense array-like and sparse matrices from scipy.sparse as input&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11245d31c63c8f64198ce7eff8d0260fd4902653" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.binarize#sklearn.preprocessing.binarize&quot;&gt;&lt;code&gt;preprocessing.binarize&lt;/code&gt;&lt;/a&gt;(X[, threshold, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eee53a80cb97f5a9647e2a07e2e14a88718c661" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.binarizer#sklearn.preprocessing.Binarizer&quot;&gt;&lt;code&gt;preprocessing.Binarizer&lt;/code&gt;&lt;/a&gt;([threshold, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310102b098053ec4d24c557ee11ccb91131a0db7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.functiontransformer#sklearn.preprocessing.FunctionTransformer&quot;&gt;&lt;code&gt;preprocessing.FunctionTransformer&lt;/code&gt;&lt;/a&gt;([func, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752051ce78fe90ff27ca592b9b7b6b3001215087" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.imputer#sklearn.preprocessing.Imputer&quot;&gt;&lt;code&gt;preprocessing.Imputer&lt;/code&gt;&lt;/a&gt;(*args, **kwargs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967d473e19f44e10901465cb1df859a62226fd10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.kbinsdiscretizer#sklearn.preprocessing.KBinsDiscretizer&quot;&gt;&lt;code&gt;KBinsDiscretizer&lt;/code&gt;&lt;/a&gt; discretizers features into &lt;code&gt;k&lt;/code&gt; equal width bins:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d250adf749d5cce2f80178154de4b27cb61fc0d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.kbinsdiscretizer#sklearn.preprocessing.KBinsDiscretizer&quot;&gt;&lt;code&gt;KBinsDiscretizer&lt;/code&gt;&lt;/a&gt; implements different binning strategies, which can be selected with the &lt;code&gt;strategy&lt;/code&gt; parameter. The &amp;lsquo;uniform&amp;rsquo; strategy uses constant-width bins. The &amp;lsquo;quantile&amp;rsquo; strategy uses the quantiles values to have equally populated bins in each feature. The &amp;lsquo;kmeans&amp;rsquo; strategy defines bins based on a k-means clustering procedure performed on each feature independently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c2e6d2d21dc43dcab0a8d76eed75158fbdf4a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.kbinsdiscretizer#sklearn.preprocessing.KBinsDiscretizer&quot;&gt;&lt;code&gt;preprocessing.KBinsDiscretizer&lt;/code&gt;&lt;/a&gt;([n_bins, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c11352da8ed7dd8e5845680dbd7e0d87dad9744" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.kernelcenterer#sklearn.preprocessing.KernelCenterer&quot;&gt;&lt;code&gt;preprocessing.KernelCenterer&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.preprocessing.kernelcenterer#sklearn.preprocessing.KernelCenterer&quot;&gt;&lt;code&gt;preprocessing.KernelCenterer&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="bc78610f008822966155e84bdf4454121a3a4d46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.label_binarize#sklearn.preprocessing.label_binarize&quot;&gt;&lt;code&gt;preprocessing.label_binarize&lt;/code&gt;&lt;/a&gt;(y, classes[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b84e98f0de9a8b559cddb40b752d33ab88de788" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.labelbinarizer#sklearn.preprocessing.LabelBinarizer&quot;&gt;&lt;code&gt;LabelBinarizer&lt;/code&gt;&lt;/a&gt; is a utility class to help create a label indicator matrix from a list of multi-class labels:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4ca0c0088ed5197a61d5bca90e07e1aa1b31e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.labelbinarizer#sklearn.preprocessing.LabelBinarizer&quot;&gt;&lt;code&gt;preprocessing.LabelBinarizer&lt;/code&gt;&lt;/a&gt;([neg_label, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa381d22690c76eb8883d2b7ec0ee5262ae1738c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.labelencoder#sklearn.preprocessing.LabelEncoder&quot;&gt;&lt;code&gt;LabelEncoder&lt;/code&gt;&lt;/a&gt; is a utility class to help normalize labels such that they contain only values between 0 and n_classes-1. This is sometimes useful for writing efficient Cython routines. &lt;a href=&quot;generated/sklearn.preprocessing.labelencoder#sklearn.preprocessing.LabelEncoder&quot;&gt;&lt;code&gt;LabelEncoder&lt;/code&gt;&lt;/a&gt; can be used as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4d7b65988c65991770b1550c090cf507ea64e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.maxabs_scale#sklearn.preprocessing.maxabs_scale&quot;&gt;&lt;code&gt;preprocessing.maxabs_scale&lt;/code&gt;&lt;/a&gt;(X[, axis, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0a182c62d011502820e1f37f491ddbdf5bfd41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.maxabsscaler#sklearn.preprocessing.MaxAbsScaler&quot;&gt;&lt;code&gt;MaxAbsScaler&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.preprocessing.maxabs_scale#sklearn.preprocessing.maxabs_scale&quot;&gt;&lt;code&gt;maxabs_scale&lt;/code&gt;&lt;/a&gt; were specifically designed for scaling sparse data, and are the recommended way to go about this. However, &lt;a href=&quot;generated/sklearn.preprocessing.scale#sklearn.preprocessing.scale&quot;&gt;&lt;code&gt;scale&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.preprocessing.standardscaler#sklearn.preprocessing.StandardScaler&quot;&gt;&lt;code&gt;StandardScaler&lt;/code&gt;&lt;/a&gt; can accept &lt;code&gt;scipy.sparse&lt;/code&gt; matrices as input, as long as &lt;code&gt;with_mean=False&lt;/code&gt; is explicitly passed to the constructor. Otherwise a &lt;code&gt;ValueError&lt;/code&gt; will be raised as silently centering would break the sparsity and would often crash the execution by allocating excessive amounts of memory unintentionally. &lt;a href=&quot;generated/sklearn.preprocessing.robustscaler#sklearn.preprocessing.RobustScaler&quot;&gt;&lt;code&gt;RobustScaler&lt;/code&gt;&lt;/a&gt; cannot be fitted to sparse inputs, but you can use the &lt;code&gt;transform&lt;/code&gt; method on sparse inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7924b67105bc17c52b78d79c32cec7e970d5e40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.maxabsscaler#sklearn.preprocessing.MaxAbsScaler&quot;&gt;&lt;code&gt;MaxAbsScaler&lt;/code&gt;&lt;/a&gt; works in a very similar fashion, but scales in a way that the training data lies within the range &lt;code&gt;[-1, 1]&lt;/code&gt; by dividing through the largest maximum value in each feature. It is meant for data that is already centered at zero or sparse data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c7bd717d3c59485d1d0f59a8bceeca1d23f8ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.maxabsscaler#sklearn.preprocessing.MaxAbsScaler&quot;&gt;&lt;code&gt;preprocessing.MaxAbsScaler&lt;/code&gt;&lt;/a&gt;([copy])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.preprocessing.maxabsscaler#sklearn.preprocessing.MaxAbsScaler&quot;&gt;&lt;code&gt;preprocessing.MaxAbsScaler&lt;/code&gt;&lt;/a&gt;([copy])</target>
        </trans-unit>
        <trans-unit id="c450234382fd87fa491bbc42cfe6e5b1577edfde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.minmax_scale#sklearn.preprocessing.minmax_scale&quot;&gt;&lt;code&gt;preprocessing.minmax_scale&lt;/code&gt;&lt;/a&gt;(X[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c54998a9320ba880ebef50aa6c7e5bdcbae92c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.minmaxscaler#sklearn.preprocessing.MinMaxScaler&quot;&gt;&lt;code&gt;preprocessing.MinMaxScaler&lt;/code&gt;&lt;/a&gt;([feature_range, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe1568209bf09482e5605adbd571563418b0f8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.multilabelbinarizer#sklearn.preprocessing.MultiLabelBinarizer&quot;&gt;&lt;code&gt;preprocessing.MultiLabelBinarizer&lt;/code&gt;&lt;/a&gt;([classes, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47171223af2ca24e1f9493cea4d7d4f03d80d3ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.normalize#sklearn.preprocessing.normalize&quot;&gt;&lt;code&gt;normalize&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.preprocessing.normalizer#sklearn.preprocessing.Normalizer&quot;&gt;&lt;code&gt;Normalizer&lt;/code&gt;&lt;/a&gt; accept &lt;strong&gt;both dense array-like and sparse matrices from scipy.sparse as input&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3f816c6a5ca7abaf96c1e822cabc775ab0c485" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.normalize#sklearn.preprocessing.normalize&quot;&gt;&lt;code&gt;preprocessing.normalize&lt;/code&gt;&lt;/a&gt;(X[, norm, axis, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229aaadc9927c2ac509048df10257a6688efdb16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.normalizer#sklearn.preprocessing.Normalizer&quot;&gt;&lt;code&gt;preprocessing.Normalizer&lt;/code&gt;&lt;/a&gt;([norm, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066037ff3a14bf3a0b19d07bc6f6906b1e390ef0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.onehotencoder#sklearn.preprocessing.OneHotEncoder&quot;&gt;&lt;code&gt;preprocessing.OneHotEncoder&lt;/code&gt;&lt;/a&gt;([n_values, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a82d102c067bfea69e80f99e8e24d5fd7b757a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.ordinalencoder#sklearn.preprocessing.OrdinalEncoder&quot;&gt;&lt;code&gt;preprocessing.OrdinalEncoder&lt;/code&gt;&lt;/a&gt;([categories, dtype])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e796ad77b4ffa2d23e35e073980fa97006537b4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.polynomialfeatures#sklearn.preprocessing.PolynomialFeatures&quot;&gt;&lt;code&gt;preprocessing.PolynomialFeatures&lt;/code&gt;&lt;/a&gt;([degree, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e18f2c2b26b263587f1088837a8ee67a74cdf30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.power_transform#sklearn.preprocessing.power_transform&quot;&gt;&lt;code&gt;preprocessing.power_transform&lt;/code&gt;&lt;/a&gt;(X[, method, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358fb9571adeaa7d9d82cb5a57b52563e0b349d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.powertransformer#sklearn.preprocessing.PowerTransformer&quot;&gt;&lt;code&gt;PowerTransformer&lt;/code&gt;&lt;/a&gt; currently provides two such power transformations, the Yeo-Johnson transform and the Box-Cox transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def4a83e0d97d62cefb388f407c6f1de68199266" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.powertransformer#sklearn.preprocessing.PowerTransformer&quot;&gt;&lt;code&gt;preprocessing.PowerTransformer&lt;/code&gt;&lt;/a&gt;([method, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae0f1197afb65bab431ddddd672aeebd93ed150" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.quantile_transform#sklearn.preprocessing.quantile_transform&quot;&gt;&lt;code&gt;preprocessing.quantile_transform&lt;/code&gt;&lt;/a&gt;(X[, axis, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca8020a0ddddc66ceac4fcb7c80216673072acf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.quantiletransformer#sklearn.preprocessing.QuantileTransformer&quot;&gt;&lt;code&gt;QuantileTransformer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.preprocessing.quantile_transform#sklearn.preprocessing.quantile_transform&quot;&gt;&lt;code&gt;quantile_transform&lt;/code&gt;&lt;/a&gt; provide a non-parametric transformation based on the quantile function to map the data to a uniform distribution with values between 0 and 1:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b790aecd83839c72bf8f3688048807777b19624" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.quantiletransformer#sklearn.preprocessing.QuantileTransformer&quot;&gt;&lt;code&gt;preprocessing.QuantileTransformer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.preprocessing.quantiletransformer#sklearn.preprocessing.QuantileTransformer&quot;&gt;&lt;code&gt;preprocessing.QuantileTransformer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="19e47c5ba45f98bb1fe8fbcc00d261a02ef6732f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.robust_scale#sklearn.preprocessing.robust_scale&quot;&gt;&lt;code&gt;preprocessing.robust_scale&lt;/code&gt;&lt;/a&gt;(X[, axis, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9cc23b748e114435ba98adecb0632b8bfe1475e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.robustscaler#sklearn.preprocessing.RobustScaler&quot;&gt;&lt;code&gt;preprocessing.RobustScaler&lt;/code&gt;&lt;/a&gt;([with_centering, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfbbb17d4acbe6432bc4bd337b6cd4241ac4f885" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.scale#sklearn.preprocessing.scale&quot;&gt;&lt;code&gt;preprocessing.scale&lt;/code&gt;&lt;/a&gt;(X[, axis, with_mean, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e30c44c6378f3c4ae90757b7af10a18e86135e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.preprocessing.standardscaler#sklearn.preprocessing.StandardScaler&quot;&gt;&lt;code&gt;preprocessing.StandardScaler&lt;/code&gt;&lt;/a&gt;([copy, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666d7011d3c844d698b7322b29a5584a54de5dd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.random_projection.gaussianrandomprojection#sklearn.random_projection.GaussianRandomProjection&quot;&gt;&lt;code&gt;random_projection.GaussianRandomProjection&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.random_projection.gaussianrandomprojection#sklearn.random_projection.GaussianRandomProjection&quot;&gt;&lt;code&gt;random_projection.GaussianRandomProjection&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="24507cd2244f998d8ebd9bde4625592d7bb18997" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.random_projection.johnson_lindenstrauss_min_dim#sklearn.random_projection.johnson_lindenstrauss_min_dim&quot;&gt;&lt;code&gt;random_projection.johnson_lindenstrauss_min_dim&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.random_projection.johnson_lindenstrauss_min_dim#sklearn.random_projection.johnson_lindenstrauss_min_dim&quot;&gt;&lt;code&gt;random_projection.johnson_lindenstrauss_min_dim&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="d8861aedf999999f5e3d3cf3f0ebfa60840ec0b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.random_projection.sparserandomprojection#sklearn.random_projection.SparseRandomProjection&quot;&gt;&lt;code&gt;random_projection.SparseRandomProjection&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.random_projection.sparserandomprojection#sklearn.random_projection.SparseRandomProjection&quot;&gt;&lt;code&gt;random_projection.SparseRandomProjection&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7695264be2b5756886db7a785cd89e945ad8f515" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.semi_supervised.labelpropagation#sklearn.semi_supervised.LabelPropagation&quot;&gt;&lt;code&gt;LabelPropagation&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.semi_supervised.labelspreading#sklearn.semi_supervised.LabelSpreading&quot;&gt;&lt;code&gt;LabelSpreading&lt;/code&gt;&lt;/a&gt; differ in modifications to the similarity matrix that graph and the clamping effect on the label distributions. Clamping allows the algorithm to change the weight of the true ground labeled data to some degree. The &lt;a href=&quot;generated/sklearn.semi_supervised.labelpropagation#sklearn.semi_supervised.LabelPropagation&quot;&gt;&lt;code&gt;LabelPropagation&lt;/code&gt;&lt;/a&gt; algorithm performs hard clamping of input labels, which means \(\alpha=0\). This clamping factor can be relaxed, to say \(\alpha=0.2\), which means that we will always retain 80 percent of our original label distribution, but the algorithm gets to change its confidence of the distribution within 20 percent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691a1c66a9a7c0b9967bb024dce628cb5a74820b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.semi_supervised.labelpropagation#sklearn.semi_supervised.LabelPropagation&quot;&gt;&lt;code&gt;LabelPropagation&lt;/code&gt;&lt;/a&gt; uses the raw similarity matrix constructed from the data with no modifications. In contrast, &lt;a href=&quot;generated/sklearn.semi_supervised.labelspreading#sklearn.semi_supervised.LabelSpreading&quot;&gt;&lt;code&gt;LabelSpreading&lt;/code&gt;&lt;/a&gt; minimizes a loss function that has regularization properties, as such it is often more robust to noise. The algorithm iterates on a modified version of the original graph and normalizes the edge weights by computing the normalized graph Laplacian matrix. This procedure is also used in &lt;a href=&quot;clustering#spectral-clustering&quot;&gt;Spectral clustering&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f87564cf8290c2f9365a9735999cde0f3cf1c61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.semi_supervised.labelpropagation#sklearn.semi_supervised.LabelPropagation&quot;&gt;&lt;code&gt;semi_supervised.LabelPropagation&lt;/code&gt;&lt;/a&gt;([kernel, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c985962abf5bf2188d108cf13020c5c3531b92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.semi_supervised.labelspreading#sklearn.semi_supervised.LabelSpreading&quot;&gt;&lt;code&gt;semi_supervised.LabelSpreading&lt;/code&gt;&lt;/a&gt;([kernel, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4c2760e3210ab91e43f4b55abcf307525752a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.set_config#sklearn.set_config&quot;&gt;&lt;code&gt;set_config&lt;/code&gt;&lt;/a&gt;([assume_finite, working_memory])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9293a09735cad5814972ca71ee214bc75913560c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.set_config#sklearn.set_config&quot;&gt;&lt;code&gt;sklearn.set_config&lt;/code&gt;&lt;/a&gt; controls the following behaviors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145e0949ab63de80c177ba496809bd915ac51148" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.show_versions#sklearn.show_versions&quot;&gt;&lt;code&gt;show_versions&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.show_versions#sklearn.show_versions&quot;&gt;&lt;code&gt;show_versions&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="457edad3a36cfb630cb8d636106cebd5452fe25e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.l1_min_c#sklearn.svm.l1_min_c&quot;&gt;&lt;code&gt;svm.l1_min_c&lt;/code&gt;&lt;/a&gt;(X, y[, loss, fit_intercept, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8208e4434f6b2b3e5e6c3936e0429de79cdddc67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt;&lt;code&gt;sklearn.svm.LinearSVC&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;crammer_singer&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1563ab7f51e243ac9661e34c8a465fe045703c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt;&lt;code&gt;sklearn.svm.LinearSVC&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;ovr&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da901d78b7c990859e145c18e054cd533e4bd914" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt;&lt;code&gt;svm.LinearSVC&lt;/code&gt;&lt;/a&gt;([penalty, loss, dual, tol, C, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca372f078b19f8616bb41bd536805f865ebb556" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.linearsvr#sklearn.svm.LinearSVR&quot;&gt;&lt;code&gt;svm.LinearSVR&lt;/code&gt;&lt;/a&gt;([epsilon, tol, C, loss, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5624e0ae7cfb399b2267a347cdc775102c8858" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.nusvc#sklearn.svm.NuSVC&quot;&gt;&lt;code&gt;svm.NuSVC&lt;/code&gt;&lt;/a&gt;([nu, kernel, degree, gamma, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835a3b1565350d146e3656b19b4c50052ecdaf30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.nusvr#sklearn.svm.NuSVR&quot;&gt;&lt;code&gt;svm.NuSVR&lt;/code&gt;&lt;/a&gt;([nu, C, kernel, degree, gamma, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d448df9a614d62af046ed6263ea2d10ec039c6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.oneclasssvm#sklearn.svm.OneClassSVM&quot;&gt;&lt;code&gt;svm.OneClassSVM&lt;/code&gt;&lt;/a&gt;([kernel, degree, gamma, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1f928b13e779430cbb07ad3826681fd82a170f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.svc#sklearn.svm.SVC&quot;&gt;&lt;code&gt;SVC&lt;/code&gt;&lt;/a&gt; (but not &lt;a href=&quot;generated/sklearn.svm.nusvc#sklearn.svm.NuSVC&quot;&gt;&lt;code&gt;NuSVC&lt;/code&gt;&lt;/a&gt;) implement a keyword &lt;code&gt;class_weight&lt;/code&gt; in the &lt;code&gt;fit&lt;/code&gt; method. It&amp;rsquo;s a dictionary of the form &lt;code&gt;{class_label : value}&lt;/code&gt;, where value is a floating point number &amp;gt; 0 that sets the parameter &lt;code&gt;C&lt;/code&gt; of class &lt;code&gt;class_label&lt;/code&gt; to &lt;code&gt;C * value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0003b47f83636a46338a9fc6103fc3121d7dc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.svc#sklearn.svm.SVC&quot;&gt;&lt;code&gt;SVC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.svm.nusvc#sklearn.svm.NuSVC&quot;&gt;&lt;code&gt;NuSVC&lt;/code&gt;&lt;/a&gt; are similar methods, but accept slightly different sets of parameters and have different mathematical formulations (see section &lt;a href=&quot;#svm-mathematical-formulation&quot;&gt;Mathematical formulation&lt;/a&gt;). On the other hand, &lt;a href=&quot;generated/sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt;&lt;code&gt;LinearSVC&lt;/code&gt;&lt;/a&gt; is another implementation of Support Vector Classification for the case of a linear kernel. Note that &lt;a href=&quot;generated/sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt;&lt;code&gt;LinearSVC&lt;/code&gt;&lt;/a&gt; does not accept keyword &lt;code&gt;kernel&lt;/code&gt;, as this is assumed to be linear. It also lacks some of the members of &lt;a href=&quot;generated/sklearn.svm.svc#sklearn.svm.SVC&quot;&gt;&lt;code&gt;SVC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.svm.nusvc#sklearn.svm.NuSVC&quot;&gt;&lt;code&gt;NuSVC&lt;/code&gt;&lt;/a&gt;, like &lt;code&gt;support_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeac39c7b4fe373716fbef85d9144ca443db0a15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.svc#sklearn.svm.SVC&quot;&gt;&lt;code&gt;SVC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.svm.nusvc#sklearn.svm.NuSVC&quot;&gt;&lt;code&gt;NuSVC&lt;/code&gt;&lt;/a&gt; implement the &amp;ldquo;one-against-one&amp;rdquo; approach (Knerr et al., 1990) for multi- class classification. If &lt;code&gt;n_class&lt;/code&gt; is the number of classes, then &lt;code&gt;n_class * (n_class - 1) / 2&lt;/code&gt; classifiers are constructed and each one trains data from two classes. To provide a consistent interface with other classifiers, the &lt;code&gt;decision_function_shape&lt;/code&gt; option allows to aggregate the results of the &amp;ldquo;one-against-one&amp;rdquo; classifiers to a decision function of shape &lt;code&gt;(n_samples,
n_classes)&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847d30ac79760badec606ab95000e5c018eeae15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.svc#sklearn.svm.SVC&quot;&gt;&lt;code&gt;SVC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.svm.nusvc#sklearn.svm.NuSVC&quot;&gt;&lt;code&gt;NuSVC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt;&lt;code&gt;LinearSVC&lt;/code&gt;&lt;/a&gt; are classes capable of performing multi-class classification on a dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625270c3e427ebe0ea8d1c33b95a3c13451dc876" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.svc#sklearn.svm.SVC&quot;&gt;&lt;code&gt;SVC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.svm.nusvc#sklearn.svm.NuSVC&quot;&gt;&lt;code&gt;NuSVC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.svm.svr#sklearn.svm.SVR&quot;&gt;&lt;code&gt;SVR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.svm.nusvr#sklearn.svm.NuSVR&quot;&gt;&lt;code&gt;NuSVR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.svm.oneclasssvm#sklearn.svm.OneClassSVM&quot;&gt;&lt;code&gt;OneClassSVM&lt;/code&gt;&lt;/a&gt; implement also weights for individual samples in method &lt;code&gt;fit&lt;/code&gt; through keyword &lt;code&gt;sample_weight&lt;/code&gt;. Similar to &lt;code&gt;class_weight&lt;/code&gt;, these set the parameter &lt;code&gt;C&lt;/code&gt; for the i-th example to &lt;code&gt;C * sample_weight[i]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f56c1c7e235a574fb0f7c104a87e64fc623e5bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.svc#sklearn.svm.SVC&quot;&gt;&lt;code&gt;sklearn.svm.SVC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.svm.svc#sklearn.svm.SVC&quot;&gt;&lt;code&gt;sklearn.svm.SVC&lt;/code&gt;&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ef228d69bd33f73c637c8fa5b8a25f7476e52745" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.svc#sklearn.svm.SVC&quot;&gt;&lt;code&gt;svm.SVC&lt;/code&gt;&lt;/a&gt;([C, kernel, degree, gamma, coef0, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b15d2b7cddf9120a6fcef0b99e5698eea8093d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.svm.svr#sklearn.svm.SVR&quot;&gt;&lt;code&gt;svm.SVR&lt;/code&gt;&lt;/a&gt;([kernel, degree, gamma, coef0, tol, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5e8de2224a3dc2d5b59a863cb96093521eeeb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.tree.decisiontreeclassifier#sklearn.tree.DecisionTreeClassifier&quot;&gt;&lt;code&gt;DecisionTreeClassifier&lt;/code&gt;&lt;/a&gt; is a class capable of performing multi-class classification on a dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df268bb48601091847673609a1eaf6dce8f164d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.tree.decisiontreeclassifier#sklearn.tree.DecisionTreeClassifier&quot;&gt;&lt;code&gt;DecisionTreeClassifier&lt;/code&gt;&lt;/a&gt; is capable of both binary (where the labels are [-1, 1]) classification and multiclass (where the labels are [0, &amp;hellip;, K-1]) classification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50d1be31c5ff051d4e94488d0bcc454eb2fbf02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.tree.decisiontreeclassifier#sklearn.tree.DecisionTreeClassifier&quot;&gt;&lt;code&gt;tree.DecisionTreeClassifier&lt;/code&gt;&lt;/a&gt;([criterion, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee7c931c375eeaaba489a09905da39a0ad1a237" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.tree.decisiontreeregressor#sklearn.tree.DecisionTreeRegressor&quot;&gt;&lt;code&gt;tree.DecisionTreeRegressor&lt;/code&gt;&lt;/a&gt;([criterion, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abbe8e397c95c665d9de5625ec09642602adf03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.tree.export_graphviz#sklearn.tree.export_graphviz&quot;&gt;&lt;code&gt;tree.export_graphviz&lt;/code&gt;&lt;/a&gt;(decision_tree[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f655656953a9da810593549ed42f546b68df24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.tree.extratreeclassifier#sklearn.tree.ExtraTreeClassifier&quot;&gt;&lt;code&gt;tree.ExtraTreeClassifier&lt;/code&gt;&lt;/a&gt;([criterion, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803d4fca141ec4aec5f9ae43ff264eeb002d6a05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.tree.extratreeregressor#sklearn.tree.ExtraTreeRegressor&quot;&gt;&lt;code&gt;tree.ExtraTreeRegressor&lt;/code&gt;&lt;/a&gt;([criterion, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b95197196f7f98e05d35160dc50c641795dbb5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.as_float_array#sklearn.utils.as_float_array&quot;&gt;&lt;code&gt;utils.as_float_array&lt;/code&gt;&lt;/a&gt;(X[, copy, force_all_finite])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7817369926c2667c5eee2ea02c28156f706251" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.assert_all_finite#sklearn.utils.assert_all_finite&quot;&gt;&lt;code&gt;utils.assert_all_finite&lt;/code&gt;&lt;/a&gt;(X[, allow_nan])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dce18b740b914b4c5a80e90e890542aea4902ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.bench.total_seconds#sklearn.utils.bench.total_seconds&quot;&gt;&lt;code&gt;utils.bench.total_seconds&lt;/code&gt;&lt;/a&gt;(delta)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.bench.total_seconds#sklearn.utils.bench.total_seconds&quot;&gt;&lt;code&gt;utils.bench.total_seconds&lt;/code&gt;&lt;/a&gt;(delta)</target>
        </trans-unit>
        <trans-unit id="f03ae09ab27d52581b530948f61c145160ba91f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.check_array#sklearn.utils.check_array&quot;&gt;&lt;code&gt;utils.check_array&lt;/code&gt;&lt;/a&gt;(array[, accept_sparse, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bea37061e1f89f851992948b127cf648112160" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.check_consistent_length#sklearn.utils.check_consistent_length&quot;&gt;&lt;code&gt;utils.check_consistent_length&lt;/code&gt;&lt;/a&gt;(*arrays)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.check_consistent_length#sklearn.utils.check_consistent_length&quot;&gt;&lt;code&gt;utils.check_consistent_length&lt;/code&gt;&lt;/a&gt;(*arrays)</target>
        </trans-unit>
        <trans-unit id="d394f3467ad2bb9d956d571383029f506e87b3c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.check_random_state#sklearn.utils.check_random_state&quot;&gt;&lt;code&gt;utils.check_random_state&lt;/code&gt;&lt;/a&gt;(seed)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.check_random_state#sklearn.utils.check_random_state&quot;&gt;&lt;code&gt;utils.check_random_state&lt;/code&gt;&lt;/a&gt;(seed)</target>
        </trans-unit>
        <trans-unit id="06365eb27007bc5a64c71acbf9bc9af148c1e867" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.check_x_y#sklearn.utils.check_X_y&quot;&gt;&lt;code&gt;utils.check_X_y&lt;/code&gt;&lt;/a&gt;(X, y[, accept_sparse, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52abbfb40644e7906457fccfb2e04acdeea5627" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.class_weight.compute_class_weight#sklearn.utils.class_weight.compute_class_weight&quot;&gt;&lt;code&gt;utils.class_weight.compute_class_weight&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.class_weight.compute_class_weight#sklearn.utils.class_weight.compute_class_weight&quot;&gt;&lt;code&gt;utils.class_weight.compute_class_weight&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="28a1e38d981f76bcafe3e0d4f7c9563c4255a7ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.class_weight.compute_sample_weight#sklearn.utils.class_weight.compute_sample_weight&quot;&gt;&lt;code&gt;utils.class_weight.compute_sample_weight&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.class_weight.compute_sample_weight#sklearn.utils.class_weight.compute_sample_weight&quot;&gt;&lt;code&gt;utils.class_weight.compute_sample_weight&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="9098e631663f44339d3e366d1d87fe84d3e0afbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.cpu_count#sklearn.utils.cpu_count&quot;&gt;&lt;code&gt;utils.cpu_count&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.cpu_count#sklearn.utils.cpu_count&quot;&gt;&lt;code&gt;utils.cpu_count&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="880377171aad080c46a2616d344018c65e045be2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.delayed#sklearn.utils.delayed&quot;&gt;&lt;code&gt;utils.delayed&lt;/code&gt;&lt;/a&gt;(function[, check_pickle])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e85dc556517647dd67f05adf1c63982ac9732c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.deprecated#sklearn.utils.deprecated&quot;&gt;&lt;code&gt;utils.deprecated&lt;/code&gt;&lt;/a&gt;([extra])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.deprecated#sklearn.utils.deprecated&quot;&gt;&lt;code&gt;utils.deprecated&lt;/code&gt;&lt;/a&gt;([extra])</target>
        </trans-unit>
        <trans-unit id="33903cede5f492519bd099ed47a9796103468cc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.estimator_checks.check_estimator#sklearn.utils.estimator_checks.check_estimator&quot;&gt;&lt;code&gt;utils.estimator_checks.check_estimator&lt;/code&gt;&lt;/a&gt;(Estimator)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.estimator_checks.check_estimator#sklearn.utils.estimator_checks.check_estimator&quot;&gt;&lt;code&gt;utils.estimator_checks.check_estimator&lt;/code&gt;&lt;/a&gt;(Estimator)</target>
        </trans-unit>
        <trans-unit id="318d90848112c1e5e59917ebff274ea628b8c0fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.extmath.density#sklearn.utils.extmath.density&quot;&gt;&lt;code&gt;utils.extmath.density&lt;/code&gt;&lt;/a&gt;(w, **kwargs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62045ee701f490d78c46808cd43df2c8247f734" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.extmath.fast_logdet#sklearn.utils.extmath.fast_logdet&quot;&gt;&lt;code&gt;utils.extmath.fast_logdet&lt;/code&gt;&lt;/a&gt;(A)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.extmath.fast_logdet#sklearn.utils.extmath.fast_logdet&quot;&gt;&lt;code&gt;utils.extmath.fast_logdet&lt;/code&gt;&lt;/a&gt;(A)</target>
        </trans-unit>
        <trans-unit id="e9aa098eb32f596c7738d2a821106cafeba59a65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.extmath.randomized_range_finder#sklearn.utils.extmath.randomized_range_finder&quot;&gt;&lt;code&gt;utils.extmath.randomized_range_finder&lt;/code&gt;&lt;/a&gt;(A, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08eb7f943dbb71417f8381990ed70dfb73b5709b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.extmath.randomized_svd#sklearn.utils.extmath.randomized_svd&quot;&gt;&lt;code&gt;utils.extmath.randomized_svd&lt;/code&gt;&lt;/a&gt;(M, n_components)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d592e19f7520900dd643b1b8ebc849e2a778bf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.extmath.safe_sparse_dot#sklearn.utils.extmath.safe_sparse_dot&quot;&gt;&lt;code&gt;utils.extmath.safe_sparse_dot&lt;/code&gt;&lt;/a&gt;(a, b[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f506d80e9c82b9a95c1119c90d60155f03f15d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.extmath.weighted_mode#sklearn.utils.extmath.weighted_mode&quot;&gt;&lt;code&gt;utils.extmath.weighted_mode&lt;/code&gt;&lt;/a&gt;(a, w[, axis])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2d78ff30d452df6ab90482bfda5de12b8bcc11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.gen_even_slices#sklearn.utils.gen_even_slices&quot;&gt;&lt;code&gt;utils.gen_even_slices&lt;/code&gt;&lt;/a&gt;(n, n_packs[, n_samples])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f6cf26db5c64f77dbe5d92c1cdea7da5d86fc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.graph.single_source_shortest_path_length#sklearn.utils.graph.single_source_shortest_path_length&quot;&gt;&lt;code&gt;utils.graph.single_source_shortest_path_length&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.graph.single_source_shortest_path_length#sklearn.utils.graph.single_source_shortest_path_length&quot;&gt;&lt;code&gt;utils.graph.single_source_shortest_path_length&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="8ddb8d3b513ca3c671f5f3d90cc5689ec728ab00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.indexable#sklearn.utils.indexable&quot;&gt;&lt;code&gt;utils.indexable&lt;/code&gt;&lt;/a&gt;(*iterables)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.indexable#sklearn.utils.indexable&quot;&gt;&lt;code&gt;utils.indexable&lt;/code&gt;&lt;/a&gt;(*iterables)</target>
        </trans-unit>
        <trans-unit id="5ada81238641d48fd3aacfe20d8af65f5edc64e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.memory#sklearn.utils.Memory&quot;&gt;&lt;code&gt;utils.Memory&lt;/code&gt;&lt;/a&gt;([location, backend, cachedir, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc167073a64a90d513eefde6d8457b277061a2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.multiclass.is_multilabel#sklearn.utils.multiclass.is_multilabel&quot;&gt;&lt;code&gt;utils.multiclass.is_multilabel&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.multiclass.is_multilabel#sklearn.utils.multiclass.is_multilabel&quot;&gt;&lt;code&gt;utils.multiclass.is_multilabel&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="4de7bb766338e3bd60a59201aba94a6ffddbae90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.multiclass.type_of_target#sklearn.utils.multiclass.type_of_target&quot;&gt;&lt;code&gt;utils.multiclass.type_of_target&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.multiclass.type_of_target#sklearn.utils.multiclass.type_of_target&quot;&gt;&lt;code&gt;utils.multiclass.type_of_target&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="075dd1146cc321263b898a5d5c0dee051d5fa860" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.multiclass.unique_labels#sklearn.utils.multiclass.unique_labels&quot;&gt;&lt;code&gt;utils.multiclass.unique_labels&lt;/code&gt;&lt;/a&gt;(*ys)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.multiclass.unique_labels#sklearn.utils.multiclass.unique_labels&quot;&gt;&lt;code&gt;utils.multiclass.unique_labels&lt;/code&gt;&lt;/a&gt;(*ys)</target>
        </trans-unit>
        <trans-unit id="1219f89c4facd4c4483f70db6a75f88ed62243e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.parallel#sklearn.utils.Parallel&quot;&gt;&lt;code&gt;utils.Parallel&lt;/code&gt;&lt;/a&gt;([n_jobs, backend, verbose, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098b0146bca56e1915d9f4e823ee6216181ee9d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.parallel_backend#sklearn.utils.parallel_backend&quot;&gt;&lt;code&gt;utils.parallel_backend&lt;/code&gt;&lt;/a&gt;(backend[, n_jobs])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759ebb9e95c939ad811fc4db5d001c9209395b25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.resample#sklearn.utils.resample&quot;&gt;&lt;code&gt;utils.resample&lt;/code&gt;&lt;/a&gt;(*arrays, **options)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854823a76640ecc8d58a1dfee04c8061c5476cd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.safe_indexing#sklearn.utils.safe_indexing&quot;&gt;&lt;code&gt;utils.safe_indexing&lt;/code&gt;&lt;/a&gt;(X, indices)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937dab361cc13c6e625753c1476b8faad68d3c95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.safe_mask#sklearn.utils.safe_mask&quot;&gt;&lt;code&gt;utils.safe_mask&lt;/code&gt;&lt;/a&gt;(X, mask)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d761348d61c95e1a0cd868484be9cbc208aa91a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.safe_sqr#sklearn.utils.safe_sqr&quot;&gt;&lt;code&gt;utils.safe_sqr&lt;/code&gt;&lt;/a&gt;(X[, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793ec6bf2ef16f4b4273f621b204d930ef7023c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.shuffle#sklearn.utils.shuffle&quot;&gt;&lt;code&gt;utils.shuffle&lt;/code&gt;&lt;/a&gt;(*arrays, **options)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4014fa23f4348e68e39973b4cc1817dfe2c55b17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.sparsefuncs.incr_mean_variance_axis#sklearn.utils.sparsefuncs.incr_mean_variance_axis&quot;&gt;&lt;code&gt;utils.sparsefuncs.incr_mean_variance_axis&lt;/code&gt;&lt;/a&gt;(X, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f49125dac8938e896b034b3b2619fd7c752bd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.sparsefuncs.inplace_column_scale#sklearn.utils.sparsefuncs.inplace_column_scale&quot;&gt;&lt;code&gt;utils.sparsefuncs.inplace_column_scale&lt;/code&gt;&lt;/a&gt;(X, scale)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49ccd1fa8d2a83083479e73b1e152815fae6314" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.sparsefuncs.inplace_csr_column_scale#sklearn.utils.sparsefuncs.inplace_csr_column_scale&quot;&gt;&lt;code&gt;utils.sparsefuncs.inplace_csr_column_scale&lt;/code&gt;&lt;/a&gt;(X, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c0a8682c1cc013e03560dc77efdc7a981fa116" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.sparsefuncs.inplace_row_scale#sklearn.utils.sparsefuncs.inplace_row_scale&quot;&gt;&lt;code&gt;utils.sparsefuncs.inplace_row_scale&lt;/code&gt;&lt;/a&gt;(X, scale)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a0debbd8f63135e8e2522c9d7f92d4d208459c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.sparsefuncs.inplace_swap_column#sklearn.utils.sparsefuncs.inplace_swap_column&quot;&gt;&lt;code&gt;utils.sparsefuncs.inplace_swap_column&lt;/code&gt;&lt;/a&gt;(X, m, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5248768e040c1d3bdc085437d88812ab6c6e6e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.sparsefuncs.inplace_swap_row#sklearn.utils.sparsefuncs.inplace_swap_row&quot;&gt;&lt;code&gt;utils.sparsefuncs.inplace_swap_row&lt;/code&gt;&lt;/a&gt;(X, m, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc8ae6c46a858bff5e6880c8fa6e689eef07aef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.sparsefuncs.mean_variance_axis#sklearn.utils.sparsefuncs.mean_variance_axis&quot;&gt;&lt;code&gt;utils.sparsefuncs.mean_variance_axis&lt;/code&gt;&lt;/a&gt;(X, axis)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b356993315783f1e3cef078980dd81dbca214973" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.testing.all_estimators#sklearn.utils.testing.all_estimators&quot;&gt;&lt;code&gt;utils.testing.all_estimators&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.testing.all_estimators#sklearn.utils.testing.all_estimators&quot;&gt;&lt;code&gt;utils.testing.all_estimators&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5283dd48d8261283c716347ffc48acca0c0a0ab5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.testing.assert_raise_message#sklearn.utils.testing.assert_raise_message&quot;&gt;&lt;code&gt;utils.testing.assert_raise_message&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.testing.assert_raise_message#sklearn.utils.testing.assert_raise_message&quot;&gt;&lt;code&gt;utils.testing.assert_raise_message&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="22c56a9dc90d9da0849aeb0b1d0c7951a10605a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.testing.mock_mldata_urlopen#sklearn.utils.testing.mock_mldata_urlopen&quot;&gt;&lt;code&gt;utils.testing.mock_mldata_urlopen&lt;/code&gt;&lt;/a&gt;(*args, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c05795fd64155502d45e3cf7169e46df8ec13dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.validation.check_is_fitted#sklearn.utils.validation.check_is_fitted&quot;&gt;&lt;code&gt;utils.validation.check_is_fitted&lt;/code&gt;&lt;/a&gt;(estimator, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebfaba1f52cdbdc7bd5d19d89a103c2905e524d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.validation.check_memory#sklearn.utils.validation.check_memory&quot;&gt;&lt;code&gt;utils.validation.check_memory&lt;/code&gt;&lt;/a&gt;(memory)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.validation.check_memory#sklearn.utils.validation.check_memory&quot;&gt;&lt;code&gt;utils.validation.check_memory&lt;/code&gt;&lt;/a&gt;(memory)</target>
        </trans-unit>
        <trans-unit id="aedd976c054779cb85f98827a7b77d8a93e02d45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.validation.check_symmetric#sklearn.utils.validation.check_symmetric&quot;&gt;&lt;code&gt;utils.validation.check_symmetric&lt;/code&gt;&lt;/a&gt;(array[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fffd7678e78eca89c0c942aa797f8ef75d118e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.validation.column_or_1d#sklearn.utils.validation.column_or_1d&quot;&gt;&lt;code&gt;utils.validation.column_or_1d&lt;/code&gt;&lt;/a&gt;(y[, warn])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbb4b0b83ef80618d097a1f7a9fd6a42e50aa22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.utils.validation.has_fit_parameter#sklearn.utils.validation.has_fit_parameter&quot;&gt;&lt;code&gt;utils.validation.has_fit_parameter&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.utils.validation.has_fit_parameter#sklearn.utils.validation.has_fit_parameter&quot;&gt;&lt;code&gt;utils.validation.has_fit_parameter&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="270a08ac5527ac948bb9bf45f921ddd97cc10076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://aclweb.org/anthology/D/D07/D07-1043.pdf&quot;&gt;V-Measure: A conditional entropy-based external cluster evaluation measure&lt;/a&gt; Andrew Rosenberg and Julia Hirschberg, 2007</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047af0e6da08900ac6517d4ee762948127af50c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://arxiv.org/abs/0909.4061&quot;&gt;&amp;ldquo;Finding structure with randomness: Stochastic algorithms for constructing approximate matrix decompositions&amp;rdquo;&lt;/a&gt; Halko, et al., 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a849d3858ef8dbf7ff73ff60dfe8365565a31b0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://arxiv.org/pdf/1107.2490v2.pdf&quot;&gt;&amp;ldquo;Towards Optimal One Pass Large Scale Learning with Averaged Stochastic Gradient Descent&amp;rdquo;&lt;/a&gt; Xu, Wei</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e150b6ea23c70405ef87a3a57414a34bc57fd045" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://arxiv.org/pdf/1412.6980v8.pdf&quot;&gt;&amp;ldquo;Adam: A method for stochastic optimization.&amp;rdquo;&lt;/a&gt; Kingma, Diederik, and Jimmy Ba. arXiv preprint arXiv:1412.6980 (2014).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50ae99d2efa5948022e793a76655504cdac5769" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://blanche.polytechnique.fr/~mallat/papiers/MallatPursuit93.pdf&quot;&gt;Matching pursuits with time-frequency dictionaries&lt;/a&gt;, S. G. Mallat, Z. Zhang,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1174e87e345624484649581a59f5072a78ab56da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.160.2324&quot;&gt;&amp;ldquo;Normalized cuts and image segmentation&amp;rdquo;&lt;/a&gt; Jianbo Shi, Jitendra Malik, 2000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d5b68f3a0ed0310348d0eb7167e254e344b1cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.33.1501&quot;&gt;&amp;ldquo;A Random Walks View of Spectral Segmentation&amp;rdquo;&lt;/a&gt; Marina Meila, Jianbo Shi, 2001</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfe3cf1b782e9fc032fa113f053c8ce93dacc07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.3693&quot;&gt;&amp;ldquo;Principal manifolds and nonlinear dimensionality reduction via tangent space alignment&amp;rdquo;&lt;/a&gt; Zhang, Z. &amp;amp; Zha, H. Journal of Shanghai Univ. 8:406 (2004)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0626c232d953257f5920816e2f185f0033cd0aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.91.8209&quot;&gt;&amp;ldquo;Five balltree construction algorithms&amp;rdquo;&lt;/a&gt;, Omohundro, S.M., International Computer Science Institute Technical Report (1989)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12b6e2df6f01df7f9facacaf9118a0c74cc7abe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.76.8968&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;&amp;ldquo;Mean shift: A robust approach toward feature space analysis.&amp;rdquo;&lt;/a&gt; D. Comaniciu and P. Meer, &lt;em&gt;IEEE Transactions on Pattern Analysis and Machine Intelligence&lt;/em&gt; (2002)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4451f8f82d427acdcdb02398dcefd8f7fdd4c5a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.114.4288&quot;&gt;&amp;ldquo;A Tutorial on Support Vector Regression&amp;rdquo;&lt;/a&gt;, Alex J. Smola, Bernhard Sch&amp;ouml;lkopf - Statistics and Computing archive Volume 14 Issue 3, August 2004, p. 199-222.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05daf82e99ba5f01f3d1d4fdfe36066d7ead1e61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.124.4696&quot;&gt;&amp;ldquo;Regularization and variable selection via the elastic net&amp;rdquo;&lt;/a&gt; H. Zou, T. Hastie - Journal of the Royal Statistical Society Series B, 67 (2), 301-320.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f220593352a8fc642b70ff9c11cdc9b8f182d6e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.165.9323&quot;&gt;&amp;ldquo;A Tutorial on Spectral Clustering&amp;rdquo;&lt;/a&gt; Ulrike von Luxburg, 2007</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3439fb3a133c7b48260a9aa82752ef32664b23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.17.7215&quot;&gt;&amp;ldquo;Automatic Capacity Tuning of Very Large VC-dimension Classifiers&amp;rdquo;&lt;/a&gt;, I. Guyon, B. Boser, V. Vapnik - Advances in neural information processing 1993.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e296b87660f10e1e89cd4079c1488b74f272cb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.19.8100&quot;&gt;&amp;ldquo;On Spectral Clustering: Analysis and an algorithm&amp;rdquo;&lt;/a&gt; Andrew Y. Ng, Michael I. Jordan, Yair Weiss, 2001</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cede2243f1bc0d460d4c9baab2975a9683b00b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.58.7377&quot;&gt;&amp;ldquo;Solving large scale linear prediction problems using stochastic gradient descent algorithms&amp;rdquo;&lt;/a&gt; T. Zhang - In Proceedings of ICML &amp;lsquo;04.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016f4f3215c02ae296ec3f78436c1f1e8fb1158a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.70.382&quot;&gt;&amp;ldquo;MLLE: Modified Locally Linear Embedding Using Multiple Weights&amp;rdquo;&lt;/a&gt; Zhang, Z. &amp;amp; Wang, J.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e089a03aa325ee4cfc7ac0a501b9e479d4d0534" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.74.8513&quot;&gt;&amp;ldquo;Pegasos: Primal estimated sub-gradient solver for svm&amp;rdquo;&lt;/a&gt; S. Shalev-Shwartz, Y. Singer, N. Srebro - In Proceedings of ICML &amp;lsquo;07.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084ea877476d61fe073ae534cb535d5caa3768c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://distill.pub/2016/misread-tsne/&quot;&gt;&amp;ldquo;How to Use t-SNE Effectively&amp;rdquo;&lt;/a&gt; provides a good discussion of the effects of the various parameters, as well as interactive plots to explore the effects of different parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcbac4e048541f3029b4dfe8aed801e50a4899c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://dl.acm.org/citation.cfm?doid=361002.361007&quot;&gt;&amp;ldquo;Multidimensional binary search trees used for associative searching&amp;rdquo;&lt;/a&gt;, Bentley, J.L., Communications of the ACM (1975)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6fbc2b9ba6cdcfb58624a90fd34e55ed5dc5ab9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://dl.acm.org/citation.cfm?id=1119749&quot;&gt;Estimating the support of a high-dimensional distribution&lt;/a&gt; Sch&amp;ouml;lkopf, Bernhard, et al. Neural computation 13.7 (2001): 1443-1471.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52cf7175174e05a6ddd66e9a8a4676b4688c688e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://ilpubs.stanford.edu:8090/778/1/2006-13.pdf&quot;&gt;&amp;ldquo;k-means++: The advantages of careful seeding&amp;rdquo;&lt;/a&gt; Arthur, David, and Sergei Vassilvitskii, &lt;em&gt;Proceedings of the eighteenth annual ACM-SIAM symposium on Discrete algorithms&lt;/em&gt;, Society for Industrial and Applied Mathematics (2007)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bc89e8dce4fb9edb93744d4e9ec2574e20e4ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jmlr.csail.mit.edu/papers/volume7/crammer06a/crammer06a.pdf&quot;&gt;&amp;ldquo;Online Passive-Aggressive Algorithms&amp;rdquo;&lt;/a&gt; K. Crammer, O. Dekel, J. Keshat, S. Shalev-Shwartz, Y. Singer - JMLR 7 (2006)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a751ec93f46ee003bd9cb7261865f4c8555e7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jmlr.org/papers/v9/vandermaaten08a.html&quot;&gt;&amp;ldquo;Visualizing High-Dimensional Data Using t-SNE&amp;rdquo;&lt;/a&gt; van der Maaten, L.J.P.; Hinton, G. Journal of Machine Learning Research (2008)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d419851d00449e0870b2bfea8c1e4b8083dfd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://leon.bottou.org/projects/sgd&quot;&gt;&amp;ldquo;Stochastic Gradient Descent&amp;rdquo;&lt;/a&gt; L. Bottou - Website, 2010.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85467f05e00c6c1a22c7e2b2ea95b5d2cd6e8fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://leon.bottou.org/slides/largescale/lstut.pdf&quot;&gt;&amp;ldquo;The Tradeoffs of Large Scale Machine Learning&amp;rdquo;&lt;/a&gt; L. Bottou - Website, 2011.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fc7aca664fce84f522b88ff0331adb2061590d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://link.springer.com/article/10.1007%2FBF00994018&quot;&gt;&amp;ldquo;Support-vector networks&amp;rdquo;&lt;/a&gt;, C. Cortes, V. Vapnik - Machine Learning, 20, 273-297 (1995).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd3f800b376b37b3d7fffa0d20fa974a5115be9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://link.springer.com/article/10.1007%2FBF01908075&quot;&gt;Comparing Partitions&lt;/a&gt; L. Hubert and P. Arabie, Journal of Classification 1985</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5c48b5e468cda51cbe7473b5dac3972d76d65c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://link.springer.com/article/10.1007%2FBF02289565&quot;&gt;&amp;ldquo;Multidimensional scaling by optimizing goodness of fit to a nonmetric hypothesis&amp;rdquo;&lt;/a&gt; Kruskal, J. Psychometrika, 29, (1964)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb98417661263b94b35f5e874924f26cfd88a2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://link.springer.com/article/10.1007%2FBF02289694&quot;&gt;&amp;ldquo;Nonmetric multidimensional scaling: a numerical method&amp;rdquo;&lt;/a&gt; Kruskal, J. Psychometrika, 29 (1964)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c88a6b7eed085150cd682478c8e4a70d577f79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://lvdmaaten.github.io/tsne/&quot;&gt;&amp;ldquo;t-Distributed Stochastic Neighbor Embedding&amp;rdquo;&lt;/a&gt; van der Maaten, L.J.P.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b12173e60f36c25ba884cc73824a0bf0235ac9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://rob.schapire.net/papers/ecolmod.pdf&quot;&gt;&amp;ldquo;Maximum entropy modeling of species geographic distributions&amp;rdquo;&lt;/a&gt; S. J. Phillips, R. P. Anderson, R. E. Schapire - Ecological Modelling, 190:231-259, 2006.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0774c1e07613ced561b85f8194ad198b3fbe27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://scgroup.hpclab.ceid.upatras.gr/faculty/stratis/Papers/HPCLAB020107.pdf&quot;&gt;&amp;ldquo;SVD based initialization: A head start for nonnegative matrix factorization&amp;rdquo;&lt;/a&gt; C. Boutsidis, E. Gallopoulos, 2008</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb713d5b523750868e2124b42112ca1d2ab3cd58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://science.sciencemag.org/content/290/5500/2319.full&quot;&gt;&amp;ldquo;A global geometric framework for nonlinear dimensionality reduction&amp;rdquo;&lt;/a&gt; Tenenbaum, J.B.; De Silva, V.; &amp;amp; Langford, J.C. Science 290 (5500)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71d0b1915d976d1fdb33f9667b23fd6fb572d59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://scikit-image.org/docs/dev/api/skimage.io.html&quot;&gt;skimage.io&lt;/a&gt; or &lt;a href=&quot;https://imageio.readthedocs.io/en/latest/userapi.html&quot;&gt;Imageio&lt;/a&gt; for loading images and videos into numpy arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60de7abdc0884bb5247f73128047c0c555fc5de9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://scikit-learn.org/stable/supervised_learning.html#supervised-learning&quot;&gt;Supervised learning&lt;/a&gt; consists in learning the link between two datasets: the observed data &lt;code&gt;X&lt;/code&gt; and an external variable &lt;code&gt;y&lt;/code&gt; that we are trying to predict, usually called &amp;ldquo;target&amp;rdquo; or &amp;ldquo;labels&amp;rdquo;. Most often, &lt;code&gt;y&lt;/code&gt; is a 1D array of length &lt;code&gt;n_samples&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5fb41849d93792056b6f08584d067f0263c1a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://ufldl.stanford.edu/wiki/index.php/Backpropagation_Algorithm&quot;&gt;&amp;ldquo;Backpropagation&amp;rdquo;&lt;/a&gt; Andrew Ng, Jiquan Ngiam, Chuan Yu Foo, Yifan Mai, Caroline Suen - Website, 2011.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04eb43f75145a28711c501108b9bb479f6bf1655" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://vis-www.cs.umass.edu/lfw/lfw-funneled.tgz&quot;&gt;http://vis-www.cs.umass.edu/lfw/lfw-funneled.tgz&lt;/a&gt; (233MB)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3cfc3d94043f91073a0d061dfe0cfb206064db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://vis-www.cs.umass.edu/lfw/lfw.pdf&quot;&gt;Labeled Faces in the Wild: A Database for Studying Face Recognition in Unconstrained Environments.&lt;/a&gt; Gary B. Huang, Manu Ramesh, Tamara Berg, and Erik Learned-Miller. University of Massachusetts, Amherst, Technical Report 07-49, October, 2007.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17708a6ba0c173fc1ca7599c313468e3371b1154" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://web.cse.ohio-state.edu/~mbelkin/papers/LEM_NC_03.pdf&quot;&gt;&amp;ldquo;Laplacian Eigenmaps for Dimensionality Reduction and Data Representation&amp;rdquo;&lt;/a&gt; M. Belkin, P. Niyogi, Neural Computation, June 2003; 15 (6):1373-1396</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2377ef2ff51646b3ddbfc8d7f4420f54b9582cc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.aclweb.org/anthology/P/P09/P09-1054.pdf&quot;&gt;&amp;ldquo;Stochastic gradient descent training for l1-regularized log-linear models with cumulative penalty&amp;rdquo;&lt;/a&gt; Y. Tsuruoka, J. Tsujii, S. Ananiadou - In Proceedings of the AFNLP/ACL &amp;lsquo;09.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2847da5e1b3b50474b802c8c19d60b9ad57f608d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.bmva.org/bmvc/2009/Papers/Paper355/Paper355.pdf&quot;&gt;&amp;ldquo;Performance Evaluation of RANSAC Family&amp;rdquo;&lt;/a&gt; Sunglok Choi, Taemin Kim and Wonpil Yu - BMVC (2009)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9385359dcbcded384207846b2fa513c1c434dde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.bsp.brain.riken.jp/publications/2009/Cichocki-Phan-IEICE_col.pdf&quot;&gt;&amp;ldquo;Fast local algorithms for large scale nonnegative matrix and tensor factorizations.&amp;rdquo;&lt;/a&gt; A. Cichocki, A. Phan, 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d696a08a5ef98872e00aa0c0ff6257aabff1db0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.cl.cam.ac.uk/research/dtg/attarchive/facedatabase.html&quot;&gt;This dataset contains a set of face images&lt;/a&gt; taken between April 1992 and April 1994 at AT&amp;amp;T Laboratories Cambridge. The &lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_olivetti_faces&lt;/code&gt;&lt;/a&gt; function is the data fetching / caching function that downloads the data archive from AT&amp;amp;T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc800e2ffd30ac6bab12b8402224554aaf19c4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.columbia.edu/~jwp2128/Papers/HoffmanBleiWangPaisley2013.pdf&quot;&gt;&amp;ldquo;Stochastic Variational Inference&amp;rdquo;&lt;/a&gt; M. Hoffman, D. Blei, C. Wang, J. Paisley, 2013</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d673184379bd15f8462aa5056f93009e8c13556d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.columbia.edu/~jwp2128/Teaching/E4903/papers/nmf_nature.pdf&quot;&gt;&amp;ldquo;Learning the parts of objects by non-negative matrix factorization&amp;rdquo;&lt;/a&gt; D. Lee, S. Seung, 1999</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f2ee3663b3ee3c60f11563f42432da16ed72763" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.cs.columbia.edu/~hila/hila-thesis-distributed.pdf&quot;&gt;Identication and Characterization of Events in Social Media&lt;/a&gt;, Hila Becker, PhD Thesis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ae2669c58e8700df9d6246bc5327c63baf798b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.cs.toronto.edu/~hinton/absps/fastnc.pdf&quot;&gt;&amp;ldquo;A fast learning algorithm for deep belief nets&amp;rdquo;&lt;/a&gt; G. Hinton, S. Osindero, Y.-W. Teh, 2006</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d56f745a49214ffcde5990b6a97e43ea0e64b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.cs.toronto.edu/~tijmen/pcd/pcd.pdf&quot;&gt;&amp;ldquo;Training Restricted Boltzmann Machines using Approximations to the Likelihood Gradient&amp;rdquo;&lt;/a&gt; T. Tieleman, 2008</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ca29bcbd150390c3fb2ab65cf6c710d00cffcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.csie.ntu.edu.tw/~cjlin/liblinear/&quot;&gt;LIBLINEAR &amp;ndash; A Library for Large Linear Classification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d4978ac690737277c25c93eedf69ccefddec98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.csie.ntu.edu.tw/~cjlin/papers/libsvm.pdf&quot;&gt;LIBSVM: A Library for Support Vector Machines&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb418fc26aa6442f925838305a1ad341a76dd435" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.di.ens.fr/sierra/pdfs/icml09.pdf&quot;&gt;&amp;ldquo;Online Dictionary Learning for Sparse Coding&amp;rdquo;&lt;/a&gt; J. Mairal, F. Bach, J. Ponce, G. Sapiro, 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b5a85977d3ffa5e812e4b3f2d31efd5f72ba37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.di.ens.fr/sierra/pdfs/icml09.pdf&quot;&gt;&amp;ldquo;Online dictionary learning for sparse coding&amp;rdquo;&lt;/a&gt; J. Mairal, F. Bach, J. Ponce, G. Sapiro, 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26d5e2548bf5a6d46436207e68f7653eab8f11a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.eecs.tufts.edu/~dsculley/papers/fastkmeans.pdf&quot;&gt;&amp;ldquo;Web Scale K-Means clustering&amp;rdquo;&lt;/a&gt; D. Sculley, &lt;em&gt;Proceedings of the 19th international conference on World wide web&lt;/em&gt; (2010)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2298f23ee16aeb7355b97fab9ac4b9a00c20890" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.faqs.org/faqs/ai-faq/neural-nets/part3/section-12.html&quot;&gt;http://www.faqs.org/faqs/ai-faq/neural-nets/part3/section-12.html&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;http://www.faqs.org/faqs/ai-faq/neural-nets/part3/section-12.html&quot;&gt;http://www.faqs.org/faqs/ai-faq/neural-nets/part3/section-12.html&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="82f14be29a02408dfd8d4a987d77cee49c8e892f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.iro.umontreal.ca/~pift6266/A06/refs/backprop_old.pdf&quot;&gt;&amp;ldquo;Learning representations by back-propagating errors.&amp;rdquo;&lt;/a&gt; Rumelhart, David E., Geoffrey E. Hinton, and Ronald J. Williams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358bcb33364d15a1871526c319798ccb55d98f87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.iucnredlist.org/apps/redlist/details/3038/0&quot;&gt;&amp;ldquo;Bradypus variegatus&amp;rdquo;&lt;/a&gt; , the Brown-throated Sloth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382b9c1febe4ff14b29ffb8c9d627da76e294ac8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.iucnredlist.org/details/13408/0&quot;&gt;&amp;ldquo;Microryzomys minutus&amp;rdquo;&lt;/a&gt; , also known as the Forest Small Rice Rat, a rodent that lives in Peru, Colombia, Ecuador, Peru, and Venezuela.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b697b10953a0eb6a60a47adf235143887e5a22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.iucnredlist.org/details/3038/0&quot;&gt;&amp;ldquo;Bradypus variegatus&amp;rdquo;&lt;/a&gt; , the Brown-throated Sloth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f330ab63cb9b3b49d1a95b14a9c75948c6c18b2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.jmlr.org/papers/volume3/blei03a/blei03a.pdf&quot;&gt;&amp;ldquo;Latent Dirichlet Allocation&amp;rdquo;&lt;/a&gt; D. Blei, A. Ng, M. Jordan, 2003</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24e01a9b4c34427eb6eca93bf9aa5ca1a2caf59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.jmlr.org/papers/volume5/hoyer04a/hoyer04a.pdf&quot;&gt;&amp;ldquo;Non-negative Matrix Factorization with Sparseness Constraints&amp;rdquo;&lt;/a&gt; P. Hoyer, 2004</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad160d9003614f3d18227f5b926ee42a058da2a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.maths.lth.se/matematiklth/personal/sminchis/papers/lis_dagm10.pdf&quot;&gt;&amp;ldquo;Random Fourier approximations for skewed multiplicative histogram kernels&amp;rdquo;&lt;/a&gt; Random Fourier approximations for skewed multiplicative histogram kernels - Lecture Notes for Computer Sciencd (DAGM)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e0aea7eb557dff5545f47ffbec166c4f222b38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.pnas.org/content/100/10/5591&quot;&gt;&amp;ldquo;Hessian Eigenmaps: Locally linear embedding techniques for high-dimensional data&amp;rdquo;&lt;/a&gt; Donoho, D. &amp;amp; Grimes, C. Proc Natl Acad Sci USA. 100:5591 (2003)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad0cd8caa90e7ee5d572ecf43444b5d1eba61ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.sciencemag.org/content/290/5500/2323.full&quot;&gt;&amp;ldquo;Nonlinear dimensionality reduction by locally linear embedding&amp;rdquo;&lt;/a&gt; Roweis, S. &amp;amp; Saul, L. Science 290:2323 (2000)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351a2e228671563be5e0b5f3be21be4a43ed7cca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.springer.com/fr/book/9780387251509&quot;&gt;&amp;ldquo;Modern Multidimensional Scaling - Theory and Applications&amp;rdquo;&lt;/a&gt; Borg, I.; Groenen P. Springer Series in Statistics (1997)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a512d9f19a2a1c112b1a8d1003a8e15e8b3de6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://yann.lecun.com/exdb/publis/pdf/lecun-98b.pdf&quot;&gt;&amp;ldquo;Efficient BackProp&amp;rdquo;&lt;/a&gt; Y. LeCun, L. Bottou, G. Orr, K. M&amp;uuml;ller - In Neural Networks: Tricks of the Trade 1998.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90289b4dc4791a85e20c4ea663b61e64fe6f61f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/functions.html#format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;enforcing&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da681d6c0363e2a8cbb6f103f1938be2c56ccf93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/routines.io.html&quot;&gt;numpy/routines.io&lt;/a&gt; for standard loading of columnar data into numpy arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c03cd28fb6d758600e1c60df8882c75db59e6ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.io.wavfile.read.html&quot;&gt;scipy.io.wavfile.read&lt;/a&gt; for reading WAV files into a numpy array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff03ebb8fb8b09d94e29c5aeb8f4c08c53e146b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/io.html&quot;&gt;scipy.io&lt;/a&gt; specializes in binary formats often used in scientific computing context such as .mat and .arff</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4343b457d471b8fbcb7d7c87ff78dc9cc435f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Akaike_information_criterion&quot;&gt;https://en.wikipedia.org/wiki/Akaike_information_criterion&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bayesian_information_criterion&quot;&gt;https://en.wikipedia.org/wiki/Bayesian_information_criterion&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Akaike_information_criterion&quot;&gt;https://en.wikipedia.org/wiki/Akaike_information_criterion&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bayesian_information_criterion&quot;&gt;https://en.wikipedia.org/wiki/Bayesian_information_criterion&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="215528acfed54a49372a7572492c327b8dc5780a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Classification_in_machine_learning&quot;&gt;classification&lt;/a&gt;: samples belong to two or more classes and we want to learn from already labeled data how to predict the class of unlabeled data. An example of a classification problem would be handwritten digit recognition, in which the aim is to assign each input vector to one of a finite number of discrete categories. Another way to think of classification is as a discrete (as opposed to continuous) form of supervised learning where one has a limited number of categories and for each of the n samples provided, one is to try to label them with the correct category or class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5c63c6c209002b91635ff6636990f862f63a7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Cluster_analysis&quot;&gt;Clustering&lt;/a&gt; of unlabeled data can be performed with the module &lt;a href=&quot;classes#module-sklearn.cluster&quot;&gt;&lt;code&gt;sklearn.cluster&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757717c08923973a9ae80dbf19f8c933a7012e2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Confusion_matrix&quot;&gt;Wikipedia entry for the Confusion matrix&lt;/a&gt; (Wikipedia and other references may use a different convention for axes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ca6481c4a121fa2400e0a418da329bffa4c294" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Discretization_of_continuous_features&quot;&gt;Discretization&lt;/a&gt; (otherwise known as quantization or binning) provides a way to partition continuous features into discrete values. Certain datasets with continuous features may benefit from discretization, because discretization can transform the dataset of continuous attributes to one with only nominal attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb20ab965b343600bdb63f19fded55f25efcc983" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Gradient_boosting&quot;&gt;Gradient Tree Boosting&lt;/a&gt; or Gradient Boosted Regression Trees (GBRT) is a generalization of boosting to arbitrary differentiable loss functions. GBRT is an accurate and effective off-the-shelf procedure that can be used for both regression and classification problems. Gradient Tree Boosting models are used in a variety of areas including Web search ranking and ecology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b718088bd0dc39cd117f479c732c9639010f235d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/ID3_algorithm&quot;&gt;ID3&lt;/a&gt; (Iterative Dichotomiser 3) was developed in 1986 by Ross Quinlan. The algorithm creates a multiway tree, finding for each node (i.e. in a greedy manner) the categorical feature that will yield the largest information gain for categorical targets. Trees are grown to their maximum size and then a pruning step is usually applied to improve the ability of the tree to generalise to unseen data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f90d25736ae16cb79992ef1fe1a66ebd4f077b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Machine_learning&quot;&gt;Machine learning&lt;/a&gt; is a technique with a growing importance, as the size of the datasets experimental sciences are facing is rapidly growing. Problems it tackles range from building a prediction function linking different observations, to classifying observations, or learning the structure in an unlabeled dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1164f712eef3ac0706ad71e31fbd8d24baad19c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Median&quot;&gt;https://en.wikipedia.org/wiki/Median&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Interquartile_range&quot;&gt;https://en.wikipedia.org/wiki/Interquartile_range&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Median&quot;&gt;https://en.wikipedia.org/wiki/Median&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Interquartile_range&quot;&gt;https://en.wikipedia.org/wiki/Interquartile_range&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c929349b52c968a94cc61dedbcbd90c8bd3bef6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Multidimensional_scaling&quot;&gt;Multidimensional scaling&lt;/a&gt; (&lt;a href=&quot;generated/sklearn.manifold.mds#sklearn.manifold.MDS&quot;&gt;&lt;code&gt;MDS&lt;/code&gt;&lt;/a&gt;) seeks a low-dimensional representation of the data in which the distances respect well the distances in the original high-dimensional space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4346117c389ea805a802718c7ba5edf0b11057" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Perceptron&quot;&gt;https://en.wikipedia.org/wiki/Perceptron&lt;/a&gt; and references therein.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f979d144def05687e256fdaa2f5cef07c6b0d983" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Predictive_analytics#Classification_and_regression_trees_.28CART.29&quot;&gt;CART&lt;/a&gt; (Classification and Regression Trees) is very similar to C4.5, but it differs in that it supports numerical target variables (regression) and does not compute rule sets. CART constructs binary trees using the feature and threshold that yield the largest information gain at each node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e0d0998cf55892670d68dff53e27fe7308203f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Regression_analysis&quot;&gt;regression&lt;/a&gt;: if the desired output consists of one or more continuous variables, then the task is called &lt;em&gt;regression&lt;/em&gt;. An example of a regression problem would be the prediction of the length of a salmon as a function of its age and weight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5720ebbf9fa6550080d990fe03748d4eb02f32c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Semi-supervised_learning&quot;&gt;Semi-supervised learning&lt;/a&gt; is a situation in which in your training data some of the samples are not labeled. The semi-supervised estimators in &lt;a href=&quot;classes#module-sklearn.semi_supervised&quot;&gt;&lt;code&gt;sklearn.semi_supervised&lt;/code&gt;&lt;/a&gt; are able to make use of this additional unlabeled data to better capture the shape of the underlying data distribution and generalize better to new samples. These algorithms can perform well when we have a very small amount of labeled points and a large amount of unlabeled points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae18c795eceec0cc34e35f289322cda6c80a57f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Supervised_learning&quot;&gt;supervised learning&lt;/a&gt;, in which the data comes with additional attributes that we want to predict (&lt;a href=&quot;http://scikit-learn.org/stable/supervised_learning.html#supervised-learning&quot;&gt;Click here&lt;/a&gt; to go to the scikit-learn supervised learning page).This problem can be either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac58bc65c6c0427031aa57d963fe0988afaf523" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Unsupervised_learning&quot;&gt;unsupervised learning&lt;/a&gt;, in which the training data consists of a set of input vectors x without any corresponding target values. The goal in such problems may be to discover groups of similar examples within the data, where it is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Cluster_analysis&quot;&gt;clustering&lt;/a&gt;, or to determine the distribution of data within the input space, known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Density_estimation&quot;&gt;density estimation&lt;/a&gt;, or to project the data from a high-dimensional space down to two or three dimensions for the purpose of &lt;em&gt;visualization&lt;/em&gt; (&lt;a href=&quot;http://scikit-learn.org/stable/unsupervised_learning.html#unsupervised-learning&quot;&gt;Click here&lt;/a&gt; to go to the Scikit-Learn unsupervised learning page).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a964daaf2ca212c51d118594291764cc2fb58aa1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/aappleby/smhasher&quot;&gt;MurmurHash3&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/aappleby/smhasher&quot;&gt;MurmurHash3&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="be852473171f394d12548f5485a40ba28592be06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://lvdmaaten.github.io/publications/papers/JMLR_2014.pdf&quot;&gt;&amp;ldquo;Accelerating t-SNE using Tree-Based Algorithms.&amp;rdquo;&lt;/a&gt; L.J.P. van der Maaten. Journal of Machine Learning Research 15(Oct):3221-3245, 2014.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb58e21f764bb6eb0598819f574c42df1b048d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://openml.org&quot;&gt;openml.org&lt;/a&gt; is a public repository for machine learning data and experiments, that allows everybody to upload open datasets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccab57d8c43a9787478f985c761ced492a4faa8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/io.html&quot;&gt;pandas.io&lt;/a&gt; provides tools to read data from common formats including CSV, Excel, JSON and SQL. DataFrames may also be constructed from lists of tuples or dicts. Pandas handles heterogeneous data smoothly and provides tools for manipulation and conversion into a numeric array suitable for scikit-learn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db03d045ac8b3f41f7eae41be4d7fbc4da004805" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://papers.nips.cc/paper/3902-online-learning-for-latent-dirichlet-allocation.pdf&quot;&gt;&amp;ldquo;Online Learning for Latent Dirichlet Allocation&amp;rdquo;&lt;/a&gt; M. Hoffman, D. Blei, F. Bach, 2010</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952a2cb05055acaffa671cf1e3f04c9095829e0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.robots.ox.ac.uk/~vgg/publications/2010/Sreekanth10/sreekanth10.pdf&quot;&gt;&amp;ldquo;Generalized RBF feature maps for Efficient Detection&amp;rdquo;&lt;/a&gt; Vempati, S. and Vedaldi, A. and Zisserman, A. and Jawahar, CV - 2010</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24b7a83894abdf019b0361dcbf47104ec6c8f88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.sri.com/sites/default/files/publications/ransac-publication.pdf&quot;&gt;&amp;ldquo;Random Sample Consensus: A Paradigm for Model Fitting with Applications to Image Analysis and Automated Cartography&amp;rdquo;&lt;/a&gt; Martin A. Fischler and Robert C. Bolles - SRI International (1981)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc6b8cd91bd38250cdd90b269e58d49f144cbbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;linear_model#linear-model&quot;&gt;Linear models&lt;/a&gt; penalized with the L1 norm have sparse solutions: many of their estimated coefficients are zero. When the goal is to reduce the dimensionality of the data to use with another classifier, they can be used along with &lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;feature_selection.SelectFromModel&lt;/code&gt;&lt;/a&gt; to select the non-zero coefficients. In particular, sparse estimators useful for this purpose are the &lt;a href=&quot;generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;linear_model.Lasso&lt;/code&gt;&lt;/a&gt; for regression, and of &lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;linear_model.LogisticRegression&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt;&lt;code&gt;svm.LinearSVC&lt;/code&gt;&lt;/a&gt; for classification:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d06308c6e32344c7804f641669a5f8e424cba33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;linear_model#polynomial-regression&quot;&gt;Polynomial regression: extending linear models with basis functions&lt;/a&gt; for an exact polynomial transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0579be6d1aebb435c0aa2dc6159ca27f7bd26499" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;manifold#manifold&quot;&gt;Manifold learning&lt;/a&gt; techniques can also be useful to derive non-linear representations of feature space, also these approaches focus also on dimensionality reduction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60aedd97cce54c0c199bb039ccb4d1f00ea558b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;plot_roc_crossval#sphx-glr-auto-examples-model-selection-plot-roc-crossval-py&quot;&gt;Receiver Operating Characteristic (ROC) with cross validation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f024b420cfc0d18f2d7e3f4e4798c983832f98f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.covariance.empiricalcovariance#sklearn.covariance.EmpiricalCovariance&quot;&gt;&lt;code&gt;EmpiricalCovariance&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.covariance.mincovdet#sklearn.covariance.MinCovDet&quot;&gt;&lt;code&gt;MinCovDet&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee1690d2993b64dcdec11a09b32d7d904c302dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.covariance.graph_lasso#sklearn.covariance.graph_lasso&quot;&gt;&lt;code&gt;graph_lasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.covariance.graphlasso#sklearn.covariance.GraphLasso&quot;&gt;&lt;code&gt;GraphLasso&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa6e521b6602f585a1ff8ef59bbef28b2c96ace" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.covariance.graph_lasso#sklearn.covariance.graph_lasso&quot;&gt;&lt;code&gt;graph_lasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.covariance.graphlassocv#sklearn.covariance.GraphLassoCV&quot;&gt;&lt;code&gt;GraphLassoCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547a5ddb406d7e7f986fcbfc85c7d54c5fcac542" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.covariance.graphical_lasso#sklearn.covariance.graphical_lasso&quot;&gt;&lt;code&gt;graphical_lasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.covariance.graphicallasso#sklearn.covariance.GraphicalLasso&quot;&gt;&lt;code&gt;GraphicalLasso&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2876e5521f5b35f0104f7903b59bc5090698e40e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.covariance.graphical_lasso#sklearn.covariance.graphical_lasso&quot;&gt;&lt;code&gt;graphical_lasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.covariance.graphicallassocv#sklearn.covariance.GraphicalLassoCV&quot;&gt;&lt;code&gt;GraphicalLassoCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9d4d3112ad5d07ac638ab6bc9c52a4b71b29c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.covariance.graphicallasso#sklearn.covariance.GraphicalLasso&quot;&gt;&lt;code&gt;GraphicalLasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.covariance.graphicallassocv#sklearn.covariance.GraphicalLassoCV&quot;&gt;&lt;code&gt;GraphicalLassoCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb0c589c7c081b91b9c97a37e52b3476e792f7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.cross_decomposition.cca#sklearn.cross_decomposition.CCA&quot;&gt;&lt;code&gt;CCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.cross_decomposition.plssvd#sklearn.cross_decomposition.PLSSVD&quot;&gt;&lt;code&gt;PLSSVD&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c016bdd52d48c18fd1a1032205b829efbb413eb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.cross_decomposition.plscanonical#sklearn.cross_decomposition.PLSCanonical&quot;&gt;&lt;code&gt;PLSCanonical&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.cross_decomposition.cca#sklearn.cross_decomposition.CCA&quot;&gt;&lt;code&gt;CCA&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834567fd318e128dd605e736fe5fc56f4d0c030e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.cross_decomposition.plscanonical#sklearn.cross_decomposition.PLSCanonical&quot;&gt;&lt;code&gt;PLSCanonical&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.cross_decomposition.plssvd#sklearn.cross_decomposition.PLSSVD&quot;&gt;&lt;code&gt;PLSSVD&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff695e3c4127eee5a0d629e0f557296d6acd1c0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.decomposition.dict_learning#sklearn.decomposition.dict_learning&quot;&gt;&lt;code&gt;dict_learning&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt;&lt;code&gt;DictionaryLearning&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;SparsePCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.minibatchsparsepca#sklearn.decomposition.MiniBatchSparsePCA&quot;&gt;&lt;code&gt;MiniBatchSparsePCA&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005beb40f6eb6bc8dfce9f93f55cdcdf51118f06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.decomposition.dict_learning_online#sklearn.decomposition.dict_learning_online&quot;&gt;&lt;code&gt;dict_learning_online&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt;&lt;code&gt;DictionaryLearning&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;SparsePCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.minibatchsparsepca#sklearn.decomposition.MiniBatchSparsePCA&quot;&gt;&lt;code&gt;MiniBatchSparsePCA&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be59cc6c680f720fbe4c7612950c9353dd94368c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt;&lt;code&gt;DictionaryLearning&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;SparsePCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.minibatchsparsepca#sklearn.decomposition.MiniBatchSparsePCA&quot;&gt;&lt;code&gt;MiniBatchSparsePCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt;&lt;code&gt;sparse_encode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c7d84f3249ea3bed3ef1a1561478e95df02a37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt;&lt;code&gt;KernelPCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;SparsePCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.incrementalpca#sklearn.decomposition.IncrementalPCA&quot;&gt;&lt;code&gt;IncrementalPCA&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2984715334b167380d59bbae3fc78a6bb87a66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt;&lt;code&gt;KernelPCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;SparsePCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd1686c90f1dc2647e14b8e9bb6139a473d23d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.minibatchsparsepca#sklearn.decomposition.MiniBatchSparsePCA&quot;&gt;&lt;code&gt;MiniBatchSparsePCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt;&lt;code&gt;DictionaryLearning&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0babd19bdabd7009ce17f87a2d3ee366bb136a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;SparsePCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt;&lt;code&gt;DictionaryLearning&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09317c2b3ce3b563c7063b9235f2ee5912220121" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.decomposition.sparsecoder#sklearn.decomposition.SparseCoder&quot;&gt;&lt;code&gt;SparseCoder&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt;&lt;code&gt;DictionaryLearning&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;SparsePCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.minibatchsparsepca#sklearn.decomposition.MiniBatchSparsePCA&quot;&gt;&lt;code&gt;MiniBatchSparsePCA&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af9cba62e96f6792e8650b4ec05d318e83e507d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.decomposition.sparsecoder#sklearn.decomposition.SparseCoder&quot;&gt;&lt;code&gt;SparseCoder&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;SparsePCA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.minibatchsparsepca#sklearn.decomposition.MiniBatchSparsePCA&quot;&gt;&lt;code&gt;MiniBatchSparsePCA&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42517ba25ea400c1760eb8870d5b0b610e50281" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.ensemble.adaboostclassifier#sklearn.ensemble.AdaBoostClassifier&quot;&gt;&lt;code&gt;AdaBoostClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt;&lt;code&gt;GradientBoostingRegressor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.tree.decisiontreeregressor#sklearn.tree.DecisionTreeRegressor&quot;&gt;&lt;code&gt;sklearn.tree.DecisionTreeRegressor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1cf120ba10ee5ebd524f337888127059425bc98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.ensemble.adaboostregressor#sklearn.ensemble.AdaBoostRegressor&quot;&gt;&lt;code&gt;AdaBoostRegressor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt;&lt;code&gt;GradientBoostingClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.tree.decisiontreeclassifier#sklearn.tree.DecisionTreeClassifier&quot;&gt;&lt;code&gt;sklearn.tree.DecisionTreeClassifier&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b479b675793b393fdb2e75f17e1a691d02a941" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;CountVectorizer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.feature_extraction.text.tfidfvectorizer#sklearn.feature_extraction.text.TfidfVectorizer&quot;&gt;&lt;code&gt;TfidfVectorizer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae4af6708ec0f8f0d2b2a2819b2f155fa448d24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;HashingVectorizer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.feature_extraction.text.tfidfvectorizer#sklearn.feature_extraction.text.TfidfVectorizer&quot;&gt;&lt;code&gt;TfidfVectorizer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e711bfcc11b7c28b4d48317d65f6f9ef4bd2f7e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.multitasklasso#sklearn.linear_model.MultiTaskLasso&quot;&gt;&lt;code&gt;MultiTaskLasso&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed45d42b9be6b8173f0ef9de791ad59c631c827" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.enet_path#sklearn.linear_model.enet_path&quot;&gt;&lt;code&gt;enet_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112eebca3043ed229f20ed58e56852dcbb485e6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;lars_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.larscv#sklearn.linear_model.LarsCV&quot;&gt;&lt;code&gt;LarsCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt;&lt;code&gt;sklearn.decomposition.sparse_encode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaccdf5bd7caec42177a5946b2c621885bbbb677" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;lars_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;Lasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#sklearn.linear_model.LassoCV&quot;&gt;&lt;code&gt;LassoCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;LassoLarsCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt;&lt;code&gt;sklearn.decomposition.sparse_encode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116c1f731cd646315650ef21383c4ba6e96974b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;lars_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;Lasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassocv#sklearn.linear_model.LassoCV&quot;&gt;&lt;code&gt;LassoCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;LassoLarsCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt;&lt;code&gt;sklearn.decomposition.sparse_encode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda1dd585591aaa6d1488296db28a337904cd747" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;lars_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lasso_path#sklearn.linear_model.lasso_path&quot;&gt;&lt;code&gt;lasso_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;Lasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassocv#sklearn.linear_model.LassoCV&quot;&gt;&lt;code&gt;LassoCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;LassoLarsCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolarsic#sklearn.linear_model.LassoLarsIC&quot;&gt;&lt;code&gt;LassoLarsIC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt;&lt;code&gt;sklearn.decomposition.sparse_encode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a23006fc219b65e360a5c039ee0ee91839f2cc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;lars_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lasso_path#sklearn.linear_model.lasso_path&quot;&gt;&lt;code&gt;lasso_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;Lasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;LassoLarsCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c743e9f494b565885f32961d5b24b30facaea823" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;lars_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lasso_path#sklearn.linear_model.lasso_path&quot;&gt;&lt;code&gt;lasso_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassocv#sklearn.linear_model.LassoCV&quot;&gt;&lt;code&gt;LassoCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;LassoLarsCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt;&lt;code&gt;sklearn.decomposition.sparse_encode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821e53a49e6e8bffabc9ce75565638eea21e52cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;lars_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.larscv#sklearn.linear_model.LarsCV&quot;&gt;&lt;code&gt;LarsCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassocv#sklearn.linear_model.LassoCV&quot;&gt;&lt;code&gt;LassoCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6860e471aaea928c30e5e251332703e4e42044" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;lars_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;LassoLarsCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf448bfb4464f2ba7bce8517a14419b1a50a0db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;sklearn.linear_model.lars_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;sklearn.linear_model.orthogonal_mp&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;sklearn.linear_model.Lasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparsecoder#sklearn.decomposition.SparseCoder&quot;&gt;&lt;code&gt;SparseCoder&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bad1270ef9022bc8afaaf73239db4bc0eb6a3b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;Lasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.multitaskelasticnet#sklearn.linear_model.MultiTaskElasticNet&quot;&gt;&lt;code&gt;MultiTaskElasticNet&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e4d262642e4335608ee1f9f70059753c5323fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.lasso_path#sklearn.linear_model.lasso_path&quot;&gt;&lt;code&gt;lasso_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lars#sklearn.linear_model.Lars&quot;&gt;&lt;code&gt;Lars&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;LassoLarsCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.larscv#sklearn.linear_model.LarsCV&quot;&gt;&lt;code&gt;LarsCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt;&lt;code&gt;sklearn.decomposition.sparse_encode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b2fcf78349c5e7fcdabdd54576423813968140" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.multitaskelasticnet#sklearn.linear_model.MultiTaskElasticNet&quot;&gt;&lt;code&gt;MultiTaskElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.elasticnetcv#sklearn.linear_model.ElasticNetCV&quot;&gt;&lt;code&gt;ElasticNetCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0b7fcbb8f2242871b6e44780f4e82bc6b4fb8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.multitaskelasticnet#sklearn.linear_model.MultiTaskElasticNet&quot;&gt;&lt;code&gt;MultiTaskElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.elasticnetcv#sklearn.linear_model.ElasticNetCV&quot;&gt;&lt;code&gt;ElasticNetCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.multitaskelasticnetcv#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f648fbf094310251afe4426704738250e7995fe9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.multitaskelasticnet#sklearn.linear_model.MultiTaskElasticNet&quot;&gt;&lt;code&gt;MultiTaskElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.elasticnetcv#sklearn.linear_model.ElasticNetCV&quot;&gt;&lt;code&gt;ElasticNetCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.multitasklassocv#sklearn.linear_model.MultiTaskLassoCV&quot;&gt;&lt;code&gt;MultiTaskLassoCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96735dc94de26aee7cfef1713af4de33c9c889ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.multitaskelasticnet#sklearn.linear_model.MultiTaskElasticNet&quot;&gt;&lt;code&gt;MultiTaskElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.multitaskelasticnetcv#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.elasticnetcv#sklearn.linear_model.ElasticNetCV&quot;&gt;&lt;code&gt;ElasticNetCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807b4d27e697a55f2e695ad5b54658e05a6cae87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.multitaskelasticnet#sklearn.linear_model.MultiTaskElasticNet&quot;&gt;&lt;code&gt;MultiTaskElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.multitaskelasticnetcv#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#sklearn.linear_model.ElasticNetCV&quot;&gt;&lt;code&gt;ElasticNetCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3463955cb0d20d502288bbcc52da8843bda8b64e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.multitaskelasticnet#sklearn.linear_model.MultiTaskElasticNet&quot;&gt;&lt;code&gt;MultiTaskElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.multitaskelasticnetcv#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.elasticnetcv#sklearn.linear_model.ElasticNetCV&quot;&gt;&lt;code&gt;ElasticNetCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7aa2d2ee89a548ca7901cf3d1f588051427a47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;orthogonal_mp&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.orthogonal_mp_gram#sklearn.linear_model.orthogonal_mp_gram&quot;&gt;&lt;code&gt;orthogonal_mp_gram&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;lars_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lars#sklearn.linear_model.Lars&quot;&gt;&lt;code&gt;Lars&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.larscv#sklearn.linear_model.LarsCV&quot;&gt;&lt;code&gt;LarsCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;LassoLarsCV&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;decomposition.sparse_encode&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d8342494ca26c63a145b686362e68c35f5bc04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;orthogonal_mp&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.orthogonal_mp_gram#sklearn.linear_model.orthogonal_mp_gram&quot;&gt;&lt;code&gt;orthogonal_mp_gram&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;lars_path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lars#sklearn.linear_model.Lars&quot;&gt;&lt;code&gt;Lars&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;decomposition.sparse_encode&lt;/code&gt;, &lt;a href=&quot;sklearn.linear_model.orthogonalmatchingpursuitcv#sklearn.linear_model.OrthogonalMatchingPursuitCV&quot;&gt;&lt;code&gt;OrthogonalMatchingPursuitCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d88fa8be754950c5e6c842527e263c847e47f59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;orthogonal_mp&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;lars_path&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;decomposition.sparse_encode&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5887e45ec41497242b0eb035dc1e7e321ee7fca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.orthogonal_mp_gram#sklearn.linear_model.orthogonal_mp_gram&quot;&gt;&lt;code&gt;orthogonal_mp_gram&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;lars_path&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;decomposition.sparse_encode&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f052c54a1510dc4abd6de9c7abb9bfa194cdc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.randomizedlasso#sklearn.linear_model.RandomizedLasso&quot;&gt;&lt;code&gt;RandomizedLasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;LogisticRegression&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c8625afea3c79afd8d6182de1bbbe4cd8fd0ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.randomizedlogisticregression#sklearn.linear_model.RandomizedLogisticRegression&quot;&gt;&lt;code&gt;RandomizedLogisticRegression&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;Lasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80c752deebd8954bf87315aacc4f59009564322" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;Lasso&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.svm.svr#sklearn.svm.SVR&quot;&gt;&lt;code&gt;sklearn.svm.SVR&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c739d903807149ce56650c308f9296edb51bcc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.perceptron#sklearn.linear_model.Perceptron&quot;&gt;&lt;code&gt;Perceptron&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0c3d0288df33331495891ca17bb4cc2a2ab720" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;accuracy_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt;&lt;code&gt;hamming_loss&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.jaccard_similarity_score#sklearn.metrics.jaccard_similarity_score&quot;&gt;&lt;code&gt;jaccard_similarity_score&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1364a4348568f643d63e4e5db41874af1ad23a42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;accuracy_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt;&lt;code&gt;hamming_loss&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt;&lt;code&gt;zero_one_loss&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af12404997b6eb071192026f9f85f8d053be569f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;accuracy_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.jaccard_similarity_score#sklearn.metrics.jaccard_similarity_score&quot;&gt;&lt;code&gt;jaccard_similarity_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt;&lt;code&gt;zero_one_loss&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802f4ac94e6e3a100d94b8c37af8adc0571b52ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.metrics.completeness_score#sklearn.metrics.completeness_score&quot;&gt;&lt;code&gt;completeness_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt;&lt;code&gt;v_measure_score&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c595dac3cf4c123bd8e1dfc687f1b52462e7a18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.metrics.homogeneity_score#sklearn.metrics.homogeneity_score&quot;&gt;&lt;code&gt;homogeneity_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.completeness_score#sklearn.metrics.completeness_score&quot;&gt;&lt;code&gt;completeness_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.normalized_mutual_info_score#sklearn.metrics.normalized_mutual_info_score&quot;&gt;&lt;code&gt;normalized_mutual_info_score&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a559d9835fa5e31d2cf00792295a3fdc60bb4d63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.metrics.homogeneity_score#sklearn.metrics.homogeneity_score&quot;&gt;&lt;code&gt;homogeneity_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.completeness_score#sklearn.metrics.completeness_score&quot;&gt;&lt;code&gt;completeness_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt;&lt;code&gt;v_measure_score&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cccb2433f779d4546d8e85c16a97880580bd0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.metrics.homogeneity_score#sklearn.metrics.homogeneity_score&quot;&gt;&lt;code&gt;homogeneity_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt;&lt;code&gt;v_measure_score&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70df5105c28e44498b0da1329188fe7403831042" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.metrics.jaccard_similarity_score#sklearn.metrics.jaccard_similarity_score&quot;&gt;&lt;code&gt;jaccard_similarity_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt;&lt;code&gt;hamming_loss&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt;&lt;code&gt;zero_one_loss&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d27a60958ea4efa27cad5053568ccc86d018486" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt;&lt;code&gt;sklearn.metrics.pairwise.cosine_similarity&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.distance.cosine.html#scipy.spatial.distance.cosine&quot;&gt;&lt;code&gt;scipy.spatial.distance.cosine&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a02f63caadbdc963f94531bf6b22228ecda381" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.metrics.pairwise_distances#sklearn.metrics.pairwise_distances&quot;&gt;&lt;code&gt;sklearn.metrics.pairwise_distances&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.pairwise_distances_argmin#sklearn.metrics.pairwise_distances_argmin&quot;&gt;&lt;code&gt;sklearn.metrics.pairwise_distances_argmin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48a08d5b66930b2e2481a02d3e46f3f703fa848" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.metrics.pairwise_distances#sklearn.metrics.pairwise_distances&quot;&gt;&lt;code&gt;sklearn.metrics.pairwise_distances&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.pairwise_distances_argmin_min#sklearn.metrics.pairwise_distances_argmin_min&quot;&gt;&lt;code&gt;sklearn.metrics.pairwise_distances_argmin_min&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc91e5c532b17f26c3f857290d91d317e19c04d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;recall_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt;&lt;code&gt;roc_auc_score&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d697b91f316f919a6ae1196f8c7f91fbb880a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.neighbors.kneighborsclassifier#sklearn.neighbors.KNeighborsClassifier&quot;&gt;&lt;code&gt;KNeighborsClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.radiusneighborsclassifier#sklearn.neighbors.RadiusNeighborsClassifier&quot;&gt;&lt;code&gt;RadiusNeighborsClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.kneighborsregressor#sklearn.neighbors.KNeighborsRegressor&quot;&gt;&lt;code&gt;KNeighborsRegressor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.radiusneighborsregressor#sklearn.neighbors.RadiusNeighborsRegressor&quot;&gt;&lt;code&gt;RadiusNeighborsRegressor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.balltree#sklearn.neighbors.BallTree&quot;&gt;&lt;code&gt;BallTree&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a5cf4bea78f66c96ef403f92554009878e0206" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.neighbors.kneighborsclassifier#sklearn.neighbors.KNeighborsClassifier&quot;&gt;&lt;code&gt;KNeighborsClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.radiusneighborsregressor#sklearn.neighbors.RadiusNeighborsRegressor&quot;&gt;&lt;code&gt;RadiusNeighborsRegressor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.kneighborsregressor#sklearn.neighbors.KNeighborsRegressor&quot;&gt;&lt;code&gt;KNeighborsRegressor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.nearestneighbors#sklearn.neighbors.NearestNeighbors&quot;&gt;&lt;code&gt;NearestNeighbors&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ad2be9028f5415b44d8021af26bab0814075da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.neighbors.nearestneighbors#sklearn.neighbors.NearestNeighbors&quot;&gt;&lt;code&gt;NearestNeighbors&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.kneighborsregressor#sklearn.neighbors.KNeighborsRegressor&quot;&gt;&lt;code&gt;KNeighborsRegressor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.kneighborsclassifier#sklearn.neighbors.KNeighborsClassifier&quot;&gt;&lt;code&gt;KNeighborsClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.radiusneighborsclassifier#sklearn.neighbors.RadiusNeighborsClassifier&quot;&gt;&lt;code&gt;RadiusNeighborsClassifier&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4835c88483389a0d162ea11e2c6cad0b83b9f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.neighbors.nearestneighbors#sklearn.neighbors.NearestNeighbors&quot;&gt;&lt;code&gt;NearestNeighbors&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.radiusneighborsregressor#sklearn.neighbors.RadiusNeighborsRegressor&quot;&gt;&lt;code&gt;RadiusNeighborsRegressor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.kneighborsclassifier#sklearn.neighbors.KNeighborsClassifier&quot;&gt;&lt;code&gt;KNeighborsClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.radiusneighborsclassifier#sklearn.neighbors.RadiusNeighborsClassifier&quot;&gt;&lt;code&gt;RadiusNeighborsClassifier&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5d92abf5faee0525f3b1b538841f830078dba9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.neighbors.radiusneighborsclassifier#sklearn.neighbors.RadiusNeighborsClassifier&quot;&gt;&lt;code&gt;RadiusNeighborsClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.kneighborsregressor#sklearn.neighbors.KNeighborsRegressor&quot;&gt;&lt;code&gt;KNeighborsRegressor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.radiusneighborsregressor#sklearn.neighbors.RadiusNeighborsRegressor&quot;&gt;&lt;code&gt;RadiusNeighborsRegressor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.neighbors.nearestneighbors#sklearn.neighbors.NearestNeighbors&quot;&gt;&lt;code&gt;NearestNeighbors&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ef1c2a8084aac06e51ed8c775472f4918bf62b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt;&lt;code&gt;sklearn.svm.LinearSVC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;LogisticRegression&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.perceptron#sklearn.linear_model.Perceptron&quot;&gt;&lt;code&gt;Perceptron&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a59bb167676102fbd6bd10ca3817c4301785211" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.tree.decisiontreeclassifier#sklearn.tree.DecisionTreeClassifier&quot;&gt;&lt;code&gt;sklearn.tree.DecisionTreeClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;RandomForestClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.ensemble.adaboostclassifier#sklearn.ensemble.AdaBoostClassifier&quot;&gt;&lt;code&gt;AdaBoostClassifier&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02747a200b4c0d547d29eb8ada877c1443d1b437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.tree.extratreeclassifier#sklearn.tree.ExtraTreeClassifier&quot;&gt;&lt;code&gt;ExtraTreeClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.ensemble.extratreesclassifier#sklearn.ensemble.ExtraTreesClassifier&quot;&gt;&lt;code&gt;sklearn.ensemble.ExtraTreesClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.ensemble.extratreesregressor#sklearn.ensemble.ExtraTreesRegressor&quot;&gt;&lt;code&gt;sklearn.ensemble.ExtraTreesRegressor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d1f50ec3ead51486f00f316a61ad2eca9914d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sklearn.tree.extratreeregressor#sklearn.tree.ExtraTreeRegressor&quot;&gt;&lt;code&gt;ExtraTreeRegressor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.ensemble.extratreesclassifier#sklearn.ensemble.ExtraTreesClassifier&quot;&gt;&lt;code&gt;sklearn.ensemble.ExtraTreesClassifier&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.ensemble.extratreesregressor#sklearn.ensemble.ExtraTreesRegressor&quot;&gt;&lt;code&gt;sklearn.ensemble.ExtraTreesRegressor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93eac1f0c88ed27b044ef9a386e07add4f7c6f07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;www.di.ens.fr/~fbach/sspca_aistats2010.pdf&quot;&gt;&amp;ldquo;Structured Sparse Principal Component Analysis&amp;rdquo;&lt;/a&gt; R. Jenatton, G. Obozinski, F. Bach, 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939ec7dcb919a2fa2c8981135def1e38e30533d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;macro&quot;&lt;/code&gt; simply calculates the mean of the binary metrics, giving equal weight to each class. In problems where infrequent classes are nonetheless important, macro-averaging may be a means of highlighting their performance. On the other hand, the assumption that all classes are equally important is often untrue, such that macro-averaging will over-emphasize the typically low performance on an infrequent class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59cade60b6db616172692a5482cd8d5f893b28f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;micro&quot;&lt;/code&gt; gives each sample-class pair an equal contribution to the overall metric (except as a result of sample-weight). Rather than summing the metric per class, this sums the dividends and divisors that make up the per-class metrics to calculate an overall quotient. Micro-averaging may be preferred in multilabel settings, including multiclass classification where a majority class is to be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381ae8ceb89109088a3486edc7e13eddf39c6c57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;samples&quot;&lt;/code&gt; applies only to multilabel problems. It does not calculate a per-class measure, instead calculating the metric over the true and predicted classes for each sample in the evaluation data, and returning their (&lt;code&gt;sample_weight&lt;/code&gt;-weighted) average.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6d959333386e34ae9b2cd5e7ce6b978a4c0ef8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;weighted&quot;&lt;/code&gt; accounts for class imbalance by computing the average of binary metrics in which each class&amp;rsquo;s score is weighted by its presence in the true data sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6974427892f31eede9cc3d347671881e165b2585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*.rst files&lt;/code&gt; - the source of the tutorial document written with sphinx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563a4245c0cb8a1b1e857139ae3b318774e6712f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d097663049e5cb7f8d25cff29d94667d15bf03ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecisionTreeClassifier&lt;/code&gt;, &lt;a href=&quot;sklearn.ensemble.extratreesclassifier#sklearn.ensemble.ExtraTreesClassifier&quot;&gt;&lt;code&gt;ExtraTreesClassifier&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06835333e480c837e3cc265c59b9126fd5360e18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecisionTreeRegressor&lt;/code&gt;, &lt;a href=&quot;sklearn.ensemble.extratreesregressor#sklearn.ensemble.ExtraTreesRegressor&quot;&gt;&lt;code&gt;ExtraTreesRegressor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96149455072816058e49218e0350b6b877956a12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecisionTreeRegressor&lt;/code&gt;, &lt;a href=&quot;sklearn.ensemble.randomforestregressor#sklearn.ensemble.RandomForestRegressor&quot;&gt;&lt;code&gt;RandomForestRegressor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8534c1aeb5fbe180c34331520dc31d566ff50e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GridSearchCV&lt;/code&gt; and &lt;code&gt;RandomizedSearchCV&lt;/code&gt; allow specifying multiple metrics for the &lt;code&gt;scoring&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef0a2574abfe59f86d44fbc0b51cabc1f1860ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KernelPCA&lt;/code&gt; object used to implement the embedding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a4e678d2b16ad0494407957d6f8b86a41fc8de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L. Hubert and P. Arabie, Comparing Partitions, Journal of Classification 1985&lt;/code&gt;&lt;a href=&quot;http://link.springer.com/article/10.1007%2FBF01908075&quot;&gt;http://link.springer.com/article/10.1007%2FBF01908075&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f1a71b8d284eebece175fa8ff26e3e3dfa0b73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LabelEncoder&lt;/code&gt; can be used to normalize labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b7a2b22c9ddf5fcd14c43e4acd6f171c41d643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearSVC&lt;/code&gt; minimizes the squared hinge loss while &lt;code&gt;SVC&lt;/code&gt; minimizes the regular hinge loss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9fde30bf83ccfa8ac35869eb027dcab0328768" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearSVC&lt;/code&gt; uses the One-vs-All (also known as One-vs-Rest) multiclass reduction while &lt;code&gt;SVC&lt;/code&gt; uses the One-vs-One multiclass reduction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f97ba5ef050a536550d5d4541db1c18f83ddc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaxAbsScaler&lt;/code&gt; differs from the previous scaler such that the absolute values are mapped in the range [0, 1]. On positive only data, this scaler behaves similarly to &lt;code&gt;MinMaxScaler&lt;/code&gt; and therefore also suffers from the presence of large outliers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6059d4a4aa39beae73295fac84b4c22ecc380a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MinMaxScaler&lt;/code&gt; rescales the data set such that all feature values are in the range [0, 1] as shown in the right panel below. However, this scaling compress all inliers in the narrow range [0, 0.005] for the transformed number of households.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a753f0697c08343ae3107502c9045d4b1ea43f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt;, &lt;code&gt;N_t&lt;/code&gt;, &lt;code&gt;N_t_R&lt;/code&gt; and &lt;code&gt;N_t_L&lt;/code&gt; all refer to the weighted sum, if &lt;code&gt;sample_weight&lt;/code&gt; is passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019aad4f095bafa7cac2cde80cb8d24a4799d1d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; is usually used as the placeholder for missing values. However, it enforces the data type to be float. The parameter &lt;code&gt;missing_values&lt;/code&gt; allows to specify other placeholder such as integer. In the following example, we will use &lt;code&gt;-1&lt;/code&gt; as missing values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf8009690ef46deab588209f9cdf1f310176555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; : the final clustering step is not performed and the subclusters are returned as they are.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb33ff0cb805975fcb0d3dfa5c288c9d2016e071" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c156a30c5084aa738d557cda77f77bb426e340d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4970ea30dda9a4c3be80b0a163aecfeb5afecf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Perceptron&lt;/code&gt; is a classification algorithm which shares the same underlying implementation with &lt;code&gt;SGDClassifier&lt;/code&gt;. In fact, &lt;code&gt;Perceptron()&lt;/code&gt; is equivalent to &lt;code&gt;SGDClassifier(loss=&amp;rdquo;perceptron&amp;rdquo;, eta0=1, learning_rate=&amp;rdquo;constant&amp;rdquo;, penalty=None)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ddc0f06c6335bec24779db94892e5faf3dfc980" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PowerTransformer&lt;/code&gt; applies a power transformation to each feature to make the data more Gaussian-like. Currently, &lt;code&gt;PowerTransformer&lt;/code&gt; implements the Yeo-Johnson and Box-Cox transforms. The power transform finds the optimal scaling factor to stabilize variance and mimimize skewness through maximum likelihood estimation. By default, &lt;code&gt;PowerTransformer&lt;/code&gt; also applies zero-mean, unit variance normalization to the transformed output. Note that Box-Cox can only be applied to strictly positive data. Income and number of households happen to be strictly positive, but if negative values are present the Yeo-Johnson transformed is to be preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014bce629fb152bd60377cad98af767653db6344" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QuantileTransformer&lt;/code&gt; applies a non-linear transformation such that the probability density function of each feature will be mapped to a uniform distribution. In this case, all the data will be mapped in the range [0, 1], even the outliers which cannot be distinguished anymore from the inliers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c84733d525146e0a9314d69847952b401d4c432" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QuantileTransformer&lt;/code&gt; has an additional &lt;code&gt;output_distribution&lt;/code&gt; parameter allowing to match a Gaussian distribution instead of a uniform distribution. Note that this non-parametetric transformer introduces saturation artifacts for extreme values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63edb42a2c2def0038442f8e4ac0abaafd8bdcce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QuantileTransformer&lt;/code&gt; provides non-linear transformations in which distances between marginal outliers and inliers are shrunk. &lt;code&gt;PowerTransformer&lt;/code&gt; provides non-linear transformations in which data is mapped to a normal distribution to stabilize variance and minimize skewness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f932cdebcd9b6475417c550b08c593d76412042" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S = np.exp(-D * gamma)&lt;/code&gt;, where one heuristic for choosing &lt;code&gt;gamma&lt;/code&gt; is &lt;code&gt;1 / num_features&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a1c444aed5f3493f83498754dab380e553bf1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StandardScaler&lt;/code&gt; removes the mean and scales the data to unit variance. However, the outliers have an influence when computing the empirical mean and standard deviation which shrink the range of the feature values as shown in the left figure below. Note in particular that because the outliers on each feature have different magnitudes, the spread of the transformed data on each feature is very different: most of the data lie in the [-2, 4] range for the transformed median income feature while the same data is squeezed in the smaller [-0.2, 0.2] range for the transformed number of households.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a0fc4648c6b3cfbaf956fe01191c00bd1c0695" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StandardScaler&lt;/code&gt; therefore cannot guarantee balanced feature scales in the presence of outliers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871e8566e234ffc18af4a785c809ecded37d0703" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TransformedTargetRegressor&lt;/code&gt; transforms the targets &lt;code&gt;y&lt;/code&gt; before fitting a regression model. The predictions are mapped back to the original space via an inverse transform. It takes as an argument the regressor that will be used for prediction, and the transformer that will be applied to the target variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684099d846a7c949919b135d785df7b7ed29477e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; specifies the order. If &lt;code&gt;X&lt;/code&gt; is non-decreasing then &lt;code&gt;y_&lt;/code&gt; is non-decreasing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf3ec5909e8aeaa2232852ab64689cc8a316118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; with columns of zeros inserted where features would have been removed by &lt;code&gt;transform&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069715995ace0f129d451e3f5dcfd32e5c4a5a7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X[:, i]&lt;/code&gt;. Each feature value should be in &lt;code&gt;range(n_values[i])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5479793001abf713c4bf4fb1b3058e8ee0b0e3a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Zhang, Z. &amp;amp; Wang, J. MLLE: Modified Locally Linear Embedding Using Multiple Weights.&lt;/code&gt;&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.70.382&quot;&gt;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.70.382&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe33307304114bb9759d05e3eab5bcca2a36fd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__(X, Y=None, eval_gradient=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1078&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a583c8a868aaed38bcb3fb9cb9b314a2c64f8874" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__(X, Y=None, eval_gradient=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1191&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07c92e725a1ff5b9d3a7e2e670b3907b6b41724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__(X, Y=None, eval_gradient=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1304&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b7f5e6ee4b6fb974620edeba8b652132b473c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__(X, Y=None, eval_gradient=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1454&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f56b31ff3afe4cba4f295d3a866635d5b620f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__(X, Y=None, eval_gradient=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1568&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbc8e0db2424a1ba2cd532c96cfb3916d04b764" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__(X, Y=None, eval_gradient=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1671&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1357d1fa9f1ce497b9e92a320f6c8d483e32478c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__(X, Y=None, eval_gradient=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1806&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591b6c9ff5c96817277b26ae543ce75af1df9aa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__(X, Y=None, eval_gradient=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L335&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10fb185a1e24e3326cccaa86f95ca59d2dc49c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__(X, Y=None, eval_gradient=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L470&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a142f0dd419694aa532938dc728726ad42ac05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__(X, Y=None, eval_gradient=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L663&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a812f13bff5cf64a3520ed64a4eda0af4df0cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__(X, Y=None, eval_gradient=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L737&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f802372d9b76a9e85cb882ef394b718993e0937" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__(X, Y=None, eval_gradient=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L889&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e872a36d7f87868cfd5e02301404521e5e812e09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__(X, Y=None, eval_gradient=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L981&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd730a5258454ed521402f0d8033da0f96d2492d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__&lt;/code&gt;(iterable)</source>
          <target state="translated">&lt;code&gt;__call__&lt;/code&gt;(iterable)</target>
        </trans-unit>
        <trans-unit id="78adf99ff146563b0ba9263c1b7e8d8f268e8679" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__&lt;/code&gt;(urlname)</source>
          <target state="translated">&lt;code&gt;__call__&lt;/code&gt;(urlname)</target>
        </trans-unit>
        <trans-unit id="e3de9c3875bf6d771d71d620bb27ef343d4a82d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__()&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L69&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;__init__()&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L69&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec7158858105887a87d39b2fe63c8dfd09ffb022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__()&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L1853&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;__init__()&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L1853&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d91a426dfef6efb302f00ca4b02e2e588c1f4b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(*args, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/utils/deprecation.py#L57&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f958ad35bb8893b6d429a678d76ffed95f5d9f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(C=1.0, fit_intercept=True, max_iter=None, tol=None, early_stopping=False, validation_fraction=0.1, n_iter_no_change=5, shuffle=True, verbose=0, loss=&amp;rsquo;epsilon_insensitive&amp;rsquo;, epsilon=0.1, random_state=None, warm_start=False, average=False, n_iter=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/passive_aggressive.py#L406&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df115d76f00c2e3f97e23851ab15e8b47e09502" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(C=1.0, fit_intercept=True, max_iter=None, tol=None, early_stopping=False, validation_fraction=0.1, n_iter_no_change=5, shuffle=True, verbose=0, loss=&amp;rsquo;hinge&amp;rsquo;, n_jobs=None, random_state=None, warm_start=False, class_weight=None, average=False, n_iter=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/passive_aggressive.py#L169&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df6c9574b10bffda75b52b71db6e8783e7716cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(C=1.0, kernel=&amp;rsquo;rbf&amp;rsquo;, degree=3, gamma=&amp;rsquo;auto_deprecated&amp;rsquo;, coef0=0.0, shrinking=True, probability=False, tol=0.001, cache_size=200, class_weight=None, verbose=False, max_iter=-1, decision_function_shape=&amp;rsquo;ovr&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/svm/classes.py#L585&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b062298e0e22a3159ea7c4937d867023a8ab8170" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(Cs=10, fit_intercept=True, cv=&amp;rsquo;warn&amp;rsquo;, dual=False, penalty=&amp;rsquo;l2&amp;rsquo;, scoring=None, solver=&amp;rsquo;lbfgs&amp;rsquo;, tol=0.0001, max_iter=100, class_weight=None, n_jobs=None, verbose=0, refit=True, intercept_scaling=1.0, multi_class=&amp;rsquo;warn&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/logistic.py#L1658&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a6f16671e9aca176f597b8bbc2b3c49baa23a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alpha=0.01, mode=&amp;rsquo;cd&amp;rsquo;, tol=0.0001, enet_tol=0.0001, max_iter=100, verbose=False, assume_centered=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/graph_lasso_.py#L335&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad483678db8c39b6cb522469c1294044847873cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alpha=1, kernel=&amp;rsquo;linear&amp;rsquo;, gamma=None, degree=3, coef0=1, kernel_params=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/kernel_ridge.py#L108&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7efc536606f5dc1702c00df96dab6f7b8841c39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alpha=1.0, binarize=0.0, fit_prior=True, class_prior=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/naive_bayes.py#L910&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5703d138d3f1286b43b9487e9bf8caa134d0ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alpha=1.0, fit_intercept=True, normalize=False, copy_X=True, max_iter=1000, tol=0.0001, warm_start=False, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L1929&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059d894a17ea75a0251d9047bed5bb8a18d63bb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alpha=1.0, fit_intercept=True, normalize=False, copy_X=True, max_iter=None, tol=0.001, class_weight=None, solver=&amp;rsquo;auto&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/ridge.py#L803&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6cd8e86946a072445b7b8ea24f157ec51934a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alpha=1.0, fit_intercept=True, normalize=False, copy_X=True, max_iter=None, tol=0.001, solver=&amp;rsquo;auto&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/ridge.py#L654&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13079131175f8ab4d7979c08234fed0e3acbcfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alpha=1.0, fit_intercept=True, normalize=False, precompute=False, copy_X=True, max_iter=1000, tol=0.0001, warm_start=False, positive=False, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L931&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00e7d5fbfec05abaae2e0ed42b0008ce34f224b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alpha=1.0, fit_intercept=True, verbose=False, normalize=True, precompute=&amp;rsquo;auto&amp;rsquo;, max_iter=500, eps=2.220446049250313e-16, copy_X=True, fit_path=True, positive=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/least_angle.py#L834&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32aa80493741221192a51baa046f0d80557922e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alpha=1.0, fit_prior=True, class_prior=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/naive_bayes.py#L706&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad43a4121f32aeb59640bc1791ce4ab1f1d9d12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alpha=1.0, fit_prior=True, class_prior=None, norm=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/naive_bayes.py#L802&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0087544825b0186afdabd669644576a017963305" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alpha=1.0, l1_ratio=0.5, fit_intercept=True, normalize=False, copy_X=True, max_iter=1000, tol=0.0001, warm_start=False, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L1741&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5a61ae6e16e3d0f56c312a9a62f82a1833efb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alpha=1.0, l1_ratio=0.5, fit_intercept=True, normalize=False, precompute=False, max_iter=1000, copy_X=True, tol=0.0001, warm_start=False, positive=False, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L652&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1924ac5349b45b3bbd4e8609e97ec1511b5acef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alphas=(0.1, 1.0, 10.0), fit_intercept=True, normalize=False, scoring=None, cv=None, class_weight=None, store_cv_values=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/ridge.py#L1382&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af5802860f6b2349bde094ca0c14f330fb8b551" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alphas=(0.1, 1.0, 10.0), fit_intercept=True, normalize=False, scoring=None, cv=None, gcv_mode=None, store_cv_values=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/ridge.py#L1111&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca92d087b499d3d7afe11e34100271d65960d4ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(alphas=4, n_refinements=4, cv=&amp;rsquo;warn&amp;rsquo;, tol=0.0001, enet_tol=0.0001, max_iter=100, mode=&amp;rsquo;cd&amp;rsquo;, n_jobs=None, verbose=False, assume_centered=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/graph_lasso_.py#L576&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ed26b4d81584cd0825720ad5a35bdb07a7f949" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(bandwidth=1.0, algorithm=&amp;rsquo;auto&amp;rsquo;, kernel=&amp;rsquo;gaussian&amp;rsquo;, metric=&amp;rsquo;euclidean&amp;rsquo;, atol=0, rtol=0, breadth_first=True, leaf_size=40, metric_params=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/kde.py#L73&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c90c2c626f96f43b24401d56f9a0ef32c3b8cd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(bandwidth=None, seeds=None, bin_seeding=False, min_bin_freq=1, cluster_all=True, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/mean_shift_.py#L400&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ca14bdc067224a10a22e7f51a125eb0c2b0ee6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(base_estimator, order=None, cv=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/multioutput.py#L372&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b0c723a6f46ba38c1e99575356cfe8dae5cab4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(base_estimator=None, method=&amp;rsquo;sigmoid&amp;rsquo;, cv=&amp;rsquo;warn&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/calibration.py#L106&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6c148a0410a1bf1330842462843291db5cd76e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(base_estimator=None, min_samples=None, residual_threshold=None, is_data_valid=None, is_model_valid=None, max_trials=100, max_skips=inf, stop_n_inliers=inf, stop_score=inf, stop_probability=0.99, loss=&amp;rsquo;absolute_loss&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/ransac.py#L208&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acd521e507e8b2181a07fa62e945e3379cea78e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(base_estimator=None, n_estimators=10, max_samples=1.0, max_features=1.0, bootstrap=True, bootstrap_features=False, oob_score=False, warm_start=False, n_jobs=None, random_state=None, verbose=0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/bagging.py#L548&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbf4f66c4681bb9b35906eba5a5c07824b25b9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(base_estimator=None, n_estimators=10, max_samples=1.0, max_features=1.0, bootstrap=True, bootstrap_features=False, oob_score=False, warm_start=False, n_jobs=None, random_state=None, verbose=0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/bagging.py#L918&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f04a5b98174f26d9b6a63f96c19515ff7b63e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(base_estimator=None, n_estimators=50, learning_rate=1.0, algorithm=&amp;rsquo;SAMME.R&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/weight_boosting.py#L372&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d47d9cf6a3b88dcacf7a4cd16c7821a6b6c672" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(base_estimator=None, n_estimators=50, learning_rate=1.0, loss=&amp;rsquo;linear&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/weight_boosting.py#L918&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff523f71f8f8d8df5f5d8388d70293106f3db4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(categories=&amp;rsquo;auto&amp;rsquo;, dtype=&amp;lt;class &amp;lsquo;numpy.float64&amp;rsquo;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/_encoders.py#L754&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96de1c92eb39f884a639c60c6e448ee99d8eb05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(classes=None, sparse_output=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/label.py#L808&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e981433ea3c27e1519bfedb66d7a493770ee84c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(constant_value=1.0, constant_value_bounds=(1e-05, 100000.0))&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L972&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea410d23b716d5323adeaefc5569e6d9159a73d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L862&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;__init__(copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L862&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c2cd7e1e1f4f4d4c07515d20f6defa8c48606a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(copy=True, fit_intercept=True, normalize=True, max_iter=None, cv=&amp;rsquo;warn&amp;rsquo;, n_jobs=None, verbose=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/omp.py#L855&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a1793f8e91043172e7f0267d977a14938efb2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(copy=True, with_mean=True, with_std=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L583&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44694e9c10ce6abaeed1202f20a6c6cb4abde8d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(criterion=&amp;rsquo;aic&amp;rsquo;, fit_intercept=True, verbose=False, normalize=True, precompute=&amp;rsquo;auto&amp;rsquo;, max_iter=500, eps=2.220446049250313e-16, copy_X=True, positive=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/least_angle.py#L1474&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a98e3c73cf44a1a602ddcfe67f1e2fd81d1b106" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(criterion=&amp;rsquo;gini&amp;rsquo;, splitter=&amp;rsquo;best&amp;rsquo;, max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=None, random_state=None, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, class_weight=None, presort=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/tree/tree.py#L730&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5581ad77d79eab4bfb76a3119b84d62d78dd82a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(criterion=&amp;rsquo;gini&amp;rsquo;, splitter=&amp;rsquo;random&amp;rsquo;, max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=&amp;rsquo;auto&amp;rsquo;, random_state=None, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, class_weight=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/tree/tree.py#L1298&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde6f64eb62c4dc43c32dad84d2893011f52b28e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(criterion=&amp;rsquo;mse&amp;rsquo;, splitter=&amp;rsquo;best&amp;rsquo;, max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=None, random_state=None, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, presort=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/tree/tree.py#L1073&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7f5ad9ef4bc1b627853c457c47e2d309a6d527" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(criterion=&amp;rsquo;mse&amp;rsquo;, splitter=&amp;rsquo;random&amp;rsquo;, max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=&amp;rsquo;auto&amp;rsquo;, random_state=None, min_impurity_decrease=0.0, min_impurity_split=None, max_leaf_nodes=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/tree/tree.py#L1466&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885daf1d80f55517d99a3d4be98cf45ad1c885e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(damping=0.5, max_iter=200, convergence_iter=15, copy=True, preference=None, affinity=&amp;rsquo;euclidean&amp;rsquo;, verbose=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/affinity_propagation_.py#L337&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57409da2e4965ca00eaa76a561e67784b7d8f661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(degree=2, interaction_only=False, include_bias=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L1366&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae21f936b3e8b1adbace718d7161441b777eaf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(dictionary, transform_algorithm=&amp;rsquo;omp&amp;rsquo;, transform_n_nonzero_coefs=None, transform_alpha=None, split_sign=False, n_jobs=None, positive_code=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/dict_learning.py#L983&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda2669f627e55f98cddf33965285329e09c4a23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(dtype=&amp;lt;class &amp;lsquo;numpy.float64&amp;rsquo;&amp;gt;, separator=&amp;rsquo;=&amp;rsquo;, sparse=True, sort=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/dict_vectorizer.py#L96&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53d90918aee011fdc5184ceef57481ed82d083c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(eps=0.001, n_alphas=100, alphas=None, fit_intercept=True, normalize=False, max_iter=1000, tol=0.0001, copy_X=True, cv=&amp;rsquo;warn&amp;rsquo;, verbose=False, n_jobs=None, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L2277&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f42d04cbfb38f836c3fe28acacf7ba25992956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(eps=0.001, n_alphas=100, alphas=None, fit_intercept=True, normalize=False, precompute=&amp;rsquo;auto&amp;rsquo;, max_iter=1000, tol=0.0001, copy_X=True, cv=&amp;rsquo;warn&amp;rsquo;, verbose=False, n_jobs=None, positive=False, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L1401&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1fe898e6b63df7499ff3eedf8eb59ccd1b43c5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(eps=0.5, min_samples=5, metric=&amp;rsquo;euclidean&amp;rsquo;, metric_params=None, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, p=None, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/dbscan_.py#L287&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a000c06d4ca88ed930c65a441f5d263934193e27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(epsilon=0.0, tol=0.0001, C=1.0, loss=&amp;rsquo;epsilon_insensitive&amp;rsquo;, fit_intercept=True, intercept_scaling=1.0, dual=True, verbose=0, random_state=None, max_iter=1000)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/svm/classes.py#L361&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f90e5b423bb3b2fe703157c0422d90ccd70f6f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(epsilon=1.35, max_iter=100, alpha=0.0001, warm_start=False, fit_intercept=True, tol=1e-05)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/huber.py#L226&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a67c72748114f83736d0d2b35a9a73bb8e2664" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(estimator, code_size=1.5, random_state=None, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/multiclass.py#L701&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e166c872cce0cd4bb37a9a7381b2658a7b41d582" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(estimator, n_features_to_select=None, step=1, verbose=0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/rfe.py#L117&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5634355b78810eccf63075c309934cca83c38a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(estimator, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/multiclass.py#L179&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f8cb3f55b0118d2fb6314f3d8cd99a51d1ff11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(estimator, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/multiclass.py#L474&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021acd6be556ed425a34a3490dc49d7f96fdb73d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(estimator, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/multioutput.py#L223&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7252cae6fd7a7620f314b0b12b2c075c38771a99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(estimator, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/multioutput.py#L314&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402fce5e24be97b2b21cf5314c511160d94cf5cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(estimator, param_distributions, n_iter=10, scoring=None, fit_params=None, n_jobs=None, iid=&amp;rsquo;warn&amp;rsquo;, refit=True, cv=&amp;rsquo;warn&amp;rsquo;, verbose=0, pre_dispatch=&amp;lsquo;2*n_jobs&amp;rsquo;, random_state=None, error_score=&amp;rsquo;raise-deprecating&amp;rsquo;, return_train_score=&amp;rsquo;warn&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_search.py#L1497&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42192959542ce58a98b041c6271916bb8ac4228b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(estimator, param_grid, scoring=None, fit_params=None, n_jobs=None, iid=&amp;rsquo;warn&amp;rsquo;, refit=True, cv=&amp;rsquo;warn&amp;rsquo;, verbose=0, pre_dispatch=&amp;lsquo;2*n_jobs&amp;rsquo;, error_score=&amp;rsquo;raise-deprecating&amp;rsquo;, return_train_score=&amp;rsquo;warn&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_search.py#L1177&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf5bbc84f9337092a4896d748cb4aac481d7ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(estimator, step=1, min_features_to_select=1, cv=&amp;rsquo;warn&amp;rsquo;, scoring=None, verbose=0, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/rfe.py#L444&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4590cf41c54f30714411fbb5ba406450b633d141" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(estimator, threshold=None, prefit=False, norm_order=1, max_features=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/from_model.py#L135&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56069d2ec12c12b7f731565eb249824d8bb12fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(estimators, voting=&amp;rsquo;hard&amp;rsquo;, weights=None, n_jobs=None, flatten_transform=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/voting_classifier.py#L127&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bf7ce05d7d6a0b1999a01010bd1602ce04ed22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(feature_range=(0, 1), copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L291&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca17afbfadc0cfc95c10ce1fe128c31dbd25e2da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(fit_intercept=True, copy_X=True, max_subpopulation=10000.0, n_subsamples=None, max_iter=300, tol=0.001, random_state=None, n_jobs=None, verbose=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/theil_sen.py#L298&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b354302d85c3bbd314ae895ec10f2ad79ae0fb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(fit_intercept=True, normalize=False, copy_X=True, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/base.py#L426&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f589954b59ca23a331f79fad49d6494f4cfc68ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(fit_intercept=True, verbose=False, max_iter=500, normalize=True, precompute=&amp;rsquo;auto&amp;rsquo;, cv=&amp;rsquo;warn&amp;rsquo;, max_n_alphas=1000, n_jobs=None, eps=2.220446049250313e-16, copy_X=True, positive=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/least_angle.py#L1093&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df69719fb340c54b7fd303734f440ff3f225452b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(fit_intercept=True, verbose=False, max_iter=500, normalize=True, precompute=&amp;rsquo;auto&amp;rsquo;, cv=&amp;rsquo;warn&amp;rsquo;, max_n_alphas=1000, n_jobs=None, eps=2.220446049250313e-16, copy_X=True, positive=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/least_angle.py#L1338&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd7f0f042c6eb8d7c38bc7a24c6246d778415f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(fit_intercept=True, verbose=False, normalize=True, precompute=&amp;rsquo;auto&amp;rsquo;, n_nonzero_coefs=500, eps=2.220446049250313e-16, copy_X=True, fit_path=True, positive=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/least_angle.py#L595&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305b5a15dd5b425632c14e63e27d375810e4f09c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(func=None, inverse_func=None, validate=None, accept_sparse=False, pass_y=&amp;rsquo;deprecated&amp;rsquo;, check_inverse=True, kw_args=None, inv_kw_args=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/_function_transformer.py#L81&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fe78aa1a51632a3e31c8b386e3f8e7797aad1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(gamma=1.0, gamma_bounds=(1e-05, 100000.0), metric=&amp;rsquo;linear&amp;rsquo;, pairwise_kernels_kwargs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1795&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a03dd39f387c2a5bb7bd8042965b18800a028f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(gamma=1.0, n_components=100, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/kernel_approximation.py#L78&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b9add1eb319b7058ac2d67d01b872e8ae72bfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(hidden_layer_sizes=(100, ), activation=&amp;rsquo;relu&amp;rsquo;, solver=&amp;rsquo;adam&amp;rsquo;, alpha=0.0001, batch_size=&amp;rsquo;auto&amp;rsquo;, learning_rate=&amp;rsquo;constant&amp;rsquo;, learning_rate_init=0.001, power_t=0.5, max_iter=200, shuffle=True, random_state=None, tol=0.0001, verbose=False, warm_start=False, momentum=0.9, nesterovs_momentum=True, early_stopping=False, validation_fraction=0.1, beta_1=0.9, beta_2=0.999, epsilon=1e-08, n_iter_no_change=10)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neural_network/multilayer_perceptron.py#L1268&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04daf008717c028e81059d6c62fd358a72caa9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(hidden_layer_sizes=(100, ), activation=&amp;rsquo;relu&amp;rsquo;, solver=&amp;rsquo;adam&amp;rsquo;, alpha=0.0001, batch_size=&amp;rsquo;auto&amp;rsquo;, learning_rate=&amp;rsquo;constant&amp;rsquo;, learning_rate_init=0.001, power_t=0.5, max_iter=200, shuffle=True, random_state=None, tol=0.0001, verbose=False, warm_start=False, momentum=0.9, nesterovs_momentum=True, early_stopping=False, validation_fraction=0.1, beta_1=0.9, beta_2=0.999, epsilon=1e-08, n_iter_no_change=10)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neural_network/multilayer_perceptron.py#L888&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06606dccb7df687c2653f1c5b4c2b44ca22314e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(input=&amp;rsquo;content&amp;rsquo;, encoding=&amp;rsquo;utf-8&amp;rsquo;, decode_error=&amp;rsquo;strict&amp;rsquo;, strip_accents=None, lowercase=True, preprocessor=None, tokenizer=None, analyzer=&amp;rsquo;word&amp;rsquo;, stop_words=None, token_pattern=&amp;rsquo;(?u)\b\w\w+\b&amp;rsquo;, ngram_range=(1, 1), max_df=1.0, min_df=1, max_features=None, vocabulary=None, binary=False, dtype=&amp;lt;class &amp;lsquo;numpy.float64&amp;rsquo;&amp;gt;, norm=&amp;rsquo;l2&amp;rsquo;, use_idf=True, smooth_idf=True, sublinear_tf=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L1471&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3547c415a675b5022000d3de0322b287db6ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(input=&amp;rsquo;content&amp;rsquo;, encoding=&amp;rsquo;utf-8&amp;rsquo;, decode_error=&amp;rsquo;strict&amp;rsquo;, strip_accents=None, lowercase=True, preprocessor=None, tokenizer=None, stop_words=None, token_pattern=&amp;rsquo;(?u)\b\w\w+\b&amp;rsquo;, ngram_range=(1, 1), analyzer=&amp;rsquo;word&amp;rsquo;, max_df=1.0, min_df=1, max_features=None, vocabulary=None, binary=False, dtype=&amp;lt;class &amp;lsquo;numpy.int64&amp;rsquo;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L816&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09cee59b8ef05e4963c36278dbc8f22b2d8c1a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(input=&amp;rsquo;content&amp;rsquo;, encoding=&amp;rsquo;utf-8&amp;rsquo;, decode_error=&amp;rsquo;strict&amp;rsquo;, strip_accents=None, lowercase=True, preprocessor=None, tokenizer=None, stop_words=None, token_pattern=&amp;rsquo;(?u)\b\w\w+\b&amp;rsquo;, ngram_range=(1, 1), analyzer=&amp;rsquo;word&amp;rsquo;, n_features=1048576, binary=False, norm=&amp;rsquo;l2&amp;rsquo;, alternate_sign=True, non_negative=False, dtype=&amp;lt;class &amp;lsquo;numpy.float64&amp;rsquo;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L523&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26a8f13e592efedcac1b971574d699fd7e80567" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(k1, k2)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L547&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c2a7293b79a1f45d4a281c713c626c9d90e9ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(kernel, exponent)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L811&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce82252ff9a8c9e2e949b5a8b89acbbf9364746" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(kernel=&amp;rsquo;rbf&amp;rsquo;, degree=3, gamma=&amp;rsquo;auto_deprecated&amp;rsquo;, coef0=0.0, tol=0.001, C=1.0, epsilon=0.1, shrinking=True, cache_size=200, verbose=False, max_iter=-1)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/svm/classes.py#L870&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a9acac0f6463007e5202b5ee25213bfc656803" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(kernel=&amp;rsquo;rbf&amp;rsquo;, degree=3, gamma=&amp;rsquo;auto_deprecated&amp;rsquo;, coef0=0.0, tol=0.001, nu=0.5, shrinking=True, cache_size=200, verbose=False, max_iter=-1, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/svm/classes.py#L1099&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a07471bec2f28adf9f9b94e469af202df7c182c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(kernel=&amp;rsquo;rbf&amp;rsquo;, gamma=20, n_neighbors=7, alpha=0.2, max_iter=30, tol=0.001, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/semi_supervised/label_propagation.py#L510&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77e5cf0b31cc176f5a735931e744dbb392b44c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(kernel=&amp;rsquo;rbf&amp;rsquo;, gamma=20, n_neighbors=7, alpha=None, max_iter=1000, tol=0.001, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/semi_supervised/label_propagation.py#L390&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d075c5ae30224cf270b63a14419d51357718e058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(kernel=&amp;rsquo;rbf&amp;rsquo;, gamma=None, coef0=None, degree=None, kernel_params=None, n_components=100, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/kernel_approximation.py#L532&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db0d2b4c62e61a6692e6f77d1eb68400d001c81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(kernel=None, alpha=1e-10, optimizer=&amp;rsquo;fmin_l_bfgs_b&amp;rsquo;, n_restarts_optimizer=0, normalize_y=False, copy_X_train=True, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/gpr.py#L150&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7500f7dd546aa89b832bdffc5342bc8ab5b8d774" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(kernel=None, optimizer=&amp;rsquo;fmin_l_bfgs_b&amp;rsquo;, n_restarts_optimizer=0, max_iter_predict=100, warm_start=False, copy_X_train=True, random_state=None, multi_class=&amp;rsquo;one_vs_rest&amp;rsquo;, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/gpc.py#L578&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6222395c88e3140e72cd65646f2c31d962b8364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(kernels)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L411&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;__init__(kernels)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L411&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f61639d0d3a8e85837472fa5ab3b618863f51b17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(l1_ratio=0.5, eps=0.001, n_alphas=100, alphas=None, fit_intercept=True, normalize=False, max_iter=1000, tol=0.0001, cv=&amp;rsquo;warn&amp;rsquo;, copy_X=True, verbose=0, n_jobs=None, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L2111&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c319b53642d716823577d8aa86b50a176e3f44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(l1_ratio=0.5, eps=0.001, n_alphas=100, alphas=None, fit_intercept=True, normalize=False, precompute=&amp;rsquo;auto&amp;rsquo;, max_iter=1000, tol=0.0001, cv=&amp;rsquo;warn&amp;rsquo;, copy_X=True, verbose=0, n_jobs=None, positive=False, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L1599&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc127e95ebda185f7c02c81ed0358139acb207f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(length_scale=1.0, alpha=1.0, length_scale_bounds=(1e-05, 100000.0), alpha_bounds=(1e-05, 100000.0))&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1438&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a665d2293bf232d0b68e48f30546f07c025456d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(length_scale=1.0, length_scale_bounds=(1e-05, 100000.0))&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1174&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8996db203c76041ddd95eefb50b915830b284245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(length_scale=1.0, length_scale_bounds=(1e-05, 100000.0), nu=1.5)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1299&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d55b541d5917ddb5804cdc55546e2f4b91be01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(length_scale=1.0, periodicity=1.0, length_scale_bounds=(1e-05, 100000.0), periodicity_bounds=(1e-05, 100000.0))&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1550&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7b60458517208b8ff3f67211a0d302056a4ed8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(location=None, backend=&amp;rsquo;local&amp;rsquo;, cachedir=None, mmap_mode=None, compress=False, verbose=1, bytes_limit=None, backend_options=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/externals/joblib/memory.py#L842&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddafba4b1e493b917dcfd9409000fef31b54f4f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(loss=&amp;rsquo;deviance&amp;rsquo;, learning_rate=0.1, n_estimators=100, subsample=1.0, criterion=&amp;rsquo;friedman_mse&amp;rsquo;, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_depth=3, min_impurity_decrease=0.0, min_impurity_split=None, init=None, random_state=None, max_features=None, verbose=0, max_leaf_nodes=None, warm_start=False, presort=&amp;rsquo;auto&amp;rsquo;, validation_fraction=0.1, n_iter_no_change=None, tol=0.0001)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/gradient_boosting.py#L1935&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77a104bce9876094ace79442f95167bcfc3d550" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(loss=&amp;rsquo;hinge&amp;rsquo;, penalty=&amp;rsquo;l2&amp;rsquo;, alpha=0.0001, l1_ratio=0.15, fit_intercept=True, max_iter=None, tol=None, shuffle=True, verbose=0, epsilon=0.1, n_jobs=None, random_state=None, learning_rate=&amp;rsquo;optimal&amp;rsquo;, eta0=0.0, power_t=0.5, early_stopping=False, validation_fraction=0.1, n_iter_no_change=5, class_weight=None, warm_start=False, average=False, n_iter=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/stochastic_gradient.py#L959&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdd1a8fcb66b6b221095f05a0e61d243d5fc119" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(loss=&amp;rsquo;ls&amp;rsquo;, learning_rate=0.1, n_estimators=100, subsample=1.0, criterion=&amp;rsquo;friedman_mse&amp;rsquo;, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_depth=3, min_impurity_decrease=0.0, min_impurity_split=None, init=None, random_state=None, max_features=None, alpha=0.9, verbose=0, max_leaf_nodes=None, warm_start=False, presort=&amp;rsquo;auto&amp;rsquo;, validation_fraction=0.1, n_iter_no_change=None, tol=0.0001)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/gradient_boosting.py#L2389&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb61fae00bdc3e4ac22f395b490be6b6195e0df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(loss=&amp;rsquo;squared_loss&amp;rsquo;, penalty=&amp;rsquo;l2&amp;rsquo;, alpha=0.0001, l1_ratio=0.15, fit_intercept=True, max_iter=None, tol=None, shuffle=True, verbose=0, epsilon=0.1, random_state=None, learning_rate=&amp;rsquo;invscaling&amp;rsquo;, eta0=0.01, power_t=0.25, early_stopping=False, validation_fraction=0.1, n_iter_no_change=5, warm_start=False, average=False, n_iter=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/stochastic_gradient.py#L1558&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b1cd1569d1f009ecfb1fc90ba72e6a08688f21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(method=&amp;rsquo;yeo-johnson&amp;rsquo;, standardize=True, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L2555&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0cc0336fdbae50291271c4193c3c4b12f3c5bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(metric=&amp;rsquo;euclidean&amp;rsquo;, shrink_threshold=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/nearest_centroid.py#L81&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b834c1bd88984c5fe203deab37ad44d11657932f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(missing_values=nan, features=&amp;rsquo;missing-only&amp;rsquo;, sparse=&amp;rsquo;auto&amp;rsquo;, error_on_new=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/impute.py#L471&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23f5d9dddafafd9ca39037745176fc2462d1fc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(missing_values=nan, strategy=&amp;rsquo;mean&amp;rsquo;, fill_value=None, verbose=0, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/impute.py#L163&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230b3dc6a19afe70308d71ac16b6f21749301820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_bins=5, encode=&amp;rsquo;onehot&amp;rsquo;, strategy=&amp;rsquo;quantile&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/_discretization.py#L119&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbb4eaddcf5aad0f1a72556d26af285d1f77b3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_clusters=2, affinity=&amp;rsquo;euclidean&amp;rsquo;, memory=None, connectivity=None, compute_full_tree=&amp;rsquo;auto&amp;rsquo;, linkage=&amp;rsquo;ward&amp;rsquo;, pooling_func=&amp;lt;function mean&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/hierarchical.py#L938&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95deb45cc2e99461bd804e94f884ec5f273a17e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_clusters=2, affinity=&amp;rsquo;euclidean&amp;rsquo;, memory=None, connectivity=None, compute_full_tree=&amp;rsquo;auto&amp;rsquo;, linkage=&amp;rsquo;ward&amp;rsquo;, pooling_func=&amp;rsquo;deprecated&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/hierarchical.py#L752&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb40dc9392e21dcbf3f4570f187dae63d30390e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_clusters=3, method=&amp;rsquo;bistochastic&amp;rsquo;, n_components=6, n_best=3, svd_method=&amp;rsquo;randomized&amp;rsquo;, n_svd_vecs=None, mini_batch=False, init=&amp;rsquo;k-means++&amp;rsquo;, n_init=10, n_jobs=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/bicluster.py#L431&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda3c6b3d8fcce3d6162a174d38d08f65c8b4902" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_clusters=3, svd_method=&amp;rsquo;randomized&amp;rsquo;, n_svd_vecs=None, mini_batch=False, init=&amp;rsquo;k-means++&amp;rsquo;, n_init=10, n_jobs=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/bicluster.py#L284&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e65c341e77ebed20b7cd23898451cc4abb2367d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_clusters=8, eigen_solver=None, random_state=None, n_init=10, gamma=1.0, affinity=&amp;rsquo;rbf&amp;rsquo;, n_neighbors=10, eigen_tol=0.0, assign_labels=&amp;rsquo;kmeans&amp;rsquo;, degree=3, coef0=1, kernel_params=None, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/spectral.py#L428&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c7d569ae78fad90d41ba4f0dee6022a51e6e9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_clusters=8, init=&amp;rsquo;k-means++&amp;rsquo;, max_iter=100, batch_size=100, verbose=0, compute_labels=True, random_state=None, tol=0.0, max_no_improvement=10, init_size=None, n_init=3, reassignment_ratio=0.01)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/k_means_.py#L1454&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add81e29ce6bc058c5da467c192da947b064b1f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_clusters=8, init=&amp;rsquo;k-means++&amp;rsquo;, n_init=10, max_iter=300, tol=0.0001, precompute_distances=&amp;rsquo;auto&amp;rsquo;, verbose=0, random_state=None, copy_x=True, n_jobs=None, algorithm=&amp;rsquo;auto&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/k_means_.py#L912&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31dd7e3041f6fd02e9d6e5061a76b72426032ba5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=&amp;rsquo;auto&amp;rsquo;, density=&amp;rsquo;auto&amp;rsquo;, eps=0.1, dense_output=False, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/random_projection.py#L619&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08de7748fb4bc72e26bb19822d620f19f44d713" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=&amp;rsquo;auto&amp;rsquo;, eps=0.1, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/random_projection.py#L483&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c13e425fc88792307d55eb21bc071737aa0b756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=1, covariance_type=&amp;rsquo;full&amp;rsquo;, tol=0.001, reg_covar=1e-06, max_iter=100, n_init=1, init_params=&amp;rsquo;kmeans&amp;rsquo;, weight_concentration_prior_type=&amp;rsquo;dirichlet_process&amp;rsquo;, weight_concentration_prior=None, mean_precision_prior=None, mean_prior=None, degrees_of_freedom_prior=None, covariance_prior=None, random_state=None, warm_start=False, verbose=0, verbose_interval=10)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/mixture/bayesian_mixture.py#L309&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d8f4cc3ba72b18800c36f589c2c6a125cddcda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=1, covariance_type=&amp;rsquo;full&amp;rsquo;, tol=0.001, reg_covar=1e-06, max_iter=100, n_init=1, init_params=&amp;rsquo;kmeans&amp;rsquo;, weights_init=None, means_init=None, precisions_init=None, random_state=None, warm_start=False, verbose=0, verbose_interval=10)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/mixture/gaussian_mixture.py#L589&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17861a3e6c4fa1fa848f12ffdcf29632e638d661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=10, doc_topic_prior=None, topic_word_prior=None, learning_method=&amp;rsquo;batch&amp;rsquo;, learning_decay=0.7, learning_offset=10.0, max_iter=10, batch_size=128, evaluate_every=-1, total_samples=1000000.0, perp_tol=0.1, mean_change_tol=0.001, max_doc_update_iter=100, n_jobs=None, verbose=0, random_state=None, n_topics=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/online_lda.py#L284&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac92389ebb04824ec06bf90b5df17104994ed96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=2, affinity=&amp;rsquo;nearest_neighbors&amp;rsquo;, gamma=None, random_state=None, eigen_solver=None, n_neighbors=None, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/manifold/spectral_embedding_.py#L428&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c806e88535bf418aac088938369980cbf6bd08c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=2, algorithm=&amp;rsquo;randomized&amp;rsquo;, n_iter=5, random_state=None, tol=0.0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/truncated_svd.py#L118&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4d2f98775f07d899595f2800946c650035d2d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=2, metric=True, n_init=4, max_iter=300, verbose=0, eps=0.001, n_jobs=None, random_state=None, dissimilarity=&amp;rsquo;euclidean&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/manifold/mds.py#L365&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411394100fcd2cb0dfa005c5b7978709c9bcaaac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=2, perplexity=30.0, early_exaggeration=12.0, learning_rate=200.0, n_iter=1000, n_iter_without_progress=300, min_grad_norm=1e-07, metric=&amp;rsquo;euclidean&amp;rsquo;, init=&amp;rsquo;random&amp;rsquo;, verbose=0, random_state=None, method=&amp;rsquo;barnes_hut&amp;rsquo;, angle=0.5)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/manifold/t_sne.py#L629&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563d0de8dbe2c77559ab1b958537fb71af557a12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=2, scale=True, algorithm=&amp;rsquo;nipals&amp;rsquo;, max_iter=500, tol=1e-06, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cross_decomposition/pls_.py#L736&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21a82efa086dc8b0824d3c4efb639f2dceb403f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=2, scale=True, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cross_decomposition/pls_.py#L803&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7574ceab3bd17a541eefb51249c1f3168b9020" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=2, scale=True, max_iter=500, tol=1e-06, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cross_decomposition/cca_.py#L102&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454c23642d7f27e376f994d4864ec1156705b464" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=2, scale=True, max_iter=500, tol=1e-06, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cross_decomposition/pls_.py#L590&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3edc914ae096f18fedf6fadfbac1fae423f8fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=256, learning_rate=0.1, batch_size=10, n_iter=10, verbose=0, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neural_network/rbm.py#L99&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f858bf8121d6f247801dae22b7c3db5e2a37ec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=None, algorithm=&amp;rsquo;parallel&amp;rsquo;, whiten=True, fun=&amp;rsquo;logcosh&amp;rsquo;, fun_args=None, max_iter=200, tol=0.0001, w_init=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/fastica_.py#L465&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c38b95cca7aab03aeb7bf02e2cd44a4abf895ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=None, alpha=1, max_iter=1000, tol=1e-08, fit_algorithm=&amp;rsquo;lars&amp;rsquo;, transform_algorithm=&amp;rsquo;omp&amp;rsquo;, transform_n_nonzero_coefs=None, transform_alpha=None, n_jobs=None, code_init=None, dict_init=None, verbose=False, split_sign=False, random_state=None, positive_code=False, positive_dict=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/dict_learning.py#L1141&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3613896dcad5054d551daac6e7b20cda53d0e300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=None, alpha=1, n_iter=1000, fit_algorithm=&amp;rsquo;lars&amp;rsquo;, n_jobs=None, batch_size=3, shuffle=True, dict_init=None, transform_algorithm=&amp;rsquo;omp&amp;rsquo;, transform_n_nonzero_coefs=None, transform_alpha=None, verbose=False, split_sign=False, random_state=None, positive_code=False, positive_dict=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/dict_learning.py#L1330&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aec1c54b1bf778b8a72aa2c1cbfcb5c7cf65518" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=None, alpha=1, ridge_alpha=0.01, max_iter=1000, tol=1e-08, method=&amp;rsquo;lars&amp;rsquo;, n_jobs=None, U_init=None, V_init=None, verbose=False, random_state=None, normalize_components=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/sparse_pca.py#L126&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73eda22e4956fe05b897ea3de8b553764cb3989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=None, alpha=1, ridge_alpha=0.01, n_iter=100, callback=None, batch_size=3, verbose=False, shuffle=True, n_jobs=None, method=&amp;rsquo;lars&amp;rsquo;, random_state=None, normalize_components=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/sparse_pca.py#L364&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd52a5f5e197b8fbbbcf954d0dd387e4aeb373cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=None, copy=True, whiten=False, svd_solver=&amp;rsquo;auto&amp;rsquo;, tol=0.0, iterated_power=&amp;rsquo;auto&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/pca.py#L313&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada37993c0f322d6e60eed4b99ef28c83f6f753e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=None, init=None, solver=&amp;rsquo;cd&amp;rsquo;, beta_loss=&amp;rsquo;frobenius&amp;rsquo;, tol=0.0001, max_iter=200, random_state=None, alpha=0.0, l1_ratio=0.0, verbose=0, shuffle=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/nmf.py#L1203&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1103dd0bad805a9dcfd48cc79d089f9479c99e0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=None, kernel=&amp;rsquo;linear&amp;rsquo;, gamma=None, degree=3, coef0=1, kernel_params=None, alpha=1.0, fit_inverse_transform=False, eigen_solver=&amp;rsquo;auto&amp;rsquo;, tol=0, max_iter=None, remove_zero_eig=False, random_state=None, copy_X=True, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/kernel_pca.py#L142&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98a531428ae4a5ac859a6e70d82c5238eaeeabd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=None, tol=0.01, copy=True, max_iter=1000, noise_variance_init=None, svd_method=&amp;rsquo;randomized&amp;rsquo;, iterated_power=3, random_state=0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/factor_analysis.py#L138&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4930aae02a383eb8b60621f29322ffafef55e364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_components=None, whiten=False, copy=True, batch_size=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/incremental_pca.py#L158&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348958914a83a1da30d676bbd4020e7b686b6ca5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_estimators=&amp;rsquo;warn&amp;rsquo;, criterion=&amp;rsquo;gini&amp;rsquo;, max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=&amp;rsquo;auto&amp;rsquo;, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, bootstrap=False, oob_score=False, n_jobs=None, random_state=None, verbose=0, warm_start=False, class_weight=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/forest.py#L1504&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086f561662e990f70a0dfde5423ae29afbec502e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_estimators=&amp;rsquo;warn&amp;rsquo;, criterion=&amp;rsquo;gini&amp;rsquo;, max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=&amp;rsquo;auto&amp;rsquo;, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, bootstrap=True, oob_score=False, n_jobs=None, random_state=None, verbose=0, warm_start=False, class_weight=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/forest.py#L993&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae24b1327355791e6e357fc9b7b0dca50de92f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_estimators=&amp;rsquo;warn&amp;rsquo;, criterion=&amp;rsquo;mse&amp;rsquo;, max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=&amp;rsquo;auto&amp;rsquo;, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, bootstrap=False, oob_score=False, n_jobs=None, random_state=None, verbose=0, warm_start=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/forest.py#L1726&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f701ad8f4f9aadadb6e8bd8b37f54928723a89e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_estimators=&amp;rsquo;warn&amp;rsquo;, criterion=&amp;rsquo;mse&amp;rsquo;, max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=&amp;rsquo;auto&amp;rsquo;, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, bootstrap=True, oob_score=False, n_jobs=None, random_state=None, verbose=0, warm_start=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/forest.py#L1251&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89175b650e6af3cf8b904517330274545d76f2b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_estimators=&amp;rsquo;warn&amp;rsquo;, max_depth=5, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, sparse_output=True, n_jobs=None, random_state=None, verbose=0, warm_start=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/forest.py#L1900&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b344e56f628fe00d3f8d841186179471dc55baa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_estimators=10, radius=1.0, n_candidates=50, n_neighbors=5, min_hash_match=4, radius_cutoff_ratio=0.9, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/approximate.py#L245&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2701fe3830e8e80803975caa241d640d10cb7a7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_estimators=100, max_samples=&amp;rsquo;auto&amp;rsquo;, contamination=&amp;rsquo;legacy&amp;rsquo;, max_features=1.0, bootstrap=False, n_jobs=None, behaviour=&amp;rsquo;old&amp;rsquo;, random_state=None, verbose=0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/iforest.py#L159&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99116740ae9f51e06bd9aa968244fa28e22accf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_features=1048576, input_type=&amp;rsquo;dict&amp;rsquo;, dtype=&amp;lt;class &amp;lsquo;numpy.float64&amp;rsquo;&amp;gt;, alternate_sign=True, non_negative=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/hashing.py#L96&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3fc5c47f53e3aa65671cfba7e39cd443262bcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_groups)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L941&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;__init__(n_groups)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L941&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1bea8ffd6fa3d5ef7692ca9b2e2d274e31d2a5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_iter=300, tol=0.001, alpha_1=1e-06, alpha_2=1e-06, lambda_1=1e-06, lambda_2=1e-06, compute_score=False, fit_intercept=True, normalize=False, copy_X=True, verbose=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/bayes.py#L127&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5292fb6de80c2586059d23bda2165c06ce2f99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_iter=300, tol=0.001, alpha_1=1e-06, alpha_2=1e-06, lambda_1=1e-06, lambda_2=1e-06, compute_score=False, threshold_lambda=10000.0, fit_intercept=True, normalize=False, copy_X=True, verbose=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/bayes.py#L410&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701e4c771d5ff44ff3aeed0a8021e81f419128bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_jobs=None, backend=None, verbose=0, timeout=None, pre_dispatch=&amp;lsquo;2 * n_jobs&amp;rsquo;, batch_size=&amp;rsquo;auto&amp;rsquo;, temp_folder=None, max_nbytes=&amp;lsquo;1M&amp;rsquo;, mmap_mode=&amp;rsquo;r&amp;rsquo;, prefer=None, require=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/externals/joblib/parallel.py#L650&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562bf6a61924281a52aa707d7bfbc2e822a9f72f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_neighbors=20, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, metric=&amp;rsquo;minkowski&amp;rsquo;, p=2, metric_params=None, contamination=&amp;rsquo;legacy&amp;rsquo;, novelty=False, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/lof.py#L150&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f363e9571a0e6ff410ead501817d18cb0ed4d915" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_neighbors=5, n_components=2, eigen_solver=&amp;rsquo;auto&amp;rsquo;, tol=0, max_iter=None, path_method=&amp;rsquo;auto&amp;rsquo;, neighbors_algorithm=&amp;rsquo;auto&amp;rsquo;, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/manifold/isomap.py#L104&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6278768ecd02379e9b00b484caed906ee5a09bfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_neighbors=5, n_components=2, reg=0.001, eigen_solver=&amp;rsquo;auto&amp;rsquo;, tol=1e-06, max_iter=100, method=&amp;rsquo;standard&amp;rsquo;, hessian_tol=0.0001, modified_tol=1e-12, neighbors_algorithm=&amp;rsquo;auto&amp;rsquo;, random_state=None, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/manifold/locally_linear.py#L635&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d7122427b7960f71f0d4cc6caa094f944658e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_neighbors=5, radius=1.0, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, metric=&amp;rsquo;minkowski&amp;rsquo;, p=2, metric_params=None, n_jobs=None, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/unsupervised.py#L117&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc36671120f0102d843febd52f201eec2b8260a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_neighbors=5, weights=&amp;rsquo;uniform&amp;rsquo;, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, p=2, metric=&amp;rsquo;minkowski&amp;rsquo;, metric_params=None, n_jobs=None, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/classification.py#L120&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39792cfad971a21b5af6a411a3474924a945bc15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_neighbors=5, weights=&amp;rsquo;uniform&amp;rsquo;, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, p=2, metric=&amp;rsquo;minkowski&amp;rsquo;, metric_params=None, n_jobs=None, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/regression.py#L125&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd5ee8f3ad9b1aab01018ce0cfd210056075b51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_nonzero_coefs=None, tol=None, fit_intercept=True, normalize=True, precompute=&amp;rsquo;auto&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/omp.py#L619&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411a509707a7f756551cd8b24fce55d98041569c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_quantiles=1000, output_distribution=&amp;rsquo;uniform&amp;rsquo;, ignore_implicit_zeros=False, subsample=100000, random_state=None, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L2061&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b923f993732e3438707ff1fc0889f87df47a8814" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_splits=&amp;rsquo;warn&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L495&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;__init__(n_splits=&amp;rsquo;warn&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L495&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="449a0244e88d7f149cc5e92e427e1136e4dab2a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_splits=&amp;rsquo;warn&amp;rsquo;, max_train_size=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L750&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485f923e79e9c16b5c8c58df99c1ba5fe499cdbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_splits=&amp;rsquo;warn&amp;rsquo;, shuffle=False, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L423&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f905588fd515ffb24a8cd3115fd6ed8155a01da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_splits=&amp;rsquo;warn&amp;rsquo;, shuffle=False, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L596&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3848eeda212ebcc9a6cc9df8681dcc77331710d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_splits=10, test_size=&amp;rsquo;default&amp;rsquo;, train_size=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L1198&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b030f42ea301a523d626860ccc7d90503c3d172" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_splits=10, test_size=&amp;rsquo;default&amp;rsquo;, train_size=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L1564&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955155913b29370bcbeb586c57b8ae17cdd8e835" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_splits=5, n_repeats=10, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L1138&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8be216e42c7e98248d16cd4f4865decb3965e7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_splits=5, n_repeats=10, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L1190&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306a3d193c0a9a49cbbe7700a611b45723e1e54d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_splits=5, test_size=&amp;rsquo;default&amp;rsquo;, train_size=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L1402&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf5ddf56218fec17ccc5e79c8af13ebbe07a2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(n_values=None, categorical_features=None, categories=None, sparse=True, dtype=&amp;lt;class &amp;lsquo;numpy.float64&amp;rsquo;&amp;gt;, handle_unknown=&amp;rsquo;error&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/_encoders.py#L273&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534c8993212f02c11f4fb39f9fc2f59dfea17d0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(neg_label=0, pos_label=1, sparse_output=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/label.py#L377&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63ccbdc677107b39c5958c772cf9f6451b35a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(noise_level=1.0, noise_level_bounds=(1e-05, 100000.0))&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1069&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911f21a46084b00c34abaf07dd9bf8da6c61e388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(norm=&amp;rsquo;l2&amp;rsquo;, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L1641&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c14141bac66edd3b88a8cf46e1a968ae3311170" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(norm=&amp;rsquo;l2&amp;rsquo;, use_idf=True, smooth_idf=True, sublinear_tf=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L1192&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65d7a0ab13b3a77ebc3e98ad1b6f3d18b861eb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(nu=0.5, C=1.0, kernel=&amp;rsquo;rbf&amp;rsquo;, degree=3, gamma=&amp;rsquo;auto_deprecated&amp;rsquo;, coef0=0.0, shrinking=True, tol=0.001, cache_size=200, verbose=False, max_iter=-1)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/svm/classes.py#L991&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c99a895f1c4493adf023fbba1a3f145bc0aab6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(nu=0.5, kernel=&amp;rsquo;rbf&amp;rsquo;, degree=3, gamma=&amp;rsquo;auto_deprecated&amp;rsquo;, coef0=0.0, shrinking=True, probability=False, tol=0.001, cache_size=200, class_weight=None, verbose=False, max_iter=-1, decision_function_shape=&amp;rsquo;ovr&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/svm/classes.py#L747&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb069315abe11943093dbbf68ff82b2d2ff98a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(p)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L247&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;__init__(p)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L247&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="209e96b34895232139936fed836b8b271df977fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(param_distributions, n_iter, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_search.py#L248&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dd886f909e6f9b5ca2904b3331b7d160e0941b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(param_grid)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_search.py#L95&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;__init__(param_grid)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_search.py#L95&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c1d0d7b870866d0391de081d26f2b8ea4719832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(patch_size=None, max_patches=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/image.py#L465&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04007a97c768f79740a7079018736c5c1aee83fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(penalty=&amp;rsquo;l2&amp;rsquo;, dual=False, tol=0.0001, C=1.0, fit_intercept=True, intercept_scaling=1, class_weight=None, random_state=None, solver=&amp;rsquo;warn&amp;rsquo;, max_iter=100, multi_class=&amp;rsquo;warn&amp;rsquo;, verbose=0, warm_start=False, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/logistic.py#L1223&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8564b329f13d4eaf25b62457ab522f227b4cada5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(penalty=&amp;rsquo;l2&amp;rsquo;, loss=&amp;rsquo;squared_hinge&amp;rsquo;, dual=True, tol=0.0001, C=1.0, multi_class=&amp;rsquo;ovr&amp;rsquo;, fit_intercept=True, intercept_scaling=1, class_weight=None, verbose=0, random_state=None, max_iter=1000)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/svm/classes.py#L173&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0d66e4ac43b1e26fbacfc882dc93e83c0bee05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(penalty=None, alpha=0.0001, fit_intercept=True, max_iter=None, tol=None, shuffle=True, verbose=0, eta0=1.0, n_jobs=None, random_state=0, early_stopping=False, validation_fraction=0.1, n_iter_no_change=5, class_weight=None, warm_start=False, n_iter=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/perceptron.py#L152&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e990f9989164ec4887e99e8385cbef3950a948" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(priors=None, reg_param=0.0, store_covariance=False, tol=0.0001, store_covariances=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/discriminant_analysis.py#L616&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8f306a96f58c88940b69ad48cf5467f822eac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(priors=None, var_smoothing=1e-09)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/naive_bayes.py#L164&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92bc3e51c34e4e485df16f552ba75ac37aefab2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(radius=1.0, weights=&amp;rsquo;uniform&amp;rsquo;, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, p=2, metric=&amp;rsquo;minkowski&amp;rsquo;, metric_params=None, n_jobs=None, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/regression.py#L275&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be98abb6190b922433f1ecd82f979d783298e23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(radius=1.0, weights=&amp;rsquo;uniform&amp;rsquo;, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, p=2, metric=&amp;rsquo;minkowski&amp;rsquo;, outlier_label=None, metric_params=None, n_jobs=None, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/classification.py#L325&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18786e313e69a4531db0d625994a3b31128d2843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(regressor=None, transformer=None, func=None, inverse_func=None, check_inverse=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/compose/_target.py#L107&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858add20cbfe98379c24cb16b0926419821f54af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(sample_steps=2, sample_interval=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/kernel_approximation.py#L319&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e495ec1a324dadefba043fc9279e4d1f5b63cd63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(score_func=&amp;lt;function f_classif&amp;gt;, alpha=0.05)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/univariate_selection.py#L585&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b5594079e623ecf9c461bdeab4bd694c1d90c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(score_func=&amp;lt;function f_classif&amp;gt;, alpha=0.05)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/univariate_selection.py#L651&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7fe131f646573555acb9927bf1ea8c29dce28e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(score_func=&amp;lt;function f_classif&amp;gt;, alpha=0.05)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/univariate_selection.py#L714&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2747ee36c0a2ce8879b1d2acb82579a6dc87db4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(score_func=&amp;lt;function f_classif&amp;gt;, k=10)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/univariate_selection.py#L506&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02777a6c9d3eb7537f99cf7e2442fa396038d24c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(score_func=&amp;lt;function f_classif&amp;gt;, mode=&amp;rsquo;percentile&amp;rsquo;, param=1e-05)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/univariate_selection.py#L788&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2748978bd136650001e5f086a9a79ea4d6f27792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(score_func=&amp;lt;function f_classif&amp;gt;, percentile=10)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/univariate_selection.py#L422&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b588e8889203601a95c76fc7a56b01fc5cb47cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(sigma_0=1.0, sigma_0_bounds=(1e-05, 100000.0))&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1663&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda6a403c14a68916dac73bd24fd931a360ce54f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(skewedness=1.0, n_components=100, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/kernel_approximation.py#L189&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef786544d0dcaceabb9c622b42c654e99bfa293d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(solver=&amp;rsquo;svd&amp;rsquo;, shrinkage=None, priors=None, n_components=None, store_covariance=False, tol=0.0001)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/discriminant_analysis.py#L250&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf61b1899130ecc29429c184784deb304027ffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(steps, memory=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/pipeline.py#L117&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6713340e48e66361f9e152cc4b00e427993e3b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(store_precision=True, assume_centered=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/empirical_covariance_.py#L136&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c625c25d7ddfbcc7db79cce8a9125cbefebeecc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(store_precision=True, assume_centered=False, block_size=1000)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/shrunk_covariance_.py#L384&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3570f12a809eaff0e8c5eceb665b501961b285d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(store_precision=True, assume_centered=False, shrinkage=0.1)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/shrunk_covariance_.py#L128&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af58e77e391982daa14a25051664bd63c0799b10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(store_precision=True, assume_centered=False, support_fraction=None, contamination=0.1, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/elliptic_envelope.py#L88&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9039dc732e5f8533e27a03489a78c62d1c220716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(store_precision=True, assume_centered=False, support_fraction=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/robust_covariance.py#L617&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1813fdd8ddd38369285bbe62904b54d05a885e26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(strategy=&amp;rsquo;mean&amp;rsquo;, constant=None, quantile=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/dummy.py#L399&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31906561824e3a38e73ee00d879ffab57d5168e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(strategy=&amp;rsquo;stratified&amp;rsquo;, random_state=None, constant=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/dummy.py#L84&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2050144377e95a53e389008700fa0a34062612b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(test_fold)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L1789&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;__init__(test_fold)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L1789&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85b92ade0a14d941d7b8cad9c04d06e8aa79d7d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(threshold=0.0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/variance_threshold.py#L45&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;__init__(threshold=0.0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/variance_threshold.py#L45&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7758ee6d60fbb5a5bf7b9b75564e25bbb969cf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(threshold=0.0, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L1780&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a341a7b12145ddb65a4b4bd403e0fd92ae733f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(threshold=0.5, branching_factor=50, n_clusters=3, compute_labels=True, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/birch.py#L428&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfad8971e06a68cac7d59fddcd5d7606f9bebcb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(transformer_list, n_jobs=None, transformer_weights=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/pipeline.py#L669&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fceaeb6ffe48f490d1b00dd6cc27388923e53a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(transformers, remainder=&amp;rsquo;drop&amp;rsquo;, sparse_threshold=0.3, n_jobs=None, transformer_weights=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/compose/_column_transformer.py#L163&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2c1fd9ee52d64b3a017f9d22dcc74b16c70d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(with_centering=True, with_scaling=True, quantile_range=(25.0, 75.0), copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L1118&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe6080d0a2166f077ed704b354ac3c31a5382e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__(y_min=None, y_max=None, increasing=True, out_of_bounds=&amp;rsquo;nan&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/isotonic.py#L212&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0087cad4b405bea06ad1942b0521819ee76c26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aic(X)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/mixture/gaussian_mixture.py#L744&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;aic(X)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/mixture/gaussian_mixture.py#L744&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="458d3f56659a2fba17a6016f77f8fd5fdca4402a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;analyzer&lt;/code&gt;: a callable that replaces the preprocessor and tokenizer. The default analyzers all call the preprocessor and tokenizer, but custom analyzers will skip this. N-gram extraction and stop word filtering take place at the analyzer level, so a custom analyzer may have to reproduce these steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7acef57bab5cc5fda30c71b5605ffec5c140720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply(X)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/forest.py#L160&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;apply(X)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/forest.py#L160&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1135892e5a348107f91e9d7f811e449c32f0cd63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply(X)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/gradient_boosting.py#L1648&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;apply(X)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/gradient_boosting.py#L1648&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a55466547007b7b05806969da86e7e213321f05f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply(X)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/gradient_boosting.py#L2451&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;apply(X)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/gradient_boosting.py#L2451&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90a091629d6f8b665681f99ae229946c3ec3384c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply(X, check_input=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/tree/tree.py#L442&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8a0039582195bb8aa12636821406710857c59e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bic(X)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/mixture/gaussian_mixture.py#L729&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;bic(X)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/mixture/gaussian_mixture.py#L729&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4555298161bca96121a1734c71635a339fff28f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binary&lt;/code&gt; is more specific but compatible with &lt;code&gt;multiclass&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911535ecae5bf126e586486befe773c9794c81de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;build_analyzer()&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L288&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;build_analyzer()&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L288&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f84521cc3e5fd9ac2a7404e4358dd597b8d71fe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;build_preprocessor()&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L230&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;build_preprocessor()&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L230&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0115465de5ed482b835a8d1c16f06ab86e35368a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;build_tokenizer()&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L260&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;build_tokenizer()&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L260&quot;&gt;[source]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4310f358bd23e26f8fbdede0f9e3f10120f07a40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache(func=None, ignore=None, verbose=None, mmap_mode=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/externals/joblib/memory.py#L897&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316ed585bbd22757b2b5e106ab968e38bc101668" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.base.BaseEstimator&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/base.py#L129&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bb18378cc153a2b6042101048e33ab1d7da0ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.base.BiclusterMixin&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/base.py#L359&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661af0a9803e5fa69887b8289687953792053f43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.base.ClassifierMixin&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/base.py#L259&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d92bd89831063430d5e460bfda6a8be4f71c0fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.base.ClusterMixin&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/base.py#L333&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe86e1d5a6f661bbf6994a85c3c37cacd5844f8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.base.DensityMixin&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/base.py#L468&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8657c4da7a203320d84a022636df5515c2beb6c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.base.RegressorMixin&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/base.py#L292&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e25ea4aced533acd0903edf9ac322d80877738" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.base.TransformerMixin&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/base.py#L435&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e901e71e0dce5249b167030cb0c271368ebfcfa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.calibration.CalibratedClassifierCV(base_estimator=None, method=&amp;rsquo;sigmoid&amp;rsquo;, cv=&amp;rsquo;warn&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/calibration.py#L30&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331b4239d668000faf82be910b7fd6c644294f07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cluster.AffinityPropagation(damping=0.5, max_iter=200, convergence_iter=15, copy=True, preference=None, affinity=&amp;rsquo;euclidean&amp;rsquo;, verbose=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/affinity_propagation_.py#L236&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e386cbcdce6384254be9a37aad91995eed52a69d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cluster.AgglomerativeClustering(n_clusters=2, affinity=&amp;rsquo;euclidean&amp;rsquo;, memory=None, connectivity=None, compute_full_tree=&amp;rsquo;auto&amp;rsquo;, linkage=&amp;rsquo;ward&amp;rsquo;, pooling_func=&amp;rsquo;deprecated&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/hierarchical.py#L656&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37d4261b9adac20f6da21b7dae80180b4eb4bb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cluster.Birch(threshold=0.5, branching_factor=50, n_clusters=3, compute_labels=True, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/birch.py#L324&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4351d62d969e82b7fbcbdd64a1ca33709f976fe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cluster.DBSCAN(eps=0.5, min_samples=5, metric=&amp;rsquo;euclidean&amp;rsquo;, metric_params=None, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, p=None, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/dbscan_.py#L177&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd11b0eb3c0bb27c7019dde52650816a4d1a292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cluster.FeatureAgglomeration(n_clusters=2, affinity=&amp;rsquo;euclidean&amp;rsquo;, memory=None, connectivity=None, compute_full_tree=&amp;rsquo;auto&amp;rsquo;, linkage=&amp;rsquo;ward&amp;rsquo;, pooling_func=&amp;lt;function mean&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/hierarchical.py#L844&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ed4a781490c41244483c1c30451b9c7381b388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cluster.KMeans(n_clusters=8, init=&amp;rsquo;k-means++&amp;rsquo;, n_init=10, max_iter=300, tol=0.0001, precompute_distances=&amp;rsquo;auto&amp;rsquo;, verbose=0, random_state=None, copy_x=True, n_jobs=None, algorithm=&amp;rsquo;auto&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/k_means_.py#L771&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d0fc3cf09424c7ed4c145b2589933f261ae66d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cluster.MeanShift(bandwidth=None, seeds=None, bin_seeding=False, min_bin_freq=1, cluster_all=True, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/mean_shift_.py#L298&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d54e1b146be37a66c2eae32308dedea9e263216" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cluster.MiniBatchKMeans(n_clusters=8, init=&amp;rsquo;k-means++&amp;rsquo;, max_iter=100, batch_size=100, verbose=0, compute_labels=True, random_state=None, tol=0.0, max_no_improvement=10, init_size=None, n_init=3, reassignment_ratio=0.01)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/k_means_.py#L1315&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e240bb624506afe3c73b1d86802e454bccedb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cluster.SpectralClustering(n_clusters=8, eigen_solver=None, random_state=None, n_init=10, gamma=1.0, affinity=&amp;rsquo;rbf&amp;rsquo;, n_neighbors=10, eigen_tol=0.0, assign_labels=&amp;rsquo;kmeans&amp;rsquo;, degree=3, coef0=1, kernel_params=None, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/spectral.py#L275&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de633b68d3c1ad04fef7f317ec299d6340f51ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cluster.bicluster.SpectralBiclustering(n_clusters=3, method=&amp;rsquo;bistochastic&amp;rsquo;, n_components=6, n_best=3, svd_method=&amp;rsquo;randomized&amp;rsquo;, n_svd_vecs=None, mini_batch=False, init=&amp;rsquo;k-means++&amp;rsquo;, n_init=10, n_jobs=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/bicluster.py#L315&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e4e03203ded607f10c615c40845879eea7925b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cluster.bicluster.SpectralCoclustering(n_clusters=3, svd_method=&amp;rsquo;randomized&amp;rsquo;, n_svd_vecs=None, mini_batch=False, init=&amp;rsquo;k-means++&amp;rsquo;, n_init=10, n_jobs=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cluster/bicluster.py#L182&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a24ff8faf9938d25edbd04ef3614553c801db32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.compose.ColumnTransformer(transformers, remainder=&amp;rsquo;drop&amp;rsquo;, sparse_threshold=0.3, n_jobs=None, transformer_weights=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/compose/_column_transformer.py#L34&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92364386df263e22b13592759179531aa6a44099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.compose.TransformedTargetRegressor(regressor=None, transformer=None, func=None, inverse_func=None, check_inverse=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/compose/_target.py#L17&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d311f762adff62011af10ccfb6bc901bccbd22e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.covariance.EllipticEnvelope(store_precision=True, assume_centered=False, support_fraction=None, contamination=0.1, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/elliptic_envelope.py#L13&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d69aa7e1ae1258cdddd3b10810678725bf4cf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.covariance.EmpiricalCovariance(store_precision=True, assume_centered=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/empirical_covariance_.py#L89&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835091652615811f1737f59bbf82d523e20b798e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.covariance.GraphLasso(*args, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/graph_lasso_.py#L817&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566c9cf2a446bbbd6886f5ea358913ca318b399f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.covariance.GraphLassoCV(*args, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/graph_lasso_.py#L877&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5407bc10ab67514d36d669161c7cd02b5211efd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.covariance.GraphicalLasso(alpha=0.01, mode=&amp;rsquo;cd&amp;rsquo;, tol=0.0001, enet_tol=0.0001, max_iter=100, verbose=False, assume_centered=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/graph_lasso_.py#L280&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9700cfc1717469b606c7436194d4b6ccb378d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.covariance.GraphicalLassoCV(alphas=4, n_refinements=4, cv=&amp;rsquo;warn&amp;rsquo;, tol=0.0001, enet_tol=0.0001, max_iter=100, mode=&amp;rsquo;cd&amp;rsquo;, n_jobs=None, verbose=False, assume_centered=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/graph_lasso_.py#L469&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366e483b6e378878761943a698ad1c09b01f8b42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.covariance.LedoitWolf(store_precision=True, assume_centered=False, block_size=1000)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/shrunk_covariance_.py#L328&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ff1d713974907cbc1a2dab1b9a39c8c40d9cf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.covariance.MinCovDet(store_precision=True, assume_centered=False, support_fraction=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/robust_covariance.py#L514&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be8ae81871435b848d0d1784da8ea6170bd01fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.covariance.OAS(store_precision=True, assume_centered=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/shrunk_covariance_.py#L490&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411fedfad79526979fbdf085367818e15925fa32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.covariance.ShrunkCovariance(store_precision=True, assume_centered=False, shrinkage=0.1)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/covariance/shrunk_covariance_.py#L65&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff0eb5ea9e0dead5547bd76230f7a116a4fee17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cross_decomposition.CCA(n_components=2, scale=True, max_iter=500, tol=1e-06, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cross_decomposition/cca_.py#L6&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929e25ad65c8bff2940ebef0477d2572fa0ab69f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cross_decomposition.PLSCanonical(n_components=2, scale=True, algorithm=&amp;rsquo;nipals&amp;rsquo;, max_iter=500, tol=1e-06, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cross_decomposition/pls_.py#L599&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba5b0c32eaac924d84493c42c275227e5b71a1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cross_decomposition.PLSRegression(n_components=2, scale=True, max_iter=500, tol=1e-06, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cross_decomposition/pls_.py#L459&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b5aa97714844e7b7ba151fd3415621063e331a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.cross_decomposition.PLSSVD(n_components=2, scale=True, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/cross_decomposition/pls_.py#L745&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f984f19f6fd43498f57c45b25d5834145d99134" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.decomposition.DictionaryLearning(n_components=None, alpha=1, max_iter=1000, tol=1e-08, fit_algorithm=&amp;rsquo;lars&amp;rsquo;, transform_algorithm=&amp;rsquo;omp&amp;rsquo;, transform_n_nonzero_coefs=None, transform_alpha=None, n_jobs=None, code_init=None, dict_init=None, verbose=False, split_sign=False, random_state=None, positive_code=False, positive_dict=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/dict_learning.py#L1013&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98aae72f4b902f2fc439bd91ea79417b7260dd04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.decomposition.FactorAnalysis(n_components=None, tol=0.01, copy=True, max_iter=1000, noise_variance_init=None, svd_method=&amp;rsquo;randomized&amp;rsquo;, iterated_power=3, random_state=0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/factor_analysis.py#L36&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51973ac930f21dd0efc97cd962cb8b4e43188a80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.decomposition.FastICA(n_components=None, algorithm=&amp;rsquo;parallel&amp;rsquo;, whiten=True, fun=&amp;rsquo;logcosh&amp;rsquo;, fun_args=None, max_iter=200, tol=0.0001, w_init=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/fastica_.py#L385&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e377672bfaa650fc7575332c24c29a271bf37d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.decomposition.IncrementalPCA(n_components=None, whiten=False, copy=True, batch_size=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/incremental_pca.py#L16&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03606943e6d1b0dbe24b6a572b84c97c5c0c0ec5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.decomposition.KernelPCA(n_components=None, kernel=&amp;rsquo;linear&amp;rsquo;, gamma=None, degree=3, coef0=1, kernel_params=None, alpha=1.0, fit_inverse_transform=False, eigen_solver=&amp;rsquo;auto&amp;rsquo;, tol=0, max_iter=None, remove_zero_eig=False, random_state=None, copy_X=True, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/kernel_pca.py#L18&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5957905b28b465769ac05020acc9c7cf0eea9a92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.decomposition.LatentDirichletAllocation(n_components=10, doc_topic_prior=None, topic_word_prior=None, learning_method=&amp;rsquo;batch&amp;rsquo;, learning_decay=0.7, learning_offset=10.0, max_iter=10, batch_size=128, evaluate_every=-1, total_samples=1000000.0, perp_tol=0.1, mean_change_tol=0.001, max_doc_update_iter=100, n_jobs=None, verbose=0, random_state=None, n_topics=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/online_lda.py#L137&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44a3dcefafaea896d70b7c115606b90fdf8c757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.decomposition.MiniBatchDictionaryLearning(n_components=None, alpha=1, n_iter=1000, fit_algorithm=&amp;rsquo;lars&amp;rsquo;, n_jobs=None, batch_size=3, shuffle=True, dict_init=None, transform_algorithm=&amp;rsquo;omp&amp;rsquo;, transform_n_nonzero_coefs=None, transform_alpha=None, verbose=False, split_sign=False, random_state=None, positive_code=False, positive_dict=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/dict_learning.py#L1202&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871db78cd2d64a94f3f02205b0d84d1a608865f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.decomposition.MiniBatchSparsePCA(n_components=None, alpha=1, ridge_alpha=0.01, n_iter=100, callback=None, batch_size=3, verbose=False, shuffle=True, n_jobs=None, method=&amp;rsquo;lars&amp;rsquo;, random_state=None, normalize_components=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/sparse_pca.py#L256&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3103ab2ca1a50e68ca573411efe67b627043588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.decomposition.NMF(n_components=None, init=None, solver=&amp;rsquo;cd&amp;rsquo;, beta_loss=&amp;rsquo;frobenius&amp;rsquo;, tol=0.0001, max_iter=200, random_state=None, alpha=0.0, l1_ratio=0.0, verbose=0, shuffle=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/nmf.py#L1055&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6043eb34051200b8bc2998c86464880a6add99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.decomposition.PCA(n_components=None, copy=True, whiten=False, svd_solver=&amp;rsquo;auto&amp;rsquo;, tol=0.0, iterated_power=&amp;rsquo;auto&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/pca.py#L106&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26bf5d5e8381706f1ab5b836a2533cb4016fe38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.decomposition.SparseCoder(dictionary, transform_algorithm=&amp;rsquo;omp&amp;rsquo;, transform_n_nonzero_coefs=None, transform_alpha=None, split_sign=False, n_jobs=None, positive_code=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/dict_learning.py#L907&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda5bd646a5c73e1193ce235a784af3903f8462b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.decomposition.SparsePCA(n_components=None, alpha=1, ridge_alpha=0.01, max_iter=1000, tol=1e-08, method=&amp;rsquo;lars&amp;rsquo;, n_jobs=None, U_init=None, V_init=None, verbose=False, random_state=None, normalize_components=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/sparse_pca.py#L16&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c13a7a834becd2a6fffe176a0ab9f3af0ab06be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.decomposition.TruncatedSVD(n_components=2, algorithm=&amp;rsquo;randomized&amp;rsquo;, n_iter=5, random_state=None, tol=0.0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/decomposition/truncated_svd.py#L21&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f536f7326fa02701d360b426bcc6e1aa332b8f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.discriminant_analysis.LinearDiscriminantAnalysis(solver=&amp;rsquo;svd&amp;rsquo;, shrinkage=None, priors=None, n_components=None, store_covariance=False, tol=0.0001)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/discriminant_analysis.py#L130&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b36f08c34b0d995512f28a1a8a92311966311b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0, store_covariance=False, tol=0.0001, store_covariances=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/discriminant_analysis.py#L536&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9006fc1764645c53fd2eadc5fb0ed710f0db87f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.dummy.DummyClassifier(strategy=&amp;rsquo;stratified&amp;rsquo;, random_state=None, constant=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/dummy.py#L22&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052946494ae3ac027af4b8b9a4e1132f066cbf4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.dummy.DummyRegressor(strategy=&amp;rsquo;mean&amp;rsquo;, constant=None, quantile=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/dummy.py#L355&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f5dae209018ed11902b48ed26a44f65076654b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.ensemble.AdaBoostClassifier(base_estimator=None, n_estimators=50, learning_rate=1.0, algorithm=&amp;rsquo;SAMME.R&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/weight_boosting.py#L295&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5e7dc40edb37c7d0d6acab9d379132b8f0f663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.ensemble.AdaBoostRegressor(base_estimator=None, n_estimators=50, learning_rate=1.0, loss=&amp;rsquo;linear&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/weight_boosting.py#L852&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849c1d94b76f25dac886b2d3588ac021c622888e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.ensemble.BaggingClassifier(base_estimator=None, n_estimators=10, max_samples=1.0, max_features=1.0, bootstrap=True, bootstrap_features=False, oob_score=False, warm_start=False, n_jobs=None, random_state=None, verbose=0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/bagging.py#L426&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8b25b3c28e04bfcefd78ac63430e23fb202be5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.ensemble.BaggingRegressor(base_estimator=None, n_estimators=10, max_samples=1.0, max_features=1.0, bootstrap=True, bootstrap_features=False, oob_score=False, warm_start=False, n_jobs=None, random_state=None, verbose=0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/bagging.py#L807&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614ce23f5e3a75926b2c8dbeaa68c3f52a314adf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.ensemble.ExtraTreesClassifier(n_estimators=&amp;rsquo;warn&amp;rsquo;, criterion=&amp;rsquo;gini&amp;rsquo;, max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=&amp;rsquo;auto&amp;rsquo;, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, bootstrap=False, oob_score=False, n_jobs=None, random_state=None, verbose=0, warm_start=False, class_weight=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/forest.py#L1294&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac60c97ee72bd4a129c0f584b53f60c085de003" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.ensemble.ExtraTreesRegressor(n_estimators=&amp;rsquo;warn&amp;rsquo;, criterion=&amp;rsquo;mse&amp;rsquo;, max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=&amp;rsquo;auto&amp;rsquo;, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, bootstrap=False, oob_score=False, n_jobs=None, random_state=None, verbose=0, warm_start=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/forest.py#L1549&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbe8e7a50fe0ceec0d3daa5114db4e46886022d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.ensemble.GradientBoostingClassifier(loss=&amp;rsquo;deviance&amp;rsquo;, learning_rate=0.1, n_estimators=100, subsample=1.0, criterion=&amp;rsquo;friedman_mse&amp;rsquo;, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_depth=3, min_impurity_decrease=0.0, min_impurity_split=None, init=None, random_state=None, max_features=None, verbose=0, max_leaf_nodes=None, warm_start=False, presort=&amp;rsquo;auto&amp;rsquo;, validation_fraction=0.1, n_iter_no_change=None, tol=0.0001)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/gradient_boosting.py#L1684&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e7b61d697dd4fc84d4788d44acfed6bb645734d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.ensemble.GradientBoostingRegressor(loss=&amp;rsquo;ls&amp;rsquo;, learning_rate=0.1, n_estimators=100, subsample=1.0, criterion=&amp;rsquo;friedman_mse&amp;rsquo;, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_depth=3, min_impurity_decrease=0.0, min_impurity_split=None, init=None, random_state=None, max_features=None, alpha=0.9, verbose=0, max_leaf_nodes=None, warm_start=False, presort=&amp;rsquo;auto&amp;rsquo;, validation_fraction=0.1, n_iter_no_change=None, tol=0.0001)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/gradient_boosting.py#L2144&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbca8123b2cb533d16f4719d17b11520bd8df758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.ensemble.IsolationForest(n_estimators=100, max_samples=&amp;rsquo;auto&amp;rsquo;, contamination=&amp;rsquo;legacy&amp;rsquo;, max_features=1.0, bootstrap=False, n_jobs=None, behaviour=&amp;rsquo;old&amp;rsquo;, random_state=None, verbose=0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/iforest.py#L28&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40ef2fdb57f68ae5ce4eda04fb70dcc0ea3c7bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.ensemble.RandomForestClassifier(n_estimators=&amp;rsquo;warn&amp;rsquo;, criterion=&amp;rsquo;gini&amp;rsquo;, max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=&amp;rsquo;auto&amp;rsquo;, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, bootstrap=True, oob_score=False, n_jobs=None, random_state=None, verbose=0, warm_start=False, class_weight=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/forest.py#L753&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a24d43216b964ff4b2c832c8df34f6ded7fcc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.ensemble.RandomForestRegressor(n_estimators=&amp;rsquo;warn&amp;rsquo;, criterion=&amp;rsquo;mse&amp;rsquo;, max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features=&amp;rsquo;auto&amp;rsquo;, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, bootstrap=True, oob_score=False, n_jobs=None, random_state=None, verbose=0, warm_start=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/forest.py#L1038&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1beb94024111bd4cc3d3a561a1474e4bc884abc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.ensemble.RandomTreesEmbedding(n_estimators=&amp;rsquo;warn&amp;rsquo;, max_depth=5, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_leaf_nodes=None, min_impurity_decrease=0.0, min_impurity_split=None, sparse_output=True, n_jobs=None, random_state=None, verbose=0, warm_start=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/forest.py#L1769&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9a7b9d5f246a8a6246938a4822004b6f93b43c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.ensemble.VotingClassifier(estimators, voting=&amp;rsquo;hard&amp;rsquo;, weights=None, n_jobs=None, flatten_transform=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/ensemble/voting_classifier.py#L36&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86dd1322ae63050ba13bf0d4b6194c12cde09074" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.exceptions.ChangedBehaviorWarning&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/exceptions.py#L40&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafcfbd003e19c1854dba3f2ec738fb5996d9309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.exceptions.ConvergenceWarning&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/exceptions.py#L48&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71df6e20e0e9ec969eeb1f7a83764faec7381e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.exceptions.DataConversionWarning&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/exceptions.py#L56&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad5b773b2eac863916746b0810e2e08b71b79ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.exceptions.DataDimensionalityWarning&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/exceptions.py#L74&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd989001b2268c2ae08e7049bc40a79ad959cbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.exceptions.EfficiencyWarning&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/exceptions.py#L88&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069273e10a11ea7dfa2c4c851f85ceb468503dd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.exceptions.FitFailedWarning&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/exceptions.py#L99&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2608d0b6a1fb04b548c570bad2c896e4ea8a523" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.exceptions.NonBLASDotWarning&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/exceptions.py#L131&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848f9eeabec97b1bedc24f2562bf561e7238a1aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.exceptions.NotFittedError&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/exceptions.py#L18&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d64c9ac9612eea6cce090a5e0787f3dd989979" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.exceptions.UndefinedMetricWarning&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/exceptions.py#L151&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4534954d3d3ed99de6d6b2245a0c45978589a4fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_extraction.DictVectorizer(dtype=&amp;lt;class &amp;lsquo;numpy.float64&amp;rsquo;&amp;gt;, separator=&amp;rsquo;=&amp;rsquo;, sparse=True, sort=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/dict_vectorizer.py#L26&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc32907d301c2c7f67cac717309344237108aff0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_extraction.FeatureHasher(n_features=1048576, input_type=&amp;rsquo;dict&amp;rsquo;, dtype=&amp;lt;class &amp;lsquo;numpy.float64&amp;rsquo;&amp;gt;, alternate_sign=True, non_negative=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/hashing.py#L28&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2bbffbe5ce2faf2e2881420dd99682943db1873" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_extraction.image.PatchExtractor(patch_size=None, max_patches=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/image.py#L443&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a88686ebab59e9c8d472d19327612ee6cb16523" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_extraction.text.CountVectorizer(input=&amp;rsquo;content&amp;rsquo;, encoding=&amp;rsquo;utf-8&amp;rsquo;, decode_error=&amp;rsquo;strict&amp;rsquo;, strip_accents=None, lowercase=True, preprocessor=None, tokenizer=None, stop_words=None, token_pattern=&amp;rsquo;(?u)\b\w\w+\b&amp;rsquo;, ngram_range=(1, 1), analyzer=&amp;rsquo;word&amp;rsquo;, max_df=1.0, min_df=1, max_features=None, vocabulary=None, binary=False, dtype=&amp;lt;class &amp;lsquo;numpy.int64&amp;rsquo;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L645&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12966cfa0028a2705c73e3deb41a52218e705a8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_extraction.text.HashingVectorizer(input=&amp;rsquo;content&amp;rsquo;, encoding=&amp;rsquo;utf-8&amp;rsquo;, decode_error=&amp;rsquo;strict&amp;rsquo;, strip_accents=None, lowercase=True, preprocessor=None, tokenizer=None, stop_words=None, token_pattern=&amp;rsquo;(?u)\b\w\w+\b&amp;rsquo;, ngram_range=(1, 1), analyzer=&amp;rsquo;word&amp;rsquo;, n_features=1048576, binary=False, norm=&amp;rsquo;l2&amp;rsquo;, alternate_sign=True, non_negative=False, dtype=&amp;lt;class &amp;lsquo;numpy.float64&amp;rsquo;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L360&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e21e742d4112e116ab9338b1a9d41d501bab6b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_extraction.text.TfidfTransformer(norm=&amp;rsquo;l2&amp;rsquo;, use_idf=True, smooth_idf=True, sublinear_tf=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L1117&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f77b4542b7b06a16b541ee008d6b968e38fe261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_extraction.text.TfidfVectorizer(input=&amp;rsquo;content&amp;rsquo;, encoding=&amp;rsquo;utf-8&amp;rsquo;, decode_error=&amp;rsquo;strict&amp;rsquo;, strip_accents=None, lowercase=True, preprocessor=None, tokenizer=None, analyzer=&amp;rsquo;word&amp;rsquo;, stop_words=None, token_pattern=&amp;rsquo;(?u)\b\w\w+\b&amp;rsquo;, ngram_range=(1, 1), max_df=1.0, min_df=1, max_features=None, vocabulary=None, binary=False, dtype=&amp;lt;class &amp;lsquo;numpy.float64&amp;rsquo;&amp;gt;, norm=&amp;rsquo;l2&amp;rsquo;, use_idf=True, smooth_idf=True, sublinear_tf=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_extraction/text.py#L1286&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035d0ebcd8643adfd485eac68509a6ec7ea8470d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_selection.GenericUnivariateSelect(score_func=&amp;lt;function f_classif&amp;gt;, mode=&amp;rsquo;percentile&amp;rsquo;, param=1e-05)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/univariate_selection.py#L730&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c12a6db9a3cd2c74af38b92049519a116fd023" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_selection.RFE(estimator, n_features_to_select=None, step=1, verbose=0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/rfe.py#L36&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40ae2b6bcaf84a44acc24da8bc6b772a41e7e61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_selection.RFECV(estimator, step=1, min_features_to_select=1, cv=&amp;rsquo;warn&amp;rsquo;, scoring=None, verbose=0, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/rfe.py#L324&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96134117912e3d0061aa104da335c2ea36a970bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_selection.SelectFdr(score_func=&amp;lt;function f_classif&amp;gt;, alpha=0.05)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/univariate_selection.py#L595&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c77f347ddc06f013d3b97d1a9c9f1d7c260b045" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_selection.SelectFpr(score_func=&amp;lt;function f_classif&amp;gt;, alpha=0.05)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/univariate_selection.py#L533&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb5b5f972a54bd580ae0cf64848f184f9cc5372" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_selection.SelectFromModel(estimator, threshold=None, prefit=False, norm_order=1, max_features=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/from_model.py#L82&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ee36f79750cb98f8e3047743c0d95615a8004a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_selection.SelectFwe(score_func=&amp;lt;function f_classif&amp;gt;, alpha=0.05)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/univariate_selection.py#L667&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea8fcf24a35daa46fe74b09dc58b7c5d80f68ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_selection.SelectKBest(score_func=&amp;lt;function f_classif&amp;gt;, k=10)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/univariate_selection.py#L451&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5d96f561237fb343f7ef737c1d3c6f9c86fc43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_selection.SelectPercentile(score_func=&amp;lt;function f_classif&amp;gt;, percentile=10)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/univariate_selection.py#L368&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d94863b62f69107badb7c146213d1d67f9e4a93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.feature_selection.VarianceThreshold(threshold=0.0)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/feature_selection/variance_threshold.py#L12&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce027c9e95702ff31983900c3e74641f773c88c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.GaussianProcessClassifier(kernel=None, optimizer=&amp;rsquo;fmin_l_bfgs_b&amp;rsquo;, n_restarts_optimizer=0, max_iter_predict=100, warm_start=False, copy_X_train=True, random_state=None, multi_class=&amp;rsquo;one_vs_rest&amp;rsquo;, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/gpc.py#L444&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f64c7c411c84bce0562dae53577400f8efa8362" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.GaussianProcessRegressor(kernel=None, alpha=1e-10, optimizer=&amp;rsquo;fmin_l_bfgs_b&amp;rsquo;, n_restarts_optimizer=0, normalize_y=False, copy_X_train=True, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/gpr.py#L22&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fa5cbdb4e9b6701e87201e30318a8fa4f79281" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.CompoundKernel(kernels)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L400&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0002de9e64cf6203b9d26e35ccaa89758e671f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.ConstantKernel(constant_value=1.0, constant_value_bounds=(1e-05, 100000.0))&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L951&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252ac02699bf48720d4116025ab91cade64c1e4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.DotProduct(sigma_0=1.0, sigma_0_bounds=(1e-05, 100000.0))&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1635&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d5c9b6598c772d679bd1a3412d4c313305fb19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.ExpSineSquared(length_scale=1.0, periodicity=1.0, length_scale_bounds=(1e-05, 100000.0), periodicity_bounds=(1e-05, 100000.0))&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1522&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1624a227ec7b8c7e01c18cb27ce411c00f40d50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.Exponentiation(kernel, exponent)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L794&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d71d3adafebdf83d223518634303e9157c26e64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.Hyperparameter&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L47&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bee548a0c9ad4ec1a484b3a09480b19ce737af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.Kernel&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L119&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a82422e21ba1d484c7037262a92bfe517cb6d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.Matern(length_scale=1.0, length_scale_bounds=(1e-05, 100000.0), nu=1.5)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1260&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4022a3051a82eab4aa2f2fca6075ad5793478dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.PairwiseKernel(gamma=1.0, gamma_bounds=(1e-05, 100000.0), metric=&amp;rsquo;linear&amp;rsquo;, pairwise_kernels_kwargs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1757&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3cb388788809adde71d9fdd880eef70945f89b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.Product(k1, k2)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L719&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b62ad4725bb80045e4ae53476a38b21d24ae702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.RBF(length_scale=1.0, length_scale_bounds=(1e-05, 100000.0))&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1146&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d0abaf8a1f4efe7a5f412aaf6c09eea2768110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.RationalQuadratic(length_scale=1.0, alpha=1.0, length_scale_bounds=(1e-05, 100000.0), alpha_bounds=(1e-05, 100000.0))&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1410&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254bd4da9df42263bcf7370bf59137a779a5a3fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.Sum(k1, k2)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L645&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1368c8b61e833faf3f0a34ebafced14d924702fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.gaussian_process.kernels.WhiteKernel(noise_level=1.0, noise_level_bounds=(1e-05, 100000.0))&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/gaussian_process/kernels.py#L1049&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56fa5141025a09e81146c80c30320ddfb51415d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.impute.MissingIndicator(missing_values=nan, features=&amp;rsquo;missing-only&amp;rsquo;, sparse=&amp;rsquo;auto&amp;rsquo;, error_on_new=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/impute.py#L412&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66298d2d20a71f3a5709725f3872f5266cdfbb54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.impute.SimpleImputer(missing_values=nan, strategy=&amp;rsquo;mean&amp;rsquo;, fill_value=None, verbose=0, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/impute.py#L93&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39292b96638ac0f882f4f66a8d3a03465871d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.isotonic.IsotonicRegression(y_min=None, y_max=None, increasing=True, out_of_bounds=&amp;rsquo;nan&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/isotonic.py#L139&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba98bbe458043467700b134f4fa850446cf709ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.kernel_approximation.AdditiveChi2Sampler(sample_steps=2, sample_interval=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/kernel_approximation.py#L253&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c7dbd3f6b7c45e606ccf03dd45dffb1d764837" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.kernel_approximation.Nystroem(kernel=&amp;rsquo;rbf&amp;rsquo;, gamma=None, coef0=None, degree=None, kernel_params=None, n_components=100, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/kernel_approximation.py#L439&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb80e78e6c219c339e4be61badcb2e4570fbaed4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.kernel_approximation.RBFSampler(gamma=1.0, n_components=100, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/kernel_approximation.py#L24&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f10f58d9eef1e9cd74615252984d654c947a769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.kernel_approximation.SkewedChi2Sampler(skewedness=1.0, n_components=100, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/kernel_approximation.py#L134&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62184ee8f3ab16f8436f9446b329f42eaf70833" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.kernel_ridge.KernelRidge(alpha=1, kernel=&amp;rsquo;linear&amp;rsquo;, gamma=None, degree=3, coef0=1, kernel_params=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/kernel_ridge.py#L16&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fdea10f58348be0a32d54bcb5232e03b72ecc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.ARDRegression(n_iter=300, tol=0.001, alpha_1=1e-06, alpha_2=1e-06, lambda_1=1e-06, lambda_2=1e-06, compute_score=False, threshold_lambda=10000.0, fit_intercept=True, normalize=False, copy_X=True, verbose=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/bayes.py#L298&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91862845866ee482f7e7dcf3625bda3d98acb7ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.BayesianRidge(n_iter=300, tol=0.001, alpha_1=1e-06, alpha_2=1e-06, lambda_1=1e-06, lambda_2=1e-06, compute_score=False, fit_intercept=True, normalize=False, copy_X=True, verbose=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/bayes.py#L23&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901217a8ea89352d5416f0b7e9cc8524a28b85b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.ElasticNet(alpha=1.0, l1_ratio=0.5, fit_intercept=True, normalize=False, precompute=False, max_iter=1000, copy_X=True, tol=0.0001, warm_start=False, positive=False, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L510&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346490960d885cc3b8f62bab2747dc1e3b454d5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.ElasticNetCV(l1_ratio=0.5, eps=0.001, n_alphas=100, alphas=None, fit_intercept=True, normalize=False, precompute=&amp;rsquo;auto&amp;rsquo;, max_iter=1000, tol=0.0001, cv=&amp;rsquo;warn&amp;rsquo;, copy_X=True, verbose=0, n_jobs=None, positive=False, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L1413&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e7eaf25969d3adf177a983940c1c40b836cb651" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.HuberRegressor(epsilon=1.35, max_iter=100, alpha=0.0001, warm_start=False, fit_intercept=True, tol=1e-05)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/huber.py#L125&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b87effd1808628b9aaec1cfefd46982ac559fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.Lars(fit_intercept=True, verbose=False, normalize=True, precompute=&amp;rsquo;auto&amp;rsquo;, n_nonzero_coefs=500, eps=2.220446049250313e-16, copy_X=True, fit_path=True, positive=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/least_angle.py#L495&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdf40b39ed547dca45fe768b27d004769b5f3d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.LarsCV(fit_intercept=True, verbose=False, max_iter=500, normalize=True, precompute=&amp;rsquo;auto&amp;rsquo;, cv=&amp;rsquo;warn&amp;rsquo;, max_n_alphas=1000, n_jobs=None, eps=2.220446049250313e-16, copy_X=True, positive=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/least_angle.py#L972&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4664c8159a08cd4e947e317d6a0b148d888b8a63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.Lasso(alpha=1.0, fit_intercept=True, normalize=False, precompute=False, copy_X=True, max_iter=1000, tol=0.0001, warm_start=False, positive=False, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L810&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa99f468d4bb91b3a3bb11159c1a023e1bc2f0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.LassoCV(eps=0.001, n_alphas=100, alphas=None, fit_intercept=True, normalize=False, precompute=&amp;rsquo;auto&amp;rsquo;, max_iter=1000, tol=0.0001, copy_X=True, cv=&amp;rsquo;warn&amp;rsquo;, verbose=False, n_jobs=None, positive=False, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L1248&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d404dbcc356f0b25534097f2a8ad4b9ff81368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.LassoLars(alpha=1.0, fit_intercept=True, verbose=False, normalize=True, precompute=&amp;rsquo;auto&amp;rsquo;, max_iter=500, eps=2.220446049250313e-16, copy_X=True, fit_path=True, positive=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/least_angle.py#L713&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a11738a261a485c156a369fbf6624a652d7848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.LassoLarsCV(fit_intercept=True, verbose=False, max_iter=500, normalize=True, precompute=&amp;rsquo;auto&amp;rsquo;, cv=&amp;rsquo;warn&amp;rsquo;, max_n_alphas=1000, n_jobs=None, eps=2.220446049250313e-16, copy_X=True, positive=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/least_angle.py#L1196&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f044dfc5306175157861e4d9c0cd570c25baa20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.LassoLarsIC(criterion=&amp;rsquo;aic&amp;rsquo;, fit_intercept=True, verbose=False, normalize=True, precompute=&amp;rsquo;auto&amp;rsquo;, max_iter=500, eps=2.220446049250313e-16, copy_X=True, positive=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/least_angle.py#L1357&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9994a68efa91cfe41d8d22f25c862f28966adb0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.LinearRegression(fit_intercept=True, normalize=False, copy_X=True, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/base.py#L362&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e9832f472a8c1e5510dfd5cd9c472abf69eeaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.LogisticRegression(penalty=&amp;rsquo;l2&amp;rsquo;, dual=False, tol=0.0001, C=1.0, fit_intercept=True, intercept_scaling=1, class_weight=None, random_state=None, solver=&amp;rsquo;warn&amp;rsquo;, max_iter=100, multi_class=&amp;rsquo;warn&amp;rsquo;, verbose=0, warm_start=False, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/logistic.py#L997&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bcb52ee312ec342032f341c910838c0584fdef2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.LogisticRegressionCV(Cs=10, fit_intercept=True, cv=&amp;rsquo;warn&amp;rsquo;, dual=False, penalty=&amp;rsquo;l2&amp;rsquo;, scoring=None, solver=&amp;rsquo;lbfgs&amp;rsquo;, tol=0.0001, max_iter=100, class_weight=None, n_jobs=None, verbose=0, refit=True, intercept_scaling=1.0, multi_class=&amp;rsquo;warn&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/logistic.py#L1437&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1de6ceb1bf0babf50090db551cedae2a6030d66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.MultiTaskElasticNet(alpha=1.0, l1_ratio=0.5, fit_intercept=True, normalize=False, copy_X=True, max_iter=1000, tol=0.0001, warm_start=False, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L1626&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b591637851ad2c2617e690620281b12d13e48018" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.MultiTaskElasticNetCV(l1_ratio=0.5, eps=0.001, n_alphas=100, alphas=None, fit_intercept=True, normalize=False, max_iter=1000, tol=0.0001, cv=&amp;rsquo;warn&amp;rsquo;, copy_X=True, verbose=0, n_jobs=None, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L1944&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243250da4b62ffd4d9535a57a9a304316526db94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.MultiTaskLasso(alpha=1.0, fit_intercept=True, normalize=False, copy_X=True, max_iter=1000, tol=0.0001, warm_start=False, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L1825&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7285def713e9532a13cccc6df240e6c763951eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.MultiTaskLassoCV(eps=0.001, n_alphas=100, alphas=None, fit_intercept=True, normalize=False, max_iter=1000, tol=0.0001, copy_X=True, cv=&amp;rsquo;warn&amp;rsquo;, verbose=False, n_jobs=None, random_state=None, selection=&amp;rsquo;cyclic&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/coordinate_descent.py#L2132&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5687b9b50193e68822a746de9242274d8758f318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.OrthogonalMatchingPursuit(n_nonzero_coefs=None, tol=None, fit_intercept=True, normalize=True, precompute=&amp;rsquo;auto&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/omp.py#L542&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4e3fae5a118a35bc806a16cb51db406650c0ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.OrthogonalMatchingPursuitCV(copy=True, fit_intercept=True, normalize=True, max_iter=None, cv=&amp;rsquo;warn&amp;rsquo;, n_jobs=None, verbose=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/omp.py#L756&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71c0d341d85448bcff954ed39da520de854198e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.PassiveAggressiveClassifier(C=1.0, fit_intercept=True, max_iter=None, tol=None, early_stopping=False, validation_fraction=0.1, n_iter_no_change=5, shuffle=True, verbose=0, loss=&amp;rsquo;hinge&amp;rsquo;, n_jobs=None, random_state=None, warm_start=False, class_weight=None, average=False, n_iter=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/passive_aggressive.py#L9&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d44624c2651fe3cdc5aeaba83ba4aa6bc7eda8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.PassiveAggressiveRegressor(C=1.0, fit_intercept=True, max_iter=None, tol=None, early_stopping=False, validation_fraction=0.1, n_iter_no_change=5, shuffle=True, verbose=0, loss=&amp;rsquo;epsilon_insensitive&amp;rsquo;, epsilon=0.1, random_state=None, warm_start=False, average=False, n_iter=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/passive_aggressive.py#L263&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4784352b2a855294b2b1092ff65888cc7f13066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.Perceptron(penalty=None, alpha=0.0001, fit_intercept=True, max_iter=None, tol=None, shuffle=True, verbose=0, eta0=1.0, n_jobs=None, random_state=0, early_stopping=False, validation_fraction=0.1, n_iter_no_change=5, class_weight=None, warm_start=False, n_iter=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/perceptron.py#L7&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d2da0fecf1777e30599f3b2308c48d46cfd0c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.RANSACRegressor(base_estimator=None, min_samples=None, residual_threshold=None, is_data_valid=None, is_model_valid=None, max_trials=100, max_skips=inf, stop_n_inliers=inf, stop_score=inf, stop_probability=0.99, loss=&amp;rsquo;absolute_loss&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/ransac.py#L55&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4217a3cad1d9471d4edde843254083319f56eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.RandomizedLasso(*args, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/randomized_l1.py#L187&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30629c02189e0d6aabecfc18a8551774cf0a45b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.RandomizedLogisticRegression(*args, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/randomized_l1.py#L395&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33626a5a6ccae532b67b3a39d0f2b1470c615e53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.Ridge(alpha=1.0, fit_intercept=True, normalize=False, copy_X=True, max_iter=None, tol=0.001, solver=&amp;rsquo;auto&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/ridge.py#L520&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718dda323d9d39ca90143b7a2a827e7ea16d7b95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.RidgeCV(alphas=(0.1, 1.0, 10.0), fit_intercept=True, normalize=False, scoring=None, cv=None, gcv_mode=None, store_cv_values=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/ridge.py#L1170&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d2afd7495c4a19d30bc37fb5a1ffa8ca8d07a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.RidgeClassifier(alpha=1.0, fit_intercept=True, normalize=False, copy_X=True, max_iter=None, tol=0.001, class_weight=None, solver=&amp;rsquo;auto&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/ridge.py#L683&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0754232f49994d325c7c252c56d9b5b6f8afc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.RidgeClassifierCV(alphas=(0.1, 1.0, 10.0), fit_intercept=True, normalize=False, scoring=None, cv=None, class_weight=None, store_cv_values=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/ridge.py#L1279&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32e552697fb064c51e4a1a1f2eef287e193bae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.SGDClassifier(loss=&amp;rsquo;hinge&amp;rsquo;, penalty=&amp;rsquo;l2&amp;rsquo;, alpha=0.0001, l1_ratio=0.15, fit_intercept=True, max_iter=None, tol=None, shuffle=True, verbose=0, epsilon=0.1, n_jobs=None, random_state=None, learning_rate=&amp;rsquo;optimal&amp;rsquo;, eta0=0.0, power_t=0.5, early_stopping=False, validation_fraction=0.1, n_iter_no_change=5, class_weight=None, warm_start=False, average=False, n_iter=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/stochastic_gradient.py#L731&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e78751bf9b401c1f66e709c0a6fcb60555dec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.SGDRegressor(loss=&amp;rsquo;squared_loss&amp;rsquo;, penalty=&amp;rsquo;l2&amp;rsquo;, alpha=0.0001, l1_ratio=0.15, fit_intercept=True, max_iter=None, tol=None, shuffle=True, verbose=0, epsilon=0.1, random_state=None, learning_rate=&amp;rsquo;invscaling&amp;rsquo;, eta0=0.01, power_t=0.25, early_stopping=False, validation_fraction=0.1, n_iter_no_change=5, warm_start=False, average=False, n_iter=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/stochastic_gradient.py#L1357&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f2b6e9284c9d8cb0cf749c24647d555c244acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.linear_model.TheilSenRegressor(fit_intercept=True, copy_X=True, max_subpopulation=10000.0, n_subsamples=None, max_iter=300, tol=0.001, random_state=None, n_jobs=None, verbose=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/linear_model/theil_sen.py#L198&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4b0c5bc4f0636a9e4b959c15e73fa381dfa61f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.manifold.Isomap(n_neighbors=5, n_components=2, eigen_solver=&amp;rsquo;auto&amp;rsquo;, tol=0, max_iter=None, path_method=&amp;rsquo;auto&amp;rsquo;, neighbors_algorithm=&amp;rsquo;auto&amp;rsquo;, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/manifold/isomap.py#L15&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5678c0e40353b84ed64d874e09eedd830e884114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.manifold.LocallyLinearEmbedding(n_neighbors=5, n_components=2, reg=0.001, eigen_solver=&amp;rsquo;auto&amp;rsquo;, tol=1e-06, max_iter=100, method=&amp;rsquo;standard&amp;rsquo;, hessian_tol=0.0001, modified_tol=1e-12, neighbors_algorithm=&amp;rsquo;auto&amp;rsquo;, random_state=None, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/manifold/locally_linear.py#L521&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4595e7e4ee531b043d262147dfbecd0400c8c72f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.manifold.MDS(n_components=2, metric=True, n_init=4, max_iter=300, verbose=0, eps=0.001, n_jobs=None, random_state=None, dissimilarity=&amp;rsquo;euclidean&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/manifold/mds.py#L279&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db9e1893ab6ed81138a88f9ea03d55494e005b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.manifold.SpectralEmbedding(n_components=2, affinity=&amp;rsquo;nearest_neighbors&amp;rsquo;, gamma=None, random_state=None, eigen_solver=None, n_neighbors=None, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/manifold/spectral_embedding_.py#L340&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d11c193b48d128bcdd1b61a4cbf672f4dfdcf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.manifold.TSNE(n_components=2, perplexity=30.0, early_exaggeration=12.0, learning_rate=200.0, n_iter=1000, n_iter_without_progress=300, min_grad_norm=1e-07, metric=&amp;rsquo;euclidean&amp;rsquo;, init=&amp;rsquo;random&amp;rsquo;, verbose=0, random_state=None, method=&amp;rsquo;barnes_hut&amp;rsquo;, angle=0.5)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/manifold/t_sne.py#L475&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d445b2347ed62dbf0b4f56d705ddb5d4a94247" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.mixture.BayesianGaussianMixture(n_components=1, covariance_type=&amp;rsquo;full&amp;rsquo;, tol=0.001, reg_covar=1e-06, max_iter=100, n_init=1, init_params=&amp;rsquo;kmeans&amp;rsquo;, weight_concentration_prior_type=&amp;rsquo;dirichlet_process&amp;rsquo;, weight_concentration_prior=None, mean_precision_prior=None, mean_prior=None, degrees_of_freedom_prior=None, covariance_prior=None, random_state=None, warm_start=False, verbose=0, verbose_interval=10)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/mixture/bayesian_mixture.py#L65&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e5dd90d499392f024d8a2642ed1ba6115e5556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.mixture.GaussianMixture(n_components=1, covariance_type=&amp;rsquo;full&amp;rsquo;, tol=0.001, reg_covar=1e-06, max_iter=100, n_init=1, init_params=&amp;rsquo;kmeans&amp;rsquo;, weights_init=None, means_init=None, precisions_init=None, random_state=None, warm_start=False, verbose=0, verbose_interval=10)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/mixture/gaussian_mixture.py#L435&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0328bf62abf83e8650513446efeaf89fb6778f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.GridSearchCV(estimator, param_grid, scoring=None, fit_params=None, n_jobs=None, iid=&amp;rsquo;warn&amp;rsquo;, refit=True, cv=&amp;rsquo;warn&amp;rsquo;, verbose=0, pre_dispatch=&amp;lsquo;2*n_jobs&amp;rsquo;, error_score=&amp;rsquo;raise-deprecating&amp;rsquo;, return_train_score=&amp;rsquo;warn&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_search.py#L866&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9718eaaf2fcead404966aeaac8dd3100bb7f3778" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.GroupKFold(n_splits=&amp;rsquo;warn&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L446&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81956dfb8eadfac6157304660660ffd73bc5c62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.GroupShuffleSplit(n_splits=5, test_size=&amp;rsquo;default&amp;rsquo;, train_size=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L1351&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fd0186cd19297fdfa4aacb6e7c10e986b90486" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.KFold(n_splits=&amp;rsquo;warn&amp;rsquo;, shuffle=False, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L356&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec320004db97ddd3e27f0411ccb579a09d7ba135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.LeaveOneGroupOut&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L804&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3e8e96083ce5bb0c72105a6a72d09f7994468b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.LeaveOneOut&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L129&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e425900cdfe404957cf79c9d9fec88f2ca4fcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.LeavePGroupsOut(n_groups)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L886&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b29f5ef83c00a3ed3bf97f6b547f5d3f5ddaccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.LeavePOut(p)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L203&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52919d836948af70662cd07d4ea78281a82e2288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.ParameterGrid(param_grid)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_search.py#L51&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1d5cf047f74d3d010ac794e781afbfcf86f887" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.ParameterSampler(param_distributions, n_iter, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_search.py#L187&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ffea4c0b7bb66cf671ad64a10ffc42664c681d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.PredefinedSplit(test_fold)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L1754&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8aafeb3ad4c1d0573a8fe2f25c125c01027662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.RandomizedSearchCV(estimator, param_distributions, n_iter=10, scoring=None, fit_params=None, n_jobs=None, iid=&amp;rsquo;warn&amp;rsquo;, refit=True, cv=&amp;rsquo;warn&amp;rsquo;, verbose=0, pre_dispatch=&amp;lsquo;2*n_jobs&amp;rsquo;, random_state=None, error_score=&amp;rsquo;raise-deprecating&amp;rsquo;, return_train_score=&amp;rsquo;warn&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_search.py#L1194&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6317885f4a7b44d171c487c515c918b5b031f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.RepeatedKFold(n_splits=5, n_repeats=10, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L1091&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd9d2910945a3868c2e9374bed81710d85c8bfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.RepeatedStratifiedKFold(n_splits=5, n_repeats=10, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L1143&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc3b6d46545acf3d756de0f98de0da7f57249b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.ShuffleSplit(n_splits=10, test_size=&amp;rsquo;default&amp;rsquo;, train_size=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L1269&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394e33dac449c67c24d265dcf97cadaaade91df9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.StratifiedKFold(n_splits=&amp;rsquo;warn&amp;rsquo;, shuffle=False, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L540&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925e63550a8ec7ab6600d7fe4c96d84ac0088b8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.StratifiedShuffleSplit(n_splits=10, test_size=&amp;rsquo;default&amp;rsquo;, train_size=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L1502&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12e49c3d16fd2845b160ac156a7851964b17c0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.model_selection.TimeSeriesSplit(n_splits=&amp;rsquo;warn&amp;rsquo;, max_train_size=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/model_selection/_split.py#L697&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a61d5e4c219fb3701afd124279715b509f16e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.multiclass.OneVsOneClassifier(estimator, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/multiclass.py#L438&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d41fcdb70accbd0260fd098224ada2b00a3f3b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.multiclass.OneVsRestClassifier(estimator, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/multiclass.py#L133&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6759670d5c5062e2a30267d4f11be0075dfcf8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.multiclass.OutputCodeClassifier(estimator, code_size=1.5, random_state=None, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/multiclass.py#L633&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e10ed046dc245fe073acea72eaa77750b507ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.multioutput.ClassifierChain(base_estimator, order=None, cv=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/multioutput.py#L476&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ed250aaf4462e8b70197ae8d14964a621cb0a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.multioutput.MultiOutputClassifier(estimator, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/multioutput.py#L289&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60098c908445bf83fc3fc9e31e9c57adea54a185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.multioutput.MultiOutputRegressor(estimator, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/multioutput.py#L200&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8064a7579fc0d8af37ae28a0d2c0d622a9afa68c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.multioutput.RegressorChain(base_estimator, order=None, cv=None, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/multioutput.py#L632&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b678c1a81d29cf4f99f1ef77e7f7140f6bf940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.naive_bayes.BernoulliNB(alpha=1.0, binarize=0.0, fit_prior=True, class_prior=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/naive_bayes.py#L839&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d6ce1957a6f09f7c4a13f2ffe013af863cb864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.naive_bayes.ComplementNB(alpha=1.0, fit_prior=True, class_prior=None, norm=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/naive_bayes.py#L735&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde749b55900a961e1b367864175e5557fd23650" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.naive_bayes.GaussianNB(priors=None, var_smoothing=1e-09)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/naive_bayes.py#L107&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d46954cda05e7533ad3956957dd1c76b09eb575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.naive_bayes.MultinomialNB(alpha=1.0, fit_prior=True, class_prior=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/naive_bayes.py#L630&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c58f7b042827eeb008d7985c962a335bbf656b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.neighbors.KNeighborsClassifier(n_neighbors=5, weights=&amp;rsquo;uniform&amp;rsquo;, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, p=2, metric=&amp;rsquo;minkowski&amp;rsquo;, metric_params=None, n_jobs=None, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/classification.py#L23&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d612533b8b7084d973b722414bd239a3d554be6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.neighbors.KNeighborsRegressor(n_neighbors=5, weights=&amp;rsquo;uniform&amp;rsquo;, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, p=2, metric=&amp;rsquo;minkowski&amp;rsquo;, metric_params=None, n_jobs=None, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/regression.py#L24&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ce49f33e474a154d20db79ca184340e877f9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.neighbors.KernelDensity(bandwidth=1.0, algorithm=&amp;rsquo;auto&amp;rsquo;, kernel=&amp;rsquo;gaussian&amp;rsquo;, metric=&amp;rsquo;euclidean&amp;rsquo;, atol=0, rtol=0, breadth_first=True, leaf_size=40, metric_params=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/kde.py#L25&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4a1b16af42362ea0ead6cc22b57403bc63dbb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.neighbors.LSHForest(n_estimators=10, radius=1.0, n_candidates=50, n_neighbors=5, min_hash_match=4, radius_cutoff_ratio=0.9, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/approximate.py#L147&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c2ef91288e7e92bc95a060c067fe25b0c9e338" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.neighbors.LocalOutlierFactor(n_neighbors=20, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, metric=&amp;rsquo;minkowski&amp;rsquo;, p=2, metric_params=None, contamination=&amp;rsquo;legacy&amp;rsquo;, novelty=False, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/lof.py#L19&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41740b16e3c7ffd29e0a6dc74812337f8a887c73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.neighbors.NearestCentroid(metric=&amp;rsquo;euclidean&amp;rsquo;, shrink_threshold=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/nearest_centroid.py#L22&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58bee3de30aaf26dcc8b3b4b825739a8e5be8293" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.neighbors.NearestNeighbors(n_neighbors=5, radius=1.0, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, metric=&amp;rsquo;minkowski&amp;rsquo;, p=2, metric_params=None, n_jobs=None, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/unsupervised.py#L9&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92a1dc5e90e60a6225c66f68681b23e546abdf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.neighbors.RadiusNeighborsClassifier(radius=1.0, weights=&amp;rsquo;uniform&amp;rsquo;, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, p=2, metric=&amp;rsquo;minkowski&amp;rsquo;, outlier_label=None, metric_params=None, n_jobs=None, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/classification.py#L230&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f445ecec9198549f9471bb4d180f3e4ff1cb37dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.neighbors.RadiusNeighborsRegressor(radius=1.0, weights=&amp;rsquo;uniform&amp;rsquo;, algorithm=&amp;rsquo;auto&amp;rsquo;, leaf_size=30, p=2, metric=&amp;rsquo;minkowski&amp;rsquo;, metric_params=None, n_jobs=None, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neighbors/regression.py#L181&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f5695ef21835e5edb7702a337fbdc7c39d18dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.neural_network.BernoulliRBM(n_components=256, learning_rate=0.1, batch_size=10, n_iter=10, verbose=0, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neural_network/rbm.py#L27&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4353fd3e9b8488e48d651a0eae41de1979fb9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.neural_network.MLPClassifier(hidden_layer_sizes=(100, ), activation=&amp;rsquo;relu&amp;rsquo;, solver=&amp;rsquo;adam&amp;rsquo;, alpha=0.0001, batch_size=&amp;rsquo;auto&amp;rsquo;, learning_rate=&amp;rsquo;constant&amp;rsquo;, learning_rate_init=0.001, power_t=0.5, max_iter=200, shuffle=True, random_state=None, tol=0.0001, verbose=False, warm_start=False, momentum=0.9, nesterovs_momentum=True, early_stopping=False, validation_fraction=0.1, beta_1=0.9, beta_2=0.999, epsilon=1e-08, n_iter_no_change=10)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neural_network/multilayer_perceptron.py#L682&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577015510e8e12b428ccc197b2f0bb67e22e255d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.neural_network.MLPRegressor(hidden_layer_sizes=(100, ), activation=&amp;rsquo;relu&amp;rsquo;, solver=&amp;rsquo;adam&amp;rsquo;, alpha=0.0001, batch_size=&amp;rsquo;auto&amp;rsquo;, learning_rate=&amp;rsquo;constant&amp;rsquo;, learning_rate_init=0.001, power_t=0.5, max_iter=200, shuffle=True, random_state=None, tol=0.0001, verbose=False, warm_start=False, momentum=0.9, nesterovs_momentum=True, early_stopping=False, validation_fraction=0.1, beta_1=0.9, beta_2=0.999, epsilon=1e-08, n_iter_no_change=10)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/neural_network/multilayer_perceptron.py#L1065&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261e07c1634023b7effa14e461965dabd1fa288f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.pipeline.FeatureUnion(transformer_list, n_jobs=None, transformer_weights=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/pipeline.py#L623&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577536be0bef5533668cc6ef574a8221ef3e7d4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.pipeline.Pipeline(steps, memory=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/pipeline.py#L29&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429cb40942ca8e1940f2013e10e1714380d0015c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.Binarizer(threshold=0.0, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L1726&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73f71070ad1525f628f9c5373984eaef4bc842e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.FunctionTransformer(func=None, inverse_func=None, validate=None, accept_sparse=False, pass_y=&amp;rsquo;deprecated&amp;rsquo;, check_inverse=True, kw_args=None, inv_kw_args=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/_function_transformer.py#L15&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9c062c2893c6047e6df9779da264eb2322974a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.Imputer(*args, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/imputation.py#L67&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8294e09f3867d8ab20115bf09bc9d467bc96a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.KBinsDiscretizer(n_bins=5, encode=&amp;rsquo;onehot&amp;rsquo;, strategy=&amp;rsquo;quantile&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/_discretization.py#L23&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e51ece9ceddb1d1f6db075ccb88dd4a80ae1a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.KernelCenterer&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L1821&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f6070db6cf6aa7f89f24e3b03536c394f3d091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.LabelBinarizer(neg_label=0, pos_label=1, sparse_output=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/label.py#L286&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0260d864cae6fce7bbe042f37d3abff8c011f86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.LabelEncoder&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/label.py#L163&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b79ef7925dd2b395751a7a3ee9e6f48ee28c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.MaxAbsScaler(copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L801&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca85ae9edc9e639b1412b4813db637cef599524b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.MinMaxScaler(feature_range=(0, 1), copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L202&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf694c9ebadec30a6361fe045179334e331f6a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.MultiLabelBinarizer(classes=None, sparse_output=False)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/label.py#L764&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595ba25075da6872e76aab99c1840fcf03c36dfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.Normalizer(norm=&amp;rsquo;l2&amp;rsquo;, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L1583&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1063bde1da93f69e0564a0293b4f592338a2e0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.OneHotEncoder(n_values=None, categorical_features=None, categories=None, sparse=True, dtype=&amp;lt;class &amp;lsquo;numpy.float64&amp;rsquo;&amp;gt;, handle_unknown=&amp;rsquo;error&amp;rsquo;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/_encoders.py#L123&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d71d51f9c74897f5ce12f20bb1ac3dbc0cd38b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.OrdinalEncoder(categories=&amp;rsquo;auto&amp;rsquo;, dtype=&amp;lt;class &amp;lsquo;numpy.float64&amp;rsquo;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/_encoders.py#L693&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3932af7a5310346a2a36e3dc05037a77c0eb3526" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.PolynomialFeatures(degree=2, interaction_only=False, include_bias=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L1303&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdf9830c6633d822e84acd2cecac5078f9fee87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.PowerTransformer(method=&amp;rsquo;yeo-johnson&amp;rsquo;, standardize=True, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L2474&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494935ecf01df4e499a299127845131bcbdad6a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.QuantileTransformer(n_quantiles=1000, output_distribution=&amp;rsquo;uniform&amp;rsquo;, ignore_implicit_zeros=False, subsample=100000, random_state=None, copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L1974&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a4ea60bc9b90ba8f54a4de49034f22e342ea6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.RobustScaler(with_centering=True, with_scaling=True, quantile_range=(25.0, 75.0), copy=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L1027&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6e4208484bc5a268c6afe5bfbb4b0b0caf3c9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.preprocessing.StandardScaler(copy=True, with_mean=True, with_std=True)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/preprocessing/data.py#L480&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fcea3a0935d6bd6578f779e75cd650dc847d590" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.random_projection.GaussianRandomProjection(n_components=&amp;rsquo;auto&amp;rsquo;, eps=0.1, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/random_projection.py#L424&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c95151cb7219166d32eff77b26a3e9b92136291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.random_projection.SparseRandomProjection(n_components=&amp;rsquo;auto&amp;rsquo;, density=&amp;rsquo;auto&amp;rsquo;, eps=0.1, dense_output=False, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/random_projection.py#L513&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885f8e30634537c737b467eb4c67cb8c4539f055" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.semi_supervised.LabelPropagation(kernel=&amp;rsquo;rbf&amp;rsquo;, gamma=20, n_neighbors=7, alpha=None, max_iter=1000, tol=0.001, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/semi_supervised/label_propagation.py#L306&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09193f447c4d29cc7451e3363a4fe515d169f23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.semi_supervised.LabelSpreading(kernel=&amp;rsquo;rbf&amp;rsquo;, gamma=20, n_neighbors=7, alpha=0.2, max_iter=30, tol=0.001, n_jobs=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/semi_supervised/label_propagation.py#L422&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d91b7dcd38c2ef2d7877f48a65ae06e08c0f4be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.svm.LinearSVC(penalty=&amp;rsquo;l2&amp;rsquo;, loss=&amp;rsquo;squared_hinge&amp;rsquo;, dual=True, tol=0.0001, C=1.0, multi_class=&amp;rsquo;ovr&amp;rsquo;, fit_intercept=True, intercept_scaling=1, class_weight=None, verbose=0, random_state=None, max_iter=1000)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/svm/classes.py#L13&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee3c6dd426974d62952727177560864e23e53b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.svm.LinearSVR(epsilon=0.0, tol=0.0001, C=1.0, loss=&amp;rsquo;epsilon_insensitive&amp;rsquo;, fit_intercept=True, intercept_scaling=1.0, dual=True, verbose=0, random_state=None, max_iter=1000)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/svm/classes.py#L248&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0231c690629344b90f6114a2992aa6d2c662d06d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class sklearn.svm.NuSVC(nu=0.5, kernel=&amp;rsquo;rbf&amp;rsquo;, degree=3, gamma=&amp;rsquo;auto_deprecated&amp;rsquo;, coef0=0.0, shrinking=True, probability=False, tol=0.001, cache_size=200, class_weight=None, verbose=False, max_iter=-1, decision_function_shape=&amp;rsquo;ovr&amp;rsquo;, random_state=None)&lt;/code&gt;&lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/bac89c2/sklearn/svm/classes.py#L600&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
