<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="a276a8eb72688dedcfb96395cff00d3e5fcd36a1" translate="yes" xml:space="preserve">
          <source>Match the eagerly loaded results to their single parents.</source>
          <target state="translated">Сопоставьте результаты с нетерпением их родителей-одиночек.</target>
        </trans-unit>
        <trans-unit id="695ce32030dbcc9fae2c02c71a96aad461bcdc8d" translate="yes" xml:space="preserve">
          <source>Match the job name from the payload.</source>
          <target state="translated">Сопоставьте название работы с полезной нагрузкой.</target>
        </trans-unit>
        <trans-unit id="9154ada921e56ba78229ba71fa87ccd230f1f4d6" translate="yes" xml:space="preserve">
          <source>Match the results for a given type to their parents.</source>
          <target state="translated">Сравнить результаты для данного типа с их родителями.</target>
        </trans-unit>
        <trans-unit id="3ab93012fb3e05d4ba3726c4e2f28992080fdcfa" translate="yes" xml:space="preserve">
          <source>Max Attempts</source>
          <target state="translated">Макс Попытки</target>
        </trans-unit>
        <trans-unit id="4aa15bdb3c5fa1b1c45760b770ea6742401e5adf" translate="yes" xml:space="preserve">
          <source>Max Exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7b613da1726da7ad52e5d84eebc56c129ee249" translate="yes" xml:space="preserve">
          <source>MaxAttemptsExceededException</source>
          <target state="translated">MaxAttemptsExceededException</target>
        </trans-unit>
        <trans-unit id="82f760e5b39a7e4ec9522e631b73b001f95d29bb" translate="yes" xml:space="preserve">
          <source>MaxAttemptsExceededException (Queue)</source>
          <target state="translated">MaxAttemptsExceededException (Очередь)</target>
        </trans-unit>
        <trans-unit id="94eaf9c3eb7b20fcd99e4e469b9ae2e0ad318ab4" translate="yes" xml:space="preserve">
          <source>May McGinnis always control the board. #LaraconUS2015</source>
          <target state="translated">Пусть МакГиннис всегда контролирует доску.#LaraconUS2015</target>
        </trans-unit>
        <trans-unit id="f22e5c967a925a7c618597097fbab59746a5db18" translate="yes" xml:space="preserve">
          <source>Mbstring PHP Extension</source>
          <target state="translated">Расширение Mbstring PHP</target>
        </trans-unit>
        <trans-unit id="95e10576cd53d6885ea87af9e8e0a23af9606167" translate="yes" xml:space="preserve">
          <source>Medium Impact Changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc301f7283a9e45e85a8a8deab4551d236d86a4" translate="yes" xml:space="preserve">
          <source>Memcached</source>
          <target state="translated">Memcached</target>
        </trans-unit>
        <trans-unit id="b132ec4f475cb8771d8e37966043090d9d82d6ac" translate="yes" xml:space="preserve">
          <source>Memcached
    connect(array $servers, string|null $connectionId = null, array $options = [], array $credentials = [])</source>
          <target state="translated">Memcached connect(массив $серверов,string|null $connectionId=null,массив $options=[],массив $credentials=[]).</target>
        </trans-unit>
        <trans-unit id="a225645e34b41e8c86b8c8478cad33631fd88f70" translate="yes" xml:space="preserve">
          <source>Memcached
    getMemcached()</source>
          <target state="translated">Мемкэш getMemcached()</target>
        </trans-unit>
        <trans-unit id="48d73f692dc3b643270cd508381b7332ac68691e" translate="yes" xml:space="preserve">
          <source>MemcachedConnector</source>
          <target state="translated">MemcachedConnector</target>
        </trans-unit>
        <trans-unit id="1a4b1a1834431d0560e5a8f3d637657a0618bf20" translate="yes" xml:space="preserve">
          <source>MemcachedConnector (Cache)</source>
          <target state="translated">MemcachedConnector (Кэш)</target>
        </trans-unit>
        <trans-unit id="4d8476c23e99eed555fbf83d331aeae1ff6e61a6" translate="yes" xml:space="preserve">
          <source>MemcachedConnector::connect()</source>
          <target state="translated">MemcachedConnector::connect()</target>
        </trans-unit>
        <trans-unit id="9bb7f9b05838cfaef8548c98d27d3c1f461bba23" translate="yes" xml:space="preserve">
          <source>MemcachedConnector::createMemcachedInstance()</source>
          <target state="translated">MemcachedConnector::createMemcachedInstance()</target>
        </trans-unit>
        <trans-unit id="2bd791f1a479e805dc60e360269ff3c16b314a05" translate="yes" xml:space="preserve">
          <source>MemcachedConnector::getMemcached()</source>
          <target state="translated">MemcachedConnector::getMemcached()</target>
        </trans-unit>
        <trans-unit id="5c5412afdffacca47f317bebf926321f9fa53418" translate="yes" xml:space="preserve">
          <source>MemcachedConnector::setCredentials()</source>
          <target state="translated">MemcachedConnector::setCredentials()</target>
        </trans-unit>
        <trans-unit id="d5ea14af5c524ffdc2dae7db67ec0572c4bee4fa" translate="yes" xml:space="preserve">
          <source>MemcachedLock</source>
          <target state="translated">MemcachedLock</target>
        </trans-unit>
        <trans-unit id="692ec1cb7dd153587cb7839295da51e5a466d9b1" translate="yes" xml:space="preserve">
          <source>MemcachedLock (Cache)</source>
          <target state="translated">MemcachedLock (Cache)</target>
        </trans-unit>
        <trans-unit id="87b939c566554920004db11ba3b10d6a84dc634d" translate="yes" xml:space="preserve">
          <source>MemcachedLock::__construct()</source>
          <target state="translated">MemcachedLock::__construct()</target>
        </trans-unit>
        <trans-unit id="44be268f74aac0de4bd26d6ea03e0a4fade2d485" translate="yes" xml:space="preserve">
          <source>MemcachedLock::acquire()</source>
          <target state="translated">MemcachedLock::acquire()</target>
        </trans-unit>
        <trans-unit id="bcca81dfd83ba8c14ebee58d4af2a13ae716712c" translate="yes" xml:space="preserve">
          <source>MemcachedLock::forceRelease()</source>
          <target state="translated">MemcachedLock::forceRelease()</target>
        </trans-unit>
        <trans-unit id="965af3a96cd04b5dc6b7ca20651246e4798bdff6" translate="yes" xml:space="preserve">
          <source>MemcachedLock::getCurrentOwner()</source>
          <target state="translated">MemcachedLock::getCurrentOwner()</target>
        </trans-unit>
        <trans-unit id="68f37440577d818decfa993fe41e975706398fe2" translate="yes" xml:space="preserve">
          <source>MemcachedLock::release()</source>
          <target state="translated">MemcachedLock::release()</target>
        </trans-unit>
        <trans-unit id="0ebdee2a1a73019eb54779005c7bd69b974010e8" translate="yes" xml:space="preserve">
          <source>MemcachedStore</source>
          <target state="translated">MemcachedStore</target>
        </trans-unit>
        <trans-unit id="f0b311d2825b7cdf9c931041b4cbe1cad2798594" translate="yes" xml:space="preserve">
          <source>MemcachedStore (Cache)</source>
          <target state="translated">MemcachedStore (Кэш)</target>
        </trans-unit>
        <trans-unit id="932fe64f6980a01f9747edf54021d98cd5cce99e" translate="yes" xml:space="preserve">
          <source>MemcachedStore::__construct()</source>
          <target state="translated">MemcachedStore::__construct()</target>
        </trans-unit>
        <trans-unit id="a86ccc40ca8844b51e5023a3e518a9d5758bbb38" translate="yes" xml:space="preserve">
          <source>MemcachedStore::add()</source>
          <target state="translated">MemcachedStore::add()</target>
        </trans-unit>
        <trans-unit id="0b26b5d7c1ada8d7578897dcf7cf63e6e49e69f2" translate="yes" xml:space="preserve">
          <source>MemcachedStore::calculateExpiration()</source>
          <target state="translated">MemcachedStore::calculateExpiration()</target>
        </trans-unit>
        <trans-unit id="c8ecc7c91b8627bbfadb1eb44ed3de097fa21bb3" translate="yes" xml:space="preserve">
          <source>MemcachedStore::decrement()</source>
          <target state="translated">MemcachedStore::decrement()</target>
        </trans-unit>
        <trans-unit id="59ceaf907a092ad8a461150550f4e6c9445a7409" translate="yes" xml:space="preserve">
          <source>MemcachedStore::flush()</source>
          <target state="translated">MemcachedStore::flush()</target>
        </trans-unit>
        <trans-unit id="34ce89150088337bd27888097b4415b5786fc214" translate="yes" xml:space="preserve">
          <source>MemcachedStore::forever()</source>
          <target state="translated">MemcachedStore::forever()</target>
        </trans-unit>
        <trans-unit id="aed5d58c377895a1ce28aead481abae03dc71a98" translate="yes" xml:space="preserve">
          <source>MemcachedStore::forget()</source>
          <target state="translated">MemcachedStore::forget()</target>
        </trans-unit>
        <trans-unit id="f2f2642eda41194591a00755fb140247d835f31d" translate="yes" xml:space="preserve">
          <source>MemcachedStore::get()</source>
          <target state="translated">MemcachedStore::get()</target>
        </trans-unit>
        <trans-unit id="b840ff018a261cd3bb47eb76b923bc300c9dd48c" translate="yes" xml:space="preserve">
          <source>MemcachedStore::getMemcached()</source>
          <target state="translated">MemcachedStore::getMemcached()</target>
        </trans-unit>
        <trans-unit id="5c3c742790b4f790261e8d15e3c2c828ff58f219" translate="yes" xml:space="preserve">
          <source>MemcachedStore::getPrefix()</source>
          <target state="translated">MemcachedStore::getPrefix()</target>
        </trans-unit>
        <trans-unit id="de93533ebe1c77c3925add994764e7fbed15bb8a" translate="yes" xml:space="preserve">
          <source>MemcachedStore::increment()</source>
          <target state="translated">MemcachedStore::increment()</target>
        </trans-unit>
        <trans-unit id="ba9ba8b029684ae30347986200d66839a3730019" translate="yes" xml:space="preserve">
          <source>MemcachedStore::lock()</source>
          <target state="translated">MemcachedStore::lock()</target>
        </trans-unit>
        <trans-unit id="8be05b599c90a230c6ca71753b5997915ae89f34" translate="yes" xml:space="preserve">
          <source>MemcachedStore::many()</source>
          <target state="translated">MemcachedStore::many()</target>
        </trans-unit>
        <trans-unit id="0f25203704e598cc673b6786972ecf5b76475a99" translate="yes" xml:space="preserve">
          <source>MemcachedStore::put()</source>
          <target state="translated">MemcachedStore::put()</target>
        </trans-unit>
        <trans-unit id="2bd077411a94bd7fae838dfdafa7744cd0dcbd6c" translate="yes" xml:space="preserve">
          <source>MemcachedStore::putMany()</source>
          <target state="translated">MemcachedStore::putMany()</target>
        </trans-unit>
        <trans-unit id="14016abde98ff2d17270b3fea7f6d7e25b8ade09" translate="yes" xml:space="preserve">
          <source>MemcachedStore::restoreLock()</source>
          <target state="translated">MemcachedStore::restoreLock()</target>
        </trans-unit>
        <trans-unit id="177c438d5856ec0558b121877a2b2d671dba6912" translate="yes" xml:space="preserve">
          <source>MemcachedStore::setPrefix()</source>
          <target state="translated">MemcachedStore::setPrefix()</target>
        </trans-unit>
        <trans-unit id="825ed206b830b0dff97d8e1b22ae8cc6038318bd" translate="yes" xml:space="preserve">
          <source>MemcachedStore::toTimestamp()</source>
          <target state="translated">MemcachedStore::toTimestamp()</target>
        </trans-unit>
        <trans-unit id="958662748e7a88c3e22048b987c7e88023b98d21" translate="yes" xml:space="preserve">
          <source>Merge a configuration for a read / write connection.</source>
          <target state="translated">Объедините конфигурацию для соединения чтения/записи.</target>
        </trans-unit>
        <trans-unit id="148880ac004e6887afe829f26dd78fe79b588cfe" translate="yes" xml:space="preserve">
          <source>Merge a new array of messages into the bag.</source>
          <target state="translated">Объедините новый массив сообщений в пакет.</target>
        </trans-unit>
        <trans-unit id="c0ab41b982ae44bf6e8fea598eb4dd29acaa3d03" translate="yes" xml:space="preserve">
          <source>Merge a new array of messages into the message bag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed427a451d8e80d211d5bc058f297f114fb86c9" translate="yes" xml:space="preserve">
          <source>Merge a value based on a given condition.</source>
          <target state="translated">Объединить значение,основанное на заданном условии.</target>
        </trans-unit>
        <trans-unit id="eee4f4e96d9cba7f37507cffc8b957859bb1cd98" translate="yes" xml:space="preserve">
          <source>Merge a value into the array.</source>
          <target state="translated">Объединить значение в массив.</target>
        </trans-unit>
        <trans-unit id="50659099b39e3459e62327d35d2727e92ff8e4dd" translate="yes" xml:space="preserve">
          <source>Merge additional attributes / values into the attribute bag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362681aa36b5252987483d43133e19ccebb11755" translate="yes" xml:space="preserve">
          <source>Merge additional rules into a given attribute(s).</source>
          <target state="translated">Объединить дополнительные правила в заданный атрибут(ы).</target>
        </trans-unit>
        <trans-unit id="2b5f5f595f607cd32a46d6737e12195499d3d15c" translate="yes" xml:space="preserve">
          <source>Merge additional rules into a given attribute.</source>
          <target state="translated">Объединить дополнительные правила в заданный атрибут.</target>
        </trans-unit>
        <trans-unit id="a145596da1351451f52041486b96a94c42565887" translate="yes" xml:space="preserve">
          <source>Merge an array of bindings into our bindings.</source>
          <target state="translated">Соедините массив креплений в наши крепления.</target>
        </trans-unit>
        <trans-unit id="c74f8d988a74efb019172f993b480cd5560091ed" translate="yes" xml:space="preserve">
          <source>Merge an array of where clauses and bindings.</source>
          <target state="translated">Объедините массив пунктов и связок.</target>
        </trans-unit>
        <trans-unit id="4b33b734aa1e143970c1322dd03c951b5bda15cd" translate="yes" xml:space="preserve">
          <source>Merge new casts with existing casts on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf435a867db8b1bd40a7b09167a4ec71127ecc9f" translate="yes" xml:space="preserve">
          <source>Merge new fillable attributes with existing fillable attributes on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc07f982854f78351a9aeff655dd1ee11a953301" translate="yes" xml:space="preserve">
          <source>Merge new flash keys into the new flash array.</source>
          <target state="translated">Объединить новые ключи флэш-памяти в новый массив флэш-памяти.</target>
        </trans-unit>
        <trans-unit id="6fe4930b486e75e44b15cc10f2cb9cad48a0a2af" translate="yes" xml:space="preserve">
          <source>Merge new guarded attributes with existing guarded attributes on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a983d4047ac4f92344ffdc2be60e5cef402c04a8" translate="yes" xml:space="preserve">
          <source>Merge new input into the current request's input array.</source>
          <target state="translated">Объединить новый вход в массив ввода текущего запроса.</target>
        </trans-unit>
        <trans-unit id="79cd5a6c5d7a341079d1edaa7e6241084c7dec45" translate="yes" xml:space="preserve">
          <source>Merge new options into the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b06fc2c2779d18e79b799c11c5768dafeceedac" translate="yes" xml:space="preserve">
          <source>Merge route groups into a new array.</source>
          <target state="translated">Объединить группы маршрутов в новый массив.</target>
        </trans-unit>
        <trans-unit id="f1469b1f109f4f5c03dc1cface10a10d2c0f6e1c" translate="yes" xml:space="preserve">
          <source>Merge the cast class attributes back into the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7472280d27711a646a6490615ccd0cfba4334438" translate="yes" xml:space="preserve">
          <source>Merge the collection with the given items.</source>
          <target state="translated">Объедините коллекцию с данными предметами.</target>
        </trans-unit>
        <trans-unit id="b28256af0dd0bd771f3a7e5693949d30e634f406" translate="yes" xml:space="preserve">
          <source>Merge the given array with the last group stack.</source>
          <target state="translated">Объединить данный массив с последним групповым стеком.</target>
        </trans-unit>
        <trans-unit id="42b0a7e59c5d3b6baad749d0a0c0c9e375ee903f" translate="yes" xml:space="preserve">
          <source>Merge the given attributes.</source>
          <target state="translated">Соедините данные атрибуты.</target>
        </trans-unit>
        <trans-unit id="77a24defc8b0bfb1ff15c8844302d8f412ed36de" translate="yes" xml:space="preserve">
          <source>Merge the given configuration with the existing configuration.</source>
          <target state="translated">Соедините данную конфигурацию с существующей.</target>
        </trans-unit>
        <trans-unit id="db67a3a94039d26a9e70f419c5e19f8601e92456" translate="yes" xml:space="preserve">
          <source>Merge the given data in at the given index.</source>
          <target state="translated">Соедините данные по данному индексу.</target>
        </trans-unit>
        <trans-unit id="0899595b2f9ba2407cd60a68c8bfbdc4a07d4a79" translate="yes" xml:space="preserve">
          <source>Merge the given options with the current request options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf03096b35ec0d418d20c89e676fbb500dc4fca" translate="yes" xml:space="preserve">
          <source>Merge the group stack with the controller action.</source>
          <target state="translated">Соедините групповой стек с действием контроллера.</target>
        </trans-unit>
        <trans-unit id="2b39ac9d62d604ba855f92faf1bc869d7a8ec553" translate="yes" xml:space="preserve">
          <source>Merge the where constraints from another query to the current query.</source>
          <target state="translated">Объединить ограничения где из другого запроса к текущему запросу.</target>
        </trans-unit>
        <trans-unit id="a9dbc7309b1e6861488fb9eebe9600edfec9444d" translate="yes" xml:space="preserve">
          <source>MergeValue</source>
          <target state="translated">MergeValue</target>
        </trans-unit>
        <trans-unit id="6a59ad59d2240995b144660262329d4b552d95f5" translate="yes" xml:space="preserve">
          <source>MergeValue (Http\Resources)</source>
          <target state="translated">MergeValue (Http\Resources)</target>
        </trans-unit>
        <trans-unit id="6e397aac915c60948a182feb122912a801569fbd" translate="yes" xml:space="preserve">
          <source>MergeValue::__construct()</source>
          <target state="translated">MergeValue::__construct()</target>
        </trans-unit>
        <trans-unit id="b41100eb2f8989fda8db341473303ba232b45221" translate="yes" xml:space="preserve">
          <source>Merging Conditional Attributes</source>
          <target state="translated">Слияние условных атрибутов</target>
        </trans-unit>
        <trans-unit id="390760d3835fe72324a3f7d15954425d535457dd" translate="yes" xml:space="preserve">
          <source>Merging Custom Configuration</source>
          <target state="translated">Объединение пользовательских настроек</target>
        </trans-unit>
        <trans-unit id="68f4145fee7dde76afceb910165924ad14cf0d00" translate="yes" xml:space="preserve">
          <source>Message</source>
          <target state="translated">Message</target>
        </trans-unit>
        <trans-unit id="bb81a6f286563c3b18d279348416a3e95879007e" translate="yes" xml:space="preserve">
          <source>Message
    send(mixed $notifiable, &lt;a href=&quot;../notification&quot;&gt;Notification&lt;/a&gt; $notification)</source>
          <target state="translated">Отправка сообщения (смешанное $ notifiable, &lt;a href=&quot;../notification&quot;&gt;Notification&lt;/a&gt; $ уведомление)</target>
        </trans-unit>
        <trans-unit id="808ad8390b1294c665e5ffba95ce911d585210b1" translate="yes" xml:space="preserve">
          <source>Message (Mail)</source>
          <target state="translated">Сообщение (Mail)</target>
        </trans-unit>
        <trans-unit id="479ddce222f9fb2955ff3763312fce3c6638a4cb" translate="yes" xml:space="preserve">
          <source>Message::__call()</source>
          <target state="translated">Message::__call()</target>
        </trans-unit>
        <trans-unit id="2038ad69c132bb295735c1bff9cb798ad30438b5" translate="yes" xml:space="preserve">
          <source>Message::__construct()</source>
          <target state="translated">Message::__construct()</target>
        </trans-unit>
        <trans-unit id="8d4a663628b134cbd6ee07d67c5a100e64400ad5" translate="yes" xml:space="preserve">
          <source>Message::addAddresses()</source>
          <target state="translated">Message::addAddresses()</target>
        </trans-unit>
        <trans-unit id="bd6e8488a14c7fe41fa9d6413a12d43eaea81a5a" translate="yes" xml:space="preserve">
          <source>Message::attach()</source>
          <target state="translated">Message::attach()</target>
        </trans-unit>
        <trans-unit id="162b95cce75878634a0c502d6265b9361d38ac70" translate="yes" xml:space="preserve">
          <source>Message::attachData()</source>
          <target state="translated">Message::attachData()</target>
        </trans-unit>
        <trans-unit id="9dfe11a440dab591a2f3447477c84ccd9f36f0e1" translate="yes" xml:space="preserve">
          <source>Message::bcc()</source>
          <target state="translated">Message::bcc()</target>
        </trans-unit>
        <trans-unit id="c1c6bdb192df8efdd95f75e642f1dc81921a61c1" translate="yes" xml:space="preserve">
          <source>Message::cc()</source>
          <target state="translated">Message::cc()</target>
        </trans-unit>
        <trans-unit id="0cbe8a34f135e8343a1a451ba4919a209a9c2146" translate="yes" xml:space="preserve">
          <source>Message::createAttachmentFromData()</source>
          <target state="translated">Message::createAttachmentFromData()</target>
        </trans-unit>
        <trans-unit id="c39005be81f8d0bbd0e0cd167e804f87858e3322" translate="yes" xml:space="preserve">
          <source>Message::createAttachmentFromPath()</source>
          <target state="translated">Message::createAttachmentFromPath()</target>
        </trans-unit>
        <trans-unit id="75eaaf1b4f856ddade874ae72d6a03397e440006" translate="yes" xml:space="preserve">
          <source>Message::embed()</source>
          <target state="translated">Message::embed()</target>
        </trans-unit>
        <trans-unit id="e48924c3891870ca7215d33b8c7d8bab43ad32f7" translate="yes" xml:space="preserve">
          <source>Message::embedData()</source>
          <target state="translated">Message::embedData()</target>
        </trans-unit>
        <trans-unit id="8c0ddf489d12b3a7b3b2363a9856f3a3b5c831fe" translate="yes" xml:space="preserve">
          <source>Message::from()</source>
          <target state="translated">Message::from()</target>
        </trans-unit>
        <trans-unit id="e8d73ecb186eac19ff24d28bddaa47d59e384f3d" translate="yes" xml:space="preserve">
          <source>Message::getSwiftMessage()</source>
          <target state="translated">Message::getSwiftMessage()</target>
        </trans-unit>
        <trans-unit id="44a7358a8b446f103b62f9dcbd13733aef65c608" translate="yes" xml:space="preserve">
          <source>Message::prepAttachment()</source>
          <target state="translated">Message::prepAttachment()</target>
        </trans-unit>
        <trans-unit id="cedd97796238efdfe51e79aeae115aad85e1cbdf" translate="yes" xml:space="preserve">
          <source>Message::priority()</source>
          <target state="translated">Message::priority()</target>
        </trans-unit>
        <trans-unit id="5af98103b833b358cf473f064a061710bd5da1f8" translate="yes" xml:space="preserve">
          <source>Message::replyTo()</source>
          <target state="translated">Message::replyTo()</target>
        </trans-unit>
        <trans-unit id="3756770ab89d260016a8f6e31fd1dc7e5ae78d66" translate="yes" xml:space="preserve">
          <source>Message::returnPath()</source>
          <target state="translated">Message::returnPath()</target>
        </trans-unit>
        <trans-unit id="2ab785248f237475004c2590899a53ca2f687f52" translate="yes" xml:space="preserve">
          <source>Message::sender()</source>
          <target state="translated">Message::sender()</target>
        </trans-unit>
        <trans-unit id="bd43d65475af6368881100690dac58b4730c3e06" translate="yes" xml:space="preserve">
          <source>Message::subject()</source>
          <target state="translated">Message::subject()</target>
        </trans-unit>
        <trans-unit id="0821521d8a953ef01c1c438ade99d8e5401f518c" translate="yes" xml:space="preserve">
          <source>Message::to()</source>
          <target state="translated">Message::to()</target>
        </trans-unit>
        <trans-unit id="53f9ec151752f9c1ff4b0f51ef5f619e565651a3" translate="yes" xml:space="preserve">
          <source>MessageBag</source>
          <target state="translated">MessageBag</target>
        </trans-unit>
        <trans-unit id="f892ce776e5ad460654c6ae784e4360e72900a1d" translate="yes" xml:space="preserve">
          <source>MessageBag (Contracts)</source>
          <target state="translated">MessageBag (Контракты)</target>
        </trans-unit>
        <trans-unit id="8c1b643c3b74a8e3aab6ddd5ceb406a10950a68f" translate="yes" xml:space="preserve">
          <source>MessageBag (Support)</source>
          <target state="translated">MessageBag (Поддержка)</target>
        </trans-unit>
        <trans-unit id="6a730bd55b436ceb0fe0ed7605e50d90da6f26b5" translate="yes" xml:space="preserve">
          <source>MessageBag::__construct()</source>
          <target state="translated">MessageBag::__construct()</target>
        </trans-unit>
        <trans-unit id="aac89f44b0942798e3d78d0a1a1b3abc68aaa40b" translate="yes" xml:space="preserve">
          <source>MessageBag::__toString()</source>
          <target state="translated">MessageBag::__toString()</target>
        </trans-unit>
        <trans-unit id="f254c6b1a6b6c48719e614724eedc324ac318ab8" translate="yes" xml:space="preserve">
          <source>MessageBag::add()</source>
          <target state="translated">MessageBag::add()</target>
        </trans-unit>
        <trans-unit id="907a1c9a97e5c726da8d9fd4e81ac500ec2cab0b" translate="yes" xml:space="preserve">
          <source>MessageBag::addIf()</source>
          <target state="translated">MessageBag::addIf()</target>
        </trans-unit>
        <trans-unit id="43ef3602b9b0d79fa57b9f014631a72ef848a6be" translate="yes" xml:space="preserve">
          <source>MessageBag::all()</source>
          <target state="translated">MessageBag::all()</target>
        </trans-unit>
        <trans-unit id="620f54d47cf1f5e0f1db53b3b2d7e3b71d181a31" translate="yes" xml:space="preserve">
          <source>MessageBag::any()</source>
          <target state="translated">MessageBag::any()</target>
        </trans-unit>
        <trans-unit id="b49d767ddcfd761cc19864c71cf074033abf9a44" translate="yes" xml:space="preserve">
          <source>MessageBag::checkFormat()</source>
          <target state="translated">MessageBag::checkFormat()</target>
        </trans-unit>
        <trans-unit id="ef483ad20ac627e20bf3d741601055daf44910cc" translate="yes" xml:space="preserve">
          <source>MessageBag::count()</source>
          <target state="translated">MessageBag::count()</target>
        </trans-unit>
        <trans-unit id="1a283b8ca7e40aa1e9f900eaac36900673f9e8fe" translate="yes" xml:space="preserve">
          <source>MessageBag::first()</source>
          <target state="translated">MessageBag::first()</target>
        </trans-unit>
        <trans-unit id="38aa809a592c3cabcae5040c69556787d65d37cb" translate="yes" xml:space="preserve">
          <source>MessageBag::get()</source>
          <target state="translated">MessageBag::get()</target>
        </trans-unit>
        <trans-unit id="245e918dd622fea7cfd63ccacb1991156d61d7bf" translate="yes" xml:space="preserve">
          <source>MessageBag::getFormat()</source>
          <target state="translated">MessageBag::getFormat()</target>
        </trans-unit>
        <trans-unit id="5e20cca2981ed0884fa4ed25894613620aa37e07" translate="yes" xml:space="preserve">
          <source>MessageBag::getMessageBag()</source>
          <target state="translated">MessageBag::getMessageBag()</target>
        </trans-unit>
        <trans-unit id="2c75faf09bbcae30fe33093def3a9a7f9ebbf672" translate="yes" xml:space="preserve">
          <source>MessageBag::getMessages()</source>
          <target state="translated">MessageBag::getMessages()</target>
        </trans-unit>
        <trans-unit id="3956396a35df1aad88e8cdc567e89175f043dcae" translate="yes" xml:space="preserve">
          <source>MessageBag::getMessagesForWildcardKey()</source>
          <target state="translated">MessageBag::getMessagesForWildcardKey()</target>
        </trans-unit>
        <trans-unit id="14e934947e6aa5334fe9bd473be8f14c92d46ded" translate="yes" xml:space="preserve">
          <source>MessageBag::has()</source>
          <target state="translated">MessageBag::has()</target>
        </trans-unit>
        <trans-unit id="450345bf153787c3ba32311165a4c8231ad41721" translate="yes" xml:space="preserve">
          <source>MessageBag::hasAny()</source>
          <target state="translated">MessageBag::hasAny()</target>
        </trans-unit>
        <trans-unit id="f2a4226b6d305f1b5824c42c4b21fe1a7598376b" translate="yes" xml:space="preserve">
          <source>MessageBag::isEmpty()</source>
          <target state="translated">MessageBag::isEmpty()</target>
        </trans-unit>
        <trans-unit id="5c324db2fee421bcd336c36bbd2f702d1d9be0ed" translate="yes" xml:space="preserve">
          <source>MessageBag::isNotEmpty()</source>
          <target state="translated">MessageBag::isNotEmpty()</target>
        </trans-unit>
        <trans-unit id="357d71339a98ad95877df552b8c2b72ba413998a" translate="yes" xml:space="preserve">
          <source>MessageBag::isUnique()</source>
          <target state="translated">MessageBag::isUnique()</target>
        </trans-unit>
        <trans-unit id="df727114e3193718ecd24f16f556e918f53a4e0f" translate="yes" xml:space="preserve">
          <source>MessageBag::jsonSerialize()</source>
          <target state="translated">MessageBag::jsonSerialize()</target>
        </trans-unit>
        <trans-unit id="41f7d2e3bb8c7c4653d82c98f2b7dc0d93c3eb5a" translate="yes" xml:space="preserve">
          <source>MessageBag::keys()</source>
          <target state="translated">MessageBag::keys()</target>
        </trans-unit>
        <trans-unit id="a2173716d763e5757f82e691c3da08d6995db0bf" translate="yes" xml:space="preserve">
          <source>MessageBag::merge()</source>
          <target state="translated">MessageBag::merge()</target>
        </trans-unit>
        <trans-unit id="4473aa31f15d8434af09636993006a04be5f77c9" translate="yes" xml:space="preserve">
          <source>MessageBag::messages()</source>
          <target state="translated">MessageBag::messages()</target>
        </trans-unit>
        <trans-unit id="1d4eec5e06c3bb4b019a3ca67bf3f67fff6144ef" translate="yes" xml:space="preserve">
          <source>MessageBag::setFormat()</source>
          <target state="translated">MessageBag::setFormat()</target>
        </trans-unit>
        <trans-unit id="e6fcd771d2d461951dc60f2de1a67a172ba409ff" translate="yes" xml:space="preserve">
          <source>MessageBag::toArray()</source>
          <target state="translated">MessageBag::toArray()</target>
        </trans-unit>
        <trans-unit id="e6dea3822b694d5a730b2d27d27412bca7738e64" translate="yes" xml:space="preserve">
          <source>MessageBag::toJson()</source>
          <target state="translated">MessageBag::toJson()</target>
        </trans-unit>
        <trans-unit id="dd8333e711240b277c214271efa8ed4c84548b03" translate="yes" xml:space="preserve">
          <source>MessageBag::transform()</source>
          <target state="translated">MessageBag::transform()</target>
        </trans-unit>
        <trans-unit id="27fce945ebb3217502eea12bdcbf6cc66971dc4d" translate="yes" xml:space="preserve">
          <source>MessageBag::unique()</source>
          <target state="translated">MessageBag::unique()</target>
        </trans-unit>
        <trans-unit id="6b568c8dbbc27a3f14a20bc48fe3322c744e2bf2" translate="yes" xml:space="preserve">
          <source>MessageInterface</source>
          <target state="translated">MessageInterface</target>
        </trans-unit>
        <trans-unit id="47141bd6cf08ac004d71074b137e876fba006633" translate="yes" xml:space="preserve">
          <source>MessageLogged</source>
          <target state="translated">MessageLogged</target>
        </trans-unit>
        <trans-unit id="862a6a66c0c732be6bdc53b08c0c6e08c8f43b6e" translate="yes" xml:space="preserve">
          <source>MessageLogged (Log\Events)</source>
          <target state="translated">MessageLogged (Log\Events)</target>
        </trans-unit>
        <trans-unit id="c4f9d2caa32878e61e9a53ff8fb648b31728ae6b" translate="yes" xml:space="preserve">
          <source>MessageLogged::__construct()</source>
          <target state="translated">MessageLogged::__construct()</target>
        </trans-unit>
        <trans-unit id="7769546c16943cfe38de7c9e6dd5e5c242457e7b" translate="yes" xml:space="preserve">
          <source>MessageProvider</source>
          <target state="translated">MessageProvider</target>
        </trans-unit>
        <trans-unit id="25c628363fa6705a7033a5ba721245e7f4bb7dbb" translate="yes" xml:space="preserve">
          <source>MessageProvider (Contracts)</source>
          <target state="translated">MessageProvider (Контракты)</target>
        </trans-unit>
        <trans-unit id="6b25e6da1553e5e9a5ef0d22b07ae24100c03ade" translate="yes" xml:space="preserve">
          <source>MessageProvider::getMessageBag()</source>
          <target state="translated">MessageProvider::getMessageBag()</target>
        </trans-unit>
        <trans-unit id="c015507fb3de9b79f3e3e6532b55270e6b42a008" translate="yes" xml:space="preserve">
          <source>MessageSelector</source>
          <target state="translated">MessageSelector</target>
        </trans-unit>
        <trans-unit id="13de6a3815e6610bef1ab2a6e48aa7d74ebd200e" translate="yes" xml:space="preserve">
          <source>MessageSelector (Translation)</source>
          <target state="translated">MessageSelector (Перевод)</target>
        </trans-unit>
        <trans-unit id="010e7b8c8116a3018d1104f4b19c77785b2444d8" translate="yes" xml:space="preserve">
          <source>MessageSelector::choose()</source>
          <target state="translated">MessageSelector::choose()</target>
        </trans-unit>
        <trans-unit id="2e2615b6de881554a25a38e8c25c28ad6b65661d" translate="yes" xml:space="preserve">
          <source>MessageSelector::getPluralIndex()</source>
          <target state="translated">MessageSelector::getPluralIndex()</target>
        </trans-unit>
        <trans-unit id="f5d5f736e07b823ca16dac07c268150a6a5ba175" translate="yes" xml:space="preserve">
          <source>MessageSending</source>
          <target state="translated">MessageSending</target>
        </trans-unit>
        <trans-unit id="9a5553fadab7f5913031a1b521038b443514fbb7" translate="yes" xml:space="preserve">
          <source>MessageSending (Mail\Events)</source>
          <target state="translated">Отправка сообщений (Mail\Events)</target>
        </trans-unit>
        <trans-unit id="4fc275570405eccdf134136f2b9a1b6482dedce4" translate="yes" xml:space="preserve">
          <source>MessageSending::__construct()</source>
          <target state="translated">MessageSending::__construct()</target>
        </trans-unit>
        <trans-unit id="2f09c9e08e3db7ed6023ce1ebe0803cab7056355" translate="yes" xml:space="preserve">
          <source>MessageSent</source>
          <target state="translated">MessageSent</target>
        </trans-unit>
        <trans-unit id="f89f203a288407952e19ecae65ebc35fc51e0141" translate="yes" xml:space="preserve">
          <source>MessageSent (Mail\Events)</source>
          <target state="translated">MessageSent (Mail\Events)</target>
        </trans-unit>
        <trans-unit id="be090027067cb1c224631bc412bbc82bb104a022" translate="yes" xml:space="preserve">
          <source>MessageSent::__construct()</source>
          <target state="translated">MessageSent::__construct()</target>
        </trans-unit>
        <trans-unit id="0845ff61f815eaebe78b1fd527fbe2037aef7f3b" translate="yes" xml:space="preserve">
          <source>MessageSent::__serialize()</source>
          <target state="translated">MessageSent::__serialize()</target>
        </trans-unit>
        <trans-unit id="72c94eb69439981e35711e58d223c01d7a7e50a3" translate="yes" xml:space="preserve">
          <source>MessageSent::__unserialize()</source>
          <target state="translated">MessageSent::__unserialize()</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="8379f3d4cd3a6c63b2d63edb345b019b9dbd678f" translate="yes" xml:space="preserve">
          <source>Method Field</source>
          <target state="translated">Метод Поле</target>
        </trans-unit>
        <trans-unit id="2e2b394af636e54cb732f37f241456f842cb339d" translate="yes" xml:space="preserve">
          <source>Method Injection</source>
          <target state="translated">Метод инъекции</target>
        </trans-unit>
        <trans-unit id="109db553a73739bbdbe008237d3fc579abcc2c43" translate="yes" xml:space="preserve">
          <source>Method Listing</source>
          <target state="translated">Перечень методов</target>
        </trans-unit>
        <trans-unit id="af27076bd77d5374f9e055f792305afe8460bfa1" translate="yes" xml:space="preserve">
          <source>MethodNotAllowedHttpException</source>
          <target state="translated">MethodNotAllowedHttpException</target>
        </trans-unit>
        <trans-unit id="8d35cf2f237d7d9d01ec42011558e45074efcf82" translate="yes" xml:space="preserve">
          <source>MethodValidator</source>
          <target state="translated">MethodValidator</target>
        </trans-unit>
        <trans-unit id="c783dd2ebf1cb2f4d72a5747da06ba44710afa3a" translate="yes" xml:space="preserve">
          <source>MethodValidator (Routing\Matching)</source>
          <target state="translated">МетодВалидатор (Routing\Matching)</target>
        </trans-unit>
        <trans-unit id="9f82208fad2e9cd6c26db6c95d643c444f631683" translate="yes" xml:space="preserve">
          <source>MethodValidator::matches()</source>
          <target state="translated">MethodValidator::matches()</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="487f676b71765d96ea2e9b2052385d05167753e0" translate="yes" xml:space="preserve">
          <source>Methods Without Models</source>
          <target state="translated">Методы без моделей</target>
        </trans-unit>
        <trans-unit id="371f7eeaf45554f36505dad7e774c98e4b2799bf" translate="yes" xml:space="preserve">
          <source>Methods that mutate the collection (such as &lt;code&gt;shift&lt;/code&gt;, &lt;code&gt;pop&lt;/code&gt;, &lt;code&gt;prepend&lt;/code&gt; etc.) are &lt;em&gt;not&lt;/em&gt; available on the &lt;code&gt;LazyCollection&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf6a1f0ce8cfffc5cd8f14230ab1fecd0f34953" translate="yes" xml:space="preserve">
          <source>Metrics</source>
          <target state="translated">Metrics</target>
        </trans-unit>
        <trans-unit id="eb8978ed84b5906ad4191a0b252828be64701bfa" translate="yes" xml:space="preserve">
          <source>Middleware</source>
          <target state="translated">Middleware</target>
        </trans-unit>
        <trans-unit id="de205887d09314c23178969115968fd8e6afe2be" translate="yes" xml:space="preserve">
          <source>Middleware Groups</source>
          <target state="translated">Группы по среднему программному обеспечению</target>
        </trans-unit>
        <trans-unit id="4a88631cce1bcfb561ba6bf7e26161bbc0a9f240" translate="yes" xml:space="preserve">
          <source>Middleware Parameters</source>
          <target state="translated">Параметры промежуточного программного обеспечения</target>
        </trans-unit>
        <trans-unit id="dbc89a25f333275b43b42f0fa27c2d56472712a9" translate="yes" xml:space="preserve">
          <source>Middleware can also receive additional parameters. For example, if your application needs to verify that the authenticated user has a given &quot;role&quot; before performing a given action, you could create a &lt;code&gt;CheckRole&lt;/code&gt; middleware that receives a role name as an additional argument.</source>
          <target state="translated">Промежуточное ПО также может получать дополнительные параметры. Например, если вашему приложению необходимо проверить, что аутентифицированный пользователь имеет заданную &amp;laquo;роль&amp;raquo; перед выполнением заданного действия, вы можете создать промежуточное программное обеспечение &lt;code&gt;CheckRole&lt;/code&gt; , которое получает имя роли в качестве дополнительного аргумента.</target>
        </trans-unit>
        <trans-unit id="8908cbd17000a4a7d86880912429b296a3da7042" translate="yes" xml:space="preserve">
          <source>Middleware groups may be assigned to routes and controller actions using the same syntax as individual middleware. Again, middleware groups make it more convenient to assign many middleware to a route at once:</source>
          <target state="translated">Группы промежуточного программного обеспечения могут быть назначены для маршрутов и действий контроллера,используя тот же синтаксис,что и отдельные промежуточное программное обеспечение.Опять же,группы промежуточного программного обеспечения делают более удобным назначение многих промежуточного программного обеспечения на маршрут одновременно:</target>
        </trans-unit>
        <trans-unit id="ef9a2dfce2e175d3c8cfc3ce94c882912e8777b8" translate="yes" xml:space="preserve">
          <source>Middleware parameters may be specified when defining the route by separating the middleware name and parameters with a &lt;code&gt;:&lt;/code&gt;. Multiple parameters should be delimited by commas:</source>
          <target state="translated">Промежуточные параметры могут быть определены при определении маршрута, отделяя имя промежуточного слоя и параметры с микросхемой &lt;code&gt;:&lt;/code&gt; . Несколько параметров следует разделять запятыми:</target>
        </trans-unit>
        <trans-unit id="e8607203cd394647245c38cf0232126da4dd0b91" translate="yes" xml:space="preserve">
          <source>Middleware provide a convenient mechanism for filtering HTTP requests entering your application. For example, Laravel includes a middleware that verifies the user of your application is authenticated. If the user is not authenticated, the middleware will redirect the user to the login screen. However, if the user is authenticated, the middleware will allow the request to proceed further into the application.</source>
          <target state="translated">Middleware обеспечивает удобный механизм фильтрации HTTP-запросов,поступающих в ваше приложение.Например,Laravel включает в себя промежуточное программное обеспечение,которое проверяет подлинность пользователя вашего приложения.Если пользователь не аутентифицирован,промежуточное программное обеспечение будет перенаправлять пользователя на экран входа в систему.Однако если пользователь аутентифицирован,промежуточное программное обеспечение позволит запрос продолжить работу с приложением.</target>
        </trans-unit>
        <trans-unit id="217904883f532a75d0d61de7cb1cbddea7e4b59d" translate="yes" xml:space="preserve">
          <source>MiddlewareMakeCommand</source>
          <target state="translated">MiddlewareMakeCommand</target>
        </trans-unit>
        <trans-unit id="854587e9671079963c7bf5b3106a7f32d00f4177" translate="yes" xml:space="preserve">
          <source>MiddlewareMakeCommand (Routing)</source>
          <target state="translated">MiddlewareMakeCommand (Маршрутизация)</target>
        </trans-unit>
        <trans-unit id="0d1e43a712843a88a5f75ee60eed6c6edec41ce2" translate="yes" xml:space="preserve">
          <source>MiddlewareMakeCommand::getDefaultNamespace()</source>
          <target state="translated">MiddlewareMakeCommand::getDefaultNamespace()</target>
        </trans-unit>
        <trans-unit id="b888c49c3fd770561d44314cc988ae9f10100e3b" translate="yes" xml:space="preserve">
          <source>MiddlewareMakeCommand::getStub()</source>
          <target state="translated">MiddlewareMakeCommand::getStub()</target>
        </trans-unit>
        <trans-unit id="4ad14d5b44df41aa666727dc7b07c1724c3a8d52" translate="yes" xml:space="preserve">
          <source>MiddlewareMakeCommand::resolveStubPath()</source>
          <target state="translated">MiddlewareMakeCommand::resolveStubPath()</target>
        </trans-unit>
        <trans-unit id="a4685fda1fce1cfc80c4053bbc14733229f1f11c" translate="yes" xml:space="preserve">
          <source>MiddlewareNameResolver</source>
          <target state="translated">MiddlewareNameResolver</target>
        </trans-unit>
        <trans-unit id="f684beb1ceb5534684b676ce7a6956cda282fb15" translate="yes" xml:space="preserve">
          <source>MiddlewareNameResolver (Routing)</source>
          <target state="translated">MiddlewareNameResolver (Маршрутизация)</target>
        </trans-unit>
        <trans-unit id="75b3f9d52949d8bff282ce8ae43e31ee9742e488" translate="yes" xml:space="preserve">
          <source>MiddlewareNameResolver::parseMiddlewareGroup()</source>
          <target state="translated">MiddlewareNameResolver::parseMiddlewareGroup()</target>
        </trans-unit>
        <trans-unit id="ce5e82121a91ad8a9cbb30ce69a27ca98ad3a705" translate="yes" xml:space="preserve">
          <source>MiddlewareNameResolver::resolve()</source>
          <target state="translated">MiddlewareNameResolver::resolve()</target>
        </trans-unit>
        <trans-unit id="d803ca5e83f92059e6732f6a7287552d5ba16410" translate="yes" xml:space="preserve">
          <source>Migrate any delayed or expired jobs onto the primary queue.</source>
          <target state="translated">Перенести любые задержанные или просроченные рабочие места в основную очередь.</target>
        </trans-unit>
        <trans-unit id="cbe2815068ad2040613a54b06f6b37a5e3a4a8fe" translate="yes" xml:space="preserve">
          <source>Migrate the delayed jobs that are ready to the regular queue.</source>
          <target state="translated">Перенести задержанные рабочие места,готовые к обычной очереди.</target>
        </trans-unit>
        <trans-unit id="e89b70eee619a119efa6d81f8f37f8351645ef82" translate="yes" xml:space="preserve">
          <source>MigrateCommand</source>
          <target state="translated">MigrateCommand</target>
        </trans-unit>
        <trans-unit id="42ab61603e3dca2bb41151c951f5280442fb0c80" translate="yes" xml:space="preserve">
          <source>MigrateCommand (Database\Console\Migrations)</source>
          <target state="translated">MigrateCommand (Database\Console\Migrations).</target>
        </trans-unit>
        <trans-unit id="c45fa0c697bb5c394483fd5a5fffabe51d2e0475" translate="yes" xml:space="preserve">
          <source>MigrateCommand::__construct()</source>
          <target state="translated">MigrateCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="12f64b301af093bfe7ad46f7c6b2ade7335b9302" translate="yes" xml:space="preserve">
          <source>MigrateCommand::handle()</source>
          <target state="translated">MigrateCommand::handle()</target>
        </trans-unit>
        <trans-unit id="ec0be1f41953d192bd52d9b5ca8cc227cd02751e" translate="yes" xml:space="preserve">
          <source>MigrateCommand::loadSchemaState()</source>
          <target state="translated">MigrateCommand::loadSchemaState()</target>
        </trans-unit>
        <trans-unit id="5614291158972ad6e217956a1e3bab1d7a05d602" translate="yes" xml:space="preserve">
          <source>MigrateCommand::prepareDatabase()</source>
          <target state="translated">MigrateCommand::prepareDatabase()</target>
        </trans-unit>
        <trans-unit id="cda87d947c9d42c679f609c58398cb7da7261c5b" translate="yes" xml:space="preserve">
          <source>MigrateCommand::schemaPath()</source>
          <target state="translated">MigrateCommand::schemaPath()</target>
        </trans-unit>
        <trans-unit id="dfe18a83eaf65cd24b407cbf4ed89ee3e02be456" translate="yes" xml:space="preserve">
          <source>MigrateMakeCommand</source>
          <target state="translated">MigrateMakeCommand</target>
        </trans-unit>
        <trans-unit id="610e5cd6ab52d0196eee144af2fa201dd4b5bd8a" translate="yes" xml:space="preserve">
          <source>MigrateMakeCommand (Database\Console\Migrations)</source>
          <target state="translated">MigrateMakeCommand (Database\Console\Migrations)</target>
        </trans-unit>
        <trans-unit id="520a534c3f61805909fe253f75072f9294e6efe0" translate="yes" xml:space="preserve">
          <source>MigrateMakeCommand::__construct()</source>
          <target state="translated">MigrateMakeCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="45a2f4777c3f423bd307fa375f7a161db9e74e66" translate="yes" xml:space="preserve">
          <source>MigrateMakeCommand::getMigrationPath()</source>
          <target state="translated">MigrateMakeCommand::getMigrationPath()</target>
        </trans-unit>
        <trans-unit id="af75e81543ce930dbd046fff82bbbb52952ebdf2" translate="yes" xml:space="preserve">
          <source>MigrateMakeCommand::handle()</source>
          <target state="translated">MigrateMakeCommand::handle()</target>
        </trans-unit>
        <trans-unit id="745cf93ed9390dd42bc6a5cf860ef684a08b5d2d" translate="yes" xml:space="preserve">
          <source>MigrateMakeCommand::usingRealPath()</source>
          <target state="translated">MigrateMakeCommand::usingRealPath()</target>
        </trans-unit>
        <trans-unit id="10b4f54b5260589a7b23f6f7d39ef6f126bfc54b" translate="yes" xml:space="preserve">
          <source>MigrateMakeCommand::writeMigration()</source>
          <target state="translated">MigrateMakeCommand::writeMigration()</target>
        </trans-unit>
        <trans-unit id="6e458173eef4a800366eeb68965cf8f147c4756b" translate="yes" xml:space="preserve">
          <source>Migration</source>
          <target state="translated">Migration</target>
        </trans-unit>
        <trans-unit id="7954e163b4d6c025b5ed3577619fa7c269ef3477" translate="yes" xml:space="preserve">
          <source>Migration (Database\Migrations)</source>
          <target state="translated">Миграция (Database\Migrations)</target>
        </trans-unit>
        <trans-unit id="75bb14ba74ea8db5468d164b2448997659a5cfac" translate="yes" xml:space="preserve">
          <source>Migration Customization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d617f90e73f58edcba4098d8d1b1c578c1bf086" translate="yes" xml:space="preserve">
          <source>Migration Squashing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9720853b2b354d5406bdfa6e5a1c284854553527" translate="yes" xml:space="preserve">
          <source>Migration Structure</source>
          <target state="translated">Структура миграции</target>
        </trans-unit>
        <trans-unit id="f4f92230f779ad4067ccd368921feb55d747e290" translate="yes" xml:space="preserve">
          <source>Migration squashing is only available for the MySQL, PostgreSQL, and SQLite databases. However, database dumps may not be restored to in-memory SQLite databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc6aaaddd4dbe375d8d1d18999d639953062970" translate="yes" xml:space="preserve">
          <source>Migration stubs may be customized using &lt;a href=&quot;artisan#stub-customization&quot;&gt;stub publishing&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcc13c4cbc49c10429c1f9304e29cd38a34cd69" translate="yes" xml:space="preserve">
          <source>Migration::getConnection()</source>
          <target state="translated">Migration::getConnection()</target>
        </trans-unit>
        <trans-unit id="2c5066d8b8c6c666f3128cf19ddb233106ea9edd" translate="yes" xml:space="preserve">
          <source>MigrationCreator</source>
          <target state="translated">MigrationCreator</target>
        </trans-unit>
        <trans-unit id="dda56065db9e475a75a99b8144053b4f25f9329a" translate="yes" xml:space="preserve">
          <source>MigrationCreator (Database\Migrations)</source>
          <target state="translated">MigrationCreator (Database\Migrations)</target>
        </trans-unit>
        <trans-unit id="9e4129df8b75bdb3b56c1708425d3aa57cccc3c9" translate="yes" xml:space="preserve">
          <source>MigrationCreator::__construct()</source>
          <target state="translated">MigrationCreator::__construct()</target>
        </trans-unit>
        <trans-unit id="18ed1642d1146333418c579e2256b5c78d66120a" translate="yes" xml:space="preserve">
          <source>MigrationCreator::afterCreate()</source>
          <target state="translated">MigrationCreator::afterCreate()</target>
        </trans-unit>
        <trans-unit id="e01226f0f6e6a1151b6211e957a379de982c5ebc" translate="yes" xml:space="preserve">
          <source>MigrationCreator::create()</source>
          <target state="translated">MigrationCreator::create()</target>
        </trans-unit>
        <trans-unit id="b621509ecfd9424918a0d0b8d2a714a24b60ab90" translate="yes" xml:space="preserve">
          <source>MigrationCreator::ensureMigrationDoesntAlreadyExist()</source>
          <target state="translated">MigrationCreator::ensureMigrationDoesntAlreadyExist()</target>
        </trans-unit>
        <trans-unit id="c5640d7b334d319cd7e8bbaa3bae06c351d82871" translate="yes" xml:space="preserve">
          <source>MigrationCreator::firePostCreateHooks()</source>
          <target state="translated">MigrationCreator::firePostCreateHooks()</target>
        </trans-unit>
        <trans-unit id="cfb5b6367c670714739a987b08ac052e50cb5668" translate="yes" xml:space="preserve">
          <source>MigrationCreator::getClassName()</source>
          <target state="translated">MigrationCreator::getClassName()</target>
        </trans-unit>
        <trans-unit id="06e0fabc714fe40137f551999991615a6dd67ce1" translate="yes" xml:space="preserve">
          <source>MigrationCreator::getDatePrefix()</source>
          <target state="translated">MigrationCreator::getDatePrefix()</target>
        </trans-unit>
        <trans-unit id="f97fd09d6769c0c0753033a8dfa6d29db500b451" translate="yes" xml:space="preserve">
          <source>MigrationCreator::getFilesystem()</source>
          <target state="translated">MigrationCreator::getFilesystem()</target>
        </trans-unit>
        <trans-unit id="c041589465197f169e2ce6d57bb5147ddecfab9b" translate="yes" xml:space="preserve">
          <source>MigrationCreator::getPath()</source>
          <target state="translated">MigrationCreator::getPath()</target>
        </trans-unit>
        <trans-unit id="ef7f36ad657715053ed06b504dbd56f21d66f95c" translate="yes" xml:space="preserve">
          <source>MigrationCreator::getStub()</source>
          <target state="translated">MigrationCreator::getStub()</target>
        </trans-unit>
        <trans-unit id="8edb7e19a1daaa5cc6891a72cec677e8f81ede21" translate="yes" xml:space="preserve">
          <source>MigrationCreator::populateStub()</source>
          <target state="translated">MigrationCreator::populateStub()</target>
        </trans-unit>
        <trans-unit id="a3083c43c74a313c010263e884e763bf0e7fd910" translate="yes" xml:space="preserve">
          <source>MigrationCreator::stubPath()</source>
          <target state="translated">MigrationCreator::stubPath()</target>
        </trans-unit>
        <trans-unit id="4270e116f2086ec25873f9a6656442b27cd6e44c" translate="yes" xml:space="preserve">
          <source>MigrationEnded</source>
          <target state="translated">MigrationEnded</target>
        </trans-unit>
        <trans-unit id="4fd79bc73655d2e5f4c184ccf3b0c071a1fbd94f" translate="yes" xml:space="preserve">
          <source>MigrationEnded (Database\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f585c3e72cf689ffa83f369b6049a479a54b8619" translate="yes" xml:space="preserve">
          <source>MigrationEvent</source>
          <target state="translated">MigrationEvent</target>
        </trans-unit>
        <trans-unit id="93f537f33219357548eab9f2d68ee182a9f6b677" translate="yes" xml:space="preserve">
          <source>MigrationEvent (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20d274cc22ec6456cd9ab426f68e548ae4a75fc" translate="yes" xml:space="preserve">
          <source>MigrationEvent (Database\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1320836ed0881d87ec3da88cb609d07cc6f14ea8" translate="yes" xml:space="preserve">
          <source>MigrationEvent::__construct()</source>
          <target state="translated">MigrationEvent::__construct()</target>
        </trans-unit>
        <trans-unit id="89a08fcefff9c619d25af47e41cf13893093fbcb" translate="yes" xml:space="preserve">
          <source>MigrationRepositoryInterface</source>
          <target state="translated">MigrationRepositoryInterface</target>
        </trans-unit>
        <trans-unit id="07c1972422de38ef366f3ef9012435376425fce4" translate="yes" xml:space="preserve">
          <source>MigrationRepositoryInterface (Database\Migrations)</source>
          <target state="translated">МиграцияРепозитарийИнтерфейс (Database\Migrations).</target>
        </trans-unit>
        <trans-unit id="2165e751700e0ceaa86e31373920a9b1f624d762" translate="yes" xml:space="preserve">
          <source>MigrationRepositoryInterface::createRepository()</source>
          <target state="translated">MigrationRepositoryInterface::createRepository()</target>
        </trans-unit>
        <trans-unit id="1c866df33241fde49b8d9a5c7047ed57ee015039" translate="yes" xml:space="preserve">
          <source>MigrationRepositoryInterface::delete()</source>
          <target state="translated">MigrationRepositoryInterface::delete()</target>
        </trans-unit>
        <trans-unit id="c77a677f1adf0f9ca7620a41385d12353b9aa415" translate="yes" xml:space="preserve">
          <source>MigrationRepositoryInterface::deleteRepository()</source>
          <target state="translated">MigrationRepositoryInterface::deleteRepository()</target>
        </trans-unit>
        <trans-unit id="6290ff9e3c47993aecdfabda571a4189e26af0f9" translate="yes" xml:space="preserve">
          <source>MigrationRepositoryInterface::getLast()</source>
          <target state="translated">MigrationRepositoryInterface::getLast()</target>
        </trans-unit>
        <trans-unit id="f3dce782ab8b31b8e24ed39c321df5324544ea72" translate="yes" xml:space="preserve">
          <source>MigrationRepositoryInterface::getMigrationBatches()</source>
          <target state="translated">MigrationRepositoryInterface::getMigrationBatches()</target>
        </trans-unit>
        <trans-unit id="bf7066ba81c4f8a396d788aef8109aeaa3459fca" translate="yes" xml:space="preserve">
          <source>MigrationRepositoryInterface::getMigrations()</source>
          <target state="translated">MigrationRepositoryInterface::getMigrations()</target>
        </trans-unit>
        <trans-unit id="8f50886a06517e123977041a321a3bd3cc3869b8" translate="yes" xml:space="preserve">
          <source>MigrationRepositoryInterface::getNextBatchNumber()</source>
          <target state="translated">MigrationRepositoryInterface::getNextBatchNumber()</target>
        </trans-unit>
        <trans-unit id="8a024db68ec52dc58abeca5cd1625b031dac3800" translate="yes" xml:space="preserve">
          <source>MigrationRepositoryInterface::getRan()</source>
          <target state="translated">MigrationRepositoryInterface::getRan()</target>
        </trans-unit>
        <trans-unit id="2ac2ae642953684e932b40103051b1c5245254eb" translate="yes" xml:space="preserve">
          <source>MigrationRepositoryInterface::log()</source>
          <target state="translated">MigrationRepositoryInterface::log()</target>
        </trans-unit>
        <trans-unit id="13f3c653fae46d48c118078729c0db32280e33fd" translate="yes" xml:space="preserve">
          <source>MigrationRepositoryInterface::repositoryExists()</source>
          <target state="translated">MigrationRepositoryInterface::repositoryExists()</target>
        </trans-unit>
        <trans-unit id="387c01b51e96d7e95513ab914526a31ce4c75459" translate="yes" xml:space="preserve">
          <source>MigrationRepositoryInterface::setSource()</source>
          <target state="translated">MigrationRepositoryInterface::setSource()</target>
        </trans-unit>
        <trans-unit id="dbd98fe9ad12e47a2189a676244f0ccbabf51757" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider</source>
          <target state="translated">MigrationServiceProvider</target>
        </trans-unit>
        <trans-unit id="0f931b544cb0ddddd6e43ca7946c8c521852134d" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider (Database)</source>
          <target state="translated">MigrationServiceProvider (База данных)</target>
        </trans-unit>
        <trans-unit id="6ef0e71549aa9094c9caab784a638b776306d1b5" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::provides()</source>
          <target state="translated">MigrationServiceProvider::provides()</target>
        </trans-unit>
        <trans-unit id="f4f432246789291819090f6be67673a3444ff107" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::register()</source>
          <target state="translated">MigrationServiceProvider::register()</target>
        </trans-unit>
        <trans-unit id="4bba329dff21c3e92d8159a683ad9750c7045177" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::registerCommands()</source>
          <target state="translated">MigrationServiceProvider::registerCommands()</target>
        </trans-unit>
        <trans-unit id="303fc5e047d3d1215cb336d65fb58f6c0393f5b4" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::registerCreator()</source>
          <target state="translated">MigrationServiceProvider::registerCreator()</target>
        </trans-unit>
        <trans-unit id="ff449801682c6def359b271cf5f34602a0f03d82" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::registerMigrateCommand()</source>
          <target state="translated">MigrationServiceProvider::registerMigrateCommand()</target>
        </trans-unit>
        <trans-unit id="d5304f09dcb973855574d2d7e965b4235ad03eea" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::registerMigrateFreshCommand()</source>
          <target state="translated">MigrationServiceProvider::registerMigrateFreshCommand()</target>
        </trans-unit>
        <trans-unit id="4011b39112ba5b833a67682868895aa695dd637f" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::registerMigrateInstallCommand()</source>
          <target state="translated">MigrationServiceProvider::registerMigrateInstallCommand()</target>
        </trans-unit>
        <trans-unit id="95692148a856d30d7ab3dd7335b48bfb21c27e01" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::registerMigrateMakeCommand()</source>
          <target state="translated">MigrationServiceProvider::registerMigrateMakeCommand()</target>
        </trans-unit>
        <trans-unit id="ee20801425a0128d5df41fa69006c84b369ec37c" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::registerMigrateRefreshCommand()</source>
          <target state="translated">MigrationServiceProvider::registerMigrateRefreshCommand()</target>
        </trans-unit>
        <trans-unit id="358af36c11da00c71efb6a11b15d7fc4df45198d" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::registerMigrateResetCommand()</source>
          <target state="translated">MigrationServiceProvider::registerMigrateResetCommand()</target>
        </trans-unit>
        <trans-unit id="3bb58ff779cab1d2f19202960714ab7d3ed8e801" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::registerMigrateRollbackCommand()</source>
          <target state="translated">MigrationServiceProvider::registerMigrateRollbackCommand()</target>
        </trans-unit>
        <trans-unit id="d7725fb0cfc72c6b52a3b5ec112cc444a764a8ce" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::registerMigrateStatusCommand()</source>
          <target state="translated">MigrationServiceProvider::registerMigrateStatusCommand()</target>
        </trans-unit>
        <trans-unit id="5305696ff7db2af0f30f1821f4af1ec3e7adad19" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::registerMigrator()</source>
          <target state="translated">MigrationServiceProvider::registerMigrator()</target>
        </trans-unit>
        <trans-unit id="1f1d3838bee5f97e1d94c8d4d381a5023296ebdd" translate="yes" xml:space="preserve">
          <source>MigrationServiceProvider::registerRepository()</source>
          <target state="translated">MigrationServiceProvider::registerRepository()</target>
        </trans-unit>
        <trans-unit id="4ad2757118c057bda13059300b0a094ab5d10d51" translate="yes" xml:space="preserve">
          <source>MigrationStarted</source>
          <target state="translated">MigrationStarted</target>
        </trans-unit>
        <trans-unit id="e4fb6b2766d03f088a270c641e5682477d528e7d" translate="yes" xml:space="preserve">
          <source>MigrationStarted (Database\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca984afd74a0089c1d5a5816e4de2e8d46a60b5" translate="yes" xml:space="preserve">
          <source>Migrations</source>
          <target state="translated">Migrations</target>
        </trans-unit>
        <trans-unit id="a68cd0d7aed1895b189208eb22ac9c3b08e12417" translate="yes" xml:space="preserve">
          <source>Migrations are like version control for your database, allowing your team to easily modify and share the application's database schema. Migrations are typically paired with Laravel's schema builder to easily build your application's database schema. If you have ever had to tell a teammate to manually add a column to their local database schema, you've faced the problem that database migrations solve.</source>
          <target state="translated">Миграции похожи на управление версиями для вашей базы данных,что позволяет вашей команде легко изменять и совместно использовать схему базы данных приложения.Миграции обычно выполняются в паре с Laravel's schema builder,что позволяет легко создавать схему базы данных вашего приложения.Если вам когда-либо приходилось говорить товарищам по команде вручную добавлять столбец в их схему локальной базы данных,вы сталкивались с проблемой,которую решали с помощью миграции баз данных.</target>
        </trans-unit>
        <trans-unit id="b034d1df26a1f4db16cde7b065942a5e4ad05597" translate="yes" xml:space="preserve">
          <source>Migrations are like version control for your database, allowing your team to modify and share the application's database schema. Migrations are typically paired with Laravel's schema builder to build your application's database schema. If you have ever had to tell a teammate to manually add a column to their local database schema, you've faced the problem that database migrations solve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e15548d29dc26cffcf17327dcf56eaaf2d58f3" translate="yes" xml:space="preserve">
          <source>MigrationsEnded</source>
          <target state="translated">MigrationsEnded</target>
        </trans-unit>
        <trans-unit id="ab2fec21af9ea8eba6061bc8e511efe5c7ae92e9" translate="yes" xml:space="preserve">
          <source>MigrationsEnded (Database\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0b4012e208a27684dd7abeb00a3e41ff39e410" translate="yes" xml:space="preserve">
          <source>MigrationsStarted</source>
          <target state="translated">MigrationsStarted</target>
        </trans-unit>
        <trans-unit id="15a022a0641367e0736c3c8e74632e887de20094" translate="yes" xml:space="preserve">
          <source>MigrationsStarted (Database\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c1c8591cf6a520cc156585232fdfa4562258f3" translate="yes" xml:space="preserve">
          <source>Migrator</source>
          <target state="translated">Migrator</target>
        </trans-unit>
        <trans-unit id="7dbffb2cf2d8936de6341fbc75e0e81153ce6454" translate="yes" xml:space="preserve">
          <source>Migrator (Database\Migrations)</source>
          <target state="translated">Мигратор (Database\Migrations)</target>
        </trans-unit>
        <trans-unit id="f10276a246492e549aa63b89b29392ac2a885268" translate="yes" xml:space="preserve">
          <source>Migrator::__construct()</source>
          <target state="translated">Migrator::__construct()</target>
        </trans-unit>
        <trans-unit id="ba6a47d5cbf4ead2e4fd94be0bafcc2e1da645e4" translate="yes" xml:space="preserve">
          <source>Migrator::deleteRepository()</source>
          <target state="translated">Migrator::deleteRepository()</target>
        </trans-unit>
        <trans-unit id="9b7951c51db94ce2eb35c7b934d10f6a8e2921ec" translate="yes" xml:space="preserve">
          <source>Migrator::fireMigrationEvent()</source>
          <target state="translated">Migrator::fireMigrationEvent()</target>
        </trans-unit>
        <trans-unit id="292634a51dc3ab6ac952248d75d0bf83147a1231" translate="yes" xml:space="preserve">
          <source>Migrator::getConnection()</source>
          <target state="translated">Migrator::getConnection()</target>
        </trans-unit>
        <trans-unit id="e4705056b9485b8c20f187461f0280c12b47a52d" translate="yes" xml:space="preserve">
          <source>Migrator::getFilesystem()</source>
          <target state="translated">Migrator::getFilesystem()</target>
        </trans-unit>
        <trans-unit id="0fe51f4b7b443c2b6220a896f2cc79fde648de7f" translate="yes" xml:space="preserve">
          <source>Migrator::getMigrationFiles()</source>
          <target state="translated">Migrator::getMigrationFiles()</target>
        </trans-unit>
        <trans-unit id="6f7632a885055f635222bb5b2a66685bbd15c04e" translate="yes" xml:space="preserve">
          <source>Migrator::getMigrationName()</source>
          <target state="translated">Migrator::getMigrationName()</target>
        </trans-unit>
        <trans-unit id="322ef3a2a7edc949194029bd5e5e396cecc837dd" translate="yes" xml:space="preserve">
          <source>Migrator::getMigrationsForRollback()</source>
          <target state="translated">Migrator::getMigrationsForRollback()</target>
        </trans-unit>
        <trans-unit id="2870036b6d2da21537e220c9c46b77e01b3ce154" translate="yes" xml:space="preserve">
          <source>Migrator::getQueries()</source>
          <target state="translated">Migrator::getQueries()</target>
        </trans-unit>
        <trans-unit id="dc054af974b38c320a1e9e009f22735eff45c19b" translate="yes" xml:space="preserve">
          <source>Migrator::getRepository()</source>
          <target state="translated">Migrator::getRepository()</target>
        </trans-unit>
        <trans-unit id="5231c5561816d9c41e5cdaf7b51e85585bbb25db" translate="yes" xml:space="preserve">
          <source>Migrator::getSchemaGrammar()</source>
          <target state="translated">Migrator::getSchemaGrammar()</target>
        </trans-unit>
        <trans-unit id="cdca332d185f3da67c135cf00542df5a576d8357" translate="yes" xml:space="preserve">
          <source>Migrator::hasRunAnyMigrations()</source>
          <target state="translated">Migrator::hasRunAnyMigrations()</target>
        </trans-unit>
        <trans-unit id="2393cf9bbc63a9391037923dbb18f74e83d4dfdb" translate="yes" xml:space="preserve">
          <source>Migrator::note()</source>
          <target state="translated">Migrator::note()</target>
        </trans-unit>
        <trans-unit id="3e021dd7fb343128ef518721a2443ce7ae3d5de8" translate="yes" xml:space="preserve">
          <source>Migrator::path()</source>
          <target state="translated">Migrator::path()</target>
        </trans-unit>
        <trans-unit id="057513b86d0e79c8e0a4951e044a99182c3b0a8a" translate="yes" xml:space="preserve">
          <source>Migrator::paths()</source>
          <target state="translated">Migrator::paths()</target>
        </trans-unit>
        <trans-unit id="4be59e4c7d7341dc756678dc6b562cd1a2ebefef" translate="yes" xml:space="preserve">
          <source>Migrator::pendingMigrations()</source>
          <target state="translated">Migrator::pendingMigrations()</target>
        </trans-unit>
        <trans-unit id="8a4bac98bd20231816dc171af31d16e94e79800e" translate="yes" xml:space="preserve">
          <source>Migrator::pretendToRun()</source>
          <target state="translated">Migrator::pretendToRun()</target>
        </trans-unit>
        <trans-unit id="319b96e9e71042a1f43a477e6dd964817ca8ecea" translate="yes" xml:space="preserve">
          <source>Migrator::repositoryExists()</source>
          <target state="translated">Migrator::repositoryExists()</target>
        </trans-unit>
        <trans-unit id="2648d06c26166cc02293687dcbbba6eb468128fb" translate="yes" xml:space="preserve">
          <source>Migrator::requireFiles()</source>
          <target state="translated">Migrator::requireFiles()</target>
        </trans-unit>
        <trans-unit id="c6226f90b9832c85d9fc6a6477eb7df9512f49ef" translate="yes" xml:space="preserve">
          <source>Migrator::reset()</source>
          <target state="translated">Migrator::reset()</target>
        </trans-unit>
        <trans-unit id="e54e56c7e897aa3207eab108ee075ed88ee63993" translate="yes" xml:space="preserve">
          <source>Migrator::resetMigrations()</source>
          <target state="translated">Migrator::resetMigrations()</target>
        </trans-unit>
        <trans-unit id="232625b6afa0cb384c0f4bf06f34b628d88fd25f" translate="yes" xml:space="preserve">
          <source>Migrator::resolve()</source>
          <target state="translated">Migrator::resolve()</target>
        </trans-unit>
        <trans-unit id="e68e909f63bf1fac852b71a46942c2165c3403f1" translate="yes" xml:space="preserve">
          <source>Migrator::resolveConnection()</source>
          <target state="translated">Migrator::resolveConnection()</target>
        </trans-unit>
        <trans-unit id="f71d955b65fea7eb145b66e62085d268d7882474" translate="yes" xml:space="preserve">
          <source>Migrator::rollback()</source>
          <target state="translated">Migrator::rollback()</target>
        </trans-unit>
        <trans-unit id="d4201eadc427c091d2205ff4023fdbfe715f5486" translate="yes" xml:space="preserve">
          <source>Migrator::rollbackMigrations()</source>
          <target state="translated">Migrator::rollbackMigrations()</target>
        </trans-unit>
        <trans-unit id="13ef0b22d544ded3ae3cc82a4a51c1f2cf2ab540" translate="yes" xml:space="preserve">
          <source>Migrator::run()</source>
          <target state="translated">Migrator::run()</target>
        </trans-unit>
        <trans-unit id="1d856ffc4291f9a7602b40edeed64cb7b333ba49" translate="yes" xml:space="preserve">
          <source>Migrator::runDown()</source>
          <target state="translated">Migrator::runDown()</target>
        </trans-unit>
        <trans-unit id="82b428a9921b43e834347080ef0774a07ae2b6b9" translate="yes" xml:space="preserve">
          <source>Migrator::runMigration()</source>
          <target state="translated">Migrator::runMigration()</target>
        </trans-unit>
        <trans-unit id="800fd50c30112981159798d6def4a8f4e4043bd3" translate="yes" xml:space="preserve">
          <source>Migrator::runPending()</source>
          <target state="translated">Migrator::runPending()</target>
        </trans-unit>
        <trans-unit id="d9a521be0f192935aea29ed4ed843fdf81e70207" translate="yes" xml:space="preserve">
          <source>Migrator::runUp()</source>
          <target state="translated">Migrator::runUp()</target>
        </trans-unit>
        <trans-unit id="454f2b385b24033fb6779394ea5f70a35f5d7a90" translate="yes" xml:space="preserve">
          <source>Migrator::setConnection()</source>
          <target state="translated">Migrator::setConnection()</target>
        </trans-unit>
        <trans-unit id="1cbc2cae967fd343b16354ac45f932da5080334f" translate="yes" xml:space="preserve">
          <source>Migrator::setOutput()</source>
          <target state="translated">Migrator::setOutput()</target>
        </trans-unit>
        <trans-unit id="7f25759823bf4355d145b1c019aa7060400e3947" translate="yes" xml:space="preserve">
          <source>Migrator::usingConnection()</source>
          <target state="translated">Migrator::usingConnection()</target>
        </trans-unit>
        <trans-unit id="1bd7ccbde8d3077fec1f549017e747393223a900" translate="yes" xml:space="preserve">
          <source>MimeType</source>
          <target state="translated">MimeType</target>
        </trans-unit>
        <trans-unit id="d4a42fc8beb6719809f5598dbff2ae8cccb36767" translate="yes" xml:space="preserve">
          <source>MimeType (Http\Testing)</source>
          <target state="translated">MimeType (Http\Testing)</target>
        </trans-unit>
        <trans-unit id="23bbec5c7fb3f009e9268f47b38bff8c958b7928" translate="yes" xml:space="preserve">
          <source>MimeType::from()</source>
          <target state="translated">MimeType::from()</target>
        </trans-unit>
        <trans-unit id="aad151342f2e5ceccf02d74ab8b0210056a0393c" translate="yes" xml:space="preserve">
          <source>MimeType::get()</source>
          <target state="translated">MimeType::get()</target>
        </trans-unit>
        <trans-unit id="c2d2416dcb622885f44a517c1b169d15a2a6b6ea" translate="yes" xml:space="preserve">
          <source>MimeType::getMimeTypeFromExtension()</source>
          <target state="translated">MimeType::getMimeTypeFromExtension()</target>
        </trans-unit>
        <trans-unit id="2726855da93edde84e1826011fbfae3035fdab2a" translate="yes" xml:space="preserve">
          <source>MimeType::getMimeTypes()</source>
          <target state="translated">MimeType::getMimeTypes()</target>
        </trans-unit>
        <trans-unit id="28b9bc5de389947362b23a9fa92d8153b8c3b13f" translate="yes" xml:space="preserve">
          <source>MimeType::search()</source>
          <target state="translated">MimeType::search()</target>
        </trans-unit>
        <trans-unit id="4c2af73c4356052121e1f2bc071ebe6f1fe0f804" translate="yes" xml:space="preserve">
          <source>MimeTypesInterface</source>
          <target state="translated">MimeTypesInterface</target>
        </trans-unit>
        <trans-unit id="43d317e2344220b87afa8b4ee6504ac1fac9d22b" translate="yes" xml:space="preserve">
          <source>MinIO</source>
          <target state="translated">MinIO</target>
        </trans-unit>
        <trans-unit id="af5e46166ae56efb3f34e1f96387af34b7d6e91b" translate="yes" xml:space="preserve">
          <source>Minification for production environments.</source>
          <target state="translated">Минификация для производственных сред.</target>
        </trans-unit>
        <trans-unit id="08d3561fdcfbb136d1c5f0393d057ad8348540a8" translate="yes" xml:space="preserve">
          <source>Minimum number of seconds before re-redefining the token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292cb4732afe3864c1429819e8c807e6dad5bbc1" translate="yes" xml:space="preserve">
          <source>Minio</source>
          <target state="translated">Minio</target>
        </trans-unit>
        <trans-unit id="21478e948a3deb54b68ba89137d14226bb38a134" translate="yes" xml:space="preserve">
          <source>Minio is an open source object storage server with an Amazon S3 compatible API. To install Minio, update your &lt;code&gt;Homestead.yaml&lt;/code&gt; file with the following configuration option in the &lt;a href=&quot;#installing-optional-features&quot;&gt;features&lt;/a&gt; section:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074b147bb3868f646eca96a24e5c7376e78dac0f" translate="yes" xml:space="preserve">
          <source>Minio is an open source object storage server with an Amazon S3 compatible API. To install Minio, update your &lt;code&gt;Homestead.yaml&lt;/code&gt; file with the following configuration option:</source>
          <target state="translated">Minio - это сервер хранилища объектов с открытым исходным кодом и API, совместимый с Amazon S3. Чтобы установить Minio, обновите файл &lt;code&gt;Homestead.yaml&lt;/code&gt; со следующей опцией конфигурации:</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="f149ec913733fb3659b6f6556912656daa9bb37e" translate="yes" xml:space="preserve">
          <source>MissingAppKeyException</source>
          <target state="translated">MissingAppKeyException</target>
        </trans-unit>
        <trans-unit id="8d6d2ffc1497183f39f4a50caeb5d3a5d3937676" translate="yes" xml:space="preserve">
          <source>MissingAppKeyException (Encryption)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b6efaa50e7056c55050c4f448b8acdfe73b11c" translate="yes" xml:space="preserve">
          <source>MissingAppKeyException::__construct()</source>
          <target state="translated">MissingAppKeyException::__construct()</target>
        </trans-unit>
        <trans-unit id="391622ac6174460a9bf8622850a8788276376718" translate="yes" xml:space="preserve">
          <source>MissingValue</source>
          <target state="translated">MissingValue</target>
        </trans-unit>
        <trans-unit id="ceea5d5ae5b4280910f7e3b1665b34a31fbc838f" translate="yes" xml:space="preserve">
          <source>MissingValue (Http\Resources)</source>
          <target state="translated">MissingValue (Http\Resources)</target>
        </trans-unit>
        <trans-unit id="dfe0b1d3320dfc83c94bf7b2b0aec46fa3fd286a" translate="yes" xml:space="preserve">
          <source>MissingValue::isMissing()</source>
          <target state="translated">MissingValue::isMissing()</target>
        </trans-unit>
        <trans-unit id="fd7391b6720b809c7c41ed50cf63fdc87dac6b9d" translate="yes" xml:space="preserve">
          <source>Mix</source>
          <target state="translated">Mix</target>
        </trans-unit>
        <trans-unit id="d5c192126c9d21e3bd50f77efe41f2efc6f5874a" translate="yes" xml:space="preserve">
          <source>Mix (Foundation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1cf091b007ae8464befd508ea7af02d304b4303" translate="yes" xml:space="preserve">
          <source>Mix another object into the class.</source>
          <target state="translated">Смешайте другой объект в классе.</target>
        </trans-unit>
        <trans-unit id="0d6f09308429514f3ede1f039c793a50b3027222" translate="yes" xml:space="preserve">
          <source>Mix can automatically install the Babel plug-ins necessary for React support. To get started, replace your &lt;code&gt;mix.js()&lt;/code&gt; call with &lt;code&gt;mix.react()&lt;/code&gt;:</source>
          <target state="translated">Mix может автоматически устанавливать плагины Babel, необходимые для поддержки React. Для начала замените &lt;code&gt;mix.js()&lt;/code&gt; на &lt;code&gt;mix.react()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6b19246dc22896bc9ad54364a168f908a6c2f005" translate="yes" xml:space="preserve">
          <source>Mix is a configuration layer on top of &lt;a href=&quot;https://webpack.js.org&quot;&gt;Webpack&lt;/a&gt;, so to run your Mix tasks you only need to execute one of the NPM scripts that is included with the default Laravel &lt;code&gt;package.json&lt;/code&gt; file:</source>
          <target state="translated">Mix - это уровень конфигурации поверх &lt;a href=&quot;https://webpack.js.org&quot;&gt;Webpack&lt;/a&gt; , поэтому для выполнения задач Mix вам нужно только выполнить один из сценариев NPM, который включен в файл Laravel &lt;code&gt;package.json&lt;/code&gt; по умолчанию :</target>
        </trans-unit>
        <trans-unit id="312703766728a66cc8d4b6115711bf1f39ef4be9" translate="yes" xml:space="preserve">
          <source>Mix provides a useful &lt;code&gt;webpackConfig&lt;/code&gt; method that allows you to merge any short Webpack configuration overrides. This is a particularly appealing choice, as it doesn't require you to copy and maintain your own copy of the &lt;code&gt;webpack.config.js&lt;/code&gt; file. The &lt;code&gt;webpackConfig&lt;/code&gt; method accepts an object, which should contain any &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;Webpack-specific configuration&lt;/a&gt; that you wish to apply.</source>
          <target state="translated">Mix предоставляет полезный метод &lt;code&gt;webpackConfig&lt;/code&gt; , который позволяет объединить любые короткие переопределения конфигурации Webpack. Это особенно привлекательный выбор, поскольку он не требует от вас копирования и поддержки вашей собственной копии файла &lt;code&gt;webpack.config.js&lt;/code&gt; . Метод &lt;code&gt;webpackConfig&lt;/code&gt; принимает объект, который должен содержать любую &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;конфигурацию&lt;/a&gt; , специфичную для Webpack, которую вы хотите применить.</target>
        </trans-unit>
        <trans-unit id="bf4a2fb4be88e77f1ed960b93668fa864673af94" translate="yes" xml:space="preserve">
          <source>Mix provides several features to help you work with your JavaScript files, such as compiling ECMAScript 2015, module bundling, minification, and concatenating plain JavaScript files. Even better, this all works seamlessly, without requiring an ounce of custom configuration:</source>
          <target state="translated">Mix предоставляет несколько функций,которые помогут вам работать с вашими файлами JavaScript,таких как компиляция ECMAScript 2015,объединение модулей,минификация и конкатенация простых файлов JavaScript.Еще лучше,что все это работает бесшовно,не требуя унции пользовательских настроек:</target>
        </trans-unit>
        <trans-unit id="c49d1d57a69aeb383e0fb2ee9485a84c5ee15456" translate="yes" xml:space="preserve">
          <source>Mix::__invoke()</source>
          <target state="translated">Mix::__invoke()</target>
        </trans-unit>
        <trans-unit id="fe276a8b7a406466ec3ac767be31495ac135c889" translate="yes" xml:space="preserve">
          <source>Mobile Application Authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080806521ad9e298b5bd5650c192e74a09e9e999" translate="yes" xml:space="preserve">
          <source>Mock a partial instance of an object in the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efddf3085efe4d017cbcc5bbb946f734c5c28a07" translate="yes" xml:space="preserve">
          <source>Mock an instance of an object in the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79f4b04b4a62f941c66f30fe0a509d38f2c05bf" translate="yes" xml:space="preserve">
          <source>Mock the application's console output.</source>
          <target state="translated">Инсценируйте вывод консоли приложения.</target>
        </trans-unit>
        <trans-unit id="c68e33c3679dc7ddf60e94444a85560e262ea0d5" translate="yes" xml:space="preserve">
          <source>Mock the event dispatcher so all events are silenced and collected.</source>
          <target state="translated">Смейтесь над диспетчером мероприятия,чтобы все события были замалчены и собраны.</target>
        </trans-unit>
        <trans-unit id="b6c320d7c58d05470a5c15183194a19d45219fa6" translate="yes" xml:space="preserve">
          <source>Mock the job dispatcher so all jobs are silenced and collected.</source>
          <target state="translated">Инсценируйте диспетчера так,чтобы все задания были замалчены и собраны.</target>
        </trans-unit>
        <trans-unit id="b0eab0f0acf4aaa56c5e24cec05b2655cfd2c4cf" translate="yes" xml:space="preserve">
          <source>Mock the notification dispatcher so all notifications are silenced.</source>
          <target state="translated">Инсценируйте диспетчера уведомлений,чтобы все уведомления были заглушены.</target>
        </trans-unit>
        <trans-unit id="56bfd1aaed1b006c01787108e16a2f8294651f32" translate="yes" xml:space="preserve">
          <source>MockInterface</source>
          <target state="translated">MockInterface</target>
        </trans-unit>
        <trans-unit id="99a3402325144d291bec7ddf15b2b92ddc5bc907" translate="yes" xml:space="preserve">
          <source>Mocking</source>
          <target state="translated">Mocking</target>
        </trans-unit>
        <trans-unit id="e7be238d44bb40f6074b9957ee3aeafd199b8b55" translate="yes" xml:space="preserve">
          <source>Mocking Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738a3afc8cc7fa11a8a5bf26c601a91756aa40d4" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices</source>
          <target state="translated">MocksApplicationServices</target>
        </trans-unit>
        <trans-unit id="6a24e533357eebbbc47864a83b86c68fb87f0bd3" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices (Foundation\Testing)</source>
          <target state="translated">MocksApplicationServices (Foundation\Testing)</target>
        </trans-unit>
        <trans-unit id="ceb246299a9a44c8df4ed8ededf22cfd0b4a82a8" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices::doesntExpectEvents()</source>
          <target state="translated">MocksApplicationServices::doesntExpectEvents()</target>
        </trans-unit>
        <trans-unit id="8df3454d499675626116d66689a8ba83028db8c3" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices::doesntExpectJobs()</source>
          <target state="translated">MocksApplicationServices::doesntExpectJobs()</target>
        </trans-unit>
        <trans-unit id="edea988d8fe04e8cc4807ca295d33f7e82f43d44" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices::expectsEvents()</source>
          <target state="translated">MocksApplicationServices::expectsEvents()</target>
        </trans-unit>
        <trans-unit id="ee8379f266a1a2915459f547e8c971c22bf7d2e9" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices::expectsJobs()</source>
          <target state="translated">MocksApplicationServices::expectsJobs()</target>
        </trans-unit>
        <trans-unit id="186cec8af705134a3066671df897555c89236056" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices::expectsNotification()</source>
          <target state="translated">MocksApplicationServices::expectsNotification()</target>
        </trans-unit>
        <trans-unit id="3f3a3f3d93bcd44c3ed6a0d7def1de2bbe2d4c5a" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices::getDispatched()</source>
          <target state="translated">MocksApplicationServices::getDispatched()</target>
        </trans-unit>
        <trans-unit id="3f70760ea460af3212957480cfcff56b3e5da312" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices::getDispatchedJobs()</source>
          <target state="translated">MocksApplicationServices::getDispatchedJobs()</target>
        </trans-unit>
        <trans-unit id="f6df6c0f62c0dd053f7c5002f9f2341fe92feade" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices::getFiredEvents()</source>
          <target state="translated">MocksApplicationServices::getFiredEvents()</target>
        </trans-unit>
        <trans-unit id="1c9cc89893d92a0210bcd7fa63af456f22c4af1c" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices::wasDispatched()</source>
          <target state="translated">MocksApplicationServices::wasDispatched()</target>
        </trans-unit>
        <trans-unit id="6cc213647c56cbca8bb8e3c69174110fcf234918" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices::withoutEvents()</source>
          <target state="translated">MocksApplicationServices::withoutEvents()</target>
        </trans-unit>
        <trans-unit id="7e393f3951ec002ff1cf01b9b8df65dfb167cf7d" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices::withoutJobs()</source>
          <target state="translated">MocksApplicationServices::withoutJobs()</target>
        </trans-unit>
        <trans-unit id="aa47ed2a49f9f60a3097207409ac54def1701b5d" translate="yes" xml:space="preserve">
          <source>MocksApplicationServices::withoutNotifications()</source>
          <target state="translated">MocksApplicationServices::withoutNotifications()</target>
        </trans-unit>
        <trans-unit id="68c2cc7f0ceaa3e499ecb4db331feb4debbbcc23" translate="yes" xml:space="preserve">
          <source>Model</source>
          <target state="translated">Model</target>
        </trans-unit>
        <trans-unit id="8cc2c9cca12003d5dc34df3f20da25c5e9f3019b" translate="yes" xml:space="preserve">
          <source>Model (Database\Eloquent)</source>
          <target state="translated">Модель (Database\Eloquent)</target>
        </trans-unit>
        <trans-unit id="0c81fc99dd93a8dd855fef56b769f61bec15f29c" translate="yes" xml:space="preserve">
          <source>Model Factories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c74315e8971ffd4202af629c6fb7295b8b7e3f" translate="yes" xml:space="preserve">
          <source>Model Factory Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac91cc4df34fece1a2054f00f37abdc04d1d4f5" translate="yes" xml:space="preserve">
          <source>Model Preparation</source>
          <target state="translated">Подготовка модели</target>
        </trans-unit>
        <trans-unit id="4e14e76aa224b7aa6bb02228113bf1118371f9a1" translate="yes" xml:space="preserve">
          <source>Model Structure</source>
          <target state="translated">Структура модели</target>
        </trans-unit>
        <trans-unit id="7c235956dbe69f5e0b559cb4546f810d54d0b8de" translate="yes" xml:space="preserve">
          <source>Model Watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa245e1867651d75458a325708275cfcf8aacf9" translate="yes" xml:space="preserve">
          <source>Model events are not fired when using the &lt;code&gt;increment&lt;/code&gt; and &lt;code&gt;decrement&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe793451231f30ef3bce1d99ba3f623f936941b1" translate="yes" xml:space="preserve">
          <source>Model::__call()</source>
          <target state="translated">Model::__call()</target>
        </trans-unit>
        <trans-unit id="b3a1bf8ed3214b992aa614a5063fa2c77757973f" translate="yes" xml:space="preserve">
          <source>Model::__callStatic()</source>
          <target state="translated">Model::__callStatic()</target>
        </trans-unit>
        <trans-unit id="a3c7a8646b76ecf0b4c35f86902068222a20de18" translate="yes" xml:space="preserve">
          <source>Model::__construct()</source>
          <target state="translated">Model::__construct()</target>
        </trans-unit>
        <trans-unit id="0e8a6b866eef90f175ada14b132ad2e6c75fd47e" translate="yes" xml:space="preserve">
          <source>Model::__get()</source>
          <target state="translated">Model::__get()</target>
        </trans-unit>
        <trans-unit id="b469bacb897f5809dc4ee7503f02a72b261eceb6" translate="yes" xml:space="preserve">
          <source>Model::__isset()</source>
          <target state="translated">Model::__isset()</target>
        </trans-unit>
        <trans-unit id="94b85f69b57160a31ad0f6c86d14efe395129d80" translate="yes" xml:space="preserve">
          <source>Model::__set()</source>
          <target state="translated">Model::__set()</target>
        </trans-unit>
        <trans-unit id="724f88e3e1abc29d9d5fe0c751dc6e1677b74234" translate="yes" xml:space="preserve">
          <source>Model::__sleep()</source>
          <target state="translated">Model::__sleep()</target>
        </trans-unit>
        <trans-unit id="4e47e2ad6c72b26f83ffc9cd85bfb861178c9550" translate="yes" xml:space="preserve">
          <source>Model::__toString()</source>
          <target state="translated">Model::__toString()</target>
        </trans-unit>
        <trans-unit id="5fb9b242993c3a4f8269f01c3a296bbb75a9c9ae" translate="yes" xml:space="preserve">
          <source>Model::__unset()</source>
          <target state="translated">Model::__unset()</target>
        </trans-unit>
        <trans-unit id="a811102da98acfc9fd3ad9fd3d4e101aae89ab6f" translate="yes" xml:space="preserve">
          <source>Model::__wakeup()</source>
          <target state="translated">Model::__wakeup()</target>
        </trans-unit>
        <trans-unit id="9aae413410579e1383f986835a80995a6636af83" translate="yes" xml:space="preserve">
          <source>Model::all()</source>
          <target state="translated">Model::all()</target>
        </trans-unit>
        <trans-unit id="c5d8755aa12a722c019935d9ffdc6526d512d698" translate="yes" xml:space="preserve">
          <source>Model::boot()</source>
          <target state="translated">Model::boot()</target>
        </trans-unit>
        <trans-unit id="e23c6ff7144d236b0395834f24c88ac9a502a038" translate="yes" xml:space="preserve">
          <source>Model::bootIfNotBooted()</source>
          <target state="translated">Model::bootIfNotBooted()</target>
        </trans-unit>
        <trans-unit id="afe61f811dd22533e0bdab98c8ae7e2b7f2870e0" translate="yes" xml:space="preserve">
          <source>Model::bootTraits()</source>
          <target state="translated">Model::bootTraits()</target>
        </trans-unit>
        <trans-unit id="f5601737fcb364061f80b8b8c8cdf7458e876c4f" translate="yes" xml:space="preserve">
          <source>Model::booted()</source>
          <target state="translated">Model::booted()</target>
        </trans-unit>
        <trans-unit id="783c6a1c53611952b443c00579ab64374b434067" translate="yes" xml:space="preserve">
          <source>Model::booting()</source>
          <target state="translated">Model::booting()</target>
        </trans-unit>
        <trans-unit id="3eb841bb0c57a6b814d096668b0d8df4d22a513c" translate="yes" xml:space="preserve">
          <source>Model::callNamedScope()</source>
          <target state="translated">Model::callNamedScope()</target>
        </trans-unit>
        <trans-unit id="abd774a7934980b447b09caefc4335061ec2a2cd" translate="yes" xml:space="preserve">
          <source>Model::clearBootedModels()</source>
          <target state="translated">Model::clearBootedModels()</target>
        </trans-unit>
        <trans-unit id="9e5097a3378b7e8fee3801da523a980b6c589407" translate="yes" xml:space="preserve">
          <source>Model::decrement()</source>
          <target state="translated">Model::decrement()</target>
        </trans-unit>
        <trans-unit id="448ae865c38f6d8ee818cedb5aa8e490f6032699" translate="yes" xml:space="preserve">
          <source>Model::delete()</source>
          <target state="translated">Model::delete()</target>
        </trans-unit>
        <trans-unit id="f68178fb3ceb4b78d7c5de17334133fc8b862152" translate="yes" xml:space="preserve">
          <source>Model::destroy()</source>
          <target state="translated">Model::destroy()</target>
        </trans-unit>
        <trans-unit id="3d98a8dc1eb7c62ea944d3b84fd4cbd6e2b6a988" translate="yes" xml:space="preserve">
          <source>Model::fill()</source>
          <target state="translated">Model::fill()</target>
        </trans-unit>
        <trans-unit id="f88d78e58a5befc480a4a2abe5de65aacbe605e5" translate="yes" xml:space="preserve">
          <source>Model::finishSave()</source>
          <target state="translated">Model::finishSave()</target>
        </trans-unit>
        <trans-unit id="ffcee2fd8868047312cafb02f93c370a4ce947b8" translate="yes" xml:space="preserve">
          <source>Model::forceDelete()</source>
          <target state="translated">Model::forceDelete()</target>
        </trans-unit>
        <trans-unit id="86c4c1df06499a2ff0951d3a779f2e13a85b2b17" translate="yes" xml:space="preserve">
          <source>Model::forceFill()</source>
          <target state="translated">Model::forceFill()</target>
        </trans-unit>
        <trans-unit id="cf403c6c7cbfc02708c9d3465e6097cef8283176" translate="yes" xml:space="preserve">
          <source>Model::fresh()</source>
          <target state="translated">Model::fresh()</target>
        </trans-unit>
        <trans-unit id="92334facb1df92d95d6c031dd4a921846e7e8264" translate="yes" xml:space="preserve">
          <source>Model::getConnection()</source>
          <target state="translated">Model::getConnection()</target>
        </trans-unit>
        <trans-unit id="8aed354b9ff847e86974d57aba334bb22e521dfb" translate="yes" xml:space="preserve">
          <source>Model::getConnectionName()</source>
          <target state="translated">Model::getConnectionName()</target>
        </trans-unit>
        <trans-unit id="1581c7c4324cbf755d1123123348c96660a29649" translate="yes" xml:space="preserve">
          <source>Model::getConnectionResolver()</source>
          <target state="translated">Model::getConnectionResolver()</target>
        </trans-unit>
        <trans-unit id="a1eb82092d849592542ed88e121145564962ec0e" translate="yes" xml:space="preserve">
          <source>Model::getForeignKey()</source>
          <target state="translated">Model::getForeignKey()</target>
        </trans-unit>
        <trans-unit id="3064665f30f2b7615e1916cc0b20c6e7549371a4" translate="yes" xml:space="preserve">
          <source>Model::getIncrementing()</source>
          <target state="translated">Model::getIncrementing()</target>
        </trans-unit>
        <trans-unit id="4553b4a76e9962e939498c71985f95882272091d" translate="yes" xml:space="preserve">
          <source>Model::getKey()</source>
          <target state="translated">Model::getKey()</target>
        </trans-unit>
        <trans-unit id="30411c8bb053eb50e3a24ba92efc0f1489a44abe" translate="yes" xml:space="preserve">
          <source>Model::getKeyForSaveQuery()</source>
          <target state="translated">Model::getKeyForSaveQuery()</target>
        </trans-unit>
        <trans-unit id="10fc3e79d8d3f8ee9540363309bad690b7af082f" translate="yes" xml:space="preserve">
          <source>Model::getKeyForSelectQuery()</source>
          <target state="translated">Model::getKeyForSelectQuery()</target>
        </trans-unit>
        <trans-unit id="f4871f245b4a015ebfedb840f0fc5f38f05aabce" translate="yes" xml:space="preserve">
          <source>Model::getKeyName()</source>
          <target state="translated">Model::getKeyName()</target>
        </trans-unit>
        <trans-unit id="bc017c3332dd34c73716ee4691bc3663d963acef" translate="yes" xml:space="preserve">
          <source>Model::getKeyType()</source>
          <target state="translated">Model::getKeyType()</target>
        </trans-unit>
        <trans-unit id="390babe536033917740491d28925a5d946d9f7e4" translate="yes" xml:space="preserve">
          <source>Model::getPerPage()</source>
          <target state="translated">Model::getPerPage()</target>
        </trans-unit>
        <trans-unit id="1196097ef8f38e46d1f87e8e174dadb61e2d0f4d" translate="yes" xml:space="preserve">
          <source>Model::getQualifiedKeyName()</source>
          <target state="translated">Model::getQualifiedKeyName()</target>
        </trans-unit>
        <trans-unit id="e68753c47786cb3d49f0190b561d75c53bd807c7" translate="yes" xml:space="preserve">
          <source>Model::getQueueableConnection()</source>
          <target state="translated">Model::getQueueableConnection()</target>
        </trans-unit>
        <trans-unit id="ccf91f7a4cde275fba5142ddf8513befaa5d1768" translate="yes" xml:space="preserve">
          <source>Model::getQueueableId()</source>
          <target state="translated">Model::getQueueableId()</target>
        </trans-unit>
        <trans-unit id="c0ad29aac92e45bf5ecf3c39c9a24aec1d6a6034" translate="yes" xml:space="preserve">
          <source>Model::getQueueableRelations()</source>
          <target state="translated">Model::getQueueableRelations()</target>
        </trans-unit>
        <trans-unit id="5302e81da63e778cbabe788a0247e84486dfe82a" translate="yes" xml:space="preserve">
          <source>Model::getRouteKey()</source>
          <target state="translated">Model::getRouteKey()</target>
        </trans-unit>
        <trans-unit id="565c86d202a6d9dddd3a460a916f30af6293cbe2" translate="yes" xml:space="preserve">
          <source>Model::getRouteKeyName()</source>
          <target state="translated">Model::getRouteKeyName()</target>
        </trans-unit>
        <trans-unit id="a513dafcca9bb8e4ee6b0b2c164f95be7d00c8da" translate="yes" xml:space="preserve">
          <source>Model::getTable()</source>
          <target state="translated">Model::getTable()</target>
        </trans-unit>
        <trans-unit id="f30535d637ade3e3bca87fee06b1464afd653fa4" translate="yes" xml:space="preserve">
          <source>Model::hasNamedScope()</source>
          <target state="translated">Model::hasNamedScope()</target>
        </trans-unit>
        <trans-unit id="c318f7e862c5d69c61cafcffd8bf135c4e23d37b" translate="yes" xml:space="preserve">
          <source>Model::increment()</source>
          <target state="translated">Model::increment()</target>
        </trans-unit>
        <trans-unit id="7be1778114215988bf34c1ac6b46b91ec63d8dd7" translate="yes" xml:space="preserve">
          <source>Model::incrementOrDecrement()</source>
          <target state="translated">Model::incrementOrDecrement()</target>
        </trans-unit>
        <trans-unit id="23841e8a0147faf25a8cca19aec7fa1ad18f1ae2" translate="yes" xml:space="preserve">
          <source>Model::incrementOrDecrementAttributeValue()</source>
          <target state="translated">Model::incrementOrDecrementAttributeValue()</target>
        </trans-unit>
        <trans-unit id="0a7c92b5940c2cd30a649f25db164b2b835c1a36" translate="yes" xml:space="preserve">
          <source>Model::initializeTraits()</source>
          <target state="translated">Model::initializeTraits()</target>
        </trans-unit>
        <trans-unit id="e28235db3cb21d3266354086e20c80b1160c94aa" translate="yes" xml:space="preserve">
          <source>Model::insertAndSetId()</source>
          <target state="translated">Model::insertAndSetId()</target>
        </trans-unit>
        <trans-unit id="fc1b23ab676894a59b4b0bdbc28be15b35c5a41e" translate="yes" xml:space="preserve">
          <source>Model::is()</source>
          <target state="translated">Model::is()</target>
        </trans-unit>
        <trans-unit id="96d99d8a998c2228448944a4f9b1a46a16d59231" translate="yes" xml:space="preserve">
          <source>Model::isIgnoringTouch()</source>
          <target state="translated">Model::isIgnoringTouch()</target>
        </trans-unit>
        <trans-unit id="c212ff1dc4233b3b13a44764ce5c3270f88f1adf" translate="yes" xml:space="preserve">
          <source>Model::isNot()</source>
          <target state="translated">Model::isNot()</target>
        </trans-unit>
        <trans-unit id="e7cb4364456ad23d5735c548f072a5f15f22e005" translate="yes" xml:space="preserve">
          <source>Model::jsonSerialize()</source>
          <target state="translated">Model::jsonSerialize()</target>
        </trans-unit>
        <trans-unit id="9904effa7cdc036adafd6f4412b104cec18378d0" translate="yes" xml:space="preserve">
          <source>Model::load()</source>
          <target state="translated">Model::load()</target>
        </trans-unit>
        <trans-unit id="0443f0e165e10ce49ff1aae7cfe73278b8cb2259" translate="yes" xml:space="preserve">
          <source>Model::loadAggregate()</source>
          <target state="translated">Model::loadAggregate()</target>
        </trans-unit>
        <trans-unit id="a3baf15d9b026e617842126cc947d7940a2e9f5e" translate="yes" xml:space="preserve">
          <source>Model::loadAvg()</source>
          <target state="translated">Model::loadAvg()</target>
        </trans-unit>
        <trans-unit id="042fd659a57abebe6862960a6c858279c5baef3c" translate="yes" xml:space="preserve">
          <source>Model::loadCount()</source>
          <target state="translated">Model::loadCount()</target>
        </trans-unit>
        <trans-unit id="d3539e95631f0820e5ee4cbaca06b40081995a85" translate="yes" xml:space="preserve">
          <source>Model::loadMax()</source>
          <target state="translated">Model::loadMax()</target>
        </trans-unit>
        <trans-unit id="c898ab4170f3d981e746053f8ba7705be80b66cf" translate="yes" xml:space="preserve">
          <source>Model::loadMin()</source>
          <target state="translated">Model::loadMin()</target>
        </trans-unit>
        <trans-unit id="4c89301161a2ad54d712cff6e8e375366183a3de" translate="yes" xml:space="preserve">
          <source>Model::loadMissing()</source>
          <target state="translated">Model::loadMissing()</target>
        </trans-unit>
        <trans-unit id="6d37b1e6cfb7ca0ce0ab9164e2f46b90f587b1b6" translate="yes" xml:space="preserve">
          <source>Model::loadMorph()</source>
          <target state="translated">Model::loadMorph()</target>
        </trans-unit>
        <trans-unit id="42a3c2ff97b338dc543be54c37a4e8176534453d" translate="yes" xml:space="preserve">
          <source>Model::loadMorphAggregate()</source>
          <target state="translated">Model::loadMorphAggregate()</target>
        </trans-unit>
        <trans-unit id="e925304fec83cfb8a61724775b0b820790fb3c50" translate="yes" xml:space="preserve">
          <source>Model::loadMorphAvg()</source>
          <target state="translated">Model::loadMorphAvg()</target>
        </trans-unit>
        <trans-unit id="55a0ad041e6bc28e5ff892dd712ea6fdf6ea2696" translate="yes" xml:space="preserve">
          <source>Model::loadMorphCount()</source>
          <target state="translated">Model::loadMorphCount()</target>
        </trans-unit>
        <trans-unit id="8058e5cc93fc9dcafdd46d02861aa1e0bd513b63" translate="yes" xml:space="preserve">
          <source>Model::loadMorphMax()</source>
          <target state="translated">Model::loadMorphMax()</target>
        </trans-unit>
        <trans-unit id="8c415c3d11734ab41b32c1051466adc0d9d45778" translate="yes" xml:space="preserve">
          <source>Model::loadMorphMin()</source>
          <target state="translated">Model::loadMorphMin()</target>
        </trans-unit>
        <trans-unit id="c72e8f718848d93191cc05e11ba740953f46d256" translate="yes" xml:space="preserve">
          <source>Model::loadMorphSum()</source>
          <target state="translated">Model::loadMorphSum()</target>
        </trans-unit>
        <trans-unit id="10efcb260027913a71da747b779842a246b1f9a4" translate="yes" xml:space="preserve">
          <source>Model::loadSum()</source>
          <target state="translated">Model::loadSum()</target>
        </trans-unit>
        <trans-unit id="9a6efd9664e42becf62def1793b2cadde6975ce1" translate="yes" xml:space="preserve">
          <source>Model::newBaseQueryBuilder()</source>
          <target state="translated">Model::newBaseQueryBuilder()</target>
        </trans-unit>
        <trans-unit id="8200cfe95218ca603163b60dfc959aaa70754025" translate="yes" xml:space="preserve">
          <source>Model::newCollection()</source>
          <target state="translated">Model::newCollection()</target>
        </trans-unit>
        <trans-unit id="fb64ceb4db5c1565eace631ffbd64d34c4b563c0" translate="yes" xml:space="preserve">
          <source>Model::newEloquentBuilder()</source>
          <target state="translated">Model::newEloquentBuilder()</target>
        </trans-unit>
        <trans-unit id="79e78d4238eb3547f2887023ac18b11d44859041" translate="yes" xml:space="preserve">
          <source>Model::newFromBuilder()</source>
          <target state="translated">Model::newFromBuilder()</target>
        </trans-unit>
        <trans-unit id="90bf21a41b64b0fa9d886896f6505415379e2fe1" translate="yes" xml:space="preserve">
          <source>Model::newInstance()</source>
          <target state="translated">Model::newInstance()</target>
        </trans-unit>
        <trans-unit id="842ee03dd7a35e86b3e965234a9c13faede78337" translate="yes" xml:space="preserve">
          <source>Model::newModelQuery()</source>
          <target state="translated">Model::newModelQuery()</target>
        </trans-unit>
        <trans-unit id="99e1fe662e56b2213c42ab9e72893cc3cae5ff0a" translate="yes" xml:space="preserve">
          <source>Model::newPivot()</source>
          <target state="translated">Model::newPivot()</target>
        </trans-unit>
        <trans-unit id="cf90069a16fc7b875f2de7d274871cca9b6e6af6" translate="yes" xml:space="preserve">
          <source>Model::newQuery()</source>
          <target state="translated">Model::newQuery()</target>
        </trans-unit>
        <trans-unit id="ddc064a41f97744f7d0c93dd66d9962172dc84db" translate="yes" xml:space="preserve">
          <source>Model::newQueryForRestoration()</source>
          <target state="translated">Model::newQueryForRestoration()</target>
        </trans-unit>
        <trans-unit id="11dd413d757e6146615d2087bc3194f15130d38f" translate="yes" xml:space="preserve">
          <source>Model::newQueryWithoutRelationships()</source>
          <target state="translated">Model::newQueryWithoutRelationships()</target>
        </trans-unit>
        <trans-unit id="27ebd9aca1ebbbc2d5682340047e1a1f00f6279d" translate="yes" xml:space="preserve">
          <source>Model::newQueryWithoutScope()</source>
          <target state="translated">Model::newQueryWithoutScope()</target>
        </trans-unit>
        <trans-unit id="dbfa233e7937903741158deac043a23ab2e95f92" translate="yes" xml:space="preserve">
          <source>Model::newQueryWithoutScopes()</source>
          <target state="translated">Model::newQueryWithoutScopes()</target>
        </trans-unit>
        <trans-unit id="f5a63646c338fc739e445d0fbe0b28d57e43fd5b" translate="yes" xml:space="preserve">
          <source>Model::offsetExists()</source>
          <target state="translated">Model::offsetExists()</target>
        </trans-unit>
        <trans-unit id="f948349c357a2375456b6e79a5362ff0ddb7b84e" translate="yes" xml:space="preserve">
          <source>Model::offsetGet()</source>
          <target state="translated">Model::offsetGet()</target>
        </trans-unit>
        <trans-unit id="e017309c6252fbb7af7f8cf11875543fe1cffe9c" translate="yes" xml:space="preserve">
          <source>Model::offsetSet()</source>
          <target state="translated">Model::offsetSet()</target>
        </trans-unit>
        <trans-unit id="fdb92b00c0ff6f4f72cf0d339d89ff0800a7f6e7" translate="yes" xml:space="preserve">
          <source>Model::offsetUnset()</source>
          <target state="translated">Model::offsetUnset()</target>
        </trans-unit>
        <trans-unit id="5c77e1e3094629a7b8221a61ead879a7535bebd1" translate="yes" xml:space="preserve">
          <source>Model::on()</source>
          <target state="translated">Model::on()</target>
        </trans-unit>
        <trans-unit id="ff90a4f951e50c3c6087c0c37ab8d0339fc7f102" translate="yes" xml:space="preserve">
          <source>Model::onWriteConnection()</source>
          <target state="translated">Model::onWriteConnection()</target>
        </trans-unit>
        <trans-unit id="361434be5fc061c07fc8b3463e8daa239709f960" translate="yes" xml:space="preserve">
          <source>Model::performDeleteOnModel()</source>
          <target state="translated">Model::performDeleteOnModel()</target>
        </trans-unit>
        <trans-unit id="2087a766be4928d96be72cb16a1f46959217ce5e" translate="yes" xml:space="preserve">
          <source>Model::performInsert()</source>
          <target state="translated">Model::performInsert()</target>
        </trans-unit>
        <trans-unit id="a6bbfe103a2c419d38514dce4cfa11002d191115" translate="yes" xml:space="preserve">
          <source>Model::performUpdate()</source>
          <target state="translated">Model::performUpdate()</target>
        </trans-unit>
        <trans-unit id="811837839e1a9c4162025632c1f4cc078cae2528" translate="yes" xml:space="preserve">
          <source>Model::push()</source>
          <target state="translated">Model::push()</target>
        </trans-unit>
        <trans-unit id="085f6d8dec36070e918704255ef57fe69736d3d2" translate="yes" xml:space="preserve">
          <source>Model::qualifyColumn()</source>
          <target state="translated">Model::qualifyColumn()</target>
        </trans-unit>
        <trans-unit id="7fab45706c1adb4568e12fa4e774fac456908b10" translate="yes" xml:space="preserve">
          <source>Model::query()</source>
          <target state="translated">Model::query()</target>
        </trans-unit>
        <trans-unit id="5aebb23deb17aa8ba175559c83fe8f4c687b4285" translate="yes" xml:space="preserve">
          <source>Model::refresh()</source>
          <target state="translated">Model::refresh()</target>
        </trans-unit>
        <trans-unit id="de30f1213db4483cab365992d1d4f3c5481a16f9" translate="yes" xml:space="preserve">
          <source>Model::registerGlobalScopes()</source>
          <target state="translated">Model::registerGlobalScopes()</target>
        </trans-unit>
        <trans-unit id="c79740af9c5abf7f97e3daea3f3c3dd526a81447" translate="yes" xml:space="preserve">
          <source>Model::removeTableFromKey()</source>
          <target state="translated">Model::removeTableFromKey()</target>
        </trans-unit>
        <trans-unit id="dbbb3f336ab456be327684f8115a16d19d61b140" translate="yes" xml:space="preserve">
          <source>Model::replicate()</source>
          <target state="translated">Model::replicate()</target>
        </trans-unit>
        <trans-unit id="d6e3910fc2de92962651330645fa6df3ff1becb7" translate="yes" xml:space="preserve">
          <source>Model::resolveChildRouteBinding()</source>
          <target state="translated">Model::resolveChildRouteBinding()</target>
        </trans-unit>
        <trans-unit id="b69a6eff4c78d1f780b6728db95007f24972d9bb" translate="yes" xml:space="preserve">
          <source>Model::resolveConnection()</source>
          <target state="translated">Model::resolveConnection()</target>
        </trans-unit>
        <trans-unit id="6a1d3032ddbe763337dc2f7f79ca1b0caf3fe5e2" translate="yes" xml:space="preserve">
          <source>Model::resolveRouteBinding()</source>
          <target state="translated">Model::resolveRouteBinding()</target>
        </trans-unit>
        <trans-unit id="c3998a313b5804c25d28e18ab321eb0d854fe9d9" translate="yes" xml:space="preserve">
          <source>Model::save()</source>
          <target state="translated">Model::save()</target>
        </trans-unit>
        <trans-unit id="3f1e2de49dc7aac27487454772736ae56d6909d9" translate="yes" xml:space="preserve">
          <source>Model::saveOrFail()</source>
          <target state="translated">Model::saveOrFail()</target>
        </trans-unit>
        <trans-unit id="d98eefc67f25ea1e00efb06c43013fd9a2518d15" translate="yes" xml:space="preserve">
          <source>Model::saveQuietly()</source>
          <target state="translated">Model::saveQuietly()</target>
        </trans-unit>
        <trans-unit id="1a9895a18585ebd8a3a0073645ce8e6eede7b2be" translate="yes" xml:space="preserve">
          <source>Model::setConnection()</source>
          <target state="translated">Model::setConnection()</target>
        </trans-unit>
        <trans-unit id="972ffbf11bf907fe68a380e2f736191660e84f92" translate="yes" xml:space="preserve">
          <source>Model::setConnectionResolver()</source>
          <target state="translated">Model::setConnectionResolver()</target>
        </trans-unit>
        <trans-unit id="aef484ac32076af203ca39f186b713a7ea91fba1" translate="yes" xml:space="preserve">
          <source>Model::setIncrementing()</source>
          <target state="translated">Model::setIncrementing()</target>
        </trans-unit>
        <trans-unit id="3147495fb8c990836a5c1643101c6d23b797c24e" translate="yes" xml:space="preserve">
          <source>Model::setKeyName()</source>
          <target state="translated">Model::setKeyName()</target>
        </trans-unit>
        <trans-unit id="2a07e30b00d323532f06903609e4fb3d4b328520" translate="yes" xml:space="preserve">
          <source>Model::setKeyType()</source>
          <target state="translated">Model::setKeyType()</target>
        </trans-unit>
        <trans-unit id="406356b74c49a72e14dc5cd2cbcf8cc1fce9447e" translate="yes" xml:space="preserve">
          <source>Model::setKeysForSaveQuery()</source>
          <target state="translated">Model::setKeysForSaveQuery()</target>
        </trans-unit>
        <trans-unit id="b59c9913848c4e86e93de73cc8540740b49d5310" translate="yes" xml:space="preserve">
          <source>Model::setKeysForSelectQuery()</source>
          <target state="translated">Model::setKeysForSelectQuery()</target>
        </trans-unit>
        <trans-unit id="6f429f1f99a0139baa872608fd67278de4c21667" translate="yes" xml:space="preserve">
          <source>Model::setPerPage()</source>
          <target state="translated">Model::setPerPage()</target>
        </trans-unit>
        <trans-unit id="f148e3d7e92b068e8760ac6b3182e70a2fd47332" translate="yes" xml:space="preserve">
          <source>Model::setTable()</source>
          <target state="translated">Model::setTable()</target>
        </trans-unit>
        <trans-unit id="49d5374a85fdeab06758e49de7898a0734eb010b" translate="yes" xml:space="preserve">
          <source>Model::toArray()</source>
          <target state="translated">Model::toArray()</target>
        </trans-unit>
        <trans-unit id="1cbf3101a1b25b1ac3ef8c5984fcdaaef922bfe9" translate="yes" xml:space="preserve">
          <source>Model::toJson()</source>
          <target state="translated">Model::toJson()</target>
        </trans-unit>
        <trans-unit id="3b7734b06ca3650ab92c5b76c58fbb93edfa7eec" translate="yes" xml:space="preserve">
          <source>Model::unsetConnectionResolver()</source>
          <target state="translated">Model::unsetConnectionResolver()</target>
        </trans-unit>
        <trans-unit id="53d3eeea6929386356d48be192da382971ef21f7" translate="yes" xml:space="preserve">
          <source>Model::update()</source>
          <target state="translated">Model::update()</target>
        </trans-unit>
        <trans-unit id="703d60dd0c98ab705f594d86b2b497c75c6c4ae9" translate="yes" xml:space="preserve">
          <source>Model::with()</source>
          <target state="translated">Model::with()</target>
        </trans-unit>
        <trans-unit id="3f409d1b3a060c8a047dda7bec1538896c452ca9" translate="yes" xml:space="preserve">
          <source>Model::withoutTouching()</source>
          <target state="translated">Model::withoutTouching()</target>
        </trans-unit>
        <trans-unit id="2446ca1bd9c6c71ae3fa58f8ecbd25324a6e35f1" translate="yes" xml:space="preserve">
          <source>Model::withoutTouchingOn()</source>
          <target state="translated">Model::withoutTouchingOn()</target>
        </trans-unit>
        <trans-unit id="46117884b4bccca003fab9da21461a50fcb22e6f" translate="yes" xml:space="preserve">
          <source>ModelIdentifier</source>
          <target state="translated">ModelIdentifier</target>
        </trans-unit>
        <trans-unit id="c2464257d63327aa3c07322e1e8efa50e8079a66" translate="yes" xml:space="preserve">
          <source>ModelIdentifier (Contracts)</source>
          <target state="translated">МодельИдентификатор (Контракты)</target>
        </trans-unit>
        <trans-unit id="fd280880a33e51afb138ce93f53304d98a8e94c1" translate="yes" xml:space="preserve">
          <source>ModelIdentifier::__construct()</source>
          <target state="translated">ModelIdentifier::__construct()</target>
        </trans-unit>
        <trans-unit id="5845f1c3e0a604b039a27a0242e51c7eeb75ed2c" translate="yes" xml:space="preserve">
          <source>ModelMakeCommand</source>
          <target state="translated">ModelMakeCommand</target>
        </trans-unit>
        <trans-unit id="546180d34a56fc587ea9cd12a892386fb4c1ebd4" translate="yes" xml:space="preserve">
          <source>ModelMakeCommand (Foundation)</source>
          <target state="translated">ModelMakeCommand (Фонд)</target>
        </trans-unit>
        <trans-unit id="57f3808c378fd26ee3ba82e225eb7033b36a40ce" translate="yes" xml:space="preserve">
          <source>ModelMakeCommand::createController()</source>
          <target state="translated">ModelMakeCommand::createController()</target>
        </trans-unit>
        <trans-unit id="b147993b6bc89df2d9adf43977614bc476c3510c" translate="yes" xml:space="preserve">
          <source>ModelMakeCommand::createFactory()</source>
          <target state="translated">ModelMakeCommand::createFactory()</target>
        </trans-unit>
        <trans-unit id="3314227c1fcbdc8df37d34c0d4a45dbb846a355e" translate="yes" xml:space="preserve">
          <source>ModelMakeCommand::createMigration()</source>
          <target state="translated">ModelMakeCommand::createMigration()</target>
        </trans-unit>
        <trans-unit id="d232a804dc0ba3054cdeda853007e692a308ceaa" translate="yes" xml:space="preserve">
          <source>ModelMakeCommand::createSeeder()</source>
          <target state="translated">ModelMakeCommand::createSeeder()</target>
        </trans-unit>
        <trans-unit id="25dfa1fc9fffb1868b1b46f6e80b5b3bf8a216e7" translate="yes" xml:space="preserve">
          <source>ModelMakeCommand::getDefaultNamespace()</source>
          <target state="translated">ModelMakeCommand::getDefaultNamespace()</target>
        </trans-unit>
        <trans-unit id="0a231750779f13512133c0a9a179e138837af134" translate="yes" xml:space="preserve">
          <source>ModelMakeCommand::getOptions()</source>
          <target state="translated">ModelMakeCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="5ac667dc3fa76be65ec1bc4b2e7941883a19aa6d" translate="yes" xml:space="preserve">
          <source>ModelMakeCommand::getStub()</source>
          <target state="translated">ModelMakeCommand::getStub()</target>
        </trans-unit>
        <trans-unit id="b47005c0a48d2404437d3dc8c42c15a927cb0ca6" translate="yes" xml:space="preserve">
          <source>ModelMakeCommand::handle()</source>
          <target state="translated">ModelMakeCommand::handle()</target>
        </trans-unit>
        <trans-unit id="2583b3d08336c8bb1b8033f52cc7515fb9ffe4eb" translate="yes" xml:space="preserve">
          <source>ModelMakeCommand::resolveStubPath()</source>
          <target state="translated">ModelMakeCommand::resolveStubPath()</target>
        </trans-unit>
        <trans-unit id="80c5a4eca85f921957457a331621e7ffe9da1f9f" translate="yes" xml:space="preserve">
          <source>ModelNotFoundException</source>
          <target state="translated">ModelNotFoundException</target>
        </trans-unit>
        <trans-unit id="bfe5413538711109d81be26107ae0154c40251c6" translate="yes" xml:space="preserve">
          <source>ModelNotFoundException (Database\Eloquent)</source>
          <target state="translated">ModelNotFoundException (Database\Eloquent)</target>
        </trans-unit>
        <trans-unit id="cc6bdec4474092bd98027f22af99a074b7be9fdd" translate="yes" xml:space="preserve">
          <source>ModelNotFoundException::getIds()</source>
          <target state="translated">ModelNotFoundException::getIds()</target>
        </trans-unit>
        <trans-unit id="59f298b8b2f5e7a0a6c8d92843e8d46c7ea98d09" translate="yes" xml:space="preserve">
          <source>ModelNotFoundException::getModel()</source>
          <target state="translated">ModelNotFoundException::getModel()</target>
        </trans-unit>
        <trans-unit id="1f8ed3d2c4c482f47b49ba3bc07ee5e38228705b" translate="yes" xml:space="preserve">
          <source>ModelNotFoundException::setModel()</source>
          <target state="translated">ModelNotFoundException::setModel()</target>
        </trans-unit>
        <trans-unit id="77b28e262cff2554150814206a09d8fe7e505f2c" translate="yes" xml:space="preserve">
          <source>Models Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f260e757cec75096bc3eefbfb1c4a14720832017" translate="yes" xml:space="preserve">
          <source>Modifier</source>
          <target state="translated">Modifier</target>
        </trans-unit>
        <trans-unit id="5a81874bfa60f6a356fd288f931bfd38f13b4e5e" translate="yes" xml:space="preserve">
          <source>Modify a table on the schema.</source>
          <target state="translated">Измените таблицу на схеме.</target>
        </trans-unit>
        <trans-unit id="be8ceae0c7d7c27773511e5f64f2541ddaf4e6fa" translate="yes" xml:space="preserve">
          <source>Modify the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682af707578fe1e1220a9c83203dac066a5015ec" translate="yes" xml:space="preserve">
          <source>Modify the query to check for available jobs.</source>
          <target state="translated">Измените запрос,чтобы проверить наличие свободных вакансий.</target>
        </trans-unit>
        <trans-unit id="0841d37287b5f3ac0805ef74a8291e72abab1748" translate="yes" xml:space="preserve">
          <source>Modify the query to check for jobs that are reserved but have expired.</source>
          <target state="translated">Измените запрос,чтобы проверить,есть ли задания,которые зарезервированы,но срок действия которых истек.</target>
        </trans-unit>
        <trans-unit id="7ff5214780c4825a354ce6f88ee8b18eb2bbabdb" translate="yes" xml:space="preserve">
          <source>Modifying Columns</source>
          <target state="translated">Модифицирующие колонки</target>
        </trans-unit>
        <trans-unit id="b4c419511b94b11a4dbc83489e9a336fbdabf979" translate="yes" xml:space="preserve">
          <source>Modifying The Import Query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="f0c6acff24bc7941d7797f41a861782190b4b85f" translate="yes" xml:space="preserve">
          <source>MongoDB</source>
          <target state="translated">MongoDB</target>
        </trans-unit>
        <trans-unit id="78d7a2ea1962033d32ac4752cb7d4b3d112eccf7" translate="yes" xml:space="preserve">
          <source>MongoDB (Optional)</source>
          <target state="translated">МонгоДБ (необязательно)</target>
        </trans-unit>
        <trans-unit id="ec0f10698082c93db66cc3bacc7c4262043d5c37" translate="yes" xml:space="preserve">
          <source>Monitor</source>
          <target state="translated">Monitor</target>
        </trans-unit>
        <trans-unit id="1e3d36b5b921923ae8da8dfb0ff6883acb05eec5" translate="yes" xml:space="preserve">
          <source>Monitor (Contracts)</source>
          <target state="translated">Монитор (Контракты)</target>
        </trans-unit>
        <trans-unit id="6e74f5ade46e48b9c5901f9c53504827d8a18779" translate="yes" xml:space="preserve">
          <source>Monitor::failing()</source>
          <target state="translated">Monitor::failing()</target>
        </trans-unit>
        <trans-unit id="b08549f7d26f1ecefd8521a4c88f7d710b5b7b04" translate="yes" xml:space="preserve">
          <source>Monitor::looping()</source>
          <target state="translated">Monitor::looping()</target>
        </trans-unit>
        <trans-unit id="3853af484f54c8f07a3cee23e35d69342964c6dc" translate="yes" xml:space="preserve">
          <source>Monitor::stopping()</source>
          <target state="translated">Monitor::stopping()</target>
        </trans-unit>
        <trans-unit id="483e0172787b837cd97450836c508abadaab49b3" translate="yes" xml:space="preserve">
          <source>Monolog Formatters</source>
          <target state="translated">Монологические форматы</target>
        </trans-unit>
        <trans-unit id="b4f234355f77a881a5262427f56db6e082e000ed" translate="yes" xml:space="preserve">
          <source>Monolog has a variety of &lt;a href=&quot;https://github.com/Seldaek/monolog/tree/master/src/Monolog/Handler&quot;&gt;available handlers&lt;/a&gt;. In some cases, the type of logger you wish to create is merely a Monolog driver with an instance of a specific handler. These channels can be created using the &lt;code&gt;monolog&lt;/code&gt; driver.</source>
          <target state="translated">В Monolog есть множество &lt;a href=&quot;https://github.com/Seldaek/monolog/tree/master/src/Monolog/Handler&quot;&gt;доступных обработчиков&lt;/a&gt; . В некоторых случаях тип регистратора, который вы хотите создать, представляет собой просто драйвер Monolog с экземпляром определенного обработчика. Эти каналы могут быть созданы с помощью драйвера &lt;code&gt;monolog&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc4f863878987af59ad8bc30d33a541cc56fc1aa" translate="yes" xml:space="preserve">
          <source>More robust local development options are available via &lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt; and &lt;a href=&quot;valet&quot;&gt;Valet&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d6213dd0fe838e597a092c31a3e6f37d466e39" translate="yes" xml:space="preserve">
          <source>Morph To Relationships</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac90730b8b6d59460478aa75e87bd78251252030" translate="yes" xml:space="preserve">
          <source>Morph the given content into JSON.</source>
          <target state="translated">Морфировать данное содержание в JSON.</target>
        </trans-unit>
        <trans-unit id="e0ea4c3e8f2e6654f3be8396d76ab8fb5506b293" translate="yes" xml:space="preserve">
          <source>MorphMany</source>
          <target state="translated">MorphMany</target>
        </trans-unit>
        <trans-unit id="40bb524ff6fa2c7be9e08cd73c9062390a93db93" translate="yes" xml:space="preserve">
          <source>MorphMany (Database\Eloquent\Relations)</source>
          <target state="translated">MorphMany (Database\Eloquent\Relations)</target>
        </trans-unit>
        <trans-unit id="38df4a9ca3bf43c1c934af1242ee4ca7f62680f4" translate="yes" xml:space="preserve">
          <source>MorphMany::getResults()</source>
          <target state="translated">MorphMany::getResults()</target>
        </trans-unit>
        <trans-unit id="7c75c8dae7b2305a8abeae85abf8c654215cb774" translate="yes" xml:space="preserve">
          <source>MorphMany::initRelation()</source>
          <target state="translated">MorphMany::initRelation()</target>
        </trans-unit>
        <trans-unit id="e0ce1d003f319129a19b6180295f1022b5bb0ea4" translate="yes" xml:space="preserve">
          <source>MorphMany::match()</source>
          <target state="translated">MorphMany::match()</target>
        </trans-unit>
        <trans-unit id="6524648bf4df916877cd5c77c129997943e14381" translate="yes" xml:space="preserve">
          <source>MorphOne</source>
          <target state="translated">MorphOne</target>
        </trans-unit>
        <trans-unit id="dc46cae150315250844156b608e073438f282597" translate="yes" xml:space="preserve">
          <source>MorphOne (Database\Eloquent\Relations)</source>
          <target state="translated">MorphOne (Database\Eloquent\Relations)</target>
        </trans-unit>
        <trans-unit id="e70cb327cf34f1b6f0e6cf1020fc750d3d78d4b6" translate="yes" xml:space="preserve">
          <source>MorphOne::getRelatedKeyFrom()</source>
          <target state="translated">MorphOne::getRelatedKeyFrom()</target>
        </trans-unit>
        <trans-unit id="09b864122727be455ae4d7f9ac817a62d69e9b8e" translate="yes" xml:space="preserve">
          <source>MorphOne::getResults()</source>
          <target state="translated">MorphOne::getResults()</target>
        </trans-unit>
        <trans-unit id="b7b09476ae8cf38135d5a538fb70a4a6fbd38ea7" translate="yes" xml:space="preserve">
          <source>MorphOne::initRelation()</source>
          <target state="translated">MorphOne::initRelation()</target>
        </trans-unit>
        <trans-unit id="6afe4804446c94bc4655f14ae20f1d3f1e3cd76d" translate="yes" xml:space="preserve">
          <source>MorphOne::match()</source>
          <target state="translated">MorphOne::match()</target>
        </trans-unit>
        <trans-unit id="9acad5ed9ca4ee3a7b262c1eaf6318282b877c7d" translate="yes" xml:space="preserve">
          <source>MorphOne::newRelatedInstanceFor()</source>
          <target state="translated">MorphOne::newRelatedInstanceFor()</target>
        </trans-unit>
        <trans-unit id="d4b067fd7f7c52428559621ac8c0e1d978786d11" translate="yes" xml:space="preserve">
          <source>MorphOneOrMany</source>
          <target state="translated">MorphOneOrMany</target>
        </trans-unit>
        <trans-unit id="57f32067ca5c9c76f19f24de038d69b0713caab3" translate="yes" xml:space="preserve">
          <source>MorphOneOrMany (Database\Eloquent\Relations)</source>
          <target state="translated">MorphOneOrMany (Database\Eloquent\Relations)</target>
        </trans-unit>
        <trans-unit id="c8198b36a1284854dd77b783fd2dfe480eb29629" translate="yes" xml:space="preserve">
          <source>MorphOneOrMany::__construct()</source>
          <target state="translated">MorphOneOrMany::__construct()</target>
        </trans-unit>
        <trans-unit id="4fc55bd983b6f04cd7c4e83257f4d8edb42a48c7" translate="yes" xml:space="preserve">
          <source>MorphOneOrMany::addConstraints()</source>
          <target state="translated">MorphOneOrMany::addConstraints()</target>
        </trans-unit>
        <trans-unit id="d68f29a0c893c4db92eae56cdbeae9909b2cafcf" translate="yes" xml:space="preserve">
          <source>MorphOneOrMany::addEagerConstraints()</source>
          <target state="translated">MorphOneOrMany::addEagerConstraints()</target>
        </trans-unit>
        <trans-unit id="87a51ca3c0b9a78c862cf378919ae217ba7209fa" translate="yes" xml:space="preserve">
          <source>MorphOneOrMany::getMorphClass()</source>
          <target state="translated">MorphOneOrMany::getMorphClass()</target>
        </trans-unit>
        <trans-unit id="267503e3869d88d9d801e1e251bc845f194a8c92" translate="yes" xml:space="preserve">
          <source>MorphOneOrMany::getMorphType()</source>
          <target state="translated">MorphOneOrMany::getMorphType()</target>
        </trans-unit>
        <trans-unit id="a743997b97dd39dc15c0922dad709aca3dc13a9e" translate="yes" xml:space="preserve">
          <source>MorphOneOrMany::getQualifiedMorphType()</source>
          <target state="translated">MorphOneOrMany::getQualifiedMorphType()</target>
        </trans-unit>
        <trans-unit id="2060321547888d829f44d2efc8947151968722ab" translate="yes" xml:space="preserve">
          <source>MorphOneOrMany::getRelationExistenceQuery()</source>
          <target state="translated">MorphOneOrMany::getRelationExistenceQuery()</target>
        </trans-unit>
        <trans-unit id="7cdcb0894d4633efbd804d2db37bf7c074ea67af" translate="yes" xml:space="preserve">
          <source>MorphOneOrMany::setForeignAttributesForCreate()</source>
          <target state="translated">MorphOneOrMany::setForeignAttributesForCreate()</target>
        </trans-unit>
        <trans-unit id="1950bf2d89325083df7523e1099cacbefcbf64d5" translate="yes" xml:space="preserve">
          <source>MorphPivot</source>
          <target state="translated">MorphPivot</target>
        </trans-unit>
        <trans-unit id="cbf35cc120c3e577b9f4036d61edd1f609572a69" translate="yes" xml:space="preserve">
          <source>MorphPivot (Database\Eloquent\Relations)</source>
          <target state="translated">MorphPivot (Database\Eloquent\Relations)</target>
        </trans-unit>
        <trans-unit id="58843761cc43c400f088755156f335cfd6b6e539" translate="yes" xml:space="preserve">
          <source>MorphPivot::delete()</source>
          <target state="translated">MorphPivot::delete()</target>
        </trans-unit>
        <trans-unit id="45a27ed116ee3d4c693ff7840f9bae4388f0b634" translate="yes" xml:space="preserve">
          <source>MorphPivot::getQueueableId()</source>
          <target state="translated">MorphPivot::getQueueableId()</target>
        </trans-unit>
        <trans-unit id="26d4be14ffd2a9daf81f3ebd639f2f625979cc75" translate="yes" xml:space="preserve">
          <source>MorphPivot::newQueryForCollectionRestoration()</source>
          <target state="translated">MorphPivot::newQueryForCollectionRestoration()</target>
        </trans-unit>
        <trans-unit id="d49fa1c6a76548662dad7f386cfcf7c32499b99d" translate="yes" xml:space="preserve">
          <source>MorphPivot::newQueryForRestoration()</source>
          <target state="translated">MorphPivot::newQueryForRestoration()</target>
        </trans-unit>
        <trans-unit id="e9450578e73043496547cb723f9d50fdf68ca4af" translate="yes" xml:space="preserve">
          <source>MorphPivot::setKeysForSaveQuery()</source>
          <target state="translated">MorphPivot::setKeysForSaveQuery()</target>
        </trans-unit>
        <trans-unit id="a38809ba0350250cce4eb987374c3683af4eed20" translate="yes" xml:space="preserve">
          <source>MorphPivot::setKeysForSelectQuery()</source>
          <target state="translated">MorphPivot::setKeysForSelectQuery()</target>
        </trans-unit>
        <trans-unit id="915a3a3020008ffaf64487bcc0c9e84aaf383d40" translate="yes" xml:space="preserve">
          <source>MorphPivot::setMorphClass()</source>
          <target state="translated">MorphPivot::setMorphClass()</target>
        </trans-unit>
        <trans-unit id="127f271453ec753ff90039a7364ae0170e1f16ea" translate="yes" xml:space="preserve">
          <source>MorphPivot::setMorphType()</source>
          <target state="translated">MorphPivot::setMorphType()</target>
        </trans-unit>
        <trans-unit id="ce5eecdbb3198ae6f4a3e04ba16976608cce2905" translate="yes" xml:space="preserve">
          <source>MorphTo</source>
          <target state="translated">MorphTo</target>
        </trans-unit>
        <trans-unit id="a2566d1b183edcdc5567522a8177d46141122783" translate="yes" xml:space="preserve">
          <source>MorphTo (Database\Eloquent\Relations)</source>
          <target state="translated">MorphTo (Database\Eloquent\Relations)</target>
        </trans-unit>
        <trans-unit id="74a1e9eb8020351c54b68ea58c565de6bef54b21" translate="yes" xml:space="preserve">
          <source>MorphTo::__call()</source>
          <target state="translated">MorphTo::__call()</target>
        </trans-unit>
        <trans-unit id="ebd1e41f993b294ef789a7a01be344a1e8013d7a" translate="yes" xml:space="preserve">
          <source>MorphTo::__construct()</source>
          <target state="translated">MorphTo::__construct()</target>
        </trans-unit>
        <trans-unit id="5386468ec248940238a0e6cab2bf579f0402ef3b" translate="yes" xml:space="preserve">
          <source>MorphTo::addEagerConstraints()</source>
          <target state="translated">MorphTo::addEagerConstraints()</target>
        </trans-unit>
        <trans-unit id="6aa4bb97c1979d306735b2cd3d89e8fcac6f26c0" translate="yes" xml:space="preserve">
          <source>MorphTo::associate()</source>
          <target state="translated">MorphTo::associate()</target>
        </trans-unit>
        <trans-unit id="4ae9b5262fed662a01bb2c554ab100da044df083" translate="yes" xml:space="preserve">
          <source>MorphTo::buildDictionary()</source>
          <target state="translated">MorphTo::buildDictionary()</target>
        </trans-unit>
        <trans-unit id="2732f0b373bd928c422eb0141d0a7405df69aa66" translate="yes" xml:space="preserve">
          <source>MorphTo::constrain()</source>
          <target state="translated">MorphTo::constrain()</target>
        </trans-unit>
        <trans-unit id="35f62c99bad0f8d4fb9b6b3b000bae7cd227fe94" translate="yes" xml:space="preserve">
          <source>MorphTo::createModelByType()</source>
          <target state="translated">MorphTo::createModelByType()</target>
        </trans-unit>
        <trans-unit id="14ee46bcdd89d7ffe9982a89e42231599279b664" translate="yes" xml:space="preserve">
          <source>MorphTo::dissociate()</source>
          <target state="translated">MorphTo::dissociate()</target>
        </trans-unit>
        <trans-unit id="c8643d25c3571eec6683543f0cce4707cb6ee7b9" translate="yes" xml:space="preserve">
          <source>MorphTo::gatherKeysByType()</source>
          <target state="translated">MorphTo::gatherKeysByType()</target>
        </trans-unit>
        <trans-unit id="d89168676d8f7f6f476321a7b542254eb4820fe9" translate="yes" xml:space="preserve">
          <source>MorphTo::getDictionary()</source>
          <target state="translated">MorphTo::getDictionary()</target>
        </trans-unit>
        <trans-unit id="2e93e3301a5d1605c4a073afd89eb65433e17cb0" translate="yes" xml:space="preserve">
          <source>MorphTo::getEager()</source>
          <target state="translated">MorphTo::getEager()</target>
        </trans-unit>
        <trans-unit id="f6d99bac19ca2932b7ef9af21823ab7a8a334845" translate="yes" xml:space="preserve">
          <source>MorphTo::getMorphType()</source>
          <target state="translated">MorphTo::getMorphType()</target>
        </trans-unit>
        <trans-unit id="76e6514431af06992d9ceafde2da3150621325a0" translate="yes" xml:space="preserve">
          <source>MorphTo::getResults()</source>
          <target state="translated">MorphTo::getResults()</target>
        </trans-unit>
        <trans-unit id="79c0d6db70d9d60c44d7894faed63548ddcea081" translate="yes" xml:space="preserve">
          <source>MorphTo::getResultsByType()</source>
          <target state="translated">MorphTo::getResultsByType()</target>
        </trans-unit>
        <trans-unit id="39ceee1b35a53f047d8657033a51881751b606e7" translate="yes" xml:space="preserve">
          <source>MorphTo::match()</source>
          <target state="translated">MorphTo::match()</target>
        </trans-unit>
        <trans-unit id="b05f6586edffdaa805b320ce14cd06483aba2745" translate="yes" xml:space="preserve">
          <source>MorphTo::matchToMorphParents()</source>
          <target state="translated">MorphTo::matchToMorphParents()</target>
        </trans-unit>
        <trans-unit id="2d8582f2892d7e4b16a9061ad7880d30efa3b7fa" translate="yes" xml:space="preserve">
          <source>MorphTo::morphWith()</source>
          <target state="translated">MorphTo::morphWith()</target>
        </trans-unit>
        <trans-unit id="dba1333eb4b03cafcb1cd42be5f62b0d2d83f44b" translate="yes" xml:space="preserve">
          <source>MorphTo::morphWithCount()</source>
          <target state="translated">MorphTo::morphWithCount()</target>
        </trans-unit>
        <trans-unit id="b22608803819bae0998321a3e0ef0faafcf5b1e6" translate="yes" xml:space="preserve">
          <source>MorphTo::newRelatedInstanceFor()</source>
          <target state="translated">MorphTo::newRelatedInstanceFor()</target>
        </trans-unit>
        <trans-unit id="cea28d7255d6da1a8b7ef885ad6ad0b9152c06ae" translate="yes" xml:space="preserve">
          <source>MorphTo::replayMacros()</source>
          <target state="translated">MorphTo::replayMacros()</target>
        </trans-unit>
        <trans-unit id="a3b858d08e555770810354d965d314da0e0455f3" translate="yes" xml:space="preserve">
          <source>MorphTo::touch()</source>
          <target state="translated">MorphTo::touch()</target>
        </trans-unit>
        <trans-unit id="4315255f6ae64ef999e4ad22f9d3476881d2f49d" translate="yes" xml:space="preserve">
          <source>MorphToMany</source>
          <target state="translated">MorphToMany</target>
        </trans-unit>
        <trans-unit id="fbd94f147dba94850ff3cc60194ec63fdff668da" translate="yes" xml:space="preserve">
          <source>MorphToMany (Database\Eloquent\Relations)</source>
          <target state="translated">MorphToMany (Database\Eloquent\Relations)</target>
        </trans-unit>
        <trans-unit id="a2f5a6a6546bc19d74a21dbb316d4eed4a07d16e" translate="yes" xml:space="preserve">
          <source>MorphToMany::__construct()</source>
          <target state="translated">MorphToMany::__construct()</target>
        </trans-unit>
        <trans-unit id="25c0f111be583cd282d1d504cd4318c33a2ff746" translate="yes" xml:space="preserve">
          <source>MorphToMany::addEagerConstraints()</source>
          <target state="translated">MorphToMany::addEagerConstraints()</target>
        </trans-unit>
        <trans-unit id="3acfb48a8a02cf646e4b66aa15f6597334575d99" translate="yes" xml:space="preserve">
          <source>MorphToMany::addWhereConstraints()</source>
          <target state="translated">MorphToMany::addWhereConstraints()</target>
        </trans-unit>
        <trans-unit id="35de330569aa4506513644cb4e77f05c2ca39f16" translate="yes" xml:space="preserve">
          <source>MorphToMany::aliasedPivotColumns()</source>
          <target state="translated">MorphToMany::aliasedPivotColumns()</target>
        </trans-unit>
        <trans-unit id="84a0bb98577db6d8e4de28e7d5c8645a89b5b311" translate="yes" xml:space="preserve">
          <source>MorphToMany::baseAttachRecord()</source>
          <target state="translated">MorphToMany::baseAttachRecord()</target>
        </trans-unit>
        <trans-unit id="d0d3b5f66bf3c4da741ca71aa70027f5d653c51f" translate="yes" xml:space="preserve">
          <source>MorphToMany::getCurrentlyAttachedPivots()</source>
          <target state="translated">MorphToMany::getCurrentlyAttachedPivots()</target>
        </trans-unit>
        <trans-unit id="834e7e31f9b638046ab5a28aefd15a4c43c3f88f" translate="yes" xml:space="preserve">
          <source>MorphToMany::getInverse()</source>
          <target state="translated">MorphToMany::getInverse()</target>
        </trans-unit>
        <trans-unit id="7a977dbe9fef6b4d08d37db369bf9f616fd6bd9c" translate="yes" xml:space="preserve">
          <source>MorphToMany::getMorphClass()</source>
          <target state="translated">MorphToMany::getMorphClass()</target>
        </trans-unit>
        <trans-unit id="9b92652ed98d6f7efa11906417c0743e4fc70f6f" translate="yes" xml:space="preserve">
          <source>MorphToMany::getMorphType()</source>
          <target state="translated">MorphToMany::getMorphType()</target>
        </trans-unit>
        <trans-unit id="1d541a727dada391b24df83758d53de30d716666" translate="yes" xml:space="preserve">
          <source>MorphToMany::getRelationExistenceQuery()</source>
          <target state="translated">MorphToMany::getRelationExistenceQuery()</target>
        </trans-unit>
        <trans-unit id="4ee48f01c248d9f033cfc2abd61c7afeb1ba8170" translate="yes" xml:space="preserve">
          <source>MorphToMany::newPivot()</source>
          <target state="translated">MorphToMany::newPivot()</target>
        </trans-unit>
        <trans-unit id="ba5d498811c3f2c43f54c367891abdcc52072659" translate="yes" xml:space="preserve">
          <source>MorphToMany::newPivotQuery()</source>
          <target state="translated">MorphToMany::newPivotQuery()</target>
        </trans-unit>
        <trans-unit id="176ada46af75ec85a64dd0347c9a36ff1da798ff" translate="yes" xml:space="preserve">
          <source>Most applications will be fine regardless of whether you prefer facades or contracts. However, if you are building a package, you should strongly consider using contracts since they will be easier to test in a package context.</source>
          <target state="translated">Большинство заявок будет в порядке,независимо от того,предпочитаете ли Вы фасады или контракты.Однако,если вы создаёте пакет,вам следует сильно подумать об использовании контрактов,так как их будет легче тестировать в контексте пакета.</target>
        </trans-unit>
        <trans-unit id="32bb38c17bc948a9ae7f791804303061c88a6fb1" translate="yes" xml:space="preserve">
          <source>Most subscription states are also available as query scopes so that you may easily query your database for subscriptions that are in a given state:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d437412a7bbd5c6c7df2767f4bb0f81cfc947166" translate="yes" xml:space="preserve">
          <source>Most web applications provide a way for users to reset their forgotten passwords. Rather than forcing you to re-implement this on each application, Laravel provides convenient methods for sending password reminders and performing password resets.</source>
          <target state="translated">Большинство веб-приложений предоставляют пользователям возможность сбросить забытые пароли.Вместо того,чтобы заставлять вас повторно внедрять это на каждом приложении,Laravel предоставляет удобные методы для отправки напоминаний паролей и выполнения сброса паролей.</target>
        </trans-unit>
        <trans-unit id="fbf1da4aec9d8f20304fdb64992bb0acb6e4802e" translate="yes" xml:space="preserve">
          <source>MountManager</source>
          <target state="translated">MountManager</target>
        </trans-unit>
        <trans-unit id="8386548c0b9b834e869ceff778be57704585e671" translate="yes" xml:space="preserve">
          <source>Mouseover</source>
          <target state="translated">Mouseover</target>
        </trans-unit>
        <trans-unit id="c61a9aa6c25424662c928e74821346de6adbf92a" translate="yes" xml:space="preserve">
          <source>Move a directory.</source>
          <target state="translated">Переместить каталог.</target>
        </trans-unit>
        <trans-unit id="e621bd9340e871ecb93252db62967e49d8c9b9d9" translate="yes" xml:space="preserve">
          <source>Move a file to a new location.</source>
          <target state="translated">Переместить файл на новое место.</target>
        </trans-unit>
        <trans-unit id="f0331676cf6194c41a40dcfd014f1e0f775689f2" translate="yes" xml:space="preserve">
          <source>Move all the files in the given MountManager.</source>
          <target state="translated">Переместить все файлы в данном MountManager.</target>
        </trans-unit>
        <trans-unit id="26475dfd52842c589d5357442c7c37244bf41cab" translate="yes" xml:space="preserve">
          <source>Multi-Part Requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2abdd3eef16566b190a3dd32e6a843e39ea4414" translate="yes" xml:space="preserve">
          <source>Multiplan Subscriptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6db67ef590d5958a28046d9feecefba74d7a3ae" translate="yes" xml:space="preserve">
          <source>Multiple Authentication Guards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7060ff875fb55af955404d313a59830cf2285faa" translate="yes" xml:space="preserve">
          <source>Multiple Choice Questions</source>
          <target state="translated">Вопросы с несколькими вариантами ответа</target>
        </trans-unit>
        <trans-unit id="603bb5b97691f6ba3a3bd310b7710f0770c491d2" translate="yes" xml:space="preserve">
          <source>Multiple PHP Versions</source>
          <target state="translated">Несколько версий PHP</target>
        </trans-unit>
        <trans-unit id="31397c7ffeb2ff29516c016f29dfdcc3d46522e3" translate="yes" xml:space="preserve">
          <source>Multiple Rate Limits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0189c1fb7912bba8f0c510e7c452bd2a00cae09" translate="yes" xml:space="preserve">
          <source>Multiple Servers</source>
          <target state="translated">Несколько серверов</target>
        </trans-unit>
        <trans-unit id="545c44f85067e99a70fb7e888721326da4ce02bc" translate="yes" xml:space="preserve">
          <source>Multiple calls to the &lt;code&gt;less&lt;/code&gt; method may be used to compile multiple files:</source>
          <target state="translated">Для компиляции нескольких файлов можно использовать несколько вызовов метода &lt;code&gt;less&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="73e701e31fe5035bc08a86f4ffc4575c0458e822" translate="yes" xml:space="preserve">
          <source>Multiple grouping criteria may be passed as an array. Each array element will be applied to the corresponding level within a multi-dimensional array:</source>
          <target state="translated">В качестве массива может быть передано несколько критериев группировки.Каждый элемент массива будет применен на соответствующем уровне внутри многомерного массива:</target>
        </trans-unit>
        <trans-unit id="611eb88781e9c16216f50ad557049f2127d4b0c5" translate="yes" xml:space="preserve">
          <source>MustVerifyEmail</source>
          <target state="translated">MustVerifyEmail</target>
        </trans-unit>
        <trans-unit id="70b765e191d7a6fe8dd2f7587c3d01c60d2d3684" translate="yes" xml:space="preserve">
          <source>MustVerifyEmail (Auth)</source>
          <target state="translated">MustVerifyEmail (Auth)</target>
        </trans-unit>
        <trans-unit id="0cc34f83e3e0b4e85d8b67d8298c22b2cf07d209" translate="yes" xml:space="preserve">
          <source>MustVerifyEmail (Contracts)</source>
          <target state="translated">MustVerifyEmail (Контракты)</target>
        </trans-unit>
        <trans-unit id="8130a6cabbb5980fa631fbf449ecd90c4394033e" translate="yes" xml:space="preserve">
          <source>MustVerifyEmail::getEmailForVerification()</source>
          <target state="translated">MustVerifyEmail::getEmailForVerification()</target>
        </trans-unit>
        <trans-unit id="ce4371822b92818d7a3ef137bf7001e4edbd1136" translate="yes" xml:space="preserve">
          <source>MustVerifyEmail::hasVerifiedEmail()</source>
          <target state="translated">MustVerifyEmail::hasVerifiedEmail()</target>
        </trans-unit>
        <trans-unit id="bab2b521f1a0a9fe967d7876f28de3281c29b429" translate="yes" xml:space="preserve">
          <source>MustVerifyEmail::markEmailAsVerified()</source>
          <target state="translated">MustVerifyEmail::markEmailAsVerified()</target>
        </trans-unit>
        <trans-unit id="c1ab04b93fdf107101a9470b4c6a5ffc98ba09e9" translate="yes" xml:space="preserve">
          <source>MustVerifyEmail::sendEmailVerificationNotification()</source>
          <target state="translated">MustVerifyEmail::sendEmailVerificationNotification()</target>
        </trans-unit>
        <trans-unit id="f2ac91877c03c7bf62b6aa952b5190b938302d7e" translate="yes" xml:space="preserve">
          <source>Muting Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deaa0c393a6613972aaccbf1fecfdad67aa21e88" translate="yes" xml:space="preserve">
          <source>MySQL</source>
          <target state="translated">MySQL</target>
        </trans-unit>
        <trans-unit id="72e170d2e4e44177c4d87df451a2082296f50203" translate="yes" xml:space="preserve">
          <source>MySQL 5.6+ (&lt;a href=&quot;https://en.wikipedia.org/wiki/MySQL#Release_history&quot;&gt;Version Policy&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788004fe7ee20997ef58b776624639996d916400" translate="yes" xml:space="preserve">
          <source>MySQL 8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5577fa3771922f1cf03d6135ec2aa409b08c822" translate="yes" xml:space="preserve">
          <source>MySQL and PostgreSQL support &lt;code&gt;whereJsonContains&lt;/code&gt; with multiple values:</source>
          <target state="translated">MySQL и PostgreSQL поддерживают &lt;code&gt;whereJsonContains&lt;/code&gt; с несколькими значениями:</target>
        </trans-unit>
        <trans-unit id="c498097cce35e659d5fa51fdee300caa5b48e647" translate="yes" xml:space="preserve">
          <source>MySqlBuilder</source>
          <target state="translated">MySqlBuilder</target>
        </trans-unit>
        <trans-unit id="79767a04df96875f5df8253a8d14748a851d3981" translate="yes" xml:space="preserve">
          <source>MySqlBuilder (Database\Schema)</source>
          <target state="translated">MySqlBuilder (Database\Schema)</target>
        </trans-unit>
        <trans-unit id="32375242f248c7d1ab5b7e3ae35268a181a19053" translate="yes" xml:space="preserve">
          <source>MySqlBuilder::dropAllTables()</source>
          <target state="translated">MySqlBuilder::dropAllTables()</target>
        </trans-unit>
        <trans-unit id="f9eae3fb7b091364bc631ec68261b93510749b1a" translate="yes" xml:space="preserve">
          <source>MySqlBuilder::dropAllViews()</source>
          <target state="translated">MySqlBuilder::dropAllViews()</target>
        </trans-unit>
        <trans-unit id="c1770df498b24c1b977800e6e161088b0d542b3b" translate="yes" xml:space="preserve">
          <source>MySqlBuilder::getAllTables()</source>
          <target state="translated">MySqlBuilder::getAllTables()</target>
        </trans-unit>
        <trans-unit id="167077f59e9288976c30acef69ca5cc3bfdd2e14" translate="yes" xml:space="preserve">
          <source>MySqlBuilder::getAllViews()</source>
          <target state="translated">MySqlBuilder::getAllViews()</target>
        </trans-unit>
        <trans-unit id="3fb07c871a07beabca4c9107b5c67677d65b805d" translate="yes" xml:space="preserve">
          <source>MySqlBuilder::getColumnListing()</source>
          <target state="translated">MySqlBuilder::getColumnListing()</target>
        </trans-unit>
        <trans-unit id="af8f4d2c70c6a461432b775439553498fa120eef" translate="yes" xml:space="preserve">
          <source>MySqlBuilder::hasTable()</source>
          <target state="translated">MySqlBuilder::hasTable()</target>
        </trans-unit>
        <trans-unit id="3b06ee416829dba8adc801a92eb64d8750419d2b" translate="yes" xml:space="preserve">
          <source>MySqlConnection</source>
          <target state="translated">MySqlConnection</target>
        </trans-unit>
        <trans-unit id="2ffa57d3193103c0e061dd440d4fb5ca5f104c58" translate="yes" xml:space="preserve">
          <source>MySqlConnection (Database)</source>
          <target state="translated">MySqlConnection (База данных)</target>
        </trans-unit>
        <trans-unit id="25ba99f4eb7c4ff41af4f75637e6043168dcae90" translate="yes" xml:space="preserve">
          <source>MySqlConnection::bindValues()</source>
          <target state="translated">MySqlConnection::bindValues()</target>
        </trans-unit>
        <trans-unit id="ae50bdc3814c769f56ff79eb9f0df581579aa2ed" translate="yes" xml:space="preserve">
          <source>MySqlConnection::getDefaultPostProcessor()</source>
          <target state="translated">MySqlConnection::getDefaultPostProcessor()</target>
        </trans-unit>
        <trans-unit id="6177f388c47682469442df557e881af0a41f8048" translate="yes" xml:space="preserve">
          <source>MySqlConnection::getDefaultQueryGrammar()</source>
          <target state="translated">MySqlConnection::getDefaultQueryGrammar()</target>
        </trans-unit>
        <trans-unit id="1231bb325ce1e858269abd5eb59aaf78a8a2fee5" translate="yes" xml:space="preserve">
          <source>MySqlConnection::getDefaultSchemaGrammar()</source>
          <target state="translated">MySqlConnection::getDefaultSchemaGrammar()</target>
        </trans-unit>
        <trans-unit id="fd37e3b433cd6459d844f1f388a7632d6c892768" translate="yes" xml:space="preserve">
          <source>MySqlConnection::getDoctrineDriver()</source>
          <target state="translated">MySqlConnection::getDoctrineDriver()</target>
        </trans-unit>
        <trans-unit id="da6cf745eeb1c62743bf1a40157b44b94714c62c" translate="yes" xml:space="preserve">
          <source>MySqlConnection::getSchemaBuilder()</source>
          <target state="translated">MySqlConnection::getSchemaBuilder()</target>
        </trans-unit>
        <trans-unit id="f6299042f22f6459688ae403a2c61780e6b1db11" translate="yes" xml:space="preserve">
          <source>MySqlConnection::getSchemaState()</source>
          <target state="translated">MySqlConnection::getSchemaState()</target>
        </trans-unit>
        <trans-unit id="dd8a47a57f80e0c3391c5c93b7372fd9a54dafeb" translate="yes" xml:space="preserve">
          <source>MySqlConnection::isMaria()</source>
          <target state="translated">MySqlConnection::isMaria()</target>
        </trans-unit>
        <trans-unit id="e56f286ce661c1be8ddd9c93d34634ee687e9f20" translate="yes" xml:space="preserve">
          <source>MySqlConnector</source>
          <target state="translated">MySqlConnector</target>
        </trans-unit>
        <trans-unit id="729702b153f1af6bb342ee17c12e29fe30f8f055" translate="yes" xml:space="preserve">
          <source>MySqlConnector (Database\Connectors)</source>
          <target state="translated">MySqlConnector (Database\Connectors)</target>
        </trans-unit>
        <trans-unit id="95009d7ae3f6bca228fbe4bbe06fe21ee17a420e" translate="yes" xml:space="preserve">
          <source>MySqlConnector::configureEncoding()</source>
          <target state="translated">MySqlConnector::configureEncoding()</target>
        </trans-unit>
        <trans-unit id="975fac5ae498f9fee2d3a3b28e766634a1eea4ec" translate="yes" xml:space="preserve">
          <source>MySqlConnector::configureIsolationLevel()</source>
          <target state="translated">MySqlConnector::configureIsolationLevel()</target>
        </trans-unit>
        <trans-unit id="20a7b8340f93b661e42772ffcadabbe0e14960cf" translate="yes" xml:space="preserve">
          <source>MySqlConnector::configureTimezone()</source>
          <target state="translated">MySqlConnector::configureTimezone()</target>
        </trans-unit>
        <trans-unit id="d7c689a6126331b8d9bed4abc9c2f9b113f600e8" translate="yes" xml:space="preserve">
          <source>MySqlConnector::connect()</source>
          <target state="translated">MySqlConnector::connect()</target>
        </trans-unit>
        <trans-unit id="edecba2de40e53d96a49e338f72cd462acf1e96d" translate="yes" xml:space="preserve">
          <source>MySqlConnector::getCollation()</source>
          <target state="translated">MySqlConnector::getCollation()</target>
        </trans-unit>
        <trans-unit id="0288986900dca0e884e25177d08ed416b5586dd4" translate="yes" xml:space="preserve">
          <source>MySqlConnector::getDsn()</source>
          <target state="translated">MySqlConnector::getDsn()</target>
        </trans-unit>
        <trans-unit id="86cee078c0105e3cfa44d3331012a12cf852bc67" translate="yes" xml:space="preserve">
          <source>MySqlConnector::getHostDsn()</source>
          <target state="translated">MySqlConnector::getHostDsn()</target>
        </trans-unit>
        <trans-unit id="94504afa471472bfac03f3a2bc6927c3eac1c870" translate="yes" xml:space="preserve">
          <source>MySqlConnector::getSocketDsn()</source>
          <target state="translated">MySqlConnector::getSocketDsn()</target>
        </trans-unit>
        <trans-unit id="ba065e7e082157396436ed7508170eb1492a24a8" translate="yes" xml:space="preserve">
          <source>MySqlConnector::hasSocket()</source>
          <target state="translated">MySqlConnector::hasSocket()</target>
        </trans-unit>
        <trans-unit id="edddfb75dfec77c8d02ff69d656d37e369fdd147" translate="yes" xml:space="preserve">
          <source>MySqlConnector::setCustomModes()</source>
          <target state="translated">MySqlConnector::setCustomModes()</target>
        </trans-unit>
        <trans-unit id="8cc55010da7f82e5fa5b29642988f511dd1f7863" translate="yes" xml:space="preserve">
          <source>MySqlConnector::setModes()</source>
          <target state="translated">MySqlConnector::setModes()</target>
        </trans-unit>
        <trans-unit id="a7efc0e792f9a2d89aeda97b4f25a0780ec5ac3c" translate="yes" xml:space="preserve">
          <source>MySqlConnector::strictMode()</source>
          <target state="translated">MySqlConnector::strictMode()</target>
        </trans-unit>
        <trans-unit id="9eb9c0a69e3c749759adaf5df6e8c4d1b1738169" translate="yes" xml:space="preserve">
          <source>MySqlGrammar</source>
          <target state="translated">MySqlGrammar</target>
        </trans-unit>
        <trans-unit id="86a162a8ec420354ab1f0f798821156d743086c9" translate="yes" xml:space="preserve">
          <source>MySqlGrammar (Database\Query\Grammars)</source>
          <target state="translated">MySqlGrammar (Database\Query\Grammars)</target>
        </trans-unit>
        <trans-unit id="11158eda3bb2bfe5ebd1f2eec3820de49dd6478f" translate="yes" xml:space="preserve">
          <source>MySqlGrammar (Database\Schema\Grammars)</source>
          <target state="translated">MySqlGrammar (Database\Schema\Grammars)</target>
        </trans-unit>
        <trans-unit id="080fa5b7dbcf53a41b3d95479173279c444abfc2" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileAdd()</source>
          <target state="translated">MySqlGrammar::compileAdd()</target>
        </trans-unit>
        <trans-unit id="a48ecae101e378fb97afeea52c677659c9adcdda" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileAutoIncrementStartingValues()</source>
          <target state="translated">MySqlGrammar::compileAutoIncrementStartingValues()</target>
        </trans-unit>
        <trans-unit id="d409102ca08d8f23c6a269f86c2c6de54353e6f9" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileColumnListing()</source>
          <target state="translated">MySqlGrammar::compileColumnListing()</target>
        </trans-unit>
        <trans-unit id="e750cb0c85ce80d75cfb1aad52dd0c49fae654e7" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileCreate()</source>
          <target state="translated">MySqlGrammar::compileCreate()</target>
        </trans-unit>
        <trans-unit id="d8699afe1b598abc0b114e249df5ed28896f698c" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileCreateEncoding()</source>
          <target state="translated">MySqlGrammar::compileCreateEncoding()</target>
        </trans-unit>
        <trans-unit id="fdeeab2c6903c151a19e3e1c76f7c3adcdc51596" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileCreateEngine()</source>
          <target state="translated">MySqlGrammar::compileCreateEngine()</target>
        </trans-unit>
        <trans-unit id="08790f8e4e265ad07e218a9b03f823b1ba44a17c" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileCreateTable()</source>
          <target state="translated">MySqlGrammar::compileCreateTable()</target>
        </trans-unit>
        <trans-unit id="f23533c9a8835e1a10204f797d8948f4aeeb3f18" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDelete()</source>
          <target state="translated">MySqlGrammar::compileDelete()</target>
        </trans-unit>
        <trans-unit id="d9bfee239d5448c388cf8748c69813f1f1bd5c7e" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDeleteWithJoins()</source>
          <target state="translated">MySqlGrammar::compileDeleteWithJoins()</target>
        </trans-unit>
        <trans-unit id="945c7c1138cf1c2558f8cde77bb0f3bb60b877e9" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDeleteWithoutJoins()</source>
          <target state="translated">MySqlGrammar::compileDeleteWithoutJoins()</target>
        </trans-unit>
        <trans-unit id="9786467e7d2003c2c8e05644e2d8309067ad0a8c" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDisableForeignKeyConstraints()</source>
          <target state="translated">MySqlGrammar::compileDisableForeignKeyConstraints()</target>
        </trans-unit>
        <trans-unit id="427df6424bba87020240358cb0da3f0540729ab7" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDrop()</source>
          <target state="translated">MySqlGrammar::compileDrop()</target>
        </trans-unit>
        <trans-unit id="1309babb4d02b6c03d3dafb6477ed92e779c1455" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDropAllTables()</source>
          <target state="translated">MySqlGrammar::compileDropAllTables()</target>
        </trans-unit>
        <trans-unit id="2ed7c4927be390ca8b5146783fd1a3af8ee74fd2" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDropAllViews()</source>
          <target state="translated">MySqlGrammar::compileDropAllViews()</target>
        </trans-unit>
        <trans-unit id="0aec83255c176dc62016705e74b86f6812cf91e7" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDropColumn()</source>
          <target state="translated">MySqlGrammar::compileDropColumn()</target>
        </trans-unit>
        <trans-unit id="b80286d579b7d39a9caa6214c18c343cba9a25e6" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDropForeign()</source>
          <target state="translated">MySqlGrammar::compileDropForeign()</target>
        </trans-unit>
        <trans-unit id="001e7c6692bb894f4a74a92628c4592997f9133b" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDropIfExists()</source>
          <target state="translated">MySqlGrammar::compileDropIfExists()</target>
        </trans-unit>
        <trans-unit id="2f6932c3c20454ede5da3060b9c30add152327e7" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDropIndex()</source>
          <target state="translated">MySqlGrammar::compileDropIndex()</target>
        </trans-unit>
        <trans-unit id="84333b24ec059ca0ccf7e2b48e80a78dc10315b9" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDropPrimary()</source>
          <target state="translated">MySqlGrammar::compileDropPrimary()</target>
        </trans-unit>
        <trans-unit id="8f6ebe5dc0ec0fb002833e639302d919f0e83c86" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDropSpatialIndex()</source>
          <target state="translated">MySqlGrammar::compileDropSpatialIndex()</target>
        </trans-unit>
        <trans-unit id="7914c8eb86bb70495f65a2ddd56b96dbd177666a" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileDropUnique()</source>
          <target state="translated">MySqlGrammar::compileDropUnique()</target>
        </trans-unit>
        <trans-unit id="019c95207b249011bf435b4cf197938069218128" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileEnableForeignKeyConstraints()</source>
          <target state="translated">MySqlGrammar::compileEnableForeignKeyConstraints()</target>
        </trans-unit>
        <trans-unit id="77db1ca9d34702ca1c1ceacde14b882eabe43814" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileGetAllTables()</source>
          <target state="translated">MySqlGrammar::compileGetAllTables()</target>
        </trans-unit>
        <trans-unit id="953b7d2887fae8e386edb253c764c83e8a1b0e33" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileGetAllViews()</source>
          <target state="translated">MySqlGrammar::compileGetAllViews()</target>
        </trans-unit>
        <trans-unit id="ededb99240cbb48797562de008f3a82d272f7941" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileIndex()</source>
          <target state="translated">MySqlGrammar::compileIndex()</target>
        </trans-unit>
        <trans-unit id="7d573c3f89ac8d8d16ec4fd4d90b328451dbac14" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileInsert()</source>
          <target state="translated">MySqlGrammar::compileInsert()</target>
        </trans-unit>
        <trans-unit id="475cc9eb83024035ef9302f57ad2507c3f40c73c" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileInsertOrIgnore()</source>
          <target state="translated">MySqlGrammar::compileInsertOrIgnore()</target>
        </trans-unit>
        <trans-unit id="716af20365ea838e73059b96759558236ceb228e" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileJsonContains()</source>
          <target state="translated">MySqlGrammar::compileJsonContains()</target>
        </trans-unit>
        <trans-unit id="128f5ce7d6ce02966c26d38fedcce0423cd7bff3" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileJsonLength()</source>
          <target state="translated">MySqlGrammar::compileJsonLength()</target>
        </trans-unit>
        <trans-unit id="da8d89d557410cf2513544db54c75401693fd48a" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileJsonUpdateColumn()</source>
          <target state="translated">MySqlGrammar::compileJsonUpdateColumn()</target>
        </trans-unit>
        <trans-unit id="7076591dbc7e2ff0901bb3c3009f7e42230e0d2f" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileKey()</source>
          <target state="translated">MySqlGrammar::compileKey()</target>
        </trans-unit>
        <trans-unit id="d38b8954c2a1ab3638c8b5d3f1ebe7d0ae8cd04e" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileLock()</source>
          <target state="translated">MySqlGrammar::compileLock()</target>
        </trans-unit>
        <trans-unit id="3a72d5466658d99e57f6e48a48a9aa5c15154262" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compilePrimary()</source>
          <target state="translated">MySqlGrammar::compilePrimary()</target>
        </trans-unit>
        <trans-unit id="c5355552c8581e95624a9203a9abfa87bac50767" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileRandom()</source>
          <target state="translated">MySqlGrammar::compileRandom()</target>
        </trans-unit>
        <trans-unit id="91ac8c03fffabdbf4cfe75660e378241eef625db" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileRename()</source>
          <target state="translated">MySqlGrammar::compileRename()</target>
        </trans-unit>
        <trans-unit id="bcdc3044e1cc081a47685f7616dec7d69a42f856" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileRenameIndex()</source>
          <target state="translated">MySqlGrammar::compileRenameIndex()</target>
        </trans-unit>
        <trans-unit id="f45d348bc929a48953679ae6cbd417ea29cb92ce" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileSelect()</source>
          <target state="translated">MySqlGrammar::compileSelect()</target>
        </trans-unit>
        <trans-unit id="56222b64a741dde1b59935e11c93bbd46718ad8e" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileSpatialIndex()</source>
          <target state="translated">MySqlGrammar::compileSpatialIndex()</target>
        </trans-unit>
        <trans-unit id="ad97c63473261367f33a9f10b37ed85fd3b125d4" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileTableExists()</source>
          <target state="translated">MySqlGrammar::compileTableExists()</target>
        </trans-unit>
        <trans-unit id="42e8bd8371010d75b1daeb14961d195b50727eff" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileUnion()</source>
          <target state="translated">MySqlGrammar::compileUnion()</target>
        </trans-unit>
        <trans-unit id="e11735d1d3b72648e53a3eb87e6f4df74f6b1d0a" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileUnique()</source>
          <target state="translated">MySqlGrammar::compileUnique()</target>
        </trans-unit>
        <trans-unit id="901b94fa5f6b47cfe3203543499a233941d8e846" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileUpdate()</source>
          <target state="translated">MySqlGrammar::compileUpdate()</target>
        </trans-unit>
        <trans-unit id="4ef1797431d0d77afd5616121e34b0ac41925901" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileUpdateColumns()</source>
          <target state="translated">MySqlGrammar::compileUpdateColumns()</target>
        </trans-unit>
        <trans-unit id="507252b2cea2cf4b789beffc01d9b558bf6b1a3d" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileUpdateWithoutJoins()</source>
          <target state="translated">MySqlGrammar::compileUpdateWithoutJoins()</target>
        </trans-unit>
        <trans-unit id="3b1d061a3ce9fb12fff082756e40c28f8e7e71ae" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::compileUpsert()</source>
          <target state="translated">MySqlGrammar::compileUpsert()</target>
        </trans-unit>
        <trans-unit id="adcf4a2ed676e74dfc5aab76de09ce46057b9134" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::modifyAfter()</source>
          <target state="translated">MySqlGrammar::modifyAfter()</target>
        </trans-unit>
        <trans-unit id="41d6d0ef447670fe591c82f2359f809c4e27892d" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::modifyCharset()</source>
          <target state="translated">MySqlGrammar::modifyCharset()</target>
        </trans-unit>
        <trans-unit id="577405cd0ca3638ed5f4159d76f463c65e1c48d2" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::modifyCollate()</source>
          <target state="translated">MySqlGrammar::modifyCollate()</target>
        </trans-unit>
        <trans-unit id="9ddc1b5eb159a30bae8beaeb410613f347a07355" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::modifyComment()</source>
          <target state="translated">MySqlGrammar::modifyComment()</target>
        </trans-unit>
        <trans-unit id="b6696d97aeaf8ff246160d0f879b14f6e15bbb55" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::modifyDefault()</source>
          <target state="translated">MySqlGrammar::modifyDefault()</target>
        </trans-unit>
        <trans-unit id="a5d091567e80e823355174dd498ddc870ee584a9" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::modifyFirst()</source>
          <target state="translated">MySqlGrammar::modifyFirst()</target>
        </trans-unit>
        <trans-unit id="d3fb86e1362c85c04da2157fd6a029d5a8d63c56" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::modifyIncrement()</source>
          <target state="translated">MySqlGrammar::modifyIncrement()</target>
        </trans-unit>
        <trans-unit id="81412dfbc50720815e6b9a66f23c09ad2b319c0a" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::modifyNullable()</source>
          <target state="translated">MySqlGrammar::modifyNullable()</target>
        </trans-unit>
        <trans-unit id="4ef999325aa000d27ff53e009191d96334b5b4d4" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::modifySrid()</source>
          <target state="translated">MySqlGrammar::modifySrid()</target>
        </trans-unit>
        <trans-unit id="f70930ab6663aa6bdc8b0435e0d68aef157a3171" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::modifyStoredAs()</source>
          <target state="translated">MySqlGrammar::modifyStoredAs()</target>
        </trans-unit>
        <trans-unit id="7ae50c4349dfeb0feb418728963040f1cb47607d" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::modifyUnsigned()</source>
          <target state="translated">MySqlGrammar::modifyUnsigned()</target>
        </trans-unit>
        <trans-unit id="35276434ca9065f7d6ace9b989ae7378bb969c1f" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::modifyVirtualAs()</source>
          <target state="translated">MySqlGrammar::modifyVirtualAs()</target>
        </trans-unit>
        <trans-unit id="ce8891b65ede555ae5e975a09171b920acfd63e6" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::prepareBindingsForDelete()</source>
          <target state="translated">MySqlGrammar::prepareBindingsForDelete()</target>
        </trans-unit>
        <trans-unit id="11f6c169fb1c9690dee43ba41228b83c2494e17f" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::prepareBindingsForUpdate()</source>
          <target state="translated">MySqlGrammar::prepareBindingsForUpdate()</target>
        </trans-unit>
        <trans-unit id="092fcbd681c8d22b2f7cf3b70d23c4592dd7fd54" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeBigInteger()</source>
          <target state="translated">MySqlGrammar::typeBigInteger()</target>
        </trans-unit>
        <trans-unit id="7a86ff92e70cda51d6023731022c34100adf948b" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeBinary()</source>
          <target state="translated">MySqlGrammar::typeBinary()</target>
        </trans-unit>
        <trans-unit id="5712261b2e1ae4a70da743cab0abcb114379bb22" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeBoolean()</source>
          <target state="translated">MySqlGrammar::typeBoolean()</target>
        </trans-unit>
        <trans-unit id="0b1ffe7193dbc5968845bf7415a50a7d16df3720" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeChar()</source>
          <target state="translated">MySqlGrammar::typeChar()</target>
        </trans-unit>
        <trans-unit id="62cff2693cc0f98e308970ac9ec61fd309684f79" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeComputed()</source>
          <target state="translated">MySqlGrammar::typeComputed()</target>
        </trans-unit>
        <trans-unit id="88366f584b5aa0a87340eeeaa97f84dc8dca7ef9" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeDate()</source>
          <target state="translated">MySqlGrammar::typeDate()</target>
        </trans-unit>
        <trans-unit id="4077e3174db85b15c5f967eca737506de4f171c0" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeDateTime()</source>
          <target state="translated">MySqlGrammar::typeDateTime()</target>
        </trans-unit>
        <trans-unit id="7e7826fbce12fc473dbb364883b54528b6e45d0a" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeDateTimeTz()</source>
          <target state="translated">MySqlGrammar::typeDateTimeTz()</target>
        </trans-unit>
        <trans-unit id="8325b4aa2394d0a86be10d7c8210cc7a8b2efce6" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeDecimal()</source>
          <target state="translated">MySqlGrammar::typeDecimal()</target>
        </trans-unit>
        <trans-unit id="4c75fd47d10b2e03fe1b3d527623a112629bbbd2" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeDouble()</source>
          <target state="translated">MySqlGrammar::typeDouble()</target>
        </trans-unit>
        <trans-unit id="15a98b9df17d455c1e0b1cf8c2299dc9caa35fd6" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeEnum()</source>
          <target state="translated">MySqlGrammar::typeEnum()</target>
        </trans-unit>
        <trans-unit id="fecde6687188d4e8e26a09228f78cfda3eb32cbc" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeFloat()</source>
          <target state="translated">MySqlGrammar::typeFloat()</target>
        </trans-unit>
        <trans-unit id="8e7e3d0cd2d2ea3ba5827d64dec58b4dea8cc1ac" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeGeometry()</source>
          <target state="translated">MySqlGrammar::typeGeometry()</target>
        </trans-unit>
        <trans-unit id="0226139d88afc04680c21ef8b5fd4dfb3d4aee4e" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeGeometryCollection()</source>
          <target state="translated">MySqlGrammar::typeGeometryCollection()</target>
        </trans-unit>
        <trans-unit id="42ca1dea410649811da03ada2549b6b0650b59b6" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeInteger()</source>
          <target state="translated">MySqlGrammar::typeInteger()</target>
        </trans-unit>
        <trans-unit id="5a3fb2e8d13da4c671f50d0e281a379afc88aca4" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeIpAddress()</source>
          <target state="translated">MySqlGrammar::typeIpAddress()</target>
        </trans-unit>
        <trans-unit id="ff00e88b8b7051e74bd648497264f13ebeab8a57" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeJson()</source>
          <target state="translated">MySqlGrammar::typeJson()</target>
        </trans-unit>
        <trans-unit id="79f84a5448a58146590f8732802e7d9ebae18716" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeJsonb()</source>
          <target state="translated">MySqlGrammar::typeJsonb()</target>
        </trans-unit>
        <trans-unit id="f64e5c7212167ac04929a4f196e29dc6d8ecb75d" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeLineString()</source>
          <target state="translated">MySqlGrammar::typeLineString()</target>
        </trans-unit>
        <trans-unit id="1d191e932290a5f7194962c5e2d58f8c01abc9b2" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeLongText()</source>
          <target state="translated">MySqlGrammar::typeLongText()</target>
        </trans-unit>
        <trans-unit id="ca12dfc0149aa0757caf16c78648929b4290d410" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeMacAddress()</source>
          <target state="translated">MySqlGrammar::typeMacAddress()</target>
        </trans-unit>
        <trans-unit id="c208971dd3f5ecf3203056fd949e65edf6b7c061" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeMediumInteger()</source>
          <target state="translated">MySqlGrammar::typeMediumInteger()</target>
        </trans-unit>
        <trans-unit id="fe6fb79e847af48b03152ff0adc13c014b020657" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeMediumText()</source>
          <target state="translated">MySqlGrammar::typeMediumText()</target>
        </trans-unit>
        <trans-unit id="96a42c18c9efed95e3f5ff86cd535ec59eaf1f53" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeMultiLineString()</source>
          <target state="translated">MySqlGrammar::typeMultiLineString()</target>
        </trans-unit>
        <trans-unit id="3cbf54b8cbafe447297c17ffad6c9d89a2b8246f" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeMultiPoint()</source>
          <target state="translated">MySqlGrammar::typeMultiPoint()</target>
        </trans-unit>
        <trans-unit id="c5ddb9fae4ca5c553ec5240c19f03f3d3a87efbe" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeMultiPolygon()</source>
          <target state="translated">MySqlGrammar::typeMultiPolygon()</target>
        </trans-unit>
        <trans-unit id="bf13fef37ab43736e35114162bd318a9abcf1eb0" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typePoint()</source>
          <target state="translated">MySqlGrammar::typePoint()</target>
        </trans-unit>
        <trans-unit id="3f3438ddc8c88268dd61ea17f5d0daaab639c308" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typePolygon()</source>
          <target state="translated">MySqlGrammar::typePolygon()</target>
        </trans-unit>
        <trans-unit id="be5404097a4430c527efa05a0770dbe7c75c2962" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeSet()</source>
          <target state="translated">MySqlGrammar::typeSet()</target>
        </trans-unit>
        <trans-unit id="b933c5ef9ec96f91f7fcec235173732c090e1e25" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeSmallInteger()</source>
          <target state="translated">MySqlGrammar::typeSmallInteger()</target>
        </trans-unit>
        <trans-unit id="ee3ed6d3e14df879534aad732ddda9c94992ef70" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeString()</source>
          <target state="translated">MySqlGrammar::typeString()</target>
        </trans-unit>
        <trans-unit id="efd81211ea9d72d46071ef3961954202e1e84a46" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeText()</source>
          <target state="translated">MySqlGrammar::typeText()</target>
        </trans-unit>
        <trans-unit id="942c9a26ed5b6473eff7a400bc3c9a613b7242a1" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeTime()</source>
          <target state="translated">MySqlGrammar::typeTime()</target>
        </trans-unit>
        <trans-unit id="4e5bcaf98b803837882fe081bf13a3f32857b9b1" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeTimeTz()</source>
          <target state="translated">MySqlGrammar::typeTimeTz()</target>
        </trans-unit>
        <trans-unit id="fe187247baa7616c26d81c6aa7ee97539c98e328" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeTimestamp()</source>
          <target state="translated">MySqlGrammar::typeTimestamp()</target>
        </trans-unit>
        <trans-unit id="fd5f58a9589e28b55a69e50655b0dfd000191ae9" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeTimestampTz()</source>
          <target state="translated">MySqlGrammar::typeTimestampTz()</target>
        </trans-unit>
        <trans-unit id="8b76b651621b6578ddd9719b14bf12f42fccc14c" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeTinyInteger()</source>
          <target state="translated">MySqlGrammar::typeTinyInteger()</target>
        </trans-unit>
        <trans-unit id="809d9641b82ec1df9a83d70cb13b98c9bc3e7020" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeUuid()</source>
          <target state="translated">MySqlGrammar::typeUuid()</target>
        </trans-unit>
        <trans-unit id="2ebe24dd0a303959ba2f27ef41cc6189548125c1" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::typeYear()</source>
          <target state="translated">MySqlGrammar::typeYear()</target>
        </trans-unit>
        <trans-unit id="364ebcb6aef45cd6a756eed78b8111969d93e5ee" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::whereNotNull()</source>
          <target state="translated">MySqlGrammar::whereNotNull()</target>
        </trans-unit>
        <trans-unit id="4c663b0f33aed1131b575577c6ccf063830db8a6" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::whereNull()</source>
          <target state="translated">MySqlGrammar::whereNull()</target>
        </trans-unit>
        <trans-unit id="c2a3808b669a56ccedcdb4928467601f48b4cf18" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::wrapJsonBooleanSelector()</source>
          <target state="translated">MySqlGrammar::wrapJsonBooleanSelector()</target>
        </trans-unit>
        <trans-unit id="e46492863f7691ffa29a1e8df443b76b64b5933b" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::wrapJsonSelector()</source>
          <target state="translated">MySqlGrammar::wrapJsonSelector()</target>
        </trans-unit>
        <trans-unit id="077b06165edc90715186e172242ded074da8ec5d" translate="yes" xml:space="preserve">
          <source>MySqlGrammar::wrapValue()</source>
          <target state="translated">MySqlGrammar::wrapValue()</target>
        </trans-unit>
        <trans-unit id="f043ec772cfeb1442bc2bd8d181a991a8e4ea349" translate="yes" xml:space="preserve">
          <source>MySqlProcessor</source>
          <target state="translated">MySqlProcessor</target>
        </trans-unit>
        <trans-unit id="9cfc9778cae8c15c77dbd1f46b2552b281c886c1" translate="yes" xml:space="preserve">
          <source>MySqlProcessor (Database\Query\Processors)</source>
          <target state="translated">MySqlProcessor (Database\Query\Processors)</target>
        </trans-unit>
        <trans-unit id="031639086fd43ab5a7c208fa5d999b5264836678" translate="yes" xml:space="preserve">
          <source>MySqlProcessor::processColumnListing()</source>
          <target state="translated">MySqlProcessor::processColumnListing()</target>
        </trans-unit>
        <trans-unit id="b1b4d83dd41d1a56b01cdb37e6e48df55cdff0de" translate="yes" xml:space="preserve">
          <source>MySqlSchemaState</source>
          <target state="translated">MySqlSchemaState</target>
        </trans-unit>
        <trans-unit id="ac99954d6388da5efd13750e843af81ac38aff52" translate="yes" xml:space="preserve">
          <source>MySqlSchemaState (Database\Schema)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ef56ca779a3eb7382bef6500b7eb946580a11e" translate="yes" xml:space="preserve">
          <source>MySqlSchemaState::appendMigrationData()</source>
          <target state="translated">MySqlSchemaState::appendMigrationData()</target>
        </trans-unit>
        <trans-unit id="53a0328bf7e0800ec407967fb0c12a4bbf4d5bd7" translate="yes" xml:space="preserve">
          <source>MySqlSchemaState::baseDumpCommand()</source>
          <target state="translated">MySqlSchemaState::baseDumpCommand()</target>
        </trans-unit>
        <trans-unit id="e044880188cf775cff7277c4ed7e3d25f56ff8dc" translate="yes" xml:space="preserve">
          <source>MySqlSchemaState::baseVariables()</source>
          <target state="translated">MySqlSchemaState::baseVariables()</target>
        </trans-unit>
        <trans-unit id="e1b02d295629d83c1a47d2ac78e95d1e8956a010" translate="yes" xml:space="preserve">
          <source>MySqlSchemaState::connectionString()</source>
          <target state="translated">MySqlSchemaState::connectionString()</target>
        </trans-unit>
        <trans-unit id="2f247aa26536bc73baf771b78e2efbebbf7eb3d1" translate="yes" xml:space="preserve">
          <source>MySqlSchemaState::dump()</source>
          <target state="translated">MySqlSchemaState::dump()</target>
        </trans-unit>
        <trans-unit id="80f054fa701b76c1b59235aa61551c3a01199e50" translate="yes" xml:space="preserve">
          <source>MySqlSchemaState::executeDumpProcess()</source>
          <target state="translated">MySqlSchemaState::executeDumpProcess()</target>
        </trans-unit>
        <trans-unit id="e9ec25d69af77146d7fb27cb7649569354b7af39" translate="yes" xml:space="preserve">
          <source>MySqlSchemaState::load()</source>
          <target state="translated">MySqlSchemaState::load()</target>
        </trans-unit>
        <trans-unit id="23832752e2bae6481d691d73bb4fc5217115bbbc" translate="yes" xml:space="preserve">
          <source>MySqlSchemaState::removeAutoIncrementingState()</source>
          <target state="translated">MySqlSchemaState::removeAutoIncrementingState()</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="4e03215abb63234c978a742e9f258ad05c7edba2" translate="yes" xml:space="preserve">
          <source>Name of the affected Eloquent model.</source>
          <target state="translated">Название затронутой красноречивой модели.</target>
        </trans-unit>
        <trans-unit id="37659c5fdc91d6aaea0ac77dda9131488e9abaa4" translate="yes" xml:space="preserve">
          <source>Name::normalize()</source>
          <target state="translated">Name::normalize()</target>
        </trans-unit>
        <trans-unit id="22f05f64cc11b94bda5e6b3df678d1506d2645e4" translate="yes" xml:space="preserve">
          <source>Named Error Bags</source>
          <target state="translated">Сумки с ошибками</target>
        </trans-unit>
        <trans-unit id="b33d0a16416aadff4b68e3238fad1ab174a916bb" translate="yes" xml:space="preserve">
          <source>Named Routes</source>
          <target state="translated">Названные маршруты</target>
        </trans-unit>
        <trans-unit id="2da6e5b6c0e8f744f7ed5c32b78a22128c8e199b" translate="yes" xml:space="preserve">
          <source>Named routes allow the convenient generation of URLs or redirects for specific routes. You may specify a name for a route by chaining the &lt;code&gt;name&lt;/code&gt; method onto the route definition:</source>
          <target state="translated">Именованные маршруты позволяют удобно генерировать URL-адреса или перенаправления для определенных маршрутов. Вы можете указать имя для маршрута, связав метод &lt;code&gt;name&lt;/code&gt; с определением маршрута:</target>
        </trans-unit>
        <trans-unit id="68750985066c59601a66d749ea59a7b8e3630df6" translate="yes" xml:space="preserve">
          <source>NamespacedItemResolver</source>
          <target state="translated">NamespacedItemResolver</target>
        </trans-unit>
        <trans-unit id="9d08780a62dfeaf6e8bcf7e74fe50916178510a5" translate="yes" xml:space="preserve">
          <source>NamespacedItemResolver (Support)</source>
          <target state="translated">Размещение именИтемРезольвер (Поддержка)</target>
        </trans-unit>
        <trans-unit id="ec68ae7f5bd8f1d06c595ac1fd9a75599c88bb3f" translate="yes" xml:space="preserve">
          <source>NamespacedItemResolver::parseBasicSegments()</source>
          <target state="translated">NamespacedItemResolver::parseBasicSegments()</target>
        </trans-unit>
        <trans-unit id="218a1e58bf614428dc4c2dfbd6228b1c690d4d60" translate="yes" xml:space="preserve">
          <source>NamespacedItemResolver::parseKey()</source>
          <target state="translated">NamespacedItemResolver::parseKey()</target>
        </trans-unit>
        <trans-unit id="dbb00138f894cbff2b7aaea63c59a16eb88d1cdd" translate="yes" xml:space="preserve">
          <source>NamespacedItemResolver::parseNamespacedSegments()</source>
          <target state="translated">NamespacedItemResolver::parseNamespacedSegments()</target>
        </trans-unit>
        <trans-unit id="7a43c4b51997dcb846c23333f82724f01232ad21" translate="yes" xml:space="preserve">
          <source>NamespacedItemResolver::setParsedKey()</source>
          <target state="translated">NamespacedItemResolver::setParsedKey()</target>
        </trans-unit>
        <trans-unit id="be09a63bd1995e99cd22064cdc39a4bae464033d" translate="yes" xml:space="preserve">
          <source>Namespaces</source>
          <target state="translated">Namespaces</target>
        </trans-unit>
        <trans-unit id="d9169f5ef9acaee062842ab6b1c84c972c15da4b" translate="yes" xml:space="preserve">
          <source>Naming Batches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c80e205c0d0b7a31c70456aae5cf6a4c3bfbab" translate="yes" xml:space="preserve">
          <source>Naming Resource Route Parameters</source>
          <target state="translated">Наименование ресурса Параметры маршрута</target>
        </trans-unit>
        <trans-unit id="d1b8cc0f1a41a98d4c8adb922ed6ec881a044a12" translate="yes" xml:space="preserve">
          <source>Naming Resource Routes</source>
          <target state="translated">Маршруты наименования ресурсов</target>
        </trans-unit>
        <trans-unit id="acc5e311fae36e4ee60f1fb4ab5c3aafb88c6dd1" translate="yes" xml:space="preserve">
          <source>Navigating To Pages</source>
          <target state="translated">Навигация к страницам</target>
        </trans-unit>
        <trans-unit id="80b11a0529490dbaab152aaef42095243995ac60" translate="yes" xml:space="preserve">
          <source>Needs to be implemented by subclasses.</source>
          <target state="translated">Нужно реализовать по подклассам.</target>
        </trans-unit>
        <trans-unit id="40376d294105c45cc4be1971b67aad52424bac59" translate="yes" xml:space="preserve">
          <source>Neo4j</source>
          <target state="translated">Neo4j</target>
        </trans-unit>
        <trans-unit id="dcd4c13350b2970c2cbfe127ff888d965771ea36" translate="yes" xml:space="preserve">
          <source>Neo4j (Optional)</source>
          <target state="translated">Neo4j (опционально)</target>
        </trans-unit>
        <trans-unit id="498829f5a3abed5d90dcdec87a9ab0609a0fe896" translate="yes" xml:space="preserve">
          <source>Nest where conditions by slicing them at the given where count.</source>
          <target state="translated">Гнездо,где условия,нарезая их в данном месте,где счет.</target>
        </trans-unit>
        <trans-unit id="e7e0d92332cafc81397eeef0076d330322e451ce" translate="yes" xml:space="preserve">
          <source>Nested &lt;code&gt;has&lt;/code&gt; statements may also be constructed using &quot;dot&quot; notation. For example, you may retrieve all posts that have at least one comment and vote:</source>
          <target state="translated">Вложенные операторы &lt;code&gt;has&lt;/code&gt; также могут быть созданы с использованием &quot;точечной&quot; нотации. Например, вы можете получить все сообщения, в которых есть хотя бы один комментарий и проголосовать:</target>
        </trans-unit>
        <trans-unit id="387d378f639e7a0dd65fc017f9aec4347d7f54b8" translate="yes" xml:space="preserve">
          <source>Nested Eager Loading</source>
          <target state="translated">Вложенные срочные загрузки</target>
        </trans-unit>
        <trans-unit id="bed1f149c06edac5d37e3d4174900142c93ccac8" translate="yes" xml:space="preserve">
          <source>Nested Eager Loading &lt;code&gt;morphTo&lt;/code&gt; Relationships</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc270085789c597b3d50ee6ec4946f5f0fa35bc" translate="yes" xml:space="preserve">
          <source>Nested Lazy Eager Loading &amp;amp; &lt;code&gt;morphTo&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248022a870eb27897fa53e16452caafdbdabcf57" translate="yes" xml:space="preserve">
          <source>Nested Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8331a5177570ceef2e140dc5f85217ec27fe6766" translate="yes" xml:space="preserve">
          <source>Nested Validation Data</source>
          <target state="translated">Вложенные данные проверки</target>
        </trans-unit>
        <trans-unit id="20e27f5f65d80b93ade7602d872caf6043fe14e4" translate="yes" xml:space="preserve">
          <source>Nested groups attempt to intelligently &quot;merge&quot; attributes with their parent group. Middleware and &lt;code&gt;where&lt;/code&gt; conditions are merged while names and prefixes are appended. Namespace delimiters and slashes in URI prefixes are automatically added where appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5111e6d72dc249b8ed1210fbb9c8b8f697403480" translate="yes" xml:space="preserve">
          <source>Network Interfaces</source>
          <target state="translated">Сетевые интерфейсы</target>
        </trans-unit>
        <trans-unit id="29f5d1fac341b3a9cdda7780f4ff1d778d08461f" translate="yes" xml:space="preserve">
          <source>NexmoMessage</source>
          <target state="translated">NexmoMessage</target>
        </trans-unit>
        <trans-unit id="434564ed192584cc546688e7a76a07d6eefffe65" translate="yes" xml:space="preserve">
          <source>NexmoMessage (Notifications\Messages)</source>
          <target state="translated">NexmoMessage (Notifications\Messages)</target>
        </trans-unit>
        <trans-unit id="02c02fa38cace027e42a8a1b0acf5f2ef59dc9ee" translate="yes" xml:space="preserve">
          <source>NexmoMessage::__construct()</source>
          <target state="translated">NexmoMessage::__construct()</target>
        </trans-unit>
        <trans-unit id="f064e3df62822a5d3f76bafda76d2f4266688e44" translate="yes" xml:space="preserve">
          <source>NexmoMessage::content()</source>
          <target state="translated">NexmoMessage::content()</target>
        </trans-unit>
        <trans-unit id="b18782204eb43cd025feea1246ad2d1a1a7c8040" translate="yes" xml:space="preserve">
          <source>NexmoMessage::from()</source>
          <target state="translated">NexmoMessage::from()</target>
        </trans-unit>
        <trans-unit id="6f8bdda86d8cf1b6e9e97bc1a5a123c6af1269d8" translate="yes" xml:space="preserve">
          <source>NexmoMessage::unicode()</source>
          <target state="translated">NexmoMessage::unicode()</target>
        </trans-unit>
        <trans-unit id="8a225dcd846e370c5ca75c1ff83e9d32e9d5fde0" translate="yes" xml:space="preserve">
          <source>NexmoSmsChannel</source>
          <target state="translated">NexmoSmsChannel</target>
        </trans-unit>
        <trans-unit id="0682e70adeb93e828cf6f107c2e85f3b852db02e" translate="yes" xml:space="preserve">
          <source>NexmoSmsChannel (Notifications\Channels)</source>
          <target state="translated">NexmoSmsChannel (Notifications\Channels)</target>
        </trans-unit>
        <trans-unit id="29b8b7da45f8519b15b89bf2331df3b6f2596f2a" translate="yes" xml:space="preserve">
          <source>NexmoSmsChannel::__construct()</source>
          <target state="translated">NexmoSmsChannel::__construct()</target>
        </trans-unit>
        <trans-unit id="d72f83d98799db6e680d3044156032b70ea5f8a8" translate="yes" xml:space="preserve">
          <source>NexmoSmsChannel::send()</source>
          <target state="translated">NexmoSmsChannel::send()</target>
        </trans-unit>
        <trans-unit id="e6a66c212b869e7629719a89d9c0bfde1900b85c" translate="yes" xml:space="preserve">
          <source>Next, &lt;a href=&quot;middleware#registering-middleware&quot;&gt;register the route middleware&lt;/a&gt; and attach it to a route:</source>
          <target state="translated">Затем &lt;a href=&quot;middleware#registering-middleware&quot;&gt;зарегистрируйте промежуточное ПО маршрута&lt;/a&gt; и прикрепите его к маршруту:</target>
        </trans-unit>
        <trans-unit id="0a66aadc522528a645a3abe9dd2b25f805004a95" translate="yes" xml:space="preserve">
          <source>Next, a table must be created to store the password reset tokens. The migration for this table is included with Laravel out of the box, and resides in the &lt;code&gt;database/migrations&lt;/code&gt; directory. So, all you need to do is run your database migrations:</source>
          <target state="translated">Затем необходимо создать таблицу для хранения токенов сброса пароля. Миграция для этой таблицы включена в Laravel из коробки и находится в каталоге &lt;code&gt;database/migrations&lt;/code&gt; . Итак, все, что вам нужно сделать, это запустить миграцию базы данных:</target>
        </trans-unit>
        <trans-unit id="5816dc0c6c7d3f160a0c4eee15ff9dbadb00c451" translate="yes" xml:space="preserve">
          <source>Next, add the &lt;code&gt;Billable&lt;/code&gt; trait to your model definition. This trait provides various methods to allow you to perform common billing tasks, such as creating subscriptions, applying coupons, and updating credit card information:</source>
          <target state="translated">Затем добавьте черту &lt;code&gt;Billable&lt;/code&gt; в определение вашей модели. Эта черта предоставляет различные методы, позволяющие выполнять стандартные задачи выставления счетов, такие как создание подписок, применение купонов и обновление информации о кредитной карте:</target>
        </trans-unit>
        <trans-unit id="aa00c3951b4285968db71beb3397a0fa5e575c2d" translate="yes" xml:space="preserve">
          <source>Next, add the &lt;code&gt;Billable&lt;/code&gt; trait to your model definition:</source>
          <target state="translated">Затем добавьте черту &lt;code&gt;Billable&lt;/code&gt; в определение вашей модели:</target>
        </trans-unit>
        <trans-unit id="a101616adc1c8713c3d9f1d9c16486cf99a1e332" translate="yes" xml:space="preserve">
          <source>Next, all that remains is to listen for the event in our JavaScript application. We can do this using Laravel Echo. First, we'll use the &lt;code&gt;private&lt;/code&gt; method to subscribe to the private channel. Then, we may use the &lt;code&gt;listen&lt;/code&gt; method to listen for the &lt;code&gt;ShippingStatusUpdated&lt;/code&gt; event. By default, all of the event's public properties will be included on the broadcast event:</source>
          <target state="translated">Далее все, что остается, - это прослушивать событие в нашем приложении JavaScript. Мы можем сделать это с помощью Laravel Echo. Сначала мы воспользуемся &lt;code&gt;private&lt;/code&gt; методом для подписки на частный канал. Затем, мы можем использовать для &lt;code&gt;listen&lt;/code&gt; метод для прослушивания &lt;code&gt;ShippingStatusUpdated&lt;/code&gt; события. По умолчанию все общедоступные свойства события будут включены в событие трансляции:</target>
        </trans-unit>
        <trans-unit id="dd659f7081209564fb3ddcb42406171ac6b3b34a" translate="yes" xml:space="preserve">
          <source>Next, create a new Laravel site within this directory: &lt;code&gt;laravel new blog&lt;/code&gt;.</source>
          <target state="translated">Затем создайте новый сайт Laravel в этом каталоге: &lt;code&gt;laravel new blog&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0b1e44d911163802455cb4451db0e0eff9a0653" translate="yes" xml:space="preserve">
          <source>Next, define a route that contains a &lt;code&gt;{user}&lt;/code&gt; parameter:</source>
          <target state="translated">Затем определите маршрут, содержащий параметр &lt;code&gt;{user}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2e06be13b4a9051972f049cac57aeb3cb93d1cd4" translate="yes" xml:space="preserve">
          <source>Next, define a route to your Cashier controller within your &lt;code&gt;routes/web.php&lt;/code&gt; file. This will overwrite the default shipped route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041cbf3db9b8484118e7e3f36a2598c87b372d65" translate="yes" xml:space="preserve">
          <source>Next, define a route to your Cashier controller within your &lt;code&gt;routes/web.php&lt;/code&gt; file. This will overwrite the route included with Cashier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14450322e87e065d162b6f339d277ec66e1b9126" translate="yes" xml:space="preserve">
          <source>Next, define a route to your Cashier controller within your &lt;code&gt;routes/web.php&lt;/code&gt; file:</source>
          <target state="translated">Затем определите маршрут к контроллеру кассира в файле &lt;code&gt;routes/web.php&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8b638e10ffd3a42c87409b0073a697b977acd3dc" translate="yes" xml:space="preserve">
          <source>Next, if you plan to utilize Sanctum to authenticate an SPA, you should add Sanctum's middleware to your &lt;code&gt;api&lt;/code&gt; middleware group within your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7cfd84be58234260e868beac77efe544f0eaed" translate="yes" xml:space="preserve">
          <source>Next, if your application offers an API, you will choose between &lt;a href=&quot;passport&quot;&gt;Passport&lt;/a&gt; or &lt;a href=&quot;sanctum&quot;&gt;Sanctum&lt;/a&gt; to provide API token authentication for your application. In general, Sanctum should be preferred when possible since it is a simple, complete solution for API authentication, SPA authentication, and mobile authentication, including support for &quot;scopes&quot; or &quot;abilities&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d08adc2126e55ff2446322051940447e25f2f2c" translate="yes" xml:space="preserve">
          <source>Next, in order for Pusher's authorization requests to succeed, you will need to provide a custom Pusher &lt;code&gt;authorizer&lt;/code&gt; when initializing &lt;a href=&quot;broadcasting#installing-laravel-echo&quot;&gt;Laravel Echo&lt;/a&gt;. This allows your application to configure Pusher to use the &lt;code&gt;axios&lt;/code&gt; instance that is &lt;a href=&quot;#cors-and-cookies&quot;&gt;properly configured for cross-domain requests&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b253a1645c852a7d7df9ed0d99f705235bb04e74" translate="yes" xml:space="preserve">
          <source>Next, in your &lt;code&gt;composer.json&lt;/code&gt; file, remove &lt;code&gt;classmap&lt;/code&gt; block from the &lt;code&gt;autoload&lt;/code&gt; section and add the new namespaced class directory mappings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048b79fb65b4c9450d1ef7fd6bfa9d0e902815b9" translate="yes" xml:space="preserve">
          <source>Next, install Guzzle and set the &lt;code&gt;default&lt;/code&gt; option in your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file to &lt;code&gt;postmark&lt;/code&gt;. Finally, verify that your &lt;code&gt;config/services.php&lt;/code&gt; configuration file contains the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d0d88f39274e66b9c38dd8b4ca551f126b5109" translate="yes" xml:space="preserve">
          <source>Next, let's examine the model definitions needed to build this relationship:</source>
          <target state="translated">Далее,давайте рассмотрим определения моделей,необходимые для построения этих отношений:</target>
        </trans-unit>
        <trans-unit id="1d0bcfe294d8c9c633f05fcbce58b87dcf1de0ef" translate="yes" xml:space="preserve">
          <source>Next, let's explore building Eloquent model relationships using Laravel's fluent factory methods. First, let's assume our application has a &lt;code&gt;User&lt;/code&gt; model and a &lt;code&gt;Post&lt;/code&gt; model. Also, let's assume that the &lt;code&gt;User&lt;/code&gt; model defines a &lt;code&gt;hasMany&lt;/code&gt; relationship with &lt;code&gt;Post&lt;/code&gt;. We can create a user that has three posts using the &lt;code&gt;has&lt;/code&gt; method provided by the factory. The &lt;code&gt;has&lt;/code&gt; method accepts a factory instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e405c8d671565848e05e78aab0d768808f2af7" translate="yes" xml:space="preserve">
          <source>Next, let's take a look at a simple controller that handles these routes. We'll leave the &lt;code&gt;store&lt;/code&gt; method empty for now:</source>
          <target state="translated">Теперь давайте посмотрим на простой контроллер, который обрабатывает эти маршруты. Пока оставим метод &lt;code&gt;store&lt;/code&gt; пустым:</target>
        </trans-unit>
        <trans-unit id="a7386434623b2bae0624766cb3bba06ffbf25699" translate="yes" xml:space="preserve">
          <source>Next, let's take a look at an option that expects a value. If the user must specify a value for an option, suffix the option name with a &lt;code&gt;=&lt;/code&gt; sign:</source>
          <target state="translated">Далее давайте посмотрим на вариант, который ожидает значение. Если пользователь должен указать значение для опции, добавьте к имени опции знак &lt;code&gt;=&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d8f79ec205ec6e0346a0823cddbad17380d8c321" translate="yes" xml:space="preserve">
          <source>Next, let's take a look at the listener for our example event. Event listeners receive the event instance in their &lt;code&gt;handle&lt;/code&gt; method. The &lt;code&gt;event:generate&lt;/code&gt; command will automatically import the proper event class and type-hint the event on the &lt;code&gt;handle&lt;/code&gt; method. Within the &lt;code&gt;handle&lt;/code&gt; method, you may perform any actions necessary to respond to the event:</source>
          <target state="translated">Затем давайте посмотрим на слушателя для нашего примера события. Слушатели событий получают экземпляр события в своем методе &lt;code&gt;handle&lt;/code&gt; . Команда &lt;code&gt;event:generate&lt;/code&gt; автоматически импортирует соответствующий класс события и укажет тип события в методе &lt;code&gt;handle&lt;/code&gt; . Внутри метода &lt;code&gt;handle&lt;/code&gt; вы можете выполнять любые действия, необходимые для ответа на событие:</target>
        </trans-unit>
        <trans-unit id="907dc4685bbd46c9838c6474dfd13efb7287e4cd" translate="yes" xml:space="preserve">
          <source>Next, on the &lt;code&gt;Tag&lt;/code&gt; model, you should define a method for each of its related models. So, for this example, we will define a &lt;code&gt;posts&lt;/code&gt; method and a &lt;code&gt;videos&lt;/code&gt; method:</source>
          <target state="translated">Затем в модели &lt;code&gt;Tag&lt;/code&gt; вы должны определить метод для каждой из связанных с ней моделей. Итак, для этого примера мы определим метод &lt;code&gt;posts&lt;/code&gt; метод &lt;code&gt;videos&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c2971ef2fc24521af2feda5ea94e5cb4b1f0f2f8" translate="yes" xml:space="preserve">
          <source>Next, register the &lt;code&gt;Laravel\Cashier\CashierServiceProvider&lt;/code&gt;&lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt; in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file:</source>
          <target state="translated">Затем зарегистрируйте &lt;a href=&quot;providers&quot;&gt;поставщика услуг &lt;/a&gt; &lt;code&gt;Laravel\Cashier\CashierServiceProvider&lt;/code&gt; в &lt;code&gt;config/app.php&lt;/code&gt; конфигурации config / app.php :</target>
        </trans-unit>
        <trans-unit id="164f18c71ee7b3b5f3ff61799f4b7ead6a92b654" translate="yes" xml:space="preserve">
          <source>Next, register the service provider in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2624e2c162af37d0d49294229912bebb6e86fb98" translate="yes" xml:space="preserve">
          <source>Next, register your channel in your &lt;code&gt;routes/channels.php&lt;/code&gt; file:</source>
          <target state="translated">Затем зарегистрируйте свой канал в файле &lt;code&gt;routes/channels.php&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bfd0f6a025db185441a090d576d53c33025327e6" translate="yes" xml:space="preserve">
          <source>Next, run the &lt;code&gt;vagrant up&lt;/code&gt; command in your terminal and access your project at &lt;code&gt;http://homestead.test&lt;/code&gt; in your browser. Remember, you will still need to add an &lt;code&gt;/etc/hosts&lt;/code&gt; file entry for &lt;code&gt;homestead.test&lt;/code&gt; or the domain of your choice if you are not using automatic &lt;a href=&quot;#hostname-resolution&quot;&gt;hostname resolution&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd79b98ab97368da43b4b122b2b78445f6f2dbd6" translate="yes" xml:space="preserve">
          <source>Next, run the &lt;code&gt;vagrant up&lt;/code&gt; command in your terminal and access your project at &lt;code&gt;http://homestead.test&lt;/code&gt; in your browser. Remember, you will still need to add an &lt;code&gt;/etc/hosts&lt;/code&gt; file entry for &lt;code&gt;homestead.test&lt;/code&gt; or the domain of your choice.</source>
          <target state="translated">Затем запустите команду &lt;code&gt;vagrant up&lt;/code&gt; в своем терминале и откройте свой проект по адресу &lt;code&gt;http://homestead.test&lt;/code&gt; в своем браузере. Помните, что вам все равно нужно будет добавить запись в файл &lt;code&gt;/etc/hosts&lt;/code&gt; для &lt;code&gt;homestead.test&lt;/code&gt; или домена по вашему выбору.</target>
        </trans-unit>
        <trans-unit id="359c5d7dc9016c9b87b9ebcea2df098b786e80f1" translate="yes" xml:space="preserve">
          <source>Next, set the &lt;code&gt;default&lt;/code&gt; option in your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file to &lt;code&gt;ses&lt;/code&gt; and verify that your &lt;code&gt;config/services.php&lt;/code&gt; configuration file contains the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fa061d0a2bc9ccafa498186c600fc4bafc7fea" translate="yes" xml:space="preserve">
          <source>Next, set the &lt;code&gt;driver&lt;/code&gt; option in your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file to &lt;code&gt;ses&lt;/code&gt; and verify that your &lt;code&gt;config/services.php&lt;/code&gt; configuration file contains the following options:</source>
          <target state="translated">Затем установите для параметра &lt;code&gt;driver&lt;/code&gt; в &lt;code&gt;config/mail.php&lt;/code&gt; конфигурации config / mail.php значение &lt;code&gt;ses&lt;/code&gt; и убедитесь, что файл &lt;code&gt;config/services.php&lt;/code&gt; содержит следующие параметры:</target>
        </trans-unit>
        <trans-unit id="993dbfbeffaacb168c9dc870f1eed818d6b197da" translate="yes" xml:space="preserve">
          <source>Next, the &lt;code&gt;failed.driver&lt;/code&gt; configuration option within your &lt;code&gt;queue&lt;/code&gt; configuration file should be updated to &lt;code&gt;database-uuids&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a0ed911aef5e9c0523110f53528b5c112e1044" translate="yes" xml:space="preserve">
          <source>Next, the Stripe.js library may be used to attach a Stripe Element to the form and securely gather the customer's payment details:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f159906e3b1078901d16547708e00b50d8743492" translate="yes" xml:space="preserve">
          <source>Next, the card can be verified and a secure &quot;payment method identifier&quot; can be retrieved from Stripe using &lt;a href=&quot;https://stripe.com/docs/js/setup_intents/confirm_card_setup&quot;&gt;Stripe's &lt;code&gt;confirmCardSetup&lt;/code&gt; method&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792e8a7f538658c88c01678fb6ba5e5afc619e43" translate="yes" xml:space="preserve">
          <source>Next, the card can be verified and a secure &quot;payment method identifier&quot; can be retrieved from Stripe using &lt;a href=&quot;https://stripe.com/docs/stripe-js/reference#stripe-create-payment-method&quot;&gt;Stripe's &lt;code&gt;createPaymentMethod&lt;/code&gt; method&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f1d001055ecbc8b44303488732fe581144312a" translate="yes" xml:space="preserve">
          <source>Next, the incoming request is sent to either the HTTP kernel or the console kernel, depending on the type of request that is entering the application. These two kernels serve as the central location that all requests flow through. For now, let's just focus on the HTTP kernel, which is located in &lt;code&gt;app/Http/Kernel.php&lt;/code&gt;.</source>
          <target state="translated">Затем входящий запрос отправляется либо ядру HTTP, либо ядру консоли, в зависимости от типа запроса, поступающего в приложение. Эти два ядра служат центральным местом, через которое проходят все запросы. А пока давайте сосредоточимся на ядре HTTP, которое находится в &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8c1090238340629178fdf6cea839224b75c48a9" translate="yes" xml:space="preserve">
          <source>Next, to use this grant type, you need to add the &lt;code&gt;CheckClientCredentials&lt;/code&gt; middleware to the &lt;code&gt;$routeMiddleware&lt;/code&gt; property of your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef32b2910dc2711d28d07b13aea88376f3726b44" translate="yes" xml:space="preserve">
          <source>Next, verify that your &lt;code&gt;App\Models\User&lt;/code&gt; model implements the &lt;code&gt;Illuminate\Contracts\Auth\CanResetPassword&lt;/code&gt; contract. The &lt;code&gt;App\Models\User&lt;/code&gt; model included with the framework already implements this interface, and uses the &lt;code&gt;Illuminate\Auth\Passwords\CanResetPassword&lt;/code&gt; trait to include the methods needed to implement the interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd89bbf93d6019eb5ba7a18a5cad85555703ccc" translate="yes" xml:space="preserve">
          <source>Next, we can proceed directly to calling the &lt;code&gt;fulfill&lt;/code&gt; method on the request. This method will call the &lt;code&gt;markEmailAsVerified&lt;/code&gt; method on the authenticated user and dispatch the &lt;code&gt;Illuminate\Auth\Events\Verified&lt;/code&gt; event. The &lt;code&gt;markEmailAsVerified&lt;/code&gt; method is available to the default &lt;code&gt;App\Models\User&lt;/code&gt; model via the &lt;code&gt;Illuminate\Foundation\Auth\User&lt;/code&gt; base class. Once the user's email address has been verified, you may redirect them wherever you wish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9851f473d1786c4250c1db819a19ded2774bc6c" translate="yes" xml:space="preserve">
          <source>Next, we need a route that will handle requests generated when the user clicks the email verification link that was emailed to them. This route should be named &lt;code&gt;verification.verify&lt;/code&gt; and be assigned the &lt;code&gt;auth&lt;/code&gt; and &lt;code&gt;signed&lt;/code&gt; middlewares:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a8cfa2bb6c29b2f30e0c2160334a207844613c" translate="yes" xml:space="preserve">
          <source>Next, we need to define the logic that will actually perform the channel authorization. This is done in the &lt;code&gt;routes/channels.php&lt;/code&gt; file that is included with your application. In this file, you may use the &lt;code&gt;Broadcast::channel&lt;/code&gt; method to register channel authorization callbacks:</source>
          <target state="translated">Далее нам нужно определить логику, которая фактически будет выполнять авторизацию канала. Это делается в файле &lt;code&gt;routes/channels.php&lt;/code&gt; , который включен в ваше приложение. В этом файле вы можете использовать метод &lt;code&gt;Broadcast::channel&lt;/code&gt; для регистрации обратных вызовов авторизации канала:</target>
        </trans-unit>
        <trans-unit id="a850a5bfeb3beed2daa3fd8c2d82a8af9eb35232" translate="yes" xml:space="preserve">
          <source>Next, we will define a route that will handle the form request from the &quot;confirm password&quot; view. This route will be responsible for validating the password and redirecting the user to their intended destination:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bda7a9ab47035f30110338ed8b311cc5061b1e" translate="yes" xml:space="preserve">
          <source>Next, we will define a route will handle the form request from the &quot;forgot password&quot; view. This route will be responsible for validating the email address and sending the password reset request to the corresponding user:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c5e7082037b0352c38c7cac47bddb596fe2810" translate="yes" xml:space="preserve">
          <source>Next, we will define the routes necessary to actually reset the password once the user clicks on the password reset link that has been emailed to them and provides a new password. First, let's define the route that will display the reset password form that is displayed when the user clicks the reset password link. This route will receive a &lt;code&gt;token&lt;/code&gt; parameter that we will use later to verify the password reset request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da81d9241c8de687ea956b5482634b0fd1001f6c" translate="yes" xml:space="preserve">
          <source>Next, we're ready to define the relationships on the model. The &lt;code&gt;Post&lt;/code&gt; and &lt;code&gt;Video&lt;/code&gt; models will both have a &lt;code&gt;tags&lt;/code&gt; method that calls the &lt;code&gt;morphToMany&lt;/code&gt; method on the base Eloquent class:</source>
          <target state="translated">Затем мы готовы определить отношения в модели. Модели &lt;code&gt;Post&lt;/code&gt; и &lt;code&gt;Video&lt;/code&gt; будут иметь метод &lt;code&gt;tags&lt;/code&gt; который вызывает метод &lt;code&gt;morphToMany&lt;/code&gt; в базовом классе Eloquent:</target>
        </trans-unit>
        <trans-unit id="bc5cc438edf4bbb58d91ac2682790f82e48c1402" translate="yes" xml:space="preserve">
          <source>Next, you are ready to authenticate users! You will need two routes: one for redirecting the user to the OAuth provider, and another for receiving the callback from the provider after authentication. We will access Socialite using the &lt;code&gt;Socialite&lt;/code&gt; facade:</source>
          <target state="translated">Теперь вы готовы к аутентификации пользователей! Вам потребуются два маршрута: один для перенаправления пользователя к провайдеру OAuth, а другой для получения обратного вызова от провайдера после аутентификации. Мы получим доступ к Socialite, используя фасад &lt;code&gt;Socialite&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="877a11816faf1f38b0a0dd779df9f03a712dc421" translate="yes" xml:space="preserve">
          <source>Next, you may modify the &lt;code&gt;driver&lt;/code&gt; method to connect to the URL and port of your choice. In addition, you may modify the &quot;desired capabilities&quot; that should be passed to the WebDriver:</source>
          <target state="translated">Затем вы можете изменить метод &lt;code&gt;driver&lt;/code&gt; для подключения к URL-адресу и порту по вашему выбору. Кроме того, вы можете изменить &amp;laquo;желаемые возможности&amp;raquo;, которые следует передать WebDriver:</target>
        </trans-unit>
        <trans-unit id="ec7bc18ebc62df8df9e731b0cb8fe54a7e091520" translate="yes" xml:space="preserve">
          <source>Next, you may register a resourceful route to the controller:</source>
          <target state="translated">Далее можно зарегистрировать находчивый маршрут к контроллеру:</target>
        </trans-unit>
        <trans-unit id="e49fe441ba004e3e7e6581b7a8013bbff3401809" translate="yes" xml:space="preserve">
          <source>Next, you need to update the Homestead source code. If you cloned the repository you can &lt;code&gt;git pull origin master&lt;/code&gt; at the location you originally cloned the repository.</source>
          <target state="translated">Затем вам нужно обновить исходный код Homestead. Если вы клонировали репозиторий, вы можете &lt;code&gt;git pull origin master&lt;/code&gt; в том месте, где вы изначально клонировали репозиторий.</target>
        </trans-unit>
        <trans-unit id="facfe068bd0cc95a1ce8018bea9e89dbe0f03430" translate="yes" xml:space="preserve">
          <source>Next, you need to update the Homestead source code. If you cloned the repository you can run the following commands at the location you originally cloned the repository:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcd1b1de06242ffb4dcb822fd7d74ac529fc123" translate="yes" xml:space="preserve">
          <source>Next, you should add Sanctum's middleware to your &lt;code&gt;api&lt;/code&gt; middleware group within your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file. This middleware is responsible for ensuring that incoming requests from your SPA can authenticate using Laravel's session cookies, while still allowing requests from third parties or mobile applications to authenticate using API tokens:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9563b01c930f70a1bbc8337b9f5c18d10bb9b3a6" translate="yes" xml:space="preserve">
          <source>Next, you should call the &lt;code&gt;Passport::routes&lt;/code&gt; method within the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AuthServiceProvider&lt;/code&gt;. This method will register the routes necessary to issue access tokens and revoke access tokens, clients, and personal access tokens:</source>
          <target state="translated">Затем вы должны вызвать метод &lt;code&gt;Passport::routes&lt;/code&gt; методе &lt;code&gt;boot&lt;/code&gt; вашего &lt;code&gt;AuthServiceProvider&lt;/code&gt; . Этот метод зарегистрирует маршруты, необходимые для выдачи токенов доступа и отзыва токенов доступа, клиентов и токенов личного доступа:</target>
        </trans-unit>
        <trans-unit id="65ee840df6d8f56fc4df8b37fcdee9342172609e" translate="yes" xml:space="preserve">
          <source>Next, you should configure the following options in your &lt;code&gt;services.php&lt;/code&gt; file:</source>
          <target state="translated">Затем вы должны настроить следующие параметры в файле &lt;code&gt;services.php&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4f5aa7cb22ed1c73d8647998eb9caf86fa89dff8" translate="yes" xml:space="preserve">
          <source>Next, you should configure your Channels credentials in the &lt;code&gt;config/broadcasting.php&lt;/code&gt; configuration file. An example Channels configuration is already included in this file, allowing you to quickly specify your Channels key, secret, and application ID. The &lt;code&gt;config/broadcasting.php&lt;/code&gt; file's &lt;code&gt;pusher&lt;/code&gt; configuration also allows you to specify additional &lt;code&gt;options&lt;/code&gt; that are supported by Channels, such as the cluster:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7679b0f021c74cd56edebe66df1ec80c1caec2e5" translate="yes" xml:space="preserve">
          <source>Next, you should configure your Paddle keys in your &lt;code&gt;.env&lt;/code&gt; file. You can retrieve your Paddle API keys from the Paddle control panel:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4ccf55534bc992b6e553967b47c16acac02481" translate="yes" xml:space="preserve">
          <source>Next, you should configure your Pusher credentials in the &lt;code&gt;config/broadcasting.php&lt;/code&gt; configuration file. An example Pusher configuration is already included in this file, allowing you to quickly specify your Pusher key, secret, and application ID. The &lt;code&gt;config/broadcasting.php&lt;/code&gt; file's &lt;code&gt;pusher&lt;/code&gt; configuration also allows you to specify additional &lt;code&gt;options&lt;/code&gt; that are supported by Pusher, such as the cluster:</source>
          <target state="translated">Затем вы должны настроить свои учетные данные Pusher в файле конфигурации &lt;code&gt;config/broadcasting.php&lt;/code&gt; . Пример конфигурации Pusher уже включен в этот файл, что позволяет быстро указать свой ключ Pusher, секрет и идентификатор приложения. В &lt;code&gt;config/broadcasting.php&lt;/code&gt; файл &lt;code&gt;pusher&lt;/code&gt; конфигурация также позволяет указать дополнительные &lt;code&gt;options&lt;/code&gt; , которые поддерживаются толкателем, такие как кластер:</target>
        </trans-unit>
        <trans-unit id="3fd7b45c734dd8d308c5c28d0f10d3d6f715b9e2" translate="yes" xml:space="preserve">
          <source>Next, you should configure your Stripe keys in your &lt;code&gt;.env&lt;/code&gt; file. You can retrieve your Stripe API keys from the Stripe control panel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b145c3545969a0de6fcd80748f0ef90d000d6e7d" translate="yes" xml:space="preserve">
          <source>Next, you should create a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt; such as &lt;code&gt;DropboxServiceProvider&lt;/code&gt;. In the provider's &lt;code&gt;boot&lt;/code&gt; method, you may use the &lt;code&gt;Storage&lt;/code&gt; facade's &lt;code&gt;extend&lt;/code&gt; method to define the custom driver:</source>
          <target state="translated">Затем вы должны создать &lt;a href=&quot;providers&quot;&gt;поставщика услуг,&lt;/a&gt; например &lt;code&gt;DropboxServiceProvider&lt;/code&gt; . В методе &lt;code&gt;boot&lt;/code&gt; поставщика вы можете использовать метод &lt;code&gt;extend&lt;/code&gt; фасада &lt;code&gt;Storage&lt;/code&gt; для определения настраиваемого драйвера:</target>
        </trans-unit>
        <trans-unit id="20c597752a28f112c40629ff22ff2e7ce4b73a1c" translate="yes" xml:space="preserve">
          <source>Next, you should modify the &lt;code&gt;RedirectIfAuthenticated&lt;/code&gt; middleware's &lt;code&gt;handle&lt;/code&gt; method to use your new URI when redirecting the user.</source>
          <target state="translated">Затем вы должны изменить метод &lt;code&gt;handle&lt;/code&gt; промежуточного программного обеспечения &lt;code&gt;RedirectIfAuthenticated&lt;/code&gt; , чтобы использовать ваш новый URI при перенаправлении пользователя.</target>
        </trans-unit>
        <trans-unit id="b6f39b1ae91b0c542d9a2e6b9dc1560d1065bfdc" translate="yes" xml:space="preserve">
          <source>Next, you should publish the Sanctum configuration and migration files using the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command. The &lt;code&gt;sanctum&lt;/code&gt; configuration file will be placed in your &lt;code&gt;config&lt;/code&gt; directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e889d18b88033aca9a547f5b3f08667c124a69" translate="yes" xml:space="preserve">
          <source>Next, you should run the &lt;code&gt;bash init.sh&lt;/code&gt; command from the Homestead directory in order to update some additional configuration files. You will be asked whether you wish to overwrite your existing &lt;code&gt;Homestead.yaml&lt;/code&gt;, &lt;code&gt;after.sh&lt;/code&gt;, and &lt;code&gt;aliases&lt;/code&gt; files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbe313311c389eeb85e725fbb72e8e594ae2a24" translate="yes" xml:space="preserve">
          <source>Next, you should run the &lt;code&gt;passport:install&lt;/code&gt; command. This command will create the encryption keys needed to generate secure access tokens. In addition, the command will create &quot;personal access&quot; and &quot;password grant&quot; clients which will be used to generate access tokens:</source>
          <target state="translated">Далее вам следует запустить команду &lt;code&gt;passport:install&lt;/code&gt; . Эта команда создаст ключи шифрования, необходимые для создания токенов безопасного доступа. Кроме того, команда создаст клиентов &amp;laquo;персональный доступ&amp;raquo; и &amp;laquo;предоставление пароля&amp;raquo;, которые будут использоваться для генерации токенов доступа:</target>
        </trans-unit>
        <trans-unit id="5d8a2819ff96eb33cd14159b850d69564d5ffdfd" translate="yes" xml:space="preserve">
          <source>Next, you should update your broadcast driver to &lt;code&gt;redis&lt;/code&gt; in your &lt;code&gt;.env&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7ae3c42cd213a88a16d4e9613045ff6d96cf78" translate="yes" xml:space="preserve">
          <source>Next, you should upgrade to the latest version of Valet. Depending on how you installed Valet, this is typically done through Git or Composer. If you installed Valet via Composer, you should use the following command to update to the latest major version:</source>
          <target state="translated">Далее,вы должны обновиться до последней версии Valet.В зависимости от того,как вы установили Valet,это обычно делается через Git или Composer.Если вы установили Valet через Composer,вы должны использовать следующую команду для обновления до последней основной версии:</target>
        </trans-unit>
        <trans-unit id="cff75aad562ff4f975aa1af6a582dbc9171e0261" translate="yes" xml:space="preserve">
          <source>Next, you will need to add a configuration option to your &lt;code&gt;config/services.php&lt;/code&gt; configuration file. You may copy the example configuration below to get started:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9346fe1cb0ad682592288156c6ac59e3e7f28dc3" translate="yes" xml:space="preserve">
          <source>Next, you will need to instantiate Echo with the &lt;code&gt;socket.io&lt;/code&gt; connector and a &lt;code&gt;host&lt;/code&gt;.</source>
          <target state="translated">Затем вам нужно будет создать экземпляр Echo с коннектором &lt;code&gt;socket.io&lt;/code&gt; и &lt;code&gt;host&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25a9ef62f88ddd154f9f6904129cfe17f842d616" translate="yes" xml:space="preserve">
          <source>Next, your &lt;code&gt;user&lt;/code&gt; table must contain an &lt;code&gt;email_verified_at&lt;/code&gt; column to store the date and time that the email address was verified. By default, the &lt;code&gt;users&lt;/code&gt; table migration included with the Laravel framework already includes this column. So, all you need to do is run your database migrations:</source>
          <target state="translated">Затем ваша таблица &lt;code&gt;user&lt;/code&gt; должна содержать столбец &lt;code&gt;email_verified_at&lt;/code&gt; для хранения даты и времени, когда адрес электронной почты был подтвержден. По умолчанию миграция таблицы &lt;code&gt;users&lt;/code&gt; включенная в структуру Laravel, уже включает этот столбец. Итак, все, что вам нужно сделать, это запустить миграцию базы данных:</target>
        </trans-unit>
        <trans-unit id="07505557bcdf1f509d74c4b31a2291c53a8cec19" translate="yes" xml:space="preserve">
          <source>Next, your user table must contain an &lt;code&gt;email_verified_at&lt;/code&gt; column to store the date and time that the email address was verified:</source>
          <target state="translated">Затем ваша таблица пользователей должна содержать столбец &lt;code&gt;email_verified_at&lt;/code&gt; для хранения даты и времени проверки адреса электронной почты:</target>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="translated">Nginx</target>
        </trans-unit>
        <trans-unit id="f354c94fcf63b41b9e7ebacf2b7e3e9e3ea4dc57" translate="yes" xml:space="preserve">
          <source>No description</source>
          <target state="translated">Нет описания</target>
        </trans-unit>
        <trans-unit id="164def3a6f21111df6eaa91e080b26713b29eccd" translate="yes" xml:space="preserve">
          <source>NoLock</source>
          <target state="translated">NoLock</target>
        </trans-unit>
        <trans-unit id="80cc8bfc5b5a03584767340ceeed8fcbf46605c1" translate="yes" xml:space="preserve">
          <source>NoLock (Cache)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155423afbe2678625de786ad83b989fbb84f8fe3" translate="yes" xml:space="preserve">
          <source>NoLock::acquire()</source>
          <target state="translated">NoLock::acquire()</target>
        </trans-unit>
        <trans-unit id="b1d7b9eb8cf20a1a1d39b0b748c680628d556bf9" translate="yes" xml:space="preserve">
          <source>NoLock::forceRelease()</source>
          <target state="translated">NoLock::forceRelease()</target>
        </trans-unit>
        <trans-unit id="21f4b78e0241231280bdac1a03be3d20a11973c2" translate="yes" xml:space="preserve">
          <source>NoLock::getCurrentOwner()</source>
          <target state="translated">NoLock::getCurrentOwner()</target>
        </trans-unit>
        <trans-unit id="0bde9ef0a24059061b03ad197d8573560141def4" translate="yes" xml:space="preserve">
          <source>NoLock::release()</source>
          <target state="translated">NoLock::release()</target>
        </trans-unit>
        <trans-unit id="74b117d63532e60b4e252fe719cdb26e480aae05" translate="yes" xml:space="preserve">
          <source>NoMatchingExpectationException</source>
          <target state="translated">NoMatchingExpectationException</target>
        </trans-unit>
        <trans-unit id="cff8dd7da87e7939d96f4de9024a46f576a0acf0" translate="yes" xml:space="preserve">
          <source>NoPendingMigrations</source>
          <target state="translated">NoPendingMigrations</target>
        </trans-unit>
        <trans-unit id="b3bbcb60a117c3b659bc22df7d79f93fff1fb185" translate="yes" xml:space="preserve">
          <source>NoPendingMigrations (Database\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1dc7dde95b68db3f9277fc94e13bb3b36041c9b" translate="yes" xml:space="preserve">
          <source>NoPendingMigrations::__construct()</source>
          <target state="translated">NoPendingMigrations::__construct()</target>
        </trans-unit>
        <trans-unit id="9b5ef0beaac6cf2730700381272f3ce18a8b4334" translate="yes" xml:space="preserve">
          <source>Node (With Yarn, Bower, Grunt, and Gulp)</source>
          <target state="translated">Узел (С Пряжей,Бауэром,Ворчанием и Глотанием)</target>
        </trans-unit>
        <trans-unit id="22eb992afaa44868c71c6c087fe916bd7d1e1995" translate="yes" xml:space="preserve">
          <source>Non-Class Attribute Merging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="7367c77024cc3b8e2f4194daf04105667bd3c1c1" translate="yes" xml:space="preserve">
          <source>None (Foundation\Console)</source>
          <target state="translated">Нет (Foundation\Console)</target>
        </trans-unit>
        <trans-unit id="2bdacd1f53027e1d3f01a9c0145d96d62bab4852" translate="yes" xml:space="preserve">
          <source>None::install()</source>
          <target state="translated">None::install()</target>
        </trans-unit>
        <trans-unit id="a998980bf44ebc476c7178c0ed97ae98afe0a238" translate="yes" xml:space="preserve">
          <source>None::updateBootstrapping()</source>
          <target state="translated">None::updateBootstrapping()</target>
        </trans-unit>
        <trans-unit id="0de9e6e2d21e70c427c1c2b04e0e468e5f2094d9" translate="yes" xml:space="preserve">
          <source>None::updatePackageArray()</source>
          <target state="translated">None::updatePackageArray()</target>
        </trans-unit>
        <trans-unit id="61b400257880e92b6e6856d2a7107fcd00b9e358" translate="yes" xml:space="preserve">
          <source>Normal but significant events.</source>
          <target state="translated">Нормальные,но важные события.</target>
        </trans-unit>
        <trans-unit id="6a491f4bd819623ba8b3d346c788bb26d7fef837" translate="yes" xml:space="preserve">
          <source>Normalize a relative or absolute path to a cache file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0274ed43551546bb87a339839b7a903a0d66735e" translate="yes" xml:space="preserve">
          <source>Normalize a view name.</source>
          <target state="translated">Нормализуйте название вида.</target>
        </trans-unit>
        <trans-unit id="b28324810dd78a681dbffcdc9dafd801a80c2fb7" translate="yes" xml:space="preserve">
          <source>Normalize the ability name that has been guessed from the method name.</source>
          <target state="translated">Нормализуйте имя способности,которое было угадано из названия метода.</target>
        </trans-unit>
        <trans-unit id="dc8e68ea4ffb5f0bb1ecf8edfbc4e11ff5402552" translate="yes" xml:space="preserve">
          <source>Normalize the given callback into a Class@method string.</source>
          <target state="translated">Нормализуйте заданный обратный вызов в строку Class@method.</target>
        </trans-unit>
        <trans-unit id="043bb21568eda5c585d2605d4f1ae30729af7b70" translate="yes" xml:space="preserve">
          <source>Normalize the given callback into a callable.</source>
          <target state="translated">Нормализуйте данный обратный вызов в вызываемый.</target>
        </trans-unit>
        <trans-unit id="4c29b7dff43162635792cf2bcefad7b96fc4fc47" translate="yes" xml:space="preserve">
          <source>Normalize the given event name.</source>
          <target state="translated">Нормализуйте данное название события.</target>
        </trans-unit>
        <trans-unit id="fa545ad4e66294b9f3d4937472f38d1b9e8b3b85" translate="yes" xml:space="preserve">
          <source>Normalize the given view name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966af61ba913fecc8ad1785cf7914d7b7a4cf8bf" translate="yes" xml:space="preserve">
          <source>Normalize the response from a custom class caster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcaa801842910fcc229f5f140be0b0c5241c42f9" translate="yes" xml:space="preserve">
          <source>Normalizes a rule so that we can accept short types.</source>
          <target state="translated">Нормализует правило так,что мы можем принимать короткие типы.</target>
        </trans-unit>
        <trans-unit id="ac67620c7ec4a98de54849d60a81b2396fce596d" translate="yes" xml:space="preserve">
          <source>Not Found Exceptions</source>
          <target state="translated">Не найдено Исключения</target>
        </trans-unit>
        <trans-unit id="ffd97b06c9577230556a224a8fe323dfd2211965" translate="yes" xml:space="preserve">
          <source>Not familiar with Nginx? No problem. The &lt;code&gt;sites&lt;/code&gt; property allows you to easily map a &quot;domain&quot; to a folder on your Homestead environment. A sample site configuration is included in the &lt;code&gt;Homestead.yaml&lt;/code&gt; file. Again, you may add as many sites to your Homestead environment as necessary. Homestead can serve as a convenient, virtualized environment for every Laravel project you are working on:</source>
          <target state="translated">Не знаком с Nginx? Нет проблем. Свойство &lt;code&gt;sites&lt;/code&gt; позволяет легко сопоставить &amp;laquo;домен&amp;raquo; с папкой в ​​среде Homestead. Пример конфигурации сайта включен в файл &lt;code&gt;Homestead.yaml&lt;/code&gt; . Опять же, вы можете добавить столько сайтов в свою среду Homestead, сколько необходимо. Homestead может служить удобной виртуализированной средой для каждого проекта Laravel, над которым вы работаете:</target>
        </trans-unit>
        <trans-unit id="bc2354c1ffeb6b1438750522bcda0162e126eff0" translate="yes" xml:space="preserve">
          <source>NotFoundHttpException</source>
          <target state="translated">NotFoundHttpException</target>
        </trans-unit>
        <trans-unit id="9f0c224e0bb92f0db4fe95399447243c7f0cc54e" translate="yes" xml:space="preserve">
          <source>NotIn</source>
          <target state="translated">NotIn</target>
        </trans-unit>
        <trans-unit id="44ca0d222a682ad18793b395ca33ffef24686591" translate="yes" xml:space="preserve">
          <source>NotIn (Validation\Rules)</source>
          <target state="translated">NotIn (Validation\Rules)</target>
        </trans-unit>
        <trans-unit id="ccd6b4c7b25d444864864d774ac06e365a6d020c" translate="yes" xml:space="preserve">
          <source>NotIn::__construct()</source>
          <target state="translated">NotIn::__construct()</target>
        </trans-unit>
        <trans-unit id="344277e6e87683bb75c718b413190a2008e6e2e0" translate="yes" xml:space="preserve">
          <source>NotIn::__toString()</source>
          <target state="translated">NotIn::__toString()</target>
        </trans-unit>
        <trans-unit id="6d2028b54a2a5b105beea3e775f5079c1bf416d9" translate="yes" xml:space="preserve">
          <source>Note that Mandrill still respects CC, BCC headers in raw message itself.</source>
          <target state="translated">Обратите внимание,что Mandrill по-прежнему уважает CC,BCC заголовки в самом необработанном сообщении.</target>
        </trans-unit>
        <trans-unit id="b0c6b9462713c87d5af5d8bae592b6fb402aa01f" translate="yes" xml:space="preserve">
          <source>Note that SparkPost still respects CC, BCC headers in raw message itself.</source>
          <target state="translated">Обратите внимание,что SparkPost по-прежнему уважает CC,BCC заголовки в самом необработанном сообщении.</target>
        </trans-unit>
        <trans-unit id="308dfc85257a2c216d81d9ba8d8df90e588a876c" translate="yes" xml:space="preserve">
          <source>Note that each connection configuration example in the &lt;code&gt;queue&lt;/code&gt; configuration file contains a &lt;code&gt;queue&lt;/code&gt; attribute. This is the default queue that jobs will be dispatched to when they are sent to a given connection. In other words, if you dispatch a job without explicitly defining which queue it should be dispatched to, the job will be placed on the queue that is defined in the &lt;code&gt;queue&lt;/code&gt; attribute of the connection configuration:</source>
          <target state="translated">Обратите внимание, что каждый пример конфигурации подключения в файле конфигурации &lt;code&gt;queue&lt;/code&gt; содержит атрибут &lt;code&gt;queue&lt;/code&gt; . Это очередь по умолчанию, в которую будут отправляться задания при их отправке в определенное соединение. Другими словами, если вы отправляете задание без явного определения, в какую очередь оно должно быть отправлено, задание будет помещено в очередь, которая определена в атрибуте &lt;code&gt;queue&lt;/code&gt; конфигурации соединения:</target>
        </trans-unit>
        <trans-unit id="4fe7302498ba284a5bcc3645e9b28ee034741130" translate="yes" xml:space="preserve">
          <source>Note that the act of profiling slows down script execution, and absolute times may be as much as twice as real-world requests. Therefore, always compare percentage improvements and not absolute numbers. Also, be aware the execution time includes any time spent paused in a debugger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74f5dc1f28594c0205397076ed49d9ffa745dda" translate="yes" xml:space="preserve">
          <source>Note that this change only affects code using the &lt;code&gt;withChain&lt;/code&gt; method. The &lt;code&gt;allOnQueue()&lt;/code&gt; and &lt;code&gt;allOnConnection()&lt;/code&gt; are still available when using the global &lt;code&gt;dispatch()&lt;/code&gt; helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb470374435c92e2be67f4f94ba8ceac4900a41" translate="yes" xml:space="preserve">
          <source>Note that this does not allow any addition of meta data that may need to be returned with the collection. If you would like to customize the resource collection response, you may create a dedicated resource to represent the collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f13bfd06fe12440d3cceb602ea80566b2df25e" translate="yes" xml:space="preserve">
          <source>Note that three keys have been added to the configuration array: &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;sticky&lt;/code&gt;. The &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; keys have array values containing a single key: &lt;code&gt;host&lt;/code&gt;. The rest of the database options for the &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; connections will be merged from the main &lt;code&gt;mysql&lt;/code&gt; array.</source>
          <target state="translated">Обратите внимание, что в массив конфигурации были добавлены три ключа: &lt;code&gt;read&lt;/code&gt; , &lt;code&gt;write&lt;/code&gt; и &lt;code&gt;sticky&lt;/code&gt; . На &lt;code&gt;read&lt;/code&gt; и &lt;code&gt;write&lt;/code&gt; ключей имеют значения массива , содержащие один ключ: &lt;code&gt;host&lt;/code&gt; . Остальные параметры базы данных для соединений &lt;code&gt;read&lt;/code&gt; и &lt;code&gt;write&lt;/code&gt; будут объединены из основного массива &lt;code&gt;mysql&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb476325187395808dec8517dce93d8ddfdd222f" translate="yes" xml:space="preserve">
          <source>Note that we did not tell Eloquent which table to use for our &lt;code&gt;Flight&lt;/code&gt; model. By convention, the &quot;snake case&quot;, plural name of the class will be used as the table name unless another name is explicitly specified. So, in this case, Eloquent will assume the &lt;code&gt;Flight&lt;/code&gt; model stores records in the &lt;code&gt;flights&lt;/code&gt; table, while an &lt;code&gt;AirTrafficController&lt;/code&gt; model would store records in an &lt;code&gt;air_traffic_controllers&lt;/code&gt; table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58af032d7dcbb33db27bd10a1bcaf6b91fadbd7b" translate="yes" xml:space="preserve">
          <source>Note that we did not tell Eloquent which table to use for our &lt;code&gt;Flight&lt;/code&gt; model. By convention, the &quot;snake case&quot;, plural name of the class will be used as the table name unless another name is explicitly specified. So, in this case, Eloquent will assume the &lt;code&gt;Flight&lt;/code&gt; model stores records in the &lt;code&gt;flights&lt;/code&gt; table. You may specify a custom table by defining a &lt;code&gt;table&lt;/code&gt; property on your model:</source>
          <target state="translated">Обратите внимание, что мы не указали Eloquent, какую таблицу использовать для нашей модели &lt;code&gt;Flight&lt;/code&gt; . По соглашению, имя класса во множественном числе будет использоваться в качестве имени таблицы, если другое имя не указано явно. Итак, в этом случае Eloquent предполагает, что модель &lt;code&gt;Flight&lt;/code&gt; хранит записи в таблице &lt;code&gt;flights&lt;/code&gt; . Вы можете указать настраиваемую таблицу, определив свойство &lt;code&gt;table&lt;/code&gt; в своей модели:</target>
        </trans-unit>
        <trans-unit id="df300300279f19aee65e4c068d4b6af30347ce2b" translate="yes" xml:space="preserve">
          <source>Note that we receive the container itself as an argument to the resolver. We can then use the container to resolve sub-dependencies of the object we are building.</source>
          <target state="translated">Обратите внимание,что мы получаем сам контейнер в качестве аргумента в резольвер.Затем мы можем использовать контейнер для разрешения суб-зависимостей строящегося объекта.</target>
        </trans-unit>
        <trans-unit id="1fa1b4404cc013542cf271e082fc1a3b6946af80" translate="yes" xml:space="preserve">
          <source>Note that, although the method accepts one if necessary, we are not required to pass a CSS selector into the &lt;code&gt;type&lt;/code&gt; method. If a CSS selector is not provided, Dusk will search for an input field with the given &lt;code&gt;name&lt;/code&gt; attribute. Finally, Dusk will attempt to find a &lt;code&gt;textarea&lt;/code&gt; with the given &lt;code&gt;name&lt;/code&gt; attribute.</source>
          <target state="translated">Обратите внимание, что, хотя метод принимает его при необходимости, нам не требуется передавать селектор CSS в метод &lt;code&gt;type&lt;/code&gt; . Если селектор CSS не предоставлен, Dusk будет искать поле ввода с заданным атрибутом &lt;code&gt;name&lt;/code&gt; . Наконец, Dusk попытается найти &lt;code&gt;textarea&lt;/code&gt; с заданным атрибутом &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4d809999cdba6e9cef93d585a0cda335450386a" translate="yes" xml:space="preserve">
          <source>Note we are using &lt;code&gt;$this-&amp;gt;invoice-&amp;gt;id&lt;/code&gt; in our &lt;code&gt;toMail&lt;/code&gt; method. You may pass any data your notification needs to generate its message into the notification's constructor.</source>
          <target state="translated">Обратите внимание, что мы используем &lt;code&gt;$this-&amp;gt;invoice-&amp;gt;id&lt;/code&gt; в нашем методе &lt;code&gt;toMail&lt;/code&gt; . Вы можете передать любые данные, необходимые вашему уведомлению для генерации сообщения, в конструктор уведомления.</target>
        </trans-unit>
        <trans-unit id="8b7de2f558bdfc22bb41984128df6e3265390723" translate="yes" xml:space="preserve">
          <source>Note: &quot;SQLite does not have a storage class set aside for storing dates and/or times.&quot;</source>
          <target state="translated">Примечание:&quot;SQLite не имеет класса хранения,предназначенного для хранения дат и/или времени&quot;.</target>
        </trans-unit>
        <trans-unit id="05a2f4aae81c6488be85edbf799390f70a5779ee" translate="yes" xml:space="preserve">
          <source>Note: Adapted from Stringy\Stringy.</source>
          <target state="translated">Примечание:Адаптировано с Stringy\Stringy.</target>
        </trans-unit>
        <trans-unit id="bf352a19c09514901ea8b786e34826e463add00e" translate="yes" xml:space="preserve">
          <source>Note: Most exceptions can be handled via the try / catch block in the HTTP and Console kernels. But, fatal error exceptions must be handled differently since they are not normal exceptions.</source>
          <target state="translated">Примечание:Большинство исключений может быть обработано через блок try/catch в ядрах HTTP и Console.Однако,исключения фатальных ошибок должны обрабатываться по-другому,так как они не являются обычными исключениями.</target>
        </trans-unit>
        <trans-unit id="255f323c07f216789cc6a52416313b46bcd9a518" translate="yes" xml:space="preserve">
          <source>Notice that each &lt;code&gt;Role&lt;/code&gt; model we retrieve is automatically assigned a &lt;code&gt;pivot&lt;/code&gt; attribute. This attribute contains a model representing the intermediate table, and may be used like any other Eloquent model.</source>
          <target state="translated">Обратите внимание, что каждой извлекаемой &lt;code&gt;Role&lt;/code&gt; модели автоматически назначается &lt;code&gt;pivot&lt;/code&gt; атрибут. Этот атрибут содержит модель, представляющую промежуточную таблицу, и может использоваться как любая другая модель Eloquent.</target>
        </trans-unit>
        <trans-unit id="d5a77d4e77222f55738aa96f1c1a5ab42d97231f" translate="yes" xml:space="preserve">
          <source>Notice that near the top of the file we are &quot;importing&quot; the &lt;code&gt;Cache&lt;/code&gt; facade. This facade serves as a proxy to accessing the underlying implementation of the &lt;code&gt;Illuminate\Contracts\Cache\Factory&lt;/code&gt; interface. Any calls we make using the facade will be passed to the underlying instance of Laravel's cache service.</source>
          <target state="translated">Обратите внимание, что в верхней части файла мы &amp;laquo;импортируем&amp;raquo; фасад &lt;code&gt;Cache&lt;/code&gt; . Этот фасад служит прокси для доступа к базовой реализации интерфейса &lt;code&gt;Illuminate\Contracts\Cache\Factory&lt;/code&gt; . Любые вызовы, которые мы делаем с использованием фасада, будут передаваться в базовый экземпляр службы кеширования Laravel.</target>
        </trans-unit>
        <trans-unit id="c9f02b6037f9b38037d8187a9301ec8feeda4895" translate="yes" xml:space="preserve">
          <source>Notice that we did not access the &lt;code&gt;comments&lt;/code&gt; relationship as a dynamic property. Instead, we called the &lt;code&gt;comments&lt;/code&gt; method to obtain an instance of the relationship. The &lt;code&gt;save&lt;/code&gt; method will automatically add the appropriate &lt;code&gt;post_id&lt;/code&gt; value to the new &lt;code&gt;Comment&lt;/code&gt; model.</source>
          <target state="translated">Обратите внимание, что мы не получили доступ к связи &lt;code&gt;comments&lt;/code&gt; как к динамическому свойству. Вместо этого мы вызвали метод &lt;code&gt;comments&lt;/code&gt; чтобы получить экземпляр отношения. Метод &lt;code&gt;save&lt;/code&gt; автоматически добавит соответствующее значение &lt;code&gt;post_id&lt;/code&gt; в новую модель &lt;code&gt;Comment&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="888fe3ae0b1c4525ef5c2db04dc9ab18b35c1a81" translate="yes" xml:space="preserve">
          <source>Notifiable</source>
          <target state="translated">Notifiable</target>
        </trans-unit>
        <trans-unit id="e876293b7d8f3054c2a748df1581c628733c3b41" translate="yes" xml:space="preserve">
          <source>Notifiable (Notifications)</source>
          <target state="translated">Извещаемый (Уведомления)</target>
        </trans-unit>
        <trans-unit id="c18f8f255ab9c208f23d0340eb9dff5a84efe311" translate="yes" xml:space="preserve">
          <source>Notification</source>
          <target state="translated">Notification</target>
        </trans-unit>
        <trans-unit id="6511d07e26ab2dd48cbf140e587de01a87da1872" translate="yes" xml:space="preserve">
          <source>Notification (Notifications)</source>
          <target state="translated">Уведомление (Уведомления)</target>
        </trans-unit>
        <trans-unit id="50868f3767f128b8cdbb55feeaad61379152d8cc" translate="yes" xml:space="preserve">
          <source>Notification (Support\Facades)</source>
          <target state="translated">Уведомление (Support\Facades)</target>
        </trans-unit>
        <trans-unit id="8d19fe3ddc3043e44365cd98e44e8ba3f491c997" translate="yes" xml:space="preserve">
          <source>Notification Events</source>
          <target state="translated">Уведомление События</target>
        </trans-unit>
        <trans-unit id="500b1cd985fb21c0d67ba66fb3d7fb8738808b5f" translate="yes" xml:space="preserve">
          <source>Notification Fake</source>
          <target state="translated">Фальшивое уведомление</target>
        </trans-unit>
        <trans-unit id="e4a49365a6e8d3074fec2c95e6389c602465c7e9" translate="yes" xml:space="preserve">
          <source>Notification Localization</source>
          <target state="translated">Локализация уведомления</target>
        </trans-unit>
        <trans-unit id="bd6dc81c433c6c0818ab8f8e2cfb62247f3693c5" translate="yes" xml:space="preserve">
          <source>Notification Watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dc1270210de8f0f2da788b520868d71ba99579" translate="yes" xml:space="preserve">
          <source>Notification::broadcastOn()</source>
          <target state="translated">Notification::broadcastOn()</target>
        </trans-unit>
        <trans-unit id="3035eef6fe59bb9dfec7441baadf74ad12801c5a" translate="yes" xml:space="preserve">
          <source>Notification::fake()</source>
          <target state="translated">Notification::fake()</target>
        </trans-unit>
        <trans-unit id="ee098a56e9da574024c90a7c28b33ff2740abb84" translate="yes" xml:space="preserve">
          <source>Notification::getFacadeAccessor()</source>
          <target state="translated">Notification::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="90e3fcaa554a0459188a6c82a52b7032c80c24e8" translate="yes" xml:space="preserve">
          <source>Notification::locale()</source>
          <target state="translated">Notification::locale()</target>
        </trans-unit>
        <trans-unit id="1bafe986003b92f4774850f1e077263f2769bd18" translate="yes" xml:space="preserve">
          <source>Notification::route()</source>
          <target state="translated">Notification::route()</target>
        </trans-unit>
        <trans-unit id="34e4c73c609e8137d8d567253feb0c1e3a20ab6b" translate="yes" xml:space="preserve">
          <source>NotificationFailed</source>
          <target state="translated">NotificationFailed</target>
        </trans-unit>
        <trans-unit id="b8fe79b815e5e6ed170df5bc14de48e22e5d6a3a" translate="yes" xml:space="preserve">
          <source>NotificationFailed (Notifications\Events)</source>
          <target state="translated">NotificationFailed (Notifications\Events)</target>
        </trans-unit>
        <trans-unit id="8982f20e9c7e80f4f0b1a4a689e1c0c65d74ed37" translate="yes" xml:space="preserve">
          <source>NotificationFailed::__construct()</source>
          <target state="translated">NotificationFailed::__construct()</target>
        </trans-unit>
        <trans-unit id="c13b6bf20919ccc260b134532512e4d83556ae5f" translate="yes" xml:space="preserve">
          <source>NotificationFake</source>
          <target state="translated">NotificationFake</target>
        </trans-unit>
        <trans-unit id="99ed0381462da769ee096f85f286f019b2cef328" translate="yes" xml:space="preserve">
          <source>NotificationFake (Support\Testing)</source>
          <target state="translated">NotificationFake (Support\Testing)</target>
        </trans-unit>
        <trans-unit id="12b59351a3b265ec19156676947e5f93c92511e9" translate="yes" xml:space="preserve">
          <source>NotificationFake::assertNotSentTo()</source>
          <target state="translated">NotificationFake::assertNotSentTo()</target>
        </trans-unit>
        <trans-unit id="c7c47cc68c34af326da5acd86e0d4f9357f86d7d" translate="yes" xml:space="preserve">
          <source>NotificationFake::assertNothingSent()</source>
          <target state="translated">NotificationFake::assertNothingSent()</target>
        </trans-unit>
        <trans-unit id="06e638bb6bf4c4c7160b4c597e32074c6efaa37b" translate="yes" xml:space="preserve">
          <source>NotificationFake::assertSentTo()</source>
          <target state="translated">NotificationFake::assertSentTo()</target>
        </trans-unit>
        <trans-unit id="98ce64dfad3c229d02da13d34e98e27a6036c43e" translate="yes" xml:space="preserve">
          <source>NotificationFake::assertSentToTimes()</source>
          <target state="translated">NotificationFake::assertSentToTimes()</target>
        </trans-unit>
        <trans-unit id="1e73b33920454bfdd958868f05f1bed3d4ef2448" translate="yes" xml:space="preserve">
          <source>NotificationFake::assertTimesSent()</source>
          <target state="translated">NotificationFake::assertTimesSent()</target>
        </trans-unit>
        <trans-unit id="73968296f789090c948e4bc085f2d69d77c5aa7c" translate="yes" xml:space="preserve">
          <source>NotificationFake::channel()</source>
          <target state="translated">NotificationFake::channel()</target>
        </trans-unit>
        <trans-unit id="d4da2c1b2361ebc1cb6588a6e9c73d8e93c177ca" translate="yes" xml:space="preserve">
          <source>NotificationFake::hasSent()</source>
          <target state="translated">NotificationFake::hasSent()</target>
        </trans-unit>
        <trans-unit id="75c2e65d7dc4c95959cbcf631554094f5bee2273" translate="yes" xml:space="preserve">
          <source>NotificationFake::locale()</source>
          <target state="translated">NotificationFake::locale()</target>
        </trans-unit>
        <trans-unit id="d21a7d45d61f69646b71dd6b547953e0d383caa0" translate="yes" xml:space="preserve">
          <source>NotificationFake::notificationsFor()</source>
          <target state="translated">NotificationFake::notificationsFor()</target>
        </trans-unit>
        <trans-unit id="c4ae445cda93130feb5363e376999f4441f5275c" translate="yes" xml:space="preserve">
          <source>NotificationFake::send()</source>
          <target state="translated">NotificationFake::send()</target>
        </trans-unit>
        <trans-unit id="b8647ea90667c552b15d00f510e31eec7a0e7385" translate="yes" xml:space="preserve">
          <source>NotificationFake::sendNow()</source>
          <target state="translated">NotificationFake::sendNow()</target>
        </trans-unit>
        <trans-unit id="2fcf5355fb8d9ccd7d49896fdf4147d4ace725a4" translate="yes" xml:space="preserve">
          <source>NotificationFake::sent()</source>
          <target state="translated">NotificationFake::sent()</target>
        </trans-unit>
        <trans-unit id="d23bca63723a4a6f2c02987cbbeb3d1a06d67466" translate="yes" xml:space="preserve">
          <source>NotificationMakeCommand</source>
          <target state="translated">NotificationMakeCommand</target>
        </trans-unit>
        <trans-unit id="68e30f35eb035fc1c8ae60cc5fa7d80a8625d613" translate="yes" xml:space="preserve">
          <source>NotificationMakeCommand (Foundation)</source>
          <target state="translated">УведомлениеУведомлениеУведомлениеКоманда (Фонд)</target>
        </trans-unit>
        <trans-unit id="fab1f778cd5c7d460ed9a07e88838dda784bccba" translate="yes" xml:space="preserve">
          <source>NotificationMakeCommand::buildClass()</source>
          <target state="translated">NotificationMakeCommand::buildClass()</target>
        </trans-unit>
        <trans-unit id="17cf6f30a9e2d0ae71279d73b6c521d240aee140" translate="yes" xml:space="preserve">
          <source>NotificationMakeCommand::getDefaultNamespace()</source>
          <target state="translated">NotificationMakeCommand::getDefaultNamespace()</target>
        </trans-unit>
        <trans-unit id="53ac18d0e4510c538a3770f51b037fb852514ac7" translate="yes" xml:space="preserve">
          <source>NotificationMakeCommand::getOptions()</source>
          <target state="translated">NotificationMakeCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="3030e38c16f4f2e24bec4b6b2d3b46edb498bfcb" translate="yes" xml:space="preserve">
          <source>NotificationMakeCommand::getStub()</source>
          <target state="translated">NotificationMakeCommand::getStub()</target>
        </trans-unit>
        <trans-unit id="fdd302ec746bb8cdbb636aa74ad4e8cc062f2143" translate="yes" xml:space="preserve">
          <source>NotificationMakeCommand::handle()</source>
          <target state="translated">NotificationMakeCommand::handle()</target>
        </trans-unit>
        <trans-unit id="66ec7f68167c90b2033f0774966326db8dc7d44e" translate="yes" xml:space="preserve">
          <source>NotificationMakeCommand::writeMarkdownTemplate()</source>
          <target state="translated">NotificationMakeCommand::writeMarkdownTemplate()</target>
        </trans-unit>
        <trans-unit id="d1850cc317b4938ead03dc8ae263d24cac1afbb6" translate="yes" xml:space="preserve">
          <source>NotificationSender</source>
          <target state="translated">NotificationSender</target>
        </trans-unit>
        <trans-unit id="a3aa1dff463160d3e52028bebf0182649b5e42f1" translate="yes" xml:space="preserve">
          <source>NotificationSender (Notifications)</source>
          <target state="translated">УведомлениеОтправитель (Уведомления)</target>
        </trans-unit>
        <trans-unit id="f57d7078b671c6384b4a2acf4878f40b85191f22" translate="yes" xml:space="preserve">
          <source>NotificationSender::__construct()</source>
          <target state="translated">NotificationSender::__construct()</target>
        </trans-unit>
        <trans-unit id="5f93777621aae5277d7b011701f07128d47d9733" translate="yes" xml:space="preserve">
          <source>NotificationSender::formatNotifiables()</source>
          <target state="translated">NotificationSender::formatNotifiables()</target>
        </trans-unit>
        <trans-unit id="7a097a370c9ac2d2fa59b15c75c39a24304b70c2" translate="yes" xml:space="preserve">
          <source>NotificationSender::preferredLocale()</source>
          <target state="translated">NotificationSender::preferredLocale()</target>
        </trans-unit>
        <trans-unit id="eccec25038773cb605057fa60a979d90d93b0bba" translate="yes" xml:space="preserve">
          <source>NotificationSender::queueNotification()</source>
          <target state="translated">NotificationSender::queueNotification()</target>
        </trans-unit>
        <trans-unit id="3322a7e4f25ccbd99f4af0318939889a7393852a" translate="yes" xml:space="preserve">
          <source>NotificationSender::send()</source>
          <target state="translated">NotificationSender::send()</target>
        </trans-unit>
        <trans-unit id="476115ce550b15560a2b66a59f111363855a7538" translate="yes" xml:space="preserve">
          <source>NotificationSender::sendNow()</source>
          <target state="translated">NotificationSender::sendNow()</target>
        </trans-unit>
        <trans-unit id="82e20a7409196407da3d444b09bf1b597c39a8db" translate="yes" xml:space="preserve">
          <source>NotificationSender::sendToNotifiable()</source>
          <target state="translated">NotificationSender::sendToNotifiable()</target>
        </trans-unit>
        <trans-unit id="594b27f910d46b5dd8a32fff11b13935331c362f" translate="yes" xml:space="preserve">
          <source>NotificationSender::shouldSendNotification()</source>
          <target state="translated">NotificationSender::shouldSendNotification()</target>
        </trans-unit>
        <trans-unit id="2298a73b87e32d13889bbeb8a9af04d41095afd7" translate="yes" xml:space="preserve">
          <source>NotificationSending</source>
          <target state="translated">NotificationSending</target>
        </trans-unit>
        <trans-unit id="d2136a835d9d43fd4fc0ab91d4ab5c27a0c9e1a2" translate="yes" xml:space="preserve">
          <source>NotificationSending (Notifications\Events)</source>
          <target state="translated">NotificationSending (Notifications\Events)</target>
        </trans-unit>
        <trans-unit id="240bc02eb4b7acd61b7e9a5ef932a8072fda42f4" translate="yes" xml:space="preserve">
          <source>NotificationSending::__construct()</source>
          <target state="translated">NotificationSending::__construct()</target>
        </trans-unit>
        <trans-unit id="f168388a4dcf2ac3bd98f4b17e1d6e17c811c34a" translate="yes" xml:space="preserve">
          <source>NotificationSent</source>
          <target state="translated">NotificationSent</target>
        </trans-unit>
        <trans-unit id="485fa17d21fd5b82185e6833a202b3613bc5ae65" translate="yes" xml:space="preserve">
          <source>NotificationSent (Notifications\Events)</source>
          <target state="translated">NotificationSent (Notifications\Events)</target>
        </trans-unit>
        <trans-unit id="d1d141e611d7b10eff02209332c1b18cbd015715" translate="yes" xml:space="preserve">
          <source>NotificationSent::__construct()</source>
          <target state="translated">NotificationSent::__construct()</target>
        </trans-unit>
        <trans-unit id="8a0c4832dc4f303a5d3b748d82c13b8d06234474" translate="yes" xml:space="preserve">
          <source>NotificationServiceProvider</source>
          <target state="translated">NotificationServiceProvider</target>
        </trans-unit>
        <trans-unit id="b50ab61279346e9c22e159aa038b753e98ea6d76" translate="yes" xml:space="preserve">
          <source>NotificationServiceProvider (Notifications)</source>
          <target state="translated">NotificationServiceProvider (Уведомления)</target>
        </trans-unit>
        <trans-unit id="bc91ded640b349f78b5dc9bdde617d8b643898a4" translate="yes" xml:space="preserve">
          <source>NotificationServiceProvider::boot()</source>
          <target state="translated">NotificationServiceProvider::boot()</target>
        </trans-unit>
        <trans-unit id="1a6772de7fbd0f1a8a807c74924efaa2c4ecc366" translate="yes" xml:space="preserve">
          <source>NotificationServiceProvider::register()</source>
          <target state="translated">NotificationServiceProvider::register()</target>
        </trans-unit>
        <trans-unit id="94c5060e2e6170551042dfb2f8dd29060454aa9e" translate="yes" xml:space="preserve">
          <source>NotificationTableCommand</source>
          <target state="translated">NotificationTableCommand</target>
        </trans-unit>
        <trans-unit id="3105df68eeef5e27de1e25e1a2814be1935f9f4d" translate="yes" xml:space="preserve">
          <source>NotificationTableCommand (Notifications)</source>
          <target state="translated">УведомлениеУведомлениеКомманда (Уведомления)</target>
        </trans-unit>
        <trans-unit id="bd46d18f2d3cb94fc14cd115db1e469011e4d037" translate="yes" xml:space="preserve">
          <source>NotificationTableCommand::__construct()</source>
          <target state="translated">NotificationTableCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="15128bccff2e5f74e8d0106a39a79d3d84fbf26a" translate="yes" xml:space="preserve">
          <source>NotificationTableCommand::createBaseMigration()</source>
          <target state="translated">NotificationTableCommand::createBaseMigration()</target>
        </trans-unit>
        <trans-unit id="240283177400d6136dd35964d9042a259433be27" translate="yes" xml:space="preserve">
          <source>NotificationTableCommand::handle()</source>
          <target state="translated">NotificationTableCommand::handle()</target>
        </trans-unit>
        <trans-unit id="86e466d70a9a95bceacb9662c6768d824236e650" translate="yes" xml:space="preserve">
          <source>Notification]</source>
          <target state="translated">Notification]</target>
        </trans-unit>
        <trans-unit id="753a22b2eb617204efee4644795034b8ace1ee14" translate="yes" xml:space="preserve">
          <source>Notifications</source>
          <target state="translated">Notifications</target>
        </trans-unit>
        <trans-unit id="7cb869833f18de7e6a0c64e7f822b18c60d28ee1" translate="yes" xml:space="preserve">
          <source>Notifications may be sent in two ways: using the &lt;code&gt;notify&lt;/code&gt; method of the &lt;code&gt;Notifiable&lt;/code&gt; trait or using the &lt;code&gt;Notification&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. First, let's explore using the trait:</source>
          <target state="translated">Уведомления могут быть отправлены двумя способами: с помощью &lt;code&gt;notify&lt;/code&gt; метод , подлежащих &lt;code&gt;Notifiable&lt;/code&gt; признака или с помощью &lt;code&gt;Notification&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;фасада&lt;/a&gt; . Во-первых, давайте рассмотрим использование трейта:</target>
        </trans-unit>
        <trans-unit id="6037ac7e8b4bb84a057fa32af7ed522e481ad65d" translate="yes" xml:space="preserve">
          <source>Notifications will be sent even when customers are manually making a payment that requires additional confirmation. Unfortunately, there is no way for Stripe to know that the payment was done manually or &quot;off-session&quot;. But, a customer will simply see a &quot;Payment Successful&quot; message if they visit the payment page after already confirming their payment. The customer will not be allowed to accidentally confirm the same payment twice and incur an accidental second charge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cceae3dba3f01c2b133a93f48b52780c1dbf2cf" translate="yes" xml:space="preserve">
          <source>Notifications will broadcast on a private channel formatted using a &lt;code&gt;{notifiable}.{id}&lt;/code&gt; convention. So, if you are sending a notification to a &lt;code&gt;App\User&lt;/code&gt; instance with an ID of &lt;code&gt;1&lt;/code&gt;, the notification will be broadcast on the &lt;code&gt;App.User.1&lt;/code&gt; private channel. When using &lt;a href=&quot;broadcasting&quot;&gt;Laravel Echo&lt;/a&gt;, you may easily listen for notifications on a channel using the &lt;code&gt;notification&lt;/code&gt; helper method:</source>
          <target state="translated">Уведомления будут транслироваться по частному каналу, отформатированному с использованием соглашения &lt;code&gt;{notifiable}.{id}&lt;/code&gt; . Итак, если вы отправляете уведомление экземпляру &lt;code&gt;App\User&lt;/code&gt; с идентификатором &lt;code&gt;1&lt;/code&gt; , уведомление будет транслироваться на частном канале &lt;code&gt;App.User.1&lt;/code&gt; . При использовании &lt;a href=&quot;broadcasting&quot;&gt;Laravel Echo&lt;/a&gt; вы можете легко прослушивать уведомления на канале, используя вспомогательный метод &lt;code&gt;notification&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="93a0efe70359625f9696f2359df8bb61695f331a" translate="yes" xml:space="preserve">
          <source>Notifications will broadcast on a private channel formatted using a &lt;code&gt;{notifiable}.{id}&lt;/code&gt; convention. So, if you are sending a notification to an &lt;code&gt;App\Models\User&lt;/code&gt; instance with an ID of &lt;code&gt;1&lt;/code&gt;, the notification will be broadcast on the &lt;code&gt;App.Models.User.1&lt;/code&gt; private channel. When using &lt;a href=&quot;broadcasting&quot;&gt;Laravel Echo&lt;/a&gt;, you may easily listen for notifications on a channel using the &lt;code&gt;notification&lt;/code&gt; helper method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8adecd671326ae72f97d60fab58e5550e4bfdcf2" translate="yes" xml:space="preserve">
          <source>Notifications\Channels</source>
          <target state="translated">Notifications\Channels</target>
        </trans-unit>
        <trans-unit id="1175ac5d28a71476a1740683c9cd9f0d178a28e1" translate="yes" xml:space="preserve">
          <source>Notifications\Events</source>
          <target state="translated">Notifications\Events</target>
        </trans-unit>
        <trans-unit id="eca4bc25421286c4f93e8ab1eabc235c4dcf11f5" translate="yes" xml:space="preserve">
          <source>Notifications\Messages</source>
          <target state="translated">Notifications\Messages</target>
        </trans-unit>
        <trans-unit id="d577f2d491db5db8ea685dbb556f05e35f875aa4" translate="yes" xml:space="preserve">
          <source>Now if the validation rule fails it will produce the following message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a366a933ac0e761b8bc9c2107e61fe6d303fe49e" translate="yes" xml:space="preserve">
          <source>Now that we can access all of a post's comments, let's define a relationship to allow a comment to access its parent post. To define the inverse of a &lt;code&gt;hasMany&lt;/code&gt; relationship, define a relationship function on the child model which calls the &lt;code&gt;belongsTo&lt;/code&gt; method:</source>
          <target state="translated">Теперь, когда мы можем получить доступ ко всем комментариям поста, давайте определим отношение, чтобы разрешить комментарию доступ к его родительскому посту. Чтобы определить &lt;code&gt;hasMany&lt;/code&gt; отношения hasMany , определите функцию отношения в дочерней модели, которая вызывает метод &lt;code&gt;belongsTo&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f770b82fc2979f82c24a947413c5878172f31c65" translate="yes" xml:space="preserve">
          <source>Now that we have defined a layout for our application, let's define a child page that inherits the layout.</source>
          <target state="translated">Теперь,когда мы определили макет для нашего приложения,давайте определим дочернюю страницу,которая наследует макет.</target>
        </trans-unit>
        <trans-unit id="7f55d72dede80fc0d6c6161e47b7614f7f68e01f" translate="yes" xml:space="preserve">
          <source>Now that we have examined the table structure for the relationship, let's define it on the &lt;code&gt;Country&lt;/code&gt; model:</source>
          <target state="translated">Теперь, когда мы изучили структуру таблицы для отношения, давайте определим ее в модели &lt;code&gt;Country&lt;/code&gt; :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
