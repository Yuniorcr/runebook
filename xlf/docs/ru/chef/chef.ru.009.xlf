<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="75692f4fa5dd9e49b299640de24f976f3fa696ce" translate="yes" xml:space="preserve">
          <source>Change directories into the location in which the wrapper cookbook was created:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c181fc4e9eecb3709a7656a11d7f985c20b51405" translate="yes" xml:space="preserve">
          <source>Change directory to &lt;code&gt;ca-certificates&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e5f600fb4f785836a4e1165b369d93543d8249" translate="yes" xml:space="preserve">
          <source>Change directory to the &lt;code&gt;anchors&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f42da53a8c44efa5323f7270b836a4eee4159d" translate="yes" xml:space="preserve">
          <source>Change instance size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87496b8c5281baddbbe7bd058334dbde8071b719" translate="yes" xml:space="preserve">
          <source>Change the behavior of the file resource if it is pointed at a symlink. When this value is set to &lt;code&gt;false&lt;/code&gt;, Chef Infra Client will manage the symlink&amp;rsquo;s permissions or will replace the symlink with a normal file if the resource has content. When this value is set to &lt;code&gt;true&lt;/code&gt;, Chef will follow the symlink and will manage the permissions and content of symlink&amp;rsquo;s target file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d88f6e46de9be210f7025aac1506ac27a9c7b54" translate="yes" xml:space="preserve">
          <source>Change the behavior of the file resource if it is pointed at a symlink. When this value is set to &lt;code&gt;true&lt;/code&gt;, Chef Infra Client will manage the symlink&amp;rsquo;s permissions or will replace the symlink with a normal file if the resource has content. When this value is set to &lt;code&gt;false&lt;/code&gt;, Chef will follow the symlink and will manage the permissions and content of the symlink&amp;rsquo;s target file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd15bd3149560f7123acce58d91812095276300" translate="yes" xml:space="preserve">
          <source>Change the behavior of the file resource if it is pointed at a symlink. When this value is set to &lt;code&gt;true&lt;/code&gt;, the Chef Infra Client will manage the symlink&amp;rsquo;s permissions or will replace the symlink with a normal file if the resource has content. When this value is set to &lt;code&gt;false&lt;/code&gt;, Chef Infra Client will follow the symlink and will manage the permissions and content of the symlink&amp;rsquo;s target file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99f1b492c91ad564ddcc9ce22a168f6d5eca53c" translate="yes" xml:space="preserve">
          <source>Change the default setting for an origin by switching from &lt;strong&gt;Public Packages&lt;/strong&gt; to &lt;strong&gt;Private Packages&lt;/strong&gt;. The default setting is required for each origin. Packages can have different default visibility settings than the origin to which they belong. You can change the default visibility setting in for an individual packages in the package setting tab (Builder &amp;gt; Origin &amp;gt; Package &amp;gt; Settings).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1438630347b493bd9ea483dd46859e8badd6820a" translate="yes" xml:space="preserve">
          <source>Change the default setting for the origin by switching from &lt;strong&gt;Public Packages&lt;/strong&gt; to &lt;strong&gt;Private Packages&lt;/strong&gt;. The default setting required for each origin and users with more than one origin can set some as public and others as private. Packages can have different default visibility settings than their origin&amp;rsquo;s. Change the default visibility setting in for individual packages in that package&amp;rsquo;s setting tab (Builder &amp;gt; Origin &amp;gt; Package &amp;gt; Settings).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a0ff21a5bbcbbc8b17eda9a3bcc668945b4415" translate="yes" xml:space="preserve">
          <source>Change the hostname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b146bc6a562f53c90780a610d376a19ce7e9d664" translate="yes" xml:space="preserve">
          <source>Change the line 26 of the &lt;code&gt;kitchen.yml&lt;/code&gt; file to use your origin:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cea4a54dfbee018aaf4d1a4b076d34a7f6cad9f" translate="yes" xml:space="preserve">
          <source>Change the string in the file, run Chef Infra Client again, and Chef Infra will make the string in the file the same as the string in the recipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11acd12a57ffa13b3e674bea7b4903535630d56a" translate="yes" xml:space="preserve">
          <source>Change the string in the recipe, run Chef Infra Client again, and Chef Infra will update that string to be the same as the one in the recipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7072d04c621de99d631a8f35277760ea631fc8b4" translate="yes" xml:space="preserve">
          <source>Change the working directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db61a5a876ac632f8fa3a36a8b97dd0319dbdeeb" translate="yes" xml:space="preserve">
          <source>Change the working directory in Microsoft Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69af03316242643297234435eede93b4231f3b2" translate="yes" xml:space="preserve">
          <source>Change to the parent directory of the plan context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd93407003e0e3afa8833019ce73e58e78eafabe" translate="yes" xml:space="preserve">
          <source>Change your browser URI to &lt;code&gt;/kibana&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf72bcb04a4d301640f615770c7cc7b337ad690" translate="yes" xml:space="preserve">
          <source>Changed Project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056ded2a8e2db8ff52df5109a89146c7beac9986" translate="yes" xml:space="preserve">
          <source>Changed in 12.19 to support windows alternate user identity in execute resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58dabf510ea547d0f6310a7a0550a00eca3c9de6" translate="yes" xml:space="preserve">
          <source>Changed in Chef Client 12.0 to be applied before the Chef Client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d330a0bc34f279f3fe470f8cc49a2d2cad5ef5" translate="yes" xml:space="preserve">
          <source>Changed in Chef Client 12.0 to support specifying a range of ports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08919a173b13e0f5b5dd603968bbf67ee71a8fe1" translate="yes" xml:space="preserve">
          <source>Changed in Chef Client 12.0, unforked interval runs are no longer allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32090a271be460e6cb68d360fb5c0f5d4d1420b5" translate="yes" xml:space="preserve">
          <source>Changed in Chef Client 12.6 to use &lt;code&gt;:before&lt;/code&gt; timer with the &lt;code&gt;notifies&lt;/code&gt; and &lt;code&gt;subscribes&lt;/code&gt; properties to specify that the action on a notified resource should be run before processing the resource block in which the notification is located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1aca219992006cdb00bb46b210e9ada0b1dffa2" translate="yes" xml:space="preserve">
          <source>Changed in Chef Client 12.8, now chef-zero supports all Chef Server API version 12 endpoints, except &lt;code&gt;/universe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95365cb8459a000cc0b5abd4fa30af3642a8f763" translate="yes" xml:space="preserve">
          <source>Changed in knife-windows 1.9.0. The number of allowed concurrent connections. Defaults to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce060c5db8c5b313d67ae4bcec5cb9c6a94bf69" translate="yes" xml:space="preserve">
          <source>Changes Prior to Chef 12</source>
          <target state="translated">Изменения До повара 12</target>
        </trans-unit>
        <trans-unit id="61ef91c033872ce6445349af91226ea72316db26" translate="yes" xml:space="preserve">
          <source>Changes and Project Pipelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c19c4e602aad5f7cff651cbcfe0e44f9680452" translate="yes" xml:space="preserve">
          <source>Changes in build or installation scripts;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec611ed89594a53332c12a38996ddcfbd9fb2de3" translate="yes" xml:space="preserve">
          <source>Changes that fall under our Obvious Fix policy include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6978b679fdd9d2ff167973046888018b6716f4b9" translate="yes" xml:space="preserve">
          <source>Changes that reflect outside facts, like renaming a build directory or changing a constant;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54eacc695f45393f5cacff25160afd1d32998b3a" translate="yes" xml:space="preserve">
          <source>Changes to &amp;lsquo;metadata&amp;rsquo; files like Gemfile, .gitignore, build scripts, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2d07eb0c7f742f0ec6c0e4ab099b325832e778" translate="yes" xml:space="preserve">
          <source>Changes to &amp;lsquo;metadata&amp;rsquo; files like Gemfile, rebar.config, Makefile, app.config, sys.config, .gitignore, example configuration files, build scripts, etc.;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a931e47f4ceb32c80db6b924c655ccc4bca1b93" translate="yes" xml:space="preserve">
          <source>Changes to that file can then be made:</source>
          <target state="translated">После этого в этот файл можно внести изменения:</target>
        </trans-unit>
        <trans-unit id="3562f897cdb80ae3a86bb6f05c423d74a7995eed" translate="yes" xml:space="preserve">
          <source>Changes to typeface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1852a8d9177d8b80c415e61dcc44063b88e7c63" translate="yes" xml:space="preserve">
          <source>Changes to white space or formatting;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2fedd43e0e406f2b231f554ab90e1aedb3c76a" translate="yes" xml:space="preserve">
          <source>Changes to words or phrases isolated from their context;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8c84e4864e1a12588c04f0799dce11869ec30e" translate="yes" xml:space="preserve">
          <source>Changing API Token Details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e683643e830cdc18d5586ea063c0e149620101" translate="yes" xml:space="preserve">
          <source>Changing Chef Automate Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7c37f114e8335fbe1b4846744ebc6744b0aa2c" translate="yes" xml:space="preserve">
          <source>Changing Display Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb7f782de7c60b74bbac11f404cefdedd2e7f29" translate="yes" xml:space="preserve">
          <source>Changing Policy Details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685bf91b85273ef6f7032545946b2e5f3355e21b" translate="yes" xml:space="preserve">
          <source>Changing Project Details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad6e639a16e9de27a631af669a7ffad597c3df9" translate="yes" xml:space="preserve">
          <source>Changing Role Details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e8c92cf8c1b7a4cbc84a7b42172fd33639de94" translate="yes" xml:space="preserve">
          <source>Changing Team Details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11ae2c2ce5831af15747dba9745be4fd5c396b5" translate="yes" xml:space="preserve">
          <source>Changing a password</source>
          <target state="translated">Изменение пароля</target>
        </trans-unit>
        <trans-unit id="bc2ca570deaf7bff96db45c62df66042566b4b0f" translate="yes" xml:space="preserve">
          <source>Changing inherited rights can be expensive. Microsoft Windows will propagate rights to all children recursively due to inheritance. This is a normal aspect of Microsoft Windows, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration.</source>
          <target state="translated">Изменение унаследованных прав может быть дорогостоящим.Microsoft Windows будет рекурсивно распространять права на всех детей в связи с наследованием.Это нормальный аспект Microsoft Windows,поэтому рассмотрим частоту,с которой этот тип действий необходим,и примем меры по управлению этим типом действий,если в первую очередь учитывается производительность.</target>
        </trans-unit>
        <trans-unit id="5629ac429c17ff5182fba56f4418051697118792" translate="yes" xml:space="preserve">
          <source>Changing the upgrade strategy from &lt;code&gt;none&lt;/code&gt; to &lt;code&gt;at-once&lt;/code&gt; will install the latest packages from the install channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9344a28c366f637fbf8cff2f9d27ef4255cf04" translate="yes" xml:space="preserve">
          <source>Changing this setting to &lt;code&gt;false&lt;/code&gt; may cause file corruption, data loss, or instability. Use the &lt;code&gt;atomic_update&lt;/code&gt; property on the &lt;strong&gt;cookbook_file&lt;/strong&gt;, &lt;strong&gt;file&lt;/strong&gt;, &lt;strong&gt;remote_file&lt;/strong&gt;, and &lt;strong&gt;template&lt;/strong&gt; resources to tune this behavior at the recipe level.</source>
          <target state="translated">Изменение этого параметра на &lt;code&gt;false&lt;/code&gt; может привести к повреждению файла, потере данных или нестабильности. Используйте свойство &lt;code&gt;atomic_update&lt;/code&gt; в ресурсах &lt;strong&gt;cookbook_file&lt;/strong&gt; , &lt;strong&gt;file&lt;/strong&gt; , &lt;strong&gt;remote_file&lt;/strong&gt; и &lt;strong&gt;template&lt;/strong&gt; для настройки этого поведения на уровне рецепта.</target>
        </trans-unit>
        <trans-unit id="879f0b1bef59eeebf78cfd3a22f6f8077810cecf" translate="yes" xml:space="preserve">
          <source>Channel</source>
          <target state="translated">Channel</target>
        </trans-unit>
        <trans-unit id="09460ffce0d51fde96f8b9a233ddfa4298928f1b" translate="yes" xml:space="preserve">
          <source>Channel from which Chef Habitat-specific packages (e.g., &lt;code&gt;core/hab-sup&lt;/code&gt;, &lt;code&gt;core/hab-launcher&lt;/code&gt;, etc.) are downloaded on-demand when first called. Generally of use only for those developing Chef Habitat. Only applies to Chef Habitat-specific packages, and nothing else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46905cd8848cb886a4ab1e7167e3973bf0c34e3d" translate="yes" xml:space="preserve">
          <source>Channel the token setting through the veil secrets library because the token is considered a secret, and cannot appear in &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a058878f6368dac656ad2f61042993adec978d" translate="yes" xml:space="preserve">
          <source>Character separator used to delineate nesting in &amp;ndash;attribute filters. For example, to use a colon as the delimiter, specify &lt;code&gt;-S:&lt;/code&gt; in your &lt;code&gt;knife node show&lt;/code&gt; subcommand. Default is &lt;code&gt;.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3713e0e0b2765a08001938b5d936930d557718" translate="yes" xml:space="preserve">
          <source>Check Attributes of All Management Groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0c937705783449ac0caf7b653d13de1fd94827" translate="yes" xml:space="preserve">
          <source>Check Conditions</source>
          <target state="translated">Условия проверки</target>
        </trans-unit>
        <trans-unit id="778cd86092a348c3367b671ac2f00c63c8f9dbb1" translate="yes" xml:space="preserve">
          <source>Check DB Subnet Group Name of a subnet group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f03ea955273bd2bfc584b16c9560de8c2ad9db" translate="yes" xml:space="preserve">
          <source>Check HA Status</source>
          <target state="translated">Проверить статус HA</target>
        </trans-unit>
        <trans-unit id="97d5a2af56bcb65f5a68d8c3557f65d6600a4fff" translate="yes" xml:space="preserve">
          <source>Check Key Vaults are present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412360baa9bbf36e83dcca88688f16b9781b6a19" translate="yes" xml:space="preserve">
          <source>Check Keys within a Vault</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a2d6ae0df630ce844c5725bea3f38c78f5a6d3" translate="yes" xml:space="preserve">
          <source>Check Load balancers are present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc0c7626ca1ae50d98a5b0ed98e5912c8c6b486" translate="yes" xml:space="preserve">
          <source>Check MySQL Databases are present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3a2bb9f062395b2eed16744c08016872c35565" translate="yes" xml:space="preserve">
          <source>Check Network interfaces are present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f0472244aacc6e9023e7cee1b1a6a78f9c7021" translate="yes" xml:space="preserve">
          <source>Check PostgreSQL Databases are present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0919449c63f0d8c5d3d1115ab0d62678f16cea" translate="yes" xml:space="preserve">
          <source>Check SQL Databases are present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7cc3c84035bcfa313510f22b76c07baab434f36" translate="yes" xml:space="preserve">
          <source>Check SQL Servers are present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b996c004d9ba5428f2ab28a3ec4d85f46bd4c6" translate="yes" xml:space="preserve">
          <source>Check Users are present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944cf019439bb82d498c238266ec6ea193de6780" translate="yes" xml:space="preserve">
          <source>Check a Disk exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05622c67eff170d1111612944017f1a0db4672d5" translate="yes" xml:space="preserve">
          <source>Check a filter has the correct pattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2d40139fdcd2d02dcfd15796b50408bd398dca" translate="yes" xml:space="preserve">
          <source>Check a role does not have certain permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680b84bdf000988c48dfe8de22336335a0395488" translate="yes" xml:space="preserve">
          <source>Check a role has the correct permissions are present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd2ef26ced288135f17f87d47dcfaeac8d57fc4" translate="yes" xml:space="preserve">
          <source>Check all partitions that have type of &amp;lsquo;nfs&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb56d8c5eed240a5922e543dca2684d068814e3" translate="yes" xml:space="preserve">
          <source>Check an endpoint exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1f56f67a286762e0c18dca6e606c5c4a4028ff" translate="yes" xml:space="preserve">
          <source>Check availability zone of a subnet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0afc9b7ce588d1ce98c9b7aeb9cd9246a65172be" translate="yes" xml:space="preserve">
          <source>Check bucket&amp;rsquo;s ACL for correct grants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0acd27600d73e8321eba19e7ce48f07a5e4d92" translate="yes" xml:space="preserve">
          <source>Check for a Particular Region</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a37243ec0a0091d698d418d8cddd17b7a53641" translate="yes" xml:space="preserve">
          <source>Check for a Particular VPC ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75677e425a5fd9ff0451b355b66535109b2b2cdd" translate="yes" xml:space="preserve">
          <source>Check for a Resource Group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62abc82b070a50e338d23bcf1f9b01f5cce8df8" translate="yes" xml:space="preserve">
          <source>Check for a Security Center Policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f69df9cb37c032fbc741f5e6ea335a29d952a04" translate="yes" xml:space="preserve">
          <source>Check for an SSH key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1d1133b5d186b65c7ff76eddf7c58e7869bfc1" translate="yes" xml:space="preserve">
          <source>Check for core/httpd package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80733d1860aa29cc42ce65c8cf5e32707ae5923b" translate="yes" xml:space="preserve">
          <source>Check for core/httpd service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c43fe4dfc2f9f8099c2639abc3a802d6f0f94f" translate="yes" xml:space="preserve">
          <source>Check if Chef Automate server has enabled FIPS mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0844c7fd79334b4632743511be61980a4975d63" translate="yes" xml:space="preserve">
          <source>Check if a bucket appears to be exposed to the public</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce866a070fb998d08591cd7ed788bc06cb737c54" translate="yes" xml:space="preserve">
          <source>Check if a bucket has a bucket policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee88d1d48106ac1abe402a8a7d1ec2cda8c9d8f" translate="yes" xml:space="preserve">
          <source>Check if a bucket has a bucket policy that requires requests to use HTTPS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfe9d0515400bc004bd8f38da47a1ffd65690d8" translate="yes" xml:space="preserve">
          <source>Check if a kernel module is &amp;lsquo;blacklisted&amp;rsquo;/&amp;lsquo;disabled&amp;rsquo; via &amp;lsquo;bin_true&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835d556d84f2faaeb38f03f26762fc2131ef333d" translate="yes" xml:space="preserve">
          <source>Check if a kernel module is &lt;em&gt;not&lt;/em&gt; blacklisted and is loaded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0e9e6102fcd037cc8f59007dee45bdbc705f4d" translate="yes" xml:space="preserve">
          <source>Check if a kernel module is blacklisted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519a9d309c687aae54bed3d5dde3619d879c7e99" translate="yes" xml:space="preserve">
          <source>Check if a kernel module is disabled via &amp;lsquo;bin_false&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d736d002f4a4898bd88d81d9478b3cb84c826094" translate="yes" xml:space="preserve">
          <source>Check if a kernel module is not loaded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b4bc3841f12bc4dbf3844a7250e072a8b6edaa" translate="yes" xml:space="preserve">
          <source>Check if a partition is mounted at a point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36d3963c98e8c28d8cc824ef0e838615636d2c5" translate="yes" xml:space="preserve">
          <source>Check if a string matches a regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c2baba942832056b0bb21712cd57bfa61d6416" translate="yes" xml:space="preserve">
          <source>Check if queue is fifo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6906065736c8f2211d5066978aafceadf14f377" translate="yes" xml:space="preserve">
          <source>Check if the ORGANIZATION-validator.pem file exists in one of the following locations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092b4d0d65cd9e0b0b54371ee9d6e3242b5ba30d" translate="yes" xml:space="preserve">
          <source>Check if the correct region is set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa31a0eb61411fdca6b1b873e22a52e9e80b6e0" translate="yes" xml:space="preserve">
          <source>Check if the file referenced in the &lt;code&gt;client_key&lt;/code&gt; setting (usually USER.pem) exists. Some common locations include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ede8618bf9f6dbe47fadfde87c40535d522020" translate="yes" xml:space="preserve">
          <source>Check if the user has permission to the object type</source>
          <target state="translated">Проверьте,есть ли у пользователя разрешение на тип объекта.</target>
        </trans-unit>
        <trans-unit id="262b109ced5d3d0514b75f39c9915a384969ebfa" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;https://learn.chef.io/modules/detect-correct-kitchen#/&quot;&gt;Detect and correct with Test Kitchen&lt;/a&gt; on Learn Chef Rally for a hands-on look at how to use Test Kitchen to run Chef InSpec profiles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89b5ee261169638893468de89ec64523e5dbd85" translate="yes" xml:space="preserve">
          <source>Check out a repo from master. Set to &lt;code&gt;false&lt;/code&gt; when using the &lt;code&gt;checkout_branch&lt;/code&gt; attribute to prevent the &lt;strong&gt;git&lt;/strong&gt; resource from attempting to check out master from master. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Проверьте репо от мастера. Установите значение &lt;code&gt;false&lt;/code&gt; при использовании атрибута &lt;code&gt;checkout_branch&lt;/code&gt; , чтобы ресурс &lt;strong&gt;git не&lt;/strong&gt; пытался извлечь master из master. Значение по умолчанию: &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab30a222176970869f569a884883ca52f3c65cf0" translate="yes" xml:space="preserve">
          <source>Check out a repo from master. Set to &lt;code&gt;false&lt;/code&gt; when using the &lt;code&gt;checkout_branch&lt;/code&gt; attribute to prevent the git resource from attempting to check out &lt;code&gt;master&lt;/code&gt; from &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e0b53a6cc8730f742d4dfcb470573ecbd7fb12" translate="yes" xml:space="preserve">
          <source>Check out the project from Chef Automate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e08b198bfb1344f919399be15560d8f2b04cee" translate="yes" xml:space="preserve">
          <source>Check status: &lt;code&gt;git status&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90131fb7182a57306670e0785be6c3558520ff7a" translate="yes" xml:space="preserve">
          <source>Check tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95bcdf3dae4fe175c0008fdffa97d9db791a6be7" translate="yes" xml:space="preserve">
          <source>Check that a region is associated with the expected zone fully qualified name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3074f6ef79d373d07780250701c6d9406faf79" translate="yes" xml:space="preserve">
          <source>Check that a region is associated with the expected zone short name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fa82ece887b9ea6c27f59ea2d9fc14ea2e790a" translate="yes" xml:space="preserve">
          <source>Check that the account alias has not be set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fae52f56aedfc117eb18329f60be6395fe949d" translate="yes" xml:space="preserve">
          <source>Check that the code can be parsed and, if applicable, that it compiles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc953d7aa3caa8abc50ec794327a9148c9da0ef" translate="yes" xml:space="preserve">
          <source>Check that the credentials used to run the scan is correct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b39e13eae579065f82abbef2cfa5eb9ea52280b" translate="yes" xml:space="preserve">
          <source>Check that the crypto key primary is in &amp;ldquo;ENABLED&amp;rdquo; state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f99a534c36e4efa900732f958837b5a840fd71" translate="yes" xml:space="preserve">
          <source>Check that the crypto key purpose is as expected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0668091710390a39fae9c07d041a1fdbdbb1f6e" translate="yes" xml:space="preserve">
          <source>Check that the first data disk is of the correct size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792559729e9bee0b5793ba608f62eceed1122f10" translate="yes" xml:space="preserve">
          <source>Check that the identity provider endpoints are configured to accept &lt;code&gt;HTTP-Redirect&lt;/code&gt; from the service provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684ca3e5a15920660fab14e10f3c301dea50a154" translate="yes" xml:space="preserve">
          <source>Check that the identity provider is configured to use &lt;code&gt;HTTP-POST&lt;/code&gt; to connect to the endpoints of the service provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e6e62df5c99b8a7a43c1aaaebff71af916722a" translate="yes" xml:space="preserve">
          <source>Check that your &lt;code&gt;HAB_AUTH_TOKEN&lt;/code&gt; environment variable is properly set and initialized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806ef5e308825f114be7cd3a2fe26e9dde288102" translate="yes" xml:space="preserve">
          <source>Check the Home Region is correct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b05478b7051b1454fb50fae363e7ee87a07478" translate="yes" xml:space="preserve">
          <source>Check the KMS key used to encrypt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf165209f71fb2a176c138077a9afe79f05856a" translate="yes" xml:space="preserve">
          <source>Check the Log Group name of a Filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5083ee50bac406057010e05745d5dbb29ee5afc2" translate="yes" xml:space="preserve">
          <source>Check the Name of a SSM Parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f79329d5cd64cd8225524e8ae6271e9602cc92" translate="yes" xml:space="preserve">
          <source>Check the Policyfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15024e10dfe7162e3a33f0606b65b096aa0691f3" translate="yes" xml:space="preserve">
          <source>Check the Policyfile and apply it to our test nodes. Policies are a convenient strategy for managing nodes. Read &lt;a href=&quot;https://blog.jerryaldrichiii.com/chef_infra/2019/05/28/using-policyfile-cookbooks.html&quot;&gt;more about policies&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6995061741b62d457866bb88c0a258c54d64b118" translate="yes" xml:space="preserve">
          <source>Check the checkboxes needed and save the updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ccbb00bf86fe88ba145d8b2ae445c31374fe11" translate="yes" xml:space="preserve">
          <source>Check the health of the leader and repair if necessary. If the /var/log/chef-backend/leaderl/current logs do not show leadership changes and the &lt;code&gt;chef-backend-ctl cluster-status&lt;/code&gt; shows a solid etcd/pgsql leader, then you are good to continue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8163ac00cca429be43040ff67671671043f828" translate="yes" xml:space="preserve">
          <source>Check the local documentation or package repository for the distribution that is being used. For example, on Ubuntu 9.10-10.04, the &lt;code&gt;mkpasswd&lt;/code&gt; package is required and on Ubuntu 10.10+ the &lt;code&gt;whois&lt;/code&gt; package is required.</source>
          <target state="translated">Проверьте локальную документацию или репозиторий пакетов для используемого дистрибутива. Например, в Ubuntu 9.10-10.04 требуется пакет &lt;code&gt;mkpasswd&lt;/code&gt; , а в Ubuntu 10.10+ - пакет &lt;code&gt;whois&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7eff49d776d939983fa4c67574a94531c6cd82b1" translate="yes" xml:space="preserve">
          <source>Check the name of a Filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3bb5577a1c335ad160557bb1d464eb48becb91" translate="yes" xml:space="preserve">
          <source>Check the network routing configuration routing mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1670dbbfa2da362b33b1727817ee5af914693da" translate="yes" xml:space="preserve">
          <source>Check the number of available IP addresses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d04ff04878ec8aacaaccd109478deff253344d6" translate="yes" xml:space="preserve">
          <source>Check the owner id zone of the Transit Gateway</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83c7d5308ea2f6466160c5d89363b5733c18bdf" translate="yes" xml:space="preserve">
          <source>Check the partition mounted at /home contains &amp;lsquo;nosuid&amp;rsquo; in its mount_options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa5cb4d3cf340a25b845ef0baaf74e3eae473ca" translate="yes" xml:space="preserve">
          <source>Check the status of the cluster:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ad11beeddb95adc828cfb6a0871de325310fe5" translate="yes" xml:space="preserve">
          <source>Check the tags on buckets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b933a0250d8a341feac25819915d1aa33a7d435" translate="yes" xml:space="preserve">
          <source>Check to make sure &lt;code&gt;/var/opt/chef-backend&lt;/code&gt; was deleted by &lt;code&gt;chef-backend-ctl cleanse&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0e9010f897621cc842acc7fdd8ec02a7fc0a08" translate="yes" xml:space="preserve">
          <source>Check to see if a object appears to be exposed to the public</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ccde3b3ecd20b5a2d6b487f5786e335467e9ea" translate="yes" xml:space="preserve">
          <source>Check your combined certificate&amp;rsquo;s validity on the Chef Infra Server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1202c1fa20ab5bed9f71e9122e0108ad501bc2af" translate="yes" xml:space="preserve">
          <source>Check-in History</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0e839a5b8f9a96033c03f8e4ab66b930a000d0" translate="yes" xml:space="preserve">
          <source>Checked into your version control system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5b308b15fd9f505e12bcd73f4dbd9e527718a3" translate="yes" xml:space="preserve">
          <source>Checking if at least one condition passes with &lt;code&gt;describe.one&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edae5fc9e960d29620aa0b039fb8afc110e77953" translate="yes" xml:space="preserve">
          <source>Checking the Status Endpoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c027af8f605f449b4ce89fb2f3b9ff38c6a0815" translate="yes" xml:space="preserve">
          <source>Checks that Studio has the private origin key is available to sign the artifact</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d523ccd072376b0193b67d4fcd0a8b94a89cc93f" translate="yes" xml:space="preserve">
          <source>Checks to see if the Amazon EC2 node has MySQL</source>
          <target state="translated">Проверяет,есть ли на узле Amazon EC2 MySQL.</target>
        </trans-unit>
        <trans-unit id="46de8428aceba9e6f65b8b138ff5bea565618675" translate="yes" xml:space="preserve">
          <source>Chef</source>
          <target state="translated">Chef</target>
        </trans-unit>
        <trans-unit id="44933d6cd4c1712cb2d3b20d143ece643e46e2dd" translate="yes" xml:space="preserve">
          <source>Chef Analytics</source>
          <target state="translated">главный аналитик</target>
        </trans-unit>
        <trans-unit id="436b7b3b66db3a3773058029c5c1a412802d2bc4" translate="yes" xml:space="preserve">
          <source>Chef Analytics has been replaced by Chef Automate.</source>
          <target state="translated">На смену Chef Analytics пришел Chef Automate.</target>
        </trans-unit>
        <trans-unit id="40f419b13d197094e90be0d15449f34629a5a55b" translate="yes" xml:space="preserve">
          <source>Chef Analytics includes a powerful rules processing system that allows notifications to be generated based on observed events in the data stream, such as:</source>
          <target state="translated">Chef Analytics включает в себя мощную систему обработки правил,которая позволяет генерировать уведомления на основе наблюдаемых событий в потоке данных,например:</target>
        </trans-unit>
        <trans-unit id="2918d92c7e5bcfc8c157acb0d9cabf974257add0" translate="yes" xml:space="preserve">
          <source>Chef Analytics includes:</source>
          <target state="translated">Включая Chef Analytics:</target>
        </trans-unit>
        <trans-unit id="40c483e6a533947909d227b8fa179758e0e1653a" translate="yes" xml:space="preserve">
          <source>Chef Analytics uses the same RabbitMQ service that is configured on the Chef server. When the Chef Analytics server is configured as a standalone server, the default settings for &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; and &lt;code&gt;rabbitmq['vip']&lt;/code&gt; must be updated. When the Chef Analytics server is configured as a standalone server, change this value to &lt;code&gt;0.0.0.0&lt;/code&gt;.</source>
          <target state="translated">Chef Analytics использует ту же службу RabbitMQ, которая настроена на сервере Chef. Когда сервер Chef Analytics настроен как автономный сервер, необходимо &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; настройки по умолчанию для rabbitmq ['node_ip_address'] и &lt;code&gt;rabbitmq['vip']&lt;/code&gt; . Когда сервер Chef Analytics настроен как автономный сервер, измените это значение на &lt;code&gt;0.0.0.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8c6198591a2e2aab28d8f4935e2304f788f58a9" translate="yes" xml:space="preserve">
          <source>Chef Analytics uses the same RabbitMQ service that is configured on the Chef server. When the Chef Analytics server is configured as a standalone server, the default settings for &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; and &lt;code&gt;rabbitmq['vip']&lt;/code&gt; must be updated. When the Chef Analytics server is configured as a standalone server, change this value to the backend VIP address for the Chef server.</source>
          <target state="translated">Chef Analytics использует ту же службу RabbitMQ, которая настроена на сервере Chef. Когда сервер Chef Analytics настроен как автономный сервер, необходимо &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; настройки по умолчанию для rabbitmq ['node_ip_address'] и &lt;code&gt;rabbitmq['vip']&lt;/code&gt; . Когда сервер Chef Analytics настроен как автономный сервер, измените это значение на внутренний VIP-адрес сервера Chef.</target>
        </trans-unit>
        <trans-unit id="333ec7dd692cccd6558515d375cf6b4506e3bb36" translate="yes" xml:space="preserve">
          <source>Chef Analytics uses the same RabbitMQ service that is configured on the Chef server. When the Chef Analytics server is configured as a standalone server, the default settings for &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; and &lt;code&gt;rabbitmq['vip']&lt;/code&gt; must be updated. When the Chef Analytics server is configured as a standalone server, this value should be updated to be the backend VIP address for the Chef server.</source>
          <target state="translated">Chef Analytics использует ту же службу RabbitMQ, которая настроена на сервере Chef. Когда сервер Chef Analytics настроен как автономный сервер, необходимо &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; настройки по умолчанию для rabbitmq ['node_ip_address'] и &lt;code&gt;rabbitmq['vip']&lt;/code&gt; . Когда сервер Chef Analytics настроен как автономный сервер, это значение следует обновить, чтобы оно стало внутренним VIP-адресом сервера Chef.</target>
        </trans-unit>
        <trans-unit id="b5b786dc939c686bec7f850e17b65ad4ca135b14" translate="yes" xml:space="preserve">
          <source>Chef Automate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bcd82d5927ff51d6e0e142c8f3bbde2d9ceba0" translate="yes" xml:space="preserve">
          <source>Chef Automate - ServiceNow Integration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f28890ebb1877a373fccb0e473beb805523e20" translate="yes" xml:space="preserve">
          <source>Chef Automate 0.6 or later can use runners, and when setting up a project using &lt;code&gt;delivery setup&lt;/code&gt;, ChefDK v1.1.16 or later specifies the use of runners in the &lt;code&gt;./delivery/config.json&lt;/code&gt; file. If you are running an older version of ChefDK, or your &lt;code&gt;config.json&lt;/code&gt; was set up to use Push Jobs-based build nodes, you must edit the file in the following manner:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7952728fbabfdae708755b021c493c81ca32655c" translate="yes" xml:space="preserve">
          <source>Chef Automate 1 Version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842933fb0594f0605511f562fcad84196c1ecb0f" translate="yes" xml:space="preserve">
          <source>Chef Automate 2 License</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f468a8f7f23ffd8817ceaaa504c4ecf3ad6bc06f" translate="yes" xml:space="preserve">
          <source>Chef Automate 2 does not deploy Chef Manage alongside Chef Infra Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7472e444b8cf4d8d054d75ca6532346e2547f7a" translate="yes" xml:space="preserve">
          <source>Chef Automate 2 handles upgrades differently than Chef Automate 1 did. The &lt;a href=&quot;../install/index#upgrade&quot;&gt;Installation&lt;/a&gt; documentation and &lt;a href=&quot;../airgapped_installation/index#upgrade&quot;&gt;Airgapped Installation&lt;/a&gt; documentation provide further detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338e1f5737d68858c77dea52febd9a16c384db0f" translate="yes" xml:space="preserve">
          <source>Chef Automate 2 includes significant architectural and technical improvements to the core product platform. If you rely on any of the capabilities listed below, we recommend you continue to using your existing Chef Automate installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e307aaf10992b5b7f66feeb14cbc1cd4f8a74e26" translate="yes" xml:space="preserve">
          <source>Chef Automate 2 migrates only the LDAP configuration and local users (also referred to as &amp;ldquo;internal users&amp;rdquo;). SAML configuration is not migrated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fd73508b7c211f9e242b40ac3ab632e9452ce4" translate="yes" xml:space="preserve">
          <source>Chef Automate 2 requires the systemd init system. If you&amp;rsquo;re using Chef Automate 1 on an operating system that makes use of a different init system, we recommend consulting Customer Support for the appropriate migration strategy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7cf57458d1f9f3785a8ab66f818ca62c07b83d" translate="yes" xml:space="preserve">
          <source>Chef Automate 2 stores its data in directories named &lt;code&gt;/hab/svc/$service-name/data&lt;/code&gt;. In particular:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdb45f2d1d0082b2961c5e7ec0e4d15f9ab6c60" translate="yes" xml:space="preserve">
          <source>Chef Automate 2.0 uses &lt;code&gt;systemd&lt;/code&gt;. Log management is performed according to the configuration defined for the system service &lt;code&gt;journald&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9370649ef219c465158cedaf594e7f2fa41c52" translate="yes" xml:space="preserve">
          <source>Chef Automate API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415c57f51bd2b659b915d642dc5c43447b896a12" translate="yes" xml:space="preserve">
          <source>Chef Automate API token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae1ae36501a1f667eb4dfde432c6e9a94ecb171" translate="yes" xml:space="preserve">
          <source>Chef Automate API token. Example: &lt;code&gt;GR4_yqRNUtWFVgnVh57GQL9Hh9I=&lt;/code&gt;. Default is &lt;code&gt;&amp;lt;automate_token&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594884b2986cae5849270e55fd4059857fb1430f" translate="yes" xml:space="preserve">
          <source>Chef Automate Backups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2191b6cb60ec821a2807484f006dd866edc8b1" translate="yes" xml:space="preserve">
          <source>Chef Automate CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00a30d6b852d8bd9718f3bbb5d11e9f90cb92fc" translate="yes" xml:space="preserve">
          <source>Chef Automate Desktop Dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511e1a791dd698d127e57155b9abfd3651bd946f" translate="yes" xml:space="preserve">
          <source>Chef Automate Disaster Recovery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b77939865c22e80f7d4fe7f119cd32ca5d6c61" translate="yes" xml:space="preserve">
          <source>Chef Automate FQDN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bf07468a17f32717dddfaadb20664cc6ef1434" translate="yes" xml:space="preserve">
          <source>Chef Automate Identity and Access Management roles are named groups of actions used to define &lt;a href=&quot;../policies/index&quot;&gt;policies&lt;/a&gt;. Actions describe what is allowed by users in Automate. &lt;a href=&quot;../iam_actions/index&quot;&gt;IAM Actions&lt;/a&gt; describes the associated action or actions required to access certain pages in the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f158ba2d58b6ddb73a91b43a8e5f2b7d1ad0da2" translate="yes" xml:space="preserve">
          <source>Chef Automate Incident Creation Application in ServiceNow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a1ee56315b47c90325527232bb28eda251f000" translate="yes" xml:space="preserve">
          <source>Chef Automate Install Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75cd1dcb1d47ba308900abe6506c26af4e851a28" translate="yes" xml:space="preserve">
          <source>Chef Automate Job Runners</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832ebf2919e855c54046cfd88d97c3640f9d8708" translate="yes" xml:space="preserve">
          <source>Chef Automate Job Runners are supported on the Commercial Support platforms for Chef Automate Server listed above as well as on the following platforms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5899e9a53cfb8238593dc3e8d106b462dbb9720" translate="yes" xml:space="preserve">
          <source>Chef Automate Quickstart</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d7722b532cd94e7ddcc1a34b1391d95e0b5ea8" translate="yes" xml:space="preserve">
          <source>Chef Automate Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997f32a619c4f4c4c45ca069c3569f59621109c0" translate="yes" xml:space="preserve">
          <source>Chef Automate Server Tuning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4522985e3aeefc60f0f6c1b67d12ac8abdd458dc" translate="yes" xml:space="preserve">
          <source>Chef Automate accelerates the adoption of continuous delivery and encourages DevOps collaboration. It provides a proven, reproducible workflow for managing changes as they flow through the pipeline from a local workstation, through automated tests, and out into production.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b3b1e6315c533c37c31d135c9122c686bb6046" translate="yes" xml:space="preserve">
          <source>Chef Automate allows you to define the infrastructure that participates in each stage. How you map infrastructure environments to pipeline phases is controlled by the build cookbook. In other words, whether a given phase job distributes work to other infrastructure is up to you. There are many ways to map infrastructure environments to pipeline phases, but here are some possible approaches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9cf4556e68755b87254fd5c5b7a2c3393d3660f" translate="yes" xml:space="preserve">
          <source>Chef Automate also ships with policies that leverage these roles. Those Chef-managed policies are Viewers, Editors, Administrator, and Ingest. The custom policies are Compliance Viewers and Compliance Editors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6302f4f43b2d5058c29d6ecde1f27fd18fa56c1c" translate="yes" xml:space="preserve">
          <source>Chef Automate and Chef Habitat Builder require:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9db6e4e379337531eca2ea084e95365cad8563" translate="yes" xml:space="preserve">
          <source>Chef Automate and Chef Infra Server services will be unavailable while the software is updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405b096459b840057285d1e5691ad18a387228f4" translate="yes" xml:space="preserve">
          <source>Chef Automate assesses the status of Chef Habitat services based on the receipt of a health check message. Chef Automate marks a node as disconnected when it does not receive a health check message in a set amount of time. Use the &lt;code&gt;threshold&lt;/code&gt; configuration to set the amount of time between the last node health check message and when Chef Automate marks it as disconnected. Health checks are mandatory and you cannot disable health checks. The default time for a node to report to Chef Automate is 5 minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dec228a578b67482fd938db40cf04784b6deeaa" translate="yes" xml:space="preserve">
          <source>Chef Automate backup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07cf5cecb2c323ec53d4de79b753df8a8af2025a" translate="yes" xml:space="preserve">
          <source>Chef Automate can be configured to send a notification to the REST APIs exposed by the application. There are two REST APIs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab3f673f3dbd69777e8166d43d7860e6751255d" translate="yes" xml:space="preserve">
          <source>Chef Automate can be set up to deploy cookbooks and applications in an air-gapped environment and this section describes how to set up a basic cookbook to be delivered through Chef Automate using the &lt;a href=&quot;https://github.com/chef-cookbooks/delivery-truck&quot;&gt;delivery-truck cookbook&lt;/a&gt; in that environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf61d909a847fd844c04689a98fed18c6da6fde" translate="yes" xml:space="preserve">
          <source>Chef Automate can integrate with existing LDAP services to authenticate users in Chef Automate, and thus use their existing group memberships to determine their Chef Automate permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2e756d957e667a7a379edaeba9e780e9aabad5" translate="yes" xml:space="preserve">
          <source>Chef Automate can integrate with existing SAML services to authenticate users in Chef Automate, and thus use their existing group memberships to determine their Chef Automate permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc6cb61a8246f248013c25344bb4e6feecb63c7" translate="yes" xml:space="preserve">
          <source>Chef Automate comes with an &lt;em&gt;Admins&lt;/em&gt; team by default. Local users can be added directly to this team, which assigns admin permissions to users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93acb39f1304833e7da25ad58e6ebd5a1ba6f2f8" translate="yes" xml:space="preserve">
          <source>Chef Automate configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0d8c619b77067e827dcc04b54594e0e57a27dd" translate="yes" xml:space="preserve">
          <source>Chef Automate considers the instances of ephemeral nodes, which are nodes that are frequently created and destroyed, as new nodes by default, even if the node indefinitely uses the same name. Set Chef Automate to consider ephemeral nodes as manifestations of the same node by configuring the UUID on the client side. Configuring the UUID on the client side keeps the node associated with the same id, which makes Chef Automate consider it as the same node every time it recreates. In the node&amp;rsquo;s &lt;code&gt;client.rb&lt;/code&gt;, set &lt;code&gt;chef_guid&lt;/code&gt; to the &lt;em&gt;desired UUID&lt;/em&gt;. If the node already exists, check that it uses the correct UUID, otherwise it will appear as a new node the next time it recreates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ddf4ad07eb4f3b33ccb8f05bc4fe239da75a66" translate="yes" xml:space="preserve">
          <source>Chef Automate consists of &lt;a href=&quot;https://www.habitat.sh/&quot;&gt;Habitat&lt;/a&gt; packages installed from a release channel. The default channel is &lt;code&gt;current&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4caaa22758001a28abc1bff930a5d167fccb8e3e" translate="yes" xml:space="preserve">
          <source>Chef Automate creates customizable reports that identify compliance issues, security risks, and outdated software. You can write your own compliance rules in Chef InSpec, or you can get started quickly by using built-in profiles, which are predefined rule sets for a variety of security frameworks, such as Center for Internet Security (CIS) benchmarks, included as part of Chef Automate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154f79f75f8bb637869d1e152a5662d15c8d2160" translate="yes" xml:space="preserve">
          <source>Chef Automate currently only supports a subset of existing SAML communication schemes. To ensure this works with your IdP, please ensure these configuration options are set up:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525a28edcf5d128490066e9f5634373254d93ca0" translate="yes" xml:space="preserve">
          <source>Chef Automate detects your nodes immediately after any update to the Node Manager, keeping a current view of your nodes' reachability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54b412c6faa312debc7f27c307ac18ec4da27d3" translate="yes" xml:space="preserve">
          <source>Chef Automate disables disk writes if available disk space drops below 250 MB and logs a message similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d93b862adb0b5fb467d24dac272418cac9cfc76" translate="yes" xml:space="preserve">
          <source>Chef Automate emits a warning when the available disk space on the system drops below 1 GB, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a694bb5feadb1179395cecfd47d60b11166bdfe7" translate="yes" xml:space="preserve">
          <source>Chef Automate ensures that only one change is active in each of the Union, Rehearsal, and Delivered stages at any one time. This orchestration increases safety by encouraging small batch change. In complex systems, identifying root causes of issues in the context of a single change is much easier than trying to analyze larger batches of changes across many different projects. In the future, Chef Automate&amp;rsquo;s dependency management features will be enhanced to include all concurrent deploys in Union, Rehearsal, and Delivered, as long as they map to completely unrelated dependency sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5637123b7a1cc54d9ee4dc58cb1b502d28c78df" translate="yes" xml:space="preserve">
          <source>Chef Automate first needs to establish a TCP connection to your LDAP service, secured by TLS. It will connect to the host configured in your TOML configuration, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e725241d0942631debdb5404d48cbf621e67252e" translate="yes" xml:space="preserve">
          <source>Chef Automate for Microsoft Azure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9904a57ddd60f9f169fe977e158fee14be04c251" translate="yes" xml:space="preserve">
          <source>Chef Automate gives you a data warehouse that accepts input from Chef Server, Chef Habitat, and Chef Automate workflow and compliance. It provides views into operational and workflow events. There is a query language available through the UI and customizable dashboards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab7a8684070e15a1c510bd986399192e3bc7971" translate="yes" xml:space="preserve">
          <source>Chef Automate gives you a full-stack continuous compliance and security, as well as visibility into your applications and infrastructure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff3a611554b0b30c7fe10a8e4b67fd7ecfb6199" translate="yes" xml:space="preserve">
          <source>Chef Automate handles many types of software systems. Use it to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2b832b45be4b520dcaa60e72490dbf5b7527b0" translate="yes" xml:space="preserve">
          <source>Chef Automate has a standard users and roles permissions scheme. Roles are sets of permissions defined by Chef Automate. Users can be assigned multiple roles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3b12837b4df7816a782c0ccc43c4e0c3b27225" translate="yes" xml:space="preserve">
          <source>Chef Automate iam commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b95daa59b38423d48630bc073f6221f68f54a34" translate="yes" xml:space="preserve">
          <source>Chef Automate includes a high-availability Chef Infra Server with fault tolerance, immediately consistent search results, and accurate real-time data about your infrastructure. Chef Automate also provides a graphical management console for the Chef Infra Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5512f7def02c4abfa129a0eb5288c46644708f7" translate="yes" xml:space="preserve">
          <source>Chef Automate includes five &lt;em&gt;Chef-managed&lt;/em&gt; roles and two &lt;em&gt;Custom&lt;/em&gt; roles by default. You can edit these Custom roles, &lt;em&gt;Compliance Viewer&lt;/em&gt; and &lt;em&gt;Compliance Editor&lt;/em&gt;. To see the actions comprising the roles, see &lt;a href=&quot;../iam_actions/index&quot;&gt;IAM Actions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e17f0863f892abaf9b15f0d620bb71756933a2f" translate="yes" xml:space="preserve">
          <source>Chef Automate infrastructure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162bf83faf6f6ececc3b6cfcad00cda5a9cb6648" translate="yes" xml:space="preserve">
          <source>Chef Automate license management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bceca1ddbf547bcf523854d204297b964c85efa" translate="yes" xml:space="preserve">
          <source>Chef Automate limits you to 300 projects. See &lt;a href=&quot;../iam_v2_guide/index#configuring-project-limit&quot;&gt;Configuring Project Limit&lt;/a&gt; for configuration instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e53dcfa89199193da6c50b1c2e18445fc25b2d" translate="yes" xml:space="preserve">
          <source>Chef Automate maintenance mode keeps all services running but rejects new connections at the load balancer so that maintenance operations can be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b582c7b21e63a6db29a756e92b9e79caa3a2a0" translate="yes" xml:space="preserve">
          <source>Chef Automate makes a SAML request to the Identity Provider with the NameIdPolicy Format of &lt;code&gt;`urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress&lt;/code&gt;`. Your Identity Provider must support NameIds in this format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79623493835f31f4a251b61088c21e7869f3d5b" translate="yes" xml:space="preserve">
          <source>Chef Automate must be able to access the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc58eb06840bc5afbe7de5f6f431988077c9b1f8" translate="yes" xml:space="preserve">
          <source>Chef Automate notifications uses webhooks to send alerts for failures of Chef Infra Client runs and InSpec compliance scans. You can send notifications to Slack channels, Slack users, or any other service that supports webhook integrations. Notifications are sent for all failures. To ignore a failure, set the &lt;code&gt;ignore_failure&lt;/code&gt; attribute to &lt;code&gt;true&lt;/code&gt; on the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08708158b633978fda9762e5ee6b77e51bfba32b" translate="yes" xml:space="preserve">
          <source>Chef Automate provides a full suite of enterprise capabilities for node visibility and compliance. Chef Automate integrates with the open-source products Chef Infra Client, Chef InSpec and Chef Habitat. Chef Automate comes with comprehensive 24x7 support services for the entire platform, including open source components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40d97a003db61cc46ff9a3102ee645fe2e9afcf" translate="yes" xml:space="preserve">
          <source>Chef Automate provides tools for creating, managing and restoring backup archives and Elasticsearch snapshots of your Chef Automate data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394301467da2487aad0586c950b408f8c1d21c48" translate="yes" xml:space="preserve">
          <source>Chef Automate relies on git and uses its lightweight feature branches as the mechanism for handling changes before they merge, as well as its ability to perform merges automatically. Each pipeline has a designated target branch into which it will merge approved changes. Chef Automate uses a &amp;ldquo;gated master&amp;rdquo; model that manages merges to the target branch. (In preparation for using Chef Automate, it is helpful if team members understand how to use feature branches.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f254870645f528dae35f5e9ea45d3b3d943b130b" translate="yes" xml:space="preserve">
          <source>Chef Automate requires</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1e883ce0fc41024a4ba5cea7927da87163a03f" translate="yes" xml:space="preserve">
          <source>Chef Automate requires a minimum of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b23a66b57c0d7131cc62f8c09d994824b7461a3" translate="yes" xml:space="preserve">
          <source>Chef Automate requires either the latest version of &lt;a href=&quot;https://downloads.chef.io/chefdk/3.7.23&quot;&gt;ChefDK&lt;/a&gt;, which includes the &lt;code&gt;delivery-cli&lt;/code&gt; that supports Workflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4b737be0e908aebebe247ac41b125caf15f4c7" translate="yes" xml:space="preserve">
          <source>Chef Automate server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e915a0c0fff3f1cf419a1c8ee185ffd806bd9956" translate="yes" xml:space="preserve">
          <source>Chef Automate server URL. Example: &lt;code&gt;https://automate.example.com/data-collector/v0/&lt;/code&gt;. Default is &lt;code&gt;https://&amp;lt;automate_url&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47843790bc7096316cbee251ba2c74b217d400c7" translate="yes" xml:space="preserve">
          <source>Chef Automate shared object integrity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8551b9aae3a92b7d8bd39680ddbf34d2770b00" translate="yes" xml:space="preserve">
          <source>Chef Automate signs the ID token given to the management console following successful SAML authentication. To do that, a private signing key needs to be provided. An alternate location can be configured in &lt;code&gt;/etc/delivery/delivery.rb&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ac41ab17f46a484e942d114f08b08eb3268c5a" translate="yes" xml:space="preserve">
          <source>Chef Automate stores data from the &lt;code&gt;ingest-service&lt;/code&gt;, &lt;code&gt;event-feed-service&lt;/code&gt;, &lt;code&gt;compliance-service&lt;/code&gt; and &lt;code&gt;applications-service&lt;/code&gt; in Elasticsearch or PostgreSQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b83ec7500eaa1649ee830629f6de9db713c1ff3" translate="yes" xml:space="preserve">
          <source>Chef Automate stores information about the user&amp;rsquo;s session in browser local storage as well as a browser cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd0677b9cea2946f0a35436aaeb62f59d2cc39f" translate="yes" xml:space="preserve">
          <source>Chef Automate supports defining permissions for LDAP users and their groups. See &lt;a href=&quot;../iam_v2_overview/index#members-and-policies&quot;&gt;IAM members and policies&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7df7f03e64c899ec64b20bb289385d7c5dc38d" translate="yes" xml:space="preserve">
          <source>Chef Automate supports the current browser versions for Chrome, Edge, and Firefox. Chef Automate does not support other browsers and may not be compatible with older browser versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69dbe62a7c05de605f114ca3213e18d7c3c47b9" translate="yes" xml:space="preserve">
          <source>Chef Automate supports three different types of users: local users, &lt;a href=&quot;../ldap/index&quot;&gt;LDAP users&lt;/a&gt;, and &lt;a href=&quot;../saml/index&quot;&gt;SAML users&lt;/a&gt;. Manage local users from the &lt;strong&gt;Settings&lt;/strong&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb21ece7a64f7fda18bfd9c5cae61ecb21648363" translate="yes" xml:space="preserve">
          <source>Chef Automate supports using SAML to authenticate users and apply permissions to SAML groups. See &lt;a href=&quot;../iam_v2_overview/index&quot;&gt;IAM Overview&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d6bbcffb9f7fd9c390703a38bade0beb496e30" translate="yes" xml:space="preserve">
          <source>Chef Automate supports using both local users and externally managed users from an external identity provider (IdP). Both &lt;em&gt;one&lt;/em&gt; LDAP service (or MSAD for simplified configuration of Active Directory setups) and &lt;em&gt;one&lt;/em&gt; SAML IdP can be used. You do not need to configure an external IdP if you simply want to create users and teams local to Chef Automate. See the &lt;a href=&quot;../users/index&quot;&gt;Users&lt;/a&gt; documentation for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d56452ad361fa4d8e3f70240db3341c85c978c3" translate="yes" xml:space="preserve">
          <source>Chef Automate then authenticates with (or &amp;ldquo;binds to&amp;rdquo;) the LDAP service using &lt;em&gt;bind credentials&lt;/em&gt;. In your configuration TOML file, these would be (for example):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77593c17f549c2d478fc9e9bd00f569568cd4ff4" translate="yes" xml:space="preserve">
          <source>Chef Automate user for the installed profile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33aea83e418170f32c2f15a4339cf48952a16f76" translate="yes" xml:space="preserve">
          <source>Chef Automate uses &lt;a href=&quot;https://github.com/dexidp/dex&quot;&gt;Dex&lt;/a&gt; to support LDAP integrations. To configure authentication for your Chef Automate installation, create a TOML file that contains the partial LDAP configuration. Then run &lt;code&gt;chef-automate config patch &amp;lt;/path/to/your-file.toml&amp;gt;&lt;/code&gt; to deploy your change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7715feb9fe3d8d9a9bd2f176f00563966d26e96c" translate="yes" xml:space="preserve">
          <source>Chef Automate uses &lt;a href=&quot;https://github.com/dexidp/dex&quot;&gt;Dex&lt;/a&gt; to support SAML integrations. To configure authentication for your Chef Automate installation, create a TOML file that contains the partial SAML configuration. Then run &lt;code&gt;chef-automate config patch &amp;lt;/path/to/your-file.toml&amp;gt;&lt;/code&gt; to deploy your change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd097e864dd7478b06da1dd4427b2c6a43ec862a" translate="yes" xml:space="preserve">
          <source>Chef Automate uses Azure&amp;rsquo;s RunCommand functionality to run scan jobs on instances without needing &lt;code&gt;ssh&lt;/code&gt; and &lt;code&gt;WinRM&lt;/code&gt; credentials. In order for this functionality to work, the Automate instance must be reachable (open to incoming traffic) from the instances being scanned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49164dbeb132e639f2460cbca0d0d5156adbd724" translate="yes" xml:space="preserve">
          <source>Chef Automate uses Chef Infra Client to run recipes for each phase in a build pipeline. The phases are grouped into different stages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ff903d8135013dfee68d37fa36b302458e1e07" translate="yes" xml:space="preserve">
          <source>Chef Automate uses Elasticsearch to store its data, and the default Chef Automate install includes a single Elasticsearch service. This is sufficient to run production workloads; however, for greater data retention, we recommend using a multi-node Elasticsearch cluster with replication and sharding to store and protect your data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14889412b301d254dd41e17b920e31314a075732" translate="yes" xml:space="preserve">
          <source>Chef Automate uses TLS mutual authentication to communicate with its PostgreSQL database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5738a3fe586b0fc9e5f7cc242051158cf2784d89" translate="yes" xml:space="preserve">
          <source>Chef Automate uses projects to organize work across multiple teams. You can create as many projects as you need. A common approach is to have one project for each major component of the system. Each project has its own git repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2551ae2aef647a2ca2b2c3b6c476f1261e2b3efb" translate="yes" xml:space="preserve">
          <source>Chef Automate uses projects to organize work across multiple teams. You can create as many projects as you need. A common approach is to have one project for each major component of your system. Each project has its own git repository. (Chef Automate includes a git server for hosting project repositories. It is also possible to integrate with GitHub and GitHub Enterprise for the git-related aspects of the workflow.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39893c986822d5349740163e49129ee4c2ee2b89" translate="yes" xml:space="preserve">
          <source>Chef Automate uses the Chef Infra Client to run recipes for each phase in a build pipeline. The phases are grouped into different stages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37490331339e082c61f316eec534fdf5adee566" translate="yes" xml:space="preserve">
          <source>Chef Automate version to create an airgap bundle for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737ab4734749ebdd246e3aa25882231ab073a0c3" translate="yes" xml:space="preserve">
          <source>Chef Automate versions 1.0.0-1.8.96 reached end-of-life on December 31, 2019 and are no longer supported. For more information and for help upgrading your system, please contact your Chef account representative. The current Chef Automate versions includes significant architectural and technical improvements to the core product platform. This guide shows you how to migrate your existing Chef Automate installation to the current Chef Automate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d58a6abcc5e32b7e48514d45acd7ad8b33d9e1" translate="yes" xml:space="preserve">
          <source>Chef Automate will not deploy the Chef Infra Server add-ons Chef Manage and Push Jobs Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969fc6286e146ce4b427e6cffea647cdc4f93046" translate="yes" xml:space="preserve">
          <source>Chef Automate with GitHub</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955034e8e12e0dc0385958084db7472089964165" translate="yes" xml:space="preserve">
          <source>Chef Automate with Internal git</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7221937497b3b549c5167deff249460f956573ef" translate="yes" xml:space="preserve">
          <source>Chef Automate&amp;rsquo;s Compliance and Infrastructure observability features require additional computing and memory capacity. Larger scale systems (15,000+ services) consume significant CPU resources for processing applications data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dd80c369883c486c3f7943201d6bd361e70466" translate="yes" xml:space="preserve">
          <source>Chef Automate&amp;rsquo;s Identity and Access Management (IAM) allows direct management of policy members from Chef Automate in the browser. IAM supports the projects feature, which allow for filtering and segregation of your data amongst your user base. IAM policies allow you to use multiple permissions, distinguish policy membership from policy definition for fine-grained control, and include roles for role-based access control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac801ba12cd34f86bb619ef970d9beb3cd662ce" translate="yes" xml:space="preserve">
          <source>Chef Automate&amp;rsquo;s Node Manager calls out to the AWS &lt;code&gt;DescribeInstanceStatus&lt;/code&gt; API every two hours and discovers the state of all the instances in the account. If the node manager finds any instances that aren&amp;rsquo;t in its database, it adds them. This sometimes results in &amp;ldquo;bare bones info&amp;rdquo; and stopped instances in the database. The node manager updates node information in the database after an instance returns to a running state and a scan job has run on the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913c6b892a1c89e96f764a397fe319a317546171" translate="yes" xml:space="preserve">
          <source>Chef Automate&amp;rsquo;s Node Manager discovers EC2 instances using polling and scan jobs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bf624afdf8ea00a1c269e4e896a34eb0b874fa" translate="yes" xml:space="preserve">
          <source>Chef Automate&amp;rsquo;s TLS certificate file is located at &lt;code&gt;/hab/svc/automate-load-balancer/data/&amp;lt;servername&amp;gt;.cert&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29aa2c0eeb97e0036666aa4b179f127904eff57f" translate="yes" xml:space="preserve">
          <source>Chef Automate&amp;rsquo;s workflow engine automatically creates phase jobs as project code is promoted through the phases of a workflow pipeline. These phase jobs are dispatched to special nodes, called runners, that automatically execute each job as it is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f9391645cd543b2402bd16b89e554e3823e326" translate="yes" xml:space="preserve">
          <source>Chef Automate, current version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d897bf299cc0f3676398e527052a2e6750e514" translate="yes" xml:space="preserve">
          <source>Chef Backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9e399d9ea9c1661c87791d9b021afbba9f1b6b" translate="yes" xml:space="preserve">
          <source>Chef Backend (HA)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ddb0e35591c16c6d082d798a6f8031ebc6d060" translate="yes" xml:space="preserve">
          <source>Chef Backend 1.x to 2.x Upgrade</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364a21adc8bcd50b0805be20e490671c94c0848d" translate="yes" xml:space="preserve">
          <source>Chef Backend : 0.8.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92bc3d878c35852f5e6f9350eb7f7bdf8f0d7250" translate="yes" xml:space="preserve">
          <source>Chef Backend Failure Recovery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882a1cf0d93f2623e55310edadda39f3e2e5df98" translate="yes" xml:space="preserve">
          <source>Chef Backend Upgrade</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cfefc37a7f88eea2328acc297f71f3ccff553d" translate="yes" xml:space="preserve">
          <source>Chef Bootstrap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7605a1a1a9d672971575a369a0aa4fa3f8f865" translate="yes" xml:space="preserve">
          <source>Chef CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221ca1b3b7a646460e782b594e6392110c770baf" translate="yes" xml:space="preserve">
          <source>Chef Client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4351fd5354a1dc30be9f6f62d65e5f39263c8b7" translate="yes" xml:space="preserve">
          <source>Chef Community Slack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b241cf47f6b7ee690b9c14bde85e8f2dd9cd1e9" translate="yes" xml:space="preserve">
          <source>Chef Community Slack at &lt;a href=&quot;http://community-slack.chef.io/&quot;&gt;http://community-slack.chef.io/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceed78ccb462271c75d77f3eb73f26752dbf922f" translate="yes" xml:space="preserve">
          <source>Chef Compliance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4747c13457badda83c5443fb26f7fbf1fad6c8f" translate="yes" xml:space="preserve">
          <source>Chef Compliance Environment Set-up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97326f799d00c39ca26bbac6b10bd9de50c853ea" translate="yes" xml:space="preserve">
          <source>Chef Compliance Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e72f21dd492f4d91c2ce86d02598dc9cab53ab" translate="yes" xml:space="preserve">
          <source>Chef Compliance Remediation is a &lt;strong&gt;write&lt;/strong&gt; action and requires two components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63bd6f6e89c675027d81f33f20204800832f4d21" translate="yes" xml:space="preserve">
          <source>Chef Compliance Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350e657d633c0efb709c7dfdee2177afc2a28ea7" translate="yes" xml:space="preserve">
          <source>Chef Compliance Server, which reached EOL status in 2018, should not be confused with the modern &lt;a href=&quot;../compliance/index&quot;&gt;Chef Compliance offering&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c98abacb99724d67d1f9f9fcf28a07943d5bd47" translate="yes" xml:space="preserve">
          <source>Chef Compliance Server, which reached EOL status in 2018, should not be confused with the modern &lt;a href=&quot;compliance/index&quot;&gt;Chef Compliance offering&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042b46547ea179ee179fbb4d46ae968315308813" translate="yes" xml:space="preserve">
          <source>Chef Compliance has two offerings: Audit and Remediation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4daaf8b4e07e0271ce96c1335438e54f7fba8e73" translate="yes" xml:space="preserve">
          <source>Chef Compliance helps organizations articulate their security and compliance posture to customers in a world of data breaches and new regimes like GDPR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c374bc187cc68be44226f8527ccd6cdeaba681" translate="yes" xml:space="preserve">
          <source>Chef Compliance helps organizations stand up compliant infrastructure in minutes, letting you spend more time adding value for your customers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f66877355d0ad25f77c8407fbff5636f241375b" translate="yes" xml:space="preserve">
          <source>Chef Compliance is continuous compliance; it helps organizations stand up and maintain compliant infrastructure. It provides a unified and easy-to-use pattern that leverages Chef Software products and content together, which allows customers to define and establish a baseline for their compliance posture, and mitigate areas of concern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f878404123a93c2e7337ed1321a5543805c35cb7" translate="yes" xml:space="preserve">
          <source>Chef Compliance leverages our premium audit and remediation content built from the latest CIS benchmarks and DISA STIGs. You can use these as the foundation for defining your organization&amp;rsquo;s baseline compliance profile, including with any waivers or remediation for specific controls in that benchmark, and then you solidify that into a single, policy-based artifact that you can deploy across your fleet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf55456d8829e07886d72017dfadb50bebb2d502" translate="yes" xml:space="preserve">
          <source>Chef Compliance leverages the Effortless Infrastructure Suite to combine Chef Infra, Chef InSpec, and Chef Habitat to create and release an already-hardened artifact to your fleet. This pattern makes maintaining compliance easier and shortens the audit cycle for organizations by codifying it; it shifts compliance left in the SDLC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc40d2917ac746f29cdd619d5a5d00129f32507f" translate="yes" xml:space="preserve">
          <source>Chef Compliance uses premium Chef content to audit and harden your fleet for &lt;a href=&quot;https://www.cisecurity.org/&quot;&gt;CIS&lt;/a&gt;. Chef Compliance uses a combination of Effortless Audit and a customized Effortless Remediation package, and gives you the ability to turn controls on and off with a single YAML configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01a3becd8c5134363fdb164939f7c21c1f0c14d" translate="yes" xml:space="preserve">
          <source>Chef Components</source>
          <target state="translated">Компоненты от шеф-повара</target>
        </trans-unit>
        <trans-unit id="4c6f607de3063690b36a270926c61175545c080f" translate="yes" xml:space="preserve">
          <source>Chef Contributor Covenant Code of Conduct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7a9a2ec56f39e273baef665314a1cab40e99df" translate="yes" xml:space="preserve">
          <source>Chef Cookbook - Third Edition [Packt Publishing]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9267fb56b115ba895d54d66eeb0322dd48dcf4c3" translate="yes" xml:space="preserve">
          <source>Chef DK and Windows</source>
          <target state="translated">Главная ДК и Windows</target>
        </trans-unit>
        <trans-unit id="2839204491e250d6a547cc53c919302ccd1d772b" translate="yes" xml:space="preserve">
          <source>Chef Deprecation Warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eec287d213dd541dd5b22750ac1e847aa58ab29" translate="yes" xml:space="preserve">
          <source>Chef Desktop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e026672a5ae1d71e9080ddc7d6a696197ba8465" translate="yes" xml:space="preserve">
          <source>Chef Desktop Cookbook Development Environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750b3c7f0e052f246e38a3144b825ae5ab91e906" translate="yes" xml:space="preserve">
          <source>Chef Desktop Cookbook Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7df7892831cfdaf9d40efb00b27ac09e15627f" translate="yes" xml:space="preserve">
          <source>Chef Desktop Development Environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172a7201a7764d1e850bee69cf65b98c4065a920" translate="yes" xml:space="preserve">
          <source>Chef Desktop Requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc563c7e70e211bd302f63b628611202df931654" translate="yes" xml:space="preserve">
          <source>Chef Desktop comes with a large number of options for configuring your Windows and Mac desktops. Look through the &lt;code&gt;mac.rb&lt;/code&gt; and &lt;code&gt;windows.rb&lt;/code&gt; files to explore what settings you want to turn on for your testing and evaluation. For those resources you do not want to explore yet, set their action to &amp;lsquo;:nothing&amp;rsquo;. See the &lt;a href=&quot;../desktop-cookbook/index&quot;&gt;Chef Desktop cookbook documentation&lt;/a&gt; for more information about settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc1e7533170da0746c481dd6d50d39255293237" translate="yes" xml:space="preserve">
          <source>Chef Desktop is a deployment pattern that automates desktop and laptop management with code. Use Chef curated Desktop content with YAML support to define profiles for your devices, audit the profiles with Chef curated Desktop CIS profiles before deploying them with Chef Infra, and gain continuous visibility into the configuration status of your fleet in Chef Automate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8179634bd55dbbe4cba5b9a73fd4f8551a4c16" translate="yes" xml:space="preserve">
          <source>Chef Desktop provides a cookbook with YAML settings that covers the most common (and some less common) device configuration needs. Of course, we continue to support and improve our classic Ruby cookbook customizations for when you need to go beyond the ordinary. The Chef Desktop pattern sets you up to manage applications with a CDN, so even when one thousand devices in your fleet means managing ten thousand applications, your Windows and macOS users can still access them through a unified catalog. Chef Desktop uses Chef Software&amp;rsquo;s leading tools, providing observability, compliance reporting, and an audit trail as part of the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15bb2dfdb7af85e6f6d2f473286f3077b2a6c8b" translate="yes" xml:space="preserve">
          <source>Chef Desktop utilizes the following system architecture:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee1efb603f0d53d77004d1ba0ae0cefea04e368" translate="yes" xml:space="preserve">
          <source>Chef Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb36e81b018a87a66dc06faf905f6a7818a0c29" translate="yes" xml:space="preserve">
          <source>Chef EAS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834b64d818cf43a18e9e31437ee86367fe2a1ca0" translate="yes" xml:space="preserve">
          <source>Chef EAS Application Management with Chef Habitat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641f155a200d97a18b9518949b7944e28eb9ec4a" translate="yes" xml:space="preserve">
          <source>Chef EAS includes the following Chef solutions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcfb5c1e6bb2e5d6e37fd36a94d7ba319efe56b" translate="yes" xml:space="preserve">
          <source>Chef EULA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f069da308ed8059acc2c33c8a55028c61fa0eef0" translate="yes" xml:space="preserve">
          <source>Chef End-of-Life Date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7499b8802dda72c8f4454828ac6ba3f7340e0b" translate="yes" xml:space="preserve">
          <source>Chef Enterprise Application Stack with Chef Automate + Chef Habitat can scale up to 15,000 services on a system using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1424aec1138d5af772c843b24e4aeeec0313e455" translate="yes" xml:space="preserve">
          <source>Chef HA Backend Leader Connection Pool Settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c0ff491c3c8c433868940462b28bf96d3e887d" translate="yes" xml:space="preserve">
          <source>Chef HA Backend Leader Health Status Settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13097554419c665ccebec5887f4c4730f4848a1d" translate="yes" xml:space="preserve">
          <source>Chef HA Backend Leader Management Service Settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0f47432f46ead7d308ef46c76ad1cb8eee4dfc" translate="yes" xml:space="preserve">
          <source>Chef Habitat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96ecece96f6a64b437095941664381047ca58ca" translate="yes" xml:space="preserve">
          <source>Chef Habitat &amp;gt;= 0.80</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51f5b3d14351e3bed6c1f534062dec6508d21ef" translate="yes" xml:space="preserve">
          <source>Chef Habitat Architecture Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7139cb4ad68e08acf31bd22e1f7678efb455f3e" translate="yes" xml:space="preserve">
          <source>Chef Habitat Artifacts&amp;ndash;&lt;code&gt;.hart&lt;/code&gt; files&amp;ndash;can be exported in a number of different formats depending on what you need and where you need it. This is powerful because you can use the same immutable Chef Habitat artifact by exporting it into a format that you need for a specific job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebd1a8dd4d834126b027e8d0ccd5028b8c45ffc" translate="yes" xml:space="preserve">
          <source>Chef Habitat Best Practices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a4ec7f315b4bfe3747b7194881755ef25c6ee3" translate="yes" xml:space="preserve">
          <source>Chef Habitat Builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e196491944713bdd130c8efb1d86f3578f0834bf" translate="yes" xml:space="preserve">
          <source>Chef Habitat Builder Architecture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19dd669dd9025cc8d13e5428268659875813dd68" translate="yes" xml:space="preserve">
          <source>Chef Habitat Builder Enterprise Components Include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dce905e38a60e35cb90e470237b2d7f59a61aea" translate="yes" xml:space="preserve">
          <source>Chef Habitat Builder acts as the core of Chef&amp;rsquo;s Application Delivery Enterprise hub. Chef Habitat Builder was first launched as a cloud service and as the repository of all available plan templates built by Chef and the supporting community. Due to the fact that the application source code is stored alongside the build package, many users expressed a preference for storing packages and running Chef Habitat Builder on-prem. As a result, Chef Habitat Builder can be consumed either as a cloud based or on-premises solution. Plan files are stored in the Chef Habitat Builder SaaS, where they can be viewed and accessed by the Chef Habitat community and then shared with the on-premises version of the builder where they can then be copied and maintained locally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a7d6e366bea924de1db99445c2161ca04be11e" translate="yes" xml:space="preserve">
          <source>Chef Habitat Builder artifacts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487f3a50112e4e66a73418f87444fc16a98690d1" translate="yes" xml:space="preserve">
          <source>Chef Habitat Builder automatically creates your account the first time you sign in using the GitHub authentication process. You&amp;rsquo;ll also need to authorize the Chef Habitat Builder application in Github.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfc4a640b2196b238b4925a1653a542c49d4b68" translate="yes" xml:space="preserve">
          <source>Chef Habitat Builder on-prem Flow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d927cbc4ca6e11228e51cf1479998b18aa6785b1" translate="yes" xml:space="preserve">
          <source>Chef Habitat Builder origin key names follow the format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7842595849418698f12dc88eaac41b3499cc1d6e" translate="yes" xml:space="preserve">
          <source>Chef Habitat Builder provides package storage, search, and an API for clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b09219f1ea59fafbd0beab846f56bd0e7a3c16" translate="yes" xml:space="preserve">
          <source>Chef Habitat Builder supports both public and private origins, packages, and Github repositories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5afa50ba43102d45ebd3a1b2c4e697d9b1326e" translate="yes" xml:space="preserve">
          <source>Chef Habitat Builder uses an access token, called a &lt;em&gt;personal access token&lt;/em&gt; or a &lt;em&gt;Habitat authentication token&lt;/em&gt; (HAB_AUTH_TOKEN), to give you access to actions that you would like to take on Chef Habitat Builder. The &lt;em&gt;personal access token&lt;/em&gt; is the first level of permissions that you need to for any interactions with Chef Habitat Builder, such as uploading packages or checking the status of build jobs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe38c31379ec4e2f5600e393fa43489efaaba8b" translate="yes" xml:space="preserve">
          <source>Chef Habitat Builder uses the same mechanisms that Chef Automate does for &lt;a href=&quot;../backup/index&quot;&gt;backups&lt;/a&gt;, &lt;a href=&quot;../log_management/index&quot;&gt;log management&lt;/a&gt;, and &lt;a href=&quot;../troubleshooting/index#uninstalling-chef-automate&quot;&gt;uninstalling&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ae58b9ed31a8d6bd06fedf3f0b3facc732fa18" translate="yes" xml:space="preserve">
          <source>Chef Habitat CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6720a20055d27449d8cfc7dee489215516a99709" translate="yes" xml:space="preserve">
          <source>Chef Habitat Command-Line Interface (CLI) Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03423b4c9e85cfb853c839586511b812741d43e" translate="yes" xml:space="preserve">
          <source>Chef Habitat Container Orchestration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e194e9a076ddae91e3064be1c08a48b8cd59a27a" translate="yes" xml:space="preserve">
          <source>Chef Habitat Pattern Library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8bc0d06db0e41e9b2cdd6d5e4203e1e85e81ebe" translate="yes" xml:space="preserve">
          <source>Chef Habitat Scaffolding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9baa6ed58e99d5beb872783bc72a6703abb3a9" translate="yes" xml:space="preserve">
          <source>Chef Habitat Service Group Best Practices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060e80d76020f6be7e7ea73f0455328ef77282eb" translate="yes" xml:space="preserve">
          <source>Chef Habitat Supervisor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7919767ff44b0a550c9c1cddbc9a9added8d512d" translate="yes" xml:space="preserve">
          <source>Chef Habitat Supervisors communicate amongst each other using &amp;ldquo;gossip&amp;rdquo; algorithms, which underpin the membership management, leadership election, and service discovery mechanics of Chef Habitat. By simply being &amp;ldquo;peered&amp;rdquo; to a single existing Supervisor, a new Supervisor will gradually come to know about &lt;em&gt;all&lt;/em&gt; the Supervisors in a Chef Habitat network. The gossip algorithm has built-in features to counteract brief network splits, but care must be taken to set up a robust Supervisor network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c82d8f629702e0fc2598aacd112ccf23f091ea" translate="yes" xml:space="preserve">
          <source>Chef Habitat allows you to define the topology of your service groups, which bakes in certain behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbf04bca9ca2a87320f4e16c6c9bf69e3f24534" translate="yes" xml:space="preserve">
          <source>Chef Habitat allows you to templatize your application&amp;rsquo;s native configuration files using &lt;a href=&quot;https://handlebarsjs.com/&quot;&gt;Handlebars&lt;/a&gt; syntax. The following sections describe how to create tunable configuration elements for your application or service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb95dfca74abe88c17aaed9c3336bd5a1b6d70a9" translate="yes" xml:space="preserve">
          <source>Chef Habitat allows you to use &lt;a href=&quot;http://handlebarsjs.com&quot;&gt;Handlebars-based&lt;/a&gt; tuneables in your plan, and you can also use both built-in Handlebars helpers and Chef Habitat-specific helpers in defining your configuration logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2c9ad170da585a6b577e23125facb7427d0747" translate="yes" xml:space="preserve">
          <source>Chef Habitat allows you to use the same immutable package in different deployment scenarios. In this example, a configuration template with conditional logic will make the running application to behave differently based on whether it is a leader or a follower:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab29921df14f36963744701fbc4a28658d710ba7" translate="yes" xml:space="preserve">
          <source>Chef Habitat and Containers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fd14519274cd3f46c5ea1859ec2978c5a25aad" translate="yes" xml:space="preserve">
          <source>Chef Habitat and Continuous Integration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a5e5b3706e779c31ecfca3d6526f06c1257eae" translate="yes" xml:space="preserve">
          <source>Chef Habitat automates building and deploying applications, turning a web of delicate procedures into a resilient and repeatable process. A Chef Habitat package contains the compiled binary and a manifest of all the dependencies required for building and running your application. This results in a lightweight and portable artifact that you can deploy to bare metal or virtual machines, as well as export to immutable formats, such as Docker containers or Kubernetes pods. Bundling applications with a complete dependency manifest ensures that your application behaves as consistently on a developer&amp;rsquo;s laptop as it does in its on-prem VM farm staging environment, and it also behaves as consistently there as it does in its cloud-based deployment environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3049437fa25fe709fee327830f6f25372218526b" translate="yes" xml:space="preserve">
          <source>Chef Habitat automatically searches that directory and uses the certificate at start up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec3f4fc454ba77a55a4c7c12568cce4937e7ca5" translate="yes" xml:space="preserve">
          <source>Chef Habitat builds more secure containers by exporting your application and any of its runtime dependencies directly into the container. When you build your application with Chef Habitat, your application takes ownership of the entire toolchain of its runtime dependencies. As a result, you no longer have to rely on a large operating system and unnecessary system libraries. This enables you to include only the binaries your application uses inside your container, which can decrease your container size. By eliminating the need for a large operating system, you also avoid including binaries that an attacker could use, which further increases the security of your container. Visit the &lt;a href=&quot;../running_habitat_linux_containers/index&quot;&gt;Running Chef Habitat Containers&lt;/a&gt; section of the docs to find more details about how containers are built with Chef Habitat. Finally, &lt;a href=&quot;../monitor_services/index&quot;&gt;Chef Habitat&amp;rsquo;s HTTP API&lt;/a&gt; allows all of your application&amp;rsquo;s runtime dependencies to be audited at any time. If a brand new vulnerability is revealed, &lt;a href=&quot;../monitor_services/index&quot;&gt;Chef Habitat&amp;rsquo;s HTTP API&lt;/a&gt; makes it easy to programmatically inspect and audit the entire toolchain of your runtime environment without needing to worry about how your containers got built in the first place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f4f13467df604f5484af3e504edb0cb5b35640" translate="yes" xml:space="preserve">
          <source>Chef Habitat by Chef Software is our new Application Automation tool that aims to make it easy, safe, and fast to build, deploy, and manage applications. From build dependencies, runtime dependencies, dynamic configuration, and service discovery (just to name a few), Chef Habitat packages the automation with the application instead of relying on an underlying platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c62dd30283f2d9b06487ad3759ba59c3922f75" translate="yes" xml:space="preserve">
          <source>Chef Habitat can also be installed with Homebrew, by running the following commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324c005dbc84d9ce40da451cd28913d7982191b1" translate="yes" xml:space="preserve">
          <source>Chef Habitat can be run on bare metal servers, as well as virtual machines. Currently, Chef Habitat can run on Linux and Windows platforms, and in all cases, running a Supervisor boils down to running &lt;code&gt;hab sup run&lt;/code&gt;. How that happens depends on which platform you choose to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb0978f4bf30795590ea73216b49c10c588929e" translate="yes" xml:space="preserve">
          <source>Chef Habitat can export your package as a Docker container that runs on Kubernetes in the form of a pod. Additionally, a Chef Habitat bastion pod provides essential gossip ring features like service discovery (binds), secrets and the required &lt;a href=&quot;../sup_networks/index&quot;&gt;initial peer&lt;/a&gt; to all other pods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f20d9ac75a5f0b40a46085c344f45960e083a9b" translate="yes" xml:space="preserve">
          <source>Chef Habitat can make it easier to run your existing configuration management tool. You can create a Chef Habitat package of your configuration management tool&amp;rsquo;s agent and/or dependencies, and run it on your existing mutable infrastructure. The Chef Habitat Supervisor&amp;rsquo;s responsibility is to update your configuration management tool&amp;rsquo;s agent, while your configuration management tool can still perform its normal tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fb750c19f159927349a700c9cca49ba3945dab" translate="yes" xml:space="preserve">
          <source>Chef Habitat can provide an easier transition from virtual machine or bare metal workloads to containers, without needing to rewrite a monolithic application into microservices all at once. In this scenario, you can run the &lt;a href=&quot;../sup/index&quot;&gt;Chef Habitat Supervisor&lt;/a&gt; on your existing virtual machine or bare metal infrastructure as you migrate away from your configuration management tool. Then, when you&amp;rsquo;re ready, you export your application to the container format of your choice using the &lt;a href=&quot;../pkg_build/index&quot;&gt;Chef Habitat Studio&lt;/a&gt;. While you migrate your applications and services, the &lt;a href=&quot;../sup/index&quot;&gt;Chef Habitat Supervisor&lt;/a&gt; runs on your existing mutable infrastructure, and runs your existing configuration management tool. New packages that do not require configuration management can also run under the &lt;a href=&quot;../sup/index&quot;&gt;Chef Habitat Supervisor&lt;/a&gt; on your existing mutable infrastructure. As a result, you can continue to verify the working state of your application as you incrementally migrate your services. This approach provides an alternative to the &amp;ldquo;all-or-nothing&amp;rdquo; migration many teams are faced with when moving workloads to containers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204cbfaa93a6546e705bdab245b4c1bd8121c864" translate="yes" xml:space="preserve">
          <source>Chef Habitat can read values that it will use to render the templatized config files in three ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d92e930587c978034242aa15447ff092b311238" translate="yes" xml:space="preserve">
          <source>Chef Habitat centers application configuration, management, and behavior around the application itself, not the infrastructure that the app runs on. It provides automation that can programmatically and declaratively build, deploy, and manage your application and services, both stateful and stateless. You can deploy and run your Chef Habitat app on many different infrastructure environments including bare metal, VM, containers, and PaaS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b22e0208d12291722b9445512eb1755460cdc4" translate="yes" xml:space="preserve">
          <source>Chef Habitat for Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4395f835bf713dbd4f274e53c974fa9aa2355e64" translate="yes" xml:space="preserve">
          <source>Chef Habitat for Linux requires a 64-bit processor with kernel 2.6.32 or later. On Linux, exporting your Chef Habitat artifact to a Docker image requires the Docker Engine supplied by Docker. Packages from distribution-specific or otherwise alternative providers are currently not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1847e216f882ffd8323294183b7dc823f7e093ef" translate="yes" xml:space="preserve">
          <source>Chef Habitat for Mac</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd728038a3201ce9222ddbcd75dc68d2efc3010" translate="yes" xml:space="preserve">
          <source>Chef Habitat for Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ccea71b6e6ad2f6c4d1e617eee7aa74b73acb0" translate="yes" xml:space="preserve">
          <source>Chef Habitat has strong cryptography built into Chef Habitat Builder, the Supervisor, and the &lt;code&gt;hab&lt;/code&gt; CLI commands. This means there are several different kinds of keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6801409319a2a8fef1f2dc0eac47fe7bc36556aa" translate="yes" xml:space="preserve">
          <source>Chef Habitat implements cryptography using a Rust &lt;a href=&quot;https://github.com/jedisct1/libsodium&quot;&gt;implementation&lt;/a&gt; of &lt;a href=&quot;https://nacl.cr.yp.to/&quot;&gt;NaCl&lt;/a&gt; called &lt;code&gt;libsodium&lt;/code&gt;. &lt;code&gt;libsodium&lt;/code&gt; provides a fast, modern framework for encryption, decryption, signing, and verification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca5565048264f052a633e61f671386fc776d854" translate="yes" xml:space="preserve">
          <source>Chef Habitat is comprised of a packaging format and a supervisor. The format defines Chef Habitat packages, which are isolated, immutable, and auditable. The Chef Habitat supervisor knows how to take the packages and run them. It&amp;rsquo;s aware of the package&amp;rsquo;s peer relationships, its upgrade strategy and security policies. To learn everything about Chef Habitat, go to the Chef Habitat web site at &lt;a href=&quot;https://www.habitat.sh/&quot;&gt;https://www.habitat.sh&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f2d56f786920c130bb9e04592a3e604e7fd3f4" translate="yes" xml:space="preserve">
          <source>Chef Habitat is not a full replacement for configuration management tools on mutable infrastructure. Instead, it allows configuration management tools to focus better on system-level tasks for virtual machines and bare metal, such as kernel tuning, system hardening tasks, and compliance remediation tasks. Chef Habitat can then take over application automation roles, which results in a significant reduction in automation complexity for both infrastructure-focused automation and application-focused automation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda74b8f8395771e48b48c3102bb35f9b317077a" translate="yes" xml:space="preserve">
          <source>Chef Habitat looks for Supervisor configuration settings in four locations and applies them in order, which means that settings defined in later locations overwrite earlier ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77737315eb286bfaa271501e82da8fabd1af0155" translate="yes" xml:space="preserve">
          <source>Chef Habitat not only allows you to use Handlebars-based tunables in your plan, but you can also use both built-in Handlebars helpers as well as Chef Habitat-specific helpers to define your configuration logic. See &lt;a href=&quot;../build_helpers/index&quot;&gt;Reference&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518e021698de98dd4a053be0c505a54f6ada283c" translate="yes" xml:space="preserve">
          <source>Chef Habitat offers a new approach to deploying applications called application automation. Application automation means that the automation is packaged with the application and travels with it, no matter where that application is deployed. The unit of deployment becomes the application and its associated automation. The runtime environment, whether it is a container, bare metal, or PaaS does not in any way define the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b11192386e1982a17562679ee5680b397139844" translate="yes" xml:space="preserve">
          <source>Chef Habitat on Kubernetes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6e81d9ce386ab6fe73b79982be888b4b863333" translate="yes" xml:space="preserve">
          <source>Chef Habitat only matches services up at the syntactic, not semantic, level of this contract. If you bind to a service that exports a &amp;ldquo;port&amp;rdquo;, Chef Habitat only knows that the service exports something called &amp;ldquo;port&amp;rdquo;; it could be the port for a PostgreSQL database, or it could be the port of an application server. You will need to ensure that you connect the correct services together; Chef Habitat&amp;rsquo;s binds provide the means by which you express these relationships. You are, however, free to create bind names and export names that are meaningful for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3662d89b04d33fb852303be41adf016f7a5cc887" translate="yes" xml:space="preserve">
          <source>Chef Habitat packages are signed using &lt;a href=&quot;https://blake2.net/&quot;&gt;BLAKE2b&lt;/a&gt; checksums. BLAKE2b is a cryptographic hash function faster than MD5, SHA-1, SHA-2 and SHA3, yet provides at least as much security as the latest standard SHA-3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f4b0f589d6aed1e862111d35643cf590421de0" translate="yes" xml:space="preserve">
          <source>Chef Habitat packages can be exported in both Docker and ACI formats (as well as others). Kubernetes currently supports the Docker runtime and integration of the rkt container runtime (an implementation of the App Container spec) is under active development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8906ee2ec8263612512901ae40faa4338fa445d" translate="yes" xml:space="preserve">
          <source>Chef Habitat packages may be exported with the Supervisor directly into a &lt;a href=&quot;../pkg_exports/index&quot;&gt;variety of container formats&lt;/a&gt;, but frequently the container is running in a container orchestrator such as Kubernetes or Mesos. Container orchestrators provide scheduling and resource allocation, ensuring workloads are running and available. Containerized Chef Habitat packages can run within these runtimes, managing the applications while the runtimes handle the environment surrounding the application (ie. compute, networking, security).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61411d631a9b1bc4a1752225398cd278bf1b2eaf" translate="yes" xml:space="preserve">
          <source>Chef Habitat robustly deploys the bastion pod with a Kubernetes stateful set, persistent volume, and liveness checking, which ensures node availability and ring data persistence. The Kubernetes stateful set comes with an attached Kubernetes service that makes discoverable with DNS. Each namespace should contain a single service and stateful set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b332b68e574e9164eb7e632ede069989c60a7c0" translate="yes" xml:space="preserve">
          <source>Chef Habitat scaffolding is a way to build a Chef Habitat plan that overrides some of the default functions that Chef Habitat uses during its build process. You can find out more about &lt;a href=&quot;https://www.habitat.sh/docs/glossary/#sts=Scaffolding&quot;&gt;scaffolding&lt;/a&gt; in the Chef Habitat documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2344870e81cab860c622c7a5b651116e42c5d9" translate="yes" xml:space="preserve">
          <source>Chef Habitat scaffoldings are standardized plans for automated building and running your application. Each scaffolding is tuned to the way your application was built, which allows it to create the appropriate &lt;a href=&quot;../application_lifecycle_hooks/index&quot;&gt;application lifecycle hooks&lt;/a&gt; and add in the correct runtime dependencies when building the package for your application. Scaffoldings also provide some default health check hooks where appropriate to ensure your application is functioning reliably. Customized Scaffolding can be created to facilitate re-usability of common patterns in your organization for developing, building, and running your applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63400934789bab558f063e7f5214e2144db500a" translate="yes" xml:space="preserve">
          <source>Chef Habitat sends the health check messages every 30 seconds by default. Configure this setting using the &lt;code&gt;--health-check-interval&lt;/code&gt; option with the &lt;code&gt;hab sup run&lt;/code&gt; command. See the &lt;a href=&quot;https://www.habitat.sh/docs/habitat-cli/#hab-sup-run&quot;&gt;Habitat CLI documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed24ac3f27740f828cd2db14408ca46337e3d7f" translate="yes" xml:space="preserve">
          <source>Chef Habitat stores your public and private origin keys at &lt;code&gt;~/.hab/cache/keys&lt;/code&gt; on Linux systems, &lt;code&gt;C:\hab\cache\keys&lt;/code&gt; on Windows, and at &lt;code&gt;/hab/cache/keys&lt;/code&gt; inside of the Chef Habitat Studio environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4817d3897dd8e470491328080543e4542c09279a" translate="yes" xml:space="preserve">
          <source>Chef Habitat supports continuous deployment workflows through the use of channels. A channel is a tag for a package that the Supervisors in a service group can subscribe to. Channels are useful in CI/CD scenarios where you want to gate a package before making it the default version of the package that users should consume. You can think of this split as the difference between test and production, or nightly releases versus stable releases of products.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df3dc261bb880cea76ea84122d1f8e057632e8b" translate="yes" xml:space="preserve">
          <source>Chef Habitat supports retrieving source files from &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;. When cloning from GitHub, it is recommended to use https URIs because they are proxy friendly, whereas &lt;code&gt;git@github&lt;/code&gt; or &lt;code&gt;git://&lt;/code&gt; are not. To download the source from a GitHub repository, implement &lt;code&gt;do_download()&lt;/code&gt; in your plan.sh (or &lt;code&gt;Invoke-Download&lt;/code&gt; in a plan.ps1) and add a reference the &lt;code&gt;core/git&lt;/code&gt; package as a build dependency. Because Chef Habitat does not contain a system-wide CA cert bundle, you must use the &lt;code&gt;core/cacerts&lt;/code&gt; package and export the &lt;code&gt;GIT_SSL_CAINFO&lt;/code&gt; environment variable to point the &lt;code&gt;core/cacerts&lt;/code&gt; package on Linux. Here&amp;rsquo;s an example of how to do this in the &lt;code&gt;do_download()&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9a5d91fc99fef8924652e6051fbc22257ba8d2" translate="yes" xml:space="preserve">
          <source>Chef Habitat supports the standard &lt;a href=&quot;https://handlebarsjs.com/builtin_helpers.html&quot;&gt;built-in helpers&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06e09013f4b2d444f8ee4c2b7aeb5c2aa76e827" translate="yes" xml:space="preserve">
          <source>Chef Habitat supports three update strategies: &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;rolling&lt;/code&gt;, and &lt;code&gt;at-once&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d800c523e7e7117a95ec4e8eba464a0416b8d649" translate="yes" xml:space="preserve">
          <source>Chef Habitat uses a gossip protocol named &amp;ldquo;Butterfly&amp;rdquo;. It is a variant of &lt;a href=&quot;https://prakhar.me/articles/swim&quot;&gt;SWIM&lt;/a&gt; for membership and failure detection (over UDP), and a ZeroMQ based variant of &lt;a href=&quot;https://www.cs.unibo.it/bison/publications/ap2pc03.pdf&quot;&gt;Newscast&lt;/a&gt; for gossip. This protocol provides failure detection, service discovery, and leader election to the Chef Habitat Supervisor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2ac9969136bff783fdc68ed9fe946f26556a37" translate="yes" xml:space="preserve">
          <source>Chef Habitat uses both symmetric encryption (for wire encryption) and asymmetric encryption (for everything else). If you are not familiar with the difference between the two, please consult &lt;a href=&quot;https://support.microsoft.com/kb/246071&quot;&gt;this article&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd6c43f9f6c5cb2e2f436859eb681ee04cf4cff" translate="yes" xml:space="preserve">
          <source>Chef Habitat uses origin keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b35691a9a4c9b1e4d7848d8a21367f6ed3a20d" translate="yes" xml:space="preserve">
          <source>Chef Habitat uses the &lt;code&gt;os_env&lt;/code&gt; resource to test environment variables. The environment variables are first defined in a whitespace array, after which each environment variable is tested:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad9bee9bc11180913cde53d35e622bf6ac699bc" translate="yes" xml:space="preserve">
          <source>Chef Habitat uses the public origin key to verify the integrity of downloaded artifacts before installing them. Chef Habitat will only install artifacts for which it has the public origin key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3aa67926ac43248ff1978bff04e19fc0f61f64" translate="yes" xml:space="preserve">
          <source>Chef Habitat&amp;rsquo;s Launcher is a sidecar process for the Supervisor which provides a mechanism for launching processes on behalf of the Supervisor. It is the entry point for running the Supervisor and is the Supervisor for the Supervisor. Whereas the Supervisor is able to automatically update itself, the Launcher is currently released a bit differently, by design; it should be rare that the Launcher ever needs to change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c51fc43f42f226a045a0c33370aac49e77f53e5" translate="yes" xml:space="preserve">
          <source>Chef Habitat&amp;rsquo;s templating flavour includes a number of custom helpers for writing configuration and hook files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81dc1779a7509dfc78719134d96b60643586425" translate="yes" xml:space="preserve">
          <source>Chef Habitat, minimum version 1.5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c92b77d9f47e38ef073d0da2041177c75d4e1a4" translate="yes" xml:space="preserve">
          <source>Chef Identity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4c6dd654193a9a3828c60b847809fe6cc9989d" translate="yes" xml:space="preserve">
          <source>Chef Identity (also referred to as &lt;strong&gt;oc-id&lt;/strong&gt;) is an OAuth 2.0 authentication and authorization service packaged with the Chef Infra Server. Chef Identity must be configured to run with a private Chef Supermarket, after which users may use the same credentials to access the Chef Supermarket as they do to access the Chef Infra Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71243e3e7de497ba3d79ddad96b11ff2a7e65134" translate="yes" xml:space="preserve">
          <source>Chef InSpec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956e8b5ef28526ae85e11dcf6958e72872a7d732" translate="yes" xml:space="preserve">
          <source>Chef InSpec &amp;gt;= 4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9233afbdb73e6970a6fe657f4887d83781bb24" translate="yes" xml:space="preserve">
          <source>Chef InSpec &lt;a href=&quot;https://en.wikipedia.org/wiki/Leading_zero#0_as_a_prefix&quot;&gt;octal&lt;/a&gt; values begin the numeric mode specification with zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a188b87b9c76fb2a5577968efff1d1a50b54469e" translate="yes" xml:space="preserve">
          <source>Chef InSpec CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fce3e4a1164f26767406b57dfac1825eff95b1" translate="yes" xml:space="preserve">
          <source>Chef InSpec Chef Habitat CLI Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccf922c02ef3e5bbc2e1c6c48ebdca2cece677f" translate="yes" xml:space="preserve">
          <source>Chef InSpec DSL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7ed89a3c363f8af5d7ae913912a677943d6652" translate="yes" xml:space="preserve">
          <source>Chef InSpec Glossary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ed841cc184e0bbe12733249061e906082d24ec" translate="yes" xml:space="preserve">
          <source>Chef InSpec Inputs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755bf7c0c9e78ce2443e114b6371994f1c01c0da" translate="yes" xml:space="preserve">
          <source>Chef InSpec Integration Tests for Azure Generic Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6de42fb98607d08c5b80250b1a94313c98de4b" translate="yes" xml:space="preserve">
          <source>Chef InSpec Integration with Chef Habitat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ca8d5aad7e5190d82359231cacfd5c3fd323ac" translate="yes" xml:space="preserve">
          <source>Chef InSpec Migration Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3864244d06e7d8d86c11a63e083b594d29311354" translate="yes" xml:space="preserve">
          <source>Chef InSpec Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4c26b38347ac87d2f20ac8d6687618e4965368" translate="yes" xml:space="preserve">
          <source>Chef InSpec Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae301f4e3aacdd532255a95a0be93d6d85d8b66" translate="yes" xml:space="preserve">
          <source>Chef InSpec Plugins are optional software components that extend the capabilities of InSpec. For example, &lt;a href=&quot;https://github.com/inspec/inspec-iggy&quot;&gt;&lt;code&gt;inspec-iggy&lt;/code&gt;&lt;/a&gt; is a Plugin project that aims to generate Chef InSpec controls from infrastructure-as-code files. Plugins are distributed as RubyGems, and Chef InSpec manages their installation. Chef InSpec Plugins always begin with the prefix &amp;lsquo;inspec-&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9982361ea0f25fa8a053b6fbcffea7947ffdf5cc" translate="yes" xml:space="preserve">
          <source>Chef InSpec Profile Style Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8b00a764b18227f3e5cc78d45cad4c8828bfd1" translate="yes" xml:space="preserve">
          <source>Chef InSpec Profiles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c322061bb4a80dc2e53f0e35c851cefcebed2be" translate="yes" xml:space="preserve">
          <source>Chef InSpec Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4dacc70380c06015b1c669294b04bc3e23dc418" translate="yes" xml:space="preserve">
          <source>Chef InSpec Reporters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79da9ba9c7ea7b7b2b847b6d174b11db2f0d402a" translate="yes" xml:space="preserve">
          <source>Chef InSpec Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82e70b0d983d6468a540f7af100b1258271bcd3" translate="yes" xml:space="preserve">
          <source>Chef InSpec Scan Failure Example Payload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bae3a4c47ddfc7fd90c39a6e168af1a9e51a99e" translate="yes" xml:space="preserve">
          <source>Chef InSpec Shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0d2440d608aac27c4f6ec1caf47cf8c41312d4" translate="yes" xml:space="preserve">
          <source>Chef InSpec Target Mode (&lt;code&gt;inspec --target&lt;/code&gt;) may be functional on additional platforms, versions, and architectures but are not validated by Chef Software, Inc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83b0ac6633cb4c9df4b83232ffb35ffeaa2d25f" translate="yes" xml:space="preserve">
          <source>Chef InSpec Universal Matchers Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd5ae9796c765bc2b0c6ea36811247894fe703b" translate="yes" xml:space="preserve">
          <source>Chef InSpec allows you to output your test results to one or more reporters. Configure the reporter(s) using either the &lt;code&gt;--reporter&lt;/code&gt; option or as part of the general config file using the &lt;code&gt;--config&lt;/code&gt; (or &lt;code&gt;--json-config&lt;/code&gt;, prior to v3.6) option. While you can configure multiple reporters to write to different files, only one reporter can output to the screen(stdout).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0595a045fc4f52fc9b9cb2d47f563890ae094c67" translate="yes" xml:space="preserve">
          <source>Chef InSpec and Friends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802be19e1653b014937721c775fc86560d50087e" translate="yes" xml:space="preserve">
          <source>Chef InSpec can be uninstalled using the steps below that are appropriate for the method of Chef InSpec installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd11d207c80760d2550f37009041a7462493930" translate="yes" xml:space="preserve">
          <source>Chef InSpec code can run in multiple platforms. You can execute the same set of tests locally, with remote commands that use SSH or WinRM, or with external mechanisms such as the Docker API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4bc2fe2b461859b2ed40ac8f697228b771e657" translate="yes" xml:space="preserve">
          <source>Chef InSpec does not attach backend information to test files. All tests are defined independently of any backend. Therefore a Serverspec test file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c327dda25fee48d3f5f734502408854a1d8c6e" translate="yes" xml:space="preserve">
          <source>Chef InSpec has 80+ &lt;a href=&quot;resources/index&quot;&gt;resources&lt;/a&gt; ready use&amp;ndash;apache to zfs pool. If you need a solution that we haven&amp;rsquo;t provided, you can write your own &lt;a href=&quot;dsl_resource/index&quot;&gt;custom resource&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b6cdb696b520db0d6bb7e0098f52470a4ff809" translate="yes" xml:space="preserve">
          <source>Chef InSpec is a framework that allows you to run infrastructure testing as well as compliance testing. The compliance features are always optional and provide customers a way to use Chef InSpec for both use-cases. To ensure we build the best infrastructure testing, we migrate our cookbooks &lt;a href=&quot;https://github.com/chef-cookbooks&quot;&gt;chef-cookbooks&lt;/a&gt; to InSpec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd66d0f8adaf07ac77fb56d327e1aeb375c59b29" translate="yes" xml:space="preserve">
          <source>Chef InSpec is a run-time framework and rule language used to specify compliance, security, and policy requirements. It includes a collection of resources that help you write auditing controls quickly and easily. The syntax used by both open source and &lt;a href=&quot;../../compliance/index&quot;&gt;Chef compliance&lt;/a&gt; auditing is the same. The open source &lt;a href=&quot;../resources/index&quot;&gt;Chef InSpec resource&lt;/a&gt; framework is compatible with &lt;a href=&quot;../../compliance/index&quot;&gt;Chef compliance&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8136afbeacf5ed1fff849801adff4afd25259aec" translate="yes" xml:space="preserve">
          <source>Chef InSpec is a run-time framework and rule language used to specify compliance, security, and policy requirements. It includes a collection of resources that help you write auditing controls quickly and easily. The syntax used by both open source and &lt;a href=&quot;../compliance/index&quot;&gt;Chef compliance&lt;/a&gt; auditing is the same. The open source &lt;a href=&quot;resources/index&quot;&gt;Chef InSpec resource&lt;/a&gt; framework is compatible with &lt;a href=&quot;../compliance/index&quot;&gt;Chef compliance&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673efdd93b3f130a5fde5573070528dec69a8b13" translate="yes" xml:space="preserve">
          <source>Chef InSpec is a testing framework with a human- and machine-readable language for specifying compliance, security and policy requirements. When compliance is expressed as code, you can integrate it into your deployment pipeline and automatically test for adherence to security policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8547d6935004cc2efd2e75b7d3d3a9edb7e8f3" translate="yes" xml:space="preserve">
          <source>Chef InSpec is aimed at compliance practitioners and infrastructure testers, so our focus is providing a few, well-supported, easy-to-use &lt;a href=&quot;../matchers/index&quot;&gt;universal matchers&lt;/a&gt;, such as &lt;code&gt;cmp&lt;/code&gt;. In contrast, RSpec is a tool designed for software engineers. It thus supports a very large range of matchers, to enable testing of software engineering constructs such as exceptions, Object Oriented Programming relationships, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01054b02abe14920a6502f6a5c3552a8a96060a4" translate="yes" xml:space="preserve">
          <source>Chef InSpec is an open-source framework for testing and auditing your applications and infrastructure. Chef InSpec works by comparing the actual state of your system with the desired state that you express in easy-to-read and easy-to-write Chef InSpec code. Chef InSpec detects violations and displays findings in the form of a report, but puts you in control of remediation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80370cc5bffd7842141caf1ebd92850be92404f1" translate="yes" xml:space="preserve">
          <source>Chef InSpec is an open-source testing framework with a human- and machine-readable language for specifying compliance, security and policy requirements. When compliance is expressed as code, you can integrate it into your deployment pipeline and automatically test for adherence to security policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413d7b2bac482a6bac6d4dd0de4ced502a0bc44c" translate="yes" xml:space="preserve">
          <source>Chef InSpec is available as a standalone &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; package. Run the following command in your terminal to install Chef InSpec:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88d92323da4b186e4ba731d9e750430a6f7b3ce" translate="yes" xml:space="preserve">
          <source>Chef InSpec is built on top of RSpec and uses it as the underlying foundation to execute tests. It uses the key strengths of RSpec, easily execute tests and a DSL to write tests, but extends the functionality for use as compliance audits. Chef InSpec ships with custom audit resources that make it easy to write audit checks and with the ability to run those checks on remote servers. These audit resources provided know the differences between operating systems and help you abstract from the local operating system, similar to other resources you might use in your Chef recipes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31caa6bae600c9aa07982d1fc476b89c3187f396" translate="yes" xml:space="preserve">
          <source>Chef InSpec is intended to be a drop-in replacement of Serverspec. Popular Serverspec resources have been ported to InSpec. It changed some behaviour as documented in our migration guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c753f6649dd224d468cf582731d4948531e282" translate="yes" xml:space="preserve">
          <source>Chef InSpec is now configured with Test-Kitchen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e77775684f8a33704e0ae38442f069d9ffc99d" translate="yes" xml:space="preserve">
          <source>Chef InSpec provides a mechanism for defining custom resources. These become available with their respective names and provide easy functionality to profiles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60887bf48529ef18e71acbab0eea24d55d583eed" translate="yes" xml:space="preserve">
          <source>Chef InSpec provides an easy method to create an executable Chef Habitat package for a Chef InSpec profile. When run via the Chef Habitat Supervisor, the package will run Chef InSpec with your profile and write out its findings to the supervisor log. This provides the ability to ship your compliance controls alongside your Chef Habitat-packaged application and continuously run InSpec, providing you &lt;em&gt;Continuous Compliance.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3961354a560275be7b203bb66fc8b0e9bfeabe78" translate="yes" xml:space="preserve">
          <source>Chef InSpec scan:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06a633339116113b0462b627db5df1ca5444820" translate="yes" xml:space="preserve">
          <source>Chef InSpec shell will automatically evaluate the result of every command as if it were a test file. If you type in a Ruby command that is not an Chef InSpec control or test, the shell will evaluate it as if it were a regular ruby command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8242cd178308358822648a788a76906ab5df92c" translate="yes" xml:space="preserve">
          <source>Chef InSpec started as an extension of Serverspec. As the extension grew, it became clear that a new library was required. Creating and maintaining a fork was not practical so a new project was born.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59307cc1dace6eb9fcb5327c4543638210257484" translate="yes" xml:space="preserve">
          <source>Chef InSpec supports a number of dependency sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9835e5f81521066ec60bca23bdd613f134ac6582" translate="yes" xml:space="preserve">
          <source>Chef InSpec supports the creation of complex test and compliance profiles, which organize controls to support dependency management and code reuse. Each profile is a standalone structure with its own distribution and execution flow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cf15ae596e01a6d66159e3a593a05b7399021a" translate="yes" xml:space="preserve">
          <source>Chef InSpec tests are immediately executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cbbe3ab5337ad4e30cd07ca85dfc881ecb5acc" translate="yes" xml:space="preserve">
          <source>Chef InSpec tests, however, are designed to be universally executable on all types of runtimes, including local and remote execution. We want to give users the ability to take an OS profile and execute it remotely or locally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2381b458d3da0760f0590d809548ad600da54509" translate="yes" xml:space="preserve">
          <source>Chef InSpec uses matchers to help compare resource values to expectations. The following matchers are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca80984b5a3047c597d5fd0a324b6871ee5b70c5" translate="yes" xml:space="preserve">
          <source>Chef InSpec uses the standard AWS authentication mechanisms. Typically, you will create an IAM user specifically for auditing activities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca995beee3b7ae57b0f4c93a1b9cc545ac33ac2" translate="yes" xml:space="preserve">
          <source>Chef InSpec will always evaluate all the tests contained within &lt;code&gt;describe.one&lt;/code&gt;. It does not short-circuit upon evaluating a passing &lt;code&gt;describe&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c424bcb307a84de54abf58f64a7cf46845f80e60" translate="yes" xml:space="preserve">
          <source>Chef InSpec will automatically interpret crontab-supported special time strings. For example, a crontab entry set to run &lt;code&gt;@yearly&lt;/code&gt; can be tested as if the entry was manually configured to run on January 1, 12 AM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cce716173c833542a45886148ddc2e331da55ff" translate="yes" xml:space="preserve">
          <source>Chef InSpec will continue to support both methods of writing tests. Consider this &lt;code&gt;file&lt;/code&gt; test:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dad28ac1dea417cf787c133c028a6b4ff392a50" translate="yes" xml:space="preserve">
          <source>Chef InSpec will write a JSON file in the &lt;code&gt;${svc_var_path}/inspec_results&lt;/code&gt; directory containing the results of the last Chef InSpec run. For example, for the &lt;code&gt;effortless/audit-baseline&lt;/code&gt; package, the Chef InSpec results will be at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4f05576e05e169a15e64435ba42638158fa464" translate="yes" xml:space="preserve">
          <source>Chef InSpec: Chef's open source security &amp;amp; compliance automation framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177e019cb91f7471ec21e256ef6df52823e62e51" translate="yes" xml:space="preserve">
          <source>Chef Incidents menu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9737fcccee3c0bb4d76150008bfcf2b4fe76205c" translate="yes" xml:space="preserve">
          <source>Chef Infra</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd38117dd4126c7073f2b21ce3b583a76668227" translate="yes" xml:space="preserve">
          <source>Chef Infra (formerly Chef)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d493fbbc756e48c1a215730f661b01be2f3c71" translate="yes" xml:space="preserve">
          <source>Chef Infra Client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148e240f052b0d9744fddc7a3aa37651b199905a" translate="yes" xml:space="preserve">
          <source>Chef Infra Client &amp;gt;= 15.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbde5c3489859cc23f5fe33121b1ec89098d02aa" translate="yes" xml:space="preserve">
          <source>Chef Infra Client (Use Chef Client up to version 14.x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b7550d71647e530cc7696c6eb3e67f5b6422f2" translate="yes" xml:space="preserve">
          <source>Chef Infra Client (executable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c73d525a3db27a66909712ff58a187cfeec406d" translate="yes" xml:space="preserve">
          <source>Chef Infra Client 14+ provides new primitives that allow you to deprecate resources or properties with the same functionality used for deprecations in Chef Infra Client resources. This allows you make breaking changes to enterprise or community cookbooks with friendly notifications to downstream cookbook consumers directly in the Chef Infra Client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e24825c67ab0844fa78c8d1752f2afabf68efd" translate="yes" xml:space="preserve">
          <source>Chef Infra Client 15+ requires accepting the CHEF EULA license. Set &lt;code&gt;CHEF_LICENSE&lt;/code&gt; to one of these values &lt;code&gt;accept&lt;/code&gt;, &lt;code&gt;accept-silent&lt;/code&gt; or &lt;code&gt;accept-no-persist&lt;/code&gt;. Refer to &lt;a href=&quot;../chef_license_accept/index#accept-the-chef-eula&quot;&gt;CHEF EULA license&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be105fb13feb9650943d30439552de7f8329801e" translate="yes" xml:space="preserve">
          <source>Chef Infra Client 16+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3b57b962b6c61742f3d74c5829d798a3409e8d" translate="yes" xml:space="preserve">
          <source>Chef Infra Client &lt;a href=&quot;../auth/index&quot;&gt;authenticates&lt;/a&gt; to the Chef Infra Server using an RSA private key and the Chef Infra Server API. The name of the node is required as part of the authentication process to the Chef Infra Server. If this is the first Chef Infra Client run for a node, the chef-validator will be used to generate the RSA private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737b8fd9be1ae89589099934aa329a1a10fb4e8c" translate="yes" xml:space="preserve">
          <source>Chef Infra Client Cookbook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c637ccc2b0a55dd02810697be81fa6c3befe68b" translate="yes" xml:space="preserve">
          <source>Chef Infra Client Lock File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7456c6213412642c6b6a8e0b395e879a416080e7" translate="yes" xml:space="preserve">
          <source>Chef Infra Client Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bda66b3138b9dab2760a2f31b0a476e2685e6b1" translate="yes" xml:space="preserve">
          <source>Chef Infra Client Run API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e843f5053fad8145eb0da69c43763fc15a6195e" translate="yes" xml:space="preserve">
          <source>Chef Infra Client Run Failure Example Payload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92cf15f03fc85f0e1971bf39842f9b6b944e9dbf" translate="yes" xml:space="preserve">
          <source>Chef Infra Client Run Status Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6230414469ddf3352fe514c52c1709428a18127" translate="yes" xml:space="preserve">
          <source>Chef Infra Client Security</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501d45dc0e05d9e7dd15394882d39195bb2b3194" translate="yes" xml:space="preserve">
          <source>Chef Infra Client Settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9d8145de83aa404334b05945591eeb8fbe87b8" translate="yes" xml:space="preserve">
          <source>Chef Infra Client also ships with the &lt;strong&gt;cron&lt;/strong&gt; resource for managing the monolithic &lt;code&gt;/etc/crontab&lt;/code&gt; file on platforms that lack cron.d support. See the &lt;a href=&quot;../cron/index&quot;&gt;cron resource&lt;/a&gt; for information on using that resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2747a860305169ffc75a20c42006d40f8c23e9" translate="yes" xml:space="preserve">
          <source>Chef Infra Client also ships with the &lt;strong&gt;cron&lt;/strong&gt; resource for managing the monolithic &lt;code&gt;/etc/crontab&lt;/code&gt; file on platforms that lack cron.d support. See the &lt;a href=&quot;cron/index&quot;&gt;cron resource&lt;/a&gt; for information on using that resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626a93e42bcb0207c74fa037db07fe0e70eb82bc" translate="yes" xml:space="preserve">
          <source>Chef Infra Client always checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4be8cbfadf7c623597982b41e69df44e53221f" translate="yes" xml:space="preserve">
          <source>Chef Infra Client as JSON data. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ebd9ada59d55b2ee19164943fc7d8a8e098eba" translate="yes" xml:space="preserve">
          <source>Chef Infra Client authenticates with the Chef Infra Server using RSA public key-pairs each time a Chef Infra Client needs access to data that is stored on the Chef Infra Server. This prevents any node from accessing data that it shouldn&amp;rsquo;t and it ensures that only nodes that are properly registered with the Chef Infra Server can be managed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e17ae2795429e30bfff4d7fb97ba48804fc0b4e" translate="yes" xml:space="preserve">
          <source>Chef Infra Client automatically checks the configuration, node JSON, and the stored node on the Chef Infra Server to determine if Policyfile files are being used, and then automatically updates this flag. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53445669418181ac2a3e2aec40521d7d67bd9818" translate="yes" xml:space="preserve">
          <source>Chef Infra Client automatically checks the configuration, node JSON, and the stored node on the Chef Infra Server to determine if Policyfile files are in use, and then automatically updates this flag. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f123b987ffa81d03c158cc4fb594ef5b69f8a2" translate="yes" xml:space="preserve">
          <source>Chef Infra Client caches to &lt;code&gt;/var/chef/cache&lt;/code&gt; during a Chef Infra Client run. This is the location in which downloaded cookbooks, packages required by those cookbooks, and other large files are stored. This directory requires enough space to save all of this data and should be generously sized. 5GB is a safe number as a starting point, but tune the size of &lt;code&gt;/var/chef/cache&lt;/code&gt; as necessary. This location is tunable in a node&amp;rsquo;s &lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb&lt;/a&gt; file via the &lt;code&gt;file_cache_path&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af18de068b96c7db04d3d87bd63bcdb289879d4" translate="yes" xml:space="preserve">
          <source>Chef Infra Client can access any reflected or redirected registry key. The machine architecture of the system on which Chef Infra Client is running is used as the default (non-redirected) location. Access to the &lt;code&gt;SysWow64&lt;/code&gt; location is redirected must be specified. Typically, this is only necessary to ensure compatibility with 32-bit applications that are running on a 64-bit operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2641ab52919e730ceebf21e4ba205e80804acfbe" translate="yes" xml:space="preserve">
          <source>Chef Infra Client can be installed on machines running Microsoft Windows in the following ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774deaf23f6a82e7b02329c1a7a3752e57d50207" translate="yes" xml:space="preserve">
          <source>Chef Infra Client can be installed using an unattended bootstrap. This allows Chef Infra Client to be installed from itself, without requiring SSH. For example, machines are often created using environments like AWS Auto Scaling, AWS CloudFormation, Rackspace Auto Scale, and PXE. In this scenario, using tooling for attended, single-machine installs like &lt;code&gt;knife bootstrap&lt;/code&gt; or &lt;code&gt;knife CLOUD_PLUGIN create&lt;/code&gt; is not practical because the machines are created automatically and someone cannot always be on-hand to initiate the bootstrap process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335d5e787ba7e1eae407d3aee670fd665548f9f8" translate="yes" xml:space="preserve">
          <source>Chef Infra Client can be used to manage node data using the command line and JSON files. Each JSON file contains a hash, the elements of which are added as node attributes. In addition, the &lt;code&gt;run_list&lt;/code&gt; setting allows roles and/or recipes to be added to the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554a8b72a2ceeca165650bc0144ed656b5392008" translate="yes" xml:space="preserve">
          <source>Chef Infra Client can create users on systems based on the contents of a data bag. For example, a data bag named &amp;ldquo;admins&amp;rdquo; can contain a data bag item for each of the administrators that will manage the various systems that each Chef Infra Client is maintaining. A recipe can load the data bag items and then create user accounts on the target system with code similar to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2120d0d5746d5bf2a0ac649863434febdee811f" translate="yes" xml:space="preserve">
          <source>Chef Infra Client configures the system based on the information that has been collected. Each resource is executed in the order identified by the run-list, and then by the order in which each resource is listed in each recipe. Each resource defines an action to run, which configures a specific part of the system. This process is also referred to as convergence. This is also referred to as the &quot;execution phase&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd4fea57fc01ff3eb430681810ccd9560dcfd6c" translate="yes" xml:space="preserve">
          <source>Chef Infra Client evaluates attributes in the order defined by the run-list, including any attributes that are in the run-list because of cookbook dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e4bbeefc05e6dd3d9adbe0ff8136cf0e220e90" translate="yes" xml:space="preserve">
          <source>Chef Infra Client expands the &lt;a href=&quot;../run_lists/index&quot;&gt;run-list&lt;/a&gt; from the rebuilt node object and compiles a complete list of recipes in the exact order that they will be applied to the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74914836bcb058018cf9e1c7e201b263b63d1020" translate="yes" xml:space="preserve">
          <source>Chef Infra Client expands the &lt;a href=&quot;index&quot;&gt;run-list&lt;/a&gt; from the rebuilt node object and compiles a complete list of recipes in the exact order that they will be applied to the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6726215cb3497e180b5d782c2d81dde9f3d1bbd4" translate="yes" xml:space="preserve">
          <source>Chef Infra Client gets process configuration data from the &lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb&lt;/a&gt; file on the &lt;a href=&quot;../nodes/index&quot;&gt;node&lt;/a&gt;, and then gets node configuration data from Ohai. One important piece of configuration data is the name of the node, which is found in the &lt;code&gt;node_name&lt;/code&gt; attribute in the client.rb file or is provided by Ohai. If Ohai provides the name of a node, it is typically the FQDN for the node, which is always unique within an organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b9611693de9042f61f4bb2a4dc295f1d59689d" translate="yes" xml:space="preserve">
          <source>Chef Infra Client identifies each resource in the node object and builds the resource collection. Libraries are loaded first to ensure that all language extensions and Ruby classes are available to all resources. Next, attributes are loaded, followed by custom resources. Finally, all recipes are loaded in the order specified by the expanded run-list. This is also referred to as the &quot;compile phase&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8933d6b761b2219c8bfa12619373d1033ed0f008" translate="yes" xml:space="preserve">
          <source>Chef Infra Client includes a stable version of Ruby as part of its installer. The path to this version of Ruby must be added to the &lt;code&gt;$PATH&lt;/code&gt; environment variable and saved in the configuration file for the command shell (Bash, csh, and so on) that is used on the machine running Chef Workstation. In a command window, type the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d26e0865030744b40047d5b99864190d438ad6" translate="yes" xml:space="preserve">
          <source>Chef Infra Client includes an &lt;code&gt;ohai&lt;/code&gt; resource that allows you to reload the Ohai data on a node. This allows recipes or resources that change system attributes (like a recipe that adds a user) to refer to those attributes later on during a Chef Infra Client run. See the &lt;a href=&quot;../resources/ohai&quot;&gt;ohai resource&lt;/a&gt; for complete usage information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e19261165dc9e01cf56321fab8c186e57754d8" translate="yes" xml:space="preserve">
          <source>Chef Infra Client includes an &lt;code&gt;ohai&lt;/code&gt; resource that allows you to reload the Ohai data on a node. This allows recipes or resources that change system attributes (like a recipe that adds a user) to refer to those attributes later on during a Chef Infra Client run. See the &lt;a href=&quot;resources/ohai&quot;&gt;ohai resource&lt;/a&gt; for complete usage information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ead7bf71145ea51113b5404f28836e96dbd54d2" translate="yes" xml:space="preserve">
          <source>Chef Infra Client is an agent that runs locally on every node that is under management by Chef Infra Server. When Chef Infra Client runs, it performs all of the steps required for bringing a node into the expected state, including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a86e7cdfe0b79b7339f411c95f599ae9dc21632" translate="yes" xml:space="preserve">
          <source>Chef Infra Client is downloaded the first time this command is run. The output of the command is similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5041194e7b57b849a054e36e5a1bd830c75fe3d" translate="yes" xml:space="preserve">
          <source>Chef Infra Client is installed on each node that is managed with Chef Infra. Chef Infra Client configures the node locally by performing the tasks specified in the run-list. Chef Infra Client will also pull down any required configuration data from the Chef Infra Server during a Chef Infra Client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd18526b658e0a9571b118f8ad74c4515472e011" translate="yes" xml:space="preserve">
          <source>Chef Infra Client is installed on the target node using a system native package (.rpm, .msi, etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1529588a95bfe6d4186bb83f34f5e75ee5c260b5" translate="yes" xml:space="preserve">
          <source>Chef Infra Client processes recipes in two phases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa2dbf3fb3abe9a4d366a32097a0073dc681246" translate="yes" xml:space="preserve">
          <source>Chef Infra Client provisioner only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fef6c4f829da9c512cee704e2e84c3eddde37d" translate="yes" xml:space="preserve">
          <source>Chef Infra Client provisioner only. A list of client.rb file settings. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2433343f177f764d132e86e02d15f750d5494e0" translate="yes" xml:space="preserve">
          <source>Chef Infra Client provisioner only. The port on which chef-zero is to listen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f471eb964d2d2c0c2ff2ce6243586a08157552" translate="yes" xml:space="preserve">
          <source>Chef Infra Client pulls down the node object from the Chef Infra Server and then rebuilds it. A node object is made up of the system attributes discovered by Ohai, the attributes set in Policyfiles or Cookbooks, and the run list of cookbooks. The first time Chef Infra Client runs on a node, it creates a node object from the the default run-list. A node that has not yet had a Chef Infra Client run will not have a node object or a Chef Infra Server entry for a node object. On any subsequent Chef Infra Client runs, the rebuilt node object will also contain the run-list from the previous Chef Infra Client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e73dea0892f1e78a657e36541ef10bcc9d4cf2f" translate="yes" xml:space="preserve">
          <source>Chef Infra Client pushes the node object to the Chef Infra Server at the end of a Chef Infra Client run; the updated node object on the Chef Infra Server is then indexed for search and is stored until the next Chef Infra Client run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6247261e170c9a332a11fb70ec4ee44de610c8d2" translate="yes" xml:space="preserve">
          <source>Chef Infra Client ran the first resource before the breakpoint (&lt;code&gt;file[/tmp/before-breakpoint]&lt;/code&gt;), but then stopped after execution. Chef Infra Client attempted to name the breakpoint after its position in the source file, but Chef Infra Client was confused because the resource was entered interactively. From here, chef-shell can resume the interrupted Chef Infra Client run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9b93b1f480689b5c7d7dfb7c13ebda62b98225" translate="yes" xml:space="preserve">
          <source>Chef Infra Client requests all off the &lt;a href=&quot;../cookbooks/index&quot;&gt;cookbook files&lt;/a&gt; (including recipes, templates, resources, providers, attributes, and libraries) that it needs for every action identified in the run-list from the Chef Infra Server. The Chef Infra Server responds to Chef Infra Client with the complete list of files. Chef Infra Client compares the list of files to the files that already exist on the node from previous runs, and then downloads a copy of every new or modified file from the Chef Infra Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f390de2fe2efd88ec0b575c4f1d28419087147c" translate="yes" xml:space="preserve">
          <source>Chef Infra Client run API /api/x_chef_incident/client_run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1336ad85bcb7be68d3e15d2299daa9b04674578" translate="yes" xml:space="preserve">
          <source>Chef Infra Client run reporting, compliance reporting, high availability configurations, and Chef Infra Server replication are available as part of Chef Automate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928ace3816eb07d278585b47e7a1e0e6664a4728" translate="yes" xml:space="preserve">
          <source>Chef Infra Client runs are daemonized, and are not initiated by a cron job. Using cron to schedule runs can create &amp;ldquo;thundering herd&amp;rdquo; problems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9cd3f1fcc987de47cac283a54e4bfe7e658609" translate="yes" xml:space="preserve">
          <source>Chef Infra Client runs are set to a default 30-minute interval with a 5-minute splay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f7dcd8817259b2318344c73483b6ca351a3dae" translate="yes" xml:space="preserve">
          <source>Chef Infra Client runs menu item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ade558719741fb9e803764a194b85aa1ffca0e" translate="yes" xml:space="preserve">
          <source>Chef Infra Client supports reading multiple configuration files by putting them inside a &lt;code&gt;.d&lt;/code&gt; configuration directory. For example: &lt;code&gt;/etc/chef/client.d&lt;/code&gt;. All files that end in &lt;code&gt;.rb&lt;/code&gt; in the &lt;code&gt;.d&lt;/code&gt; directory are loaded; other non-&lt;code&gt;.rb&lt;/code&gt; files are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf6d198ec10d16aa0e4d711a0ac03e9bc582aff" translate="yes" xml:space="preserve">
          <source>Chef Infra Client uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Symmetric-key_algorithm&quot;&gt;shared secret encryption&lt;/a&gt;; an encrypted file can only be decrypted by a node or a user with the same shared secret</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95eb3eb6e630c7d6d9ebb69c7756d7397c7677b5" translate="yes" xml:space="preserve">
          <source>Chef Infra Client uses Ruby as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. Chef Infra Client provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459d09d8c5c4c7bfc1302ad620e0c073d67a882b" translate="yes" xml:space="preserve">
          <source>Chef Infra Client uses six types of attributes to determine the value that is applied to a node during a Chef Infra Client run. In addition, Chef Infra Client gathers attribute values from up to five locations. The combination of attribute types and sources makes up to 15 different competing values available during a Chef Infra Client run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f7b6c6c557f415c7fba6e74446e70c1a5e5ea1" translate="yes" xml:space="preserve">
          <source>Chef Infra Client will manage the permissions of the entire directory structure below &lt;code&gt;/html&lt;/code&gt;, for a total of 12 files and 4 directories. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7defd6f2c210463a91e926f8acc6a2b96f0582" translate="yes" xml:space="preserve">
          <source>Chef Infra Client will only update the property values that require updates and will not make changes when the property values are already in the desired state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9c4bf1bf60cb60e432d79e4c03c338f54f37a1" translate="yes" xml:space="preserve">
          <source>Chef Infra Client will pick up the &lt;code&gt;_default&lt;/code&gt; run-list if &lt;code&gt;env_run_list[environment_name]&lt;/code&gt; is null or nonexistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e69371110cf7f3bdf040d188e9769a96b3a742" translate="yes" xml:space="preserve">
          <source>Chef Infra Client will pull down the node object from the Chef Infra Server and then reset all the attributes except &lt;code&gt;normal&lt;/code&gt;. The node object will contain the attribute data from the previous Chef Infra Client run including attributes set with JSON files via &lt;code&gt;-j&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b388de902575db072014aba7402f3bf1345d339b" translate="yes" xml:space="preserve">
          <source>Chef Infra Client will rebuild the attribute list and apply attribute precedence while configuring the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4bc708c6538812fbdf3985e5255aea7d808a59" translate="yes" xml:space="preserve">
          <source>Chef Infra Client will run a recipe only when asked. When Chef Infra Client runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, Chef Infra Client won&amp;rsquo;t change anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664c91243cd985e0712c49ca8a0fd74c9ca6350f" translate="yes" xml:space="preserve">
          <source>Chef Infra Client will update the cookbooks on the node (if required), which updates the attributes contained in attribute files and recipes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0a911d7f669e7322bbc01f91d1bbc0a4d2f705" translate="yes" xml:space="preserve">
          <source>Chef Infra Client will update the role and environment data (if required)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5ee7238db6f7d2c966b5dee885aecba7bcac24" translate="yes" xml:space="preserve">
          <source>Chef Infra Client, by default, will attempt to execute a Homebrew command as the owner of &lt;code&gt;/usr/local/bin/brew&lt;/code&gt;. If that executable does not exist, Chef Infra Client will attempt to find the user by executing &lt;code&gt;which brew&lt;/code&gt;. If that executable cannot be found, Chef Infra Client will print an error message: &lt;code&gt;Could not find the &quot;brew&quot; executable in /usr/local/bin or anywhere on the path.&lt;/code&gt;. Use the &lt;code&gt;homebrew_user&lt;/code&gt; attribute to specify the Homebrew owner for situations where Chef Infra Client cannot automatically detect the correct owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec578e7ff763e9531f526f529f13a8ad4f78268" translate="yes" xml:space="preserve">
          <source>Chef Infra Client: &lt;code&gt;/opt/chef/embedded/ssl/certs/cacert.pem&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626690ccfeddece9d6782bbb72b119f171d7da2c" translate="yes" xml:space="preserve">
          <source>Chef Infra Client: an agent that configures your nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cd182bf3de43b0d3da41575a2d990ffbf433d0" translate="yes" xml:space="preserve">
          <source>Chef Infra Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e6211521f988fddda999f76069b7246cf97709" translate="yes" xml:space="preserve">
          <source>Chef Infra Cookbooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe7f203869f729c07e80db143260611e26806ba" translate="yes" xml:space="preserve">
          <source>Chef Infra Extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635514e0c37a560f566ff35bc3210c7b4ceba819" translate="yes" xml:space="preserve">
          <source>Chef Infra Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1276de3bcde891f80cac8cb82c42d3d4296a9869" translate="yes" xml:space="preserve">
          <source>Chef Infra Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99e72f45eab575920e8a1a9d4dd782d2ebc2350" translate="yes" xml:space="preserve">
          <source>Chef Infra Provisioner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c2c808270c6c7c58fa214840876950a228c2c7" translate="yes" xml:space="preserve">
          <source>Chef Infra Quick Start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de36be40539b85b17d8683e50456ac4428263fb6" translate="yes" xml:space="preserve">
          <source>Chef Infra Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25905fdd1b81d3747368fa408f0822d33a9ec5e" translate="yes" xml:space="preserve">
          <source>Chef Infra Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df708d9572a72d82ae39f10bff457ce2d2aabfa" translate="yes" xml:space="preserve">
          <source>Chef Infra Server (Formerly Chef Server)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc396f1dd66c8bf648f17a57dc40c1239989654" translate="yes" xml:space="preserve">
          <source>Chef Infra Server - 8GB RAM recommended</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f697eae2ce84214724ef35b297d873e9e3af51" translate="yes" xml:space="preserve">
          <source>Chef Infra Server 12.17.15 or Later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1da5679e0c07b1e07e613f5deee5c4ceb8a2fa" translate="yes" xml:space="preserve">
          <source>Chef Infra Server 13 and 14 are governed by the &lt;a href=&quot;../chef_license_accept/index#chef-infra-server&quot;&gt;Chef License&lt;/a&gt;. You will be required to accept these terms when using Chef Infra Server 13 or 14 for the first time by entering &lt;code&gt;Yes&lt;/code&gt; when prompted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9ad757c36b886ea78cc21693c91bdacb60d06c" translate="yes" xml:space="preserve">
          <source>Chef Infra Server 13 and 14 are supported Chef Software distributions. Earlier versions are no longer supported. For more information about supported Chef Software see the &lt;a href=&quot;../versions/index#supported-commercial-distributions&quot;&gt;Supported Versions&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e24966cabcc4de22c151cbb92cedf9c0aa60ab4" translate="yes" xml:space="preserve">
          <source>Chef Infra Server 13 and 14 supports Chef Manage and Push Jobs. Both of these add-ons are &lt;a href=&quot;../versions/index#deprecated-products-and-versions&quot;&gt;deprecated&lt;/a&gt;. Push Jobs will reach EOL on December 31, 2020 and Chef Manage will reach EOL on December 31, 2021. After upgrading Chef Infra Server, reinstall the add-on and then reconfigure Chef Infra Server and the add-on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e827e381d676867b37f5e70d4b245bb7bf644ecb" translate="yes" xml:space="preserve">
          <source>Chef Infra Server 14</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1b718eb5dc499c65c5d3256357d2d57fe738ea" translate="yes" xml:space="preserve">
          <source>Chef Infra Server 14 uses Elasticsearch as its search index. The Chef Infra Server 14 upgrade process requires downtime for stopping the server, installing the new package, and then upgrading the server, which will include an automatic Elasticsearch reindexing operation for existing Solr users. We estimate the reindexing operation will take 2 minutes for each 1000 nodes, but the it could take more time, depending on your server hardware and the complexity of your Chef data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a245d047adee122d7b941087a27577b1a80e2313" translate="yes" xml:space="preserve">
          <source>Chef Infra Server API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b14f8cedf20a5909e6ba02736cd5803977df43" translate="yes" xml:space="preserve">
          <source>Chef Infra Server API Authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7223a0a21c8386be88beaca6c8b7422b6b250c5" translate="yes" xml:space="preserve">
          <source>Chef Infra Server API client key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e5e44c8a3dd833b3c8473453362212e282c080" translate="yes" xml:space="preserve">
          <source>Chef Infra Server API client name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf7d1fde9c6fee27c46cc92b5ce139c14d9629b" translate="yes" xml:space="preserve">
          <source>Chef Infra Server Credentials Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5573047560fa85a7585e2e4b4d3c2e57dad9d5" translate="yes" xml:space="preserve">
          <source>Chef Infra Server Key Storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24968591eb289493e76b9570090df589bd2c35c4" translate="yes" xml:space="preserve">
          <source>Chef Infra Server Key Use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2908b84a5f87e25149077056dea524aa7edfddb8" translate="yes" xml:space="preserve">
          <source>Chef Infra Server Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d69746d63f9a97606426b3fb2497f50b68a7a3" translate="yes" xml:space="preserve">
          <source>Chef Infra Server Prerequisites</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37395303d2af669846f5edca0d51d23e573a9ac" translate="yes" xml:space="preserve">
          <source>Chef Infra Server SOLR Search Of Nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2234929981be640a15c9225a2b6c394e697af181" translate="yes" xml:space="preserve">
          <source>Chef Infra Server Setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae70c48dbceefed3639de3715efce9d769024641" translate="yes" xml:space="preserve">
          <source>Chef Infra Server Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e69a77c4d9328bf49a0f5cd68a86ebe31b2b50" translate="yes" xml:space="preserve">
          <source>Chef Infra Server URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08970410cebbaf0913253cd3957a92d0e07205c" translate="yes" xml:space="preserve">
          <source>Chef Infra Server URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780ebedd7e13469f2e6dddd8079875c527e4fbd6" translate="yes" xml:space="preserve">
          <source>Chef Infra Server Upgrade Matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a27390ed06d1951cd9239a743f31fc9bfc56a0" translate="yes" xml:space="preserve">
          <source>Chef Infra Server as OpenID Connect client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79f2950801a275b12e71ff1b8bbc6bf791f8021" translate="yes" xml:space="preserve">
          <source>Chef Infra Server frontend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11bcdacb78b3a7b00a162111c72da2e9c6278c2" translate="yes" xml:space="preserve">
          <source>Chef Infra Server is also distributed as a Habitat package and ran using the Habitat supervisor. In this mode, users accept the license by setting the correct Habitat configuration values. The key is &lt;code&gt;chef_license.acceptance&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae6c2d41828631529fcc13b3f5a2ec4eee5f5b4" translate="yes" xml:space="preserve">
          <source>Chef Infra Server services will be unavailable while the software is updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8d3b95c89bd0f0ee26cd77a18aed43ae291dd5" translate="yes" xml:space="preserve">
          <source>Chef Infra Server version 12.13.0 or greater</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e9e685de53c0b463e6eeef38bbf2c08799045a" translate="yes" xml:space="preserve">
          <source>Chef Infra Server versions 12.4.0 and above support signing protocol version 1.3, which adds support for SHA-256 algorithms. It can be enabled on Chef Infra Client via the &lt;code&gt;client.rb&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099ff603397aff1fdb88b5aea461ee89bef4c4f7" translate="yes" xml:space="preserve">
          <source>Chef Infra Server, On-premises or in Cloud Environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c4428f3d464ec521a6a6319e774e4c1f4a3b16" translate="yes" xml:space="preserve">
          <source>Chef Infra attributes have a completely different and much more complex precedence system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d932c8f227d36756a187f00fc9681ace99cd1db6" translate="yes" xml:space="preserve">
          <source>Chef Infra defines a common workflow for cookbook development:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86408e50fd8da663b5f61c30d8eea019126fcb4e" translate="yes" xml:space="preserve">
          <source>Chef Infra has the following major components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f7450f999a4866dc4642cb2fd335aa2bfeac13" translate="yes" xml:space="preserve">
          <source>Chef Infra is a powerful automation platform that transforms infrastructure into code. Chef Infra automates how infrastructure is configured, deployed, and managed across your network, no matter its size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85eb734ef6a50b6924cc6018b86f612fda9f7a15" translate="yes" xml:space="preserve">
          <source>Chef Infra is a powerful automation platform that transforms infrastructure into code. Whether you&amp;rsquo;re operating in the cloud, on-premises, or in a hybrid environment, Chef Infra automates how infrastructure is configured, deployed, and managed across your network, no matter its size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce8f2cf6ded7f851192683b12670dcd7bf23655" translate="yes" xml:space="preserve">
          <source>Chef Infra is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. Each organization is comprised of one (or more) Chef Workstation installations, a single server, and every node that will be configured and maintained by Chef Infra Client. Cookbooks (and recipes) are used to tell Chef Infra Client how each node in your organization should be configured. Chef Infra Client&amp;mdash;which is installed on every node&amp;mdash;does the actual configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1858491530df156d740676ee866f3e0f42481141" translate="yes" xml:space="preserve">
          <source>Chef Infra is constructed so that most of the computational effort occurs on the nodes rather than on the Chef Infra Server. A node represents any system you manage and is typically a virtual machine, container instance, or physical server. Basically, it&amp;rsquo;s any compute resource in your infrastructure that&amp;rsquo;s managed by Chef Infra. All nodes have Chef Infra Client installed on them, and Chef Infra Client is available for multiple platforms including Linux, macOS, Windows, AIX, and Solaris.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012d4fef8d06caf13a243f92dd2ef6b2fad34a01" translate="yes" xml:space="preserve">
          <source>Chef Infra provides a growing number of Windows-specific resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f2a2fd06b66eb89b84ae3ed3e11763558eb5df" translate="yes" xml:space="preserve">
          <source>Chef Infra support in editors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434d6fab443906d3852bd58c1d64cc41f6d3a698" translate="yes" xml:space="preserve">
          <source>Chef Infra: Use the chef command-line tool to work with items in a chef-repo, which is the primary location in which cookbooks are authored, tested, and maintained, and from which policy is uploaded to the Chef Infra Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee0d14c84cceb9a3aaff4808d0bc7c38d66b581" translate="yes" xml:space="preserve">
          <source>Chef Infrastructure Automation Cookbook - Second Edition [Packt Publishing]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920bd9e55bc44eb7681624be890e08194f46dd32" translate="yes" xml:space="preserve">
          <source>Chef Installation Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2c55a0f7dbfd9c03c6c22fcdc80aeb70f5a825" translate="yes" xml:space="preserve">
          <source>Chef Logo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25a5dad138475a67d61f8c6efcb3b3a8e48a6f4" translate="yes" xml:space="preserve">
          <source>Chef MLSA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3542c014efc9d68b5b9f5ec98fa54d4d846a36" translate="yes" xml:space="preserve">
          <source>Chef Mailing List &lt;a href=&quot;https://discourse.chef.io/&quot;&gt;https://discourse.chef.io/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d3e4f43308831a2d724681282514883bb21d89" translate="yes" xml:space="preserve">
          <source>Chef Maintained Knife Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6491416ad9a3780a7f26fa3e0dec2e8e0acba6e3" translate="yes" xml:space="preserve">
          <source>Chef Manage</source>
          <target state="translated">Главное управление</target>
        </trans-unit>
        <trans-unit id="63455dc3a31f2f2b4d1bf227f19bf5225babd518" translate="yes" xml:space="preserve">
          <source>Chef Manage Local Installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf9a5b04349d9e91e507c05a2320f3cb488d15a" translate="yes" xml:space="preserve">
          <source>Chef Manage can support logging in users via SAML authentication. In order to do so, there must be a Chef Automate Server that is configured to act as a SAML Identity Provider (IdP). When the Chef Automate Server is configured to do so, it will provide an OpenID Connect (OIDC) protocol end-point that Chef Manage can use to initiate authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2037dea29dc28d02a1d842bc7600a0fdf418c84" translate="yes" xml:space="preserve">
          <source>Chef Manage is &lt;a href=&quot;../versions/index#deprecated-products-and-versions&quot;&gt;deprecated&lt;/a&gt; and no longer under active development. It is supported on Chef Automate installations up to version 1.8 and replaced by Chef Automate 2.0. Contact your Chef account representative for information about upgrading your system. See our &lt;a href=&quot;../automate/index&quot;&gt;Automate documentation&lt;/a&gt; to learn more about Chef Automate 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9d87b64e8be4873c34b8fdce623aff19247748" translate="yes" xml:space="preserve">
          <source>Chef Manage is deprecated and will reach &lt;a href=&quot;../versions/index#deprecated-products-and-versions&quot;&gt;EOL&lt;/a&gt; on December 31, 2021. Chef Manage is a management console for data bags, attributes, run-lists, roles, environments, and cookbooks from a web user interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f850c3cbaa1fb87f519abf55e4ea813dc63b7f79" translate="yes" xml:space="preserve">
          <source>Chef Manage is the web interface for the Chef Infra Server, which uses the Chef Infra Server API for all communication to the Chef Infra Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7f75a56dce2c6dceec0f399aeabd38bb340e35" translate="yes" xml:space="preserve">
          <source>Chef Manage uses the Web UI private key for signing requests sent to the Chef Infra Server. The key is subject to Chef server&amp;rsquo;s &lt;a href=&quot;../ctl_chef_server/index#ctl-chef-server-secrets-management&quot;&gt;Secrets Management&lt;/a&gt;, and will be stored in &lt;code&gt;/etc/opscode/private-chef-secrets.json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25292e3eca5bffe56fc34a10ceb1c0110bd81e0e" translate="yes" xml:space="preserve">
          <source>Chef Organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9d6347d34cc439a891e7ece5d4d415a58dc859" translate="yes" xml:space="preserve">
          <source>Chef Organization or Chef Infra Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84b8d6053f24846701dba0b2a1c0cc303cb4c64" translate="yes" xml:space="preserve">
          <source>Chef Organization, Chef Infra Server, Environment, Chef Role, Chef Tag, Chef Policy Name, or Chef Policy Group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b944b81d4188387ff24d059858d5558a78b75c44" translate="yes" xml:space="preserve">
          <source>Chef Product Download and Install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514b4c5253cb63943d24754a545ed1b3ff9f64cc" translate="yes" xml:space="preserve">
          <source>Chef Provisioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d3415e01c3fe8ff978f0d276d3c846bdbb1efe" translate="yes" xml:space="preserve">
          <source>Chef Push Jobs</source>
          <target state="translated">Главный Толкач</target>
        </trans-unit>
        <trans-unit id="73133acc51449cc4352fcaef1cee1028cae53850" translate="yes" xml:space="preserve">
          <source>Chef Push Jobs Client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c838377b061b78a9a52e2ad3c67b45de5197d2a0" translate="yes" xml:space="preserve">
          <source>Chef Push Jobs Groups</source>
          <target state="translated">Chief Push Jobs Groups</target>
        </trans-unit>
        <trans-unit id="ee89430402d1e92bfd0f17effee1999596d74e20" translate="yes" xml:space="preserve">
          <source>Chef Push Jobs Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c3a18415782fd9c1e27df3148d2174026b18f5" translate="yes" xml:space="preserve">
          <source>Chef Push Jobs has the following requirements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48985e77f8f2eec36fcd3487aa7899993e7624e2" translate="yes" xml:space="preserve">
          <source>Chef Push Jobs has three main components: jobs (managed by the Chef Push Jobs server), a client that is installed on every node in the organization, and one (or more) workstations from which job messages are initiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d53214ce2362f3509199dadb0945fd619be015" translate="yes" xml:space="preserve">
          <source>Chef Push Jobs is an extension of the Chef Infra Server that allows jobs to be run against nodes independently of a Chef Infra Client run. A job is an action or a command to be executed against a subset of nodes; the nodes against which a job is run are determined by the results of a search query made to the Chef Infra Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9c621ee625d270ea017f98cbbf3261699a2a47" translate="yes" xml:space="preserve">
          <source>Chef Push Jobs is installed to the following locations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474b95d35f1c9a25e3e12a122031f04a7993a65c" translate="yes" xml:space="preserve">
          <source>Chef Push Jobs uses the Chef Infra Server API and a Ruby client to initiate all connections to the Chef Infra Server. Connections use the same authentication and authorization model as any other request made to the Chef Infra Server. A knife plugin is used to initiate job creation and job tracking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee05fd6490e9d8c2a3fa803dc4433637db2ba05" translate="yes" xml:space="preserve">
          <source>Chef Replication/Sync</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798057f91ae765b028a8700fca54edc28350d2a2" translate="yes" xml:space="preserve">
          <source>Chef Repo Cookbook Pattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd3f289c73721def09105847fc5b73337709847" translate="yes" xml:space="preserve">
          <source>Chef Run CLI Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36545c17a0bf04b4dd721b6651b763def0b8b9b3" translate="yes" xml:space="preserve">
          <source>Chef SOLR search for clients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fba7401bf7efe062bbfd2e8cbf221d95b385215" translate="yes" xml:space="preserve">
          <source>Chef Server</source>
          <target state="translated">главный сервер</target>
        </trans-unit>
        <trans-unit id="2e639133ee95bfc0a3962b8ca49ebba17e98c781" translate="yes" xml:space="preserve">
          <source>Chef Server / Manage the Server</source>
          <target state="translated">Сервер шеф-повара/Управление сервером</target>
        </trans-unit>
        <trans-unit id="f3ed5aeef4670c42ea6b9799f38e8c580092740b" translate="yes" xml:space="preserve">
          <source>Chef Server / Setup &amp;amp; Config</source>
          <target state="translated">Chef Server / Настройка и настройка</target>
        </trans-unit>
        <trans-unit id="cf9256666c4fdf5ae8fc2441221a62771e3980f2" translate="yes" xml:space="preserve">
          <source>Chef Server / Theory &amp;amp; Concepts</source>
          <target state="translated">Chef Server / Теория и концепции</target>
        </trans-unit>
        <trans-unit id="2106f0c0858ae093a90abd0cfe428d75671552ce" translate="yes" xml:space="preserve">
          <source>Chef Server 12 and later enables SSL verification by default for all requests made to the server, such as those made by knife and Chef Infra Client. The certificate that is generated during the installation of the Chef Infra Server is self-signed, which means the certificate is not signed by a trusted certificate authority (CA) that ships with Chef Infra Client. The certificate generated by the Chef Infra Server must be downloaded to any machine from which knife and/or Chef Infra Client will make requests to the Chef Infra Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e14ac0b344f6fca30e368731c4e3d59c73cf713" translate="yes" xml:space="preserve">
          <source>Chef Server 12 and later enables SSL verification by default for all requests made to the server, such as those made by knife and Chef Infra Client. The certificate that is generated during the installation of the Chef Infra Server is self-signed, which means there isn&amp;rsquo;t a signing certificate authority (CA) to verify. In addition, this certificate must be downloaded to any machine from which knife and/or Chef Infra Client will make requests to the Chef Infra Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a97d89d255513076ea92b0e50595beb428dc00" translate="yes" xml:space="preserve">
          <source>Chef Server : 12.5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ac940c6fa7735c8b506aea212108d23494fe1b" translate="yes" xml:space="preserve">
          <source>Chef Server API</source>
          <target state="translated">Главный API сервера</target>
        </trans-unit>
        <trans-unit id="34b13bf97053d1f07b081de35c734ab76ded2574" translate="yes" xml:space="preserve">
          <source>Chef Server Components</source>
          <target state="translated">Компоненты главного сервера</target>
        </trans-unit>
        <trans-unit id="2614859d114fd84afe60771fe50df60039342341" translate="yes" xml:space="preserve">
          <source>Chef Server DRBD HA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5e4988997d1b3b4c4ed70a48729769717afd7c" translate="yes" xml:space="preserve">
          <source>Chef Server Setting</source>
          <target state="translated">Настройка главного сервера</target>
        </trans-unit>
        <trans-unit id="07ae4abae47e7aeeccabab04581c445609bccb4c" translate="yes" xml:space="preserve">
          <source>Chef Software Inc Packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3424e8bca1a627f74cb39db1eb139d90363ea6c" translate="yes" xml:space="preserve">
          <source>Chef Software Inc. GPG public key is can be downloaded &lt;a href=&quot;https://packages.chef.io/chef.asc&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbcd74eeac13d42f870c10cd5f9dc8aba0f60d1" translate="yes" xml:space="preserve">
          <source>Chef Software Install Script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f629ef0b22dc4f9ce858a5557a765d6a742b204" translate="yes" xml:space="preserve">
          <source>Chef Software Install Script Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b027964f3e17a6a3532cb7ffd0b3c9f50b1b2c" translate="yes" xml:space="preserve">
          <source>Chef Software aims to make upgrading from a non-EULA version to a EULA version as simple as possible. For some products (Chef Client 14.12.9, Chef InSpec 3.9.3), we added backwards-compatible support for the &lt;code&gt;--chef-license&lt;/code&gt; command that performs a no-op. This allows customers to start specifying that argument in whatever way they manage those products before upgrading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0d88765f8fc0336a599738d5c68ea727cefebe" translate="yes" xml:space="preserve">
          <source>Chef Software products are also distributed as Habitat packages, such as Chef Infra Client, Chef InSpec, etc. When Chef products are installed as Habitat, the products request license acceptance at product usage time. Whether installed as system packages or as Habitat packages, users accept the licenses in the same way detailed above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a8054bba25492f4bce908c9ea80e1801fe0c28" translate="yes" xml:space="preserve">
          <source>Chef Software requires all contributors to include a &lt;a href=&quot;https://developercertificate.org/&quot;&gt;Developer Certificate of Origin&lt;/a&gt; (DCO) sign-off with their pull request as long as the pull request does not fall under the &lt;a href=&quot;#obvious-fix&quot;&gt;Obvious Fix&lt;/a&gt; rule. This attests that you have the right to submit the work that you are contributing in your pull request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c886bafd8a68907e84c1510af5b06431b06c356d" translate="yes" xml:space="preserve">
          <source>Chef Software&amp;rsquo;s Desktop pattern and tools expands familiar device management systems with extensive application and configuration capabilities that are designed to scale with automation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c9cefc9c3d94f379a1fa2c1f5d1b4bda8d7db2" translate="yes" xml:space="preserve">
          <source>Chef Software&amp;rsquo;s Upgrade Lab provides an isolated cookbook development environment and in-line support to help you upgrade your system, so you can stop using legacy Chef Infra and start using modern Chef Infra.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9548f8b447540a6ab3bf3e547bace7e6f1081a49" translate="yes" xml:space="preserve">
          <source>Chef Style Guide</source>
          <target state="translated">Руководство по стилю головы</target>
        </trans-unit>
        <trans-unit id="0de7bc06dab439adf9011c8d2abf0d67d27ef2ce" translate="yes" xml:space="preserve">
          <source>Chef Supermarket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9fac000eb663ff53cad4a3475c7c827a09c500" translate="yes" xml:space="preserve">
          <source>Chef Supermarket installations can also use an external cache store. The public Chef Supermarket uses Redis on Amazon ElastiCache. One Redis instance per private Chef Supermarket application server may be run safely. Use Redis 2.8 (or higher) for a high availability pair. To use an external cache, configure the following attributes in the &lt;code&gt;/recipes/default.rb&lt;/code&gt; recipe of the wrapper cookbook:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb0c9066c105a64826408de571458fd3cb981d0" translate="yes" xml:space="preserve">
          <source>Chef Supermarket is a Ruby on Rails application with a PostgreSQL backend. The private Chef Supermarket configuration may be scaled-out, such as using an external database, using an external cache, and using an external cookbook storage location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3617e035312a4f2a8580de7faf9ebca9fe727fb" translate="yes" xml:space="preserve">
          <source>Chef Supermarket is the location in which community cookbooks are authored and maintained. Cookbooks that are part of the Chef Supermarket may be used by any Chef user. How community cookbooks are used varies from organization to organization.</source>
          <target state="translated">Супермаркет &quot;Шеф-повар&quot;-это место,где публикуются и обслуживаются общественные кулинарные книги.Кулинарные книги,которые являются частью супермаркета &quot;Шеф-повар&quot;,могут быть использованы любым пользователем &quot;Шеф-повара&quot;.Порядок использования кулинарных книг различается в разных организациях.</target>
        </trans-unit>
        <trans-unit id="e460aae94be97771064d6af961dce26dc8bd5b6a" translate="yes" xml:space="preserve">
          <source>Chef Supermarket is the location in which community cookbooks are shared and managed. Cookbooks that are part of the Chef Supermarket may be used by any Chef user. How community cookbooks are used varies from organization to organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc088e60fc6c1bc7497a620de9d7266b114ef8d0" translate="yes" xml:space="preserve">
          <source>Chef Supermarket is the site for community cookbooks. It provides an easily searchable cookbook repository and a friendly web UI. Cookbooks that are part of the Chef Supermarket are accessible by any Chef user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c67d5802fa44c7422ca67e03b057102ed43291" translate="yes" xml:space="preserve">
          <source>Chef Tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82667983e1e4953b4a4cc3af3bba135baf74b88" translate="yes" xml:space="preserve">
          <source>Chef Upgrade Lab Requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd54c7e25063341f6ea52fc0ee68389468b4ddb" translate="yes" xml:space="preserve">
          <source>Chef Vault</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71fa405e033373d17485c53dcba7c85ad2aca46" translate="yes" xml:space="preserve">
          <source>Chef Vault 1.0 style decryption is supported, however it has been deprecated and Chef Vault 2.0 decryption should be used instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531fd0ba25b87385de50af8c913834a5248fe8ca" translate="yes" xml:space="preserve">
          <source>Chef Vault does not currently support alternate keying mechanisms like GPG and Amazon KMS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ab19aa3a2746913fc88dc462abc5b389fabeec" translate="yes" xml:space="preserve">
          <source>Chef Vault provides a helper method to determine if a data bag item is a vault, which can be helpful if you produce a recipe for community consumption and want to support both normal data bags and vaults:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003d99c510018e196d6005573adac6b74113ac83" translate="yes" xml:space="preserve">
          <source>Chef Vault provides a helper method to determine the type of a data bag item. It returns one of the symbols :normal, :encrypted or :vault</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3246c630b125452d19583a9951cb70e31dc7a1ac" translate="yes" xml:space="preserve">
          <source>Chef Workflow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d622c79e659c3191e07996a4b13f54a3e75a06" translate="yes" xml:space="preserve">
          <source>Chef Workstation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63a57c90a748a4506d3e069be2367b012d40c54" translate="yes" xml:space="preserve">
          <source>Chef Workstation &amp;gt;= 0.4, which also contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8455c4d1dc7be0ba50ee2fe2eda9b167ec0cf3a5" translate="yes" xml:space="preserve">
          <source>Chef Workstation - How We Made that Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb7b1ac541de5ff073517e1c2d83418cbf4c788" translate="yes" xml:space="preserve">
          <source>Chef Workstation App</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46d6ea4798d9c8da7ff44e5ff5e652ef60ffead" translate="yes" xml:space="preserve">
          <source>Chef Workstation App Requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03b89dcdff1e4b4b9885c5ff80471849a46c207" translate="yes" xml:space="preserve">
          <source>Chef Workstation App and &lt;code&gt;chef-run&lt;/code&gt; configuration is managed in &lt;code&gt;config.toml&lt;/code&gt;. Chef Workstation will create &lt;code&gt;config.toml&lt;/code&gt; the first time you use &lt;code&gt;chef-run&lt;/code&gt;, if one does not already exist. To configure other tools, see their respective pages found in the toolbar under Chef Workstation Tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3177c68a12b7024262ea3124477487d41c574ff5" translate="yes" xml:space="preserve">
          <source>Chef Workstation App requires a running display manager with support for system tray icons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34377b6b3ba400b5579895924e6384c383cd5f09" translate="yes" xml:space="preserve">
          <source>Chef Workstation App: for updating and managing your chef tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d486fe8b1efa08edd6fce026a0a8b26b0e5596" translate="yes" xml:space="preserve">
          <source>Chef Workstation Components and Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f140fde15617d3bfb34481cc1a28fd811a2c4461" translate="yes" xml:space="preserve">
          <source>Chef Workstation Logs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095fbaf0a5cbe5cfca694534022a9d8f9d436a09" translate="yes" xml:space="preserve">
          <source>Chef Workstation Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75aa5cdb1d3b31c3a2fad51e863b0e7c1528b03" translate="yes" xml:space="preserve">
          <source>Chef Workstation allows you to author cookbooks and administer your infrastructure. Chef Workstation runs on the computer you use everyday, whether it&amp;rsquo;s Linux, macOS, or Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b557319cce59a3f3ba530b759c3e0cd62ed5f45" translate="yes" xml:space="preserve">
          <source>Chef Workstation can be uninstalled using the steps below that are appropriate for the platform on which Chef Workstation is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38436c1fd5d7cd928a06f5d6a5c77018bbd2811a" translate="yes" xml:space="preserve">
          <source>Chef Workstation combines the power of InSpec and &lt;code&gt;chef-run&lt;/code&gt;, giving you the ability to easily detect and correct issues on any target instance. One common task that administrators perform in their environments is installing the Network Time Protocol (NTP), which keeps the clocks in sync between servers. InSpec allows us to check if the package is installed with a query, using the InSpec &lt;code&gt;package&lt;/code&gt; resource:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea1bb9b9ccf42c7b4f6dd789fb7f62bf1b3af8d" translate="yes" xml:space="preserve">
          <source>Chef Workstation contains everything that is needed to start using Chef Infra and Chef InSpec:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064affeda786d4513594e579e0f4d77a5fb23d8e" translate="yes" xml:space="preserve">
          <source>Chef Workstation contains multiple Chef Software products. When invoking the &lt;code&gt;chef&lt;/code&gt; command line tool and accepting the license, users are required to accept the license for all the embedded products as well. The same license applies to all products, but each product must have its own license acceptance. &lt;code&gt;chef &amp;lt;command&amp;gt; --chef-license accept&lt;/code&gt; will accept the license for Chef Workstation, Chef Infra Client, Chef InSpec, and Push Jobs Client. For example, &lt;code&gt;chef env --chef-license accept&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4810a5c7a8f51ea279ea040823a90c45ee04fbd" translate="yes" xml:space="preserve">
          <source>Chef Workstation gives you everything you need to get started with Chef. Start scanning and configuring your environments today with Chef InSpec and chef-run. Chef Workstation runs on the computer you use everyday, whether it&amp;rsquo;s Linux, macOS, or Windows. Chef Workstation ships with Chef Infra Client, Chef InSpec, Chef CLI, Test Kitchen, Cookstyle, and several other useful Chef tools. With this collection of programs and tools, you can make sure your Chef Infra code does what you intended before you deploy it to environments used by others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f608eacddb77d9ff1c6d81da072a1efbac1626a0" translate="yes" xml:space="preserve">
          <source>Chef Workstation gives you everything you need to get started with Chef. Start scanning and configuring your environments today with Chef InSpec and the &lt;code&gt;chef-run&lt;/code&gt; tool. Chef Workstation runs on the computer you use everyday, whether it&amp;rsquo;s Linux, macOS, or Windows. Chef Workstation ships with Chef Infra Client, Chef InSpec, Chef CLI, Test Kitchen, Cookstyle, and other useful Chef tools. With this collection of programs and tools, you can make sure your Chef Infra code does what you intended before you deploy it to environments used by others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d2283a000839807b337e0106b46b0a1e28c1b5" translate="yes" xml:space="preserve">
          <source>Chef Workstation in Azure Cloud Shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c4f4a868d408d27b7f270296377c0ad108316c" translate="yes" xml:space="preserve">
          <source>Chef Workstation includes Cookstyle for linting the Ruby-specific and Chef-specific portions of your cookbook code. All cookbooks should pass Cookstyle rules before being uploaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141f62d3e443229e89677a1f574a6ae6c19ae877" translate="yes" xml:space="preserve">
          <source>Chef Workstation includes important command-line tools:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70272ff47be18903531e9787984e4c24483c00e2" translate="yes" xml:space="preserve">
          <source>Chef Workstation includes many common Test Kitchen drivers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49a3994884541ffc9ddfae9048246a4cc116712" translate="yes" xml:space="preserve">
          <source>Chef Workstation includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456ebea6f0b1ff7d04d59960aa1784fc8dfcd84e" translate="yes" xml:space="preserve">
          <source>Chef Workstation installs to &lt;code&gt;/opt/chef-workstation/&lt;/code&gt; on macOS / Linux and &lt;code&gt;C:\opscode\chef-workstation\&lt;/code&gt; on Windows. These file locations should help avoid interference between these components and other applications that may be running on the target machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4579b58a4905ccc2ec8be0f886b8a0cdcf1dce3b" translate="yes" xml:space="preserve">
          <source>Chef Workstation is available in Azure Cloud Shell, allowing users to run ad-hoc configurations on target systems and any other Chef command when connected to an Azure subscription. This makes all of the Chef command line tools available, without installing software on a local machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15feb379bc9d3ad7ffd9a26c955e9bb16a57fcc9" translate="yes" xml:space="preserve">
          <source>Chef Workstation logs are stored in &lt;code&gt;~/.chef-workstation/logs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15a519a2d97d77d5c61f545ef74fece5c9a34a0" translate="yes" xml:space="preserve">
          <source>Chef Workstation looks for the &lt;code&gt;config.toml&lt;/code&gt; in a default location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4cfc0876afc44caf214970d12a781745db4fe13" translate="yes" xml:space="preserve">
          <source>Chef Workstation on Azure Cloud Shell lets you use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af5d75d252370ac2218a52761067e94a36ce5f4" translate="yes" xml:space="preserve">
          <source>Chef Workstation packages all the tools necessary to be successful with Chef Infra and InSpec. These tools are combined into native packages for common operating systems and include all the dependencies you need to get started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02658e0b71ffa5d3d1117b31d9afa5e8a046fae" translate="yes" xml:space="preserve">
          <source>Chef Workstation replaces ChefDK, combining all the existing features with new features, such as ad-hoc task support and the new Chef Workstation desktop application. Chef will continue to maintain ChefDK, but new development will take place in Chef Workstation without back-porting features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0402fe016673b93578cb043e16dd54dc127637cb" translate="yes" xml:space="preserve">
          <source>Chef Workstation ships with Cookstyle, ChefSpec, Chef InSpec, and Test Kitchen testing tools. With them, you can make sure your Chef Infra code does what you intended before you deploy it to environments used by others, such as staging or production.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5734d6ab20e3f61f8360a1fb67b91b8b0cdd79" translate="yes" xml:space="preserve">
          <source>Chef Workstation version information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac3abcf3cd1e9acb940c3ef1ab7c64874e1489c" translate="yes" xml:space="preserve">
          <source>Chef Workstation: &lt;code&gt;/opt/chef-workstation/embedded/ssl/certs/cacert.pem&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa8f359a1290a98f3f581ffccb18ce5bc89657c" translate="yes" xml:space="preserve">
          <source>Chef allows resources to be created with duplicate names, rather than treating that as an error. This means that several cookbooks can request the same package be installed, without needing to carefully create unique names. This is problematic because having multiple resources with the same name makes it impossible to safely deliver notifications to the right resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4ace90d1cf2b8b176fa934af5212b79f1abf81" translate="yes" xml:space="preserve">
          <source>Chef also provides a single-resource solution to install the Network Time Protocol package:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf43c3eb6126be5969fa8ba8f335adf38468bfc" translate="yes" xml:space="preserve">
          <source>Chef and Google</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e9689581eb14bd328358c3f878ad48b9430219" translate="yes" xml:space="preserve">
          <source>Chef and Terraform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf0781dfad11245679b2951cd687231eefb5818" translate="yes" xml:space="preserve">
          <source>Chef and VMware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e78ec57991f2b658a029783e072d924255b460" translate="yes" xml:space="preserve">
          <source>Chef attributes for use in the suite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7da478ff22616c601e991260308f3d549e57ec" translate="yes" xml:space="preserve">
          <source>Chef automate server installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e8a67a30b9780f0f7bc703b6fdbb3895fb9b6f" translate="yes" xml:space="preserve">
          <source>Chef clients or users to be vault admins, can be comma list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0cfc0384b2ea8a0fb2ad99fea3b8fd8273279b" translate="yes" xml:space="preserve">
          <source>Chef clients to be added as clients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250470130773a484ef98380f66f0b89c4c23762d" translate="yes" xml:space="preserve">
          <source>Chef continues to provide releases to the application or version in response to customer needs and security vulnerabilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df67b3896afd21c42f54b4fc85c1a24cc2640586" translate="yes" xml:space="preserve">
          <source>Chef development kit: &lt;code&gt;/opt/chefdk/embedded/ssl/certs/cacert.pem&lt;/code&gt;</source>
          <target state="translated">Комплект разработчика Chef: &lt;code&gt;/opt/chefdk/embedded/ssl/certs/cacert.pem&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19b1f0b0b181870860ff0ad82a29a6b41007a25f" translate="yes" xml:space="preserve">
          <source>Chef docs uses &lt;a href=&quot;https://gohugo.io/content-management/shortcodes/&quot;&gt;shortcodes&lt;/a&gt; to maintain text that appears in more than one location and must be consistent in every location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a706e798851732cf4b367eb92fae4dac5712fd9" translate="yes" xml:space="preserve">
          <source>Chef does not follow a specific grammar convention. Be clear and consistent as often as possible. Follow the established patterns in the docs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a48236ed4e73bdea1b9da01a2c66e6b00b8aa29" translate="yes" xml:space="preserve">
          <source>Chef does not merge any pull requests made against a Chef-managed open source repository until each commit has been signed for the DCO, with three exceptions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306e3dc3aba090e91910dde158fd150b4c113ffb" translate="yes" xml:space="preserve">
          <source>Chef does not prescribe any specific editor. However, the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=chef-software.Chef&quot;&gt;Chef Infra extension&lt;/a&gt; for &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; features several code generators and helpful features, such as running Cookstyle each time you save a recipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abc531bbf3211c4da764a6fb50f9f2ba5299fee" translate="yes" xml:space="preserve">
          <source>Chef does not prescribe any specific editor. However, we highly recommend using &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; (VSCode) and the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=chef-software.Chef&quot;&gt;Chef Infra extension for VSCode&lt;/a&gt;, which features code generators and helpful features, such as running Cookstyle linting each time you save a recipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d563b2e019a82864ddf83e5b7deb677aaced8b" translate="yes" xml:space="preserve">
          <source>Chef events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee28714bae6e41af4069bd02e7238a2f421ad3ec" translate="yes" xml:space="preserve">
          <source>Chef for Microsoft Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38444c7b1af0412b1a8bafe4d48b7b718b537a2d" translate="yes" xml:space="preserve">
          <source>Chef has &lt;a href=&quot;../resources/index&quot;&gt;many built-in resources&lt;/a&gt; that cover all of the most common actions across all of the most common platforms. You can &lt;a href=&quot;../custom_resources/index&quot;&gt;build your own resources&lt;/a&gt; to handle any situation that isn't covered by a built-in resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e665fe22eeffaf18887443f1a4123ed904dd685c" translate="yes" xml:space="preserve">
          <source>Chef has many built-in resources that cover all of the most common actions across all of the most common platforms. You can build your own resources for handle any situation that isn&amp;rsquo;t covered by a built-in resource.</source>
          <target state="translated">Chef имеет множество встроенных ресурсов, которые охватывают все наиболее распространенные действия на всех наиболее распространенных платформах. Вы можете создавать свои собственные ресурсы для обработки любой ситуации, которая не покрыта встроенным ресурсом.</target>
        </trans-unit>
        <trans-unit id="be0a0dace5343a98f69a4ed906e6ea4c6c68d0aa" translate="yes" xml:space="preserve">
          <source>Chef has the following major components:</source>
          <target state="translated">У шеф-повара есть следующие основные компоненты:</target>
        </trans-unit>
        <trans-unit id="6cdda483db45598568ef925f48c7e4e79886a348" translate="yes" xml:space="preserve">
          <source>Chef incidents menu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0af23c7b385e46b4222e528eedad6498db9f62" translate="yes" xml:space="preserve">
          <source>Chef includes two important command-line tools:</source>
          <target state="translated">Шеф-повар включает в себя два важных инструмента командной строки:</target>
        </trans-unit>
        <trans-unit id="9298ecb515bd7d9bf1199fe787eb5b7dca407e9c" translate="yes" xml:space="preserve">
          <source>Chef integrations inside of the VMware Suite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48698906b8290713f835868a29ff4a958db0c5a2" translate="yes" xml:space="preserve">
          <source>Chef is a powerful automation platform that transforms infrastructure into code. Whether you&amp;rsquo;re operating in the cloud, on-premises, or in a hybrid environment, Chef automates how infrastructure is configured, deployed, and managed across your network, no matter its size.</source>
          <target state="translated">Chef - это мощная платформа автоматизации, которая превращает инфраструктуру в код. Работаете ли вы в облаке, локально или в гибридной среде, Chef автоматизирует настройку, развертывание и управление инфраструктурой в вашей сети независимо от ее размера.</target>
        </trans-unit>
        <trans-unit id="7f7bba32d57f6bc9604c20e0ab09bd7be5dbf44c" translate="yes" xml:space="preserve">
          <source>Chef is a thin DSL (domain-specific language) built on top of Ruby. This approach allows Chef to provide just enough abstraction to make reasoning about your infrastructure easy. Chef includes a built-in taxonomy of all the basic resources one might configure on a system, plus a defined mechanism to extend that taxonomy using the full power of the Ruby language. Ruby was chosen because it provides the flexibility to use both the simple built-in taxonomy, as well as being able to handle any customization path your organization requires.</source>
          <target state="translated">Шеф-повар-это тонкий DSL (специфический для домена язык),построенный поверх Ruby.Этот подход позволяет Chef предоставить достаточно абстрактной информации,чтобы сделать рассуждения о вашей инфраструктуре простыми.Chef включает в себя встроенную таксономию всех основных ресурсов,которые можно сконфигурировать в системе,плюс определенный механизм для расширения этой таксономии,используя всю мощь языка Ruby.Язык Ruby был выбран потому,что он обеспечивает гибкость в использовании как простой встроенной таксономии,так и возможность работать с любыми настройками,которые требуются вашей организации.</target>
        </trans-unit>
        <trans-unit id="17784656425302b8da13f5086a8f469c69918c2f" translate="yes" xml:space="preserve">
          <source>Chef is an automation company. Ever since it was founded in 2008, we&amp;rsquo;ve been bringing together developers and system administrators with our namesake product, Chef Infra. Over the years, what we mean by automation has expanded. Today, Chef has a complete automation solution for both infrastructure and applications that takes you all the way from development to production. Here&amp;rsquo;s the complete Chef solution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d802a309b939458bd1a7b5dec3b548a1ffdc7b7" translate="yes" xml:space="preserve">
          <source>Chef is maintained on GitHub. To contribute to Chef, such as submitting a pull request, requires using GitHub and git. The sections below describe how to use git to set up the Chef repository, keep it current and synchronized, and how to use branches to submit pull requests.</source>
          <target state="translated">Шеф-повар работает на GitHub.Чтобы внести свой вклад в работу шеф-повара,например,подать запрос на подтягивание,необходимо использовать GitHub и git.В разделах ниже описано,как использовать git для настройки Chef-репозитория,поддержания его в актуальном и синхронизированном состоянии,а также как использовать ветки для отправки запроса на вытаскивание.</target>
        </trans-unit>
        <trans-unit id="3b75e74ff60b383b704bdab376c69a5581d337bc" translate="yes" xml:space="preserve">
          <source>Chef maintains a collection of cookbooks that are widely used by the community.</source>
          <target state="translated">Шеф-повар поддерживает коллекцию кулинарных книг,которые широко используются сообществом.</target>
        </trans-unit>
        <trans-unit id="beb767e0fbeea99e3cf4a96857e8ee309a5378a5" translate="yes" xml:space="preserve">
          <source>Chef maintains a large collection of cookbooks. In addition, there are thousands of cookbooks created and maintained by the community:</source>
          <target state="translated">Шеф-повар поддерживает большую коллекцию кулинарных книг.Кроме того,существуют тысячи кулинарных книг,созданных и поддерживаемых сообществом:</target>
        </trans-unit>
        <trans-unit id="6228e8856629bf87ff95747838a7f7ca6346bf65" translate="yes" xml:space="preserve">
          <source>Chef maintains the following plugins which ship with Chef Workstation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8ef3d9d049a0bec0e86cbf50d2bd0ae725aba4" translate="yes" xml:space="preserve">
          <source>Chef management console can be upgraded as part of a standalone or high availability configuration:</source>
          <target state="translated">Консоль управления Chef может быть модернизирована как часть автономной конфигурации или конфигурации высокой готовности:</target>
        </trans-unit>
        <trans-unit id="46bdbc42056fe829def531734025cb2b98574ea7" translate="yes" xml:space="preserve">
          <source>Chef management console is a web-based interface for the Chef Infra Server that provides users a way to manage the following objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd532927953a2eda90bd55a14b3aee8a4b0f255c" translate="yes" xml:space="preserve">
          <source>Chef management console is a web-based interface for the Chef server that provides users a way to manage the following objects:</source>
          <target state="translated">Консоль управления Chef представляет собой веб-интерфейс для сервера Chef,который предоставляет пользователям способ управления следующими объектами:</target>
        </trans-unit>
        <trans-unit id="4366781e30bc1ad0135dbfd49fbc52c0adcb39a4" translate="yes" xml:space="preserve">
          <source>Chef management console is the user interface for the Chef server. It is used to manage data bags, attributes, run-lists, roles, environments, and cookbooks, and also to configure role-based access for users and groups.</source>
          <target state="translated">Консоль управления Chef-это пользовательский интерфейс для сервера Chef.Она используется для управления пакетами данных,атрибутами,рабочими списками,ролями,средами и куки-книгами,а также для настройки доступа на основе ролей для пользователей и групп.</target>
        </trans-unit>
        <trans-unit id="53ecd7d3d0172cfabf61533aa66887678a1bd7c0" translate="yes" xml:space="preserve">
          <source>Chef may provide a release for a critical defect or security vulnerability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d050bf3b44ce5b78cb0891d74fd26bbf2cadb15c" translate="yes" xml:space="preserve">
          <source>Chef meetups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4472eb6bde11898c193cc6f0349790e058716df5" translate="yes" xml:space="preserve">
          <source>Chef mode to run in. Can be set in config.rb</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e0d818801a4240c2463c8594a5d606d1e7a444" translate="yes" xml:space="preserve">
          <source>Chef mode to run in. Default Value: &lt;code&gt;solo&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a79430fd2040aa943261c25e91d73cdcab4425" translate="yes" xml:space="preserve">
          <source>Chef no longer provides scheduled releases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cf62a753e566127f9b3b9e5fe61aabb5e971a7" translate="yes" xml:space="preserve">
          <source>Chef on Atom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f008286e091c763d00d75f7d0d74371d911b8bc" translate="yes" xml:space="preserve">
          <source>Chef on GitHub</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad1d98144950dde93900b13d1d8427e1475be6a" translate="yes" xml:space="preserve">
          <source>Chef on Nodes</source>
          <target state="translated">Шеф-повар на узлах</target>
        </trans-unit>
        <trans-unit id="be468a9b91f600d72f446cb56239ce26e98bcfbc" translate="yes" xml:space="preserve">
          <source>Chef provides Amazon Machine Images (AMIs) for Chef Automate and Chef Infra Server that can be launched from the &lt;a href=&quot;https://aws.amazon.com/marketplace/seller-profile/ref=srh_res_product_vendor?ie=UTF8&amp;amp;id=e7b7691e-634a-4d35-b729-a8b576175e8c&quot;&gt;AWS Marketplace&lt;/a&gt;. Hourly metered billing and Bring Your Own License (BYOL) options are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192985525c7ad1415ef3eb3a844f69a220d058d6" translate="yes" xml:space="preserve">
          <source>Chef provides a fully functional Chef Automate server that can be launched from the Azure Marketplace. A single VM running Chef Automate and Chef Infra Server will be provisioned and configured for you. The only requirement is that you provide your own Chef Automate license at the time of launch; otherwise, Chef Automate will run under a 30-day free trial. If you would like to continue using the image after 30 days, please contact &lt;a href=&quot;mailto:amp@chef.io&quot;&gt;amp@chef.io&lt;/a&gt; to obtain a new license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33db90fe9a13bfc3ca9fbbb2ada04894749bc0c7" translate="yes" xml:space="preserve">
          <source>Chef provides the following plugins, which work the same as built-in subcommands (including common options), but must be installed separately (using RubyGems): &lt;code&gt;knife azure&lt;/code&gt;, &lt;code&gt;knife bluebox&lt;/code&gt;, &lt;code&gt;knife ec2&lt;/code&gt;, &lt;code&gt;knife eucalyptus&lt;/code&gt;, &lt;code&gt;knife google&lt;/code&gt;, &lt;code&gt;knife linode&lt;/code&gt;, &lt;code&gt;knife openstack&lt;/code&gt;, &lt;code&gt;knife rackspace&lt;/code&gt;, &lt;code&gt;knife terremark&lt;/code&gt;, &lt;code&gt;knife vcloud&lt;/code&gt;, and &lt;code&gt;knife windows&lt;/code&gt;.</source>
          <target state="translated">Chef предоставляет следующие плагины, которые работают так же, как встроенные подкоманды (включая общие параметры), но должны быть установлены отдельно (используя RubyGems): &lt;code&gt;knife azure&lt;/code&gt; , &lt;code&gt;knife bluebox&lt;/code&gt; , &lt;code&gt;knife ec2&lt;/code&gt; , &lt;code&gt;knife eucalyptus&lt;/code&gt; , &lt;code&gt;knife google&lt;/code&gt; , &lt;code&gt;knife linode&lt;/code&gt; , &lt;code&gt;knife openstack&lt;/code&gt; , &lt;code&gt;knife rackspace&lt;/code&gt; , &lt;code&gt;knife terremark&lt;/code&gt; , &lt;code&gt;knife vcloud&lt;/code&gt; и &lt;code&gt;knife windows&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75035eacea3dca90e15e9eb06375d917fd8c24e0" translate="yes" xml:space="preserve">
          <source>Chef provisioning</source>
          <target state="translated">Шеф-поварское обеспечение</target>
        </trans-unit>
        <trans-unit id="ac4c61742460ee71ba08b8e3dbcaaba444c7ed53" translate="yes" xml:space="preserve">
          <source>Chef push jobs can be upgraded as part of a standalone or high availability configuration:</source>
          <target state="translated">Задания шеф-повара могут быть модернизированы как часть автономной или высокодоступной конфигурации:</target>
        </trans-unit>
        <trans-unit id="d4911b000012ec98ab4c73be2dd57e1ffa9dbe57" translate="yes" xml:space="preserve">
          <source>Chef push jobs is an extension of the Chef server that allows jobs to be run against nodes independently of a chef-client run. A job is an action or a command to be executed against a subset of nodes; the nodes against which a job is run are determined by the results of a search query made to the Chef server.</source>
          <target state="translated">Задания Chef push-это расширение сервера Chef,позволяющее запускать задания на узлах независимо от запуска Chef-клиента.Задание-это действие или команда,которая должна быть выполнена против подмножества узлов;узлы,против которых выполняется задание,определяются по результатам поискового запроса,сделанного к серверу Chef.</target>
        </trans-unit>
        <trans-unit id="b267c15489bff6148e254b21f57e1fef795a9f74" translate="yes" xml:space="preserve">
          <source>Chef push jobs uses the Chef server API and a Ruby client to initiate all connections to the Chef server. Connections use the same authentication and authorization model as any other request made to the Chef server. A knife plugin is used to initiate job creation and job tracking.</source>
          <target state="translated">Задания Chef push используют API сервера Chef и Ruby клиент для инициации всех подключений к серверу Chef.Соединения используют ту же модель аутентификации и авторизации,что и любой другой запрос,сделанный к серверу Chef.Плагин ножа используется для инициирования создания и отслеживания вакансий.</target>
        </trans-unit>
        <trans-unit id="134668cfc1259d5537ec0cbbed70e8bdb1d63e88" translate="yes" xml:space="preserve">
          <source>Chef recommends a single virtual machine instance</source>
          <target state="translated">Шеф-повар рекомендует один экземпляр виртуальной машины</target>
        </trans-unit>
        <trans-unit id="b14de69d9d1fc6d4864412e16f020489906fc161" translate="yes" xml:space="preserve">
          <source>Chef recommends a single virtual machine instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df33a0dc684e8b31405bda877e879f158dde2c9c" translate="yes" xml:space="preserve">
          <source>Chef recommends that Chef professional services be engaged to help with capacity and architectural planning at this size</source>
          <target state="translated">Шеф-повар рекомендует привлечь профессиональные услуги шеф-повара,чтобы помочь с мощностью и архитектурным планированием такого размера</target>
        </trans-unit>
        <trans-unit id="d07375a4b4513e6fc79228821b9bdd90ab99d863" translate="yes" xml:space="preserve">
          <source>Chef recommends two hosts, one front-end and one back-end</source>
          <target state="translated">Шеф-повар рекомендует двух хозяев,одного спереди и одного сзади.</target>
        </trans-unit>
        <trans-unit id="517ced992f6151c03b64bd9c1696dfb3c46c4306" translate="yes" xml:space="preserve">
          <source>Chef recommends using the stable channel when installing any of these products on production systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d016af9acea69e91a2435fb499b1f53c22a92304" translate="yes" xml:space="preserve">
          <source>Chef requires that the self-signed Chef Automate SSL certificate (&lt;code&gt;HOSTNAME.crt&lt;/code&gt;) is located in the &lt;code&gt;/etc/chef/trusted_certs&lt;/code&gt; directory on any node that wants to send data to Chef Automate. This directory is the location into which SSL certificates are placed when a node has been bootstrapped with Chef Infra Client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425bc003977ef1ba47e2852c19fc118f60f10897" translate="yes" xml:space="preserve">
          <source>Chef requires that the self-signed Chef Automate SSL certificate (&lt;code&gt;HOSTNAME.crt&lt;/code&gt;) is located in the &lt;code&gt;/etc/chef/trusted_certs&lt;/code&gt; directory on any node that wants to send data to Chef Automate. This directory is the location into which SSL certificates are placed when a node has been bootstrapped with chef-client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe05d28ae583279b1f7c2dc9163d83d925c34c22" translate="yes" xml:space="preserve">
          <source>Chef resources include common properties, notifications, and resource guards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149880b7f3566387537ffda1a91722146e6a3a61" translate="yes" xml:space="preserve">
          <source>Chef server 12 enables SSL verification by default for all requests made to the server, such as those made by knife and the chef-client. The certificate that is generated during the installation of the Chef server is self-signed, which means the certificate is not signed by a trusted certificate authority (CA) that ships with the chef-client. The certificate generated by the Chef server must be downloaded to any machine from which knife and/or the chef-client will make requests to the Chef server.</source>
          <target state="translated">Chef-сервер 12 по умолчанию включает SSL-верификацию для всех запросов,сделанных к серверу,например,запросов,сделанных ножом и chef-клиентом.Сертификат,который генерируется во время установки Chef сервера,является самоподписанным,что означает,что сертификат не подписан доверенным центром сертификации (CA),который поставляется с chef-клиентом.Сертификат,генерируемый Chef-сервером,должен быть загружен на любую машину,с которой нож и/или chef-клиент будут делать запросы к Chef-серверу.</target>
        </trans-unit>
        <trans-unit id="0d93b734d698e91c1ef96692f09ad3eb37704398" translate="yes" xml:space="preserve">
          <source>Chef server 12 enables SSL verification by default for all requests made to the server, such as those made by knife and the chef-client. The certificate that is generated during the installation of the Chef server is self-signed, which means there isn&amp;rsquo;t a signing certificate authority (CA) to verify. In addition, this certificate must be downloaded to any machine from which knife and/or the chef-client will make requests to the Chef server.</source>
          <target state="translated">Chef-сервер 12 обеспечивает проверку SSL по умолчанию для всех запросов, сделанных к серверу, таких как запросы, сделанные ножом и chef-клиентом. Сертификат, сгенерированный во время установки сервера Chef, является самозаверяющим, что означает отсутствие подписывающего центра сертификации (ЦС) для проверки. Кроме того, этот сертификат должен быть загружен на любой компьютер, с которого нож и / или chef-клиент будут отправлять запросы серверу Chef.</target>
        </trans-unit>
        <trans-unit id="fca7ef521cfaa0ca5c29af8918114bf4e333b05d" translate="yes" xml:space="preserve">
          <source>Chef server 12 is installed to &lt;code&gt;/opt/opscode&lt;/code&gt;. (The existing Open Source Chef remains at &lt;code&gt;/opt/chef-server&lt;/code&gt;.) From this point, the &lt;code&gt;chef-server-ctl&lt;/code&gt; commands are running against the &lt;code&gt;/opt/opscode&lt;/code&gt; location.</source>
          <target state="translated">Chef-сервер 12 установлен в &lt;code&gt;/opt/opscode&lt;/code&gt; . (Существующий Open Source Chef остается в &lt;code&gt;/opt/chef-server&lt;/code&gt; .) С этого момента команды &lt;code&gt;chef-server-ctl&lt;/code&gt; выполняются в расположении &lt;code&gt;/opt/opscode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75f96c3923e47f0064e42723ab1c7f4b0f519274" translate="yes" xml:space="preserve">
          <source>Chef server API</source>
          <target state="translated">API шеф-сервера</target>
        </trans-unit>
        <trans-unit id="c19485f7c92c631d7c52b43997576a661bcdfe9a" translate="yes" xml:space="preserve">
          <source>Chef software is supported on the various operating systems (platforms) listed below. To see which versions of our software we currently support, see the &lt;a href=&quot;../versions/index&quot;&gt;Supported Versions&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c356c0933cf260e0bfda675a254f01d7d5d5deb4" translate="yes" xml:space="preserve">
          <source>Chef strongly recommends using some type of version control tool to manage the source code in the chef-repo. Chef uses git for everything, including for cookbooks. git and/or GitHub is not required to use Chef. If another version source control system is preferred over git (such as Subversion, Mercurial, or Bazaar) that is just fine.</source>
          <target state="translated">Шеф-повар настоятельно рекомендует использовать какой-нибудь инструмент контроля версий для управления исходным кодом в chef-repo.Шеф-повар использует git для всего,включая кулинарные книги.git и/или GitHub не требуется для использования Chef.Если другая система управления версиями предпочтительнее git'а (например,Subversion,Mercurial или Bazaar),то это просто замечательно.</target>
        </trans-unit>
        <trans-unit id="3ac58ace48338e70833642aae67feeaf53292b89" translate="yes" xml:space="preserve">
          <source>Chef training</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a318c1c6fc40d05ae02ca0e9f687ea724027ebf" translate="yes" xml:space="preserve">
          <source>Chef users to be added as admins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afdd590538d40a4b861763f51231e9f3825fdebd" translate="yes" xml:space="preserve">
          <source>Chef uses MD5 hashes to uniquely identify files that are stored on the Chef Infra Server. MD5 is used only to generate a unique hash identifier and is not used for any cryptographic purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a33fa13c51c1fc2ec8990e9f03bda0453fae109" translate="yes" xml:space="preserve">
          <source>Chef uses MD5 hashes to uniquely identify files that are stored on the Chef server. MD5 is used only to generate a unique hash identifier and is not used for any cryptographic purpose.</source>
          <target state="translated">Chef использует MD5 хэши для уникальной идентификации файлов,которые хранятся на сервере Chef.MD5 используется только для генерации уникального идентификатора хэша и не используется для каких-либо криптографических целей.</target>
        </trans-unit>
        <trans-unit id="834a3803148c7022953dc2b86362744e4b7bf025" translate="yes" xml:space="preserve">
          <source>Chef uses Ruby as its reference language to define the patterns that are found in resources, recipes, and cookbooks</source>
          <target state="translated">Шеф-повар использует Ruby в качестве справочного языка для определения шаблонов,которые можно найти в ресурсах,рецептах и кулинарных книгах.</target>
        </trans-unit>
        <trans-unit id="6436be78135900f530c12b21263ff512a6012fb2" translate="yes" xml:space="preserve">
          <source>Chef uses the Apache License Version 2 because it provides the same level of freedom for our users that we desire for ourselves. Based upon the Apache Licensing FAQ, it allows you to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efcd0b773bce17b673a772e686a84607c9235b8e" translate="yes" xml:space="preserve">
          <source>Chef version 12.12.15 or greater is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d081390342384ca3e74ac81eea779f2544955520" translate="yes" xml:space="preserve">
          <source>Chef welcomes customer feature requests for the product roadmap for the application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f799c4ebc4417ee684d81f3ddc3e2a14a1923bc" translate="yes" xml:space="preserve">
          <source>Chef will only emit a deprecation warning in the situation that a cloned resource is significantly different from the existing one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff516c2816bf2b509aa2fa2dbc384d77d2a11604" translate="yes" xml:space="preserve">
          <source>Chef will warn you if the Recipe DSL is provided by another custom resource or built-in resource. For example:</source>
          <target state="translated">Шеф-повар предупредит вас,если Recipe DSL предоставляется другим пользовательским ресурсом или встроенным ресурсом.Например:</target>
        </trans-unit>
        <trans-unit id="e530e61a58cda774c3ef90e77f00bfc4f2dc7f77" translate="yes" xml:space="preserve">
          <source>Chef&amp;rsquo;s Omnitruck API powers the Chef Software Install script as well as downloads.chef.io site. It can be used to query available versions of Chef Software Inc. products and to provide direct download URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15dfa09f683c87d484bc3690a2d2f0d8f589944e" translate="yes" xml:space="preserve">
          <source>Chef&amp;rsquo;s contribution policy is aimed at encouraging broad participation from our community, and minimizing risks to Chef and our community due to inappropriate contributions of the intellectual property of others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0d2ea453a97b5b28177b2e09d53b26c8bd31cd" translate="yes" xml:space="preserve">
          <source>Chef&amp;rsquo;s products on particular platforms and versions generally reach end-of-life on the same date as the vendor EOL milestone for that operating systems. Because different vendors use different terminology, the following table clarifies when Chef products are end-of-life according to those vendors' terms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389040213d3ad4d653cffccbe08fa8b3c8cae189" translate="yes" xml:space="preserve">
          <source>Chef's exit codes are now defined so that it's easy to understand why Chef exited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797297e6725789cc9e018b4628dec9e49d5aadb1" translate="yes" xml:space="preserve">
          <source>Chef, Chef Workstation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05dbc237b02a7a26c3ea3d9fa970feec96169ff" translate="yes" xml:space="preserve">
          <source>Chef-Managed Policies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ab1471c19dc9e000b6eeb92e461e592f4515d3" translate="yes" xml:space="preserve">
          <source>Chef-Managed Roles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f281a26ad00d7e695c30fb411fda37e5d001ba4" translate="yes" xml:space="preserve">
          <source>Chef-managed</source>
          <target state="translated">Chef-managed</target>
        </trans-unit>
        <trans-unit id="79a3019a17824a8429c6dce53c6cf69fc3477ab9" translate="yes" xml:space="preserve">
          <source>Chef-managed cookbooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436ba368736d0a458503997617eea78467e57a82" translate="yes" xml:space="preserve">
          <source>Chef-managed roles are roles provided by Chef that cannot be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafc2ef64a24ca4fd3b775537191aa094b870093" translate="yes" xml:space="preserve">
          <source>Chef/Ohai 14 (April 2018) will remove the IpScopes plugin. The data returned by this plugin is nearly identical to information already returned by individual network plugins, and this plugin required the inclusion of an additional gem into the Chef installation. We believe that few users were installing the gem, and users would be better served by the data returned from network plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa51bb6b3088ff9c1ffd4ec3a1739e12ed80887b" translate="yes" xml:space="preserve">
          <source>Chef: Powerful Infrastructure Automation [Packt Publishing]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed7e67488fc6ad8a9c441b02e6ba434a9d5e194" translate="yes" xml:space="preserve">
          <source>Chef::Log Entries</source>
          <target state="translated">Начальник::Записи журнала</target>
        </trans-unit>
        <trans-unit id="d7e30110984398662d2ac9faae88d839b11f30c0" translate="yes" xml:space="preserve">
          <source>Chef::Provider</source>
          <target state="translated">Chef::Provider</target>
        </trans-unit>
        <trans-unit id="faff7c62ce3438811bf20a9ce65903e26e18d74a" translate="yes" xml:space="preserve">
          <source>ChefDK</source>
          <target state="translated">ChefDK</target>
        </trans-unit>
        <trans-unit id="476f4b0aa65a5b46f9440d1cb2b3b9c3dfc31697" translate="yes" xml:space="preserve">
          <source>ChefDK 2.0 or later should only be installed on runners that are associated with Chef Automate 1.5 or later. Using ChefDK 2.0 on runners that are associated with an earlier version of Chef Automate will result in an error during deployment. If you are running an older version of Chef Automate, you should either downgrade your runners to use ChefDK 1.x or upgrade to Chef Automate 1.5 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd4f2655532aea3f39729d9a3f4b5a81a6772f4" translate="yes" xml:space="preserve">
          <source>ChefDK: &lt;code&gt;/opt/chefdk/embedded/ssl/certs/cacert.pem&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff94df95142881b2158148f69a8d87645c6ea57e" translate="yes" xml:space="preserve">
          <source>ChefSpec</source>
          <target state="translated">ChefSpec</target>
        </trans-unit>
        <trans-unit id="c24fc6eb8afae5cfb9f9b59035ec379f3cc444fc" translate="yes" xml:space="preserve">
          <source>ChefSpec GitHub Repo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc18e2874bd390adc98085e5bad0ae2534522d1" translate="yes" xml:space="preserve">
          <source>ChefSpec is a framework that tests resources and recipes as part of a simulated Chef Infra Client run. ChefSpec tests execute very quickly. When used as part of the cookbook authoring workflow, ChefSpec tests are often the first indicator of problems that may exist within a cookbook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61780527810962c6b034d50ed5700714cb9a2466" translate="yes" xml:space="preserve">
          <source>ChefSpec is a unit-testing framework for testing Chef Infra cookbooks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1b75d7feacb439328c40552b1ac6c5b06a22c1" translate="yes" xml:space="preserve">
          <source>ChefSpec is built on the RSpec DSL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65968764158b9a8cdb46994839fc67213b0a876" translate="yes" xml:space="preserve">
          <source>ChefSpec is packaged as part of Chef Workstation. To run ChefSpec:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047e141cca413c8be6944638a30d074d6738e2ac" translate="yes" xml:space="preserve">
          <source>Chocolatey is a package manager for Windows. You can use it to easily install, configure, upgrade, and even uninstall Windows software packages. We recommend using Chocolatey for installing Chef Habitat.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc70ad8b254aab00bc4b91528cad0ea601560ba" translate="yes" xml:space="preserve">
          <source>Choose a privacy setting for the package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abdd2c007288c8a3dd650c324868154149327a6" translate="yes" xml:space="preserve">
          <source>Choose an IP address for the backend virtual IP (VIP). It must reside in the same network segment as the backend instances and must be &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/MultipleIP.html&quot;&gt;assignable as a secondary private IP address&lt;/a&gt; to the primary backend Chef server. The IP address is specified in the chef-server.rb file. During installation, the high-availability plugin will automatically assign the VIP to the elastic network interface (ENI) for the primary instance.</source>
          <target state="translated">Выберите IP-адрес для внутреннего виртуального IP-адреса (VIP). Он должен находиться в том же сегменте сети, что и серверные экземпляры, и его можно назначать &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/MultipleIP.html&quot;&gt;в качестве вторичного частного IP-адреса&lt;/a&gt; первичному внутреннему серверу Chef. IP-адрес указан в файле chef-server.rb. Во время установки плагин высокой доступности автоматически назначит VIP для интерфейса эластичной сети (ENI) для основного экземпляра.</target>
        </trans-unit>
        <trans-unit id="a20d37ef35747022633010f9a9dc741dc4b53169" translate="yes" xml:space="preserve">
          <source>Choose the GitHub organization and repository containing your Chef Habitat plan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d287c46c10bcb0f45d949378cc07ac8045d9fcf" translate="yes" xml:space="preserve">
          <source>Choose the appropriate &lt;a href=&quot;../attributes/index#attribute-precedence&quot;&gt;precedence level&lt;/a&gt;, then replace &lt;code&gt;set&lt;/code&gt; with that precedence level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37579733f8c82f16217e84aed2bed74cfaf984b" translate="yes" xml:space="preserve">
          <source>Cisco IOS XR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23473a9fb20d760fe09c5e9b1bdb663fa228072" translate="yes" xml:space="preserve">
          <source>Cisco NX-OS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b58fc1f2a14ad68fba7a4a4c579a173efab436" translate="yes" xml:space="preserve">
          <source>Citizen Code of Conduct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e735f2e42f0ee01fd065b66b276180dd776b09" translate="yes" xml:space="preserve">
          <source>Class Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d90e062b68cbf76fa3e64924c1ac89481bdf4fe" translate="yes" xml:space="preserve">
          <source>Clean up &lt;code&gt;git&lt;/code&gt; history for any cookbook found to be excessively large.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f131db9d573919d171a30dc322aa232e6b6fec" translate="yes" xml:space="preserve">
          <source>Clean up the remnants of any previous build job, ensuring it can&amp;rsquo;t pollute out new output. Delegates most of the implementation to the &lt;code&gt;do_default_clean()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884ac29d2efc85f7f1094775095519477f18dd98" translate="yes" xml:space="preserve">
          <source>Clean up the server by removing the old data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b825e6bb522591a247d1922a67ab8d0cacac79ac" translate="yes" xml:space="preserve">
          <source>Cleaning up comments in the code;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c1cbf3543371f2ef4c721d6c5a218d99781274" translate="yes" xml:space="preserve">
          <source>Cleanup</source>
          <target state="translated">Cleanup</target>
        </trans-unit>
        <trans-unit id="ea751c4873f3cec390e8a48b2fd83a000a4b0d46" translate="yes" xml:space="preserve">
          <source>Cleanup Test Kitchen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb4a94638cfbd09da31b3149a4bcb959346f91d" translate="yes" xml:space="preserve">
          <source>Clear all user privileges</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bffef30edeee15b7da1ff71e0ead0f9aaa78b7" translate="yes" xml:space="preserve">
          <source>Clearing Blockages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a44be651f20fc7e3157cde510bc8388d6f8e6c" translate="yes" xml:space="preserve">
          <source>Click &lt;code&gt;Add A New Pipeline&lt;/code&gt; on the top of the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b26879e0cd8474b6a95646cc3e7a5f533b83043" translate="yes" xml:space="preserve">
          <source>Click &lt;code&gt;Approve&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643e9f3d2a59eb9dd7763fc5a8363285df8a6fba" translate="yes" xml:space="preserve">
          <source>Click &lt;code&gt;Delete&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b584ad9a5e20710292230fb2704cc07126f652" translate="yes" xml:space="preserve">
          <source>Click &lt;code&gt;Save &amp;amp; Close&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d1c26f004f81c9cfd8bb4de4b771f3e2bd9c2b" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Add Incoming Webhooks Integration&lt;/strong&gt;. Slack will create webhook, and then provide a location from which the URL for that webhook can be copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbeb827f453d6679ea909310f136142e3e14a6c8" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Add&lt;/strong&gt;. Continue this process until all constraints are added. When finished, click &lt;strong&gt;Next&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Добавить&lt;/strong&gt; . Продолжайте этот процесс, пока все ограничения не будут добавлены. Когда закончите, нажмите &lt;strong&gt;Далее&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="01b89f24f8911bb05271c09bf944c0fcb8facacb" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Administration&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Администрирование&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e4b0dddd6d51dae7c08d965535a6b185059e17f6" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Approve&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa13b4a9080bde21c70e936e8ea34f2755ff831f" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Clients&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Клиенты&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="64c471f1d8645f60880502fe94ff40ac88228744" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Cookbooks&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Кулинарные книги&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2ab31a9b910ace159508fc8e7e1d1790f3b608af" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Client&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Создать клиента&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="57054973934787e8d6d0715a4faf2b8170fb9a84" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Data Bag Item&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Создать элемент данных&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="eadf36e13715c65536cf924e732df34c975cf9a6" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Data Bag&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Создать пакет данных&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="54a86aae3289136257721233a121e024de680ff4" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Environment&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Создать среду&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9a13a1a67bdd47da72f695adee2411276a64492d" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Item&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Создать элемент&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="480c5afa0a86aadaba6081a6f945b9ac71583354" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Role&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Создать роль&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="042df4534b3105adc33a60f810e2203f766c0ce2" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Создать&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="49c72290f0606831b7d2a7000ad97530020b8aea" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Data Bags&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Data Bags&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ab8d729d3b186bf488cc4ce457fc8e4bad81f535" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Delete&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Удалить&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="06faff9c1f96d42f714d69c85a99d1985d8e27bf" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Download File&lt;/strong&gt;:</source>
          <target state="translated">Нажмите &lt;strong&gt;Загрузить файл&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="c84618757009fe52a1048be60d98381128677148" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Edit Run List&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Изменить список выполнения&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e3f7346e3c5176caf492fa3280b9ef1c0df82711" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Edit&lt;/strong&gt; to open the details for that organization or project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599e664c7c571e12e3b5ca45488d68364b15a010" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Edit&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Изменить&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9ab4321ac24676e834df88013f5cef39d98bb016" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Environments&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Окружения&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ed807e6bb565f9557ba0343c54fd63b2e52899c5" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Generate new token&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee9cabc722d2a661c61607f98c63c83a2905862" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Generate token&lt;/strong&gt;. The next screen will contain the token you need. Make sure to copy it before you leave this screen!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f4c3620e965ff8ede6a5f5ea8e95b9de812e55" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Groups&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Группы&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5d6bb244676c43e45db0b9bcac334294cd020c6a" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Invite User&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Пригласить пользователя&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2b6bdce1ad5e410c530ae399a801dbd075f7f361" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Leave Organization&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Выйти из организации&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b614fd889a579bcfb22d202c6a4b60d7f6fa3842" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Manage Tags&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Управление тегами&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5a907eabe68ccd173cd42bcd6494cdd0ccd78aef" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Next&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Далее&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ce962bdc005e978663ca73c9159afbc0d1a5cde8" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Nodes&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Узлы&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ac761a7f442bbc9388d083d0be4f7a54a97c437f" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Organizations&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Организации&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="313383a3339cc48a5bd06ec79559beeb07085228" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Policy&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Политика&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6672a3bf9905dd1c8e3f99a7d451692ca9654365" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Remove from Organization&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Удалить из организации&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6d1fd0549a3c4d0c21edf46cb4825afc84dc7723" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Remove&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Удалить&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6bd8888c4176e511db54c18e2a8d2b3db52f9e1a" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Reset Key&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Reset Key&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f6c52e7fa4a684a6ffee8e712553d13a9bf98b2f" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Roles&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Роли&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e093c3b185c3a9d80ee44b19a15af45935f51259" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save &amp;amp; Close&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1534120cc361e4e0202b34964611f9a0d0c6a2" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save Attributes&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Сохранить атрибуты&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="78bbcdb3ae6f238c8951f1a0bfc29c4ea6ffbedd" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save Item&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Сохранить элемент&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8dabb02c71c061edd4d6be3ae27a1f7ba6aafc58" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save Run List&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Сохранить список запуска&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5fbddf5c1f51d9adf3dfa818886e2307f43f0210" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save and Close&lt;/strong&gt;, or &lt;strong&gt;Cancel&lt;/strong&gt; to discard the operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa93419206afa5c5a2b46ce22b94b87bd3361e6" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save and Close&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c705cedaf5d6913b2ea41151cc742632474c457" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Сохранить&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b6173de3716a7986b6c8dc061f518ee9e7a37f8b" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Send a Test&lt;/strong&gt;. If a test notification is successful, click &lt;strong&gt;Save&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc2bacfa84bc8f2aea8b2d2011eada12fb55e65" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Update Tags&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Обновить теги&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d344bc803c3a59912fc782824f6f01740a18a201" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Users&lt;/strong&gt;.</source>
          <target state="translated">Нажмите &lt;strong&gt;Пользователи&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c0dbf92ad88a4096be68855425cb2fa798f88a17" translate="yes" xml:space="preserve">
          <source>Click Save and Close.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdaa148d52eebca7206156f38bd3833fa168c2c" translate="yes" xml:space="preserve">
          <source>Click on &lt;code&gt;Add A New Pipeline&lt;/code&gt; on the top of the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1816b6131232cf6845ccffa0951cfcd341aea133" translate="yes" xml:space="preserve">
          <source>Click on the &amp;ldquo;JSON Mode&amp;rdquo; selector and enter the JSON output of the Mesos exporter and click &amp;ldquo;Create Application&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96135bc123c1e28eaa612c1e93a586418d2dde7" translate="yes" xml:space="preserve">
          <source>Click on the &lt;strong&gt;Permissions&lt;/strong&gt; sub-tab. Which permission it needs, depends on the type of request that failed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7901775f0bab8c41292a70de2c91ba15f6e258a3" translate="yes" xml:space="preserve">
          <source>Click on the &lt;strong&gt;Permissions&lt;/strong&gt; sub-tab. Which permission it needs, depends on which request that failed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d20cc991171ed2d1e225787221dc404022dadf" translate="yes" xml:space="preserve">
          <source>Click on the Admin menu item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf213ed996991858ce996c0b9fbaddd7ce363be" translate="yes" xml:space="preserve">
          <source>Click on the object in the list that is causing the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bb7c4ccce398dac81bde37c2cad0f0d73d8775" translate="yes" xml:space="preserve">
          <source>Click on the user you wish to edit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296dc41f8f8a3085180acae8754916f8014a1557" translate="yes" xml:space="preserve">
          <source>Click the &amp;lsquo;Launch with EC2 Console&amp;rsquo; button next to the desired region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9113234aa11e0cdd54f06b22e45434f00e1b0bb1" translate="yes" xml:space="preserve">
          <source>Click the &lt;code&gt;Chef Delivery&lt;/code&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204ea08b27b943096ffcf815bab4ee21f72e4b9a" translate="yes" xml:space="preserve">
          <source>Click the &lt;code&gt;GitHub&lt;/code&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0f02c68dded4ee9205f2f04909816bdc7a8d6c" translate="yes" xml:space="preserve">
          <source>Click the &lt;code&gt;Remove Link&lt;/code&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513bbacca32e07833e1f8ed6d5ec9fc59aff2180" translate="yes" xml:space="preserve">
          <source>Click the &lt;code&gt;Review&lt;/code&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9cd04057318b2c8cd585c965f7787aa389083b" translate="yes" xml:space="preserve">
          <source>Click the &lt;code&gt;Update&lt;/code&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4f1632cfa4f26fed0ff980c8161862f7a48237" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;+ Add&lt;/strong&gt; button and enter the name of the user or group to be added.</source>
          <target state="translated">Нажмите кнопку &lt;strong&gt;+ Добавить&lt;/strong&gt; и введите имя пользователя или группы, которые будут добавлены.</target>
        </trans-unit>
        <trans-unit id="cffd66b3f7be8c292e8ad660763bfdf321dd07f8" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Attributes&lt;/strong&gt; tab.</source>
          <target state="translated">Нажмите вкладку &lt;strong&gt;Атрибуты&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="fb202f4b5b9575c698b3e895a3f8e5eff2f92fb9" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Bitbucket&lt;/strong&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf03b582a279709f0452f4db274064495fa7d35" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Chef Client&lt;/strong&gt; tab.</source>
          <target state="translated">Нажмите на вкладку &lt;strong&gt;Chef Client&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a638159454f432925e7c9be7dcfd9ec3b7d429b6" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Chef Delivery&lt;/strong&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846da34a04becb5b338433356e3e11b207311d5c" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Content&lt;/strong&gt; tab.</source>
          <target state="translated">Перейдите на вкладку &amp;laquo; &lt;strong&gt;Содержимое&lt;/strong&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="dd3e9cea4b0f1606d66c198bf6b3acdef04cf1ff" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Details&lt;/strong&gt; tab.</source>
          <target state="translated">Нажмите вкладку &lt;strong&gt;Подробности&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="963e88b638ccbe3857be2d03756ef4dd77b73045" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Details&lt;/strong&gt; tab:</source>
          <target state="translated">Нажмите на вкладку &lt;strong&gt;Подробности&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="bcfbae0004e25136ca7e5fe780cf4aa9b2d5e280" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;New&lt;/strong&gt; icon in the upper-left corner of the portal and search the Azure Marketplace for &lt;strong&gt;Chef Automate&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5524eb468d41b17351fb17f35d5a9cdfaaa2ec4" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Permissions&lt;/strong&gt; tab.</source>
          <target state="translated">Перейдите на вкладку &amp;laquo; &lt;strong&gt;Разрешения&lt;/strong&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="bcfb3cfba5408202ab11a2a6d39b4a3d220113ca" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Remove Link&lt;/strong&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b0ac2818be0accbce8415b2064e3f18ed89e2e" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Review&lt;/strong&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe7d853227dba81613e6f8daee6362b30d6aa88" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Send Test&lt;/strong&gt; button. This will send an email to your email address, as specified in Workflow. The Workflow web UI will update the page if the email was sent successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e5e2bd382ee14e1ed148ef4842697709da4675" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Update&lt;/strong&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270846631b8c631dbcad510f5c41f5c2a13885f6" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Watch Project&lt;/strong&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1d9d23f3e8ae1cd0b38a70d976fbe4af4f80e0" translate="yes" xml:space="preserve">
          <source>Click the download button.</source>
          <target state="translated">Нажмите на кнопку загрузки.</target>
        </trans-unit>
        <trans-unit id="ac5413aee398ce8d90160d6e053a394d407f0b32" translate="yes" xml:space="preserve">
          <source>Click the organization you want to add a project to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de130bdf2d271070cdca26f12ad4a15ca9dbd3e" translate="yes" xml:space="preserve">
          <source>Click the pencil button for the project to be updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b81c4eed59c926eca50f9cb01dd377a58b120f" translate="yes" xml:space="preserve">
          <source>Click the pencil button of the project you wish to update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff38995729b6a848ef1510ac1627662d15a4122f" translate="yes" xml:space="preserve">
          <source>Click the plus sign (&lt;strong&gt;+&lt;/strong&gt;) next to &lt;strong&gt;Add a New Project&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5e1af568dd42a74cc26d1d5a5c6a321ea6fc75" translate="yes" xml:space="preserve">
          <source>Click the plus sign (&lt;strong&gt;+&lt;/strong&gt;) next to &lt;strong&gt;Add a New User&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdd79b12628d8c4ec4226ff4207341dcb869ab8" translate="yes" xml:space="preserve">
          <source>Client</source>
          <target state="translated">Client</target>
        </trans-unit>
        <trans-unit id="e264339caea69f74e2e273aa165aad0c00b1d9d4" translate="yes" xml:space="preserve">
          <source>Client Key Permissions</source>
          <target state="translated">Ключевые права клиента</target>
        </trans-unit>
        <trans-unit id="9e371f8363fd9f8dffa4568930992731e985ddf0" translate="yes" xml:space="preserve">
          <source>Client Runs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5207b086725cc120c80eff66418ed53ab60e329e" translate="yes" xml:space="preserve">
          <source>Client Username.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8ba98a5a0fe046ee22c054b371ab66430dfee1" translate="yes" xml:space="preserve">
          <source>Client keys can be managed from the Chef management console.</source>
          <target state="translated">Управление клиентскими ключами может осуществляться из консоли управления Chef.</target>
        </trans-unit>
        <trans-unit id="9f8ac83f51c4da6cc64261c3a904ec66fe98855b" translate="yes" xml:space="preserve">
          <source>Client run and InSpec scan records are linked to incidents and it is appropriate to assign this role to users that manage incidents in ServiceNow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c105982950cf3f228a3ed0d66c0282d160b9f3a" translate="yes" xml:space="preserve">
          <source>Client runs menu item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e22fe3dde53ce03b40861a4b22d205384bde66" translate="yes" xml:space="preserve">
          <source>Clients</source>
          <target state="translated">Clients</target>
        </trans-unit>
        <trans-unit id="588b645cc962ecf194f702b08166d9970462c948" translate="yes" xml:space="preserve">
          <source>Clone MicroMDM from Github:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3672e62ed1a1447ba4394693297027f59ab956" translate="yes" xml:space="preserve">
          <source>Clone a repo from Chef Automate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778d56a60eaffd9e9db65e30439ec6d22c8a2300" translate="yes" xml:space="preserve">
          <source>Clone or check out the source. When a checkout is available, this provider does nothing.</source>
          <target state="translated">Клонируй или проверь источник.Когда выезд доступен,этот провайдер ничего не делает.</target>
        </trans-unit>
        <trans-unit id="7355cd2d6fd8daab917d1627f47eb53dd4cf8f6f" translate="yes" xml:space="preserve">
          <source>Clone the &lt;a href=&quot;https://github.com/chef/chef&quot;&gt;https://github.com/chef/chef&lt;/a&gt; repository:</source>
          <target state="translated">Клонируйте репозиторий &lt;a href=&quot;https://github.com/chef/chef&quot;&gt;https://github.com/chef/chef&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1a13f08e85f8bd021c198dc4bb77ea50bfa24b09" translate="yes" xml:space="preserve">
          <source>Clone the &lt;a href=&quot;https://github.com/chef/effortless&quot;&gt;Chef Effortless GitHub Repository&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2748ea560705b98be6c00bfc365a0af44549f3a7" translate="yes" xml:space="preserve">
          <source>Clone the &lt;code&gt;delivery-truck&lt;/code&gt; cookbook and its dependency &lt;code&gt;deliver-sugar&lt;/code&gt; from GitHub:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cddacfcb8a6f2e259d4f3d0b0b07a3fbb999cee" translate="yes" xml:space="preserve">
          <source>Clone the &lt;strong&gt;delivery-truck&lt;/strong&gt; cookbook and its dependency &lt;code&gt;deliver-sugar&lt;/code&gt; from GitHub:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e40f84be397261363334d21e97a5a847017ed04" translate="yes" xml:space="preserve">
          <source>Clone the Chef Habitat Builder On-prem Repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45270efaef596b1ae1c271f7a1d4711a6914662" translate="yes" xml:space="preserve">
          <source>Clone the GitHub repo to which changes are submitted. Be sure you have the right permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46ac952350cdfa9dec833725857d399d8da331c" translate="yes" xml:space="preserve">
          <source>Clone the chef-repo from GitHub</source>
          <target state="translated">Клонируй шеф-репо из GitHub.</target>
        </trans-unit>
        <trans-unit id="e2ad539985e56e6daf12c81f5b6b8b88d55e0cca" translate="yes" xml:space="preserve">
          <source>Clone the desired repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a27909ed4c85ffd5bb5b1223bb3330a3e65ff0" translate="yes" xml:space="preserve">
          <source>Clone the profile:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a022bf8b207aff4bea673cc6ced15b8363fd0c5" translate="yes" xml:space="preserve">
          <source>Cloud CDN configuration for this Backend Bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e6bff1a69694d9fdd9a9d4aef46989f462b98d" translate="yes" xml:space="preserve">
          <source>Cloud CDN configuration for this BackendService.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54e2211d41c980a8f15f0f0f4099e4dc6ddbe0a" translate="yes" xml:space="preserve">
          <source>Cloud Foundry exporter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f818f8164ca6643dd3250613ae014cb94aff2bf" translate="yes" xml:space="preserve">
          <source>Cloud Foundry: &lt;a href=&quot;https://www.habitat.sh/get-started/cloudfoundry&quot;&gt;https://www.habitat.sh/get-started/cloudfoundry&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794b0a468abcda4c46b15f9b86de33b3bed32a76" translate="yes" xml:space="preserve">
          <source>Cloud Storage URI of the executable file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede9edff3665251d8c7b41cdedcec92cd252bbd8" translate="yes" xml:space="preserve">
          <source>Cloud Storage bucket name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990611226270e1f176e68d10ff18b8d91f03e865" translate="yes" xml:space="preserve">
          <source>Cloud plugin replaced by the Cloud_V2 plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1999d2e89ddb89b130e41454d0a5d4a915f368" translate="yes" xml:space="preserve">
          <source>Cloud provider metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356e41d8fff63c5180b6f787607d888d62e2cfb1" translate="yes" xml:space="preserve">
          <source>Cloud resources, including provisioning</source>
          <target state="translated">Облачные ресурсы,включая создание резервов</target>
        </trans-unit>
        <trans-unit id="09f522c32b8b1616810daca30080603516ff33e5" translate="yes" xml:space="preserve">
          <source>Cloud_v2 attribute removal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6915b1264e75dfe5192e615c1f545ddbf0d5e5ee" translate="yes" xml:space="preserve">
          <source>Cloudkick</source>
          <target state="translated">Cloudkick</target>
        </trans-unit>
        <trans-unit id="9a20c0354230a60c7400a9ebd3babb3afd414ba7" translate="yes" xml:space="preserve">
          <source>Cluster IP Address</source>
          <target state="translated">IP-адрес кластера</target>
        </trans-unit>
        <trans-unit id="8c53c8049774bfb9f0287f14b67469f2bc47c3bc" translate="yes" xml:space="preserve">
          <source>Cluster Security Considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e759ba3323321d56f7ff3b602cf43e9840c076" translate="yes" xml:space="preserve">
          <source>Cluster tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d591ca7c10ad619dc6206d37ac2017aefefbb31" translate="yes" xml:space="preserve">
          <source>Code Blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33157d99aeff69f9b25bd0a79cb10ba7cb6ae97d" translate="yes" xml:space="preserve">
          <source>Code Review</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09962e7aa2e74eded304ca31b0e366985bf4bcbd" translate="yes" xml:space="preserve">
          <source>Code Strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376da7a254a7a6761e7ef611190aaefe2dd0591a" translate="yes" xml:space="preserve">
          <source>Code Style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f204a42d67c3570401bcf79d49b1eb4a877f3b" translate="yes" xml:space="preserve">
          <source>Code Visibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ecf0ca40236a851049e8145011859d210a9ddf" translate="yes" xml:space="preserve">
          <source>Code blocks are used to show code samples, such as those for Ruby, JSON, and command-line strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4d76bad832423e9e0ef1bfd14ecb40f8c508f2" translate="yes" xml:space="preserve">
          <source>Code that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abc61fc0ed074489bab6e052e9075162e5d98e4" translate="yes" xml:space="preserve">
          <source>Code visibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90641bebb6ed65606cf583cbbaf8d9f3d5917ef" translate="yes" xml:space="preserve">
          <source>Code which used to use &lt;code&gt;Chef::Platform.provider_for_resource&lt;/code&gt; or &lt;code&gt;Chef::Platform.find_provider&lt;/code&gt; to create providers for a resource:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69cc77fc6526b7dbd23be87910f5447f8ca5a98" translate="yes" xml:space="preserve">
          <source>Collect system diagnostics and logs from Chef Automate and other services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186332eccc3184a63cd4e2b091b917572d21937d" translate="yes" xml:space="preserve">
          <source>Combine the Chef Workstation command utilities with the other tools available in Cloud Shell, such as git, az-cli, terraform to write your infrastructure and compliance automation from the browser&amp;ndash;without the need for a local shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05dc03c24a54ff56c9af142a3808f990bfe5d996" translate="yes" xml:space="preserve">
          <source>Combined Kitchen Command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de03435d15d304ba04250678ecf0cf685b5b99e" translate="yes" xml:space="preserve">
          <source>Combined with executing an InSpec scan to validate successful package installation, we have everything we need to define our requirements, and make sure they&amp;rsquo;re met with two simple commands, either locally or remotely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296cd3ce5972922f466e9507cd4bcd1953736f33" translate="yes" xml:space="preserve">
          <source>Combining an Update Strategy with Channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45035a9094f145f6063584077645751040e3f42" translate="yes" xml:space="preserve">
          <source>Comma separated list of roles/recipes to apply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365dc8cf85b1787edeadceebf5813b9537d9e9de" translate="yes" xml:space="preserve">
          <source>Comma-separated list of TCP ports to open e.g. &amp;lsquo;80,433&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df77d46a1d725155a2cf41ba58ff7a18d54cbb0a" translate="yes" xml:space="preserve">
          <source>Comma-separated list of origin keys to automatically share with the build system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="d240398aa5828ed8c2d7cc9307420e0aa1bc91d8" translate="yes" xml:space="preserve">
          <source>Command Line Install of Chef Automate and Infra Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ad2f3a277f04d6e291e8ecf170798c687cdd9b" translate="yes" xml:space="preserve">
          <source>Command Line Install of Standalone Chef Infra Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f431f7775618b6c95e548aaaf67cdf31017033a" translate="yes" xml:space="preserve">
          <source>Command Line Tool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe0098e4c7f00e2eb24771bfe382c19be26da45" translate="yes" xml:space="preserve">
          <source>Command aliases that can be used as allowed commands later in the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1961a3970c1a4da55d7aaf69e85067650f8043f8" translate="yes" xml:space="preserve">
          <source>Command for managing password and authentication for a user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95913643df3d38a6cbfdec36db715a3f4fe9f21e" translate="yes" xml:space="preserve">
          <source>Command-line options can be added to a knife plugin using the &lt;code&gt;option&lt;/code&gt; method. An option can have a true/false value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be5249c563ce8f850739f987ae1a1089832df0f" translate="yes" xml:space="preserve">
          <source>CommandExecutionError</source>
          <target state="translated">CommandExecutionError</target>
        </trans-unit>
        <trans-unit id="43653ba5e615996c58bce4dbcf12dbc7b34ad662" translate="yes" xml:space="preserve">
          <source>Commands are often run in combination with other Chef resources. The following example shows the &lt;strong&gt;template&lt;/strong&gt; resource run with the &lt;strong&gt;execute&lt;/strong&gt; resource to add an entry to a LDAP Directory Interchange Format (LDIF) file:</source>
          <target state="translated">Команды часто выполняются в сочетании с другими ресурсами Chef. В следующем примере показан ресурс &lt;strong&gt;шаблона,&lt;/strong&gt; запущенный с ресурсом &lt;strong&gt;execute&lt;/strong&gt; для добавления записи в файл формата обмена каталогами LDAP (LDIF):</target>
        </trans-unit>
        <trans-unit id="7084f475ea39d128dc8c90b9f06b4c8de1ae1cbc" translate="yes" xml:space="preserve">
          <source>Commands for automation infrastructure management, for data related to chef-client runs and chef-server actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b2e0213d4f0c5047ee9e561bd736d4fff4a3fa" translate="yes" xml:space="preserve">
          <source>Commands related to secret management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d812a3c89beeb9262d6d7afbe14fb12dd42866" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat Builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e96a48d3455e969b1e652a8782e831f2163ba76" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat Builder channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0031008c96b658bb1540635fed217497d0bb2e0f" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat Builder jobs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4542931109aab9da6828892f59565a4c5c942e1a" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat Builder origins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30a43320f0b2abd5aac76f184eb0c8b19af25a1" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat Studios</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f94eb068974789422cfd8dc4df2b02bc4d2231c" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6c71c7f9b28d0240bbd069e82b2c6521cce7ee" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat license agreements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12cbda0ab5218613a2c03e3c15fab1ce6acaddb" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat origin key maintenance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f29c0797482d682d3ee65baabc7a76bdc92ec84" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0f70869aa1740a931faeff86fad6ad1c9c3703" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat ring keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b4bb355fd9ef3236d455be4e11417a7075e468" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat rings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32014e7fee34897bef8a8c405c4ff1061e6fa87f" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat runtime config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c639df00c0299de50e78a7287eafc31f1bf4eb5" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat service keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd04de71275ad3cd8a0f19e6132d85a1af2a370" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3420836a396ac1e06c3624c4e3a6fd2f86318300" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat user keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44b8cc09ad66fac7ac30a9cc6fb884a4c6d3fb6" translate="yes" xml:space="preserve">
          <source>Commands relating to Habitat users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c38de35d737bfe91bb732a2714ac2bcb2bb8198" translate="yes" xml:space="preserve">
          <source>Commands relating to a Habitat Supervisor&amp;rsquo;s Control Gateway secret</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2cebd1c464b3ad1944faefbfba43c19e29c466" translate="yes" xml:space="preserve">
          <source>Commands relating to a Service&amp;rsquo;s runtime config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1214b4a66557197446f20aed2ea36a4baaf7d0f9" translate="yes" xml:space="preserve">
          <source>Commands relating to plans and other app-specific configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a40d734883d58024515ff440f7bfa7cd42e556" translate="yes" xml:space="preserve">
          <source>Commands to regenerate certificates issued by the internal certificate authority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7909b6a7445d83ee03c49e8eb22d0cfd6e38235d" translate="yes" xml:space="preserve">
          <source>Comment clean up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="f87a9ffbf3609623f02a927893727fd800ff4d5d" translate="yes" xml:space="preserve">
          <source>Comments, placed above the resource setting in the generated file. For multi-line comments, use an array of strings, one per line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b439b4757891ac84ab2dde5fb44e00fa181e501" translate="yes" xml:space="preserve">
          <source>Commercial Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8367b6b211aef3d9d02f661826e7ca0780a32c23" translate="yes" xml:space="preserve">
          <source>Commercial support for Chef Automate is available for platforms that satisfy these criteria.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbab1395f82d5320b48cdf5361e9cfc3f9747125" translate="yes" xml:space="preserve">
          <source>Commercial support for the &lt;a href=&quot;../automate/system_requirements/index&quot;&gt;Chef Automate 2 Server&lt;/a&gt; is available for platforms that use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b063d4d097a7baed1f5e5a3a86b36c0c13399925" translate="yes" xml:space="preserve">
          <source>Commercial support generally follows Chef community support policies, which track the lifecycle policies of the underlying operating system vendor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae541c0ef538bfd8210033319fa5043e3f099d94" translate="yes" xml:space="preserve">
          <source>Commit Your Cookbook Upgrades</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db38d08cb373dd5fa7cbbe204cce3f128006f6fb" translate="yes" xml:space="preserve">
          <source>Commit changes: &lt;code&gt;git commit -m &amp;lt;message&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38b30ef2b50a322908818c5484d12c2fc37ed89" translate="yes" xml:space="preserve">
          <source>Commit or stash your changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbb3b08fd5dc019e3367793688bb00e7310a2dc" translate="yes" xml:space="preserve">
          <source>Commit the project:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a112ecfefecf4100ffb7c73af63c38cdbe6a6f86" translate="yes" xml:space="preserve">
          <source>Commit your changes and run &lt;code&gt;delivery review&lt;/code&gt;. Changes to your cookbook project can now be managed by your Chef Automate cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68153d36e27f51ea39f26288ffb08c60a97044ae" translate="yes" xml:space="preserve">
          <source>Commit your changes to your fork, making sure to sign-off those changes for the Developer Certificate of Origin with &lt;code&gt;git commit -s&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29503955db10e4eafee69d8ec50fea3ee7174751" translate="yes" xml:space="preserve">
          <source>Commits to the Chef repositories should never be made against the master branch. Use a topic branch instead. A topic branch solves a single and unique problem and often maps closely to an issue being tracked in the repository. For example, a topic branch to add support for a new init system or a topic branch to resolve a bug that occurs in a specific version of CentOS. Ideally, a topic branch is named in a way that associates it closely with the issue it is attempting to resolve. This helps ensure that others may easily find it.</source>
          <target state="translated">Коммиты в репозитории Chef никогда не должны быть сделаны против мастер-ветки.Вместо этого используйте тематическую ветку.Тематическая ветка решает единственную и уникальную проблему и часто привязывается к проблеме,отслеживаемой в репозитории.Например,тематическая ветка для добавления поддержки новой init-системы или тематическая ветка для решения проблемы,возникающей в конкретной версии CentOS.В идеале,тематическая ветка называется так,чтобы тесно ассоциировать ее с проблемой,которую она пытается решить.Это помогает гарантировать,что другие могут легко найти её.</target>
        </trans-unit>
        <trans-unit id="4de46545e9c046c74b83dc6961b04280dff5f0d0" translate="yes" xml:space="preserve">
          <source>Common &amp;lsquo;Runit&amp;rsquo; Flags for Any Backend Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07526cc884ff576fd27c4c2c8cbc43f0383ca45a" translate="yes" xml:space="preserve">
          <source>Common Error Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87835ced7cce734e9a2aa7797cd0ea443e855beb" translate="yes" xml:space="preserve">
          <source>Common Functionality</source>
          <target state="translated">Общая функциональность</target>
        </trans-unit>
        <trans-unit id="966bc8891779463a6d9e31d4954a2c2b6ad11814" translate="yes" xml:space="preserve">
          <source>Common Item</source>
          <target state="translated">Общий пункт</target>
        </trans-unit>
        <trans-unit id="f6eaa962650a97f840a2800c301825ed8d72a917" translate="yes" xml:space="preserve">
          <source>Common Options</source>
          <target state="translated">Общие опции</target>
        </trans-unit>
        <trans-unit id="68e6b7a72a599174521c2e124750dc23a939c347" translate="yes" xml:space="preserve">
          <source>Common Problems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8cda04e4526146e746bf5ed1673609f069de0c" translate="yes" xml:space="preserve">
          <source>Common Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6aff9b61b3759b6fc9ab7b59d8dd4b6bb1f490c" translate="yes" xml:space="preserve">
          <source>Common Resource Functionality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bc421b12b355e52cd77ee75a7c2ba7feb647ce" translate="yes" xml:space="preserve">
          <source>Common Ruby techniques can be used with the Recipe DSL methods.</source>
          <target state="translated">Общие методы Ruby могут быть использованы с методами Recipe DSL.</target>
        </trans-unit>
        <trans-unit id="cd48fe55ecfd9bbc173570900f636ad8dba71f51" translate="yes" xml:space="preserve">
          <source>Common config settings for resources of Google Compute Engine cluster instances, applicable to all instances in the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62264fc11aa6b69178ce7246ab696aeaec46b743" translate="yes" xml:space="preserve">
          <source>Common mistakes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e010329b4b90d3aa3690e5d894c8344f4f310d35" translate="yes" xml:space="preserve">
          <source>Common options for the &lt;code&gt;config.rb&lt;/code&gt; (knife.rb) file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5750e8cde0fe1fa1e1f4d792186744aa9438cffe" translate="yes" xml:space="preserve">
          <source>Common options that are available for all knife subcommands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f611b170643b1a978be37d5d2745879e6e3b841" translate="yes" xml:space="preserve">
          <source>Common parameters to specify are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a99f329ced9ca53bc3c3c16f261c295cb90f8c2" translate="yes" xml:space="preserve">
          <source>Common syntax errors may cause issues in configuration files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69972d8abe0d44a7132f4ba00d0552a8b594280a" translate="yes" xml:space="preserve">
          <source>Communication Between Frontend Group &amp;amp; Backend Cluster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24cc8a3218e5af7f0582c1e091ffa1fc7d24bac" translate="yes" xml:space="preserve">
          <source>Communication Between Nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4f7063fc3a602775e7c86375acc5d9c6ead15f" translate="yes" xml:space="preserve">
          <source>Communication with PostgreSQL requires password authentication. The backend cluster generates PostgreSQL users and passwords during the initial cluster-create. These passwords are present in the following files on disk:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd58ee3a270f3a931009900e1008d549bbd7453" translate="yes" xml:space="preserve">
          <source>Community</source>
          <target state="translated">Community</target>
        </trans-unit>
        <trans-unit id="aafb0ddbb70e409ebd88c6480f4b3b2a3f443e27" translate="yes" xml:space="preserve">
          <source>Community Advocate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd943c7b50f64f17e4ca8484eb729bd6e07adb14" translate="yes" xml:space="preserve">
          <source>Community Contributions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527e52561bfae46335d1c38aaee77d444057bd72" translate="yes" xml:space="preserve">
          <source>Community Cookbooks</source>
          <target state="translated">Общественные кулинарные книги</target>
        </trans-unit>
        <trans-unit id="75343669fdecb7fb46591e1cc586f9f44e97db4c" translate="yes" xml:space="preserve">
          <source>Community Guidelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a9a17d426491172bcb745218f62ac85a1d46ba" translate="yes" xml:space="preserve">
          <source>Community Handlers</source>
          <target state="translated">Общинные дрессировщики</target>
        </trans-unit>
        <trans-unit id="8d3bad9945fd7ad62d5ba3296471fe7115c37b79" translate="yes" xml:space="preserve">
          <source>Community Knife Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bca07417ee6d5dc10faf15d06b892d2a547a91" translate="yes" xml:space="preserve">
          <source>Community Members in Crisis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc677381552beb39e0ddb1f8d2b00e4f6c5c3e78" translate="yes" xml:space="preserve">
          <source>Community Organizers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcd4a3b439aba8742f00b1cb1f3e11ae9a78668" translate="yes" xml:space="preserve">
          <source>Community Organizers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, messages, tweets, and other contributions that are not aligned with this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f082509b125330ac8c10b243da6dff7691d278f2" translate="yes" xml:space="preserve">
          <source>Community Organizers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project&amp;rsquo;s leadership.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3966a07a65f169b9447cdf3380acb612b2af9b" translate="yes" xml:space="preserve">
          <source>Community Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a018fb7c5428ecd5a7f88cec920624c2596a69ab" translate="yes" xml:space="preserve">
          <source>Community Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351cb7df86d46a5a936f6183a22014ae75cf341f" translate="yes" xml:space="preserve">
          <source>Community Supported Windows Projects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ccc375199570fdb0c025e54d8d8dec429d4016" translate="yes" xml:space="preserve">
          <source>Community cookbooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ab6a81c51eb349c24d4912633d0e2b3c3b2e5a" translate="yes" xml:space="preserve">
          <source>Community member &lt;code&gt;juliandunn&lt;/code&gt; created a custom &lt;a href=&quot;https://github.com/juliandunn/cookbook_versions_handler&quot;&gt;report handler that logs all of the cookbooks and cookbook versions&lt;/a&gt; that were used during a Chef Infra Client run, and then reports after the run is complete. This handler requires the &lt;strong&gt;chef_handler&lt;/strong&gt; resource (which is available from the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec27bf36dab0cab613f33105c05c57f0d4a428a" translate="yes" xml:space="preserve">
          <source>Community member &lt;code&gt;juliandunn&lt;/code&gt; created a custom &lt;a href=&quot;https://github.com/juliandunn/cookbook_versions_handler&quot;&gt;report handler that logs all of the cookbooks and cookbook versions&lt;/a&gt; that were used during the chef-client run, and then reports after the run is complete. This handler requires the &lt;strong&gt;chef_handler&lt;/strong&gt; resource (which is available from the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook).</source>
          <target state="translated">Член сообщества &lt;code&gt;juliandunn&lt;/code&gt; создал пользовательский &lt;a href=&quot;https://github.com/juliandunn/cookbook_versions_handler&quot;&gt;обработчик отчетов, который регистрирует все версии поваренных книг и поваренных книг&lt;/a&gt; , которые использовались во время запуска chef-client, а затем создает отчеты после завершения запуска. Этот обработчик требует ресурса &lt;strong&gt;chef_handler&lt;/strong&gt; (который доступен из поваренной книги &lt;strong&gt;chef_handler&lt;/strong&gt; ).</target>
        </trans-unit>
        <trans-unit id="7fecd5175fe36e28ebe2cd94f5e0f9443cd537fe" translate="yes" xml:space="preserve">
          <source>Compare arrays with only one entry to a value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4839deab3934090604cbd4496efc3da98b31cbbf" translate="yes" xml:space="preserve">
          <source>Compare content to hostname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cdbf8147c9a42324ad8a6bccdc6ae59101b08a" translate="yes" xml:space="preserve">
          <source>Compare strings to numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db161c1f91a42b70394a33de15596ee05982f51f" translate="yes" xml:space="preserve">
          <source>Compare the specified git reference against the current revision of a &lt;code&gt;Policyfile.lock.json&lt;/code&gt; file or against another git reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e3d67ad8b372f394d2d30c9f81246371ff061d" translate="yes" xml:space="preserve">
          <source>Comparing the current property value against a desired property value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003014d9a91587c7478a3a33f7f07ab98b84ead8" translate="yes" xml:space="preserve">
          <source>Comparison of RBAC Member Roles and Actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bffa8ac4e81704f0d9d2d7241985a60802ad479" translate="yes" xml:space="preserve">
          <source>Comparison of RBAC Membership Roles and Actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f906a1c3ab4b5164fc8f0ac4affb50603c5c0c2d" translate="yes" xml:space="preserve">
          <source>Compile time execution is often used to install gems before requiring them in recipe code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abf903e8992ecc9e56c4aac9fbd0181b14d9946" translate="yes" xml:space="preserve">
          <source>Compiled whenever a cookbook is uploaded to the Chef Infra Server or when the &lt;code&gt;knife cookbook metadata&lt;/code&gt; subcommand is run, and then stored as JSON data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c822dccf61cda9cb4c87eee9eeedd877f76b440c" translate="yes" xml:space="preserve">
          <source>Compiled whenever a cookbook is uploaded to the Chef server or when the &lt;code&gt;knife cookbook metadata&lt;/code&gt; subcommand is run, and then stored as JSON data</source>
          <target state="translated">Скомпилируется всякий раз, когда поваренная книга загружается на сервер Chef или когда запускается подкоманда &lt;code&gt;knife cookbook metadata&lt;/code&gt; , а затем сохраняется как данные JSON</target>
        </trans-unit>
        <trans-unit id="c6e37b13a4e81e824e4de63b891fac7bb4f43bc9" translate="yes" xml:space="preserve">
          <source>Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies</source>
          <target state="translated">Составление коллекции ресурсов путем загрузки каждой из требуемых кулинарных книг,включая рецепты,атрибуты и все другие зависимости.</target>
        </trans-unit>
        <trans-unit id="33f10f0dbd2f59e5fcb0c550db57268475dcd088" translate="yes" xml:space="preserve">
          <source>Complete Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cfeab6a73b028df38c1dde2c5038ebcc277b20d" translate="yes" xml:space="preserve">
          <source>Complete JSON Policy Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c6378ea06ee15559f4de5eae699e94ae0b51eb" translate="yes" xml:space="preserve">
          <source>Complete backup:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ca28e6793d7231db7ad9c961a7c79daa3d1e7a" translate="yes" xml:space="preserve">
          <source>Complete copies of each Chef Automate service PostgreSQL database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a55e296fd41aa2e36bafdc919a83fe0d974733" translate="yes" xml:space="preserve">
          <source>Complete copies of your configuration files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eead450ff402a891dc97b672fad7a81bc30b5022" translate="yes" xml:space="preserve">
          <source>Complete each configuration step, agree to the software and marketplace terms and create the Chef Automate VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5bb0e2eee29007792e5c28fbf0a28f7aaff190" translate="yes" xml:space="preserve">
          <source>Complete examples may be downloaded from &lt;a href=&quot;../pattern_library/index#kubernetes-bastion-ring-pattern&quot;&gt;this folder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980f956889bdaf732d1a86dbfc497a7f3eaa6dd3" translate="yes" xml:space="preserve">
          <source>Complete with an exit code of &lt;code&gt;0&lt;/code&gt; if the &lt;code&gt;chef-server.rb&lt;/code&gt; file is created successfully.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
