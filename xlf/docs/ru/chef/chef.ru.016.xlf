<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="753063f7f5ee3f68d093d0b7e323067b70030899" translate="yes" xml:space="preserve">
          <source>Minimum size of the node group. Must be less than or equal to max-nodes. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b3900c66cec8b35fae0f4e8bb899494f84090c" translate="yes" xml:space="preserve">
          <source>Minimum system requirements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f3958f596c50466988d163a18f7e28e6eb6972" translate="yes" xml:space="preserve">
          <source>Mixing this with other conditionals, such as checking existence of the files, can help to test different test paths using Chef InSpec. With this way, you can skip certain controls, which would 100% fail due to the way servers are prepared, but you know that the same control suites are reused later in different circumstances by different teams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b93d2128e820f861fc8dfccd9f5521e89ad21f" translate="yes" xml:space="preserve">
          <source>Mode</source>
          <target state="translated">Mode</target>
        </trans-unit>
        <trans-unit id="5e9a52c9710696a1f3a117cfc1038d90837bc5b7" translate="yes" xml:space="preserve">
          <source>Mode in which to save vault keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067f059a5cd4bf0f6c32915781c59c7ea4ab3744" translate="yes" xml:space="preserve">
          <source>Modern Chef Infra Client code (since Chef Client version 11.0.0) should never have provider code which directly sets &lt;code&gt;updated_by_last_action&lt;/code&gt; itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f5b225cffab11e22dc40b6f05abef1d33d1561" translate="yes" xml:space="preserve">
          <source>Modes</source>
          <target state="translated">Modes</target>
        </trans-unit>
        <trans-unit id="73fb18d6a572ad4c2f14579eb4a815af1128c376" translate="yes" xml:space="preserve">
          <source>Modifications to environments</source>
          <target state="translated">Модификации для окружающей среды</target>
        </trans-unit>
        <trans-unit id="e517cc4269eda94e38efc0431c8be0b79c84d45d" translate="yes" xml:space="preserve">
          <source>Modify an existing environment variable. This prepends the new value to the existing value, using the delimiter specified by the &lt;code&gt;delim&lt;/code&gt; property.</source>
          <target state="translated">Изменить существующую переменную среды. Это добавляет новое значение к существующему значению, используя разделитель, определенный свойством &lt;code&gt;delim&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d676f74af2ef66f1b5a24ac9a52a83b2af178c3e" translate="yes" xml:space="preserve">
          <source>Modify an existing group. This action raises an exception if the group does not exist.</source>
          <target state="translated">Измените существующую группу.Данное действие вызывает исключение,если группа не существует.</target>
        </trans-unit>
        <trans-unit id="a36702e81305afd4aa980a952229056a883ef769" translate="yes" xml:space="preserve">
          <source>Modify an existing user. This action raises an exception if the user does not exist.</source>
          <target state="translated">Измените существующего пользователя.Данное действие вызывает исключение,если пользователь не существует.</target>
        </trans-unit>
        <trans-unit id="353c461e76f1d3ffa81a60e96d94c8f11aaffea7" translate="yes" xml:space="preserve">
          <source>Modify the LaunchDaemon plist to look like the &lt;a href=&quot;#example-munki-catalog&quot;&gt;first example&lt;/a&gt; below. Notice that we updated the JSONUrl and a couple of the identity sections. Also notice that we enabled some of the commands needed to properly populate DepNotify so it displays useful information to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97eae73c568558bf1a6175699c70738a4cd9ad58" translate="yes" xml:space="preserve">
          <source>Modify the build cookbook&amp;rsquo;s Berksfile to reference &lt;code&gt;delivery-truck&lt;/code&gt; and &lt;code&gt;delivery-sugar&lt;/code&gt;. By default, this file is located at &lt;code&gt;.delivery/build-cookbook/Berksfile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e5124c070905e49b117ba39fabc0b500b6923d" translate="yes" xml:space="preserve">
          <source>Modify the build cookbook&amp;rsquo;s Berksfile to reference &lt;strong&gt;delivery-truck&lt;/strong&gt; and &lt;strong&gt;delivery-sugar&lt;/strong&gt;. By default, this file is located at &lt;code&gt;.delivery/build-cookbook/Berksfile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a2724c4025467c77fe233b80abc4668678e8ec" translate="yes" xml:space="preserve">
          <source>Modify the build cookbook&amp;rsquo;s metadata to include &lt;code&gt;delivery-truck&lt;/code&gt;. By default, this file is located at &lt;code&gt;.delivery/build-cookbook/metadata.rb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d383a6733a64f3b30c701028a7f977cfdbe58627" translate="yes" xml:space="preserve">
          <source>Modify the build cookbook&amp;rsquo;s metadata to include &lt;strong&gt;delivery-truck&lt;/strong&gt;. By default, this file is located at &lt;code&gt;.delivery/build-cookbook/metadata.rb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef94bbc5572e08fb081964dea9d9ea979b5de04b" translate="yes" xml:space="preserve">
          <source>Modify the build-info.json file on the identity line to correctly reference your developer certificate. Read the &lt;a href=&quot;https://github.com/erikng/installapplications/wiki/Packaging&quot;&gt;InstallApplications documentation&lt;/a&gt; for information about the type of accounts that Apple requires to install packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9661457223c46f328b428bcba8585747a64f40" translate="yes" xml:space="preserve">
          <source>Modify the resource and choose a different name for the property that does not conflict with an already-existing method name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f294ea43da80e7f81175475b53b7eb53de3bb52f" translate="yes" xml:space="preserve">
          <source>Modify the template with any editor, then specify it using the &lt;code&gt;--bootstrap-template&lt;/code&gt; option as part of the the &lt;code&gt;knife bootstrap&lt;/code&gt; operation, or with any of the knife plug-ins that support cloud computing.</source>
          <target state="translated">Измените шаблон с помощью любого редактора, а затем укажите его с помощью параметра &lt;code&gt;--bootstrap-template&lt;/code&gt; в рамках операции &lt;code&gt;knife bootstrap&lt;/code&gt; или с любым из плагинов ножа, поддерживающих облачные вычисления.</target>
        </trans-unit>
        <trans-unit id="4b7c2087e09272053e3805cbb48eff93005bf2f8" translate="yes" xml:space="preserve">
          <source>Modifying a Control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0f10698082c93db66cc3bacc7c4262043d5c37" translate="yes" xml:space="preserve">
          <source>Monitor</source>
          <target state="translated">Monitor</target>
        </trans-unit>
        <trans-unit id="0279446c78656746891c1d7098920cb6b206262b" translate="yes" xml:space="preserve">
          <source>Monitor Supermarket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6351b6eecc387f076054a20a754b7a458447f34" translate="yes" xml:space="preserve">
          <source>Monitoring Chef Automate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ccf5501d59f5370096a5fb37f6bd964f69e3367" translate="yes" xml:space="preserve">
          <source>Monitoring Priorities</source>
          <target state="translated">Приоритеты мониторинга</target>
        </trans-unit>
        <trans-unit id="9a40578175ea5ac562b4a41d620d16fa80c7f382" translate="yes" xml:space="preserve">
          <source>Monitoring Services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62801503510aa94c3c8daf4bfedbabdb5b803b9" translate="yes" xml:space="preserve">
          <source>Monitoring the Chef Infra Server involves two types of checks: application and system. In addition monitoring the HTTP requests that workstations and nodes are making to the Chef Infra Server and per-disk data storage volumes is recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a3a0712932c5530d77b0078a465dca203f84cd" translate="yes" xml:space="preserve">
          <source>Monitoring the Chef server involves two types of checks: application and system. In addition monitoring the HTTP requests that workstations and nodes are making to the Chef server and per-disk data storage volumes is recommended.</source>
          <target state="translated">Мониторинг сервера Chef включает в себя два типа проверок:проверка приложения и проверка системы.Кроме того,рекомендуется мониторинг HTTP-запросов,которые рабочие станции и узлы направляют на Chef-сервер и на каждый из дисковых томов хранения данных.</target>
        </trans-unit>
        <trans-unit id="22ffffbccfcf501db363d7084eeed3e3deb28b71" translate="yes" xml:space="preserve">
          <source>More Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f846f2b121707b5598ab8bcc31b360a58589f3" translate="yes" xml:space="preserve">
          <source>More Information on SCP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36f592d2a5a38a65bc429f1d8e599c32bb307f8" translate="yes" xml:space="preserve">
          <source>More Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a06512ea673cc152b8420b5fe23bd0c2690ea2" translate="yes" xml:space="preserve">
          <source>More about Ruby</source>
          <target state="translated">Подробнее о Руби</target>
        </trans-unit>
        <trans-unit id="e2619263e1e43b188992cfc559e5f986f2005fda" translate="yes" xml:space="preserve">
          <source>More commonly, the usage incorporated arguments to the definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33b6e1a217cc16b5a138e541bc581b0f7473351" translate="yes" xml:space="preserve">
          <source>More commonly, the usage incorporates arguments to the definition:</source>
          <target state="translated">Чаще всего,использование включает в себя аргументы к определению:</target>
        </trans-unit>
        <trans-unit id="09e05b1e3ac4cade63e07bc240a5c31c685e6e4f" translate="yes" xml:space="preserve">
          <source>More details of this summary report can be viewed in the text file, the location for which is given at the end of the summary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67898507cf3b5c2deea5417321987b11749d6ef" translate="yes" xml:space="preserve">
          <source>More information about each service can be found in the individual service logs in &lt;code&gt;/var/opt/chef-backend/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f81f3effc633fd7f673ff233e18ab89490cd7a" translate="yes" xml:space="preserve">
          <source>More resources on schedulers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18716c3d2fd924ff74aa42cf6cd8d3e5d27a5849" translate="yes" xml:space="preserve">
          <source>More than one cookbook version can be specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e6d1e6a443021eca110b2c3fd574ce354485c2" translate="yes" xml:space="preserve">
          <source>More than one recipe can be added:</source>
          <target state="translated">Можно добавить несколько рецептов:</target>
        </trans-unit>
        <trans-unit id="ba51b80a94b1e778579e0f052c4d1847c8928c0f" translate="yes" xml:space="preserve">
          <source>More verbose output. Use twice for max verbosity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16feb61a5d52924490eb702beb3eada6dcd07c1" translate="yes" xml:space="preserve">
          <source>More verbose output. Use twice for max verbosity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e03c6f029b8cc4c1f9972e8bb591aeb75f3f749" translate="yes" xml:space="preserve">
          <source>More verbose output. Use twice for maximum verbosity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5bb0017c52f35baee990cba25de56ec73c1f5d" translate="yes" xml:space="preserve">
          <source>Most SSH public keys have a signature at the end of them that can be tested. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6c2cdb1f3e3ad4306e3de0128eecb91ad926be" translate="yes" xml:space="preserve">
          <source>Most VMware compute use cases are covered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcea96735e34b26f14f496427870882ed4b5cccb" translate="yes" xml:space="preserve">
          <source>Most authentication requests made to the Chef Infra Server are abstracted from the user. Such as when using knife or the Chef Infra Server user interface. In some cases, such as when using the &lt;code&gt;knife exec&lt;/code&gt; subcommand, the authentication requests need to be made more explicitly, but still in a way that does not require authentication headers. In a few cases, such as when using arbitrary Ruby code, a Chef Infra Server API client, or cURL, it may be necessary to include the full authentication header as part of the request to the Chef Infra Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded416c5044d2b375069f6f1edded5b0be4bcfe1" translate="yes" xml:space="preserve">
          <source>Most authentication requests made to the Chef server are abstracted from the user. Such as when using knife or the Chef server user interface. In some cases, such as when using the &lt;code&gt;knife exec&lt;/code&gt; subcommand, the authentication requests need to be made more explicitly, but still in a way that does not require authentication headers. In a few cases, such as when using arbitrary Ruby code or cURL, it may be necessary to include the full authentication header as part of the request to the Chef server.</source>
          <target state="translated">Большинство запросов аутентификации, отправляемых на сервер Chef, абстрагируются от пользователя. Например, при использовании ножа или пользовательского интерфейса сервера Chef. В некоторых случаях, например, при использовании подкоманды &lt;code&gt;knife exec&lt;/code&gt; , запросы на аутентификацию должны быть сделаны более явно, но все же способом, который не требует заголовков аутентификации. В некоторых случаях, например при использовании произвольного кода Ruby или cURL, может потребоваться включить полный заголовок аутентификации как часть запроса к серверу Chef.</target>
        </trans-unit>
        <trans-unit id="35c513b9445acca8cf58d11969e3829de2d41fbc" translate="yes" xml:space="preserve">
          <source>Most binaries compiled in a full Linux environment have a hard dependency on &lt;code&gt;/lib/ld-linux.so&lt;/code&gt; or &lt;code&gt;/lib/ld-linux-x86_64.so&lt;/code&gt;. In order to relocate this dependency to the Chef Habitat-provided variant, which is provided by &lt;code&gt;core/glibc&lt;/code&gt;, use the &lt;code&gt;patchelf(1)&lt;/code&gt; utility within your plan:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672fd307cfa170104cb818cdebcdb18a42190323" translate="yes" xml:space="preserve">
          <source>Most data is entered using a text editor in JSON format, unless the &lt;code&gt;--disable-editing&lt;/code&gt; option is entered as part of a command. (Encrypted data bags use YAML, which is a superset of JSON.) JSON is a common, language-independent data format that provides a simple text representation of arbitrary data structures. For more information about JSON, see &lt;a href=&quot;http://www.json.org/&quot;&gt;http://www.json.org/&lt;/a&gt; or &lt;a href=&quot;http://en.wikipedia.org/wiki/JSON&quot;&gt;http://en.wikipedia.org/wiki/JSON&lt;/a&gt;.</source>
          <target state="translated">Большая часть данных вводится с помощью текстового редактора в формате JSON, если только опция &lt;code&gt;--disable-editing&lt;/code&gt; не введена как часть команды. (В зашифрованных пакетах данных используется YAML, который является расширенным набором JSON.) JSON - это распространенный, независимый от языка формат данных, который обеспечивает простое текстовое представление произвольных структур данных. Для получения дополнительной информации о JSON см. &lt;a href=&quot;http://www.json.org/&quot;&gt;Http://www.json.org/&lt;/a&gt; или &lt;a href=&quot;http://en.wikipedia.org/wiki/JSON&quot;&gt;http://en.wikipedia.org/wiki/JSON&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9a4a2164f8392bac6829a3a7c49b0c1a2828a4c7" translate="yes" xml:space="preserve">
          <source>Most drivers have driver-specific configuration settings that must be added to the kitchen.yml file before Test Kitchen will be able to use that platform during cookbook testing. For information about these driver-specific settings, please refer to the driver-specific documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9745e5913cd76f62be5d57740c886b23dd1e2a07" translate="yes" xml:space="preserve">
          <source>Most importantly, you should update the &lt;code&gt;pkg_license&lt;/code&gt; value to indicate the type of license (or licenses) that your source files are licensed under. Valid license types can be found at &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;https://spdx.org/licenses/&lt;/a&gt;. You can include multiple licenses as an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb184c91791ce1071941d8b14b85c40f74cef2e0" translate="yes" xml:space="preserve">
          <source>Most of the HTTP API endpoint return these errors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f221c463b75c956eeab2a9d9e04d4f2fa0290b2" translate="yes" xml:space="preserve">
          <source>Most of the following helper functions are not available in Powershell plans (&lt;code&gt;plan.ps1&lt;/code&gt;). However in most cases, the standard Powershell cmdlets provide the same functionality. For example: use &lt;code&gt;Resolve-Path&lt;/code&gt; instead of &lt;code&gt;abspath&lt;/code&gt; or &lt;code&gt;Get-Command&lt;/code&gt; instead of &lt;code&gt;exists&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e1b143dbba888c50f8c4cf03c8cff7a30650f0" translate="yes" xml:space="preserve">
          <source>Most syntax highlighters will render Chef InSpec files correctly across a wide list of tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9777b959dd643a1098efcf8a81fae4a4642c7f79" translate="yes" xml:space="preserve">
          <source>Most time to wait to connect to service (default: 0s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3353eaedd716dcf00a8eb537b2bf88cc7369d5c" translate="yes" xml:space="preserve">
          <source>Motivating Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b26ca218476cae3af1e176d40d0fe07aa3436c1" translate="yes" xml:space="preserve">
          <source>Mount Storage Device</source>
          <target state="translated">Маонтажное устройство хранения данных</target>
        </trans-unit>
        <trans-unit id="29610d885c43e5f7af0c4aac9b7ee7e4a2c95137" translate="yes" xml:space="preserve">
          <source>Mount a labeled file system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd18eb066f127637edc91606311a2b1bbb6d03d" translate="yes" xml:space="preserve">
          <source>Mount a local block drive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c86828ee6188592ad23d8a5cc82f52764cc201" translate="yes" xml:space="preserve">
          <source>Mount a non-block file system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebfe8326d1aabf5b2fba9ce24c58aca337a4fa2" translate="yes" xml:space="preserve">
          <source>Mount a remote file system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7256fe65c3dd2d6ccdd928f567ab5656100a52e" translate="yes" xml:space="preserve">
          <source>Mount a remote folder in Microsoft Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9927c4685d078c0c5ecaf208c6428f5c4648c8ae" translate="yes" xml:space="preserve">
          <source>Mount and add to the file systems table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899904267e277c9d5b2b94d2e8baaef39eb84b6f" translate="yes" xml:space="preserve">
          <source>Mount the Elasticsearch shared filesystem to the same mount point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182bddb9219e7c581571a8d642e077b1012533ff" translate="yes" xml:space="preserve">
          <source>Mounts the node</source>
          <target state="translated">Монтаж узла</target>
        </trans-unit>
        <trans-unit id="ac80072d0aa3468b75c1244987f5c300f28a1c4a" translate="yes" xml:space="preserve">
          <source>Move .pem Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0adf417c257a2dbbfe7121e49efad8ede4be1d87" translate="yes" xml:space="preserve">
          <source>Move Config Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19736c30ca23a14ec3278a9fe37da60afbc9ed0c" translate="yes" xml:space="preserve">
          <source>Move Nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17c1d9ace65a2af0854b7dd0162a36eb96f46aa" translate="yes" xml:space="preserve">
          <source>Move files to the .chef directory</source>
          <target state="translated">Переместить файлы в каталог .chef</target>
        </trans-unit>
        <trans-unit id="ea432db471e62ff9e195d1b6cc1b9a72bca47c49" translate="yes" xml:space="preserve">
          <source>Move into the directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34a232aa56f5dff5fd5d41ffbec11ed0a91d151" translate="yes" xml:space="preserve">
          <source>Move on to the next member, until the list is exhausted; start the process again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e08afc234e90b7411689075d8d04f0d64f62085" translate="yes" xml:space="preserve">
          <source>Move the tar archives created in steps (1) and (2) to a long-term storage location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fbeacd9bc71b4e05a5d5ba2d57d6f0a2facab2" translate="yes" xml:space="preserve">
          <source>Move the unzipped &lt;code&gt;chef-automate&lt;/code&gt; binary to &lt;code&gt;/usr/local/bin&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d346408dcda669c19f09a8b7d094398602e1dbe9" translate="yes" xml:space="preserve">
          <source>Move this data to a location that is not on the standby Chef Automate server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d82827f34718b13c975e3ee9e4447dbaacaacb4" translate="yes" xml:space="preserve">
          <source>Move to the &lt;code&gt;bootstrap&lt;/code&gt; directory and create a blank template file; this example will use &lt;code&gt;airgap.erb&lt;/code&gt; for the template name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc424f83dee7c35bd2003f09e526193fa383ddb" translate="yes" xml:space="preserve">
          <source>Move to the &lt;code&gt;bootstrap&lt;/code&gt; directory and create a blank template file; this example will use &lt;code&gt;template.erb&lt;/code&gt; for the template name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846ce32a20580ec6ae9d2a615b0954f4381212fb" translate="yes" xml:space="preserve">
          <source>Moving a tested cookbook to production.</source>
          <target state="translated">Перемещение проверенной кулинарной книги в производство.</target>
        </trans-unit>
        <trans-unit id="54dc5e38246724469ab0d7905fde4cd5b823f611" translate="yes" xml:space="preserve">
          <source>Moving source files from one directory or package to another</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb59cec70559dc6ca140930f1ce0f7aed29dab7" translate="yes" xml:space="preserve">
          <source>Moving source files from one directory or package to another, with no changes in code;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef01688888f1492498da537490cefebdbe1e5934" translate="yes" xml:space="preserve">
          <source>Msiexec.exe</source>
          <target state="translated">Msiexec.exe</target>
        </trans-unit>
        <trans-unit id="520f9ad72ae9bddf29d65f541596be01134e5dba" translate="yes" xml:space="preserve">
          <source>Msiexec.exe is used to install Chef Infra Client on a node as part of a bootstrap operation. The actual command that is run by the default bootstrap script is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e333b3a98cd7a8afcbf4376443eb9cff4437f0ea" translate="yes" xml:space="preserve">
          <source>Msiexec.exe is used to install the chef-client on a node as part of a bootstrap operation. The actual command that is run by the default bootstrap script is:</source>
          <target state="translated">Msiexec.exe используется для установки chef-клиента на узел в рамках операции bootstrap.Действительной командой,которая выполняется скриптом загрузочной операции по умолчанию,является:</target>
        </trans-unit>
        <trans-unit id="c0880d4fade65f5492250a1fdb71a3a198f78e4f" translate="yes" xml:space="preserve">
          <source>Multiple Actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ac3371e765d93a38694fe7c6912758e8ffd92d" translate="yes" xml:space="preserve">
          <source>Multiple Chef Infra Servers can send data to a single Chef Automate server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5f8bf3ebcaa8ce7542dce4bcbce09596ce8496" translate="yes" xml:space="preserve">
          <source>Multiple Chef Servers can send data to a single Chef Automate server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7eb37887764c029b5d073f46febb4c2e8cc1462" translate="yes" xml:space="preserve">
          <source>Multiple Cookbooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a56075b5d765cfd0c544c28c8d61b015a942996" translate="yes" xml:space="preserve">
          <source>Multiple Organizations</source>
          <target state="translated">Множество организаций</target>
        </trans-unit>
        <trans-unit id="0b7ab852e90b6861be58002a02f47252a47e101e" translate="yes" xml:space="preserve">
          <source>Multiple Packages</source>
          <target state="translated">Несколько пакетов</target>
        </trans-unit>
        <trans-unit id="a2540db4376e272c8b27ebbd39e0bc2aa60220f9" translate="yes" xml:space="preserve">
          <source>Multiple Pipelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6644754a7e831be42b3ed01ff7a740bd5df44064" translate="yes" xml:space="preserve">
          <source>Multiple Properties</source>
          <target state="translated">Многочисленные свойства</target>
        </trans-unit>
        <trans-unit id="3ddd599a799b9f39a227d0f463269142a499d9fc" translate="yes" xml:space="preserve">
          <source>Multiple cookbook sources may be specified. For example from the public Chef Supermarket and a monolithic repository:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15865795f6ca2825474fe830a8f72289fafb072" translate="yes" xml:space="preserve">
          <source>Multiple days should be comma separated. e.g &lt;code&gt;&quot;1, 2, 3&quot;&lt;/code&gt; or &lt;code&gt;&quot;MON, WEN, FRI&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df97344cea3b5ed408cc102f2789d48479757667" translate="yes" xml:space="preserve">
          <source>Multiple logging specifiers can be submitted, separated by commas. A simple logging level will act as the default, with additional module-targeted levels serving to refine the logging for the target code. If you supply multiple simple logging levels, only the last one will count. Any number of targeted logging levels are allowed, however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0326bf3c9fb156a02a5afdd217f17b3f62f4f82" translate="yes" xml:space="preserve">
          <source>Multiple parameters can be provided for better granularity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2bdfd29f763648b9c1406b49e9febea2408b59" translate="yes" xml:space="preserve">
          <source>Multiple pipelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c89221919156f46b3884bf5595246fa407ad1b" translate="yes" xml:space="preserve">
          <source>Multiple product groups must be supported&amp;mdash;each product group can have its own security requirements, schedule, and goals</source>
          <target state="translated">Должно поддерживаться несколько групп продуктов - каждая группа продуктов может иметь свои собственные требования безопасности, расписание и цели</target>
        </trans-unit>
        <trans-unit id="6c52e800705560eebcb349539536a326bcaf280a" translate="yes" xml:space="preserve">
          <source>Multiple recipes can be included within a recipe. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0157d99aa7feaf938e066314c7dfddcd74a892" translate="yes" xml:space="preserve">
          <source>Munki</source>
          <target state="translated">Munki</target>
        </trans-unit>
        <trans-unit id="f7c4e9d723e4e24f2f3f9663e09c5497b534a32e" translate="yes" xml:space="preserve">
          <source>Munki Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43fed198c6bad9209064c17d095770b948e57e7" translate="yes" xml:space="preserve">
          <source>Munki is an &lt;a href=&quot;https://github.com/munki/munki&quot;&gt;open source project&lt;/a&gt; from Walt Disney Animation Studios. It is a set of tools for managing applications on macOS computers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744feba2baca7b8ad9d40731f17d4d5d5caf13c3" translate="yes" xml:space="preserve">
          <source>Munki will handle managed installations and uninstallations. Munki also provides a ready-made application that offers users unmanaged applications that they can download if they choose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8122174669a3105ba0f65edd6eacb6433b62d4f8" translate="yes" xml:space="preserve">
          <source>MunkiAdmin</source>
          <target state="translated">MunkiAdmin</target>
        </trans-unit>
        <trans-unit id="37f664272f80a2658f74801637f8791142167d06" translate="yes" xml:space="preserve">
          <source>MunkiAdmin is a graphical user interface (GUI) for managing munki repositories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2198baa6ee6f625c5715662ceb06a51dfb9ab0" translate="yes" xml:space="preserve">
          <source>Must be able to access the chef-validator.pem so that it may create a new identity on the Chef Infra Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e6d9849b8e294b9b9818c866ca613731f91359" translate="yes" xml:space="preserve">
          <source>Must be able to access the chef-validator.pem so that it may create a new identity on the Chef server</source>
          <target state="translated">Должен иметь доступ к Chef-validator.pem,чтобы он мог создать новую идентификацию на сервере Chef.</target>
        </trans-unit>
        <trans-unit id="cd84b39dcbafffff6bae5bdfae63da20ed52b3b6" translate="yes" xml:space="preserve">
          <source>Must be able to authenticate to the Chef Infra Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78f5e1193ec048cf2713c85fa357d64437b453d" translate="yes" xml:space="preserve">
          <source>Must be able to authenticate to the Chef server</source>
          <target state="translated">Должна быть возможность аутентифицироваться на сервере шеф-повара.</target>
        </trans-unit>
        <trans-unit id="7718bc4e23c8104ff6b316cec8d666f2a4ac32c6" translate="yes" xml:space="preserve">
          <source>Must be able to configure a run-list</source>
          <target state="translated">Должна уметь настроить список прогонов</target>
        </trans-unit>
        <trans-unit id="df2e0b97ece43ff47a391f370d850eb69af10ede" translate="yes" xml:space="preserve">
          <source>Must be added to a run-list before it can be used by Chef Infra Client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf87d05d21023d4eab3b9166941dee18989dbcf" translate="yes" xml:space="preserve">
          <source>Must be added to a run-list before it can be used by the chef-client</source>
          <target state="translated">Должен быть добавлен в run-list перед тем,как он может быть использован шеф-клиентом</target>
        </trans-unit>
        <trans-unit id="1e66c30df2c7a344ba8a46df45a53cc18d793601" translate="yes" xml:space="preserve">
          <source>Must be changed to explicitly declare the resource it provides:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ccc5d5ac4a78976214d4a8af2e69e8b08a2ea0" translate="yes" xml:space="preserve">
          <source>Must be greater than 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8396c8c05d419e3dda5aacfde1561de97e7b887b" translate="yes" xml:space="preserve">
          <source>Must be greater than 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e70580ac3b6acc288367c726341c2051dee54d" translate="yes" xml:space="preserve">
          <source>Must be organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c82e28bd135972fa8c7c5fcd091fc54bef82f1" translate="yes" xml:space="preserve">
          <source>Must be set to &lt;code&gt;false&lt;/code&gt; up to Chef Client 13.11.3 to gather the standard return code offered by &lt;code&gt;exit_status true&lt;/code&gt;. Later versions run as expected without changes to the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3812362d5fe3a2e39783ba2d46e1ba3f591c342b" translate="yes" xml:space="preserve">
          <source>Must be stored in a cookbook</source>
          <target state="translated">Должен храниться в кулинарной книге</target>
        </trans-unit>
        <trans-unit id="c20070a381bf211b18cb6d98ba382da922ab6bc3" translate="yes" xml:space="preserve">
          <source>Must declare one (or more) settings to be tested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab48dd1bf1e062a0001456bd89d1b27d5377d44" translate="yes" xml:space="preserve">
          <source>Must declare the location of the configuration file to be tested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aea41576cdcd99011bed7474dae31f818fe95dd" translate="yes" xml:space="preserve">
          <source>Must define everything that is required to configure part of a system</source>
          <target state="translated">Должно быть определено все,что требуется для настройки части системы.</target>
        </trans-unit>
        <trans-unit id="14e22b7104c71aaebb13580f17c18fb09d9eea1b" translate="yes" xml:space="preserve">
          <source>Must have a unique node name; Chef Infra Client will use the FQDN for the host system by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4f7a83b36a7d9538d4d09bb35693d52ad9a493" translate="yes" xml:space="preserve">
          <source>Must have a unique node name; the chef-client will use the FQDN for the host system by default</source>
          <target state="translated">Должно быть уникальное имя узла;chef-клиент будет использовать FQDN для хост-системы по умолчанию</target>
        </trans-unit>
        <trans-unit id="db1a11cac2413b30196c9bad60b8ada621d40225" translate="yes" xml:space="preserve">
          <source>MustBeRootError</source>
          <target state="translated">MustBeRootError</target>
        </trans-unit>
        <trans-unit id="587116bfc7fc4b9feae0b98cd9f61d8eb0abec7c" translate="yes" xml:space="preserve">
          <source>MySQL Server name, e.g. &lt;code&gt;my-sql-server&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e544eda097d63a50d7279987706ae4b4927ca89" translate="yes" xml:space="preserve">
          <source>MySQL specific configuration when replicating from a MySQL on-premises master. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named master.info in the data directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="b78c72469682cedf3c195f033cf81391ad8147f6" translate="yes" xml:space="preserve">
          <source>NAPTR</source>
          <target state="translated">NAPTR</target>
        </trans-unit>
        <trans-unit id="d3108b7ca6fe05950a9192c2ed3eab2242ee22e8" translate="yes" xml:space="preserve">
          <source>NEARLINE</source>
          <target state="translated">NEARLINE</target>
        </trans-unit>
        <trans-unit id="aa7d8ccedb1e1939b9c4cbb6c659076c50bffca0" translate="yes" xml:space="preserve">
          <source>NEWLINE_DELIMITED_JSON</source>
          <target state="translated">NEWLINE_DELIMITED_JSON</target>
        </trans-unit>
        <trans-unit id="b9977f78b265c37e59b874eba4410524132922f8" translate="yes" xml:space="preserve">
          <source>NGINX SSL Protocols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95d81bd3d908bacad9edd224459c581ee690850" translate="yes" xml:space="preserve">
          <source>NGINX forwards requests to this port on the push-jobs server as part of the push-jobs communication channel. Default value: &lt;code&gt;10003&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0654a028e5aea48c8fbb09871b8f397a186c883b" translate="yes" xml:space="preserve">
          <source>NONE</source>
          <target state="translated">NONE</target>
        </trans-unit>
        <trans-unit id="969e7d8dee132181523a501a068fec75bded3005" translate="yes" xml:space="preserve">
          <source>NOT</source>
          <target state="translated">NOT</target>
        </trans-unit>
        <trans-unit id="480be67c09b9afe7a1c4f9f3520b8240ba64d988" translate="yes" xml:space="preserve">
          <source>NOTE: Azure does not allow the use of &lt;code&gt;Administrator&lt;/code&gt; as the admin username on a Windows machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de42883e19adffad9d96c1a7626ec8ea32add30" translate="yes" xml:space="preserve">
          <source>NOTE: Starting in v0.10.12, if you have the feature &amp;lsquo;useEnhancedExitCodes&amp;rsquo; turned on, then choco will provide enhanced exit codes that allow better integration and scripting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005b9ac01e3cc60f667215a5ef9525efafcf54d8" translate="yes" xml:space="preserve">
          <source>NO_EXECUTE</source>
          <target state="translated">NO_EXECUTE</target>
        </trans-unit>
        <trans-unit id="52e8c8485df9cd02b0c2089a83b06b06c2d9ae8b" translate="yes" xml:space="preserve">
          <source>NO_SCHEDULE</source>
          <target state="translated">NO_SCHEDULE</target>
        </trans-unit>
        <trans-unit id="7d94ebbf07f5417771d7c7fd06f208703494bf50" translate="yes" xml:space="preserve">
          <source>NPM</source>
          <target state="translated">NPM</target>
        </trans-unit>
        <trans-unit id="d3fffd89aedf778abd6abee96a82691a465c97af" translate="yes" xml:space="preserve">
          <source>NS</source>
          <target state="translated">NS</target>
        </trans-unit>
        <trans-unit id="78a61edc526d45fb768660995e2f6179b5b3cb7b" translate="yes" xml:space="preserve">
          <source>NTP</source>
          <target state="translated">NTP</target>
        </trans-unit>
        <trans-unit id="6590624f1c1cb5fb123b9a660073c8ea49f31ce9" translate="yes" xml:space="preserve">
          <source>NULLABLE</source>
          <target state="translated">NULLABLE</target>
        </trans-unit>
        <trans-unit id="e19ac77aba28248a3f4e37170531e0c69b4cf98e" translate="yes" xml:space="preserve">
          <source>NVME</source>
          <target state="translated">NVME</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="4ccef8dddde7c311f40a07e2fdf5e1fabde8d04c" translate="yes" xml:space="preserve">
          <source>Name attributes after the recipe in which they are primarily used. e.g. &lt;code&gt;node['postgresql']['server']&lt;/code&gt;.</source>
          <target state="translated">Назовите атрибуты после рецепта, в котором они в основном используются. например, &lt;code&gt;node['postgresql']['server']&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff2c1fec4ddb07e950088ecb2da87c02517d06b1" translate="yes" xml:space="preserve">
          <source>Name of availability set to add virtual machine into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d9b4a093dc516bca6abae848fbdc9f7793aefe" translate="yes" xml:space="preserve">
          <source>Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the load balancing scheme is EXTERNAL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a84982bab096ca2c46a5f0978497dd83a9fb8da" translate="yes" xml:space="preserve">
          <source>Name of the API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e166392583af2c797b4d4fa09d1f8c39a55be4d2" translate="yes" xml:space="preserve">
          <source>Name of the Amazon S3 bucket into which CloudTrail delivers your trail files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a638f8fc319852daf66cf8b7556d6ae1e33549" translate="yes" xml:space="preserve">
          <source>Name of the Cloud SQL instance. This does not include the project ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd39a671e58f2bd01eda47299e4feb8f29f8cdf" translate="yes" xml:space="preserve">
          <source>Name of the Cloud Source Repository. If omitted, the name &amp;ldquo;default&amp;rdquo; is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25e7fccc090db6ebed4b84a03ce24f7a08b6ee0" translate="yes" xml:space="preserve">
          <source>Name of the NAT service. The name must be 1-63 characters long and comply with RFC1035.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127a5a9ec554abf03f853f3b0be59e3d260da7be" translate="yes" xml:space="preserve">
          <source>Name of the Virtual Machine in Azure. Be aware that this is not the computer name or hostname, rather the name of the machine when seen in the Azure Portal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf7bf3d5ae5f90b59c0615c06826876ed5680ba" translate="yes" xml:space="preserve">
          <source>Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided. This field is a regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bab31b129030e512ff3ab2da99b0af5a18584b" translate="yes" xml:space="preserve">
          <source>Name of the cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f9eb31ab456e71c42cfd888ad4fd5cb4c020b1" translate="yes" xml:space="preserve">
          <source>Name of the dataset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635e32b8939cf5409e99376596b1fe8d16805890" translate="yes" xml:space="preserve">
          <source>Name of the exclusion, specified by the server during create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9568106484b676decbfc59908c141330f634d74" translate="yes" xml:space="preserve">
          <source>Name of the log sink.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8938fa048c59cc77cbab3cfd4a7bc6f572869d15" translate="yes" xml:space="preserve">
          <source>Name of the metadata label. The length must be between 1 and 1024 characters, inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199cac02002c2ac400a11e4d50dff4b090848794" translate="yes" xml:space="preserve">
          <source>Name of the node in Chef Infra Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1694131c7081e7ad7ca80aeaf88672c5905c5981" translate="yes" xml:space="preserve">
          <source>Name of the node pool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e0367b17e353e71fa6c3ba5a5d5abfd08f3a0a" translate="yes" xml:space="preserve">
          <source>Name of the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cf08d05fea2a05b60d50d9d6045d6a6f96c1ae" translate="yes" xml:space="preserve">
          <source>Name of the policy as set in policyfile.rb, only nodes using policyfiles will appear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8736d1b2f80339f20397bf299b3cdac5307eb8de" translate="yes" xml:space="preserve">
          <source>Name of the quota metric</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e667e463f3f0e37cab95f9460e1c051913bcf0" translate="yes" xml:space="preserve">
          <source>Name of the quota metric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a68cf9eeadae8b85e300bf8385f86dcf7dfcc44" translate="yes" xml:space="preserve">
          <source>Name of the repository. For example: The name for &lt;a href=&quot;https://github.com/googlecloudplatform/cloud-builders&quot;&gt;https://github.com/googlecloudplatform/cloud-builders&lt;/a&gt; is &amp;ldquo;cloud-builders&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0e86784b40519a1fa2d584936dd3c16e9b23f8" translate="yes" xml:space="preserve">
          <source>Name of the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a43ed8bf48ebb1208561cdafbf5397f6395d9cc" translate="yes" xml:space="preserve">
          <source>Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression &lt;code&gt;[a-z]([-a-z0-9]*[a-z0-9])?&lt;/code&gt; which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1274afae48d525cd22d44ae7a37d13675ee59a" translate="yes" xml:space="preserve">
          <source>Name of the resource. The name is 1-63 characters long and complies with RFC1035.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee95354015d42df61605edab3de178975fecdd7a" translate="yes" xml:space="preserve">
          <source>Name of the resource. The name must be 1-63 characters long and match the regular expression &lt;code&gt;[a-z]([-a-z0-9]*[a-z0-9])?&lt;/code&gt; which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb69766fcdcfdff71a59850524e354ddc8a85b2" translate="yes" xml:space="preserve">
          <source>Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression &lt;code&gt;[a-z]([-a-z0-9]*[a-z0-9])?&lt;/code&gt; which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16896093d27b632ed829750d41dccf20be919af" translate="yes" xml:space="preserve">
          <source>Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression &lt;code&gt;[a-z]([-a-z0-9]*[a-z0-9])?&lt;/code&gt; which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd63bd2bf4fe829e0955c079ce8b0014c639308" translate="yes" xml:space="preserve">
          <source>Name of the security policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c21b5851f1fb2efbbbe5fb845ec9d550177ade" translate="yes" xml:space="preserve">
          <source>Name of the subscription.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6c0d89fb2b8ca8cd64685932449a001a9da4f4" translate="yes" xml:space="preserve">
          <source>Name of the table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946f47e5326ed72caa72bc1e09cfbf8af1e1f4af" translate="yes" xml:space="preserve">
          <source>Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided. This field is a regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046d564d5a24c461a69872120d2adfea0c415ec8" translate="yes" xml:space="preserve">
          <source>Name of the topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c678e9b02ecd82acb213241359c0cf0b5e1f05" translate="yes" xml:space="preserve">
          <source>Name of the trail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758dc1caeaac00c419828a1d3d060c082ca8e80d" translate="yes" xml:space="preserve">
          <source>Name of the trigger. Must be unique within the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92a4cc1948533c97442399260b586c1edaf36b9" translate="yes" xml:space="preserve">
          <source>Name of the user to be created as a rescue account</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301f6a5938abe908f7020b63096829a2dd0b9cdd" translate="yes" xml:space="preserve">
          <source>Name of the volume to mount. Volume names must be unique per build step and must be valid names for Docker volumes. Each named volume must be used by at least two build steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bd7b45f5231650d26b67a679127ab7cc13d33c" translate="yes" xml:space="preserve">
          <source>Name the package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f283a52d0d79e42fd9a247c0ec96904e3dddd3" translate="yes" xml:space="preserve">
          <source>Name the package after the CIS benchmark that it contains is the best practice, for example, &lt;code&gt;company-cis-linux-policy&lt;/code&gt;. You can also name the package for the application stack that the exceptions and remediation changes apply, for example, &lt;code&gt;redis-company-cis-linux-policy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c86fef27a8ab3c593e020c662ba162dd1eca9b" translate="yes" xml:space="preserve">
          <source>Name things uniformly for their system and component. For example:</source>
          <target state="translated">Назовите вещи одинаково для их системы и компонента.Например:</target>
        </trans-unit>
        <trans-unit id="600afbdb6f7a49b70e50e9c340a30f1b86fe2e6b" translate="yes" xml:space="preserve">
          <source>Name to use for Chef Automate backup archives and snapshots. When omitted a default will used automatically. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3730a08a2dc6d5e27dc5120effaf694a10477d63" translate="yes" xml:space="preserve">
          <source>Named ports configured for the Instance Groups complementary to this Instance Group Manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a71fc0ca6fcd060f7cf4143cc5869c901f79a4c" translate="yes" xml:space="preserve">
          <source>Nameless</source>
          <target state="translated">Nameless</target>
        </trans-unit>
        <trans-unit id="706a0b19bfbf28ebbbc07431d28617d92391ec7c" translate="yes" xml:space="preserve">
          <source>Names of permissions this role grants when bound in an IAM policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1451380af754dbecc8502c63b92c02af3d391e" translate="yes" xml:space="preserve">
          <source>Names of query string parameters to exclude in cache keys. All other parameters will be included. Either specify query_string_whitelist or query_string_blacklist, not both. &amp;lsquo;&amp;amp;&amp;rsquo; and &amp;lsquo;=&amp;rsquo; will be percent encoded and not treated as delimiters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf2c5390b1e46892b520bd3e621d9b6f5305376" translate="yes" xml:space="preserve">
          <source>Names of query string parameters to include in cache keys. All other parameters will be excluded. Either specify query_string_whitelist or query_string_blacklist, not both. &amp;lsquo;&amp;amp;&amp;rsquo; and &amp;lsquo;=&amp;rsquo; will be percent encoded and not treated as delimiters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0449e1003dd0cdd92ab163e844540614258e8b38" translate="yes" xml:space="preserve">
          <source>Namespace</source>
          <target state="translated">Namespace</target>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="0082d8f8e53e323a051ca6e1f62a98de5e9ee544" translate="yes" xml:space="preserve">
          <source>Naming Resources</source>
          <target state="translated">Наименование Ресурсы</target>
        </trans-unit>
        <trans-unit id="b6ad8c6edd0d60c33915e773a1bcc7aeb135cd0f" translate="yes" xml:space="preserve">
          <source>Navigate back to the Chef Automate &lt;a href=&quot;https://aws.amazon.com/marketplace/pp/B01AMIH01Q&quot;&gt;product page&lt;/a&gt; and continue to the launch wizard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf1e8eaa59df2c96a1779b92b0f5f363970753e" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;code&gt;https://automate-test&lt;/code&gt; on your workstation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802bd273d3c0b991a413782009b9c906d35571a7" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;code&gt;https://automate.example.com&lt;/code&gt; in a browser and log in to Chef Automate with the credentials provided in &lt;code&gt;automate-credentials.toml&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc262fb64c6a0eb82e8bfb5be7cb86d48884bccc" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;code&gt;https://automate.example.com&lt;/code&gt; in a browser and log in to Chef Automate with the credentials provided in &lt;code&gt;automate-credentials.toml&lt;/code&gt;. Once you log in, Chef Automate prompts you for a license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946bc656b7fe1cb5837d6a2072994902d7ba60d0" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;code&gt;https://automate.example.com&lt;/code&gt; in your browser. If you cannot access the site in Google Chrome, try Mozilla Firefox or Microsoft Edge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be6df316593e53800f0657eef84fd3d4cf297a2" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;API Tokens&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then open the menu at the end of the table row and select &lt;strong&gt;Delete Token&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6565afe8c23c61e2c3683a603b9fc0ac61e39d54" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;API Tokens&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then, use the &lt;strong&gt;Create Token&lt;/strong&gt; button, which opens a dialog box for entering the API token&amp;rsquo;s &lt;em&gt;name&lt;/em&gt; and optionally assigning the API token to one or more &lt;em&gt;Policies&lt;/em&gt; and to one or more &lt;em&gt;Projects&lt;/em&gt;. A token ID automatically generates upon creation. If you would like to change the token ID, select the &lt;strong&gt;Edit ID&lt;/strong&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a7c44393fdf6ee304c62766ea893e9d08d8a17" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Policies&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then open the menu at the end of the table row and select &lt;strong&gt;Delete Policy&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39e0c762f02e2633917d7813195ddb7528dcc6f" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Projects&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then use the &lt;strong&gt;Create Project&lt;/strong&gt; button, which opens a dialog box for entering the project&amp;rsquo;s &lt;em&gt;Name&lt;/em&gt;. A project ID automatically generates upon creation. If you would like to change the project ID, use the &lt;strong&gt;Edit ID&lt;/strong&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e43a0ff21189fd6011bb397f93a96043b69f31e" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Roles&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then open the menu at the end of the table row and select &lt;strong&gt;Delete Role&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307e1da6fd980ed3ccee4a14e115e1aac207c622" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Data Lifecycle&lt;/em&gt; and adjust any settings you would like to change. After making changes, use the &lt;strong&gt;Save Changes&lt;/strong&gt; button to apply your changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224f3833236bfcbbcc3e445ebaf9f55e4209e963" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Teams&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Select the &lt;strong&gt;Create Team&lt;/strong&gt; button, which opens a dialog box to enter the team&amp;rsquo;s &lt;em&gt;Name&lt;/em&gt; and optionally assign the team to one or more &lt;em&gt;Projects&lt;/em&gt;. A team ID automatically generates upon creation. If you would like to change the team ID, use the &lt;strong&gt;Edit ID&lt;/strong&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef90343bd4ee4347ef97a658201c6bb4816f8068" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Teams&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then open the menu at the end of the table row and select &lt;strong&gt;Delete Team&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b760a3e1c82e9a59e3f14ea14e50d1e5904dc38" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Users&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab and locate the user who needs a password reset. Navigate to their user page, and then the &lt;strong&gt;Reset Password&lt;/strong&gt; tab. Provide a new password, confirm the new password, and then select the &lt;strong&gt;Reset Password&lt;/strong&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3092dcf989aa29d675112d42e8bce849ecf31d77" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Users&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab and locate the user who needs their display name changed. Navigate to their user page, provide a new display name, and select the &lt;strong&gt;Save&lt;/strong&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d7e4f7808b9cf9c50a2b25504cd06ed6f5573d" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Users&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Select the &lt;strong&gt;Create User&lt;/strong&gt; button, which opens a dialog box for entering the user&amp;rsquo;s &lt;em&gt;display name&lt;/em&gt;, and &lt;em&gt;password&lt;/em&gt;. A username automatically generates upon creation. If you would like to change the username, use the &lt;strong&gt;Edit Username&lt;/strong&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fd8c759931ce6464adaf2cd23865c1695e3800" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Users&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then open the menu at the end of the table row and select &lt;strong&gt;Delete User&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a266eaeafe77934b8ec219cfd99c34293e5710" translate="yes" xml:space="preserve">
          <source>Navigate to Blob Storage &amp;gt; Containers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05d69a2f598ae226d0fafd756af9bb296878684" translate="yes" xml:space="preserve">
          <source>Navigate to Blob Storage -&amp;gt; Containers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c4edec1f4d60fdd591b26488f2f69618f4d3e4" translate="yes" xml:space="preserve">
          <source>Navigate to a project in Workflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88a85d0adf1a4aea72c2786f0aa5330d227793a" translate="yes" xml:space="preserve">
          <source>Navigate to compliance profiles by selecting the &lt;strong&gt;Compliance&lt;/strong&gt; tab and then selecting the &lt;em&gt;Profiles&lt;/em&gt; page, or by heading to &lt;code&gt;https://automate.example.com/compliance/compliance-profiles&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752da36f37e310e53abe996b8bd589f5a7598457" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;a href=&quot;https://console.aws.amazon.com/iam/home#roles&quot;&gt;IAM Role section in the AWS console&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f387a2122203b5b92e9a70a814412d1077f71a85" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;a href=&quot;https://s3.console.aws.amazon.com/s3/home&quot;&gt;S3 Console&lt;/a&gt; and create an S3 bucket in the region where you intend to launch the Chef Automate AMI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553482a27acab66a1fa26f7c2c13099104f41bf9" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;code&gt;.chef&lt;/code&gt; directory, and create a &lt;code&gt;bootstrap&lt;/code&gt; directory within it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd94d01e2566e5df17759aba135427aff1b4525" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;code&gt;first_cookbook&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea60bf3f21ff92775f1164683aa142e4e4ab9a1" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;code&gt;~/chef-repo/.chef&lt;/code&gt; directory and create the &lt;code&gt;config.rb&lt;/code&gt; using the &lt;code&gt;knife configure&lt;/code&gt; tool. The file must be created in the &lt;code&gt;.chef&lt;/code&gt; folder. It should look similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1109288dbe28b858229173b7515b6c89011d06b" translate="yes" xml:space="preserve">
          <source>Navigate to the Amazon Web Services (AWS) instance in the AWS Management Console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efeb3298632dbef8f8a436aa032c6679f170a0f" translate="yes" xml:space="preserve">
          <source>Navigate to the Chef Automate &lt;a href=&quot;https://aws.amazon.com/marketplace/pp/B01N813OWL&quot;&gt;product page&lt;/a&gt; and accept the software terms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758691eaa9933dc8e6d527e1bc45041b7357956a" translate="yes" xml:space="preserve">
          <source>Navigate to the notification settings page in the Chef Automate UI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91912d4a56bf4f998f53dd60e99345c775d3d870" translate="yes" xml:space="preserve">
          <source>Navigate to the project details page of &lt;code&gt;project-devops&lt;/code&gt;, by selecting the project name on the project list page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a7afa7c754bad982eb88ef25c856a6356df197" translate="yes" xml:space="preserve">
          <source>Navigate to the project&amp;rsquo;s page (&lt;code&gt;/$ENT_NAME/organizations/$ORG_NAME/projects/$PROJECT_NAME&lt;/code&gt;) in the Workflow web UI and click the &lt;code&gt;Pipelines&lt;/code&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602ba93eaef23b93630207166ecbf1f3004bef36" translate="yes" xml:space="preserve">
          <source>Navigate to the project&amp;rsquo;s page (&lt;code&gt;e/$ENT_NAME/#/organizations/$ORG_NAME/projects/$PROJECT_NAME&lt;/code&gt;) in the Chef Automate web UI and click on the &lt;code&gt;Pipelines&lt;/code&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16778a312f501ca7b6f29631bdc578b334409e14" translate="yes" xml:space="preserve">
          <source>Navigate to the root of the cookbook that you want to upload, then initialize Stove:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56b5d7a8daff5b2d277780014be87e3a167c025" translate="yes" xml:space="preserve">
          <source>Necessary Ports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40b6ed63321ac9b18d9edc4345a84c83c400d2d" translate="yes" xml:space="preserve">
          <source>Negotiate, NTLM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29f904a01e80b3d206c946ed776c5035750f89f" translate="yes" xml:space="preserve">
          <source>Nell Shamrell-Harringon&amp;rsquo;s blog post</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71af4b3dab30f2abf84de7f8e5216405d6d9cf25" translate="yes" xml:space="preserve">
          <source>Nested Fields</source>
          <target state="translated">Вложенные поля</target>
        </trans-unit>
        <trans-unit id="1c2d0f38d6862e1ceda5f7b596dd3455affea97a" translate="yes" xml:space="preserve">
          <source>Nested describe blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d6a0ee257e4d378c2cc1874fcf6832feb64786" translate="yes" xml:space="preserve">
          <source>Nesting a &lt;code&gt;describe.one&lt;/code&gt; block inside another &lt;code&gt;describe.one&lt;/code&gt; block is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18aa902ea0669a0c8c8db808fe69bc76dab09400" translate="yes" xml:space="preserve">
          <source>Net Effect Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64d9cd121c344a2ba9288a016802f5fdbb53578" translate="yes" xml:space="preserve">
          <source>NetBSD. All platform variants of NetBSD return &lt;code&gt;netbsd&lt;/code&gt;.</source>
          <target state="translated">NetBSD. Все варианты платформы NetBSD возвращают &lt;code&gt;netbsd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53ebc572b4a44802ba114729f07bdaaf5409a9d7" translate="yes" xml:space="preserve">
          <source>Network</source>
          <target state="translated">Network</target>
        </trans-unit>
        <trans-unit id="a6ccd7f346fb359e779068333df6449fe3d15831" translate="yes" xml:space="preserve">
          <source>Network IP address of an instance that should handle matching packets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87a499496a16c922c86ddb772aa037a5ea60e97" translate="yes" xml:space="preserve">
          <source>Network Port Requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9e6663a54f88d4a3cd080622cff5630d90afe2" translate="yes" xml:space="preserve">
          <source>Network Services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad15b3016396eb830f3942429704f8f90cc2a840" translate="yes" xml:space="preserve">
          <source>Network interface name, e.g. &lt;code&gt;nic-name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8870df906f13a1d372e026ab863eec103e224f" translate="yes" xml:space="preserve">
          <source>Network interface name, e.g. &lt;code&gt;vm-nic&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094dd81ca6e35161c564f51aececf96f7d456f9a" translate="yes" xml:space="preserve">
          <source>Network routing configuration is preventing access to the host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a39d625d875e0d4075bc8c35a54494d2cfffc4" translate="yes" xml:space="preserve">
          <source>Network security groups indicates if recommendations for virtual machines are enabled (&lt;code&gt;On&lt;/code&gt;|&lt;code&gt;Off&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d7a11dd6e9031feb83d3e202c16372867c5cc2" translate="yes" xml:space="preserve">
          <source>Network usage</source>
          <target state="translated">Использование сети</target>
        </trans-unit>
        <trans-unit id="195e7ca7bc97970069b4cb9c66ba98fe7d86e053" translate="yes" xml:space="preserve">
          <source>Networking family option for Debian-based systems; for example: &lt;code&gt;inet&lt;/code&gt; or &lt;code&gt;inet6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbe5f1cb24ee8424b6cd99f9a11500d5a05478b" translate="yes" xml:space="preserve">
          <source>Networking ports exposed by Chef Habitat need to be added to the JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a7ebaeaa9232966fd9e2775433928d14a66c54" translate="yes" xml:space="preserve">
          <source>Never run services on those Supervisors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ed81968fc7826f1ed5fafee626f6885adb6786" translate="yes" xml:space="preserve">
          <source>New Data Paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035f2afd0a3f97a54c00c8e3899f54acb71b6482" translate="yes" xml:space="preserve">
          <source>New Provisioner Settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3436427337238b332c9a8f185813f051d61173" translate="yes" xml:space="preserve">
          <source>New Relic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8c27a1af0d9e8cce74223bd455210a4b504a5c" translate="yes" xml:space="preserve">
          <source>New Setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11652493f963810875e553ea044167f4a7ce49e9" translate="yes" xml:space="preserve">
          <source>New cops</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26a6255bcc9153023a41cfcfef3124b7d6e9824" translate="yes" xml:space="preserve">
          <source>New cops are continuously added to Rubocop. New cops can make existing codebases fail CI tests and force authors to constantly update their code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5869421ad9337c9a5572c6459a41b322cc90c9c5" translate="yes" xml:space="preserve">
          <source>New default, &lt;em&gt;Chef-managed&lt;/em&gt; policies: Administrator, Ingest, Editors, and Viewers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7496d77b9ba10fb6ba1a75cd4ebd3b4d4618369e" translate="yes" xml:space="preserve">
          <source>New in 12.0, &lt;code&gt;-o RUN_LIST_ITEM&lt;/code&gt;. Changed in 12.0 &lt;code&gt;-f&lt;/code&gt; no longer allows unforked intervals, &lt;code&gt;-i SECONDS&lt;/code&gt; is applied before a Chef Infra Client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf4325295430fe009ee9cbb13bc0a9c721726bb" translate="yes" xml:space="preserve">
          <source>New in Automate 1.7.114</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662423ea821d5d1c6eec295aa912f15da7e372db" translate="yes" xml:space="preserve">
          <source>New in Automate version 1.7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be9590d6d500cec4d533be7f7e5555eda76ee53" translate="yes" xml:space="preserve">
          <source>New in Chef Automate 0.5.328.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69393c0bf1dfcdaadcc1d0c11da98a64a433b501" translate="yes" xml:space="preserve">
          <source>New in Chef Automate 0.6.64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170ee9c0f420b8ade8d7443e2dd3ae06806b58f3" translate="yes" xml:space="preserve">
          <source>New in Chef Automate 1.6.192.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e33e25f42725240a4803af876257b85fe3d0be9" translate="yes" xml:space="preserve">
          <source>New in Chef Automate 1.6.87.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308965a1abb1be5c619295360b0cfd42883d5f7d" translate="yes" xml:space="preserve">
          <source>New in Chef Backend 1.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4d61132e7c375fad76d9b024a60ceda064a549" translate="yes" xml:space="preserve">
          <source>New in Chef Backend 2.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be629f46ca83812d2972051abebf0cd98b330f0" translate="yes" xml:space="preserve">
          <source>New in Chef Client 12.11.</source>
          <target state="translated">Новое в поваре Клиент 12.11.</target>
        </trans-unit>
        <trans-unit id="ad0a49267a574954d6c2c793c6d0455fb6df147e" translate="yes" xml:space="preserve">
          <source>New in Chef Client 12.14</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31baeb158ca6f6425f06974bec8bc171adecdb3" translate="yes" xml:space="preserve">
          <source>New in Chef Client 12.18</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913d37c67468a62745a274049b754ebc31e0e38a" translate="yes" xml:space="preserve">
          <source>New in Chef Client 12.21</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3eb4ea304f1fa97cf43f2ba158543a612efc360" translate="yes" xml:space="preserve">
          <source>New in Chef Client 12.6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8f4a788bfa2732151b0de97d9acbc8dc1b06da" translate="yes" xml:space="preserve">
          <source>New in Chef Client 13.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0184bf4677ca0d21c79b9b54520eae6ab27391ad" translate="yes" xml:space="preserve">
          <source>New in Chef Client 13.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603b6cf539e3e04a75d2bf6b1e2fc871bb629ec4" translate="yes" xml:space="preserve">
          <source>New in Chef Client 13.4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59064a1225d4d9df943e8682b19c881b34d05bdd" translate="yes" xml:space="preserve">
          <source>New in Chef Client 13.6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e02191a27915d286675402c88bd46e0b613c0a8" translate="yes" xml:space="preserve">
          <source>New in Chef Client 13.7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa416ee53e6da5798b63db5d8e94045c39d9302" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7db29263bc96b4cda88e1a304628b3aefec9290" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992e855901ceea5b570546bf77ee558a452010b9" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.15</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d2c226716481578e9db39d0b8590f6b1e92504" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce99f5011f7392080f3c0d4f4388bfd1ac02e01" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d652b32303981c8f1027668dcada60e14dc9ff03" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55161bffca532b8cbeb4f6d8835f8c92ecd36514" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beab58f3cf5c1634ef8c3982dd1a3013de2faf82" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281c191f416954d87fe822017169037f70cd8f8f" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22644374dd532de2675a287f04aec07099f8b5aa" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a884b8fcc33cb143209a9e20b5b920a6e8488980" translate="yes" xml:space="preserve">
          <source>New in Chef Desktop 1.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edad45a4fb2d871bc9e16ff13bfa9f328c014e1c" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98da23e3ea9136afe2aacb0a5b1b96e4236f9743" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2dcb47d17c5d151be4e2612ec89ac3aad5356ab" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ed130a1a8b72676150caee585cb18a9f893864" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dd1ee5bb2941997d09eb935b7a4d41e8b8be43" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c09f73eb14e5315fd83ddd056b932f058aec59f" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3938687b84029051e6b7c4a8c9f13f6a1909e91c" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956577690a726c0af4b3b35ed4c7ff6d6baa8450" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2ecfb1513aee2cca3cc396dc8407cbfb24ce20" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 16.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b69bc08a1f13abd7fb442b207b1c02a0c0ffdc2" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 16.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81a3a951875539614cb6c190e3e148be4a8929f" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 16.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f374216a053eaff5759a5fa6d622731e21b685" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 16.7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58bf1126ffaeec81b452f0ffacecf84d74fff48" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 16.8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72cd6091c0978b64a8f45fde4153a530b4a2bdb" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Server 12.12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf7653b656dac77cc9b44b72d9d817105830c34" translate="yes" xml:space="preserve">
          <source>New in Chef Server 12.12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b3022c1f5a961a7fc929fdc0a2a6b1886d8651" translate="yes" xml:space="preserve">
          <source>New in Chef Server 12.16.9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73fbb6472d18e709e4ae559e9c8cf6c6d20ff9e2" translate="yes" xml:space="preserve">
          <source>New in Chef Server 12.17</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0712a47529f9b657c4bc39a16fc7cb7bb9b559" translate="yes" xml:space="preserve">
          <source>New in Chef Server 12.17.15.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997ec258773196527b11144c20c53300b5da6e9e" translate="yes" xml:space="preserve">
          <source>New in Chef Server 12.9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f295544147a99b3b735c28bc1d1fa3b944edbb69" translate="yes" xml:space="preserve">
          <source>New in Chef server 12.7</source>
          <target state="translated">Новинка в сервере Chef 12.7</target>
        </trans-unit>
        <trans-unit id="e5e33149566f195e56bc500c0788d7bc1879dfdb" translate="yes" xml:space="preserve">
          <source>New in Chef server 12.7.</source>
          <target state="translated">Новое в сервере Chef 12.7.</target>
        </trans-unit>
        <trans-unit id="bb225f7cd2586b9a30ec832f994d71f4f40b7eb9" translate="yes" xml:space="preserve">
          <source>New in Chef server 12.9.</source>
          <target state="translated">Новое в сервере &quot;Шеф-повар&quot; 12.9.</target>
        </trans-unit>
        <trans-unit id="e91e87b2a3e44fed65f515bc057cffdce78c69d5" translate="yes" xml:space="preserve">
          <source>New in: 1.6.140</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68247db9f45adb275ed985d2b71a80a016c20587" translate="yes" xml:space="preserve">
          <source>New job status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58564bc38ec98a6fd5c5fdac30ef0b33a96ecb8e" translate="yes" xml:space="preserve">
          <source>New releases of profiles are shipped with the product when available. Chef ships only the latest versions of profiles. When Chef publishes a newer profile version that a user has installed to their namespace, a small notification appears, prompting the user to download the newest version. Installing the newest version adds the updated profile to the user namespace, but it does not overwrite an existing profile. You can keep multiple versions of a profile and it is up to you to curate your installed profiles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f170caead65df254d786032a409a6f6d204bca6" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c753ae3658034f4e1dea0c9d858cd6b1e5755adf" translate="yes" xml:space="preserve">
          <source>Next generation firewall indicates if recommendations for virtual machines are enabled (&lt;code&gt;On&lt;/code&gt;|&lt;code&gt;Off&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b292e26b3ed2fb9ec8ad34ddbaad9c082f7b9a9" translate="yes" xml:space="preserve">
          <source>Next, &lt;a href=&quot;https://github.com/munki/munki/releases&quot;&gt;download Munki&lt;/a&gt; to your macOS and install it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33f5c37b1210d5bbbceaca41d133fabf3bc8bc6" translate="yes" xml:space="preserve">
          <source>Next, Chef Infra Client configures the system based on the order of the resources in the resource collection. Each resource then examines the node and performs the necessary steps to complete the action. This is also referred to as the &amp;ldquo;execution phase&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26b21e1b95cc7bd089b5a7b582723233c31e746" translate="yes" xml:space="preserve">
          <source>Next, add the token to &lt;a href=&quot;../config/index#data_collector&quot;&gt;config.toml&lt;/a&gt;, specifying the appropriate &lt;a href=&quot;../../automate/data_collection/index&quot;&gt;url&lt;/a&gt; and &lt;a href=&quot;../../automate/api_tokens/index#creating-api-tokens&quot;&gt;token&lt;/a&gt; for the automate server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18b570922c088321c27b6a42339fa5fa9ce765d" translate="yes" xml:space="preserve">
          <source>Next, choose a privacy setting to set as the default for new packages. You can override this setting when uploading individual packages from the CLI or by connecting a plan file that declares a package as private. The difference between public and private packages is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18747f3641870fcccf1d833fbaa9ae65e1cb4c72" translate="yes" xml:space="preserve">
          <source>Next, configure Chef Automate to use S3 for both the backups and snapshots. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bbf34e0ba71861f11aa53c9712a92ee0347688" translate="yes" xml:space="preserve">
          <source>Next, configure the Chef Infra Server for data collection forwarding by adding the following setting to &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccbdde2a3e692db1e3da4dcf245ac26a1ecb1cf" translate="yes" xml:space="preserve">
          <source>Next, create the SSL listener:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98670a65496003baa051f25d994a5d4f8dc04e02" translate="yes" xml:space="preserve">
          <source>Next, create the basic directory structure in each container that the app clients expect to see. In the Gorilla container, create folders to match this structure. We&amp;rsquo;re going to build the files that go in the folders just below. Build the top level folders for both clients, the child folders are indicated to give you a reference of how the whole thing looks over time as applications are added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5466299b13e08b11242d2d8a126330930c396a" translate="yes" xml:space="preserve">
          <source>Next, for the required plugin, create an object of that plugin, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fecd39d0eedba95afaa8a4579a9638f4f3f8238" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s get our minimum Chef Habitat software to start us off:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58dc73bb605ced3fbba721c655783c6f3df339c" translate="yes" xml:space="preserve">
          <source>Next, run the following &lt;code&gt;autopkg&lt;/code&gt; commands to get all the Munki tools pulled in for the nodes (laptops) to use.`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830a661138c86413bc7f19278b0d1963f2f651e8" translate="yes" xml:space="preserve">
          <source>Next, run the following Autopkg commands to get all the Munki tools pulled in for the nodes (laptops) to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5742dc49e41b25854ffaed409a2a3e4ec950294a" translate="yes" xml:space="preserve">
          <source>Next, run the following command to &amp;lsquo;converge&amp;rsquo; the cookbooks with the base OS testing image:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad0d3d944be819129986b94d2a8663f78ab3eb7" translate="yes" xml:space="preserve">
          <source>Next, the chef-client configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and performs the necessary steps to complete the action. This is also referred to as the &amp;ldquo;execution phase&amp;rdquo;.</source>
          <target state="translated">Затем chef-клиент настраивает систему на основе порядка ресурсов в коллекции ресурсов. Каждый ресурс сопоставляется с поставщиком, который затем проверяет узел и выполняет необходимые шаги для завершения действия. Это также называется &amp;laquo;фазой исполнения&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="9f552c6f4741f33e2ebff3c24b6b5ec5895d80f5" translate="yes" xml:space="preserve">
          <source>Next, unpack the tar file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b3aa978eb6efb417afef962539a0502a7f84f1" translate="yes" xml:space="preserve">
          <source>Next, upload the remaining data to the new server. Note that &lt;code&gt;knife upload&lt;/code&gt; command does not support embedded keys in credentials files, so you must place the key in a key file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65819603670513c263c08986b7ad5d6bcfd200e" translate="yes" xml:space="preserve">
          <source>Next, you will specify the permissions themselves&amp;ndash;which in IAM v2 are the &lt;code&gt;statements&lt;/code&gt;&amp;ndash; declared as an array. The statement allows us to specify the &lt;code&gt;actions&lt;/code&gt; a user is permitted to take upon resources that have been assigned to a &lt;code&gt;project&lt;/code&gt;. The &lt;code&gt;projects&lt;/code&gt; field on a statement is an array that may contain more than one existing project, a wildcard &lt;code&gt;*&lt;/code&gt; to indicate permission to resources in &lt;em&gt;any project&lt;/em&gt;, or &lt;code&gt;(unassigned)&lt;/code&gt; to indicate permission to resources that have not been assigned to a project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82bf344d8bd911944c02ba499af4e2d245ec55af" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;../desktop_azure/index&quot;&gt;Zero-touch Deployment with Azure&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fe0690fb4fea2dbdc58f3db2419e77a1ec0a1a" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;../desktop_micromdm/index&quot;&gt;Zero Touch Deployment with MicroMDM for macOS&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311ca84aeed8b1f84f22e3006c4f2c44509b31da" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;../desktop_pattern/index&quot;&gt;Chef Desktop Cookbook Development Environment&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b93abc5b444383bc50a856446eb2af7a11616c5" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;../desktop_setup_chef/index&quot;&gt;Install Chef Components&lt;/a&gt; Last: &lt;a href=&quot;../index&quot;&gt;About Chef Desktop&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eda8272e2972c0555136474245c849cba20d694" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;../desktop_setup_cookbook/index&quot;&gt;Chef Desktop Cookbook Development Environment&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7b5f086189d848e4fe6be2124a7cbb1bba7cae" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;desktop_requirements/index&quot;&gt;Chef Desktop Requirements&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="translated">Nginx</target>
        </trans-unit>
        <trans-unit id="92976db2f0210bf8871c6154dd07a170cc84cc4a" translate="yes" xml:space="preserve">
          <source>Nginx is an important entry point for data on the Chef Infra Server, which means that debugging efforts frequently start with analyzing the &lt;strong&gt;nginx&lt;/strong&gt; service&amp;rsquo;s &lt;code&gt;access.log&lt;/code&gt; file. This log contains every HTTP request made to the front-end machine and can be very useful when investigating request rates and usage patterns. The following is an example log entry:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c16701a0285972cc005d424398d437d65af30a" translate="yes" xml:space="preserve">
          <source>Nginx is an important entry point for data on the Chef server, which means that debugging efforts frequently start with analyzing the &lt;strong&gt;nginx&lt;/strong&gt; service&amp;rsquo;s &lt;code&gt;access.log&lt;/code&gt; file. This log contains every HTTP request made to the front-end machine and can be very useful when investigating request rates and usage patterns. The following is an example log entry:</source>
          <target state="translated">Nginx является важной точкой входа для данных на сервере Chef, что означает, что отладка часто начинается с анализа файла &lt;code&gt;access.log&lt;/code&gt; службы &lt;strong&gt;nginx&lt;/strong&gt; . Этот журнал содержит каждый HTTP-запрос к внешнему компьютеру и может быть очень полезен при исследовании частоты запросов и моделей использования. Ниже приведен пример записи журнала:</target>
        </trans-unit>
        <trans-unit id="aba6be8d171626e392dda6ff2aa440a063e93f5f" translate="yes" xml:space="preserve">
          <source>Nginx is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the Chef Infra Server. All requests to the Chef Infra Server API are routed through Nginx.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fd472d8fd6e8b00b589006d0c9ce0a83755525" translate="yes" xml:space="preserve">
          <source>Nginx is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the Chef server. All requests to the Chef server API are routed through Nginx.</source>
          <target state="translated">Nginx-это HTTP и обратный прокси-сервер с открытым исходным кодом,который используется в качестве внешнего балансировщика нагрузки для сервера Chef.Все запросы к API Chef-сервера маршрутизируются через Nginx.</target>
        </trans-unit>
        <trans-unit id="775557c9b062749b74ff519f5debf07990d62b0e" translate="yes" xml:space="preserve">
          <source>Nginx resource extracts and exposes data reported by the command &amp;lsquo;nginx -V&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f1a00097a1d020f508370e1f76c201659a6f42" translate="yes" xml:space="preserve">
          <source>Nil Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="35a9c0ad517bb6f9caa5d4aeb70fa32c3c0cd78a" translate="yes" xml:space="preserve">
          <source>No &lt;a href=&quot;#input-options-reference&quot;&gt;input options&lt;/a&gt; may be set - only the name and value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4cf24a57b34c1dac8240af277840254a3c3316" translate="yes" xml:space="preserve">
          <source>No Content. Do not reconnect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9587d6bf1fdf8c0d4524f7be1ad2b1d03e066d6f" translate="yes" xml:space="preserve">
          <source>No Loss of Quorum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6579aaa87f11bff3f0119c3b0380ceab73389da" translate="yes" xml:space="preserve">
          <source>No Proxy</source>
          <target state="translated">Без прокси</target>
        </trans-unit>
        <trans-unit id="7545a69f97b9fa5bc859fbfe59dba8007fcf6da0" translate="yes" xml:space="preserve">
          <source>No clients, because the &lt;code&gt;-S&lt;/code&gt; option was not specified while creating the vault.</source>
          <target state="translated">Клиентов нет, поскольку при создании хранилища не была указана опция &lt;code&gt;-S&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9688f035c639d51273dd222127736f405502f22" translate="yes" xml:space="preserve">
          <source>No direct host access is necessary, and multiple Supervisors can be controlled from one central location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2498d96936e84587b168400d9d22a65bf6338a6d" translate="yes" xml:space="preserve">
          <source>No newline:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14b1ac5bb35e26b9fdda11be5d2c4e48c29e55d" translate="yes" xml:space="preserve">
          <source>No parameters required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401b7c97e1aa639245463d87c721e6c2d8a1a813" translate="yes" xml:space="preserve">
          <source>No response block is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6cb568f806ffae868a77b519003a5df95ec0c3" translate="yes" xml:space="preserve">
          <source>No such file or directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fda432dfbd42c1b886fb724d1ffc714723cc98c" translate="yes" xml:space="preserve">
          <source>No, Chef InSpec can be used on any machine. It doesn&amp;rsquo;t matter if that machine was configured by Chef or configured lovingly by the hands of your local System Administrator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260f7a8cd4f6938b3cc185a619847cb83d670219" translate="yes" xml:space="preserve">
          <source>Node</source>
          <target state="translated">Node</target>
        </trans-unit>
        <trans-unit id="1fef06c17ad3b8fe4be35f98544e80254d52a6f1" translate="yes" xml:space="preserve">
          <source>Node Attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad97ef8acd87094a75ee5814f60f41fc3889757" translate="yes" xml:space="preserve">
          <source>Node Attributes</source>
          <target state="translated">Атрибуты узла</target>
        </trans-unit>
        <trans-unit id="6a1cae656d4186ea950c4fc2c10951d229524a17" translate="yes" xml:space="preserve">
          <source>Node Credentials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b312196561f09889613d46be739ab10e46bab4e0" translate="yes" xml:space="preserve">
          <source>Node Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e6ca57c9a4bd28d7a2121520eb43071b771388" translate="yes" xml:space="preserve">
          <source>Node Details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79085091fd26f7d55fd2be77e2dcc70877e66d3e" translate="yes" xml:space="preserve">
          <source>Node Failures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c653efba4903e78a0533091eb01d83912a780be4" translate="yes" xml:space="preserve">
          <source>Node Filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928f8e48f3322b147bb88c044e40f11771fd0eb9" translate="yes" xml:space="preserve">
          <source>Node Integrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628364bb75994dfd1dd98b08ce1ff71fb74ab74d" translate="yes" xml:space="preserve">
          <source>Node List Table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ad72dc0d6c6290835c1aaa4673c7cf5f90d6bd" translate="yes" xml:space="preserve">
          <source>Node Location</source>
          <target state="translated">Местоположение узла</target>
        </trans-unit>
        <trans-unit id="d82c1f3ff40b052c62a8b1921d18621b3675832d" translate="yes" xml:space="preserve">
          <source>Node Managers (also called Node Integrations)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81448db2ef1f2434d5f23d093d016b13665c5012" translate="yes" xml:space="preserve">
          <source>Node Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a30aeda152a059e4e4d39a2f85747c9c294bffd" translate="yes" xml:space="preserve">
          <source>Node Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17a6c458741a86bf04ade61ad9a14f7ac61215b" translate="yes" xml:space="preserve">
          <source>Node Objects</source>
          <target state="translated">Узел Объекты</target>
        </trans-unit>
        <trans-unit id="acc260ea60ec063fc6e36922b1922725decd3f2e" translate="yes" xml:space="preserve">
          <source>Node Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14add6143389453330f40fa1ed07300b0b8b40b3" translate="yes" xml:space="preserve">
          <source>Node Run and Audit Data Collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21923cc0fe5b2742e78fecd434889e398a416a1" translate="yes" xml:space="preserve">
          <source>Node State</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03c3e9e7a2a1426b7dc6d0ad5e4c3ef9db9a3dc" translate="yes" xml:space="preserve">
          <source>Node Status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8492ca66cc53b6221bcb61c3d2be513e23125538" translate="yes" xml:space="preserve">
          <source>Node Status Over Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d6848a140f44110c77c4ebaec0484d26d02ccc" translate="yes" xml:space="preserve">
          <source>Node Type</source>
          <target state="translated">Тип узла</target>
        </trans-unit>
        <trans-unit id="279b71d33490152fe195c1958224bda7b9cc4031" translate="yes" xml:space="preserve">
          <source>Node Types</source>
          <target state="translated">Типы узлов</target>
        </trans-unit>
        <trans-unit id="f9b49d00fda30adb8400f6bb5072c235243ab209" translate="yes" xml:space="preserve">
          <source>Node attributes specific to the workspace, project changes, and project configuration are available for use in &lt;code&gt;build-cookbook&lt;/code&gt; recipes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a88a1f0596e274578645daf1321f1d298bdcb44" translate="yes" xml:space="preserve">
          <source>Node data in Chef Automate is stored in &lt;a href=&quot;https://www.elastic.co/products/elasticsearch&quot;&gt;Elasticsearch&lt;/a&gt; and viewable in the Chef Automate UI as well as &lt;a href=&quot;https://www.elastic.co/products/kibana&quot;&gt;Kibana&lt;/a&gt;. Access to Chef Automate&amp;rsquo;s Elasticsearch and Kibana is protected by the same authentication used by the Chef Automate user interface. Elasticsearch authentication is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689592ee50da7e83f0bf82f37df2d9ab7b2976f1" translate="yes" xml:space="preserve">
          <source>Node failed to run the command (an exit code of non-zero was returned).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421106b0f6f886164e420daae5728d544226376d" translate="yes" xml:space="preserve">
          <source>Node has committed to run the command but has not yet run it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ae6fc10eca5ee0630f3a46b3d8fddfae66b72c" translate="yes" xml:space="preserve">
          <source>Node has neither committed nor refused to run the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c77d3fdbfaa855668f953236068b584308d77f5" translate="yes" xml:space="preserve">
          <source>Node history data supports up to three months of Chef Infra Client run information. Scroll through the node history using the pagination buttons at the bottom of the side panel. Use the &lt;strong&gt;X&lt;/strong&gt; button at the top of the panel to close the side panel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e290ed0af7f23119d17be28cf4621d0e43521581" translate="yes" xml:space="preserve">
          <source>Node is presently running the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547c5bc8c2b28d895f20a053fb1dc8458de69a72" translate="yes" xml:space="preserve">
          <source>Node pools belonging to this cluster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae54a9b218536e54778120cf61ec71065469331" translate="yes" xml:space="preserve">
          <source>Node ran the command but stopped before completion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32fc6c2887db3382e0fb3c061266b08d57e4c3a" translate="yes" xml:space="preserve">
          <source>Node state is updated to &amp;lsquo;running&amp;rsquo; on report ingestion if the end time recorded by the inspec report is less than ten minutes from the ingestion time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575ba14fe307fa5b6a836bd37d189f7e7d3693f6" translate="yes" xml:space="preserve">
          <source>Node successfully ran the command (an exit code of 0 was returned).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c00aa26643c2e41f049ca9aa5eb7d1ef56762e9f" translate="yes" xml:space="preserve">
          <source>Node timed out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9856658880db19f864d295afa8fdbd5eb89e56f" translate="yes" xml:space="preserve">
          <source>Node type to use for nodes group that are created from this template. Only one of nodeTypeFlexibility and nodeType can be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a375e9cba9b7f81f1b5fe1dee987d4cb077bc91b" translate="yes" xml:space="preserve">
          <source>Node was busy when asked to be part of the job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f1a1fc38b29c8882a2579b6b849413c5d03597" translate="yes" xml:space="preserve">
          <source>Node was ready but quorum failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebdb35b65b4296a45d74889fe30ec3fa37ad255" translate="yes" xml:space="preserve">
          <source>Node went down after it started running the job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6bbbf67630eb613ff7a2951f421e54da06c115" translate="yes" xml:space="preserve">
          <source>Node went down before it started running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e325452c6548fc2449564842660d75ef3b1eb73" translate="yes" xml:space="preserve">
          <source>Nodes</source>
          <target state="translated">Nodes</target>
        </trans-unit>
        <trans-unit id="d15701f176665e7be2bc301e1f4ff933a52ca02a" translate="yes" xml:space="preserve">
          <source>Nodes (collected by Ohai at the start of each Chef Infra Client run)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294472e1aa62d2671351b5a11222ad839b268d44" translate="yes" xml:space="preserve">
          <source>Nodes (collected by Ohai at the start of each chef-client run)</source>
          <target state="translated">Узлы (собираются Охаем в начале каждого забега шеф-клиента)</target>
        </trans-unit>
        <trans-unit id="e5dfade9caf583c330750f669808367e2fe5dbe6" translate="yes" xml:space="preserve">
          <source>Nodes API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e361daf789f6025e91033d8f081a1d83bd3cfe4" translate="yes" xml:space="preserve">
          <source>Nodes can be managed from the Chef management console web user interface.</source>
          <target state="translated">Узлами можно управлять из веб-интерфейса консоли управления Chef.</target>
        </trans-unit>
        <trans-unit id="81c9cae6b756d648f85415530206763dac0273e4" translate="yes" xml:space="preserve">
          <source>Nodes can have one environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbb6285501e178b1926c18dc40c41b702af3c85" translate="yes" xml:space="preserve">
          <source>Nodes can send their run data to Chef Automate through the Chef Infra Server automatically. To enable this functionality, you must perform the following steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533e1a7967fb53c45ac4f72d057637d5152ed6aa" translate="yes" xml:space="preserve">
          <source>Nodes can send their run data to Chef Automate. There are two steps to getting data collection running in Chef Automate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f060846e4946d0ab7007a8f52758757725cc7e4d" translate="yes" xml:space="preserve">
          <source>Nodes in the backend HA cluster may not be visible to each other when they are located in network partitions. This may prevent a cluster status check from discovering that a leader exists. If nodes exist on network partitions, to prevent this scenario, first run &lt;code&gt;chef-backend-ctl cluster-status&lt;/code&gt;, and then verify the expected number of nodes in the backend HA cluster as healthy and &lt;code&gt;waiting_for_leader&lt;/code&gt; before running this command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ba94fb7c4605a2777ecfbc62893592285f48e6" translate="yes" xml:space="preserve">
          <source>Nodes, Workstations</source>
          <target state="translated">Узлы,рабочие станции</target>
        </trans-unit>
        <trans-unit id="7c409e9d88929cd76349a417933a173cdbd5b2d4" translate="yes" xml:space="preserve">
          <source>Non-interactive Build</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="d21dc95de28ee4191ff203e4303c8f0172875c12" translate="yes" xml:space="preserve">
          <source>None Strategy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9707be07da6862114abd49d2570046d4810ca5" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">None.</target>
        </trans-unit>
        <trans-unit id="25717b76d1762287d98c1e90c520031cd9358343" translate="yes" xml:space="preserve">
          <source>Normal and override attributes are cleared at the start of the chef-client run, and are then rebuilt as part of the run based on the code in the cookbooks and recipes at that time.</source>
          <target state="translated">Нормальные атрибуты и атрибуты переопределения очищаются в начале прогона Chef-клиента,а затем перестраиваются в рамках прогона на основе кода,содержащегося в кулинарных книгах и рецептах на тот момент.</target>
        </trans-unit>
        <trans-unit id="e213904cc3085c591de98cf477f8419ee712ed4b" translate="yes" xml:space="preserve">
          <source>Normally, the value of &lt;code&gt;Chef::Config[:node_name]&lt;/code&gt; is used to find the per-node encrypted secret in the keys data bag item, and the value of Chef::Config[:client_key] is used to locate the private key to decrypt this secret.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67663f5cfff0d2b6b5634790eaf67f0ca7c6a284" translate="yes" xml:space="preserve">
          <source>Not Acceptable. An invalid format was requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedf487badbfadd9c91b14b6765f11ec78d8bf65" translate="yes" xml:space="preserve">
          <source>Not Found. The required recipe function is not enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b813d5e3a862153979b4bc3ed606ff77ecf2fe" translate="yes" xml:space="preserve">
          <source>Not allowed. A set of cookbooks and/or cookbook versions could not be found that met all of the requirements of the run-list. A cookbook in the run-list may not exist. A dependency may be present for a cookbook that does not exist. A constraint on a cookbook made by a run-list, environment, or cookbook version, may not match an available cookbook version.</source>
          <target state="translated">Не разрешено.Набор кулинарных книг и/или версий кулинарных книг не могут быть найдены,которые удовлетворяют всем требованиям бегущего списка.Кулинарная книга в списке не может существовать.В случае отсутствия куки-куки может присутствовать зависимость.Ограничение,налагаемое на куки-книги,сделанное рун-листом,средой или версией куки-книги,может не совпадать с доступной версией куки-ниги.</target>
        </trans-unit>
        <trans-unit id="f87c054479326a9af75db1c74d3c335e53e3c7fe" translate="yes" xml:space="preserve">
          <source>Not every contribution comes in the form of code. Submitting, confirming, and triaging issues is an important task for any project. At Chef we use GitHub to track all project issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ab9e04b36bd85bc4907d342f929f66142df20f" translate="yes" xml:space="preserve">
          <source>Not found. The invited user does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02cade6bb74c3ece167c2ee95d1ef17a7cf5d5f" translate="yes" xml:space="preserve">
          <source>Not found. The requested object does not exist or the function is not implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae49e9a61373946f78d134ed1f677b64096c4ee" translate="yes" xml:space="preserve">
          <source>Not found. The requested object does not exist.</source>
          <target state="translated">Не найдено.Запрашиваемый объект не существует.</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="3ee89a74f12f6e440c2fc9b68307d3187e4e61ef" translate="yes" xml:space="preserve">
          <source>Note Linux-based packages can run on Linux distributions running kernel 2.6.32 or later. Windows-based packages can run on Windows Server 2012 or later and Windows 8 64-bit or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254d1269818e00a04fe2793625ef70040d818c9d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;result: 32 No such object&lt;/code&gt; is the successful response here, a failed sign in bind using &lt;code&gt;ldapsearch&lt;/code&gt; returns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5a7ae628377173fe212a3c221bbb7a50329a95" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;subscribes&lt;/code&gt; does not apply the specified action to the resource that it listens to - for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8a837a27637da591de5dd4293348bdb871577e" translate="yes" xml:space="preserve">
          <source>Note that Powershell plans use hashtables where Bash plans use associative arrays. A &lt;code&gt;plan.ps1&lt;/code&gt; would declare its exports as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a20fa875b3e18f2e7a2dcdd5831491c9721a71" translate="yes" xml:space="preserve">
          <source>Note that Rust modules are identified first by the crate (or library) they come from, followed by a &lt;code&gt;::&lt;/code&gt;-delimited path of module names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2efc545bd2f5748499b6cd477eade4dabcf1d4c1" translate="yes" xml:space="preserve">
          <source>Note that Windows filesystems (drives) are referred to without any slashes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1835f4029b7b6767d0b20150fe8dda4d53e6b6c4" translate="yes" xml:space="preserve">
          <source>Note that all of the client-related values need to match the configuration in the Chef Infra Server management console. See &lt;a href=&quot;../server_configure_saml/index&quot;&gt;Configuring for SAML Authentication&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b5c9bb36a41ba9425a6fe0f78aba7ab36f44aa" translate="yes" xml:space="preserve">
          <source>Note that authentication protocol 1.3 is only supported on Chef Server versions 12.4.0 and above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0756321fe5a9bd74a8f82607b52bd3c42877fc5d" translate="yes" xml:space="preserve">
          <source>Note that in this case, the gem needs to be installed at compile time because the require statement is at the top-level of the recipe. If you move the require of &lt;code&gt;chef-vault&lt;/code&gt; and the call to &lt;code&gt;::load&lt;/code&gt; to library or provider code, you can install the gem in the converge phase instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883bbb84146e19fe7cc79e17262e2021a5dd0df0" translate="yes" xml:space="preserve">
          <source>Note that invalid entries for &lt;code&gt;user_query_filter&lt;/code&gt; will lead to queries that return no entries, too. Setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a2fdc58ece10076a12fc28637af0d4ea3c9959" translate="yes" xml:space="preserve">
          <source>Note that it returns an array of arrays. You may flatten them for testing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffa7d1c57e650dd1bd4fcc8549ad16dcb2607ff" translate="yes" xml:space="preserve">
          <source>Note that only the path or the user (and not both) should be supplied as arguments to the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb52623f7d6f5f0ef45adf848bce5d5be3d04fb" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;['package_url']&lt;/code&gt; setting points to the location of the Supermarket package on your artifact store. When finished, the &lt;code&gt;/recipes/default.rb&lt;/code&gt; file should have code similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc47da5ba259f066f1501a4ef339e805a23c3d84" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects&lt;/code&gt; property in statements designates permission for the resources within the statement (here, that is &lt;code&gt;iam:users&lt;/code&gt; and &lt;code&gt;iam:teams&lt;/code&gt;), &lt;em&gt;not&lt;/em&gt; for the policy itself, and &lt;em&gt;cannot&lt;/em&gt; be left empty. For more about projects, see &lt;a href=&quot;index#projects&quot;&gt;Projects in the IAM Guide&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062249f13c4e3f28a267db96e32450e32015957b" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;yum-config-manager&lt;/code&gt; command requires the &lt;code&gt;yum-utils&lt;/code&gt; package, which is not installed on CentOS by default. You can install the package by running &lt;code&gt;sudo yum install yum-utils&lt;/code&gt;, or you can use the &lt;code&gt;mv&lt;/code&gt; command to add the repository to the &lt;code&gt;/etc/yum.repos.d/&lt;/code&gt; directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20540ba3d4e1cbcdf44c8bc0bd6d08db6e5328b8" translate="yes" xml:space="preserve">
          <source>Note that the default resource allocation for the application is very small: 0.5 units of CPU, no disk, one instance, and 256MB of memory. To change these resource allocations, pass different values to the Mesos exporter as command line options (defaults are documented with &lt;code&gt;--help&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4022465ca6ae8c759fbe9cf3edbdcd73e53aee25" translate="yes" xml:space="preserve">
          <source>Note that the filter won&amp;rsquo;t return the EC2 instances with multiple tags. In this case use regex: &lt;code&gt;/{&quot;Environment&quot;=&amp;gt;&quot;Dev&quot;}/&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29167e10ea88d49828db12fe0b4f421b99ed4c49" translate="yes" xml:space="preserve">
          <source>Note that the log contains the &lt;em&gt;IP address&lt;/em&gt; even when the LDAP server was configured via hostname. Double-checking that can be helpful to exclude issues in domain-name resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791546ad4e654a1da430b30787391bd187aecf01" translate="yes" xml:space="preserve">
          <source>Note that the number of service-level failures that a service can sustain depends upon whether or not the failure is happening in isolation. In general an operator should assume that the cluster can sustain a failure on a single node, but a second failure is likely to cause a loss of availability if the first failure is not resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f13d9445dc591adbb85d9bfd8c7ca8d68edefec" translate="yes" xml:space="preserve">
          <source>Note that the rule specification must exactly match what&amp;rsquo;s in the output of &lt;code&gt;ip6tables -S INPUT&lt;/code&gt;, which will depend on how you&amp;rsquo;ve built your rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935a579a64912d75adc6a12e638b3bc24d590ec8" translate="yes" xml:space="preserve">
          <source>Note that the rule specification must exactly match what&amp;rsquo;s in the output of &lt;code&gt;iptables -S INPUT&lt;/code&gt;, which will depend on how you&amp;rsquo;ve built your rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4168a6604c98365aea58981d64e4c6610f7ba9" translate="yes" xml:space="preserve">
          <source>Note that they are both listening on the same port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce6dd60f133429fac3b961beec73f892212ea89" translate="yes" xml:space="preserve">
          <source>Note that they have both restarted (as evidenced by the new PID values), and that both are now running on port 2112, as we instructed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c814d48ed78f8b99b3799d6fd48eed9c061aaf47" translate="yes" xml:space="preserve">
          <source>Note that this approach does not rely on execution order, nor does it rely on multiple named precedence levels. Each setting operation is preserved and this allows the user to &lt;a href=&quot;#debugging-inputs-with-the-event-log&quot;&gt;debug&lt;/a&gt; the history of the input values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967d648eaa2f4fd689959fea5283416de31092d8" translate="yes" xml:space="preserve">
          <source>Note that this namespace collision between custom resources and subresources occurs with properties that are not also being immediately used, and so this fails as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c315d67833c02c56fbcd20db7a4c61ca80fe2b0" translate="yes" xml:space="preserve">
          <source>Note that this resource lists all AWS regions that are currently available to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f837b5290611b71d320957e2343753c1d7c34a92" translate="yes" xml:space="preserve">
          <source>Note that while the above set of rules bears a remarkable resemblance to regular expressions, we do not support full regular expression syntax. Only what&amp;rsquo;s shown here is supported. Here is an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642b6f0e7cd475433fbc975dbda28925fa81b131" translate="yes" xml:space="preserve">
          <source>Note that you will need to make use of a tool such as &lt;a href=&quot;https://packages.ubuntu.com/xenial/admin/iptables-persistent&quot;&gt;iptables-persistent&lt;/a&gt; to restore your iptables rules upon reboot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4799513f6d0118bb21280d7a1b702cdd32054c9" translate="yes" xml:space="preserve">
          <source>Note that you&amp;rsquo;ll need to replace &lt;code&gt;chef-repo&lt;/code&gt; with the name of the repository you created previously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289fb65f4c83df4df17773974e75373663c560a8" translate="yes" xml:space="preserve">
          <source>Note that your &lt;code&gt;hab&lt;/code&gt; configuration file only keeps a single &amp;ldquo;secret&amp;rdquo; entry, and exporting a single secret into your environment does effectively the same thing. An assumption of this arrangement is that all Supervisors you wish to interact with have the same shared secret; if you wish to control a set of Supervisors that do not all use the same shared secret, you will need to manage the mapping of secret-to-supervisor yourself, which might look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12366ca5092c823663dddc4439a91221640c5733" translate="yes" xml:space="preserve">
          <source>Note the following constraints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c8dde57ff53453e3b1ce0d4ea9401d14e16e2b" translate="yes" xml:space="preserve">
          <source>Note the use of the regular expression here. This is because the NIC id is a long string that contains the subscription id, resource group, machine id as well as other things. By using the regular expression the NIC can be checked without breaking this string up. It also means that other tests can be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f896d1b1920ddcea5aaee5ec02c2e0b494794b9b" translate="yes" xml:space="preserve">
          <source>Note: An Azure Admin must grant your application these permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087804a9ee713995964b72c533732869717724b5" translate="yes" xml:space="preserve">
          <source>Note: As a consequence of increasing the project limit, you may see slower loading times in the UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16eb9626cf415fbb8bd8a242789481467ea9802" translate="yes" xml:space="preserve">
          <source>Note: Because all arrays in the pkg_* settings are shell arrays, they are whitespace delimited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e1f3dd544151ee19b64f3e3c1c40de122e5438" translate="yes" xml:space="preserve">
          <source>Note: Chef Automate data retention processes changed in 20191129172405. The &lt;a href=&quot;../install/index#upgrades&quot;&gt;upgrade documentation&lt;/a&gt; covers configuring your system to install new Chef Automate versions. For guidance, contact your customer support agent. You can also use the &lt;a href=&quot;https://github.com/chef/automate/blob/20191104205453/components/automate-chef-io/content/docs/configuration.md#data-retention&quot;&gt;previous data retention documentation&lt;/a&gt; for help with configuring data retention on older Chef Automate installations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea3022b98c7e2035abe967c59a431df46f925a2" translate="yes" xml:space="preserve">
          <source>Note: Chef Habitat Builder can only build Linux based plans (&lt;code&gt;plan.sh&lt;/code&gt;) at this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e5e7c74fb5583791e0bb02ea603409d9eb1ef6" translate="yes" xml:space="preserve">
          <source>Note: For more details related to Windows containers see &lt;a href=&quot;../running_habitat_windows_containers/index&quot;&gt;Running Chef Habitat Windows Containers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c50997c4199bb1b3245e849911f84858bfa2f27" translate="yes" xml:space="preserve">
          <source>Note: If your computed value does not match the value calculated by the &lt;code&gt;hab-plan-build&lt;/code&gt; script, an error with the expected value will be returned when you execute your plan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7137a4818ca1bbfb80d8b6839830f94f0b525df3" translate="yes" xml:space="preserve">
          <source>Note: In order to build large amounts of software in the fastest way possible, we recommend you use a powerful machine, such as a &lt;code&gt;c4.4xlarge&lt;/code&gt; on Amazon Web Services (AWS). While it may be possible to run these builds in Docker containers, in workstation virtual machines, or on older hosts, it&amp;rsquo;s well worth it to spend a few dollars to save potentially dozens of hours of wait time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1a37b9719132b432bc3ba6ae340b7e3cb6f009" translate="yes" xml:space="preserve">
          <source>Note: It is recommended to place all plan files inside of a &lt;code&gt;habitat&lt;/code&gt; parent folder in order to allow for clean separation between your application source code and habitat specific files. However, if you maintain a separate repository solely for the purpose of storing habitat plans, then the use of a &lt;code&gt;habitat&lt;/code&gt; folder may not be necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a508de876dba1feb7cdc8b8c5d107000710e4fe" translate="yes" xml:space="preserve">
          <source>Note: On Windows we would create a plan.ps1 file instead. All the variable names are the same but we use Powershell syntax so, for example, &lt;code&gt;pkg_deps=(core/glibc core/readline)&lt;/code&gt; becomes &lt;code&gt;$pkg_deps=@(&quot;core/glibc&quot;, &quot;core/readline&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd43aa4c1455ac805b62a594427dd7a7920d7b8f" translate="yes" xml:space="preserve">
          <source>Note: On Windows, library dependency locations are not maintained in a binary file&amp;rsquo;s headers. See &lt;a href=&quot;https://msdn.microsoft.com/library/windows/desktop/ms682586(v=vs.85).aspx&quot;&gt;this MSDN article&lt;/a&gt; for a complete explanation of how Windows binaries are located. However, it&amp;rsquo;s typically sufficient to ensure that the dependent binaries are on the &lt;code&gt;PATH&lt;/code&gt;. You should make sure to include all dependencies in the &lt;code&gt;pkg_deps&lt;/code&gt; of a &lt;code&gt;plan.ps1&lt;/code&gt; to ensure all of their respective &lt;code&gt;DLL&lt;/code&gt;s are accessible by your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e6b68aacdf2b1a3515e5da796cd76e57d05c42" translate="yes" xml:space="preserve">
          <source>Note: On a clean server, this will download additional packages to satisfy the Supervisor dependencies. You will also require a &lt;code&gt;hab&lt;/code&gt; group and &lt;code&gt;hab&lt;/code&gt; user on the system for most services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fc47f72718c773341f94052498cb3d1a9cb600" translate="yes" xml:space="preserve">
          <source>Note: Powershell plan function names differ from their Bash counterparts in that they use the &lt;code&gt;Invoke&lt;/code&gt;&lt;code&gt;verb&lt;/code&gt; instead of the &lt;code&gt;do_&lt;/code&gt; prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbf9f4de554df48b5e1f8141bbed58f0a01fa1f" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;/containers&lt;/code&gt; endpoint is not useful outside of the Chef Infra Server code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6205bf473c5ee4d0818efb2c07c64b8c12be9b3f" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;cert.pem&lt;/code&gt; file name is reserved for Habitat. Do not use &lt;code&gt;cert.pem&lt;/code&gt; as a file name when copying certs into the cache directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3ff1ac6242946bc2257b8cc54c858e73276fef" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;core&lt;/code&gt; prefix is the origin of those dependencies. For more information, see &lt;a href=&quot;../builder_origins/index&quot;&gt;Create an Origin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba69e29451e7b0eeee0bd97ff0cb49d5ca2e25a" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;pin_priority&lt;/code&gt; of &lt;code&gt;700&lt;/code&gt; ensures that this version will be preferred over any other available versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d75fe3bb1763c19631b10952200d29c4e85d150" translate="yes" xml:space="preserve">
          <source>Note: The plan.sh or plan.ps1 file is the only required file to create a package. Configuration files, runtime hooks, and other source files are optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52dfc253a1527e01f5d21449471813dac06a5a5" translate="yes" xml:space="preserve">
          <source>Note: The service account json credential requires the following fields: &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;project_id&lt;/code&gt;, &lt;code&gt;client_id&lt;/code&gt;, &lt;code&gt;private_key_id&lt;/code&gt;, &lt;code&gt;private_key&lt;/code&gt;, &lt;code&gt;client_email&lt;/code&gt;, &lt;code&gt;auth_uri&lt;/code&gt;, &lt;code&gt;token_uri&lt;/code&gt;, &lt;code&gt;auth_provider_x509_cert_url&lt;/code&gt;, &lt;code&gt;client_x509_cert_url&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248e18d1a291150399ff62d1ffc433823bbd723e" translate="yes" xml:space="preserve">
          <source>Note: The tag name is case sensitive which makes the test case sensitive. E.g. &lt;code&gt;owner_tag&lt;/code&gt; does not equal &lt;code&gt;Owner_tag&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c9bcba06771e897338b595020aa0105738bef5" translate="yes" xml:space="preserve">
          <source>Note: The unique Service Principal Name (the UUID) should be provided in the Chef Habitat Builder configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49d4de86c40b8207727c09c9e108a985796b5ae" translate="yes" xml:space="preserve">
          <source>Note: This feature was introduced in Chef Client 12.14.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681a5b70306a71a0e4668f114fdfbadab2bd2d4c" translate="yes" xml:space="preserve">
          <source>Note: This resource does not detect insecure object ACLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689233078f4c2c022bfd48c55fa0d9cfaa8f6f11" translate="yes" xml:space="preserve">
          <source>Note: Using the &lt;code&gt;DELETE&lt;/code&gt; method of the &lt;code&gt;/containers/NAME&lt;/code&gt; endpoint may have unexpected effects and is likely to break your system. Use of this method is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f753a0d8dd0f4e60559113a44a06830696d42b" translate="yes" xml:space="preserve">
          <source>Note: Using the &lt;code&gt;POST&lt;/code&gt; method of the &lt;code&gt;/containers&lt;/code&gt; endpoint may have unexpected effects and is likely to break your system. Use of this method is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300ca722232ad78d527dc1e6de37f7dcd6cdf318" translate="yes" xml:space="preserve">
          <source>Note: if the user entry contains more than one &lt;code&gt;filter_groups_by_user_attr&lt;/code&gt; attribute, multiple queries will be executed, and their results combined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd27622c93e2db70dfa88da9b6691cd285a366b" translate="yes" xml:space="preserve">
          <source>Note: in Chef Habitat versions prior to 0.56.0, &lt;code&gt;hab svc start&lt;/code&gt; could also be used to load up a service if it wasn&amp;rsquo;t already loaded. In 0.56.0 and later, however, this has changed; &lt;code&gt;hab svc start&lt;/code&gt; can only operate on services that have previously been loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a9aadc7540e5ad045c411dcd2007304bff3863" translate="yes" xml:space="preserve">
          <source>Note: see the &lt;a href=&quot;#be_more_permissive_than?(mode)&quot;&gt;&lt;code&gt;be_more_permissive_than(mode)&lt;/code&gt;&lt;/a&gt; matcher for upper and lower bounds on file mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bb10a1e1708ef8acfb5296cccda34fd1157417" translate="yes" xml:space="preserve">
          <source>Note: the &lt;code&gt;split&lt;/code&gt; matcher returns an array including &lt;code&gt;&quot;&quot;&lt;/code&gt; for cases where there is a trailing colon (&lt;code&gt;:&lt;/code&gt;), such as &lt;code&gt;dir1::dir2:&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393af34e9138c57bb9de2425014f59279072fb4e" translate="yes" xml:space="preserve">
          <source>Note: this doesn&amp;rsquo;t delete the associated printer port. See windows_printer_port above for how to delete the port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="9a27b95bfd6c490ae082ebdb758a4244ade0b2d7" translate="yes" xml:space="preserve">
          <source>Notes about FIPS:</source>
          <target state="translated">Заметки о ФИПС:</target>
        </trans-unit>
        <trans-unit id="45d3c300eb251b334bf777ddd0c341b1756a0b5e" translate="yes" xml:space="preserve">
          <source>Notes and Warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223c59172282840b7e68fd6774a244dc1b52bd0f" translate="yes" xml:space="preserve">
          <source>Notes and warnings are generated by bracketing the text of the note or warning in &lt;strong&gt;info&lt;/strong&gt;, &lt;strong&gt;warning&lt;/strong&gt; or &lt;strong&gt;danger&lt;/strong&gt; shortcodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e83924b22847b2cf5f38476ab905f0af710c2b" translate="yes" xml:space="preserve">
          <source>Notes for auditing Windows systems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419eeacf0224edd7c9ef7beecd97c8901c669b58" translate="yes" xml:space="preserve">
          <source>Notes on EntityId</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08dd7145ec61d9265e62b7424fb1637246652d81" translate="yes" xml:space="preserve">
          <source>Notes on NameId Policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="5e349a795ee5c99a4344728f4e916286a97adb47" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;ro&lt;/code&gt; is now &lt;code&gt;ro:Primary/Unknown&lt;/code&gt;. The Chef server can now be recovered by entering the following command:</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;ro&lt;/code&gt; теперь &lt;code&gt;ro:Primary/Unknown&lt;/code&gt; . Сервер Chef теперь можно восстановить, введя следующую команду:</target>
        </trans-unit>
        <trans-unit id="7ea9311cb74fd93a2092964a5a946add9f3bb46a" translate="yes" xml:space="preserve">
          <source>Notice that in order to specify that we&amp;rsquo;re interested in all files inside of the directories in our &lt;code&gt;paths&lt;/code&gt; entries, we had to add the &lt;code&gt;/*&lt;/code&gt; glob to the end manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67a3f784c4081829175c52b0e81ef86e42381f1" translate="yes" xml:space="preserve">
          <source>Notice that the format for the Munki manifest is similar to what Gorilla uses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1f7151750f73ad169c215271082d5821672c73" translate="yes" xml:space="preserve">
          <source>Notice that the format for the manifest is similar to what Gorilla uses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f768cf6edea4db1b168b85e885eaf2ac00c946c" translate="yes" xml:space="preserve">
          <source>Notification Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753a22b2eb617204efee4644795034b8ace1ee14" translate="yes" xml:space="preserve">
          <source>Notifications</source>
          <target state="translated">Notifications</target>
        </trans-unit>
        <trans-unit id="69a2d032693f0d0a7232cda36bda2836ba34d717" translate="yes" xml:space="preserve">
          <source>Notifications and subscriptions do not need to be updated when packages and versions are added or removed from the &lt;code&gt;package_name&lt;/code&gt; or &lt;code&gt;version&lt;/code&gt; properties.</source>
          <target state="translated">Уведомления и подписки не нужно обновлять, когда пакеты и версии добавляются или удаляются из свойств &lt;code&gt;package_name&lt;/code&gt; или &lt;code&gt;version&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00763a1b7002cbbf0eb1474f4e4270470c24867c" translate="yes" xml:space="preserve">
          <source>Notifications enabled indicates if security alerts are emailed to the security contact (&lt;code&gt;true&lt;/code&gt;|&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4932183097e1e42a7111966582784611fa2c2b2b" translate="yes" xml:space="preserve">
          <source>Notifications may be sent to any email address, a chat service like HipChat or Slack, or to a webhook-based service for generic intergrations.</source>
          <target state="translated">Уведомления могут быть отправлены на любой адрес электронной почты,в чат-службу,например HipChat или Slack,или в службу на основе веб-крюка для общего взаимодействия.</target>
        </trans-unit>
        <trans-unit id="9f3aad5ec07b825227f4629fe005dc5ba0983ba0" translate="yes" xml:space="preserve">
          <source>Notifications sent by Chef Automate do not support retries; therefore, notifications sent while Slack or the external service receiving the notification is experiencing API issues, outages, or some other unplanned downtime may never be received. Undelivered notifications are not re-sent. Attempts to send notifications do generate log messages in your Chef Automate server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792184af8548fa84dbaff242f0be3e07c71c4d8a" translate="yes" xml:space="preserve">
          <source>Notifications sent to Slack by Workflow do not support retries. Therefore, notifications sent while Slack is experiencing API issues, outages, or some other unplanned downtime may never be received by the channel. Undelivered notifications are not re-sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc18750afb43afb858ec4f947d58af408716da5" translate="yes" xml:space="preserve">
          <source>Notifications, via an implicit name:</source>
          <target state="translated">Уведомления,через неявное имя:</target>
        </trans-unit>
        <trans-unit id="3dad339fc0bb5d2e0f8c80d4c81ab2f16e3796ba" translate="yes" xml:space="preserve">
          <source>Notifies</source>
          <target state="translated">Notifies</target>
        </trans-unit>
        <trans-unit id="887d8691caef6c4f9138990d8ca730f0d9f957f7" translate="yes" xml:space="preserve">
          <source>Notify immediately</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca2a47d81115c6690058c8330ec33f6061ca35b" translate="yes" xml:space="preserve">
          <source>Notify multiple resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4451a7a81bee9724c7690c95dba24cd86838e494" translate="yes" xml:space="preserve">
          <source>Nov 13th, 2020</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee48c20a870509c0e940e626bdc979ba0dbb6e14" translate="yes" xml:space="preserve">
          <source>November 11, 2027</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d35b2721ca6c9c9b9633a40c6079021a172ba0" translate="yes" xml:space="preserve">
          <source>November 30, 2020</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac43926fc9e3747cc27ba6c5cc38c8f18b4bd15" translate="yes" xml:space="preserve">
          <source>Now apply that configuration to your Chef Automate 2 deployment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d002d5303595e1cff325741fffd134b3e53946" translate="yes" xml:space="preserve">
          <source>Now for your Munki container, build out a folder structure that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b65d1ec2a99140ffd3756a035dd3e056e83a7a" translate="yes" xml:space="preserve">
          <source>Now import the pkg files. When you import the first package the catalog will build automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a1273737f96f71fdec71859d637ff11417db51" translate="yes" xml:space="preserve">
          <source>Now in the stage1 Studio:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e2c16f228a60e86746e6247aebee4522acca21" translate="yes" xml:space="preserve">
          <source>Now that &lt;code&gt;knife&lt;/code&gt; is configured, copy the SSL certificates from your Chef Infra Server to your trusted certificates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f497c453dcefb73b3e6125c676a3553b526aec" translate="yes" xml:space="preserve">
          <source>Now that FIPS mode is enabled in your &lt;code&gt;.delivery/cli.toml&lt;/code&gt;, running any project-specific Delivery CLI command will automatically use FIPS-compliant encrypted git traffic between your workstation and the Chef Automate server. As long as the Chef Automate server is in FIPS mode, no other action is needed on your part to operate Delivery CLI in FIPS mode. If you ever stop using FIPS mode on the Chef Automate server, simply delete the above two lines from your &lt;code&gt;.delivery/cli.toml&lt;/code&gt; file and Delivery CLI will stop running in FIPS mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fe94b131e778e49763d10818058f0e001a6b2b" translate="yes" xml:space="preserve">
          <source>Now that the Chef Infra Client is configured for data collection, you can also enable Compliance Scanning on via the &lt;a href=&quot;https://github.com/chef-cookbooks/audit&quot;&gt;Audit Cookbook&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e9959b1cc62f01b5638cc703b0cd8593654022" translate="yes" xml:space="preserve">
          <source>Now that the Chef Infra Server is configured for data collection, you can also enable Compliance Scanning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29f73f58eb63531845b8d1c3abb6587032ec9b6" translate="yes" xml:space="preserve">
          <source>Now that the catalog and manifest are ready, test this out from a macOS node by running the following commands from a terminal window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c378cec2938a467ab94aa754631b707dc655466" translate="yes" xml:space="preserve">
          <source>Now that we have the first set of our ingested data associated with our new project, let us add another condition and a new rule to add more data to &lt;code&gt;project-devops&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62912297db4c39b2483b7ca2a59c786212d59e50" translate="yes" xml:space="preserve">
          <source>Now that we have the package running, it is time to make customizations. When making a customization, consider if you want to customize the scan or the remediation? Here are a list of available options for scanning and remediation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b074e4cbfd73fa0474c0acf95eaf3e1c52b7f9" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;re in a Studio, it&amp;rsquo;s been set up with an empty artifact cache. We&amp;rsquo;re going to set things up so that our install logic won&amp;rsquo;t need to call out to a Builder API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971f66f3c89082b6da8e0c8b90ff13a13e40c180" translate="yes" xml:space="preserve">
          <source>Now that you have a valid API token, you&amp;rsquo;ll need to &lt;a href=&quot;#configure-your-chef-infra-server-to-send-data-to-chef-automate&quot;&gt;update your Chef Infra Server data collector configuration&lt;/a&gt; if you are using a Chef Infra Server. Otherwise, you must &lt;a href=&quot;#configure-your-chef-client-to-send-data-to-chef-automate-without-chef-server&quot;&gt;configure your Chef Infra Clients to send data directly to Chef Automate&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac20383c20602173108d10e0a0f80784912f677" translate="yes" xml:space="preserve">
          <source>Now that you have confirmed that the Chef Automate server is in FIPS mode, you must enable FIPS mode locally on your workstation for Delivery CLI. This can be done by adding the following to your &lt;code&gt;.delivery/cli.toml&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ee483b31cfb94ea3c8f660f92a0c7fd69e74d6" translate="yes" xml:space="preserve">
          <source>Now that you have initialized your project, it is recommended that you integrate the &lt;strong&gt;delivery-truck&lt;/strong&gt; cookbook with your project. Delivery Truck can ensure good build cookbook behavior as well as provide you with recipes already set up to test your project cookbooks and applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f30e14dcce416f689b5f611281e6a733613694" translate="yes" xml:space="preserve">
          <source>Now that you have initialized your project, it is recommended that you integrate the delivery-truck cookbook with your project. Delivery Truck can ensure good build cookbook behavior as well as provide you with recipes already set up to test your project cookbooks and applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cc30aa3c35b004b33c85f1b8a8cef3c175eac7" translate="yes" xml:space="preserve">
          <source>Now that you have stubbed out your plan file in your plan context, open it and begin modifying it to suit your needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674da73f9e43251b3c17cef76aab6251527c5603" translate="yes" xml:space="preserve">
          <source>Now that you have the &lt;code&gt;Vagrantfile&lt;/code&gt; in your current directory, provision a new VM by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffa151fc88d8e0437bb474ef5bfb72282840bb2" translate="yes" xml:space="preserve">
          <source>Now that you have your systems listed in Azure, we need to get them under an enrollment or deployment profile. This initial configuration of the device will bring it under management.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b42848749b7073f1e0cc7181037687df2164c06" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve installed Chef Workstation, proceed to the &lt;a href=&quot;../getting_started/index&quot;&gt;Getting Started&lt;/a&gt; guide to configure your Chef Workstation installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b185494e9a7e06fa400a7f17d09182cf9433f8c5" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve installed Chef Workstation, proceed to the &lt;a href=&quot;workstation/getting_started/index&quot;&gt;Getting Started&lt;/a&gt; guide to configure your Chef Workstation installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7087fac6701e6345319e19cc8082268d5dd93f91" translate="yes" xml:space="preserve">
          <source>Now upon running &lt;code&gt;build&lt;/code&gt; you should enter an interactive prompt inside the context of the Invoke-Build function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98b5ee180777fe2783068089fbd4f5daca75d6e" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;re ready to use the stage1 packages to make a set of packages that are completely decoupled from the stage1 &lt;code&gt;tools/&lt;/code&gt; infrastructure, which we&amp;rsquo;ll call a &amp;ldquo;stage2&amp;rdquo; build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3956dbcbb40c5445e669334d54eb3a29e58aa2ea" translate="yes" xml:space="preserve">
          <source>Now whenever you run the base profile you can just &lt;code&gt;include_controls 'centos-profile'&lt;/code&gt;. It will only run the included profiles is the platform matches the supported platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e377b6d620190604c9c9e27f3cb5114048ceff7" translate="yes" xml:space="preserve">
          <source>Now you are ready to try out your Chef Desktop cookbook on your first test node. Before you begin, you need to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18b87d486c8695b230dae732eef571b9177e71d" translate="yes" xml:space="preserve">
          <source>Now you can import pkg files. When you import the first package, the catalog gets built for you automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e28d02af215d238373c3e3bc7b9c1fd51d567d" translate="yes" xml:space="preserve">
          <source>Now you can use Storage Explorer to move the entire thing into your Azure Blob Storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60db3ac8286d434364394d30e86336fa512465c" translate="yes" xml:space="preserve">
          <source>Now you can use Storage Explorer to move the entire thing into your Azure Blob Storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd3561e4dab46f454a5e9271421b7cdba158f6a" translate="yes" xml:space="preserve">
          <source>Now your Chef Infra Server has the cookbook and settings it needs to apply to the nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39843f8240620501fa746ad832541e6623a0dcc" translate="yes" xml:space="preserve">
          <source>Now, any node with &lt;code&gt;audit::default&lt;/code&gt; its runlist will fetch and report data directly to and from Chef Automate. Please see the audit cookbook for an &lt;a href=&quot;https://github.com/chef-cookbooks/audit&quot;&gt;exhaustive list of configuration options&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf80af91cfcbc1615cbb42f99644823651806be" translate="yes" xml:space="preserve">
          <source>Now, any node with &lt;code&gt;audit::default&lt;/code&gt; its runlist will fetch and report data to and from Chef Automate via the Chef Infra Server. Please see the audit cookbook for an &lt;a href=&quot;https://github.com/chef-cookbooks/audit&quot;&gt;exhaustive list of configuration options&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa9ba794f41f277ac9660b3a7f7faad243a5a76" translate="yes" xml:space="preserve">
          <source>Now, create two containers in your storage account to hold the content for our users. For macOS devices, all content we want them to have - either &amp;lsquo;managed&amp;rsquo; (we push it to them) or &amp;lsquo;unmanaged&amp;rsquo; (users can download if they wish) goes here. For Windows users, only the managed content goes in the corresponding bucket and we will use the App Store to make things we license available to them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2e056225d4580c66f78248fb84d41809fb56e8" translate="yes" xml:space="preserve">
          <source>Now, perform a &lt;a href=&quot;index&quot;&gt;build&lt;/a&gt; &amp;ndash; we recommend using an interactive studio so you do not need to set up the environment from scratch for every build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fadc4e9cd7f0d881d8fe645c2f1d6b692e25b86" translate="yes" xml:space="preserve">
          <source>Now, run Chef Infra Client again:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73365ef962b8eb9e6abc7a9ca6fc94fcc25b781" translate="yes" xml:space="preserve">
          <source>Now, run the chef-client again:</source>
          <target state="translated">А теперь снова запустите шеф-клиента:</target>
        </trans-unit>
        <trans-unit id="e94b32af3907a0794f61f72370f11a7532cff341" translate="yes" xml:space="preserve">
          <source>Now, run the following on each Supervisor to load &lt;code&gt;core/redis&lt;/code&gt; in the &amp;ldquo;prod&amp;rdquo; group:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29872f43ed4534ec5e7e247953885ad326aac784" translate="yes" xml:space="preserve">
          <source>Now, start the Supervisor and load your service package using the &lt;code&gt;hab&lt;/code&gt; binary, which is included in the tar archive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8252089f8552dde7e1bd7f589ac6782fbab523ce" translate="yes" xml:space="preserve">
          <source>Now, using the remote control capabilities of the Supervisor, this could be accomplished from a workstation or bastion host with an invocation that could be as simple as this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03c4c21137d00da6618b04ead03a0c6dfce2358" translate="yes" xml:space="preserve">
          <source>Now, when you run &lt;code&gt;berks install&lt;/code&gt;, the apt cookbook will be downloaded from Supermarket into the cache:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9209191b1039a5abad1c2212edca4fab71816bfe" translate="yes" xml:space="preserve">
          <source>Nullsoft Scriptable Install System (NSIS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650fd49efe516b45db45774c56f5e9215b7cc8bc" translate="yes" xml:space="preserve">
          <source>Number of Chef Automate HTTP workers Chef Infra Server should start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b3baef8af57790c0b8037e59be07372437bd96" translate="yes" xml:space="preserve">
          <source>Number of Elasticsearch API failures allowed before health check fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652cc2447fa7526798a498b0e9d5fab270b937e7" translate="yes" xml:space="preserve">
          <source>Number of PostgreSQL connection failures allowed before health check fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e58e066f1024981a0e40923a3f98f4e9e9e1479" translate="yes" xml:space="preserve">
          <source>Number of associated records</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b57826231facf03575f97dbeebcda3b58b1d53d" translate="yes" xml:space="preserve">
          <source>Number of attached SSDs, from 0 to 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a835b3441e91fec4c54f0d454be613949bfe388a" translate="yes" xml:space="preserve">
          <source>Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance. Defaults to a runtime-specific value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152e60b90d06e4df6f15f1714893538f7bd4e424" translate="yes" xml:space="preserve">
          <source>Number of days before the expiration. It this threshold is reached, the CRL will be renewed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ea834244f6b36ced643eddef2871accbef9246" translate="yes" xml:space="preserve">
          <source>Number of errors before a host is ejected from the connection pool. When the backend host is accessed over HTTP, a 5xx return code qualifies as an error. Defaults to 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658669cc01ae14e653824aa1426a6f0f65d98d29" translate="yes" xml:space="preserve">
          <source>Number of etcd failures allowed before health check fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0527b375fb49c5ed1caa6bfc2869a76144d57a" translate="yes" xml:space="preserve">
          <source>Number of instances to assign to the service at the start. &lt;strong&gt;Note:&lt;/strong&gt; When managing the number of instances at runtime through the App Engine Admin API or the (now deprecated) Python 2 Modules API set_num_instances() you must use &lt;code&gt;lifecycle.ignore_changes = [&quot;manual_scaling&quot;[0].instances]&lt;/code&gt; to prevent drift detection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55880eed0b25b2b897298e446121f613e292be0d" translate="yes" xml:space="preserve">
          <source>Number of milliseconds for which to keep the storage for a partition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7e4b1f5c5cc5097352a1894df643737c4d3788" translate="yes" xml:space="preserve">
          <source>Number of network endpoints in the network endpoint group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fcbee90ea4360a92770e1498173acf0572ebaf5" translate="yes" xml:space="preserve">
          <source>Number of previous passwords to remember.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e042cdf13a1f15928bd56b5e47185aeb9e0426b" translate="yes" xml:space="preserve">
          <source>Number of seconds that this ResourceRecordSet can be cached by resolvers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc113ada60193b8f8a112f394a2c3a21e04065f" translate="yes" xml:space="preserve">
          <source>Number of seconds to wait between converge attempts. Default value: 30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7bde28dec70a4908f9c304a47c49ec9936ef0fc" translate="yes" xml:space="preserve">
          <source>Number of seconds to wait between retries (exponential backoff is used if not provided) (default: -1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd1be8522eaf08799089b1a865c35e9731a6bc5" translate="yes" xml:space="preserve">
          <source>Number of seconds to wait for a connection before timing out. Defaults to 30 seconds. This may be too short of a time for extremely overloaded sites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b4e1e3c3fad7c43ec1ddc92beaac175568c69a" translate="yes" xml:space="preserve">
          <source>Number of seconds to wait until attempting to make another connection after a failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2d791e60c79448dc8b2d6fbd4dc71a9b93abf8" translate="yes" xml:space="preserve">
          <source>Number of servers to create with same configuration. Maximum: 5. Default: 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6048e0d17c6c79fca851c23444ff5a211412e983" translate="yes" xml:space="preserve">
          <source>Number of system log lines (journald logs) to collect (0 for all logs) (default: 500000)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed24ea6dfbe7b07396edd4809a547ac9c1e3ac44" translate="yes" xml:space="preserve">
          <source>Number of tests within an individual control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71e08f7610eb6ffa0166cbdb38d65b464b429da" translate="yes" xml:space="preserve">
          <source>Number of times any attempt to retrieve a file should retry before returning an error. Setting this to &lt;code&gt;0&lt;/code&gt; makes Yum try forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebae2e5f053e5c03bb328d0eee764445e4aa286" translate="yes" xml:space="preserve">
          <source>Number of times to converge the node. Defaults to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0931fede243da5cc217acf8bf247491435caa3" translate="yes" xml:space="preserve">
          <source>Number of times to retry failed hab package downloads (default: 2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6edcd320e1af4e7f256bf18485aa19382d56510" translate="yes" xml:space="preserve">
          <source>Number of times to retry the converge before passing along the failed status. Defaults value: 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4d87630c3be58eae3339f17eab46652f293fb9" translate="yes" xml:space="preserve">
          <source>Number of virtual CPUs to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1addbfa05a5d7967b66aea1f56c4284b3db595" translate="yes" xml:space="preserve">
          <source>Number uniquely identifying the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4de771946856ec891507e0c82ee59aada21203" translate="yes" xml:space="preserve">
          <source>Number. The count of packages that matched the filter criteria.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd9d756b4abc49f2fa04e6afd780b4982709240" translate="yes" xml:space="preserve">
          <source>Number. The count of services that matched the filter criteria.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ab31b0fd02c04fd15d995d651f5234adc7acf8" translate="yes" xml:space="preserve">
          <source>Numbered Lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b76f3a62d5c144f81ee97d99b05a368ec24cc3" translate="yes" xml:space="preserve">
          <source>Numbered lists are created like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24b967dc18de8c7388cf99f2cd87fb5e0d08b4c" translate="yes" xml:space="preserve">
          <source>Numeric value to go with the scheduled task frequency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a914cde05039694ef0194d9ee79ff9a79dde33" translate="yes" xml:space="preserve">
          <source>O</source>
          <target state="translated">O</target>
        </trans-unit>
        <trans-unit id="d2c2ddf4985b0b7206de4309903c07a8b18f6c4a" translate="yes" xml:space="preserve">
          <source>OAuth scope to be used for generating OAuth access token. If not specified, &amp;ldquo;&lt;a href=&quot;https://www.googleapis.com/auth/cloud-platform%22&quot;&gt;https://www.googleapis.com/auth/cloud-platform&quot;&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e72fe3e21144c39ec693c780199cbfee9490c6c" translate="yes" xml:space="preserve">
          <source>OAuth2 Client ID for IAP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43724404c6c1712a118ee99d3c978e5db22083a1" translate="yes" xml:space="preserve">
          <source>OAuth2 Client Secret SHA-256 for IAP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5efdaf0fb203e2183fb6623eb8d1a568c02c6d2" translate="yes" xml:space="preserve">
          <source>OAuth2 Client Secret for IAP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580b309ff8e639fdf1f325ea68246683848c6c9d" translate="yes" xml:space="preserve">
          <source>OAuth2 client id for the service account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95364ee868b5c77831e60a7e80a1fc93e22e951f" translate="yes" xml:space="preserve">
          <source>OBSOLETE</source>
          <target state="translated">OBSOLETE</target>
        </trans-unit>
        <trans-unit id="ad50489054ddaae044be8b3054bf4d67480648d6" translate="yes" xml:space="preserve">
          <source>OFF</source>
          <target state="translated">OFF</target>
        </trans-unit>
        <trans-unit id="c689932b7dbe30581b030db3ed10f089524606f4" translate="yes" xml:space="preserve">
          <source>OFFLINE</source>
          <target state="translated">OFFLINE</target>
        </trans-unit>
        <trans-unit id="8db5be7333feb5a9830ee383381dc99928e26bb1" translate="yes" xml:space="preserve">
          <source>OHAI-1</source>
          <target state="translated">OHAI-1</target>
        </trans-unit>
        <trans-unit id="eb05309687b136abfd5c327efd53aca0f6645410" translate="yes" xml:space="preserve">
          <source>OHAI-10</source>
          <target state="translated">OHAI-10</target>
        </trans-unit>
        <trans-unit id="e7a0549bdaab4347afc5f6f9a8dc8bcc2af2cb98" translate="yes" xml:space="preserve">
          <source>OHAI-11</source>
          <target state="translated">OHAI-11</target>
        </trans-unit>
        <trans-unit id="71fe599ae2c319b9944d82cd32d1434ad3869463" translate="yes" xml:space="preserve">
          <source>OHAI-12</source>
          <target state="translated">OHAI-12</target>
        </trans-unit>
        <trans-unit id="e818b9ea024da11c5dab5c84f66a69bb9dc47f40" translate="yes" xml:space="preserve">
          <source>OHAI-13</source>
          <target state="translated">OHAI-13</target>
        </trans-unit>
        <trans-unit id="cd9ae089dea038c3a0aca4f7dfde6266be14e063" translate="yes" xml:space="preserve">
          <source>OHAI-14</source>
          <target state="translated">OHAI-14</target>
        </trans-unit>
        <trans-unit id="4e6a5d89857ff2852cbda8976c5c44d6db966985" translate="yes" xml:space="preserve">
          <source>OHAI-2</source>
          <target state="translated">OHAI-2</target>
        </trans-unit>
        <trans-unit id="6bf27fdbebe5c384e20a4faf6e064ac77dabf72d" translate="yes" xml:space="preserve">
          <source>OHAI-3</source>
          <target state="translated">OHAI-3</target>
        </trans-unit>
        <trans-unit id="0ff735b1040fcae6dcd42c00d58cfa4c18b085d8" translate="yes" xml:space="preserve">
          <source>OHAI-4</source>
          <target state="translated">OHAI-4</target>
        </trans-unit>
        <trans-unit id="2d7c61a8849bbfb21f50f136e73685759993587e" translate="yes" xml:space="preserve">
          <source>OHAI-5</source>
          <target state="translated">OHAI-5</target>
        </trans-unit>
        <trans-unit id="e373f7e4c2fb5a016e36188b86089e5f5b9c31eb" translate="yes" xml:space="preserve">
          <source>OHAI-6</source>
          <target state="translated">OHAI-6</target>
        </trans-unit>
        <trans-unit id="a9cdc5134173056a795a4d27e588041275e39fce" translate="yes" xml:space="preserve">
          <source>OHAI-7</source>
          <target state="translated">OHAI-7</target>
        </trans-unit>
        <trans-unit id="69537acf2ea56ba68322087061b532e71362a63a" translate="yes" xml:space="preserve">
          <source>OHAI-8</source>
          <target state="translated">OHAI-8</target>
        </trans-unit>
        <trans-unit id="147413f84ed1ff07e0c92e920fd601650ed0d458" translate="yes" xml:space="preserve">
          <source>OHAI-9</source>
          <target state="translated">OHAI-9</target>
        </trans-unit>
        <trans-unit id="e3f88602d26b6fa8f0b5bf18209890cfbed3fdef" translate="yes" xml:space="preserve">
          <source>OK.</source>
          <target state="translated">OK.</target>
        </trans-unit>
        <trans-unit id="195f6ec90c80ec82b6321facfa33a703eabcfdda" translate="yes" xml:space="preserve">
          <source>OK. An invitation was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b061df0c4989ae655f301f174a69d6feef254fc" translate="yes" xml:space="preserve">
          <source>OK. The group was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2954081684c682839a14185f603234d5c2e7c9" translate="yes" xml:space="preserve">
          <source>OK. The group was deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57450f8909c3d2f74403cbfdb46ff43e6e6f56dd" translate="yes" xml:space="preserve">
          <source>OK. The group was updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a96083e517b979ab8a1b6c83b55901e29d31fc" translate="yes" xml:space="preserve">
          <source>OK. The item was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07339924c5b66a3f787f5f870d7f6e87a60207f6" translate="yes" xml:space="preserve">
          <source>OK. The request was successful.</source>
          <target state="translated">ХОРОШО.Запрос был успешным.</target>
        </trans-unit>
        <trans-unit id="34ae39ab54b243fd1fadb9d9af43debe51a1e159" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. A hash that maps each checksum to a hash that contains a boolean &lt;code&gt;needs_upload&lt;/code&gt; field and a URL if &lt;code&gt;needs_upload&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ХОРОШО. Запрос был успешным. Хеш, который отображает каждую контрольную сумму в хеш, который содержит логическое поле &lt;code&gt;needs_upload&lt;/code&gt; и URL-адрес, если для &lt;code&gt;needs_upload&lt;/code&gt; задано значение &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74f522ba2cb84d8aee5d60f11b771dc9fef5945b" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. One (or more) cookbooks and associated cookbook version information was returned.</source>
          <target state="translated">ХОРОШО.Запрос был успешным.Была возвращена информация об одной (или нескольких)кулинарной книге и связанной с ней версии кулинарной книги.</target>
        </trans-unit>
        <trans-unit id="ee4cc7192e25afcb1db81503fcd0902af43f0744" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. One or more cookbooks were returned as a result of the search query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed49654b4651a31090ef8ccb7b28c51b1c89961a" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. One or more tools were returned as a result of the search query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725f8fa4d1e13aef011e2c7db35819c27d1763ce" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. One or more tools were returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6c6d27771f2935367af9fcd45581b384e1e570" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. Required recipe is enabled, a path to a recipe is defined, and a recipe exists at the path location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7de83cdba2bf0cef2fb961e9adea8d19091bea3" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. The cookbook version was deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7566cb1f6cfafc8423c6485a5b5f8dbf579b568f" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. The cookbook was deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab946b1b420009ca7bfa1516b08d5b26bc7ff32" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. The cookbook was posted to the Supermarket API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a4a691ece73d581cedf824d6f165a9967c7749" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. The requested cookbook exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060adc45222520c8a47676d8e71683c1abb703f8" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. The requested tool exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05fc71fd10c6b10b810c11aaeaa09c269cbcdb9" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. The user association was removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b05436534f5b8b066dfb4580d126b89d8a05f0" translate="yes" xml:space="preserve">
          <source>OK. The user was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87152febadaaaaf61d4fb89f0952b684d1763b3" translate="yes" xml:space="preserve">
          <source>OKTA</source>
          <target state="translated">OKTA</target>
        </trans-unit>
        <trans-unit id="387d7a59dbaaef002e0f9ac69ecd4443b9c5cef2" translate="yes" xml:space="preserve">
          <source>ON</source>
          <target state="translated">ON</target>
        </trans-unit>
        <trans-unit id="1267d26e27af9aea5911ab1567a9de4ee126a55f" translate="yes" xml:space="preserve">
          <source>ONE_TO_ONE_NAT</source>
          <target state="translated">ONE_TO_ONE_NAT</target>
        </trans-unit>
        <trans-unit id="4e93b6bcf5e4fe1788f6c1b2031bd62a5e14744d" translate="yes" xml:space="preserve">
          <source>ONLY_SCALE_OUT</source>
          <target state="translated">ONLY_SCALE_OUT</target>
        </trans-unit>
        <trans-unit id="b6504ccb22c194d3ecc6f6cec44469657fa30e27" translate="yes" xml:space="preserve">
          <source>ON_PREMISES_INSTANCE</source>
          <target state="translated">ON_PREMISES_INSTANCE</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="3a1c9bbdf81e96f88b56cf60bddfa9c4429607ea" translate="yes" xml:space="preserve">
          <source>ORGANIZATION-validator.pem</source>
          <target state="translated">ORGANIZATION-validator.pem</target>
        </trans-unit>
        <trans-unit id="f37987e722f2d33712c8025e160ad666f3096158" translate="yes" xml:space="preserve">
          <source>ORGANIZATION-validator.pem. This private key can be downloaded from the &lt;strong&gt;Organizations&lt;/strong&gt; page.</source>
          <target state="translated">ОРГАНИЗАЦИЯ-validator.pem. Этот закрытый ключ можно скачать со страницы &lt;strong&gt;Организации&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="870d66b4538bd01b8bdb0530421f1ec894ddbbbf" translate="yes" xml:space="preserve">
          <source>ORIGINAL_DESTINATION</source>
          <target state="translated">ORIGINAL_DESTINATION</target>
        </trans-unit>
        <trans-unit id="de8aa86286dbb8eb74d2748c7b6d4486d0458203" translate="yes" xml:space="preserve">
          <source>OS</source>
          <target state="translated">OS</target>
        </trans-unit>
        <trans-unit id="9917fb3ec5df1aab02dbc4773d08f98d2c8e2393" translate="yes" xml:space="preserve">
          <source>OS Platform of a node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3166884c7aaa0302a419ff559f8010d556eadbd" translate="yes" xml:space="preserve">
          <source>OS X Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d265b639a528380a69b6c9b254c40a432374ac48" translate="yes" xml:space="preserve">
          <source>OSX Auto Enrollment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ebd925ed20dc0bde4780417df86ad1dfd0bf63" translate="yes" xml:space="preserve">
          <source>OUTGOING</source>
          <target state="translated">OUTGOING</target>
        </trans-unit>
        <trans-unit id="501e48905555a0669b1e278477ac775a27d4f4a4" translate="yes" xml:space="preserve">
          <source>OWNER</source>
          <target state="translated">OWNER</target>
        </trans-unit>
        <trans-unit id="10065994e6f1ad8cb94be7cfcfebaa6ac91dcc90" translate="yes" xml:space="preserve">
          <source>Oauth2</source>
          <target state="translated">Oauth2</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="3fce51d9d47cd7dd773864983455ba782d5a8ff1" translate="yes" xml:space="preserve">
          <source>Object Permissions</source>
          <target state="translated">Разрешения на объект</target>
        </trans-unit>
        <trans-unit id="24d50592b70a997e82a3839de9c69ef0c75660a9" translate="yes" xml:space="preserve">
          <source>Objectives</source>
          <target state="translated">Objectives</target>
        </trans-unit>
        <trans-unit id="0e8113208c656d7df96554b2106d3df12879b518" translate="yes" xml:space="preserve">
          <source>Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cb7edffed6bb392af60be81d7272df592e3373" translate="yes" xml:space="preserve">
          <source>Obvious Fix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3a5341fee9f65ebbbced141b0b3a7e184e0347" translate="yes" xml:space="preserve">
          <source>Occasionally, a GRE tunnel will be required to handle the VRRP traffic. To accomplish this, set the following in &lt;code&gt;/var/opt/opscode/keepalived/bin/tunnel.sh&lt;/code&gt; on the back-end server that will be used for bootstrapping:</source>
          <target state="translated">Иногда для обработки трафика VRRP потребуется туннель GRE. Для этого установите следующее в &lt;code&gt;/var/opt/opscode/keepalived/bin/tunnel.sh&lt;/code&gt; на внутреннем сервере, который будет использоваться для начальной загрузки:</target>
        </trans-unit>
        <trans-unit id="381ce8af81a6415bfb3849396710b2188bc960a8" translate="yes" xml:space="preserve">
          <source>October 10, 2023</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972622128fe57d5c55044a793b95ef621a01103b" translate="yes" xml:space="preserve">
          <source>October 10, 2028</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a630c5194094abe984a8ec55aac65cab85c585f0" translate="yes" xml:space="preserve">
          <source>October 31, 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700fbd330895b49dc388fcc641ef4870908af916" translate="yes" xml:space="preserve">
          <source>October 31, 2024</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae24a66f1ba4825bd676ac68b94065c02cf6624" translate="yes" xml:space="preserve">
          <source>Of course if your plan does not include hooks or configuration templates and just requires a plan file, you may choose this simpler structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd841fbdc64a3a5fe8c7d8b027e90841dc46e77" translate="yes" xml:space="preserve">
          <source>Of course it is vastly simpler to just use Chef Infra Client resources when you can. Compare the equivalent implementations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f33e29fb7228ed438a26553db9107a98bd1fae2" translate="yes" xml:space="preserve">
          <source>Of course. We still prefer the &lt;code&gt;should&lt;/code&gt; syntax for UX reasons. We did surveys with various types of customers like devops engineers, auditors, managers. All participants who preferred the &lt;code&gt;expect&lt;/code&gt; syntax have been Ruby experts. All non-Ruby developers found it easier to understand the &lt;code&gt;should&lt;/code&gt; syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be5c840a4828df5f6eb79d51a1c670242de66cc" translate="yes" xml:space="preserve">
          <source>Offensive comments related to gender, sexual orientation, age, disability, physical appearance, body size, race, veteran status, or religion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec67bb6d3f31635640942ac59b8a7dc579685f28" translate="yes" xml:space="preserve">
          <source>Office365</source>
          <target state="translated">Office365</target>
        </trans-unit>
        <trans-unit id="c9cf3059d1db74d8be4f8d1ed56cf7b9ec6090d5" translate="yes" xml:space="preserve">
          <source>Official Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ba1760564e8e5b53ad42cd5a52b4ebf1b00bb4" translate="yes" xml:space="preserve">
          <source>Often commands can take longer than the default &lt;code&gt;MaxTimeoutms&lt;/code&gt; WinRM configuration setting. Increase this value to &lt;code&gt;1800000&lt;/code&gt; (30 minutes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d782fec8f815f0a5ddbe7475fbfbd74162d63a39" translate="yes" xml:space="preserve">
          <source>Often, a workstation is configured to use the Chef development kit as the development toolkit. The Chef development kit is a package from Chef that provides an optional (but recommended) set of tooling, including Chef itself, the chef command line tool, Kitchen, ChefSpec, Berkshelf, and more.</source>
          <target state="translated">Часто рабочая станция настраивается на использование набора средств разработки Chef в качестве инструментария разработки.Комплект для разработки Chef-это пакет от Chef,который предоставляет дополнительный (но рекомендуемый)набор инструментов,включая сам Chef,инструмент командной строки Chef,Kitchen,ChefSpec,Berkshelf и многое другое.</target>
        </trans-unit>
        <trans-unit id="703678013186879e27914d489f38c9314d73afe7" translate="yes" xml:space="preserve">
          <source>Ohai</source>
          <target state="translated">Ohai</target>
        </trans-unit>
        <trans-unit id="a4847b4c500e45a751e2f60c109e4a425aa9ba17" translate="yes" xml:space="preserve">
          <source>Ohai 7.0 released with Chef Client 11.12 introduced an improved plugin DSL model. At the time we introduced deprecations for the existing plugin DSL, which we referred to as V6 plugins. In Ohai/Chef Client 14 we will remove the support for Ohai V6 plugins, causing a runtime error if they are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cf819b5adeb5d82ddc2ea242914ddf7570f1b9" translate="yes" xml:space="preserve">
          <source>Ohai 8.8.0 (Chef Client 12.6.0) introduced a new Ohai configuration system as defined in &lt;a href=&quot;https://github.com/chef/chef-rfc/blob/master/rfc053-ohai-config.md&quot;&gt;RFC-053&lt;/a&gt;. This system replaced the existing usage of &lt;code&gt;Ohai::Config&lt;/code&gt; config system, which will be removed in Chef Client 13.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1653e27db910c463cdecb46e336974518583f35" translate="yes" xml:space="preserve">
          <source>Ohai DSL Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed29453ecdad33f996bcfe3e82c741eca9ec4e5" translate="yes" xml:space="preserve">
          <source>Ohai Plugin Detail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79694708ebd0b4c0c3e952e72e99c4b479691aaa" translate="yes" xml:space="preserve">
          <source>Ohai Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba4ae127f188c29f3f598630ab3f0a9ffc8280c" translate="yes" xml:space="preserve">
          <source>Ohai Settings</source>
          <target state="translated">Охайские настройки</target>
        </trans-unit>
        <trans-unit id="09c830435727e2d8fc0a6bcffbd4c263df2feb26" translate="yes" xml:space="preserve">
          <source>Ohai Settings in client.rb</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1331a626a62dcb6f456a7257676ac204068c9945" translate="yes" xml:space="preserve">
          <source>Ohai can be run on the command line outside of the Chef Infra Client run. See &lt;a href=&quot;../ctl_ohai&quot;&gt;Ohai (executable)&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6da10e49410cd06f85dec37d5afdfc8fdc10dfc" translate="yes" xml:space="preserve">
          <source>Ohai can be run on the command line outside of the Chef Infra Client run. See &lt;a href=&quot;ctl_ohai&quot;&gt;Ohai (executable)&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b26b9cf7129c8ec265e63471c27f58a4baa7498" translate="yes" xml:space="preserve">
          <source>Ohai collects a list of automatic attributes at the start of each Chef Infra Client run. This list will vary from organization to organization, by server type, and by the platform that runs those servers. All the attributes collected by Ohai are unmodifiable by Chef Infra Client. Run the &lt;code&gt;ohai&lt;/code&gt; command on a system to see which automatic attributes Ohai has collected for a particular node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dea91146f7dbc43df03cf298439dca93e1dbfbb" translate="yes" xml:space="preserve">
          <source>Ohai collects data for many platforms, including AIX, Darwin, Linux, FreeBSD, OpenBSD, NetBSD, Solaris, and any Microsoft Windows operating systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d6c289ab017dfa69c636b546ebb7085a445d63" translate="yes" xml:space="preserve">
          <source>Ohai collects platform information at the start of a Chef Infra Client run and stores that information in the &lt;code&gt;node['platform']&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311bd54c29bcd3f4e4a89912b6edbe43caf8bd0d" translate="yes" xml:space="preserve">
          <source>Ohai collects platform information at the start of the chef-client run and stores that information in the &lt;code&gt;node['platform']&lt;/code&gt; attribute.</source>
          <target state="translated">Ohai собирает информацию о платформе в начале выполнения программы chef-client и сохраняет эту информацию в атрибуте &lt;code&gt;node['platform']&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bfa440e604499516f791756000f486ea3e6c92b" translate="yes" xml:space="preserve">
          <source>Ohai configuration settings can be added to the client.rb file.</source>
          <target state="translated">Настройки конфигурации Ohai могут быть добавлены в файл client.rb.</target>
        </trans-unit>
        <trans-unit id="e96b016424c6fd3cd9ac79bb9b2b09f72dc6f332" translate="yes" xml:space="preserve">
          <source>Ohai data gathered from each managed node - This data includes hardware, operating system, and installed program information. Some variation depends on the managed operating system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e4fa07cc69e60fe45d42ca4c9439860a18fb5c" translate="yes" xml:space="preserve">
          <source>Ohai hints are used to tell Ohai something about the system that it is running on that it would not be able to discover itself. An Ohai hint exists if a JSON file exists in the hint directory with the same name as the hint. For example, calling &lt;code&gt;hint?('antarctica')&lt;/code&gt; in an Ohai plugin would return an empty hash if the file &lt;code&gt;antarctica.json&lt;/code&gt; existed in the hints directory, and return nil if the file does not exist.</source>
          <target state="translated">Охайские подсказки используются для того, чтобы рассказать Охайю что-то о системе, на которой он работает, что он не сможет обнаружить себя. Подсказка Ohai существует, если в каталоге подсказок существует файл JSON с тем же именем, что и подсказка. Например, вызов &lt;code&gt;hint?('antarctica')&lt;/code&gt; в плагине Ohai вернет пустой хеш, если файл &lt;code&gt;antarctica.json&lt;/code&gt; существует в каталоге hints, и вернет nil, если файл не существует.</target>
        </trans-unit>
        <trans-unit id="f05f60f7276d2afe20ed914ce8ce64127c4b07f3" translate="yes" xml:space="preserve">
          <source>Ohai is a tool that is used to collect system configuration data, which is provided to Chef Infra Client for use within cookbooks. Ohai is run by Chef Infra Client at the beginning of every Chef run to determine system state. Ohai includes many built-in plugins to detect common configuration details as well as a plugin model for writing custom plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e7f1cca93353cb909ac0a09a6bf8c8c6c50b1d1" translate="yes" xml:space="preserve">
          <source>Ohai is a tool that is used to detect attributes on a node, and then provide these attributes to Chef Infra Client at the start of every run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c8a3895dc43d5a0f930848810f4d04bf7c81e3" translate="yes" xml:space="preserve">
          <source>Ohai is a tool that is used to detect attributes on a node, and then provide these attributes to the chef-client at the start of every chef-client run. Ohai is required by the chef-client and must be present on a node. (Ohai is installed on a node as part of the chef-client install process.)</source>
          <target state="translated">Охай-это инструмент,который используется для обнаружения атрибутов на узле,а затем предоставляет эти атрибуты клиенту в начале каждого прогона.Охай требуется от шеф-клиента и должен присутствовать на узле.(Охай устанавливается на узле как часть процесса установки шеф-клиента).</target>
        </trans-unit>
        <trans-unit id="cf6adb705b664eeda44c8278607c9c7746071e4b" translate="yes" xml:space="preserve">
          <source>Ohai plugins are written in Ruby with a plugin DSL documented below. Being written in Ruby provides access to all of Ruby&amp;rsquo;s built-in functionality, as well as 3rd party gem functionality. Plugins can parse the output of any local command on the node, or they can fetch data from external APIs. Examples of plugins that users have written: - A plugin to gather node information including datacenter, rack, and rack position from an inventory server - A plugin to gather additional RAID array information from a controller utility - A plugin to gather hardware warranty information from a vendor API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a93c79e152112b07567ef176765ef305a54843" translate="yes" xml:space="preserve">
          <source>Ohai plugins that should be disabled in order to speed up the Chef Infra Client run and reduce the size of node data sent to Chef Infra Client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c087f2cd047cef3ef6cb589973531d3d80e08c" translate="yes" xml:space="preserve">
          <source>Ohai ships a command mixin for use by plugin authors in shelling out to external commands. This mixin originally included &lt;code&gt;run_command&lt;/code&gt; and &lt;code&gt;popen4&lt;/code&gt; methods, which were deprecated in Ohai 8.11.1 (Chef Client 12.8.1) in favor of the more robust &lt;code&gt;mixlib-shellout&lt;/code&gt; gem functionality. In Chef Client 13 these deprecated methods will be removed, breaking any Ohai plugins authored using the deprecated methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05ae06afefa9679cedfd3d779dd00aea3ecd6a5" translate="yes" xml:space="preserve">
          <source>Ohai ships several plugins that are considered optional and can be enabled in the &lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb configuration file&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bff13a824cf53472deb1772d5d047d315fc3a8a" translate="yes" xml:space="preserve">
          <source>Ohai ships several plugins that are considered optional and can be enabled in the &lt;a href=&quot;config_rb_client/index&quot;&gt;client.rb configuration file&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06755a446a964ca0d2cad9483e02de977fc64b94" translate="yes" xml:space="preserve">
          <source>Ohai will attempt to fully qualify the name of any class by prepending &lt;code&gt;Ohai::&lt;/code&gt; to the loaded class. For example both:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3e1dd68988d3dd7df9f82f02af9961a4ec89b1" translate="yes" xml:space="preserve">
          <source>Ohai&amp;rsquo;s previous Digital Ocean plugin relied on hint data passed to Ohai as well and the drop&amp;rsquo;s internal network interface configuration. The Digital Ocean plugin has been rewritten to poll information from the Digital Ocean Metadata endpoint instead. This provides additional Digital Ocean specific droplet configuration information as well as external IP address information that was previously not available. With the addition of new network configuration data, the format has changed and users relying on the previous format will need to update their cookbooks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0252d57702da7f2cd09577883e09537d6dbb39" translate="yes" xml:space="preserve">
          <source>Ohai::Config removal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2136e0c9605d9167d8dbb8d4bea09c867d718a" translate="yes" xml:space="preserve">
          <source>Okay, time to build all the base plans. As before, there is a wrapper to help here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd7167d435884770759e61a086cf58c288a6069" translate="yes" xml:space="preserve">
          <source>Okay, time to build all the remaining plans. As before, there is a wrapper to help here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bafd0e90a2cbb37957b5f75a20726846c613f6c" translate="yes" xml:space="preserve">
          <source>Omit for Authentication Version 1. Specify for Authentication Version 1.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227f759da69a1bec264f808e55a8702b0f083c03" translate="yes" xml:space="preserve">
          <source>Omnitruck API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c076a85b9ab967130e6bb61fbe2a24fe7bab5b" translate="yes" xml:space="preserve">
          <source>Omnitruck accepts the following platforms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeff07552dd438f27d3997d2612efcce06ae03fa" translate="yes" xml:space="preserve">
          <source>On BSD and MacOS platforms, the &lt;code&gt;ifconfig&lt;/code&gt; command is used as source. Link speed may not be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452a2c1dd8bd7ecd66650ebd85246a4608662788" translate="yes" xml:space="preserve">
          <source>On CentOS and Red Hat Enterprise Linux systems, SELinux is enabled in enforcing mode by default. The Chef Infra Server does not have a profile available to run under SELinux. In order for the Chef Infra Server to run, SELinux must be disabled or set to &lt;code&gt;Permissive&lt;/code&gt; mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ff7b850bb263cad5d50766c96115f7c4570834" translate="yes" xml:space="preserve">
          <source>On CentOS and Red Hat Enterprise Linux systems, SELinux is enabled in enforcing mode by default. The Chef server does not have a profile available to run under SELinux. In order for the Chef server to run, SELinux must be disabled or set to &lt;code&gt;Permissive&lt;/code&gt; mode.</source>
          <target state="translated">В системах CentOS и Red Hat Enterprise Linux SELinux по умолчанию включен в принудительном режиме. На сервере Chef нет профиля, доступного для запуска под SELinux. Чтобы сервер Chef работал, SELinux должен быть отключен или установлен в &lt;code&gt;Permissive&lt;/code&gt; режим.</target>
        </trans-unit>
        <trans-unit id="79a7f3c2559a9486c2e7ecb9d1b7811803fde269" translate="yes" xml:space="preserve">
          <source>On CentOS and Red Hat Enterprise Linux systems, the Apache Qpid daemon is installed by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bea76d3640756e462fcc36251e2ff7dad8b866" translate="yes" xml:space="preserve">
          <source>On CentOS and Red Hat Enterprise Linux systems, the Apache Qpid daemon is installed by default. The Chef server uses RabbitMQ for messaging. Because both Apache Qpid and RabbitMQ share the same protocol, Apache Qpid must be disabled.</source>
          <target state="translated">На системах CentOS и Red Hat Enterprise Linux демон Apache Qpid устанавливается по умолчанию.Сервер Chef использует RabbitMQ для обмена сообщениями.Поскольку и Apache Qpid,и RabbitMQ работают по одному протоколу,Apache Qpid должен быть отключен.</target>
        </trans-unit>
        <trans-unit id="182759349952b40da41f7b9285452e9bc9dd820a" translate="yes" xml:space="preserve">
          <source>On Chef Server 12, the majority of the commands provided by this plugin can be accessed via &lt;code&gt;chef-server-ctl&lt;/code&gt; wrapper commands. &lt;a href=&quot;../../ctl_chef_server/index&quot;&gt;See chef-server-ctl for details&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b22789178ca5c0ba9dadc44ce87a10fff52c14c" translate="yes" xml:space="preserve">
          <source>On Linux machines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a1bdf28bfea5c7fc58ba82125fda6b4633d047" translate="yes" xml:space="preserve">
          <source>On Linux or macOS:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2d925e393dd85dfce7ff9aa2a9ed50da42aeb5" translate="yes" xml:space="preserve">
          <source>On Linux platforms, &lt;code&gt;/sys/class/net/#{iface}&lt;/code&gt; is used as source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4fb724138f144dc72718d4966e9a21004c2c38" translate="yes" xml:space="preserve">
          <source>On Linux platforms, any value in the &lt;code&gt;/sys/class/net/{interface}/bridge&lt;/code&gt; directory may be tested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1c89265e647c8232291318b42025ddf5302db6" translate="yes" xml:space="preserve">
          <source>On Linux, many binaries hardcode library dependencies to &lt;code&gt;/lib&lt;/code&gt; or &lt;code&gt;/lib64&lt;/code&gt; inside their ELF symbol table. Unfortunately, this means that Chef Habitat is unable to provide dependency isolation guarantees if packages are dependent on any operating system&amp;rsquo;s libraries in those directories. These Chef Habitat packages will also fail to run in minimal environments like containers built using &lt;code&gt;hab-pkg-export-docker&lt;/code&gt;, because there will not be a &lt;code&gt;glibc&lt;/code&gt; inside &lt;code&gt;/lib&lt;/code&gt; or &lt;code&gt;/lib64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ffc362b5493abd5f87fa94180742e4c1155828" translate="yes" xml:space="preserve">
          <source>On Linux, the Chef Habitat Supervisor will normally run as the &lt;code&gt;root&lt;/code&gt; user, and will start Chef Habitat services as the &lt;code&gt;pkg_svc_user&lt;/code&gt; specified by that service. However, in some deployment scenarios, it undesirable&amp;ndash;or even impossible&amp;ndash;to run the Supervisor as &lt;code&gt;root&lt;/code&gt;. The &lt;a href=&quot;https://www.openshift.com/&quot;&gt;OpenShift&lt;/a&gt; container platform, for instance, does not run containers as &lt;code&gt;root&lt;/code&gt; by default, but as randomly-chosen anonymous user IDs. From version 0.53.0 onward, the Chef Habitat Supervisor can now run as an arbitrary user, providing users with more flexibility in how and where the use Chef Habitat.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773465aed48179973c832b9aaf16d32acfd0867f" translate="yes" xml:space="preserve">
          <source>On Linux, the following error sometimes occurs when the permissions used to run the Chef Infra Client are incorrect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a3646286676a8ff8e5c7e508fcb4e611863a27" translate="yes" xml:space="preserve">
          <source>On Linux, the following error sometimes occurs when the permissions used to run the chef-client are incorrect:</source>
          <target state="translated">В Linux иногда возникает следующая ошибка,когда права,используемые для запуска chef-клиента,неправильные:</target>
        </trans-unit>
        <trans-unit id="70b706d85478f000d316df6c835e2713423acb41" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows machines, the default location for this file is &lt;code&gt;C:\chef\client.rb&lt;/code&gt;. On all other systems the default location for this file is &lt;code&gt;/etc/chef/client.rb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65398bfbc4692e87326bfd3c85ab1b4077f43c3" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows machines: The &lt;code&gt;knife bootstrap windows winrm&lt;/code&gt; subcommand is issued from a workstation. (This command is part of the knife windows plugin .) The hostname, IP address, or FQDN of the target node is issued as part of this command. A connection is established with the target node using WinRM over port 5985. (WinRM must be enabled with the corresponding firewall rules in place.)</source>
          <target state="translated">На компьютерах с Microsoft Windows: подкоманда &lt;code&gt;knife bootstrap windows winrm&lt;/code&gt; выдается с рабочей станции. (Эта команда является частью плагина Windows.) Имя хоста, IP-адрес или полное доменное имя целевого узла выдается как часть этой команды. Соединение с целевым узлом устанавливается через WinRM через порт 5985. (WinRM должен быть включен с соответствующими правилами брандмауэра).</target>
        </trans-unit>
        <trans-unit id="16496f6d1a25b570630eb4915a64618762d54d15" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows machines: The batch file that is derived from the windows-chef-client-msi.erb bootstrap template executes the &lt;code&gt;chef-client&lt;/code&gt; binary with a set of initial settings stored within &lt;code&gt;first-boot.json&lt;/code&gt; on the node. &lt;code&gt;first-boot.json&lt;/code&gt; is generated from the workstation as part of the initial &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand.</source>
          <target state="translated">На компьютерах с Microsoft Windows: командный файл, полученный из шаблона начальной загрузки windows-chef-client-msi.erb, выполняет двоичный файл &lt;code&gt;chef-client&lt;/code&gt; с набором начальных настроек, хранящихся в файле &lt;code&gt;first-boot.json&lt;/code&gt; на узле. &lt;code&gt;first-boot.json&lt;/code&gt; генерируется с рабочей станции как часть начальной подкоманды начальной &lt;code&gt;knife bootstrap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="343dbbcdc7110e60aa308aefb775c23d9ff02ba1" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows machines: The batch file that is derived from the windows-chef-client-msi.erb bootstrap template will make a request to the Chef website to get the .msi installer.</source>
          <target state="translated">На машинах под управлением Microsoft Windows:Пакетный файл,полученный из загрузочного шаблона windows-chef-client-msi.erb,сделает запрос на вебсайт Chef для получения программы установки .msi.</target>
        </trans-unit>
        <trans-unit id="670318e512345aec1b300f16a9280309101754a5" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows systems, invoke the Chef Software Install script using Windows PowerShell:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dea33acca04ed0dc928e594cbd5619c29769bf" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, &lt;code&gt;C:/opscode/Chef Workstation/bin&lt;/code&gt; must be before &lt;code&gt;C:/opscode/Chef Workstation/embedded/bin&lt;/code&gt; in the &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88de2422cde6186076d61303f8ae6ed79478e99e" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, &lt;code&gt;C:/opscode/chefdk/bin&lt;/code&gt; must be before &lt;code&gt;C:/opscode/chefdk/embedded/bin&lt;/code&gt; in the &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">В Microsoft Windows &lt;code&gt;C:/opscode/chefdk/bin&lt;/code&gt; должен находиться перед &lt;code&gt;C:/opscode/chefdk/embedded/bin&lt;/code&gt; в &lt;code&gt;PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bad52851e5648ea36b242593d9528cdee457fc99" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, Chef Infra Client must have two entries added to the &lt;code&gt;PATH&lt;/code&gt; environment variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368246ead035c4618565da9f8f51906ea1eecaca" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, both the &lt;code&gt;HUP&lt;/code&gt; and &lt;code&gt;QUIT&lt;/code&gt; signals are not supported.</source>
          <target state="translated">В Microsoft Windows сигналы &lt;code&gt;HUP&lt;/code&gt; и &lt;code&gt;QUIT&lt;/code&gt; не поддерживаются.</target>
        </trans-unit>
        <trans-unit id="8699dc42bdbf417f9c54a0873ac5bc6477a0f7b3" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, run Chef Infra Client periodically as a scheduled task. Scheduled tasks provides visibility, configurability, and reliability around log rotation and permissions. You can configure the Chef Infra Client to run as a scheduled task using the &lt;a href=&quot;../resources/chef_client_scheduled_task/index&quot;&gt;chef_client_scheduled_task&lt;/a&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5cb745762346338702046286d86f019bd21a29" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, running without elevated privileges (when they are necessary) is an issue that fails silently. It will appear that Chef Infra Client completed its run successfully, but the changes will not have been made. When this occurs, do one of the following to run Chef Infra Client as the administrator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9caecdb53b9bcd54c10d8cb0cb846896b0b562" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, running without elevated privileges (when they are necessary) is an issue that fails silently. It will appear that the chef-client completed its run successfully, but the changes will not have been made. When this occurs, do one of the following to run the chef-client as the administrator:</source>
          <target state="translated">В Microsoft Windows работа без повышенных привилегий (когда они необходимы)-это проблема,которая не решается бесшумно.Похоже,что chef-клиент завершил свою работу успешно,но изменения не были сделаны.Когда это произойдет,сделайте одно из следующих действий,чтобы запустить chef-клиента от имени администратора:</target>
        </trans-unit>
        <trans-unit id="ba1cbe6472c844031b05008cff4d4d55fb3b8302" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, the chef-client must have two entries added to the &lt;code&gt;PATH&lt;/code&gt; environment variable:</source>
          <target state="translated">В Microsoft Windows клиент-шеф-повар должен иметь две записи, добавленные в &lt;code&gt;PATH&lt;/code&gt; среды PATH :</target>
        </trans-unit>
        <trans-unit id="9796fd727d4772ea7c94baac4a97fd6100fc63d9" translate="yes" xml:space="preserve">
          <source>On RHEL and CentOS versions 7 and above, the FirewallD firewall is enabled by default. Issue the following command with root privileges to open ports 80 and 443:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33929f2fe4fa2f64b90825e51c3211492e728354" translate="yes" xml:space="preserve">
          <source>On UNIX and Linux-based machines: The second shell script executes the &lt;code&gt;chef-client&lt;/code&gt; binary with a set of initial settings stored within &lt;code&gt;first-boot.json&lt;/code&gt; on the node. &lt;code&gt;first-boot.json&lt;/code&gt; is generated from the workstation as part of the initial &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4561268a52644ba58958ad7f7f749665c3a9ae3" translate="yes" xml:space="preserve">
          <source>On UNIX, Linux, and macOS systems, invoke the Chef Software Install script with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1624e2497e194b004aeda82e1d91108dad27a89" translate="yes" xml:space="preserve">
          <source>On UNIX- and Linux-based machines, the default location for this file is &lt;code&gt;/etc/chef/client.rb&lt;/code&gt;; on Microsoft Windows machines, the default location for this file is &lt;code&gt;C:\chef\client.rb&lt;/code&gt;; use the &lt;code&gt;--config&lt;/code&gt; option from the command line to change this location</source>
          <target state="translated">На компьютерах под управлением UNIX и Linux расположение этого файла по умолчанию: &lt;code&gt;/etc/chef/client.rb&lt;/code&gt; ; на компьютерах с Microsoft Windows расположение этого файла по умолчанию &lt;code&gt;C:\chef\client.rb&lt;/code&gt; ; используйте параметр &lt;code&gt;--config&lt;/code&gt; из командной строки, чтобы изменить это местоположение</target>
        </trans-unit>
        <trans-unit id="eb6a0417265c19a5d2c1acee0a15dd9cb31f22c0" translate="yes" xml:space="preserve">
          <source>On UNIX- and Linux-based machines: The &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand is issued from a workstation. The hostname, IP address, or FQDN of the target node is issued as part of this command. An SSH connection is established with the target node using port 22. A shell script is assembled using the chef-full.erb (the default bootstrap template), and is then executed on the target node.</source>
          <target state="translated">На компьютерах под управлением UNIX и Linux: подкоманда &lt;code&gt;knife bootstrap&lt;/code&gt; запускается с рабочей станции. Имя хоста, IP-адрес или полное доменное имя целевого узла выдается как часть этой команды. Соединение SSH устанавливается с целевым узлом через порт 22. Сценарий оболочки собирается с использованием chef-full.erb (шаблон начальной загрузки по умолчанию) и затем выполняется на целевом узле.</target>
        </trans-unit>
        <trans-unit id="6a2383b62c6af52e0ad0e0ef081a386560b10341" translate="yes" xml:space="preserve">
          <source>On UNIX- and Linux-based machines: The second shell script executes the &lt;code&gt;chef-client&lt;/code&gt; binary with a set of initial settings stored within &lt;code&gt;first-boot.json&lt;/code&gt; on the node. &lt;code&gt;first-boot.json&lt;/code&gt; is generated from the workstation as part of the initial &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand.</source>
          <target state="translated">На компьютерах под управлением UNIX и Linux: второй сценарий оболочки выполняет двоичный файл &lt;code&gt;chef-client&lt;/code&gt; с набором начальных настроек, хранящихся в файле &lt;code&gt;first-boot.json&lt;/code&gt; на узле. &lt;code&gt;first-boot.json&lt;/code&gt; генерируется с рабочей станции как часть начальной подкоманды начальной &lt;code&gt;knife bootstrap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17bfb76a09e1abe0b70bc0feb7ee29cddee8c0b6" translate="yes" xml:space="preserve">
          <source>On UNIX- and Linux-based machines: The shell script that is derived from the chef-full.erb bootstrap template will make a request to the Chef website to get the most recent version of a second shell script (&lt;code&gt;install.sh&lt;/code&gt;).</source>
          <target state="translated">На компьютерах под управлением UNIX и Linux: Сценарий оболочки, полученный из шаблона начальной загрузки chef-full.erb, отправит на веб-сайт Chef самую последнюю версию второго сценария оболочки ( &lt;code&gt;install.sh&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="313a881ed5c9336816a694719f12472724fc8ca5" translate="yes" xml:space="preserve">
          <source>On UNIX-based systems, the best way to manipulate environment keys is with the &lt;code&gt;ENV&lt;/code&gt; variable in Ruby; however, this approach does not have the same permanent effect as using the &lt;strong&gt;env&lt;/strong&gt; resource.</source>
          <target state="translated">В системах на основе UNIX лучший способ манипулировать ключами среды - использовать переменную &lt;code&gt;ENV&lt;/code&gt; в Ruby; однако этот подход не имеет такого же постоянного эффекта, как использование ресурса &lt;strong&gt;env&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a423d7796b908d334076f96ee98b57c5f6c9b31a" translate="yes" xml:space="preserve">
          <source>On UNIX-based systems, the best way to manipulate environment keys is with the &lt;code&gt;ENV&lt;/code&gt; variable in Ruby; however, this approach does not have the same permanent effect as using the &lt;strong&gt;windows_env&lt;/strong&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b5782beb3afc99aaf03fbe383eaec2e2a8f545" translate="yes" xml:space="preserve">
          <source>On Ubuntu systems, AppArmor is enabled in enforcing mode by default. Chef products do not have a profile available to run under AppArmor. In order for the Chef products to run, AppArmor must set to &lt;code&gt;Complaining&lt;/code&gt; mode or disabled.</source>
          <target state="translated">В системах Ubuntu AppArmor по умолчанию включен в принудительном режиме. Продукты Chef не имеют профиля, доступного для запуска под AppArmor. Для запуска продуктов Chef AppArmor должен быть установлен в режим &lt;code&gt;Complaining&lt;/code&gt; или отключен.</target>
        </trans-unit>
        <trans-unit id="08103bc8083664f610de1cd76da40c7342e367bf" translate="yes" xml:space="preserve">
          <source>On Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d286384ea06b3aaaa403407478d0d17af49890" translate="yes" xml:space="preserve">
          <source>On Windows machines (&lt;code&gt;guest&lt;/code&gt; role only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8b228e93cc81666483c059942bcbfc39957250" translate="yes" xml:space="preserve">
          <source>On Windows, only a &lt;code&gt;plan.ps1&lt;/code&gt; will be used and a &lt;code&gt;plan.sh&lt;/code&gt; will only be used on Linux or Linux kernel 2. So if your application requires different plans for Linux and Linux Kernel 2, even without hooks and configuration templates, you will need to use target folders for each platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bed653db44c32e14209c39a98129c8859615297" translate="yes" xml:space="preserve">
          <source>On Windows, you can run the Supervisor as a Windows Service. You can use the &lt;code&gt;windows-service&lt;/code&gt; Chef Habitat package to host the Supervisor inside the Windows Service Control Manager:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b56364276b5f7e47e7f031287b139fc5b947d5" translate="yes" xml:space="preserve">
          <source>On Windows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1deddebe1e4dcd7e9c3a1ac4afe641e901d81547" translate="yes" xml:space="preserve">
          <source>On a Chef Infra Server node run: &lt;code&gt;chef-server-ctl backup --config-only&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d948d467d022a43665282aa38ba3d5de33fa9aa" translate="yes" xml:space="preserve">
          <source>On a Windows 10 host, Windows containers will always run inside of Hyper-V isolation. Kernel sharing Windows Server containers are only available on Windows Server 2016 hosts. On Windows Server 2016, Windows Server containers are the default container type but you can force &lt;code&gt;docker run&lt;/code&gt; to use Hyper-V containers by setting the &lt;code&gt;--isolation&lt;/code&gt; argument to &lt;code&gt;hyperv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849faa6623660e69ccbb69d2c7c6e6dfb3c6088f" translate="yes" xml:space="preserve">
          <source>On a follower chef-backend node, run &lt;code&gt;chef-backend-ctl backup&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ad4b38997d278134f70e33cebad00a1d4b8aa4" translate="yes" xml:space="preserve">
          <source>On a macOS, you may encounter an upload failure. To remediate this failure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe80ffc4b522274e0a2a7567acff1630c3db45e" translate="yes" xml:space="preserve">
          <source>On a management station:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d2ef1804f3c1de15580c04fd06e0405cd8eb4f" translate="yes" xml:space="preserve">
          <source>On a private Supermarket installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac47195d356aebbe10115cb37011b85648b0bf9" translate="yes" xml:space="preserve">
          <source>On a single frontend server, create an administrator and an organization:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9462f9c31f5e28fd41415ae6c4ab08169bf736" translate="yes" xml:space="preserve">
          <source>On a system with Chef Infra Client installed, use Ruby to make an authenticated request to the Chef Infra Server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1f150520161db2774bc1f4202cd6b8e9f83a63" translate="yes" xml:space="preserve">
          <source>On a system with the chef-client installed, use Ruby to make an authenticated request to the Chef server:</source>
          <target state="translated">В системе с установленным Chef-клиентом,используйте Ruby для выполнения аутентифицированного запроса к серверу Chef:</target>
        </trans-unit>
        <trans-unit id="569740701eb08d7abffe2e0867a87c8080793946" translate="yes" xml:space="preserve">
          <source>On an affected node (as root):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4481cab2b52de148719c9c15805d0da411f4976c" translate="yes" xml:space="preserve">
          <source>On an internet-connected host, download the Chef Automate command-line tool and use it to prepare an Airgap Installation Bundle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa34984dbaf59c2166c92c4c65dca53aa3939d8a" translate="yes" xml:space="preserve">
          <source>On an internet-connected host, follow the steps in &lt;a href=&quot;#create-an-airgap-installation-bundle&quot;&gt;Create an Airgap Installation Bundle&lt;/a&gt; to upgrade your Chef Automate command-line tool and prepare an Airgap Installation Bundle. Transfer the bundle and Chef Automate command-line tool to the airgapped host and run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8cc465946ad1264a8a82bd3170f1fabd33303a" translate="yes" xml:space="preserve">
          <source>On any Chef Infra Server frontend nodes using the Chef Backend cluster upgraded in the previous steps, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5376db2de350388bae78372be473e55ed23343" translate="yes" xml:space="preserve">
          <source>On any node in the backend HA cluster, run the following command for each node in the frontend group:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdbe8608718cde868058787153b3387b70c1818" translate="yes" xml:space="preserve">
          <source>On back-end servers in a high availability topology, Keepalived is used by the clustering service to determine whether a service should be running. If the &lt;code&gt;status&lt;/code&gt; subcommand is run against any of these nodes, a few things change:</source>
          <target state="translated">На внутренних серверах в топологии высокой доступности Keepalived используется службой кластеризации, чтобы определить, должна ли служба работать. Если подкоманда &lt;code&gt;status&lt;/code&gt; запускается для любого из этих узлов, меняется несколько вещей:</target>
        </trans-unit>
        <trans-unit id="cdea80b030a49c5b7b4e286c7c07762cb1523ac7" translate="yes" xml:space="preserve">
          <source>On certain platforms, and after a file has been moved into place, Chef Infra Client may modify file permissions to support features specific to those platforms. On platforms with SELinux enabled, Chef Infra Client will fix up the security contexts after a file has been moved into the correct location by running the &lt;code&gt;restorecon&lt;/code&gt; command. On the Microsoft Windows platform, Chef Infra Client will create files so that ACL inheritance works as expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c28b91c1eb2b868ebec6ab1f3d73fb9c6870b1" translate="yes" xml:space="preserve">
          <source>On certain platforms, and after a file has been moved into place, the chef-client may modify file permissions to support features specific to those platforms. On platforms with SELinux enabled, the chef-client will fix up the security contexts after a file has been moved into the correct location by running the &lt;code&gt;restorecon&lt;/code&gt; command. On the Microsoft Windows platform, the chef-client will create files so that ACL inheritance works as expected.</source>
          <target state="translated">На некоторых платформах и после перемещения файла на место клиент-шеф-повар может изменять разрешения на файлы для поддержки функций, специфичных для этих платформ. На платформах с включенным SELinux, chef-клиент исправит контексты безопасности после перемещения файла в правильное местоположение с помощью команды &lt;code&gt;restorecon&lt;/code&gt; . На платформе Microsoft Windows клиент-шеф-повар создает файлы, чтобы наследование ACL работало должным образом.</target>
        </trans-unit>
        <trans-unit id="397b1d87a68ee499eb8d20604fd518f5065f9631" translate="yes" xml:space="preserve">
          <source>On each front end server in the Chef Infra Server configuration, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da00d86a94d199982306c9dca6ede0247c835d7b" translate="yes" xml:space="preserve">
          <source>On each front end server in the Chef server configuration, run:</source>
          <target state="translated">На каждом внешнем сервере в конфигурации сервера Chef запустите:</target>
        </trans-unit>
        <trans-unit id="6a92e53cd0fa6d09afd995fe3de9d20d88ce5150" translate="yes" xml:space="preserve">
          <source>On each frontend machine, copy the generated &lt;code&gt;chef-server.rb&lt;/code&gt;.fqdn to &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a315c91c485a1c9c5da4799a92fc059add95a459" translate="yes" xml:space="preserve">
          <source>On each frontend machine, install the &lt;code&gt;chef-server-core&lt;/code&gt; package (version 12.4.0 or higher).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b38ca8b622c1dcf6b0519b134c3fb1512e5e9b" translate="yes" xml:space="preserve">
          <source>On each frontend machine, with root permission, run the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f23a8e82ff5b901bd486744ba5aecb39b6a484" translate="yes" xml:space="preserve">
          <source>On each host, its own status is reported first, and then the status of its remote partner.</source>
          <target state="translated">На каждом хосте сначала сообщается его собственный статус,а затем статус его удаленного партнера.</target>
        </trans-unit>
        <trans-unit id="8b6f607a238869efe39e4d13a27d7661059f0888" translate="yes" xml:space="preserve">
          <source>On each of the two new nodes, install &lt;code&gt;chef-backend-ctl&lt;/code&gt; and join to the cluster using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c383f927bee884233d1cab2f6d2be11c1e4bc4c" translate="yes" xml:space="preserve">
          <source>On each workstation, this directory is the location into which SSL certificates are placed after they are downloaded from the Chef Infra Server using the &lt;code&gt;knife ssl fetch&lt;/code&gt; subcommand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55e6f199c58d8301a6279e3c9a337d9f59d0f5d" translate="yes" xml:space="preserve">
          <source>On each workstation, this directory is the location into which SSL certificates are placed after they are downloaded from the Chef server using the &lt;code&gt;knife ssl fetch&lt;/code&gt; subcommand</source>
          <target state="translated">На каждой рабочей станции этот каталог является местоположением, в которое помещаются сертификаты SSL после их загрузки с сервера Chef с помощью подкоманды &lt;code&gt;knife ssl fetch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20576a255bf401b4d71b701d4a198dc60a173a8a" translate="yes" xml:space="preserve">
          <source>On every node, this directory is the location into which SSL certificates are placed when a node has been bootstrapped with Chef Infra Client from a workstation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d942741d704a7c8e2208e372fd1156d9ed3167" translate="yes" xml:space="preserve">
          <source>On every node, this directory is the location into which SSL certificates are placed when a node has been bootstrapped with the chef-client from a workstation</source>
          <target state="translated">На каждом узле этот каталог является местом,в которое помещаются SSL-сертификаты,когда узел загружается с рабочей станции вместе с chef-клиентом.</target>
        </trans-unit>
        <trans-unit id="09ea2a45aa1b2d2c8f7529c5bb80efa5192d1ac5" translate="yes" xml:space="preserve">
          <source>On failover or failback, this field indicates whether connection drain will be honored. Setting this to true has the following effect: connections to the old active pool are not drained. Connections to the new active pool use the timeout of 10 min (currently fixed). Setting to false has the following effect: both old and new connections will have a drain timeout of 10 min. This can be set to true only if the protocol is TCP. The default is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109975755c541ae687ae2fc1ac562b748c3edd2e" translate="yes" xml:space="preserve">
          <source>On macOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d844bad2c4b7dd8decaca41491d3402a1a4db06f" translate="yes" xml:space="preserve">
          <source>On new Windows machines, PowerShell scripts will not work until an administrator runs the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574c7dd5f67688d57fc8f150c35699097fc0ac34" translate="yes" xml:space="preserve">
          <source>On new Windows machines, commands cannot be appended to &lt;code&gt;$PROFILE&lt;/code&gt; if the folder does not exist, or if there is a new user profile. This will result in an error similar to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d155891143b7ee8fe710f79274cc3cf70b1f8002" translate="yes" xml:space="preserve">
          <source>On one frontend server, follow the &lt;a href=&quot;../upgrade_server/index#standalone&quot;&gt;standalone upgrade process&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94de556a0cff5b272dc7897bb35db07000e997a4" translate="yes" xml:space="preserve">
          <source>On some distributions you may need to install additional libraries. After you install the Chef Workstation package from the terminal, the post-install message will tell you which, if any, additional libraries are required to run the Chef Workstation App.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e2d59aa18e6b5de9f099fd3974fb8890699eba" translate="yes" xml:space="preserve">
          <source>On some distributions you may need to install additional libraries. The post-install message shown when you install the Chef Workstation package from the terminal will tell you which &amp;ndash; if any &amp;ndash; additional libraries are required to run Chef Workstation App.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875763cd2911268cacc6e247c29943f578ef925f" translate="yes" xml:space="preserve">
          <source>On targets that are using SystemV services, the existing run levels can also be checked:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970b62aed96e7fcbd70747f466af5cb23755f5c1" translate="yes" xml:space="preserve">
          <source>On the &lt;strong&gt;Users&lt;/strong&gt; list page, select the user name; use the search filter in the upper right if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732580d4246f832a47a64fd871c12d920fc846d8" translate="yes" xml:space="preserve">
          <source>On the Automate 2 server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1beb460ccddbd23da25b5a3d58403da66be898b7" translate="yes" xml:space="preserve">
          <source>On the Chef Infra Server host:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f7c8df0a8fb765a26629455ee267b7590d5c25" translate="yes" xml:space="preserve">
          <source>On the Chef Infra Server machine create the &lt;code&gt;ORGANIZATION-validator.pem&lt;/code&gt; from the command line using &lt;code&gt;chef-server-ctl&lt;/code&gt;. Run the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c611ac4b08592923a77cbf1f11c82729cbc27ae" translate="yes" xml:space="preserve">
          <source>On the Chef Infra Server machine create the &lt;code&gt;USER.pem&lt;/code&gt; from the command line using &lt;code&gt;chef-server-ctl&lt;/code&gt;. Run the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7501282f4a40c26c40638b1772a6d3980fca4002" translate="yes" xml:space="preserve">
          <source>On the Chef server machine create the ORGANIZATION-validator.pem from the command line using chef-server-ctl. Run the following command:</source>
          <target state="translated">На машине сервера Chef создайте ORGANIZATION-validator.pem из командной строки,используя chef-server-ctl.Выполните следующую команду:</target>
        </trans-unit>
        <trans-unit id="b1d1a7ae2081d556a1f21c006a85a4b3096c9241" translate="yes" xml:space="preserve">
          <source>On the Chef server machine create the USER.pem from the command line using chef-server-ctl. Run the following command:</source>
          <target state="translated">На машине сервера Chef создайте USER.pem из командной строки,используя chef-server-ctl.Выполните следующую команду:</target>
        </trans-unit>
        <trans-unit id="6b23803eb76f39c0291569832f4d9123c381878b" translate="yes" xml:space="preserve">
          <source>On the Chef server, run:</source>
          <target state="translated">На сервере Шеф-повара,беги:</target>
        </trans-unit>
        <trans-unit id="047471c3ee14aef4c152333cb9da1e88dcc8058c" translate="yes" xml:space="preserve">
          <source>On the Permissions screen, choose Direct Attach. Select the AWS-managed IAM Profile named &amp;ldquo;ReadOnlyAccess.&amp;rdquo; If you wish to restrict the user further, you may do so; see individual Chef InSpec resources to identify which permissions are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d51f54f44aafe928977a460c0e47264577d428c" translate="yes" xml:space="preserve">
          <source>On the Runner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6135e64d97b823b56a7244f3a04f3be704d7cb6f" translate="yes" xml:space="preserve">
          <source>On the Slack page, select a channel or user for the notification. Slack will create the new webhook and then provide a webhook URL for you to copy. After entering a recipient, use the &lt;strong&gt;Add Incoming WebHooks Integration&lt;/strong&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71352cffb0ae476e0543cb15b1904f7ebc5d70f" translate="yes" xml:space="preserve">
          <source>On the Windows platform, the &lt;code&gt;Get-NetAdapter&lt;/code&gt; cmdlet is associated with the &lt;code&gt;Get-NetAdapterBinding&lt;/code&gt; cmdlet and returns the &lt;code&gt;ComponentID ms_bridge&lt;/code&gt; value as a JSON object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c00f082e8767d5911d986c2d39057f994921102" translate="yes" xml:space="preserve">
          <source>On the Windows platform, the &lt;code&gt;Get-NetAdapter&lt;/code&gt; cmdlet is used as source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6e4655cc83002cb5be70231ad4ea82c50f8d20" translate="yes" xml:space="preserve">
          <source>On the Workflow server, select &lt;strong&gt;Organizations&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b73c79ee302f34188368c4c562d2546bc2786ef" translate="yes" xml:space="preserve">
          <source>On the back-end node that is currently the backup server, it is normal to see only one running process: Keepalived</source>
          <target state="translated">На внутреннем узле,который в настоящее время является резервным сервером,нормально видеть только один запущенный процесс:Хранится</target>
        </trans-unit>
        <trans-unit id="5cf476b701a4fcc383b14881b2d4c613693ebf4a" translate="yes" xml:space="preserve">
          <source>On the back-end node that is currently the master server, it is normal to see all services running. It is also normal to see some services in a down state if the server, on reboot, did not attempt to start the services because Keepalived determines which services are restarted based on the state of the cluster</source>
          <target state="translated">На внутреннем узле,который в настоящее время является главным сервером,нормально видеть,что все службы запущены.Также нормально видеть некоторые службы в выключенном состоянии,если сервер при перезагрузке не пытался запустить службы,потому что Keepalived определяет,какие службы перезагружаются,основываясь на состоянии кластера.</target>
        </trans-unit>
        <trans-unit id="055a58db2d221da1a4cda27382b28bf8c7bc5ada" translate="yes" xml:space="preserve">
          <source>On the command line, run &lt;code&gt;chef-automate external-cert show&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d67cd02ae7382189d9a5b01a22caa2eac612f1" translate="yes" xml:space="preserve">
          <source>On the first frontend node, assuming that the generated configuration was copied as detailed in Step 4:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2ded272514681d0bb980b65946e71627f249e9" translate="yes" xml:space="preserve">
          <source>On the leader, run the following command to take the node down for the upgrade:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8096151afc36ee2e91794eba1d1801cdb54ccba5" translate="yes" xml:space="preserve">
          <source>On the new frontend node run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47464c9859b237aa4a5dbd23676fb6705fcb2d35" translate="yes" xml:space="preserve">
          <source>On the new frontend run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868f3ea02244507dbe6f964d8bb5a49de7776532" translate="yes" xml:space="preserve">
          <source>On the new frontend, &lt;strong&gt;as root&lt;/strong&gt; run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b278784d189f1994c9b6af7ff2d7b647cba715" translate="yes" xml:space="preserve">
          <source>On the primary Chef Automate server edit the &lt;code&gt;/etc/delivery/delivery.rb&lt;/code&gt; file to add the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7365ee45e89e70361122a9d67bad6f002d22c24" translate="yes" xml:space="preserve">
          <source>On the primary back end server, stop all services except Keepalived. With Chef server 12, the Keepalived service will not be stopped with the following command:</source>
          <target state="translated">На основном бэк-энд-сервере остановите все службы,кроме Keepalived.На сервере Chef 12 служба Keepalived не будет остановлена следующей командой:</target>
        </trans-unit>
        <trans-unit id="7d12ace2b8b23642af0f57de5701d8917d3ba456" translate="yes" xml:space="preserve">
          <source>On the primary backend server, define it as the primary shared device. For Red Hat and CentOS 6:</source>
          <target state="translated">На основном внутреннем сервере определите его как основное разделяемое устройство.Для Red Hat и CentOS 6:</target>
        </trans-unit>
        <trans-unit id="1891fe4f103048fbf7f2a583f13f651454df0b7d" translate="yes" xml:space="preserve">
          <source>On the primary backend server, mount the file system. For example, a file system named &lt;code&gt;ext4&lt;/code&gt;:</source>
          <target state="translated">На основном внутреннем сервере смонтируйте файловую систему. Например, файловая система с именем &lt;code&gt;ext4&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="77580bf1b306b71080ca688d566fb791807b4dda" translate="yes" xml:space="preserve">
          <source>On the restore host, download and unzip the Chef Automate command-line tool:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8621fee9d6e0a4fda48a49988b2f4ee3b66db994" translate="yes" xml:space="preserve">
          <source>On the secondary node, the status will look similar to the following:</source>
          <target state="translated">На вторичном узле статус будет выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="98389e4cf5bc57c2296544f515c52337cf587947" translate="yes" xml:space="preserve">
          <source>On the standby server, create the &lt;code&gt;/etc/chef/trusted_certs&lt;/code&gt; directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826c582432b182fb30c0bccdba3ec9cf835e8dcc" translate="yes" xml:space="preserve">
          <source>On the standby server, create the directory &lt;code&gt;/opt/delivery/embedded/.ssh/authorized_keys&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4e09eeb930c683ce202a1c7a0afdcd44953415" translate="yes" xml:space="preserve">
          <source>On the standby server, run the following command as the root user:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b656b0d78be7e37ccfb709738d5a720d1b2539" translate="yes" xml:space="preserve">
          <source>On the surviving node, run the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed297e2dfa29afe293227d12cd27edc457be4f5" translate="yes" xml:space="preserve">
          <source>On the workstation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0729479b3001f4ae9dd73c24561d084d32b741" translate="yes" xml:space="preserve">
          <source>On versions 12.13 and prior, simply add the &lt;code&gt;'root_url'&lt;/code&gt; and &lt;code&gt;token&lt;/code&gt; values in &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16b15e139aeebbe89784536e02a821d6de4a2a0" translate="yes" xml:space="preserve">
          <source>On windows a User&amp;rsquo;s environment variable may obscure the local machine (system) environment variable. The correct environment variable may be tested as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622aa75c8189f16e3292fd27dde23db469c057eb" translate="yes" xml:space="preserve">
          <source>On your Chef Infra Server, if the &lt;code&gt;chef-server.rb&lt;/code&gt; file does not exist, create it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2a935ca8eeb832f05fd7da89d68697136594f2" translate="yes" xml:space="preserve">
          <source>On your Chef server, if the &lt;code&gt;chef-server.rb&lt;/code&gt; file does not exist, create it.</source>
          <target state="translated">На вашем сервере Chef, если файл &lt;code&gt;chef-server.rb&lt;/code&gt; не существует, создайте его.</target>
        </trans-unit>
        <trans-unit id="dc88a5417aa52fa635ec3f0a0d01675d90d034d0" translate="yes" xml:space="preserve">
          <source>On your workstation, generate a new cookbook using the &lt;code&gt;chef&lt;/code&gt; command line interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317bc2b67c6e502682df4197ff58f92a9c884d33" translate="yes" xml:space="preserve">
          <source>Onboard Users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67751fe01dbf4d949e5469ad166c8c38844bf7b7" translate="yes" xml:space="preserve">
          <source>Onboarding users to a project is different depending on whether you have integrated with GitHub or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcd3d4a5d3fc9abacab751f3a01ded43fbfd07a" translate="yes" xml:space="preserve">
          <source>Once Chef Habitat has been installed, the &lt;code&gt;hab&lt;/code&gt; CLI makes it easy to get your workstation configured by guiding through the setup process. To set up your workstation, run &lt;code&gt;hab cli setup&lt;/code&gt; and follow the instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4425f2a669fee0404b6ad650f8d136c6c81e3a58" translate="yes" xml:space="preserve">
          <source>Once Chef InSpec is installed, run &lt;code&gt;inspec version&lt;/code&gt; to verify that the installation was successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f2878db2976e4e178bf1a4211510d4594f60aa" translate="yes" xml:space="preserve">
          <source>Once Docker images are pushed to ECR, they may be run on Amazon&amp;rsquo;s ECS within a &lt;a href=&quot;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html&quot;&gt;Task Definition&lt;/a&gt; which may be expressed as a &lt;a href=&quot;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cmd-ecs-cli-compose.html&quot;&gt;Docker Compose file&lt;/a&gt;. Here is an example of a Tomcat application using a Mongo database demonstrating using Chef Habitat-managed containers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83a40406b7b80d85530501e173461862426314a" translate="yes" xml:space="preserve">
          <source>Once Workflow is set up, you will have a usable &lt;strong&gt;LDAP&lt;/strong&gt; option in the Workflow &lt;strong&gt;Users&lt;/strong&gt; page that allows you to find users through your LDAP database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71f809ac2af23b5542584fef416ffd3f656e6dd" translate="yes" xml:space="preserve">
          <source>Once a cookbook version is frozen, only by using the &lt;code&gt;--force&lt;/code&gt; option can an update be made. For example:</source>
          <target state="translated">После того, как версия поваренной книги заморожена, обновление можно выполнить только с помощью параметра &lt;code&gt;--force&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="c53e951342a4c42ee41298a40e9d964982a557d5" translate="yes" xml:space="preserve">
          <source>Once a project is created, you will want to add users to that project so that they can submit changes and collaborate via the Chef Automate shared workflow using GitHub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5880abb042777415264de426871a3ea0b3c80c" translate="yes" xml:space="preserve">
          <source>Once a project is created, you will want to add users to that project so that they can submit changes and collaborate via the Chef Automate shared workflow. These procedures apply to Chef Automate deployments that are using the internal Chef Automate git capabilities and are not integrated to GitHub Enterprise or &lt;a href=&quot;https://github.com/&quot;&gt;GitHub.com&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cbe26cffc78310e1e08135adc1f95239292968" translate="yes" xml:space="preserve">
          <source>Once a user directory entry has been retrieved, the password can be verified, and the group query can be constructed from it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a58c10e7c743b48e41286ffafee1df7f1b86ba" translate="yes" xml:space="preserve">
          <source>Once an SMTP server is configured for Workflow, users that belong to that enterprise may subscribe to notifications that are sent from any project that exists in the same enterprise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d325d2ec5c2400c3fe6d5dedaf7ded3e7f65c27c" translate="yes" xml:space="preserve">
          <source>Once an environment exists on the Chef Infra Server, a node can be associated with that environment using the &lt;code&gt;chef_environment&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd6e5d05f9032315771b40d7081e31104c17c29" translate="yes" xml:space="preserve">
          <source>Once built, the custom resource may be used in a recipe just like the any of the resources that are built into Chef. The resource gets its name from the cookbook and from the file name in the &lt;code&gt;/resources&lt;/code&gt; directory, with an underscore (&lt;code&gt;_&lt;/code&gt;) separating them. For example, a cookbook named &lt;code&gt;exampleco&lt;/code&gt; with a custom resource named &lt;code&gt;site.rb&lt;/code&gt; is used in a recipe like this:</source>
          <target state="translated">После создания пользовательский ресурс может использоваться в рецепте точно так же, как любой из ресурсов, встроенных в Chef. Ресурс получает свое имя из поваренной книги и из имени файла в каталоге &lt;code&gt;/resources&lt;/code&gt; с подчеркиванием ( &lt;code&gt;_&lt;/code&gt; ), разделяющим их. Например, поваренная книга с именем &lt;code&gt;exampleco&lt;/code&gt; с пользовательским ресурсом с именем &lt;code&gt;site.rb&lt;/code&gt; используется в таком рецепте:</target>
        </trans-unit>
        <trans-unit id="7fa1afcefc50b066dd36fca5bc02ff218f3d4280" translate="yes" xml:space="preserve">
          <source>Once built, the custom resource may be used in a recipe just like the any of the resources that are built into Chef. The resource gets its name from the cookbook and from the file name in the &lt;code&gt;/resources&lt;/code&gt; directory, with an underscore (&lt;code&gt;_&lt;/code&gt;) separating them. For example, a cookbook named &lt;code&gt;host&lt;/code&gt; with a custom resource in the &lt;code&gt;/resources&lt;/code&gt; directory named &lt;code&gt;porter.rb&lt;/code&gt;. Use it in a recipe like this:</source>
          <target state="translated">После создания пользовательский ресурс может использоваться в рецепте точно так же, как любой из ресурсов, встроенных в Chef. Ресурс получает свое имя из поваренной книги и из имени файла в каталоге &lt;code&gt;/resources&lt;/code&gt; с подчеркиванием ( &lt;code&gt;_&lt;/code&gt; ), разделяющим их. Например, поваренная книга с именем &lt;code&gt;host&lt;/code&gt; с пользовательским ресурсом в каталоге &lt;code&gt;/resources&lt;/code&gt; с именем &lt;code&gt;porter.rb&lt;/code&gt; . Используйте это в рецепте как это:</target>
        </trans-unit>
        <trans-unit id="71b07f9f3aa3c33d8845bd0aa1b56e87097c2f0e" translate="yes" xml:space="preserve">
          <source>Once configured, you can get the &lt;code&gt;chef_oauth2_app_id&lt;/code&gt; and &lt;code&gt;chef_oauth2_secret&lt;/code&gt; values from your Chef Infra Server within &lt;code&gt;/etc/opscode/oc-id-applications/supermarket.json&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2bc041430300e402b91be0e36b32f16ccdd5a4" translate="yes" xml:space="preserve">
          <source>Once created, an environment can be managed in several ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a084482aaa019738418297824ee1599fafdff0ab" translate="yes" xml:space="preserve">
          <source>Once declared, a template can then use the helper methods to build a file. For example:</source>
          <target state="translated">После объявления шаблон может использовать вспомогательные методы для построения файла.Например:</target>
        </trans-unit>
        <trans-unit id="fd341456c0b5d409866a5fbb5ecfa9a68436d52a" translate="yes" xml:space="preserve">
          <source>Once defined in the &lt;code&gt;inspec.yml&lt;/code&gt;, controls from the included profiles can be used! Let&amp;rsquo;s look at some examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81dc498d34423b2c8d673876d9bcd83b480d09c5" translate="yes" xml:space="preserve">
          <source>Once in chef-shell, commands can be run against objects as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531bce270c782df6636dab4fb0f8c9af22eb6a6f" translate="yes" xml:space="preserve">
          <source>Once inside the shell your resource will be available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5736e70259cbbc001d84e697170cd8c0f5d30a" translate="yes" xml:space="preserve">
          <source>Once rules have been successfully applied, the banner will be dismissed until the next time there are &lt;em&gt;pending edits&lt;/em&gt; to any project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3179c63adb89a23df240dd53ad4406ab91693023" translate="yes" xml:space="preserve">
          <source>Once the backup has completed, initiate the migration process. If your host is internet-connected, run the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1c002654d608703e5346f1a81cdec3e9463a68" translate="yes" xml:space="preserve">
          <source>Once the cookbook is available in Chef Infra Server, you will need to add the &lt;code&gt;audit::default&lt;/code&gt; recipe to the run-list of each node. Compliance profiles are added using the &lt;code&gt;node['audit']['profiles']&lt;/code&gt; attribute. A complete list of the configurations is documented on GitHub in the &lt;a href=&quot;https://github.com/chef-cookbooks/audit/blob/master/README.md&quot;&gt;Audit Cookbook Repository&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6524390af8b9ec8935716a1811c03f18d8e4b6e4" translate="yes" xml:space="preserve">
          <source>Once the instance is running, upgrade the installed packages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1cf3799a7044d1c930fd1c3d98537f9c70388c7" translate="yes" xml:space="preserve">
          <source>Once the new host is identified and the DRBD devices on that host are ready, bring up DRBD and get it talking to the secondary back-end server. This secondary server should not want to be the primary server; it should be waiting for the old primary server to return. Start up DRBD on the new host and verify that it is listening on the correct port and that the status in &lt;code&gt;/proc/drbd&lt;/code&gt; is reporting that the host is up, but in the &lt;code&gt;WFConnect: waiting for connection&lt;/code&gt; state.</source>
          <target state="translated">Как только новый хост идентифицирован и устройства DRBD на этом хосте готовы, вызовите DRBD и подключите его к вторичному внутреннему серверу. Этот вторичный сервер не должен быть основным сервером; он должен ждать возврата старого основного сервера. Запустите DRBD на новом хосте и убедитесь, что он прослушивает правильный порт и что состояние в &lt;code&gt;/proc/drbd&lt;/code&gt; сообщает о том, что хост работает, но в &lt;code&gt;WFConnect: waiting for connection&lt;/code&gt; состояния соединения .</target>
        </trans-unit>
        <trans-unit id="46554affc8defb28dd62a8db92aba1950246c5dd" translate="yes" xml:space="preserve">
          <source>Once the repository is successfully cloned, move into the &lt;code&gt;on-prem-builder&lt;/code&gt; repository:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97da81331eeed4075c83fe3a8e68845e81ba0e2f" translate="yes" xml:space="preserve">
          <source>Once the root cause of the service-level problems has been identified and solved, the failed node should be able to rejoin the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f397ea01a8fa94d7334aaa141e1b6ef305e2c12" translate="yes" xml:space="preserve">
          <source>Once the set has finished building, we are going to use the newly built Studio immediately and move the artifacts to the side for more use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1364a39f5f010fbbe58a20ff0a87a77b4493ad" translate="yes" xml:space="preserve">
          <source>Once the test is successful, select &lt;strong&gt;Create Data Feed&lt;/strong&gt; to save your Data Feed configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aaa8bb8bcc2fc0c321cf0017686cc8e7e10b315" translate="yes" xml:space="preserve">
          <source>Once the update leader finds a new version, it will update and wait until all other alive members in the service group have also been updated before once again attempting to find a newer version of software to update to. Updates will happen more or less one at a time until completion with the exception of a new node being introduced into the service group during the middle of an update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2ce60843940d27d9163942fada7d389fdc2cd5" translate="yes" xml:space="preserve">
          <source>Once the updated file has been copied to each of the remaining frontends, perform the &lt;a href=&quot;../upgrade_server/index#standalone&quot;&gt;standalone upgrade process&lt;/a&gt; on each of the frontend servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a84ac08096a622de66d7d36542a6dd320edf7b9" translate="yes" xml:space="preserve">
          <source>Once the user has provided a username and password at the sign in screen, Chef Automate goes through a sequence of operations to complete the sign in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64fc9dc2513d0e9f1dcaeac56754ad5d3c67a14c" translate="yes" xml:space="preserve">
          <source>Once the workstation machine is configured, it can be used to install Chef Infra Client on one (or more) nodes across the organization using a knife bootstrap operation. The &lt;code&gt;knife bootstrap&lt;/code&gt; command is used to SSH into the target machine, and then do what is needed to allow Chef Infra Client to run on the node. It will install the Chef Infra Client executable (if necessary), generate keys, and register the node with the Chef Infra Server. The bootstrap operation requires the IP address or FQDN of the target system, the SSH credentials (username, password or identity file) for an account that has root access to the node, and (if the operating system is not Ubuntu, which is the default distribution used by &lt;code&gt;knife bootstrap&lt;/code&gt;) the operating system running on the target system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9def529eff21beaa53f0aa595e1a8757e22767a5" translate="yes" xml:space="preserve">
          <source>Once the workstation machine is configured, it can be used to install the chef-client on one (or more) nodes across the organization using a knife bootstrap operation. The &lt;code&gt;knife bootstrap&lt;/code&gt; command is used to SSH into the target machine, and then do what is needed to allow the chef-client to run on the node. It will install the chef-client executable (if necessary), generate keys, and register the node with the Chef server. The bootstrap operation requires the IP address or FQDN of the target system, the SSH credentials (username, password or identity file) for an account that has root access to the node, and (if the operating system is not Ubuntu, which is the default distribution used by &lt;code&gt;knife bootstrap&lt;/code&gt;) the operating system running on the target system.</source>
          <target state="translated">После настройки компьютера рабочей станции его можно использовать для установки клиента-шеф-повара на один (или несколько) узлов в организации с помощью операции начальной загрузки ножа. Команда &amp;laquo; &lt;code&gt;knife bootstrap&lt;/code&gt; используется для SSH на целевой машине, а затем делает то, что необходимо, чтобы клиент-шеф работал на узле. Он установит исполняемый файл chef-client (при необходимости), сгенерирует ключи и зарегистрирует узел на сервере Chef. Для операции начальной загрузки требуются IP-адрес или полное доменное имя целевой системы, учетные данные SSH (имя пользователя, пароль или файл идентификации) для учетной записи, которая имеет корневой доступ к узлу, и (если операционная система не является Ubuntu, которая используется по умолчанию). дистрибутив, используемый &lt;code&gt;knife bootstrap&lt;/code&gt; ) операционной системы, работающей на целевой системе.</target>
        </trans-unit>
        <trans-unit id="00fc186d2f7544e60fcf8412021cffa8938c5cb2" translate="yes" xml:space="preserve">
          <source>Once written, a custom resource may be used in a recipe just like any resource that is built into Chef Infra. A custom resource gets its name from the cookbook and the name of its file in the &lt;code&gt;/resources&lt;/code&gt; directory with an underscore (&lt;code&gt;_&lt;/code&gt;) separating them. For example, a cookbook named &lt;code&gt;host&lt;/code&gt; with a custom resource file named &lt;code&gt;porter.rb&lt;/code&gt; in the &lt;code&gt;/resources&lt;/code&gt; directory would be called &lt;code&gt;host_porter&lt;/code&gt;. Use it in a recipe like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86e46ecc3070c7099f6c646bdc481609a70c230" translate="yes" xml:space="preserve">
          <source>Once written, the custom resource may be used in a recipe just like any of the resources that are built into Chef Infra Client. The resource gets its name from the cookbook and from the file name in the &lt;code&gt;/resources&lt;/code&gt; directory, with an underscore (&lt;code&gt;_&lt;/code&gt;) separating them. For example, a cookbook named &lt;code&gt;exampleco&lt;/code&gt; with a custom resource named &lt;code&gt;site.rb&lt;/code&gt; is used in a recipe like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec25149de2bcb9314f1409e852310e887e9948b" translate="yes" xml:space="preserve">
          <source>Once you are done writing your plan, use the studio to &lt;a href=&quot;../pkg_build/index&quot;&gt;build your package&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85aa97cc8ca7c6aebabf39bda163310eb4089931" translate="yes" xml:space="preserve">
          <source>Once you are familiar with Test Kitchen, you can perform all of the steps at once, including cleanup, with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7cd121b7bc3a7fd1a47b3a0bd52a929111a2ba" translate="yes" xml:space="preserve">
          <source>Once you are signed in to the Chef Habitat Builder UI, select the &lt;strong&gt;New Origin&lt;/strong&gt; button and enter &lt;code&gt;core&lt;/code&gt; as the name for the origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be436de018b2ed2454627920dc39505d1c549ac" translate="yes" xml:space="preserve">
          <source>Once you correct and save the FQDN, run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51873aef602253604235e1430043251a469dfefa" translate="yes" xml:space="preserve">
          <source>Once you define your set of projects with their contained ingest rules and conditions, use the &lt;strong&gt;Update Projects&lt;/strong&gt; button on the bottom of any page to apply those definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc7af366e35436ebcdc2b0a753ff2d34b5fd00f" translate="yes" xml:space="preserve">
          <source>Once you downloaded the latest &lt;a href=&quot;https://downloads.chef.io/inspec&quot;&gt;Chef InSpec package&lt;/a&gt; relevant to your Microsoft version, double-click the &lt;code&gt;.msi&lt;/code&gt; file to launch the installer and follow the prompts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44149ba2845ad83fb5d3a54aa1aab25c675e90b3" translate="yes" xml:space="preserve">
          <source>Once you have a secret, you can add it to your local &lt;code&gt;hab&lt;/code&gt; configuration file, preferably by running &lt;code&gt;hab cli setup&lt;/code&gt; and following the interactive prompts. Alternatively, you can export it into your environment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8735c82ed441812595af04d7792446032a5f8e70" translate="yes" xml:space="preserve">
          <source>Once you have an API token, you can either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e948c3a23e65eac3b4906aecb78e04f8f49a88" translate="yes" xml:space="preserve">
          <source>Once you have an Admin API token, you can use it to make requests by passing it in the &lt;code&gt;api-token&lt;/code&gt; header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688684d148493e3a72ac008eea187edc52d0859a" translate="yes" xml:space="preserve">
          <source>Once you have downloaded the &lt;code&gt;hab&lt;/code&gt; CLI, unzip it onto your machine. Unzipping to &lt;code&gt;/usr/local/bin&lt;/code&gt; should place it on your &lt;code&gt;PATH&lt;/code&gt;. In order to use the Chef Habitat Studio, you&amp;rsquo;ll also need to install Docker for Mac.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95465c589f0a30d47c203e07fefa5d26cdcc6911" translate="yes" xml:space="preserve">
          <source>Once you have downloaded the package, extract the hab binary with tar to &lt;code&gt;/usr/local/bin&lt;/code&gt; or add its location to your &lt;code&gt;PATH&lt;/code&gt; (e.g. &lt;code&gt;tar -xvzf hab.tgz -C /usr/local/bin --strip-components 1&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ed694c01086244d76691d12450f09390060a86" translate="yes" xml:space="preserve">
          <source>Once you have local access to the profile, you can use the &lt;code&gt;example_config&lt;/code&gt; custom resource provided in the &lt;code&gt;examples/profile&lt;/code&gt; GitHub repo in your local environment :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95559d31e17ffccab1484a008c5ca876b47a2513" translate="yes" xml:space="preserve">
          <source>Once you have quorum, one member is elected a leader, the Supervisors in the service group update the service&amp;rsquo;s configuration in concordance with the policy defined at package build time, and the service group starts up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ecc4942fb0840517fcba4d5f70af39e2217c91" translate="yes" xml:space="preserve">
          <source>Once you have tested the changes and you are ready to remediate the entire profile for CIS, you can set the hab configuration to &lt;code&gt;all&lt;/code&gt; and it will run all the remediation steps in the &lt;code&gt;scaffold_remediate_package&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6c4e62dc1d60318213291314869ef521bbbe54" translate="yes" xml:space="preserve">
          <source>Once you have this token, you can set the &lt;code&gt;HAB_AUTH_TOKEN&lt;/code&gt;&lt;a href=&quot;../environment_variables/index&quot;&gt;environment variable&lt;/a&gt; to this value, so that any commands requiring authentication will use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f68e55bacea058ffba38e9b4b986b1169527e0d" translate="yes" xml:space="preserve">
          <source>Once you have your catalog and manifest ready, you can test this out from a macOS node by running the following commands from a terminal window. Run the first command from your macOS client to verify that the correct configuration got to that node and then run the second command to actually install the managed applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe7799c1044b64ed99582ae37e34e5064b5bc80" translate="yes" xml:space="preserve">
          <source>Once you have your environment variables set, you can verify your credentials by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aca189b2332ad0288ef352b8e52f7e0e6d13157" translate="yes" xml:space="preserve">
          <source>Once you log in, Chef Automate prompts you for a license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb6842d63e9b4db21a169a0b5752783affffccb" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re done developing and testing code on your local workstation, you can upload it to the Chef Infra Server. The Chef Infra Server acts as a hub for configuration data. It stores cookbooks, the policies that are applied to the systems in your infrastructure and metadata that describes each system. The knife command lets you communicate with the Chef Infra Server from your workstation. For example, you use it to upload your cookbooks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bf7e1da24cebc33231b008dc682431ac00c59b" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve defined both ends of the contract, you can leverage the bind in any of your package&amp;rsquo;s hooks or configuration files. Given the two example services above, a section of a configuration file for &lt;code&gt;session-server&lt;/code&gt; might look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e87805f996a99630e31d742830b86466334e9a" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve resolved the issue and can run the &lt;code&gt;pgsql-follow&lt;/code&gt; command successfully, you can manually remove the sentinel file and restart Leaderl:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e4514ac38ca8cbf32a46d81fb69bcd8083a0e4" translate="yes" xml:space="preserve">
          <source>One (or more) 60 character segments that comprise the canonical header. A canonical header is signed with the private key used by the client machine from which the request is sent, and is also encoded using Base64. If more than one segment is required, each should be named sequentially, e.g. &lt;code&gt;X-Ops-Authorization-1&lt;/code&gt;, &lt;code&gt;X-Ops-Authorization-2&lt;/code&gt;, &lt;code&gt;X-Ops-Authorization-N&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; represents the integer used by the last header that is part of the request.</source>
          <target state="translated">Один (или более) 60 символьных сегментов, которые составляют канонический заголовок. Канонический заголовок подписывается с помощью закрытого ключа, используемого клиентским компьютером, с которого отправляется запрос, и также кодируется с использованием Base64. Если требуется более одного сегмента, каждый из них должен называться последовательно, например, &lt;code&gt;X-Ops-Authorization-1&lt;/code&gt; , &lt;code&gt;X-Ops-Authorization-2&lt;/code&gt; , &lt;code&gt;X-Ops-Authorization-N&lt;/code&gt; , где &lt;code&gt;N&lt;/code&gt; представляет целое число, используемое последним заголовком, который является частью запроса.</target>
        </trans-unit>
        <trans-unit id="b4de794fb3d0b29a71c07e9826aba791a336a3b0" translate="yes" xml:space="preserve">
          <source>One (or more) additional command options that are passed to the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff9198e2d54582ab1da460235aa3588edea9ac1" translate="yes" xml:space="preserve">
          <source>One (or more) additional command options that are passed to the command. For example, common zypper directives, such as &lt;code&gt;--no-recommends&lt;/code&gt;. See the &lt;a href=&quot;https://en.opensuse.org/SDB:Zypper_manual_(plain)&quot;&gt;zypper man page&lt;/a&gt; for the full list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab1c5633479a59e754fccbfcf1aca70e83fddf9" translate="yes" xml:space="preserve">
          <source>One (or more) additional list options that are passed to the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60548431e04f6e75c7c8017728ad75b97681548f" translate="yes" xml:space="preserve">
          <source>One (or more) additional options that are passed to the command.</source>
          <target state="translated">Одна (или несколько)дополнительных опций,которые передаются команде.</target>
        </trans-unit>
        <trans-unit id="6f85aeb5a937f4d7805c5aea4c88300b4123d76d" translate="yes" xml:space="preserve">
          <source>One (or more) additional options that are passed to the command. For example, common apt-get directives, such as &lt;code&gt;--no-install-recommends&lt;/code&gt;. See the &lt;a href=&quot;http://manpages.debian.net/cgi-bin/man.cgi?query=apt-get&quot;&gt;apt-get man page&lt;/a&gt; for the full list.</source>
          <target state="translated">Один (или несколько) дополнительных параметров, которые передаются команде. Например, общие директивы apt-get, такие как &lt;code&gt;--no-install-recommends&lt;/code&gt; . Смотрите &lt;a href=&quot;http://manpages.debian.net/cgi-bin/man.cgi?query=apt-get&quot;&gt;man-страницу apt-get&lt;/a&gt; для полного списка.</target>
        </trans-unit>
        <trans-unit id="7cdb6369a5941aee135a8d09842f50304ce2b3eb" translate="yes" xml:space="preserve">
          <source>One (or more) additional options that are passed to the command. For example, common apt-get directives, such as &lt;code&gt;--no-install-recommends&lt;/code&gt;. See the &lt;a href=&quot;http://manpages.ubuntu.com/manpages/zesty/man8/apt-get.8.html&quot;&gt;apt-get man page&lt;/a&gt; for the full list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b7187c210ce754b11fc9c0183e49d8ec4f0f2f" translate="yes" xml:space="preserve">
          <source>One (or more) additional options that are passed to the command. For example, common apt-get directives, such as &lt;code&gt;--no-install-recommends&lt;/code&gt;. See the &lt;a href=&quot;https://manpages.ubuntu.com/manpages/zesty/man8/apt-get.8.html&quot;&gt;apt-get man page&lt;/a&gt; for the full list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc8be619ef011799f9c2088ff26e0e7413ffa80" translate="yes" xml:space="preserve">
          <source>One (or more) comments about the user.</source>
          <target state="translated">Один (или несколько)комментарий о пользователе.</target>
        </trans-unit>
        <trans-unit id="ae61e7bbf91bc6f37e0da95b9d63f07409b76baa" translate="yes" xml:space="preserve">
          <source>One (or more) nodes on which Chef Infra Client (Chef Client version 12 or higher) is installed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175a379a01ba976e7f5e35ac7ae16a9dcdf956d3" translate="yes" xml:space="preserve">
          <source>One (or more) of the PostgreSQL databases already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db2f1785511d4ef39bb1e5f2f0da822156b26cd" translate="yes" xml:space="preserve">
          <source>One (or more) of the PostgreSQL predefined users already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870dce14363a143a1447e956923b174e44a4ce27" translate="yes" xml:space="preserve">
          <source>One (or more) patterns for a command line. If this option is not specified, a list of patterns may be expected on standard input. Default: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Один (или несколько) шаблонов для командной строки. Если этот параметр не указан, можно ожидать список шаблонов при стандартном вводе. По умолчанию: &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2415eb15931d92465ed4e2623fd58a30e75c472a" translate="yes" xml:space="preserve">
          <source>One (or more) services are down. For example:</source>
          <target state="translated">Одна (или несколько)услуг не работает.Например:</target>
        </trans-unit>
        <trans-unit id="27f8a181de55eaa1882d4ff0a6de25a32f4ae5f9" translate="yes" xml:space="preserve">
          <source>One (or more) workstations are configured to allow users to author, test, and maintain cookbooks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73038a078eea1234b2f8123a2e35dea57f292bfd" translate="yes" xml:space="preserve">
          <source>One (or more) workstations are configured to allow users to author, test, and maintain cookbooks. Cookbooks are uploaded to the Chef server from the workstation. Some cookbooks are custom to the organization and others are based on community cookbooks available from the Chef Supermarket.</source>
          <target state="translated">Одна (или несколько)рабочих станций настроены таким образом,чтобы позволить пользователям создавать,тестировать и обслуживать куки-книги.Куки-книги загружаются на сервер Chef с рабочей станции.Некоторые куки-книги являются индивидуальными для организации,а другие основаны на куки-книгах сообщества,доступных в супермаркете &quot;Шеф-повар&quot;.</target>
        </trans-unit>
        <trans-unit id="5aa3056c60aa3b67d08c9c802c642679e1b9ff17" translate="yes" xml:space="preserve">
          <source>One approach for enabling or disabling services that are managed by System Resource Controller (SRC) is to use the &lt;strong&gt;execute&lt;/strong&gt; resource to invoke &lt;code&gt;mkitab&lt;/code&gt;, and then use that command to enable or disable the service.</source>
          <target state="translated">Один из подходов для включения или отключения служб, которые управляются контроллером системных ресурсов (SRC), заключается в использовании ресурса &lt;strong&gt;execute&lt;/strong&gt; для вызова &lt;code&gt;mkitab&lt;/code&gt; , а затем с помощью этой команды для включения или отключения службы.</target>
        </trans-unit>
        <trans-unit id="9d2456e4989d515bd36b8c12fedad07bc835f7af" translate="yes" xml:space="preserve">
          <source>One approach is to set attributes at the same precedence level by setting attributes in a cookbook&amp;rsquo;s attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook&amp;rsquo;s attribute files.</source>
          <target state="translated">Один из подходов состоит в том, чтобы установить атрибуты на том же уровне приоритета, задав атрибуты в файлах атрибутов поваренной книги, а затем также установив те же атрибуты по умолчанию (но с разными значениями), используя роль. Атрибуты, установленные в роли, будут глубоко объединены поверх атрибутов из файла атрибутов, а атрибуты, установленные ролью, будут иметь приоритет над атрибутами, указанными в файлах атрибутов поваренной книги.</target>
        </trans-unit>
        <trans-unit id="51c71c1fca8357641e7d35726245fd7e37d23596" translate="yes" xml:space="preserve">
          <source>One approach to working around the double- vs. single-quote issue is to put the single-quotes outside of the double-quotes. For example, for Notepad++:</source>
          <target state="translated">Один из подходов к работе над вопросом двойных и одинарных кавычек заключается в том,чтобы поставить одинарные кавычки вне дубль-кавычек.Например,для Notepad++:</target>
        </trans-unit>
        <trans-unit id="04c0d736d0bdb79e84bb761398614ddc5bcfe3c9" translate="yes" xml:space="preserve">
          <source>One delivery channel is allowed per region per AWS account, and the delivery channel is required to use AWS Config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8065bfe5eb29b8e36ffacff21d3480e4f5ca394" translate="yes" xml:space="preserve">
          <source>One of either the EC2 instance&amp;rsquo;s ID or name must be be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b1bb69b4e6f097780358f44bdbf3fd2cd8b36c" translate="yes" xml:space="preserve">
          <source>One of the best way to develop and explore tests is the interactive debugging shell &lt;code&gt;pry&lt;/code&gt; (see [Interactive Debugging with Pry] (/inspec/dsl_inspec/#interactive-debugging-with-pry) at the end of this page). However, after you finish your profile make sure you have no interactive statements included anymore. Sometimes interactive calls are hidden behind conditionals (&lt;code&gt;if&lt;/code&gt; statements) that are harder to reach. These calls can easily cause trouble when an automated profiles runs into an interactive &lt;code&gt;pry&lt;/code&gt; call that stops the execution and waits for user input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d9df7454b5e81abe48261f948c17fa508e791a" translate="yes" xml:space="preserve">
          <source>One of the following account types (case-sensitive): &lt;code&gt;Standard_LRS&lt;/code&gt; (Standard Locally-redundant storage); &lt;code&gt;Standard_ZRS&lt;/code&gt; (Standard Zone-redundant storage); &lt;code&gt;Standard_GRS&lt;/code&gt; (Standard Geo-redundant storage); &lt;code&gt;Standard_RAGRS&lt;/code&gt; (Standard Read access geo-redundant storage); &lt;code&gt;Premium_LRS&lt;/code&gt; (Premium Locally-redundant storage).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f536a53de31e6856f575d8d4b5e432c91edcfe5" translate="yes" xml:space="preserve">
          <source>One of the following: the name of a package, the name of a package and its architecture, the name of a dependency. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">Одно из следующих: имя пакета, имя пакета и его архитектура, имя зависимости. Значение по умолчанию: &lt;code&gt;name&lt;/code&gt; блока ресурсов. См. Раздел &amp;laquo;Синтаксис&amp;raquo; выше для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="3152b06cfcf6e81a149e47aea78fc50d403d465b" translate="yes" xml:space="preserve">
          <source>One of the following: the name of a package, the name of a package and its architecture, the name of a dependency. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block. See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa9a305c85b68747c931a57c204d65990220e19" translate="yes" xml:space="preserve">
          <source>One of the great things about an automated management setup like this is being able to actively manage the applications that show up on user&amp;rsquo;s desktops. To handle that on macOS we use Munki. Our initial goal is to push a couple of required applications out to our users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffabf2cf91e79da760005caf9b86807126f10830" translate="yes" xml:space="preserve">
          <source>One of the great things about an automated management setup like this is the ability to actively manage the applications that show up on users' desktops. To handle applications on macOS, we use Munki. To handle applications for Windows, we use Gorilla. Our initial goal is to push a couple of required Apps out to our users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b685bf7cb0324a79237a45c2552835b37f501ec3" translate="yes" xml:space="preserve">
          <source>One of the key differences is that Chef InSpec targets more user groups. It is optimized for DevOps, Security, and Compliance professionals. Additional metadata, such as impact, title, and description, make it easier to fully describe the controls which makes it easier to share the controls with other departments. This enables Security departments to prioritize rules. DevOps teams use this information to focus on the most critical issues to remediate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74336ebf7690a2a6f0823b675e708c87a06ce40" translate="yes" xml:space="preserve">
          <source>One of the key features of Chef Habitat is the ability to define an immutable package with a default configuration which can then be updated dynamically at runtime. You can update service configuration on two levels: individual services (for testing purposes), or a service group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c122b053e5b93644cc9b2f35fc7d288163aa1573" translate="yes" xml:space="preserve">
          <source>One of valid DNS resource types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6940dc8222beb5531b08740b8174419b877bbc2" translate="yes" xml:space="preserve">
          <source>One option to remediate this error is to define a &lt;code&gt;SSL_CERT_FILE&lt;/code&gt; environment variable pointing to the custom certificate path before performing the client operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa35135887b5184f097e22cb74e421e3af6c7de9" translate="yes" xml:space="preserve">
          <source>One or more &amp;ldquo;nodes&amp;rdquo;, which are the Windows or macOS computers that you will manage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8efbbc96a55559c2e6effd67be7f493f1fd9ee1" translate="yes" xml:space="preserve">
          <source>One or more &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;valid software licenses&lt;/a&gt; that relate to this package. Type: array. &lt;em&gt;Optional&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a694b3c52ecd30b83f28de960557f1cfbdda3a4" translate="yes" xml:space="preserve">
          <source>One or more command line flags that are passed to the interpreter when a command is invoked.</source>
          <target state="translated">Один или несколько флагов командной строки,которые передаются интерпретатору при вызове команды.</target>
        </trans-unit>
        <trans-unit id="02daf4f16c89a3503e94fa46b64526e316b0892c" translate="yes" xml:space="preserve">
          <source>One or more data bags and data bag items can be created manually under the &lt;code&gt;data_bags&lt;/code&gt; directory in the chef-repo. Any method can be used to create the data bag folders and data bag item JSON files. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e961a8d35f3d17e61c76ffec029c5500957e6077" translate="yes" xml:space="preserve">
          <source>One or more diagnostics checks failed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d646b870dd7f2f3ac1787fecaf561c7e607f6c0" translate="yes" xml:space="preserve">
          <source>One or more fields on which data should be clustered. Only top-level, non-repeated, simple-type fields are supported. When you cluster a table using multiple columns, the order of columns you specify is important. The order of the specified columns determines the sort order of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2cd4f0cf512f076b79d4fe30aec37be0f9d41bd" translate="yes" xml:space="preserve">
          <source>One or more frontend group nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c23f64eaffb2d770941ed387a857e1793c2c873" translate="yes" xml:space="preserve">
          <source>One or more labels that you can add, to organize your models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94fbffc37e6a843163554e4e6db3db111c577ad" translate="yes" xml:space="preserve">
          <source>One or more nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77faeaae3571e95d4982eaecc5fee38e6ef94744" translate="yes" xml:space="preserve">
          <source>One or more preflight checks failed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f186106fa536f796e1bca4e3847e0ceacc5f159" translate="yes" xml:space="preserve">
          <source>One or more privileges to set for users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5872374cc52312cd7429656b2de587d32a9a8404" translate="yes" xml:space="preserve">
          <source>One or more subnetwork NAT configurations. Only used if &lt;code&gt;source_subnetwork_ip_ranges_to_nat&lt;/code&gt; is set to &lt;code&gt;LIST_OF_SUBNETWORKS&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4ea332359ebc839c17d7afafdfe1994d2dfdf4" translate="yes" xml:space="preserve">
          <source>One possible cause (whose logs you see here) is a misconfigured &lt;code&gt;base_user_search_dn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910ab2d51a493757df2666f3522af2f2b637aebb" translate="yes" xml:space="preserve">
          <source>One way to manage secrets used by Chef is with data bags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceeadee3103f92ee76622af6f05805ef0de1595d" translate="yes" xml:space="preserve">
          <source>One way to think about the stages is whether the set of potentially releasable artifacts has been produced or not. The pipeline creates these artifacts at the end of the Build stage. The remaining stages of the pipeline focus on gaining confidence in those artifacts. Another way to understand the stages is by whether they are isolated at the project level or shared across the system. This diagram shows the relationships among the different stages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95eb4c282153e73004abcffa2380a98d06c5955c" translate="yes" xml:space="preserve">
          <source>OneLogin</source>
          <target state="translated">OneLogin</target>
        </trans-unit>
        <trans-unit id="28445087de506d62c5463d0d457faba7313b7ea2" translate="yes" xml:space="preserve">
          <source>Only &amp;ldquo;administrators&amp;rdquo; and &amp;ldquo;owners&amp;rdquo; can upload new keys to an origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b43c627e5ccfeca2157df8ea8bc9723b8fad16" translate="yes" xml:space="preserve">
          <source>Only Chef Habitat Builder can read encrypted origin secrets. The origin secrets in your local environment are encrypted with an origin encryption key. Origin secrets are retained by the origin and are available for any of its packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14cccf4247dcf686ca4e3c010d34d8d600f50f69" translate="yes" xml:space="preserve">
          <source>Only Chef Software, Inc employees have access to your data. We will never sell, re-sell, or use your data in a malicious manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b98b40c00aa600fe1e6c9afb6edad8b46d6cf0b" translate="yes" xml:space="preserve">
          <source>Only applicable to STANDARD_HA tier which protects the instance against zonal failures by provisioning it across two zones. If provided, it must be a different zone from the one provided in [locationId].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a64a5a9ce22f50f872f7714281e946e52b0b2c" translate="yes" xml:space="preserve">
          <source>Only available for constraints that are boolean policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8abfd943fb52bf4f7f5e6b22832a6cf35b2d04" translate="yes" xml:space="preserve">
          <source>Only elevate executables that are signed and validated. Sets HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\EnableLUA\ValidateAdminCodeSignatures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d30882898734abc7211a0aaebaa097dd2061e3e" translate="yes" xml:space="preserve">
          <source>Only inherited rights remain. All existing explicit rights on the object are removed and replaced.</source>
          <target state="translated">Остаются только унаследованные права.Все существующие явные права на объект удаляются и заменяются.</target>
        </trans-unit>
        <trans-unit id="4cd066ed22b640a6454afb7b588f4cd5033dcfc4" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;only_if&lt;/code&gt; is permitted per &lt;code&gt;control&lt;/code&gt; block. If multiple &lt;code&gt;only_if&lt;/code&gt; blocks are present, only the last &lt;code&gt;only_if&lt;/code&gt; block will be honored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8062bf6c5d750012fda39913510aa7b1ff91323" translate="yes" xml:space="preserve">
          <source>Only one of the keys, &lt;code&gt;create_key&lt;/code&gt; or &lt;code&gt;public_key&lt;/code&gt;, may be specified. If &lt;code&gt;create_key&lt;/code&gt; is specified, a default private key is generated and returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfdc369eef7aed3de4ede754985a8d2730c26c6" translate="yes" xml:space="preserve">
          <source>Only projects with zero ingest rules and no pending edits can be deleted. To delete a project, navigate to &lt;em&gt;Projects&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then open the menu at the end of the table row and select &lt;strong&gt;Delete Role&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8ea3cdc183f314c05e768ca075617657a76356" translate="yes" xml:space="preserve">
          <source>Only the runtime portion of this combined buildtime environment is made available to your package when it is running in a Supervisor (or when it is being used as a dependency of another Chef Habitat package).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33137f01ece039f247e79da6595fda2bcdb01304" translate="yes" xml:space="preserve">
          <source>Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the &lt;code&gt;id&lt;/code&gt; key of a data bag item are not encrypted (because they are needed by Chef Infra Client when tracking the data bag item)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ace3879b63ca59783c380b357201b40a96af6ea" translate="yes" xml:space="preserve">
          <source>Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the &lt;code&gt;id&lt;/code&gt; key of a data bag item are not encrypted (because they are needed when tracking the data bag item)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069ff1a92d67fd47f73a96aaa2ce009a716b9161" translate="yes" xml:space="preserve">
          <source>Only upload stable cookbooks from master.</source>
          <target state="translated">Загружайте только стабильные кулинарные книги от мастера.</target>
        </trans-unit>
        <trans-unit id="7d26ae1cc4c79fdc0d153a3a4c3684ba3330e1a3" translate="yes" xml:space="preserve">
          <source>Only upload unstable cookbooks from the dev branch. Merge to master and bump the version when stable.</source>
          <target state="translated">Загружайте только нестабильные кулинарные книги из девственной ветви.Слияние с мастер-версией и повышение версии при стабильной работе.</target>
        </trans-unit>
        <trans-unit id="70825d9502b745df204a93e07195ebb29ed23118" translate="yes" xml:space="preserve">
          <source>Only users whose public keys that the Supervisor already has in its cache will be allowed to reconfigure this service group. If you need to generate a user key pair, see the next section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b9884367edf8fea0fa1185aa2a1668bc2fb9fb" translate="yes" xml:space="preserve">
          <source>Only users with origin membership can find and use private packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0f052984bdf5d7a2e1d0c98ac2b2291050af80" translate="yes" xml:space="preserve">
          <source>Opaque IDs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d99aca6e80e8942c4fefaad4889a138868c67f" translate="yes" xml:space="preserve">
          <source>Opaque filter criteria used by Loadbalancer to restrict routing configuration to a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS clients present node metadata. If a match takes place, the relevant routing configuration is made available to those proxies. For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels in the provided metadata. metadataFilters specified here can be overridden by those specified in the UrlMap that this ForwardingRule references. metadataFilters only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f259e73bd7e8eb21905ec50d1e05161794e189" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;.chef/config.rb&lt;/code&gt; in a text editor and modify the &lt;code&gt;chef_server_url&lt;/code&gt; with your new public DNS. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae9504bc52a3b15cf2a60112cb3fa028e967d58" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;.chef/pivotal.rb&lt;/code&gt; in a text editor and modify the &lt;code&gt;chef_server_url&lt;/code&gt; and &lt;code&gt;chef_server_root&lt;/code&gt; with your new public DNS. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd529dcda36d4bf0ac8ab093c7562883fe90570" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;/etc/delivery/delivery.rb&lt;/code&gt; and enter the LDAP attributes you want Workflow to use. If you do not specify an LDAP port, the default port of &lt;code&gt;3269&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6e912bf472a5cb6594a795b8ce44ec3421e4c6" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;my_repo\cookbook\my_cookbook\recipes\default.rb&lt;/code&gt; in Visual Studio and add:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621bfb064faf2768bc60ba5c1f15325f263f02de" translate="yes" xml:space="preserve">
          <source>Open &lt;strong&gt;Connections&lt;/strong&gt;.</source>
          <target state="translated">Открытые &lt;strong&gt;соединения&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="651f5a0fd17bef78a2d3b21163db0ea8e53339cd" translate="yes" xml:space="preserve">
          <source>Open &lt;strong&gt;Environment Variables&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;Переменные&lt;/strong&gt; открытой &lt;strong&gt;среды&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5761090ce0bcc09745539408c328af54a7c7a23b" translate="yes" xml:space="preserve">
          <source>Open &lt;strong&gt;Internet Properties&lt;/strong&gt;.</source>
          <target state="translated">Откройте &lt;strong&gt;Свойства Интернета&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7829876d8e855fa41bcf6d9e5270f6532b4f3535" translate="yes" xml:space="preserve">
          <source>Open &lt;strong&gt;LAN settings&lt;/strong&gt;.</source>
          <target state="translated">Откройте &lt;strong&gt;настройки локальной сети&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="4ab3e624bd85df6913f10d35d0026bd0ee56a7c5" translate="yes" xml:space="preserve">
          <source>Open &lt;strong&gt;System Properties&lt;/strong&gt;.</source>
          <target state="translated">Откройте &lt;strong&gt;Свойства системы&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d009cb58e46ce6a64264277400f06720a94a2013" translate="yes" xml:space="preserve">
          <source>Open &lt;strong&gt;System variables&lt;/strong&gt;.</source>
          <target state="translated">Открытые &lt;strong&gt;системные переменные&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="757c6f3db1547d65787b14af3431cb7082a6fb48" translate="yes" xml:space="preserve">
          <source>Open Automate in a web browser, then select the &lt;em&gt;Client Runs&lt;/em&gt; tab, and finally, select Workflow on the menu on the left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b915e3281f5c2ed81ad7b48d11ba81b07b344c" translate="yes" xml:space="preserve">
          <source>Open Chef Automate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cf902f1e8d1057f61c0c5bf2fd5e5de803afa4" translate="yes" xml:space="preserve">
          <source>Open a Zip file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32652f9f6de511520045b0c559567fafd7760398" translate="yes" xml:space="preserve">
          <source>Open a command prompt and change into your &lt;code&gt;chef-repo&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2703e85fee5869d1093bfe0b09cf875fa37169a" translate="yes" xml:space="preserve">
          <source>Open a command prompt by right-clicking on the command prompt application, and then selecting &lt;strong&gt;Run as administrator&lt;/strong&gt;. After the command window opens, Chef Infra Client can be run as the administrator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b605ae50c0ed49bf230af407dfdb9715f983a2" translate="yes" xml:space="preserve">
          <source>Open a command prompt by right-clicking on the command prompt application, and then selecting &lt;strong&gt;Run as administrator&lt;/strong&gt;. After the command window opens, the chef-client can be run as the administrator</source>
          <target state="translated">Откройте командную строку, щелкнув правой кнопкой мыши приложение командной строки и выбрав &lt;strong&gt;Запуск от имени администратора&lt;/strong&gt; . После того, как откроется командное окно, chef-клиент может быть запущен от имени администратора.</target>
        </trans-unit>
        <trans-unit id="465e675da4be1f10e2aa556e3d86ad677f7bc992" translate="yes" xml:space="preserve">
          <source>Open a command window and enter the following:</source>
          <target state="translated">Откройте командное окно и введите следующее:</target>
        </trans-unit>
        <trans-unit id="fd97c490d9b5d910f868108f4599daa14a5df5a4" translate="yes" xml:space="preserve">
          <source>Open a terminal and enter the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4998ddd9b9a3b6be0bf38228157b691ba465a7" translate="yes" xml:space="preserve">
          <source>Open a terminal window on the Linux box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868e41b64901b9fecc7d8cafb74718531e921626" translate="yes" xml:space="preserve">
          <source>Open an Erlang command shell to begin diagnosing service issues on the Chef Infra Server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9526fb1beb08d769202d8a660894f743621e56a" translate="yes" xml:space="preserve">
          <source>Open an Erlang command shell to begin diagnosing service issues on the Chef server:</source>
          <target state="translated">Откройте командную оболочку Erlang,чтобы начать диагностику проблем со службой на сервере Chef:</target>
        </trans-unit>
        <trans-unit id="c2e4a57758b31b5eabaa25c77f2784a7b685dce1" translate="yes" xml:space="preserve">
          <source>Open an interactive debugging shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ce92e72a4518c88d4af82bf16532c71e1da7dd" translate="yes" xml:space="preserve">
          <source>Open it and add an entry for each component package that you want to build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2c5e594d3abe86029f019219c270bf67eddb0c" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;/recipes/default.rb&lt;/code&gt; file and add the following, BEFORE the &lt;code&gt;include_recipe&lt;/code&gt; line that was added in the previous step. This example uses a data bag named &lt;code&gt;apps&lt;/code&gt; and a data bag item named &lt;code&gt;supermarket&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd66e72ed044eaf8bda09dc32d04e5546c543b9" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;/recipes/default.rb&lt;/code&gt; recipe located within the newly-generated cookbook and add the following content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7070d74f5f726e771daa41a88a09b117c58f92db" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;config.toml&lt;/code&gt; file and include the external automate configuration settings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c15d9eab5ac1e5c5909ce5109daf3d8015f0f2e" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;default.rb&lt;/code&gt; recipe in the &lt;code&gt;build-cookbook&lt;/code&gt; and edit it to contain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d10accf5f8b3d3a362fa27aa06762c47f60c19" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;publish.rb&lt;/code&gt; recipe in the &lt;code&gt;build-cookbook&lt;/code&gt; and edit it to contain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ff387135046137d34df2daff8606d595c8fe66" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;publish.rb&lt;/code&gt; recipe in the &lt;code&gt;build-cookbook&lt;/code&gt; and edit to look like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e12e721bfecd3d412faa4b4fbd2040b771f6e8e" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;recipes/default.rb&lt;/code&gt; file and add the following, &lt;strong&gt;before&lt;/strong&gt; the &lt;code&gt;include_recipe&lt;/code&gt; line that was added in the previous step. This example uses a data bag named &lt;code&gt;apps&lt;/code&gt; and a data bag item named &lt;code&gt;supermarket&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40cf454e36fce9c8192521b26fb906173aa606c" translate="yes" xml:space="preserve">
          <source>Open the &lt;strong&gt;Organizations&lt;/strong&gt; page and select your organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b40f931e76bc1cea33cfd43ab92160bca247b2" translate="yes" xml:space="preserve">
          <source>Open the &lt;strong&gt;default.rb&lt;/strong&gt; recipe in the &lt;strong&gt;build-cookbook&lt;/strong&gt; and edit it to contain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee2d3b35d708e3985b4dacd67188b63e5b79e29" translate="yes" xml:space="preserve">
          <source>Open the &lt;strong&gt;publish.rb&lt;/strong&gt; recipe in the &lt;strong&gt;build-cookbook&lt;/strong&gt; and edit it to contain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246243931831b7924d9ec76a93ca52879f16d136" translate="yes" xml:space="preserve">
          <source>Open the &lt;strong&gt;publish.rb&lt;/strong&gt; recipe in the &lt;strong&gt;build-cookbook&lt;/strong&gt; and edit to look like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92317df05a65b5e8a8d6da3f9f5cef657ab7b7c9" translate="yes" xml:space="preserve">
          <source>Open the Chef management console.</source>
          <target state="translated">Откройте консоль управления шеф-повара.</target>
        </trans-unit>
        <trans-unit id="ec2eddd63716192890b4ec1a24ebc8609d085578" translate="yes" xml:space="preserve">
          <source>Open the config.rb file in an editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240e41732196ca5bb5981d17b717faee98ffae53" translate="yes" xml:space="preserve">
          <source>Open the page for the organization in the Workflow webui, and then click &lt;strong&gt;Add a New Project&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72af3bd670a9886a7a4681c8db38781f29821d62" translate="yes" xml:space="preserve">
          <source>Open the program using the icon on your workstation desktop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ded1112f4377196a0e7752a2c7f4f268c7f4eef" translate="yes" xml:space="preserve">
          <source>Open up the newly created &lt;code&gt;chef-server.rb&lt;/code&gt; file in your favorite text editor, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6781c38861693735ebed16e82a2498ff0cd2df9d" translate="yes" xml:space="preserve">
          <source>Open up the newly created &lt;code&gt;chef-server.rb&lt;/code&gt; file in your favorite text editor.</source>
          <target state="translated">Откройте недавно созданный файл &lt;code&gt;chef-server.rb&lt;/code&gt; в вашем любимом текстовом редакторе.</target>
        </trans-unit>
        <trans-unit id="d345622f25759b22efa3028ba91de801c785ffbe" translate="yes" xml:space="preserve">
          <source>Open your repo in Visual Studio Code. The one key file you will want to manage is the &lt;code&gt;metadata.rb&lt;/code&gt; file. Please take a moment now to add your contact information and enter a starting version number for your cookbook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aeb98c5ee3d7158dd0013a1a3d6bcab5a8edbae" translate="yes" xml:space="preserve">
          <source>OpenBSD. All platform variants of OpenBSD return &lt;code&gt;openbsd&lt;/code&gt;.</source>
          <target state="translated">OpenBSD. Все варианты платформы OpenBSD возвращают &lt;code&gt;openbsd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb5daec2d184607d5b6b073b2401fb9b2e3a2ce7" translate="yes" xml:space="preserve">
          <source>OpenID Connect Signing Key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36643555f5e1dba3357a540e28d6fc80b60da13" translate="yes" xml:space="preserve">
          <source>Operating Chef Habitat Builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4951613253401ec9adef9d30a19ce64dbd778dd0" translate="yes" xml:space="preserve">
          <source>Operating Chef Habitat Supervisors remotely is purely optional; you must take positive action to enable this behavior. If you prefer, you can continue to manage Supervisors through on-the-box direct action, as before, and likely without any changes to your current procedures. Read on for further details about how to enable this ability, and how local interaction continues to operate through a new implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ba86326755952233b0543acced2995e5faf457" translate="yes" xml:space="preserve">
          <source>Operating System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a35209b60ae46982b61db75f9984bec839cc172" translate="yes" xml:space="preserve">
          <source>Operating system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c85b6d40ff0683b760e041ea3c2df887734e40" translate="yes" xml:space="preserve">
          <source>Operating system reported CPU usage in percent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22d5c83a2a5e7f83e4804698d285232ca0a13b6" translate="yes" xml:space="preserve">
          <source>Operating system requirements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e687b079fb70f2208d1f8d2c75d64d74925496" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operator</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="06e7835c13272e352c85af7b08c6dacc7b10a131" translate="yes" xml:space="preserve">
          <source>Operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries.</source>
          <target state="translated">Операторы должны быть во ВСЕХ КАПС.Круглые скобки могут быть использованы для группировки клаузул и формирования подзапросов.</target>
        </trans-unit>
        <trans-unit id="5f477fb7c6e597e4357aeb6f4ddf179608eadf8f" translate="yes" xml:space="preserve">
          <source>Opting Out of Telemetry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3aad595c8a0d752825a0dd3a392108155638636" translate="yes" xml:space="preserve">
          <source>Opting out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85852ea2834597290ce3c0d6a48a0b91a7efe93" translate="yes" xml:space="preserve">
          <source>Opting to run a private Supermarket with off-host PostgreSQL, Redis, and cookbook store is less a decision about storage sizing; it is about data service uptime, backup, and restore procedure for your organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="aab5ebf8cf05eeaa7cf8e2ec8481aaaa322fc156" translate="yes" xml:space="preserve">
          <source>Option Type</source>
          <target state="translated">Тип опции</target>
        </trans-unit>
        <trans-unit id="74c374a322a7c19cd8aaa4647abb6eb330b891a7" translate="yes" xml:space="preserve">
          <source>Optional &lt;code&gt;String&lt;/code&gt;. Human-meaningful explanation of the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660fb2435ec574695f7d93cb93685e393eb52f7f" translate="yes" xml:space="preserve">
          <source>Optional Interfaces</source>
          <target state="translated">Дополнительные интерфейсы</target>
        </trans-unit>
        <trans-unit id="9a602bc47f9ebecbd0bf105812c6248180c7df27" translate="yes" xml:space="preserve">
          <source>Optional Ohai plugins that should be enabled to provide additional Ohai data for use in cookbooks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec41caca02a384d940928e524ea1ff1215c94bfa" translate="yes" xml:space="preserve">
          <source>Optional Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e584ba04f2e20fef469c54b6487581e423010b" translate="yes" xml:space="preserve">
          <source>Optional S3 base path prefix. This is used if you wish to store Chef Automate Elasticsearch snapshots in a nested path in the S3 bucket. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc5d1bad123e965b5d98d4cfa50e2679be15fe1" translate="yes" xml:space="preserve">
          <source>Optional S3 base path prefix. This is used if you wish to store Chef Automate backup archives in a nested path in the S3 bucket. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111160aa0d3d16636bd28cf90b8f53772181bd6e" translate="yes" xml:space="preserve">
          <source>Optional Services Tuning</source>
          <target state="translated">Дополнительные услуги Настройка</target>
        </trans-unit>
        <trans-unit id="39fb394c58f8666025a8b1ff70de7e4a8e65e1e6" translate="yes" xml:space="preserve">
          <source>Optional Settings</source>
          <target state="translated">Дополнительные настройки</target>
        </trans-unit>
        <trans-unit id="71d7fcf8b7d2ec437f0b0166a2211349dc030c8b" translate="yes" xml:space="preserve">
          <source>Optional authentication password when contacting the proxy server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6667fb810ddee6f49af78c91b00a3d05499b86a" translate="yes" xml:space="preserve">
          <source>Optional authentication user name when contacting the proxy server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8356d1e42ff0cb21dd795a0b71952fbd57969751" translate="yes" xml:space="preserve">
          <source>Optional channel to use when installing packages from the depot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393bb94cb06c0a743cb02d1133b873bffc771b41" translate="yes" xml:space="preserve">
          <source>Optional config file to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d11f12cca38816bbdbc7a1dc39258d2056f968" translate="yes" xml:space="preserve">
          <source>Optional descriptor for the printer queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b9f72c953b31db112de67761c18eaac2a6676a" translate="yes" xml:space="preserve">
          <source>Optional field used to identify cidr blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d691aa2446c1c4d41d5eb8505a8bade71f653b" translate="yes" xml:space="preserve">
          <source>Optional fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a28a52488f521cdc272b0f5ba782a81f0ae8b5" translate="yes" xml:space="preserve">
          <source>Optional plugins can be enabled in the &lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb configuration file&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0c2d0fd430d5df4590292d7126828dd41925cd" translate="yes" xml:space="preserve">
          <source>Optional plugins can be enabled in the &lt;a href=&quot;config_rb_client/index&quot;&gt;client.rb configuration file&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbf0c7e1ac9e7fd5b0360e0ff4e8ab1e2ba6be5" translate="yes" xml:space="preserve">
          <source>Optional setting when using &lt;code&gt;download_url&lt;/code&gt;. Validates SHA256 checksum after download.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559d19314a01d152d5ffc5f178fb79b71e2e948f" translate="yes" xml:space="preserve">
          <source>Optional subnetwork secondary range name specifying the secondary range from which to allocate the IP CIDR range for this alias IP range. If left unspecified, the primary range of the subnetwork will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eda8dd7fc61271d8b289575c669233ae87d21c3" translate="yes" xml:space="preserve">
          <source>Optional subnetwork to which all network endpoints in the NEG belong.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d12eac607c46226c2a0d801491c633870c4038" translate="yes" xml:space="preserve">
          <source>Optional timeout for Chef Automate v1 PostgreSQL dump (0 to disable timeout) (default: 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51b9fcb9ad844f167d007ca8b5e0494d4a24532" translate="yes" xml:space="preserve">
          <source>Optional timeout for Chef Automate v1 PostgreSQL restore (0 to disable timeout) (default: 0)</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
