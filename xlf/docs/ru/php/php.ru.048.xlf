<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="c3710341758b5489281fd49db18cbb694cc9f2ec" translate="yes" xml:space="preserve">
          <source>The ReflectionClass class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410480534295822f7eccb470f68dfbe85875d4e0" translate="yes" xml:space="preserve">
          <source>The ReflectionClassConstant class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14bca8046329ae8f538f9c8a8f6c7635f87ffc8b" translate="yes" xml:space="preserve">
          <source>The ReflectionException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59988814dbcdb70ec7c5b531520b0f7299483001" translate="yes" xml:space="preserve">
          <source>The ReflectionException class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d157d182475822b37e7a6f302e512023ec7e3b9" translate="yes" xml:space="preserve">
          <source>The ReflectionExtension class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa387dba5b0a2821e778e705dc77bf636aef32a" translate="yes" xml:space="preserve">
          <source>The ReflectionFunction class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd11d34a21e10778cefacb576553be592618e2ec" translate="yes" xml:space="preserve">
          <source>The ReflectionFunctionAbstract class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d632daebe02b3efb31ffc19d520cfa637a7ba4c" translate="yes" xml:space="preserve">
          <source>The ReflectionGenerator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8104bfbb9e3d2c1f0b7d90c6bfcfaecefd1ac2" translate="yes" xml:space="preserve">
          <source>The ReflectionMethod class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fbf53c3201c743d14d99c4a08d88e3b6ba9ee1" translate="yes" xml:space="preserve">
          <source>The ReflectionNamedType class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c646107f1f7915ddd20fd7208703e0e16942c8" translate="yes" xml:space="preserve">
          <source>The ReflectionObject class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158adefe59adf45eb963ebff39055b0c272dbd0f" translate="yes" xml:space="preserve">
          <source>The ReflectionParameter class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7540048dabc4b89c3fc17ecdbe0bd6ae18c02ae0" translate="yes" xml:space="preserve">
          <source>The ReflectionProperty class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1371ceb255157523aec687e49fba350a7a5b1723" translate="yes" xml:space="preserve">
          <source>The ReflectionType class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5076b627b85cfd48504de2c552ec3ba72fdd8a6" translate="yes" xml:space="preserve">
          <source>The ReflectionZendExtension class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795e8396668c2d83a473ae4081bad1fe22ef7e95" translate="yes" xml:space="preserve">
          <source>The Reflector interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816b79646e70e6ef8507f741fbe557b2fdedd74d" translate="yes" xml:space="preserve">
          <source>The RegexIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c0d7e0c1802bddf2d478576b48e0be3a2d968e" translate="yes" xml:space="preserve">
          <source>The ResourceBundle class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4996ce2045b7a6a131a868df9cb9cd9594a85611" translate="yes" xml:space="preserve">
          <source>The RuntimeException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6254466a2fcab8375e12c6e91be175a4609fa20f" translate="yes" xml:space="preserve">
          <source>The SCA_LocalProxy or SCA_SoapProxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b8a1b6a7222ecfd47c85bf6eb06cb3d2576214" translate="yes" xml:space="preserve">
          <source>The SITE command. Note that this parameter isn't escaped so there may be some issues with filenames containing spaces and other characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92eae13ca79283a5b808c5614f9a89af41840675" translate="yes" xml:space="preserve">
          <source>The SOAP action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9ca1746c5cc8dec5bd0a52da9cd0d7ccb5080f" translate="yes" xml:space="preserve">
          <source>The SOAP request. If this argument is omitted, the request is assumed to be in the raw POST data of the HTTP request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f770be9e54f5ea001fc1207a6522cdb961317180" translate="yes" xml:space="preserve">
          <source>The SOAP version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72593623508b3854af2f45b91be0807eebfa684f" translate="yes" xml:space="preserve">
          <source>The SQL Server version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e228414a8c69ad17ce3492ae97b43060a9e638e6" translate="yes" xml:space="preserve">
          <source>The SQL query to execute (typically an INSERT, UPDATE, or DELETE query).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f828fd7131002fbd1ec56cd13b1499d647cdd4" translate="yes" xml:space="preserve">
          <source>The SQL query to execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a3f67829af10c21bb67e1affff7d39ca378abf" translate="yes" xml:space="preserve">
          <source>The SQL query to prepare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a301ed5e207cc2abc1b861484994a56fa7f5312c" translate="yes" xml:space="preserve">
          <source>The SQL statement or statements to be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3cf2aa0088304e7d692c0d03b90d4bdd6b1af4" translate="yes" xml:space="preserve">
          <source>The SQL statement or statements to be executed. When multiple statements are passed to the function, they are automatically executed as one transaction, unless there are explicit BEGIN/COMMIT commands included in the query string. However, using multiple transactions in one function call is not recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71037a463a56f3d7d89cb15f38fbb23052858b3e" translate="yes" xml:space="preserve">
          <source>The SQL statement to prepare and execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8873d589fab8cf33e4409b9f302de16103702f7f" translate="yes" xml:space="preserve">
          <source>The SQL statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857b8ae3ec7b3463266fdbbb01c58a23361d50c3" translate="yes" xml:space="preserve">
          <source>The SQL type used to represent the column value in the database. If the column in the result set is the result of a function, this value is not returned by &lt;strong&gt;PDOStatement::getColumnMeta()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5610873db03b6d1a5c005e33771aef6a019da35f" translate="yes" xml:space="preserve">
          <source>The SQLSRV extension does not have a dedicated function for changing which database is connected to. The target database is specified in the $connectionOptions array that is passed to sqlsrv_connect. To change the database on an open connection, execute the following query &quot;USE dbName&quot; (e.g. sqlsrv_query($conn, &quot;USE dbName&quot;)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6afbe4a0719ee5be10e9fd8e7496ddbae4d932" translate="yes" xml:space="preserve">
          <source>The SQLite collation documentation: &lt;a href=&quot;http://sqlite.org/datatype3.html#collation&quot;&gt;&amp;raquo; http://sqlite.org/datatype3.html#collation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d054586303b80192780457eaae4a83e09a9d2ec2" translate="yes" xml:space="preserve">
          <source>The SQLite3 class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c257e50d339d07f7331e7b6865efeec1a210d09" translate="yes" xml:space="preserve">
          <source>The SQLite3Result class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a200a1bf32c1029c360ff9a50c74ce233414b0b4" translate="yes" xml:space="preserve">
          <source>The SQLite3Stmt class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9808b4effcf16b15dfadb4c534fef6ba322b250" translate="yes" xml:space="preserve">
          <source>The SSL handshake is done</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751877173629a94daf17d85aa707eb10965f5acd" translate="yes" xml:space="preserve">
          <source>The Scope Resolution Operator (also called Paamayim Nekudotayim) or in simpler terms, the double colon, is a token that allows access to &lt;a href=&quot;language.oop5.static&quot;&gt;static&lt;/a&gt;, &lt;a href=&quot;language.oop5.constants&quot;&gt;constant&lt;/a&gt;, and overridden properties or methods of a class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054b65b1b819727f50e6f829160355bf836f8a63" translate="yes" xml:space="preserve">
          <source>The Seekable iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95339e7f993c0c362e007c20aa248be04a91a113" translate="yes" xml:space="preserve">
          <source>The SeekableIterator interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34580dbd9eb1d0c09f327fbf8bbec0217920a0f9" translate="yes" xml:space="preserve">
          <source>The Sequence interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b271a08353dec2b8b2419cec687f3d34a0dd9fb" translate="yes" xml:space="preserve">
          <source>The Serializable interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f7f9a3060bec21a918b2cafbcbdef2edafd521" translate="yes" xml:space="preserve">
          <source>The SessionHandler class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef3b8222a0d40daacd1179fbd0be5ec01546f28" translate="yes" xml:space="preserve">
          <source>The SessionHandlerInterface class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b85324a9041dbcb30a819f4a3e5c94d54500e0a" translate="yes" xml:space="preserve">
          <source>The SessionIdInterface interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110ea7b92a1ca241f30328ecae19233f5ce0cbcd" translate="yes" xml:space="preserve">
          <source>The SessionUpdateTimestampHandlerInterface interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a285dee62193dc713b0d382694a174f5189ce3" translate="yes" xml:space="preserve">
          <source>The Set class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da7ce5feb29b403fe236a17b0001e6c405fcb49" translate="yes" xml:space="preserve">
          <source>The SimpleXMLElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28db0b05e10f33cafc01c5aa2c82b5df545b1d2" translate="yes" xml:space="preserve">
          <source>The SimpleXMLIterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07feda4b3c7bfd28106ca1f0a433c074d93ed23" translate="yes" xml:space="preserve">
          <source>The SimpleXMLIterator provides recursive iteration over all nodes of a &lt;a href=&quot;class.simplexmlelement&quot;&gt;SimpleXMLElement&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296b52c170c8461f993d99ffb9962c65aa936b92" translate="yes" xml:space="preserve">
          <source>The SoapClient class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937efb7241812dc37546106f141e7a6427345af8" translate="yes" xml:space="preserve">
          <source>The SoapClient class provides a client for &lt;a href=&quot;http://www.w3.org/TR/soap11/&quot;&gt;&amp;raquo; SOAP 1.1&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/soap12/&quot;&gt;&amp;raquo; SOAP 1.2&lt;/a&gt; servers. It can be used in WSDL or non-WSDL mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ae596b269252110d4a219e5dc2555899359e8c" translate="yes" xml:space="preserve">
          <source>The SoapFault class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4209680b5aa0ed7b33cf763d30d9ae736d4bc4" translate="yes" xml:space="preserve">
          <source>The SoapHeader class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a329444185b816f5df459a9f40d71370001cadf" translate="yes" xml:space="preserve">
          <source>The SoapParam class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3595e57a56868ce898c510258b663fc131302114" translate="yes" xml:space="preserve">
          <source>The SoapServer class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d457a99c725b5886924dcd04c129ad6e23a3df" translate="yes" xml:space="preserve">
          <source>The SoapServer class provides a server for the &lt;a href=&quot;http://www.w3.org/TR/soap11/&quot;&gt;&amp;raquo; SOAP 1.1&lt;/a&gt; and &lt;a href=&quot;http://www.w3.org/TR/soap12/&quot;&gt;&amp;raquo; SOAP 1.2&lt;/a&gt; protocols. It can be used with or without a WSDL service description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb66b81aa2b359b80ea076aaf462717557a52b21" translate="yes" xml:space="preserve">
          <source>The SoapVar class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce795f8b7e0d81dc451e323046e35f989ab651a" translate="yes" xml:space="preserve">
          <source>The SolrClient class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eceafba82238a4f1c0b50a0f7a9479e52a30d1ac" translate="yes" xml:space="preserve">
          <source>The SolrClientException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f629254aaac87f205c059859cb1e10ca7be076" translate="yes" xml:space="preserve">
          <source>The SolrCollapseFunction class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07e6b53597f93b5f390a105aa63fa68c44ae732" translate="yes" xml:space="preserve">
          <source>The SolrDisMaxQuery class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f989959036fe880a9d6ac426c7f255c0be7b97d7" translate="yes" xml:space="preserve">
          <source>The SolrDocument class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6574a0510609ef2150dfd23ccd37f0cdcf40538" translate="yes" xml:space="preserve">
          <source>The SolrDocumentField class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72522f863c368d8c011db1d68cf050cf8dc9eeb4" translate="yes" xml:space="preserve">
          <source>The SolrException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d43b9b167009b702ff80816e4df97697718594" translate="yes" xml:space="preserve">
          <source>The SolrGenericResponse class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b12bafba806f4b4a10875d46109cc7196bd1e8" translate="yes" xml:space="preserve">
          <source>The SolrIllegalArgumentException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463b5ff1757d8a5a5c00bca146d8996c3c9b73ea" translate="yes" xml:space="preserve">
          <source>The SolrIllegalOperationException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67df88215cb8b144960ca6b883b7bec3e7b4eb46" translate="yes" xml:space="preserve">
          <source>The SolrInputDocument class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc88660d53907661f29842f1cd521618ae76bdd" translate="yes" xml:space="preserve">
          <source>The SolrInputDocument instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89930047ef7c9166e6ebd99ab5957abcbdf094af" translate="yes" xml:space="preserve">
          <source>The SolrMissingMandatoryParameterException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfc5fb037b54d30960da44065efb0006b4d1374" translate="yes" xml:space="preserve">
          <source>The SolrModifiableParams class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90085f1b4107e7e93d95debd02bbecb9de4c135e" translate="yes" xml:space="preserve">
          <source>The SolrObject class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1d26a7eb6d19ad78b213f9ba43ad8f8e17cf40" translate="yes" xml:space="preserve">
          <source>The SolrParams class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b05f9beb799fbd7d1a9779e68dd3fba30e2c61" translate="yes" xml:space="preserve">
          <source>The SolrPingResponse class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e316eee252314c175b99b0ca9ea697022547f46b" translate="yes" xml:space="preserve">
          <source>The SolrQuery class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c559932d91af46e8b63f168152dec7250bed8f" translate="yes" xml:space="preserve">
          <source>The SolrQueryResponse class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c8e7dfb6e9632462bb75742bba8f9fa1d25b0e" translate="yes" xml:space="preserve">
          <source>The SolrResponse class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101a7b506c9aa2ad35124afad316696d8adf82ef" translate="yes" xml:space="preserve">
          <source>The SolrServerException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdb9356e8ce5bbaf6f3b8f807f9ba7b2ab8ee51" translate="yes" xml:space="preserve">
          <source>The SolrUpdateResponse class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140df029b83467719e591d4ca6c6f6a9ad42097d" translate="yes" xml:space="preserve">
          <source>The SolrUtils class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd059f1b19034f277e3703801df863fc1fc47b3" translate="yes" xml:space="preserve">
          <source>The SphinxClient class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67810111f63c203e6394aaed76a0fae683685232" translate="yes" xml:space="preserve">
          <source>The SphinxClient class provides object-oriented interface to Sphinx.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f8ea680f1da46c6e611a4006bb801e465aad76" translate="yes" xml:space="preserve">
          <source>The SplBool class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65025e5b8c85037dbea6220d64c055385a605c1a" translate="yes" xml:space="preserve">
          <source>The SplBool class is used to enforce strong typing of the bool type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fe56552ae102f1f376684135b61f813c1e3d5a" translate="yes" xml:space="preserve">
          <source>The SplDoublyLinkedList class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a254204bbd9b337e8c6f0e55b8829681317faa" translate="yes" xml:space="preserve">
          <source>The SplDoublyLinkedList class provides the main functionalities of a doubly linked list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65fc3f48c912d9bb051822b82c50aa27a4594d63" translate="yes" xml:space="preserve">
          <source>The SplEnum class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc923cfe7048aa59fbbadce63f19261180057c7b" translate="yes" xml:space="preserve">
          <source>The SplFileInfo class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79c33a4f9c3d475b62a3e2e834aa5f65b74d4e6" translate="yes" xml:space="preserve">
          <source>The SplFileInfo class offers a high-level object oriented interface to information for an individual file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d2ea96fec0f838f5a4fd198cd443fa60c313b8" translate="yes" xml:space="preserve">
          <source>The SplFileObject class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12e8526957068eb73c378e79ba61ab907c1c585" translate="yes" xml:space="preserve">
          <source>The SplFileObject class offers an object oriented interface for a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28ad9e8a225c4066106a9ca67c6c1b88a068f49" translate="yes" xml:space="preserve">
          <source>The SplFixedArray class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5563933fd95ef454d59c9aa0e83986551983398" translate="yes" xml:space="preserve">
          <source>The SplFixedArray class provides the main functionalities of array. The main differences between a SplFixedArray and a normal PHP array is that the SplFixedArray is of fixed length and allows only integers within the range as indexes. The advantage is that it allows a faster array implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c8c659392420cf4795a0f539959e687cb2f8f6" translate="yes" xml:space="preserve">
          <source>The SplFloat class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd3a9353bf668e799ab4ceaa15af5f742d660f7" translate="yes" xml:space="preserve">
          <source>The SplFloat class is used to enforce strong typing of the float type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d177b4e9b807445ee27192eff62ebd2fba1483" translate="yes" xml:space="preserve">
          <source>The SplHeap class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dad7cc3271721a3899d02b8d6acd2e126d33934" translate="yes" xml:space="preserve">
          <source>The SplHeap class provides the main functionalities of a Heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0f13d9476d90d3f96a79fd936e246f6b6222cd" translate="yes" xml:space="preserve">
          <source>The SplInt class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a6e1d8f0d21e434cc6f4c9cab03470d4f08c3c" translate="yes" xml:space="preserve">
          <source>The SplInt class is used to enforce strong typing of the integer type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8161bdb1de9bb10629b31ec9bf1f81cd170ddad7" translate="yes" xml:space="preserve">
          <source>The SplMaxHeap class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c288ba8b61fad8ca7f16d60422336faa5fe119" translate="yes" xml:space="preserve">
          <source>The SplMaxHeap class provides the main functionalities of a heap, keeping the maximum on the top.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d3da5799ff899e5e314da8838af3b709679561" translate="yes" xml:space="preserve">
          <source>The SplMinHeap class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054693f687dcbdc3235c558c02357cafa6badd3e" translate="yes" xml:space="preserve">
          <source>The SplMinHeap class provides the main functionalities of a heap, keeping the minimum on the top.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07288a51ef450b591f9940488f3e2a99bb4a15aa" translate="yes" xml:space="preserve">
          <source>The SplObjectStorage class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10daea98dc167e3ef7e9189ed836247b248c0522" translate="yes" xml:space="preserve">
          <source>The SplObjectStorage class provides a map from objects to data or, by ignoring data, an object set. This dual purpose can be useful in many cases involving the need to uniquely identify objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402e9665457fa5d1a78ba2e24c20bcc70f09726f" translate="yes" xml:space="preserve">
          <source>The SplObserver interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcef60c0066bf7583c1e539b839071bd1c83a7c" translate="yes" xml:space="preserve">
          <source>The SplPriorityQueue class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbe0c8f18a57e0402ea0c2fb94c6aa87edf9f50" translate="yes" xml:space="preserve">
          <source>The SplPriorityQueue class provides the main functionalities of a prioritized queue, implemented using a max heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335590f2ec6c75966826744c79cc6a84ba9fc161" translate="yes" xml:space="preserve">
          <source>The SplQueue class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef500908d580a6edf5b708c4f8dc13dbb27e3d0" translate="yes" xml:space="preserve">
          <source>The SplQueue class provides the main functionalities of a queue implemented using a doubly linked list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fa3d6dd5aa27243b8010222b4409c1ab41c06e" translate="yes" xml:space="preserve">
          <source>The SplStack class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23428ba7c1ca3ff786bb0b7fd4d1be97e8cb1098" translate="yes" xml:space="preserve">
          <source>The SplStack class provides the main functionalities of a stack implemented using a doubly linked list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207ea9564ee709209a83c0346313f27b94eae224" translate="yes" xml:space="preserve">
          <source>The SplString class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322cdb7f01254d5cc37fd8aa3e392858909be78f" translate="yes" xml:space="preserve">
          <source>The SplString class is used to enforce strong typing of the string type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebdc3e1d9f33dca743aafaa3c6c8998a36bdd21" translate="yes" xml:space="preserve">
          <source>The SplSubject interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02f74af46a537b95bae0fc489bd30d596db5ba1" translate="yes" xml:space="preserve">
          <source>The SplTempFileObject class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9b95e436c5e7f57bb03757c2537b9315bac178" translate="yes" xml:space="preserve">
          <source>The SplTempFileObject class offers an object oriented interface for a temporary file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a051dea3c2cce14a1da519525e1b3456099d0b" translate="yes" xml:space="preserve">
          <source>The SplType class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b1b988ba3b143742bd0a6f054281aa61b05f1a" translate="yes" xml:space="preserve">
          <source>The Spoofchecker class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46840c75352e599f1f090a5b7dccb4a3426fe0d1" translate="yes" xml:space="preserve">
          <source>The Stack class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a29f6cf83d32f59ce6d6e952b3579f1f9ba30a8" translate="yes" xml:space="preserve">
          <source>The SyncEvent class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c1487803ce334c240a332f4d6392d1d967f2ba" translate="yes" xml:space="preserve">
          <source>The SyncMutex class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184694b9eaf828c8ea4c049649573165386f7068" translate="yes" xml:space="preserve">
          <source>The SyncReaderWriter class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefac95a43c607b64e4ad1105325a6c5c3523d1d" translate="yes" xml:space="preserve">
          <source>The SyncSemaphore class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d2bce796c19771b9e7c372442ed926c3daa1bd" translate="yes" xml:space="preserve">
          <source>The SyncSharedMemory class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bf87013fe1c1243e87572cd37294c01ef2da08" translate="yes" xml:space="preserve">
          <source>The Tag ID for which a Tag Name will be looked up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98b03155369a66cc0f8e090dafc47995a336184" translate="yes" xml:space="preserve">
          <source>The Thread class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74c30da69e4c78cd68b59ab65fec6d9a3a98744" translate="yes" xml:space="preserve">
          <source>The Threaded class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2ba0e404c4a5951af8a4ef829883a9cd961462" translate="yes" xml:space="preserve">
          <source>The Transliterator class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155cc0fa53f0aee795158f7434da28781f98421b" translate="yes" xml:space="preserve">
          <source>The Transmission Control Protocol is a reliable, connection based, stream oriented, full duplex protocol. TCP guarantees that all data packets will be received in the order in which they were sent. If any packet is somehow lost during communication, TCP will automatically retransmit the packet until the destination host acknowledges that packet. For reliability and performance reasons, the TCP implementation itself decides the appropriate octet boundaries of the underlying datagram communication layer. Therefore, TCP applications must allow for the possibility of partial record transmission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a106867f360cfb018e560a8dcb900758ffb9172f" translate="yes" xml:space="preserve">
          <source>The Traversable interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dac99323cb4cd246ddb8e830e9e559acaa7de49" translate="yes" xml:space="preserve">
          <source>The UConverter class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d4f1c44de01e40588d309a695f2c7502549a7c" translate="yes" xml:space="preserve">
          <source>The UID of the given message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fc28195074503fcfe7a6c24ba7c363be5272e0" translate="yes" xml:space="preserve">
          <source>The URI associated with the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbeda8a5226369670892555ef631616fc77158a" translate="yes" xml:space="preserve">
          <source>The URI of the namespace associated with the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faaed26c64c4df0cb45f07bb5b2a43ff3ebc9a39" translate="yes" xml:space="preserve">
          <source>The URI of the namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66f2a76cc14e53eb11072314fa11482ab42e12b" translate="yes" xml:space="preserve">
          <source>The URI of the resource for the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34283bc005e658679932c43f20916c05959002c" translate="yes" xml:space="preserve">
          <source>The URI which was given in order to access this page; for instance, '&lt;em&gt;/index.html&lt;/em&gt;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3188aedacd84130e7a929c1c552f796889f8b08a" translate="yes" xml:space="preserve">
          <source>The URL can be broken apart with &lt;a href=&quot;function.parse-url&quot;&gt;parse_url()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ad6c9a2fb1f34150c7981eff99f06f1d94a27c" translate="yes" xml:space="preserve">
          <source>The URL can be broken apart with &lt;a href=&quot;function.parse-url&quot;&gt;parse_url()&lt;/a&gt;. Note that only URLs delimited by :// are supported. : and :/ while technically valid URLs, are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da22dae062ad84af6ddb99123bc2bff022f8bad" translate="yes" xml:space="preserve">
          <source>The URL encoded data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b2b813a1bfb676b6b5e3f3d525a0cbb7b9d570" translate="yes" xml:space="preserve">
          <source>The URL encoded string to be decoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59f9d395b299b2420fff1dd9107ae90940468fd" translate="yes" xml:space="preserve">
          <source>The URL to be decoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c45690441b989994de100f8722bab92b72a6b4" translate="yes" xml:space="preserve">
          <source>The URL to be encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bbb875984fd22c1c6537ea2199fe22130b48eb" translate="yes" xml:space="preserve">
          <source>The URL to fetch. This can also be set when initializing a session with &lt;a href=&quot;function.curl-init&quot;&gt;curl_init()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b105d3ee2c6502f41cf45b4fb32ca6e690c49a38" translate="yes" xml:space="preserve">
          <source>The URL to parse. Invalid characters are replaced by &lt;em&gt;_&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44951bf0337200610337aef79e55b5109f5a5523" translate="yes" xml:space="preserve">
          <source>The URL to request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153d5aa3ae3090f4f901eeebb7899804f16b6dc7" translate="yes" xml:space="preserve">
          <source>The URL to the current file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0074336f4ed849548844fea92fa93024a79aca1" translate="yes" xml:space="preserve">
          <source>The URL which the &lt;code&gt;path_from&lt;/code&gt; should be renamed to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63b62b8280b3bd21f302dfa62bc9653979092fb" translate="yes" xml:space="preserve">
          <source>The UnderflowException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98aba71f332f756cd4fc8cdaa8cc091d901f269" translate="yes" xml:space="preserve">
          <source>The UnexpectedValueException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560979d97c47c7933306b9a35fe30da0f4583a21" translate="yes" xml:space="preserve">
          <source>The Unicode Consortium has defined a number of normalization forms reflecting the various needs of applications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c032cff2f0336950235bbf6beeb3c54d321f0b2" translate="yes" xml:space="preserve">
          <source>The Unicode property to lookup (see the &lt;em&gt;IntlChar::PROPERTY_*&lt;/em&gt; constants).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8927586808077a645b537344c94beef5726acf1" translate="yes" xml:space="preserve">
          <source>The Unicode value of the code point with the given name (as an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;), or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if there is no such code point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fd1bf8e7bfe0cdf030b1858e1604d14d62af2e" translate="yes" xml:space="preserve">
          <source>The Unicode version number, as an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;. For example, version &lt;em&gt;1.3.31.2&lt;/em&gt; would be represented as &lt;em&gt;[1, 3, 31, 2]&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4b8d200ccbf233c98903d20aee3875d91e6242" translate="yes" xml:space="preserve">
          <source>The Unix epoch is 1970-01-01 00:00:00 UTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7bfa7405f2e8cd529e594f77b30b7f0fe917a7" translate="yes" xml:space="preserve">
          <source>The Unix man page for your crypt function for more information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09980d2b2be14c4676b2b0fe40f40f3c6c71437" translate="yes" xml:space="preserve">
          <source>The Unix manual page for initgroups(3).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a134f4c8dac7accccdeacdde9418ee2335ca1a60" translate="yes" xml:space="preserve">
          <source>The User Agent to be analyzed. By default, the value of HTTP User-Agent header is used; however, you can alter this (i.e., look up another browser's info) by passing this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084f5c5d099f14f2fe8627237b6d87b44109f04c" translate="yes" xml:space="preserve">
          <source>The User Datagram Protocol is a connectionless, unreliable, protocol with fixed record lengths. Due to these aspects, UDP requires a minimum amount of protocol overhead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a6d2f654908cd8e59fd1c1774e7580df6d823d" translate="yes" xml:space="preserve">
          <source>The V8 Javascript Engine version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182294212d2a9bd6de08d38c0376d6340873b6cf" translate="yes" xml:space="preserve">
          <source>The V8Js class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594d4b29af59fe4185a5d92fec07f7e046017644" translate="yes" xml:space="preserve">
          <source>The V8JsException class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95bcc0f185d201594e9699c0e78f35c59a249ed" translate="yes" xml:space="preserve">
          <source>The VarnishAdmin class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b48fe251c4030e23ba5c42370d58e3664ff8ff" translate="yes" xml:space="preserve">
          <source>The VarnishLog class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefe95d2aa8846fdcf3bd29604b6a87bda2cdbb3" translate="yes" xml:space="preserve">
          <source>The VarnishStat class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3b5fd418a40d9fcd01750d14be392f53d826e1" translate="yes" xml:space="preserve">
          <source>The Vector class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eda92095bb614fe9b0a6b7f0932a9313c8081ea" translate="yes" xml:space="preserve">
          <source>The Volatile class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d2539cdff7b6bf5756c4e3c76502a8c3101aa0" translate="yes" xml:space="preserve">
          <source>The WeakMap class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57acc397cde51ddef35173def73007fed41addea" translate="yes" xml:space="preserve">
          <source>The WeakRef class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b890d873d9ea776187af70b27104504d2bac806" translate="yes" xml:space="preserve">
          <source>The WeakRef class provides a gateway to objects without preventing the garbage collector from freeing those objects. It also provides a way to turn a weak reference into a strong one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0bdd48ff16411667e506fff2b81b09dce085887" translate="yes" xml:space="preserve">
          <source>The Windows implementation of &lt;strong&gt;mail()&lt;/strong&gt; differs in many ways from the Unix implementation. First, it doesn't use a local binary for composing messages but only operates on direct sockets which means a &lt;em&gt;MTA&lt;/em&gt; is needed listening on a network socket (which can either on the localhost or a remote machine).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ac5e09dba8494309e4c90a8ba21bec279cfb4a" translate="yes" xml:space="preserve">
          <source>The Worker class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653b787f7ac1c9b7d3bc91c0e6c94a612eb2f225" translate="yes" xml:space="preserve">
          <source>The X coordinate of the cropped region's top left corner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ceb2123967bcc3ca8503e6765c63cab7b89dd3f" translate="yes" xml:space="preserve">
          <source>The X offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24015aeebab53ffda066fbeb2138cb41aca0f349" translate="yes" xml:space="preserve">
          <source>The X server name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d0972c427346859e6ffae4e10abb5b1df27ad5" translate="yes" xml:space="preserve">
          <source>The X.509 certificate used to digitally sign infilename. See &lt;a href=&quot;https://secure.php.net/manual/en/openssl.certparams.php&quot;&gt;Key/Certificate parameters&lt;/a&gt; for a list of valid values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb701a21ceba452e4e069d92fab144e00c88997b" translate="yes" xml:space="preserve">
          <source>The XML SOAP request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcd49bc85d548017c52295cf228956fd744e626" translate="yes" xml:space="preserve">
          <source>The XML SOAP response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ba97427782c54a1979d67e3195866c514e05b1" translate="yes" xml:space="preserve">
          <source>The XML node name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b893ec5986ec16795db9b231e36fc3aacd7867fc" translate="yes" xml:space="preserve">
          <source>The XML node namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c296613ac85af169608c7bc41743cec32c4b5ff" translate="yes" xml:space="preserve">
          <source>The XML response string from the Solr server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a9f887a6ad5fb47f99a45be772fc91866970fd" translate="yes" xml:space="preserve">
          <source>The XMLReader class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3a947ff759ff994c22ed51d1533323020df043" translate="yes" xml:space="preserve">
          <source>The XMLReader extension is an XML Pull parser. The reader acts as a cursor going forward on the document stream and stopping at each node on the way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9861abefbc0baae379653bbe13a1ac761acf499c" translate="yes" xml:space="preserve">
          <source>The XPath expression to execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae65e123a9a1ca0f583b6788fff1d31e59e896f1" translate="yes" xml:space="preserve">
          <source>The XSLTProcessor class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b46937df718fdace3ffa5ee2674322f05c56468" translate="yes" xml:space="preserve">
          <source>The Y coordinate of the cropped region's top left corner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af72813aa71359466df177afbad799f9754d1e82" translate="yes" xml:space="preserve">
          <source>The Y offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c9c97608528993f474d0bb38cbcabe1de8fb2f" translate="yes" xml:space="preserve">
          <source>The Yaf_Action_Abstract class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a06cf83e388683c2a523a825039499f6c828d6e0" translate="yes" xml:space="preserve">
          <source>The Yaf_Application class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd13856afeadd06dbcb3e8b51349ba8cd1e7f1d2" translate="yes" xml:space="preserve">
          <source>The Yaf_Bootstrap_Abstract class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c8f36a53735864ae1069d41dc4e3c18871b041" translate="yes" xml:space="preserve">
          <source>The Yaf_Config_Abstract class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fabd6e00754614863ee4ca3023a9a6ff928817f" translate="yes" xml:space="preserve">
          <source>The Yaf_Config_Ini class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152409c285b5026ab94ae634d7293dd54a182663" translate="yes" xml:space="preserve">
          <source>The Yaf_Config_Simple class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a5c48b3c02235954b4d703a2f897b384dbc3a9" translate="yes" xml:space="preserve">
          <source>The Yaf_Controller_Abstract class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e3b594110c7c315b56285a5fa20755e95f23d1" translate="yes" xml:space="preserve">
          <source>The Yaf_Dispatcher class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a75a29542fceb0fc26fa1c252dc7d0b75b502f2" translate="yes" xml:space="preserve">
          <source>The Yaf_Exception class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ab8b1058cc4cbae1e26c55e4d158f546e7370d" translate="yes" xml:space="preserve">
          <source>The Yaf_Exception_DispatchFailed class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36815fd8884e774887c601f8f3fdc0e9a96c0f67" translate="yes" xml:space="preserve">
          <source>The Yaf_Exception_LoadFailed class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3051bd1dab96c328d5435c48828a21a08d4217" translate="yes" xml:space="preserve">
          <source>The Yaf_Exception_LoadFailed_Action class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d33977c2eec23b1aa08a3b4348101dc3f838806" translate="yes" xml:space="preserve">
          <source>The Yaf_Exception_LoadFailed_Controller class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7018bea778eef27a330c3e3fb8baa0e5a48f6f34" translate="yes" xml:space="preserve">
          <source>The Yaf_Exception_LoadFailed_Module class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3c268da5ec6986f907859b75ae557e3594c1f0" translate="yes" xml:space="preserve">
          <source>The Yaf_Exception_LoadFailed_View class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3ddbe76c038250efbe2cf97a909d20a5bc524b" translate="yes" xml:space="preserve">
          <source>The Yaf_Exception_RouterFailed class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2700301a6a0fbfff7d4cb02c4d482a4d014332" translate="yes" xml:space="preserve">
          <source>The Yaf_Exception_StartupError class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ca603e6f2f931976eebeacb34ad08dc93cf2d1" translate="yes" xml:space="preserve">
          <source>The Yaf_Exception_TypeError class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ccaa6a73f96b15050925b1028a251e2a3cec0e" translate="yes" xml:space="preserve">
          <source>The Yaf_Loader class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ff6819d3e9e7b1a374031f7d8395c50c74f2ba" translate="yes" xml:space="preserve">
          <source>The Yaf_Plugin_Abstract class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc87d2026e338f4a45bbcebd879a832de4ffd48" translate="yes" xml:space="preserve">
          <source>The Yaf_Registry class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f583a0ecca8acc72cc434d3341dcf1b2f4c6e0d" translate="yes" xml:space="preserve">
          <source>The Yaf_Request_Abstract class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb8164f22be1fdb5deeb29f33da040e54ad1577" translate="yes" xml:space="preserve">
          <source>The Yaf_Request_Http class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724ee6a88ea8b1821c5ddd1d290a37235701c294" translate="yes" xml:space="preserve">
          <source>The Yaf_Request_Simple class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9119c2c2356073076e00beb8c65509378f64f91f" translate="yes" xml:space="preserve">
          <source>The Yaf_Response_Abstract class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf44d7fa989ec4e4716386eb83f5bc8f7048fa39" translate="yes" xml:space="preserve">
          <source>The Yaf_Route_Interface class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b7483adc102b2dccf1dcfddac7aeebe68d3b5f" translate="yes" xml:space="preserve">
          <source>The Yaf_Route_Map class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd78612c0f2c9f1065e59f9beb46c2a681794294" translate="yes" xml:space="preserve">
          <source>The Yaf_Route_Regex class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477bbc6e7b5e292393296f7ec4e3d362668c6068" translate="yes" xml:space="preserve">
          <source>The Yaf_Route_Rewrite class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b09e50c71de9aae27dd22240a8563c620f07de" translate="yes" xml:space="preserve">
          <source>The Yaf_Route_Simple class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39f5bebe2084576f8aac03c58d079fc1708ff7c" translate="yes" xml:space="preserve">
          <source>The Yaf_Route_Static class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0432220c2ae15e7b54c96c5cd453e855d8ee1b0" translate="yes" xml:space="preserve">
          <source>The Yaf_Route_Supervar class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753ac4180c8d9a93d453036326ce9ec842138f0c" translate="yes" xml:space="preserve">
          <source>The Yaf_Router class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbd77bb7e3ab74095e9bae00c1ecce72588fa56" translate="yes" xml:space="preserve">
          <source>The Yaf_Session class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfbb0cd661765e0326fc5e7408a5f902fdc934e" translate="yes" xml:space="preserve">
          <source>The Yaf_View_Interface class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f50f5b7241522456e27baf9f3d7f2f77f32ad47" translate="yes" xml:space="preserve">
          <source>The Yaf_View_Simple class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1920b83067477677020cfa60d7e5a56c081e80" translate="yes" xml:space="preserve">
          <source>The Yar_Client class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5025329f83bdaec16b99a982a4da2b8d8bf02c5" translate="yes" xml:space="preserve">
          <source>The Yar_Client_Exception class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d553245de8e7c8c7063e7f76d44d65ae7f5e5a3c" translate="yes" xml:space="preserve">
          <source>The Yar_Concurrent_Client class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aaa5df967c737127aecd7c10b46539061ed4d94" translate="yes" xml:space="preserve">
          <source>The Yar_Server class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92d610a8ee6bb1a9e9c47ef066b603a2e39ea73" translate="yes" xml:space="preserve">
          <source>The Yar_Server_Exception class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a933ce2dae96721658e66154bd718495d2c842f2" translate="yes" xml:space="preserve">
          <source>The Zend Engine 1, driving PHP 4, implements the &lt;a href=&quot;language.variables.scope#language.variables.scope.static&quot;&gt;static&lt;/a&gt; and &lt;a href=&quot;language.variables.scope#language.variables.scope.global&quot;&gt;global&lt;/a&gt; modifier for variables in terms of &lt;a href=&quot;https://secure.php.net/manual/en/language.references.php&quot;&gt; references&lt;/a&gt;. For example, a true global variable imported inside a function scope with the &lt;em&gt;global&lt;/em&gt; statement actually creates a reference to the global variable. This can lead to unexpected behaviour which the following example addresses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdf776e707e64aa155c036409574abbd7de69ea" translate="yes" xml:space="preserve">
          <source>The ZipArchive class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf30794a28d5356480a2dc4a651dbf06deb12a62" translate="yes" xml:space="preserve">
          <source>The ability to refer to an external fully qualified name with an alias, or importing, is an important feature of namespaces. This is similar to the ability of unix-based filesystems to create symbolic links to a file or to a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb9caa3fe0e654320c067fc65460871f424ed0a" translate="yes" xml:space="preserve">
          <source>The above code can be slow, because the array size is fetched on every iteration. Since the size never changes, the loop be easily optimized by using an intermediate variable to store the size instead of repeatedly calling &lt;a href=&quot;function.count&quot;&gt;count()&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb844a903da37782f3e420a4c9fd9c278c863a17" translate="yes" xml:space="preserve">
          <source>The above code will produce the following information in the profiling file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f4583630e5907fc22e697be65cd90da19bf33c" translate="yes" xml:space="preserve">
          <source>The above example code can be easily exploited by passing in a string such as &lt;em&gt;&amp;lt;h1&amp;gt;{${eval($_GET[php_code])}}&amp;lt;/h1&amp;gt;&lt;/em&gt;. This gives the attacker the ability to execute arbitrary PHP code and as such gives them nearly complete access to your server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f865b34c1f4614e2a5b29fe64f6c5613a5fddc9" translate="yes" xml:space="preserve">
          <source>The above example creates constant &lt;em&gt;MyProject\Sub\Level\CONNECT_OK&lt;/em&gt;, class &lt;em&gt;MyProject\Sub\Level\Connection&lt;/em&gt; and function &lt;em&gt;MyProject\Sub\Level\connect&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474ee287cc32dc397f3195770da8f2456f3f2eb5" translate="yes" xml:space="preserve">
          <source>The above example produces a pair of separate keys, suitable for creation of an encrypt-then-HMAC construct, using AES-256 and SHA-256 for encryption and authentication respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85079155e6285c7ff86f19bd1a83eca6791335db" translate="yes" xml:space="preserve">
          <source>The above example will output something similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8de94159b1436873c4b4e839ba7c48668266a81" translate="yes" xml:space="preserve">
          <source>The above example will output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b6b978fd4862c8716ae717cc303176081beba4" translate="yes" xml:space="preserve">
          <source>The above example will produce something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fed58470048c0cffaecd49132df0bfa4744904" translate="yes" xml:space="preserve">
          <source>The above example will write the following to &lt;em&gt;file.csv&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9237d3e072aa53db4607b3ab6753d4fc41d321f" translate="yes" xml:space="preserve">
          <source>The above examples will output something similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97885d7a3ce5e1ca97b18ec31b2afe0777a46a43" translate="yes" xml:space="preserve">
          <source>The above examples will output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbaec18715b837525ef9bac2c4a843fca3a256c2" translate="yes" xml:space="preserve">
          <source>The above loop would run one time exactly, since after the first iteration, when truth expression is checked, it evaluates to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; (&lt;var&gt;&lt;var&gt;$i&lt;/var&gt;&lt;/var&gt; is not bigger than 0) and the loop execution ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4503146c1b6b08d64fb51a799a4f13d8d9c9895" translate="yes" xml:space="preserve">
          <source>The above script will output &lt;em&gt;3&lt;/em&gt;. By declaring &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; and &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; global within the function, all references to either variable will refer to the global version. There is no limit to the number of global variables that can be manipulated by a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dda7863bc35093c10f6aac32d61581b02349790" translate="yes" xml:space="preserve">
          <source>The above will appear to have two keys named 'AA', although one of them is actually named '\0A\0A'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d84a049ec6a47ac01ff5828c99923388d68253f" translate="yes" xml:space="preserve">
          <source>The absolute base URI of this node or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if the implementation wasn't able to obtain an absolute URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffee2b571b5a7de0b433be2c68a30d14c60ef5e5" translate="yes" xml:space="preserve">
          <source>The absolute pathname of the currently executing script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed0f09bd05d9453422a0aa08a7efba615a18b68" translate="yes" xml:space="preserve">
          <source>The absolute value of &lt;code&gt;number&lt;/code&gt;. If the argument &lt;code&gt;number&lt;/code&gt; is of type &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;, the return type is also &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;, otherwise it is &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; (as &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; usually has a bigger value range than &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3a60db9710c280cc1da8453f60cdf41bbacf7d" translate="yes" xml:space="preserve">
          <source>The accuracy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f539e87e388c8cfd84f29c879e539df6a3d48ff" translate="yes" xml:space="preserve">
          <source>The addition of basic headers, telling the MUA the From and Reply-To addresses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee0bbc767759fbdc509018278ac9f951a4ab1b0" translate="yes" xml:space="preserve">
          <source>The address of the page (if any) which referred the user agent to the current page. This is set by the user agent. Not all user agents will set this, and some provide the ability to modify &lt;var&gt;&lt;var&gt;HTTP_REFERER&lt;/var&gt;&lt;/var&gt; as a feature. In short, it cannot really be trusted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eba37534f750df448918f183d378694656fb467" translate="yes" xml:space="preserve">
          <source>The address specified when the socket stream was created will be used unless an alternate address is specified in &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d1d4571c6f1de18be87cec4e487e2ef7810954" translate="yes" xml:space="preserve">
          <source>The address to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db55b443427a7df8fef5eab3ae2fa8dfc6044cc" translate="yes" xml:space="preserve">
          <source>The affine matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a993f717ab41c75789a44f4c241d33d1aa7b9076" translate="yes" xml:space="preserve">
          <source>The algorithm name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fd5070471c561b33a84f906e4d156b9c607c5f" translate="yes" xml:space="preserve">
          <source>The algorithm to be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4091839839552943c5e57d0aa18bf6f5de937edb" translate="yes" xml:space="preserve">
          <source>The algorithm to check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0f8ca23b949583122fa1b0db49d5a8e6571543" translate="yes" xml:space="preserve">
          <source>The alias must be defined in &lt;var&gt;php.ini&lt;/var&gt;, and not &lt;var&gt;.htaccess&lt;/var&gt; or &lt;var&gt;httpd.conf&lt;/var&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517a657b8ba2358cdae7181263e81984b8e049d7" translate="yes" xml:space="preserve">
          <source>The alias name for the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1426c13acddaa81767f2db123c4e8e5dc61c0e" translate="yes" xml:space="preserve">
          <source>The alias that can be used in &lt;em&gt;phar://&lt;/em&gt; URLs to refer to this archive, rather than its full path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7a32c152816d36b1b603d96ced41f364283c26" translate="yes" xml:space="preserve">
          <source>The alias that may be used to refer to the phar archive. Note that many phar archives specify an explicit alias inside the phar archive, and a &lt;a href=&quot;class.pharexception&quot;&gt;PharException&lt;/a&gt; will be thrown if a new alias is specified in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815e1fc13115612df9e39f9faff58fc2a3f891fa" translate="yes" xml:space="preserve">
          <source>The alias to add.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96806663064f4b6c7b5b7b351aeacb53bd63d2c2" translate="yes" xml:space="preserve">
          <source>The alias to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39088ded6dcc7ae6a4feb22dbfab10cacc4f5e02" translate="yes" xml:space="preserve">
          <source>The alternative syntax for control structures is supported with switches. For more information, see &lt;a href=&quot;https://secure.php.net/manual/en/control-structures.alternative-syntax.php&quot;&gt;Alternative syntax for control structures&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a440757acdf405b624f455895127702050710f7" translate="yes" xml:space="preserve">
          <source>The amount by which to decrement the item's value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92cacc488abcd49a100e4866c70c9ea904dc9c0" translate="yes" xml:space="preserve">
          <source>The amount by which to increment the item's value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3c766be695c66feccf9880368d9810995f7e1a" translate="yes" xml:space="preserve">
          <source>The amount of bucket lists to configure. The number you pass in will be automatically rounded up to the next power of two. It is also automatically limited from 4 to 4194304.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e612c3e9b3bbdef836ce52e872b01a5bedd95e6" translate="yes" xml:space="preserve">
          <source>The amount of bucket lists to configure. The number you pass in will be automatically rounded up to the next power of two. It is also automatically limited from 64 to 4194304.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182516b3e3783c376ad0b6471cdb5afeafe545f4" translate="yes" xml:space="preserve">
          <source>The amount of contrast to apply. 1 is very little, 5 is a significant amount, 20 is extreme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0f9f60381a7b835992beae5cae3643274c69e0" translate="yes" xml:space="preserve">
          <source>The amount of fuzz. For example, set fuzz to 10 and the color red at intensities of 100 and 102 respectively are now interpreted as the same color for the purposes of the floodfill.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c048c91c6842ee0d00de6608cf76fbd014945f" translate="yes" xml:space="preserve">
          <source>The amount of fuzz. For example, set fuzz to 10 and the color red at intensities of 100 and 102 respectively are now interpreted as the same color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef53cea59fb8ac4d8dd1da00db929987197c5368" translate="yes" xml:space="preserve">
          <source>The amount of gamma-correction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842bee37d80c49fe9287e4cbf600ffd4fa624efb" translate="yes" xml:space="preserve">
          <source>The amount of memory cannot be resized later. Request sufficient storage up front.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9133ccc5068715dabfef302a8e7a1917101c49ce" translate="yes" xml:space="preserve">
          <source>The amount of time expressed in 'ticks' that the image should be displayed for. For animated GIFs there are 100 ticks per second, so a value of 20 would be 20/100 of a second aka 1/5th of a second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cea90b6b20b422ed3b7cda6fbe87b44b677a62" translate="yes" xml:space="preserve">
          <source>The amount of time the process is allowed to use the CPU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2961cb9107889e0aebf55f52f0544aba6a2ba066" translate="yes" xml:space="preserve">
          <source>The amount of time the server will wait to delete the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9eab242fe1d2562443c7c0a4355ecce30a287e" translate="yes" xml:space="preserve">
          <source>The amount of time the server will wait to delete the items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fa9f6c78d145c5fd1d86e682bc8441eb8853b6" translate="yes" xml:space="preserve">
          <source>The amount to displace the colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949473dce1fa541bf8083ce42b551d7d0a313f62" translate="yes" xml:space="preserve">
          <source>The amplitude of the wave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80125ce99a22d588fcd68e2ab4d09fde65047462" translate="yes" xml:space="preserve">
          <source>The angle at which to write the text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443d22a71baf561f7dc3c038ab963cf380eca21c" translate="yes" xml:space="preserve">
          <source>The angle in degrees, with 0 degrees being left-to-right reading text. Higher values represent a counter-clockwise rotation. For example, a value of 90 would result in bottom-to-top reading text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7589113a16cf06baee7458744b7bef9cc09ba1a2" translate="yes" xml:space="preserve">
          <source>The angle of the blur in degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d35929e353bb9d10d14294c7cb5cfe32b9af496" translate="yes" xml:space="preserve">
          <source>The angle to apply the blur over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea1ab19e3e70ce7dc33d7786017c61cee8be7e9" translate="yes" xml:space="preserve">
          <source>The anonymous functions to bind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6584e51b54116b70acdad2b65d7d4fb592c52ba" translate="yes" xml:space="preserve">
          <source>The appended child.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b32f57775f575e28080e7392798708c8758d280" translate="yes" xml:space="preserve">
          <source>The application must explicitly send the two characters &quot;\.&quot; on the last line to indicate to the backend that it has finished sending its data, before issuing &lt;a href=&quot;function.pg-end-copy&quot;&gt;pg_end_copy()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae072009731b710778def2edd733221417b058e0" translate="yes" xml:space="preserve">
          <source>The arbitrary data serving as value of the key-value pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b35e89f7e6f69348866996fde58258ec52b60bd" translate="yes" xml:space="preserve">
          <source>The arc cosine of &lt;code&gt;arg&lt;/code&gt; in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a24af9066bc6b559cbce4e5ff5e053a786a21de" translate="yes" xml:space="preserve">
          <source>The arc end angle, in degrees. 0&amp;deg; is located at the three-o'clock position, and the arc is drawn clockwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db368e16c7d0f0ab1211d3a779f4a6427f0d587a" translate="yes" xml:space="preserve">
          <source>The arc height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a155d9c25c5f3c05560a3b9515b6bc113f7cfea4" translate="yes" xml:space="preserve">
          <source>The arc sine of &lt;code&gt;arg&lt;/code&gt; in radians</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43081d37eb98bfb393c72e1a8a40599edc287b93" translate="yes" xml:space="preserve">
          <source>The arc start angle, in degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f408615d8f0840bb179316de80ec2fb2d08105" translate="yes" xml:space="preserve">
          <source>The arc tangent of &lt;code&gt;arg&lt;/code&gt; in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e206b94bd1b98ca7ddf98e19a621bdc4f9e9f65" translate="yes" xml:space="preserve">
          <source>The arc tangent of &lt;code&gt;y&lt;/code&gt;/&lt;code&gt;x&lt;/code&gt; in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5186f278a6f5c4f756e5341db8e898ba4fc717ef" translate="yes" xml:space="preserve">
          <source>The arc width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47392dad20e9900efdd638ea9e9c0c5bd37fc0a7" translate="yes" xml:space="preserve">
          <source>The argument offset. Function arguments are counted starting from zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42bc2c98ea4cc14df0ee56a321df16bf5895f334" translate="yes" xml:space="preserve">
          <source>The argument that will be escaped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea939960fd472cae6ad74bfab65d8acadeb344b" translate="yes" xml:space="preserve">
          <source>The argument to process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17edec254e35f14a3987ce8f5938446c23b39b3c" translate="yes" xml:space="preserve">
          <source>The argument to process in radians</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6828799eb3e23196977e2a9bdb7e0f52627e5f42" translate="yes" xml:space="preserve">
          <source>The arguments for this distortion method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead2de0b11229671ba6ce239ba93b920dd681b2b" translate="yes" xml:space="preserve">
          <source>The arguments to pass to constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505a3e167743df41bcb4a3443dacb9bd293249c6" translate="yes" xml:space="preserve">
          <source>The array elements returned are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a673f5afb27d04f7f7cc1dabfac786103bb072a" translate="yes" xml:space="preserve">
          <source>The array in which elements are replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe82d76b333d6501a4a68e8fa0c60715f972dbd2" translate="yes" xml:space="preserve">
          <source>The array of coordinates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2bf6f45feb3809276b75398594721850b7330f" translate="yes" xml:space="preserve">
          <source>The array of data to find the standard deviation for. Note that all values of the array will be cast to &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d544e868ba4664769172cf59a43f6e55448204" translate="yes" xml:space="preserve">
          <source>The array of pixels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959a153a6bcfda38c0a2f44cfffb25a78c6ac830" translate="yes" xml:space="preserve">
          <source>The array of queries. This must be an actual php variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b66e32680cd43bc11b3f154d13304a8135ba90" translate="yes" xml:space="preserve">
          <source>The array of strings to implode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9ef5106da2915b1df16543c4190037b5bc78ab" translate="yes" xml:space="preserve">
          <source>The array of values to count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd884f94c731ef9839309538d634b6ca8a95b129" translate="yes" xml:space="preserve">
          <source>The array or object to be iterated on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aad5aaf3a8c9baedc9d9da4b3cca289587e2681" translate="yes" xml:space="preserve">
          <source>The array to compare from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b163e6d000c254229d22bf18910631a8df22c108" translate="yes" xml:space="preserve">
          <source>The array to get the value from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8935518bbb68eadedcc8255b6c4d3cfb696815bf" translate="yes" xml:space="preserve">
          <source>The array to import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c29e51c56dca8c8cebd0e28bc2b1b0facd37c20" translate="yes" xml:space="preserve">
          <source>The array to iterate over</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6f0917799c64be648a9de11085d3dcd0137f7c" translate="yes" xml:space="preserve">
          <source>The array to work on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3546142f0dac4948f14713a4148bd00d47e9e039" translate="yes" xml:space="preserve">
          <source>The array type in PHP is very versatile. Here are some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121d37ffc381062bf0ccde09aea8b66a3a7d3667" translate="yes" xml:space="preserve">
          <source>The array with master keys to check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d454d8f3214603b41356befae6f4e66795c75e" translate="yes" xml:space="preserve">
          <source>The array with master values to check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72147684553d9877c28a8c6ea0e997c5d703905a" translate="yes" xml:space="preserve">
          <source>The array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835d9b060f38bd2390d7317fa1e328b7988ccab5" translate="yes" xml:space="preserve">
          <source>The array. This array is passed by reference because it is modified by the function. This means you must pass it a real variable and not a function returning an array because only actual variables may be passed by reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917b61d2fbcc85c14aa5b7a584b28c358b8aa6e4" translate="yes" xml:space="preserve">
          <source>The assertion. In PHP 5, this must be either a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; to be evaluated or a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt; to be tested. In PHP 7, this may also be any expression that returns a value, which will be executed and the result used to indicate whether the assertion succeeded or failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a6e50e4e2547d8aeb1eaea50aa1ed4d065727d" translate="yes" xml:space="preserve">
          <source>The associated &lt;a href=&quot;class.intltimezone&quot;&gt;IntlTimeZone&lt;/a&gt; object or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da240defc3670b99a4119f32caaa94b2410aa0d9" translate="yes" xml:space="preserve">
          <source>The associated buffer, or buffers, may or may not be emptied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f952d4e94849124953b401850060d1bcbb90fe" translate="yes" xml:space="preserve">
          <source>The associated event base object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb28f933d284b5d870a494ecd7b50ce526216bd9" translate="yes" xml:space="preserve">
          <source>The associated priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f9fad89f6d40bcf4f75bef6df388b8a750112f" translate="yes" xml:space="preserve">
          <source>The associative information for the Iterator, which must be an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;, a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78224a8e557237994a8ec1eb4cb743120f3578f" translate="yes" xml:space="preserve">
          <source>The atime of a file is supposed to change whenever the data blocks of a file are being read. This can be costly performance-wise when an application regularly accesses a very large number of files or directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980e2a089cb4e5ad17b2ae428bd75a31f352e35f" translate="yes" xml:space="preserve">
          <source>The attribute list name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbd14477caf9ebf68f9c80df83d21e5c5c18a6c" translate="yes" xml:space="preserve">
          <source>The attribute name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ffc1e6519a03eb226024b57386e3f688871d20" translate="yes" xml:space="preserve">
          <source>The attribute node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35f31de74e78b6c4defa8a43969e1e2da8155fa" translate="yes" xml:space="preserve">
          <source>The attribute node. Note that for XML namespace declarations (&lt;em&gt;xmlns&lt;/em&gt; and &lt;em&gt;xmlns:*&lt;/em&gt; attributes) an instance of &lt;strong&gt;DOMNameSpaceNode&lt;/strong&gt; is returned instead of a &lt;a href=&quot;class.domattr&quot;&gt;DOMAttr&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe9b119181eeea9eef06c9f8fad3d641fe484b2" translate="yes" xml:space="preserve">
          <source>The attribute node. Note that for XML namespace declarations (&lt;em&gt;xmlns&lt;/em&gt; and &lt;em&gt;xmlns:*&lt;/em&gt; attributes) an instance of &lt;strong&gt;DOMNameSpaceNode&lt;/strong&gt; is returned instead of a &lt;a href=&quot;class.domattr&quot;&gt;DOMAttr&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4236a248305448e2cec1703eda91c548ce729438" translate="yes" xml:space="preserve">
          <source>The attribute that you want to get.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ff285708e31dbf9a84d79143855431f45d536f" translate="yes" xml:space="preserve">
          <source>The attribute that you want to set. It can have one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fe91eeca5424c91ef471f989812ae4a9e1aa99" translate="yes" xml:space="preserve">
          <source>The attribute to use as a key in the sort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81e8fd40598a36926b01774752cf5dc024dcae8" translate="yes" xml:space="preserve">
          <source>The attribute value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc09d6d595edec332ce58547337bfa6d118de43" translate="yes" xml:space="preserve">
          <source>The authenticated user if the request is internally redirected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a772e293188e172ac8a90853f4d2011029dccf5f" translate="yes" xml:space="preserve">
          <source>The authenticated user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09dc161464b8a67f9064c1a4526a6933542cce6" translate="yes" xml:space="preserve">
          <source>The authentication service name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e168cc8557f7a27bf40989458b3cb1c197596cfd" translate="yes" xml:space="preserve">
          <source>The authentication tag in AEAD cipher mode. If it is incorrect, the authentication fails and the function returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e80d05a8299f86f1550b48808c36b2da141749" translate="yes" xml:space="preserve">
          <source>The authentication tag passed by reference when using AEAD cipher mode (GCM or CCM).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c3ca3c87d675b42e618c20d5379676efd48664" translate="yes" xml:space="preserve">
          <source>The autoload function being registered. If no parameter is provided, then the default implementation of &lt;a href=&quot;function.spl-autoload&quot;&gt;spl_autoload()&lt;/a&gt; will be registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facea3a7c3c8b6018b2ef6e56f401dd160787c5b" translate="yes" xml:space="preserve">
          <source>The autoload function being unregistered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2939a71550fae7ea71c14450b601f404feb607" translate="yes" xml:space="preserve">
          <source>The automatic unlocking when the file's resource handle is closed was removed. Unlocking now always has to be done manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f4a392a43e588010e2fd3df36c1894bda9be57" translate="yes" xml:space="preserve">
          <source>The available behavior flags are listed below. The actual meanings of these flags are described in the &lt;a href=&quot;class.arrayiterator#arrayiterator.constants&quot;&gt;predefined constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665231d7f90930859159ae69c7567ab5a58cdf18" translate="yes" xml:space="preserve">
          <source>The available behavior flags are listed below. The actual meanings of these flags are described in the &lt;a href=&quot;class.arrayobject#arrayobject.constants&quot;&gt;predefined constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8981a8fd374fd889314880873df4c248fcb69e72" translate="yes" xml:space="preserve">
          <source>The available error level constants and the actual meanings of these error levels are described in the &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.constants.php&quot;&gt;predefined constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1170f8abc24aadf243f3d7be580c88a872a975" translate="yes" xml:space="preserve">
          <source>The available flags are listed below. The actual meanings of these flags are described in the &lt;a href=&quot;class.regexiterator#regexiterator.constants&quot;&gt;predefined constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc514d3dbfbf617ed518b110f5e77c7ffe161ba" translate="yes" xml:space="preserve">
          <source>The available modes are listed below. The actual meanings of these modes are described in the &lt;a href=&quot;class.regexiterator#regexiterator.constants&quot;&gt;predefined constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01953a22ef121dbc2acff2e4259cd3061e59e80b" translate="yes" xml:space="preserve">
          <source>The available socket options are the same as those for the &lt;a href=&quot;function.socket-get-option&quot;&gt;socket_get_option()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a887d5764e24c045b3bbc7addd399470d07ae0fa" translate="yes" xml:space="preserve">
          <source>The average user may be used to shell patterns or at least in their simplest form to &lt;em&gt;'?'&lt;/em&gt; and &lt;em&gt;'*'&lt;/em&gt; wildcards so using &lt;strong&gt;fnmatch()&lt;/strong&gt; instead of &lt;a href=&quot;function.preg-match&quot;&gt;preg_match()&lt;/a&gt; for frontend search expression input may be way more convenient for non-programming users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181dfc799e483f0f9347988245ede5570a5122ad" translate="yes" xml:space="preserve">
          <source>The backend database process ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2607963c8367c967e29678411d5bfa5d21af3154" translate="yes" xml:space="preserve">
          <source>The backend method to avoid. See &lt;a href=&quot;class.eventconfig#eventconfig.constants&quot;&gt;EventConfig constants&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d62b34d92aad542cb0ec545269ec9478982e999" translate="yes" xml:space="preserve">
          <source>The background color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6867a9adf344233cbf1832fb1bdc28162bd959" translate="yes" xml:space="preserve">
          <source>The background color used for this image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225cb6e10c315504816ec7c5eed55055440d1b77" translate="yes" xml:space="preserve">
          <source>The background color used for this image (as float)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f2c24e1e05ef811d4fa8e95305ca6a673a7479" translate="yes" xml:space="preserve">
          <source>The background pixel wand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520a8366e98541dac7fa9a0041fbf47117912ed5" translate="yes" xml:space="preserve">
          <source>The background pixel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282d6c9b9ff2f726188e5f29b0180ede36a6d4d8" translate="yes" xml:space="preserve">
          <source>The backslash character has several uses. Firstly, if it is followed by a non-alphanumeric character, it takes away any special meaning that character may have. This use of backslash as an escape character applies both inside and outside character classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30400fc079d8793436a093dd2a10a51a9061643e" translate="yes" xml:space="preserve">
          <source>The backtick operator is disabled when &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;safe mode&lt;/a&gt; is enabled or &lt;a href=&quot;function.shell-exec&quot;&gt;shell_exec()&lt;/a&gt; is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce09d58e3b4682bdd2d37cbb38bd5e55aeac97cd" translate="yes" xml:space="preserve">
          <source>The base &lt;code&gt;number&lt;/code&gt; is in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74e121ced24129590ddf2ffa768f582a228d1ce" translate="yes" xml:space="preserve">
          <source>The base DN for the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4352688b930f2a4db36b809fbe30e01ed02b27d6" translate="yes" xml:space="preserve">
          <source>The base URI of the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f5f4651fdd59c010015cd4e193d07bf8c24f04" translate="yes" xml:space="preserve">
          <source>The base directory of the templates, by default, it is APPLICATOIN . &quot;/views&quot; for Yaf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb59e4ec988d788cfe6b235a307db1a27bed2749" translate="yes" xml:space="preserve">
          <source>The base for the conversion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d306d9f663e7d1f91710cd31aa8450a55862055" translate="yes" xml:space="preserve">
          <source>The base may vary from 2 to 36. If base is 0 (default value), the actual base is determined from the leading characters: if the first two characters are &lt;em&gt;0x&lt;/em&gt; or &lt;em&gt;0X&lt;/em&gt;, hexadecimal is assumed, otherwise if the first character is &quot;0&quot;, octal is assumed, otherwise decimal is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6f93f08b6a8c9b2aada879bf4ac51321d92d67" translate="yes" xml:space="preserve">
          <source>The base name of the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598eb94105d30e9010db45a9322f00161e0043ff" translate="yes" xml:space="preserve">
          <source>The base number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5be4a35ed2e1448b65954e97d5ed603b673dc9" translate="yes" xml:space="preserve">
          <source>The base of the returned number. The default base is 10. Allowed values for the base are from 2 to 62 and -2 to -36.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de61aa305ff5f4147d0d8cf20808032cde44c024" translate="yes" xml:space="preserve">
          <source>The base to convert &lt;code&gt;number&lt;/code&gt; to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d327c9a5816e88ddaa791d186af246c49aa1c8" translate="yes" xml:space="preserve">
          <source>The base to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e6c445e4af836a643e05b89c454d5945b1aa88" translate="yes" xml:space="preserve">
          <source>The base, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b41bd1bfd0e7c12023cfd83f6ad65a56310a1d" translate="yes" xml:space="preserve">
          <source>The base, as an integral string (i.e. the scale has to be zero).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eaadcbecfed1c5255a5e3997ea1c403cd74369d" translate="yes" xml:space="preserve">
          <source>The base-10 logarithm of &lt;code&gt;arg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c767dde1530722edbbdf4a4139736f3f7b71416f" translate="yes" xml:space="preserve">
          <source>The base.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3d06593154a04a66cf328f5dfe718424fe1c38" translate="yes" xml:space="preserve">
          <source>The basic assignment operator is &quot;=&quot;. Your first inclination might be to think of this as &quot;equal to&quot;. Don't. It really means that the left operand gets set to the value of the expression on the right (that is, &quot;gets set to&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c9c9e19258a1d0165391961f2fa737cfab93ff" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;strong&gt;assert()&lt;/strong&gt; may be configured by &lt;a href=&quot;function.assert-options&quot;&gt;assert_options()&lt;/a&gt; or by .ini-settings described in that functions manual page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20969dfc313defbb3ec04f11314ee10952fb8122" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;strong&gt;unset()&lt;/strong&gt; inside of a function can vary depending on what type of variable you are attempting to destroy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6d29308588449180e3d9b8379b3fafa63cd636" translate="yes" xml:space="preserve">
          <source>The behavior of the iterator (either one or the other):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a51737e17bb8480f256d1699b8dda61d0a1307" translate="yes" xml:space="preserve">
          <source>The behavior of this function is almost identical to &lt;a href=&quot;function.mb-ereg-replace&quot;&gt;mb_ereg_replace()&lt;/a&gt;, except for the fact that instead of &lt;code&gt;replacement&lt;/code&gt; parameter, one should specify a &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2655e7a4849fdd84a73eeb2c274ea3226dce3b6f" translate="yes" xml:space="preserve">
          <source>The behavior of this function is almost identical to &lt;a href=&quot;function.preg-replace&quot;&gt;preg_replace()&lt;/a&gt;, except for the fact that instead of &lt;code&gt;replacement&lt;/code&gt; parameter, one should specify a &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8393bbcdde7044dabec976a0d25b73fc9f93b791" translate="yes" xml:space="preserve">
          <source>The behavior of this function is similar to &lt;a href=&quot;function.preg-replace-callback&quot;&gt;preg_replace_callback()&lt;/a&gt;, except that callbacks are executed on a per-pattern basis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1ced01b32d49e5f2373a8bd7423bb1c1d03d29" translate="yes" xml:space="preserve">
          <source>The behaviour of &lt;strong&gt;mysqli_num_rows()&lt;/strong&gt; depends on whether buffered or unbuffered result sets are being used. For unbuffered result sets, &lt;strong&gt;mysqli_num_rows()&lt;/strong&gt; will not return the correct number of rows until all the rows in the result have been retrieved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0903cf8a852166b0e5a32323bf60a188c98d82" translate="yes" xml:space="preserve">
          <source>The behaviour of an automatic conversion to &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; is currently undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebd721a0bbd93405a9e96cd9d0a72a4b4d91b54" translate="yes" xml:space="preserve">
          <source>The behaviour of converting to &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; is undefined for other types. Do &lt;em&gt;not&lt;/em&gt; rely on any observed behaviour, as it can change without notice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e522333d1f9e18c2b22be2eba17eb4e365608bd7" translate="yes" xml:space="preserve">
          <source>The bidirectional category value; one of the following constants:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724ac0daadeab61d3eb80c1cfce19a014155e654" translate="yes" xml:space="preserve">
          <source>The binary dump being loaded, likely from &lt;a href=&quot;function.apc-bin-dump&quot;&gt;apc_bin_dump()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47899c91f7461440e29a39a7aa32ad6e69732f41" translate="yes" xml:space="preserve">
          <source>The binary string being imported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b9ad2bca74850c7468109d3021439b442c5022" translate="yes" xml:space="preserve">
          <source>The binary string to convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40811463e0632564d2885aa03991362344ee2b85" translate="yes" xml:space="preserve">
          <source>The binding (i.e. protocol) to use to communicate with the service (e.g binding.jsonrpc for a json-rpc service). Note, some service types can be deduced from the target parameter (e.g. if the target parameter ends in .wsdl then SCA will assume binding.soap). Any binding which can be specified in an annotation can be specified here. For example 'binding.soap' is equivalent to the '@binding.soap' annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04a812cb676f722ec7905e4d9401c090e7259a1" translate="yes" xml:space="preserve">
          <source>The bit to test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad049b88776b7b1b727559652ba1c6da05d1c3a" translate="yes" xml:space="preserve">
          <source>The bitwise &lt;em&gt;|&lt;/em&gt; (or) operator can be used to combine more than one method. If this is done, cURL will poll the server to see what methods it supports and pick the best one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958a481f1504e6efa4ca43cd7e0f3bd407461a0e" translate="yes" xml:space="preserve">
          <source>The black point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59876083fb0e9a3697f1287ec3f97d2cf529000" translate="yes" xml:space="preserve">
          <source>The block of code to execute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66dd398d04f9390dba31f1e76a4bba8586f054f" translate="yes" xml:space="preserve">
          <source>The blue primary x-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd77d2f1a291f11e663f8525802fa0f073afb9e" translate="yes" xml:space="preserve">
          <source>The blue primary y-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04386869a22cb99aa5beddeb52b530c7a082426f" translate="yes" xml:space="preserve">
          <source>The blur factor where &amp;gt; 1 is blurry, &amp;lt; 1 is sharp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd42ce7a2dcc4dccc89c1c81ec25ed5e2857c21" translate="yes" xml:space="preserve">
          <source>The blur factor where larger than 1 is blurry, lesser than 1 is sharp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eecd5ad0dc644622d822ba0fec336f74b52044a" translate="yes" xml:space="preserve">
          <source>The blur factor where larger than 1 is blurry, smaller than 1 is sharp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb1c00e14b5211944c61e206b69282c45c04189" translate="yes" xml:space="preserve">
          <source>The blurred Gmagick object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace368ed63918ac3b49ad3bd9fe64a5b1df55ab8" translate="yes" xml:space="preserve">
          <source>The body of the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3185a2aad1cc32ea4254e808103b64c8fa459a0" translate="yes" xml:space="preserve">
          <source>The body section to read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c12a470fc3a713916d00bc3ecea41d875d702da" translate="yes" xml:space="preserve">
          <source>The body size in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ff050ea307851adf21f034cb60ccd7a7ba7a64" translate="yes" xml:space="preserve">
          <source>The boost value for the field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978369e4970d572402f8a4afd87299dc366580b6" translate="yes" xml:space="preserve">
          <source>The border color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e116c84a539c08a85edc1283137471243f688d" translate="yes" xml:space="preserve">
          <source>The border color. A color identifier created with &lt;a href=&quot;function.imagecolorallocate&quot;&gt;imagecolorallocate()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a21fecfda8e51547f61c2b4a08acbd9995009df" translate="yes" xml:space="preserve">
          <source>The border pixel wand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc09d177c402286b92af305e669bfeedc4fa1285" translate="yes" xml:space="preserve">
          <source>The boundary string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406baf7027d49ed7e0438b3c37be1e541a59f602" translate="yes" xml:space="preserve">
          <source>The bounding box is calculated using information available from character metrics, and unfortunately tends to differ slightly from the results achieved by actually rasterizing the text. If the angle is 0 degrees, you can expect the text to need 1 pixel more to every direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0799fdade2434add10c993459259022e13a35f" translate="yes" xml:space="preserve">
          <source>The buffer event options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a18d1da58b7619dd03cd727336ec0a5dfca556b" translate="yes" xml:space="preserve">
          <source>The buffer mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42869bad267741e368c7047f791e68212d61b23c" translate="yes" xml:space="preserve">
          <source>The buffer to be written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d2374e866581d19c59b8e74d622d15f0995d7a" translate="yes" xml:space="preserve">
          <source>The buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d612c8eb33153d86b1964cc5e30d86278841e810" translate="yes" xml:space="preserve">
          <source>The byte stream to check. If it is omitted, this function checks all the input from the beginning of the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04ebbdc7bd486cf7d3bb47cdea8ea3920a226ed" translate="yes" xml:space="preserve">
          <source>The c-space function where exception was generated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae78c901b693a0a21b99fa9bea83489e1da7b9e" translate="yes" xml:space="preserve">
          <source>The c-space source file where exception was generated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5e5e1ec874e9495a51e425d3f8f05802b35545" translate="yes" xml:space="preserve">
          <source>The cache expire is reset to the default value of 180 stored in &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.cache-expire&quot;&gt;session.cache_expire&lt;/a&gt; at request startup time. Thus, you need to call &lt;strong&gt;session_cache_expire()&lt;/strong&gt; for every request (and before &lt;a href=&quot;function.session-start&quot;&gt;session_start()&lt;/a&gt; is called).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7b98b8d21e49df19e9361bb2e38ff077436abc" translate="yes" xml:space="preserve">
          <source>The cache limiter defines which cache control HTTP headers are sent to the client. These headers determine the rules by which the page content may be cached by the client and intermediate proxies. Setting the cache limiter to &lt;em&gt;nocache&lt;/em&gt; disallows any client/proxy caching. A value of &lt;em&gt;public&lt;/em&gt; permits caching by proxies and the client, whereas &lt;em&gt;private&lt;/em&gt; disallows caching by proxies and permits the client to cache the contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce72fcde5a4fa608b75a0a2f18f182061a907ea" translate="yes" xml:space="preserve">
          <source>The cache limiter is reset to the default value stored in &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.cache-limiter&quot;&gt;session.cache_limiter&lt;/a&gt; at request startup time. Thus, you need to call &lt;strong&gt;session_cache_limiter()&lt;/strong&gt; for every request (and before &lt;a href=&quot;function.session-start&quot;&gt;session_start()&lt;/a&gt; is called).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dce2ea916b99f81daf7db3981182eb0a9dca41b" translate="yes" xml:space="preserve">
          <source>The cache type, which will be &lt;em&gt;user&lt;/em&gt; or &lt;em&gt;file&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59b83a7f0db621ea7521df2ad18c9543c85b20d" translate="yes" xml:space="preserve">
          <source>The calculation of the height if &lt;code&gt;new_height&lt;/code&gt; was negative or omitted was fixed; prior to these versions, the aspect ratio was not maintained correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73a4711d3d0358d057e38792eaaee3a91f01666" translate="yes" xml:space="preserve">
          <source>The calendar created will represent the time instance at which it was created, based on the system time. The fields can all be cleared by calling &lt;strong&gt;IntCalendar::clear()&lt;/strong&gt; with no arguments. See also &lt;a href=&quot;intlgregoriancalendar.construct&quot;&gt;IntlGregorianCalendar::__construct()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1752b3fb9131f2d5ef54eef5e77264041b12a020" translate="yes" xml:space="preserve">
          <source>The calendar mode (see table above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ce58eadcac15869bcc850000728dbcc5d1c3ec" translate="yes" xml:space="preserve">
          <source>The calendar must be &lt;a href=&quot;intlcalendar.setlenient&quot;&gt;lenient&lt;/a&gt; for this option to have any effect, otherwise attempting to set a non-existing time will cause an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85308ad07c02c7d1f750d79926a89ad2b49710b9" translate="yes" xml:space="preserve">
          <source>The calendar object, on the procedural style interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24a8ed0bfe105052002fc4b5a82d783005e9457" translate="yes" xml:space="preserve">
          <source>The calendar to compare with the primary object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a75269258c1245b51d1a2903c4f56772f2da5a8" translate="yes" xml:space="preserve">
          <source>The calendar whose time will be checked against the primary objectʼs time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d676aa434a584e167d20394f43019dd5989ce33" translate="yes" xml:space="preserve">
          <source>The callable should return what the key will be mapped to in the resulting map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a975ef21f1aaf42d6dddc72cbec41806377b48" translate="yes" xml:space="preserve">
          <source>The callable should return what the new value will be in the new deque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681f6d2a994dbdc969d31851475d0b9bb2adfc50" translate="yes" xml:space="preserve">
          <source>The callable should return what the new value will be in the new sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ccce532e6a77c4be066b1ec845975ab53c9319" translate="yes" xml:space="preserve">
          <source>The callable should return what the new value will be in the new vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b570aac4ad32d1a4e6bede9b3b0821c2b9bac1" translate="yes" xml:space="preserve">
          <source>The callable to convert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf37c9086e343dcd67995f4a6cfa042ab96bbfe" translate="yes" xml:space="preserve">
          <source>The callback &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; . It should match the following prototype:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb59803281ddfc29a31fde77593621c3d34968fb" translate="yes" xml:space="preserve">
          <source>The callback &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; that gets invoked on requested &lt;code&gt;path&lt;/code&gt; . It should match the following prototype:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd76203a7d0f6bfdbf367ef6b79a1f2a8c875b56" translate="yes" xml:space="preserve">
          <source>The callback comparison function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c3751b11d023f444996b83f44cabdcc3f2534b" translate="yes" xml:space="preserve">
          <source>The callback function should accept three arguments. The first argument will contain the file the assertion failed in. The second argument will contain the line the assertion failed on and the third argument will contain the expression that failed (if any &amp;mdash; literal values such as 1 or &quot;two&quot; will not be passed via this argument). Users of PHP 5.4.8 and later may also provide a fourth optional argument, which will contain the &lt;code&gt;description&lt;/code&gt; given to &lt;strong&gt;assert()&lt;/strong&gt;, if it was set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c0eeb4f299341e177fb485466a214bc4379e90" translate="yes" xml:space="preserve">
          <source>The callback function should return the number of characters stored in the &lt;code&gt;buffer&lt;/code&gt; or a negative value if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfb89780c162169bd1ff1815c5e40e0a37d274a" translate="yes" xml:space="preserve">
          <source>The callback function to call on every element. This function only receives the given &lt;code&gt;args&lt;/code&gt;, so it is nullary by default. If &lt;em&gt;count($args) === 3&lt;/em&gt;, for instance, the callback function is ternary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1466826787b8c4d4b3a9b9d504f1ad385862837" translate="yes" xml:space="preserve">
          <source>The callback function to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f14a99a5f5e99bab19da50183f8261fbeb022d" translate="yes" xml:space="preserve">
          <source>The callback is called with the event name and the link resource as arguments whenever one of the specified events is posted by the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327cb8a919309406f0fa25443c813a7d2d7237ea" translate="yes" xml:space="preserve">
          <source>The callback is expected to return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; if the current item is to be accepted, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a47fc9f28a78d12f7be86481cdca382701b0c03" translate="yes" xml:space="preserve">
          <source>The callback is guaranteed to be invoked only after its timeout has passed (not at, so on systems with very low-resolution clocks this might introduce a small delay). If multiple timers become ready during the same loop iteration then the ones with earlier time-out values are invoked before ones of the same priority with later time-out values (but this is no longer true when a callback calls &lt;a href=&quot;evloop.run&quot;&gt;EvLoop::run()&lt;/a&gt; recursively).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6fe7836a2865adcdbe4fd94f35073658f3f43f" translate="yes" xml:space="preserve">
          <source>The callback is only called when the &lt;strong&gt;&lt;code&gt;CURLOPT_NOPROGRESS&lt;/code&gt;&lt;/strong&gt; option is set to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0296c427be26d41faf01596678326fbe6055d43" translate="yes" xml:space="preserve">
          <source>The callback must return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the event handler should be canceled. Any other return value is ignored. This function accepts up to 15 event arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744792b587e31dc734b5d0630e5ebafbe01e880c" translate="yes" xml:space="preserve">
          <source>The callback should accept up to three arguments: the current item, the current key and the iterator, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad43d0954dce5dc574005693aca06c1eb93e357" translate="yes" xml:space="preserve">
          <source>The callback should return what the value should be replaced by.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56da7c32983db296722292f314e0b21c93fb4231" translate="yes" xml:space="preserve">
          <source>The callback, which should return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; to accept the current item or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; otherwise. See &lt;a href=&quot;class.callbackfilteriterator#callbackfilteriterator.examples&quot;&gt;Examples&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888f95a796ab8ab3cd640addde13453c33043732" translate="yes" xml:space="preserve">
          <source>The callback, which should return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; to accept the current item or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; otherwise. See &lt;a href=&quot;class.recursivecallbackfilteriterator#recursivecallbackfilteriterator.examples&quot;&gt;Examples&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4418f1a5da5a80656c957645a5c82c75527dfe3" translate="yes" xml:space="preserve">
          <source>The callbacks task is to read input from the file specified in the &lt;em&gt;LOAD DATA LOCAL INFILE&lt;/em&gt; and to reformat it into the format understood by &lt;em&gt;LOAD DATA INFILE&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8545473cc1206edce86b2127a01284a7160ca21a" translate="yes" xml:space="preserve">
          <source>The caller needs to supply data chunks with &lt;a href=&quot;eventhttprequest.sendreplychunk&quot;&gt;EventHttpRequest::sendReplyChunk()&lt;/a&gt; and complete the reply by calling &lt;a href=&quot;eventhttprequest.sendreplyend&quot;&gt;EventHttpRequest::sendReplyEnd()&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd6ba17ddbb02c7f85c2b2293cb591ccb9ef795" translate="yes" xml:space="preserve">
          <source>The casts allowed are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfeea311df781f71ceeb4e85d5daebdd6f1fb4cc" translate="yes" xml:space="preserve">
          <source>The catalog name, always &quot;def&quot; (since PHP 5.3.6)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3460afd8f25732c90952fa2a0470fad707a384" translate="yes" xml:space="preserve">
          <source>The category</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4a7e4c4f5658da1ebb84a85674aff135591b74" translate="yes" xml:space="preserve">
          <source>The center of rotation is the center of the image, and the rotated image may have different dimensions than the original image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7680a7723e004c08eecff3d0b756e26a4f39036b" translate="yes" xml:space="preserve">
          <source>The certificate store contents, not its file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f216bda85d86b01f6d4ca698f2ccf04c0f4633ea" translate="yes" xml:space="preserve">
          <source>The certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e837c29df8c29e6a605467f4cc1fa30ddd93fc63" translate="yes" xml:space="preserve">
          <source>The challenge associated to associate with the SPKAC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ada024db9aff97c2f71e70dc8b95c4f5c357ab" translate="yes" xml:space="preserve">
          <source>The channel to check, specified as one of the Gmagick channel constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb284133c3c5d15c8c3caf27e82e89bfbf68cf4" translate="yes" xml:space="preserve">
          <source>The character &lt;em&gt;=&lt;/em&gt; followed by a (single byte) character f to be used as the numeric fill character. The default fill character is space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29720e89cd45ce02ff8e179cd05649f145bac709" translate="yes" xml:space="preserve">
          <source>The character encoding before conversion for success, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; for failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8649ffbe02520778a78d4c0b17d1a60fd3c26c29" translate="yes" xml:space="preserve">
          <source>The character encoding name, as per the &lt;code&gt;type&lt;/code&gt;. If &lt;strong&gt;mb_http_input()&lt;/strong&gt; does not process specified HTTP input, it returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc43cb987918b419e80e0d07b3c32f33e0d0f16" translate="yes" xml:space="preserve">
          <source>The character encoding specified by &lt;a href=&quot;function.mb-regex-encoding&quot;&gt;mb_regex_encoding()&lt;/a&gt; will be used as the character encoding for this function by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25de05721583a300446d07917c81d601545a0a8d" translate="yes" xml:space="preserve">
          <source>The character has a decimal digit value. Such characters have the general category &quot;Nd&quot; (decimal digit numbers) and a Numeric_Type of Decimal. In this case the value is the character's decimal digit value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c440171d8d972271df534f19da042230f0615a7a" translate="yes" xml:space="preserve">
          <source>The character is one of the lowercase Latin letters 'a' through 'z'. In this case the value is ch-'a'+10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082be3c165305eb9ff16daf7fc86f3998ce3a98b" translate="yes" xml:space="preserve">
          <source>The character is one of the uppercase Latin letters 'A' through 'Z'. In this case the value is c-'A'+10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1adb58c5827a20d5a157df6156de343ebbc4eb" translate="yes" xml:space="preserve">
          <source>The character offset at which to insert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4d9bf88b9334aaa4a10e31c7194c84530359fc" translate="yes" xml:space="preserve">
          <source>The character representation (as a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;) of the specified digit in the specified radix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfe08e34a68f6d0d89cd377452a779d4184012b" translate="yes" xml:space="preserve">
          <source>The character set must be set either at the server level, or with the API function &lt;a href=&quot;mysqli.set-charset&quot;&gt;mysqli_set_charset()&lt;/a&gt; for it to affect &lt;strong&gt;mysqli_real_escape_string()&lt;/strong&gt;. See the concepts section on &lt;a href=&quot;https://secure.php.net/manual/en/mysqlinfo.concepts.charset.php&quot;&gt;character sets&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3cca742f2180d75843c9749754b6995bb5d178b" translate="yes" xml:space="preserve">
          <source>The character set must be set either on the server level, or within the database connection itself (depending on the driver) for it to affect &lt;strong&gt;PDO::quote()&lt;/strong&gt;. See the &lt;a href=&quot;https://secure.php.net/manual/en/pdo.drivers.php&quot;&gt;driver-specific documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e65a43e2e2a48acc4b141afdea0bf7fe6e9c2c" translate="yes" xml:space="preserve">
          <source>The character set number (id) for the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93648db4e7b34ba338966b0915f209a3e0968e37" translate="yes" xml:space="preserve">
          <source>The character set number for the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fa5be7f79acf80139cb6ff358523a62313da4e" translate="yes" xml:space="preserve">
          <source>The character set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7139026e417332d9f73c354609a33185eccbaac2" translate="yes" xml:space="preserve">
          <source>The character to draw.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2539ad3caf245491279a0cf5a3136968b91296" translate="yes" xml:space="preserve">
          <source>The character types \d, \D, \s, \S, \w, and \W may also appear in a character class, and add the characters that they match to the class. For example, [\dABCDEF] matches any hexadecimal digit. A circumflex can conveniently be used with the upper case character types to specify a more restricted set of characters than the matching lower case type. For example, the class [^\W_] matches any letter or digit, but not underscore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58e10f1a4e90153fa0d530e406c5c0adfb3ea6e" translate="yes" xml:space="preserve">
          <source>The character used to pad to the format width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01eff7ce7d0f40a04de2a121f3d6513e16b67621" translate="yes" xml:space="preserve">
          <source>The charset to be set as default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc81c8811f12d62a7e81841df3801e82513fc9e" translate="yes" xml:space="preserve">
          <source>The check is done using the real UID/GID instead of the effective one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669ce32bb612da3f2e8f8df6987f921e90c2abff" translate="yes" xml:space="preserve">
          <source>The chopped Gmagick object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea509279fafe008f100a4a902b4032b1da88b90" translate="yes" xml:space="preserve">
          <source>The chromaticity blue primary x-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5c72ffcc4851a84244dd6a1ebdafe981c18597" translate="yes" xml:space="preserve">
          <source>The chromaticity blue primary y-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7877cbf9f3fa083f126dd11065be4c5bd363380" translate="yes" xml:space="preserve">
          <source>The chromaticity green primary x-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfa223d66ab5faef40277397698b0d2d6d73b4e" translate="yes" xml:space="preserve">
          <source>The chromaticity green primary y-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665c906ded35a48d2aaa17a14bb6949e85c9192f" translate="yes" xml:space="preserve">
          <source>The chunk length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4dd1e04f66dd81c230519d86133eae62e085554" translate="yes" xml:space="preserve">
          <source>The chunk size. Must be a value greater than 0. The default value is 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef100852b3f0d20afdcb5ce64ae1f6cdf644ec6" translate="yes" xml:space="preserve">
          <source>The cipher method, see &lt;a href=&quot;function.openssl-get-cipher-methods&quot;&gt;openssl_get_cipher_methods()&lt;/a&gt; for a list of potential values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92690631552b1e1e12594c733b7f744339eeaed" translate="yes" xml:space="preserve">
          <source>The cipher method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80b89dacff9b142f61609222eaa7371e716e802" translate="yes" xml:space="preserve">
          <source>The cipher method. For a list of available cipher methods, use &lt;a href=&quot;function.openssl-get-cipher-methods&quot;&gt;openssl_get_cipher_methods()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f3659329691e5772436385cb1604d74ca76c46" translate="yes" xml:space="preserve">
          <source>The class constant name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e49b4dfb7e7a00435b265fe5e51d6719a1138d" translate="yes" xml:space="preserve">
          <source>The class for new Workers. If no class is given, then it defaults to the &lt;a href=&quot;class.worker&quot;&gt;Worker&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b18f11bdb18d40b5530ec92ccfa29abd48e32f" translate="yes" xml:space="preserve">
          <source>The class implementing the interface must use the exact same method signatures as are defined in the interface. Not doing so will result in a fatal error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630583deb75c51325cb7cbc02e1aaf35587f2be4" translate="yes" xml:space="preserve">
          <source>The class in which to redefine the method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb717ca661aa09dd3def2d4b3b9e8b2fcfb90eee" translate="yes" xml:space="preserve">
          <source>The class in which to remove the method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0db6bdbb6186294944de8f4ec61dd9b3e792b11" translate="yes" xml:space="preserve">
          <source>The class in which to rename the method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f945b1c59ed764381c8e020a3f1fd69e540ed8b" translate="yes" xml:space="preserve">
          <source>The class method name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff12eeea4eb96e0ae20aff01ee30f32cf26d78f7" translate="yes" xml:space="preserve">
          <source>The class name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be527df8d2b5053f63aeaa43bf54621e232903e9" translate="yes" xml:space="preserve">
          <source>The class name being checked against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec27c317144bdd7ebd1e44298fdb31e4f84af80" translate="yes" xml:space="preserve">
          <source>The class name being searched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fc1b67685ef9e8cd28bdf8295b3ccf6b97b42d" translate="yes" xml:space="preserve">
          <source>The class name can be any valid label, provided it is not a PHP &lt;a href=&quot;https://secure.php.net/manual/en/reserved.php&quot;&gt;reserved word&lt;/a&gt;. A valid class name starts with a letter or underscore, followed by any number of letters, numbers, or underscores. As a regular expression, it would be expressed thus: &lt;em&gt;^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa466a069afb61e3d59a8824b317c42c96a4f684" translate="yes" xml:space="preserve">
          <source>The class name or an object instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9592a837a20e4f9ea53817d9b3f9a7da16b608ba" translate="yes" xml:space="preserve">
          <source>The class name or an object of the class to test for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd54707c68b3aeb9bb7cca597d64eac90550c78" translate="yes" xml:space="preserve">
          <source>The class name resolution using &lt;em&gt;::class&lt;/em&gt; is a compile time transformation. That means at the time the class name string is created no autoloading has happened yet. As a consequence, class names are expanded even if the class does not exist. No error is issued in that case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa7fdc65e13d3a4afb10ca8890f5699d8d3a6859" translate="yes" xml:space="preserve">
          <source>The class name to use when &lt;a href=&quot;splfileinfo.getfileinfo&quot;&gt;SplFileInfo::getFileInfo()&lt;/a&gt; and &lt;a href=&quot;splfileinfo.getpathinfo&quot;&gt;SplFileInfo::getPathInfo()&lt;/a&gt; are called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ea4c9c600658d008a4c1a81084283f4e8ee42c" translate="yes" xml:space="preserve">
          <source>The class name to use when &lt;a href=&quot;splfileinfo.openfile&quot;&gt;SplFileInfo::openFile()&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d8c4a44cf135bed1409f7cd387455a23c327b1" translate="yes" xml:space="preserve">
          <source>The class name, that contains the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386c4da46833767828efb663588fa86f0b351c05" translate="yes" xml:space="preserve">
          <source>The class name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7355b75e0b4cc3076d4579a40c644b7e24df50aa" translate="yes" xml:space="preserve">
          <source>The class name. The class name includes the namespace it was declared in (e.g. &lt;em&gt;Foo\Bar&lt;/em&gt;). Note that as of PHP 5.4 __CLASS__ works also in traits. When used in a trait method, __CLASS__ is the name of the class the trait is used in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688ee9fa7a3552e55e6b12e82f33775fc9a8e82a" translate="yes" xml:space="preserve">
          <source>The class name. The name is matched in a case-insensitive manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddaa39ac3e8fe565ba514a881bcf18e8c57b5d4" translate="yes" xml:space="preserve">
          <source>The class now implements &lt;a href=&quot;class.datetimeinterface&quot;&gt;DateTimeInterface&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f4203246bba8c8c3e2c9265170f7d34780cc45" translate="yes" xml:space="preserve">
          <source>The class scope to which associate the closure is to be associated, or 'static' to keep the current one. If an object is given, the type of the object will be used instead. This determines the visibility of protected and private methods of the bound object. It is not allowed to pass (an object of) an internal class as this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29930b8337be50292bb2d5d0b2b9b11a1ba95341" translate="yes" xml:space="preserve">
          <source>The class short name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8424c24b11eb1eea0d0361a34360e22b4e09b803" translate="yes" xml:space="preserve">
          <source>The class to extend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6167b44ff24c7d11e72856a0d01abc4148019592" translate="yes" xml:space="preserve">
          <source>The class to which this method will be added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ecb05f49613bc01ceedd8eefce3ec8ac548941" translate="yes" xml:space="preserve">
          <source>The classname of the array iterator to use when iterating over this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59567d193eb2b849d9d664d198a47c1484e45f7a" translate="yes" xml:space="preserve">
          <source>The classname which implements the &lt;code&gt;protocol&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca7eca25f1cf99e53af722c270bd083a6ae34a2" translate="yes" xml:space="preserve">
          <source>The cleared Gmagick object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2f106a5831174b757a8ea08a700c5219d9dccf" translate="yes" xml:space="preserve">
          <source>The client encoding, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e60f1dabc14b83e14943a608ab18dc591edefc" translate="yes" xml:space="preserve">
          <source>The clone method prevents an object from being cloned. Reflection objects cannot be cloned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88412a6803f960f48147461702ad9b116e73d4bb" translate="yes" xml:space="preserve">
          <source>The cloned node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6709f01bb6efeaa113485754422af4bddb392c" translate="yes" xml:space="preserve">
          <source>The close callback works like a destructor in classes and is executed after the session write callback has been called. It is also invoked when &lt;a href=&quot;function.session-write-close&quot;&gt;session_write_close()&lt;/a&gt; is called. Return value should be &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; for success, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; for failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b66b2d2df48c118b67eb46166980bddbd821e3d" translate="yes" xml:space="preserve">
          <source>The closest matching language tag or default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1db443fc83ec5d42ee48110f159eda1baaff18c" translate="yes" xml:space="preserve">
          <source>The closing identifier &lt;em&gt;must&lt;/em&gt; begin in the first column of the line. Also, the identifier must follow the same naming rules as any other label in PHP: it must contain only alphanumeric characters and underscores, and must start with a non-digit character or underscore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d4dfeec33709e73b90a4d4ab7576376d5892d4" translate="yes" xml:space="preserve">
          <source>The closing tag of a PHP block at the end of a file is optional, and in some cases omitting it is helpful when using &lt;a href=&quot;function.include&quot;&gt;include&lt;/a&gt; or &lt;a href=&quot;function.require&quot;&gt;require&lt;/a&gt;, so unwanted whitespace will not occur at the end of files, and you will still be able to add headers to the response later. It is also handy if you use output buffering, and would not like to see added unwanted whitespace at the end of the parts generated by the included files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87ff940fc2191f0d44148fb63219dedd89e1f46" translate="yes" xml:space="preserve">
          <source>The closure to use for ::run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92295410c259b982d109b569b5cef2bb0ffb314e" translate="yes" xml:space="preserve">
          <source>The code must not be wrapped in opening and closing &lt;a href=&quot;language.basic-syntax.phpmode&quot;&gt;PHP tags&lt;/a&gt;, i.e. &lt;em&gt;'echo &quot;Hi!&quot;;'&lt;/em&gt; must be passed instead of &lt;em&gt;'&amp;lt;?php echo &quot;Hi!&quot;; ?&amp;gt;'&lt;/em&gt;. It is still possible to leave and re-enter PHP mode though using the appropriate PHP tags, e.g. &lt;em&gt;'echo &quot;In PHP mode!&quot;; ?&amp;gt;In HTML mode!&amp;lt;?php echo &quot;Back in PHP mode!&quot;;'&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b785ac08bd8153eab74d5f60b04715492ca410b" translate="yes" xml:space="preserve">
          <source>The code set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de01bc809d129af4fc0c746f1df646ba52686afc" translate="yes" xml:space="preserve">
          <source>The code string to be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f950f61299bf79ec9e073704b38e1b193349783a" translate="yes" xml:space="preserve">
          <source>The code to be evaluated when &lt;code&gt;methodname&lt;/code&gt; is called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e5f0e53401f27f2b04612b273f60eb67229e2c" translate="yes" xml:space="preserve">
          <source>The code will be executed in the scope of the code calling &lt;strong&gt;eval()&lt;/strong&gt;. Thus any variables defined or changed in the &lt;strong&gt;eval()&lt;/strong&gt; call will remain visible after it terminates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aded07b90089b39d71f7fd7daac97082e5436c7" translate="yes" xml:space="preserve">
          <source>The codepage of the &lt;code&gt;subject&lt;/code&gt; string. Either the codepage name or identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d1c3da8ba83b472f8f38353ac7b3e44c636d23" translate="yes" xml:space="preserve">
          <source>The codepage to convert the &lt;code&gt;subject&lt;/code&gt; string to. Either the codepage name or identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd4fd96a24e3fbb5c718df84b67c78d5b2f2d9d" translate="yes" xml:space="preserve">
          <source>The color count is the number of pixels in the image that have the same color as this ImagickPixel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa987b591b36bd4340736613ce51b349fefd80ca" translate="yes" xml:space="preserve">
          <source>The color definition to use in order to initialise the GmagickPixel object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31c78a3043be5c25eb0f5639c10977c8be7fb2c" translate="yes" xml:space="preserve">
          <source>The color definition to use in order to initialise the ImagickPixel object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540c4b9b8b757c1f762189558ba8dd9ce4392bfe" translate="yes" xml:space="preserve">
          <source>The color identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d457ece473187ebebeebebc7ca5e1af359d22764" translate="yes" xml:space="preserve">
          <source>The color in which the text will be painted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d42ff80017f579692dc5bc54f8711f188d6dcd" translate="yes" xml:space="preserve">
          <source>The color index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0935dfd92fbc005de9d4adeeff25e9f97dd5df5" translate="yes" xml:space="preserve">
          <source>The color index. Using the negative of a color index has the effect of turning off antialiasing. See &lt;a href=&quot;function.imagecolorallocate&quot;&gt;imagecolorallocate()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905d20266cde1abf391fce7254ba4d14fdeb6a2b" translate="yes" xml:space="preserve">
          <source>The color of the ellipse. A color identifier created with &lt;a href=&quot;function.imagecolorallocate&quot;&gt;imagecolorallocate()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcc27318e343729308f936df7a2e45e9e025490" translate="yes" xml:space="preserve">
          <source>The color to get the value of, specified as one of the Imagick color constants. This can be one of the RGB colors, CMYK colors, alpha and opacity e.g (Imagick::COLOR_BLUE, Imagick::COLOR_MAGENTA).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0659e5f5beb43c0d2928a2099fd4e71e255b09b" translate="yes" xml:space="preserve">
          <source>The color to which the text will try to fade in with antialiasing. No pixels with the color &lt;code&gt;background&lt;/code&gt; are actually painted, so the background image does not need to be of solid color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11c88df729a0b242e757cfe2c9640e65ccb061f" translate="yes" xml:space="preserve">
          <source>The colors parameters are integers between 0 and 255 or hexadecimals between 0x00 and 0xFF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b95f729829867d3af93e070e95703119bdd4ce4" translate="yes" xml:space="preserve">
          <source>The colorspace the image should be transformed to, one of the &lt;a href=&quot;https://secure.php.net/manual/en/imagick.constants.php#imagick.constants.colorspace&quot;&gt;COLORSPACE constants&lt;/a&gt; e.g. Imagick::COLORSPACE_CMYK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2066b41b3d0f3870bac5b3d93ab5801bdd31c8a" translate="yes" xml:space="preserve">
          <source>The column name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fecddaba26478a01afae7833c3b2804c8af33b" translate="yes" xml:space="preserve">
          <source>The column number at which the tags is located in the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff03d36b52633ac5c3ec85f33feb14a04f02664" translate="yes" xml:space="preserve">
          <source>The column of values to return. This value may be an integer key of the column you wish to retrieve, or it may be a string key name for an associative array or property name. It may also be &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; to return complete arrays or objects (this is useful together with &lt;code&gt;index_key&lt;/code&gt; to reindex the array).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22717e71268196998a36c730ecdc8af386cb052" translate="yes" xml:space="preserve">
          <source>The column offset of the composited image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127b81140420e84238454df69a7f5eaf0a3e32b5" translate="yes" xml:space="preserve">
          <source>The column to use as the index/keys for the returned array. This value may be the integer key of the column, or it may be the string key name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1d07b6cde27de92a635d30bd351b70dd2c617c" translate="yes" xml:space="preserve">
          <source>The column where the error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f6befa882c39447ec364d2262254691f6898bb" translate="yes" xml:space="preserve">
          <source>The column. This parameter accepts the following search patterns: &quot;%&quot; to match zero or more characters, and &quot;_&quot; to match a single character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd4560f80e37678e732b5c8d14853389e02cdc1" translate="yes" xml:space="preserve">
          <source>The comma after the last array element is optional and can be omitted. This is usually done for single-line arrays, i.e. &lt;em&gt;array(1, 2)&lt;/em&gt; is preferred over &lt;em&gt;array(1, 2, )&lt;/em&gt;. For multi-line arrays on the other hand the trailing comma is commonly used, as it allows easier addition of new elements at the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062e4ea98a9662fe6dca5fb34a40a037aa606eb5" translate="yes" xml:space="preserve">
          <source>The command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2cf8994f55e4ae6e4d148bad86b86888605329" translate="yes" xml:space="preserve">
          <source>The command string that was passed to &lt;a href=&quot;function.proc-open&quot;&gt;proc_open()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89259cb392b00acc5d60df0521045d583c1bb870" translate="yes" xml:space="preserve">
          <source>The command that will be escaped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ab3b82585ea7d184a1a6d5bd7d08d62d7bfe9e" translate="yes" xml:space="preserve">
          <source>The command that will be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5488b019f05c00918d468983454c567257aed5c2" translate="yes" xml:space="preserve">
          <source>The command to execute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e3d91ed6f4653eb877f8a613c821692b31c06b" translate="yes" xml:space="preserve">
          <source>The command to execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40da159759573804ef983fd0a2c8046d928916d3" translate="yes" xml:space="preserve">
          <source>The comment string to add to vector output stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b69057e9a482e099a9ad1e988ea300296cd72bd" translate="yes" xml:space="preserve">
          <source>The comment to add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5956ab0e579b0abeff94fa2d20ae68e38b508a" translate="yes" xml:space="preserve">
          <source>The compared node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43834c73860acf878459acf83298055ae61f579e" translate="yes" xml:space="preserve">
          <source>The compared value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40f259c658d0564c7615618d27e6bcc705eb46a" translate="yes" xml:space="preserve">
          <source>The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. Note that before PHP 7.0.0 this integer had to be in the range from -2147483648 to 2147483647.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b90588c0c4ddd1f0a01d63f23d4db0eb848722" translate="yes" xml:space="preserve">
          <source>The comparison of keys (indices) is done also by the callback function &lt;code&gt;key_compare_func&lt;/code&gt;. This behaviour is unlike what &lt;a href=&quot;function.array-udiff-assoc&quot;&gt;array_udiff_assoc()&lt;/a&gt; does, since the latter compares the indices by using an internal function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114bb470e860bcabfde480c003218830c570f3b5" translate="yes" xml:space="preserve">
          <source>The complex syntax can be recognised by the curly braces surrounding the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6127c20b1a9f981e8b48a71284c32eac587dfb05" translate="yes" xml:space="preserve">
          <source>The compressed size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfbe83f994759907336d6197f3add1d2b472315" translate="yes" xml:space="preserve">
          <source>The compressed string or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ab84439393d6cdb9ccf0b17971b509845fe2d9" translate="yes" xml:space="preserve">
          <source>The compressed string, or an error number if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc865c70f62bf9f2632fb114d39c212502b86c9" translate="yes" xml:space="preserve">
          <source>The compression algorithm. Either &lt;strong&gt;&lt;code&gt;ZLIB_ENCODING_RAW&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ZLIB_ENCODING_DEFLATE&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;ZLIB_ENCODING_GZIP&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d22035af93b191eb9879c054681d980fbb619d9" translate="yes" xml:space="preserve">
          <source>The compression level in range -1..9; defaults to -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2017ac63b069d62eca97c3c4caa06502a3651d" translate="yes" xml:space="preserve">
          <source>The compression memory level in range 1..9; defaults to 8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0adb7b31be57da07aac9e7de2377e981a4611136" translate="yes" xml:space="preserve">
          <source>The compression method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92648b07c59914f34e3cb72b28f06f452a1512c0" translate="yes" xml:space="preserve">
          <source>The compression method. Either &lt;strong&gt;&lt;code&gt;ZipArchive::CM_DEFAULT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ZipArchive::CM_STORE&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;ZipArchive::CM_DEFLATE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fa1cf65836155882fa7fd15cdbba387c600a89" translate="yes" xml:space="preserve">
          <source>The compression type. See the &lt;a href=&quot;https://secure.php.net/manual/en/imagick.constants.php&quot;&gt;Imagick::COMPRESSION_*&lt;/a&gt; constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a457c30d451f05f86434dc542bc5b4c2b3d0652" translate="yes" xml:space="preserve">
          <source>The condition is a positive lookahead assertion that matches an optional sequence of non-letters followed by a letter. In other words, it tests for the presence of at least one letter in the subject. If a letter is found, the subject is matched against the first alternative; otherwise it is matched against the second. This pattern matches strings in one of the two forms dd-aaa-dd or dd-dd-dd, where aaa are letters and dd are digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cb9dc1804db15031fe2d3a29c44615dccbc9b3" translate="yes" xml:space="preserve">
          <source>The config &lt;code&gt;config&lt;/code&gt; can be passed either as an array or as a string. If a string is passed, it is interpreted as the name of the configuration file, otherwise, it is interpreted as the options themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c600165f0c41861a8284c7ef3e3c6c0d9a7ae1b8" translate="yes" xml:space="preserve">
          <source>The configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7752f3b59ddc648b722efab6b236b7e2eb3992d3" translate="yes" xml:space="preserve">
          <source>The configuration line, &lt;var&gt;php.ini&lt;/var&gt; location, build date, Web Server, System and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72ca4c50df18fa4711c652233aec5b7d3826031" translate="yes" xml:space="preserve">
          <source>The configuration option name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a635da50f0b92dd0651e6efb5c5d0875881593e" translate="yes" xml:space="preserve">
          <source>The connected-to database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe6e7c6c55af24293fa8c79efddc4155aabce3a" translate="yes" xml:space="preserve">
          <source>The connection about which information is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458425f1ec67ac0504349fc4b3acbdf6e83bca30" translate="yes" xml:space="preserve">
          <source>The connection id returned by this functions is needed by other ODBC functions. You can have multiple connections open at once as long as they either use different db or different credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90642bb7eab69844015d311d933ef2038107ace" translate="yes" xml:space="preserve">
          <source>The connection object over which to send the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556053fde2e7643c0f6b2a4dec42f72cd6b740ca" translate="yes" xml:space="preserve">
          <source>The connection on which the transaction is to be committed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8692840babdffe20a8be0d9f8c1397e1f3e3c8" translate="yes" xml:space="preserve">
          <source>The connection resource returned by a call to &lt;a href=&quot;function.sqlsrv-connect&quot;&gt;sqlsrv_connect()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26bfc86d89aabc84322187beef9bfbc784d51d29" translate="yes" xml:space="preserve">
          <source>The connection resource that connects the client and the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e23dde2b95b133fdfee284ec5580e257058c0af" translate="yes" xml:space="preserve">
          <source>The connection timeout, in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66072ba866a640e0ef65ec133a737434d63460c7" translate="yes" xml:space="preserve">
          <source>The connection to be closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df7710acf04772ef2cf6b18baea5fd84cf232a6" translate="yes" xml:space="preserve">
          <source>The constant &lt;strong&gt;&lt;code&gt;ENT_IGNORE&lt;/code&gt;&lt;/strong&gt; was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d7ba3f116c9bee49f0e5ea9689a9e14ce25aed" translate="yes" xml:space="preserve">
          <source>The constant &lt;strong&gt;&lt;code&gt;SID&lt;/code&gt;&lt;/strong&gt; can also be used to retrieve the current name and session id as a string suitable for adding to URLs. See also &lt;a href=&quot;https://secure.php.net/manual/en/ref.session.php&quot;&gt;Session handling&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191b543dcc88a3f49a890ba8ce21c1c7e1461a6a" translate="yes" xml:space="preserve">
          <source>The constant name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17531b223036e88ba5d32c2cd755406505ff14b" translate="yes" xml:space="preserve">
          <source>The constants &lt;strong&gt;&lt;code&gt;ENT_HTML401&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_XML1&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_XHTML&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;ENT_HTML5&lt;/code&gt;&lt;/strong&gt; were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0133519a3a459d4aa2d72e04adc85e37787ba6" translate="yes" xml:space="preserve">
          <source>The constants &lt;strong&gt;&lt;code&gt;ENT_SUBSTITUTE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_DISALLOWED&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_HTML401&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_XML1&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;ENT_XHTML&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;ENT_HTML5&lt;/code&gt;&lt;/strong&gt; were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cd7759784687c833d6df9c2aa7aeae7301f01d" translate="yes" xml:space="preserve">
          <source>The constructor to use for anonymous object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4286284654d9cff9c96fa8cfeda0cf13b60ad5bc" translate="yes" xml:space="preserve">
          <source>The consumer key provided by the service provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e4d6dfbff768d97d12e2eee567f1094098a035" translate="yes" xml:space="preserve">
          <source>The consumer secret provided by the service provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0b2e840be0ceed72a0639f3b7af821ec007376" translate="yes" xml:space="preserve">
          <source>The content of the DTD attribute list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9cd58e596c4603ddc6443ae5558e104f56a241" translate="yes" xml:space="preserve">
          <source>The content of the DTD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef129f86b8668e792f031c3c2caa463e96d5657" translate="yes" xml:space="preserve">
          <source>The content of the cdata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a55ca2e500107ae3d516348926d57b040933bc" translate="yes" xml:space="preserve">
          <source>The content of the comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8fa0c600ba7e2c63e1813b39741a55dfa5cb64" translate="yes" xml:space="preserve">
          <source>The content of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0cf51bc2d58e28b4e03b8007d81b04ec733343" translate="yes" xml:space="preserve">
          <source>The content of the entity reference, e.g. the entity reference minus the leading &lt;em&gt;&amp;amp;&lt;/em&gt; and the trailing &lt;em&gt;;&lt;/em&gt; characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492e582713499aa08b742e65100c9544b2d1878a" translate="yes" xml:space="preserve">
          <source>The content of the entity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a881b81e01fcead7699302b8892430d036be5e1" translate="yes" xml:space="preserve">
          <source>The content of the processing instruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643249c617d9f80952d7e2dd81d640cf10a03caa" translate="yes" xml:space="preserve">
          <source>The content of the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fb6fd24275ae0d01269a4ef368c4b7ad8b7fab" translate="yes" xml:space="preserve">
          <source>The contents of an OpenSSL private key, as extracted from a certificate or OpenSSL key file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dac1fe704063b1f4d8db08ddc700b85d42d33a1" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;params&lt;/code&gt; parameter passed to &lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append()&lt;/a&gt; or &lt;a href=&quot;function.stream-filter-prepend&quot;&gt;stream_filter_prepend()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8252f9d585384ae21668b291cc6e3d237abf03" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;em&gt;&quot;Accept-Encoding: &quot;&lt;/em&gt; header. This enables decoding of the response. Supported encodings are &lt;em&gt;&quot;identity&quot;&lt;/em&gt;, &lt;em&gt;&quot;deflate&quot;&lt;/em&gt;, and &lt;em&gt;&quot;gzip&quot;&lt;/em&gt;. If an empty string, &lt;em&gt;&quot;&quot;&lt;/em&gt;, is set, a header containing all supported encoding types is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888de2abb6870dbe8f55915cdda8fc0a61cf09ea" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;em&gt;&quot;Cookie: &quot;&lt;/em&gt; header to be used in the HTTP request. Note that multiple cookies are separated with a semicolon followed by a space (e.g., &quot;&lt;em&gt;fruit=apple; colour=red&lt;/em&gt;&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732d5fc8f734ccab14ab3f4ad9cdeeabc7759557" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;em&gt;&quot;Referer: &quot;&lt;/em&gt; header to be used in a HTTP request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c119538caa4d563b2cbc022975df374cfb4fc11" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;em&gt;&quot;User-Agent: &quot;&lt;/em&gt; header to be used in a HTTP request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1bf0dad01c9498767f82191e6930b7292a4265" translate="yes" xml:space="preserve">
          <source>The contents of the CDATA.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8787e5d9e69f4107dd736edba709122b1d015051" translate="yes" xml:space="preserve">
          <source>The contents of the comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477cb178f6f90a555978217b86592a86921dba49" translate="yes" xml:space="preserve">
          <source>The contents of the ini file being parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90801c3f8a4509fb0efb9c377e0bf90d14ebdfe" translate="yes" xml:space="preserve">
          <source>The contents of the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb3efd4ad6876831240c9b7e23faaec0192a8ef" translate="yes" xml:space="preserve">
          <source>The contents of the output buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d67c3edcd21b98fea984f7443c275970c17df50" translate="yes" xml:space="preserve">
          <source>The contents of the section will be decoded according to their transfer encoding - base64, quoted-printable and uuencoded text are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5b7a2f574d3ed6df4879af99897110b8d378e6" translate="yes" xml:space="preserve">
          <source>The contents of the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81cec1abef2502ba63dc9b301b0c696a6fc3e01" translate="yes" xml:space="preserve">
          <source>The contents of this internal buffer may be copied into a string variable using &lt;a href=&quot;function.ob-get-contents&quot;&gt;ob_get_contents()&lt;/a&gt;. To output what is stored in the internal buffer, use &lt;a href=&quot;function.ob-end-flush&quot;&gt;ob_end_flush()&lt;/a&gt;. Alternatively, &lt;a href=&quot;function.ob-end-clean&quot;&gt;ob_end_clean()&lt;/a&gt; will silently discard the buffer contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c29b0224cb7374259a3d4f9516bd011c9e9e9d" translate="yes" xml:space="preserve">
          <source>The contents to use to create the entry. It is used in a binary safe mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66243e0c955b758b331b2494a87278be99d96bc6" translate="yes" xml:space="preserve">
          <source>The context passed to the &lt;code&gt;filename&lt;/code&gt; stream. See the &lt;a href=&quot;function.file-put-contents&quot;&gt;file_put_contents()&lt;/a&gt; documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c55e703a413453a184b775d3964803470d06b27" translate="yes" xml:space="preserve">
          <source>The context the escaped string will be used in: &lt;strong&gt;&lt;code&gt;LDAP_ESCAPE_FILTER&lt;/code&gt;&lt;/strong&gt; for filters to be used with &lt;a href=&quot;function.ldap-search&quot;&gt;ldap_search()&lt;/a&gt;, or &lt;strong&gt;&lt;code&gt;LDAP_ESCAPE_DN&lt;/code&gt;&lt;/strong&gt; for DNs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e116191e643a512bbf185bca6029699c7412ff1" translate="yes" xml:space="preserve">
          <source>The conversion option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e046f11d3a9795f99624c6e35b347e1eacb5c4" translate="yes" xml:space="preserve">
          <source>The converted &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2347155dadf36b0eb4b6956c5d099434590c2df5" translate="yes" xml:space="preserve">
          <source>The converted entities are: &lt;em&gt;&amp;amp;amp;&lt;/em&gt;, &lt;em&gt;&amp;amp;quot;&lt;/em&gt; (when &lt;strong&gt;&lt;code&gt;ENT_NOQUOTES&lt;/code&gt;&lt;/strong&gt; is not set), &lt;em&gt;&amp;amp;#039;&lt;/em&gt; (when &lt;strong&gt;&lt;code&gt;ENT_QUOTES&lt;/code&gt;&lt;/strong&gt; is set), &lt;em&gt;&amp;amp;lt;&lt;/em&gt; and &lt;em&gt;&amp;amp;gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c41448fe5b79e70af4c032f43ab2e7205ce1723" translate="yes" xml:space="preserve">
          <source>The converted value is returned, and can be a &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;, &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;, &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;, &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2330ebd03d3f71aaada2575e4cd0073a69f7e3f3" translate="yes" xml:space="preserve">
          <source>The convolution kernel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab168e587ecb240b2fab663e7eb456a19b0274d5" translate="yes" xml:space="preserve">
          <source>The coordinates given by &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; will define the basepoint of the first character (roughly the lower-left corner of the character). This is different from the &lt;a href=&quot;function.imagestring&quot;&gt;imagestring()&lt;/a&gt;, where &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; define the upper-left corner of the first character. For example, &quot;top left&quot; is 0, 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0839fa4baa6504324d5125d465e9bdef8a7ed7" translate="yes" xml:space="preserve">
          <source>The copied node or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;, if it cannot be copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c05148a528ec035d09874bb193f8137b9ecfa17" translate="yes" xml:space="preserve">
          <source>The corresponding locale identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61520871e76922f5a462d655ac0127130f229201" translate="yes" xml:space="preserve">
          <source>The corresponding name, or an empty string if there is no name for this character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939e183b7d30633ffc4ccd046f8d102d43b19b32" translate="yes" xml:space="preserve">
          <source>The cosine of &lt;code&gt;arg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360033e631886d266e4bb914a0930a02b5440f71" translate="yes" xml:space="preserve">
          <source>The count of elements is always equal to the set size because all values are initially initialized with &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22916425233fc1b6fa796efcc4b4f5221402d8f1" translate="yes" xml:space="preserve">
          <source>The count of the elements iterated over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8068abd54f66cf300ee635114ef8c6e3112e1f99" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; instance or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d147f6b4231410cd19eb17dd78659bede15ad1a" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; object or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; in case of failure. If a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; is passed, any exception that occurs inside the &lt;a href=&quot;class.datetime&quot;&gt;DateTime&lt;/a&gt; constructor is propagated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f16c174a38a3f61047606ceadbccc206f91a5e" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;class.intldateformatter&quot;&gt;IntlDateFormatter&lt;/a&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; in case of failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ae14bd9090410923d2c8e3d6e46107b45a55fa" translate="yes" xml:space="preserve">
          <source>The credits for the documentation team</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4281a9a07fdd2757aa27fb708fc77eaae82a0b" translate="yes" xml:space="preserve">
          <source>The cropped Gmagick object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518c91f96b875b6a5a31b8bbe5a143b6db76bd21" translate="yes" xml:space="preserve">
          <source>The cropping rectangle as &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; with keys &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;width&lt;/em&gt; and &lt;em&gt;height&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9332e84bcfbb68c1df6bf620e224f938517c10" translate="yes" xml:space="preserve">
          <source>The currency symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423d4adcb1bd7b27477ad0b4396127cb6bc6b7b9" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff4ee4d62a8984a5e37b69c1648d877aae8355b" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;class.intldateformatter#intl.intldateformatter-constants&quot;&gt;date type&lt;/a&gt; value of the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4201f9558be3af0eac466248c8bf214c9bf3434" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;https://secure.php.net/manual/en/context.php&quot;&gt;context&lt;/a&gt;, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if no context was passed to the caller function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975b0b84fa489cf24846727f85098450d6121dc7" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;https://secure.php.net/manual/en/language.oop5.php&quot;&gt;class&lt;/a&gt; name. See also &lt;a href=&quot;language.constants.predefined&quot;&gt;__CLASS__&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0a4bcd9ffe9de9543f0fab6e29a5774356659b" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;https://secure.php.net/manual/en/language.oop5.php&quot;&gt;object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74a68adfc85919213792698bf9f883fc1771f8a" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec911a21635cdfaf6c11659ed3d0fd45109652f7" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf067a8a3741552f2e5ded57f719b0209556c30" translate="yes" xml:space="preserve">
          <source>The current active sub iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723b20049519342f23feb5f8167496f4a11e3734" translate="yes" xml:space="preserve">
          <source>The current array index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470c027d22c8ab8f31a5a3022808704a94a4edd8" translate="yes" xml:space="preserve">
          <source>The current call type. If a method call, &quot;-&amp;gt;&quot; is returned. If a static method call, &quot;::&quot; is returned. If a function call, nothing is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d20fad68569568a83c4caa09c7b82c2355406e8" translate="yes" xml:space="preserve">
          <source>The current capacity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce6a6de16761ebbc895084fba8099cece1e2e7f" translate="yes" xml:space="preserve">
          <source>The current depth of the recursive iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b59743735ad981af113b8c2e2da8cd0211ef1a0" translate="yes" xml:space="preserve">
          <source>The current element value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40d8ea5088b434b4c2a8b1ce686cedaddf8b811" translate="yes" xml:space="preserve">
          <source>The current elements value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afd4a2ec2ec3b9fa214ae3a98f418667f7e7878" translate="yes" xml:space="preserve">
          <source>The current file name. See also &lt;a href=&quot;language.constants.predefined&quot;&gt;__FILE__&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8bdfdc70df4bc8bba1e275463f3d76ff2a6f2a" translate="yes" xml:space="preserve">
          <source>The current file that is being renamed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c43f1ca24d9ba77baf239940b786cf7ce5a5151" translate="yes" xml:space="preserve">
          <source>The current function name. See also &lt;a href=&quot;language.constants.predefined&quot;&gt;__FUNCTION__&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be75835659ab5ecf189ae0761495ededfc646f4" translate="yes" xml:space="preserve">
          <source>The current inner iterator, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if there is not one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b364a527e0f75cac074b02814e4d222119de26d" translate="yes" xml:space="preserve">
          <source>The current instance is not affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d65b40c29062c006b7af8c51283a44514749b61" translate="yes" xml:space="preserve">
          <source>The current instance won't be affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65cc8f4a832fdf1315cc81da134bbea4f051029" translate="yes" xml:space="preserve">
          <source>The current interval value. Can be modified any time, but changes only take effect when the periodic timer fires or &lt;a href=&quot;evperiodic.again&quot;&gt;EvPeriodic::again()&lt;/a&gt; is being called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679c7736ab78e68e2fbb32d95b6eac34e2a1e774" translate="yes" xml:space="preserve">
          <source>The current iteration count of the loop. See &lt;a href=&quot;ev.iteration&quot;&gt;Ev::iteration()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff575ad69999b7f3c8ea381e13eb6f29dec75ba" translate="yes" xml:space="preserve">
          <source>The current key if it is valid or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314648ddeed0f755c794a4c2c0d04d38274ffaeb" translate="yes" xml:space="preserve">
          <source>The current key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5dad856787f29b7ee997fa5f6af8a087a05185" translate="yes" xml:space="preserve">
          <source>The current line number of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5d99fc6f2f2a8366232122280edce8175c663e" translate="yes" xml:space="preserve">
          <source>The current line number. See also &lt;a href=&quot;language.constants.predefined&quot;&gt;__LINE__&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b70c5fdda69bad5613ac577eecd4f605d38efc" translate="yes" xml:space="preserve">
          <source>The current list special characters are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37eed585221a7297f4dbc211e95560cb0d782cf" translate="yes" xml:space="preserve">
          <source>The current node index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b146f55f8d61c441adb76af85e9ded9aa584e46e" translate="yes" xml:space="preserve">
          <source>The current node value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2275b2c9990807450902299eedc99980518842a1" translate="yes" xml:space="preserve">
          <source>The current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99d249eb70e985a97e956e158bdfe19c93d2dfb" translate="yes" xml:space="preserve">
          <source>The current possible PCRE modifiers are listed below. The names in parentheses refer to internal PCRE names for these modifiers. Spaces and newlines are ignored in modifiers, other characters cause error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6156763bd662d6b04e8f29ae852e2e048daa5eb4" translate="yes" xml:space="preserve">
          <source>The current runtime locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd830ce723de53902ff0a08b8d757a4084a844a6" translate="yes" xml:space="preserve">
          <source>The current seek offset (in number of bytes) from the beginning of the large object. If there is an error, the return value is negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81a9daec89ed33bfeaa03af7ca5509133ace265" translate="yes" xml:space="preserve">
          <source>The current state of SSL connection: &lt;strong&gt;&lt;code&gt;EventBufferEvent::SSL_OPEN&lt;/code&gt;&lt;/strong&gt; , &lt;strong&gt;&lt;code&gt;EventBufferEvent::SSL_ACCEPTING&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;EventBufferEvent::SSL_CONNECTING&lt;/code&gt;&lt;/strong&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018693b159f2a9e45f96c5a3e654f7cdfba8b2d4" translate="yes" xml:space="preserve">
          <source>The current user is the user under which PHP runs. It is probably not the same user you use for normal shell or FTP access. The mode can be changed only by user who owns the file on most systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ebad1c12d29d0fd23467fa6f99e2d19dd37520" translate="yes" xml:space="preserve">
          <source>The current value if it is valid or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6415d0371a83f4cf2a03049e398ac9d7573c8a" translate="yes" xml:space="preserve">
          <source>The current value of the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2962f6268fdcbc426a7c9f6454ad7118f0363697" translate="yes" xml:space="preserve">
          <source>The current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3c5354d60bf5d8bbcd64cc6b4c61b5fa2f7332" translate="yes" xml:space="preserve">
          <source>The current version of the Apache Solr extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feac737fb95d5f170cb2e8d865d1327ce9671e87" translate="yes" xml:space="preserve">
          <source>The currently available configuration options are: &lt;em&gt;&quot;ndots&quot;&lt;/em&gt; , &lt;em&gt;&quot;timeout&quot;&lt;/em&gt; , &lt;em&gt;&quot;max-timeouts&quot;&lt;/em&gt; , &lt;em&gt;&quot;max-inflight&quot;&lt;/em&gt; , and &lt;em&gt;&quot;attempts&quot;&lt;/em&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7397b8d63ebd858a6808af2f9accb0a1a2331d5c" translate="yes" xml:space="preserve">
          <source>The currently recognized parameter keywords are: &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;hostaddr&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;dbname&lt;/code&gt; (defaults to value of &lt;code&gt;user&lt;/code&gt;), &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;connect_timeout&lt;/code&gt;, &lt;code&gt;options&lt;/code&gt;, &lt;code&gt;tty&lt;/code&gt; (ignored), &lt;code&gt;sslmode&lt;/code&gt;, &lt;code&gt;requiressl&lt;/code&gt; (deprecated in favor of &lt;code&gt;sslmode&lt;/code&gt;), and &lt;code&gt;service&lt;/code&gt;. Which of these arguments exist depends on your PostgreSQL version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce33a02ac59d6b16c62aa0ad19923c672673fb59" translate="yes" xml:space="preserve">
          <source>The currently recognized parameter keywords are: &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;hostaddr&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;dbname&lt;/code&gt;, &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;connect_timeout&lt;/code&gt;, &lt;code&gt;options&lt;/code&gt;, &lt;code&gt;tty&lt;/code&gt; (ignored), &lt;code&gt;sslmode&lt;/code&gt;, &lt;code&gt;requiressl&lt;/code&gt; (deprecated in favor of &lt;code&gt;sslmode&lt;/code&gt;), and &lt;code&gt;service&lt;/code&gt;. Which of these arguments exist depends on your PostgreSQL version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a21505ffd0f4ce655a3737d853b2dd58a80f60" translate="yes" xml:space="preserve">
          <source>The custom count as an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a660dc7f38ec28748457b93e3e859e0693b860d8" translate="yes" xml:space="preserve">
          <source>The data as an array, called &lt;var&gt;&lt;var&gt;data&lt;/var&gt;&lt;/var&gt;. This would usually, for example, be obtained by looping with &lt;a href=&quot;mysqli-result.fetch-assoc&quot;&gt;mysqli_fetch_assoc()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567fb81d2cc3db6a3157a42abbfe42c95c0d11e2" translate="yes" xml:space="preserve">
          <source>The data associated with the current iterator position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb09cf9c1fbc502a6f1aa46be10775623f8d7c2" translate="yes" xml:space="preserve">
          <source>The data chunk to send as part of the reply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0c064b2525589a3915280d85fd91ce5e2504df" translate="yes" xml:space="preserve">
          <source>The data compressed by &lt;a href=&quot;function.gzcompress&quot;&gt;gzcompress()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233382b278bfbcf422ddc6f2620c4b7f0bdfb23b" translate="yes" xml:space="preserve">
          <source>The data compressed by &lt;a href=&quot;function.gzdeflate&quot;&gt;gzdeflate()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b43f65eaac4acda30631b785bab19926db2af68" translate="yes" xml:space="preserve">
          <source>The data previously associated with the &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; in the storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded85dc852a051d156ec6956d0d392b5fae4b7f7" translate="yes" xml:space="preserve">
          <source>The data received will be fetched to the variable specified with &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509c1a55c4c729eab0dc5c5ad0e25d5ae2c80eec" translate="yes" xml:space="preserve">
          <source>The data received will be fetched to the variable specified with &lt;code&gt;buf&lt;/code&gt;. If an error occurs, if the connection is reset, or if no data is available, &lt;code&gt;buf&lt;/code&gt; will be set to &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d255eec996988b6dcb5abe29a93cf1b7aca04be1" translate="yes" xml:space="preserve">
          <source>The data returned by the server, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b1fa68a9d4c5ae186bc8fe39b589a5e397c786" translate="yes" xml:space="preserve">
          <source>The data returned by this method will be decoded internally by PHP using the unserialization method specified in &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;. The resulting data will be used to populate the &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.session&quot;&gt;$_SESSION&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; superglobal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fa2ee9f5bcdbfc493b05ebb71a40a2b728184a" translate="yes" xml:space="preserve">
          <source>The data size, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if there is no data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b2f4228b7aa45cf83a9fc911afe0d22e782db9" translate="yes" xml:space="preserve">
          <source>The data that have been read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba1f4e5bfd7b93b6c114e542e49e4445b557172" translate="yes" xml:space="preserve">
          <source>The data that will be decrypted with the given &lt;code&gt;cipher&lt;/code&gt; and &lt;code&gt;mode&lt;/code&gt;. If the size of the data is not n * blocksize, the data will be padded with '&lt;em&gt;\0&lt;/em&gt;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199566279b2385a6daad574dd74542937e13a23e" translate="yes" xml:space="preserve">
          <source>The data that will be encrypted with the given &lt;code&gt;cipher&lt;/code&gt; and &lt;code&gt;mode&lt;/code&gt;. If the size of the data is not n * blocksize, the data will be padded with '&lt;em&gt;\0&lt;/em&gt;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a803c882385d4358c7a0519cd43e683d5335fe2" translate="yes" xml:space="preserve">
          <source>The data the returned resource points to will not survive calling &lt;a href=&quot;function.curl-multi-remove-handle&quot;&gt;curl_multi_remove_handle()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b895312c5ff13fd95c13a89c472e48afa570682" translate="yes" xml:space="preserve">
          <source>The data to associate with the &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e54bf592c35420c0f65912480294a2ff67e474" translate="yes" xml:space="preserve">
          <source>The data to associate with the current iterator entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbe2f88e83c6d19c86b9865ff166e10a9f74148" translate="yes" xml:space="preserve">
          <source>The data to be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9180bde3329bb5444b5df5e9e41ba9f04cd7f1e" translate="yes" xml:space="preserve">
          <source>The data to be encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b8b3ca6db6fd526242c73544dfa70e2c68e62f" translate="yes" xml:space="preserve">
          <source>The data to be parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c466babbd0f1673a0a10b9a924e8ceab4046c7a" translate="yes" xml:space="preserve">
          <source>The data to be repaired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c67f5dfc391182ae0f19557c4c3b6c361283fea" translate="yes" xml:space="preserve">
          <source>The data to be sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd53050edb4886bc1a13246c15476855e0d878b" translate="yes" xml:space="preserve">
          <source>The data to be written to the large object. If &lt;code&gt;len&lt;/code&gt; is specified and is less than the length of &lt;code&gt;data&lt;/code&gt;, only &lt;code&gt;len&lt;/code&gt; bytes will be written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a1ea75008c761a339189ba6c0d9b5b69824967" translate="yes" xml:space="preserve">
          <source>The data to be written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25fe10dac469e0f4f5b2311081784468f6251e85" translate="yes" xml:space="preserve">
          <source>The data to compress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca36079f1b94796e7eb83be42881fa3565aaeca0" translate="yes" xml:space="preserve">
          <source>The data to decode, encoded by &lt;a href=&quot;function.gzencode&quot;&gt;gzencode()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98dc2281637d7a742d234c701c9ce2be95938ed6" translate="yes" xml:space="preserve">
          <source>The data to deflate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77a7e1c81043cc97f700ad0d213253f486b563a" translate="yes" xml:space="preserve">
          <source>The data to encode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f548cdbe9ec958459899cea9e357739fa821b87c" translate="yes" xml:space="preserve">
          <source>The data to encrypt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4deacc0335579b89e5d592ade93fed86e84999bf" translate="yes" xml:space="preserve">
          <source>The data to merge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97516a953eb7769a48971e0b1f6186897e84123" translate="yes" xml:space="preserve">
          <source>The data to pass or return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595c26140d62d01486499aacf6799bf66b8e7b2e" translate="yes" xml:space="preserve">
          <source>The data to pass or return. This parameter can be passed directly as PHP value, but in this case it will be named as &lt;em&gt;paramN&lt;/em&gt; and the SOAP service may not understand it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6346d4805766a98594d7dac9dd695de16f578198" translate="yes" xml:space="preserve">
          <source>The data to seal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a4fcf6c6dd9a223f153e9015b049512fc7321f" translate="yes" xml:space="preserve">
          <source>The data to write to shared memoy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4230c3b277b56137668c6e2d27fa3d36692960a" translate="yes" xml:space="preserve">
          <source>The data to write. Can be either a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or a stream resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a13fb8ed5d24fa9f6e7aaeb84c741f8806f1575" translate="yes" xml:space="preserve">
          <source>The data type of the parameter to bind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969f959805beda8fadb10aa69fe9975e9f523d74" translate="yes" xml:space="preserve">
          <source>The data type of the value to bind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d44538dc677228deb998711bb5bd5f08af2cfb1" translate="yes" xml:space="preserve">
          <source>The data type used for this field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42b1e11e43a6d180896d337a2cb63acc2699f2a" translate="yes" xml:space="preserve">
          <source>The data type, which can be used to restrict the information to a single data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660fe59aa4f1107f7d968ac4c0471ddbff4317b5" translate="yes" xml:space="preserve">
          <source>The data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41dd102b5fe8b1e3a7ee5f8e926555e8af6f49af" translate="yes" xml:space="preserve">
          <source>The database handler, returned by &lt;a href=&quot;function.dba-open&quot;&gt;dba_open()&lt;/a&gt; or &lt;a href=&quot;function.dba-popen&quot;&gt;dba_popen()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133c42933eb9f6bdcc738e29e1ecb28fe8f85820" translate="yes" xml:space="preserve">
          <source>The database name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b402aefdd13e8c91d1d442b0ddc2adb26a980312" translate="yes" xml:space="preserve">
          <source>The database source name for the connection. Alternatively, a DSN-less connection string can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf879f0882b2ea5e6f6676f10535820407efdc44" translate="yes" xml:space="preserve">
          <source>The database to change to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7912efe55c96bf40e3e68fba73786966e535eceb" translate="yes" xml:space="preserve">
          <source>The database type as an integer. You can use the &lt;a href=&quot;https://secure.php.net/manual/en/geoip.constants.php&quot;&gt;various constants&lt;/a&gt; defined with this extension (ie: GEOIP_*_EDITION).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d075a9f3f294c547e691b881cebc4bc0217d22" translate="yes" xml:space="preserve">
          <source>The dataset is now sorted, and will look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec40f342cfced2820bf5c7fad1519d037552b79" translate="yes" xml:space="preserve">
          <source>The date formatter resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83810f2796452b3384fd6e2599b2ebe10ed3b33" translate="yes" xml:space="preserve">
          <source>The date of Easter Day was defined by the Council of Nicaea in AD325 as the Sunday after the first full moon which falls on or after the Spring Equinox. The Equinox is assumed to always fall on 21st March, so the calculation reduces to determining the date of the full moon and the date of the following Sunday. The algorithm used here was introduced around the year 532 by Dionysius Exiguus. Under the Julian Calendar (for years before 1753) a simple 19-year cycle is used to track the phases of the Moon. Under the Gregorian Calendar (for years after 1753 - devised by Clavius and Lilius, and introduced by Pope Gregory XIII in October 1582, and into Britain and its then colonies in September 1752) two correction factors are added to make the cycle more accurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8d7eb37af2a68deb3cc21fdff3ef7b040be317" translate="yes" xml:space="preserve">
          <source>The date to compare to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ee7546673d6cb7551f790e0c0aaaad1f6fade5" translate="yes" xml:space="preserve">
          <source>The day as a number from 1 to 30</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef013b7ba7dd743cefab18d17ee39691f9f86d8" translate="yes" xml:space="preserve">
          <source>The day as a number from 1 to 31</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ba58df4e32cc566b140e8b61bceb0fb2685280" translate="yes" xml:space="preserve">
          <source>The day as a number from 1 to 31. If the month has less days then given, overflow occurs; see the example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af3225a3ca214e73e7ad05841e4bf5eb48548a9" translate="yes" xml:space="preserve">
          <source>The day as a number from &lt;em&gt;1&lt;/em&gt; to &lt;em&gt;30&lt;/em&gt;. If the month has only 29 days, the first day of the following month is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece4c4bf3cebc0de4927765ac4346dfbe9386ba1" translate="yes" xml:space="preserve">
          <source>The day as a number, the valid range depends on the &lt;code&gt;calendar&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f7de4f8f6593a4a39cb79fc1fab51664cd2f43" translate="yes" xml:space="preserve">
          <source>The day is within the allowed number of days for the given &lt;code&gt;month&lt;/code&gt;. Leap &lt;code&gt;year&lt;/code&gt;s are taken into consideration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7defd429aabde7a2bbee659d708341c064295317" translate="yes" xml:space="preserve">
          <source>The day of the year (starting from 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7ef1c48872c0e479a4b1c877bc91343218fce5" translate="yes" xml:space="preserve">
          <source>The decimal digit value of &lt;code&gt;codepoint&lt;/code&gt;, or &lt;em&gt;-1&lt;/em&gt; if it is not a decimal digit character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab9c9c1a160f4fac2180d4d605da551766ba585" translate="yes" xml:space="preserve">
          <source>The decimal point character is defined in the script's locale (category LC_NUMERIC). See the &lt;a href=&quot;function.setlocale&quot;&gt;setlocale()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d30fefda21844476001736b621de8bb9d573c5e" translate="yes" xml:space="preserve">
          <source>The decimal representation of &lt;code&gt;hex_string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446a3a07e45a4f7a45aab5da2b5fb40a8c170177" translate="yes" xml:space="preserve">
          <source>The decimal representation of &lt;code&gt;octal_string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c7d3fb35a638f551a542d5241cb7c389652dba" translate="yes" xml:space="preserve">
          <source>The decimal separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7bfd43356c14c625863f352eff67c092fb8bcac" translate="yes" xml:space="preserve">
          <source>The decimal value of &lt;code&gt;binary_string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557e4f61a78cf04fb893cfe0ac2f3e06dcf84a05" translate="yes" xml:space="preserve">
          <source>The decimal value to convert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65fbfef6acc50f8af22e8402f700309806ccb3c" translate="yes" xml:space="preserve">
          <source>The decoded &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; in internal character encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c86b2056cc0a502dab557bd08ab7bab8cf7e8c4" translate="yes" xml:space="preserve">
          <source>The decoded elements are returned in an array of objects, where each object has two properties, &lt;em&gt;charset&lt;/em&gt; and &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7243e666bfe66e51f72c0c49dc1d20e97648a4b" translate="yes" xml:space="preserve">
          <source>The decoded string, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3964b6edbb7eb45695aa4178174ef7431cc9308f" translate="yes" xml:space="preserve">
          <source>The decompressed string, or an error number if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6255b63973cb92ba62b6ed3ce09bc4c4c8a872" translate="yes" xml:space="preserve">
          <source>The decrypted message is written to the file specified by &lt;code&gt;outfilename&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e5f0d8ff0a61dcee60d96a4d176ade22cd85cf" translate="yes" xml:space="preserve">
          <source>The decrypted string on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff37fdbe20691df9cda20bc1165145ea2399805" translate="yes" xml:space="preserve">
          <source>The decryption handle should always be initialized with &lt;a href=&quot;function.mcrypt-generic-init&quot;&gt;mcrypt_generic_init()&lt;/a&gt; with a key and an IV before calling this function. Where the encryption is done, you should free the encryption buffers by calling &lt;a href=&quot;function.mcrypt-generic-deinit&quot;&gt;mcrypt_generic_deinit()&lt;/a&gt;. See &lt;a href=&quot;function.mcrypt-module-open&quot;&gt;mcrypt_module_open()&lt;/a&gt; for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27520c046172f2e12481ff89a7650bb8904bbd3" translate="yes" xml:space="preserve">
          <source>The default MIME type begins with &lt;em&gt;text/&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add574f6e4ec73900e19138db3b4da1863eb69bb" translate="yes" xml:space="preserve">
          <source>The default behavior described above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0402c452e4e7f74b7189ec1217185a2057f3a2" translate="yes" xml:space="preserve">
          <source>The default behaviour for constants is to be declared case-sensitive; i.e. &lt;em&gt;CONSTANT&lt;/em&gt; and &lt;em&gt;Constant&lt;/em&gt; represent different values. If this parameter evaluates to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; the constants will be declared as case-insensitive symbols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e345b6fe81848f1255656e99b38c3f656bc4b93" translate="yes" xml:space="preserve">
          <source>The default character set for the current connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c4d7047b914dc26b3f48605ee62350a8948aed" translate="yes" xml:space="preserve">
          <source>The default flags value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d833cad81ac09a9b1eb8575bf3a660faf8893e" translate="yes" xml:space="preserve">
          <source>The default host name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ad0fe33c0a87750f7488e13b9be0823bd236b5" translate="yes" xml:space="preserve">
          <source>The default mode is 0x2 : SplDoublyLinkedList::IT_MODE_LIFO | SplDoublyLinkedList::IT_MODE_KEEP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2b5f223cbc4449e304b5b030cf06c6088717ff" translate="yes" xml:space="preserve">
          <source>The default mode is &lt;strong&gt;&lt;code&gt;SplPriorityQueue::EXTR_DATA&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac738064d12ccb76d6e4a883889d02fb732799b0" translate="yes" xml:space="preserve">
          <source>The default mode is: &lt;strong&gt;&lt;code&gt;SplDoublyLinkedList::IT_MODE_FIFO&lt;/code&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;code&gt;SplDoublyLinkedList::IT_MODE_KEEP&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a74148b7b768260cbd2bbb646504dc7568a66ed" translate="yes" xml:space="preserve">
          <source>The default protocol to use if the URL is missing a scheme name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c40f6e3df56ed3d19dc4cfc0aea998f9af9383" translate="yes" xml:space="preserve">
          <source>The default rule set. This is only available with rule-based formatters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e845ee0f2ab2afefad2c5824621329645b63f6" translate="yes" xml:space="preserve">
          <source>The default should only change in a full release (7.3.0, 8.0.0, etc) and not in a revision release. The only exception to this is in an emergency when a critical security flaw is found in the current default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f5ad1ebe05e904b5797c6d12d8cc7dd4a236a0" translate="yes" xml:space="preserve">
          <source>The default translation mode depends on the SAPI and version of PHP that you are using, so you are encouraged to always specify the appropriate flag for portability reasons. You should use the &lt;em&gt;'t'&lt;/em&gt; mode if you are working with plain-text files and you use &lt;em&gt;\n&lt;/em&gt; to delimit your line endings in your script, but expect your files to be readable with applications such as notepad. You should use the &lt;em&gt;'b'&lt;/em&gt; in all other cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5638e400f286a1ec6d001f3ae88319277f63d56c" translate="yes" xml:space="preserve">
          <source>The default value for the &lt;code&gt;encoding&lt;/code&gt; parameter was changed to UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e95d426012c3f5d0c6556273c253420e89a9659" translate="yes" xml:space="preserve">
          <source>The default value for the &lt;code&gt;encoding&lt;/code&gt; parameter was changed to be the value of the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.default-charset&quot;&gt;default_charset&lt;/a&gt; configuration option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20b2a00393d057ad21135989cd3febed25af538" translate="yes" xml:space="preserve">
          <source>The default value for this field, represented as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96c0c4bb41ff72b0df96c32019c9d35f3355cf6" translate="yes" xml:space="preserve">
          <source>The default value must be a constant expression, not (for example) a variable, a class member or a function call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2359f84000046388d91a0c78c26146b4ad29f3" translate="yes" xml:space="preserve">
          <source>The default value of the &lt;code&gt;length&lt;/code&gt; parameter was changed to &lt;em&gt;NULL&lt;/em&gt;. A &lt;em&gt;NULL&lt;/em&gt;&lt;code&gt;length&lt;/code&gt; now tells the function to use the length of &lt;code&gt;array&lt;/code&gt;. Prior to this version, a &lt;em&gt;NULL&lt;/em&gt;&lt;code&gt;length&lt;/code&gt; was taken to mean a zero length (nothing will be returned).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d037ebf64a41fc72e0fef2dcf81fa0516caa4b86" translate="yes" xml:space="preserve">
          <source>The defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be06b291c3e2442b7c1d73608125b957ce62200" translate="yes" xml:space="preserve">
          <source>The definition of a word is any string of characters that is immediately after any character listed in the &lt;code&gt;delimiters&lt;/code&gt; parameter (By default these are: space, form-feed, newline, carriage return, horizontal tab, and vertical tab).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e716dc0c4277f150efb34c659fc27b0543a3bc77" translate="yes" xml:space="preserve">
          <source>The deflated string or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedf0cc790a0c20acae2369d1608dbfe595fbd75" translate="yes" xml:space="preserve">
          <source>The degree of freedom of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f8250c0faf8d08e003c09d22591416a325b5c8" translate="yes" xml:space="preserve">
          <source>The degrees of freedom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b8047ebb9ab7849acdc2f29769c85d567fbe4a" translate="yes" xml:space="preserve">
          <source>The degrees of freedom in the denominator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f98cea01a54047d643f2f3113b82fa34a12adb" translate="yes" xml:space="preserve">
          <source>The degrees of freedom in the numerator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0082c7220d8a5d72439a3652f2053915e0b2b08a" translate="yes" xml:space="preserve">
          <source>The degrees of freedom of the denominator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a689e7cb4e494d6d798ced837fa7e59231604dff" translate="yes" xml:space="preserve">
          <source>The degrees of freedom of the numerator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154e0fc5e64d13788800a42e575852de8a5f595c" translate="yes" xml:space="preserve">
          <source>The delay can be set individually for each frame in an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcf526c355712909460c7e075f655d7cd8fe07c" translate="yes" xml:space="preserve">
          <source>The delimiter used when splitting up &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74750d7852514918f87024c1fa6780b5973105b" translate="yes" xml:space="preserve">
          <source>The denominator of the precentage completed expressed as a fraction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af01a5778dc172d8cc5e77bb42044dc73b9ef9c" translate="yes" xml:space="preserve">
          <source>The designated error message for this error. It's limited to 1024 bytes in length. Any additional characters beyond 1024 bytes will be truncated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d42a7981a8a6a0281709b9651984e46678a6e4" translate="yes" xml:space="preserve">
          <source>The designated error type for this error. It only works with the E_USER family of constants, and will default to &lt;strong&gt;&lt;code&gt;E_USER_NOTICE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a556d30294aafed3489e01f7e20fb49300b357" translate="yes" xml:space="preserve">
          <source>The desired format, as configured with one or more of the &lt;a href=&quot;https://secure.php.net/manual/en/apc.constants.php&quot;&gt;APC_ITER_*&lt;/a&gt; constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f718599feb86640d827777fbab0564ae28fad0" translate="yes" xml:space="preserve">
          <source>The desired format, as configured with one or more of the &lt;a href=&quot;https://secure.php.net/manual/en/apcu.constants.php&quot;&gt;APC_ITER_*&lt;/a&gt; constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c9497e1d117197ac2fbc419e455c6bf339cee1" translate="yes" xml:space="preserve">
          <source>The desired new chunk size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078564dca62726bf078c5f43eff5366d181506ac" translate="yes" xml:space="preserve">
          <source>The desired request engine. Set to &lt;strong&gt;&lt;code&gt;OAUTH_REQENGINE_STREAMS&lt;/code&gt;&lt;/strong&gt; to use PHP Streams, or &lt;strong&gt;&lt;code&gt;OAUTH_REQENGINE_CURL&lt;/code&gt;&lt;/strong&gt; to use &lt;a href=&quot;https://secure.php.net/manual/en/book.curl.php&quot;&gt;Curl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf78cae0dfdd5ebf04d232716e6c5b37522f755" translate="yes" xml:space="preserve">
          <source>The desired token length, in terms of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7d99f8a51e7629796854c1394ee55a81be764b" translate="yes" xml:space="preserve">
          <source>The despeckled Gmagick object on success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62bb2379ee51beea5c22c7db44b5e4192fdc16dd" translate="yes" xml:space="preserve">
          <source>The destination file handle in which the encoded data will be written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c717f452eb1d780cf7b6650f81bfe94ee45a1cdc" translate="yes" xml:space="preserve">
          <source>The destination image resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc68e086eb583ec6b8ea9385bd6bf17924c4412" translate="yes" xml:space="preserve">
          <source>The destination of the moved file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f537e8b25c8ac500c0959f0f28b8b2a920228ee" translate="yes" xml:space="preserve">
          <source>The destination path. If &lt;code&gt;dest&lt;/code&gt; is a URL, the copy operation may fail if the wrapper does not support overwriting of existing files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9577d2f9a23b92e7a55dfebe0018ec7bb89048" translate="yes" xml:space="preserve">
          <source>The destination stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e574c5e4e70723af9e20c40da3627f12915b21" translate="yes" xml:space="preserve">
          <source>The destination. Its meaning depends on the &lt;code&gt;message_type&lt;/code&gt; parameter as described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea19c2ae655b1fe51fa3f081625fc442aa5f0286" translate="yes" xml:space="preserve">
          <source>The destructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d888391767bb21bb1d146f854293ef351deb5840" translate="yes" xml:space="preserve">
          <source>The destructor will be called even if script execution is stopped using &lt;a href=&quot;function.exit&quot;&gt;exit()&lt;/a&gt;. Calling &lt;a href=&quot;function.exit&quot;&gt;exit()&lt;/a&gt; in a destructor will prevent the remaining shutdown routines from executing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a2a44b48182ef62e6f71b13ec16e7168535f5c" translate="yes" xml:space="preserve">
          <source>The destructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a0af85d7a4dac95e364ca2f8b25a659c81d661" translate="yes" xml:space="preserve">
          <source>The detected character encoding or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the encoding cannot be detected from the given string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586de7ca62165377f338f779b8917caf5b68bcee" translate="yes" xml:space="preserve">
          <source>The difference between this function and &lt;a href=&quot;function.ftp-fget&quot;&gt;ftp_fget()&lt;/a&gt; is that this function retrieves the file asynchronously, so your program can perform other operations while the file is being downloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ee89d98998d2b7b8055624844de11ae420e63e" translate="yes" xml:space="preserve">
          <source>The difference between this function and &lt;a href=&quot;function.ftp-get&quot;&gt;ftp_get()&lt;/a&gt; is that this function retrieves the file asynchronously, so your program can perform other operations while the file is being downloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ed49c2a67ce2e62401da1dd39e00ea3927cfd7" translate="yes" xml:space="preserve">
          <source>The difference between this function and the &lt;a href=&quot;function.ftp-fput&quot;&gt;ftp_fput()&lt;/a&gt; is that this function uploads the file asynchronously, so your program can perform other operations while the file is being uploaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6a605637676fc014db0f8f8c95405aac02b4c5" translate="yes" xml:space="preserve">
          <source>The difference between this function and the &lt;a href=&quot;function.ftp-put&quot;&gt;ftp_put()&lt;/a&gt; is that this function uploads the file asynchronously, so your program can perform other operations while the file is being uploaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42f4623dfbf1a20a3bc893e8362f395ed24572f" translate="yes" xml:space="preserve">
          <source>The differences described here are with respect to Perl 5.005.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002e6b989ba993d2fbc418ae794c8d55cd7c1186" translate="yes" xml:space="preserve">
          <source>The different forms are defined in terms of a set of transformations on the text, transformations that are expressed by both an algorithm and a set of data files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc588b8c76f5c29ecf3a9cb95e52446bc3fec68" translate="yes" xml:space="preserve">
          <source>The digest algorithm. See openssl_get_md_method().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198fc8df410729c27c819a7509df770595afbec3" translate="yes" xml:space="preserve">
          <source>The digest method or hash algorithm to use, e.g. &quot;sha256&quot;, one of &lt;a href=&quot;function.openssl-get-md-methods&quot;&gt;openssl_get_md_methods()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5c3a156a14e967440a5b772a8e92362a83d77b" translate="yes" xml:space="preserve">
          <source>The digest method to use, e.g. &quot;sha256&quot;, see &lt;a href=&quot;function.openssl-get-md-methods&quot;&gt;openssl_get_md_methods()&lt;/a&gt; for a list of available digest methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47bc93eac6a566e1c635a54b3acb1535e70209ba" translate="yes" xml:space="preserve">
          <source>The direction of iteration can no longer be changed for SplStacks. Trying to do so will result in a &lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; being thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed2290fd5e27ec3cded4ac2aa44a9b8073ea71a" translate="yes" xml:space="preserve">
          <source>The direction of iteration can not be changed for SplQueues, it is always &lt;strong&gt;&lt;code&gt;SplDoublyLinkedList::IT_MODE_FIFO&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389d91a786f258e1e50d3a90bd50a9da231fee74" translate="yes" xml:space="preserve">
          <source>The direction of the iteration (either one or the other):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607dab4b138327a34414e19ac6cbda0786e1d565" translate="yes" xml:space="preserve">
          <source>The direction, defaults to &lt;a href=&quot;class.transliterator#transliterator.constants.forward&quot;&gt;&amp;gt;Transliterator::FORWARD&lt;/a&gt;. May also be set to &lt;a href=&quot;class.transliterator#transliterator.constants.reverse&quot;&gt;Transliterator::REVERSE&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029455e755941ff7296598908556033438f1ba34" translate="yes" xml:space="preserve">
          <source>The directory URL which should be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f2f486aaa89127bcbf620465c1d9a84cbbc74e" translate="yes" xml:space="preserve">
          <source>The directory handle &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; previously opened with &lt;a href=&quot;function.opendir&quot;&gt;opendir()&lt;/a&gt;. If the directory handle is not specified, the last link opened by &lt;a href=&quot;function.opendir&quot;&gt;opendir()&lt;/a&gt; is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdee9733f1ea158b0e7279d85498a9906144a57" translate="yes" xml:space="preserve">
          <source>The directory of the file. If used inside an include, the directory of the included file is returned. This is equivalent to &lt;em&gt;dirname(__FILE__)&lt;/em&gt;. This directory name does not have a trailing slash unless it is the root directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cc942105448b229a9400395ce4789cbd573df9" translate="yes" xml:space="preserve">
          <source>The directory path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53fe209c90c614cee45959ba0ba758e8683d7962" translate="yes" xml:space="preserve">
          <source>The directory path that is to be opened</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cef22ca163202da490a7af6854a88a6e4027ec7" translate="yes" xml:space="preserve">
          <source>The directory path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad6b2d76d6f69a5860f28487f0ca3e05bc1b69f" translate="yes" xml:space="preserve">
          <source>The directory path. May include arguments for the &lt;strong&gt;LIST&lt;/strong&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f14aaee3b2580133bf7b5bf515ffe821373655" translate="yes" xml:space="preserve">
          <source>The directory that was opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712af777a1e4ea1e3cbab2eed91de2cc4184a4d4" translate="yes" xml:space="preserve">
          <source>The directory that will be scanned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75f689504387d9f3c41be3abb608c2f2a25a837" translate="yes" xml:space="preserve">
          <source>The directory that will be scanned. Defaults to the current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5a1d10dbdcf40c2ab79beb2ce22ce07eacbf80" translate="yes" xml:space="preserve">
          <source>The directory to add.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62fd1a718f1fbce8168cd889b89ab23cf28e0f7" translate="yes" xml:space="preserve">
          <source>The directory to be listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029eaf6230b9acaa733285e4599a10ab4f9c7d81" translate="yes" xml:space="preserve">
          <source>The directory to be listed. This parameter can also include arguments, eg. ftp_nlist($conn_id, &quot;-la /your/dir&quot;); Note that this parameter isn't escaped so there may be some issues with filenames containing spaces and other characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b777c6f1378eafb8c9aa6adc349895ab3f54b43" translate="yes" xml:space="preserve">
          <source>The directory to delete. This must be either an absolute or relative path to an empty directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cb39c1d90abd62713edc9954af4233c26664fa" translate="yes" xml:space="preserve">
          <source>The directory where the data is stored or the name of the .dat file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96e1627b6241b428e1788d61f75748c47747bf0" translate="yes" xml:space="preserve">
          <source>The directory where the extension is loaded from depends on your platform:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67eed8ef17b7b1ba0296958568978fb9281d4352" translate="yes" xml:space="preserve">
          <source>The directory where the temporary filename will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c78f1a2732da3bbf1a7366d093ecd88b4a75131" translate="yes" xml:space="preserve">
          <source>The dispatch process has three distinct events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58c98519eefcca0dc4a760477332dc888c98d2f" translate="yes" xml:space="preserve">
          <source>The distinguished name of an LDAP entity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b646394e9ecd56b040e6ca0570aee940109a25" translate="yes" xml:space="preserve">
          <source>The dividend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a08b1ea18a01aa54957b4cee77936b3a8d43d7" translate="yes" xml:space="preserve">
          <source>The dividend, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2131f649eec7a26a2f0caf5cbd7af8c38d7fe4c" translate="yes" xml:space="preserve">
          <source>The division operator (&quot;/&quot;) returns a float value unless the two operands are integers (or strings that get converted to integers) and the numbers are evenly divisible, in which case an integer value will be returned. For integer division, see &lt;a href=&quot;function.intdiv&quot;&gt;intdiv()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317530c78ce236dc1c9a571f4159347c16fa4f49" translate="yes" xml:space="preserve">
          <source>The divisor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54559bbe5750b79444c5abb5427cb07691e11ec" translate="yes" xml:space="preserve">
          <source>The divisor of the result of the convolution, used for normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7743c9e5a865c0ae1d4e2db7d5a14b12db75e854" translate="yes" xml:space="preserve">
          <source>The divisor, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4034b4191e1bc81ef00efb644f57db0b91e3b526" translate="yes" xml:space="preserve">
          <source>The doc comment if it exists, otherwise &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f3f31ada797287f00e9e0989e37efd7f4c0aed" translate="yes" xml:space="preserve">
          <source>The doc comment of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1463165ce41935f10728ded4ec6de34c7175042" translate="yes" xml:space="preserve">
          <source>The document encoding or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e23a26805faf5448274920bc3fa58569c0d621" translate="yes" xml:space="preserve">
          <source>The document root directory under which the current script is executing, as defined in the server's configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ca06da9ab79f47cb1e9a302729f819453d3931" translate="yes" xml:space="preserve">
          <source>The document to transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c6ba394044671f97d13062fdf6ce601d269f6d" translate="yes" xml:space="preserve">
          <source>The documentation below also applies to &lt;a href=&quot;function.require&quot;&gt;require&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2197f16176abd69b6eb2b36a243e6c51ba2cd7dc" translate="yes" xml:space="preserve">
          <source>The domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f45028fe6188312f48f7d70323c6e527d6d4c6" translate="yes" xml:space="preserve">
          <source>The domain name encoded in ASCII-compatible form, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e3981c1bfc30176a55c2727c80027224ac444c" translate="yes" xml:space="preserve">
          <source>The domain name in Unicode, encoded in UTF-8, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2327df2574dda8478571ad6b9a1b18d258b933" translate="yes" xml:space="preserve">
          <source>The domain to convert, which must be UTF-8 encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704c8d7f634f370e43c178ca7f4aa083ca4244a6" translate="yes" xml:space="preserve">
          <source>The drawing operations to render on the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbbe4b7121a8ec5087d6ba53a5d27606ede38985" translate="yes" xml:space="preserve">
          <source>The drawn Gmagick object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5682c7db2bf901171e15039f7105bcf09291957" translate="yes" xml:space="preserve">
          <source>The duration for which an image should be displayed expressed in ticks per second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75e808bdf1a4c792871e22a8bbdf850e203ea48" translate="yes" xml:space="preserve">
          <source>The easter date as a unix timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8ef8e01f42ab641199272c751a840ecf802563" translate="yes" xml:space="preserve">
          <source>The element contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9711d977ad8d0d26d993ef33dd3ee552703e224c" translate="yes" xml:space="preserve">
          <source>The element name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53316a31a6c7f6eea2c443985fd57ad258088435" translate="yes" xml:space="preserve">
          <source>The element name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094d8eab3f0b0164241ffa7abfd50b9fbb014557" translate="yes" xml:space="preserve">
          <source>The element which contains the attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de24736ba40b9eba08a116d7f81158e0e4f3f447" translate="yes" xml:space="preserve">
          <source>The ellipse height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892cee88d85fa99a725d784a5fb2448ad8686d6b" translate="yes" xml:space="preserve">
          <source>The ellipse width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b888bcf2d79ecac515118bb9b4ec4721da3dbd" translate="yes" xml:space="preserve">
          <source>The email address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca64c5b53a557364dd04ce5e3998e775bf8e2e52" translate="yes" xml:space="preserve">
          <source>The email address that's being hashed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94eab094b5b39e626cc8a01ba8710a2c101c4c7d" translate="yes" xml:space="preserve">
          <source>The email host part</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43cd049d2dc78484f21186474499565f54cef01" translate="yes" xml:space="preserve">
          <source>The embedded event loop specified in the &lt;a href=&quot;class.evembed&quot;&gt;EvEmbed&lt;/a&gt; watcher needs attention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63c5b93ab4cf4d2c32e4285da38851c2696d856" translate="yes" xml:space="preserve">
          <source>The embossed Gmagick object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200ab68b2f0caa9eefb3b74e41ec2e4ea71cf5a5" translate="yes" xml:space="preserve">
          <source>The encoded &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6a45fd9e9d69eb980a3b0af4ec214e48c4c054" translate="yes" xml:space="preserve">
          <source>The encoded data to be stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d43a4f6483e7e4816df03ca3ff2af52c8230a4" translate="yes" xml:space="preserve">
          <source>The encoded data, as a string or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057c0ebcfef268898e318fca4b115e0b01271e8a" translate="yes" xml:space="preserve">
          <source>The encoded data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c81ec7774761d7b94eb829c241b4ecf586afd0" translate="yes" xml:space="preserve">
          <source>The encoded header, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92ed790c8f008a6b60289f17d364ee3b677961e" translate="yes" xml:space="preserve">
          <source>The encoded headers, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a59f00728df33920732dd0f5e30f9fd047578d" translate="yes" xml:space="preserve">
          <source>The encoded session data. This data is the result of the PHP internally encoding the &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.session&quot;&gt;$_SESSION&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; superglobal to a serialized string and passing it as this parameter. Please note sessions use an alternative serialization method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5703185d2ad36f25632a45659c94fd5c2f45aa47" translate="yes" xml:space="preserve">
          <source>The encoded string, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8b18b43f83b3cc8c1084dc574c3fec2bd3018d" translate="yes" xml:space="preserve">
          <source>The encoded text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cdeefbefafc77be82df0448f495645f9b42ca6" translate="yes" xml:space="preserve">
          <source>The encoding ID, one of the &lt;em&gt;XSD_...&lt;/em&gt; constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed90e077dc1aa15763c1aa3d173cce8706bef191" translate="yes" xml:space="preserve">
          <source>The encoding being checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6f89255b6a04b3b477ae8816ec43a9d0a8f51a" translate="yes" xml:space="preserve">
          <source>The encoding declare value is ignored in PHP 5.3 unless php is compiled with &lt;em&gt;--enable-zend-multibyte&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08f16230e2efa5bacc468bcd98905621cc6016b" translate="yes" xml:space="preserve">
          <source>The encoding is affected by the supplied &lt;code&gt;options&lt;/code&gt; and additionally the encoding of float values depends on the value of &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.serialize-precision&quot;&gt;serialize_precision&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d6a12c4a0c42640944d0cb22db9c3301dc88da" translate="yes" xml:space="preserve">
          <source>The encoding mode. Can be &lt;strong&gt;&lt;code&gt;FORCE_GZIP&lt;/code&gt;&lt;/strong&gt; (the default) or &lt;strong&gt;&lt;code&gt;FORCE_DEFLATE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888131e2a0eb1ac5a02f74de246b5c13e8c0aa80" translate="yes" xml:space="preserve">
          <source>The encoding of the document as part of the XML declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c8812eedf5ab7ce092a9d3e6030b165d5667419" translate="yes" xml:space="preserve">
          <source>The encoding that the &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; is being converted to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4324b14fb57ec91df49cbd2f2f133f4d7d4a4864" translate="yes" xml:space="preserve">
          <source>The encoding type being checked, for aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d468ac3f0256f3481ddbf8328503f0eeba92ed9" translate="yes" xml:space="preserve">
          <source>The encrypted message to be decrypted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909fad22eb91175f1e30443d2ec7152c4eef2b8b" translate="yes" xml:space="preserve">
          <source>The encryption descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49894fdeb88ab4897c56ad315011b46861cd0d4f" translate="yes" xml:space="preserve">
          <source>The encryption handle should always be initialized with &lt;a href=&quot;function.mcrypt-generic-init&quot;&gt;mcrypt_generic_init()&lt;/a&gt; with a key and an IV before calling this function. Where the encryption is done, you should free the encryption buffers by calling &lt;a href=&quot;function.mcrypt-generic-deinit&quot;&gt;mcrypt_generic_deinit()&lt;/a&gt;. See &lt;a href=&quot;function.mcrypt-module-open&quot;&gt;mcrypt_module_open()&lt;/a&gt; for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0101200c31263d176a6de88a3e42bf101284c4" translate="yes" xml:space="preserve">
          <source>The encryption method defined by one of the ZipArchive::EM_ constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b0dc0d267c2281510a1710cc9363fdf4c7feef" translate="yes" xml:space="preserve">
          <source>The end date of the period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfca97a2c9f5e47093c18dad1a4fb4513a621454" translate="yes" xml:space="preserve">
          <source>The end index (in UTF-16 code units) until which the string will be transformed, exclusive. Indexing starts at 0. The text after will be left as is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae8e1ac3dfa87eed0166399cb8b0fa379130900" translate="yes" xml:space="preserve">
          <source>The end of a line is a single carriage return, followed by a single linefeed. (This is also known as &lt;em&gt;&quot;\r\n&quot;&lt;/em&gt; . The ASCII values are &lt;strong&gt;&lt;code&gt;0x0D&lt;/code&gt;&lt;/strong&gt;&lt;strong&gt;&lt;code&gt;0x0A&lt;/code&gt;&lt;/strong&gt; ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463695e17c6d72dc2b394d2badb41d599dde6b1f" translate="yes" xml:space="preserve">
          <source>The end of a line is a single linefeed character. (This is also known as &lt;em&gt;&quot;\n&quot;&lt;/em&gt; . It is ASCII value is &lt;strong&gt;&lt;code&gt;0x0A&lt;/code&gt;&lt;/strong&gt; .)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3fe636bc532263b7ec01668dbf7f2b5e9db7e3" translate="yes" xml:space="preserve">
          <source>The end of line is any sequence of any number of carriage return and linefeed characters. This format is not very useful; it exists mainly for backward compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd160d9ef90e1f38b082cb0e0a3119527de34d6" translate="yes" xml:space="preserve">
          <source>The end of the astronomical dusk (zenith angle = 108&amp;deg;). It starts at &lt;em&gt;nautical_twilight_end&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6460e7f28ab153027fdc063ac7bab7134880af82" translate="yes" xml:space="preserve">
          <source>The end of the civil dusk (zenith angle = 96&amp;deg;). It starts at &lt;em&gt;sunset&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655b8e72c36c91eea3b877337458a223d7e644f7" translate="yes" xml:space="preserve">
          <source>The end of the line is an optional carriage return, followed by a linefeed. (In other words, it is either a &lt;em&gt;&quot;\r\n&quot;&lt;/em&gt; or a &lt;em&gt;&quot;\n&quot;&lt;/em&gt; .) This format is useful in parsing text-based Internet protocols, since the standards generally prescribe a &lt;em&gt;&quot;\r\n&quot;&lt;/em&gt; line-terminator, but nonconformant clients sometimes say just &lt;em&gt;&quot;\n&quot;&lt;/em&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c18b5e2de408a0fd874770bc3729063b5b0153" translate="yes" xml:space="preserve">
          <source>The end of the nautical dusk (zenith angle = 102&amp;deg;). It starts at &lt;em&gt;civil_twilight_end&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a46808b3ccf066706bdc6ec2b5e40be5c49e33" translate="yes" xml:space="preserve">
          <source>The ending line number of the user defined class, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc6160e45349335db69ec33843f7871c1f0dfb9" translate="yes" xml:space="preserve">
          <source>The ending line number of the user defined function, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b3d34ef427fe22e2dedf699dec5b56d1689c22" translate="yes" xml:space="preserve">
          <source>The enhanced Gmagick object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4badde33ea81e143a7217f19fbed8bd5d61cf0c9" translate="yes" xml:space="preserve">
          <source>The entire string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5924252ead501d7222436a8265dd7afb2ce665a5" translate="yes" xml:space="preserve">
          <source>The entries &quot;mail_charset&quot;, &quot;mail_header_encoding&quot;, and &quot;mail_body_encoding&quot; were made available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbcaf8ebe03336e3de77ce49806bf40c25ef8953" translate="yes" xml:space="preserve">
          <source>The entries to extract. It accepts either a single entry name or an array of names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee784189dda2d62a8321a943bab5a69c61ea404" translate="yes" xml:space="preserve">
          <source>The entry &quot;http_output_conv_mimetypes&quot; was made available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4457658f232214a22da0c413510848fc07513c60" translate="yes" xml:space="preserve">
          <source>The entry specified by &lt;code&gt;dn&lt;/code&gt; is renamed/moved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba460bc699e7bdd02aacf3e158af4d79662a5db5" translate="yes" xml:space="preserve">
          <source>The entry to get.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6352a7036b70dec33387bc903c4725374fa2a2" translate="yes" xml:space="preserve">
          <source>The environment variable that's being set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5291dd677c6f3351987df9c194f7bb21ed4dd0f0" translate="yes" xml:space="preserve">
          <source>The equality of 2 indices is checked by the user supplied callback function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfaf6c000e393554a22d06afc6c903f2c41442d4" translate="yes" xml:space="preserve">
          <source>The equalized Gmagick object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f26cdf928d42b642b2577ac4db050e23e12a1d3" translate="yes" xml:space="preserve">
          <source>The equivalent of &lt;code&gt;number&lt;/code&gt; in degrees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead15d16d1fc5b2d9bf0edc73cfd3647b18a1225" translate="yes" xml:space="preserve">
          <source>The error callback. Should match the following prototype:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5d419bcb7da634fd0bf25f990053a80acf9868" translate="yes" xml:space="preserve">
          <source>The error code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4249e63401af764c638bd90f6f6356477d6a75b1" translate="yes" xml:space="preserve">
          <source>The error code can be retrieved with &lt;a href=&quot;function.socket-last-error&quot;&gt;socket_last_error()&lt;/a&gt;. This code may be passed to &lt;a href=&quot;function.socket-strerror&quot;&gt;socket_strerror()&lt;/a&gt; to get a textual explanation of the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ede90b60525da68c9a6900f7a5db1dd0013a3e7" translate="yes" xml:space="preserve">
          <source>The error code of the &lt;a href=&quot;class.soapfault&quot;&gt;SoapFault&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a277a2b58bff28c3a04e1a21bd39255a7c464c03" translate="yes" xml:space="preserve">
          <source>The error code on success, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if none exists, or on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f5a7d668ca21aab4fdf1d72f2d44d734f3ef4d" translate="yes" xml:space="preserve">
          <source>The error code to return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d88fa3b45bd63056a0544452c23b42161c4cfc0" translate="yes" xml:space="preserve">
          <source>The error code, one of UErrorCode values. Initial value is U_ZERO_ERROR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140dbe22d5460219ceb93bdba6b9eac6084d4dcb" translate="yes" xml:space="preserve">
          <source>The error code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="336585dc3ed4e72e307137dd2590b9fb0c56ba14" translate="yes" xml:space="preserve">
          <source>The error handler must return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; to populate &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.phperrormsg&quot;&gt;$php_errormsg&lt;/a&gt;&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1c6503fa58a014e64e7ee7a3a77c3d5d8d0c4a" translate="yes" xml:space="preserve">
          <source>The error message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d92526f1a471197a365b682e230880e26cf083" translate="yes" xml:space="preserve">
          <source>The error message as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f0515a12bb409194beeabdf002a30141a20250" translate="yes" xml:space="preserve">
          <source>The error message associated with last error that occurred in a function call on this object, or a string indicating the non-existance of an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b012e71e6449d4be4459755d9cde9f460c40872" translate="yes" xml:space="preserve">
          <source>The error message of the &lt;a href=&quot;class.soapfault&quot;&gt;SoapFault&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d12fab08399acc405f40c7c7071149da1d70e6" translate="yes" xml:space="preserve">
          <source>The error message on success, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if none exists, or on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f731a53b03fc1cfed2e1198d89ae80c44ed4e9b" translate="yes" xml:space="preserve">
          <source>The error message that should be logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2697796c10327b959bcc71f029ea8ce270be7967" translate="yes" xml:space="preserve">
          <source>The error message, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0628012c2d77c4a62f2562528b964f8e826cdc" translate="yes" xml:space="preserve">
          <source>The error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac179c7a25f054b9a84b196608bf4de9e907b671" translate="yes" xml:space="preserve">
          <source>The error number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9f28e4be33754483c0e9519325f2da0913f886" translate="yes" xml:space="preserve">
          <source>The error's code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee8ce31fbf6ad89f753749e304d49060dcf092b" translate="yes" xml:space="preserve">
          <source>The escape character (one character only). Defaults as a backslash (&lt;em&gt;\&lt;/em&gt;) or the value set using &lt;a href=&quot;splfileobject.setcsvcontrol&quot;&gt;SplFileObject::setCsvControl()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297fe7d05418e3b7a9d35cb66e00bf37036fd079" translate="yes" xml:space="preserve">
          <source>The escape sequences \v and \f were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff1eecce90d3a8f9b4b36a0884ec0cc9b310587" translate="yes" xml:space="preserve">
          <source>The escaped string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b473ef823939c963fc58379f1e178d7c3d36d50d" translate="yes" xml:space="preserve">
          <source>The estimated number of entries to retrieve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be39e0f79182def2f214ce032c14b0c78b1e9beb" translate="yes" xml:space="preserve">
          <source>The evaluated resource handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ee9b8537175d92cd1c86b9335fc6b9dc501a82" translate="yes" xml:space="preserve">
          <source>The evaluation operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c92e254d1e249fe4cfc64b42327192a4225da7" translate="yes" xml:space="preserve">
          <source>The event base to associate the event with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf439b4ff91b5c744cc09182ed58c1bb304bbb51" translate="yes" xml:space="preserve">
          <source>The event base to associate with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220a6e1b3d46a9cabfc355256d449efca8e19f61" translate="yes" xml:space="preserve">
          <source>The event callback. See &lt;a href=&quot;https://secure.php.net/manual/en/event.callbacks.php&quot;&gt;Event callbacks&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5a07e9e7870dabb698dfc0bc38ef6c1ac5454f" translate="yes" xml:space="preserve">
          <source>The event name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99ae388251a28ad520ef39af415dfbbc1ae55b4" translate="yes" xml:space="preserve">
          <source>The event priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ee60ac6f29b59a8caee8360a64a909049e312e" translate="yes" xml:space="preserve">
          <source>The event(s) that occur on each tick are specified using the &lt;a href=&quot;function.register-tick-function&quot;&gt;register_tick_function()&lt;/a&gt;. See the example below for more details. Note that more than one event can occur for each tick.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a368e4a61af164de940ae36fc3ee6d8c38807286" translate="yes" xml:space="preserve">
          <source>The exact format of this file is described in T1libs documentation. T1lib comes with two ready-to-use files, &lt;var&gt;IsoLatin1.enc&lt;/var&gt; and &lt;var&gt;IsoLatin2.enc&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414ee92a2f2999187c68db4f676dfb16dc88c933" translate="yes" xml:space="preserve">
          <source>The exact list of available encodings depends on your PostgreSQL version, so check your PostgreSQL manual for a more specific list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b23a11dc77ef35db24c69391a2b4f243731b077" translate="yes" xml:space="preserve">
          <source>The examined certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45109c47966d68e47d3f2e1926058b2e40ad71e1" translate="yes" xml:space="preserve">
          <source>The examined string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baca4d584a1910b5137a1a64f21bba632cf429fb" translate="yes" xml:space="preserve">
          <source>The example above shows how to check if the data before the encryption is the same as the data after the decryption. It is very important to reinitialize the encryption buffer with &lt;a href=&quot;function.mcrypt-generic-init&quot;&gt;mcrypt_generic_init()&lt;/a&gt; before you try to decrypt the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ef636784fad8d0acc84d52b3ea9a86286c00f3" translate="yes" xml:space="preserve">
          <source>The example above shows how to retrieve the value of the Apache environment variable &lt;var&gt;&lt;var&gt;SERVER_ADDR&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb0df1da1d807fc73677b329e09f0caf31240af" translate="yes" xml:space="preserve">
          <source>The example above shows how to use this function when linked against libmcrypt 2.4.x or 2.5.x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50c690130bc2005391464f55cd0298c96a0b5ee" translate="yes" xml:space="preserve">
          <source>The example above will produce a list with all supported algorithms in the default mode directory. If it is not set with the &lt;em&gt;mcrypt.modes_dir&lt;/em&gt;&lt;var&gt;php.ini&lt;/var&gt; directive, the default directory of mcrypt is used (which is &lt;var&gt;/usr/local/lib/libmcrypt&lt;/var&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3458d73a33f099bfbb7846bf55a6f798ea9691ae" translate="yes" xml:space="preserve">
          <source>The example below implements a filter named &lt;em&gt;strtoupper&lt;/em&gt; on the &lt;var&gt;foo-bar.txt&lt;/var&gt; stream which will capitalize all letter characters written to/read from that stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47601bafa134669072086bcc72c883b1abd0cc99" translate="yes" xml:space="preserve">
          <source>The example below retrieves the organizational unit, surname, given name and email address for all people in &quot;My Company&quot; where the surname or given name contains the substring &lt;var&gt;&lt;var&gt;$person&lt;/var&gt;&lt;/var&gt;. This example uses a boolean filter to tell the server to look for information in more than one attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f87ca79075c0519420ef580d9993118c49708e" translate="yes" xml:space="preserve">
          <source>The example below show the retrieval of all the result paginated with 100 entries by page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4dbfc31d9912ba9acc2da452e7ebb998859152" translate="yes" xml:space="preserve">
          <source>The example below show the retrieval of the first page of a search paginated with one entry by page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c041c08652f750842ecd661841dd8560447cbd" translate="yes" xml:space="preserve">
          <source>The example below shows how to act as a time server which can respond to time queries as shown in an example on &lt;a href=&quot;function.stream-socket-client&quot;&gt;stream_socket_client()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7be2296e55b3f2ad3705f11d692c77a1b089f66" translate="yes" xml:space="preserve">
          <source>The example below shows how to retrieve the day and time from the UDP service &quot;daytime&quot; (port 13) in your own machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8357988543827f88209dd34db1ff51b9f9120a" translate="yes" xml:space="preserve">
          <source>The example below shows the handling of internal exceptions by triggering errors and handling them with a user defined function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf32582e77a5f5621c1eb95851ff4682cc607758" translate="yes" xml:space="preserve">
          <source>The example creates a 100x100 black image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2677a44c4ea72b8a3e8f432d06bf1a48b73495e0" translate="yes" xml:space="preserve">
          <source>The examples below use the &lt;strong&gt;&lt;code&gt;PHP_VERSION&lt;/code&gt;&lt;/strong&gt; constant, because it contains the value of the PHP version that is executing the code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea57458746caa0185bd2af4402473d14219bdaa0" translate="yes" xml:space="preserve">
          <source>The exception code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6660a8041b688ea5cfeef9a273762cb8a11f7ec3" translate="yes" xml:space="preserve">
          <source>The exception message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe1d4df903469cbd6ee45b1abf5c5dc3610a6bd" translate="yes" xml:space="preserve">
          <source>The executed statement resource for which the number of affected rows is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1354fcbdcd272587aff60f93e3702c85ae3cf97" translate="yes" xml:space="preserve">
          <source>The exit code returned by the process (which is only meaningful if &lt;em&gt;running&lt;/em&gt; is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;). Only first call of this function return real value, next calls return &lt;em&gt;-1&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8071908bd6638bb219c490942965a8f93ee0fc" translate="yes" xml:space="preserve">
          <source>The expected encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d790884b8a88df3fc82177b6fd91afedaf95e6f" translate="yes" xml:space="preserve">
          <source>The expected magic database format changed in PHP 5.3.11 and 5.4.1. Due to this, the internal magic database was upgraded. This mostly effects code where an external magic database is used: reading an older magic file will now fail. Also, some textual representations of the mime types has changed, for instance for PHP would be &quot;PHP script, ASCII text&quot; instead of &quot;PHP script text&quot; returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531a67f45b301b072df724298cc643108be44c80" translate="yes" xml:space="preserve">
          <source>The expected output from the above example (assuming the script is not run with root privileges):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be5c62b2964522c44c7891ff550cdf326851794" translate="yes" xml:space="preserve">
          <source>The expected size, in bytes, of the file when uploading a file to a remote site. Note that using this option will not stop libcurl from sending more data, as exactly what is sent depends on &lt;strong&gt;&lt;code&gt;CURLOPT_READFUNCTION&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac2394aca3635c3e456c4a9a7511705a7828e3b" translate="yes" xml:space="preserve">
          <source>The expiration time, defaults to 0. See &lt;a href=&quot;https://secure.php.net/manual/en/memcached.expiration.php&quot;&gt;Expiration Times&lt;/a&gt; for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec5632ac6ca355d4f73f3367674d4e7de17930a" translate="yes" xml:space="preserve">
          <source>The expiry time to set on the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c356ce2927681b1ea9d1cb285c7c63e1132020" translate="yes" xml:space="preserve">
          <source>The exponent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233c7d2dfd49e71b4dc7ab33f730eeb796aad3a1" translate="yes" xml:space="preserve">
          <source>The exponent, as a string. If the exponent is non-integral, it is truncated. The valid range of the exponent is platform specific, but is at least &lt;em&gt;-2147483648&lt;/em&gt; to &lt;em&gt;2147483647&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff50de5fed59955dbf4bccd69c4cb189a499bbf4" translate="yes" xml:space="preserve">
          <source>The exponent, as an non-negative, integral string (i.e. the scale has to be zero).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec33d7a29029999d4ebff883b17ae64e0c805506" translate="yes" xml:space="preserve">
          <source>The exponential symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14f12e07ceadec6ab6831ff471442a702590141" translate="yes" xml:space="preserve">
          <source>The exported reflection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a89876d7da4fe37a08da2d336176413a24d74f" translate="yes" xml:space="preserve">
          <source>The expression &lt;em&gt;(expr1) ? (expr2) : (expr3)&lt;/em&gt; evaluates to expr2 if expr1 evaluates to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, and expr3 if expr1 evaluates to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a705994b4206aa03e87e8bee16a68f4b5753bd" translate="yes" xml:space="preserve">
          <source>The expression &lt;em&gt;(expr1) ?? (expr2)&lt;/em&gt; evaluates to expr2 if expr1 is &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, and expr1 otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a190e672721654d7f67516490743070d509b02" translate="yes" xml:space="preserve">
          <source>The expression to be printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de85b5fe963cd6df082bbca97947135b4b773b0" translate="yes" xml:space="preserve">
          <source>The expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21891836e9cc1c76489b46b6a8018415f158e7d5" translate="yes" xml:space="preserve">
          <source>The extended operation request OID. You may use one of &lt;strong&gt;&lt;code&gt;LDAP_EXOP_START_TLS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;LDAP_EXOP_MODIFY_PASSWD&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;LDAP_EXOP_REFRESH&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;LDAP_EXOP_WHO_AM_I&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;LDAP_EXOP_TURN&lt;/code&gt;&lt;/strong&gt;, or a string with the OID of the operation you want to send.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85575f529620efa191b58e073cce30dcac432bc5" translate="yes" xml:space="preserve">
          <source>The extended operation request data. May be NULL for some operations like &lt;strong&gt;&lt;code&gt;LDAP_EXOP_WHO_AM_I&lt;/code&gt;&lt;/strong&gt;, may also need to be BER encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94d704b99a65e2ff89704544631fe49ee76bc6e" translate="yes" xml:space="preserve">
          <source>The extension information, as a &lt;a href=&quot;class.reflectionextension&quot;&gt;ReflectionExtension&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8858650ac2b66e4d178933cbc3e5d89c9f83f94a" translate="yes" xml:space="preserve">
          <source>The extension name. This parameter is case-insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bb0c133d193258aa3657539641aac0cc5af56e" translate="yes" xml:space="preserve">
          <source>The extensions name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d2795526922be7490bfef249cfbd9682f373cf" translate="yes" xml:space="preserve">
          <source>The external attributes. Value depends on operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d59e25e3a1b5e127b2502e8178a5ba03044d872" translate="yes" xml:space="preserve">
          <source>The external subset public identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911444a2296c87c4cccc12154a893efb6376a9ae" translate="yes" xml:space="preserve">
          <source>The external subset system identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78245d71ab9ed4b6d65bb03b3bae0b2f65757bd" translate="yes" xml:space="preserve">
          <source>The extra headers. It's used when the &lt;code&gt;message_type&lt;/code&gt; parameter is set to &lt;em&gt;1&lt;/em&gt;. This message type uses the same internal function as &lt;a href=&quot;function.mail&quot;&gt;mail()&lt;/a&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ffebdac7aa0338d3d63486b118054785e11f9b" translate="yes" xml:space="preserve">
          <source>The facet query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6befe7d6f58bfd7117f88c9d39350f3f852b8c4d" translate="yes" xml:space="preserve">
          <source>The fact that plain parentheses fulfill two functions is not always helpful. There are often times when a grouping subpattern is required without a capturing requirement. If an opening parenthesis is followed by &quot;?:&quot;, the subpattern does not do any capturing, and is not counted when computing the number of any subsequent capturing subpatterns. For example, if the string &quot;the white queen&quot; is matched against the pattern &lt;em&gt;the ((?:red|white) (king|queen))&lt;/em&gt; the captured substrings are &quot;white queen&quot; and &quot;queen&quot;, and are numbered 1 and 2. The maximum number of captured substrings is 65535. It may not be possible to compile such large patterns, however, depending on the configuration options of libpcre.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a890dcf03e1637fd163766f29f4be4880c9792cd" translate="yes" xml:space="preserve">
          <source>The factor by which the regex fragmenter can stray from the ideal fragment size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdb40e8f26159e093ddabe6b4da14b4f658550a" translate="yes" xml:space="preserve">
          <source>The factor by which the regex fragmenter can stray from the ideal fragment size ( specfied by SolrQuery::setHighlightFragsize )to accommodate the regular expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a169322ee697f38892ac92d05899247506a28288" translate="yes" xml:space="preserve">
          <source>The factorial number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e8bc61350c35ebb4ef2cf4a97161dc7570f818" translate="yes" xml:space="preserve">
          <source>The factorial of &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a027af7b8c6e5785f8e5992be0f8123d919d94" translate="yes" xml:space="preserve">
          <source>The feature to test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f9cff3437e4a8982eddc79d96c7bd2ddc8083b" translate="yes" xml:space="preserve">
          <source>The feature to test. See the example of &lt;a href=&quot;domimplementation.hasfeature&quot;&gt;DOMImplementation::hasFeature()&lt;/a&gt; for a list of features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38dfce8957458f99beba2af12b85f22fdb1a62f7" translate="yes" xml:space="preserve">
          <source>The fetch mode must be one of the &lt;em&gt;PDO::FETCH_*&lt;/em&gt; constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640d1624841b72eb28faacc5f764c8f51990a283" translate="yes" xml:space="preserve">
          <source>The field delimiter (one character only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d4deb2c77d709f0d0495c79e8558eeccfcae02" translate="yes" xml:space="preserve">
          <source>The field delimiter (one character only). Defaults as a comma or the value set using &lt;a href=&quot;splfileobject.setcsvcontrol&quot;&gt;SplFileObject::setCsvControl()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac07e0689650e341677b92fff184332edf6c561" translate="yes" xml:space="preserve">
          <source>The field enclosure character (one character only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04748ec8d6acaf0c029865d1c00a4f656527cb49" translate="yes" xml:space="preserve">
          <source>The field enclosure character (one character only). Defaults as a double quotation mark or the value set using &lt;a href=&quot;splfileobject.setcsvcontrol&quot;&gt;SplFileObject::setCsvControl()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35df025615ebbd5c6529097cfdd2677bd9be8a0" translate="yes" xml:space="preserve">
          <source>The field escape character (one character only).</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
