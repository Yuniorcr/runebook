<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="5301648dcf6b53cefc9ed52999aaa92d4603cae0" translate="yes" xml:space="preserve">
          <source>Edit</source>
          <target state="translated">Edit</target>
        </trans-unit>
        <trans-unit id="26e19fa6a6a51a98d665a3d92cdd6e86ab35a512" translate="yes" xml:space="preserve">
          <source>Edit the replacement for this question in the minibuffer.</source>
          <target state="translated">Отредактируйте замену для этого вопроса в минибуфере.</target>
        </trans-unit>
        <trans-unit id="acd754eaa0be450083a7a0239c06b5b27192bf9c" translate="yes" xml:space="preserve">
          <source>Editing Types</source>
          <target state="translated">Типы редактирования</target>
        </trans-unit>
        <trans-unit id="7599687cce12a98db349160bf1999a82904d7cae" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;nil&lt;/code&gt;, which means the click occurred on buffer text, or a cons cell of the form (&lt;var&gt;string&lt;/var&gt; . &lt;var&gt;string-pos&lt;/var&gt;) if there is a string from a text property or an overlay at the click position.</source>
          <target state="translated">Либо &lt;code&gt;nil&lt;/code&gt; , что означает щелчок по тексту буфера, либо cons-ячейка формы ( &lt;var&gt;string&lt;/var&gt; . &lt;var&gt;string-pos&lt;/var&gt; ), если есть строка из свойства текста или наложение в позиции щелчка.</target>
        </trans-unit>
        <trans-unit id="d7baec04849ab97493d5ac11cfad3d5209b1d2ba" translate="yes" xml:space="preserve">
          <source>Either a list of the form &lt;code&gt;(&lt;var&gt;key-file&lt;/var&gt; &lt;var&gt;cert-file&lt;/var&gt;)&lt;/code&gt;, naming the certificate key file and certificate file itself, or &lt;code&gt;t&lt;/code&gt;, meaning to query &lt;code&gt;auth-source&lt;/code&gt; for this information (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/auth/Help-for-users.html#Help-for-users&quot;&gt;auth-source&lt;/a&gt; in</source>
          <target state="translated">Либо список формы &lt;code&gt;(&lt;var&gt;key-file&lt;/var&gt; &lt;var&gt;cert-file&lt;/var&gt;)&lt;/code&gt; сертификата ключевого файла ) , содержащий имя файла ключа сертификата и сам файл сертификата, либо &lt;code&gt;t&lt;/code&gt; , что означает запрос &lt;code&gt;auth-source&lt;/code&gt; для получения этой информации (см. &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/auth/Help-for-users.html#Help-for-users&quot;&gt;Auth-source&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="865508465ca5b2bcd7d2f81973321df89ed12307" translate="yes" xml:space="preserve">
          <source>Elements 1, 2, and 6 are ignored in a state which you pass as an argument to &lt;code&gt;parse-partial-sexp&lt;/code&gt; to continue parsing. Elements 9 and 10 are mainly used internally by the parser code.</source>
          <target state="translated">Элементы 1, 2 и 6 игнорируются в состоянии, которое вы передаете в качестве аргумента &lt;code&gt;parse-partial-sexp&lt;/code&gt; для продолжения синтаксического анализа. Элементы 9 и 10 в основном используются внутри кода парсера.</target>
        </trans-unit>
        <trans-unit id="78699cbfd109ddf450b59043223813a8b7eeccec" translate="yes" xml:space="preserve">
          <source>Elements read from this list are normally recorded by the record-keeping features (see &lt;a href=&quot;recording-input#Recording-Input&quot;&gt;Recording Input&lt;/a&gt;) and while defining a keyboard macro (see &lt;a href=&quot;keyboard-macros#Keyboard-Macros&quot;&gt;Keyboard Macros&lt;/a&gt;). However, an element of the form &lt;code&gt;(no-record&amp;nbsp;.&amp;nbsp;&lt;var&gt;event&lt;/var&gt;)&lt;/code&gt; causes &lt;var&gt;event&lt;/var&gt; to be processed normally without recording it.</source>
          <target state="translated">Элементы, считываемые из этого списка, обычно записываются функциями &lt;a href=&quot;recording-input#Recording-Input&quot;&gt;записи&lt;/a&gt; (см. Запись ввода ) и при определении макроса клавиатуры (см. &lt;a href=&quot;keyboard-macros#Keyboard-Macros&quot;&gt;Макросы клавиатуры&lt;/a&gt; ). Однако элемент формы &lt;code&gt;(no-record&amp;nbsp;.&amp;nbsp;&lt;var&gt;event&lt;/var&gt;)&lt;/code&gt; вызывает нормальную обработку &lt;var&gt;event&lt;/var&gt; без его записи.</target>
        </trans-unit>
        <trans-unit id="545b0cb131beb226cbb616788142dc984df9548a" translate="yes" xml:space="preserve">
          <source>Eliminating an asynchronous subprocess.</source>
          <target state="translated">Уничтожение асинхронного подпроцесса.</target>
        </trans-unit>
        <trans-unit id="b99aea41be1dd6682aef77fdd05c13425b490b64" translate="yes" xml:space="preserve">
          <source>Eliminating symbolic links from a file name.</source>
          <target state="translated">Удаление символических ссылок из имени файла.</target>
        </trans-unit>
        <trans-unit id="e75efa6670a36f5ce5a2c336a74d40c2b84e641a" translate="yes" xml:space="preserve">
          <source>Elisp</source>
          <target state="translated">Elisp</target>
        </trans-unit>
        <trans-unit id="11961af86ac0a289f5a8c470c62e5aff16dc0f5c" translate="yes" xml:space="preserve">
          <source>Emacs Display</source>
          <target state="translated">Emacs Display</target>
        </trans-unit>
        <trans-unit id="1d24b3a1a3bb63bf22f3f35dd8bdc416f585ca87" translate="yes" xml:space="preserve">
          <source>Emacs Dynamic Modules</source>
          <target state="translated">Динамические модули Emacs</target>
        </trans-unit>
        <trans-unit id="9ef54a3413b4b5d1c94937992e5a38fa19928278" translate="yes" xml:space="preserve">
          <source>Emacs EasyPG Assistant Manual</source>
          <target state="translated">Руководство Emacs EasyPG Assistant</target>
        </trans-unit>
        <trans-unit id="7d69c84368b765ad9cf1f68ed28726d76d0a1f4f" translate="yes" xml:space="preserve">
          <source>Emacs Lisp</source>
          <target state="translated">Эмакс Лисп</target>
        </trans-unit>
        <trans-unit id="f364876c0176165f21f9725c4e1f6ba2004826f7" translate="yes" xml:space="preserve">
          <source>Emacs Lisp has a &lt;em&gt;compiler&lt;/em&gt; that translates functions written in Lisp into a special representation called &lt;em&gt;byte-code&lt;/em&gt; that can be executed more efficiently. The compiler replaces Lisp function definitions with byte-code. When a byte-code function is called, its definition is evaluated by the &lt;em&gt;byte-code interpreter&lt;/em&gt;.</source>
          <target state="translated">В Emacs Lisp есть &lt;em&gt;компилятор,&lt;/em&gt; который переводит функции, написанные на Lisp, в специальное представление, называемое &lt;em&gt;байтовым кодом,&lt;/em&gt; которое может выполняться более эффективно. Компилятор заменяет определения функций Lisp байт-кодом. Когда вызывается функция байт-кода, ее определение оценивается &lt;em&gt;интерпретатором байт-кода&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="15dbc9ab10d150d57c606c833f2449026acec815" translate="yes" xml:space="preserve">
          <source>Emacs Lisp has several interfaces for loading. For example, &lt;code&gt;autoload&lt;/code&gt; creates a placeholder object for a function defined in a file; trying to call the autoloading function loads the file to get the function&amp;rsquo;s real definition (see &lt;a href=&quot;autoload#Autoload&quot;&gt;Autoload&lt;/a&gt;). &lt;code&gt;require&lt;/code&gt; loads a file if it isn&amp;rsquo;t already loaded (see &lt;a href=&quot;named-features#Named-Features&quot;&gt;Named Features&lt;/a&gt;). Ultimately, all these facilities call the &lt;code&gt;load&lt;/code&gt; function to do the work.</source>
          <target state="translated">Emacs Lisp имеет несколько интерфейсов для загрузки. Например, &lt;code&gt;autoload&lt;/code&gt; создает объект-заполнитель для функции, определенной в файле; попытка вызвать функцию автозагрузки загружает файл, чтобы получить реальное определение функции (см. &lt;a href=&quot;autoload#Autoload&quot;&gt;Автозагрузка&lt;/a&gt; ). &lt;code&gt;require&lt;/code&gt; загружает файл, если он еще не загружен (см. &lt;a href=&quot;named-features#Named-Features&quot;&gt;Именованные функции&lt;/a&gt; ). В конечном итоге все эти средства вызывают функцию &lt;code&gt;load&lt;/code&gt; для выполнения работы.</target>
        </trans-unit>
        <trans-unit id="53311aa3b6248b8318ac6ffa867ca69521b615e7" translate="yes" xml:space="preserve">
          <source>Emacs Lisp is not at all influenced by Scheme; but the GNU project has an implementation of Scheme, called Guile. We use it in all new GNU software that calls for extensibility.</source>
          <target state="translated">Emacs Lisp совсем не подвержен влиянию Scheme;но в проекте GNU есть реализация Scheme,называемая Guile.Мы применяем ее во всех новых программах GNU,которые требуют расширяемости.</target>
        </trans-unit>
        <trans-unit id="5eb9e6bbd184c8e8d87bab48605f13c2f0e69a4c" translate="yes" xml:space="preserve">
          <source>Emacs Lisp mutexes are of a type called &lt;em&gt;recursive&lt;/em&gt;, which means that a thread can re-acquire a mutex it owns any number of times. A mutex keeps a count of how many times it has been acquired, and each acquisition of a mutex must be paired with a release. The last release by a thread of a mutex reverts it to the unowned state, potentially allowing another thread to acquire the mutex.</source>
          <target state="translated">Мьютексы Emacs Lisp относятся к типу &lt;em&gt;рекурсивных&lt;/em&gt; , что означает, что поток может повторно получить принадлежащий ему мьютекс любое количество раз. Мьютекс ведет счет того, сколько раз он был получен, и каждое получение мьютекса должно быть связано с выпуском. Последнее освобождение потоком мьютекса возвращает его в состояние unowned, потенциально позволяя другому потоку получить мьютекс.</target>
        </trans-unit>
        <trans-unit id="5dacb820cefb1440695d68c57f34587912fb0410" translate="yes" xml:space="preserve">
          <source>Emacs Lisp programs can open stream (TCP) and datagram (UDP) network connections (see &lt;a href=&quot;datagrams#Datagrams&quot;&gt;Datagrams&lt;/a&gt;) to other processes on the same machine or other machines. A network connection is handled by Lisp much like a subprocess, and is represented by a process object. However, the process you are communicating with is not a child of the Emacs process, has no process</source>
          <target state="translated">Программы Emacs Lisp могут открывать сетевые соединения потоков (TCP) и дейтаграмм (UDP) (см. &lt;a href=&quot;datagrams#Datagrams&quot;&gt;Датаграммы&lt;/a&gt; ) с другими процессами на той же или других машинах. Сетевое соединение обрабатывается Lisp во многом как подпроцесс и представлено объектом процесса. Однако процесс, с которым вы общаетесь, не является дочерним по отношению к процессу Emacs и не имеет процесса.</target>
        </trans-unit>
        <trans-unit id="7228b1f4138d429db1308081a4746c06528fb743" translate="yes" xml:space="preserve">
          <source>Emacs Lisp provides a general-purpose hash table data type, along with a series of functions for operating on them. Hash tables have a special printed representation, which consists of &amp;lsquo;</source>
          <target state="translated">Emacs Lisp предоставляет тип данных хэш-таблицы общего назначения, а также ряд функций для работы с ними. Хеш-таблицы имеют специальное печатное представление, которое состоит из '</target>
        </trans-unit>
        <trans-unit id="ffe36d47af16b167f8af8d65f4621660e0a3fa30" translate="yes" xml:space="preserve">
          <source>Emacs Lisp provides a limited form of concurrency, called &lt;em&gt;threads&lt;/em&gt;. All the threads in a given instance of Emacs share the same memory. Concurrency in Emacs Lisp is &amp;ldquo;mostly cooperative&amp;rdquo;, meaning that Emacs will only switch execution between threads at well-defined times. However, the Emacs thread support has been designed in a way to later allow more fine-grained concurrency, and correct programs should not rely on cooperative threading.</source>
          <target state="translated">Emacs Lisp предоставляет ограниченную форму параллелизма, называемую &lt;em&gt;потоками&lt;/em&gt; . Все потоки в данном экземпляре Emacs используют одну и ту же память. Параллелизм в Emacs Lisp &amp;laquo;в основном кооперативен&amp;raquo;, что означает, что Emacs будет переключать выполнение между потоками только в строго определенное время. Однако поддержка потоков Emacs была разработана таким образом, чтобы позже обеспечить более детальный параллелизм, и правильные программы не должны полагаться на совместное выполнение потоков.</target>
        </trans-unit>
        <trans-unit id="3523135daa3b21509914424f92d7c0654029826d" translate="yes" xml:space="preserve">
          <source>Emacs Lisp provides a rich set of the data types. Some of them, like cons cells, integers and strings, are common to nearly all Lisp dialects. Some others, like markers and buffers, are quite special and needed to provide the basic support to write editor commands in Lisp. To implement such a variety of object types and provide an efficient way to pass objects between the subsystems of an interpreter, there is a set of C data structures and a special type to represent the pointers to all of them, which is known as &lt;em&gt;tagged pointer&lt;/em&gt;.</source>
          <target state="translated">Emacs Lisp предоставляет богатый набор типов данных. Некоторые из них, например cons-ячейки, целые числа и строки, являются общими почти для всех диалектов Лиспа. Некоторые другие, такие как маркеры и буферы, совершенно особенные и необходимы для обеспечения базовой поддержки для написания команд редактора в Лиспе. Чтобы реализовать такое разнообразие типов объектов и обеспечить эффективный способ передачи объектов между подсистемами интерпретатора, существует набор структур данных C и специальный тип для представления указателей на все из них, который известен как &lt;em&gt;тегированный указатель.&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a0792e8235851678da162077315383848bc5c350" translate="yes" xml:space="preserve">
          <source>Emacs Lisp provides primitives to create and control threads, and also to create and control mutexes and condition variables, useful for thread synchronization.</source>
          <target state="translated">Emacs Lisp предоставляет примитивы для создания и управления потоками,а также для создания и управления мьютексами и переменными состояния,полезные для синхронизации потоков.</target>
        </trans-unit>
        <trans-unit id="07838ca0f24b0415a3b2a5ec64b19ae909fd062f" translate="yes" xml:space="preserve">
          <source>Emacs Lisp provides several kinds of control structure, including other varieties of sequencing, conditionals, iteration, and (controlled) jumps&amp;mdash;all discussed below. The built-in control structures are special forms since their subforms are not necessarily evaluated or not evaluated sequentially. You can use macros to define your own control structure constructs (see &lt;a href=&quot;macros#Macros&quot;&gt;Macros&lt;/a&gt;).</source>
          <target state="translated">Emacs Lisp предоставляет несколько видов управляющих структур, включая другие разновидности упорядочивания, условных выражений, итераций и (контролируемых) переходов - все это обсуждается ниже. Встроенные управляющие структуры представляют собой особые формы, поскольку их подчиненные формы не обязательно оцениваются или не оцениваются последовательно. Вы можете использовать макросы для определения ваших собственных структур управления (см. &lt;a href=&quot;macros#Macros&quot;&gt;Макросы&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5eced44d6f227b201299c5badcb9e4e4043498ff" translate="yes" xml:space="preserve">
          <source>Emacs Lisp provides the traditional four arithmetic operations (addition, subtraction, multiplication, and division), as well as remainder and modulus functions, and functions to add or subtract 1. Except for &lt;code&gt;%&lt;/code&gt;, each of these functions accepts both integer and floating-point arguments, and returns a floating-point number if any argument is floating point.</source>
          <target state="translated">Emacs Lisp предоставляет четыре традиционных арифметических операции (сложение, вычитание, умножение и деление), а также функции остатка и модуля, а также функции для сложения или вычитания 1. За исключением &lt;code&gt;%&lt;/code&gt; , каждая из этих функций принимает как целые числа, так и числа с плавающей запятой. arguments и возвращает число с плавающей запятой, если какой-либо аргумент является с плавающей запятой.</target>
        </trans-unit>
        <trans-unit id="c75c0672f1103474c697e0414e0d81f059ae0283" translate="yes" xml:space="preserve">
          <source>Emacs Lisp represents many special objects and constructs via special hash notations.</source>
          <target state="translated">Emacs Lisp представляет множество специальных объектов и конструкций через специальные хэш-нотации.</target>
        </trans-unit>
        <trans-unit id="c4181f7e2dd76cd593dd2b4c56244fb6dc36cf72" translate="yes" xml:space="preserve">
          <source>Emacs Lisp supports nonlocal exits, whereby program control is transfered from one point in a program to another remote point. See &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;. Thus, Lisp functions called by your module might exit nonlocally by calling &lt;code&gt;signal&lt;/code&gt; or &lt;code&gt;throw&lt;/code&gt;, and your module functions must handle such nonlocal exits properly. Such handling is needed because C programs will not automatically release resources and perform other cleanups in these cases; your module code must itself do it. The module</source>
          <target state="translated">Emacs Lisp поддерживает нелокальные выходы, посредством которых управление программой передается от одной точки программы к другой удаленной точке. См. &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Нелокальные выходы&lt;/a&gt; . Таким образом, функции Lisp, вызываемые вашим модулем, могут завершаться нелокально, вызывая &lt;code&gt;signal&lt;/code&gt; или &lt;code&gt;throw&lt;/code&gt; , а функции вашего модуля должны правильно обрабатывать такие нелокальные выходы. Такая обработка необходима, потому что программы C не будут автоматически освобождать ресурсы и выполнять другие операции очистки в этих случаях; код вашего модуля должен это делать сам. Модуль</target>
        </trans-unit>
        <trans-unit id="8984f14f223609c734113eaabdefa7eec293526d" translate="yes" xml:space="preserve">
          <source>Emacs Lisp treats &lt;code&gt;-0.0&lt;/code&gt; as numerically equal to ordinary zero with respect to numeric comparisons like &lt;code&gt;=&lt;/code&gt;. This follows the</source>
          <target state="translated">Emacs Lisp рассматривает &lt;code&gt;-0.0&lt;/code&gt; как числовое значение, равное обычному нулю, относительно числовых сравнений, таких как &lt;code&gt;=&lt;/code&gt; . Это следует за</target>
        </trans-unit>
        <trans-unit id="b22e8745733f1044e0e8e778b087514ab35866de" translate="yes" xml:space="preserve">
          <source>Emacs Lisp uses two kinds of storage for user-created Lisp objects: &lt;em&gt;normal storage&lt;/em&gt; and &lt;em&gt;pure storage&lt;/em&gt;. Normal storage is where all the new data created during an Emacs session are kept (see &lt;a href=&quot;garbage-collection#Garbage-Collection&quot;&gt;Garbage Collection&lt;/a&gt;). Pure storage is used for certain data in the preloaded standard Lisp files&amp;mdash;data that should never change during actual use of Emacs.</source>
          <target state="translated">Emacs Lisp использует два типа хранилища для созданных пользователем объектов Lisp: &lt;em&gt;обычное хранилище&lt;/em&gt; и &lt;em&gt;чистое хранилище&lt;/em&gt; . Обычное хранилище - это место, где хранятся все новые данные, созданные во время сеанса Emacs (см. &lt;a href=&quot;garbage-collection#Garbage-Collection&quot;&gt;Сборка мусора&lt;/a&gt; ). Чистое хранилище используется для определенных данных в предварительно загруженных стандартных файлах Lisp - данных, которые никогда не должны изменяться во время фактического использования Emacs.</target>
        </trans-unit>
        <trans-unit id="9930d40258feb9fa1a5853262c7e1ecbe82780b6" translate="yes" xml:space="preserve">
          <source>Emacs also attempts to load a second init file, called the &lt;em&gt;early init file&lt;/em&gt;, if it exists. This is a file named</source>
          <target state="translated">Emacs также пытается загрузить второй файл инициализации, называемый &lt;em&gt;ранним файлом инициализации&lt;/em&gt; , если он существует. Это файл с именем</target>
        </trans-unit>
        <trans-unit id="f438beb0b54269588c167da980a7fc150f86a60f" translate="yes" xml:space="preserve">
          <source>Emacs also defines &lt;em&gt;raw syntax descriptors&lt;/em&gt;, which are used to describe syntax classes at a lower level. See &lt;a href=&quot;syntax-table-internals#Syntax-Table-Internals&quot;&gt;Syntax Table Internals&lt;/a&gt;.</source>
          <target state="translated">Emacs также определяет &lt;em&gt;дескрипторы необработанного синтаксиса&lt;/em&gt; , которые используются для описания классов синтаксиса на более низком уровне. См. &lt;a href=&quot;syntax-table-internals#Syntax-Table-Internals&quot;&gt;Внутреннее устройство таблицы синтаксиса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b081e88746f63937ab843405b000899eb6e7ac41" translate="yes" xml:space="preserve">
          <source>Emacs also provides explicit intervals as a presentation feature; see &lt;a href=&quot;overlays#Overlays&quot;&gt;Overlays&lt;/a&gt;.</source>
          <target state="translated">Emacs также предоставляет явные интервалы в качестве возможности представления; см. &lt;a href=&quot;overlays#Overlays&quot;&gt;Оверлеи&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6037f3bcf19731d59e4737efeb909a4477fe1f5" translate="yes" xml:space="preserve">
          <source>Emacs also runs the hook &lt;code&gt;window-selection-change-functions&lt;/code&gt; whenever the redisplay routine detects that another window has been selected since last redisplay. See &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Hooks&lt;/a&gt;, for a detailed explanation. &lt;code&gt;window-state-change-functions&lt;/code&gt; (described in the same section) is another abnormal hook run after a different window has been selected but is triggered by other window changes as well.</source>
          <target state="translated">Emacs также запускает &lt;code&gt;window-selection-change-functions&lt;/code&gt; всякий раз, когда процедура повторного отображения обнаруживает, что с момента последнего повторного отображения было выбрано другое окно. См. Подробное объяснение в &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Hooks&lt;/a&gt; . &lt;code&gt;window-state-change-functions&lt;/code&gt; (описанные в том же разделе) - это еще один ненормальный запуск ловушки после того, как было выбрано другое окно, но также запускаемый другими изменениями окна.</target>
        </trans-unit>
        <trans-unit id="4fa081728575b5af47f34cfa1d0d81f4cfadd8e1" translate="yes" xml:space="preserve">
          <source>Emacs applications have the same sort of race-condition issues that other applications do. For example, even when &lt;code&gt;(file-readable-p &quot;foo.txt&quot;)&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt;, it could be that</source>
          <target state="translated">Приложения Emacs имеют те же проблемы, что и другие приложения. Например, даже когда &lt;code&gt;(file-readable-p &quot;foo.txt&quot;)&lt;/code&gt; возвращает &lt;code&gt;t&lt;/code&gt; , это может быть</target>
        </trans-unit>
        <trans-unit id="7834c231794da13a4ac8440585e75335487d24af" translate="yes" xml:space="preserve">
          <source>Emacs attempts to infer the coding systems of the files and network connections it accesses. See &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;. If Emacs infers incorrectly, or if the other parties to the network connection disagree with Emacs&amp;rsquo;s inferences, the resulting system could be unreliable. Also, even when it infers correctly, Emacs often can use bytes that other programs cannot. For example, although to Emacs the null byte is just a character like any other, many other applications treat it as a string terminator and mishandle strings or files containing null bytes.</source>
          <target state="translated">Emacs пытается определить системы кодирования файлов и сетевых подключений, к которым он обращается. См. &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Системы кодирования&lt;/a&gt; . Если Emacs делает неверный вывод или если другие участники сетевого подключения не согласны с выводами Emacs, результирующая система может быть ненадежной. Кроме того, даже если он делает правильный вывод, Emacs часто может использовать байты, которые другие программы не могут. Например, хотя для Emacs нулевой байт является просто символом, как и любой другой, многие другие приложения обрабатывают его как терминатор строки и неправильно обрабатывают строки или файлы, содержащие нулевые байты.</target>
        </trans-unit>
        <trans-unit id="c00bcea23c0da23f92989ded99bb44ac6e6e81dc" translate="yes" xml:space="preserve">
          <source>Emacs auth-source Library</source>
          <target state="translated">Библиотека автоисточников Emacs</target>
        </trans-unit>
        <trans-unit id="9f846cfde8ec0bbf0a7662f71e026a3be4a6b612" translate="yes" xml:space="preserve">
          <source>Emacs automatically saves and restores the match data when it runs process filter functions (see &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;) and process sentinels (see &lt;a href=&quot;sentinels#Sentinels&quot;&gt;Sentinels&lt;/a&gt;).</source>
          <target state="translated">Emacs автоматически сохраняет и восстанавливает данные совпадений, когда запускает функции фильтрации процессов (см. &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Функции фильтров&lt;/a&gt; ) и сигнальные устройства процесса (см. &lt;a href=&quot;sentinels#Sentinels&quot;&gt;Стражи&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="67baa3b59c5cfd5117efdc499dc974b7501e0ed6" translate="yes" xml:space="preserve">
          <source>Emacs becomes &lt;em&gt;idle&lt;/em&gt; when it starts waiting for user input, and it remains idle until the user provides some input. If a timer is set for five seconds of idleness, it runs approximately five seconds after Emacs first becomes idle. Even if &lt;var&gt;repeat&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this timer will not run again as long as Emacs remains idle, because the duration of idleness will continue to increase and will not go down to five seconds again.</source>
          <target state="translated">Emacs переходит в &lt;em&gt;режим ожидания,&lt;/em&gt; когда начинает ожидать ввода данных пользователем, и остается в режиме ожидания, пока пользователь не введет какой-либо ввод. Если таймер установлен на пять секунд бездействия, он запускается примерно через пять секунд после того, как Emacs впервые перейдет в режим ожидания. Даже если &lt;var&gt;repeat&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , этот таймер не будет работать снова, пока Emacs остается в режиме ожидания, потому что продолжительность бездействия будет продолжать увеличиваться и больше не снизится до пяти секунд.</target>
        </trans-unit>
        <trans-unit id="b099356ce36c80ba26fa8fbfb26af1e5b452e4c1" translate="yes" xml:space="preserve">
          <source>Emacs binds &lt;code&gt;inhibit-quit&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; before calling the timer function, because quitting out of many timer functions can leave things in an inconsistent state. This is normally unproblematical because most timer functions don&amp;rsquo;t do a lot of work. Indeed, for a timer to call a function that takes substantial time to run is likely to be annoying. If a timer function needs to allow quitting, it should use &lt;code&gt;with-local-quit&lt;/code&gt; (see &lt;a href=&quot;quitting#Quitting&quot;&gt;Quitting&lt;/a&gt;). For example, if a timer function calls &lt;code&gt;accept-process-output&lt;/code&gt; to receive output from an external process, that call should be wrapped inside &lt;code&gt;with-local-quit&lt;/code&gt;, to ensure that</source>
          <target state="translated">Emacs связывает &lt;code&gt;inhibit-quit&lt;/code&gt; с &lt;code&gt;t&lt;/code&gt; перед вызовом функции таймера, потому что выход из многих функций таймера может оставить вещи в несогласованном состоянии. Обычно это не вызывает проблем, потому что большинство функций таймера мало работают. Действительно, вызов таймером функции, выполнение которой требует значительного времени, может раздражать. Если функция таймера должна разрешить выход, она должна использовать &lt;code&gt;with-local-quit&lt;/code&gt; (см. &lt;a href=&quot;quitting#Quitting&quot;&gt;Выход&lt;/a&gt; ). Например, если функция таймера вызывает &lt;code&gt;accept-process-output&lt;/code&gt; для получения вывода от внешнего процесса, этот вызов должен быть заключен внутри &lt;code&gt;with-local-quit&lt;/code&gt; , чтобы гарантировать, что</target>
        </trans-unit>
        <trans-unit id="8f454504a503845ea061d18fe9395a3a052cad4b" translate="yes" xml:space="preserve">
          <source>Emacs buffers and strings support a large repertoire of characters from many different scripts, allowing users to type and display text in almost any known written language.</source>
          <target state="translated">Буферы и строки Emacs поддерживают большой репертуар символов из множества различных скриптов,позволяя пользователям набирать и отображать текст практически на любом известном письменном языке.</target>
        </trans-unit>
        <trans-unit id="cba03acb1e83d7835328c3a29d040dd5bf043a93" translate="yes" xml:space="preserve">
          <source>Emacs buffers are implemented using an invisible &lt;em&gt;gap&lt;/em&gt; to make insertion and deletion faster. Insertion works by filling in part of the gap, and deletion adds to the gap. Of course, this means that the gap must first be moved to the locus of the insertion or deletion. Emacs moves the gap only when you try to insert or delete. This is why your first editing command in one part of a large buffer, after previously editing in another far-away part, sometimes involves a noticeable delay.</source>
          <target state="translated">Буферы Emacs реализованы с использованием невидимого &lt;em&gt;промежутка,&lt;/em&gt; чтобы ускорить вставку и удаление. При вставке пробел заполняется частично, а при удалении пробел увеличивается. Конечно, это означает, что сначала нужно переместить пробел в место вставки или удаления. Emacs перемещает пробел только тогда, когда вы пытаетесь вставить или удалить. Вот почему ваша первая команда редактирования в одной части большого буфера после предварительного редактирования в другой удаленной части иногда вызывает заметную задержку.</target>
        </trans-unit>
        <trans-unit id="c8540d4172ad8a5276f664cef2b5ef4bc08d72c8" translate="yes" xml:space="preserve">
          <source>Emacs caches images so that it can display them again more efficiently. When Emacs displays an image, it searches the image cache for an existing image specification &lt;code&gt;equal&lt;/code&gt; to the desired specification. If a match is found, the image is displayed from the cache. Otherwise, Emacs loads the image normally.</source>
          <target state="translated">Emacs кэширует изображения, чтобы отображать их более эффективно. Когда Emacs отображает изображение, он ищет в кэше изображений существующую спецификацию изображения, &lt;code&gt;equal&lt;/code&gt; желаемой спецификации. Если совпадение найдено, изображение отображается из кеша. В противном случае Emacs загружает изображение обычным образом.</target>
        </trans-unit>
        <trans-unit id="ac8f11976d61b957a0c5a1b9f2a8f7cf546ad3fc" translate="yes" xml:space="preserve">
          <source>Emacs calls this function when it loads a module. If a module does not export a function named &lt;code&gt;emacs_module_init&lt;/code&gt;, trying to load the module will signal an error. The initialization function should return zero if the initialization succeeds, non-zero otherwise. In the latter case, Emacs will signal an error, and the loading of the module will fail. If the user presses</source>
          <target state="translated">Emacs вызывает эту функцию, когда загружает модуль. Если модуль не экспортирует функцию с именем &lt;code&gt;emacs_module_init&lt;/code&gt; , попытка загрузить модуль будет сигнализировать об ошибке. Функция инициализации должна возвращать ноль, если инициализация прошла успешно, в противном случае - ненулевое значение. В последнем случае Emacs сообщит об ошибке, и загрузка модуля завершится неудачно. Если пользователь нажимает</target>
        </trans-unit>
        <trans-unit id="d051a4f7d40fc5ccdbaf1d90ed27d0d62480fbe8" translate="yes" xml:space="preserve">
          <source>Emacs calls this hook immediately after it finishes applying file-local variables stored in &lt;code&gt;file-local-variables-alist&lt;/code&gt;.</source>
          <target state="translated">Emacs вызывает эту ловушку сразу после того, как закончит применение локальных переменных &lt;code&gt;file-local-variables-alist&lt;/code&gt; хранящихся в file-local-variables-alist .</target>
        </trans-unit>
        <trans-unit id="56083beaeb39428f247633ac12153adf7d4a8c85" translate="yes" xml:space="preserve">
          <source>Emacs calls this hook immediately before applying file-local variables stored in &lt;code&gt;file-local-variables-alist&lt;/code&gt;.</source>
          <target state="translated">Emacs вызывает эту ловушку непосредственно перед применением локальных файловых переменных, хранящихся в &lt;code&gt;file-local-variables-alist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="994084f8ffd608b58932604d3ee3fde3154ef225" translate="yes" xml:space="preserve">
          <source>Emacs calls this low-level primitive to load a module from the specified &lt;var&gt;file&lt;/var&gt; and perform the necessary initialization of the module. This is the primitive which makes sure the module exports the &lt;code&gt;plugin_is_GPL_compatible&lt;/code&gt; symbol, calls the module&amp;rsquo;s &lt;code&gt;emacs_module_init&lt;/code&gt; function, and signals an error if that function returns an error indication, or if the use typed</source>
          <target state="translated">Emacs вызывает этот низкоуровневый примитив, чтобы загрузить модуль из указанного &lt;var&gt;file&lt;/var&gt; и выполнить необходимую инициализацию модуля. Это примитив, который гарантирует, что модуль экспортирует символ &lt;code&gt;plugin_is_GPL_compatible&lt;/code&gt; , вызывает функцию модуля &lt;code&gt;emacs_module_init&lt;/code&gt; и сигнализирует об ошибке, если эта функция возвращает индикацию ошибки или если использование введено</target>
        </trans-unit>
        <trans-unit id="2fe40b51a3b73298470a39c542e0813062a24338" translate="yes" xml:space="preserve">
          <source>Emacs can also load compiled dynamic modules: shared libraries that provide additional functionality for use in Emacs Lisp programs, just like a package written in Emacs Lisp would. When a dynamic module is loaded, Emacs calls a specially-named initialization function which the module needs to implement, and which exposes the additional functions and variables to Emacs Lisp programs.</source>
          <target state="translated">Emacs также может загружать скомпилированные динамические модули:общие библиотеки,предоставляющие дополнительную функциональность для использования в программах Emacs Lisp,точно так же,как это делал бы пакет,написанный на Emacs Lisp.Когда динамический модуль загружается,Emacs вызывает специальную функцию инициализации,которую модуль должен реализовать,и которая предоставляет дополнительные функции и переменные Emacs Lisp-программам.</target>
        </trans-unit>
        <trans-unit id="3d190adff472803f8e07de877cbb7a54e73c7af8" translate="yes" xml:space="preserve">
          <source>Emacs can be compiled with built-in libxml2 support.</source>
          <target state="translated">Emacs может быть скомпилирован со встроенной поддержкой libxml2.</target>
        </trans-unit>
        <trans-unit id="0d7e97dad016edbcfcb35167d07ce396bac6195d" translate="yes" xml:space="preserve">
          <source>Emacs can call this function at any time that it does redisplay or operates on menu data structures, so you should write it so it can safely be called at any time.</source>
          <target state="translated">Emacs может вызывать эту функцию в любое время,когда он делает повторное отображение или работает над структурами данных меню,поэтому вы должны написать это,чтобы его можно было безопасно вызывать в любое время.</target>
        </trans-unit>
        <trans-unit id="da4487959604530250a24a92c5028e4b5764b43d" translate="yes" xml:space="preserve">
          <source>Emacs can communicate with serial ports. For interactive use,</source>
          <target state="translated">Emacs может взаимодействовать с последовательными портами.Для интерактивного использования,</target>
        </trans-unit>
        <trans-unit id="40194130dc989f8e2573473aabb240f1bb557d6d" translate="yes" xml:space="preserve">
          <source>Emacs can convert between its internal representation of a character and the character&amp;rsquo;s codepoint in a specific charset. The following two functions support these conversions.</source>
          <target state="translated">Emacs может преобразовывать свое внутреннее представление символа в кодировку символа в определенной кодировке. Следующие две функции поддерживают эти преобразования.</target>
        </trans-unit>
        <trans-unit id="1317571357b6546c95aaab3bc497c2a51ff101b2" translate="yes" xml:space="preserve">
          <source>Emacs can convert unibyte text to multibyte; it can also convert multibyte text to unibyte, provided that the multibyte text contains only</source>
          <target state="translated">Emacs может конвертировать однобайтовый текст в многобайтовый;он также может конвертировать многобайтовый текст в однобайтовый при условии,что многобайтовый текст содержит только</target>
        </trans-unit>
        <trans-unit id="560e70e6f372c6b3af7521a52ce8cab0bbbfe965" translate="yes" xml:space="preserve">
          <source>Emacs can copy the original file into a backup file, and then overwrite the original file with new contents. After this procedure, any other names (i.e., hard links) of the original file continue to refer to the current (updated) version of the file. The file&amp;rsquo;s owner and group will be unchanged.</source>
          <target state="translated">Emacs может скопировать исходный файл в файл резервной копии, а затем перезаписать исходный файл новым содержимым. После этой процедуры любые другие имена (т. Е. Жесткие ссылки) исходного файла продолжают ссылаться на текущую (обновленную) версию файла. Владелец и группа файла не изменятся.</target>
        </trans-unit>
        <trans-unit id="0f833cba56a479063ae8f2626b69d0324b51cffa" translate="yes" xml:space="preserve">
          <source>Emacs can create encrypted network connections, using either built-in or external support. The built-in support uses the GnuTLS Transport Layer Security Library; see &lt;a href=&quot;https://www.gnu.org/software/gnutls/&quot;&gt;the GnuTLS project page&lt;/a&gt;. If your Emacs was compiled with GnuTLS support, the function &lt;code&gt;gnutls-available-p&lt;/code&gt; is defined and returns non-&lt;code&gt;nil&lt;/code&gt;. For more details, see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs-gnutls/index.html#Top&quot;&gt;Overview&lt;/a&gt; in</source>
          <target state="translated">Emacs может создавать зашифрованные сетевые соединения, используя встроенную или внешнюю поддержку. Встроенная поддержка использует библиотеку безопасности транспортного уровня GnuTLS; см. &lt;a href=&quot;https://www.gnu.org/software/gnutls/&quot;&gt;страницу проекта GnuTLS&lt;/a&gt; . Если ваш Emacs был скомпилирован с поддержкой GnuTLS, функция &lt;code&gt;gnutls-available-p&lt;/code&gt; определена и возвращает &lt;code&gt;nil&lt;/code&gt; . Для получения дополнительной информации см. &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs-gnutls/index.html#Top&quot;&gt;Обзор&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="6be55ca6ff3d86e43d75b0ff1dc1e469e9a9cf2b" translate="yes" xml:space="preserve">
          <source>Emacs can display a number of different image formats. Some of these image formats are supported only if particular support libraries are installed. On some platforms, Emacs can load support libraries on demand; if so, the variable &lt;code&gt;dynamic-library-alist&lt;/code&gt; can be used to modify the set of known names for these dynamic libraries. See &lt;a href=&quot;dynamic-libraries#Dynamic-Libraries&quot;&gt;Dynamic Libraries&lt;/a&gt;.</source>
          <target state="translated">Emacs может отображать множество различных форматов изображений. Некоторые из этих форматов изображений поддерживаются, только если установлены определенные библиотеки поддержки. На некоторых платформах Emacs может загружать библиотеки поддержки по запросу; в этом случае переменную &lt;code&gt;dynamic-library-alist&lt;/code&gt; можно использовать для изменения набора известных имен этих динамических библиотек. См. &lt;a href=&quot;dynamic-libraries#Dynamic-Libraries&quot;&gt;Динамические библиотеки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78c99b060b46e1017b43612a4ede9c782ecfe198" translate="yes" xml:space="preserve">
          <source>Emacs can display text written in scripts, such as Arabic, Farsi, and Hebrew, whose natural ordering for horizontal text display runs from right to left. Furthermore, segments of Latin script and digits embedded in right-to-left text are displayed left-to-right, while segments of right-to-left script embedded in left-to-right text (e.g., Arabic or Hebrew text in comments or strings in a program source file) are appropriately displayed right-to-left. We call such mixtures of left-to-right and right-to-left text &lt;em&gt;bidirectional text&lt;/em&gt;. This section describes the facilities and options for editing and displaying bidirectional text.</source>
          <target state="translated">Emacs может отображать текст, написанный сценариями, такими как арабский, фарси и иврит, чей естественный порядок для горизонтального отображения текста выполняется справа налево. Кроме того, сегменты латинского алфавита и цифры, встроенные в текст с письмом справа налево, отображаются слева направо, а сегменты сценария с письмом справа налево, встроенные в текст с письмом слева направо (например, текст на арабском или иврите в комментариях). или строки в исходном файле программы) соответственно отображаются справа налево. Мы называем такие сочетания текста с &lt;em&gt;письмом&lt;/em&gt; слева направо и справа налево &lt;em&gt;двунаправленным текстом&lt;/em&gt; . В этом разделе описываются возможности и опции для редактирования и отображения двунаправленного текста.</target>
        </trans-unit>
        <trans-unit id="d60d2c50a0da2b1a3348170ffd2cb951a2fa1252" translate="yes" xml:space="preserve">
          <source>Emacs can do various things while idle: garbage collect, autosave or handle data from a subprocess. But these interludes during idleness do not interfere with idle timers, because they do not reset the clock of idleness to zero. An idle timer set for 600 seconds will run when ten minutes have elapsed since the last user command was finished, even if subprocess output has been accepted thousands of times within those ten minutes, and even if there have been garbage collections and autosaves.</source>
          <target state="translated">Emacs может делать различные вещи во время простоя:собирать мусор,автосохранять или обрабатывать данные из подпроцесса.Но эти интерлюдии во время бездействия не мешают таймерам бездействия,так как они не сбрасывают часы бездействия на ноль.Таймер холостого хода,установленный на 600 секунд,будет работать по прошествии десяти минут с момента выполнения последней пользовательской команды,даже если выход подпроцесса был принят тысячи раз в течение этих десяти минут,и даже если были произведены сбор и автосохранение мусора.</target>
        </trans-unit>
        <trans-unit id="e9d06e075d964cd9d7cd802340a86c56af0e03e1" translate="yes" xml:space="preserve">
          <source>Emacs can indicate the buffer boundaries&amp;mdash;that is, the first and last line in the buffer&amp;mdash;with angle icons when they appear on the screen. In addition, Emacs can display an up-arrow in the fringe to show that there is text above the screen, and a down-arrow to show there is text below the screen.</source>
          <target state="translated">Emacs может указывать границы буфера, то есть первую и последнюю строки в буфере, с помощью значков угла, когда они появляются на экране. Вдобавок Emacs может отображать стрелку вверх на краю, чтобы показать, что над экраном есть текст, и стрелку вниз, чтобы показать, что текст под экраном.</target>
        </trans-unit>
        <trans-unit id="ee1ad9463e5b5996bde82c33ca18ac71261e7508" translate="yes" xml:space="preserve">
          <source>Emacs can list the names of the files in a directory as a Lisp list, or display the names in a buffer using the &lt;code&gt;ls&lt;/code&gt; shell command. In the latter case, it can optionally display information about each file, depending on the options passed to the &lt;code&gt;ls&lt;/code&gt; command.</source>
          <target state="translated">Emacs может отображать имена файлов в каталоге в виде списка Lisp или отображать имена в буфере с помощью команды оболочки &lt;code&gt;ls&lt;/code&gt; . В последнем случае он может дополнительно отображать информацию о каждом файле, в зависимости от параметров, переданных команде &lt;code&gt;ls&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f742b9d1b7ebfbe69cdd55b7429ce465962460bb" translate="yes" xml:space="preserve">
          <source>Emacs can make use of scalable fonts, but by default it does not use them.</source>
          <target state="translated">Emacs может использовать масштабируемые шрифты,но по умолчанию не использует их.</target>
        </trans-unit>
        <trans-unit id="acd5f593fd50d61539d462200b38d12727a40b86" translate="yes" xml:space="preserve">
          <source>Emacs can optionally create &lt;em&gt;lexical bindings&lt;/em&gt;. A lexical binding has &lt;em&gt;lexical scope&lt;/em&gt;, meaning that any reference to the variable must be located textually within the binding construct&lt;a href=&quot;#FOOT9&quot; name=&quot;DOCF9&quot;&gt;&lt;sup&gt;9&lt;/sup&gt;&lt;/a&gt;. It also has &lt;em&gt;indefinite extent&lt;/em&gt;, meaning that under some circumstances the binding can live on even after the binding construct has finished executing, by means of special objects called &lt;em&gt;closures&lt;/em&gt;.</source>
          <target state="translated">Emacs может дополнительно создавать &lt;em&gt;лексические привязки&lt;/em&gt; . Лексическая привязка имеет &lt;em&gt;лексическую область видимости&lt;/em&gt; , что означает, что любая ссылка на переменную должна располагаться в текстовом виде внутри конструкции привязки &lt;a href=&quot;#FOOT9&quot; name=&quot;DOCF9&quot;&gt;&lt;sup&gt;9&lt;/sup&gt;&lt;/a&gt; . Он также имеет &lt;em&gt;неопределенный размер&lt;/em&gt; , что означает, что при некоторых обстоятельствах привязка может существовать даже после завершения выполнения конструкции привязки с помощью специальных объектов, называемых &lt;em&gt;замыканиями&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="da39689f87fe15efb9007a8a526db9cb76639bf0" translate="yes" xml:space="preserve">
          <source>Emacs can rename the original file so that it becomes a backup file, and then write the buffer being saved into a new file. After this procedure, any other names (i.e., hard links) of the original file now refer to the backup file. The new file is owned by the user doing the editing, and its group is the default for new files written by the user in that directory.</source>
          <target state="translated">Emacs может переименовать исходный файл так,чтобы он стал файлом резервной копии,а затем записать сохраняемый буфер в новый файл.После этой процедуры любые другие имена (т.е.жесткие ссылки)исходного файла теперь относятся к файлу резервной копии.Новый файл принадлежит пользователю,выполняющему редактирование,и его группа по умолчанию является группой новых файлов,записываемых пользователем в этот каталог.</target>
        </trans-unit>
        <trans-unit id="92347b1446515a39aef2cc0d76e15aad335abd34" translate="yes" xml:space="preserve">
          <source>Emacs can revert buffers automatically. It does that by default for buffers visiting files. The following describes how to add support for auto-reverting new types of buffers.</source>
          <target state="translated">Emacs может автоматически возвращать буферы.По умолчанию это делается для буферов,посещающих файлы.Ниже описано,как добавить поддержку автоматического ревертирования новых типов буферов.</target>
        </trans-unit>
        <trans-unit id="71141f928dc729ca46b6a67b62e6c7f381518108" translate="yes" xml:space="preserve">
          <source>Emacs can send commands to many other applications, and applications should take care that strings sent as operands of these commands are not misinterpreted as directives. For example, when using a shell command to rename a file &lt;var&gt;a&lt;/var&gt; to &lt;var&gt;b&lt;/var&gt;, do not simply use the string &lt;code&gt;mv &lt;var&gt;a&lt;/var&gt; &lt;var&gt;b&lt;/var&gt;&lt;/code&gt;, because either file name might start with &amp;lsquo;</source>
          <target state="translated">Emacs может посылать команды многим другим приложениям, и приложения должны заботиться о том, чтобы строки, отправленные как операнды этих команд, не были неверно интерпретированы как директивы. Например, при использовании команды оболочки для переименования файла &lt;var&gt;a&lt;/var&gt; в &lt;var&gt;b&lt;/var&gt; не используйте просто строку &lt;code&gt;mv &lt;var&gt;a&lt;/var&gt; &lt;var&gt;b&lt;/var&gt;&lt;/code&gt; , потому что любое имя файла может начинаться с '</target>
        </trans-unit>
        <trans-unit id="218f4eed23a4dbb836c096575e0773d62ff23a72" translate="yes" xml:space="preserve">
          <source>Emacs can use coding systems to decode keyboard input and encode terminal output. This is useful for terminals that transmit or display text using a particular encoding, such as Latin-1. Emacs does not set &lt;code&gt;last-coding-system-used&lt;/code&gt; when encoding or decoding terminal I/O.</source>
          <target state="translated">Emacs может использовать системы кодирования для декодирования ввода с клавиатуры и кодирования вывода терминала. Это полезно для терминалов, которые передают или отображают текст с использованием определенной кодировки, например Latin-1. Emacs не устанавливает &lt;code&gt;last-coding-system-used&lt;/code&gt; кодирования при кодировании или декодировании терминального ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="1bb61c2a56d75a77f080b03fed07e83ed98821b1" translate="yes" xml:space="preserve">
          <source>Emacs cannot display the cursor when point is in the middle of a sequence of text that has the &lt;code&gt;display&lt;/code&gt; or &lt;code&gt;composition&lt;/code&gt; property, or is invisible. Therefore, after a command finishes and returns to the command loop, if point is within such a sequence, the command loop normally moves point to the edge of the sequence, making this sequence effectively intangible.</source>
          <target state="translated">Emacs cannot display the cursor when point is in the middle of a sequence of text that has the &lt;code&gt;display&lt;/code&gt; or &lt;code&gt;composition&lt;/code&gt; property, or is invisible. Therefore, after a command finishes and returns to the command loop, if point is within such a sequence, the command loop normally moves point to the edge of the sequence, making this sequence effectively intangible.</target>
        </trans-unit>
        <trans-unit id="d95b6dc098f282945ce76e8834176a488e9fb089" translate="yes" xml:space="preserve">
          <source>Emacs cannot run timers at any arbitrary point in a Lisp program; it can run them only when Emacs could accept output from a subprocess: namely, while waiting or inside certain primitive functions such as &lt;code&gt;sit-for&lt;/code&gt; or &lt;code&gt;read-event&lt;/code&gt; which &lt;em&gt;can&lt;/em&gt; wait. Therefore, a timer&amp;rsquo;s execution may be delayed if Emacs is busy. However, the time of execution is very precise if Emacs is idle.</source>
          <target state="translated">Emacs не может запускать таймеры в любой произвольной точке программы на Лиспе; он может запускать их только тогда, когда Emacs может принимать вывод из подпроцесса: а именно, во время ожидания или внутри некоторых примитивных функций, таких как &lt;code&gt;sit-for&lt;/code&gt; или &lt;code&gt;read-event&lt;/code&gt; которые &lt;em&gt;могут&lt;/em&gt; ждать. Следовательно, выполнение таймера может быть отложено, если Emacs занят. Однако время выполнения очень точное, если Emacs простаивает.</target>
        </trans-unit>
        <trans-unit id="4eff4458427c41b7747ae4a55172d7cdb18689c2" translate="yes" xml:space="preserve">
          <source>Emacs character codes are a superset of the Unicode standard. Values 0 through &lt;code&gt;#x10FFFF&lt;/code&gt; (1114111) correspond to Unicode characters of the same codepoint; values &lt;code&gt;#x110000&lt;/code&gt; (1114112) through &lt;code&gt;#x3FFF7F&lt;/code&gt; (4194175) represent characters that are not unified with Unicode; and values &lt;code&gt;#x3FFF80&lt;/code&gt; (4194176) through &lt;code&gt;#x3FFFFF&lt;/code&gt; (4194303) represent eight-bit raw bytes.</source>
          <target state="translated">Коды символов Emacs - это надмножество стандарта Unicode. Значения от 0 до &lt;code&gt;#x10FFFF&lt;/code&gt; (1114111) соответствуют символам Unicode той же кодовой точки; значения от &lt;code&gt;#x110000&lt;/code&gt; (1114112) до &lt;code&gt;#x3FFF7F&lt;/code&gt; (4194175) представляют символы, не унифицированные с Unicode; а значения от &lt;code&gt;#x3FFF80&lt;/code&gt; (4194176) до &lt;code&gt;#x3FFFFF&lt;/code&gt; ( 4194303 ) представляют собой восьмибитовые необработанные байты.</target>
        </trans-unit>
        <trans-unit id="0831640b8122043518cd95fedf37a5e6306aceac" translate="yes" xml:space="preserve">
          <source>Emacs chooses the representation for a string based on the text from which it is constructed. The general rule is to convert unibyte text to multibyte text when combining it with other multibyte text, because the multibyte representation is more general and can hold whatever characters the unibyte text has.</source>
          <target state="translated">Emacs выбирает представление для строки,основываясь на тексте,из которого она построена.Общее правило заключается в преобразовании однобайтового текста в многобайтовый при его объединении с другим многобайтовым текстом,так как многобайтовое представление является более общим и может содержать любые символы,которые есть в однобайтовом тексте.</target>
        </trans-unit>
        <trans-unit id="f5ad25f8a992cb50da24bbff67e7ee574b817186" translate="yes" xml:space="preserve">
          <source>Emacs contains many keymaps, but at any time only a few keymaps are &lt;em&gt;active&lt;/em&gt;. When Emacs receives user input, it translates the input event (see &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Translation Keymaps&lt;/a&gt;), and looks for a key binding in the active keymaps.</source>
          <target state="translated">Emacs содержит много раскладок клавиш, но в любой момент &lt;em&gt;активны&lt;/em&gt; только несколько раскладок . Когда Emacs получает ввод пользователя, он транслирует событие ввода (см. &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Таблицы ключей перевода&lt;/a&gt; ) и ищет привязку клавиш в активных таблицах клавиш.</target>
        </trans-unit>
        <trans-unit id="0b3d328f50bd5f37c94e899d7045b2092adf4eb5" translate="yes" xml:space="preserve">
          <source>Emacs cooperates with the window system by arranging to select frames as the server and window manager request. When a window system informs Emacs that one of its frames has been selected, Emacs internally generates a &lt;em&gt;focus-in&lt;/em&gt; event. When an Emacs frame is displayed on a text-terminal emulator, such as &lt;code&gt;xterm&lt;/code&gt;, which supports reporting of focus-change notification, the focus-in and focus-out events are available even for text-mode frames. Focus events are normally handled by &lt;code&gt;handle-focus-in&lt;/code&gt;.</source>
          <target state="translated">Emacs взаимодействует с оконной системой, организуя выбор фреймов в качестве запроса сервера и оконного менеджера. Когда оконная система сообщает Emacs, что один из ее фреймов был выбран, Emacs внутренне генерирует событие &lt;em&gt;фокусировки&lt;/em&gt; . Когда фрейм Emacs отображается в эмуляторе текстового терминала, таком как &lt;code&gt;xterm&lt;/code&gt; , который поддерживает сообщение об уведомлении об изменении фокуса, события фокуса входа и выхода фокуса доступны даже для фреймов текстового режима. События фокуса обычно обрабатываются с помощью &lt;code&gt;handle-focus-in&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="decb92d5658870e3309626c9af67cdd848bae26b" translate="yes" xml:space="preserve">
          <source>Emacs creates the initial frame before it reads your init file. After reading that file, Emacs checks &lt;code&gt;initial-frame-alist&lt;/code&gt;, and applies the parameter settings in the altered value to the already created initial frame.</source>
          <target state="translated">Emacs создает начальный фрейм перед чтением вашего файла инициализации. После прочтения этого файла, Emacs проверяет &lt;code&gt;initial-frame-alist&lt;/code&gt; , и применяет настройку параметров в измененном значении для уже созданного исходного кадра.</target>
        </trans-unit>
        <trans-unit id="23a93d1bd02e3ce484932a878d36df2e6d418cc6" translate="yes" xml:space="preserve">
          <source>Emacs defines four types of array, all one-dimensional: &lt;em&gt;strings&lt;/em&gt; (see &lt;a href=&quot;string-type#String-Type&quot;&gt;String Type&lt;/a&gt;), &lt;em&gt;vectors&lt;/em&gt; (see &lt;a href=&quot;vector-type#Vector-Type&quot;&gt;Vector Type&lt;/a&gt;), &lt;em&gt;bool-vectors&lt;/em&gt; (see &lt;a href=&quot;bool_002dvector-type#Bool_002dVector-Type&quot;&gt;Bool-Vector Type&lt;/a&gt;), and &lt;em&gt;char-tables&lt;/em&gt; (see &lt;a href=&quot;char_002dtable-type#Char_002dTable-Type&quot;&gt;Char-Table Type&lt;/a&gt;). Vectors and char-tables can hold elements of any type, but strings can only hold characters, and bool-vectors can only hold &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Emacs определяет четыре типа массивов, все одномерные: &lt;em&gt;строки&lt;/em&gt; (см. &lt;a href=&quot;string-type#String-Type&quot;&gt;Тип строки&lt;/a&gt; ), &lt;em&gt;векторы&lt;/em&gt; (см. &lt;a href=&quot;vector-type#Vector-Type&quot;&gt;Тип вектора&lt;/a&gt; ), &lt;em&gt;bool-векторы&lt;/em&gt; (см. &lt;a href=&quot;bool_002dvector-type#Bool_002dVector-Type&quot;&gt;Тип &lt;/a&gt;&lt;em&gt;вектора &lt;/em&gt;Bool ) и &lt;em&gt;таблицы символов&lt;/em&gt; (см. &lt;a href=&quot;char_002dtable-type#Char_002dTable-Type&quot;&gt;Тип &lt;/a&gt;&lt;em&gt;таблицы &lt;/em&gt;Char ). Векторы и таблицы символов могут содержать элементы любого типа, но строки могут содержать только символы, а векторы типа bool могут содержать только &lt;code&gt;t&lt;/code&gt; и &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fb6415278ac71d7c8b8f161cc54b4109a3c312b" translate="yes" xml:space="preserve">
          <source>Emacs defines four types of array: strings, vectors, bool-vectors, and char-tables.</source>
          <target state="translated">Emacs определяет четыре типа массивов:строки,векторы,bool-векторы и char-таблицы.</target>
        </trans-unit>
        <trans-unit id="69b92bb4de9ad4e6aed0127a5eb28f648d0f341c" translate="yes" xml:space="preserve">
          <source>Emacs defines several special character sets. The character set &lt;code&gt;unicode&lt;/code&gt; includes all the characters whose Emacs code points are in the range &lt;code&gt;0..#x10FFFF&lt;/code&gt;. The character set &lt;code&gt;emacs&lt;/code&gt; includes all</source>
          <target state="translated">Emacs определяет несколько специальных наборов символов. &lt;code&gt;unicode&lt;/code&gt; набора символов включает в себя все символы, чьи кодовые точки Emacs находятся в диапазоне &lt;code&gt;0..#x10FFFF&lt;/code&gt; . Набор символов &lt;code&gt;emacs&lt;/code&gt; включает все</target>
        </trans-unit>
        <trans-unit id="e38592f3457c7cc383975bc89f28f869224040ae" translate="yes" xml:space="preserve">
          <source>Emacs displays each slice as a separate image, and allows more intuitive scrolling up/down, instead of jumping up/down the entire image when paging through a buffer that displays (large) images.</source>
          <target state="translated">Emacs отображает каждый фрагмент как отдельное изображение и позволяет более интуитивно понятную прокрутку вверх/вниз,вместо того,чтобы перескакивать вверх/вниз по всему изображению при пейджинге через буфер,который отображает (большие)изображения.</target>
        </trans-unit>
        <trans-unit id="7dd49b156766b4330d659f8045f63c75d768b611" translate="yes" xml:space="preserve">
          <source>Emacs displays the cursor, by default as a rectangular block, in each window at the position of that window&amp;rsquo;s point. When the user switches to another buffer in a window, Emacs moves that window&amp;rsquo;s cursor to where point is in that buffer. If the exact position of point is hidden behind some display element, such as a display string or an image, Emacs displays the cursor immediately before or after that display element.</source>
          <target state="translated">Emacs отображает курсор по умолчанию в виде прямоугольного блока в каждом окне в позиции точки этого окна. Когда пользователь переключается на другой буфер в окне, Emacs перемещает курсор этого окна туда, где находится точка в этом буфере. Если точное положение точки скрыто за некоторым отображаемым элементом, таким как отображаемая строка или изображение, Emacs отображает курсор непосредственно перед или после этого отображаемого элемента.</target>
        </trans-unit>
        <trans-unit id="90854d4c059273c80e35dfc3fee7ae76a16735a5" translate="yes" xml:space="preserve">
          <source>Emacs displays the keyboard menu with the map&amp;rsquo;s overall prompt string, followed by the alternatives (the item strings of the map&amp;rsquo;s bindings), in the echo area. If the bindings don&amp;rsquo;t all fit at once, the user can type</source>
          <target state="translated">Emacs отображает меню клавиатуры с общей строкой подсказки карты, за которой следуют альтернативы (строки элементов привязок карты) в эхо-области. Если не все привязки подходят одновременно, пользователь может ввести</target>
        </trans-unit>
        <trans-unit id="8ee3e83e047b26f1bb5a4d367cc4242225a8e766" translate="yes" xml:space="preserve">
          <source>Emacs does not keep a queue of multiple reasons to call the sentinel of one process; it records just the current status and the fact that there has been a change. Therefore two changes in status, coming in quick succession, can call the sentinel just once. However, process termination will always run the sentinel exactly once. This is because the process status can&amp;rsquo;t change again after termination.</source>
          <target state="translated">Emacs не хранит очередь из нескольких причин для вызова стража одного процесса; он записывает только текущий статус и факт изменения. Следовательно, два изменения статуса, происходящие в быстрой последовательности, могут вызвать дозорного только один раз. Однако завершение процесса всегда запускает дозорный только один раз. Это связано с тем, что статус процесса не может снова измениться после завершения.</target>
        </trans-unit>
        <trans-unit id="dc4de755cdb7678344be0c9f2ef7ced9da16c291" translate="yes" xml:space="preserve">
          <source>Emacs explicitly checks for an expression as shown above in your init file; your login name must appear in the expression as a Lisp string constant. You can also use the Customize interface. Other methods of setting &lt;code&gt;inhibit-startup-echo-area-message&lt;/code&gt; to the same value do not inhibit the startup message. This way, you can easily inhibit the message for yourself if you wish, but thoughtless copying of your init file will not inhibit the message for someone else.</source>
          <target state="translated">Emacs явно проверяет выражение, как показано выше, в вашем файле инициализации; ваше имя для входа в систему должно появиться в выражении как строковая константа Lisp. Вы также можете использовать интерфейс настройки. Другие методы установки такого же значения для &lt;code&gt;inhibit-startup-echo-area-message&lt;/code&gt; не запрещают запуск сообщения. Таким образом, вы можете легко заблокировать сообщение для себя, если хотите, но бездумное копирование вашего файла инициализации не заблокирует сообщение для кого-то еще.</target>
        </trans-unit>
        <trans-unit id="42f3639833a767a937f1dcec0ae3d27fe7d4f78c" translate="yes" xml:space="preserve">
          <source>Emacs explicitly checks for output from the process before running the process sentinel. Once the sentinel runs due to process termination, no further output can arrive from the process.</source>
          <target state="translated">Emacs явно проверяет выходные данные процесса перед запуском sendinel процесса.После запуска sendinel в связи с завершением процесса никакой вывод из процесса не может быть получен.</target>
        </trans-unit>
        <trans-unit id="a4e4a4a8604d8c5f44f50b7eaee3b67be7cc2ae6" translate="yes" xml:space="preserve">
          <source>Emacs functions that add a new element to a history list can also delete old elements if the list gets too long. The variable &lt;code&gt;history-length&lt;/code&gt; specifies the maximum length for most history lists. To specify a different maximum length for a particular history list, put the length in the &lt;code&gt;history-length&lt;/code&gt; property of the history list symbol. The variable &lt;code&gt;history-delete-duplicates&lt;/code&gt; specifies whether to delete duplicates in history.</source>
          <target state="translated">Функции Emacs, которые добавляют новый элемент в список истории, также могут удалять старые элементы, если список становится слишком длинным. Переменная &lt;code&gt;history-length&lt;/code&gt; указывает максимальную длину для большинства списков истории. Чтобы указать другую максимальную длину для определенного списка истории, поместите длину в свойство &lt;code&gt;history-length&lt;/code&gt; символа списка истории. Переменная &lt;code&gt;history-delete-duplicates&lt;/code&gt; указывает, следует ли удалять дубликаты в истории.</target>
        </trans-unit>
        <trans-unit id="4716416f00dd279f5dd607a085f5d6d79ec84a0c" translate="yes" xml:space="preserve">
          <source>Emacs guarantees that the maximum required value of &lt;code&gt;*count&lt;/code&gt; never exceeds &lt;code&gt;min (PTRDIFF_MAX, SIZE_MAX) / sizeof
(emacs_limb_t)&lt;/code&gt;, so you can use &lt;code&gt;malloc (*count * sizeof *magnitude)&lt;/code&gt; to allocate the &lt;code&gt;magnitude&lt;/code&gt; array without worrying about integer overflow in the size calculation.</source>
          <target state="translated">Emacs гарантирует, что максимальное требуемое значение &lt;code&gt;*count&lt;/code&gt; никогда не превышает &lt;code&gt;min (PTRDIFF_MAX, SIZE_MAX) / sizeof (emacs_limb_t)&lt;/code&gt; , поэтому вы можете использовать &lt;code&gt;malloc (*count * sizeof *magnitude)&lt;/code&gt; для выделения массива &lt;code&gt;magnitude&lt;/code&gt; не беспокоясь о целочисленном переполнении в размере расчет.</target>
        </trans-unit>
        <trans-unit id="6b7b23ca683cca53cbcc351dc973d57c5ba2c383" translate="yes" xml:space="preserve">
          <source>Emacs has built-in support for computing &lt;em&gt;cryptographic hashes&lt;/em&gt;. A cryptographic hash, or &lt;em&gt;checksum&lt;/em&gt;, is a digital fingerprint of a piece of data (e.g., a block of text) which can be used to check that you have an unaltered copy of that data.</source>
          <target state="translated">Emacs имеет встроенную поддержку для вычисления &lt;em&gt;криптографических хэшей&lt;/em&gt; . Криптографический хэш или &lt;em&gt;контрольная сумма&lt;/em&gt; - это цифровой отпечаток фрагмента данных (например, блока текста), который можно использовать для проверки наличия неизмененной копии этих данных.</target>
        </trans-unit>
        <trans-unit id="eca0f5332e43d15251cecdd9558e33fbb26dcd5c" translate="yes" xml:space="preserve">
          <source>Emacs has built-in support for this. To begin profiling, type</source>
          <target state="translated">Emacs имеет встроенную поддержку для этого.Чтобы начать профилирование,введите</target>
        </trans-unit>
        <trans-unit id="e59efddf97737e44b038590b93e7af92d497ee8e" translate="yes" xml:space="preserve">
          <source>Emacs has customization and other variables with similar considerations. For example, if the variable &lt;code&gt;shell-file-name&lt;/code&gt; specifies a shell with nonstandard behavior, an Emacs-based application may misbehave.</source>
          <target state="translated">В Emacs есть настройки и другие переменные с аналогичными соображениями. Например, если переменная имя &lt;code&gt;shell-file-name&lt;/code&gt; оболочки указывает оболочку с нестандартным поведением, приложение на основе Emacs может вести себя неправильно.</target>
        </trans-unit>
        <trans-unit id="d0db7329b8249a3f26dde80ed9599e46ebd35d35" translate="yes" xml:space="preserve">
          <source>Emacs has several functions that deal with passwords, e.g., &lt;code&gt;read-passwd&lt;/code&gt;. See &lt;a href=&quot;reading-a-password#Reading-a-Password&quot;&gt;Reading a Password&lt;/a&gt;. Although these functions do not attempt to broadcast passwords to the world, their implementations are not proof against determined attackers with access to Emacs internals. For example, even if Elisp code uses &lt;code&gt;clear-string&lt;/code&gt; to scrub a password from its memory after using it, remnants of the password may still reside in the garbage-collected free list. See &lt;a href=&quot;modifying-strings#Modifying-Strings&quot;&gt;Modifying Strings&lt;/a&gt;.</source>
          <target state="translated">В Emacs есть несколько функций, которые работают с паролями, например, &lt;code&gt;read-passwd&lt;/code&gt; . См. Раздел &amp;laquo; &lt;a href=&quot;reading-a-password#Reading-a-Password&quot;&gt;Считывание пароля&amp;raquo;&lt;/a&gt; . Хотя эти функции не пытаются транслировать пароли в мир, их реализация не защищает от решительных злоумышленников, имеющих доступ к внутреннему устройству Emacs. Например, даже если код Elisp использует &lt;code&gt;clear-string&lt;/code&gt; для удаления пароля из своей памяти после его использования, остатки пароля могут по-прежнему находиться в списке свободных от мусора. См. Раздел &amp;laquo; &lt;a href=&quot;modifying-strings#Modifying-Strings&quot;&gt;Изменение строк&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d4202fc4d0303db75d85aad9409b4fc14f3d791" translate="yes" xml:space="preserve">
          <source>Emacs ignores all face attributes from the &lt;code&gt;mouse-face&lt;/code&gt; property that alter the text size (e.g., &lt;code&gt;:height&lt;/code&gt;, &lt;code&gt;:weight&lt;/code&gt;, and &lt;code&gt;:slant&lt;/code&gt;). Those attributes are always the same as for the unhighlighted text.</source>
          <target state="translated">Emacs игнорирует все атрибуты лица от &lt;code&gt;mouse-face&lt;/code&gt; собственности , которые изменяют размер текста (например, &lt;code&gt;:height&lt;/code&gt; , &lt;code&gt;:weight&lt;/code&gt; , и &lt;code&gt;:slant&lt;/code&gt; ). Эти атрибуты всегда такие же, как и для невыделенного текста.</target>
        </trans-unit>
        <trans-unit id="5faa39e22b5b9e6b70fa340f3f937b1c558d41df" translate="yes" xml:space="preserve">
          <source>Emacs includes a standard macro called &lt;code&gt;with-temp-buffer&lt;/code&gt; which expands into more or less the code shown above (see &lt;a href=&quot;current-buffer#Definition-of-with_002dtemp_002dbuffer&quot;&gt;Current Buffer&lt;/a&gt;). Several of the macros defined in this manual use &lt;code&gt;unwind-protect&lt;/code&gt; in this way.</source>
          <target state="translated">Emacs включает стандартный макрос под названием &lt;code&gt;with-temp-buffer&lt;/code&gt; , который расширяется до более или менее кода, показанного выше (см. &lt;a href=&quot;current-buffer#Definition-of-with_002dtemp_002dbuffer&quot;&gt;Текущий буфер&lt;/a&gt; ). Некоторые макросы, определенные в этом руководстве, используют &lt;code&gt;unwind-protect&lt;/code&gt; таким образом.</target>
        </trans-unit>
        <trans-unit id="3be04959a4a73f5846094512fe21b66b28793a3e" translate="yes" xml:space="preserve">
          <source>Emacs is able to display native widgets, such as GTK+ WebKit widgets, in Emacs buffers when it was built with the necessary support libraries and is running on a graphical terminal. To test whether Emacs supports display of embedded widgets, check that the &lt;code&gt;xwidget-internal&lt;/code&gt; feature is available (see &lt;a href=&quot;named-features#Named-Features&quot;&gt;Named Features&lt;/a&gt;).</source>
          <target state="translated">Emacs может отображать собственные виджеты, такие как виджеты GTK + WebKit, в буферах Emacs, когда он был собран с необходимыми библиотеками поддержки и запущен на графическом терминале. Чтобы проверить, поддерживает ли Emacs отображение встроенных виджетов, проверьте, &lt;code&gt;xwidget-internal&lt;/code&gt; функция xwidget (см. &lt;a href=&quot;named-features#Named-Features&quot;&gt;Именованные функции&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7fb6e43305b1bbb4090ee8b7af8d46e47a9b6d11" translate="yes" xml:space="preserve">
          <source>Emacs is able to send &lt;em&gt;notifications&lt;/em&gt; on systems that support the freedesktop.org Desktop Notifications Specification and on MS-Windows. In order to use this functionality on POSIX hosts, Emacs must have been compiled with D-Bus support, and the &lt;code&gt;notifications&lt;/code&gt; library must be loaded. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/dbus/index.html#Top&quot;&gt;D-Bus&lt;/a&gt; in</source>
          <target state="translated">Emacs может отправлять &lt;em&gt;уведомления&lt;/em&gt; в системах, которые поддерживают спецификацию уведомлений рабочего стола freedesktop.org, а также в MS-Windows. Чтобы использовать эту функциональность на хостах POSIX, Emacs должен быть скомпилирован с поддержкой D-Bus и должна быть загружена библиотека &lt;code&gt;notifications&lt;/code&gt; . См. &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/dbus/index.html#Top&quot;&gt;D-Bus&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="6c82d7724892492c38f9593a41f14fcca5af203f" translate="yes" xml:space="preserve">
          <source>Emacs is displaying the frame on a character-based terminal.</source>
          <target state="translated">Emacs отображает кадр на символьном терминале.</target>
        </trans-unit>
        <trans-unit id="b2182126d9b9ddba21c09d5684ccb269a6e78276" translate="yes" xml:space="preserve">
          <source>Emacs is displaying the frame using MS-DOS direct screen writes.</source>
          <target state="translated">Emacs отображает кадр с помощью прямой записи экрана MS-DOS.</target>
        </trans-unit>
        <trans-unit id="44765627efc8f89010449c0a9f3da8feaa76db08" translate="yes" xml:space="preserve">
          <source>Emacs is displaying the frame using X.</source>
          <target state="translated">Emacs отображает кадр с помощью X.</target>
        </trans-unit>
        <trans-unit id="a8e2a9a4a27495372ade66bfe4b5f63886de526b" translate="yes" xml:space="preserve">
          <source>Emacs is displaying the frame using native MS-Windows GUI.</source>
          <target state="translated">Emacs отображает кадр с помощью родного графического интерфейса MS-Windows.</target>
        </trans-unit>
        <trans-unit id="b071b69063db39e82ec151d3de36f4c8c4a353c8" translate="yes" xml:space="preserve">
          <source>Emacs is displaying the frame using the Nextstep interface (used on GNUstep and macOS).</source>
          <target state="translated">Emacs отображает кадр с помощью интерфейса Nextstep (используется на GNUstep и MacOS).</target>
        </trans-unit>
        <trans-unit id="5afc383039e5d768bd41d71e6c4706685d7421aa" translate="yes" xml:space="preserve">
          <source>Emacs is usually able to display images when it is run on a graphical terminal. Images cannot be displayed in a text terminal, on certain graphical terminals that lack the support for this, or if Emacs is compiled without image support. You can use the function &lt;code&gt;display-images-p&lt;/code&gt; to determine if images can in principle be displayed (see &lt;a href=&quot;display-feature-testing#Display-Feature-Testing&quot;&gt;Display Feature Testing&lt;/a&gt;).</source>
          <target state="translated">Emacs обычно может отображать изображения при запуске на графическом терминале. Изображения не могут отображаться в текстовом терминале, на некоторых графических терминалах, которые не поддерживают это, или если Emacs скомпилирован без поддержки изображений. Вы можете использовать функцию &lt;code&gt;display-images-p&lt;/code&gt; , чтобы определить, могут ли изображения в принципе отображаться (см. &lt;a href=&quot;display-feature-testing#Display-Feature-Testing&quot;&gt;Тестирование функций дисплея&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="20d5a3e06646c394cc0872c5421edf765dc41006" translate="yes" xml:space="preserve">
          <source>Emacs keeps a flag called the &lt;em&gt;modified flag&lt;/em&gt; for each buffer, to record whether you have changed the text of the buffer. This flag is set to &lt;code&gt;t&lt;/code&gt; whenever you alter the contents of the buffer, and cleared to &lt;code&gt;nil&lt;/code&gt; when you save it. Thus, the flag shows whether there are unsaved changes. The flag value is normally shown in the mode line (see &lt;a href=&quot;mode-line-variables#Mode-Line-Variables&quot;&gt;Mode Line Variables&lt;/a&gt;), and controls saving (see &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Saving Buffers&lt;/a&gt;) and auto-saving (see &lt;a href=&quot;auto_002dsaving#Auto_002dSaving&quot;&gt;Auto-Saving&lt;/a&gt;).</source>
          <target state="translated">Emacs сохраняет флаг, называемый флагом &lt;em&gt;изменения,&lt;/em&gt; для каждого буфера, чтобы фиксировать, изменили ли вы текст буфера. Этот флаг устанавливается в &lt;code&gt;t&lt;/code&gt; каждый раз, когда вы изменяете содержимое буфера, и сбрасывается в &lt;code&gt;nil&lt;/code&gt; при его сохранении. Таким образом, флаг показывает, есть ли несохраненные изменения. Значение флага обычно отображается в строке режима (см. &lt;a href=&quot;mode-line-variables#Mode-Line-Variables&quot;&gt;Переменные&lt;/a&gt; строки режима ) и управляет сохранением (см. &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Сохранение буферов&lt;/a&gt; ) и автосохранением (см. &lt;a href=&quot;auto_002dsaving#Auto_002dSaving&quot;&gt;Автосохранение&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1f6508afe4f7364bb84162c55aa6ec1f7edc81cf" translate="yes" xml:space="preserve">
          <source>Emacs keeps track of the start and end positions of the segments of text found during a search; this is called the &lt;em&gt;match data&lt;/em&gt;. Thanks to the match data, you can search for a complex pattern, such as a date in a mail message, and then extract parts of the match under control of the pattern.</source>
          <target state="translated">Emacs отслеживает начальную и конечную позиции сегментов текста, найденных во время поиска; это называется &lt;em&gt;данными совпадения&lt;/em&gt; . Благодаря данным совпадений вы можете искать сложный шаблон, например дату в почтовом сообщении, а затем извлекать части совпадения под контролем шаблона.</target>
        </trans-unit>
        <trans-unit id="0c6690bad1ceee8d9ed2098cbf0d23d2306a9b37" translate="yes" xml:space="preserve">
          <source>Emacs modifies every event it reads according to &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt;, then translates it through &lt;code&gt;keyboard-translate-table&lt;/code&gt; (if applicable), before returning it from &lt;code&gt;read-event&lt;/code&gt;.</source>
          <target state="translated">Emacs модифицирует каждое прочитанное событие в соответствии с &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; , затем переводит его через &lt;code&gt;keyboard-translate-table&lt;/code&gt; (если применимо), прежде чем вернуть его из &lt;code&gt;read-event&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33e146ce39af7a489cb361dbc1e37c600789da32" translate="yes" xml:space="preserve">
          <source>Emacs never auto-adjusts the margins of any window after splitting or resizing it. It is the sole responsibility of any application setting this parameter to adjust the margins of this window as well as those of any new window that inherits this window&amp;rsquo;s margins due to a split. Both &lt;code&gt;window-configuration-change-hook&lt;/code&gt; and &lt;code&gt;window-size-change-functions&lt;/code&gt; (see &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Hooks&lt;/a&gt;) should be employed for this purpose.</source>
          <target state="translated">Emacs никогда не изменяет автоматически поля любого окна после его разделения или изменения размера. Любое приложение, устанавливающее этот параметр, несет исключительную ответственность за настройку полей этого окна, а также полей любого нового окна, которое наследует поля этого окна из-за разделения. Оба &lt;code&gt;window-configuration-change-hook&lt;/code&gt; и &lt;code&gt;window-size-change-functions&lt;/code&gt; (см &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Крючков&lt;/a&gt; ) должны быть использованы для этой цели.</target>
        </trans-unit>
        <trans-unit id="731a5ccd4e119c3981a91156e4befc06a7253914" translate="yes" xml:space="preserve">
          <source>Emacs never reorders the text of a unibyte buffer, even if &lt;code&gt;bidi-display-reordering&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; in the buffer. This is because unibyte buffers contain raw bytes, not characters, and thus lack the directionality properties required for reordering. Therefore, to test whether text in a buffer will be reordered for display, it is not enough to test the value of &lt;code&gt;bidi-display-reordering&lt;/code&gt; alone. The correct test is this:</source>
          <target state="translated">Emacs никогда не меняет порядок текста в однобайтовом буфере, даже если &lt;code&gt;bidi-display-reordering&lt;/code&gt; в буфере не равно &lt;code&gt;nil&lt;/code&gt; . Это связано с тем, что однобайтовые буферы содержат необработанные байты, а не символы, и, следовательно, не имеют свойств направленности, необходимых для переупорядочения. Следовательно, чтобы проверить, будет ли текст в буфере переупорядочен для отображения, недостаточно проверить только значение &lt;code&gt;bidi-display-reordering&lt;/code&gt; . Правильный тест такой:</target>
        </trans-unit>
        <trans-unit id="4d8a849bf06a7f6bc35485cd61775d653a4c2cd3" translate="yes" xml:space="preserve">
          <source>Emacs normally displays an error message when an error is signaled and not handled with &lt;code&gt;condition-case&lt;/code&gt;. While Edebug is active and executing instrumented code, it normally responds to all unhandled errors. You can customize this with the options &lt;code&gt;edebug-on-error&lt;/code&gt; and &lt;code&gt;edebug-on-quit&lt;/code&gt;; see &lt;a href=&quot;edebug-options#Edebug-Options&quot;&gt;Edebug Options&lt;/a&gt;.</source>
          <target state="translated">Emacs обычно отображает сообщение об ошибке, когда сообщается об ошибке и не обрабатывается с помощью &lt;code&gt;condition-case&lt;/code&gt; . Пока Edebug активен и выполняет инструментированный код, он обычно реагирует на все необработанные ошибки. Вы можете настроить это с помощью параметров &lt;code&gt;edebug-on-error&lt;/code&gt; и &lt;code&gt;edebug-on-quit&lt;/code&gt; ; см. &lt;a href=&quot;edebug-options#Edebug-Options&quot;&gt;Параметры Edebug&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b6da4556a5726903beca496cf1774233562b267a" translate="yes" xml:space="preserve">
          <source>Emacs normally tries to redisplay the screen whenever it waits for input. With the following function, you can request an immediate attempt to redisplay, in the middle of Lisp code, without actually waiting for input.</source>
          <target state="translated">Emacs обычно пытается переиграть экран всякий раз,когда ждет ввода.С помощью следующей функции вы можете запросить немедленную попытку повторного отображения,в середине кода на языке Lisp,не дожидаясь на самом деле ввода.</target>
        </trans-unit>
        <trans-unit id="b3b77106c4f5fd19224cba19e42352426a30909e" translate="yes" xml:space="preserve">
          <source>Emacs notification</source>
          <target state="translated">уведомление Emacs</target>
        </trans-unit>
        <trans-unit id="0d1349dea05c4f3f5117321a3ea3fe785f781605" translate="yes" xml:space="preserve">
          <source>Emacs often accesses the network, and you may want to configure it to avoid network accesses that it would normally do. For example, unless you set &lt;code&gt;tramp-mode&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;, file names using a certain syntax are interpreted as being network files, and are retrieved across the network. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/tramp/index.html#Top&quot;&gt;The Tramp Manual&lt;/a&gt; in</source>
          <target state="translated">Emacs часто обращается к сети, и вы можете захотеть настроить его так, чтобы избежать доступа к сети, который он обычно делает. Например, если вы установите &lt;code&gt;tramp-mode&lt;/code&gt; в &lt;code&gt;nil&lt;/code&gt; , имена файлов , используя определенный синтаксис интерпретируются как сетевые файлы, и извлекаются через сеть. См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/tramp/index.html#Top&quot;&gt;Руководство бродяги&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="581d858cf52872c9ad790c13ebef480b2798de3d" translate="yes" xml:space="preserve">
          <source>Emacs performs several steps to convert the data in a buffer (text, text properties, and possibly other information) to and from a representation suitable for storing into a file. This section describes the fundamental functions that perform this &lt;em&gt;format conversion&lt;/em&gt;, namely &lt;code&gt;insert-file-contents&lt;/code&gt; for reading a file into a buffer, and &lt;code&gt;write-region&lt;/code&gt; for writing a buffer into a file.</source>
          <target state="translated">Emacs выполняет несколько шагов для преобразования данных в буфере (текст, свойства текста и, возможно, другая информация) в представление, подходящее для сохранения в файл, и обратно. В этом разделе описываются основные функции, которые выполняют это &lt;em&gt;преобразование формата&lt;/em&gt; , а именно &lt;code&gt;insert-file-contents&lt;/code&gt; для чтения файла в буфер и &lt;code&gt;write-region&lt;/code&gt; записи для записи буфера в файл.</target>
        </trans-unit>
        <trans-unit id="7ea6c4b1c250da2cff334a5b4482f568269fcc53" translate="yes" xml:space="preserve">
          <source>Emacs periodically saves all files that you are visiting; this is called &lt;em&gt;auto-saving&lt;/em&gt;. Auto-saving prevents you from losing more than a limited amount of work if the system crashes. By default, auto-saves happen every 300 keystrokes, or after around 30 seconds of idle time. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Auto-Save.html#Auto-Save&quot;&gt;Auto-Saving: Protection Against Disasters&lt;/a&gt; in</source>
          <target state="translated">Emacs периодически сохраняет все файлы, которые вы посещаете; это называется &lt;em&gt;автосохранением&lt;/em&gt; . Автосохранение предотвращает потерю более ограниченного объема работы в случае сбоя системы. По умолчанию автоматическое сохранение происходит каждые 300 нажатий клавиш или примерно через 30 секунд простоя. См. Раздел &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Auto-Save.html#Auto-Save&quot;&gt;Автосохранение: защита от бедствий&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="df11fc994e2c3039bdad35c40cb0169c3b1f9d1d" translate="yes" xml:space="preserve">
          <source>Emacs provides a primitive that applications can use to detect instances of text whose bidirectional properties were overridden so as to make a left-to-right character display as if it were a right-to-left character, or vise versa.</source>
          <target state="translated">Emacs предоставляет примитив,который приложения могут использовать для обнаружения экземпляров текста,чьи двунаправленные свойства были переопределены,чтобы сделать отображение символов слева направо,как если бы это был символ справа налево,или наоборот.</target>
        </trans-unit>
        <trans-unit id="61baf7ab83dc2d8df21e9d0bdf661236de4fd609" translate="yes" xml:space="preserve">
          <source>Emacs provides a standard way to distribute Emacs Lisp code to users. A &lt;em&gt;package&lt;/em&gt; is a collection of one or more files, formatted and bundled in such a way that users can easily download, install, uninstall, and upgrade it.</source>
          <target state="translated">Emacs предоставляет стандартный способ распространения кода Emacs Lisp среди пользователей. &lt;em&gt;Пакет&lt;/em&gt; представляет собой набор из одного или нескольких файлов, отформатированных и сгруппированных таким образом , что пользователи могут легко загрузить, установить, удалить и обновить его.</target>
        </trans-unit>
        <trans-unit id="8ada8068790b12baa9e1062244390495c315ecb6" translate="yes" xml:space="preserve">
          <source>Emacs provides a variety of built-in help functions, all accessible to the user as subcommands of the prefix</source>
          <target state="translated">Emacs предоставляет различные встроенные функции помощи,все доступные пользователю в виде подкоманд префикса</target>
        </trans-unit>
        <trans-unit id="43fb2f0b6d17066c5bd67b780eb98dc2c0cc5b60" translate="yes" xml:space="preserve">
          <source>Emacs provides access to variables in the operating system environment through various functions. These variables include the name of the system, the user&amp;rsquo;s</source>
          <target state="translated">Emacs предоставляет доступ к переменным в среде операционной системы с помощью различных функций. Эти переменные включают название системы, имя пользователя</target>
        </trans-unit>
        <trans-unit id="1d40bc6da91c5927b0dc8f18ad6ea9527ed5df47" translate="yes" xml:space="preserve">
          <source>Emacs provides another facility for such modes: you can quickly swap buffer text between two buffers with &lt;code&gt;buffer-swap-text&lt;/code&gt;. This function is very fast because it doesn&amp;rsquo;t move any text, it only changes the internal data structures of the buffer object to point to a different chunk of text. Using it, you can pretend that a group of two or more buffers are actually a single virtual buffer that holds the contents of all the individual buffers together.</source>
          <target state="translated">Emacs предоставляет еще одну возможность для таких режимов: вы можете быстро переставлять текст буфера между двумя буферами с помощью &lt;code&gt;buffer-swap-text&lt;/code&gt; . Эта функция очень быстрая, потому что она не перемещает текст, она только изменяет внутренние структуры данных объекта буфера, чтобы указать на другой фрагмент текста. Используя его, вы можете представить, что группа из двух или более буферов на самом деле является одним виртуальным буфером, который хранит вместе содержимое всех отдельных буферов.</target>
        </trans-unit>
        <trans-unit id="e9aaccb8205c4eac21637c315bcf99abffe5c37c" translate="yes" xml:space="preserve">
          <source>Emacs provides miscellaneous functions for finding the height and width of a window. The return value of many of these functions can be specified either in units of pixels or in units of lines and columns. On a graphical display, the latter actually correspond to the height and width of a default character specified by the frame&amp;rsquo;s default font as returned by &lt;code&gt;frame-char-height&lt;/code&gt; and &lt;code&gt;frame-char-width&lt;/code&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). Thus, if a window is displaying text with a different font or size, the reported line height and column width for that window may differ from the actual number of text lines or columns displayed within it.</source>
          <target state="translated">Emacs предоставляет разные функции для определения высоты и ширины окна. Возвращаемое значение многих из этих функций может быть указано либо в пикселях, либо в единицах строк и столбцов. На графическом дисплее последний фактически соответствует высоте и ширине символа по умолчанию, заданного шрифтом по умолчанию для фрейма, возвращенным параметрами &lt;code&gt;frame-char-height&lt;/code&gt; и &lt;code&gt;frame-char-width&lt;/code&gt; (см. &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Шрифт рамки&lt;/a&gt; ). Таким образом, если окно отображает текст с другим шрифтом или размером, сообщаемая высота строки и ширина столбца для этого окна могут отличаться от фактического количества текстовых строк или столбцов, отображаемых в нем.</target>
        </trans-unit>
        <trans-unit id="b1632c6565185e45338eacdf43142cda2977a1ea" translate="yes" xml:space="preserve">
          <source>Emacs provides several functions and primitives that return time, both elapsed and processor time, used by the Emacs process.</source>
          <target state="translated">Emacs предоставляет несколько функций и примитивов,возвращающих время,как прошедшее,так и процессорное,используемое процессом Emacs.</target>
        </trans-unit>
        <trans-unit id="d46d6363e5a83deb2eb9ea6abf1be5990c469397" translate="yes" xml:space="preserve">
          <source>Emacs provides several primitives for accessing system processes. Not all platforms support these primitives; on those which don&amp;rsquo;t, these primitives return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Emacs предоставляет несколько примитивов для доступа к системным процессам. Не все платформы поддерживают эти примитивы; на тех, которые этого не делают, эти примитивы возвращают &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5dd098d236b6bd1b23e380080511f9e6289ec9ef" translate="yes" xml:space="preserve">
          <source>Emacs provides support for polymorphism. Like other Lisp environments, notably Common Lisp and its Common Lisp Object System (</source>
          <target state="translated">Emacs обеспечивает поддержку полиморфизма.Как и другие среды Lisp,в частности Common Lisp и его объектная система Common Lisp (Common Lisp Object System).</target>
        </trans-unit>
        <trans-unit id="7e45b2565d3c6a45ec4a8ebbbda4c0e8bb3d845c" translate="yes" xml:space="preserve">
          <source>Emacs reads the file &lt;var&gt;filename&lt;/var&gt; from the</source>
          <target state="translated">Emacs читает &lt;var&gt;filename&lt;/var&gt; из</target>
        </trans-unit>
        <trans-unit id="fa5f4104a9e9a2467fbc95628bbe7588c1e30307" translate="yes" xml:space="preserve">
          <source>Emacs redisplays only when it pauses. Usually, when you continue execution, the program re-enters Edebug at a breakpoint or after stepping, without pausing or reading input in between. In such cases, Emacs never gets a chance to redisplay the outside configuration. Consequently, what you see is the same window configuration as the last time Edebug was active, with no interruption.</source>
          <target state="translated">Эмакс переигрывает только на паузе.Обычно,когда вы продолжаете выполнение,программа заново вводит Edebug в точке останова или после шага,без паузы и без чтения входных данных между ними.В таких случаях Emacs никогда не получает возможности переиграть внешнюю конфигурацию.Следовательно,вы видите ту же самую конфигурацию окна,что и в прошлый раз,когда Edebug был активен,без перерыва.</target>
        </trans-unit>
        <trans-unit id="f46dd8612b39986c03b492b88b8edc942b92aa81" translate="yes" xml:space="preserve">
          <source>Emacs represents each terminal as a &lt;em&gt;terminal object&lt;/em&gt; data type (see &lt;a href=&quot;terminal-type#Terminal-Type&quot;&gt;Terminal Type&lt;/a&gt;). On GNU and Unix systems, Emacs can use multiple terminals simultaneously in each session. On other systems, it can only use a single terminal. Each terminal object has the following attributes:</source>
          <target state="translated">Emacs представляет каждый терминал как тип данных &lt;em&gt;объекта терминала&lt;/em&gt; (см. &lt;a href=&quot;terminal-type#Terminal-Type&quot;&gt;Тип терминала&lt;/a&gt; ). В системах GNU и Unix Emacs может использовать несколько терминалов одновременно в каждом сеансе. В других системах он может использовать только один терминал. Каждый терминальный объект имеет следующие атрибуты:</target>
        </trans-unit>
        <trans-unit id="aa45d2f9f0d5f594df92c4785fdb9ba7d0be0018" translate="yes" xml:space="preserve">
          <source>Emacs signals an error if &lt;var&gt;key&lt;/var&gt; is not a string or a vector.</source>
          <target state="translated">Emacs сигнализирует об ошибке, если &lt;var&gt;key&lt;/var&gt; не является строкой или вектором.</target>
        </trans-unit>
        <trans-unit id="5a189e87eddfeb2b6f9c9a05136525e5f7f54d44" translate="yes" xml:space="preserve">
          <source>Emacs sometimes generates &lt;em&gt;mouse motion&lt;/em&gt; events to describe motion of the mouse without any button activity. Mouse motion events are represented by lists that look like this:</source>
          <target state="translated">Emacs иногда генерирует события &lt;em&gt;движения мыши,&lt;/em&gt; чтобы описать движение мыши без каких-либо действий кнопок. События движения мыши представлены списками, которые выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="8cea986d9dde8997ae558d2415d06c4c0c311a90" translate="yes" xml:space="preserve">
          <source>Emacs stores the overlays of each buffer in two lists, divided around an arbitrary center position. One list extends backwards through the buffer from that center position, and the other extends forwards from that center position. The center position can be anywhere in the buffer.</source>
          <target state="translated">Emacs хранит оверлеи каждого буфера в двух списках,разделенных вокруг произвольной центральной позиции.Один список простирается назад через буфер от этой центральной позиции,а другой простирается вперед от этой центральной позиции.Центральная позиция может находиться в любом месте буфера.</target>
        </trans-unit>
        <trans-unit id="ad62c31e598a9d1f29a369781541a612009842a4" translate="yes" xml:space="preserve">
          <source>Emacs supplies two predefined values for this variable: &lt;code&gt;window-adjust-process-window-size-smallest&lt;/code&gt;, which returns the smallest of all the dimensions of the windows that display a process&amp;rsquo;s buffer; and &lt;code&gt;window-adjust-process-window-size-largest&lt;/code&gt;, which returns the largest dimensions. For more complex strategies, write your own function.</source>
          <target state="translated">Emacs предоставляет для этой переменной два предопределенных значения: &lt;code&gt;window-adjust-process-window-size-smallest&lt;/code&gt; , которое возвращает наименьшее из всех размеров окон, отображающих буфер процесса; и &lt;code&gt;window-adjust-process-window-size-largest&lt;/code&gt; , который возвращает самые большие размеры. Для более сложных стратегий напишите свою собственную функцию.</target>
        </trans-unit>
        <trans-unit id="61355fb31d5f838a8163a1a0717a06fbd8117c67" translate="yes" xml:space="preserve">
          <source>Emacs supports four kinds of mouse events: click events, drag events, button-down events, and motion events. All mouse events are represented as lists. The &lt;small&gt;CAR&lt;/small&gt; of the list is the event type; this says which mouse button was involved, and which modifier keys were used with it. The event type can also distinguish double or triple button presses (see &lt;a href=&quot;repeat-events#Repeat-Events&quot;&gt;Repeat Events&lt;/a&gt;). The rest of the list elements give position and time information.</source>
          <target state="translated">Emacs поддерживает четыре типа событий мыши: события щелчка, события перетаскивания, события нажатия кнопки и события движения. Все события мыши представлены в виде списков. &lt;small&gt;CAR&lt;/small&gt; списка тип события; это говорит, какая кнопка мыши была задействована, и какие клавиши-модификаторы использовались с ней. По типу события также можно различать двойные или тройные нажатия кнопок (см. &amp;laquo; &lt;a href=&quot;repeat-events#Repeat-Events&quot;&gt;Повторение событий&amp;raquo;&lt;/a&gt; ). Остальные элементы списка предоставляют информацию о положении и времени.</target>
        </trans-unit>
        <trans-unit id="6218bcff746da87fbb66fbec9ddb8a018bc5f549" translate="yes" xml:space="preserve">
          <source>Emacs supports saving state via a hook called &lt;code&gt;emacs-save-session-functions&lt;/code&gt;. Emacs runs this hook when the session manager tells it that the window system is shutting down. The functions are called with no arguments, and with the current buffer set to a temporary buffer. Each function can use &lt;code&gt;insert&lt;/code&gt; to add Lisp code to this buffer. At the end, Emacs saves the buffer in a file, called the &lt;em&gt;session file&lt;/em&gt;.</source>
          <target state="translated">Emacs поддерживает сохранение состояния с помощью ловушки, называемой &lt;code&gt;emacs-save-session-functions&lt;/code&gt; . Emacs запускает эту ловушку, когда менеджер сеанса сообщает ему, что оконная система закрывается. Функции вызываются без аргументов, а текущий буфер установлен как временный. Каждая функция может использовать &lt;code&gt;insert&lt;/code&gt; для добавления кода Lisp в этот буфер. В конце Emacs сохраняет буфер в файл, называемый &lt;em&gt;файлом сеанса&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1ffa17ed9364f5575c0082d461c8f0e3489ecac2" translate="yes" xml:space="preserve">
          <source>Emacs supports several comment styles simultaneously in any one syntax table. A comment style is a set of flags &amp;lsquo;</source>
          <target state="translated">Emacs поддерживает несколько стилей комментариев одновременно в одной синтаксической таблице. Стиль комментария - это набор флажков '</target>
        </trans-unit>
        <trans-unit id="374f9fc9c7b543e09273805eabd95e1a26d66453" translate="yes" xml:space="preserve">
          <source>Emacs supports several common cryptographic hash algorithms: MD5, SHA-1, SHA-2, SHA-224, SHA-256, SHA-384 and SHA-512. MD5 is the oldest of these algorithms, and is commonly used in &lt;em&gt;message digests&lt;/em&gt; to check the integrity of messages transmitted over a network. MD5 and SHA-1 are not collision resistant (i.e., it is possible to deliberately design different pieces of data which have the same MD5 or SHA-1 hash), so you should not use them for anything security-related. For security-related applications you should use the other hash types, such as SHA-2 (e.g. &lt;code&gt;sha256&lt;/code&gt; or &lt;code&gt;sha512&lt;/code&gt;).</source>
          <target state="translated">Emacs поддерживает несколько распространенных алгоритмов криптографического хеширования: MD5, SHA-1, SHA-2, SHA-224, SHA-256, SHA-384 и SHA-512. MD5 - самый старый из этих алгоритмов, который обычно используется в &lt;em&gt;дайджестах сообщений&lt;/em&gt; для проверки целостности сообщений, передаваемых по сети. MD5 и SHA-1 не устойчивы к коллизиям (т. Е. Можно сознательно создавать разные фрагменты данных, которые имеют одинаковый хэш MD5 или SHA-1), поэтому вы не должны использовать их для чего-либо, связанного с безопасностью. Для приложений, связанных с безопасностью, вы должны использовать другие типы хэшей, такие как SHA-2 (например, &lt;code&gt;sha256&lt;/code&gt; или &lt;code&gt;sha512&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b7e49d60042c70b0537fcee92a3c84a52f433f6c" translate="yes" xml:space="preserve">
          <source>Emacs supports the X Session Management Protocol, which is used to suspend and restart applications. In the X Window System, a program called the &lt;em&gt;session manager&lt;/em&gt; is responsible for keeping track of the applications that are running. When the X server shuts down, the session manager asks applications to save their state, and delays the actual shutdown until they respond. An application can also cancel the shutdown.</source>
          <target state="translated">Emacs поддерживает протокол управления сеансом X, который используется для приостановки и перезапуска приложений. В системе X Window за отслеживание запущенных приложений отвечает программа, называемая &lt;em&gt;диспетчером сеансов&lt;/em&gt; . Когда X-сервер завершает работу, менеджер сеанса просит приложения сохранить свое состояние и откладывает фактическое завершение работы до тех пор, пока они не ответят. Приложение также может отменить выключение.</target>
        </trans-unit>
        <trans-unit id="89f5a42afa1af03f9d3097e4024bf58ff39a6001" translate="yes" xml:space="preserve">
          <source>Emacs then searches every Lisp file in the content directory for autoload magic comments (see &lt;a href=&quot;autoload#Autoload&quot;&gt;Autoload&lt;/a&gt;). These autoload definitions are saved to a file named</source>
          <target state="translated">Затем Emacs ищет в каждом файле Lisp в каталоге содержимого магические комментарии автозагрузки (см. &lt;a href=&quot;autoload#Autoload&quot;&gt;Автозагрузка&lt;/a&gt; ). Эти определения автозагрузки сохраняются в файл с именем</target>
        </trans-unit>
        <trans-unit id="642da26f6d818f57222aa0ba6201c9a5f8e43253" translate="yes" xml:space="preserve">
          <source>Emacs tries to load the library from the files in the order they appear in the list; if none is found, the Emacs session won&amp;rsquo;t have access to that library, and the features it provides will be unavailable.</source>
          <target state="translated">Emacs пытается загрузить библиотеку из файлов в том порядке, в котором они появляются в списке; если ничего не найдено, сеанс Emacs не будет иметь доступа к этой библиотеке, и функции, которые он предоставляет, будут недоступны.</target>
        </trans-unit>
        <trans-unit id="6ec424687522d88149cabb8e9ff0c17e4a8a1445" translate="yes" xml:space="preserve">
          <source>Emacs uses the word &amp;ldquo;window&amp;rdquo; with a different meaning than in graphical desktop environments and window systems, such as the X Window System. When Emacs is run on X, each of its graphical X windows is an Emacs frame (containing one or more Emacs windows). When Emacs is run on a text terminal, the frame fills the entire terminal screen.</source>
          <target state="translated">Emacs использует слово &amp;laquo;окно&amp;raquo; в другом значении, чем в графических средах рабочего стола и оконных системах, таких как X Window System. Когда Emacs запущен в X, каждое из его графических X-окон является фреймом Emacs (содержащим одно или несколько окон Emacs). Когда Emacs запускается на текстовом терминале, фрейм заполняет весь экран терминала.</target>
        </trans-unit>
        <trans-unit id="6739d8fc92b7ea45c67f23811c8b9230bc3d4cae" translate="yes" xml:space="preserve">
          <source>Emacs uses this function internally when it loads directory variables from a &lt;code&gt;.dir-locals.el&lt;/code&gt; file. In that case, the optional argument &lt;var&gt;mtime&lt;/var&gt; holds the file modification time (as returned by &lt;code&gt;file-attributes&lt;/code&gt;). Emacs uses this time to check stored local variables are still valid. If you are assigning a class directly, not via a file, this argument should be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Emacs использует эту функцию внутри себя, когда загружает переменные каталога из файла &lt;code&gt;.dir-locals.el&lt;/code&gt; . В этом случае необязательный аргумент &lt;var&gt;mtime&lt;/var&gt; содержит время модификации файла (возвращаемое &lt;code&gt;file-attributes&lt;/code&gt; ). Emacs использует это время, чтобы проверить, что сохраненные локальные переменные все еще действительны. Если вы назначаете класс напрямую, а не через файл, этот аргумент должен быть равен &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a5eb29ea0683f15f88a024cecd03f16a4045817" translate="yes" xml:space="preserve">
          <source>Emacs uses two variables to store the prefix argument: &lt;code&gt;prefix-arg&lt;/code&gt; and &lt;code&gt;current-prefix-arg&lt;/code&gt;. Commands such as &lt;code&gt;universal-argument&lt;/code&gt; that set up prefix arguments for other commands store them in &lt;code&gt;prefix-arg&lt;/code&gt;. In contrast, &lt;code&gt;current-prefix-arg&lt;/code&gt; conveys the prefix argument to the current command, so setting it has no effect on the prefix arguments for future commands.</source>
          <target state="translated">Emacs использует две переменные для хранения аргумента префикса: &lt;code&gt;prefix-arg&lt;/code&gt; и &lt;code&gt;current-prefix-arg&lt;/code&gt; . Команды, такие как &lt;code&gt;universal-argument&lt;/code&gt; которые устанавливают аргументы префикса для других команд, сохраняют их в &lt;code&gt;prefix-arg&lt;/code&gt; . Напротив, &lt;code&gt;current-prefix-arg&lt;/code&gt; передает аргумент префикса текущей команде, поэтому его установка не влияет на аргументы префикса для будущих команд.</target>
        </trans-unit>
        <trans-unit id="8322177991ff5a69ef8d70459eeede0c94874d69" translate="yes" xml:space="preserve">
          <source>Emacs usually shows a &lt;em&gt;menu bar&lt;/em&gt; at the top of each frame. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Menu-Bars.html#Menu-Bars&quot;&gt;Menu Bars&lt;/a&gt; in</source>
          <target state="translated">Emacs обычно показывает &lt;em&gt;строку меню&lt;/em&gt; вверху каждого кадра. См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Menu-Bars.html#Menu-Bars&quot;&gt;Панели меню&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="0558f3f8ca5ebcf9982d4420378522febddf9f12" translate="yes" xml:space="preserve">
          <source>Emacs versions before Emacs 22 did not have &lt;code&gt;delay-mode-hooks&lt;/code&gt;. Versions before 24 did not have &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt;. When user-implemented major modes do not use &lt;code&gt;run-mode-hooks&lt;/code&gt; and have not been updated to use these newer features, they won&amp;rsquo;t entirely follow these conventions: they may run the parent&amp;rsquo;s mode hook too early, or fail to run &lt;code&gt;after-change-major-mode-hook&lt;/code&gt;. If you encounter such a major mode, please correct it to follow these conventions.</source>
          <target state="translated">Версии Emacs до Emacs 22 не имели &lt;code&gt;delay-mode-hooks&lt;/code&gt; . В версиях до 24 не было &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt; . Когда реализованные пользователем основные режимы не используют &lt;code&gt;run-mode-hooks&lt;/code&gt; и не были обновлены для использования этих новых функций, они не будут полностью следовать этим соглашениям: они могут запустить обработчик родительского режима слишком рано или не запуститься &lt;code&gt;after-change-major-mode-hook&lt;/code&gt; . Если вы столкнулись с таким основным режимом, исправьте его, чтобы следовать этим соглашениям.</target>
        </trans-unit>
        <trans-unit id="2175b4ca0a4ab5a7e1e6f75b7a977f193cc85367" translate="yes" xml:space="preserve">
          <source>Emacs will fail to decode</source>
          <target state="translated">Emacs не сможет декодировать</target>
        </trans-unit>
        <trans-unit id="d4d48520a4e7157f1ff4ee50b46e94eaf663e2aa" translate="yes" xml:space="preserve">
          <source>Emacs will try to keep the position ratios of a child frame unaltered if that frame has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;keep-ratio&lt;/code&gt; parameter (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;) and its parent frame is resized.</source>
          <target state="translated">Emacs будет пытаться сохранить соотношения позиций дочернего фрейма неизменными, если этот фрейм имеет &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;keep-ratio&lt;/code&gt; (см. &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Параметры взаимодействия&lt;/a&gt; фреймов), а его родительский фрейм изменяется.</target>
        </trans-unit>
        <trans-unit id="b154a9be9b6bdf586b186816066bb36a405e4a4a" translate="yes" xml:space="preserve">
          <source>Emacs will try to keep the width and height ratio of a child frame unaltered if that frame has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;keep-ratio&lt;/code&gt; parameter (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;) and its parent frame is resized.</source>
          <target state="translated">Emacs будет пытаться сохранить неизменным соотношение ширины и высоты дочернего фрейма, если этот фрейм имеет параметр &lt;code&gt;keep-ratio&lt;/code&gt; , отличный от &lt;code&gt;nil&lt;/code&gt; (см. &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Параметры взаимодействия&lt;/a&gt; фреймов), а его родительский фрейм будет изменять размер.</target>
        </trans-unit>
        <trans-unit id="8f2ef7c37339106b409b42bf4c03ccef1510f3a8" translate="yes" xml:space="preserve">
          <source>Emacs works with several window systems, most notably the X Window System. Both Emacs and X use the term &amp;ldquo;window&amp;rdquo;, but use it differently. An Emacs frame is a single window as far as X is concerned; the individual Emacs windows are not known to X at all.</source>
          <target state="translated">Emacs работает с несколькими оконными системами, в первую очередь с X Window System. И Emacs, и X используют термин &amp;laquo;окно&amp;raquo;, но по-разному. Что касается X, фрейм Emacs - это одно окно; отдельные окна Emacs вообще не известны X.</target>
        </trans-unit>
        <trans-unit id="3e023f4f3837dfad4265ed79f1fcd67f57a3591f" translate="yes" xml:space="preserve">
          <source>Emacs&amp;rsquo;s Widget for Object Collections.</source>
          <target state="translated">Виджет Emacs для коллекций объектов.</target>
        </trans-unit>
        <trans-unit id="259a61bf42871d8fc1aec61faab84f39ed26f1e8" translate="yes" xml:space="preserve">
          <source>Emacs&amp;rsquo;s advice system provides two sets of primitives for that: the core set, for function values held in variables and object fields (with the corresponding primitives being &lt;code&gt;add-function&lt;/code&gt; and &lt;code&gt;remove-function&lt;/code&gt;) and another set layered on top of it for named functions (with the main primitives being &lt;code&gt;advice-add&lt;/code&gt; and &lt;code&gt;advice-remove&lt;/code&gt;).</source>
          <target state="translated">Система рекомендаций Emacs предоставляет для этого два набора примитивов: основной набор для значений функций, содержащихся в переменных и полях объектов (с соответствующими примитивами, являющимися &lt;code&gt;add-function&lt;/code&gt; и &lt;code&gt;remove-function&lt;/code&gt; ), и другой набор, расположенный поверх него для именованных функций ( с основными примитивами: &lt;code&gt;advice-add&lt;/code&gt; и &lt;code&gt;advice-remove&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7eb4cad6bae56a3671fe38d9c59df33108242d4f" translate="yes" xml:space="preserve">
          <source>Emacs.&lt;var&gt;class&lt;/var&gt;</source>
          <target state="translated">Emacs.&lt;var&gt;class&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="772ce1b98bdf9ba1f907e4ebaefb6456ad036e1b" translate="yes" xml:space="preserve">
          <source>Emacs.&lt;var&gt;class&lt;/var&gt;.&lt;var&gt;subclass&lt;/var&gt;</source>
          <target state="translated">Emacs.&lt;var&gt;class&lt;/var&gt;.&lt;var&gt;subclass&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="14cd681004a41ed10438de0371e7e1d227d03f61" translate="yes" xml:space="preserve">
          <source>Embedded Native Widgets</source>
          <target state="translated">Встроенные аборигенные виджеты</target>
        </trans-unit>
        <trans-unit id="9a7852d05e7baac38409e4f91c01b6dd940846da" translate="yes" xml:space="preserve">
          <source>Embedding breakpoints in source code.</source>
          <target state="translated">Вставка точек останова в исходный код.</target>
        </trans-unit>
        <trans-unit id="54cf6d6905ae6cd8bd43fbae70d64742d978021f" translate="yes" xml:space="preserve">
          <source>Emboss edge-detection uses a matrix of</source>
          <target state="translated">Обнаружение краев тиснения использует матрицу из</target>
        </trans-unit>
        <trans-unit id="db0b559f4d5ae5e124f4899b893fbf4e32a596af" translate="yes" xml:space="preserve">
          <source>Empty matches do count, except that &lt;code&gt;split-string&lt;/code&gt; will not look for a final empty match when it already reached the end of the string using a non-empty match or when &lt;var&gt;string&lt;/var&gt; is empty:</source>
          <target state="translated">Пустые совпадения учитываются, за исключением того, что &lt;code&gt;split-string&lt;/code&gt; не будет искать окончательное пустое совпадение, если оно уже достигло конца строки с использованием непустого совпадения или когда &lt;var&gt;string&lt;/var&gt; пуста:</target>
        </trans-unit>
        <trans-unit id="9d433804d09a2b55eeb29add415a821fb9c7f1c0" translate="yes" xml:space="preserve">
          <source>Emulating Mode Line Formatting</source>
          <target state="translated">Эмуляция модового линейного форматирования</target>
        </trans-unit>
        <trans-unit id="16f497122ec781967c9cd6bac0e6090a9d12ada1" translate="yes" xml:space="preserve">
          <source>Enabling Auto Compression mode appends the suffixes in &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; to this list and disabling Auto Compression mode removes them again. The standard value of &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; if Auto Compression mode is disabled is &lt;code&gt;(&quot;&quot;)&lt;/code&gt;. Given that the standard value of &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; is &lt;code&gt;(&quot;.gz&quot;)&lt;/code&gt;, the standard value of &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; if Auto Compression mode is enabled is &lt;code&gt;(&quot;&quot; &quot;.gz&quot;)&lt;/code&gt;.</source>
          <target state="translated">Включение режима автоматического сжатия добавляет суффиксы в &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; к этому списку, а отключение режима автоматического сжатия удаляет их снова. Стандартное значение &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; если режим автосжатия отключен, равно &lt;code&gt;(&quot;&quot;)&lt;/code&gt; . Учитывая, что стандартное значение &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; равно &lt;code&gt;(&quot;.gz&quot;)&lt;/code&gt; , стандартное значение &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; , если включен режим автоматического сжатия, равно &lt;code&gt;(&quot;&quot; &quot;.gz&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97ea443a6ca1abd46f75c2ad8f1c051cf1f2375b" translate="yes" xml:space="preserve">
          <source>Enabling or disabling a minor mode twice in direct succession should not fail and should do the same thing as enabling or disabling it only once. In other words, the minor mode command should be idempotent.</source>
          <target state="translated">Включение или выключение второстепенного режима дважды в прямой последовательности не должно давать сбой и должно осуществляться так же,как и включение или выключение только один раз.Другими словами,команда минорного режима должна быть idempotent.</target>
        </trans-unit>
        <trans-unit id="a3b1c1ae369f1075ad679993e89089772fd41d3c" translate="yes" xml:space="preserve">
          <source>Encoded text is not really text, as far as Emacs is concerned, but rather a sequence of raw 8-bit bytes. We call buffers and strings that hold encoded text &lt;em&gt;unibyte&lt;/em&gt; buffers and strings, because Emacs treats them as a sequence of individual bytes. Usually, Emacs displays unibyte buffers and strings as octal codes such as &lt;code&gt;\237&lt;/code&gt;. We recommend that you never use unibyte buffers and strings except for manipulating encoded text or binary non-text data.</source>
          <target state="translated">Для Emacs закодированный текст - это не совсем текст, а скорее последовательность необработанных 8-битных байтов. Мы вызываем буферы и строки, которые содержат &lt;em&gt;однобайтовые&lt;/em&gt; буферы и строки кодированного текста , потому что Emacs обрабатывает их как последовательность отдельных байтов. Обычно Emacs отображает однобайтовые буферы и строки в виде восьмеричных кодов, таких как &lt;code&gt;\237&lt;/code&gt; . Мы рекомендуем никогда не использовать однобайтовые буферы и строки, за исключением операций с закодированным текстом или двоичными нетекстовыми данными.</target>
        </trans-unit>
        <trans-unit id="bd7313ce1d017669659ef7e4ce9d21c10a5d020c" translate="yes" xml:space="preserve">
          <source>Encoding and I/O</source>
          <target state="translated">Кодирование и ввод/вывод</target>
        </trans-unit>
        <trans-unit id="02f30c7d0f91b7195ed0ae6309a8ca548b2049c4" translate="yes" xml:space="preserve">
          <source>Encoding buffer text and then decoding the result can also fail to reproduce the original text. For instance, if you encode a character with a coding system which does not support that character, the result is unpredictable, and thus decoding it using the same coding system may produce a different text. Currently, Emacs can&amp;rsquo;t report errors that result from encoding unsupported characters.</source>
          <target state="translated">Кодирование текста в буфере и последующее декодирование результата также могут не воспроизвести исходный текст. Например, если вы кодируете символ с помощью системы кодирования, которая не поддерживает этот символ, результат будет непредсказуемым, и поэтому его декодирование с использованием той же системы кодирования может привести к получению другого текста. В настоящее время Emacs не может сообщать об ошибках, возникающих в результате кодирования неподдерживаемых символов.</target>
        </trans-unit>
        <trans-unit id="0d4bbb47556074532bed047220c876c7fbf6d672" translate="yes" xml:space="preserve">
          <source>Encoding or decoding text without doing I/O.</source>
          <target state="translated">Кодирование или декодирование текста без ввода/вывода.</target>
        </trans-unit>
        <trans-unit id="c49dfe38fa95a2d94187448bdd45b6ceb51fea26" translate="yes" xml:space="preserve">
          <source>End of buffer</source>
          <target state="translated">Конец буфера</target>
        </trans-unit>
        <trans-unit id="22ed4aff93c21533cf773a985fc18a0a9d6075db" translate="yes" xml:space="preserve">
          <source>End of file during parsing</source>
          <target state="translated">Конец файла при разборе</target>
        </trans-unit>
        <trans-unit id="51a24f40f1dfdda0623dab9d3238f372be53712c" translate="yes" xml:space="preserve">
          <source>End the current subpath by connecting it back to its initial point. A line is drawn along the connection.</source>
          <target state="translated">Завершите текущий подпуть,подключив его обратно к начальной точке.Вдоль соединения проводится линия.</target>
        </trans-unit>
        <trans-unit id="d83d52673aa258dada627130abd13b94143274cf" translate="yes" xml:space="preserve">
          <source>Ensuring you have tested all branches in your code.</source>
          <target state="translated">Убедитесь,что вы протестировали все ветки в вашем коде.</target>
        </trans-unit>
        <trans-unit id="766315a2e77f28f51bb4338a661aed5831816a7e" translate="yes" xml:space="preserve">
          <source>Enter a recursive edit to deal with this question&amp;mdash;instead of any other action that would normally be taken.</source>
          <target state="translated">Для ответа на этот вопрос введите рекурсивное редактирование вместо любых других действий, которые обычно выполняются.</target>
        </trans-unit>
        <trans-unit id="596cbfc7aa5284414bc7f90512c8bc54b1c78c11" translate="yes" xml:space="preserve">
          <source>Entering a recursive edit, and why you usually shouldn&amp;rsquo;t.</source>
          <target state="translated">Ввод рекурсивного редактирования и почему обычно этого не следует делать.</target>
        </trans-unit>
        <trans-unit id="93c491ff8b6ed99eb7d8c488249b40da813b3e66" translate="yes" xml:space="preserve">
          <source>Entering it at a certain point in the program.</source>
          <target state="translated">Ввод в определенный момент в программу.</target>
        </trans-unit>
        <trans-unit id="d14d5f3e4385e31fcb77f0c423677755e926fcc3" translate="yes" xml:space="preserve">
          <source>Entering it when a certain function is called.</source>
          <target state="translated">Ввод при вызове определенной функции.</target>
        </trans-unit>
        <trans-unit id="ec57cd29307aa24142772c0c32253ccfca258554" translate="yes" xml:space="preserve">
          <source>Entering it when a variable is modified.</source>
          <target state="translated">Вводится при изменении переменной.</target>
        </trans-unit>
        <trans-unit id="b4fb292744685eab3a4922e2a5ddda019c43db2a" translate="yes" xml:space="preserve">
          <source>Entering the Debugger on a Function Call</source>
          <target state="translated">Ввод отладчика при вызове функции</target>
        </trans-unit>
        <trans-unit id="281d5c4d3f2ee8f959289903ff6d4cf7b9296934" translate="yes" xml:space="preserve">
          <source>Entering the Debugger on an Error</source>
          <target state="translated">Ввод отладчика при ошибке</target>
        </trans-unit>
        <trans-unit id="844887075a6009589b0868071d101e40cc28f3a9" translate="yes" xml:space="preserve">
          <source>Entering the debugger when a variable is modified</source>
          <target state="translated">Ввод отладчика при изменении переменной</target>
        </trans-unit>
        <trans-unit id="9a16ed8e32b37737effa3241044834a8eb948bb3" translate="yes" xml:space="preserve">
          <source>Entering the debugger when an error happens.</source>
          <target state="translated">Ввод отладчика при возникновении ошибки.</target>
        </trans-unit>
        <trans-unit id="09d7bf61bea73a703c7ae9aa3e0658c116885966" translate="yes" xml:space="preserve">
          <source>Entries in &lt;code&gt;local-function-key-map&lt;/code&gt; are ignored if they conflict with bindings made in the minor mode, local, or global keymaps. I.e., the remapping only applies if the original key sequence would otherwise not have any binding.</source>
          <target state="translated">Записи в &lt;code&gt;local-function-key-map&lt;/code&gt; игнорируются, если они конфликтуют с привязками, сделанными в второстепенном режиме, локальных или глобальных таблицах клавиш. То есть переназначение применяется только в том случае, если исходная последовательность клавиш в противном случае не имела бы привязки.</target>
        </trans-unit>
        <trans-unit id="8254ab2eb5612dc4ce1c103171c6b702da77f34a" translate="yes" xml:space="preserve">
          <source>Entry to Edebug for displaying something also saves and restores the following data (though some of them are deliberately not restored if an error or quit signal occurs).</source>
          <target state="translated">Вход в Edebug для отображения чего-либо также сохраняет и восстанавливает следующие данные (хотя некоторые из них намеренно не восстанавливаются при возникновении ошибки или сигнала выхода).</target>
        </trans-unit>
        <trans-unit id="79b3814747436fa5e36b284727f17f4584b2be36" translate="yes" xml:space="preserve">
          <source>Entry to the minibuffer binds this variable to the value of &lt;code&gt;minibuffer-help-form&lt;/code&gt; (see &lt;a href=&quot;minibuffer-misc#Definition-of-minibuffer_002dhelp_002dform&quot;&gt;Definition of minibuffer-help-form&lt;/a&gt;).</source>
          <target state="translated">Запись в минибуфер связывает эту переменную со значением &lt;code&gt;minibuffer-help-form&lt;/code&gt; (см. &lt;a href=&quot;minibuffer-misc#Definition-of-minibuffer_002dhelp_002dform&quot;&gt;Определение minibuffer-help-form&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8403ba2a4a5aa9baffc30d3d46a39f555141e42f" translate="yes" xml:space="preserve">
          <source>Environment and configuration variables</source>
          <target state="translated">Переменные среды и конфигурационные переменные</target>
        </trans-unit>
        <trans-unit id="c4de2199d0374144093362250edf386e9f468abf" translate="yes" xml:space="preserve">
          <source>Equality Predicates</source>
          <target state="translated">Равенство Предсказывает</target>
        </trans-unit>
        <trans-unit id="834c979ef344d5fe417d910f8b66468831446066" translate="yes" xml:space="preserve">
          <source>Equality and inequality predicates.</source>
          <target state="translated">Равенство и неравенство предсказывает.</target>
        </trans-unit>
        <trans-unit id="c8d0f04136312386813886250977d18ad026a2f1" translate="yes" xml:space="preserve">
          <source>Equivalent to &amp;lsquo;</source>
          <target state="translated">Эквивалентно '</target>
        </trans-unit>
        <trans-unit id="fa647c1ab7e45907989ea68b5acf3879755d28ca" translate="yes" xml:space="preserve">
          <source>Error Messages</source>
          <target state="translated">Сообщения об ошибках</target>
        </trans-unit>
        <trans-unit id="5a760c7fc538e175f1cfc5267b17003886b1f1cb" translate="yes" xml:space="preserve">
          <source>Error Symbols and Condition Names</source>
          <target state="translated">Ошибка Символы и названия условий</target>
        </trans-unit>
        <trans-unit id="1f7f4fdf201c7b5f16e21bf03e3078b9a1c7771e" translate="yes" xml:space="preserve">
          <source>Error and warning messages from byte compilation are printed in a buffer named</source>
          <target state="translated">Сообщения об ошибках и предупреждения от компиляции байтов печатаются в буфере с именем</target>
        </trans-unit>
        <trans-unit id="dfccb975dbeae0442fb778b970540719d3134c8b" translate="yes" xml:space="preserve">
          <source>Error signaling and handling have some resemblance to &lt;code&gt;throw&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; (see &lt;a href=&quot;catch-and-throw#Catch-and-Throw&quot;&gt;Catch and Throw&lt;/a&gt;), but they are entirely separate facilities. An error cannot be caught by a &lt;code&gt;catch&lt;/code&gt;, and a &lt;code&gt;throw&lt;/code&gt; cannot be handled by an error handler (though using &lt;code&gt;throw&lt;/code&gt; when there is no suitable &lt;code&gt;catch&lt;/code&gt; signals an error that can be handled).</source>
          <target state="translated">Сигнализация об ошибках и обработка имеют некоторое сходство с &lt;code&gt;throw&lt;/code&gt; и &lt;code&gt;catch&lt;/code&gt; (см. &quot; &lt;a href=&quot;catch-and-throw#Catch-and-Throw&quot;&gt;Поймать и &lt;/a&gt;отловить&quot; ), но это совершенно разные средства. Ошибка не может быть поймана с помощью &lt;code&gt;catch&lt;/code&gt; , а &lt;code&gt;throw&lt;/code&gt; не может быть обработан обработчиком ошибок (хотя использование &lt;code&gt;throw&lt;/code&gt; , когда нет подходящего &lt;code&gt;catch&lt;/code&gt; , сигнализирует об ошибке, которую можно обработать).</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="9d0a10c2c2e113d5312e59894e38cc94f35e4f65" translate="yes" xml:space="preserve">
          <source>Errors in finalizers are printed to &lt;code&gt;*Messages*&lt;/code&gt;. Emacs runs a given finalizer object&amp;rsquo;s associated function exactly once, even if that function fails.</source>
          <target state="translated">Ошибки в финализаторах выводятся в &lt;code&gt;*Messages*&lt;/code&gt; . Emacs выполняет функцию, связанную с данным объектом-финализатором, ровно один раз, даже если эта функция не работает.</target>
        </trans-unit>
        <trans-unit id="4db567f1da446be4a0e532bab664141df98a3c4f" translate="yes" xml:space="preserve">
          <source>Escape-syntax characters: &amp;lsquo;</source>
          <target state="translated">Символы escape-синтаксиса: '</target>
        </trans-unit>
        <trans-unit id="cf82113fd70beadf20192ff3e6d4d74b99c817ff" translate="yes" xml:space="preserve">
          <source>Establishing a local binding saves away the variable&amp;rsquo;s previous value (or lack of one). We say that the previous value is &lt;em&gt;shadowed&lt;/em&gt;. Both global and local values may be shadowed. If a local binding is in effect, using &lt;code&gt;setq&lt;/code&gt; on the local variable stores the specified value in the local binding. When that local binding is no longer in effect, the previously shadowed value (or lack of one) comes back.</source>
          <target state="translated">Установление локальной привязки сохраняет предыдущее значение переменной (или его отсутствие). Мы говорим, что предыдущее значение &lt;em&gt;затенено&lt;/em&gt; . Могут быть затенены как глобальные, так и локальные значения. Если действует локальная привязка, использование &lt;code&gt;setq&lt;/code&gt; для локальной переменной сохраняет указанное значение в локальной привязке. Когда эта локальная привязка больше не действует, возвращается ранее затененное значение (или отсутствие такового).</target>
        </trans-unit>
        <trans-unit id="e7b08833a45efab519f57833aec45127debfcb2b" translate="yes" xml:space="preserve">
          <source>Eval</source>
          <target state="translated">Eval</target>
        </trans-unit>
        <trans-unit id="51e8465ca0546c95a84fea0ae32a522b14322458" translate="yes" xml:space="preserve">
          <source>Eval:</source>
          <target state="translated">Eval:</target>
        </trans-unit>
        <trans-unit id="017bb101654ddccd6af97e1fb1a4a04d0dd0c6b5" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;bindings&lt;/var&gt; to a list of bindings as in &lt;code&gt;rx-let&lt;/code&gt;, and evaluate &lt;var&gt;body&lt;/var&gt; with those bindings in effect for calls to &lt;code&gt;rx-to-string&lt;/code&gt;.</source>
          <target state="translated">Оцените &lt;var&gt;bindings&lt;/var&gt; к списку привязок, как в &lt;code&gt;rx-let&lt;/code&gt; , и оцените &lt;var&gt;body&lt;/var&gt; с этими привязками, действующими для вызовов &lt;code&gt;rx-to-string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1b9783654f5c1c6a7ce0d518a3c7753257a3b28" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;expression&lt;/var&gt; to determine its value, &lt;var&gt;expval&lt;/var&gt;. Find the first clause in &lt;var&gt;clauses&lt;/var&gt; whose &lt;var&gt;pattern&lt;/var&gt; matches &lt;var&gt;expval&lt;/var&gt; and pass control to that clause&amp;rsquo;s &lt;var&gt;body-forms&lt;/var&gt;.</source>
          <target state="translated">Оцените &lt;var&gt;expression&lt;/var&gt; чтобы определить его значение, &lt;var&gt;expval&lt;/var&gt; . Найдите первое предложение в &lt;var&gt;clauses&lt;/var&gt; , &lt;var&gt;pattern&lt;/var&gt; соответствует &lt;var&gt;expval&lt;/var&gt; , и передайте управление &lt;var&gt;body-forms&lt;/var&gt; этого предложения .</target>
        </trans-unit>
        <trans-unit id="7acc8ce084889c04ea391fe80485a1141d6aba72" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;form&lt;/var&gt; and return its value, but inform coverage testing that &lt;var&gt;form&lt;/var&gt;&amp;rsquo;s value should always be the same.</source>
          <target state="translated">Оцените &lt;var&gt;form&lt;/var&gt; и верните ее значение, но сообщите при тестировании покрытия, что значение &lt;var&gt;form&lt;/var&gt; всегда должно быть одинаковым.</target>
        </trans-unit>
        <trans-unit id="a7a2ac4cbdbdccec325f508d425bb5f51d47991d" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;form&lt;/var&gt;, a Lisp expression, find the first &lt;var&gt;tag&lt;/var&gt; that matches it, and process its associated data layout specification &lt;var&gt;spec&lt;/var&gt;. Matching can occur in one of three ways:</source>
          <target state="translated">Оцените &lt;var&gt;form&lt;/var&gt; , выражение Лиспа, найдите первый соответствующий ему &lt;var&gt;tag&lt;/var&gt; и обработайте связанную с ним спецификацию &lt;var&gt;spec&lt;/var&gt; компоновки данных . Соответствие может происходить одним из трех способов:</target>
        </trans-unit>
        <trans-unit id="0a7f623e6b41e2cb816551108409e841a3217f90" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;form&lt;/var&gt;, a Lisp expression, for side-effect only. If the field name is specified, the value is bound to that field name.</source>
          <target state="translated">Оценивайте &lt;var&gt;form&lt;/var&gt; , выражение Лиспа, только для побочного эффекта. Если имя поля указано, значение привязано к этому имени поля.</target>
        </trans-unit>
        <trans-unit id="580ad2e14e2540c83fc1feadb6dbd64861f6a26e" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;form&lt;/var&gt;, informing coverage testing that &lt;var&gt;form&lt;/var&gt; should never return. If it ever does return, you get a run-time error.</source>
          <target state="translated">Оцените &lt;var&gt;form&lt;/var&gt; , сообщающую тестированию покрытия, что &lt;var&gt;form&lt;/var&gt; никогда не должна возвращаться. Если он когда-либо вернется, вы получите ошибку времени выполнения.</target>
        </trans-unit>
        <trans-unit id="bba9f3f9dd3f430bb8581d609be73110636f4819" translate="yes" xml:space="preserve">
          <source>Evaluate expression &lt;var&gt;exp&lt;/var&gt; in the context of Edebug itself (&lt;code&gt;eval-expression&lt;/code&gt;).</source>
          <target state="translated">Вычислить выражение &lt;var&gt;exp&lt;/var&gt; в контексте самого Edebug ( &lt;code&gt;eval-expression&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="853e1525137800a049ad2ae06d42889f8357df2d" translate="yes" xml:space="preserve">
          <source>Evaluate expression &lt;var&gt;exp&lt;/var&gt; in the context outside of Edebug (&lt;code&gt;edebug-eval-expression&lt;/code&gt;). That is, Edebug tries to minimize its interference with the evaluation.</source>
          <target state="translated">Вычислить выражение &lt;var&gt;exp&lt;/var&gt; в контексте вне Edebug ( &lt;code&gt;edebug-eval-expression&lt;/code&gt; ). То есть Edebug пытается минимизировать свое вмешательство в оценку.</target>
        </trans-unit>
        <trans-unit id="948bb7c2498b0b3612f9c4b4ad2d6630a5510c14" translate="yes" xml:space="preserve">
          <source>Evaluate the expression before point, in the context outside of Edebug (&lt;code&gt;edebug-eval-last-sexp&lt;/code&gt;).</source>
          <target state="translated">Оцените выражение перед точкой в ​​контексте вне Edebug ( &lt;code&gt;edebug-eval-last-sexp&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f35818f832835c32b6fe2916269847d4edffa88c" translate="yes" xml:space="preserve">
          <source>Evaluate the expression before point, in the context outside of Edebug (&lt;code&gt;edebug-eval-last-sexp&lt;/code&gt;). With the prefix argument of zero (</source>
          <target state="translated">Оцените выражение перед точкой в ​​контексте вне Edebug ( &lt;code&gt;edebug-eval-last-sexp&lt;/code&gt; ). Если аргумент префикса равен нулю (</target>
        </trans-unit>
        <trans-unit id="231434026214c54f3d660e740912041c85fdfd39" translate="yes" xml:space="preserve">
          <source>Evaluate the expression before point, in the outside context, and insert the value in the buffer (&lt;code&gt;edebug-eval-print-last-sexp&lt;/code&gt;). With prefix argument of zero (</source>
          <target state="translated">Оцените выражение перед точкой во внешнем контексте и вставьте значение в буфер ( &lt;code&gt;edebug-eval-print-last-sexp&lt;/code&gt; ). Если аргумент префикса равен нулю (</target>
        </trans-unit>
        <trans-unit id="78278047bd4e3ea382ac8201e93db09cc8442bfd" translate="yes" xml:space="preserve">
          <source>Evaluate the interactive &lt;var&gt;spec&lt;/var&gt; just like an interactive call to a function with such a spec would, and then return the corresponding list of arguments that was built. E.g., &lt;code&gt;(advice-eval-interactive-spec &quot;r\nP&quot;)&lt;/code&gt; will return a list of three elements, containing the boundaries of the region and the current prefix argument.</source>
          <target state="translated">Оцените интерактивную &lt;var&gt;spec&lt;/var&gt; же, как интерактивный вызов функции с такой спецификацией, а затем верните соответствующий список созданных аргументов. Например, &lt;code&gt;(advice-eval-interactive-spec &quot;r\nP&quot;)&lt;/code&gt; вернет список из трех элементов, содержащий границы области и текущий аргумент префикса.</target>
        </trans-unit>
        <trans-unit id="c6f78c01d4848979b5b7c68ca6a35ed06ed99671" translate="yes" xml:space="preserve">
          <source>Evaluates &lt;var&gt;expr&lt;/var&gt; to get &lt;var&gt;exprval&lt;/var&gt; and matches if &lt;var&gt;exprval&lt;/var&gt; matches &lt;var&gt;pattern&lt;/var&gt;. (It is called &lt;code&gt;let&lt;/code&gt; because &lt;var&gt;pattern&lt;/var&gt; can bind symbols to values using &lt;var&gt;symbol&lt;/var&gt;.)</source>
          <target state="translated">Оценивает &lt;var&gt;expr&lt;/var&gt; для получения &lt;var&gt;exprval&lt;/var&gt; и соответствует, если &lt;var&gt;exprval&lt;/var&gt; соответствует &lt;var&gt;pattern&lt;/var&gt; . (Он называется &lt;code&gt;let&lt;/code&gt; , потому что &lt;var&gt;pattern&lt;/var&gt; может связывать символы со значениями с помощью &lt;var&gt;symbol&lt;/var&gt; .)</target>
        </trans-unit>
        <trans-unit id="87d131c3ebb6c4f0c9cfdfe39480aa9ad4b173d6" translate="yes" xml:space="preserve">
          <source>Evaluating Macro Arguments Repeatedly</source>
          <target state="translated">Оценка макроаргументов Неоднократно</target>
        </trans-unit>
        <trans-unit id="24421971dc29c855ec4d191995ceb56afdbc89a7" translate="yes" xml:space="preserve">
          <source>Evaluating Macro Arguments in Expansion</source>
          <target state="translated">Оценка макроаргументов в расширении</target>
        </trans-unit>
        <trans-unit id="2f1f505e20fcaf20af4daf55e87911ae35f25363" translate="yes" xml:space="preserve">
          <source>Evaluating a form may also make changes that persist; these changes are called &lt;em&gt;side effects&lt;/em&gt;. An example of a form that produces a side effect is &lt;code&gt;(setq foo 1)&lt;/code&gt;.</source>
          <target state="translated">Оценка формы также может привести к сохранению изменений; эти изменения называются &lt;em&gt;побочными эффектами&lt;/em&gt; . Пример формы, вызывающей побочный эффект, - &lt;code&gt;(setq foo 1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d61c182c806f0223ae98daf21330e85c522ce20" translate="yes" xml:space="preserve">
          <source>Evaluating body form &lt;code&gt;(list&amp;nbsp;e-num&amp;nbsp;o-num)&lt;/code&gt; signals error. To distinguish between sub-patterns, you can use another symbol, identical in name in all sub-patterns but differing in value. Reworking the above example:</source>
          <target state="translated">Оценка формы тела &lt;code&gt;(list&amp;nbsp;e-num&amp;nbsp;o-num)&lt;/code&gt; сигнализирует об ошибке. Чтобы различать подшаблоны, вы можете использовать другой символ, идентичный по имени во всех подшаблонах, но отличающийся по значению. Переделывая приведенный выше пример:</target>
        </trans-unit>
        <trans-unit id="3ae5bcbdd398a604619aaaeb51aa862b049a9d28" translate="yes" xml:space="preserve">
          <source>Evaluating expressions within Edebug.</source>
          <target state="translated">Оценка выражений в Edebug.</target>
        </trans-unit>
        <trans-unit id="b918e0a59fc48b390462dde69196db2b275b9e40" translate="yes" xml:space="preserve">
          <source>Evaluating forms in the order they appear is the most common way control passes from one form to another. In some contexts, such as in a function body, this happens automatically. Elsewhere you must use a control structure construct to do this: &lt;code&gt;progn&lt;/code&gt;, the simplest control construct of Lisp.</source>
          <target state="translated">Оценка форм в том порядке, в котором они появляются, - это наиболее распространенный способ передачи управления от одной формы к другой. В некоторых контекстах, например в теле функции, это происходит автоматически. В другом месте для этого вы должны использовать конструкцию управляющей структуры: &lt;code&gt;progn&lt;/code&gt; , простейшую управляющую конструкцию Лиспа.</target>
        </trans-unit>
        <trans-unit id="1f02356dc5a053f01ce62f7ea573a8acd290011b" translate="yes" xml:space="preserve">
          <source>Evaluating the preceding forms and typing, in any order,</source>
          <target state="translated">Оценка предыдущих форм и набор текста в любом порядке,</target>
        </trans-unit>
        <trans-unit id="98fece8fcee58d0d1df092488c54d0e087d2e152" translate="yes" xml:space="preserve">
          <source>Evaluating this form in the buffer</source>
          <target state="translated">Оценка этой формы в буфере</target>
        </trans-unit>
        <trans-unit id="dcb390f68e265f8b977b81b6d105d4c08a08a6cb" translate="yes" xml:space="preserve">
          <source>Evaluating this form will usually display</source>
          <target state="translated">Оценка этой формы,как правило,отображает</target>
        </trans-unit>
        <trans-unit id="ff7513853508e7c6e3aa07908df2a450a026eb88" translate="yes" xml:space="preserve">
          <source>Evaluation</source>
          <target state="translated">Evaluation</target>
        </trans-unit>
        <trans-unit id="8ffcdfee5e7d21cf68ca5efead83afea63f2d8a0" translate="yes" xml:space="preserve">
          <source>Evaluation During Compilation</source>
          <target state="translated">Оценка во время компиляции</target>
        </trans-unit>
        <trans-unit id="799e512ae5e7e3f329c10fa852a14d221c737ffd" translate="yes" xml:space="preserve">
          <source>Evaluation List Buffer</source>
          <target state="translated">Буфер оценочного списка</target>
        </trans-unit>
        <trans-unit id="bb51b95ce0002371cb5ea49458cb059c57d93de5" translate="yes" xml:space="preserve">
          <source>Evaluation Notation</source>
          <target state="translated">Нотация оценки</target>
        </trans-unit>
        <trans-unit id="9f0ba46ba13ef1f25d98af8b19fda50c29d37fe0" translate="yes" xml:space="preserve">
          <source>Evaluation in textual order.</source>
          <target state="translated">Оценка в текстовом порядке.</target>
        </trans-unit>
        <trans-unit id="29381319eaf57dc01242c3c13cbf345a9abbd540" translate="yes" xml:space="preserve">
          <source>Evaluation in the scheme of things.</source>
          <target state="translated">Оценка в схеме вещей.</target>
        </trans-unit>
        <trans-unit id="9a643d0c7814edf34f1de3bc48ce98cb63357e3a" translate="yes" xml:space="preserve">
          <source>Evaluation is a recursive process, and evaluating a form often involves evaluating parts within that form. For instance, when you evaluate a &lt;em&gt;function call&lt;/em&gt; form such as &lt;code&gt;(car x)&lt;/code&gt;, Emacs first evaluates the argument (the subform &lt;code&gt;x&lt;/code&gt;). After evaluating the argument, Emacs &lt;em&gt;executes&lt;/em&gt; the function (&lt;code&gt;car&lt;/code&gt;), and if the function is written in Lisp, execution works by evaluating the &lt;em&gt;body&lt;/em&gt; of the function (in this example, however, &lt;code&gt;car&lt;/code&gt; is not a Lisp function; it is a primitive function implemented in C). See &lt;a href=&quot;functions#Functions&quot;&gt;Functions&lt;/a&gt;, for more information about functions and function calls.</source>
          <target state="translated">Оценка - это рекурсивный процесс, и оценка формы часто включает оценку частей внутри этой формы. Например, когда вы оцениваете форму &lt;em&gt;вызова функции,&lt;/em&gt; такую ​​как &lt;code&gt;(car x)&lt;/code&gt; , Emacs сначала оценивает аргумент (подчиненную форму &lt;code&gt;x&lt;/code&gt; ). После вычисления аргумента Emacs &lt;em&gt;выполняет&lt;/em&gt; функцию ( &lt;code&gt;car&lt;/code&gt; ), и если функция написана на Лиспе, выполнение работает путем вычисления &lt;em&gt;тела&lt;/em&gt; функции (однако в этом примере &lt;code&gt;car&lt;/code&gt; не является функцией Лиспа; это примитивная функция. реализовано в C). См. &lt;a href=&quot;functions#Functions&quot;&gt;Функции&lt;/a&gt; , для получения дополнительной информации о функциях и вызовах функций.</target>
        </trans-unit>
        <trans-unit id="d705973d35f23ad5de4704455dc325a9d4eb170b" translate="yes" xml:space="preserve">
          <source>Evaluation of Function Forms</source>
          <target state="translated">Оценка функциональных форм</target>
        </trans-unit>
        <trans-unit id="5ce5fe6e895057f002660fd14290d646f73a8b54" translate="yes" xml:space="preserve">
          <source>Evaluation of the expression &lt;code&gt;(indent-relative nil)&lt;/code&gt; produces the following:</source>
          <target state="translated">Оценка выражения &lt;code&gt;(indent-relative nil)&lt;/code&gt; дает следующее:</target>
        </trans-unit>
        <trans-unit id="7438669b48311d2f5b2747b9726e0fd9a708feb9" translate="yes" xml:space="preserve">
          <source>Evaluation of the macro call begins like evaluation of a function call except for one crucial difference: the macro arguments are the actual expressions appearing in the macro call. They are not evaluated before they are given to the macro definition. By contrast, the arguments of a function are results of evaluating the elements of the function call list.</source>
          <target state="translated">Оценка вызова макроса начинается так же,как и оценка вызова функции,за исключением одного принципиального отличия:макро-аргументами являются фактические выражения,появляющиеся в макро-вызовах.Они не оцениваются до того,как им дано определение макроса.Аргументы функции,напротив,являются результатами оценки элементов списка вызовов функции.</target>
        </trans-unit>
        <trans-unit id="90d64dd1d645e502be2e3c08d30a8451f928949d" translate="yes" xml:space="preserve">
          <source>Evaluation takes place in a context called the &lt;em&gt;environment&lt;/em&gt;, which consists of the current values and bindings of all Lisp variables (see &lt;a href=&quot;variables#Variables&quot;&gt;Variables&lt;/a&gt;).&lt;a href=&quot;#FOOT7&quot; name=&quot;DOCF7&quot;&gt;&lt;sup&gt;7&lt;/sup&gt;&lt;/a&gt; Whenever a form refers to a variable without creating a new binding for it, the variable evaluates to the value given by the current environment. Evaluating a form may also temporarily alter the environment by binding variables (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;).</source>
          <target state="translated">Оценка происходит в контексте, называемом &lt;em&gt;средой&lt;/em&gt; , который состоит из текущих значений и привязок всех переменных Lisp (см. &lt;a href=&quot;variables#Variables&quot;&gt;Переменные&lt;/a&gt; ). &lt;a href=&quot;#FOOT7&quot; name=&quot;DOCF7&quot;&gt;&lt;sup&gt;7&lt;/sup&gt;&lt;/a&gt; Всякий раз, когда форма обращается к переменной без создания для нее новой привязки, переменная оценивает значение, заданное текущей средой. Оценка формы также может временно изменить среду путем привязки переменных (см. &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Локальные переменные&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="89441f5a56c1206182a2982f8b08988bca88d4b7" translate="yes" xml:space="preserve">
          <source>Even after a window is deleted, it continues to exist as a Lisp object, until there are no more references to it. Window deletion can be reversed, by restoring a saved window configuration (see &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;).</source>
          <target state="translated">Даже после удаления окна оно продолжает существовать как объект Lisp до тех пор, пока на него не исчезнут ссылки. Удаление окна можно отменить, восстановив сохраненную конфигурацию окна (см. &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Конфигурации окна&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7f71e452bdad7f804fdef6528245b229c6279394" translate="yes" xml:space="preserve">
          <source>Even if &lt;var&gt;update&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;window-end&lt;/code&gt; does not attempt to scroll the display if point has moved off the screen, the way real redisplay would do. It does not alter the &lt;code&gt;window-start&lt;/code&gt; value. In effect, it reports where the displayed text will end if scrolling is not required. Note that the position it returns might be only partially visible.</source>
          <target state="translated">Даже если &lt;var&gt;update&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;window-end&lt;/code&gt; не пытается прокручивать отображение, если точка перемещается за пределы экрана, как это было бы при реальном повторном отображении. Это не изменяет значение начала &lt;code&gt;window-start&lt;/code&gt; . Фактически, он сообщает, где закончится отображаемый текст, если прокрутка не требуется. Обратите внимание, что возвращаемая позиция может быть видна только частично.</target>
        </trans-unit>
        <trans-unit id="85d0a91348426929c95737dda6bb8f3081e1106c" translate="yes" xml:space="preserve">
          <source>Even if you do not use &lt;code&gt;make-temp-file&lt;/code&gt; to create the temporary file, you should still use this variable to decide which directory to put the file in. However, if you expect the file to be small, you should use &lt;code&gt;small-temporary-file-directory&lt;/code&gt; first if that is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Даже если вы не используете &lt;code&gt;make-temp-file&lt;/code&gt; для создания временного файла, вы все равно должны использовать эту переменную, чтобы решить, в какой каталог поместить файл. Однако, если вы ожидаете, что файл будет небольшим, вы должны использовать &lt;code&gt;small-temporary-file-directory&lt;/code&gt; сначала, если это не &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="029e5f7d89c36acc32829e229969b89a54ce98c6" translate="yes" xml:space="preserve">
          <source>Even more powerful is &lt;code&gt;redraw-display&lt;/code&gt;:</source>
          <target state="translated">Еще более мощным является &lt;code&gt;redraw-display&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="432fa854d420fdda2cde68b3678fc84324738837" translate="yes" xml:space="preserve">
          <source>Even though the code letter doesn&amp;rsquo;t use a prompt string, you must follow it with a newline if it is not the last code character in the string.</source>
          <target state="translated">Несмотря на то, что кодовая буква не использует строку приглашения, вы должны следовать за ней с новой строкой, если это не последний кодовый символ в строке.</target>
        </trans-unit>
        <trans-unit id="85560a7fc3cf7e747fea690e0afc513f6846e642" translate="yes" xml:space="preserve">
          <source>Even though this is not a normal hook, you can use &lt;code&gt;add-hook&lt;/code&gt; and &lt;code&gt;remove-hook&lt;/code&gt; to manipulate the list. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">Несмотря на то, что это не обычная ловушка, вы можете использовать &lt;code&gt;add-hook&lt;/code&gt; и &lt;code&gt;remove-hook&lt;/code&gt; для управления списком. См. &lt;a href=&quot;hooks#Hooks&quot;&gt;Крючки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37dfaec8f5a98d8e1a6fff0d00abd7c86770b663" translate="yes" xml:space="preserve">
          <source>Even when lexical binding is enabled, certain variables will continue to be dynamically bound. These are called &lt;em&gt;special variables&lt;/em&gt;. Every variable that has been defined with &lt;code&gt;defvar&lt;/code&gt;, &lt;code&gt;defcustom&lt;/code&gt; or &lt;code&gt;defconst&lt;/code&gt; is a special variable (see &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Defining Variables&lt;/a&gt;). All other variables are subject to lexical binding.</source>
          <target state="translated">Даже если лексическая привязка включена, некоторые переменные будут продолжать динамически связываться. Они называются &lt;em&gt;специальными переменными&lt;/em&gt; . Каждая переменная, которая была определена с &lt;code&gt;defvar&lt;/code&gt; , &lt;code&gt;defcustom&lt;/code&gt; или &lt;code&gt;defconst&lt;/code&gt; , является специальной переменной (см. &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Определение переменных&lt;/a&gt; ). Все остальные переменные подлежат лексической привязке.</target>
        </trans-unit>
        <trans-unit id="1a444451a6bf3653aee29ba02a88a7a4286cfd3c" translate="yes" xml:space="preserve">
          <source>Event Examples</source>
          <target state="translated">Примеры мероприятий</target>
        </trans-unit>
        <trans-unit id="04a0457b5051e01d35a084a34427af2e0f933cb3" translate="yes" xml:space="preserve">
          <source>Events processed immediately and individually.</source>
          <target state="translated">События обрабатываются немедленно и индивидуально.</target>
        </trans-unit>
        <trans-unit id="dfd77cb42dcfdf913a9b2993fc51c80aff807ab1" translate="yes" xml:space="preserve">
          <source>Events read from this list are not normally added to the current command&amp;rsquo;s key sequence (as returned by, e.g., &lt;code&gt;this-command-keys&lt;/code&gt;), as the events will already have been added once as they were read for the first time. An element of the form &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;&lt;var&gt;event&lt;/var&gt;)&lt;/code&gt; forces &lt;var&gt;event&lt;/var&gt; to be added to the current command&amp;rsquo;s key sequence.</source>
          <target state="translated">События, считываемые из этого списка, обычно не добавляются к последовательности клавиш текущей команды (как возвращено, например, &lt;code&gt;this-command-keys&lt;/code&gt; ), так как события уже будут добавлены один раз, поскольку они были прочитаны в первый раз. Элемент формы &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;&lt;var&gt;event&lt;/var&gt;)&lt;/code&gt; заставляет &lt;var&gt;event&lt;/var&gt; быть добавленным к последовательности клавиш текущей команды.</target>
        </trans-unit>
        <trans-unit id="a4137474199ffe7887e4815646c84fc0febba656" translate="yes" xml:space="preserve">
          <source>Every button has a &lt;em&gt;button type&lt;/em&gt;, which defines default values for the button&amp;rsquo;s properties. Button types are arranged in a hierarchy, with specialized types inheriting from more general types, so that it&amp;rsquo;s easy to define special-purpose types of buttons for specific tasks.</source>
          <target state="translated">У каждой кнопки есть &lt;em&gt;тип кнопки&lt;/em&gt; , который определяет значения по умолчанию для свойств кнопки. Типы кнопок организованы в иерархию со специализированными типами, унаследованными от более общих типов, так что легко определять специальные типы кнопок для конкретных задач.</target>
        </trans-unit>
        <trans-unit id="dd5e71774a4e19fa74784e55cff6c970e9e3dc4c" translate="yes" xml:space="preserve">
          <source>Every coding system specifies a particular set of character code conversions, but the coding system &lt;code&gt;undecided&lt;/code&gt; is special: it leaves the choice unspecified, to be chosen heuristically for each file, based on the file&amp;rsquo;s data. The coding system &lt;code&gt;prefer-utf-8&lt;/code&gt; is like &lt;code&gt;undecided&lt;/code&gt;, but it prefers to choose &lt;code&gt;utf-8&lt;/code&gt; when possible.</source>
          <target state="translated">Каждая система кодирования определяет конкретный набор преобразований кода символов, но &lt;code&gt;undecided&lt;/code&gt; система кодирования является особенной: она оставляет выбор без указания, который нужно выбирать эвристически для каждого файла на основе данных файла. Система кодирования &lt;code&gt;prefer-utf-8&lt;/code&gt; похожа на &quot; &lt;code&gt;undecided&lt;/code&gt; , но по возможности предпочитает выбирать &lt;code&gt;utf-8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc949dcffe18c4c6f376934cb6d379922c86061f" translate="yes" xml:space="preserve">
          <source>Every dynamic module should export a C-callable function named &lt;code&gt;emacs_module_init&lt;/code&gt;, which Emacs will call as part of the call to &lt;code&gt;load&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; which loads the module. It should also export a symbol named &lt;code&gt;plugin_is_GPL_compatible&lt;/code&gt; to indicate that its code is released under the GPL or compatible license; Emacs will signal an error if your program tries to load modules that don&amp;rsquo;t export such a symbol.</source>
          <target state="translated">Каждый динамический модуль должен экспортировать функцию C-вызываемого по имени &lt;code&gt;emacs_module_init&lt;/code&gt; , который Emacs будет вызывать как часть вызова &lt;code&gt;load&lt;/code&gt; или &lt;code&gt;require&lt;/code&gt; , который загружает модуля. Он также должен экспортировать символ с именем &lt;code&gt;plugin_is_GPL_compatible&lt;/code&gt; , чтобы указать, что его код выпущен под GPL или совместимой лицензией; Emacs сообщит об ошибке, если ваша программа попытается загрузить модули, которые не экспортируют такой символ.</target>
        </trans-unit>
        <trans-unit id="5f7cc4e86bc2ba0c7806f0619e98d104b5a79730" translate="yes" xml:space="preserve">
          <source>Every error specifies an error message, one way or another. The message should state what is wrong (&amp;ldquo;File does not exist&amp;rdquo;), not how things ought to be (&amp;ldquo;File must exist&amp;rdquo;). The convention in Emacs Lisp is that error messages should start with a capital letter, but should not end with any sort of punctuation.</source>
          <target state="translated">Каждая ошибка так или иначе указывает на сообщение об ошибке. В сообщении должно быть указано, что не так (&amp;laquo;Файл не существует&amp;raquo;), а не то, как все должно быть (&amp;laquo;Файл должен существовать&amp;raquo;). По соглашению в Emacs Lisp сообщения об ошибках должны начинаться с заглавной буквы, но не должны заканчиваться какими-либо знаками препинания.</target>
        </trans-unit>
        <trans-unit id="79a80a71bc9146d2a7362b5b3df1e59c55f3d35d" translate="yes" xml:space="preserve">
          <source>Every event has an &lt;em&gt;event type&lt;/em&gt;, which classifies the event for key binding purposes. For a keyboard event, the event type equals the event value; thus, the event type for a character is the character, and the event type for a function key symbol is the symbol itself. For events that are lists, the event type is the symbol in the &lt;small&gt;CAR&lt;/small&gt; of the list. Thus, the event type is always a symbol or a character.</source>
          <target state="translated">Каждое событие имеет &lt;em&gt;тип события&lt;/em&gt; , который классифицирует событие для привязки клавиш. Для события клавиатуры тип события равен значению события; таким образом, тип события для символа - это символ, а тип события для символа функциональной клавиши - это сам символ. Для событий, которые являются списками, тип события - это символ в &lt;small&gt;CAR&lt;/small&gt; списка. Таким образом, тип события всегда является символом или знаком.</target>
        </trans-unit>
        <trans-unit id="2c51bf37d933cb478063153751844a975d4a56fa" translate="yes" xml:space="preserve">
          <source>Every frame has a &lt;code&gt;name&lt;/code&gt; parameter; this serves as the default for the frame title which window systems typically display at the top of the frame. You can specify a name explicitly by setting the &lt;code&gt;name&lt;/code&gt; frame property.</source>
          <target state="translated">У каждого кадра есть параметр &lt;code&gt;name&lt;/code&gt; ; это используется по умолчанию для заголовка фрейма, который оконные системы обычно отображают в верхней части фрейма. Вы можете указать имя явно, задав свойство рамки &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be6e27f4ca0ea0fc906e0595ff83ffbfacac687a" translate="yes" xml:space="preserve">
          <source>Every function added with &lt;code&gt;add-function&lt;/code&gt; can be accompanied by an association list of properties &lt;var&gt;props&lt;/var&gt;. Currently only two of those properties have a special meaning:</source>
          <target state="translated">Каждая функция , добавленная с &lt;code&gt;add-function&lt;/code&gt; может сопровождаться ассоциативным списком из свойств &lt;var&gt;props&lt;/var&gt; . В настоящее время только два из этих свойств имеют особое значение:</target>
        </trans-unit>
        <trans-unit id="17f75ba86886ee6d09b995da57d98781626b332d" translate="yes" xml:space="preserve">
          <source>Every major mode command begins by calling this function, which has the effect of switching to Fundamental mode and erasing most of the effects of the previous major mode. To ensure that this does its job, the variables that major modes set should not be marked permanent.</source>
          <target state="translated">Каждая команда основного режима начинается с вызова этой функции,которая имеет эффект перехода в Фундаментальный режим и стирает большинство эффектов предыдущего основного режима.Для того чтобы эта функция выполняла свою работу,переменные,которые устанавливаются мажорными режимами,не должны быть помечены как постоянные.</target>
        </trans-unit>
        <trans-unit id="55faf3a67a23e694ebebf47d4073204f615bb078" translate="yes" xml:space="preserve">
          <source>Every major mode command is supposed to run a normal hook called the &lt;em&gt;mode hook&lt;/em&gt; as one of the last steps of initialization. This makes it easy for a user to customize the behavior of the mode, by overriding the buffer-local variable assignments already made by the mode. Most minor mode functions also run a mode hook at the end. But hooks are used in other contexts too. For example, the hook &lt;code&gt;suspend-hook&lt;/code&gt; runs just before Emacs suspends itself (see &lt;a href=&quot;suspending-emacs#Suspending-Emacs&quot;&gt;Suspending Emacs&lt;/a&gt;).</source>
          <target state="translated">Каждая основная команда режима должна запускать обычную ловушку, называемую &lt;em&gt;ловушкой режима, в&lt;/em&gt; качестве одного из последних шагов инициализации. Это упрощает пользователю настройку поведения режима путем переопределения назначений переменных локальной буфера, уже сделанных режимом. Большинство второстепенных функций режима также запускают в конце обработчик режима. Но хуки используются и в других контекстах. Например, ловушка &lt;code&gt;suspend-hook&lt;/code&gt; запускается непосредственно перед приостановкой Emacs (см. &lt;a href=&quot;suspending-emacs#Suspending-Emacs&quot;&gt;Приостановление Emacs&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="672f6ad74690ed9ca85e43781c95747abb81b4ff" translate="yes" xml:space="preserve">
          <source>Every major mode command should finish by running the mode-independent normal hook &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt;, its mode hook, and the normal hook &lt;code&gt;after-change-major-mode-hook&lt;/code&gt;. It does this by calling &lt;code&gt;run-mode-hooks&lt;/code&gt;. If the major mode is a derived mode, that is if it calls another major mode (the parent mode) in its body, it should do this inside &lt;code&gt;delay-mode-hooks&lt;/code&gt; so that the parent won&amp;rsquo;t run these hooks itself. Instead, the derived mode&amp;rsquo;s call to &lt;code&gt;run-mode-hooks&lt;/code&gt; runs the parent&amp;rsquo;s mode hook too. See &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;.</source>
          <target state="translated">Каждая команда основного режима должна заканчиваться запуском независимой от режима обычной ловушки &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt; , ее ловушки режима и обычной ловушки &lt;code&gt;after-change-major-mode-hook&lt;/code&gt; . Он делает это путем вызова &lt;code&gt;run-mode-hooks&lt;/code&gt; . Если основной режим является производным режимом, то есть если он вызывает другой основной режим (родительский режим) в своем теле, он должен делать это внутри &lt;code&gt;delay-mode-hooks&lt;/code&gt; чтобы родитель сам не запускал эти перехватчики. Вместо этого вызов производного режима для &lt;code&gt;run-mode-hooks&lt;/code&gt; также запускает обработчик родительского режима. См. &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Соглашения об основном режиме&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c9653498e3b20cbe78e73bc0fdc2179df100df9" translate="yes" xml:space="preserve">
          <source>Every object belongs to at least one type. Objects of the same type have similar structures and may usually be used in the same contexts. Types can overlap, and objects can belong to two or more types. Consequently, we can ask whether an object belongs to a particular type, but not for &lt;em&gt;the&lt;/em&gt; type of an object.</source>
          <target state="translated">Каждый объект принадлежит хотя бы к одному типу. Объекты одного типа имеют похожие структуры и обычно могут использоваться в одном контексте. Типы могут перекрываться, а объекты могут принадлежать к двум или более типам. Следовательно, мы можем спросить , принадлежит ли объект к определенному типу, но не &lt;em&gt;в&lt;/em&gt; типе объекта.</target>
        </trans-unit>
        <trans-unit id="741e3f11f682581bbfa9d4ff31815dc0fd76e81e" translate="yes" xml:space="preserve">
          <source>Every prefix of &lt;var&gt;key&lt;/var&gt; must be a prefix key (i.e., bound to a keymap) or undefined; otherwise an error is signaled. If some prefix of &lt;var&gt;key&lt;/var&gt; is undefined, then &lt;code&gt;define-key&lt;/code&gt; defines it as a prefix key so that the rest of &lt;var&gt;key&lt;/var&gt; can be defined as specified.</source>
          <target state="translated">Каждый префикс &lt;var&gt;key&lt;/var&gt; должен быть префиксным ключом (т. Е. Привязанным к таблице ключей) или быть неопределенным; в противном случае сигнализируется ошибка. Если какой-то префикс &lt;var&gt;key&lt;/var&gt; не определен, то &lt;code&gt;define-key&lt;/code&gt; определяет его как префиксный ключ, так что остальная часть &lt;var&gt;key&lt;/var&gt; может быть определена, как указано.</target>
        </trans-unit>
        <trans-unit id="15e2f567ff3384e03f5cd1704a548718ea84af68" translate="yes" xml:space="preserve">
          <source>Every process also has a property list that you can use to store miscellaneous values associated with the process.</source>
          <target state="translated">Каждый процесс также имеет список свойств,который можно использовать для хранения различных значений,связанных с процессом.</target>
        </trans-unit>
        <trans-unit id="9348b58eef15df85250fac36cefc612c81471e8c" translate="yes" xml:space="preserve">
          <source>Every successful search sets the match data. Therefore, you should query the match data immediately after searching, before calling any other function that might perform another search. Alternatively, you may save and restore the match data (see &lt;a href=&quot;saving-match-data#Saving-Match-Data&quot;&gt;Saving Match Data&lt;/a&gt;) around the call to functions that could perform another search. Or use the functions that explicitly do not modify the match data; e.g., &lt;code&gt;string-match-p&lt;/code&gt;.</source>
          <target state="translated">Каждый успешный поиск устанавливает данные соответствия. Следовательно, вы должны запросить данные соответствия сразу после поиска, прежде чем вызывать любую другую функцию, которая может выполнить другой поиск. В качестве альтернативы вы можете сохранить и восстановить данные совпадений (см. &lt;a href=&quot;saving-match-data#Saving-Match-Data&quot;&gt;Сохранение данных совпадений&lt;/a&gt; ) вокруг вызова функций, которые могут выполнять другой поиск. Или используйте функции, которые явно не изменяют данные соответствия; например, &lt;code&gt;string-match-p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf2a849c7b6f42e5bfdaf89a7b78d380bfa41cce" translate="yes" xml:space="preserve">
          <source>Every warning has a textual message, which explains the problem for the user, and a &lt;em&gt;severity level&lt;/em&gt; which is a symbol. Here are the possible severity levels, in order of decreasing severity, and their meanings:</source>
          <target state="translated">Каждое предупреждение содержит текстовое сообщение, объясняющее проблему для пользователя, и &lt;em&gt;уровень серьезности,&lt;/em&gt; который обозначен символом. Вот возможные уровни серьезности в порядке уменьшения серьезности и их значения:</target>
        </trans-unit>
        <trans-unit id="b06efe9605d2c90f007fc010872332a9b840961c" translate="yes" xml:space="preserve">
          <source>Examining Buffer Contents</source>
          <target state="translated">Изучение содержимого буфера</target>
        </trans-unit>
        <trans-unit id="45de05e58932916bd458b107b6343320f7d62237" translate="yes" xml:space="preserve">
          <source>Examining Text Near Point</source>
          <target state="translated">Изучение текста рядом с точкой</target>
        </trans-unit>
        <trans-unit id="0ef602781fba6e74f50b4c878856bf68c5243da7" translate="yes" xml:space="preserve">
          <source>Examining Text Properties</source>
          <target state="translated">Рассмотрение текстовых свойств</target>
        </trans-unit>
        <trans-unit id="ffc4525aba86e7e1e32a1dab1de11593e19e93f5" translate="yes" xml:space="preserve">
          <source>Examining and changing text in buffers.</source>
          <target state="translated">Изучение и изменение текста в буферах.</target>
        </trans-unit>
        <trans-unit id="56da633be7707f1febca2c7cdb6540149025c566" translate="yes" xml:space="preserve">
          <source>Examining text in a general fashion.</source>
          <target state="translated">Изучение текста в общих чертах.</target>
        </trans-unit>
        <trans-unit id="7fcc7cce4f2ee556e73fd69281d3f8ec3d660954" translate="yes" xml:space="preserve">
          <source>Examining text in the vicinity of point.</source>
          <target state="translated">Изучение текста в непосредственной близости от точки.</target>
        </trans-unit>
        <trans-unit id="1810f73a9a2cf8433323cb7d681a9b461da5f4b3" translate="yes" xml:space="preserve">
          <source>Examining values of variables whose names are known only at run time.</source>
          <target state="translated">Изучение значений переменных,имена которых известны только во время выполнения.</target>
        </trans-unit>
        <trans-unit id="000637ace4c7e7e66d920473418818b732694e21" translate="yes" xml:space="preserve">
          <source>Example of using Ewoc.</source>
          <target state="translated">Пример использования Ewoc.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="42589f3ebaf21a748c64768b7db98352cce25abd" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;(= 42)&lt;/code&gt; In this example, the function is &lt;code&gt;=&lt;/code&gt;, &lt;var&gt;n&lt;/var&gt; is one, and the actual function call becomes: &lt;code&gt;(=&amp;nbsp;42&amp;nbsp;&lt;var&gt;expval&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">Пример: &lt;code&gt;(= 42)&lt;/code&gt; В этом примере функция равна &lt;code&gt;=&lt;/code&gt; , &lt;var&gt;n&lt;/var&gt; равно единице, а фактический вызов функции принимает следующий вид: &lt;code&gt;(=&amp;nbsp;42&amp;nbsp;&lt;var&gt;expval&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c88d90029667f9c1b344d2029b2e93ff4a4a6be8" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;(lambda (n) (= 42 n))&lt;/code&gt;</source>
          <target state="translated">Пример: &lt;code&gt;(lambda (n) (= 42 n))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ad16a009e86ef75fd3de8e2ad5f092a5fca883d" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;integerp&lt;/code&gt;</source>
          <target state="translated">Пример: &lt;code&gt;integerp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24b7ed5ddb195050534d0fab31090b455e27e26a" translate="yes" xml:space="preserve">
          <source>Example: Advantage Over &lt;code&gt;cl-case&lt;/code&gt;</source>
          <target state="translated">Пример: преимущество перед &lt;code&gt;cl-case&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ad7525bc727bae6ac350fa4ed968eaf0ca64284" translate="yes" xml:space="preserve">
          <source>Example: Reformulation with &lt;code&gt;pcase&lt;/code&gt;</source>
          <target state="translated">Пример: &lt;code&gt;pcase&lt;/code&gt; с помощью pcase</target>
        </trans-unit>
        <trans-unit id="7e097d720176885bcac5b1b5a1c82a40e2515d3c" translate="yes" xml:space="preserve">
          <source>Example: Using &lt;code&gt;and&lt;/code&gt;</source>
          <target state="translated">Пример: использование &lt;code&gt;and&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08d2dd1f8c7a3d92fa37946a0f154ebb3d4070aa" translate="yes" xml:space="preserve">
          <source>Examples in this manual indicate printed text with &amp;lsquo;</source>
          <target state="translated">Примеры в этом руководстве обозначают печатный текст со знаком '</target>
        </trans-unit>
        <trans-unit id="03eb4cb803b87579b4c90d6f201fca238d7fda68" translate="yes" xml:space="preserve">
          <source>Examples of Lisp code are formatted like this: &lt;code&gt;(list 1 2 3)&lt;/code&gt;. Names that represent metasyntactic variables, or arguments to a function being described, are formatted like this: &lt;var&gt;first-number&lt;/var&gt;.</source>
          <target state="translated">Примеры кода Lisp отформатированы следующим образом: &lt;code&gt;(list 1 2 3)&lt;/code&gt; . Имена, которые представляют метасинтаксические переменные или аргументы описываемой функции, имеют следующий формат: &lt;var&gt;first-number&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="9994e088a00d8a86302cb44924d52af48350bbaf" translate="yes" xml:space="preserve">
          <source>Examples of Using interactive</source>
          <target state="translated">Примеры использования интерактивных</target>
        </trans-unit>
        <trans-unit id="94acd1dafcec67a5c71f53fbacda5ace7493adce" translate="yes" xml:space="preserve">
          <source>Examples of catch and throw</source>
          <target state="translated">Примеры уловов и бросков</target>
        </trans-unit>
        <trans-unit id="924f7fb06848c12124360cb9472532a6fc0fd107" translate="yes" xml:space="preserve">
          <source>Examples of how to read interactive arguments.</source>
          <target state="translated">Примеры чтения интерактивных аргументов.</target>
        </trans-unit>
        <trans-unit id="0bf2185579aee4ae51b375504b158484ef051f7f" translate="yes" xml:space="preserve">
          <source>Examples of the lists for mouse events.</source>
          <target state="translated">Примеры списков событий мыши.</target>
        </trans-unit>
        <trans-unit id="0856690c7b7cf58d003b7c079a6b26fd94d77bca" translate="yes" xml:space="preserve">
          <source>Examples to explain the precedence of action functions.</source>
          <target state="translated">Примеры,объясняющие приоритет функций действия.</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="ea83b89ce972bd83b6987e662353810d2585216a" translate="yes" xml:space="preserve">
          <source>Except where noted, these functions also accept internal windows as arguments. Resizing an internal window causes its child windows to be resized to fit the same space.</source>
          <target state="translated">За исключением отмеченных случаев,эти функции также принимают в качестве аргументов внутренние окна.Изменение размера внутреннего окна приводит к тому,что его дочерние окна изменяют размер,чтобы соответствовать одному и тому же пространству.</target>
        </trans-unit>
        <trans-unit id="514c2777c3336bd01dec12407d7149cf0ec4b13b" translate="yes" xml:space="preserve">
          <source>Excess Close Parentheses</source>
          <target state="translated">Излишки Закрыть скобки</target>
        </trans-unit>
        <trans-unit id="4329f0811884f882f9183865d3de5482e9905a4d" translate="yes" xml:space="preserve">
          <source>Excess Open Parentheses</source>
          <target state="translated">Излишки Открытые скобки</target>
        </trans-unit>
        <trans-unit id="6996ee18eb4fe50e65e1865f16079fb735e17b31" translate="yes" xml:space="preserve">
          <source>Exclude minibuffer-only frames.</source>
          <target state="translated">Исключите рамки только для минибуфера.</target>
        </trans-unit>
        <trans-unit id="102dbcf894945a5c748834e8214903c96d894d18" translate="yes" xml:space="preserve">
          <source>Excursions</source>
          <target state="translated">Excursions</target>
        </trans-unit>
        <trans-unit id="a4832fdf2fe9ae09bb2f1073e96b0875872b2167" translate="yes" xml:space="preserve">
          <source>Execute &lt;code&gt;(require '&lt;var&gt;feature&lt;/var&gt;)&lt;/code&gt; when your saved customizations set the value of this item. &lt;var&gt;feature&lt;/var&gt; should be a symbol.</source>
          <target state="translated">Выполнить &lt;code&gt;(require '&lt;var&gt;feature&lt;/var&gt;)&lt;/code&gt; когда ваши сохраненные настройки устанавливают значение этого элемента. &lt;var&gt;feature&lt;/var&gt; должна быть символом.</target>
        </trans-unit>
        <trans-unit id="e05b25ea5b95dc62329004b221749a289d2253d2" translate="yes" xml:space="preserve">
          <source>Execute &lt;var&gt;body&lt;/var&gt; once for each element of &lt;var&gt;list&lt;/var&gt;, on each iteration performing a destructuring binding of variables in &lt;var&gt;pattern&lt;/var&gt; to the values of the corresponding subfields of the element of &lt;var&gt;list&lt;/var&gt;. The bindings are performed as if by &lt;code&gt;pcase-let&lt;/code&gt;. When &lt;var&gt;pattern&lt;/var&gt; is a simple variable, this ends up being equivalent to &lt;code&gt;dolist&lt;/code&gt; (see &lt;a href=&quot;iteration#Iteration&quot;&gt;Iteration&lt;/a&gt;).</source>
          <target state="translated">Выполнять &lt;var&gt;body&lt;/var&gt; один раз для каждого элемента &lt;var&gt;list&lt;/var&gt; , на каждой итерации выполняя деструктурирующую привязку переменных в &lt;var&gt;pattern&lt;/var&gt; к значениям соответствующих подполей элемента &lt;var&gt;list&lt;/var&gt; . &lt;code&gt;pcase-let&lt;/code&gt; выполняется как при использовании pcase-let . Когда &lt;var&gt;pattern&lt;/var&gt; является простым переменным, это заканчивается тем , что было эквивалентна &lt;code&gt;dolist&lt;/code&gt; (см &lt;a href=&quot;iteration#Iteration&quot;&gt;итерация&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f5bd2d24d188437ee6eefc900e5ffaee2dccd4a0" translate="yes" xml:space="preserve">
          <source>Execute &lt;var&gt;body&lt;/var&gt; pretending it does not modify the buffer. This includes checking whether the buffer&amp;rsquo;s file is locked (see &lt;a href=&quot;file-locks#File-Locks&quot;&gt;File Locks&lt;/a&gt;), running buffer modification hooks (see &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;), etc. Note that if &lt;var&gt;body&lt;/var&gt; actually modifies the buffer text, its undo data may become corrupted.</source>
          <target state="translated">Выполнить &lt;var&gt;body&lt;/var&gt; сделав вид, что оно не изменяет буфер. Это включает в себя проверку того, заблокирован ли &lt;a href=&quot;file-locks#File-Locks&quot;&gt;файл&lt;/a&gt; буфера (см. Блокировки файлов ), запуск обработчиков изменения буфера (см. &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Обработчики изменений&lt;/a&gt; ) и т. Д. Обратите внимание, что если &lt;var&gt;body&lt;/var&gt; фактически изменяет текст буфера, его данные отмены могут быть повреждены.</target>
        </trans-unit>
        <trans-unit id="cde77cd352d5005fa89463ae64af4ea589ac7e5d" translate="yes" xml:space="preserve">
          <source>Execute &lt;var&gt;body&lt;/var&gt;, but give up after &lt;var&gt;seconds&lt;/var&gt; seconds. If &lt;var&gt;body&lt;/var&gt; finishes before the time is up, &lt;code&gt;with-timeout&lt;/code&gt; returns the value of the last form in &lt;var&gt;body&lt;/var&gt;. If, however, the execution of &lt;var&gt;body&lt;/var&gt; is cut short by the timeout, then &lt;code&gt;with-timeout&lt;/code&gt; executes all the &lt;var&gt;timeout-forms&lt;/var&gt; and returns the value of the last of them.</source>
          <target state="translated">Казни &lt;var&gt;body&lt;/var&gt; , но сдайся через &lt;var&gt;seconds&lt;/var&gt; секунд. Если &lt;var&gt;body&lt;/var&gt; завершается до истечения времени, &lt;code&gt;with-timeout&lt;/code&gt; возвращает значение последней формы в &lt;var&gt;body&lt;/var&gt; . Если, однако, выполнение &lt;var&gt;body&lt;/var&gt; прерывается таймаутом, то &lt;code&gt;with-timeout&lt;/code&gt; выполняет все &lt;var&gt;timeout-forms&lt;/var&gt; и возвращает значение последней из них.</target>
        </trans-unit>
        <trans-unit id="fd13bad071682649e8d24fe41b2c2501dc4dc2ba" translate="yes" xml:space="preserve">
          <source>Executing &lt;code&gt;throw&lt;/code&gt; exits all Lisp constructs up to the matching &lt;code&gt;catch&lt;/code&gt;, including function calls. When binding constructs such as &lt;code&gt;let&lt;/code&gt; or function calls are exited in this way, the bindings are unbound, just as they are when these constructs exit normally (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;). Likewise, &lt;code&gt;throw&lt;/code&gt; restores the buffer and position saved by &lt;code&gt;save-excursion&lt;/code&gt; (see &lt;a href=&quot;excursions#Excursions&quot;&gt;Excursions&lt;/a&gt;), and the narrowing status saved by &lt;code&gt;save-restriction&lt;/code&gt;. It also runs any cleanups established with the &lt;code&gt;unwind-protect&lt;/code&gt; special form when it exits that form (see &lt;a href=&quot;cleanups#Cleanups&quot;&gt;Cleanups&lt;/a&gt;).</source>
          <target state="translated">Выполнение &lt;code&gt;throw&lt;/code&gt; завершает все конструкции Lisp вплоть до соответствующего &lt;code&gt;catch&lt;/code&gt; , включая вызовы функций. Когда конструкции привязки, такие как &lt;code&gt;let&lt;/code&gt; или вызовы функций, завершаются таким образом, привязки не связаны, как и при обычном выходе этих конструкций (см. &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Локальные переменные&lt;/a&gt; ). Аналогично, &lt;code&gt;throw&lt;/code&gt; восстанавливает буфер и позицию, сохраненные с помощью &lt;code&gt;save-excursion&lt;/code&gt; (см. &lt;a href=&quot;excursions#Excursions&quot;&gt;Экскурсии&lt;/a&gt; ), и статус сужения, сохраненный с помощью &lt;code&gt;save-restriction&lt;/code&gt; . Он также запускает все очистки, установленные с помощью специальной формы &lt;code&gt;unwind-protect&lt;/code&gt; от размотки, когда он выходит из этой формы (см. &lt;a href=&quot;cleanups#Cleanups&quot;&gt;Очистка&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d74bb2e60e4d3fb084ead764f7b15124485c059e" translate="yes" xml:space="preserve">
          <source>Executing a program can also try adding suffixes to the specified name:</source>
          <target state="translated">Выполняя программу,можно также попробовать добавить суффиксы к указанному имени:</target>
        </trans-unit>
        <trans-unit id="ebee3b642b4f0ebb9781d2c0a16802f1c2e57b30" translate="yes" xml:space="preserve">
          <source>Executing commands within Edebug can change the key sequence that would be returned by &lt;code&gt;this-command-keys&lt;/code&gt;, and there is no way to reset the key sequence from Lisp.</source>
          <target state="translated">Выполнение команд в Edebug может изменить последовательность клавиш, которая будет возвращена &lt;code&gt;this-command-keys&lt;/code&gt; , и нет способа сбросить последовательность клавиш из Lisp.</target>
        </trans-unit>
        <trans-unit id="1e481e9e93ff9fde3c47da4e2f9bd0a8821d11ef" translate="yes" xml:space="preserve">
          <source>Executing the function itself evaluates its body; this does involve symbol function indirection when calling &lt;code&gt;erste&lt;/code&gt;.</source>
          <target state="translated">Само выполнение функции оценивает ее тело; это включает косвенное обращение к символьной функции при вызове &lt;code&gt;erste&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14e5e55e3c46fc56ef37e001f4826a1009a88b69" translate="yes" xml:space="preserve">
          <source>Execution modes, stopping more or less often.</source>
          <target state="translated">Режимы исполнения,более или менее частые остановки.</target>
        </trans-unit>
        <trans-unit id="97b908e56c8affb6f198ab184ff139df70822588" translate="yes" xml:space="preserve">
          <source>Exit the debugger and continue execution. This resumes execution of the program as if the debugger had never been entered (aside from any side-effects that you caused by changing variable values or data structures while inside the debugger).</source>
          <target state="translated">Выходите из отладчика и продолжайте выполнение.Это возобновит выполнение программы,как если бы отладчик никогда не был введен (за исключением любых побочных эффектов,вызванных изменением значений переменных или структур данных во время работы внутри отладчика).</target>
        </trans-unit>
        <trans-unit id="4da4762e60930fee76bfddad9df8fddb66bc010b" translate="yes" xml:space="preserve">
          <source>Exited</source>
          <target state="translated">Exited</target>
        </trans-unit>
        <trans-unit id="8999a6a28c3f6fde180e5adb92439670504be038" translate="yes" xml:space="preserve">
          <source>Exiting Emacs irreversibly.</source>
          <target state="translated">Выход из Эмака безвозвратно.</target>
        </trans-unit>
        <trans-unit id="e40779f9dbf7b9155821dddbd56974aefa46b434" translate="yes" xml:space="preserve">
          <source>Exiting Emacs reversibly.</source>
          <target state="translated">Выход из Эмака обратим.</target>
        </trans-unit>
        <trans-unit id="2a714eb1094cc86f04db1a930bf20e2cc4723b6e" translate="yes" xml:space="preserve">
          <source>Expand all the forms abbreviated with &amp;ldquo;...&amp;rdquo; in the frame at point.</source>
          <target state="translated">Разверните все формы, обозначенные аббревиатурой &amp;laquo;...&amp;raquo;, во фрейме в точке.</target>
        </trans-unit>
        <trans-unit id="c39165889ae82de3f3543cbdf660f6e4a5da6438" translate="yes" xml:space="preserve">
          <source>Expanding</source>
          <target state="translated">Expanding</target>
        </trans-unit>
        <trans-unit id="4c742e3f2d52d838216750f0562eaf969f0a39f0" translate="yes" xml:space="preserve">
          <source>Expansion of a Macro Call</source>
          <target state="translated">Расширение макрозвонка</target>
        </trans-unit>
        <trans-unit id="6ca590c42a4d990c1e2fa2ffaa567f1164a66dcf" translate="yes" xml:space="preserve">
          <source>Explanation of terms we use in this manual.</source>
          <target state="translated">Пояснения к терминам,которые мы используем в этом руководстве.</target>
        </trans-unit>
        <trans-unit id="5fdf6d25bdf76c29c879fee3e893bfe3162da24c" translate="yes" xml:space="preserve">
          <source>Explicit Encoding and Decoding</source>
          <target state="translated">Явное кодирование и декодирование</target>
        </trans-unit>
        <trans-unit id="2bdf1bdb932b1c4ad868d411e4ded7400f765e63" translate="yes" xml:space="preserve">
          <source>Explicit Entry to the Debugger</source>
          <target state="translated">Прямой вход в отладчик</target>
        </trans-unit>
        <trans-unit id="9a007c1d995b6d8073a9bc77022ebe07a3a0f5f8" translate="yes" xml:space="preserve">
          <source>Explicit Nonlocal Exits: catch and throw</source>
          <target state="translated">Явные неместные выходы:ловить и бросать.</target>
        </trans-unit>
        <trans-unit id="1ad1ce0b3e7833459b128fbf4ce571d7a46890bd" translate="yes" xml:space="preserve">
          <source>Explicit control structures make possible an order of execution other than sequential.</source>
          <target state="translated">Явные структуры управления делают возможным порядок выполнения,отличный от последовательного.</target>
        </trans-unit>
        <trans-unit id="088345198c12c42185dc050f609431188d5e2c78" translate="yes" xml:space="preserve">
          <source>Explicitly displaying text in the echo area.</source>
          <target state="translated">Явное отображение текста в области эха.</target>
        </trans-unit>
        <trans-unit id="a689623f299989df674feba29e4f28665efe9319" translate="yes" xml:space="preserve">
          <source>Explicitly rounding floating-point numbers.</source>
          <target state="translated">Явное округление чисел с плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="6efc43ab25f6f82b115afa6cd6647daff5d515b8" translate="yes" xml:space="preserve">
          <source>Expression prefixes: &amp;lsquo;</source>
          <target state="translated">Префиксы выражений: '</target>
        </trans-unit>
        <trans-unit id="3ded6265cc857e0826a7951dc567e485d9688f10" translate="yes" xml:space="preserve">
          <source>Expressions whose values are displayed each time you enter Edebug.</source>
          <target state="translated">Выражения,значения которых отображаются каждый раз при входе в Edebug.</target>
        </trans-unit>
        <trans-unit id="828741415e596cc1348b75ea71ac729d3cf9801c" translate="yes" xml:space="preserve">
          <source>Extended File Attributes</source>
          <target state="translated">Расширенные атрибуты файла</target>
        </trans-unit>
        <trans-unit id="faef1b43d6020947447489d47a97113bf052f09e" translate="yes" xml:space="preserve">
          <source>Extended Menu Items</source>
          <target state="translated">Расширенные пункты меню</target>
        </trans-unit>
        <trans-unit id="79403e6568f432fc5806885c7a96d9f746bf269e" translate="yes" xml:space="preserve">
          <source>Extended file attributes for access control.</source>
          <target state="translated">Расширенные атрибуты файлов для контроля доступа.</target>
        </trans-unit>
        <trans-unit id="c69f5fcd1e924179660b0f849a1edfca16c76ff3" translate="yes" xml:space="preserve">
          <source>Extending pcase</source>
          <target state="translated">Расширяющий карман</target>
        </trans-unit>
        <trans-unit id="dcbd361d67335f13d72aa72e80e9b5074251cb85" translate="yes" xml:space="preserve">
          <source>Extending the concept of variables.</source>
          <target state="translated">Расширение понятия переменных.</target>
        </trans-unit>
        <trans-unit id="f26cbcbfd3a60f50e69a2203bf39a117b6f7edba" translate="yes" xml:space="preserve">
          <source>External Border</source>
          <target state="translated">Внешняя граница</target>
        </trans-unit>
        <trans-unit id="559369521d2b02178eca19a89ab3af270c529587" translate="yes" xml:space="preserve">
          <source>External borders don&amp;rsquo;t exist on text terminal frames. For graphical frames, their display can be suppressed by setting the &lt;code&gt;override-redirect&lt;/code&gt; or &lt;code&gt;undecorated&lt;/code&gt; frame parameter (see &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Management Parameters&lt;/a&gt;).</source>
          <target state="translated">На фреймах текстового терминала отсутствуют внешние границы. Для графических фреймов их отображение можно подавить, установив параметр &amp;laquo; &lt;code&gt;override-redirect&lt;/code&gt; или &amp;laquo; &lt;code&gt;undecorated&lt;/code&gt; фрейм&amp;raquo; (см. &amp;laquo; &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Параметры управления&amp;raquo;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c0b99104aa13dc6a254700daf612011b95c664e0" translate="yes" xml:space="preserve">
          <source>Extra characters used in variable and command names along with word constituents. Examples include the characters &amp;lsquo;</source>
          <target state="translated">Дополнительные символы, используемые в именах переменных и команд вместе с составляющими слова. Примеры включают символы</target>
        </trans-unit>
        <trans-unit id="11971c4e6df4236f6e2a88fa65abcd7f3fc95e4e" translate="yes" xml:space="preserve">
          <source>Extra options affecting how buffers are displayed.</source>
          <target state="translated">Дополнительные опции,влияющие на отображение буферов.</target>
        </trans-unit>
        <trans-unit id="62794c2ea3b2113cb2c52f416844469a23bd3da4" translate="yes" xml:space="preserve">
          <source>Extracting the pieces of a list.</source>
          <target state="translated">Извлечение кусочков списка.</target>
        </trans-unit>
        <trans-unit id="e1a1e9d545fa6732404318124fd97eb48df0b89c" translate="yes" xml:space="preserve">
          <source>Extraction of multiple values stored in an object is known as &lt;em&gt;destructuring&lt;/em&gt;. Using &lt;code&gt;pcase&lt;/code&gt; patterns allows to perform &lt;em&gt;destructuring binding&lt;/em&gt;, which is similar to a local binding (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;), but gives values to multiple elements of a variable by extracting those values from an object of compatible structure.</source>
          <target state="translated">Извлечение нескольких значений, хранящихся в объекте, называется &lt;em&gt;деструктуризацией&lt;/em&gt; . Использование шаблонов &lt;code&gt;pcase&lt;/code&gt; позволяет выполнять &lt;em&gt;деструктурирующую привязку&lt;/em&gt; , которая похожа на локальную привязку (см. &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Локальные переменные&lt;/a&gt; ), но дает значения нескольким элементам переменной путем извлечения этих значений из объекта совместимой структуры.</target>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="88bfad9cfffeafd299a44d4daf979d57419a2621" translate="yes" xml:space="preserve">
          <source>F1</source>
          <target state="translated">F1</target>
        </trans-unit>
        <trans-unit id="b9c7614215c5bf3f22e0dd38d8c9a197b4432459" translate="yes" xml:space="preserve">
          <source>F11</source>
          <target state="translated">F11</target>
        </trans-unit>
        <trans-unit id="be3d820f356c0030f50fa290b419eb634ad7d08d" translate="yes" xml:space="preserve">
          <source>F3</source>
          <target state="translated">F3</target>
        </trans-unit>
        <trans-unit id="0b240bd1aef549aae787777e72c514ed278b4c9e" translate="yes" xml:space="preserve">
          <source>FIXME</source>
          <target state="translated">FIXME</target>
        </trans-unit>
        <trans-unit id="feab40e1fca77c7360ccca1481bb8ba5f919ce3a" translate="yes" xml:space="preserve">
          <source>FOO</source>
          <target state="translated">FOO</target>
        </trans-unit>
        <trans-unit id="d6cb99b2aaf9660672f786dca68ea38e17d6e0b1" translate="yes" xml:space="preserve">
          <source>FOO:</source>
          <target state="translated">FOO:</target>
        </trans-unit>
        <trans-unit id="e106961d692013d7e77bf986ab4ba215e15a1efd" translate="yes" xml:space="preserve">
          <source>Face Attribute Functions</source>
          <target state="translated">Функции атрибута лица</target>
        </trans-unit>
        <trans-unit id="654864cf31f7692b390d6c92e9df53f991dd3be1" translate="yes" xml:space="preserve">
          <source>Face Attributes</source>
          <target state="translated">Атрибуты лица</target>
        </trans-unit>
        <trans-unit id="d5e1cfea3023a6e8aa7a2742fbea8b8f08c0752f" translate="yes" xml:space="preserve">
          <source>Face Remapping</source>
          <target state="translated">Удаление лиц</target>
        </trans-unit>
        <trans-unit id="fdbb8fef1941523eb44ab9acd11a20e97debad36" translate="yes" xml:space="preserve">
          <source>Faces</source>
          <target state="translated">Faces</target>
        </trans-unit>
        <trans-unit id="819ff0ee4f320c1983239b6c9cbfadace5356c75" translate="yes" xml:space="preserve">
          <source>Faces for Font Lock</source>
          <target state="translated">Лица для шрифтового замка</target>
        </trans-unit>
        <trans-unit id="f16ad3d9b8a81e142c7177a85f1722ea3c8ecb24" translate="yes" xml:space="preserve">
          <source>Faces that are defined by default.</source>
          <target state="translated">Лица,которые определены по умолчанию.</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="b332d3834aba40f3287a2b6bec41f4773cb1f1e7" translate="yes" xml:space="preserve">
          <source>Features for controlling the screen display.</source>
          <target state="translated">Функции для управления экранным дисплеем.</target>
        </trans-unit>
        <trans-unit id="b9ae81895850ce8ada8529e0f5da57ea2c7986e1" translate="yes" xml:space="preserve">
          <source>Fields are added in a most to least significant order, so if the adjustment described above happens, it happens before adding days, hours, minutes or seconds.</source>
          <target state="translated">Поля добавляются в наиболее или менее значительном порядке,поэтому если корректировка,описанная выше,происходит до добавления дней,часов,минут или секунд.</target>
        </trans-unit>
        <trans-unit id="84a27191b9d9fa3be49740ecbafdc1df51bea9cb" translate="yes" xml:space="preserve">
          <source>File Attributes</source>
          <target state="translated">Атрибуты файла</target>
        </trans-unit>
        <trans-unit id="634af05bec00faebb5b301b9d511d8f08119591f" translate="yes" xml:space="preserve">
          <source>File Format Conversion</source>
          <target state="translated">Преобразование формата файла</target>
        </trans-unit>
        <trans-unit id="394286763d09a40da21d7cdc6d10dc5ed278d4c0" translate="yes" xml:space="preserve">
          <source>File Local Variables</source>
          <target state="translated">Файл Локальные переменные</target>
        </trans-unit>
        <trans-unit id="6945b1782b048888e914cc457381bec7925fce8d" translate="yes" xml:space="preserve">
          <source>File Locks</source>
          <target state="translated">Файловые замки</target>
        </trans-unit>
        <trans-unit id="8b6acea7a6a01e7f88e54a9260ec2af3a5357533" translate="yes" xml:space="preserve">
          <source>File Name Completion</source>
          <target state="translated">Имя файла Завершение</target>
        </trans-unit>
        <trans-unit id="7451ac3d98ad2761e27cb7d7298ba6cd2cd31381" translate="yes" xml:space="preserve">
          <source>File Name Components</source>
          <target state="translated">Имя файла Компоненты</target>
        </trans-unit>
        <trans-unit id="6e75764f6be72d64faaa7cd05889744083a1ffec" translate="yes" xml:space="preserve">
          <source>File Names</source>
          <target state="translated">Имена файлов</target>
        </trans-unit>
        <trans-unit id="30fb1a4fd7f24b635466fa19633b5ffc1d1351f4" translate="yes" xml:space="preserve">
          <source>File local variables</source>
          <target state="translated">Файл локальные переменные</target>
        </trans-unit>
        <trans-unit id="142ecb52f059b39536000c672c2af8e5e50fb47f" translate="yes" xml:space="preserve">
          <source>File mode specification error</source>
          <target state="translated">Ошибка спецификации режима файлов</target>
        </trans-unit>
        <trans-unit id="41c49533612d0c04bef768e396e0a06eacbe8ed3" translate="yes" xml:space="preserve">
          <source>File notifications.</source>
          <target state="translated">Файловые уведомления.</target>
        </trans-unit>
        <trans-unit id="abef62b2302277610c559dcbd2657a6f25e0cf68" translate="yes" xml:space="preserve">
          <source>File passwd is write-protected; try to save anyway? (yes or no)</source>
          <target state="translated">Файл passwd защищен от записи;все равно попробуйте сохранить? (да или нет)</target>
        </trans-unit>
        <trans-unit id="0fa423ea7a3de0b12d21f012b22a7141624872d0" translate="yes" xml:space="preserve">
          <source>File sizes, modification times, etc.</source>
          <target state="translated">Размеры файлов,время модификации и т.д.</target>
        </trans-unit>
        <trans-unit id="33af16411a6a89fe3e0022fccba0ce8d9a48c5c8" translate="yes" xml:space="preserve">
          <source>Filenames containing &amp;lsquo;</source>
          <target state="translated">Имена файлов, содержащие '</target>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="b82fb55310cb97d45bdeb83d3caf9294bba6b7ec" translate="yes" xml:space="preserve">
          <source>Files and Secondary Storage</source>
          <target state="translated">Файлы и вторичное хранение</target>
        </trans-unit>
        <trans-unit id="2b3e8a94ab0ab81e327337eb1fcbbfd8f921ecea" translate="yes" xml:space="preserve">
          <source>Files are generally referred to by their names, in Emacs as elsewhere. File names in Emacs are represented as strings. The functions that operate on a file all expect a file name argument.</source>
          <target state="translated">Файлы,как правило,называются их именами,в Emacs,как и в других местах.Имена файлов в Emacs представлены в виде строк.Все функции,работающие с файлом,ожидают аргументации имени файла.</target>
        </trans-unit>
        <trans-unit id="98325be45e57b01ea42841fb2dc63e31875877c1" translate="yes" xml:space="preserve">
          <source>Filling</source>
          <target state="translated">Filling</target>
        </trans-unit>
        <trans-unit id="8bfde07209f239be1569e3c825b6748d05c9a119" translate="yes" xml:space="preserve">
          <source>Filter functions accept output from the process.</source>
          <target state="translated">Функции фильтрации принимают выходные данные процесса.</target>
        </trans-unit>
        <trans-unit id="9f75d8a170ee3ebac199d6e0e7cd5fd77da7cf96" translate="yes" xml:space="preserve">
          <source>Filters can get unibyte or multibyte strings.</source>
          <target state="translated">Фильтры могут получать однобайтовые или многобайтовые строки.</target>
        </trans-unit>
        <trans-unit id="aba4d2683351badc888e236a277c1fd78263060b" translate="yes" xml:space="preserve">
          <source>Finalizer Type</source>
          <target state="translated">Тип финализатора</target>
        </trans-unit>
        <trans-unit id="a8947680fe3863262f3ab5559d9bd7d760ac2651" translate="yes" xml:space="preserve">
          <source>Finally you can toggle the display of scroll bars on all frames by customizing the variables &lt;code&gt;scroll-bar-mode&lt;/code&gt; and &lt;code&gt;horizontal-scroll-bar-mode&lt;/code&gt;.</source>
          <target state="translated">Наконец, вы можете переключить отображение полос прокрутки на всех кадрах, настроив переменные &lt;code&gt;scroll-bar-mode&lt;/code&gt; и &lt;code&gt;horizontal-scroll-bar-mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74d402c732ad516d11a21de33899809c80cdeff8" translate="yes" xml:space="preserve">
          <source>Finally, &lt;var&gt;function-list&lt;/var&gt; is a list of functions for the mode command to call for additional setup. It calls these functions just before it runs the mode hook variable &lt;code&gt;&lt;var&gt;mode&lt;/var&gt;-hook&lt;/code&gt;.</source>
          <target state="translated">Наконец, &lt;var&gt;function-list&lt;/var&gt; - это список функций, которые команда режима должна вызывать для дополнительной настройки. Он вызывает эти функции непосредственно перед &lt;code&gt;&lt;var&gt;mode&lt;/var&gt;-hook&lt;/code&gt; переменной обработчика &lt;var&gt;mode&lt;/var&gt; -hook .</target>
        </trans-unit>
        <trans-unit id="c55ab6d71a9ad314809822d8b9060ed2f5013cf1" translate="yes" xml:space="preserve">
          <source>Finally, Emacs runs a normal hook that generalizes the behavior of &lt;code&gt;window-state-change-functions&lt;/code&gt;.</source>
          <target state="translated">Наконец, Emacs запускает обычную ловушку, которая обобщает поведение &lt;code&gt;window-state-change-functions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="408f1373e50d76e430a57c26aa76f5dbd3e9c977" translate="yes" xml:space="preserve">
          <source>Finally, a newline can have a &lt;code&gt;line-spacing&lt;/code&gt; text or overlay property that can enlarge the default frame line spacing and the buffer local &lt;code&gt;line-spacing&lt;/code&gt; variable: if its value is larger than the buffer or frame defaults, that larger value is used instead, for the display line ending in that newline.</source>
          <target state="translated">Наконец, новая &lt;code&gt;line-spacing&lt;/code&gt; может иметь свойство межстрочного интервала текста или наложения, которое может увеличивать межстрочный интервал между кадрами по умолчанию и локальную переменную &lt;code&gt;line-spacing&lt;/code&gt; буфера : если ее значение больше, чем значения по умолчанию для буфера или кадра, вместо этого используется это большее значение, для строки дисплея, заканчивающейся этой новой строкой.</target>
        </trans-unit>
        <trans-unit id="0a8ca0bbf8ca5c11ee4c822e14ac4b1cc54e98f6" translate="yes" xml:space="preserve">
          <source>Finally, and optionally, the &lt;code&gt;jsonrpc-connection&lt;/code&gt; subclass should implement the &lt;code&gt;jsonrpc-shutdown&lt;/code&gt; and &lt;code&gt;jsonrpc-running-p&lt;/code&gt; methods if these concepts apply to the transport. If they do, then any system resources (e.g. processes, timers, etc.) used to listen for messages on the wire should be released in &lt;code&gt;jsonrpc-shutdown&lt;/code&gt;, i.e. they should only be needed while &lt;code&gt;jsonrpc-running-p&lt;/code&gt; is non-nil.</source>
          <target state="translated">Наконец, необязательно, подкласс &lt;code&gt;jsonrpc-connection&lt;/code&gt; должен реализовывать &lt;code&gt;jsonrpc-shutdown&lt;/code&gt; и &lt;code&gt;jsonrpc-running-p&lt;/code&gt; , если эти концепции применимы к транспорту. Если это так, то любые системные ресурсы (например, процессы, таймеры и т. Д.), Используемые для прослушивания сообщений в сети, должны быть освобождены в &lt;code&gt;jsonrpc-shutdown&lt;/code&gt; , то есть они должны быть необходимы только тогда, когда &lt;code&gt;jsonrpc-running-p&lt;/code&gt; не равно нулю.</target>
        </trans-unit>
        <trans-unit id="88b4ea5530a97f6f8fc1e3e4b10461e76b40fcec" translate="yes" xml:space="preserve">
          <source>Finally, here is an example of a stream that is a function, named &lt;code&gt;useless-stream&lt;/code&gt;. Before we use the stream, we initialize the variable &lt;code&gt;useless-list&lt;/code&gt; to a list of characters. Then each call to the function &lt;code&gt;useless-stream&lt;/code&gt; obtains the next character in the list or unreads a character by adding it to the front of the list.</source>
          <target state="translated">Наконец, вот пример потока, который является функцией с именем &lt;code&gt;useless-stream&lt;/code&gt; . Перед тем как использовать поток, мы инициализируем переменную &lt;code&gt;useless-list&lt;/code&gt; списком символов. Затем каждый вызов функции &lt;code&gt;useless-stream&lt;/code&gt; получает следующий символ в списке или не считывает символ, добавляя его в начало списка.</target>
        </trans-unit>
        <trans-unit id="e17f52480988f71b0601586b82009b1463b6a040" translate="yes" xml:space="preserve">
          <source>Finally, here is the major mode command for Lisp mode:</source>
          <target state="translated">Наконец,вот основная команда режима для режима Lisp:</target>
        </trans-unit>
        <trans-unit id="860e5e3571f2ad47db3311a1348d075142701f7d" translate="yes" xml:space="preserve">
          <source>Finally, in many cases some conflicts will remain despite all efforts to restructure the grammar. Do not despair: while the parser cannot be made more clever, you can make the lexer as smart as you want. So, the solution is then to look at the tokens involved in the conflict and to split one of those tokens into 2 (or more) different tokens. E.g., if the grammar needs to distinguish between two incompatible uses of the token &lt;code&gt;&quot;begin&quot;&lt;/code&gt;, make the lexer return different tokens (say &lt;code&gt;&quot;begin-fun&quot;&lt;/code&gt; and &lt;code&gt;&quot;begin-plain&quot;&lt;/code&gt;) depending on which kind of &lt;code&gt;&quot;begin&quot;&lt;/code&gt; it finds. This pushes the work of distinguishing the different cases to the lexer, which will thus have to look at the surrounding text to find ad-hoc clues.</source>
          <target state="translated">Наконец, во многих случаях некоторые конфликты останутся, несмотря на все усилия по реструктуризации грамматики. Не отчаивайтесь: хотя синтаксический анализатор нельзя сделать более умным, вы можете сделать лексер настолько умным, насколько захотите. Итак, решение состоит в том, чтобы посмотреть на токены, участвующие в конфликте, и разделить один из этих токенов на 2 (или более) разных токена. Например, если грамматике нужно различать два несовместимых использования токена &lt;code&gt;&quot;begin&quot;&lt;/code&gt; , заставьте лексический анализатор возвращать разные токены (скажем, &lt;code&gt;&quot;begin-fun&quot;&lt;/code&gt; и &lt;code&gt;&quot;begin-plain&quot;&lt;/code&gt; ) в зависимости от того, какой вид &lt;code&gt;&quot;begin&quot;&lt;/code&gt; он находит. Это подталкивает лексера к работе по различению различных случаев, который, таким образом, должен будет смотреть на окружающий текст, чтобы найти специальные подсказки.</target>
        </trans-unit>
        <trans-unit id="9a2f5d53696c836d007bdbba2afcc8145ab8a69a" translate="yes" xml:space="preserve">
          <source>Finally, in the following example, only two of the three possible matches pass the predicate &lt;code&gt;test&lt;/code&gt; (the string &amp;lsquo;</source>
          <target state="translated">Наконец, в следующем примере только два из трех возможных совпадений проходят &lt;code&gt;test&lt;/code&gt; предиката (строка '</target>
        </trans-unit>
        <trans-unit id="85ffc0c0143744d4e2b8094b05c47afef3598d23" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;svg-image&lt;/code&gt; takes an SVG object as its argument and returns an image object suitable for use in functions like &lt;code&gt;insert-image&lt;/code&gt;.</source>
          <target state="translated">Наконец, &lt;code&gt;svg-image&lt;/code&gt; принимает объект SVG в качестве аргумента и возвращает объект изображения, пригодный для использования в таких функциях, как &lt;code&gt;insert-image&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="324c545c922d562bc07d2165d05858f4c2204358" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;em&gt;global keymap&lt;/em&gt; contains key bindings that are defined regardless of the current buffer, such as</source>
          <target state="translated">Наконец, &lt;em&gt;глобальная раскладка&lt;/em&gt; клавиатуры содержит привязки клавиш, которые определены независимо от текущего буфера, например</target>
        </trans-unit>
        <trans-unit id="d5747d76af22cde76df111b9171bbfe1ef0d9121" translate="yes" xml:space="preserve">
          <source>Finally, the last part of the pattern matches any additional whitespace beyond the minimum needed to end a sentence.</source>
          <target state="translated">Наконец,последняя часть шаблона совпадает с любыми дополнительными пробелами сверх минимума,необходимого для окончания предложения.</target>
        </trans-unit>
        <trans-unit id="51d9683535aae8eb5ee805c7c7cb6e34929d338c" translate="yes" xml:space="preserve">
          <source>Finally, this function passes the string through &lt;code&gt;substitute-command-keys&lt;/code&gt; to substitute key bindings (see &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Keys in Documentation&lt;/a&gt;). It skips this step if &lt;var&gt;verbatim&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Наконец, эта функция передает строку через &lt;code&gt;substitute-command-keys&lt;/code&gt; заменители, чтобы заменить привязки клавиш (см. &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Ключи в документации&lt;/a&gt; ). Он пропускает этот шаг, если &lt;var&gt;verbatim&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ca4154f841daffd43e50a5f7de86f96c33aadc3" translate="yes" xml:space="preserve">
          <source>Finally, unless &lt;var&gt;verbatim&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function calls &lt;code&gt;substitute-command-keys&lt;/code&gt;. The result is the documentation string to return.</source>
          <target state="translated">Наконец, если &lt;var&gt;verbatim&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , эта функция вызывает &lt;code&gt;substitute-command-keys&lt;/code&gt; . Результат - строка документации, которую нужно вернуть.</target>
        </trans-unit>
        <trans-unit id="62487a369295a12ce9fd6f501b0a5a07e8d954e7" translate="yes" xml:space="preserve">
          <source>Finally, we evaluate the following:</source>
          <target state="translated">Наконец,мы оцениваем следующее:</target>
        </trans-unit>
        <trans-unit id="c9414bf74a898debd0d63dd3bc6a719232ad7a25" translate="yes" xml:space="preserve">
          <source>Finally, we show the use of a function as an output stream. The function &lt;code&gt;eat-output&lt;/code&gt; takes each character that it is given and conses it onto the front of the list &lt;code&gt;last-output&lt;/code&gt; (see &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;). At the end, the list contains all the characters output, but in reverse order.</source>
          <target state="translated">Наконец, мы покажем использование функции в качестве выходного потока. Функция &lt;code&gt;eat-output&lt;/code&gt; принимает каждый заданный символ и помещает его в начало списка &lt;code&gt;last-output&lt;/code&gt; (см. &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Создание списков&lt;/a&gt; ). В конце список содержит все символы вывода, но в обратном порядке.</target>
        </trans-unit>
        <trans-unit id="647199d379e204b551bb8caf6eee952a5a23099d" translate="yes" xml:space="preserve">
          <source>Finally, you can write a module that will work with older versions of Emacs, by comparing the size of the environment passed by Emacs with known sizes, like this:</source>
          <target state="translated">Наконец,вы можете написать модуль,который будет работать со старыми версиями Emacs,сравнивая размер окружения,переданного Emacs,с известными размерами,как,например,это:</target>
        </trans-unit>
        <trans-unit id="7e2eb9516a141724f8015ce1c62ea5bd295c5971" translate="yes" xml:space="preserve">
          <source>Finally, you may want to change how the key is presented. By default, the key is simply shown as a &lt;code&gt;const&lt;/code&gt;, since the user cannot change the special keys specified with the &lt;code&gt;:options&lt;/code&gt; keyword. However, you may want to use a more specialized type for presenting the key, like &lt;code&gt;function-item&lt;/code&gt; if you know it is a symbol with a function binding. This is done by using a customization type specification instead of a symbol for the key.</source>
          <target state="translated">Наконец, вы можете изменить способ представления ключа. По умолчанию ключ отображается как &lt;code&gt;const&lt;/code&gt; , поскольку пользователь не может изменить специальные ключи, указанные с помощью ключевого слова &lt;code&gt;:options&lt;/code&gt; . Однако вы можете захотеть использовать более специализированный тип для представления ключа, например &lt;code&gt;function-item&lt;/code&gt; , если вы знаете, что это символ с привязкой к функции. Для этого вместо символа ключа используется спецификация типа настройки.</target>
        </trans-unit>
        <trans-unit id="6139bc12e79d6ddfa470ee70765f39ffc7d5d3f7" translate="yes" xml:space="preserve">
          <source>Finally, you should bind the Lisp function to a symbol, so that Lisp code could call your function by name. For that, use the module</source>
          <target state="translated">Наконец,необходимо связать функцию Lisp с символом,чтобы код Lisp мог вызывать вашу функцию по имени.Для этого используйте модуль</target>
        </trans-unit>
        <trans-unit id="f12091ef2518a74b62d963c79a01a261eecf14dd" translate="yes" xml:space="preserve">
          <source>Find text by calling &lt;var&gt;function&lt;/var&gt;, and highlight the matches it finds using &lt;code&gt;font-lock-keyword-face&lt;/code&gt;.</source>
          <target state="translated">Найдите текст, вызвав &lt;var&gt;function&lt;/var&gt; , и выделите найденные совпадения с помощью &lt;code&gt;font-lock-keyword-face&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8cb62b760103f3a5ef30dca2a1575326a388a92" translate="yes" xml:space="preserve">
          <source>Finding All Frames</source>
          <target state="translated">Поиск всех кадров</target>
        </trans-unit>
        <trans-unit id="a8cd235836e49a75690240ec59ef6b0111bd200d" translate="yes" xml:space="preserve">
          <source>Finding a key&amp;rsquo;s binding in one keymap.</source>
          <target state="translated">Нахождение привязки ключа в одной раскладке.</target>
        </trans-unit>
        <trans-unit id="a67031d1c0586751352731157ea673a33fc1c359" translate="yes" xml:space="preserve">
          <source>Finding a library to load.</source>
          <target state="translated">Поиск загружаемой библиотеки.</target>
        </trans-unit>
        <trans-unit id="ab6f2de981c47e18ec86a3accd270c86a07d11d8" translate="yes" xml:space="preserve">
          <source>Finding out how to use a mode.</source>
          <target state="translated">Узнайте,как пользоваться режимом.</target>
        </trans-unit>
        <trans-unit id="0d0744b64ec0a329edc14df06db4976aa9a1b6db" translate="yes" xml:space="preserve">
          <source>Finding out which part of the text matched, after a string or regexp search.</source>
          <target state="translated">Узнать,какая часть текста соответствует,после поиска по строке или повторного перебора.</target>
        </trans-unit>
        <trans-unit id="27eab570847d4819c36162c48efadc0e3c73b621" translate="yes" xml:space="preserve">
          <source>Finding the Parse State for a Position</source>
          <target state="translated">Поиск состояния парса для позиции</target>
        </trans-unit>
        <trans-unit id="3195ca9dd575bda2ce1d7ab996bdec288335a881" translate="yes" xml:space="preserve">
          <source>Finding the best available font for a face.</source>
          <target state="translated">Поиск лучшего доступного шрифта для лица.</target>
        </trans-unit>
        <trans-unit id="75464c6f702ec7d0a0ab3508c4d05f31a92e0c06" translate="yes" xml:space="preserve">
          <source>Finding the completions for a given file name.</source>
          <target state="translated">Поиск завершения для заданного имени файла.</target>
        </trans-unit>
        <trans-unit id="7e13eb28305d03d9b543ab78212d5a631cf6470c" translate="yes" xml:space="preserve">
          <source>Finding the marker&amp;rsquo;s buffer or character position.</source>
          <target state="translated">Нахождение буфера маркера или позиции символа.</target>
        </trans-unit>
        <trans-unit id="23b8f2102b2b397aff77e6066d02a87e98e53ab4" translate="yes" xml:space="preserve">
          <source>Finding the modifier keys in an event symbol. Event types.</source>
          <target state="translated">Поиск клавиш-модификаторов в символе события.Типы событий.</target>
        </trans-unit>
        <trans-unit id="b33cfe3f2c7699c5039e1b04ea03cad84c95d16c" translate="yes" xml:space="preserve">
          <source>Finding the name and user id of the user.</source>
          <target state="translated">Поиск имени и идентификатора пользователя.</target>
        </trans-unit>
        <trans-unit id="bf7ab483bdaaa051136602ca4b6d78f94660a87a" translate="yes" xml:space="preserve">
          <source>Finding which file defined a certain symbol.</source>
          <target state="translated">Поиск того,какой файл определил определенный символ.</target>
        </trans-unit>
        <trans-unit id="5a96053867634128a72855dbe818f35bd9b03414" translate="yes" xml:space="preserve">
          <source>First, &lt;code&gt;let&lt;/code&gt; evaluates &lt;code&gt;(list&amp;nbsp;&quot;149&quot;&amp;nbsp;'default)&lt;/code&gt; to get &lt;code&gt;(&quot;149&quot;&amp;nbsp;default)&lt;/code&gt;, the &lt;var&gt;exprval&lt;/var&gt;, and then tries to match &lt;var&gt;exprval&lt;/var&gt; against pattern &lt;code&gt;val&lt;/code&gt;. Since that is a &lt;var&gt;symbol&lt;/var&gt; pattern, it matches unconditionally and additionally binds &lt;code&gt;val&lt;/code&gt; to &lt;var&gt;exprval&lt;/var&gt;. Now that &lt;code&gt;let&lt;/code&gt; has matched, &lt;code&gt;or&lt;/code&gt; matches.</source>
          <target state="translated">Во- первых, &lt;code&gt;let&lt;/code&gt; оценивает &lt;code&gt;(list&amp;nbsp;&quot;149&quot;&amp;nbsp;'default)&lt;/code&gt; , чтобы получить &lt;code&gt;(&quot;149&quot;&amp;nbsp;default)&lt;/code&gt; , в &lt;var&gt;exprval&lt;/var&gt; , а затем пытается сопоставить &lt;var&gt;exprval&lt;/var&gt; с узором &lt;code&gt;val&lt;/code&gt; . Поскольку это шаблон &lt;var&gt;symbol&lt;/var&gt; , он безоговорочно соответствует и дополнительно связывает &lt;code&gt;val&lt;/code&gt; с &lt;var&gt;exprval&lt;/var&gt; . Теперь, когда &lt;code&gt;let&lt;/code&gt; совпала, &lt;code&gt;or&lt;/code&gt; совпадает.</target>
        </trans-unit>
        <trans-unit id="1a5d8cc1e281a98d0c6c309e36c19d33c4d11f54" translate="yes" xml:space="preserve">
          <source>First, &lt;code&gt;pred&lt;/code&gt; matches if &lt;code&gt;(integerp&amp;nbsp;&lt;var&gt;expval&lt;/var&gt;)&lt;/code&gt; evaluates to non-&lt;code&gt;nil&lt;/code&gt;. Next, &lt;code&gt;n&lt;/code&gt; is a &lt;var&gt;symbol&lt;/var&gt; pattern that matches anything and binds &lt;code&gt;n&lt;/code&gt; to &lt;var&gt;expval&lt;/var&gt;. Lastly, &lt;code&gt;guard&lt;/code&gt; matches if the boolean expression &lt;code&gt;(&amp;lt;=&amp;nbsp;-9&amp;nbsp;n&amp;nbsp;9)&lt;/code&gt; (note the reference to &lt;code&gt;n&lt;/code&gt;) evaluates to non-&lt;code&gt;nil&lt;/code&gt;. If all these sub-patterns match, &lt;code&gt;and&lt;/code&gt; matches.</source>
          <target state="translated">Во- первых, &lt;code&gt;pred&lt;/code&gt; матчи , если &lt;code&gt;(integerp&amp;nbsp;&lt;var&gt;expval&lt;/var&gt;)&lt;/code&gt; принимает значение не - &lt;code&gt;nil&lt;/code&gt; . Далее, &lt;code&gt;n&lt;/code&gt; - это шаблон &lt;var&gt;symbol&lt;/var&gt; , который соответствует чему-либо и связывает &lt;code&gt;n&lt;/code&gt; с &lt;var&gt;expval&lt;/var&gt; . Наконец, &lt;code&gt;guard&lt;/code&gt; соответствует, если логическое выражение &lt;code&gt;(&amp;lt;=&amp;nbsp;-9&amp;nbsp;n&amp;nbsp;9)&lt;/code&gt; (обратите внимание на ссылку на &lt;code&gt;n&lt;/code&gt; ) оценивается как &lt;code&gt;nil&lt;/code&gt; . Если все эти подшаблоны совпадают, &lt;code&gt;and&lt;/code&gt; совпадает.</target>
        </trans-unit>
        <trans-unit id="5602cfe37b2d2e8488d61df67b252418140d07f1" translate="yes" xml:space="preserve">
          <source>First, it checks whether Transient Mark mode is enabled and the region is active. If so, it calls &lt;code&gt;indent-region&lt;/code&gt; to indent all the text in the region (see &lt;a href=&quot;region-indent#Region-Indent&quot;&gt;Region Indent&lt;/a&gt;).</source>
          <target state="translated">Во-первых, он проверяет, включен ли режим Transient Mark и активна ли область. Если это так, он вызывает &lt;code&gt;indent-region&lt;/code&gt; для отступа всего текста в регионе (см. &lt;a href=&quot;region-indent#Region-Indent&quot;&gt;Отступ области&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5cc90ac529a1a596c4f7b306925e3c27b2eadc5e" translate="yes" xml:space="preserve">
          <source>First, such buffers must have a suitable &lt;code&gt;revert-buffer-function&lt;/code&gt; and &lt;code&gt;buffer-stale-function&lt;/code&gt; defined.</source>
          <target state="translated">Во- первых, такие буферы должны иметь подходящую &lt;code&gt;revert-buffer-function&lt;/code&gt; и &lt;code&gt;buffer-stale-function&lt;/code&gt; определена.</target>
        </trans-unit>
        <trans-unit id="0fc3309066ed5f2ff1aa4525ffedf257cd1d0f93" translate="yes" xml:space="preserve">
          <source>First, this command expands any abbrev before point, unless &lt;var&gt;arg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. (Interactively, &lt;var&gt;arg&lt;/var&gt; is the prefix argument.) Then it inserts a hyphen before point, to indicate the start of the next abbrev to be expanded. The actual expansion removes the hyphen.</source>
          <target state="translated">Во-первых, эта команда расширяет любое сокращение перед точкой, если &lt;var&gt;arg&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; . (В интерактивном режиме &lt;var&gt;arg&lt;/var&gt; является аргументом префикса.) Затем он вставляет дефис перед точкой, чтобы указать начало следующего сокращения, которое нужно раскрыть. Фактическое расширение удаляет дефис.</target>
        </trans-unit>
        <trans-unit id="a774409a00c21de377cf8ed5c6a56b8547973042" translate="yes" xml:space="preserve">
          <source>Flag</source>
          <target state="translated">Flag</target>
        </trans-unit>
        <trans-unit id="668fcf1810b2ce389d0b1a207b70b01210d0ace2" translate="yes" xml:space="preserve">
          <source>Flag the current frame like</source>
          <target state="translated">Поставьте флажок на текущую рамку,как</target>
        </trans-unit>
        <trans-unit id="6a56cfecdba7ea96836380ed1e69b4a44f61a462" translate="yes" xml:space="preserve">
          <source>Flag the current frame so that the debugger will be entered when the frame is exited. Frames flagged in this way are marked with stars in the backtrace buffer.</source>
          <target state="translated">Поставьте флаг текущего кадра так,чтобы отладчик был введен при выходе из кадра.Фреймы,помеченные таким образом,помечены звездочками в буфере обратной связи.</target>
        </trans-unit>
        <trans-unit id="8493365622f8f23a430a6e553cd0fa55fbb91b58" translate="yes" xml:space="preserve">
          <source>Flag to set &lt;code&gt;coding-system&lt;/code&gt; of the process buffer from the coding system used to decode process output.</source>
          <target state="translated">Флаг для установки &lt;code&gt;coding-system&lt;/code&gt; буфера процесса из системы кодирования, используемой для декодирования вывода процесса.</target>
        </trans-unit>
        <trans-unit id="d15cd35cc1267b2e5feff273e3273e81715a547f" translate="yes" xml:space="preserve">
          <source>Floating-Point Basics</source>
          <target state="translated">Основы работы с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="bdb039dcc477ba3def70845b9d2585d93f962bc6" translate="yes" xml:space="preserve">
          <source>Floating-Point Type</source>
          <target state="translated">Тип с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="438bbb63180abb99b9a1a681f77aa34c104b3d49" translate="yes" xml:space="preserve">
          <source>Floating-point numbers are the computer equivalent of scientific notation; you can think of a floating-point number as a fraction together with a power of ten. The precise number of significant figures and the range of possible exponents is machine-specific; Emacs uses the C data type &lt;code&gt;double&lt;/code&gt; to store the value, and internally this records a power of 2 rather than a power of 10.</source>
          <target state="translated">Числа с плавающей запятой являются компьютерным эквивалентом научной записи; вы можете думать о числе с плавающей запятой как о дроби со степенью десяти. Точное количество значащих цифр и диапазон возможных показателей зависит от машины; Emacs использует тип данных C &lt;code&gt;double&lt;/code&gt; для хранения значения, и внутренне он записывает степень 2, а не степень 10.</target>
        </trans-unit>
        <trans-unit id="bab4f9b32cf539639489e8df679cc5fcd42c2607" translate="yes" xml:space="preserve">
          <source>Floating-point numbers are useful for representing numbers that are not integral. The range of floating-point numbers is the same as the range of the C data type &lt;code&gt;double&lt;/code&gt; on the machine you are using. On all computers supported by Emacs, this is</source>
          <target state="translated">Числа с плавающей запятой полезны для представления чисел, которые не являются целыми. Диапазон чисел с плавающей запятой такой же, как диапазон &lt;code&gt;double&lt;/code&gt; типа данных C на используемом вами компьютере. На всех компьютерах, поддерживаемых Emacs, это</target>
        </trans-unit>
        <trans-unit id="6fb0f1fe4e017c28f8eea1d36230c9eb45418e19" translate="yes" xml:space="preserve">
          <source>Floating-point value.</source>
          <target state="translated">Значение с плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="81c6e47ced4689fc9b50ffb6c5d899c6c3458d6a" translate="yes" xml:space="preserve">
          <source>Focus Events</source>
          <target state="translated">Фокус-мероприятия</target>
        </trans-unit>
        <trans-unit id="1e645b972bad2a1f5548e11a059f25456c18a168" translate="yes" xml:space="preserve">
          <source>Focus events are represented in Lisp as lists that look like this:</source>
          <target state="translated">События фокуса представлены в Lisp в виде списков,которые выглядят так:</target>
        </trans-unit>
        <trans-unit id="17682d88592b02229ac424a4f95bc51968287272" translate="yes" xml:space="preserve">
          <source>Folding or wrapping long text lines.</source>
          <target state="translated">Складывание или обёртывание длинных текстовых строк.</target>
        </trans-unit>
        <trans-unit id="16be6fc4be7857cb1d203506b203e9ae71dbe2e1" translate="yes" xml:space="preserve">
          <source>Font Lock Basics</source>
          <target state="translated">Основы шрифтового замка</target>
        </trans-unit>
        <trans-unit id="efe3d0b886a6e6756ec774cf390598b0e5ff9f14" translate="yes" xml:space="preserve">
          <source>Font Lock Mode</source>
          <target state="translated">Режим блокировки шрифта</target>
        </trans-unit>
        <trans-unit id="8bf72cf6fee44ae0e97096fd69d4ebe9361c9ec8" translate="yes" xml:space="preserve">
          <source>Font Lock Multiline</source>
          <target state="translated">Многострочный шрифт</target>
        </trans-unit>
        <trans-unit id="ab0acf1261e924742450fde03462e9eccf261b91" translate="yes" xml:space="preserve">
          <source>Font Lock mode (see &lt;a href=&quot;font-lock-mode#Font-Lock-Mode&quot;&gt;Font Lock Mode&lt;/a&gt;) works in most buffers by dynamically updating the &lt;code&gt;face&lt;/code&gt; property of characters based on the context.</source>
          <target state="translated">Режим Font Lock (см. &lt;a href=&quot;font-lock-mode#Font-Lock-Mode&quot;&gt;Режим Font Lock&lt;/a&gt; ) работает в большинстве буферов, динамически обновляя свойство &lt;code&gt;face&lt;/code&gt; стороны символов в зависимости от контекста.</target>
        </trans-unit>
        <trans-unit id="c6ae546df279ab14850a00208c2542e4e12f0d10" translate="yes" xml:space="preserve">
          <source>Font Lock mode can highlight using any face, but Emacs defines several faces specifically for Font Lock to use to highlight text. These &lt;em&gt;Font Lock faces&lt;/em&gt; are listed below. They can also be used by major modes for syntactic highlighting outside of Font Lock mode (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">В режиме Font Lock можно выделить любое лицо, но Emacs определяет несколько начертаний специально для Font Lock, чтобы использовать его для выделения текста. Эти &lt;em&gt;лица Font Lock&lt;/em&gt; перечислены ниже. Их также можно использовать в основных режимах для синтаксической подсветки вне режима Font Lock (см. &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Основные правила режима&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d3a49e72d5752fd0a1f1609dc66d91f9adac11be" translate="yes" xml:space="preserve">
          <source>Font Lock mode finds text to highlight in two ways: through syntactic parsing based on the syntax table, and through searching (usually for regular expressions). Syntactic fontification happens first; it finds comments and string constants and highlights them. Search-based fontification happens second.</source>
          <target state="translated">Режим Font Lock находит текст для подсветки двумя способами:с помощью синтаксического разбора на основе таблицы синтаксиса и с помощью поиска (обычно для регулярных выражений).Синтаксическое шрифтовое выделение происходит в первую очередь;оно находит комментарии и строковые константы и выделяет их.Поисковое шрифтирование происходит вторым.</target>
        </trans-unit>
        <trans-unit id="f2a4b0d06bd26c4094acc6d06be6c29713210fab" translate="yes" xml:space="preserve">
          <source>Font Selection</source>
          <target state="translated">Выбор шрифта</target>
        </trans-unit>
        <trans-unit id="1870afcff000c92cc31bceeb4d9b4496c9271455" translate="yes" xml:space="preserve">
          <source>Font Type</source>
          <target state="translated">Тип шрифта</target>
        </trans-unit>
        <trans-unit id="97f6e4b3b5283deebf4eb8440ae1032cce6d2c82" translate="yes" xml:space="preserve">
          <source>Font and Color Parameters</source>
          <target state="translated">Параметры шрифта и цвета</target>
        </trans-unit>
        <trans-unit id="617a7feac03d690c7d634c9921443adedf9077eb" translate="yes" xml:space="preserve">
          <source>Font family name (a string). See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="translated">Название семейства шрифтов (строка). См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Шрифты&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="b6b554a056e5bc46e18cdfad97f7433899edd323" translate="yes" xml:space="preserve">
          <source>Font selection first finds the best available matches for the first attribute in the list; then, among the fonts which are best in that way, it searches for the best matches in the second attribute, and so on.</source>
          <target state="translated">Выбор шрифта сначала находит лучшие доступные совпадения для первого атрибута в списке,затем среди шрифтов,которые лучше всего подходят для второго атрибута,и так далее.</target>
        </trans-unit>
        <trans-unit id="a89193453fac12819a631009c0355f965f7d396b" translate="yes" xml:space="preserve">
          <source>Font slant&amp;mdash;one of the symbols &lt;code&gt;italic&lt;/code&gt;, &lt;code&gt;oblique&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;reverse-italic&lt;/code&gt;, or &lt;code&gt;reverse-oblique&lt;/code&gt;. On text terminals that support variable-brightness text, slanted text is displayed as half-bright.</source>
          <target state="translated">Наклон шрифта - один из символов &lt;code&gt;italic&lt;/code&gt; , &lt;code&gt;oblique&lt;/code&gt; , &lt;code&gt;normal&lt;/code&gt; , &lt;code&gt;reverse-italic&lt;/code&gt; или &lt;code&gt;reverse-oblique&lt;/code&gt; наклон . На текстовых терминалах, поддерживающих текст с переменной яркостью, наклонный текст отображается наполовину ярким.</target>
        </trans-unit>
        <trans-unit id="121db6402441bd0541f0b53862701a0d2fbef923" translate="yes" xml:space="preserve">
          <source>Font weight&amp;mdash;one of the symbols (from densest to faintest) &lt;code&gt;ultra-bold&lt;/code&gt;, &lt;code&gt;extra-bold&lt;/code&gt;, &lt;code&gt;bold&lt;/code&gt;, &lt;code&gt;semi-bold&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;semi-light&lt;/code&gt;, &lt;code&gt;light&lt;/code&gt;, &lt;code&gt;extra-light&lt;/code&gt;, or &lt;code&gt;ultra-light&lt;/code&gt;. On text terminals which support variable-brightness text, any weight greater than normal is displayed as extra bright, and any weight less than normal is displayed as half-bright.</source>
          <target state="translated">Жирность-один из символов (от плотнейшего до тусклого) &lt;code&gt;ultra-bold&lt;/code&gt; , &lt;code&gt;extra-bold&lt;/code&gt; , &lt;code&gt;bold&lt;/code&gt; , &lt;code&gt;semi-bold&lt;/code&gt; , &lt;code&gt;normal&lt;/code&gt; , &lt;code&gt;semi-light&lt;/code&gt; , &lt;code&gt;light&lt;/code&gt; , &lt;code&gt;extra-light&lt;/code&gt; , или &lt;code&gt;ultra-light&lt;/code&gt; . На текстовых терминалах, поддерживающих текст с переменной яркостью, любой вес, превышающий нормальный, отображается как очень яркий, а любой вес, меньший, чем нормальный, отображается как полужирный.</target>
        </trans-unit>
        <trans-unit id="8c2ebf48420ae343561df753e43b69aad019c4ec" translate="yes" xml:space="preserve">
          <source>Fontification based on regexps.</source>
          <target state="translated">Фонтификация на основе регэкспрессов.</target>
        </trans-unit>
        <trans-unit id="0a19191afa15ace9553b653b0ab1817384edcea4" translate="yes" xml:space="preserve">
          <source>Fontification based on syntax tables.</source>
          <target state="translated">Фонтификация на основе таблиц синтаксиса.</target>
        </trans-unit>
        <trans-unit id="d990de39c1d8401b13a944ac86e95f418f2b1274" translate="yes" xml:space="preserve">
          <source>Fontification will call &lt;var&gt;function&lt;/var&gt; repeatedly with the same limit, and with point where the previous invocation left it, until &lt;var&gt;function&lt;/var&gt; fails. On failure, &lt;var&gt;function&lt;/var&gt; need not reset point in any particular way.</source>
          <target state="translated">Фонтификация будет вызывать &lt;var&gt;function&lt;/var&gt; повторно с тем же пределом и с той точки, где ее оставил предыдущий вызов, до тех пор, пока &lt;var&gt;function&lt;/var&gt; не завершится с ошибкой. В случае отказа &lt;var&gt;function&lt;/var&gt; не требует сброса точки каким-либо определенным образом.</target>
        </trans-unit>
        <trans-unit id="f6a9f42468c4ad6da6bdd3029c4061af9efedf85" translate="yes" xml:space="preserve">
          <source>Fonts and colors for the frame text.</source>
          <target state="translated">Шрифты и цвета для текста рамки.</target>
        </trans-unit>
        <trans-unit id="370c5f43426613481fdfffd5afd2ec8451dd4bee" translate="yes" xml:space="preserve">
          <source>Fonts for displaying text.</source>
          <target state="translated">Шрифты для отображения текста.</target>
        </trans-unit>
        <trans-unit id="6b4cad525641bf7699e6ab0211542150965ffbb4" translate="yes" xml:space="preserve">
          <source>Fontset-&lt;var&gt;n&lt;/var&gt;</source>
          <target state="translated">Fontset-&lt;var&gt;n&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="4a83fc4223f6f835230963f891f5894b226b7af2" translate="yes" xml:space="preserve">
          <source>Fontsets</source>
          <target state="translated">Fontsets</target>
        </trans-unit>
        <trans-unit id="0c6aa77e19ef0b153d085a45f431eea8c9bf5723" translate="yes" xml:space="preserve">
          <source>Fontsets can specify a font on a per-character basis; when the fontset does that, this function&amp;rsquo;s value may not be accurate.</source>
          <target state="translated">Наборы шрифтов могут указывать шрифт для каждого символа; когда набор шрифтов делает это, значение этой функции может быть неточным.</target>
        </trans-unit>
        <trans-unit id="201a6b3053cc1422d2c3670b62616221d2290929" translate="yes" xml:space="preserve">
          <source>Foo</source>
          <target state="translated">Foo</target>
        </trans-unit>
        <trans-unit id="222782d2ff4c7cc6cf5c4bdeffe7941e2dd46d68" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;:before&lt;/code&gt; advice, being outermost means that this advice will be run first, before any other advice, whereas being innermost means that it will run right before the original function, with no other advice run between itself and the original function. Similarly, for &lt;code&gt;:after&lt;/code&gt; advice innermost means that it will run right after the original function, with no other advice run in between, whereas outermost means that it will be run right at the end after all other advice. An innermost &lt;code&gt;:override&lt;/code&gt; piece of advice will only override the original function and other pieces of advice will apply to it, whereas an outermost &lt;code&gt;:override&lt;/code&gt; piece of advice will override not only the original function but all other advice applied to it as well.</source>
          <target state="translated">For &lt;code&gt;:before&lt;/code&gt; advice, внешний вид означает, что этот совет будет запущен первым, перед любым другим советом, тогда как самый внутренний означает, что он будет выполняться прямо перед исходной функцией, и никакие другие рекомендации не будут выполняться между ним и исходной функцией. Аналогично, for &lt;code&gt;:after&lt;/code&gt; advice innermost означает, что он будет запускаться сразу после исходной функции, без каких-либо других советов между ними, тогда как внешний означает, что он будет запущен сразу после всех остальных рекомендаций. Самый внутренний совет &lt;code&gt;:override&lt;/code&gt; переопределит только исходную функцию, и к нему будут применяться другие советы, тогда как самый внешний совет &lt;code&gt;:override&lt;/code&gt; переопределит не только исходную функцию, но и все другие советы, примененные к ней.</target>
        </trans-unit>
        <trans-unit id="780a29736b25c508c29c6a3dedd3caa74f5f9492" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;equal&lt;/code&gt;, equality is defined recursively; for example, given two cons cells &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;, &lt;code&gt;(equal &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; if and only if both the expressions below return &lt;code&gt;t&lt;/code&gt;:</source>
          <target state="translated">Для &lt;code&gt;equal&lt;/code&gt; равенство определяется рекурсивно; например, даны две минусы клетки &lt;var&gt;x&lt;/var&gt; и &lt;var&gt;y&lt;/var&gt; , &lt;code&gt;(equal &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; возвращает &lt;code&gt;t&lt;/code&gt; тогда и только тогда , когда оба выражения ниже возврата &lt;code&gt;t&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8361c92b5f57d869af5b95ec47c3be590e320ff7" translate="yes" xml:space="preserve">
          <source>For A, because symbol &lt;code&gt;st&lt;/code&gt; is mentioned twice, the second mention becomes an equality test using &lt;code&gt;eq&lt;/code&gt;. On the other hand, B uses two separate symbols, &lt;code&gt;s1&lt;/code&gt; and &lt;code&gt;s2&lt;/code&gt;, both of which become independent bindings.</source>
          <target state="translated">Для A, поскольку символ &lt;code&gt;st&lt;/code&gt; упоминается дважды, второе упоминание становится проверкой равенства с использованием &lt;code&gt;eq&lt;/code&gt; . С другой стороны, B использует два отдельных символа, &lt;code&gt;s1&lt;/code&gt; и &lt;code&gt;s2&lt;/code&gt; , оба из которых становятся независимыми привязками.</target>
        </trans-unit>
        <trans-unit id="b11610eb910bc3e09bb05d152b90cc4ed3de8e14" translate="yes" xml:space="preserve">
          <source>For Emacs Lisp mode, &lt;code&gt;imenu-generic-expression&lt;/code&gt; could look like this:</source>
          <target state="translated">Для режима Emacs Lisp &lt;code&gt;imenu-generic-expression&lt;/code&gt; может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="4afc5c50d3365855eb6afc17378478bbb50beccb" translate="yes" xml:space="preserve">
          <source>For PBM images, specify image type &lt;code&gt;pbm&lt;/code&gt;. Color, gray-scale and monochromatic images are supported. For mono PBM images, two additional image properties are supported.</source>
          <target state="translated">Для изображений PBM укажите тип изображения &lt;code&gt;pbm&lt;/code&gt; . Поддерживаются цветные, полутоновые и монохромные изображения. Для монохромных изображений PBM поддерживаются два дополнительных свойства изображения.</target>
        </trans-unit>
        <trans-unit id="e4029ea038ac2bc1533dfd42dca15945911a6e65" translate="yes" xml:space="preserve">
          <source>For a connection, &lt;var&gt;remote-address&lt;/var&gt; is the address to connect to. It overrides &lt;var&gt;family&lt;/var&gt;, &lt;var&gt;host&lt;/var&gt; and &lt;var&gt;service&lt;/var&gt;, so you might as well not specify them.</source>
          <target state="translated">Для подключения &lt;var&gt;remote-address&lt;/var&gt; - это адрес для подключения. Он имеет приоритет над &lt;var&gt;family&lt;/var&gt; , &lt;var&gt;host&lt;/var&gt; и &lt;var&gt;service&lt;/var&gt; , поэтому вы можете не указывать их.</target>
        </trans-unit>
        <trans-unit id="8dd44b177320bc6af9a166a79a69645b4af9478f" translate="yes" xml:space="preserve">
          <source>For a datagram server, &lt;var&gt;remote-address&lt;/var&gt; specifies the initial setting of the remote datagram address.</source>
          <target state="translated">Для сервера дейтаграмм &lt;var&gt;remote-address&lt;/var&gt; определяет начальную настройку удаленного адреса дейтаграммы.</target>
        </trans-unit>
        <trans-unit id="1ec8cb627d21e3d182615eec57f529138243db39" translate="yes" xml:space="preserve">
          <source>For a drag event, the name of the symbol &lt;var&gt;event-type&lt;/var&gt; contains the prefix &amp;lsquo;</source>
          <target state="translated">Для события перетаскивания имя типа &lt;var&gt;event-type&lt;/var&gt; символа содержит префикс '</target>
        </trans-unit>
        <trans-unit id="c1a7557f2039cefe1324f701825e904b7b74f01b" translate="yes" xml:space="preserve">
          <source>For a few commands, these properties are present by default (you can remove them in your init file if you wish).</source>
          <target state="translated">Для нескольких команд эти свойства присутствуют по умолчанию (вы можете удалить их в вашем init-файле,если хотите).</target>
        </trans-unit>
        <trans-unit id="f158e15a661272a4f668cbe2ebc4100e6331ea32" translate="yes" xml:space="preserve">
          <source>For a fixed-size field, the length &lt;var&gt;len&lt;/var&gt; is given as an integer specifying the number of bytes in the field.</source>
          <target state="translated">Для поля фиксированного размера длина &lt;var&gt;len&lt;/var&gt; задается как целое число, определяющее количество байтов в поле.</target>
        </trans-unit>
        <trans-unit id="94bf6db303e72a344c395d7b32f9f6b6c3a5e4f2" translate="yes" xml:space="preserve">
          <source>For a frame on a graphical terminal the following function returns the sizes of the areas described above:</source>
          <target state="translated">Для кадра на графической клемме следующая функция возвращает размеры областей,описанных выше:</target>
        </trans-unit>
        <trans-unit id="f9a4455cc0875a8bb40f0c436c07d787c88d64b1" translate="yes" xml:space="preserve">
          <source>For a leaf window and windows showing a tooltip, this is the buffer, as a Lisp object, that the window is displaying. For an internal (&amp;ldquo;parent&amp;rdquo;) window, this is its first child window. For a pseudo window showing a menu or tool bar this is &lt;code&gt;nil&lt;/code&gt;. It is also &lt;code&gt;nil&lt;/code&gt; for a window that has been deleted.</source>
          <target state="translated">Для оконного листа и окон, показывающих всплывающую подсказку, это буфер, как объект Lisp, который окно отображает. Для внутреннего (&amp;laquo;родительского&amp;raquo;) окна это его первое дочернее окно. Для псевдоокна, показывающего меню или панель инструментов, это &lt;code&gt;nil&lt;/code&gt; . Также он равен &lt;code&gt;nil&lt;/code&gt; для окна, которое было удалено.</target>
        </trans-unit>
        <trans-unit id="e541a81b69fdfc92f78d919c17ef443858ce2a88" translate="yes" xml:space="preserve">
          <source>For a more complete list of contributors, please see the relevant change log entries in the Emacs source repository.</source>
          <target state="translated">Для получения более полного списка участников,пожалуйста,ознакомьтесь с соответствующими записями в журнале изменений в репозитории источников Emacs.</target>
        </trans-unit>
        <trans-unit id="da33f8ed197d7dcafe1f10cf24364a3e44b8c16e" translate="yes" xml:space="preserve">
          <source>For a more elaborate example of using &lt;code&gt;defvar&lt;/code&gt; without a value, see &lt;a href=&quot;using-lexical-binding#Local-defvar-example&quot;&gt;Local defvar example&lt;/a&gt;.</source>
          <target state="translated">Более подробный пример использования &lt;code&gt;defvar&lt;/code&gt; без значения см. В разделе &lt;a href=&quot;using-lexical-binding#Local-defvar-example&quot;&gt;Пример локальной defvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1fba15c59889a0f613ee7b6254fb4cdcc2bf5070" translate="yes" xml:space="preserve">
          <source>For a more realistic example where you might use this, consider that you have a buffer where certain sections represent URLs, and these are tagged with &lt;code&gt;shr-url&lt;/code&gt;.</source>
          <target state="translated">Для более реалистичного примера, где вы можете использовать это, представьте, что у вас есть буфер, в котором определенные разделы представляют URL-адреса, и они помечены с помощью &lt;code&gt;shr-url&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="874be1ffef73392c67ae3ceb4571855edc9b38ac" translate="yes" xml:space="preserve">
          <source>For a more strict function (that will error out upon invalid input), this function can be used instead. It can parse all variants of the ISO 8601 standard, so in addition to the formats mentioned above, it also parses things like &amp;ldquo;1998W45-3&amp;rdquo; (week number) and &amp;ldquo;1998-245&amp;rdquo; (ordinal day number). To parse durations, there&amp;rsquo;s &lt;code&gt;iso8601-parse-duration&lt;/code&gt;, and to parse intervals, there&amp;rsquo;s &lt;code&gt;iso8601-parse-interval&lt;/code&gt;. All these functions return decoded time structures, except the final one, which returns three of them (the start, the end, and the duration).</source>
          <target state="translated">Для более строгой функции (которая выдаст ошибку при недопустимом вводе) вместо нее можно использовать эту функцию. Он может анализировать все варианты стандарта ISO 8601, поэтому в дополнение к форматам, упомянутым выше, он также анализирует такие вещи, как &amp;laquo;1998W45-3&amp;raquo; (номер недели) и &amp;laquo;1998-245&amp;raquo; (порядковый номер дня). Для анализа длительности используется &lt;code&gt;iso8601-parse-duration&lt;/code&gt; , а для анализа интервалов - &lt;code&gt;iso8601-parse-interval&lt;/code&gt; . Все эти функции возвращают декодированные временные структуры, кроме последней, которая возвращает три из них (начало, конец и продолжительность).</target>
        </trans-unit>
        <trans-unit id="b1f0f2adf942c9d2dc3309bacacd2243cf7604e2" translate="yes" xml:space="preserve">
          <source>For a network process, the values include (see &lt;code&gt;make-network-process&lt;/code&gt; for a complete list):</source>
          <target state="translated">Для сетевого процесса значения включают ( полный список см. В &lt;code&gt;make-network-process&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="f153e1c5645a5e23d096b21d21ce109610d96b4d" translate="yes" xml:space="preserve">
          <source>For a network, serial, or pipe connection, &lt;code&gt;process-status&lt;/code&gt; returns one of the symbols &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, or &lt;code&gt;closed&lt;/code&gt;. The latter means that the other side closed the connection, or Emacs did &lt;code&gt;delete-process&lt;/code&gt;. The value &lt;code&gt;stop&lt;/code&gt; means that &lt;code&gt;stop-process&lt;/code&gt; was called on the connection.</source>
          <target state="translated">Для сетевого, последовательного или трубного соединения &lt;code&gt;process-status&lt;/code&gt; возвращает один из символов &lt;code&gt;open&lt;/code&gt; , &lt;code&gt;stop&lt;/code&gt; или &lt;code&gt;closed&lt;/code&gt; . Последнее означает, что другая сторона закрыла соединение или Emacs выполнил &lt;code&gt;delete-process&lt;/code&gt; . Значение &lt;code&gt;stop&lt;/code&gt; означает, что для соединения был вызван &lt;code&gt;stop-process&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d196b666ddfa5e2c84615cae0e329a107522c93" translate="yes" xml:space="preserve">
          <source>For a normal hook, hook functions should be designed so that the order in which they are executed does not matter. Any dependence on the order is asking for trouble. However, the order is predictable: normally, &lt;var&gt;function&lt;/var&gt; goes at the front of the hook list, so it is executed first (barring another &lt;code&gt;add-hook&lt;/code&gt; call).</source>
          <target state="translated">Для обычной ловушки функции ловушки должны быть спроектированы таким образом, чтобы порядок их выполнения не имел значения. Любая зависимость от порядка порождает неприятности. Тем не менее, порядок предсказуем: обычно &lt;var&gt;function&lt;/var&gt; идет в начале списка ловушек, поэтому она выполняется первой (запрещая другой вызов &lt;code&gt;add-hook&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="07239215f7db505c2e2bbfc3f9963a1fb0a6ddbd" translate="yes" xml:space="preserve">
          <source>For a normal, non-child frame this function returns a cons of the pixel coordinates of its outer position (see &lt;a href=&quot;frame-layout#Frame-Layout&quot;&gt;Frame Layout&lt;/a&gt;) with respect to the origin &lt;code&gt;(0, 0)&lt;/code&gt; of its display. For a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) this function returns the pixel coordinates of its outer position with respect to an origin &lt;code&gt;(0, 0)&lt;/code&gt; at the native position of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s parent.</source>
          <target state="translated">Для нормального, не дочернего кадра эта функция возвращает минусы пиксельных координат его внешнего положения (см. &lt;a href=&quot;frame-layout#Frame-Layout&quot;&gt;Макет кадра&lt;/a&gt; ) относительно начала координат &lt;code&gt;(0, 0)&lt;/code&gt; его отображения. Для дочернего кадра (см. &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Дочерние кадры&lt;/a&gt; ) эта функция возвращает пиксельные координаты его внешней позиции относительно начала координат &lt;code&gt;(0, 0)&lt;/code&gt; в исходной позиции родительского &lt;var&gt;frame&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7555a3f0929878def60a2a8b52d9653acbc69538" translate="yes" xml:space="preserve">
          <source>For a particular frame, the value specified here may be overridden by that frame&amp;rsquo;s &lt;code&gt;auto-hide-function&lt;/code&gt; frame parameter (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;).</source>
          <target state="translated">Для конкретного кадра указанное здесь значение может быть переопределено параметром кадра &lt;code&gt;auto-hide-function&lt;/code&gt; этого кадра (см. &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Параметры взаимодействия кадра&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e684da989eacfd97b2925e7be52fae8c01f15e86" translate="yes" xml:space="preserve">
          <source>For a related feature, see &lt;a href=&quot;init-file#Init-File&quot;&gt;window-setup-hook&lt;/a&gt;.</source>
          <target state="translated">Для связанной функции см. &lt;a href=&quot;init-file#Init-File&quot;&gt;Window-setup-hook&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f64cde43e52e64458ff57aaae7a20c71fc92b47a" translate="yes" xml:space="preserve">
          <source>For a remote &lt;var&gt;filename&lt;/var&gt;, this function returns a file name which could be used directly as an argument of a remote process (see &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;Asynchronous Processes&lt;/a&gt;, and see &lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;Synchronous Processes&lt;/a&gt;), and as the program to run on the remote host. If &lt;var&gt;filename&lt;/var&gt; is local, this function returns it unchanged.</source>
          <target state="translated">Для удаленного &lt;var&gt;filename&lt;/var&gt; эта функция возвращает имя файла, которое можно использовать непосредственно в качестве аргумента удаленного процесса (см. &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;Асинхронные процессы&lt;/a&gt; и см. &lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;Синхронные процессы&lt;/a&gt; ) и как программу для запуска на удаленном узле. Если &lt;var&gt;filename&lt;/var&gt; является локальным, эта функция возвращает его без изменений.</target>
        </trans-unit>
        <trans-unit id="2e2af02388fcb473348e3e1783b1223ba2413713" translate="yes" xml:space="preserve">
          <source>For a serial connection, see &lt;code&gt;make-serial-process&lt;/code&gt; and &lt;code&gt;serial-process-configure&lt;/code&gt; for the list of keys. For a pipe connection, see &lt;code&gt;make-pipe-process&lt;/code&gt; for the list of keys.</source>
          <target state="translated">Для последовательного соединения см. &lt;code&gt;make-serial-process&lt;/code&gt; и &lt;code&gt;serial-process-configure&lt;/code&gt; список ключей. Для трубного соединения см. &lt;code&gt;make-pipe-process&lt;/code&gt; для списка ключей.</target>
        </trans-unit>
        <trans-unit id="506e52ccaad624a03a5a25b690b4ec879ceb8066" translate="yes" xml:space="preserve">
          <source>For a server process, &lt;var&gt;local-address&lt;/var&gt; is the address to listen on. It overrides &lt;var&gt;family&lt;/var&gt;, &lt;var&gt;host&lt;/var&gt; and &lt;var&gt;service&lt;/var&gt;, so you might as well not specify them.</source>
          <target state="translated">Для серверного процесса &lt;var&gt;local-address&lt;/var&gt; - это адрес для прослушивания. Он имеет приоритет над &lt;var&gt;family&lt;/var&gt; , &lt;var&gt;host&lt;/var&gt; и &lt;var&gt;service&lt;/var&gt; , поэтому вы можете не указывать их.</target>
        </trans-unit>
        <trans-unit id="063ae54c86a72f6dd2b6ef0b2c53785caaf880ca" translate="yes" xml:space="preserve">
          <source>For a server process, the options specified with &lt;code&gt;make-network-process&lt;/code&gt; are not inherited by the client connections, so you will need to set the necessary options for each child connection as it is created.</source>
          <target state="translated">Для серверного процесса параметры, указанные с помощью &lt;code&gt;make-network-process&lt;/code&gt; , не наследуются клиентскими соединениями, поэтому вам нужно будет установить необходимые параметры для каждого дочернего соединения по мере его создания.</target>
        </trans-unit>
        <trans-unit id="ab0e9166dd05d405f2aa575ede5d0ec4d4aa5de5" translate="yes" xml:space="preserve">
          <source>For a single-file package, &lt;var&gt;file&lt;/var&gt; is the package Lisp file; for a multi-file package, it is the package tar file. You can also sign the archive&amp;rsquo;s contents file in the same way. Make the</source>
          <target state="translated">Для однофайлового пакета &lt;var&gt;file&lt;/var&gt; - это файл пакета Lisp; для многофайлового пакета это tar-файл пакета. Таким же образом можно подписать и файл содержимого архива. Сделать</target>
        </trans-unit>
        <trans-unit id="cddac283c6fbad067cde2e91d582a0863ab1f67d" translate="yes" xml:space="preserve">
          <source>For additional safety, &lt;code&gt;read-circle&lt;/code&gt; is temporarily bound to &lt;code&gt;nil&lt;/code&gt; when Emacs reads file-local variables (see &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Input Functions&lt;/a&gt;). This prevents the Lisp reader from recognizing circular and shared Lisp structures (see &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Circular Objects&lt;/a&gt;).</source>
          <target state="translated">Для дополнительной безопасности &lt;code&gt;read-circle&lt;/code&gt; временно привязан к &lt;code&gt;nil&lt;/code&gt; , когда Emacs читает локальные переменные файла (см. &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Функции ввода&lt;/a&gt; ). Это предотвращает распознавание читателем Лиспа круговых и общих структур Лиспа (см. &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Круглые объекты&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef6f908916c2213a58292c4ccfef487ba3e9d216" translate="yes" xml:space="preserve">
          <source>For an alternative facility for destructuring binding, see &lt;a href=&quot;sequence-functions#seq_002dlet&quot;&gt;seq-let&lt;/a&gt;.</source>
          <target state="translated">Для альтернативного средства для разрушения привязки см. &lt;a href=&quot;sequence-functions#seq_002dlet&quot;&gt;Seq-let&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c326acf6241c7c0809b501cb8dd76fd10d776f0d" translate="yes" xml:space="preserve">
          <source>For an example of an application using this transport scheme on top of JSONRPC, see the &lt;a href=&quot;https://microsoft.github.io/language-server-protocol/specification&quot;&gt;Language Server Protocol&lt;/a&gt;.</source>
          <target state="translated">Пример приложения, использующего эту транспортную схему поверх JSONRPC, см. В &lt;a href=&quot;https://microsoft.github.io/language-server-protocol/specification&quot;&gt;протоколе языкового сервера&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6412f08014b3c59973f751a0a41329ada671054a" translate="yes" xml:space="preserve">
          <source>For an interesting example of using &lt;code&gt;apply&lt;/code&gt;, see &lt;a href=&quot;mapping-functions#Definition-of-mapcar&quot;&gt;Definition of mapcar&lt;/a&gt;.</source>
          <target state="translated">Интересный пример использования &lt;code&gt;apply&lt;/code&gt; см. В разделе &lt;a href=&quot;mapping-functions#Definition-of-mapcar&quot;&gt;Определение mapcar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ac62ffb11b1205cd2ec0e3eeb9745d1fcc6ad4f" translate="yes" xml:space="preserve">
          <source>For any other non-&lt;code&gt;nil&lt;/code&gt; action code, the</source>
          <target state="translated">Для любого другого кода действия, отличного от &lt;code&gt;nil&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="f5267fdc1484269b536d70f99bea2db606a9c39b" translate="yes" xml:space="preserve">
          <source>For any two integers &lt;var&gt;dividend&lt;/var&gt; and &lt;var&gt;divisor&lt;/var&gt;,</source>
          <target state="translated">Для любых двух целых чисел &lt;var&gt;dividend&lt;/var&gt; и &lt;var&gt;divisor&lt;/var&gt; ,</target>
        </trans-unit>
        <trans-unit id="a72da2a1bc658d9b10287fe8776144e018a0887d" translate="yes" xml:space="preserve">
          <source>For any two numbers &lt;var&gt;dividend&lt;/var&gt; and &lt;var&gt;divisor&lt;/var&gt;,</source>
          <target state="translated">Для любых двух чисел &lt;var&gt;dividend&lt;/var&gt; и &lt;var&gt;divisor&lt;/var&gt; ,</target>
        </trans-unit>
        <trans-unit id="5efb7641f20d02b2baa5f784be6822d9efd593f5" translate="yes" xml:space="preserve">
          <source>For background, See &lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;Pattern-Matching Conditional&lt;/a&gt;.</source>
          <target state="translated">Для справки см. &lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;Условное сопоставление с образцом&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3502c2bb302e63d8fdc434b18b9e68b88f911a8" translate="yes" xml:space="preserve">
          <source>For backward compatibility, if &lt;var&gt;code-point&lt;/var&gt; doesn&amp;rsquo;t fit in a Lisp fixnum (see &lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;most-positive-fixnum&lt;/a&gt;), it can be specified as a cons cell &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; . &lt;var&gt;low&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;low&lt;/var&gt; are the lower 16 bits of the value and &lt;var&gt;high&lt;/var&gt; are the high 16 bits. This usage is obsolescent.</source>
          <target state="translated">Для обратной совместимости, если &lt;var&gt;code-point&lt;/var&gt; не подходит для fixnum Лиспа (см. Most &lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;-positive-fixnum&lt;/a&gt; ), ее можно указать как cons-ячейку &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; . &lt;var&gt;low&lt;/var&gt;)&lt;/code&gt; , где &lt;var&gt;low&lt;/var&gt; - младшие 16 бит значения, а &lt;var&gt;high&lt;/var&gt; - старшие 16 бит. Это использование устарело.</target>
        </trans-unit>
        <trans-unit id="47a69e571816bd3e5633261d32fa1543fdceb651" translate="yes" xml:space="preserve">
          <source>For backward compatibility, there are obsolete aliases &lt;code&gt;x-get-selection&lt;/code&gt; and &lt;code&gt;x-set-selection&lt;/code&gt;, which were the names of &lt;code&gt;gui-get-selection&lt;/code&gt; and &lt;code&gt;gui-set-selection&lt;/code&gt; before Emacs 25.1.</source>
          <target state="translated">Для обратной совместимости существуют устаревшие псевдонимы &lt;code&gt;x-get-selection&lt;/code&gt; и &lt;code&gt;x-set-selection&lt;/code&gt; , которые были именами &lt;code&gt;gui-get-selection&lt;/code&gt; и &lt;code&gt;gui-set-selection&lt;/code&gt; до Emacs 25.1.</target>
        </trans-unit>
        <trans-unit id="121e05938fd78cea0604b54505c7ff8a45f6a892" translate="yes" xml:space="preserve">
          <source>For best results, make this variable buffer-local, so that it will disappear after doing its job and will not interfere with the subsequent major mode. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">Для достижения наилучших результатов сделайте эту переменную buffer-local, чтобы она исчезла после выполнения своей работы и не мешала последующему основному режиму. См. &lt;a href=&quot;hooks#Hooks&quot;&gt;Крючки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ce34402ffe1794374d65dd17b0aaf42c8292bb4" translate="yes" xml:space="preserve">
          <source>For buffers not visiting a file to be restored, the major mode must define a function to do the job, and that function must be listed in the alist &lt;code&gt;desktop-buffer-mode-handlers&lt;/code&gt;.</source>
          <target state="translated">Для буферов, не обращающихся к файлу, который нужно восстановить, в основном режиме должна быть определена функция для выполнения задания, и эта функция должна быть указана в alist &lt;code&gt;desktop-buffer-mode-handlers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1e2d59e0ba5fd511d731e5a3da89d45abb82eca" translate="yes" xml:space="preserve">
          <source>For buffers not visiting a file to have their state saved, the major mode must bind the buffer local variable &lt;code&gt;desktop-save-buffer&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">Для буферов, не обращающихся к файлу, чтобы сохранить свое состояние, основной режим должен привязать локальную переменную буфера &lt;code&gt;desktop-save-buffer&lt;/code&gt; к значению, отличному от &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b39dd696e09f4d3cfe391ed2d07e39f2ea51797c" translate="yes" xml:space="preserve">
          <source>For clickable text buttons that send the user to a different buffer or location.</source>
          <target state="translated">Для кнопок с нажимаемым текстом,которые отправляют пользователя в другой буфер или в другое место.</target>
        </trans-unit>
        <trans-unit id="9783294e746a5ee573ba95bc5e33919cf41c465b" translate="yes" xml:space="preserve">
          <source>For clicks on a marginal area or on a fringe, this is the buffer position of the first visible character in the corresponding line in the window. For clicks on the mode line, the header line or the tab line, this is &lt;code&gt;nil&lt;/code&gt;. For other events, it is the buffer position closest to the click.</source>
          <target state="translated">Для щелчков по маргинальной области или по краю это буферная позиция первого видимого символа в соответствующей строке в окне. Для щелчков по строке режима, строке заголовка или строке табуляции это &lt;code&gt;nil&lt;/code&gt; . Для других событий это позиция буфера, ближайшая к щелчку.</target>
        </trans-unit>
        <trans-unit id="fb91260615c03a6f98320ec1431d1a615f829940" translate="yes" xml:space="preserve">
          <source>For clicks on a scroll bar, &lt;var&gt;position&lt;/var&gt; has this form:</source>
          <target state="translated">Для щелчков по полосе прокрутки &lt;var&gt;position&lt;/var&gt; имеет следующий вид:</target>
        </trans-unit>
        <trans-unit id="91f14921ea0887e603038510bd522b9f359946e5" translate="yes" xml:space="preserve">
          <source>For commands to display documentation strings, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Help.html#Help&quot;&gt;Help&lt;/a&gt; in</source>
          <target state="translated">Информацию о командах для отображения строк документации см. В &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Help.html#Help&quot;&gt;справке&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="f041697205704c9b82f5ea10802566a0ac769ba2" translate="yes" xml:space="preserve">
          <source>For compatibility with previous versions of Emacs, &lt;code&gt;window-height&lt;/code&gt; is an alias for &lt;code&gt;window-total-height&lt;/code&gt;, and &lt;code&gt;window-width&lt;/code&gt; is an alias for &lt;code&gt;window-body-width&lt;/code&gt;. These aliases are considered obsolete and will be removed in the future.</source>
          <target state="translated">Для совместимости с предыдущими версиями Emacs, &lt;code&gt;window-height&lt;/code&gt; - это псевдоним для &lt;code&gt;window-total-height&lt;/code&gt; , а &lt;code&gt;window-width&lt;/code&gt; - это псевдоним для &lt;code&gt;window-body-width&lt;/code&gt; . Эти псевдонимы считаются устаревшими и будут удалены в будущем.</target>
        </trans-unit>
        <trans-unit id="6aeb0736165542de00797d9e9036075c849b9f1d" translate="yes" xml:space="preserve">
          <source>For compatibility, &lt;var&gt;predicate&lt;/var&gt; can also be one of the symbols &lt;code&gt;executable&lt;/code&gt;, &lt;code&gt;readable&lt;/code&gt;, &lt;code&gt;writable&lt;/code&gt;, &lt;code&gt;exists&lt;/code&gt;, or a list of one or more of these symbols.</source>
          <target state="translated">Для совместимости &lt;var&gt;predicate&lt;/var&gt; также может быть один из символов: &lt;code&gt;executable&lt;/code&gt; , &lt;code&gt;readable&lt;/code&gt; , &lt;code&gt;writable&lt;/code&gt; , &lt;code&gt;exists&lt;/code&gt; или список из одного или нескольких из этих символов.</target>
        </trans-unit>
        <trans-unit id="66900f3ecb19bc7a744771fb6d1b592b9c854053" translate="yes" xml:space="preserve">
          <source>For consistency, you should also specify that element of the history as the initial minibuffer contents, using the &lt;var&gt;initial&lt;/var&gt; argument to the minibuffer input function (see &lt;a href=&quot;initial-input#Initial-Input&quot;&gt;Initial Input&lt;/a&gt;).</source>
          <target state="translated">Для согласованности вы также должны указать этот элемент истории в качестве начального содержимого минибуфера, используя &lt;var&gt;initial&lt;/var&gt; аргумент функции ввода минибуфера (см. &amp;laquo; &lt;a href=&quot;initial-input#Initial-Input&quot;&gt;Начальный ввод&amp;raquo;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="74c62700c6d87541270a5795bc335f128345e975" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;code&gt;jsonrpc&lt;/code&gt; library comes with a built-in &lt;code&gt;jsonrpc-process-connection&lt;/code&gt; transport implementation that can talk to local subprocesses (using the standard input and standard output); or TCP hosts (using sockets); or any other remote endpoint that Emacs&amp;rsquo;s process object can represent (see &lt;a href=&quot;processes#Processes&quot;&gt;Processes&lt;/a&gt;).</source>
          <target state="translated">Для удобства библиотека &lt;code&gt;jsonrpc&lt;/code&gt; поставляется со встроенной реализацией транспорта &lt;code&gt;jsonrpc-process-connection&lt;/code&gt; , которая может взаимодействовать с локальными подпроцессами (используя стандартный ввод и стандартный вывод); или TCP-хосты (с использованием сокетов); или любую другую удаленную конечную точку, которую может представлять объект процесса Emacs (см. &lt;a href=&quot;processes#Processes&quot;&gt;Процессы&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="043b52ca73b98f1cccd797380f813644ed89dd0c" translate="yes" xml:space="preserve">
          <source>For convenience, there are two sorts of button-creation functions, those that add button properties to an existing region of a buffer, called &lt;code&gt;make-...button&lt;/code&gt;, and those that also insert the button text, called &lt;code&gt;insert-...button&lt;/code&gt;.</source>
          <target state="translated">Для удобства существует два вида функций создания кнопок: те, которые добавляют свойства кнопки в существующую область буфера, называемую &lt;code&gt;make-...button&lt;/code&gt; , и те, которые также вставляют текст кнопки, называемые &lt;code&gt;insert-...button&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54dc6f12eb601168a1ac37613145f57827189341" translate="yes" xml:space="preserve">
          <source>For details, see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;. Please note that &lt;code&gt;(syntax punctuation)&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; equivalent to the character class &lt;code&gt;punctuation&lt;/code&gt;. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Подробнее см. &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Таблицу классов синтаксиса&lt;/a&gt; . Обратите внимание , что &lt;code&gt;(syntax punctuation)&lt;/code&gt; является &lt;em&gt;не&lt;/em&gt; эквивалентна классом символов &lt;code&gt;punctuation&lt;/code&gt; . Соответствующее строковое регулярное выражение: '</target>
        </trans-unit>
        <trans-unit id="734002e9a587e32b29f5a860c41732ff384a5177" translate="yes" xml:space="preserve">
          <source>For difficult cases, you can add do-nothing macros to your code to give advice to the test coverage tool.</source>
          <target state="translated">В сложных случаях можно добавить в код макросы &quot;ничего не делай&quot;,чтобы дать совет инструменту тестирования покрытия.</target>
        </trans-unit>
        <trans-unit id="11e3a73ca5000b7c31eb2b1c1d6daf9a7ff26858" translate="yes" xml:space="preserve">
          <source>For dimmed-out text. For example, it is used for the ignored part of a filename in the minibuffer (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Minibuffer-File.html#Minibuffer-File&quot;&gt;Minibuffers for File Names&lt;/a&gt; in</source>
          <target state="translated">Для затемненного текста. Например, он используется для игнорируемой части имени файла в минибуфере (см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Minibuffer-File.html#Minibuffer-File&quot;&gt;Минибуферы для имен файлов&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="5592d06734e01b56669b7b1caf8a3c141e8d7c72" translate="yes" xml:space="preserve">
          <source>For each &lt;var&gt;package&lt;/var&gt;, which is a symbol, there are one or more elements that contain a package version &lt;var&gt;pversion&lt;/var&gt; with an associated Emacs version &lt;var&gt;eversion&lt;/var&gt;. These versions are strings. For example, the MH-E package updates this alist with the following:</source>
          <target state="translated">Для каждого &lt;var&gt;package&lt;/var&gt; , который является символом, есть один или несколько элементов , которые содержат пакет версии &lt;var&gt;pversion&lt;/var&gt; с ассоциированной Emacs версии &lt;var&gt;eversion&lt;/var&gt; . Эти версии - строки. Например, пакет MH-E обновляет этот список следующим образом:</target>
        </trans-unit>
        <trans-unit id="585b81ea7d737603e85999c64cc945eb2153ae26" translate="yes" xml:space="preserve">
          <source>For each directory in &lt;code&gt;load-path&lt;/code&gt;, Emacs then checks to see if it contains a file</source>
          <target state="translated">Для каждого каталога в &lt;code&gt;load-path&lt;/code&gt; Emacs затем проверяет, содержит ли он файл</target>
        </trans-unit>
        <trans-unit id="d779a4ebd64888b38cfe346c6e444aa365dc3c8d" translate="yes" xml:space="preserve">
          <source>For each internal window, the screen areas of the immediate children are arranged either vertically or horizontally (never both). If the child windows are arranged one above the other, they are said to form a &lt;em&gt;vertical combination&lt;/em&gt;; if they are arranged side by side, they are said to form a &lt;em&gt;horizontal combination&lt;/em&gt;. Consider the following example:</source>
          <target state="translated">Для каждого внутреннего окна области экрана непосредственных дочерних элементов располагаются либо вертикально, либо горизонтально (но не одновременно). Если дочерние окна расположены одно над другим, говорят, что они образуют &lt;em&gt;вертикальную комбинацию&lt;/em&gt; ; если они расположены бок о бок, говорят, что они образуют &lt;em&gt;горизонтальную комбинацию&lt;/em&gt; . Рассмотрим следующий пример:</target>
        </trans-unit>
        <trans-unit id="743c690cc98b53d8a1c6cfd4427025d5e238101a" translate="yes" xml:space="preserve">
          <source>For efficiency this function might return a value that is &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;time&lt;/var&gt;, or that otherwise shares structure with &lt;var&gt;time&lt;/var&gt;.</source>
          <target state="translated">Для повышения эффективности этой функция может возвращать значение, которое &lt;code&gt;eq&lt;/code&gt; на &lt;var&gt;time&lt;/var&gt; , или в противном случае акция структура с &lt;var&gt;time&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c8a1f0205dc400cc4bfe8517f02f340b224dbb0d" translate="yes" xml:space="preserve">
          <source>For efficiency, Emacs does not continuously recompute each window&amp;rsquo;s mode line and header line. It does so when circumstances appear to call for it&amp;mdash;for instance, if you change the window configuration, switch buffers, narrow or widen the buffer, scroll, or modify the buffer. If you alter any of the variables referenced by &lt;code&gt;mode-line-format&lt;/code&gt; or &lt;code&gt;header-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-variables#Mode-Line-Variables&quot;&gt;Mode Line Variables&lt;/a&gt;), or any other data structures that affect how text is displayed (see &lt;a href=&quot;display#Display&quot;&gt;Display&lt;/a&gt;), you should use the function &lt;code&gt;force-mode-line-update&lt;/code&gt; to update the display.</source>
          <target state="translated">Для эффективности Emacs не пересчитывает постоянно строку режима и строку заголовка каждого окна. Это происходит, когда обстоятельства требуют этого - например, если вы меняете конфигурацию окна, переключаете буферы, сужаете или расширяете буфер, прокручиваете или изменяете буфер. Если вы изменяете любую из переменных, на которые ссылается &lt;code&gt;mode-line-format&lt;/code&gt; или формат строки &lt;code&gt;header-line-format&lt;/code&gt; (см. &lt;a href=&quot;mode-line-variables#Mode-Line-Variables&quot;&gt;Переменные строки режима&lt;/a&gt; ), или любые другие структуры данных, которые влияют на то, как отображается текст (см. &lt;a href=&quot;display#Display&quot;&gt;Отображение&lt;/a&gt; ), вы должны использовать функцию &lt;code&gt;force-mode-line-update&lt;/code&gt; для обновления дисплея.</target>
        </trans-unit>
        <trans-unit id="f6f082c77d40eec0a94cd546026872b5e62ed240" translate="yes" xml:space="preserve">
          <source>For efficiency, we recommend writing these functions so that they usually assign faces to around 400 to 600 characters at each call.</source>
          <target state="translated">Для большей эффективности мы рекомендуем писать эти функции так,чтобы они обычно присваивали лицам от 400 до 600 символов при каждом вызове.</target>
        </trans-unit>
        <trans-unit id="b45b099ef44308af9850ef419b10729db525c224" translate="yes" xml:space="preserve">
          <source>For elements whose &lt;var&gt;matcher&lt;/var&gt; is a function, the function should ensure that submatch 0 covers the whole relevant multiline construct, even if only a small subpart will be highlighted. It is often just as easy to add the &lt;code&gt;font-lock-multiline&lt;/code&gt; property by hand.</source>
          <target state="translated">Для элементов, &lt;var&gt;matcher&lt;/var&gt; которых является функцией, функция должна гарантировать, что подсовпадение 0 охватывает всю соответствующую многострочную конструкцию, даже если будет выделена только небольшая подчасть. Часто так же просто добавить свойство &lt;code&gt;font-lock-multiline&lt;/code&gt; вручную.</target>
        </trans-unit>
        <trans-unit id="dc3c09a115b4ee611eb7505826a4fa0c2a8495d8" translate="yes" xml:space="preserve">
          <source>For example</source>
          <target state="translated">Например</target>
        </trans-unit>
        <trans-unit id="1da55473e7e0bd5ddce679a996ae1f4bc172ce33" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;(168 . mute-acute)&lt;/code&gt; defines a system-specific key (used by HP X servers) whose numeric code is -2**28 + 168.</source>
          <target state="translated">Например, &lt;code&gt;(168 . mute-acute)&lt;/code&gt; определяет системный ключ (используемый серверами HP X), числовой код которого -2 ** 28 + 168.</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">Например,</target>
        </trans-unit>
        <trans-unit id="67c7bfe6911146baef42ccf95311646fa6de1225" translate="yes" xml:space="preserve">
          <source>For example, &amp;lsquo;</source>
          <target state="translated">Например, '</target>
        </trans-unit>
        <trans-unit id="744b687fbce69d0c70cd3e18220f9dacadd484ee" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;((top . left) (t . right))&lt;/code&gt; places the top angle bitmap in left fringe, and the bottom angle bitmap as well as both arrow bitmaps in right fringe. To show the angle bitmaps in the left fringe, and no arrow bitmaps, use &lt;code&gt;((top .  left) (bottom . left))&lt;/code&gt;.</source>
          <target state="translated">Например, &lt;code&gt;((top . left) (t . right))&lt;/code&gt; помещает растровое изображение верхнего угла в левую границу, а растровое изображение нижнего угла, а также оба растровых изображения стрелок в правой части. Чтобы отобразить растровые изображения углов в левой части и не отображать растровые изображения со стрелками, используйте &lt;code&gt;((top . left) (bottom . left))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f964fb57ecfe5d927e9308065e31b4bf29558753" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;(format-mode-line header-line-format)&lt;/code&gt; returns the text that would appear in the selected window&amp;rsquo;s header line (&lt;code&gt;&quot;&quot;&lt;/code&gt; if it has no header line). &lt;code&gt;(format-mode-line header-line-format
'header-line)&lt;/code&gt; returns the same text, with each character carrying the face that it will have in the header line itself, and also redraws the header line.</source>
          <target state="translated">Например, &lt;code&gt;(format-mode-line header-line-format)&lt;/code&gt; возвращает текст, который появится в строке заголовка выбранного окна ( &lt;code&gt;&quot;&quot;&lt;/code&gt; , если у него нет строки заголовка). &lt;code&gt;(format-mode-line header-line-format 'header-line)&lt;/code&gt; возвращает тот же текст, при этом каждый символ несет лицо, которое он будет иметь в самой строке заголовка, а также перерисовывает строку заголовка.</target>
        </trans-unit>
        <trans-unit id="efc83ffc3386e01c1e8ade2e8cd7e012a462a074" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;(list integer string function)&lt;/code&gt; describes a list of three elements; the first element must be an integer, the second a string, and the third a function.</source>
          <target state="translated">Например, &lt;code&gt;(list integer string function)&lt;/code&gt; описывает список из трех элементов; первый элемент должен быть целым числом, второй - строкой, а третий - функцией.</target>
        </trans-unit>
        <trans-unit id="3ef44bbdb2e48aa8186cb898c6acf5f8c9242879" translate="yes" xml:space="preserve">
          <source>For example, VT100 terminals send</source>
          <target state="translated">Например,терминалы VT100 посылают</target>
        </trans-unit>
        <trans-unit id="23ba4f1aaf8956b33e5b48d8206686c31ca1190c" translate="yes" xml:space="preserve">
          <source>For example, after evaluating &lt;code&gt;(fac 5)&lt;/code&gt; with a source breakpoint, and setting &lt;code&gt;edebug-test-coverage&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;, when the breakpoint is reached, the frequency data looks like this:</source>
          <target state="translated">Например, после оценки &lt;code&gt;(fac 5)&lt;/code&gt; с исходной точки останова, и установка &lt;code&gt;edebug-test-coverage&lt;/code&gt; до &lt;code&gt;t&lt;/code&gt; , когда будет достигнута точка останова, выглядит частоты данных , как это:</target>
        </trans-unit>
        <trans-unit id="a05e8356c63b07a3e3fc9b2fa536ac0bcc4967b7" translate="yes" xml:space="preserve">
          <source>For example, an argument list that looks like this:</source>
          <target state="translated">Например,список аргументов,который выглядит так:</target>
        </trans-unit>
        <trans-unit id="05d69093edb129241b3a840cf6b1b328b6242dcb" translate="yes" xml:space="preserve">
          <source>For example, characters with different coding points but the same meaning might be considered as equal, like different grave accent Unicode characters:</source>
          <target state="translated">Например,символы с разными точками кодирования,но одно и то же значение можно считать одинаковыми,как и символы с разным грубым акцентом в юникоде:</target>
        </trans-unit>
        <trans-unit id="27adeb48c032951b6d20992076af3c8afa49c305" translate="yes" xml:space="preserve">
          <source>For example, from the following we deduce that any attempt to read a file in</source>
          <target state="translated">Например,из нижеследующего мы делаем вывод,что любая попытка прочитать файл в</target>
        </trans-unit>
        <trans-unit id="0273d690dd99e985b0b2971241e85b32b497db6a" translate="yes" xml:space="preserve">
          <source>For example, given a macro defined as follows:</source>
          <target state="translated">Например,задан макрос,определенный следующим образом:</target>
        </trans-unit>
        <trans-unit id="db74331eb04a1de8dbcacf0c70f3b3441856bf28" translate="yes" xml:space="preserve">
          <source>For example, here are the file attributes for</source>
          <target state="translated">Например,вот атрибуты файла для</target>
        </trans-unit>
        <trans-unit id="005c7abc213860be7f588f0de309060be8ddf15b" translate="yes" xml:space="preserve">
          <source>For example, here is how Emacs sets the parent of &lt;code&gt;help-mode-map&lt;/code&gt;, such that it inherits from both &lt;code&gt;button-buffer-map&lt;/code&gt; and &lt;code&gt;special-mode-map&lt;/code&gt;:</source>
          <target state="translated">Например, вот как Emacs устанавливает родителя &lt;code&gt;help-mode-map&lt;/code&gt; , так что он наследуется как от &lt;code&gt;button-buffer-map&lt;/code&gt; ,так и от &lt;code&gt;special-mode-map&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8b9b4bb05ac508d1f9ca72c94fdcaa4c15ce5531" translate="yes" xml:space="preserve">
          <source>For example, here is how Info mode handles</source>
          <target state="translated">Например,вот как режим Информация обрабатывает</target>
        </trans-unit>
        <trans-unit id="965efa71bb0bbcfbc42c969ae3abf4c71959d610" translate="yes" xml:space="preserve">
          <source>For example, here is how pcvs enables</source>
          <target state="translated">Например,вот как pcvs позволяет</target>
        </trans-unit>
        <trans-unit id="ef5d21db3ba65b99f498854b10fea91677ea3a8d" translate="yes" xml:space="preserve">
          <source>For example, here is how to construct a display table that mimics the effect of setting &lt;code&gt;ctl-arrow&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value (see &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;, for the function &lt;code&gt;make-glyph-code&lt;/code&gt;):</source>
          <target state="translated">Например, вот как построить таблицу отображения , которая имитирует эффект установки &lt;code&gt;ctl-arrow&lt;/code&gt; к не- &lt;code&gt;nil&lt;/code&gt; стоимости (см &lt;a href=&quot;glyphs#Glyphs&quot;&gt;глифы&lt;/a&gt; , для функции &lt;code&gt;make-glyph-code&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="595d53d45350a65aafc72a30d20894f7a9984264" translate="yes" xml:space="preserve">
          <source>For example, here is how to set the &lt;code&gt;comment&lt;/code&gt; and &lt;code&gt;face&lt;/code&gt; properties of a range of text:</source>
          <target state="translated">Например, вот как установить свойства &lt;code&gt;comment&lt;/code&gt; и &lt;code&gt;face&lt;/code&gt; для диапазона текста:</target>
        </trans-unit>
        <trans-unit id="74a09f53a928afdb5314957c2f2bf981977e0431" translate="yes" xml:space="preserve">
          <source>For example, here we make an invisible buffer for temporary use, and make sure to kill it before finishing:</source>
          <target state="translated">Например,здесь мы делаем невидимый буфер для временного использования,и обязательно убиваем его перед окончанием:</target>
        </trans-unit>
        <trans-unit id="c5f653d685daad8272ec011f525c34b0738959db" translate="yes" xml:space="preserve">
          <source>For example, here&amp;rsquo;s the definition of the standard face &lt;code&gt;highlight&lt;/code&gt;:</source>
          <target state="translated">Например, вот определение стандартного &lt;code&gt;highlight&lt;/code&gt; лица :</target>
        </trans-unit>
        <trans-unit id="395ba922e8b33bcf9d38dae422d749535c7b11b4" translate="yes" xml:space="preserve">
          <source>For example, if &lt;var&gt;name&lt;/var&gt; is &lt;code&gt;(a b 2 c)&lt;/code&gt;, that means to find field &lt;code&gt;c&lt;/code&gt; in the third element of subfield &lt;code&gt;b&lt;/code&gt; of field &lt;code&gt;a&lt;/code&gt;. (This corresponds to &lt;code&gt;struct.a.b[2].c&lt;/code&gt; in C.)</source>
          <target state="translated">Например, если &lt;var&gt;name&lt;/var&gt; является &lt;code&gt;(a b 2 c)&lt;/code&gt; , это означает , что , чтобы найти поле &lt;code&gt;c&lt;/code&gt; в третьем элементе подполе &lt;code&gt;b&lt;/code&gt; из поля &lt;code&gt;a&lt;/code&gt; . (Это соответствует &lt;code&gt;struct.a.b[2].c&lt;/code&gt; в C.)</target>
        </trans-unit>
        <trans-unit id="0ff800dd3253158d07e32e80e98d75b35fc7a3ef" translate="yes" xml:space="preserve">
          <source>For example, if Font-Lock mode is enabled, you might get results like these:</source>
          <target state="translated">Например,если включен режим Font-Lock,вы можете получить такие результаты:</target>
        </trans-unit>
        <trans-unit id="df6fc5dabfc94afe09280ab88b14c7122922b50e" translate="yes" xml:space="preserve">
          <source>For example, if point is 1 and you set the start of the window to 37, the start of the next line, point will be above the top of the window. The display routines will automatically move point if it is still 1 when redisplay occurs. Here is an example:</source>
          <target state="translated">Например,если точка равна 1,а начало окна установлено на 37,то начало следующей линии,то точка будет находиться выше верхней части окна.Если при повторном отображении точка все еще будет равна 1,то программа автоматически переместит ее.Вот пример:</target>
        </trans-unit>
        <trans-unit id="bb0699bd8f47a3e8cccd5e7fd0f027e76b217cb4" translate="yes" xml:space="preserve">
          <source>For example, if the current buffer name is &amp;lsquo;</source>
          <target state="translated">Например, если текущее имя буфера - '</target>
        </trans-unit>
        <trans-unit id="adb2b1888f6b5b7287616e1bc0062845ce891f7f" translate="yes" xml:space="preserve">
          <source>For example, if we distribute version 1.3 of the superfrobnicator as a multi-file package, the tar file would be</source>
          <target state="translated">Например,если мы будем распространять версию 1.3 суперфробникатора в виде многофайлового пакета,то tar-файл будет представлять собой</target>
        </trans-unit>
        <trans-unit id="129a058c7280c246533530a1fd820643df60b883" translate="yes" xml:space="preserve">
          <source>For example, if you call &lt;code&gt;read-key-sequence&lt;/code&gt; and then click the mouse on the window&amp;rsquo;s mode line, you get two events, like this:</source>
          <target state="translated">Например, если вы вызываете команду &lt;code&gt;read-key-sequence&lt;/code&gt; , а затем щелкаете мышью по строке режима окна, вы получаете два события, например:</target>
        </trans-unit>
        <trans-unit id="d09e7149c4c55ac025b6b60f987664076f98cc22" translate="yes" xml:space="preserve">
          <source>For example, if you plan to sort all the lines in the region by the first word on each line starting with the letter &amp;lsquo;</source>
          <target state="translated">Например, если вы планируете отсортировать все строки в регионе по первому слову в каждой строке, начинающейся с буквы '</target>
        </trans-unit>
        <trans-unit id="485357f2c908b453f13370041021bdb6b189d1b3" translate="yes" xml:space="preserve">
          <source>For example, in</source>
          <target state="translated">Например,в</target>
        </trans-unit>
        <trans-unit id="68c35d1e3bb1c66f44569c82c8af6a96b625a484" translate="yes" xml:space="preserve">
          <source>For example, in the standard syntax table, the entry for &amp;lsquo;</source>
          <target state="translated">Например, в стандартной таблице синтаксиса запись для '</target>
        </trans-unit>
        <trans-unit id="49538d0b2708caa4cbfe7507522436cff4c2aa9b" translate="yes" xml:space="preserve">
          <source>For example, punctuation and whitespace characters might be ignored for sorting (see &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;Sequence Functions&lt;/a&gt;):</source>
          <target state="translated">Например, знаки препинания и пробелы могут игнорироваться при сортировке (см. &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;Функции последовательности&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="2166ab4db5dbdc8250f642388719feb57292d22d" translate="yes" xml:space="preserve">
          <source>For example, setting this variable is useful to get a backtrace from code evaluated by emacsclient&amp;rsquo;s</source>
          <target state="translated">Например, установка этой переменной полезна для получения обратной трассировки из кода, оцениваемого emacsclient's</target>
        </trans-unit>
        <trans-unit id="5420205529242dca31bafacc450a37a00adac6c1" translate="yes" xml:space="preserve">
          <source>For example, suppose My mode provides a special command &lt;code&gt;my-kill-line&lt;/code&gt;, which should be invoked instead of &lt;code&gt;kill-line&lt;/code&gt;. To establish this, its mode keymap should contain the following remapping:</source>
          <target state="translated">Например, предположим, что в моем режиме есть специальная команда &lt;code&gt;my-kill-line&lt;/code&gt; , которую следует вызывать вместо &lt;code&gt;kill-line&lt;/code&gt; . Чтобы установить это, его раскладка режима должна содержать следующее переназначение:</target>
        </trans-unit>
        <trans-unit id="6735e17f34be2237ed73b289e8fd1588a3f7c8b3" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;shell-command-on-region&lt;/code&gt; command uses &lt;code&gt;call-shell-region&lt;/code&gt; in a manner similar to this:</source>
          <target state="translated">Например, команда &lt;code&gt;shell-command-on-region&lt;/code&gt; использует &lt;code&gt;call-shell-region&lt;/code&gt; аналогичным образом:</target>
        </trans-unit>
        <trans-unit id="27ee27aae03dd0ad802396582186884cc3bbd399" translate="yes" xml:space="preserve">
          <source>For example, the following code adds two fontification patterns for C mode: one to fontify the word &amp;lsquo;</source>
          <target state="translated">Например, следующий код добавляет два шаблона фонирования для режима C: один для фонирования слова '</target>
        </trans-unit>
        <trans-unit id="175738e16217893190fe59a465d2f0cbf4a51eae" translate="yes" xml:space="preserve">
          <source>For example, the following code would assign an italicized green face to the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;:</source>
          <target state="translated">Например, в следующем коде текст между &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; будет выделен зеленым курсивом :</target>
        </trans-unit>
        <trans-unit id="fe4398851e7138b4cfe9a97b657ef55520230c8a" translate="yes" xml:space="preserve">
          <source>For example, the function that implements numeric prefix arguments reads any number of digits. When it finds a non-digit event, it must unread the event so that it can be read normally by the command loop. Likewise, incremental search uses this feature to unread events with no special meaning in a search, because these events should exit the search and then execute normally.</source>
          <target state="translated">Например,функция,реализующая численные префиксные аргументы,считывает любое количество цифр.Когда она находит нецифровое событие,она должна непрочитать его,чтобы оно могло быть нормально прочитано командным циклом.Аналогичным образом,инкрементальный поиск использует эту функцию для непрочтения событий,не имеющих особого значения при поиске,так как эти события должны выйти из поиска и затем выполняться нормально.</target>
        </trans-unit>
        <trans-unit id="384f2d22a8a927ed244f80bc1dc93234f2018dcb" translate="yes" xml:space="preserve">
          <source>For example, the regular expression &amp;lsquo;</source>
          <target state="translated">Например, регулярное выражение '</target>
        </trans-unit>
        <trans-unit id="b2ef5659cb8be7a6b60ecf6bbc0af64c87f3fe3c" translate="yes" xml:space="preserve">
          <source>For example, the syntax descriptor for the character &amp;lsquo;</source>
          <target state="translated">Например, дескриптор синтаксиса для символа '</target>
        </trans-unit>
        <trans-unit id="4585c648d09853d23b2922efeb34fb0dcfabedb0" translate="yes" xml:space="preserve">
          <source>For example, the usual way to show what percentage of a buffer is above the top of the window is to use a list like this: &lt;code&gt;(-3 &quot;%p&quot;)&lt;/code&gt;.</source>
          <target state="translated">Например, обычный способ показать, какой процент буфера находится над верхней частью окна, - это использовать такой список: &lt;code&gt;(-3 &quot;%p&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbd366bf7da22ebc87b5581744b6af4853c2f8fd" translate="yes" xml:space="preserve">
          <source>For example, this expression tests whether &lt;code&gt;x&lt;/code&gt; is either &lt;code&gt;nil&lt;/code&gt; or the integer zero:</source>
          <target state="translated">Например, это выражение проверяет, равно ли &lt;code&gt;x&lt;/code&gt; &lt;code&gt;nil&lt;/code&gt; или целому нулю:</target>
        </trans-unit>
        <trans-unit id="2c848e5dda222b3589fe7c48d05f8bcd6f0e6905" translate="yes" xml:space="preserve">
          <source>For example, this redefines</source>
          <target state="translated">Например,это переопределяет</target>
        </trans-unit>
        <trans-unit id="8b0e6046e3d16467ee010606573cdfcbd88b269c" translate="yes" xml:space="preserve">
          <source>For example, to find the buffer position of column &lt;var&gt;col&lt;/var&gt; of screen line &lt;var&gt;line&lt;/var&gt; of a certain window, pass the window&amp;rsquo;s display start location as &lt;var&gt;from&lt;/var&gt; and the window&amp;rsquo;s upper-left coordinates as &lt;var&gt;frompos&lt;/var&gt;. Pass the buffer&amp;rsquo;s &lt;code&gt;(point-max)&lt;/code&gt; as &lt;var&gt;to&lt;/var&gt;, to limit the scan to the end of the accessible portion of the buffer, and pass &lt;var&gt;line&lt;/var&gt; and &lt;var&gt;col&lt;/var&gt; as &lt;var&gt;topos&lt;/var&gt;. Here&amp;rsquo;s a function that does this:</source>
          <target state="translated">Например, чтобы найти позицию в буфере столбца &lt;var&gt;col&lt;/var&gt; строчной &lt;var&gt;line&lt;/var&gt; экрана определенного окна, передайте начальное положение отображения окна как &lt;var&gt;from&lt;/var&gt; , а координаты левого верхнего &lt;var&gt;frompos&lt;/var&gt; окна как frompos . Передайте буфер &lt;code&gt;(point-max)&lt;/code&gt; as &lt;var&gt;to&lt;/var&gt; , чтобы ограничить сканирование до конца доступной части буфера, и передайте &lt;var&gt;line&lt;/var&gt; и &lt;var&gt;col&lt;/var&gt; как &lt;var&gt;topos&lt;/var&gt; . Вот функция, которая делает это:</target>
        </trans-unit>
        <trans-unit id="9e942398938b535914ef7e95735c0d1f57c8343d" translate="yes" xml:space="preserve">
          <source>For example, to match &lt;var&gt;expval&lt;/var&gt; that must be a list of two elements whose first element is a specific string and the second element is any value, you can write a core pattern:</source>
          <target state="translated">Например, чтобы сопоставить &lt;var&gt;expval&lt;/var&gt; , который должен быть списком из двух элементов, первый элемент которых представляет собой определенную строку, а второй элемент - любое значение, вы можете написать основной шаблон:</target>
        </trans-unit>
        <trans-unit id="8647d2af0d56d8b4d684ccdc41d0e7ef012c977f" translate="yes" xml:space="preserve">
          <source>For example, to specify a list whose first element must be &lt;code&gt;baz&lt;/code&gt; and whose remaining arguments should be zero or more of &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt;, use this customization type:</source>
          <target state="translated">Например, чтобы указать список, первым элементом которого должен быть &lt;code&gt;baz&lt;/code&gt; , а оставшимися аргументами должно быть ноль или более &lt;code&gt;foo&lt;/code&gt; и &lt;code&gt;bar&lt;/code&gt; , используйте этот тип настройки:</target>
        </trans-unit>
        <trans-unit id="3fced1f25af160096cf3380284c60e8f0069d9a0" translate="yes" xml:space="preserve">
          <source>For example, using 4-bit binary numbers, the bitwise AND of 13 and 12 is 12: 1101 combined with 1100 produces 1100. In both the binary numbers, the leftmost two bits are both 1 so the leftmost two bits of the returned value are both 1. However, for the rightmost two bits, each is 0 in at least one of the arguments, so the rightmost two bits of the returned value are both 0.</source>
          <target state="translated">Например,при использовании 4-разрядных двоичных чисел,битовое число И из 13 и 12 равно 12:1101 в сочетании с 1100 производит 1100.В обоих двоичных числах крайние левые два бита равны 1,так что крайние левые два бита возвращаемого значения равны 1.Однако для крайних правых двух битов каждый из аргументов равен 0,так что крайние правые два бита возвращаемого значения равны 0.</target>
        </trans-unit>
        <trans-unit id="a991b30b321a789877e152611b03f5b1bbf24c9c" translate="yes" xml:space="preserve">
          <source>For example, when a function is called, its argument variables receive local values, which are the actual arguments supplied to the function call; these local bindings take effect within the body of the function. To take another example, the &lt;code&gt;let&lt;/code&gt; special form explicitly establishes local bindings for specific variables, which take effect only within the body of the &lt;code&gt;let&lt;/code&gt; form.</source>
          <target state="translated">Например, когда вызывается функция, ее переменные аргумента получают локальные значения, которые являются фактическими аргументами, передаваемыми при вызове функции; эти локальные привязки действуют в теле функции. Другой пример: специальная форма &lt;code&gt;let&lt;/code&gt; явно устанавливает локальные привязки для определенных переменных, которые действуют только в теле формы &lt;code&gt;let&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="302d045a398db08075b269c868fcbd268402b1ec" translate="yes" xml:space="preserve">
          <source>For example, you could define &lt;code&gt;name&lt;/code&gt; to mean &lt;code&gt;(one-or-more letter)&lt;/code&gt;, and &lt;code&gt;(quoted &lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; to mean &lt;code&gt;(seq ?' &lt;var&gt;x&lt;/var&gt; ?')&lt;/code&gt; for any &lt;var&gt;x&lt;/var&gt;. These forms could then be used in &lt;code&gt;rx&lt;/code&gt; expressions like any other: &lt;code&gt;(rx (quoted name))&lt;/code&gt; would match a nonempty sequence of letters inside single quotes.</source>
          <target state="translated">Например, вы можете определить &lt;code&gt;name&lt;/code&gt; как означающее &lt;code&gt;(one-or-more letter)&lt;/code&gt; и &lt;code&gt;(quoted &lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; как означающий &lt;code&gt;(seq ?' &lt;var&gt;x&lt;/var&gt; ?')&lt;/code&gt; Для любого &lt;var&gt;x&lt;/var&gt; . Эти формы затем могут использоваться в выражениях &lt;code&gt;rx&lt;/code&gt; , как и любые другие: &lt;code&gt;(rx (quoted name))&lt;/code&gt; будет соответствовать непустой последовательности букв внутри одинарных кавычек.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="14b38a77b4f2c99de9b60a13e177bd689dcadc7c" translate="yes" xml:space="preserve">
          <source>For examples of key sequences written in string and vector representations, &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Init-Rebinding.html#Init-Rebinding&quot;&gt;Init Rebinding&lt;/a&gt; in</source>
          <target state="translated">Примеры последовательностей клавиш, записанных в строковом и векторном представлениях, можно &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Init-Rebinding.html#Init-Rebinding&quot;&gt;найти&lt;/a&gt; в разделе &amp;laquo;Инициализировать повторное связывание в</target>
        </trans-unit>
        <trans-unit id="756ed62664ef2f85085fafd6014de3a11655e566" translate="yes" xml:space="preserve">
          <source>For flexibility, the</source>
          <target state="translated">Для гибкости</target>
        </trans-unit>
        <trans-unit id="885fd45c866065f1ec4b303a41cc5a28f9d59115" translate="yes" xml:space="preserve">
          <source>For frames with an internal menu or tool bar, the frame&amp;rsquo;s native height cannot be told exactly before the frame has been actually drawn. This means that in general you cannot use the native size to specify the initial size of a frame. As soon as you know the native size of a visible frame, you can calculate its outer size (see &lt;a href=&quot;frame-layout#Frame-Layout&quot;&gt;Frame Layout&lt;/a&gt;) by adding in the remaining components from the return value of &lt;code&gt;frame-geometry&lt;/code&gt;. For invisible frames or for frames that have yet to be created, however, the outer size can only be estimated. This also means that calculating an exact initial position of a frame specified via offsets from the right or bottom edge of the screen (see &lt;a href=&quot;frame-position#Frame-Position&quot;&gt;Frame Position&lt;/a&gt;) is impossible.</source>
          <target state="translated">Для фреймов с внутренним меню или панелью инструментов нельзя точно определить собственную высоту фрейма до того, как фрейм будет фактически нарисован. Это означает, что, как правило, вы не можете использовать собственный размер для определения начального размера кадра. Как только вы знаете собственный размер видимого фрейма, вы можете рассчитать его внешний размер (см. &lt;a href=&quot;frame-layout#Frame-Layout&quot;&gt;Макет фрейма&lt;/a&gt; ), добавив оставшиеся компоненты из возвращаемого значения &lt;code&gt;frame-geometry&lt;/code&gt; . Однако для невидимых фреймов или фреймов, которые еще предстоит создать, внешний размер можно только оценить. Это также означает, что вычисление точного начального положения кадра, указанного с помощью смещений от правого или нижнего края экрана (см. &lt;a href=&quot;frame-position#Frame-Position&quot;&gt;Положение кадра&lt;/a&gt; ), невозможно.</target>
        </trans-unit>
        <trans-unit id="2f94eeb4c257732d5e9d9e2db099193ac251cd9c" translate="yes" xml:space="preserve">
          <source>For functions and variables related to visiting files in buffers, see &lt;a href=&quot;visiting-files#Visiting-Files&quot;&gt;Visiting Files&lt;/a&gt; and &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Saving Buffers&lt;/a&gt;. For functions and variables related to the display of buffers in windows, see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;.</source>
          <target state="translated">Информацию о функциях и переменных, связанных с посещением файлов в буферах, см. &lt;a href=&quot;visiting-files#Visiting-Files&quot;&gt;В разделах &amp;laquo;Посещение файлов&lt;/a&gt; и &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;сохранение буферов&amp;raquo;&lt;/a&gt; . Для получения информации о функциях и переменных, связанных с отображением буферов в окнах, см. &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Буферы и Windows&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="096e441f5d07c9aeca48a8c3b6c68d8259beb478" translate="yes" xml:space="preserve">
          <source>For good performance, it&amp;rsquo;s very important to use the &lt;var&gt;limit&lt;/var&gt; argument to these functions, especially the ones that search for a single property&amp;mdash;otherwise, they may spend a long time scanning to the end of the buffer, if the property you are interested in does not change.</source>
          <target state="translated">Для хорошей производительности очень важно использовать аргумент &lt;var&gt;limit&lt;/var&gt; для этих функций, особенно тех, которые ищут одно свойство, иначе они могут потратить много времени на сканирование до конца буфера, если интересующее вас свойство не изменить.</target>
        </trans-unit>
        <trans-unit id="c636758eb9f2ccf22d584f3ccf22195b5beb19a7" translate="yes" xml:space="preserve">
          <source>For graphical terminals, note that on multi-monitor setups this refers to the height for all physical monitors associated with &lt;var&gt;display&lt;/var&gt;. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">Для графических терминалов обратите внимание, что в настройках с несколькими мониторами это относится к высоте для всех физических мониторов, связанных с &lt;var&gt;display&lt;/var&gt; . См. &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Несколько терминалов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4b8896e43509c656a91f644b662d9fd3b6c48f29" translate="yes" xml:space="preserve">
          <source>For graphical terminals, note that on multi-monitor setups this refers to the pixel height for all physical monitors associated with &lt;var&gt;display&lt;/var&gt;. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">Для графических терминалов обратите внимание, что в настройках с несколькими мониторами это относится к высоте пикселей для всех физических мониторов, связанных с &lt;var&gt;display&lt;/var&gt; . См. &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Несколько терминалов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5ab03b3e614eac3a7bbaa567f279a4f1f9d057d" translate="yes" xml:space="preserve">
          <source>For graphical terminals, note that on multi-monitor setups this refers to the pixel width for all physical monitors associated with &lt;var&gt;display&lt;/var&gt;. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">Для графических терминалов обратите внимание, что в настройках с несколькими мониторами это относится к ширине в пикселях для всех физических мониторов, связанных с &lt;var&gt;display&lt;/var&gt; . См. &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Несколько терминалов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9af87cec8b479351a811ac8aa5c236492c607087" translate="yes" xml:space="preserve">
          <source>For graphical terminals, note that on multi-monitor setups this refers to the width for all physical monitors associated with &lt;var&gt;display&lt;/var&gt;. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">Для графических терминалов обратите внимание, что в настройках с несколькими мониторами это относится к ширине всех физических мониторов, связанных с &lt;var&gt;display&lt;/var&gt; . См. &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Несколько терминалов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="632f51d2e3c1de25d6cd1469e9b63dd75f33b29f" translate="yes" xml:space="preserve">
          <source>For higher-level input facilities, see &lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;Minibuffers&lt;/a&gt;.</source>
          <target state="translated">Для средств ввода более высокого уровня см. &lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;Минибуферы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9da377bf3a4e5ee235e3f1dc396f7d2833196cf1" translate="yes" xml:space="preserve">
          <source>For historical compatibility reasons, &amp;lsquo;</source>
          <target state="translated">По причинам исторической совместимости '</target>
        </trans-unit>
        <trans-unit id="65628619bb4b16082341e795ef37116997318974" translate="yes" xml:space="preserve">
          <source>For historical reasons, Emacs does not run a separate hook whenever a window gets selected. Applications and internal routines often temporarily select a window to perform a few actions on it. They do that either to simplify coding&amp;mdash;because many functions by default operate on the selected window when no &lt;var&gt;window&lt;/var&gt; argument is specified&amp;mdash;or because some functions did not (and still do not) take a window as argument and always operate(d) on the selected window instead. Running a hook every time a window gets selected for a short time and once more when the previously selected window gets restored is not useful.</source>
          <target state="translated">По историческим причинам Emacs не запускает отдельную ловушку всякий раз, когда выбирается окно. Приложения и внутренние процедуры часто временно выбирают окно, чтобы выполнить с ним несколько действий. Они делают это либо для упрощения кодирования - потому что многие функции по умолчанию работают с выбранным окном, когда не указан аргумент &lt;var&gt;window&lt;/var&gt; - либо потому, что некоторые функции не принимают (и до сих пор не принимают) окно в качестве аргумента и всегда работают (d) с выбранное окно. Запуск ловушки каждый раз, когда окно выбирается на короткое время и еще раз, когда восстанавливается ранее выбранное окно, бесполезно.</target>
        </trans-unit>
        <trans-unit id="00ffbca2eef06914871b856c4d2841fd46e63245" translate="yes" xml:space="preserve">
          <source>For historical reasons, Emacs treats the</source>
          <target state="translated">По историческим причинам,Эмакс лечит</target>
        </trans-unit>
        <trans-unit id="046929ea68cbb73ffed966af9cb9c86855132a7b" translate="yes" xml:space="preserve">
          <source>For image types whose support libraries are statically linked, this function always returns &lt;code&gt;t&lt;/code&gt;. For image types whose support libraries are dynamically loaded, it returns &lt;code&gt;t&lt;/code&gt; if the library could be loaded and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">Для типов изображений, библиотеки поддержки которых статически связаны, эта функция всегда возвращает &lt;code&gt;t&lt;/code&gt; . Для типов изображений, библиотеки поддержки которых загружаются динамически, он возвращает &lt;code&gt;t&lt;/code&gt; , если библиотека может быть загружена, и &lt;code&gt;nil&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="d115e12f0efdfbb2d9aaf8b6529a43e7a2fbef42" translate="yes" xml:space="preserve">
          <source>For information about how &lt;code&gt;load&lt;/code&gt; is used in building Emacs, see &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;.</source>
          <target state="translated">Информацию о том, как &lt;code&gt;load&lt;/code&gt; используется при сборке Emacs, смотрите в разделе &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Сборка Emacs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb864d046c9d6a21427cb9289d67ab5c533404eb" translate="yes" xml:space="preserve">
          <source>For information about other concatenation functions, see the description of &lt;code&gt;mapconcat&lt;/code&gt; in &lt;a href=&quot;mapping-functions#Mapping-Functions&quot;&gt;Mapping Functions&lt;/a&gt;, &lt;code&gt;vconcat&lt;/code&gt; in &lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;Vector Functions&lt;/a&gt;, and &lt;code&gt;append&lt;/code&gt; in &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;. For concatenating individual command-line arguments into a string to be used as a shell command, see &lt;a href=&quot;shell-arguments#Shell-Arguments&quot;&gt;combine-and-quote-strings&lt;/a&gt;.</source>
          <target state="translated">Для получения информации о других функциях конкатенации см. Описание &lt;code&gt;mapconcat&lt;/code&gt; в разделе &amp;laquo; &lt;a href=&quot;mapping-functions#Mapping-Functions&quot;&gt;Функции сопоставления&amp;raquo;&lt;/a&gt; , &lt;code&gt;vconcat&lt;/code&gt; в разделе &amp;laquo; &lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;Векторные функции&amp;raquo;&lt;/a&gt; и &lt;code&gt;append&lt;/code&gt; в &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;списки построения&lt;/a&gt; . Для объединения отдельных аргументов командной строки в строку, которая будет использоваться в качестве команды оболочки, см. &lt;a href=&quot;shell-arguments#Shell-Arguments&quot;&gt;Строки с сочетанием и кавычками&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="562de7ef6e5c5372cd8038579b0b5fa9de52b85c" translate="yes" xml:space="preserve">
          <source>For instance, here&amp;rsquo;s a closure that removes itself from a hook after being run once:</source>
          <target state="translated">Например, вот закрытие, которое удаляется из ловушки после однократного запуска:</target>
        </trans-unit>
        <trans-unit id="44d3371577866cddaf4db74fddddccf76614f5ae" translate="yes" xml:space="preserve">
          <source>For instance, if you want &amp;ldquo;same time next month&amp;rdquo;, you could say:</source>
          <target state="translated">Например, если вы хотите &amp;laquo;в следующем месяце в то же время&amp;raquo;, вы можете сказать:</target>
        </trans-unit>
        <trans-unit id="3865a9fa40f6a3d2713ffd26e08118fa4e6f6eac" translate="yes" xml:space="preserve">
          <source>For instance, if you want to make the</source>
          <target state="translated">Например,если вы хотите сделать</target>
        </trans-unit>
        <trans-unit id="e191e46f09a5a6a356d408b941943f636d82eff7" translate="yes" xml:space="preserve">
          <source>For instance, in old versions of Emacs the &lt;code&gt;sit-for&lt;/code&gt; function accepted three arguments, like this</source>
          <target state="translated">Например, в старых версиях Emacs &lt;code&gt;sit-for&lt;/code&gt; функции принимается три аргумента, как это</target>
        </trans-unit>
        <trans-unit id="30920d93fa04181e77388625fe59f18dfff55497" translate="yes" xml:space="preserve">
          <source>For instance, suppose &lt;code&gt;load-path&lt;/code&gt; is set to</source>
          <target state="translated">Например, предположим, что для &lt;code&gt;load-path&lt;/code&gt; установлено значение</target>
        </trans-unit>
        <trans-unit id="128598d10cceac7cba1f49e0a7362870b28df10f" translate="yes" xml:space="preserve">
          <source>For instance, this changes the default fontset to use a font of which family name is &amp;lsquo;</source>
          <target state="translated">Например, это изменяет набор шрифтов по умолчанию, чтобы использовать шрифт с фамилией '</target>
        </trans-unit>
        <trans-unit id="c0e75d5266c7e5f456b09b17569d8f50669d4c79" translate="yes" xml:space="preserve">
          <source>For instance, to display an arrow in the left fringe, using the &lt;code&gt;warning&lt;/code&gt; face, you could say something like:</source>
          <target state="translated">Например, чтобы отобразить стрелку в левом краю, используя &lt;code&gt;warning&lt;/code&gt; лицо, вы можете сказать что-то вроде:</target>
        </trans-unit>
        <trans-unit id="2cec329c05b78c603818950c0fa31246f51373c3" translate="yes" xml:space="preserve">
          <source>For instance, to increase the year in a decoded time, you could say:</source>
          <target state="translated">Например,чтобы увеличить год в расшифрованное время,можно сказать:</target>
        </trans-unit>
        <trans-unit id="a4eb2b60c2dd5ee8e2d11c45799591a9a142fb00" translate="yes" xml:space="preserve">
          <source>For interactive development of regular expressions, you can use the</source>
          <target state="translated">Для интерактивной разработки регулярных выражений можно воспользоваться функцией</target>
        </trans-unit>
        <trans-unit id="1227c8ac2d428a960d30b6659ad99b5189b10660" translate="yes" xml:space="preserve">
          <source>For interactive use, Emacs provides two commands which always split the selected window. These call &lt;code&gt;split-window&lt;/code&gt; internally.</source>
          <target state="translated">Для интерактивного использования Emacs предоставляет две команды, которые всегда разделяют выбранное окно. Они вызывают внутреннее &lt;code&gt;split-window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fd869c535f12482bfdf3b13eeadecad9584228d" translate="yes" xml:space="preserve">
          <source>For its working, &lt;code&gt;replace-buffer-contents&lt;/code&gt; needs to compare the contents of the original buffer with that of &lt;var&gt;source&lt;/var&gt; which is a costly operation if the buffers are huge and there is a high number of differences between them. In order to keep &lt;code&gt;replace-buffer-contents&lt;/code&gt;&amp;rsquo;s runtime in bounds, it has two optional arguments.</source>
          <target state="translated">Для своей работы &lt;code&gt;replace-buffer-contents&lt;/code&gt; необходимо сравнить содержимое исходного буфера с &lt;var&gt;source&lt;/var&gt; что является дорогостоящей операцией, если буферы огромны и между ними имеется большое количество различий. Чтобы сохранить время выполнения &lt;code&gt;replace-buffer-contents&lt;/code&gt; в пределах, у него есть два необязательных аргумента.</target>
        </trans-unit>
        <trans-unit id="a5ea8f4d1afb6f7f3e89cf1a3d588341e3fb83bf" translate="yes" xml:space="preserve">
          <source>For key lookup, only the event type matters: two events of the same type necessarily run the same command. The command can access the full values of these events using the &amp;lsquo;</source>
          <target state="translated">Для поиска ключей имеет значение только тип события: два события одного типа обязательно запускают одну и ту же команду. Команда может получить доступ к полным значениям этих событий, используя '</target>
        </trans-unit>
        <trans-unit id="edcd252dab164457f78c494eb745e585735056e9" translate="yes" xml:space="preserve">
          <source>For letters, the basic code itself indicates upper versus lower case; for digits and punctuation, the shift key selects an entirely different character with a different basic code. In order to keep within the</source>
          <target state="translated">Для букв сам основной код обозначает верхний и нижний регистр;для цифр и знаков препинания клавиша shift выбирает совершенно другой символ с другим основным кодом.Для того,чтобы не выходить за рамки</target>
        </trans-unit>
        <trans-unit id="d761f0e8822448b6dc970fbe8b9a8dc3b66c9b19" translate="yes" xml:space="preserve">
          <source>For mechanisms to add user-defined extensions to the &lt;code&gt;rx&lt;/code&gt; notation, see &lt;a href=&quot;extending-rx#Extending-Rx&quot;&gt;Extending Rx&lt;/a&gt;.</source>
          <target state="translated">Для получения информации о механизмах добавления пользовательских расширений в нотацию &lt;code&gt;rx&lt;/code&gt; см. &lt;a href=&quot;extending-rx#Extending-Rx&quot;&gt;Расширение Rx&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a396e4435f09e1fcfcd85ad1599a0c2f4e045ad7" translate="yes" xml:space="preserve">
          <source>For more coarse-grained suppression of compiler warnings, you can use the &lt;code&gt;with-no-warnings&lt;/code&gt; construct:</source>
          <target state="translated">Для более грубого подавления предупреждений компилятора вы можете использовать конструкцию &lt;code&gt;with-no-warnings&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="51d6ec0ae56211f45b2f4f741eaeaa54ee2c5ff1" translate="yes" xml:space="preserve">
          <source>For more control over the expansion, the &lt;code&gt;gv-define-expander&lt;/code&gt; macro can be used. For instance, a settable &lt;code&gt;substring&lt;/code&gt; could be implemented this way:</source>
          <target state="translated">Для большего контроля над расширением можно использовать макрос &lt;code&gt;gv-define-expander&lt;/code&gt; . Например, настраиваемая &lt;code&gt;substring&lt;/code&gt; может быть реализована следующим образом:</target>
        </trans-unit>
        <trans-unit id="524ad0277d25c2a67f3998052801445b5918661a" translate="yes" xml:space="preserve">
          <source>For more information about currently defined categories, run the command</source>
          <target state="translated">Для получения дополнительной информации об определенных в настоящее время категориях запустите команду</target>
        </trans-unit>
        <trans-unit id="b5c46c52685405cf067e15388e386b840ba65dc7" translate="yes" xml:space="preserve">
          <source>For more information about general sequence and array predicates, see &lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;Sequences Arrays Vectors&lt;/a&gt;, and &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;.</source>
          <target state="translated">Дополнительные сведения об общих предикатах последовательности и массивов см. В &lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;разделах Последовательности, массивы, векторы&lt;/a&gt; и &lt;a href=&quot;arrays#Arrays&quot;&gt;массивы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="db111e5010118b2c0af6eaa6bee37a4412fe7c17" translate="yes" xml:space="preserve">
          <source>For most image types, the value of a &lt;code&gt;:data&lt;/code&gt; property should be a string containing the image data. Some image types do not support &lt;code&gt;:data&lt;/code&gt;; for some others, &lt;code&gt;:data&lt;/code&gt; alone is not enough, so you need to use other image properties along with &lt;code&gt;:data&lt;/code&gt;. See the following subsections for details.</source>
          <target state="translated">Для большинства типов изображений значение свойства &lt;code&gt;:data&lt;/code&gt; должно быть строкой, содержащей данные изображения. Некоторые типы изображений не поддерживают &lt;code&gt;:data&lt;/code&gt; ; для некоторых других недостаточно &lt;code&gt;:data&lt;/code&gt; , поэтому вам нужно использовать другие свойства изображения вместе с &lt;code&gt;:data&lt;/code&gt; . См. Подробности в следующих подразделах.</target>
        </trans-unit>
        <trans-unit id="1ef84bfa8f9cff2af4cd7df121bd6682024ceda1" translate="yes" xml:space="preserve">
          <source>For most purposes, you can think of the current binding as the innermost local binding, or the global binding if there is no local binding. To be more precise, a rule called the &lt;em&gt;scoping rule&lt;/em&gt; determines where in a program a local binding takes effect. The default scoping rule in Emacs Lisp is called &lt;em&gt;dynamic scoping&lt;/em&gt;, which simply states that the current binding at any given point in the execution of a program is the most recently-created binding for that variable that still exists. For details about dynamic scoping, and an alternative scoping rule called &lt;em&gt;lexical scoping&lt;/em&gt;, See &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;.</source>
          <target state="translated">В большинстве случаев текущую привязку можно рассматривать как самую внутреннюю локальную привязку или как глобальную привязку, если локальной привязки нет. Чтобы быть более точным, правило, называемое правилом &lt;em&gt;области действия,&lt;/em&gt; определяет, где в программе действует локальная привязка. Правило области видимости по умолчанию в Emacs Lisp называется &lt;em&gt;динамической областью видимости&lt;/em&gt; , которая просто утверждает, что текущая привязка в любой заданной точке выполнения программы является самой последней созданной привязкой для этой переменной, которая все еще существует. Дополнительные сведения о динамической области видимости и альтернативном правиле &lt;em&gt;области видимости&lt;/em&gt; , называемом &lt;em&gt;лексической областью видимости&lt;/em&gt; , см. В разделе &amp;laquo; &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Область действия переменной&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="89f804faf672e4d150387c9abaf8964a26ecd02a" translate="yes" xml:space="preserve">
          <source>For on-demand loading of external libraries which are known in advance to be required by certain Emacs primitives, see &lt;a href=&quot;dynamic-libraries#Dynamic-Libraries&quot;&gt;Dynamic Libraries&lt;/a&gt;.</source>
          <target state="translated">Информацию о загрузке по требованию внешних библиотек, которые, как известно, потребуются определенными примитивами Emacs, см. В разделе &amp;laquo; &lt;a href=&quot;dynamic-libraries#Dynamic-Libraries&quot;&gt;Динамические библиотеки&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b86b2bc573dc8ed225848ddb470b4ae1aa78a403" translate="yes" xml:space="preserve">
          <source>For other concatenation functions, see &lt;code&gt;mapconcat&lt;/code&gt; in &lt;a href=&quot;mapping-functions#Mapping-Functions&quot;&gt;Mapping Functions&lt;/a&gt;, &lt;code&gt;concat&lt;/code&gt; in &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;, and &lt;code&gt;append&lt;/code&gt; in &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;.</source>
          <target state="translated">Для других функций конкатенации см &lt;code&gt;mapconcat&lt;/code&gt; в &lt;a href=&quot;mapping-functions#Mapping-Functions&quot;&gt;Mapping функций&lt;/a&gt; , &lt;code&gt;concat&lt;/code&gt; в &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Создание строк&lt;/a&gt; и &lt;code&gt;append&lt;/code&gt; в &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;списках Строительство&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a6cbbd948804398001fb9ec5cd695738cd21d0f5" translate="yes" xml:space="preserve">
          <source>For performance reasons, stack-allocated strings are limited to</source>
          <target state="translated">По причинам,связанным с производительностью,распределение строк по стекам ограничивается следующими параметрами</target>
        </trans-unit>
        <trans-unit id="a60122d601392756258517760482e4ba7a25429e" translate="yes" xml:space="preserve">
          <source>For performance, the operating system may cache or alias changes made by these functions instead of writing them immediately to secondary storage. See &lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;Files and Storage&lt;/a&gt;.</source>
          <target state="translated">Для повышения производительности операционная система может кэшировать или изменять псевдонимы, сделанные этими функциями, вместо того, чтобы сразу записывать их во вторичное хранилище. См. &lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;Файлы и хранилище&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="faf441b6a95cda64d0224c1f65fb2e965874dda2" translate="yes" xml:space="preserve">
          <source>For performance, the operating system may not write the backup file&amp;rsquo;s contents to secondary storage immediately, or may alias the backup data with the original until one or the other is later modified. See &lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;Files and Storage&lt;/a&gt;.</source>
          <target state="translated">Для повышения производительности операционная система может не записывать содержимое файла резервной копии во вторичное хранилище сразу или может связывать данные резервной копии с оригиналом до тех пор, пока одно или другое не будет изменено позже. См. &lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;Файлы и хранилище&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da6be8c7db7588c481d6d3eeb3044b3834dbeafd" translate="yes" xml:space="preserve">
          <source>For programming languages, an important feature of a major mode is to provide automatic indentation. There are two parts: one is to decide what is the right indentation of a line, and the other is to decide when to reindent a line. By default, Emacs reindents a line whenever you type a character in &lt;code&gt;electric-indent-chars&lt;/code&gt;, which by default only includes Newline. Major modes can add chars to &lt;code&gt;electric-indent-chars&lt;/code&gt; according to the syntax of the language.</source>
          <target state="translated">Для языков программирования важной особенностью основного режима является обеспечение автоматического отступа. Есть две части: первая - решить, каков правильный отступ линии, а вторая - решить, когда изменить отступ линии. По умолчанию Emacs выполняет повторное выравнивание строки всякий раз, когда вы вводите символ с помощью &lt;code&gt;electric-indent-chars&lt;/code&gt; , которые по умолчанию включают только новую строку . Основные режимы могут добавлять символы к &lt;code&gt;electric-indent-chars&lt;/code&gt; соответствии с синтаксисом языка.</target>
        </trans-unit>
        <trans-unit id="ddab071833859a06b07541c99492d90ddd4fc900" translate="yes" xml:space="preserve">
          <source>For purposes of evaluation, the array is a constant&amp;mdash;i.e., it evaluates to itself.</source>
          <target state="translated">Для целей оценки массив является константой, т. Е. Он оценивает сам себя.</target>
        </trans-unit>
        <trans-unit id="8d5a0c7b7da7f4d2d585a62d2acde8ed3120c9fb" translate="yes" xml:space="preserve">
          <source>For relative time values, Emacs considers a month to be exactly thirty days, and a year to be exactly 365.25 days.</source>
          <target state="translated">Для относительных значений времени Emacs считает,что месяц составляет ровно тридцать дней,а год-ровно 365,25 дней.</target>
        </trans-unit>
        <trans-unit id="90054c0c3e1da561a0a9026341ea698f8915bbc4" translate="yes" xml:space="preserve">
          <source>For replacing display specifications, &lt;em&gt;the text that has the property&lt;/em&gt; means all the consecutive characters that have the same Lisp object as their &lt;code&gt;display&lt;/code&gt; property; these characters are replaced as a single unit. If two characters have different Lisp objects as their &lt;code&gt;display&lt;/code&gt; properties (i.e., objects which are not &lt;code&gt;eq&lt;/code&gt;), they are handled separately.</source>
          <target state="translated">Для замены спецификаций отображения &lt;em&gt;текст, имеющий свойство,&lt;/em&gt; означает все последовательные символы, которые имеют один и тот же объект Lisp в качестве своего свойства &lt;code&gt;display&lt;/code&gt; ; эти символы заменяются как единое целое. Если два символа имеют разные объекты Lisp в качестве свойств &lt;code&gt;display&lt;/code&gt; (т.е. объекты, не являющиеся &lt;code&gt;eq&lt;/code&gt; ), они обрабатываются отдельно.</target>
        </trans-unit>
        <trans-unit id="e2f9af1a35a2660fd8409da9cb1f927de77abafd" translate="yes" xml:space="preserve">
          <source>For representing control characters to be found in files or strings, we recommend the &amp;lsquo;</source>
          <target state="translated">Для представления управляющих символов, которые можно найти в файлах или строках, мы рекомендуем '</target>
        </trans-unit>
        <trans-unit id="8fe2d9b8dc77be3c74c45be6d83fd5245b7aadc8" translate="yes" xml:space="preserve">
          <source>For some languages, upper and lower case letters are not in one-to-one correspondence. There may be two different lower case letters with the same upper case equivalent. In these cases, you need to specify the maps for both lower case and upper case.</source>
          <target state="translated">Для некоторых языков заглавные и строчные буквы не находятся в переписке один на один.Могут существовать две разные строчные буквы с одинаковым заглавным эквивалентом.В этих случаях необходимо указывать карты как для строчных,так и для прописных букв.</target>
        </trans-unit>
        <trans-unit id="c71d3f2b7e58f202f82ff156034a0110342e4f42" translate="yes" xml:space="preserve">
          <source>For some purposes, it does not matter whether a list is proper, circular or dotted. If a program doesn&amp;rsquo;t look far enough down the list to see the &lt;small&gt;CDR&lt;/small&gt; of the final cons cell, it won&amp;rsquo;t care. However, some functions that operate on lists demand proper lists and signal errors if given a dotted list. Most functions that try to find the end of a list enter infinite loops if given a circular list.</source>
          <target state="translated">Для некоторых целей не имеет значения, является ли список правильным, круглым или пунктирным. Если программа не заглядывает в список достаточно далеко, чтобы увидеть &lt;small&gt;CDR&lt;/small&gt; последней cons-ячейки, ей все равно. Однако некоторые функции, которые работают со списками, требуют правильных списков и сигнализируют об ошибках, если задан точечный список. Большинство функций, которые пытаются найти конец списка, входят в бесконечный цикл, если задан круговой список.</target>
        </trans-unit>
        <trans-unit id="d500549849bc15bef76128691a5baf2432335f7d" translate="yes" xml:space="preserve">
          <source>For some purposes, the nondirectory part is further subdivided into the name proper and the &lt;em&gt;version number&lt;/em&gt;. On most systems, only backup files have version numbers in their names.</source>
          <target state="translated">Для некоторых целей ненаправленная часть далее подразделяется на собственное имя и &lt;em&gt;номер версии&lt;/em&gt; . В большинстве систем только файлы резервных копий имеют номера версий в своих именах.</target>
        </trans-unit>
        <trans-unit id="112d87a662d1681332b9049c4a51e3d53eb7aa11" translate="yes" xml:space="preserve">
          <source>For stretches of text that should temporarily stand out. For example, it is commonly assigned to the &lt;code&gt;mouse-face&lt;/code&gt; property for cursor highlighting (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;).</source>
          <target state="translated">Для фрагментов текста, которые должны временно выделяться. Например, он обычно назначается свойству &lt;code&gt;mouse-face&lt;/code&gt; для выделения курсора (см. &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Специальные свойства&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="42c65b3d7d99521ed4092ae00fce87c47ab3b0ba" translate="yes" xml:space="preserve">
          <source>For symbols in special obarrays, which are not used for ordinary purposes, it may make sense to use the property list cell in a nonstandard fashion; in fact, the abbrev mechanism does so (see &lt;a href=&quot;abbrevs#Abbrevs&quot;&gt;Abbrevs&lt;/a&gt;).</source>
          <target state="translated">Для символов в специальных массивах, которые не используются для обычных целей, может иметь смысл нестандартное использование ячейки списка свойств; на самом деле это делает механизм сокращения (см. &amp;laquo; &lt;a href=&quot;abbrevs#Abbrevs&quot;&gt;Сокращения&amp;raquo;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a852800d4f26ade1bdda0b79a03c7fc24d024ed5" translate="yes" xml:space="preserve">
          <source>For syntactic analysis, such as in indentation, often the useful thing is to compute the syntactic state corresponding to a given buffer position. This function does that conveniently.</source>
          <target state="translated">Для синтаксического анализа,например,в отступах,часто полезно вычислить синтаксическое состояние,соответствующее заданному положению буфера.Эта функция делает это удобно.</target>
        </trans-unit>
        <trans-unit id="0ca28c3cc32b5a56a828f789e939bb88d8e4bc04" translate="yes" xml:space="preserve">
          <source>For technical reasons, a unibyte and a multibyte string are &lt;code&gt;equal&lt;/code&gt; if and only if they contain the same sequence of character codes and all these codes are either in the range 0 through 127 (</source>
          <target state="translated">По техническим причинам однобайтная и многобайтовая строка &lt;code&gt;equal&lt;/code&gt; тогда и только тогда, когда они содержат одну и ту же последовательность кодов символов, и все эти коды находятся в диапазоне от 0 до 127 (</target>
        </trans-unit>
        <trans-unit id="45642cd47dfa6bf8d29ea83a9bea3bad88b8f0bd" translate="yes" xml:space="preserve">
          <source>For text concerning errors, warnings, or successes. For example, these are used for messages in</source>
          <target state="translated">Для текста об ошибках,предупреждениях или успехах.Например,они используются для сообщений в</target>
        </trans-unit>
        <trans-unit id="6e07008dae896457b72d081a4580cd31c5207a4e" translate="yes" xml:space="preserve">
          <source>For text matching (respectively) permanent search matches, interactive search matches, and lazy highlighting other matches than the current interactive one.</source>
          <target state="translated">Для текстовых совпадений (соответственно)постоянного поиска,интерактивного поиска и ленивого выделения других совпадений,нежели текущее интерактивное.</target>
        </trans-unit>
        <trans-unit id="199754d5171ec2cef7de10ed893154f11d501bd8" translate="yes" xml:space="preserve">
          <source>For that reason, it is better to avoid binding commands to key sequences where the end of the key sequence is a prefix of a key translation. The main such problematic suffixes/prefixes are</source>
          <target state="translated">По этой причине лучше избегать привязки команд к последовательностям ключей,где конец последовательности ключей является префиксом трансляции ключей.Основными такими проблемными суффиксами/префиксами являются следующие</target>
        </trans-unit>
        <trans-unit id="f10e2ee38beb0efc1d5476196bbcfc128749e76f" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;(eval &lt;var&gt;form&lt;/var&gt;)&lt;/code&gt; forms used in a bindat specification, the &lt;var&gt;form&lt;/var&gt; can access and update these dynamically bound variables during evaluation:</source>
          <target state="translated">Для форм &lt;code&gt;(eval &lt;var&gt;form&lt;/var&gt;)&lt;/code&gt; используемых в спецификации bindat, &lt;var&gt;form&lt;/var&gt; может обращаться к этим динамически связанным переменным и обновлять их во время оценки:</target>
        </trans-unit>
        <trans-unit id="ea753a8ffd58775e7c0c7c0606c76821fe2cfcae" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;pop&lt;/code&gt; macro, which removes the first element from a list, See &lt;a href=&quot;list-elements#List-Elements&quot;&gt;List Elements&lt;/a&gt;.</source>
          <target state="translated">Для макроса &lt;code&gt;pop&lt;/code&gt; , который удаляет первый элемент из списка, см. &lt;a href=&quot;list-elements#List-Elements&quot;&gt;Элементы списка&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef8376493cc4d066a996040b4337c10b4a0cd3a5" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;push&lt;/code&gt; macro, which adds an element to a list, See &lt;a href=&quot;list-variables#List-Variables&quot;&gt;List Variables&lt;/a&gt;.</source>
          <target state="translated">Для макроса &lt;code&gt;push&lt;/code&gt; , который добавляет элемент в список, см. &lt;a href=&quot;list-variables#List-Variables&quot;&gt;Переменные списка&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f3fe319bd30de7f1551c3b872e3e4bba5b856b1" translate="yes" xml:space="preserve">
          <source>For the better understanding of what stable sort is, consider the following vector example. After sorting, all items whose &lt;code&gt;car&lt;/code&gt; is 8 are grouped at the beginning of &lt;code&gt;vector&lt;/code&gt;, but their relative order is preserved. All items whose &lt;code&gt;car&lt;/code&gt; is 9 are grouped at the end of &lt;code&gt;vector&lt;/code&gt;, but their relative order is also preserved:</source>
          <target state="translated">Чтобы лучше понять, что такое стабильная сортировка, рассмотрим следующий векторный пример. После сортировки все элементы, &lt;code&gt;car&lt;/code&gt; равен 8, группируются в начале &lt;code&gt;vector&lt;/code&gt; , но их относительный порядок сохраняется. Все элементы, &lt;code&gt;car&lt;/code&gt; равен 9, сгруппированы в конце &lt;code&gt;vector&lt;/code&gt; , но их относительный порядок также сохраняется:</target>
        </trans-unit>
        <trans-unit id="87d8274e9315f6d205c44c909122fe4b2bcd2515" translate="yes" xml:space="preserve">
          <source>For the common case of all backups going into one directory, the alist should contain a single element pairing &amp;lsquo;</source>
          <target state="translated">В общем случае, когда все резервные копии помещаются в один каталог, список должен содержать одну пару элементов '</target>
        </trans-unit>
        <trans-unit id="397056acd2602b1eb8236b9ebdd8ab76eec096da" translate="yes" xml:space="preserve">
          <source>For the customization option &lt;var&gt;symbol&lt;/var&gt;, add &lt;var&gt;value&lt;/var&gt; to the list of reasonable values.</source>
          <target state="translated">Для опции настройки &lt;var&gt;symbol&lt;/var&gt; , добавить &lt;var&gt;value&lt;/var&gt; в список разумных значений.</target>
        </trans-unit>
        <trans-unit id="4a38dedbdf3df9cf3e1410eb6cee8a459e8d9366" translate="yes" xml:space="preserve">
          <source>For the following functions, X and Y coordinates are reported in integer character units, i.e., numbers of lines and columns respectively. On a graphical display, each &amp;ldquo;line&amp;rdquo; and &amp;ldquo;column&amp;rdquo; corresponds to the height and width of the default character specified by the frame&amp;rsquo;s default font (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;).</source>
          <target state="translated">Для следующих функций координаты X и Y указываются в целочисленных единицах символов, т. Е. В количестве строк и столбцов соответственно. На графическом дисплее каждая &amp;laquo;линия&amp;raquo; и &amp;laquo;столбец&amp;raquo; соответствует высоте и ширине символа по умолчанию, заданного шрифтом по умолчанию для &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;рамки&lt;/a&gt; (см. Шрифт рамки ).</target>
        </trans-unit>
        <trans-unit id="25a6d2221bff01069101fec57cebeb42f17550b9" translate="yes" xml:space="preserve">
          <source>For the full list of the possible states, see the manual page of the &lt;code&gt;ps&lt;/code&gt; command.</source>
          <target state="translated">Полный список возможных состояний см. На странице руководства по команде &lt;code&gt;ps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e75de6ea26daa8fe7f4c02ce82f35f330195a3b1" translate="yes" xml:space="preserve">
          <source>For the most part, &amp;lsquo;</source>
          <target state="translated">По большей части, '</target>
        </trans-unit>
        <trans-unit id="8f083f87437f8af6d0e911df4fe787b5367ecfff" translate="yes" xml:space="preserve">
          <source>For the next three functions, the optional argument &lt;var&gt;table&lt;/var&gt; defaults to the current buffer&amp;rsquo;s category table.</source>
          <target state="translated">Для следующих трех функций необязательная &lt;var&gt;table&lt;/var&gt; аргументов по умолчанию соответствует таблице категорий текущего буфера.</target>
        </trans-unit>
        <trans-unit id="0de287c6c6b45bac437b1271e755cca625f2d489" translate="yes" xml:space="preserve">
          <source>For the remaining character sets, those that you don&amp;rsquo;t specify explicitly, Emacs chooses a font based on &lt;var&gt;fontpattern&lt;/var&gt;: it replaces &amp;lsquo;</source>
          <target state="translated">Для остальных наборов символов, которые вы не указываете явно, Emacs выбирает шрифт на основе &lt;var&gt;fontpattern&lt;/var&gt; : он заменяет '</target>
        </trans-unit>
        <trans-unit id="a906a8f725709d4b0de4a96ab4461367a34e3920" translate="yes" xml:space="preserve">
          <source>For the size parameters, the value must be an integer. The position parameter names &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt; are not totally accurate, because some values indicate the position of the right or bottom edges instead. The &lt;var&gt;value&lt;/var&gt; possibilities for the position parameters are: an integer, a list &lt;code&gt;(+ &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt;, or a list &lt;code&gt;(- &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt;; as previously described (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;).</source>
          <target state="translated">Для параметров размера значение должно быть целым числом. Имена параметров положения &lt;code&gt;left&lt;/code&gt; и &lt;code&gt;top&lt;/code&gt; не совсем точны, потому что некоторые значения вместо этого указывают положение правого или нижнего края. Возможные &lt;var&gt;value&lt;/var&gt; для параметров позиции: целое число, список &lt;code&gt;(+ &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt; или список &lt;code&gt;(- &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt; ; как описано ранее (см. &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Параметры положения&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="bd63f6190989b582ea9c376026bf123ee7491af3" translate="yes" xml:space="preserve">
          <source>For the vector, it is even simpler because you don&amp;rsquo;t need setq:</source>
          <target state="translated">Для вектора это еще проще, потому что вам не нужен setq:</target>
        </trans-unit>
        <trans-unit id="2ffffe0d3dd28ebd8002e469cb5d2dfd42923c8e" translate="yes" xml:space="preserve">
          <source>For these reasons, advice should be reserved for the cases where you cannot modify a function&amp;rsquo;s behavior in any other way. If it is possible to do the same thing via a hook, that is preferable (see &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;). If you simply want to change what a particular key does, it may be better to write a new command, and remap the old command&amp;rsquo;s key bindings to the new one (see &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt;).</source>
          <target state="translated">По этим причинам совет следует зарезервировать для случаев, когда вы не можете изменить поведение функции каким-либо другим способом. Если возможно сделать то же самое с помощью ловушки, это предпочтительнее (см. &lt;a href=&quot;hooks#Hooks&quot;&gt;Хуки&lt;/a&gt; ). Если вы просто хотите изменить то, что делает конкретная клавиша, может быть лучше написать новую команду и переназначить привязки клавиш старой команды к новой (см. &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Команды&lt;/a&gt; переназначения ).</target>
        </trans-unit>
        <trans-unit id="9b52907f69d9a50e4ec7ab8929f4201bc2b2e2e4" translate="yes" xml:space="preserve">
          <source>For this function to work, point must be somewhere between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">Чтобы эта функция работала, точка должна находиться где-то между &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="b964418f003633de4c03a4cd9b1087f166bf72e2" translate="yes" xml:space="preserve">
          <source>For this reason, this function is seldom useful if you need to determine more than just the fact that a file is or isn&amp;rsquo;t a symbolic link. If you actually need the file name of the link target, use &lt;code&gt;file-chase-links&lt;/code&gt; or &lt;code&gt;file-truename&lt;/code&gt;, described in &lt;a href=&quot;truenames#Truenames&quot;&gt;Truenames&lt;/a&gt;.</source>
          <target state="translated">По этой причине эта функция редко бывает полезной, если вам нужно определить нечто большее, чем просто тот факт, что файл является или не является символической ссылкой. Если вам действительно нужно имя файла целевой ссылки, используйте &lt;code&gt;file-chase-links&lt;/code&gt; или &lt;code&gt;file-truename&lt;/code&gt; , описанные в &lt;a href=&quot;truenames#Truenames&quot;&gt;Truenames&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="19381c88cff85e8267de9ed9e5513028e6adebad" translate="yes" xml:space="preserve">
          <source>For yanking, one entry in the kill ring is designated the front of the ring. Some yank commands rotate the ring by designating a different element as the front. But this virtual rotation doesn&amp;rsquo;t change the list itself&amp;mdash;the most recent entry always comes first in the list.</source>
          <target state="translated">Для рывков одна запись в кольце уничтожения обозначается передней частью кольца. Некоторые команды рывка вращают кольцо, обозначая другой элемент как передний. Но эта виртуальная ротация не меняет сам список - самая последняя запись всегда идет первой в списке.</target>
        </trans-unit>
        <trans-unit id="fa1a0f8f3b130a55ce024bebdfbd50a7e2e42d15" translate="yes" xml:space="preserve">
          <source>Force &lt;var&gt;thunk&lt;/var&gt; to perform the evaluation of the forms specified in the &lt;code&gt;thunk-delay&lt;/code&gt; that created the thunk. The result of the evaluation of the last form is returned. The &lt;var&gt;thunk&lt;/var&gt; also &amp;ldquo;remembers&amp;rdquo; that it has been forced: Any further calls of &lt;code&gt;thunk-force&lt;/code&gt; with the same &lt;var&gt;thunk&lt;/var&gt; will just return the same result without evaluating the forms again.</source>
          <target state="translated">Force &lt;var&gt;thunk&lt;/var&gt; выполнить оценку форм , указанных в &lt;code&gt;thunk-delay&lt;/code&gt; , создавшего преобразователя , . Возвращается результат оценки последней формы. &lt;var&gt;thunk&lt;/var&gt; также &amp;laquo;помнит&amp;raquo; , что он был вынужден: Любые дальнейшие вызовы &lt;code&gt;thunk-force&lt;/code&gt; с тем же &lt;var&gt;thunk&lt;/var&gt; просто возвращает тот же результат без повторной оценки формы.</target>
        </trans-unit>
        <trans-unit id="d8311d282a06bf7c13df916c21ae0692e8509152" translate="yes" xml:space="preserve">
          <source>Forcing Redisplay</source>
          <target state="translated">Форсирующий редисплей</target>
        </trans-unit>
        <trans-unit id="50fe9b523b09e3d4f5eb9578dd9aa2cded42eb5b" translate="yes" xml:space="preserve">
          <source>Forcing redisplay.</source>
          <target state="translated">Принудительный переигрыш.</target>
        </trans-unit>
        <trans-unit id="54e5928d6cbe4200cfedd66bfae0116254371dd3" translate="yes" xml:space="preserve">
          <source>Foreground color, a string. The value can be a system-defined color name, or a hexadecimal color specification. See &lt;a href=&quot;color-names#Color-Names&quot;&gt;Color Names&lt;/a&gt;. On black-and-white displays, certain shades of gray are implemented by stipple patterns.</source>
          <target state="translated">Цвет переднего плана, строка. Значение может быть системным именем цвета или шестнадцатеричной спецификацией цвета. См. &lt;a href=&quot;color-names#Color-Names&quot;&gt;Названия цветов&lt;/a&gt; . На черно-белых дисплеях определенные оттенки серого отображаются с помощью точечных рисунков.</target>
        </trans-unit>
        <trans-unit id="d9151cf0df95ff2f005ffb2dbfff11e476773720" translate="yes" xml:space="preserve">
          <source>Format of Descriptions</source>
          <target state="translated">Формат описаний</target>
        </trans-unit>
        <trans-unit id="690ff78b94f5f2ab90ba941868039323171c46a4" translate="yes" xml:space="preserve">
          <source>Format of GnuTLS Cryptography Inputs</source>
          <target state="translated">Формат GnuTLS криптографических входов</target>
        </trans-unit>
        <trans-unit id="3b30bd7322a19ebf11a0420fbb9d0d2e2a952c4c" translate="yes" xml:space="preserve">
          <source>Format of Keymaps</source>
          <target state="translated">Формат Клавишных Карт</target>
        </trans-unit>
        <trans-unit id="ffba191c046f0f3d86eca0356dcfa6c942799127" translate="yes" xml:space="preserve">
          <source>Formatted Text Properties</source>
          <target state="translated">Свойства форматированного текста</target>
        </trans-unit>
        <trans-unit id="46ced2475097f609a37fcad0f6e2c12ef6e35700" translate="yes" xml:space="preserve">
          <source>Formatting Strings</source>
          <target state="translated">Строки форматирования</target>
        </trans-unit>
        <trans-unit id="08ddf2db0601ff64b5999d791aceb04902f2ab24" translate="yes" xml:space="preserve">
          <source>Formatting custom &lt;code&gt;format&lt;/code&gt; specifications.</source>
          <target state="translated">Форматирование спецификаций нестандартного &lt;code&gt;format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85e179fd2599024e08f48eaf746a1effe699c9af" translate="yes" xml:space="preserve">
          <source>Formatting is often useful for computing messages to be displayed. In fact, the functions &lt;code&gt;message&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; provide the same formatting feature described here; they differ from &lt;code&gt;format-message&lt;/code&gt; only in how they use the result of formatting.</source>
          <target state="translated">Форматирование часто полезно для вычисления отображаемых сообщений. Фактически, &lt;code&gt;message&lt;/code&gt; функций и &lt;code&gt;error&lt;/code&gt; обеспечивают ту же функцию форматирования, которая описана здесь; они отличаются от &lt;code&gt;format-message&lt;/code&gt; только тем, как они используют результат форматирования.</target>
        </trans-unit>
        <trans-unit id="1e169267238c8a26c2ddbb83e054dfbd79640e6b" translate="yes" xml:space="preserve">
          <source>Formatting text as the mode line would.</source>
          <target state="translated">Форматирование текста в соответствии со строкой режима.</target>
        </trans-unit>
        <trans-unit id="3c6860ed0688d49392f43c31b5e487af200d8da8" translate="yes" xml:space="preserve">
          <source>Forms that call functions.</source>
          <target state="translated">Формы,которые вызывают функции.</target>
        </trans-unit>
        <trans-unit id="a61c89f45d054dc7a27512e0b0970e65fadc39de" translate="yes" xml:space="preserve">
          <source>Forms that call macros.</source>
          <target state="translated">Формы,которые называют макросами.</target>
        </trans-unit>
        <trans-unit id="99a2a5d26385032afad4033277b91f1c2729bb11" translate="yes" xml:space="preserve">
          <source>Forms that evaluate to themselves.</source>
          <target state="translated">Формы,которые оценивают сами себя.</target>
        </trans-unit>
        <trans-unit id="ba4e72261283258434788542ba397135c10f39d8" translate="yes" xml:space="preserve">
          <source>Forward</source>
          <target state="translated">Forward</target>
        </trans-unit>
        <trans-unit id="03ff98c7185813598af4b44b2a4f969fae61d671" translate="yes" xml:space="preserve">
          <source>Four special values for &lt;code&gt;direction&lt;/code&gt; entries allow to implicitly specify the selected frame&amp;rsquo;s main window as the reference window: &lt;code&gt;leftmost&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;rightmost&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt;. This means that instead of, for example, &lt;code&gt;(direction&amp;nbsp;.&amp;nbsp;left)&amp;nbsp;(window&amp;nbsp;.&amp;nbsp;main)&lt;/code&gt; one can just specify &lt;code&gt;(direction&amp;nbsp;.&amp;nbsp;leftmost)&lt;/code&gt;. An existing &lt;code&gt;window&lt;/code&gt;&lt;var&gt;alist&lt;/var&gt; entry is ignored in such cases.</source>
          <target state="translated">Четыре специальных значений для &lt;code&gt;direction&lt;/code&gt; записей позволяют неявно указать основное окно выбранного фрейма в качестве опорного окна: &lt;code&gt;leftmost&lt;/code&gt; , &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;rightmost&lt;/code&gt; и &lt;code&gt;bottom&lt;/code&gt; . Это означает, что вместо, например, &lt;code&gt;(direction&amp;nbsp;.&amp;nbsp;left)&amp;nbsp;(window&amp;nbsp;.&amp;nbsp;main)&lt;/code&gt; можно просто указать &lt;code&gt;(direction&amp;nbsp;.&amp;nbsp;leftmost)&lt;/code&gt; . В таких случаях существующая запись в &lt;var&gt;alist&lt;/var&gt; &lt;code&gt;window&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="f8be388d8709a99dab45a803379f214da551553c" translate="yes" xml:space="preserve">
          <source>Four-byte vector representing an Internet address. For example: &lt;code&gt;[127 0 0 1]&lt;/code&gt; for localhost.</source>
          <target state="translated">Четырехбайтовый вектор, представляющий Интернет-адрес. Например: &lt;code&gt;[127 0 0 1]&lt;/code&gt; для localhost.</target>
        </trans-unit>
        <trans-unit id="b64b0ae712554037fe6db96671213dc347089595" translate="yes" xml:space="preserve">
          <source>Fractional seconds as a number of nanoseconds. For timestamps returned by &lt;code&gt;extract_time&lt;/code&gt;, this is always nonnegative and less than one billion. (Although POSIX requires the type of &lt;code&gt;tv_nsec&lt;/code&gt; to be &lt;code&gt;long&lt;/code&gt;, the type is &lt;code&gt;long long&lt;/code&gt; on some nonstandard platforms.)</source>
          <target state="translated">Дробные секунды как количество наносекунд. Для меток времени, возвращаемых методом &lt;code&gt;extract_time&lt;/code&gt; , это всегда неотрицательно и меньше одного миллиарда. (Хотя POSIX требует, чтобы тип &lt;code&gt;tv_nsec&lt;/code&gt; был &lt;code&gt;long&lt;/code&gt; , на некоторых нестандартных платформах этот тип является &lt;code&gt;long long&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="7635f609fc39a6b2309200df6c13ba7f981e6e93" translate="yes" xml:space="preserve">
          <source>Frame Configuration Type</source>
          <target state="translated">Тип конфигурации кадра</target>
        </trans-unit>
        <trans-unit id="b3375a4b79b653dfb166deb920a1a8a07454332b" translate="yes" xml:space="preserve">
          <source>Frame Configurations</source>
          <target state="translated">Фрейм Конфигурации</target>
        </trans-unit>
        <trans-unit id="2628654f3592f30e3e183e8fe28ea0baef770932" translate="yes" xml:space="preserve">
          <source>Frame Font</source>
          <target state="translated">Шрифт рамки</target>
        </trans-unit>
        <trans-unit id="48a4e1fb6a458c2e798e7f81d3081543b9b437d1" translate="yes" xml:space="preserve">
          <source>Frame Geometry</source>
          <target state="translated">Каркасная геометрия</target>
        </trans-unit>
        <trans-unit id="3f455212bef49865fcc51892b83fce71911f1680" translate="yes" xml:space="preserve">
          <source>Frame Interaction Parameters</source>
          <target state="translated">Параметры взаимодействия с кадром</target>
        </trans-unit>
        <trans-unit id="b00c42c9c273b5bc922c8b715a7c39b737a31f0e" translate="yes" xml:space="preserve">
          <source>Frame Layout</source>
          <target state="translated">Макет рамки</target>
        </trans-unit>
        <trans-unit id="ee5af9328eadec13e19d54784546362006d1c6a2" translate="yes" xml:space="preserve">
          <source>Frame Layouts with Side Windows</source>
          <target state="translated">Макеты кадров с боковыми окнами</target>
        </trans-unit>
        <trans-unit id="2def4ca016ae808f491d5589a4d3596db373a3bd" translate="yes" xml:space="preserve">
          <source>Frame Parameters</source>
          <target state="translated">Параметры рамки</target>
        </trans-unit>
        <trans-unit id="3795259ac55a38a9c80dc78cb37d9173d40c7749" translate="yes" xml:space="preserve">
          <source>Frame Position</source>
          <target state="translated">Положение рамки</target>
        </trans-unit>
        <trans-unit id="8b0227b2f358f622998d1841dc8551f0359eac0d" translate="yes" xml:space="preserve">
          <source>Frame Size</source>
          <target state="translated">Размер кадра</target>
        </trans-unit>
        <trans-unit id="b7ac3c8ffea3811343eb8213490bb38d98fb19f5" translate="yes" xml:space="preserve">
          <source>Frame Titles</source>
          <target state="translated">Названия рам</target>
        </trans-unit>
        <trans-unit id="9c5749558dd4c5bf4399310cd20ad88f7947524b" translate="yes" xml:space="preserve">
          <source>Frame Type</source>
          <target state="translated">Тип кадра</target>
        </trans-unit>
        <trans-unit id="e7c9cb1f7a76750767299beca11d5593148f6bbd" translate="yes" xml:space="preserve">
          <source>Frame parameters exist mostly for the sake of graphical displays. Most frame parameters have no effect when applied to a frame on a text terminal; only the &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;menu-bar-lines&lt;/code&gt;, &lt;code&gt;buffer-list&lt;/code&gt; and &lt;code&gt;buffer-predicate&lt;/code&gt; parameters do something special. If the terminal supports colors, the parameters &lt;code&gt;foreground-color&lt;/code&gt;, &lt;code&gt;background-color&lt;/code&gt;, &lt;code&gt;background-mode&lt;/code&gt; and &lt;code&gt;display-type&lt;/code&gt; are also meaningful. If the terminal supports frame transparency, the parameter &lt;code&gt;alpha&lt;/code&gt; is also meaningful.</source>
          <target state="translated">Параметры кадра существуют в основном для графического отображения. Большинство параметров фрейма не действуют при применении к фрейму в текстовом терминале; только параметры &lt;code&gt;height&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;title&lt;/code&gt; , &lt;code&gt;menu-bar-lines&lt;/code&gt; , &lt;code&gt;buffer-list&lt;/code&gt; и &lt;code&gt;buffer-predicate&lt;/code&gt; делают что-то особенное. Если терминал поддерживает цвета, параметры &lt;code&gt;foreground-color&lt;/code&gt; , &lt;code&gt;background-color&lt;/code&gt; , &lt;code&gt;background-mode&lt;/code&gt; и &lt;code&gt;display-type&lt;/code&gt; также имеют значение. Если терминал поддерживает прозрачность кадра, значение параметра &lt;code&gt;alpha&lt;/code&gt; также имеет значение.</target>
        </trans-unit>
        <trans-unit id="0eaf8dac44f190c3faaf3c94ff99cbda42392375" translate="yes" xml:space="preserve">
          <source>Frame parameters usually specify frame sizes in character units. On graphical displays, the &lt;code&gt;default&lt;/code&gt; face determines the actual pixel sizes of these character units (see &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Face Attributes&lt;/a&gt;).</source>
          <target state="translated">Параметры кадра обычно определяют размеры кадра в единицах символов. На графических дисплеях лицо по &lt;code&gt;default&lt;/code&gt; определяет фактические размеры этих единиц символов в пикселях (см. &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Атрибуты лица&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e93788474e90074ae4a2304390f95b4eaa4aa995" translate="yes" xml:space="preserve">
          <source>Frame&amp;rsquo;s size.</source>
          <target state="translated">Размер кадра.</target>
        </trans-unit>
        <trans-unit id="e3e7a3833d19706ebf33b2c3baf8e05deeed7bca" translate="yes" xml:space="preserve">
          <source>Frames</source>
          <target state="translated">Frames</target>
        </trans-unit>
        <trans-unit id="1016cca46904e2542be02bd1ee40819628cf410e" translate="yes" xml:space="preserve">
          <source>Frames are listed from topmost (first) to bottommost (last). As a special case, if &lt;var&gt;display&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and specifies a live frame, it returns the child frames of that frame in Z (stacking) order.</source>
          <target state="translated">Фреймы перечислены от самого верхнего (первого) до самого нижнего (последнего). В качестве особого случая, если &lt;var&gt;display&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; и задает живой кадр, он возвращает дочерние кадры этого кадра в Z (наложении) порядка.</target>
        </trans-unit>
        <trans-unit id="e869c0a12c0ebdcb83032af0ab6e9b29aa99d134" translate="yes" xml:space="preserve">
          <source>Frames have no read syntax. They print in hash notation, giving the frame&amp;rsquo;s title, plus its address in core (useful to identify the frame uniquely).</source>
          <target state="translated">У фреймов нет синтаксиса чтения. Они печатаются в хеш-нотации, давая заголовок фрейма и его адрес в ядре (полезно для уникальной идентификации фрейма).</target>
        </trans-unit>
        <trans-unit id="e8c12e749eac8bfa8e0b8a6b5ce728ac241d622d" translate="yes" xml:space="preserve">
          <source>Frames last until explicitly deleted.</source>
          <target state="translated">Фреймы продолжаются до тех пор,пока не будут явно удалены.</target>
        </trans-unit>
        <trans-unit id="aa0f21fa248066fad343c13774776ce1ec7db69f" translate="yes" xml:space="preserve">
          <source>Frames may be visible or invisible, or icons.</source>
          <target state="translated">Кадры могут быть видимыми или невидимыми,или значки.</target>
        </trans-unit>
        <trans-unit id="0a7705c02c88885a265e66e6bb596b4a0e5c62bd" translate="yes" xml:space="preserve">
          <source>Fringe Bitmaps</source>
          <target state="translated">Бит-карты границ</target>
        </trans-unit>
        <trans-unit id="1aceb2d056e100bb87ff7213c426cc3f95936843" translate="yes" xml:space="preserve">
          <source>Fringe Cursors</source>
          <target state="translated">Курсоры Грань</target>
        </trans-unit>
        <trans-unit id="0416d0190cff216cfabfea78b591f9bda7805597" translate="yes" xml:space="preserve">
          <source>Fringe Indicators</source>
          <target state="translated">Индикаторы границы</target>
        </trans-unit>
        <trans-unit id="5fd5c0c63bf89cdc3cf251efbc18952a6efcce45" translate="yes" xml:space="preserve">
          <source>Fringe Size and Position</source>
          <target state="translated">Размер и положение границы</target>
        </trans-unit>
        <trans-unit id="60d9defe1a472be58d3446f380572d057a4539e8" translate="yes" xml:space="preserve">
          <source>Fringes</source>
          <target state="translated">Fringes</target>
        </trans-unit>
        <trans-unit id="a6c57f8a9bfb2be0237a1ce84804479a5b55ef2a" translate="yes" xml:space="preserve">
          <source>Frobnicate and bifurcate flanges</source>
          <target state="translated">фланцы фробниката и бифурката</target>
        </trans-unit>
        <trans-unit id="7d7a9a3b073942c9c4a39433167a05cedca55794" translate="yes" xml:space="preserve">
          <source>Frobnicate buffer:</source>
          <target state="translated">Буфер для фробникатов:</target>
        </trans-unit>
        <trans-unit id="ae12ce3903efdf6296129a3285e0ae497ae13b29" translate="yes" xml:space="preserve">
          <source>From the past subsections we already know that &lt;code&gt;display-buffer&lt;/code&gt; must be supplied with a number of display actions (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) in order to display a buffer. In a completely uncustomized Emacs, these actions are specified by &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; in the following order of precedence: Reuse a window, pop up a new window on the same frame, use a window previously showing the buffer, use some window and pop up a new frame. (Note that the remaining actions named by &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; are void in an uncustomized Emacs).</source>
          <target state="translated">Из предыдущих подразделов мы уже знаем, что &lt;code&gt;display-buffer&lt;/code&gt; должен быть снабжен рядом действий display (см. &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Выбор окна&lt;/a&gt; ) для отображения буфера. В полностью ненастроенном Emacs эти действия задаются с помощью &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; в следующем порядке приоритета: повторно использовать окно, отображать новое окно в том же кадре, использовать окно, ранее показывающее буфер, использовать какое-либо окно и появится новый кадр. (Обратите внимание, что остальные действия, названные &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; , недействительны в ненастроенном Emacs).</target>
        </trans-unit>
        <trans-unit id="c4d63e4c56f1d2b74aaf3de1c3943ce348748d84" translate="yes" xml:space="preserve">
          <source>From:</source>
          <target state="translated">From:</target>
        </trans-unit>
        <trans-unit id="0ebe3e47a285e380363401a28eb7f3dddc4e9c33" translate="yes" xml:space="preserve">
          <source>Full-height and full-width frames are more similar to maximized frames in this regard. However, these typically display an external border which might be absent with maximized frames. Hence the heights of maximized and full-height frames and the widths of maximized and full-width frames often differ by a few pixels.</source>
          <target state="translated">Полная высота и полная ширина кадров в этом отношении больше похожи на максимизированные кадры.Однако,как правило,они отображают внешнюю границу,которая может отсутствовать при максимизированных кадрах.Поэтому высота максимизированных и полнопропускных кадров,а также ширина максимизированных и полнопропускных кадров часто отличаются на несколько пикселей.</target>
        </trans-unit>
        <trans-unit id="0227794e334ddbac1cacd5653be8fdf6837f6bbe" translate="yes" xml:space="preserve">
          <source>Full-screen on macOS hides both the tool-bar and the menu-bar, however both will be displayed if the mouse pointer is moved to the top of the screen.</source>
          <target state="translated">Полноэкранный режим в макросе скрывает и панель инструментов,и панель меню,однако при перемещении указателя мыши в верхнюю часть экрана будут отображаться и те,и другие.</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="a3593edc88e17616adbb4037346eb999d6ceb735" translate="yes" xml:space="preserve">
          <source>Function Keys</source>
          <target state="translated">Функциональные клавиши</target>
        </trans-unit>
        <trans-unit id="760cf6a6d209c21ac6c4fd1b396c72c47be7d5a6" translate="yes" xml:space="preserve">
          <source>Function Type</source>
          <target state="translated">Тип функции</target>
        </trans-unit>
        <trans-unit id="edb917120f9cb05f9cf4013067ef2c91be5076f9" translate="yes" xml:space="preserve">
          <source>Function arguments, e.g., the &lt;var&gt;time&lt;/var&gt; argument to &lt;code&gt;current-time-string&lt;/code&gt;, accept a more-general &lt;em&gt;time value&lt;/em&gt; format, which can be a Lisp timestamp, &lt;code&gt;nil&lt;/code&gt; for the current time, a single floating-point number for seconds, or a list &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; &lt;var&gt;low&lt;/var&gt; &lt;var&gt;micro&lt;/var&gt;)&lt;/code&gt; or &lt;code&gt;(&lt;var&gt;high&lt;/var&gt;
&lt;var&gt;low&lt;/var&gt;)&lt;/code&gt; that is a truncated list timestamp with missing elements taken to be zero.</source>
          <target state="translated">Аргументы функций, например, &lt;var&gt;time&lt;/var&gt; аргумент &lt;code&gt;current-time-string&lt;/code&gt; , принимают общее более- &lt;em&gt;значение времени&lt;/em&gt; формат, который может быть отметка о времени Лисп, &lt;code&gt;nil&lt;/code&gt; для текущего времени, единственное число с плавающей точкой на несколько секунд, или список &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; &lt;var&gt;low&lt;/var&gt; &lt;var&gt;micro&lt;/var&gt;)&lt;/code&gt; или &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; &lt;var&gt;low&lt;/var&gt;)&lt;/code&gt; который представляет собой временную метку усеченного списка с отсутствующими элементами, принимаемыми равными нулю.</target>
        </trans-unit>
        <trans-unit id="b933407dd477578aff5c3408d8b3e8fdaf706985" translate="yes" xml:space="preserve">
          <source>Function calls (see &lt;a href=&quot;functions#Functions&quot;&gt;Functions&lt;/a&gt;).</source>
          <target state="translated">Вызов функций (см. &lt;a href=&quot;functions#Functions&quot;&gt;Функции&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1af483dbbd3691ff179fefeb552423fd10c4d63c" translate="yes" xml:space="preserve">
          <source>Function keys &amp;ndash; keys with names, not symbols.</source>
          <target state="translated">Функциональные клавиши - клавиши с именами, а не символами.</target>
        </trans-unit>
        <trans-unit id="c28f90844ff41af6464401dafa16370f6a7ddc41" translate="yes" xml:space="preserve">
          <source>Function of one argument (the response to &lt;var&gt;capability-command&lt;/var&gt;), which returns either &lt;code&gt;nil&lt;/code&gt;, or the command to activate</source>
          <target state="translated">Функция одного аргумента (ответ на &lt;var&gt;capability-command&lt;/var&gt; ), которая возвращает либо &lt;code&gt;nil&lt;/code&gt; , либо команду на активацию</target>
        </trans-unit>
        <trans-unit id="2599b4160212dbdafa79551462c78d2a10591f78" translate="yes" xml:space="preserve">
          <source>Function to call to quit the current buffer.</source>
          <target state="translated">Функция вызова для выхода из текущего буфера.</target>
        </trans-unit>
        <trans-unit id="2692d9c0a34514bfbf97445668a3984d5bef3f10" translate="yes" xml:space="preserve">
          <source>Function to call when an action is invoked. The notification &lt;var&gt;id&lt;/var&gt; and the &lt;var&gt;key&lt;/var&gt; of the action are passed as arguments to the function.</source>
          <target state="translated">Функция, вызываемая при вызове действия. Уведомление &lt;var&gt;id&lt;/var&gt; и &lt;var&gt;key&lt;/var&gt; действий передаются в качестве аргументов функции.</target>
        </trans-unit>
        <trans-unit id="665a4b2f050f5cc458f3cc402b354ab096def6f3" translate="yes" xml:space="preserve">
          <source>Function to call when the notification has been closed by timeout or by the user. The function receive the notification &lt;var&gt;id&lt;/var&gt; and the closing &lt;var&gt;reason&lt;/var&gt; as arguments:</source>
          <target state="translated">Функция для вызова, когда уведомление было закрыто по таймауту или пользователем. Функция получает в качестве аргументов &lt;var&gt;id&lt;/var&gt; уведомления и &lt;var&gt;reason&lt;/var&gt; закрытия :</target>
        </trans-unit>
        <trans-unit id="ab32b13d036c7de39a76ff893bf8bd1e2f72feca" translate="yes" xml:space="preserve">
          <source>Function to use for declaring that a region&amp;rsquo;s fontification is out of date. It takes two arguments, the beginning and end of the region. The default value of this variable is &lt;code&gt;font-lock-after-change-function&lt;/code&gt;.</source>
          <target state="translated">Функция, используемая для объявления о том, что фонтификация региона устарела. Требуется два аргумента: начало и конец области. Значение по умолчанию для этой переменной - &lt;code&gt;font-lock-after-change-function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45c03975934a7989defa092bb01160d6a6d14561" translate="yes" xml:space="preserve">
          <source>Function to use for fontifying a region. It should take two arguments, the beginning and end of the region, and an optional third argument &lt;var&gt;verbose&lt;/var&gt;. If &lt;var&gt;verbose&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function should print status messages. The default value is &lt;code&gt;font-lock-default-fontify-region&lt;/code&gt;.</source>
          <target state="translated">Функция, используемая для обозначения региона. Он должен принимать два аргумента: начало и конец области и необязательный &lt;var&gt;verbose&lt;/var&gt; третий аргумент . Если &lt;var&gt;verbose&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , функция должна выводить сообщения о состоянии. Значение по умолчанию - &lt;code&gt;font-lock-default-fontify-region&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8989f04b34b16d9a2aa0d821237abfc63224442a" translate="yes" xml:space="preserve">
          <source>Function to use for fontifying the buffer. The default value is &lt;code&gt;font-lock-default-fontify-buffer&lt;/code&gt;.</source>
          <target state="translated">Функция для использования в буфере. Значение по умолчанию - &lt;code&gt;font-lock-default-fontify-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0d73e2fdb1863b97c8fd3e0f73627aa524fcd58" translate="yes" xml:space="preserve">
          <source>Function to use for making sure a region of the current buffer has been fontified. It is called with two arguments, the beginning and end of the region. The default value of this variable is a function that calls &lt;code&gt;font-lock-default-fontify-buffer&lt;/code&gt; if the buffer is not fontified; the effect is to make sure the entire accessible portion of the buffer is fontified.</source>
          <target state="translated">Функция, используемая для проверки того, что область текущего буфера была выделена. Он вызывается с двумя аргументами, началом и концом области. Значение по умолчанию этой переменной - это функция, которая вызывает &lt;code&gt;font-lock-default-fontify-buffer&lt;/code&gt; , если буфер не фонтифицирован; эффект состоит в том, чтобы обеспечить фонтизацию всей доступной части буфера.</target>
        </trans-unit>
        <trans-unit id="0ef6fffab83d22c64fb8b7e968c6d90ca33655e7" translate="yes" xml:space="preserve">
          <source>Function to use for unfontifying a region. It should take two arguments, the beginning and end of the region. The default value is &lt;code&gt;font-lock-default-unfontify-region&lt;/code&gt;.</source>
          <target state="translated">Функция, используемая для отмены регистрации региона. Он должен принимать два аргумента: начало и конец области. Значение по умолчанию - &lt;code&gt;font-lock-default-unfontify-region&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13e180d67a77c305f9559009ded2e991db88b38d" translate="yes" xml:space="preserve">
          <source>Function to use for unfontifying the buffer. This is used when turning off Font Lock mode. The default value is &lt;code&gt;font-lock-default-unfontify-buffer&lt;/code&gt;.</source>
          <target state="translated">Функция, используемая для очистки буфера. Используется при отключении режима блокировки шрифта. Значение по умолчанию - &lt;code&gt;font-lock-default-unfontify-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29ac7b1b85bc7c68994dfadb32cfe581e050f9d7" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;bool&lt;/em&gt;&lt;strong&gt;copy_string_contents&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;arg&lt;/var&gt;, char *&lt;var&gt;buf&lt;/var&gt;, ptrdiff_t *&lt;var&gt;len&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;bool &lt;/em&gt;&lt;strong&gt;copy_string_contents &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;arg&lt;/var&gt; , char * &lt;var&gt;buf&lt;/var&gt; , ptrdiff_t * &lt;var&gt;len&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43209e42da44d5222b0c0bfa936fe69a5420310a" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;bool&lt;/em&gt;&lt;strong&gt;eq&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;val1&lt;/var&gt;, emacs_value &lt;var&gt;val2&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;bool &lt;/em&gt;&lt;strong&gt;eq &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;val1&lt;/var&gt; , emacs_value &lt;var&gt;val2&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a083631728d88f085771468c6029fc24c1f37a8" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;bool&lt;/em&gt;&lt;strong&gt;extract_big_integer&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;arg&lt;/var&gt;, int *&lt;var&gt;sign&lt;/var&gt;, ptrdiff_t *&lt;var&gt;count&lt;/var&gt;, emacs_limb_t *&lt;var&gt;magnitude&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;bool &lt;/em&gt;&lt;strong&gt;extract_big_integer &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;arg&lt;/var&gt; , int * &lt;var&gt;sign&lt;/var&gt; , ptrdiff_t * &lt;var&gt;count&lt;/var&gt; , emacs_limb_t * &lt;var&gt;magnitude&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f4ddf8e81ae981c10ee9c4e6dee208d399cff2e9" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;bool&lt;/em&gt;&lt;strong&gt;is_not_nil&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;val&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;bool &lt;/em&gt;&lt;strong&gt;is_not_nil &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;val&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="105efe21e95eddae77100b88bc0691a1b98616da" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;bool&lt;/em&gt;&lt;strong&gt;should_quit&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;bool &lt;/em&gt;&lt;strong&gt;should_quit &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46496808f25e805ece88233ae0979c6b0e67bbb9" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;double&lt;/em&gt;&lt;strong&gt;extract_float&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;arg&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;double &lt;/em&gt;&lt;strong&gt;extract_float &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;arg&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="806aa18554b1b3b36361414dc4393f02345f2b77" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_finalizer&lt;/em&gt;&lt;strong&gt;get_user_finalizer&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value val)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_finalizer&lt;/em&gt;&lt;strong&gt;get_user_finalizer&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value val)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f92f9adbb019f4be1ff6bccd71fa37a1e9f0752d" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;funcall&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;func&lt;/var&gt;, ptrdiff_t &lt;var&gt;nargs&lt;/var&gt;, emacs_value *&lt;var&gt;args&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;funcall&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;func&lt;/var&gt; , ptrdiff_t &lt;var&gt;nargs&lt;/var&gt; , emacs_value * &lt;var&gt;args&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5fe746a0b8a5af7907e36602dcb7cce31e68cffe" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;intern&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, const char *name)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;intern&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , const char *name)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69366add43b68eb7557dd679115032d775dfbad4" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_big_integer&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, int sign, ptrdiff_t count, const emacs_limb_t *magnitude)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_big_integer&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , int sign, ptrdiff_t count, const emacs_limb_t *magnitude)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86c526521a5e403b8f09c2f18f99a105ccb08944" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_float&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, double &lt;var&gt;d&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_float&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , double &lt;var&gt;d&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc9949f3e2b70023f22e3482180edb77f785724c" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_function&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, ptrdiff_t &lt;var&gt;min_arity&lt;/var&gt;, ptrdiff_t &lt;var&gt;max_arity&lt;/var&gt;, subr &lt;var&gt;func&lt;/var&gt;, const char *&lt;var&gt;docstring&lt;/var&gt;, void *&lt;var&gt;data&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_function&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , ptrdiff_t &lt;var&gt;min_arity&lt;/var&gt; , ptrdiff_t &lt;var&gt;max_arity&lt;/var&gt; , subr &lt;var&gt;func&lt;/var&gt; , const char * &lt;var&gt;docstring&lt;/var&gt; , void * &lt;var&gt;data&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8f238a989184ce744dc0dae5aa6c965a18a3a354" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_global_ref&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;value&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_global_ref&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;value&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d34b56badd48e7a7cf5498a40e61664a4221c33b" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_integer&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, intmax_t &lt;var&gt;n&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_integer&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , intmax_t &lt;var&gt;n&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="efccd097e1691267c5cfc08bc051b9cf98d81271" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_string&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, const char *&lt;var&gt;str&lt;/var&gt;, ptrdiff_t &lt;var&gt;strlen&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_string&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , const char * &lt;var&gt;str&lt;/var&gt; , ptrdiff_t &lt;var&gt;strlen&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf62b723d8f9b3fb90335a5aa55f3134e61cc766" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_time&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, struct timespec &lt;var&gt;time&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_time&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , struct timespec &lt;var&gt;time&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="31a94d5c82e3002103ed7286a113a6d5cd089bb8" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_user_ptr&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_finalizer &lt;var&gt;fin&lt;/var&gt;, void *&lt;var&gt;ptr&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_user_ptr&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_finalizer &lt;var&gt;fin&lt;/var&gt; , void * &lt;var&gt;ptr&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1652df41489e8d88823b9838de59907c2468860b" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;module_func&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, ptrdiff_t &lt;var&gt;nargs&lt;/var&gt;, emacs_value *&lt;var&gt;args&lt;/var&gt;, void *&lt;var&gt;data&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;module_func&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , ptrdiff_t &lt;var&gt;nargs&lt;/var&gt; , emacs_value * &lt;var&gt;args&lt;/var&gt; , void * &lt;var&gt;data&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce19e0806cf91f917cda3b2a89173ee7dc9a6b19" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;type_of&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;code&gt;object&lt;/code&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;type_of&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;code&gt;object&lt;/code&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3280286f69bb3ae9c426a405ae63213dd06d0a85" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;vec_get&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;vector&lt;/var&gt;, ptrdiff_t &lt;var&gt;index&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;vec_get&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;vector&lt;/var&gt; , ptrdiff_t &lt;var&gt;index&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c2496c321ce0a12883501e61880954b51415ef01" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;enum&lt;/em&gt;&lt;strong&gt;emacs_funcall_exit&lt;/strong&gt;&lt;em&gt;non_local_exit_check (emacs_env *&lt;var&gt;env&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;enum&lt;/em&gt;&lt;strong&gt;emacs_funcall_exit&lt;/strong&gt;&lt;em&gt;non_local_exit_check (emacs_env * &lt;var&gt;env&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="250199de739b457ef5e93610db2ca9333416587c" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;enum&lt;/em&gt;&lt;strong&gt;emacs_funcall_exit&lt;/strong&gt;&lt;em&gt;non_local_exit_get (emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value *&lt;var&gt;symbol&lt;/var&gt;, emacs_value *&lt;var&gt;data&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;enum&lt;/em&gt;&lt;strong&gt;emacs_funcall_exit&lt;/strong&gt;&lt;em&gt;non_local_exit_get (emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value * &lt;var&gt;symbol&lt;/var&gt; , emacs_value * &lt;var&gt;data&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f3c781b29789dfa749cbb1d1693af71aa8277c2" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;enum&lt;/em&gt;&lt;strong&gt;emacs_process_input_result&lt;/strong&gt;&lt;em&gt;process_input (emacs_env *&lt;var&gt;env&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;enum&lt;/em&gt;&lt;strong&gt;emacs_process_input_result&lt;/strong&gt;&lt;em&gt;process_input (emacs_env * &lt;var&gt;env&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="15caa6ab5c37f9ed8c30fc5192ab79385790c989" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;int&lt;/em&gt;&lt;strong&gt;emacs_module_init&lt;/strong&gt;&lt;em&gt;(struct emacs_runtime *&lt;var&gt;runtime&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;int&lt;/em&gt;&lt;strong&gt;emacs_module_init&lt;/strong&gt;&lt;em&gt;(struct emacs_runtime * &lt;var&gt;runtime&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea173b2b82b3bd673c8e85458c9503487035efe6" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;intmax_t&lt;/em&gt;&lt;strong&gt;extract_integer&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;arg&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;intmax_t&lt;/em&gt;&lt;strong&gt;extract_integer&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;arg&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4a5a11128abdaf3c29ce5252b15b3e9c9a7f9fbb" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;ptrdiff_t&lt;/em&gt;&lt;strong&gt;vec_size&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;vector&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;ptrdiff_t&lt;/em&gt;&lt;strong&gt;vec_size&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;vector&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5795593173edce0d076b2301ab601e1a95b34ab3" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;struct&lt;/em&gt;&lt;strong&gt;timespec&lt;/strong&gt;&lt;em&gt;extract_time (emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;time&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;struct&lt;/em&gt;&lt;strong&gt;timespec&lt;/strong&gt;&lt;em&gt;extract_time (emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;time&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a04e17cbd62c2f9d6a93b6044fd6de96f73193a6" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;*get_user_ptr&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value val)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;*get_user_ptr&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value val)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5cb40a95e6fdb40bbfdcb3f14ef923602f71cad3" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;free_global_ref&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;global_value&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;free_global_ref&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;global_value&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4460a463b7a8fa974d526e5f4101013d6894d26f" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;non_local_exit_clear&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;non_local_exit_clear&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="123e5abbfa3ddcfb3452326c55c6fea0835adde4" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;non_local_exit_signal&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;error&lt;/var&gt;, emacs_value &lt;var&gt;data&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;non_local_exit_signal&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;error&lt;/var&gt; , emacs_value &lt;var&gt;data&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2998af0b6fdbee388b2efab4a316d0972913ffa0" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;non_local_exit_throw&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;tag&lt;/var&gt;, emacs_value &lt;var&gt;value&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;non_local_exit_throw&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;tag&lt;/var&gt; , emacs_value &lt;var&gt;value&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a6378174934b410fac15b7e06748ff0c46e5b8a" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;set_user_finalizer&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;val&lt;/var&gt;, emacs_finalizer &lt;var&gt;fin&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;set_user_finalizer&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;val&lt;/var&gt; , emacs_finalizer &lt;var&gt;fin&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="848f2eb81bc2abc617b2bdd0e787737a3c29494b" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;set_user_ptr&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;value&lt;/var&gt;, void *&lt;var&gt;ptr&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;set_user_ptr&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;value&lt;/var&gt; , void * &lt;var&gt;ptr&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5f89a3e79a0b41ba6e1b673b9e5def02dde99dc" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;vec_set&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;vector&lt;/var&gt;, ptrdiff_t &lt;var&gt;index&lt;/var&gt;, emacs_value &lt;var&gt;value&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;vec_set&lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;vector&lt;/var&gt; , ptrdiff_t &lt;var&gt;index&lt;/var&gt; , emacs_value &lt;var&gt;value&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c1d791c892cb854a1ab849fac40b8468ef31039b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;%&lt;/strong&gt;&lt;em&gt;dividend divisor&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;%&lt;/strong&gt;&lt;em&gt;dividend divisor&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c5b18f8fd8b0717a513da835a9bab575062081b0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;&amp;gt;&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;&amp;gt;&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f54f4af95eb930cb5a4378a94ca2e92e5c0c6ce2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;&amp;gt;=&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;&amp;gt;=&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb3fb7d841b16b297ea22eae4c2b7494c003c3ad" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;&amp;lt;&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;&amp;lt;&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3dd193607cabcb8340d5c70c2fb735a092f7a886" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;&amp;lt;=&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;&amp;lt;=&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12612370492685d7458881bae8ab851336e5f836" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;*&lt;/strong&gt;&lt;em&gt;&amp;amp;rest numbers-or-markers&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;*&lt;/strong&gt;&lt;em&gt;&amp;amp;rest numbers-or-markers&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9f84436671ab7cbd9448b03e2fe260eb3839c121" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;+&lt;/strong&gt;&lt;em&gt;&amp;amp;rest numbers-or-markers&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;+&lt;/strong&gt;&lt;em&gt;&amp;amp;rest numbers-or-markers&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b4622f3cebc989e3592888396fca10a463f08e83" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;-&lt;/strong&gt;&lt;em&gt;&amp;amp;optional number-or-marker &amp;amp;rest more-numbers-or-markers&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;-&lt;/strong&gt;&lt;em&gt;&amp;amp;optional number-or-marker &amp;amp;rest more-numbers-or-markers&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6eb4aa1563e7358026ec57258beb186f2b9b212b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;/&lt;/strong&gt;&lt;em&gt;number &amp;amp;rest divisors&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;/&lt;/strong&gt;&lt;em&gt;number &amp;amp;rest divisors&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="076c46093eb01acd7ee61ea40851f41483a1e2cc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;/=&lt;/strong&gt;&lt;em&gt;number-or-marker1 number-or-marker2&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;/=&lt;/strong&gt;&lt;em&gt;number-or-marker1 number-or-marker2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9fda0e26f46e9f40e25b97f61dfc989122b0b0e9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;1+&lt;/strong&gt;&lt;em&gt;number-or-marker&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;1+&lt;/strong&gt;&lt;em&gt;number-or-marker&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ca4668dd4a486043993458ff7027542eca00f1b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;1-&lt;/strong&gt;&lt;em&gt;number-or-marker&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;1-&lt;/strong&gt;&lt;em&gt;number-or-marker&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="673f310a5e054265dee2baa2faefdc1daea9d19d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;=&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;=&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="15660b1074ccfbafe711667eb02f31ce70c45534" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;Snarf-documentation&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;Snarf-documentation&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77a46a42adbb10113fb1b6acea2a498bc9117402" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-expansion&lt;/strong&gt;&lt;em&gt;abbrev &amp;amp;optional table&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;abbrev-expansion&lt;/strong&gt;&lt;em&gt;abbrev &amp;amp;optional table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca0e02a5a5ae7bb3eeae0906eed53ed1bbc088a9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-get&lt;/strong&gt;&lt;em&gt;abbrev prop&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;abbrev-get&lt;/strong&gt;&lt;em&gt;abbrev prop&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbe9898616465dfd7eee5e3befdff9b1b7fc4f78" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-insert&lt;/strong&gt;&lt;em&gt;abbrev &amp;amp;optional name start end&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;abbrev-insert&lt;/strong&gt;&lt;em&gt;abbrev &amp;amp;optional name start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="05dd83f623c276f330db0a2b68227f250e2c8fc1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-put&lt;/strong&gt;&lt;em&gt;abbrev prop val&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;abbrev-put&lt;/strong&gt;&lt;em&gt;abbrev prop val&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41adef79f28e09e25f992373945fe1334afed74c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-symbol&lt;/strong&gt;&lt;em&gt;abbrev &amp;amp;optional table&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;abbrev-symbol&lt;/strong&gt;&lt;em&gt;abbrev &amp;amp;optional table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="add9f8e7576e279a97bce948454dd529fa92734d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-table-get&lt;/strong&gt;&lt;em&gt;table prop&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;abbrev-table-get&lt;/strong&gt;&lt;em&gt;table prop&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="274d77f3e845519adec06a38928af2a5861c1467" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;abbrev-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="509039c0b8ae1626f5c308473f97d52640dcffea" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-table-put&lt;/strong&gt;&lt;em&gt;table prop val&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;abbrev-table-put&lt;/strong&gt;&lt;em&gt;table prop val&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e88c141f0cee16cb883616ac8c23e605a46c157" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbreviate-file-name&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;abbreviate-file-name&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="53988ea2de9bf1e2000f9f490c4e287009eb9563" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abs&lt;/strong&gt;&lt;em&gt;number&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;abs&lt;/strong&gt;&lt;em&gt;number&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ef7e8af7f2674eed6c9add53bec94c999e16cc3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;accept-change-group&lt;/strong&gt;&lt;em&gt;handle&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;accept-change-group&lt;/strong&gt;&lt;em&gt;handle&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b61fe4be9450b4478d86aa7f2c8d6666ca4c335a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;accept-process-output&lt;/strong&gt;&lt;em&gt;&amp;amp;optional process seconds millisec just-this-one&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;accept-process-output&lt;/strong&gt;&lt;em&gt;&amp;amp;optional process seconds millisec just-this-one&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77bfba268562aeedbcc567d0156de532e93cc598" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;access-file&lt;/strong&gt;&lt;em&gt;filename string&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;access-file&lt;/strong&gt;&lt;em&gt;filename string&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="94a7443266e7f0cd0769b54d0a023e51908e48c5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;accessible-keymaps&lt;/strong&gt;&lt;em&gt;keymap &amp;amp;optional prefix&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;accessible-keymaps&lt;/strong&gt;&lt;em&gt;keymap &amp;amp;optional prefix&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="99d1773492edc65a1e4d4101e9af52d0e4ebcac9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;acos&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;acos&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="359c3af0b85dce98d26212a265804a71f3b327ed" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;activate-change-group&lt;/strong&gt;&lt;em&gt;handle&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;activate-change-group&lt;/strong&gt;&lt;em&gt;handle&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d8e06cd3ec808ed952ab178271d7443dcf4a538a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;active-minibuffer-window&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;active-minibuffer-window&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="953f6635af7d1642eb26aa42cdf537faa7b40e50" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-face-text-property&lt;/strong&gt;&lt;em&gt;start end face &amp;amp;optional appendp object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;add-face-text-property&lt;/strong&gt;&lt;em&gt;start end face &amp;amp;optional appendp object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd381e5c98bd7eb6505076a8d913a11a30730429" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-hook&lt;/strong&gt;&lt;em&gt;hook function &amp;amp;optional depth local&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;add-hook&lt;/strong&gt;&lt;em&gt;hook function &amp;amp;optional depth local&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b68f9a3c00473be99f1930ec81233e79a5b81661" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-text-properties&lt;/strong&gt;&lt;em&gt;start end props &amp;amp;optional object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;add-text-properties&lt;/strong&gt;&lt;em&gt;start end props &amp;amp;optional object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e86f0e066f0c0211d38fc23f7fa3b65e0f45b80a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-to-history&lt;/strong&gt;&lt;em&gt;history-var newelt &amp;amp;optional maxelt keep-all&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;add-to-history&lt;/strong&gt;&lt;em&gt;history-var newelt &amp;amp;optional maxelt keep-all&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4565f852f8c5f0f3662f27084d667f63990815a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-to-invisibility-spec&lt;/strong&gt;&lt;em&gt;element&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;add-to-invisibility-spec&lt;/strong&gt;&lt;em&gt;element&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b0136fcb21e768536bf154e06b83fbc26ea0c436" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-to-list&lt;/strong&gt;&lt;em&gt;symbol element &amp;amp;optional append compare-fn&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;add-to-list&lt;/strong&gt;&lt;em&gt;symbol element &amp;amp;optional append compare-fn&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e68e013c38485c87a82c737f9a93fb3766d2e4f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-to-ordered-list&lt;/strong&gt;&lt;em&gt;symbol element &amp;amp;optional order&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;add-to-ordered-list&lt;/strong&gt;&lt;em&gt;symbol element &amp;amp;optional order&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f2f73c558244dab072ebd4a857a53e530a675420" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-variable-watcher&lt;/strong&gt;&lt;em&gt;symbol watch-function&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;add-variable-watcher&lt;/strong&gt;&lt;em&gt;symbol watch-function&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e737df9537a502421509e0b982d4e8a69e9ae25" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;adjust-window-trailing-edge&lt;/strong&gt;&lt;em&gt;window delta &amp;amp;optional horizontal pixelwise&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;adjust-window-trailing-edge&lt;/strong&gt;&lt;em&gt;window delta &amp;amp;optional horizontal pixelwise&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a03a2d3067c2c487ad56571c539c8c18dd6aa93" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-add&lt;/strong&gt;&lt;em&gt;symbol where function &amp;amp;optional props&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;advice-add&lt;/strong&gt;&lt;em&gt;symbol where function &amp;amp;optional props&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="34a24f2b4e69600effe8558ce547e4c14aae67f5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-eval-interactive-spec&lt;/strong&gt;&lt;em&gt;spec&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;advice-eval-interactive-spec&lt;/strong&gt;&lt;em&gt;spec&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0977ae87353d9e8482219dadc924900c613027d7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-function-mapc&lt;/strong&gt;&lt;em&gt;f function-def&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;advice-function-mapc&lt;/strong&gt;&lt;em&gt;f function-def&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7afbb1c06dc6b32625b8a429e078205b952c57c4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-function-member-p&lt;/strong&gt;&lt;em&gt;advice function-def&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;advice-function-member-p&lt;/strong&gt;&lt;em&gt;advice function-def&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c174211b70406fcf10d6edf2032714767f01569c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-mapc&lt;/strong&gt;&lt;em&gt;function symbol&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;advice-mapc&lt;/strong&gt;&lt;em&gt;function symbol&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a160119c6132fd2ae34cb3730cd450afdd4eb3a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-member-p&lt;/strong&gt;&lt;em&gt;function symbol&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;advice-member-p&lt;/strong&gt;&lt;em&gt;function symbol&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d843324b80794950f554af4867420fd0b491f22" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-remove&lt;/strong&gt;&lt;em&gt;symbol function&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;advice-remove&lt;/strong&gt;&lt;em&gt;symbol function&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d1c39005211e777d3c66ade79300389ba19534a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;after-find-file&lt;/strong&gt;&lt;em&gt;&amp;amp;optional error warn noauto after-find-file-from-revert-buffer nomodes&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;after-find-file&lt;/strong&gt;&lt;em&gt;&amp;amp;optional error warn noauto after-find-file-from-revert-buffer nomodes&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e850b484835785042b4a33b36759b6bb9948943" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;alist-get&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional default remove testfn&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;alist-get&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional default remove testfn&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0806197d3cc28021277a6f7a9b0d18bb6915cba4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;all-completions&lt;/strong&gt;&lt;em&gt;string collection &amp;amp;optional predicate&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;all-completions&lt;/strong&gt;&lt;em&gt;string collection &amp;amp;optional predicate&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7c8c2289593bd666923f67da5649b016add8893" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;all-threads&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;all-threads&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="62b811abbd0e6fd55453507578a60daf3efdd5e2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;append&lt;/strong&gt;&lt;em&gt;&amp;amp;rest sequences&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;append&lt;/strong&gt;&lt;em&gt;&amp;amp;rest sequences&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="685848e651a9b657fe399dc2ee123889410b06e3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;apply-partially&lt;/strong&gt;&lt;em&gt;func &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;apply-partially&lt;/strong&gt;&lt;em&gt;func &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8cb3e9dea1c22f6f264810319e6ad738a5d69971" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;apply&lt;/strong&gt;&lt;em&gt;function &amp;amp;rest arguments&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;apply&lt;/strong&gt;&lt;em&gt;function &amp;amp;rest arguments&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae394c13f973ed82b3e262c675db73972a06adde" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;aref&lt;/strong&gt;&lt;em&gt;arr index&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;aref&lt;/strong&gt;&lt;em&gt;arr index&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e64eea934ac20aa0d2ccf8e7fed61fc45f32ae3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;arrayp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;arrayp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7f7340f1861f47fbcf07c149610ed64d854cccc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;aset&lt;/strong&gt;&lt;em&gt;array index object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;aset&lt;/strong&gt;&lt;em&gt;array index object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a07af217548ae5263016b27748ad1c755d9e42a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;ash&lt;/strong&gt;&lt;em&gt;integer1 count&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;ash&lt;/strong&gt;&lt;em&gt;integer1 count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5cfc164b82bdd3b33d533b5a21347b3d74cd612" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;asin&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;asin&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d2d6f8925f184501ac2514c7caeabe2d2447422a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;ask-user-about-lock&lt;/strong&gt;&lt;em&gt;file other-user&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;ask-user-about-lock&lt;/strong&gt;&lt;em&gt;file other-user&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2de941f15f7b2e0bba2d2f2477b93871730dfe28" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;ask-user-about-supersession-threat&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;ask-user-about-supersession-threat&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e3dddf98e0c8ce1a2c7a522d4602f077c4817ab" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;assoc-default&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional test default&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;assoc-default&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional test default&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd41237ac600d80d3785527bbf6f7165f06fc135" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;assoc-delete-all&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional test&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;assoc-delete-all&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional test&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5eea2cb7c500f44d8ed58b7535d3d2c849fcb72d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;assoc-string&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional case-fold&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;assoc-string&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional case-fold&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e444cc49745e6039bac4ea7bb00b8760dbc7de85" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;assoc&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional testfn&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;assoc&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional testfn&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="239ea4015b314d56fb63ccbab0f4fc2de49a168f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;assq-delete-all&lt;/strong&gt;&lt;em&gt;key alist&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;assq-delete-all&lt;/strong&gt;&lt;em&gt;key alist&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3e2ab89d97305342a57961b5d864853ced83e28" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;assq&lt;/strong&gt;&lt;em&gt;key alist&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;assq&lt;/strong&gt;&lt;em&gt;key alist&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2aea059a0d7f8476141fd937bf1aaf5702451cc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;atan&lt;/strong&gt;&lt;em&gt;y &amp;amp;optional x&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;atan&lt;/strong&gt;&lt;em&gt;y &amp;amp;optional x&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e3c17221dde759a5e3575970a605d2a3e2ecb322" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;atom&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;atom&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4a5318e6dd8e86460d3287e020d65f08d56761f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;auto-save-file-name-p&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;auto-save-file-name-p&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a45e65f2ad7e289d0f2e7b052dc7033ab56a9488" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;autoload-do-load&lt;/strong&gt;&lt;em&gt;autoload &amp;amp;optional name macro-only&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;autoload-do-load&lt;/strong&gt;&lt;em&gt;autoload &amp;amp;optional name macro-only&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bcc17624d066bb39ec0a10b6ee8cb0b717df9fe" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;autoload&lt;/strong&gt;&lt;em&gt;function filename &amp;amp;optional docstring interactive type&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;имя файла функции &lt;/em&gt;&lt;strong&gt;автозагрузки &lt;/strong&gt;&lt;em&gt;и дополнительный интерактивный тип строки документации&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2dd6ebdf8c4bbd24dc0b202900e686bd4ef0b934" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;autoloadp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;автозагрузки&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="25871f854fbeddc919a99cee9f1478060b5227db" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backtrace-debug&lt;/strong&gt;&lt;em&gt;level flag&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;флаг уровня &lt;/em&gt;&lt;strong&gt;backtrace-debug&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1bfcee75f6be560f58743876efc19d7b1084c19" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backtrace-frame&lt;/strong&gt;&lt;em&gt;frame-number &amp;amp;optional base&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;backtrace-frame номер &lt;/strong&gt;&lt;em&gt;кадра и необязательная база&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="53daa33b72ee12831288c7dac28606cb0327e76e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backtrace&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;backtrace&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="131b40239bc16fc9212d7f437e20b6c20068addf" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backup-buffer&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;резервный буфер&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1c5efaea3e860c5ebd7129d05cde63e7c0bda96" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backup-file-name-p&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;backup-file-name-p &lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d4115caf626a72b2e5c2e0648d93a81ed356cd7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backward-prefix-chars&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;backward-prefix-chars&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b88b5bfff69b86626c1c3a70a20ee3a792e06aa5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backward-word-strictly&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;строго обратное слово &lt;/strong&gt;&lt;em&gt;и необязательный счет&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="16ea05dcad961cd644a66c3eac32113074a9c690" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;barf-if-buffer-read-only&lt;/strong&gt;&lt;em&gt;&amp;amp;optional position&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;barf-if-buffer-only-read-only &lt;/strong&gt;&lt;em&gt;&amp;amp; optional position&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69729dae5c8ac8b858b65ceb0bb2c48aab9a8e39" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;base64-decode-string&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional base64url&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;строка base64- &lt;/strong&gt;&lt;em&gt;decode &lt;/em&gt;&lt;strong&gt;- &lt;/strong&gt;&lt;em&gt;string и необязательный base64url&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b00edb6416a8bab975c2b26f9fdb30ae0d15525c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;base64-encode-string&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional no-line-break&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;строка base64-encode- &lt;/strong&gt;&lt;em&gt;string и необязательный без разрыва строки&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e3e143ea36d12eaa70b2fca8d8067c4c57e5bcb7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;base64url-encode-string&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional no-pad&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;строка base64url-encode- &lt;/strong&gt;&lt;em&gt;string и необязательная без &lt;/em&gt;&lt;strong&gt;заполнения&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="502c313c6cc48b783b00781dea93cd5cd8433d20" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;batch-byte-compile&lt;/strong&gt;&lt;em&gt;&amp;amp;optional noforce&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;batch-byte-compile &lt;/strong&gt;&lt;em&gt;и необязательный noforce&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab89670592e1d6b6b9440f7820bb8fb26632f386" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;beep&lt;/strong&gt;&lt;em&gt;&amp;amp;optional do-not-terminate&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;звуковой сигнал &lt;/strong&gt;&lt;em&gt;и необязательный не прекращать&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6273a498025b29bd7d9a8184945cc88fd76b1c8b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bidi-find-overridden-directionality&lt;/strong&gt;&lt;em&gt;from to &amp;amp;optional object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bidi-find-overridden-directionality &lt;/strong&gt;&lt;em&gt;от до &amp;amp; необязательный объект&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="174beea5b65772f0c690611ea4c86a51786f110b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bidi-string-mark-left-to-right&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bidi-string-mark-left-to-right &lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56774e34cb951af8612601ccda8e628c07085c80" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bignump&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;bignump&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aee0ddae4c2d01b37c319b39675454a74c5e3756" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bindat-get-field&lt;/strong&gt;&lt;em&gt;struct &amp;amp;rest name&lt;/em&gt;</source>
          <target state="translated">Функция: структура &lt;strong&gt;bindat-get-field &lt;/strong&gt;&lt;em&gt;и остальное имя&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8661379acb672e89fc6786773783f4035a5e2d7a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bindat-ip-to-string&lt;/strong&gt;&lt;em&gt;ip&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bindat-ip-to-string &lt;/strong&gt;&lt;em&gt;ip&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="313d20a7f51e0c756d97d20c79e0fab2e0062c5b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bindat-length&lt;/strong&gt;&lt;em&gt;spec struct&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;структура &lt;/strong&gt;&lt;em&gt;спецификации &lt;/em&gt;&lt;strong&gt;длины bindat&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bcfa80aa0cd096410642a04ebd9d63dcf821c98e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bindat-pack&lt;/strong&gt;&lt;em&gt;spec struct &amp;amp;optional bindat-raw bindat-idx&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;структура &lt;/strong&gt;&lt;em&gt;спецификации &lt;/em&gt;&lt;strong&gt;bindat-pack &lt;/strong&gt;&lt;em&gt;и необязательный bindat-raw bindat-idx&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c39da3f53b4c7c9fada690b5290ce87496af432" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bindat-unpack&lt;/strong&gt;&lt;em&gt;spec bindat-raw &amp;amp;optional bindat-idx&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bindat-unpack &lt;/strong&gt;&lt;em&gt;spec bindat-raw и необязательный bindat-idx&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="14d6231efdd46c46683ca9fd42ac584c6eab262f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bitmap-spec-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;bitmap-spec-p&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="33f6df1d1f12a61e4f5c9fb7e353e63cb1b7303c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bobp&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bobp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f95a13f4f7713a06dfeb5b616fe25d005531f18b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bolp&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bolp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf11ebf627ce9b13fbaebc9f63f13cd2ead96088" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-count-consecutive&lt;/strong&gt;&lt;em&gt;a b i&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bool-vector-count-sequence &lt;/strong&gt;&lt;em&gt;a bi&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="109f1f4a3a6504eb7b376d51a67171e8e8eecd06" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-count-population&lt;/strong&gt;&lt;em&gt;a&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bool-vector-count-population &lt;/strong&gt;&lt;em&gt;a&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ebd08cb45eb4d3110ca15806108143f8e950460" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-exclusive-or&lt;/strong&gt;&lt;em&gt;a b &amp;amp;optional c&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bool-vector-exclusive-or &lt;/strong&gt;&lt;em&gt;a b &amp;amp; optional c&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="246d1b242787c8af9c656851739d05d1cffa4ebd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-intersection&lt;/strong&gt;&lt;em&gt;a b &amp;amp;optional c&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bool-vector-correction &lt;/strong&gt;&lt;em&gt;a b &amp;amp; optional c&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0e3fce4270209a102734690cfa709018fab0f98" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-not&lt;/strong&gt;&lt;em&gt;a &amp;amp;optional b&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bool-vector-not &lt;/strong&gt;&lt;em&gt;a &amp;amp; optional b&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6732e4b0a85990ee32be720e711cd64ea2e8bdb3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;bool-vector-p&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="55168ada494c82e0b7f718e23d9e830dee8557ac" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-set-difference&lt;/strong&gt;&lt;em&gt;a b &amp;amp;optional c&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bool-vector-set-difference &lt;/strong&gt;&lt;em&gt;a b &amp;amp; optional c&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12f9e56dbe8024c15162eb83a99abfd3fbb34e88" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-subsetp&lt;/strong&gt;&lt;em&gt;a b&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bool-vector-subsetp &lt;/strong&gt;&lt;em&gt;a b&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e465262a9d0edb9a4325997854ecbe635d203b4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-union&lt;/strong&gt;&lt;em&gt;a b &amp;amp;optional c&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bool-vector-union &lt;/strong&gt;&lt;em&gt;a b &amp;amp; optional c&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9d36db9eb4751a9be4d3d13f0d92487c020ca0a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector&lt;/strong&gt;&lt;em&gt;&amp;amp;rest objects&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bool-vector &lt;/strong&gt;&lt;em&gt;и остальные объекты&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="14b6580f1de56e0b35115e844658bf51519c7195" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;booleanp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;booleanp&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="015300599d04983874d9fbd2d64cac46d359c4df" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;boundp&lt;/strong&gt;&lt;em&gt;variable&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;переменная &lt;/em&gt;&lt;strong&gt;boundp&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa96a4d675e94c373ad136e7914966a49dbddc40" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-base-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;буфер базового буфера &lt;/strong&gt;&lt;em&gt;и дополнительный буфер&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30b0cd18a017c9c767c4f91441b4d5f80dbb27cb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-chars-modified-tick&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;buffer-chars-modified-tick &lt;/strong&gt;&lt;em&gt;и необязательный буфер&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0443bfd1aafd5fb44360b0fa616a0c3d7abe7a3a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-end&lt;/strong&gt;&lt;em&gt;flag&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;флаг &lt;/em&gt;&lt;strong&gt;конца буфера&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a305c9472a806f5d996a6a4e3196954831ec9f0b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-file-name&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Функция: имя &lt;strong&gt;-файла- &lt;/strong&gt;&lt;em&gt;буфера и необязательный буфер&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4a588ee8706783f01d6774d66e016ce1907ee5c5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-hash&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;буфер-хеш &lt;/strong&gt;&lt;em&gt;и необязательный буфер или имя&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3c8cbfa11b12c59b8fb8db20cea27dbec8dddf58" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;список буферов &lt;/strong&gt;&lt;em&gt;и дополнительный фрейм&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ca67bf70826116169e721edc84594fe5147bad1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-live-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;buffer-live-p&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f8dd2e9588a43afbb497aa44486ef9ff4765e112" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-local-value&lt;/strong&gt;&lt;em&gt;variable buffer&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;buffer-local-value &lt;/strong&gt;&lt;em&gt;variable buffer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce7a0d5828c58d2679728d56b544ac143e00c13f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-local-variables&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;буферные локальные переменные &lt;/strong&gt;&lt;em&gt;и дополнительный буфер&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2361533430ee22ffd5fbaa9060b081d67c613fa1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-modified-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;buffer-modified-p &lt;/strong&gt;&lt;em&gt;и необязательный буфер&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b440756221715880ae125e3e0875f94aa1b5b441" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-modified-tick&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;buffer-modified-tick &lt;/strong&gt;&lt;em&gt;и необязательный буфер&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6f13793e7de251b0b3f7b9fb488f0b93db11bbdf" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-name&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;имя-буфера &lt;/strong&gt;&lt;em&gt;и необязательный буфер&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="051f9f2ce3fe25bda59e56824b2cf327bad985d3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-narrowed-p&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;суженный буфер-p&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be9a6e1469db9cd48289d3ee62ea1a4a9ae1a14a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;размер &lt;/strong&gt;&lt;em&gt;буфера и дополнительный буфер&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="82509c27cdfb038cedd2cdf951cc2734d4c980c1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-string&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;буфер-строка&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17016db07a116a15ab5e40bf753899eff9d5a069" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-substring-no-properties&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;буфер-подстрока-без-свойств &lt;/strong&gt;&lt;em&gt;начало конец&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="31d80d0da447e850d905aa6c5c7387be81590fcf" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-substring-with-bidi-context&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional no-properties&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;буфер-подстрока-с-двунаправленным-контекстом &lt;/strong&gt;&lt;em&gt;начало конец и необязательные свойства без свойств&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46a5fbf3089f710234647453da78389ad538460e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-substring&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;буфер-подстрока &lt;/strong&gt;&lt;em&gt;начало конец&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ab8f55221eb9ae34e31fcedba33c52146cc259f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-swap-text&lt;/strong&gt;&lt;em&gt;buffer&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;буфер-подкачка-текстовый &lt;/strong&gt;&lt;em&gt;буфер&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a873b81a04afe17fdd2452b1ef8f1481328d86a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bufferp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;bufferp&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e61da70f8396c27b6ea9303ac9a498891355c382" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bufferpos-to-filepos&lt;/strong&gt;&lt;em&gt;position &amp;amp;optional quality coding-system&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;bufferpos-to-filepos &lt;/strong&gt;&lt;em&gt;position и дополнительная система кодирования качества&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1aae739e73cab112d9cb7859964cb6e80d307bbe" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;butlast&lt;/strong&gt;&lt;em&gt;x &amp;amp;optional n&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;butlast &lt;/strong&gt;&lt;em&gt;x &amp;amp; optional n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0f6fcb0726c12ad91cb45f3e4fbeccbd519826a9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-activate&lt;/strong&gt;&lt;em&gt;button &amp;amp;optional use-mouse-action&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;кнопка активации &lt;/strong&gt;&lt;em&gt;кнопки и дополнительное действие мыши&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca9452480ff3f1e9d2a339fac689785df2396af9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-at&lt;/strong&gt;&lt;em&gt;pos&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;кнопка на &lt;/strong&gt;&lt;em&gt;поз.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f51a047ff418564c15fbb3a5aa5a3e6452a1bdd4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-end&lt;/strong&gt;&lt;em&gt;button&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;кнопка конца &lt;/strong&gt;&lt;em&gt;кнопки&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e52df647fabf94c621851bd41ba7de3686f04e5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-get&lt;/strong&gt;&lt;em&gt;button prop&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;кнопка- &lt;/strong&gt;&lt;em&gt;кнопка &lt;/em&gt;&lt;strong&gt;получения&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7403216f1bac8fb74966974ca1e2a03d1ab0ca52" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-has-type-p&lt;/strong&gt;&lt;em&gt;button type&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;кнопка типа &lt;/strong&gt;&lt;em&gt;кнопки типа &lt;/em&gt;&lt;strong&gt;p&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f23376ac82096363c6d97867068ad30f6a9beaeb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-label&lt;/strong&gt;&lt;em&gt;button&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;Кнопка метки &lt;/strong&gt;&lt;em&gt;Кнопка&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="93158304b6700c969fbb97bdc3d2059b07b38479" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-put&lt;/strong&gt;&lt;em&gt;button prop val&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;кнопка с &lt;/strong&gt;&lt;em&gt;кнопкой опора val&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e51aa27bd72f552fea52cdaf01c0e2a99eafce4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-start&lt;/strong&gt;&lt;em&gt;button&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;Кнопка пуска &lt;/strong&gt;&lt;em&gt;Кнопка&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb745763f947d23f7f02548b039b9b0b06a5ed1b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-type-get&lt;/strong&gt;&lt;em&gt;type prop&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;кнопка-тип-получить &lt;/strong&gt;&lt;em&gt;тип опора&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b86a8e6f9f1ed2d38223af842fedd8a8a772e814" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-type-put&lt;/strong&gt;&lt;em&gt;type prop val&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;button-type-put &lt;/strong&gt;&lt;em&gt;type prop val&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e2da9a762553d3872d08ca4fa6edd1143809040" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-type-subtype-p&lt;/strong&gt;&lt;em&gt;type supertype&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;супертип типа &lt;/em&gt;&lt;strong&gt;кнопки-подтипа-р&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="afa4c3b3d69c1615a40e9eda6618bf16b1f9fa7a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-type&lt;/strong&gt;&lt;em&gt;button&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;кнопка типа &lt;/strong&gt;&lt;em&gt;кнопки&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="33d5ca8cef956ebbd0376b69d71c1018242bf98d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;byte-code-function-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект- &lt;/em&gt;&lt;strong&gt;байт-код-функция-p&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7ccd7da8afeba0ab4a2651f17fb68ce02186f44" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;byte-compile&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;символ &lt;/em&gt;&lt;strong&gt;байтовой компиляции&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c97893403e189c5afc92eb46dcb634eeca63eba" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;byte-to-position&lt;/strong&gt;&lt;em&gt;byte-position&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;побайтная позиция &lt;/strong&gt;&lt;em&gt;байтовая позиция&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b0ee476c873d1696c33d9137e7b4d7fbafc86a64" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;byte-to-string&lt;/strong&gt;&lt;em&gt;byte&lt;/em&gt;</source>
          <target state="translated">Функция: от &lt;strong&gt;байта к строке &lt;/strong&gt;&lt;em&gt;байта&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="34aee39d08024d3c82e4a99ab8586244c3453c5c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;caar&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;caar &lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c1be267e9d9904b4842e45fac881df3ea9ee781" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cadr&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;cadr &lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd0cf7d1ef7edafb7f4d58c7fb2c4dfa8e40249f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;call-interactively&lt;/strong&gt;&lt;em&gt;command &amp;amp;optional record-flag keys&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;команда &lt;/em&gt;&lt;strong&gt;интерактивного вызова &lt;/strong&gt;&lt;em&gt;и дополнительные клавиши с флажками записи&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70eb9ec601554f2c6a1eae0d4237acc70e23f4ff" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;call-process-region&lt;/strong&gt;&lt;em&gt;start end program &amp;amp;optional delete destination display &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;call-process-region &lt;/strong&gt;&lt;em&gt;start end program &amp;amp; optional delete destination display &amp;amp; rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9365262957294c1bcc5562ff05953f8f9a75af4e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;call-process-shell-command&lt;/strong&gt;&lt;em&gt;command &amp;amp;optional infile destination display&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;команда call-process-shell- &lt;/strong&gt;&lt;em&gt;command и необязательный вывод файла назначения&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="234a7c69afb454fee73bf056731bbba0e1b8ad62" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;call-process&lt;/strong&gt;&lt;em&gt;program &amp;amp;optional infile destination display &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;программа &lt;/em&gt;&lt;strong&gt;процесса вызова &lt;/strong&gt;&lt;em&gt;и необязательное отображение конечного файла и аргументы отдыха&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9631a8956c2209172b946e088f1d4d19888300ab" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;call-shell-region&lt;/strong&gt;&lt;em&gt;start end command &amp;amp;optional delete destination&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;call-shell-region &lt;/strong&gt;&lt;em&gt;start end команда и необязательный пункт назначения для удаления&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="550062a7c1554f6b94d87fd8f85f7e5b078c83c9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;called-interactively-p&lt;/strong&gt;&lt;em&gt;kind&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;вызываемый-интерактивно-р &lt;/strong&gt;&lt;em&gt;вид&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66277dfa7cb1220ff14e4fd9e8eb5c5d3f96849b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cancel-change-group&lt;/strong&gt;&lt;em&gt;handle&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;дескриптор &lt;/em&gt;&lt;strong&gt;группы отмены изменений&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2775faf1bf3f7c4a57b1cdfa7bced6f68da5f8dd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cancel-timer&lt;/strong&gt;&lt;em&gt;timer&lt;/em&gt;</source>
          <target state="translated">: Функция &lt;strong&gt;отмены таймер &lt;/strong&gt;&lt;em&gt;таймер&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="852307446d52147294fb5e73102228a3c74dd7e6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;capitalize&lt;/strong&gt;&lt;em&gt;string-or-char&lt;/em&gt;</source>
          <target state="translated">Функция: использовать &lt;strong&gt;заглавные буквы в &lt;/strong&gt;&lt;em&gt;строке или символе&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c004eb4846b6c84e18ba1845f08f5c7b43ef391" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;car-safe&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;безопасный для автомобиля &lt;/strong&gt;&lt;em&gt;объект&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d70f4229ec1ac5395ecaca935a9eb158d493d596" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;car&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;автомобиль &lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3936a03b2f6902b4e1b3f9cdb1531ba75c7fdc9f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;case-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;case-table-p&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f6c80d2bde519e96a1579fa2e654beeb480a019c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;category-docstring&lt;/strong&gt;&lt;em&gt;category &amp;amp;optional table&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;категория-строка документации, &lt;/strong&gt;&lt;em&gt;категория и дополнительная таблица&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="070e8c8e7664306ae6871b597ba1e1ec5a2d9f45" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;category-set-mnemonics&lt;/strong&gt;&lt;em&gt;category-set&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;набор- &lt;/strong&gt;&lt;em&gt;категория- &lt;/em&gt;&lt;strong&gt;мнемоника набор- &lt;/strong&gt;&lt;em&gt;категорий&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7c698443236912bb108079102c13ea723d947934" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;category-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;category-table-p&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e92b685cd7c3a22a24f78e6056be4628b96bd9e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;category-table&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;категория-таблица&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7e66dc454d4d853a9310418f8a332bb82a23437" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cdar&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;cdar &lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="16622ba509a2c267ee58ef2ea832f27fa9c15608" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cddr&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;cddr &lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f10afae7b007b51a030ab5fc705e6bac1ef7a5df" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cdr-safe&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;cdr-безопасный &lt;/strong&gt;&lt;em&gt;объект&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="047f4689447b96857a8947da4cba0269e448a6d0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cdr&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;cdr &lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="60c77f25bf6184d810695988dec19771d2976e6f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;ceiling&lt;/strong&gt;&lt;em&gt;number &amp;amp;optional divisor&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;номер &lt;/em&gt;&lt;strong&gt;потолка &lt;/strong&gt;&lt;em&gt;и дополнительный делитель&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="852ffa748551d3f9377a2bef50e6bd61d6f777d2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-after&lt;/strong&gt;&lt;em&gt;&amp;amp;optional position&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;символ после символа &lt;/strong&gt;&lt;em&gt;и необязательная позиция&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dea239d2c680d7781cdc8ab2943bd00f710fb846" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-before&lt;/strong&gt;&lt;em&gt;&amp;amp;optional position&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;символ перед &lt;/strong&gt;&lt;em&gt;и необязательная позиция&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a206b520bc6631f48b86177f0a53d3b646edf28" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-category-set&lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;char-category-set &lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="630a918840f55a66b9568d9e9c4feaa333dde02a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-charset&lt;/strong&gt;&lt;em&gt;character &amp;amp;optional restriction&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;символ charset &lt;/strong&gt;&lt;em&gt;и необязательное ограничение&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2753b71977cc335c4845e0c8ca9a11e22dfdc6f7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-code-property-description&lt;/strong&gt;&lt;em&gt;prop value&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;char-code-property-description &lt;/strong&gt;&lt;em&gt;значение &lt;/em&gt;&lt;strong&gt;свойства&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c5cc1d800868abd6aabd731dcd6bd832791c3d1a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-displayable-p&lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;char-displayable-p &lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e60536f10c7d06039df977083bcf87c9234e96ee" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-equal&lt;/strong&gt;&lt;em&gt;character1 character2&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;углеродно равная &lt;/strong&gt;&lt;em&gt;character1 character2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d95d1f5b01d5c8b438cd5fecf47d85bbbb1ec36" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-from-name&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional ignore-case&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;строка &lt;/em&gt;&lt;strong&gt;char-from-name &lt;/strong&gt;&lt;em&gt;и необязательный регистр игнорирования&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c40d317b8cc626c35194e60bd40385ac0639016" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-or-string-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;char-or-string-p&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c897d63f806af28afb4cd60c3b96ad98b8eec58b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-syntax&lt;/strong&gt;&lt;em&gt;character&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;углеродно синтаксис &lt;/strong&gt;&lt;em&gt;символов&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd4c50fa276c601b56559c709ed5079269d00f03" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-table-extra-slot&lt;/strong&gt;&lt;em&gt;char-table n&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;char-table-extra-slot &lt;/strong&gt;&lt;em&gt;char-table n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7dcb199fd0da9d3bcb0a1bdc4287df214f46b2b8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;char-table-p&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42c7484134ef84c8e29ffb12bec1f7670d494138" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-table-parent&lt;/strong&gt;&lt;em&gt;char-table&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;char-table-parent &lt;/strong&gt;&lt;em&gt;char-table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="785b5330bbfc8af5f6a6b5d277eace49d768b8c7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-table-range&lt;/strong&gt;&lt;em&gt;char-table range&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;char-table-range &lt;/strong&gt;&lt;em&gt;char-table range&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1d30fab06f4240d0098779781b5cc71828316051" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-table-subtype&lt;/strong&gt;&lt;em&gt;char-table&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;char-table-subtype &lt;/strong&gt;&lt;em&gt;char-table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f64a2fc8b8fcc9100bba6396e9e3af39c89be4f2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-to-string&lt;/strong&gt;&lt;em&gt;character&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;символ в строку &lt;/strong&gt;&lt;em&gt;символов&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc564b1d5ffdddfb9ab7d2ebef9e0a5b1aa1ccf9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-width&lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;char-width &lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e9823c73fc58ec1b90bc60c496b9503895558b9b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;characterp&lt;/strong&gt;&lt;em&gt;charcode&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;characterp &lt;/strong&gt;&lt;em&gt;charcode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6d5a77b0c220e9a44df58e66ac5918c3c26f19d7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;charset-after&lt;/strong&gt;&lt;em&gt;&amp;amp;optional pos&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;charset-after &lt;/strong&gt;&lt;em&gt;&amp;amp; optional pos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d6ec702c076c38a6163e8c24e48449e2eb5b3be3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;charset-plist&lt;/strong&gt;&lt;em&gt;charset&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;charset-plist &lt;/strong&gt;&lt;em&gt;charset&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc570a269b2d36d3ed29317490ff3bbf1fa9c48b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;charset-priority-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional highestp&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;список приоритетов кодировки &lt;/strong&gt;&lt;em&gt;и необязательный наивысший&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0de4a58f17ffccd5bbb338fcb332677631602c64" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;charsetp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;charsetp&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac3f930abaa34eee0d80761a890cc69ec044a1ec" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;check-coding-system&lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;система &lt;/strong&gt;&lt;em&gt;кодирования- &lt;/em&gt;&lt;strong&gt;проверки-кодирования&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="206b61972e1cd69d6fd67557025bbeeed96cac1f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;check-coding-systems-region&lt;/strong&gt;&lt;em&gt;start end coding-system-list&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;check-coding-systems-region &lt;/strong&gt;&lt;em&gt;start end coding-system-list&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91b99c57992a4a4782e83da9223b3d24a7d89b60" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cl-call-next-method&lt;/strong&gt;&lt;em&gt;&amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;cl-call-next-method &lt;/strong&gt;&lt;em&gt;&amp;amp; rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df2781c0e34245e14e02e966b85cb332d6a423df" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cl-next-method-p&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;cl-next-method-p&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1adb23327f964787a36bf908dab545d3b70dfe7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cl-old-struct-compat-mode&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;cl-old-struct-compat-mode &lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d16ddc1de231afc2e9248a4e1ea784ce180f3c02" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;clear-abbrev-table&lt;/strong&gt;&lt;em&gt;abbrev-table&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;clear-abbrev-table &lt;/strong&gt;&lt;em&gt;abbrev-table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="510e0d836cb736fdfbc94a7120108dbed5ba2f91" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;clear-image-cache&lt;/strong&gt;&lt;em&gt;&amp;amp;optional filter&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;clear-image-cache &lt;/strong&gt;&lt;em&gt;и дополнительный фильтр&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c77b6351969085039d88c7fc4d46a5178c1dd2d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;clear-string&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;строка с прозрачной &lt;/strong&gt;&lt;em&gt;строкой&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a92634f360f3680b8fb3e5393f46f344d5d52d1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;clear-this-command-keys&lt;/strong&gt;&lt;em&gt;&amp;amp;optional keep-record&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;clear-this-command-keys &lt;/strong&gt;&lt;em&gt;и необязательный keep-record&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e9dd1050590e6addc4705a9bd7eb9df90342c18" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;clear-visited-file-modtime&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;clear-visit-file-modtime&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f70e48348e40392e9abcb306f0be5781c3e11576" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;clrhash&lt;/strong&gt;&lt;em&gt;table&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;таблица &lt;/em&gt;&lt;strong&gt;clrhash&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8804c3c324daeb306700917ab50868f5b465a046" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-aliases&lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;coding-system-aliases &lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c1a39a870eddcfc28d4942774e92efc8b4a10bea" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-change-eol-conversion&lt;/strong&gt;&lt;em&gt;coding-system eol-type&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;coding-system-change-eol-conversion &lt;/strong&gt;&lt;em&gt;coding-system-eol-type&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="82f31a8a0f8e7e788d29de18dc980e769f83d18a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-change-text-conversion&lt;/strong&gt;&lt;em&gt;eol-coding text-coding&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;coding-system-change-text- &lt;/strong&gt;&lt;em&gt;convert eol-coding text-coding&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b7654eafa6d18c7d1ecfe3e4a54f1930473562c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-charset-list&lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;coding-system-charset-list &lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39050a32add1c2bac04d9ec861e401892c6703af" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-eol-type&lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;coding-system-eol-type &lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3af6b192767b0133fa9fcaf65e7308889037e7d9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-get&lt;/strong&gt;&lt;em&gt;coding-system property&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;coding-system-get &lt;/strong&gt;&lt;em&gt;coding-system property&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f21feb8d79eee772fbe4876d618a8d135c32ff28" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional base-only&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;coding-system-list &lt;/strong&gt;&lt;em&gt;&amp;amp; optional base-only&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="007f2122b415f91848394d123fd820fddb095d69" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;coding-system-p&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c77afd26a17ef925845d1adee2cb7c1b2a72aa0f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-priority-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional highestp&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;coding-system-priority-list &lt;/strong&gt;&lt;em&gt;и необязательный самый высокий&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7fa31a6eb99f0ec5fca182026aec3ed0183b02dd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;color-defined-p&lt;/strong&gt;&lt;em&gt;color &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;color-defined-p &lt;/strong&gt;&lt;em&gt;цвет и дополнительная рамка&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c41a0d861ac96e508b0e6dd027c853ac61af998" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;color-gray-p&lt;/strong&gt;&lt;em&gt;color &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;цвет-серый-p &lt;/strong&gt;&lt;em&gt;цвет и дополнительная рамка&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="383d8f151d9c6e2fdf4eb766e8bf0af363ed57de" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;color-supported-p&lt;/strong&gt;&lt;em&gt;color &amp;amp;optional frame background-p&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;color-supported-p &lt;/strong&gt;&lt;em&gt;цвет и дополнительный фон рамки-p&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb8619c981a9f5fe568c8c16410b4fb8ad906fc5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;color-values&lt;/strong&gt;&lt;em&gt;color &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;цвет значений &lt;/strong&gt;&lt;em&gt;цвета и дополнительная рамка&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="93c8d5283a0ea48b5baf4802cc68ce67657d777b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;combine-and-quote-strings&lt;/strong&gt;&lt;em&gt;list-of-strings &amp;amp;optional separator&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;объединить и заключить в кавычки &lt;/strong&gt;&lt;em&gt;список строк и дополнительный разделитель&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d009ccf2578d55b4e4b3e24acab3b674978014c6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;command-execute&lt;/strong&gt;&lt;em&gt;command &amp;amp;optional record-flag keys special&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;команда выполнения &lt;/strong&gt;&lt;em&gt;команды и дополнительные специальные клавиши флага записи&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5bcf8a07b4ff2a897699c39c949a6409512702a9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;command-line&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;командная строка&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ff87fadb9c25755ba3d36c9e1016fe1e035d12d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;command-remapping&lt;/strong&gt;&lt;em&gt;command &amp;amp;optional position keymaps&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;команда переназначения &lt;/strong&gt;&lt;em&gt;команд и дополнительные раскладки позиций&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63b31f007940028bcce0a08f659253a5120fffec" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;commandp&lt;/strong&gt;&lt;em&gt;object &amp;amp;optional for-call-interactively&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;commandp &lt;/strong&gt;&lt;em&gt;и необязательный для интерактивного вызова&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="510d7d51a6e89a973dc14422468e094eaedf968c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;compare-buffer-substrings&lt;/strong&gt;&lt;em&gt;buffer1 start1 end1 buffer2 start2 end2&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;compare-buffer-substrings &lt;/strong&gt;&lt;em&gt;buffer1 start1 end1 buffer2 start2 end2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b6173f21800b523f55448aebe48b82d8b22cbf0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;compare-strings&lt;/strong&gt;&lt;em&gt;string1 start1 end1 string2 start2 end2 &amp;amp;optional ignore-case&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;compare-strings &lt;/strong&gt;&lt;em&gt;string1 start1 end1 string2 start2 end2 &amp;amp; optional ignore-case&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6dc4c1c1c5f1cf83d3b13d266d00d135565de254" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;compare-window-configurations&lt;/strong&gt;&lt;em&gt;config1 config2&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;compare-window-configurations &lt;/strong&gt;&lt;em&gt;config1 config2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0cf9fedd16b4129623a54b829a6c002f5980549" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;completing-read&lt;/strong&gt;&lt;em&gt;prompt collection &amp;amp;optional predicate require-match initial history default inherit-input-method&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;сборка &lt;/strong&gt;&lt;em&gt;подсказок &lt;/em&gt;&lt;strong&gt;завершения-чтения &lt;/strong&gt;&lt;em&gt;и необязательного предиката require-match исходная история по умолчанию метод наследования-ввода&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2129decdf67dc031053e8a71f391381ee473af4f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;completion-boundaries&lt;/strong&gt;&lt;em&gt;string collection predicate suffix&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;суффикс предиката коллекции строк с &lt;/em&gt;&lt;strong&gt;границами завершения&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="08d5e7d770839a0dbe79925dde4a6a49b953f67b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;completion-in-region&lt;/strong&gt;&lt;em&gt;start end collection &amp;amp;optional predicate&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;завершение в области &lt;/strong&gt;&lt;em&gt;начала и конца коллекции и необязательный предикат&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b8ba41f6e31c78bbe14e0cfabbcb1c0ebaa5e77" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;completion-table-dynamic&lt;/strong&gt;&lt;em&gt;function &amp;amp;optional switch-buffer&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;динамическая &lt;/strong&gt;&lt;em&gt;функция &lt;/em&gt;&lt;strong&gt;таблицы завершения &lt;/strong&gt;&lt;em&gt;и дополнительный буфер переключения&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39c868ffddcf76664f7de7242111e1918eeb3e6f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;completion-table-with-cache&lt;/strong&gt;&lt;em&gt;function &amp;amp;optional ignore-case&lt;/em&gt;</source>
          <target state="translated">Функция: функция &lt;strong&gt;завершения таблицы с кешем &lt;/strong&gt;&lt;em&gt;и необязательный регистр игнорирования&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41d3ad27e6f106d353942d0bbbbafdd2a1729570" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;compute-motion&lt;/strong&gt;&lt;em&gt;from frompos to topos width offsets window&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;вычислить движение &lt;/strong&gt;&lt;em&gt;из окна смещения ширины от точки до точки&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0ec4c3c3b5dd9a931c901db0c0de27c54c88e95" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;concat&lt;/strong&gt;&lt;em&gt;&amp;amp;rest sequences&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;последовательности &lt;/em&gt;&lt;strong&gt;concat &lt;/strong&gt;&lt;em&gt;и rest&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e7ece7c729afe9c73fcc33c835a6b92ac7f07ab" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;condition-mutex&lt;/strong&gt;&lt;em&gt;cond&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;condition-mutex &lt;/strong&gt;&lt;em&gt;cond&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d89d8512d16f66078415a3a4cb543c3e4decbe6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;condition-name&lt;/strong&gt;&lt;em&gt;cond&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;имя-условия &lt;/strong&gt;&lt;em&gt;cond&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe44c0c8569659d65c34234b7970cd329b801130" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;condition-notify&lt;/strong&gt;&lt;em&gt;cond &amp;amp;optional all&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;условие-уведомление &lt;/strong&gt;&lt;em&gt;cond &amp;amp; необязательно все&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce35400508b6409e9e8108d55d433fe59956735a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;condition-variable-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект- &lt;/em&gt;&lt;strong&gt;условие-переменная-p&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0d19927b8e21c4cb7947dc4bda9a62c92a00600" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;condition-wait&lt;/strong&gt;&lt;em&gt;cond&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;условие-ожидание &lt;/strong&gt;&lt;em&gt;cond&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="36512be769d3f34ad0369d23681de343c600f8c8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;connection-local-set-profile-variables&lt;/strong&gt;&lt;em&gt;profile variables&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;переменные &lt;/strong&gt;&lt;em&gt;профиля- &lt;/em&gt;&lt;strong&gt;соединения-локального-набора-профиля- &lt;/strong&gt;&lt;em&gt;профиля&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd5a0a1ac941b2c02354964ff7671be4ad8b7c62" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;connection-local-set-profiles&lt;/strong&gt;&lt;em&gt;criteria &amp;amp;rest profiles&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;критерии &lt;/em&gt;&lt;strong&gt;настройки-локального-подключения-профилей &lt;/strong&gt;&lt;em&gt;и профили отдыха&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="827ee66319f0fc56426e64a3250cf202da4da54f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cons&lt;/strong&gt;&lt;em&gt;object1 object2&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;cons &lt;/strong&gt;&lt;em&gt;object1 object2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bd4149ba1de415f88c7767745a65ccd544a8142" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;consp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;объект &lt;/em&gt;&lt;strong&gt;заговора&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc978d1967d4905ba71e5d7faedb79b0ca5010f0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;constrain-to-field&lt;/strong&gt;&lt;em&gt;new-pos old-pos &amp;amp;optional escape-from-edge only-in-line inhibit-capture-property&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;ограничение поля &lt;/strong&gt;&lt;em&gt;new-pos old-pos &amp;amp; optional escape-from-edge only-in-line свойство запрета-захвата&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5161e78605a25c810f76bba1161723d912d1f341" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;continue-process&lt;/strong&gt;&lt;em&gt;&amp;amp;optional process current-group&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;continue-process &lt;/strong&gt;&lt;em&gt;и необязательный процесс current-group&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66beb41618980a6b6bb7cffb5ee53d36cc1aa64c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;controlling-tty-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional tty&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;control-tty-p &lt;/strong&gt;&lt;em&gt;и дополнительный tty&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d35524ae2027978f244f886ccdc5de018541aa96" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;convert-standard-filename&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;convert-standard-filename &lt;/strong&gt;&lt;em&gt;имя_файла&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b6f1526053f78c7107eb0eb92cab40b1cc36642" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coordinates-in-window-p&lt;/strong&gt;&lt;em&gt;coordinates window&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;координаты-в-окно-р &lt;/strong&gt;&lt;em&gt;окно координаты&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cefaccbae868c7b4902703cfb7943bddff778496" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;copy-abbrev-table&lt;/strong&gt;&lt;em&gt;abbrev-table&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;copy-abbrev-table &lt;/strong&gt;&lt;em&gt;abbrev-table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="05477ed7ac608fd8b3e3272550ecb46f322d185b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;copy-alist&lt;/strong&gt;&lt;em&gt;alist&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;copy-alist &lt;/strong&gt;&lt;em&gt;alist&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a15a724ebaaec34f4c9d9314cd2c2e3e5ccd2b9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;copy-category-table&lt;/strong&gt;&lt;em&gt;&amp;amp;optional table&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;копировать таблицу категорий &lt;/strong&gt;&lt;em&gt;и дополнительную таблицу&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eefae7c8beed1b0b5b6da5dfcb01edcda5a7ee1d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;copy-hash-table&lt;/strong&gt;&lt;em&gt;table&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;копировать хеш- &lt;/strong&gt;&lt;em&gt;таблицу&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a6bd9658c877a488b620d17ec2643e31ba90140f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;copy-keymap&lt;/strong&gt;&lt;em&gt;keymap&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;копирование раскладки &lt;/strong&gt;&lt;em&gt;клавиатуры&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d2499496f24cd89b73ddffe65102a0299f97591" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;copy-marker&lt;/strong&gt;&lt;em&gt;&amp;amp;optional marker-or-integer insertion-type&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;маркер копирования &lt;/strong&gt;&lt;em&gt;и дополнительный тип вставки маркера или целого числа&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e587634cca442e020f0c706118f989a2ff86ec2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;copy-overlay&lt;/strong&gt;&lt;em&gt;overlay&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;копирование- &lt;/strong&gt;&lt;em&gt;оверлей&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="53faf02f535314cb065662fb2911191f1a62e79d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;copy-sequence&lt;/strong&gt;&lt;em&gt;seqr&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;copy-sequence &lt;/strong&gt;&lt;em&gt;seqr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea4b63ab9828ef6a325c422fb0fc5479d3d1248b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;copy-syntax-table&lt;/strong&gt;&lt;em&gt;&amp;amp;optional table&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;copy-syntax-table &lt;/strong&gt;&lt;em&gt;и необязательная таблица&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="012ccb3b31dbdea963965c5a092a7de3239ef4ae" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;copy-tree&lt;/strong&gt;&lt;em&gt;tree &amp;amp;optional vecp&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;дерево копий &lt;/strong&gt;&lt;em&gt;и дополнительный vecp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a64d8b4bdbb296e2bd884a50f5ca8917d27a969" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;copysign&lt;/strong&gt;&lt;em&gt;x1 x2&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;copysign &lt;/strong&gt;&lt;em&gt;x1 x2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00249cd438ae637a9193f772746f08624599a84e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cos&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;cos &lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b10f8933f829ac2ae6182565a31951b992476d7e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;count-lines&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;начало конца &lt;/em&gt;&lt;strong&gt;счетчика&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0db727da0c0cf2b9f178d26982c330eb4566f48f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;count-screen-lines&lt;/strong&gt;&lt;em&gt;&amp;amp;optional beg end count-final-newline window&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;count-screen-lines &lt;/strong&gt;&lt;em&gt;и необязательное начало end count-final-newline window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="44eec9e3e05ae753cf36f56eabf7c7c6659ae969" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;create-file-buffer&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;create-file-buffer &lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5c9a8b4bd1c989283fa71a8b3742c2424b13acd8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;create-fontset-from-fontset-spec&lt;/strong&gt;&lt;em&gt;fontset-spec &amp;amp;optional style-variant-p noerror&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;create-fontset-from-fontset-spec &lt;/strong&gt;&lt;em&gt;fontset-spec и необязательный style-option-p noerror&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d2fe7eef6fcf329fc855839317173d10eba630ab" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;create-image&lt;/strong&gt;&lt;em&gt;file-or-data &amp;amp;optional type data-p &amp;amp;rest props&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;create-image &lt;/strong&gt;&lt;em&gt;file-or-data &amp;amp; optional type data-p &amp;amp; rest props&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="660981832c6218180483c4a6ef25877bd207688e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-active-maps&lt;/strong&gt;&lt;em&gt;&amp;amp;optional olp position&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;текущие-активные-карты &lt;/strong&gt;&lt;em&gt;и необязательная позиция olp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11214f9ef43c85fe30324daad0fc3deb86a88fc8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-bidi-paragraph-direction&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Функция: направление &lt;strong&gt;текущего-двунаправленного-абзаца &lt;/strong&gt;&lt;em&gt;и дополнительный буфер&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="556128c73143425022666edf49ecda8787770cad" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-buffer&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;current-buffer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a621669234aeb06017d08570f9c88910e2ef433" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-case-table&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;current-case-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72ccc875ed3393a062ec6c42af86febb297247a7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-column&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;текущий столбец&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="efad6a5521a462260375afabd1f46e0896275aa2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-fill-column&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;current-fill-column&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e08aae6c3f5fb84482cd1fdee5a3ff86dd9d609" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-frame-configuration&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;current-frame-configuration&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="214122a2379842dbf6f994ac76e5f33e9ab89dba" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-global-map&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;current-global-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b728e5d59f33844ab177958faee0309a195309a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-idle-time&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;ток простоя&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fcc172966466e6d9e002402c1c64f320574c4a1c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-indentation&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;current-indentation&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e1b5a3993c6aa4f9c1d83fd427920d7cd0eebd7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-input-mode&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;текущий режим ввода&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc8d4dc63fcbb706a3a66c47681df773dd90b201" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-justification&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;текущее обоснование&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac691e5b54dcc143baff7162b1fb7f83686836f0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-kill&lt;/strong&gt;&lt;em&gt;n &amp;amp;optional do-not-move&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;current-kill &lt;/strong&gt;&lt;em&gt;n и необязательно do-not-move&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3beddcb49a344fa4ace3c82b7910816d574a4a3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-left-margin&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;current-left-margin&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d2b6fe61677b1dec3bd975d2ebb7c36b4aca4cb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-local-map&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;current-local-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42d07126cc661fa102b8ce909b588cce54070ce2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-message&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;current-message&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dde1a3d923b5063f1380d9de5e4b6442b18a9156" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-minor-mode-maps&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;current-minor-mode-maps&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef8678b2df3915f2b379a0ec7f8fb5c2e5b3a3f2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-thread&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;current-thread&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11976434038367e6a68ac1e0243ebbacd0534c37" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-time-string&lt;/strong&gt;&lt;em&gt;&amp;amp;optional time zone&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;текущая временная строка &lt;/strong&gt;&lt;em&gt;и дополнительный часовой пояс&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df7533e3a0aa14dc9507bb37a8e4f7f0cb687385" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-time-zone&lt;/strong&gt;&lt;em&gt;&amp;amp;optional time zone&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;текущий часовой пояс &lt;/strong&gt;&lt;em&gt;и дополнительный часовой пояс&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74313ce752f2367cd10ef5f91b12861dd204e3ae" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-time&lt;/strong&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;текущее время&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba1e5ad1423f3eb168d02b922afe7cd72fbda7ef" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-window-configuration&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;текущая конфигурация окна &lt;/strong&gt;&lt;em&gt;и дополнительный фрейм&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="67f5b4de860d9518e6ed3f601d2ce085857da18d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;current-word&lt;/strong&gt;&lt;em&gt;&amp;amp;optional strict really-word&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;текущее слово &lt;/strong&gt;&lt;em&gt;и необязательное строгое действительное слово&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="87fce282a2019f75cb7a1291c024717b353c64af" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;custom-add-frequent-value&lt;/strong&gt;&lt;em&gt;symbol value&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;значение &lt;/strong&gt;&lt;em&gt;символа &lt;/em&gt;&lt;strong&gt;настраиваемого добавления частого &lt;/strong&gt;&lt;em&gt;значения&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01fb8f1efc7e2b3b17ad52cb843d0e09d95a1d89" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;custom-initialize-delay&lt;/strong&gt;&lt;em&gt;symbol value&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;значение символа &lt;/em&gt;&lt;strong&gt;custom-initialize-delay&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="99d989f8b0e4176227f576dc447ba1d6ac496d49" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;custom-reevaluate-setting&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;настраиваемый &lt;/strong&gt;&lt;em&gt;символ &lt;/em&gt;&lt;strong&gt;установки переоценки&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ca0a6935f2f3d83e1f5afe22e2bac24298717af" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;custom-set-faces&lt;/strong&gt;&lt;em&gt;&amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;custom-set-faces &lt;/strong&gt;&lt;em&gt;и rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6937b78e3915f54d855c8d17aeaf5a562b03efb1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;custom-set-variables&lt;/strong&gt;&lt;em&gt;&amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;настраиваемые переменные &lt;/strong&gt;&lt;em&gt;и аргументы отдыха&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="98d6129186f78a1f23c5968353592ab14b8b13a8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;custom-theme-p&lt;/strong&gt;&lt;em&gt;theme&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;заказ тема-р &lt;/strong&gt;&lt;em&gt;тема&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f94d6ab2a2887067121b6aecc79edab898a0ffe" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;custom-theme-set-faces&lt;/strong&gt;&lt;em&gt;theme &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;custom-theme-set-faces &lt;/strong&gt;&lt;em&gt;theme и остальные аргументы&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="85c9d6d1211568b37cdabbb0e5690d98ea100101" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;custom-theme-set-variables&lt;/strong&gt;&lt;em&gt;theme &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;настраиваемая-тема-набор-переменных &lt;/strong&gt;&lt;em&gt;тема и остальные аргументы&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ddd4a7fcbc0c8ecccdc6d00926b6958c8809e408" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;custom-variable-p&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;custom-variable-p &lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a97707418c413b67d8aa832a32a9b10b6aa462f5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;date-days-in-month&lt;/strong&gt;&lt;em&gt;year month&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;дата-дни-в-месяце &lt;/strong&gt;&lt;em&gt;год месяц&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f7e037d1c9f9fe81b425b4a93ae9eb8c67c0be2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;date-leap-year-p&lt;/strong&gt;&lt;em&gt;year&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;дата-високосный-р &lt;/strong&gt;&lt;em&gt;год&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63fb9e7c34324882d35a3eaead9d9be4095a0379" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;date-ordinal-to-time&lt;/strong&gt;&lt;em&gt;year ordinal&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;порядковый номер даты-времени &lt;/strong&gt;&lt;em&gt;порядковый номер года&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4f62d3a9be72010e6ccdad3094d5b006978f2a6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;date-to-time&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;строка &lt;/em&gt;&lt;strong&gt;даты и времени&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="daab4f53f1d3f3a6bf7ec701e94ee76caef97741" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;deactivate-mark&lt;/strong&gt;&lt;em&gt;&amp;amp;optional force&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;деактивировать отметку &lt;/strong&gt;&lt;em&gt;и дополнительную силу&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f86c6640921e08a593e1edaeadd758515651e63b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;decode-char&lt;/strong&gt;&lt;em&gt;charset code-point&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;кодовая точка кодировки &lt;/em&gt;&lt;strong&gt;decode-char&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1df51b14f0afa91d56ea637dd9b82513469ebb45" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;decode-coding-inserted-region&lt;/strong&gt;&lt;em&gt;from to filename &amp;amp;optional visit beg end replace&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;strong&gt;decode-coding-insert-region &lt;/strong&gt;&lt;em&gt;от до имени файла и необязательного посещения начать конец заменить&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28aadf1391eacff34460b4859a64af1ee3fd0143" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;decode-coding-string&lt;/strong&gt;&lt;em&gt;string coding-system &amp;amp;optional nocopy buffer&lt;/em&gt;</source>
          <target state="translated">Функция: система &lt;strong&gt;кодирования строки декодирования-кодирования &lt;/strong&gt;&lt;em&gt;и дополнительный буфер без копирования&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66c969ac3b6b89c958d86555d38342b084c79fa7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;decode-time&lt;/strong&gt;&lt;em&gt;&amp;amp;optional time zone form&lt;/em&gt;</source>
          <target state="translated">Функция: время &lt;strong&gt;декодирования &lt;/strong&gt;&lt;em&gt;и дополнительная форма часового пояса&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7fd4069166bd37898dfff41f21dc205f1003266" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;decoded-time-add&lt;/strong&gt;&lt;em&gt;time delta&lt;/em&gt;</source>
          <target state="translated">Функция: &lt;em&gt;временная дельта &lt;/em&gt;&lt;strong&gt;декодирования с добавлением &lt;/strong&gt;&lt;em&gt;времени&lt;/em&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
