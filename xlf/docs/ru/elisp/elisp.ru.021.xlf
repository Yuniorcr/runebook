<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="c25d1d4d6e52e9b859267b4c39eb8ed6ab93b267" translate="yes" xml:space="preserve">
          <source>XRandr</source>
          <target state="translated">XRandr</target>
        </trans-unit>
        <trans-unit id="2e0cbcf7084f2751edbe292078a9e429a70d4a39" translate="yes" xml:space="preserve">
          <source>Xinerama</source>
          <target state="translated">Xinerama</target>
        </trans-unit>
        <trans-unit id="23eb4d3f4155395a74e9d534f97ff4c1908f5aac" translate="yes" xml:space="preserve">
          <source>Y</source>
          <target state="translated">Y</target>
        </trans-unit>
        <trans-unit id="28da44953259e9f3ad2f2968f0c36dd2281452a2" translate="yes" xml:space="preserve">
          <source>Yanking</source>
          <target state="translated">Yanking</target>
        </trans-unit>
        <trans-unit id="5a9d6022b3fc910ff5ce0ae8a84f4a2d88164efc" translate="yes" xml:space="preserve">
          <source>Yanking means inserting text from the kill ring, but it does not insert the text blindly. The &lt;code&gt;yank&lt;/code&gt; command, and related commands, use &lt;code&gt;insert-for-yank&lt;/code&gt; to perform special processing on the text before it is inserted.</source>
          <target state="translated">Yanking means inserting text from the kill ring, but it does not insert the text blindly. The &lt;code&gt;yank&lt;/code&gt; command, and related commands, use &lt;code&gt;insert-for-yank&lt;/code&gt; to perform special processing on the text before it is inserted.</target>
        </trans-unit>
        <trans-unit id="c8557f4942f696413e60e05c86fcdfeb0830b5eb" translate="yes" xml:space="preserve">
          <source>Year numbers less than 100 are not treated specially. If you want them to stand for years above 1900, or years above 2000, you must alter them yourself before you call &lt;code&gt;encode-time&lt;/code&gt;. The operating system limits the range of time and zone values.</source>
          <target state="translated">Year numbers less than 100 are not treated specially. If you want them to stand for years above 1900, or years above 2000, you must alter them yourself before you call &lt;code&gt;encode-time&lt;/code&gt; . The operating system limits the range of time and zone values.</target>
        </trans-unit>
        <trans-unit id="4387457351337c625059239292f6521a6452f04f" translate="yes" xml:space="preserve">
          <source>Yes-or-No Queries</source>
          <target state="translated">Да-или нет Запросы</target>
        </trans-unit>
        <trans-unit id="bcb8f8f01a5f0d55249b6245600855530c735d13" translate="yes" xml:space="preserve">
          <source>Yield execution to the next runnable thread.</source>
          <target state="translated">Уступите исполнение следующему запущенному потоку.</target>
        </trans-unit>
        <trans-unit id="55d573b4dbea36ece9f7bfb7fec6ee20df0b57f6" translate="yes" xml:space="preserve">
          <source>You can &lt;em&gt;raise&lt;/em&gt; a frame to the top of that order or &lt;em&gt;lower&lt;/em&gt; a frame to its bottom by using the functions &lt;code&gt;raise-frame&lt;/code&gt; and &lt;code&gt;lower-frame&lt;/code&gt;. You can &lt;em&gt;restack&lt;/em&gt; a frame directly above or below another frame using the function &lt;code&gt;frame-restack&lt;/code&gt;.</source>
          <target state="translated">Вы можете &lt;em&gt;поднять&lt;/em&gt; фрейм до вершины этого порядка или &lt;em&gt;опустить&lt;/em&gt; фрейм до самого низа с помощью функций &lt;code&gt;raise-frame&lt;/code&gt; и &lt;code&gt;lower-frame&lt;/code&gt; . Вы можете &lt;em&gt;переупаковывать&lt;/em&gt; фрейм непосредственно над или под другим фреймом, используя функцию &lt;code&gt;frame-restack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c4f5384f714810b4a431619bd383e5278926561" translate="yes" xml:space="preserve">
          <source>You can access or change the position of a frame using the frame parameters &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt; (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;). Here are two additional functions for working with the positions of an existing, visible frame. For both functions, the argument &lt;var&gt;frame&lt;/var&gt; must denote a live frame and defaults to the selected frame.</source>
          <target state="translated">Вы можете получить доступ или изменить положение кадра с помощью параметров &lt;code&gt;left&lt;/code&gt; и &lt;code&gt;top&lt;/code&gt; (см. &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Параметры положения&lt;/a&gt; ). Вот две дополнительные функции для работы с позициями существующей видимой рамки. Для обеих функций &lt;var&gt;frame&lt;/var&gt; аргумента должен обозначать активный кадр и по умолчанию использовать выбранный кадр.</target>
        </trans-unit>
        <trans-unit id="2bacaf650357135a358ed5a74c9e5319c617d436" translate="yes" xml:space="preserve">
          <source>You can also &lt;em&gt;splice&lt;/em&gt; an evaluated value into the resulting list, using the special marker &amp;lsquo;</source>
          <target state="translated">Вы также можете &lt;em&gt;вставить&lt;/em&gt; вычисленное значение в результирующий список, используя специальный маркер '</target>
        </trans-unit>
        <trans-unit id="f8782cde9ee59f529bb9d1c373d6dc44b72bbe90" translate="yes" xml:space="preserve">
          <source>You can also arrange to override some of the actions of the terminal-specific library by using &lt;code&gt;tty-setup-hook&lt;/code&gt;. This is a normal hook that Emacs runs after initializing a new text terminal. You could use this hook to define initializations for terminals that do not have their own libraries. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">Вы также можете изменить некоторые действия библиотеки, специфичной для &lt;code&gt;tty-setup-hook&lt;/code&gt; с помощью tty-setup-hook . Это обычная ловушка, которую Emacs запускает после инициализации нового текстового терминала. Вы можете использовать эту ловушку для определения инициализации терминалов, у которых нет собственных библиотек. См. &lt;a href=&quot;hooks#Hooks&quot;&gt;Крючки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a8f0ac98fd6b6d6fc1c3726734f7c2cd1bcbb63f" translate="yes" xml:space="preserve">
          <source>You can also create a new hash table using the printed representation for hash tables. The Lisp reader can read this printed representation, provided each element in the specified hash table has a valid read syntax (see &lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;Printed Representation&lt;/a&gt;). For instance, the following specifies a new hash table containing the keys &lt;code&gt;key1&lt;/code&gt; and &lt;code&gt;key2&lt;/code&gt; (both symbols) associated with &lt;code&gt;val1&lt;/code&gt; (a symbol) and &lt;code&gt;300&lt;/code&gt; (a number) respectively.</source>
          <target state="translated">Вы также можете создать новую хеш-таблицу, используя печатное представление хеш-таблиц. Читатель Лиспа может читать это печатное представление, если каждый элемент в указанной хэш-таблице имеет допустимый синтаксис чтения (см. &lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;Печатное представление&lt;/a&gt; ). Например, следующее определяет новую хеш-таблицу, содержащую ключи &lt;code&gt;key1&lt;/code&gt; и &lt;code&gt;key2&lt;/code&gt; (оба символа), связанные с &lt;code&gt;val1&lt;/code&gt; (символ) и &lt;code&gt;300&lt;/code&gt; (число) соответственно.</target>
        </trans-unit>
        <trans-unit id="1f5cd6796ce308889fc7c51368b54257a583731e" translate="yes" xml:space="preserve">
          <source>You can also create network connections by operating at a lower level than that of &lt;code&gt;open-network-stream&lt;/code&gt;, using &lt;code&gt;make-network-process&lt;/code&gt;.</source>
          <target state="translated">Вы также можете создавать сетевые соединения, работая на более низком уровне, чем у &lt;code&gt;open-network-stream&lt;/code&gt; , используя &lt;code&gt;make-network-process&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="868f9a29ec40f4dbab30a0cfc4d78838b525c929" translate="yes" xml:space="preserve">
          <source>You can also define an edebug specification for a macro separately from the macro definition with &lt;code&gt;def-edebug-spec&lt;/code&gt;. Adding &lt;code&gt;debug&lt;/code&gt; declarations is preferred, and more convenient, for macro definitions in Lisp, but &lt;code&gt;def-edebug-spec&lt;/code&gt; makes it possible to define Edebug specifications for special forms implemented in C.</source>
          <target state="translated">Вы также можете определить спецификацию edebug для макроса отдельно от определения макроса с помощью &lt;code&gt;def-edebug-spec&lt;/code&gt; . Добавление объявлений &lt;code&gt;debug&lt;/code&gt; является предпочтительным и более удобным для определений макросов в Lisp, но &lt;code&gt;def-edebug-spec&lt;/code&gt; позволяет определять спецификации Edebug для специальных форм, реализованных в C.</target>
        </trans-unit>
        <trans-unit id="dd22228cb1960d0708a09aa3e9b6172e445a7acf" translate="yes" xml:space="preserve">
          <source>You can also give these names in another style, adding a colon after the double-dash and replacing each single dash with capitalization of the following word. Thus, &lt;code&gt;&quot;--:singleLine&quot;&lt;/code&gt;, is equivalent to &lt;code&gt;&quot;--single-line&quot;&lt;/code&gt;.</source>
          <target state="translated">Вы также можете дать этим именам другой стиль, добавив двоеточие после двойного тире и заменив каждое отдельное тире заглавными буквами следующего слова. Таким образом, &lt;code&gt;&quot;--:singleLine&quot;&lt;/code&gt; эквивалентно &lt;code&gt;&quot;--single-line&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf4c2b4229417625b85b55d1833e6731a73e611e" translate="yes" xml:space="preserve">
          <source>You can also include character ranges in a character alternative, by writing the starting and ending characters with a &amp;lsquo;</source>
          <target state="translated">Вы также можете включить диапазоны символов в альтернативу символов, написав начальный и конечный символы с помощью '</target>
        </trans-unit>
        <trans-unit id="a34fcc698dd0977adbbd456e7db72540166db69b" translate="yes" xml:space="preserve">
          <source>You can also print circular structures and structures that share elements more informatively by binding &lt;code&gt;print-circle&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">Вы также можете печатать круговые структуры и структуры, которые более информативно разделяют элементы, привязав &lt;code&gt;print-circle&lt;/code&gt; к значению, отличному от &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc98edffac674b6d0f86a7a98064ce2d71ed631a" translate="yes" xml:space="preserve">
          <source>You can also say that a function is a primitive by specifying a file name ending in &amp;lsquo;</source>
          <target state="translated">Вы также можете сказать, что функция является примитивной, указав имя файла, заканчивающееся на '</target>
        </trans-unit>
        <trans-unit id="a25730302dd2f2ffc5d19e6cf673d04d2ee0d064" translate="yes" xml:space="preserve">
          <source>You can also set the margin widths immediately.</source>
          <target state="translated">Вы также можете сразу же установить ширину поля.</target>
        </trans-unit>
        <trans-unit id="7ebb34ba8bb7e00f0cb0ae1eb4abd588d3d4e243" translate="yes" xml:space="preserve">
          <source>You can also specify &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;parent&lt;/var&gt;. This gives the new mode no parent. Then &lt;code&gt;define-derived-mode&lt;/code&gt; behaves as described above, but, of course, omits all actions connected with &lt;var&gt;parent&lt;/var&gt;.</source>
          <target state="translated">Вы также можете указать &lt;code&gt;nil&lt;/code&gt; для &lt;var&gt;parent&lt;/var&gt; . Это не дает новому режиму родителя. Затем &lt;code&gt;define-derived-mode&lt;/code&gt; ведет себя так, как описано выше, но, конечно, пропускает все действия, связанные с &lt;var&gt;parent&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="1b52ac13e6b9b4664324da8162b7dd0ecb723d8a" translate="yes" xml:space="preserve">
          <source>You can also specify other valid faces as the value of &lt;var&gt;face&lt;/var&gt;. If specified, that face provides the &lt;code&gt;face&lt;/code&gt; property for characters whose face is not specified by &lt;var&gt;format&lt;/var&gt;.</source>
          <target state="translated">Вы также можете указать другие допустимые грани в качестве значения &lt;var&gt;face&lt;/var&gt; . Если указано, это лицо предоставляет свойство &lt;code&gt;face&lt;/code&gt; для символов, лицо которых не задано &lt;var&gt;format&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="82949a550ea547e58a63f94e3a916a0b67cd9770" translate="yes" xml:space="preserve">
          <source>You can also specify the field width and type of padding for any of these &amp;lsquo;</source>
          <target state="translated">Вы также можете указать ширину поля и тип заполнения для любого из них.</target>
        </trans-unit>
        <trans-unit id="518bc5ccf190a3a7486fc251988bfa69fcc6044f" translate="yes" xml:space="preserve">
          <source>You can also specify the field width by following the &amp;lsquo;</source>
          <target state="translated">Вы также можете указать ширину поля, указав символ '</target>
        </trans-unit>
        <trans-unit id="bdc0d6d5e9fefdf0bc4a1580707e889916fbf4f8" translate="yes" xml:space="preserve">
          <source>You can also supply a second string, called the help string, as follows:</source>
          <target state="translated">Также можно ввести вторую строку,называемую строкой справки,следующим образом:</target>
        </trans-unit>
        <trans-unit id="da858753ded8e48ae4cf419db7c7ee2cf316d97f" translate="yes" xml:space="preserve">
          <source>You can also suppress compiler warnings within a certain expression using the &lt;code&gt;with-suppressed-warnings&lt;/code&gt; macro:</source>
          <target state="translated">Вы также можете подавить предупреждения компилятора в определенном выражении, используя макрос &lt;code&gt;with-suppressed-warnings&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="66c5aa3a5e0516f6cc8529bf81c65e40d2cb6288" translate="yes" xml:space="preserve">
          <source>You can also tell &lt;code&gt;display-buffer&lt;/code&gt; to mark a window it creates as dedicated to its buffer by providing a suitable &lt;code&gt;dedicated&lt;/code&gt; action alist entry (see &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;Buffer Display Action Alists&lt;/a&gt;).</source>
          <target state="translated">Вы также можете указать &lt;code&gt;display-buffer&lt;/code&gt; пометить создаваемое окно как выделенное для своего буфера, предоставив подходящую &lt;code&gt;dedicated&lt;/code&gt; запись &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;списка действий&lt;/a&gt; (см. Списки действий отображения буфера ).</target>
        </trans-unit>
        <trans-unit id="f2ebb37ec21552e099e7e22d48d5fd968fe5a037" translate="yes" xml:space="preserve">
          <source>You can also use a function as &lt;var&gt;collection&lt;/var&gt;. Then the function is solely responsible for performing completion; &lt;code&gt;try-completion&lt;/code&gt; returns whatever this function returns. The function is called with three arguments: &lt;var&gt;string&lt;/var&gt;, &lt;var&gt;predicate&lt;/var&gt; and &lt;code&gt;nil&lt;/code&gt; (the third argument is so that the same function can be used in &lt;code&gt;all-completions&lt;/code&gt; and do the appropriate thing in either case). See &lt;a href=&quot;programmed-completion#Programmed-Completion&quot;&gt;Programmed Completion&lt;/a&gt;.</source>
          <target state="translated">Вы также можете использовать функцию как &lt;var&gt;collection&lt;/var&gt; . Тогда функция несет полную ответственность за выполнение; &lt;code&gt;try-completion&lt;/code&gt; возвращает все, что возвращает эта функция. Функция вызывается с тремя аргументами: &lt;var&gt;string&lt;/var&gt; , &lt;var&gt;predicate&lt;/var&gt; и &lt;code&gt;nil&lt;/code&gt; (третий аргумент предназначен для того, чтобы одну и ту же функцию можно было использовать во &lt;code&gt;all-completions&lt;/code&gt; и выполнять соответствующие действия в любом случае). См. &lt;a href=&quot;programmed-completion#Programmed-Completion&quot;&gt;Запрограммированное завершение&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d9b4353133f96f073f8dea803a7cd01f60d0d52" translate="yes" xml:space="preserve">
          <source>You can also use a magic comment to execute a form at build time &lt;em&gt;without&lt;/em&gt; executing it when the file itself is loaded. To do this, write the form &lt;em&gt;on the same line&lt;/em&gt; as the magic comment. Since it is in a comment, it does nothing when you load the source file; but</source>
          <target state="translated">Вы также можете использовать волшебный комментарий для выполнения формы во время сборки, &lt;em&gt;не&lt;/em&gt; выполняя ее при загрузке самого файла. Для этого напишите форму &lt;em&gt;в той же строке,&lt;/em&gt; что и волшебный комментарий. Поскольку он находится в комментарии, он ничего не делает при загрузке исходного файла; но</target>
        </trans-unit>
        <trans-unit id="865c260262df33c6b60d52560daf7f9929f29f1b" translate="yes" xml:space="preserve">
          <source>You can also use hexadecimal escape sequences (&amp;lsquo;</source>
          <target state="translated">Вы также можете использовать шестнадцатеричные escape-последовательности ('</target>
        </trans-unit>
        <trans-unit id="1388e16fe2b1ce09a74738185edf6c3b225ca43f" translate="yes" xml:space="preserve">
          <source>You can also use prefixes &amp;lsquo;</source>
          <target state="translated">Вы также можете использовать префиксы '</target>
        </trans-unit>
        <trans-unit id="f6a8a51fa415b48c5179ea4eda78f486ca7b4f4d" translate="yes" xml:space="preserve">
          <source>You can also use the same syntax to make a circular structure, which appears as an element within itself. Here is an example:</source>
          <target state="translated">Вы также можете использовать тот же синтаксис для создания круговой структуры,которая появляется как элемент внутри себя.Вот пример:</target>
        </trans-unit>
        <trans-unit id="96e0c7bc0afca23e50b6b4c0afd543355632d7ec" translate="yes" xml:space="preserve">
          <source>You can also use, as the data element value, a Lisp object (list or vector) that is a container for the real value, or an index into some other structure. The example (see &lt;a href=&quot;abstract-display-example#Abstract-Display-Example&quot;&gt;Abstract Display Example&lt;/a&gt;) uses the latter approach.</source>
          <target state="translated">Вы также можете использовать в качестве значения элемента данных объект Lisp (список или вектор), который является контейнером для реального значения, или индекс в какой-либо другой структуре. В примере (см. &lt;a href=&quot;abstract-display-example#Abstract-Display-Example&quot;&gt;Пример абстрактного отображения&lt;/a&gt; ) используется последний подход.</target>
        </trans-unit>
        <trans-unit id="e0bf56efc4b83c6580305c7e6f4fd94870ba5869" translate="yes" xml:space="preserve">
          <source>You can alter the contents of a mutable string via operations described in this section. See &lt;a href=&quot;mutability#Mutability&quot;&gt;Mutability&lt;/a&gt;.</source>
          <target state="translated">Вы можете изменить содержимое изменяемой строки с помощью операций, описанных в этом разделе. См. &quot; &lt;a href=&quot;mutability#Mutability&quot;&gt;Изменчивость&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="533e21dcb2001e99f93c31391ea4fd8bff59a298" translate="yes" xml:space="preserve">
          <source>You can alter the way help text is displayed by setting the variable &lt;code&gt;show-help-function&lt;/code&gt; (see &lt;a href=&quot;#Help-display&quot;&gt;Help display&lt;/a&gt;).</source>
          <target state="translated">Вы можете изменить способ отображения текста справки, установив переменную &lt;code&gt;show-help-function&lt;/code&gt; (см. &lt;a href=&quot;#Help-display&quot;&gt;Отображение справки&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="fe103737b480baef010d2dda744085c5d3621c2a" translate="yes" xml:space="preserve">
          <source>You can ask about the entire matching text, or about a particular parenthetical subexpression of a regular expression. The &lt;var&gt;count&lt;/var&gt; argument in the functions below specifies which. If &lt;var&gt;count&lt;/var&gt; is zero, you are asking about the entire match. If &lt;var&gt;count&lt;/var&gt; is positive, it specifies which subexpression you want.</source>
          <target state="translated">Вы можете спросить обо всем совпадающем тексте или о конкретном подвыражении регулярного выражения в скобках. &lt;var&gt;count&lt;/var&gt; аргументов в функциях ниже указано , какие. Если &lt;var&gt;count&lt;/var&gt; равен нулю, вы спрашиваете обо всем совпадении. Если &lt;var&gt;count&lt;/var&gt; положительный, он указывает, какое подвыражение вы хотите.</target>
        </trans-unit>
        <trans-unit id="8b68d2a3ffc269102762a19c29fc092ce5d379c1" translate="yes" xml:space="preserve">
          <source>You can ask for code to be executed each time Emacs loads a library, by using the variable &lt;code&gt;after-load-functions&lt;/code&gt;:</source>
          <target state="translated">Вы можете запрашивать выполнение кода каждый раз, когда Emacs загружает библиотеку, используя переменную &lt;code&gt;after-load-functions&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cd9bd144dc8c6dca30e14365e4cbeb9b802fa846" translate="yes" xml:space="preserve">
          <source>You can autoload macros and keymaps as well as ordinary functions. Specify &lt;var&gt;type&lt;/var&gt; as &lt;code&gt;macro&lt;/code&gt; if &lt;var&gt;function&lt;/var&gt; is really a macro. Specify &lt;var&gt;type&lt;/var&gt; as &lt;code&gt;keymap&lt;/code&gt; if &lt;var&gt;function&lt;/var&gt; is really a keymap. Various parts of Emacs need to know this information without loading the real definition.</source>
          <target state="translated">Вы можете автоматически загружать макросы и раскладки клавиатуры, а также обычные функции. Укажите &lt;var&gt;type&lt;/var&gt; как &lt;code&gt;macro&lt;/code&gt; если &lt;var&gt;function&lt;/var&gt; действительно является макросом. Укажите &lt;var&gt;type&lt;/var&gt; как &lt;code&gt;keymap&lt;/code&gt; если &lt;var&gt;function&lt;/var&gt; действительно раскладка клавиатуры. Эту информацию необходимо знать различным частям Emacs без загрузки реального определения.</target>
        </trans-unit>
        <trans-unit id="36d97f14664aac18b68c47d3a4967a00be272e55" translate="yes" xml:space="preserve">
          <source>You can bring back an entire frame layout by restoring a previously saved window configuration. If you want to record the layout of all frames instead of just one, use a frame configuration instead of a window configuration. See &lt;a href=&quot;frame-configurations#Frame-Configurations&quot;&gt;Frame Configurations&lt;/a&gt;.</source>
          <target state="translated">Вы можете вернуть всю компоновку фрейма, восстановив ранее сохраненную конфигурацию окна. Если вы хотите записать макет всех фреймов, а не только одного, используйте конфигурацию фрейма вместо конфигурации окна. См. &lt;a href=&quot;frame-configurations#Frame-Configurations&quot;&gt;Конфигурации рамы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a6a9518e243380d5eca24c5657d832471aa3582e" translate="yes" xml:space="preserve">
          <source>You can byte-compile an individual function or macro definition with the &lt;code&gt;byte-compile&lt;/code&gt; function. You can compile a whole file with &lt;code&gt;byte-compile-file&lt;/code&gt;, or several files with &lt;code&gt;byte-recompile-directory&lt;/code&gt; or &lt;code&gt;batch-byte-compile&lt;/code&gt;.</source>
          <target state="translated">Вы можете выполнить байтовую компиляцию отдельной функции или определения макроса с помощью функции &lt;code&gt;byte-compile&lt;/code&gt; . Вы можете скомпилировать целый файл с помощью &lt;code&gt;byte-compile-file&lt;/code&gt; или несколько файлов с помощью &lt;code&gt;byte-recompile-directory&lt;/code&gt; или &lt;code&gt;batch-byte-compile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b9fbecbd8814f8acb1931e69bc32ac2f0ddcaea" translate="yes" xml:space="preserve">
          <source>You can cause &lt;code&gt;constrain-to-field&lt;/code&gt; to ignore all field boundaries (and so never constrain anything) by binding the variable &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">Вы можете заставить &lt;code&gt;constrain-to-field&lt;/code&gt; игнорировать все границы поля (и, таким образом, никогда ничего не ограничивать), привязав переменную &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; к &lt;code&gt;nil&lt;/code&gt; значению.</target>
        </trans-unit>
        <trans-unit id="4fe9f0a12b1177d2e8cf5b8482f8fbf46cd674f9" translate="yes" xml:space="preserve">
          <source>You can cause the debugger to be called at a certain point in your program by writing the expression &lt;code&gt;(debug)&lt;/code&gt; at that point. To do this, visit the source file, insert the text &amp;lsquo;</source>
          <target state="translated">Вы можете вызвать отладчик в определенной точке вашей программы, написав выражение &lt;code&gt;(debug)&lt;/code&gt; в этой точке. Для этого зайдите в исходный файл, вставьте текст '</target>
        </trans-unit>
        <trans-unit id="5afa89ad709c283a5355db95631f288374cadaf0" translate="yes" xml:space="preserve">
          <source>You can change the backup-file naming convention by redefining this function. The following example redefines &lt;code&gt;make-backup-file-name&lt;/code&gt; to prepend a &amp;lsquo;</source>
          <target state="translated">Вы можете изменить соглашение об именах файлов резервных копий, переопределив эту функцию. В следующем примере &lt;code&gt;make-backup-file-name&lt;/code&gt; переопределяет, добавляя '</target>
        </trans-unit>
        <trans-unit id="d89e3c84504426821c01be861ae626604a23636a" translate="yes" xml:space="preserve">
          <source>You can check for invisibility using the following function:</source>
          <target state="translated">Проверить на невидимость можно с помощью следующей функции:</target>
        </trans-unit>
        <trans-unit id="58057761dac2ce099ac5425cf8f2306f7683714e" translate="yes" xml:space="preserve">
          <source>You can combine dotted pair notation with list notation to represent conveniently a chain of cons cells with a non-&lt;code&gt;nil&lt;/code&gt; final &lt;small&gt;CDR&lt;/small&gt;. You write a dot after the last element of the list, followed by the &lt;small&gt;CDR&lt;/small&gt; of the final cons cell. For example, &lt;code&gt;(rose violet
. buttercup)&lt;/code&gt; is equivalent to &lt;code&gt;(rose . (violet . buttercup))&lt;/code&gt;. The object looks like this:</source>
          <target state="translated">Вы можете комбинировать точечную парную нотацию с нотацией списка для удобного представления цепочки cons-ячеек с &lt;code&gt;nil&lt;/code&gt; конечным &lt;small&gt;CDR&lt;/small&gt; . Вы пишете точку после последнего элемента списка, а затем &lt;small&gt;CDR&lt;/small&gt; последней cons-ячейки. Например, &lt;code&gt;(rose violet . buttercup)&lt;/code&gt; эквивалентно &lt;code&gt;(rose . (violet . buttercup))&lt;/code&gt; . Объект выглядит так:</target>
        </trans-unit>
        <trans-unit id="5011d0148df0e481c610f29e770b691888671b30" translate="yes" xml:space="preserve">
          <source>You can control the appearance of scroll bars for a particular buffer by setting the following variables which automatically become buffer-local when set.</source>
          <target state="translated">Вы можете контролировать появление полос прокрутки для конкретного буфера,установив следующие переменные,которые автоматически становятся локальными для буфера при установке.</target>
        </trans-unit>
        <trans-unit id="222f7ab802149b9f6a042d7ba0837fd35fee9ed7" translate="yes" xml:space="preserve">
          <source>You can control the stickiness of various text properties with two specific text properties, &lt;code&gt;front-sticky&lt;/code&gt; and &lt;code&gt;rear-nonsticky&lt;/code&gt;, and with the variable &lt;code&gt;text-property-default-nonsticky&lt;/code&gt;. You can use the variable to specify a different default for a given property. You can use those two text properties to make any specific properties sticky or nonsticky in any particular part of the text.</source>
          <target state="translated">Вы можете управлять закреплением различных свойств текста с помощью двух конкретных свойств текста: &lt;code&gt;rear-nonsticky&lt;/code&gt; &lt;code&gt;front-sticky&lt;/code&gt; и неприлипание сзади , а также с помощью переменной &lt;code&gt;text-property-default-nonsticky&lt;/code&gt; . Вы можете использовать переменную, чтобы указать другое значение по умолчанию для данного свойства. Вы можете использовать эти два свойства текста, чтобы сделать какие-либо определенные свойства липкими или не липкими в любой конкретной части текста.</target>
        </trans-unit>
        <trans-unit id="cd5c6328f118d9c93be49e374cdf83f3921cf4cc" translate="yes" xml:space="preserve">
          <source>You can customize case conversion by installing a special &lt;em&gt;case table&lt;/em&gt;. A case table specifies the mapping between upper case and lower case letters. It affects both the case conversion functions for Lisp objects (see the previous section) and those that apply to text in the buffer (see &lt;a href=&quot;case-changes#Case-Changes&quot;&gt;Case Changes&lt;/a&gt;). Each buffer has a case table; there is also a standard case table which is used to initialize the case table of new buffers.</source>
          <target state="translated">Вы можете настроить преобразование регистра, установив специальную &lt;em&gt;таблицу регистра&lt;/em&gt; . Таблица регистра определяет соответствие между буквами верхнего и нижнего регистра. Он влияет как на функции преобразования регистра для объектов Лиспа (см. Предыдущий раздел), так и на те, которые применяются к тексту в буфере (см. &lt;a href=&quot;case-changes#Case-Changes&quot;&gt;Изменения регистра&lt;/a&gt; ). У каждого буфера есть таблица случаев; есть также стандартная таблица вариантов, которая используется для инициализации таблицы вариантов новых буферов.</target>
        </trans-unit>
        <trans-unit id="4f4ec139ebea7e400349ab66e37da158078fc333" translate="yes" xml:space="preserve">
          <source>You can customize how &lt;code&gt;revert-buffer&lt;/code&gt; does its work by setting the variables described in the rest of this section.</source>
          <target state="translated">Вы можете настроить, как &lt;code&gt;revert-buffer&lt;/code&gt; выполняет свою работу, установив переменные, описанные в оставшейся части этого раздела.</target>
        </trans-unit>
        <trans-unit id="3a79361ecf3d1c852d33c5c8c829d11953b80eec" translate="yes" xml:space="preserve">
          <source>You can customize trace recording for function entry and exit by redefining the functions &lt;code&gt;edebug-print-trace-before&lt;/code&gt; and &lt;code&gt;edebug-print-trace-after&lt;/code&gt;.</source>
          <target state="translated">Вы можете настроить запись трассировки для входа и выхода функции, переопределив функции &lt;code&gt;edebug-print-trace-before&lt;/code&gt; и &lt;code&gt;edebug-print-trace-after&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="835f12d89fde2b2800e43439d61f2193b14c6678" translate="yes" xml:space="preserve">
          <source>You can define a special meaning for clicking on a tool bar item with the shift, control, meta, etc., modifiers. You do this by setting up additional items that relate to the original item through the fake function keys. Specifically, the additional items should use the modified versions of the same fake function key used to name the original item.</source>
          <target state="translated">Вы можете определить особое значение для щелчка по элементу панели инструментов со сдвигом,элементом управления,мета и т.д.,модификаторами.Вы делаете это,настраивая дополнительные элементы,которые относятся к оригинальному элементу с помощью поддельных функциональных клавиш.В частности,дополнительные элементы должны использовать модифицированные версии той же самой поддельной функциональной клавиши,которая использовалась для наименования оригинального элемента.</target>
        </trans-unit>
        <trans-unit id="36ae5ff4a5018c19a49a48098bf064b01ee3337e" translate="yes" xml:space="preserve">
          <source>You can define multiple overlay arrows via the variable &lt;code&gt;overlay-arrow-variable-list&lt;/code&gt;.</source>
          <target state="translated">Вы можете определить несколько оверлейных стрелок с помощью переменной &lt;code&gt;overlay-arrow-variable-list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f5ab8831230e6a615be9f72d05d9787207369e3" translate="yes" xml:space="preserve">
          <source>You can define new methods of key lookup by means of &lt;code&gt;define-hash-table-test&lt;/code&gt;. In order to use this feature, you need to understand how hash tables work, and what a &lt;em&gt;hash code&lt;/em&gt; means.</source>
          <target state="translated">Вы можете определить новые методы поиска ключей с помощью &lt;code&gt;define-hash-table-test&lt;/code&gt; . Чтобы использовать эту функцию, вам необходимо понимать, как работают хеш-таблицы и что означает &lt;em&gt;хеш-код&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="08e4ffc82f61ee89e641b587286bd711a88539fa" translate="yes" xml:space="preserve">
          <source>You can delete elements from the middle of a list by altering the &lt;small&gt;CDR&lt;/small&gt;s of the cons cells in the list. For example, here we delete the second element, &lt;code&gt;b&lt;/code&gt;, from the list &lt;code&gt;(a b c)&lt;/code&gt;, by changing the &lt;small&gt;CDR&lt;/small&gt; of the first cons cell:</source>
          <target state="translated">Вы можете удалить элементы из середины списка, изменив &lt;small&gt;CDR&lt;/small&gt; консольных ячеек в списке. Например, здесь мы удаляем второй элемент, &lt;code&gt;b&lt;/code&gt; , из списка &lt;code&gt;(a b c)&lt;/code&gt; , изменяя &lt;small&gt;CDR&lt;/small&gt; первой cons-ячейки:</target>
        </trans-unit>
        <trans-unit id="d1522384be55c89e1a6c3aaf7e595ab6a98a0673" translate="yes" xml:space="preserve">
          <source>You can discard the functions and variables loaded by a library to reclaim memory for other Lisp objects. To do this, use the function &lt;code&gt;unload-feature&lt;/code&gt;:</source>
          <target state="translated">Вы можете отказаться от функций и переменных, загружаемых библиотекой, чтобы освободить память для других объектов Lisp. Для этого используйте функцию &lt;code&gt;unload-feature&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8a12e1ca0976cb2975a94deb38b95296b848642a" translate="yes" xml:space="preserve">
          <source>You can distinguish valid windows from deleted windows with &lt;code&gt;window-valid-p&lt;/code&gt;.</source>
          <target state="translated">Вы можете отличить действительные окна от удаленных с помощью &lt;code&gt;window-valid-p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba01a8c69fee355477417b99f1a25e57d0730fef" translate="yes" xml:space="preserve">
          <source>You can do a similar job by creating an overlay with a &lt;code&gt;before-string&lt;/code&gt; property. See &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;.</source>
          <target state="translated">Вы можете выполнить аналогичную работу, создав наложение со свойством &lt;code&gt;before-string&lt;/code&gt; . См. &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Свойства наложения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7b17179206364b102a61f55d1c4dbd6ad7037a6d" translate="yes" xml:space="preserve">
          <source>You can do coverage testing for a file of Lisp code by loading the &lt;code&gt;testcover&lt;/code&gt; library and using the command</source>
          <target state="translated">Вы можете выполнить тестирование покрытия для файла с кодом Lisp, &lt;code&gt;testcover&lt;/code&gt; библиотеку testcover и используя команду</target>
        </trans-unit>
        <trans-unit id="384d23c91adb5c9310d784fab4c4e1b75122f331" translate="yes" xml:space="preserve">
          <source>You can enlarge (or even reduce) the region to refontify by setting the following variable:</source>
          <target state="translated">Вы можете увеличить (или даже уменьшить)область для реконфигурации,установив следующую переменную:</target>
        </trans-unit>
        <trans-unit id="4db15b6da0ef3a8447c90d0df3f72ceee7e342b3" translate="yes" xml:space="preserve">
          <source>You can evaluate expressions in the evaluation list window with</source>
          <target state="translated">Вы можете оценить выражения в окне оценочного списка с помощью кнопки</target>
        </trans-unit>
        <trans-unit id="eeb83b75ee325ffb4507a657581455d2eb56e68e" translate="yes" xml:space="preserve">
          <source>You can express the characters control-g, backspace, tab, newline, vertical tab, formfeed, space, return, del, and escape as &amp;lsquo;</source>
          <target state="translated">Вы можете выразить символы control-g, backspace, tab, newline, vertical tab, formfeed, space, return, del и escape как '</target>
        </trans-unit>
        <trans-unit id="635adf41d89b01728af263c091ab95eba6f97682" translate="yes" xml:space="preserve">
          <source>You can force use of the mouse or of the echo area by binding &lt;code&gt;last-nonmenu-event&lt;/code&gt; to a suitable value around the call.</source>
          <target state="translated">Вы можете принудительно использовать мышь или эхо-область, &lt;code&gt;last-nonmenu-event&lt;/code&gt; к подходящему значению вокруг вызова.</target>
        </trans-unit>
        <trans-unit id="28ca9fc4a6ad1466778477597ee3aa3dfc251bea" translate="yes" xml:space="preserve">
          <source>You can get a similar result by putting &lt;var&gt;body&lt;/var&gt; in a separate file and referring to that file with &lt;code&gt;require&lt;/code&gt;. That method is preferable when &lt;var&gt;body&lt;/var&gt; is large. Effectively &lt;code&gt;require&lt;/code&gt; is automatically &lt;code&gt;eval-and-compile&lt;/code&gt;, the package is loaded both when compiling and executing.</source>
          <target state="translated">Вы можете получить аналогичный результат, поместив &lt;var&gt;body&lt;/var&gt; в отдельный файл и обратившись к этому файлу с помощью &lt;code&gt;require&lt;/code&gt; . Этот метод предпочтительнее при большом &lt;var&gt;body&lt;/var&gt; . Фактически &lt;code&gt;require&lt;/code&gt; автоматически выполняет &lt;code&gt;eval-and-compile&lt;/code&gt; , пакет загружается как при компиляции, так и при выполнении.</target>
        </trans-unit>
        <trans-unit id="00fd5d6ff08aee1606919ade5bbb5c97badb4c16" translate="yes" xml:space="preserve">
          <source>You can get the sizes of the dividers of a specific window with the following two functions.</source>
          <target state="translated">Размеры перегородок конкретного окна можно получить с помощью следующих двух функций.</target>
        </trans-unit>
        <trans-unit id="36c965dcc6ced9f21e9be780079b2b70a64fde8e" translate="yes" xml:space="preserve">
          <source>You can implement special handling for certain file names. This is called making those names &lt;em&gt;magic&lt;/em&gt;. The principal use for this feature is in implementing access to remote files (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Remote-Files.html#Remote-Files&quot;&gt;Remote Files&lt;/a&gt; in</source>
          <target state="translated">Вы можете реализовать специальную обработку для определенных имен файлов. Это называется &lt;em&gt;магией&lt;/em&gt; этих имен . Основное использование этой функции - реализация доступа к удаленным файлам (см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Remote-Files.html#Remote-Files&quot;&gt;Удаленные файлы&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="3fd217192998844dcdd980ef8d58c7286b48ee06" translate="yes" xml:space="preserve">
          <source>You can include a non-</source>
          <target state="translated">Вы можете включить не</target>
        </trans-unit>
        <trans-unit id="17a3bff7c131bde5de4f4ff001f3d564f610f04d" translate="yes" xml:space="preserve">
          <source>You can invoke commands from Edebug that activate Edebug again recursively. Whenever Edebug is active, you can quit to the top level with</source>
          <target state="translated">Вы можете вызывать команды из Edebug,которые активируют Edebug снова рекурсивно.Всякий раз,когда Edebug активен,вы можете выйти на верхний уровень с помощью команды</target>
        </trans-unit>
        <trans-unit id="2e91d3e48f16383727b33817d9f376d7b64347da" translate="yes" xml:space="preserve">
          <source>You can load a given file more than once in an Emacs session. For example, after you have rewritten and reinstalled a function definition by editing it in a buffer, you may wish to return to the original version; you can do this by reloading the file it came from.</source>
          <target state="translated">Вы можете загружать заданный файл несколько раз за сессию Emacs.Например,после того,как вы переписали и переустановили определение функции,отредактировав его в буфере,вы можете вернуться к исходной версии;вы можете сделать это,перезагрузив файл,из которого он вышел.</target>
        </trans-unit>
        <trans-unit id="afd57cd7f606eab41ccb766a5a9459b509d27ba8" translate="yes" xml:space="preserve">
          <source>You can look at the error and warning messages produced by the byte compiler when it compiles the program. See &lt;a href=&quot;compiler-errors#Compiler-Errors&quot;&gt;Compiler Errors&lt;/a&gt;.</source>
          <target state="translated">Вы можете просмотреть сообщения об ошибках и предупреждения, создаваемые байтовым компилятором при компиляции программы. См. &lt;a href=&quot;compiler-errors#Compiler-Errors&quot;&gt;Ошибки компилятора&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="52c430a0595cd4b70fd0a10d7e767b886853d19c" translate="yes" xml:space="preserve">
          <source>You can make a conditional or unconditional breakpoint &lt;em&gt;temporary&lt;/em&gt; by using a prefix argument with the command to set the breakpoint. When a temporary breakpoint stops the program, it is automatically unset.</source>
          <target state="translated">Вы можете сделать условную или безусловную точку останова &lt;em&gt;временной&lt;/em&gt; , используя аргумент префикса с командой для установки точки останова. Когда временная точка останова останавливает программу, она автоматически сбрасывается.</target>
        </trans-unit>
        <trans-unit id="a9f33e1ba480aafb4f65ab9fb004d566f1edf6f2" translate="yes" xml:space="preserve">
          <source>You can make any display specification conditional. To do that, package it in another list of the form &lt;code&gt;(when &lt;var&gt;condition&lt;/var&gt; . &lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt;. Then the specification &lt;var&gt;spec&lt;/var&gt; applies only when &lt;var&gt;condition&lt;/var&gt; evaluates to a non-&lt;code&gt;nil&lt;/code&gt; value. During the evaluation, &lt;code&gt;object&lt;/code&gt; is bound to the string or buffer having the conditional &lt;code&gt;display&lt;/code&gt; property. &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;buffer-position&lt;/code&gt; are bound to the position within &lt;code&gt;object&lt;/code&gt; and the buffer position where the &lt;code&gt;display&lt;/code&gt; property was found, respectively. Both positions can be different when &lt;code&gt;object&lt;/code&gt; is a string.</source>
          <target state="translated">Вы можете сделать любую спецификацию отображения условной. Для этого упакуйте его в другой список формы &lt;code&gt;(when &lt;var&gt;condition&lt;/var&gt; . &lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt; . Тогда спецификация &lt;var&gt;spec&lt;/var&gt; применима только тогда, когда &lt;var&gt;condition&lt;/var&gt; оценивается как &lt;code&gt;nil&lt;/code&gt; значение. Во время оценки &lt;code&gt;object&lt;/code&gt; привязывается к строке или буферу, имеющему свойство условного &lt;code&gt;display&lt;/code&gt; . &lt;code&gt;position&lt;/code&gt; и &lt;code&gt;buffer-position&lt;/code&gt; привязаны к положению внутри &lt;code&gt;object&lt;/code&gt; и положению в буфере, где было найдено свойство &lt;code&gt;display&lt;/code&gt; , соответственно. Обе позиции могут быть разными, когда &lt;code&gt;object&lt;/code&gt; это строка.</target>
        </trans-unit>
        <trans-unit id="1c57e3f41439d1794fea2432172f271fc50a611b" translate="yes" xml:space="preserve">
          <source>You can make characters &lt;em&gt;invisible&lt;/em&gt;, so that they do not appear on the screen, with the &lt;code&gt;invisible&lt;/code&gt; property. This can be either a text property (see &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;) or an overlay property (see &lt;a href=&quot;overlays#Overlays&quot;&gt;Overlays&lt;/a&gt;). Cursor motion also partly ignores these characters; if the command loop finds that point is inside a range of invisible text after a command, it relocates point to the other side of the text.</source>
          <target state="translated">Вы можете сделать персонажей &lt;em&gt;невидимыми&lt;/em&gt; , чтобы они не появлялись на экране, с помощью свойства &lt;code&gt;invisible&lt;/code&gt; . Это может быть свойство текста (см. &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Свойства текста&lt;/a&gt; ) или свойство наложения (см. &lt;a href=&quot;overlays#Overlays&quot;&gt;Наложения&lt;/a&gt; ). Движение курсора также частично игнорирует эти символы; если командный цикл обнаруживает, что эта точка находится внутри диапазона невидимого текста после команды, он перемещает точку на другую сторону текста.</target>
        </trans-unit>
        <trans-unit id="dc99f104edf557ddaded16d29eafec52b002f7b3" translate="yes" xml:space="preserve">
          <source>You can make collections more frequent by specifying a smaller value, down to 1/10th of &lt;code&gt;GC_DEFAULT_THRESHOLD&lt;/code&gt;. A value less than this minimum will remain in effect only until the subsequent garbage collection, at which time &lt;code&gt;garbage-collect&lt;/code&gt; will set the threshold back to the minimum.</source>
          <target state="translated">Вы можете сделать сборы более частыми, указав меньшее значение, вплоть до &lt;code&gt;GC_DEFAULT_THRESHOLD&lt;/code&gt; от GC_DEFAULT_THRESHOLD . Значение меньше этого минимума будет оставаться в силе только до последующей сборки мусора, после чего &lt;code&gt;garbage-collect&lt;/code&gt; установит порог обратно на минимум.</target>
        </trans-unit>
        <trans-unit id="1a8ed3019165cc2e91112182309e45f48026fac2" translate="yes" xml:space="preserve">
          <source>You can make two variables synonyms and declare one obsolete at the same time using the macro &lt;code&gt;define-obsolete-variable-alias&lt;/code&gt;.</source>
          <target state="translated">Вы можете сделать две переменные синонимами и объявить одну устаревшую одновременно, используя макрос &lt;code&gt;define-obsolete-variable-alias&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b00d90ea94b6de8d52731f600b63a1aa115b23b3" translate="yes" xml:space="preserve">
          <source>You can mark a named function as &lt;em&gt;obsolete&lt;/em&gt;, meaning that it may be removed at some point in the future. This causes Emacs to warn that the function is obsolete whenever it byte-compiles code containing that function, and whenever it displays the documentation for that function. In all other respects, an obsolete function behaves like any other function.</source>
          <target state="translated">Вы можете пометить именованную функцию как &lt;em&gt;устаревшую&lt;/em&gt; , что означает, что она может быть удалена в какой-то момент в будущем. Это заставляет Emacs предупреждать о том, что функция устарела, всякий раз, когда он компилирует побайтно код, содержащий эту функцию, и всякий раз, когда он отображает документацию для этой функции. Во всем остальном устаревшая функция ведет себя как любая другая функция.</target>
        </trans-unit>
        <trans-unit id="36d67c4aee293c4450b38f08b33ea35e2c467dc2" translate="yes" xml:space="preserve">
          <source>You can measure the time it takes to evaluate individual Emacs Lisp forms using the</source>
          <target state="translated">Вы можете измерить время,необходимое для оценки отдельных форм Emacs Lisp с помощью функции</target>
        </trans-unit>
        <trans-unit id="c41c81c969875c658b1fa944951ca4e686edc3fd" translate="yes" xml:space="preserve">
          <source>You can modify how each character is displayed by defining a &lt;em&gt;display table&lt;/em&gt;, which maps each character code into a sequence of glyphs. See &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;.</source>
          <target state="translated">Вы можете изменить способ отображения каждого символа, определив &lt;em&gt;таблицу отображения&lt;/em&gt; , которая отображает код каждого символа в последовательность глифов. См. &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Таблицы отображения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a65ceeb001ee56dcdfe1486933a8001c8fc1a938" translate="yes" xml:space="preserve">
          <source>You can modify the &lt;small&gt;CAR&lt;/small&gt; and &lt;small&gt;CDR&lt;/small&gt; contents of a cons cell with the primitives &lt;code&gt;setcar&lt;/code&gt; and &lt;code&gt;setcdr&lt;/code&gt;. These are destructive operations because they change existing list structure. Destructive operations should be applied only to mutable lists, that is, lists constructed via &lt;code&gt;cons&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt; or similar operations. Lists created by quoting are part of the program and should not be changed by destructive operations. See &lt;a href=&quot;mutability#Mutability&quot;&gt;Mutability&lt;/a&gt;.</source>
          <target state="translated">Вы можете изменить содержимое &lt;small&gt;CAR&lt;/small&gt; и &lt;small&gt;CDR&lt;/small&gt; cons-ячейки с помощью примитивов &lt;code&gt;setcar&lt;/code&gt; и &lt;code&gt;setcdr&lt;/code&gt; . Это разрушительные операции, поскольку они изменяют существующую структуру списка. Разрушающие операции следует применять только к изменяемым спискам, то есть спискам, созданным с помощью &lt;code&gt;cons&lt;/code&gt; , &lt;code&gt;list&lt;/code&gt; или подобных операций. Списки, созданные с помощью цитирования, являются частью программы и не должны изменяться деструктивными операциями. См. &quot; &lt;a href=&quot;mutability#Mutability&quot;&gt;Изменчивость&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a9eb526ad886f7a3fd539724752e7de1f8d9a3dc" translate="yes" xml:space="preserve">
          <source>You can override the frame specific settings for individual windows by using the following function:</source>
          <target state="translated">Вы можете переопределить специфические настройки рамки для отдельных окон,используя следующую функцию:</target>
        </trans-unit>
        <trans-unit id="e77615cbb116daea14cfa5e30d12da34759278c1" translate="yes" xml:space="preserve">
          <source>You can perform simple date arithmetic by using out-of-range values for &lt;var&gt;seconds&lt;/var&gt;, &lt;var&gt;minutes&lt;/var&gt;, &lt;var&gt;hour&lt;/var&gt;, &lt;var&gt;day&lt;/var&gt;, and &lt;var&gt;month&lt;/var&gt;; for example, day 0 means the day preceding the given month.</source>
          <target state="translated">Вы можете выполнять простую арифметику даты, используя значения, выходящие за пределы диапазона, для &lt;var&gt;seconds&lt;/var&gt; , &lt;var&gt;minutes&lt;/var&gt; , &lt;var&gt;hour&lt;/var&gt; , &lt;var&gt;day&lt;/var&gt; и &lt;var&gt;month&lt;/var&gt; ; например, день 0 означает день, предшествующий данному месяцу.</target>
        </trans-unit>
        <trans-unit id="5271b3563c640a38bd217e67b0391d559718885b" translate="yes" xml:space="preserve">
          <source>You can prevent quitting for a portion of a Lisp function by binding the variable &lt;code&gt;inhibit-quit&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value. Then, although</source>
          <target state="translated">Вы можете предотвратить завершение для части функции Lisp, привязав переменную &lt;code&gt;inhibit-quit&lt;/code&gt; к значению, отличному от &lt;code&gt;nil&lt;/code&gt; . Тогда, хотя</target>
        </trans-unit>
        <trans-unit id="65948ed3b80d6eed57a03017bf1c975d5acf8b22" translate="yes" xml:space="preserve">
          <source>You can profile the program to get hints about how to make it more efficient.</source>
          <target state="translated">Вы можете составить профиль программы,чтобы получить подсказки о том,как сделать ее более эффективной.</target>
        </trans-unit>
        <trans-unit id="5ba3b38e9fb2820490ea76905863a421d0731b11" translate="yes" xml:space="preserve">
          <source>You can read this as &amp;ldquo;&lt;code&gt;(car '(1 2))&lt;/code&gt; evaluates to 1&amp;rdquo;.</source>
          <target state="translated">Вы можете прочитать это как &amp;laquo; &lt;code&gt;(car '(1 2))&lt;/code&gt; оценивается как 1&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="808d228b8badb3ca346b56a55eb441843312b038" translate="yes" xml:space="preserve">
          <source>You can rewrite the example in the beginning of this subsection using this macro as follows:</source>
          <target state="translated">Переписать пример в начале данного подраздела с помощью данного макроса можно следующим образом:</target>
        </trans-unit>
        <trans-unit id="9f719c4d7fb16a5182683fce1ebcc90210b9cd79" translate="yes" xml:space="preserve">
          <source>You can save and restore the match data with &lt;code&gt;save-match-data&lt;/code&gt;:</source>
          <target state="translated">Вы можете сохранить и восстановить данные матча с помощью &lt;code&gt;save-match-data&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="57d070f70e8f3342dee88c6e238f245116c251c2" translate="yes" xml:space="preserve">
          <source>You can see how &lt;code&gt;append&lt;/code&gt; works by looking at a box diagram. The variable &lt;code&gt;trees&lt;/code&gt; is set to the list &lt;code&gt;(pine oak)&lt;/code&gt; and then the variable &lt;code&gt;more-trees&lt;/code&gt; is set to the list &lt;code&gt;(maple birch pine
oak)&lt;/code&gt;. However, the variable &lt;code&gt;trees&lt;/code&gt; continues to refer to the original list:</source>
          <target state="translated">Вы можете увидеть, как работает &lt;code&gt;append&lt;/code&gt; , посмотрев на прямоугольную диаграмму. Переменная &lt;code&gt;trees&lt;/code&gt; устанавливается в список &lt;code&gt;(pine oak)&lt;/code&gt; а затем переменная &lt;code&gt;more-trees&lt;/code&gt; устанавливается в список &lt;code&gt;(maple birch pine oak)&lt;/code&gt; . Однако &lt;code&gt;trees&lt;/code&gt; переменных по- прежнему ссылаются на исходный список:</target>
        </trans-unit>
        <trans-unit id="c0885c80f58e833be9be1796aa278ea1d9ff012c" translate="yes" xml:space="preserve">
          <source>You can see the expansion of a given macro call by calling &lt;code&gt;macroexpand&lt;/code&gt;.</source>
          <target state="translated">Вы можете увидеть расширение данного вызова макроса, вызвав &lt;code&gt;macroexpand&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="988d03ce5c456e84b5cd5c59ad2765a29318f832" translate="yes" xml:space="preserve">
          <source>You can send signals explicitly by calling the functions in this section. Emacs also sends signals automatically at certain times: killing a buffer sends a &lt;code&gt;SIGHUP&lt;/code&gt; signal to all its associated processes; killing Emacs sends a &lt;code&gt;SIGHUP&lt;/code&gt; signal to all remaining processes. (&lt;code&gt;SIGHUP&lt;/code&gt; is a signal that usually indicates that the user &amp;ldquo;hung up the phone&amp;rdquo;, i.e., disconnected.)</source>
          <target state="translated">Вы можете отправлять сигналы явно, вызывая функции в этом разделе. Emacs также автоматически отправляет сигналы в определенное время: уничтожение буфера отправляет сигнал &lt;code&gt;SIGHUP&lt;/code&gt; всем связанным с ним процессам; завершение работы Emacs посылает сигнал &lt;code&gt;SIGHUP&lt;/code&gt; всем оставшимся процессам. ( &lt;code&gt;SIGHUP&lt;/code&gt; - это сигнал, который обычно указывает, что пользователь &amp;laquo;повесил трубку&amp;raquo;, т. Е. Отключился.)</target>
        </trans-unit>
        <trans-unit id="191fe54817d4002a1c3a88196b69c4fce5b4c4ed" translate="yes" xml:space="preserve">
          <source>You can set up a &lt;em&gt;glyph table&lt;/em&gt; to change how glyph codes are actually displayed on text terminals. This feature is semi-obsolete; use &lt;code&gt;glyphless-char-display&lt;/code&gt; instead (see &lt;a href=&quot;glyphless-chars#Glyphless-Chars&quot;&gt;Glyphless Chars&lt;/a&gt;).</source>
          <target state="translated">Вы можете настроить &lt;em&gt;таблицу глифов,&lt;/em&gt; чтобы изменить способ отображения кодов глифов на текстовых терминалах. Эта функция наполовину устарела; вместо этого используйте &lt;code&gt;glyphless-char-display&lt;/code&gt; (см. &lt;a href=&quot;glyphless-chars#Glyphless-Chars&quot;&gt;Glyphless Chars&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1ae028f5156ca27eec975dbc6cef6df2418885a1" translate="yes" xml:space="preserve">
          <source>You can set up a &lt;em&gt;timer&lt;/em&gt; to call a function at a specified future time or after a certain length of idleness. A timer is a special object that stores the information about the next invocation times and the function to invoke.</source>
          <target state="translated">Вы можете настроить &lt;em&gt;таймер&lt;/em&gt; для вызова функции в указанное время в будущем или после определенного периода бездействия. Таймер - это специальный объект, в котором хранится информация о времени следующего вызова и вызываемой функции.</target>
        </trans-unit>
        <trans-unit id="95959190b0ff17b28d8647cdc8885e9a2b4149ae" translate="yes" xml:space="preserve">
          <source>You can specify a character other than</source>
          <target state="translated">Вы можете указать символ,отличный от</target>
        </trans-unit>
        <trans-unit id="6775c1ff691e764fce6b044e68213e6dbc96b50c" translate="yes" xml:space="preserve">
          <source>You can specify additional files to preload by writing a library named</source>
          <target state="translated">Вы можете указать дополнительные файлы для предварительной загрузки,написав библиотеку с именем</target>
        </trans-unit>
        <trans-unit id="f6f4be83abc793dc19089cc95fe097975214497e" translate="yes" xml:space="preserve">
          <source>You can specify characters by their Unicode names, if any. &lt;code&gt;?\N{&lt;var&gt;NAME&lt;/var&gt;}&lt;/code&gt; represents the Unicode character named &lt;var&gt;NAME&lt;/var&gt;. Thus, &amp;lsquo;</source>
          <target state="translated">Вы можете указать символы по их именам в Юникоде, если таковые имеются. &lt;code&gt;?\N{&lt;var&gt;NAME&lt;/var&gt;}&lt;/code&gt; представляет символ Unicode с именем &lt;var&gt;NAME&lt;/var&gt; . Таким образом, '</target>
        </trans-unit>
        <trans-unit id="db50cadb51b5309693dfbd618c6b0c206e8a3a20" translate="yes" xml:space="preserve">
          <source>You can specify characters by their Unicode values. &lt;code&gt;?\N{U+&lt;var&gt;X&lt;/var&gt;}&lt;/code&gt; represents a character with Unicode code point &lt;var&gt;X&lt;/var&gt;, where &lt;var&gt;X&lt;/var&gt; is a hexadecimal number. Also, &lt;code&gt;?\u&lt;var&gt;xxxx&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;?\U&lt;var&gt;xxxxxxxx&lt;/var&gt;&lt;/code&gt; represent code points &lt;var&gt;xxxx&lt;/var&gt; and &lt;var&gt;xxxxxxxx&lt;/var&gt;, respectively, where each &lt;var&gt;x&lt;/var&gt; is a single hexadecimal digit. For example, &lt;code&gt;?\N{U+E0}&lt;/code&gt;, &lt;code&gt;?\u00e0&lt;/code&gt; and &lt;code&gt;?\U000000E0&lt;/code&gt; are all equivalent to &lt;code&gt;?&amp;agrave;&lt;/code&gt; and to &amp;lsquo;</source>
          <target state="translated">Вы можете указать символы по их значениям Unicode. &lt;code&gt;?\N{U+&lt;var&gt;X&lt;/var&gt;}&lt;/code&gt; представляет собой символ с кодовой точкой Юникода &lt;var&gt;X&lt;/var&gt; , где &lt;var&gt;X&lt;/var&gt; - шестнадцатеричное число. Кроме того &lt;code&gt;?\u&lt;var&gt;xxxx&lt;/var&gt;&lt;/code&gt; и &lt;code&gt;?\U&lt;var&gt;xxxxxxxx&lt;/var&gt;&lt;/code&gt; представляют кодовые точки &lt;var&gt;xxxx&lt;/var&gt; и &lt;var&gt;xxxxxxxx&lt;/var&gt; , соответственно, где каждый &lt;var&gt;x&lt;/var&gt; представляет собой одну шестнадцатеричную цифру. Например, &lt;code&gt;?\N{U+E0}&lt;/code&gt; , &lt;code&gt;?\u00e0&lt;/code&gt; и &lt;code&gt;?\U000000E0&lt;/code&gt; все эквивалентны &lt;code&gt;?&amp;agrave;&lt;/code&gt; и '</target>
        </trans-unit>
        <trans-unit id="99b89bbb349076c0264b77f65dc63b38485ca758" translate="yes" xml:space="preserve">
          <source>You can specify characters by their character code in octal. An octal escape sequence consists of a backslash followed by up to three octal digits; thus, &amp;lsquo;</source>
          <target state="translated">Вы можете указать символы по их коду в восьмеричном формате. Восьмеричная escape-последовательность состоит из обратной косой черты, за которой следует до трех восьмеричных цифр; таким образом, '</target>
        </trans-unit>
        <trans-unit id="e29573a3c2b2873e834d65bde8ec8e470b73ac4b" translate="yes" xml:space="preserve">
          <source>You can specify characters by their hexadecimal character codes. A hexadecimal escape sequence consists of a backslash, &amp;lsquo;</source>
          <target state="translated">Вы можете указать символы с помощью их шестнадцатеричных кодов символов. Шестнадцатеричная escape-последовательность состоит из обратной косой черты, '</target>
        </trans-unit>
        <trans-unit id="6a5d2cd72a1a42ee02a1333681db2b9d229c84c6" translate="yes" xml:space="preserve">
          <source>You can specify keyword-argument pairs in a customization type after the type name symbol. Here are the keywords you can use, and their meanings:</source>
          <target state="translated">После символа имени типа можно указать пары ключей-пары памятников в настройках.Вот ключевые слова,которые вы можете использовать,и их значения:</target>
        </trans-unit>
        <trans-unit id="038e5a26e574b8c0ec5a206c501ba172deac575a" translate="yes" xml:space="preserve">
          <source>You can specify more complex ways of choosing a fill prefix automatically by setting this variable to a function. The function is called with point after the left margin (if any) of a line, and it must preserve point. It should return either that line&amp;rsquo;s fill prefix or &lt;code&gt;nil&lt;/code&gt;, meaning it has failed to determine a prefix.</source>
          <target state="translated">Вы можете указать более сложные способы автоматического выбора префикса заливки, установив эту переменную в функцию. Функция вызывается с точкой после левого края (если есть) линии, и она должна сохранять точку. Он должен возвращать либо префикс заполнения этой строки, либо &lt;code&gt;nil&lt;/code&gt; , что означает, что он не смог определить префикс.</target>
        </trans-unit>
        <trans-unit id="4a04e7330981d42e158fa474bd6ff308c3738ec8" translate="yes" xml:space="preserve">
          <source>You can specify more than a single attribute, one after the other. Currently, only the following attributes are recognized:</source>
          <target state="translated">Вы можете указать более одного атрибута,один за другим.В настоящее время распознаются только следующие атрибуты:</target>
        </trans-unit>
        <trans-unit id="603b19c2e2de6ad83d5fb5ef626f336560adff8e" translate="yes" xml:space="preserve">
          <source>You can specify named character classes, just like in character alternatives. For instance, &amp;lsquo;</source>
          <target state="translated">Вы можете указать именованные классы символов, как и в альтернативных вариантах символов. Например, '</target>
        </trans-unit>
        <trans-unit id="756e5dbf3f0bfc7edf160c271a59a572fcaf47d6" translate="yes" xml:space="preserve">
          <source>You can specify other Lisp expressions to execute just before dumping by putting them in a library named</source>
          <target state="translated">Вы можете указать другие выражения на языке Lisp для выполнения непосредственно перед дампингом,поместив их в библиотеку с именем</target>
        </trans-unit>
        <trans-unit id="13c402b3c9308f7f5ca752a2b4ada7983442ea94" translate="yes" xml:space="preserve">
          <source>You can specify safe values for a variable with a &lt;code&gt;safe-local-variable&lt;/code&gt; property. The property has to be a function of one argument; any value is safe if the function returns non-&lt;code&gt;nil&lt;/code&gt; given that value. Many commonly-encountered file variables have &lt;code&gt;safe-local-variable&lt;/code&gt; properties; these include &lt;code&gt;fill-column&lt;/code&gt;, &lt;code&gt;fill-prefix&lt;/code&gt;, and &lt;code&gt;indent-tabs-mode&lt;/code&gt;. For boolean-valued variables that are safe, use &lt;code&gt;booleanp&lt;/code&gt; as the property value.</source>
          <target state="translated">Вы можете указать безопасные значения для переменной с помощью свойства &lt;code&gt;safe-local-variable&lt;/code&gt; . Свойство должно быть функцией одного аргумента; любое значение безопасно, если функция возвращает &lt;code&gt;nil&lt;/code&gt; значение для этого значения. Многие часто встречающиеся файловые переменные имеют свойства &lt;code&gt;safe-local-variable&lt;/code&gt; ; к ним относятся &lt;code&gt;fill-column&lt;/code&gt; , &lt;code&gt;fill-prefix&lt;/code&gt; и &lt;code&gt;indent-tabs-mode&lt;/code&gt; . Для безопасных переменных с логическим значением используйте в качестве значения свойства &lt;code&gt;booleanp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b5de67febc2dec619a9ddea914b0305e9b79595" translate="yes" xml:space="preserve">
          <source>You can specify the coding system for a specific operation by binding the variables &lt;code&gt;coding-system-for-read&lt;/code&gt; and/or &lt;code&gt;coding-system-for-write&lt;/code&gt;.</source>
          <target state="translated">Вы можете указать систему кодирования для конкретной операции, связав переменные &lt;code&gt;coding-system-for-read&lt;/code&gt; и / или &lt;code&gt;coding-system-for-write&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="451961e5aef89ab407a1570a05cebab5741c6910" translate="yes" xml:space="preserve">
          <source>You can specify the coding system to use either explicitly (see &lt;a href=&quot;specifying-coding-systems#Specifying-Coding-Systems&quot;&gt;Specifying Coding Systems&lt;/a&gt;), or implicitly using a default mechanism (see &lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;Default Coding Systems&lt;/a&gt;). But these methods may not completely specify what to do. For example, they may choose a coding system such as &lt;code&gt;undecided&lt;/code&gt; which leaves the character code conversion to be determined from the data. In these cases, the I/O operation finishes the job of choosing a coding system. Very often you will want to find out afterwards which coding system was chosen.</source>
          <target state="translated">Вы можете указать систему кодирования для использования либо явно (см. &lt;a href=&quot;specifying-coding-systems#Specifying-Coding-Systems&quot;&gt;Определение систем кодирования&lt;/a&gt; ), либо неявно с использованием механизма по умолчанию (см. &lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;Системы кодирования по умолчанию&lt;/a&gt; ). Но эти методы могут не указывать полностью, что делать. Например, они могут выбрать систему кодирования , такие как &lt;code&gt;undecided&lt;/code&gt; , которая оставляет преобразование кода символа , которые будут определены из данных. В этих случаях операция ввода-вывода завершает работу по выбору системы кодирования. Очень часто впоследствии вам захочется узнать, какая система кодирования была выбрана.</target>
        </trans-unit>
        <trans-unit id="6453110f6c0c88bfddfc9e3591ffa32be27563ba" translate="yes" xml:space="preserve">
          <source>You can specify the line spacing for all lines in a buffer via the buffer-local &lt;code&gt;line-spacing&lt;/code&gt; variable. An integer specifies the number of pixels put below lines. A floating-point number specifies the spacing relative to the default frame line height. This overrides line spacings specified for the frame.</source>
          <target state="translated">Вы можете указать межстрочный интервал для всех строк в буфере через локальную в буфере переменную &lt;code&gt;line-spacing&lt;/code&gt; . Целое число определяет количество пикселей, помещаемых под строками. Число с плавающей запятой указывает интервал относительно высоты строки кадра по умолчанию. Это отменяет межстрочный интервал, указанный для кадра.</target>
        </trans-unit>
        <trans-unit id="a66db481db7c101248d28b76de2aac79a7c360be" translate="yes" xml:space="preserve">
          <source>You can specify the mouse pointer style for particular text or images using the &lt;code&gt;pointer&lt;/code&gt; text property, and for images with the &lt;code&gt;:pointer&lt;/code&gt; and &lt;code&gt;:map&lt;/code&gt; image properties. The values you can use in these properties are &lt;code&gt;text&lt;/code&gt; (or &lt;code&gt;nil&lt;/code&gt;), &lt;code&gt;arrow&lt;/code&gt;, &lt;code&gt;hand&lt;/code&gt;, &lt;code&gt;vdrag&lt;/code&gt;, &lt;code&gt;hdrag&lt;/code&gt;, &lt;code&gt;modeline&lt;/code&gt;, and &lt;code&gt;hourglass&lt;/code&gt;. &lt;code&gt;text&lt;/code&gt; stands for the usual mouse pointer style used over text.</source>
          <target state="translated">Вы можете указать стиль указателя мыши для определенного текста или изображений с помощью свойства текста &lt;code&gt;pointer&lt;/code&gt; , а для изображений с помощью свойств &lt;code&gt;:pointer&lt;/code&gt; и &lt;code&gt;:map&lt;/code&gt; image. Значения, которые вы можете использовать в этих свойствах, - это &lt;code&gt;text&lt;/code&gt; (или &lt;code&gt;nil&lt;/code&gt; ), &lt;code&gt;arrow&lt;/code&gt; , &lt;code&gt;hand&lt;/code&gt; , &lt;code&gt;vdrag&lt;/code&gt; , &lt;code&gt;hdrag&lt;/code&gt; , &lt;code&gt;modeline&lt;/code&gt; и &lt;code&gt;hourglass&lt;/code&gt; . &lt;code&gt;text&lt;/code&gt; обозначает обычный стиль указателя мыши, используемый над текстом.</target>
        </trans-unit>
        <trans-unit id="9eecac5724696ecbf6e43af8e2bc46c233ae794e" translate="yes" xml:space="preserve">
          <source>You can specify the parameters for the initial startup frame by setting &lt;code&gt;initial-frame-alist&lt;/code&gt; in your init file (see &lt;a href=&quot;init-file#Init-File&quot;&gt;Init File&lt;/a&gt;).</source>
          <target state="translated">Вы можете указать параметры для начального стартового кадра, установив &lt;code&gt;initial-frame-alist&lt;/code&gt; в вашем файле инициализации (см. &lt;a href=&quot;init-file#Init-File&quot;&gt;Файл&lt;/a&gt; инициализации ).</target>
        </trans-unit>
        <trans-unit id="944f41fd72108f4f5b0ec80eb8b18e1f568f2022" translate="yes" xml:space="preserve">
          <source>You can specify the text to use in the customization buffer by adding &lt;code&gt;:tag &lt;var&gt;name&lt;/var&gt;&lt;/code&gt; after the first element of the &lt;var&gt;link-data&lt;/var&gt;; for example, &lt;code&gt;(info-link :tag &quot;foo&quot; &quot;(emacs)Top&quot;)&lt;/code&gt; makes a link to the Emacs manual which appears in the buffer as &amp;lsquo;</source>
          <target state="translated">Вы можете указать текст для использования в буфере настройки, добавив &lt;code&gt;:tag &lt;var&gt;name&lt;/var&gt;&lt;/code&gt; тега после первого элемента данных &lt;var&gt;link-data&lt;/var&gt; ; например, &lt;code&gt;(info-link :tag &quot;foo&quot; &quot;(emacs)Top&quot;)&lt;/code&gt; делает ссылку на руководство Emacs, которое отображается в буфере как '</target>
        </trans-unit>
        <trans-unit id="3f8d374bada8e52133f36bfee4cd3d5882ae7896" translate="yes" xml:space="preserve">
          <source>You can specify which buffer to scroll by setting the variable &lt;code&gt;other-window-scroll-buffer&lt;/code&gt; to a buffer. If that buffer isn&amp;rsquo;t already displayed, &lt;code&gt;scroll-other-window&lt;/code&gt; displays it in some window.</source>
          <target state="translated">Вы можете указать, какой буфер прокручивать, установив для переменной &lt;code&gt;other-window-scroll-buffer&lt;/code&gt; значение буфера. Если этот буфер еще не отображается, &lt;code&gt;scroll-other-window&lt;/code&gt; отображает его в каком-то окне.</target>
        </trans-unit>
        <trans-unit id="090fe002989c86a53fc670fecc0fc1b86c8cdd6a" translate="yes" xml:space="preserve">
          <source>You can specify which keysyms Emacs should use for the Control, Meta, Alt, Hyper, and Super modifiers by setting these variables:</source>
          <target state="translated">Вы можете указать,какие кейсимы Emacs должен использовать для модификаторов Control,Meta,Alt,Hyper и Super,установив эти переменные:</target>
        </trans-unit>
        <trans-unit id="e2f3d4dd18da2288a92ea52b44ddcd66255461d3" translate="yes" xml:space="preserve">
          <source>You can stop and resume operation of a network process by calling &lt;code&gt;stop-process&lt;/code&gt; and &lt;code&gt;continue-process&lt;/code&gt;. For a server process, being stopped means not accepting new connections. (Up to 5 connection requests will be queued for when you resume the server; you can increase this limit, unless it is imposed by the operating system&amp;mdash;see the &lt;code&gt;:server&lt;/code&gt; keyword of &lt;code&gt;make-network-process&lt;/code&gt;, &lt;a href=&quot;network-processes#Network-Processes&quot;&gt;Network Processes&lt;/a&gt;.) For a network stream connection, being stopped means not processing input (any arriving input waits until you resume the connection). For a datagram connection, some number of packets may be queued but input may be lost. You can use the function &lt;code&gt;process-command&lt;/code&gt; to determine whether a network connection or server is stopped; a non-&lt;code&gt;nil&lt;/code&gt; value means yes.</source>
          <target state="translated">Вы можете остановить и возобновить работу сетевого процесса, вызвав &lt;code&gt;stop-process&lt;/code&gt; и &lt;code&gt;continue-process&lt;/code&gt; . Для серверного процесса остановка означает отказ от новых подключений. (До 5 запросов на подключение будут поставлены в очередь, когда вы возобновите работу сервера; вы можете увеличить этот предел, если он не налагается операционной системой - см &lt;code&gt;:server&lt;/code&gt; Ключевое слово : server в &lt;code&gt;make-network-process&lt;/code&gt; , &lt;a href=&quot;network-processes#Network-Processes&quot;&gt;Сетевые процессы&lt;/a&gt; .) Для сети. Потоковое соединение, остановка означает, что ввод не обрабатывается (любой поступающий ввод ждет, пока вы не возобновите соединение). Для подключения дейтаграммы некоторое количество пакетов может быть поставлено в очередь, но ввод может быть потерян. Вы можете использовать функцию &lt;code&gt;process-command&lt;/code&gt; чтобы определить, остановлено ли сетевое соединение или сервер; значение, отличное от &lt;code&gt;nil&lt;/code&gt; означает да.</target>
        </trans-unit>
        <trans-unit id="09e644fb1b5fcd65be9977b5d88096c2a1451720" translate="yes" xml:space="preserve">
          <source>You can supply a &amp;ldquo;focus follows mouse&amp;rdquo; policy for individual Emacs windows by customizing the variable &lt;code&gt;mouse-autoselect-window&lt;/code&gt; (see &lt;a href=&quot;mouse-window-auto_002dselection#Mouse-Window-Auto_002dselection&quot;&gt;Mouse Window Auto-selection&lt;/a&gt;).</source>
          <target state="translated">Вы можете предоставить политику &amp;laquo;фокус следует за мышью&amp;raquo; для отдельных окон Emacs, настроив переменную &lt;code&gt;mouse-autoselect-window&lt;/code&gt; (см. &lt;a href=&quot;mouse-window-auto_002dselection#Mouse-Window-Auto_002dselection&quot;&gt;Автоматический выбор &lt;/a&gt;окна мыши ).</target>
        </trans-unit>
        <trans-unit id="d505b7142511d692afb7bf330056e22c40b7ee7e" translate="yes" xml:space="preserve">
          <source>You can suppress the warning for a specific call to a function &lt;var&gt;func&lt;/var&gt; by conditionalizing it on an &lt;code&gt;fboundp&lt;/code&gt; test, like this:</source>
          <target state="translated">Вы можете подавить предупреждение о конкретном вызове функции &lt;var&gt;func&lt;/var&gt; , &lt;code&gt;fboundp&lt;/code&gt; его условием в тесте fboundp , например:</target>
        </trans-unit>
        <trans-unit id="50aae38861bd74bc551fb9215eb842d46219608e" translate="yes" xml:space="preserve">
          <source>You can tell the compiler that a function is defined using &lt;code&gt;declare-function&lt;/code&gt;. See &lt;a href=&quot;declaring-functions#Declaring-Functions&quot;&gt;Declaring Functions&lt;/a&gt;.</source>
          <target state="translated">Вы можете сообщить компилятору, что функция определена, с помощью &lt;code&gt;declare-function&lt;/code&gt; . См. &lt;a href=&quot;declaring-functions#Declaring-Functions&quot;&gt;Объявление функций&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="242e5c9f62ba920a7ef2e01b2046f2ae25c28304" translate="yes" xml:space="preserve">
          <source>You can test an object to see whether it is a marker, or whether it is either an integer or a marker. The latter test is useful in connection with the arithmetic functions that work with both markers and integers.</source>
          <target state="translated">Вы можете протестировать объект,чтобы узнать,является ли он маркером,или это целое число или маркер.Последний тест полезен в связи с арифметическими функциями,которые работают как с маркерами,так и с целыми числами.</target>
        </trans-unit>
        <trans-unit id="ca1f03885dbe1a880635516b88dcebc50cc540a9" translate="yes" xml:space="preserve">
          <source>You can test the voidness of a symbol&amp;rsquo;s function definition with &lt;code&gt;fboundp&lt;/code&gt;. After you have given a symbol a function definition, you can make it void once more using &lt;code&gt;fmakunbound&lt;/code&gt;.</source>
          <target state="translated">Вы можете проверить &lt;code&gt;fboundp&lt;/code&gt; определения функции символа с помощью fboundp . После того, как вы присвоили символу определение функции, вы можете снова сделать его недействительным с помощью &lt;code&gt;fmakunbound&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8e18e52aba1bb0d4801e32af3c8e8c5b15f9b00" translate="yes" xml:space="preserve">
          <source>You can test whether an arbitrary Lisp object is a symbol with &lt;code&gt;symbolp&lt;/code&gt;:</source>
          <target state="translated">Вы можете проверить, является ли произвольный объект Lisp символом с &lt;code&gt;symbolp&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="42a8cc088f3055eacf6f83215cea24410407efa9" translate="yes" xml:space="preserve">
          <source>You can then activate the multibuffer change group with a single call to &lt;code&gt;activate-change-group&lt;/code&gt;, and finish it with a single call to &lt;code&gt;accept-change-group&lt;/code&gt; or &lt;code&gt;cancel-change-group&lt;/code&gt;.</source>
          <target state="translated">Затем вы можете активировать многобуферную группу изменения одним вызовом &lt;code&gt;activate-change-group&lt;/code&gt; и завершить ее одним вызовом &lt;code&gt;accept-change-group&lt;/code&gt; или &lt;code&gt;cancel-change-group&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5c5d2ac10244ab14ef8f9ed2a439c5b56810c63" translate="yes" xml:space="preserve">
          <source>You can think of a hash table conceptually as a large array of many slots, each capable of holding one association. To look up a key, &lt;code&gt;gethash&lt;/code&gt; first computes an integer, the hash code, from the key. It can reduce this integer modulo the length of the array, to produce an index in the array. Then it looks in that slot, and if necessary in other nearby slots, to see if it has found the key being sought.</source>
          <target state="translated">Вы можете концептуально представить хеш-таблицу как большой массив из множества слотов, каждый из которых может содержать одну ассоциацию. Чтобы найти ключ, &lt;code&gt;gethash&lt;/code&gt; сначала вычисляет целое число, хэш-код, из ключа. Он может уменьшить это целое число по модулю длины массива, чтобы создать индекс в массиве. Затем он просматривает этот слот и, если необходимо, другие соседние слоты, чтобы увидеть, нашел ли он искомый ключ.</target>
        </trans-unit>
        <trans-unit id="7a297cf6ad10d5b7cde372990d5abb748d81bbf2" translate="yes" xml:space="preserve">
          <source>You can trace the execution of functions involved in the problem using the tracing facilities provided by the</source>
          <target state="translated">Вы можете проследить выполнение функций,связанных с проблемой,используя средства трассировки,предоставленные в</target>
        </trans-unit>
        <trans-unit id="5d8c58722b6dcc78e5b5eca134c7ee5d56f77691" translate="yes" xml:space="preserve">
          <source>You can turn off multibyte support in a specific buffer by invoking the command &lt;code&gt;toggle-enable-multibyte-characters&lt;/code&gt; in that buffer.</source>
          <target state="translated">Вы можете отключить поддержку &lt;code&gt;toggle-enable-multibyte-characters&lt;/code&gt; в конкретном буфере, вызвав команду toggle-enable-multibyte-characters в этом буфере.</target>
        </trans-unit>
        <trans-unit id="8abbdc8deefc4fda9746ca12a4279d4733e246cd" translate="yes" xml:space="preserve">
          <source>You can use &amp;lsquo;</source>
          <target state="translated">Вы можете использовать '</target>
        </trans-unit>
        <trans-unit id="0a4d3379f24b4eed1c3da5592770950caab51b9e" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;define-hash-table-test&lt;/code&gt; (see &lt;a href=&quot;defining-hash#Defining-Hash&quot;&gt;Defining Hash&lt;/a&gt;) to define additional possibilities for &lt;var&gt;test&lt;/var&gt;.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;define-hash-table-test&lt;/code&gt; (см. &lt;a href=&quot;defining-hash#Defining-Hash&quot;&gt;Определение хеша&lt;/a&gt; ), чтобы определить дополнительные возможности для &lt;var&gt;test&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="16fc2e8805143f22077355b0f09ddcca63437e06" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;font-lock-add-keywords&lt;/code&gt; to add additional search-based fontification rules to a major mode, and &lt;code&gt;font-lock-remove-keywords&lt;/code&gt; to remove rules.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;font-lock-add-keywords&lt;/code&gt; , чтобы добавить дополнительные правила фонификации на основе поиска в основной режим, и &lt;code&gt;font-lock-remove-keywords&lt;/code&gt; для удаления правил.</target>
        </trans-unit>
        <trans-unit id="ce09da096fce8be0b9f2889d61db1c88e2bef038" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;forward-comment&lt;/code&gt; to move forward or backward over one comment or several comments.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;forward-comment&lt;/code&gt; для перехода вперед или назад по одному или нескольким комментариям.</target>
        </trans-unit>
        <trans-unit id="d1315ba3644568f81395912dfb5a13252fff19c0" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;input-decode-map&lt;/code&gt;, &lt;code&gt;local-function-key-map&lt;/code&gt;, and &lt;code&gt;key-translation-map&lt;/code&gt; for more than simple aliases, by using a function, instead of a key sequence, as the translation of a key. Then this function is called to compute the translation of that key.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;input-decode-map&lt;/code&gt; , &lt;code&gt;local-function-key-map&lt;/code&gt; и &lt;code&gt;key-translation-map&lt;/code&gt; не только для простых псевдонимов, используя функцию вместо последовательности клавиш в качестве перевода клавиши. Затем эта функция вызывается для вычисления перевода этого ключа.</target>
        </trans-unit>
        <trans-unit id="a52609c7a14d99ff04cb4a84eb444776aa181413" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;set-process-coding-system&lt;/code&gt; to specify which coding system to use (see &lt;a href=&quot;process-information#Process-Information&quot;&gt;Process Information&lt;/a&gt;). Otherwise, the coding system comes from &lt;code&gt;coding-system-for-read&lt;/code&gt;, if that is non-&lt;code&gt;nil&lt;/code&gt;; or else from the defaulting mechanism (see &lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;Default Coding Systems&lt;/a&gt;). If the text output by a process contains null bytes, Emacs by default uses &lt;code&gt;no-conversion&lt;/code&gt; for it; see &lt;a href=&quot;lisp-and-coding-systems#Lisp-and-Coding-Systems&quot;&gt;inhibit-nul-byte-detection&lt;/a&gt;, for how to control this behavior.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;set-process-coding-system&lt;/code&gt; , чтобы указать, какую систему кодирования использовать (см. &lt;a href=&quot;process-information#Process-Information&quot;&gt;Информацию о процессе&lt;/a&gt; ). В противном случае система кодирования происходит от системы &lt;code&gt;coding-system-for-read&lt;/code&gt; , если она не равна &lt;code&gt;nil&lt;/code&gt; ; или иначе из механизма по &lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;умолчанию&lt;/a&gt; (см. Системы кодирования по умолчанию ). Если текст, выводимый процессом, содержит нулевые байты, Emacs по умолчанию не использует для этого &lt;code&gt;no-conversion&lt;/code&gt; ; см. &amp;laquo; &lt;a href=&quot;lisp-and-coding-systems#Lisp-and-Coding-Systems&quot;&gt;ignit-nul-byte-detection&amp;raquo;&lt;/a&gt; , чтобы узнать, как контролировать это поведение.</target>
        </trans-unit>
        <trans-unit id="aa14cfe3eeb5b6a06b39c4132db95b4a971ed233" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;vconcat&lt;/code&gt; to print a bool-vector like other vectors:</source>
          <target state="translated">Вы можете использовать &lt;code&gt;vconcat&lt;/code&gt; для печати bool-вектора, как и другие векторы:</target>
        </trans-unit>
        <trans-unit id="a7522500771e414a03cc4038c31e65c8b9eb4fd6" translate="yes" xml:space="preserve">
          <source>You can use &lt;em&gt;overlays&lt;/em&gt; to alter the appearance of a buffer&amp;rsquo;s text on the screen, for the sake of presentation features. An overlay is an object that belongs to a particular buffer, and has a specified beginning and end. It also has properties that you can examine and set; these affect the display of the text within the overlay.</source>
          <target state="translated">Вы можете использовать &lt;em&gt;наложения&lt;/em&gt; для изменения внешнего вида текста буфера на экране в целях презентации. Наложение - это объект, который принадлежит определенному буферу и имеет указанное начало и конец. У него также есть свойства, которые вы можете изучить и установить; они влияют на отображение текста в наложении.</target>
        </trans-unit>
        <trans-unit id="162e252290dff840906d704d1d1169f825b753de" translate="yes" xml:space="preserve">
          <source>You can use &lt;var&gt;action-alist&lt;/var&gt; to specify additional possible answers and what they mean. It is an alist of elements of the form &lt;code&gt;(&lt;var&gt;char&lt;/var&gt; &lt;var&gt;function&lt;/var&gt; &lt;var&gt;help&lt;/var&gt;)&lt;/code&gt;, each of which defines one additional answer. In this element, &lt;var&gt;char&lt;/var&gt; is a character (the answer); &lt;var&gt;function&lt;/var&gt; is a function of one argument (an object from &lt;var&gt;list&lt;/var&gt;); &lt;var&gt;help&lt;/var&gt; is a string.</source>
          <target state="translated">Вы можете использовать &lt;var&gt;action-alist&lt;/var&gt; чтобы указать дополнительные возможные ответы и их значение. Это список элементов формы &lt;code&gt;(&lt;var&gt;char&lt;/var&gt; &lt;var&gt;function&lt;/var&gt; &lt;var&gt;help&lt;/var&gt;)&lt;/code&gt; , каждый из которых определяет один дополнительный ответ. В этом элементе &lt;var&gt;char&lt;/var&gt; - это символ (ответ); &lt;var&gt;function&lt;/var&gt; - функция одного аргумента (объект из &lt;var&gt;list&lt;/var&gt; ); &lt;var&gt;help&lt;/var&gt; - это строка.</target>
        </trans-unit>
        <trans-unit id="4b1f3ec2142da96f2f1929a76752ad36e1c4483d" translate="yes" xml:space="preserve">
          <source>You can use &lt;var&gt;case-fold&lt;/var&gt; in &lt;code&gt;font-lock-defaults&lt;/code&gt; to specify the value of &lt;code&gt;font-lock-keywords-case-fold-search&lt;/code&gt; which says whether search-based fontification should be case-insensitive.</source>
          <target state="translated">Вы можете использовать &lt;var&gt;case-fold&lt;/var&gt; в &lt;code&gt;font-lock-defaults&lt;/code&gt; , чтобы указать значение &lt;code&gt;font-lock-keywords-case-fold-search&lt;/code&gt; , которое указывает, должна ли фонификация на основе поиска быть нечувствительной к регистру.</target>
        </trans-unit>
        <trans-unit id="cf09f755e1f8ce745389a2da2a007e527db16fac" translate="yes" xml:space="preserve">
          <source>You can use Auto Fill mode (see &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;) to fill text automatically as you insert it, but changes to existing text may leave it improperly filled. Then you must fill the text explicitly.</source>
          <target state="translated">Вы можете использовать режим Автозаполнения (см. &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Автозаполнение&lt;/a&gt; ) для автоматического заполнения текста по мере его вставки, но изменения существующего текста могут привести к его неправильному заполнению. Затем вы должны заполнить текст явно.</target>
        </trans-unit>
        <trans-unit id="a87278b19a10a1405a845414b4efa69c5867e45c" translate="yes" xml:space="preserve">
          <source>You can use Edebug, a source-level debugger for Emacs Lisp.</source>
          <target state="translated">Вы можете использовать Edebug,отладчик на уровне исходных кодов для Emacs Lisp.</target>
        </trans-unit>
        <trans-unit id="bd358ceeaead124b192baf3e41c34a92a040d5f4" translate="yes" xml:space="preserve">
          <source>You can use a &lt;em&gt;transaction queue&lt;/em&gt; to communicate with a subprocess using transactions. First use &lt;code&gt;tq-create&lt;/code&gt; to create a transaction queue communicating with a specified process. Then you can call &lt;code&gt;tq-enqueue&lt;/code&gt; to send a transaction.</source>
          <target state="translated">Вы можете использовать &lt;em&gt;очередь транзакций&lt;/em&gt; для связи с подпроцессом с помощью транзакций. Сначала используйте &lt;code&gt;tq-create&lt;/code&gt; для создания очереди транзакций, взаимодействующей с указанным процессом. Затем вы можете вызвать &lt;code&gt;tq-enqueue&lt;/code&gt; для отправки транзакции.</target>
        </trans-unit>
        <trans-unit id="93f1f2b0f4be59334d39ac4609885aa4ee22dbf9" translate="yes" xml:space="preserve">
          <source>You can use a display table to substitute other text for the ellipsis (&amp;lsquo;</source>
          <target state="translated">Вы можете использовать таблицу отображения, чтобы заменить многоточие ('</target>
        </trans-unit>
        <trans-unit id="3e769c74636448420805448846b68d823e62ed42" translate="yes" xml:space="preserve">
          <source>You can use a longer form to specify keywords such as &lt;code&gt;:enable&lt;/code&gt; and &lt;code&gt;:visible&lt;/code&gt; for a menu separator:</source>
          <target state="translated">Вы можете использовать более длинную форму, чтобы указать такие ключевые слова, как &lt;code&gt;:enable&lt;/code&gt; и &lt;code&gt;:visible&lt;/code&gt; для разделителя меню:</target>
        </trans-unit>
        <trans-unit id="663cd45dc3813939091f6c964a4573591a9fb55b" translate="yes" xml:space="preserve">
          <source>You can use a non-default string as the autoload cookie and have the corresponding autoload calls written into a file whose name is different from the default</source>
          <target state="translated">Вы можете использовать в качестве автозагрузочного куки строку не по умолчанию и записать соответствующие вызовы автозагрузки в файл,имя которого отличается от имени по умолчанию</target>
        </trans-unit>
        <trans-unit id="e735b38a87c1bcd5faacacb0143ca21732f64ebc" translate="yes" xml:space="preserve">
          <source>You can use an image descriptor by setting up the &lt;code&gt;display&lt;/code&gt; property yourself, but it is easier to use the functions in this section.</source>
          <target state="translated">Вы можете использовать дескриптор изображения, настроив свойство &lt;code&gt;display&lt;/code&gt; самостоятельно, но проще использовать функции из этого раздела.</target>
        </trans-unit>
        <trans-unit id="c3f59a33a52b6c57525279ddfc90d34fbe5a9ffe" translate="yes" xml:space="preserve">
          <source>You can use command-line arguments to request various actions when you start Emacs. Note that the recommended way of using Emacs is to start it just once, after logging in, and then do all editing in the same Emacs session (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Entering-Emacs.html#Entering-Emacs&quot;&gt;Entering Emacs&lt;/a&gt; in</source>
          <target state="translated">Вы можете использовать аргументы командной строки для запроса различных действий при запуске Emacs. Обратите внимание, что рекомендуемый способ использования Emacs - запустить его только один раз после входа в систему, а затем выполнить все редактирование в том же сеансе Emacs (см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Entering-Emacs.html#Entering-Emacs&quot;&gt;Ввод Emacs&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="3fb1ba31b7bb70797db8871d22e8485dc4a5fb88" translate="yes" xml:space="preserve">
          <source>You can use the</source>
          <target state="translated">Вы можете использовать</target>
        </trans-unit>
        <trans-unit id="e7db821774b3d488810d1ba9263017f5f08ae4ef" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;keymap&lt;/code&gt; property to specify a keymap. This keymap only takes real effect for mouse clicks; binding character keys and function keys to it has no effect, since it is impossible to move point into the mode line.</source>
          <target state="translated">Вы можете использовать свойство &lt;code&gt;keymap&lt;/code&gt; чтобы указать раскладку клавиатуры. Эта раскладка имеет реальный эффект только при щелчках мышью; привязка к нему символьных клавиш и функциональных клавиш не имеет никакого эффекта, так как невозможно переместить точку в строку режима.</target>
        </trans-unit>
        <trans-unit id="3cf88e11b368928ae88d164bcfeb9074e25799aa" translate="yes" xml:space="preserve">
          <source>You can use the &lt;em&gt;evaluation list buffer&lt;/em&gt;, called</source>
          <target state="translated">Вы можете использовать &lt;em&gt;буфер списка оценок&lt;/em&gt; , называемый</target>
        </trans-unit>
        <trans-unit id="67360eaf4e68f560650dc3bcc8e49328d4d42b07" translate="yes" xml:space="preserve">
          <source>You can use the ERT package to write regression tests for the program. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/ert/index.html#Top&quot;&gt;the ERT manual&lt;/a&gt; in</source>
          <target state="translated">Вы можете использовать пакет ERT для написания регрессионных тестов для программы. См. &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/ert/index.html#Top&quot;&gt;Руководство ERT&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="f8663e28726bbb5467db8677e3800111194a380d" translate="yes" xml:space="preserve">
          <source>You can use the Testcover package to perform coverage testing on the program.</source>
          <target state="translated">Для тестирования покрытия программы можно использовать пакет Testcover.</target>
        </trans-unit>
        <trans-unit id="8456af73bfb54e43f4f609e8a59655ab8542b993" translate="yes" xml:space="preserve">
          <source>You can use the following function to replace the text of one buffer with the text of another buffer:</source>
          <target state="translated">Для замены текста одного буфера на текст другого можно использовать следующую функцию:</target>
        </trans-unit>
        <trans-unit id="68c5260e0ce4876ffde2aa7c3d7839c91f40b312" translate="yes" xml:space="preserve">
          <source>You can use the function &lt;code&gt;format-mode-line&lt;/code&gt; to compute the text that would appear in a mode line or header line based on a certain mode line construct.</source>
          <target state="translated">Вы можете использовать функцию &lt;code&gt;format-mode-line&lt;/code&gt; для вычисления текста, который будет отображаться в строке режима или строке заголовка на основе определенной конструкции строки режима.</target>
        </trans-unit>
        <trans-unit id="647337087dbd3ac6af4256b2d8a0f7ab79fd793a" translate="yes" xml:space="preserve">
          <source>You can use the function &lt;code&gt;functionp&lt;/code&gt; to test if an object is a function:</source>
          <target state="translated">Вы можете использовать функцию &lt;code&gt;functionp&lt;/code&gt; , чтобы проверить, является ли объект функцией:</target>
        </trans-unit>
        <trans-unit id="024702a02bb9d06418f52623f8e21b5e697d605b" translate="yes" xml:space="preserve">
          <source>You can use the function &lt;code&gt;read-quoted-char&lt;/code&gt; to ask the user to specify a character, and allow the user to specify a control or meta character conveniently, either literally or as an octal character code. The command &lt;code&gt;quoted-insert&lt;/code&gt; uses this function.</source>
          <target state="translated">Вы можете использовать функцию &lt;code&gt;read-quoted-char&lt;/code&gt; , чтобы попросить пользователя указать символ и позволить пользователю удобно указать элемент управления или метасимвол, буквально или как восьмеричный код символа. Команда &lt;code&gt;quoted-insert&lt;/code&gt; использует эту функцию.</target>
        </trans-unit>
        <trans-unit id="cc07e6bfa6ba8b31466364fe3cfad3370af669c3" translate="yes" xml:space="preserve">
          <source>You can use the modifier keys</source>
          <target state="translated">Вы можете использовать клавиши-модификаторы</target>
        </trans-unit>
        <trans-unit id="5c232c0ab13da24a4cc6ce9b08cf5e220308c74c" translate="yes" xml:space="preserve">
          <source>You can use the same backslash escape-sequences in a string constant as in character literals (but do not use the question mark that begins a character constant). For example, you can write a string containing the nonprinting characters tab and</source>
          <target state="translated">В строковой константе можно использовать те же экранирующие последовательности обратного слеша,что и в символьных литералах (но не используйте знак вопроса,с которого начинается символьная константа).Например,вы можете записать строку,содержащую непечатаемые символы табуляции и</target>
        </trans-unit>
        <trans-unit id="adb88bd2158d3b6c848999aac14e89db6eadc53b" translate="yes" xml:space="preserve">
          <source>You can use the same syntax for punctuation characters. However, if the punctuation character has a special syntactic meaning in Lisp, you must quote it with a &amp;lsquo;</source>
          <target state="translated">Вы можете использовать тот же синтаксис для знаков препинания. Однако, если у символа пунктуации есть особое синтаксическое значение в Лиспе, вы должны заключить его в кавычки с помощью '</target>
        </trans-unit>
        <trans-unit id="1d42eeec527c746a76130993ed10aead35d1760f" translate="yes" xml:space="preserve">
          <source>You can use the variable &lt;code&gt;load-read-function&lt;/code&gt; to specify a function for &lt;code&gt;load&lt;/code&gt; to use instead of &lt;code&gt;read&lt;/code&gt; for reading expressions. See below.</source>
          <target state="translated">Вы можете использовать переменную &lt;code&gt;load-read-function&lt;/code&gt; , чтобы указать функцию для &lt;code&gt;load&lt;/code&gt; будет использоваться вместо &lt;code&gt;read&lt;/code&gt; для чтения выражений. Смотри ниже.</target>
        </trans-unit>
        <trans-unit id="6c95943e19015b6302e08aa860452b2f3e608a83" translate="yes" xml:space="preserve">
          <source>You can use this function for directory names and for file names, because it recognizes abbreviations even as part of the name.</source>
          <target state="translated">Вы можете использовать эту функцию для имен каталогов и для имен файлов,потому что она распознает сокращения даже как часть имени.</target>
        </trans-unit>
        <trans-unit id="3cac207c4c46a09de33ab85187359f2ae081cbcd" translate="yes" xml:space="preserve">
          <source>You can use this keyword more than once, to add multiple links.</source>
          <target state="translated">Вы можете использовать это ключевое слово несколько раз,чтобы добавить несколько ссылок.</target>
        </trans-unit>
        <trans-unit id="6aeccbd317ca70cbbc3a40ac318c169a41df333e" translate="yes" xml:space="preserve">
          <source>You can use this to explicitly specify a syntax table for the new mode. If you specify a &lt;code&gt;nil&lt;/code&gt; value, the new mode uses the same syntax table as &lt;var&gt;parent&lt;/var&gt;, or the standard syntax table if &lt;var&gt;parent&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;. (Note that this does &lt;em&gt;not&lt;/em&gt; follow the convention used for non-keyword arguments that a &lt;code&gt;nil&lt;/code&gt; value is equivalent with not specifying the argument.)</source>
          <target state="translated">Вы можете использовать это, чтобы явно указать таблицу синтаксиса для нового режима. Если вы укажете значение &lt;code&gt;nil&lt;/code&gt; , новый режим использует ту же таблицу синтаксиса, что и &lt;var&gt;parent&lt;/var&gt; , или стандартную таблицу синтаксиса, если &lt;var&gt;parent&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; равен nil . (Обратите внимание, что это &lt;em&gt;не&lt;/em&gt; соответствует соглашению, используемому для аргументов без ключевых слов, что значение &lt;code&gt;nil&lt;/code&gt; эквивалентно без указания аргумента.)</target>
        </trans-unit>
        <trans-unit id="438d7938e3134fe96d063bb650ea2bd68b503d4f" translate="yes" xml:space="preserve">
          <source>You can use this to explicitly specify an abbrev table for the new mode. If you specify a &lt;code&gt;nil&lt;/code&gt; value, the new mode uses the same abbrev table as &lt;var&gt;parent&lt;/var&gt;, or &lt;code&gt;fundamental-mode-abbrev-table&lt;/code&gt; if &lt;var&gt;parent&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;. (Again, a &lt;code&gt;nil&lt;/code&gt; value is &lt;em&gt;not&lt;/em&gt; equivalent to not specifying this keyword.)</source>
          <target state="translated">Вы можете использовать это, чтобы явно указать таблицу сокращений для нового режима. Если вы указываете значение &lt;code&gt;nil&lt;/code&gt; , новый режим использует ту же таблицу сокращений, что и &lt;var&gt;parent&lt;/var&gt; , или таблицу сокращений &lt;code&gt;fundamental-mode-abbrev-table&lt;/code&gt; если &lt;var&gt;parent&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; равен nil . (Опять же, значение &lt;code&gt;nil&lt;/code&gt; &lt;em&gt;не&lt;/em&gt; эквивалентно отсутствию указания этого ключевого слова.)</target>
        </trans-unit>
        <trans-unit id="0f835a1e538f8a103ce81fc94f5fb317773cda73" translate="yes" xml:space="preserve">
          <source>You can view the outside window configuration with</source>
          <target state="translated">Вы можете просмотреть конфигурацию внешнего окна с помощью</target>
        </trans-unit>
        <trans-unit id="4b640a1a5b11175dee4943544e3e5610ad3fac4d" translate="yes" xml:space="preserve">
          <source>You can write the contents of a buffer, or part of a buffer, directly to a file on disk using the &lt;code&gt;append-to-file&lt;/code&gt; and &lt;code&gt;write-region&lt;/code&gt; functions. Don&amp;rsquo;t use these functions to write to files that are being visited; that could cause confusion in the mechanisms for visiting.</source>
          <target state="translated">Вы можете записать содержимое буфера или его части непосредственно в файл на диске, используя функции &lt;code&gt;append-to-file&lt;/code&gt; и &lt;code&gt;write-region&lt;/code&gt; . Не используйте эти функции для записи в файлы, которые посещаются; это могло вызвать путаницу в механизмах посещения.</target>
        </trans-unit>
        <trans-unit id="0163d17d593f136604592bed49659f4ea2b76557" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t directly specify a buffer to put the error output in; that is too difficult to implement. But you can achieve this result by sending the error output to a temporary file and then inserting the file into a buffer when the subprocess finishes.</source>
          <target state="translated">Вы не можете напрямую указать буфер для вывода ошибок; это слишком сложно реализовать. Но вы можете добиться этого результата, отправив вывод ошибки во временный файл, а затем вставив файл в буфер по завершении подпроцесса.</target>
        </trans-unit>
        <trans-unit id="c2183b62f25e3a7da13dcd2d861c5a3ab2dc7d2d" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t use</source>
          <target state="translated">Вы не можете использовать</target>
        </trans-unit>
        <trans-unit id="3b0dd8c6e78e6f7f388fd751e8bdf44d25000c85" translate="yes" xml:space="preserve">
          <source>You cannot create a new primitive function with &lt;code&gt;defun&lt;/code&gt; or &lt;code&gt;defalias&lt;/code&gt;, but you can use them to change the function definition of any symbol, even one such as &lt;code&gt;car&lt;/code&gt; or &lt;code&gt;x-popup-menu&lt;/code&gt; whose normal definition is a primitive. However, this is risky: for instance, it is next to impossible to redefine &lt;code&gt;car&lt;/code&gt; without breaking Lisp completely. Redefining an obscure function such as &lt;code&gt;x-popup-menu&lt;/code&gt; is less dangerous, but it still may not work as you expect. If there are calls to the primitive from C code, they call the primitive&amp;rsquo;s C definition directly, so changing the symbol&amp;rsquo;s definition will have no effect on them.</source>
          <target state="translated">Вы не можете создать новую примитивную функцию с &lt;code&gt;defun&lt;/code&gt; или &lt;code&gt;defalias&lt;/code&gt; , но вы можете использовать их для изменения определения функции любого символа, даже такого, как &lt;code&gt;car&lt;/code&gt; или &lt;code&gt;x-popup-menu&lt;/code&gt; , обычное определение которого является примитивом. Однако это рискованно: например, практически невозможно переопределить &lt;code&gt;car&lt;/code&gt; не взломав полностью Lisp. Переопределение непонятной функции, такой как &lt;code&gt;x-popup-menu&lt;/code&gt; , менее опасно, но все равно может работать не так, как вы ожидаете. Если есть вызовы примитива из кода C, они напрямую вызывают определение C примитива, поэтому изменение определения символа не повлияет на них.</target>
        </trans-unit>
        <trans-unit id="1a4d8cd12ebf7c377d08237c0b71f848ebb99f5d" translate="yes" xml:space="preserve">
          <source>You cannot set this variable directly; instead, use the function &lt;code&gt;set-buffer-multibyte&lt;/code&gt; to change a buffer&amp;rsquo;s representation.</source>
          <target state="translated">Вы не можете установить эту переменную напрямую; вместо этого используйте функцию &lt;code&gt;set-buffer-multibyte&lt;/code&gt; , чтобы изменить представление буфера.</target>
        </trans-unit>
        <trans-unit id="ee4bfbb9070478dabf0b4f53d99a8ad81ab66910" translate="yes" xml:space="preserve">
          <source>You close the dribble file by calling this function with an argument of &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Вы закрываете dribble-файл, вызывая эту функцию с аргументом &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67e889ec4248f5efe8521e0364d6b36c14b7b60a" translate="yes" xml:space="preserve">
          <source>You close the termscript file by calling this function with an argument of &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Вы закрываете файл termscript, вызывая эту функцию с аргументом &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73d60164ab607d3298c4570f40085ef934b5026f" translate="yes" xml:space="preserve">
          <source>You could almost write &lt;code&gt;or&lt;/code&gt; in terms of &lt;code&gt;if&lt;/code&gt;, but not quite:</source>
          <target state="translated">Вы могли бы почти написать &lt;code&gt;or&lt;/code&gt; в терминах &lt;code&gt;if&lt;/code&gt; , но не совсем:</target>
        </trans-unit>
        <trans-unit id="04e9a71f1450ae98fd113e171d33bbb22f156543" translate="yes" xml:space="preserve">
          <source>You could define &lt;code&gt;put&lt;/code&gt; in terms of &lt;code&gt;setplist&lt;/code&gt; and &lt;code&gt;plist-put&lt;/code&gt;, as follows:</source>
          <target state="translated">Вы можете определить &lt;code&gt;put&lt;/code&gt; в терминах &lt;code&gt;setplist&lt;/code&gt; и plist &lt;code&gt;plist-put&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="3105762d47cc6ddb00531bebedb381e7b8472b65" translate="yes" xml:space="preserve">
          <source>You could use &lt;code&gt;set-match-data&lt;/code&gt; together with &lt;code&gt;match-data&lt;/code&gt; to imitate the effect of the special form &lt;code&gt;save-match-data&lt;/code&gt;. Here is how:</source>
          <target state="translated">Вы можете использовать &lt;code&gt;set-match-data&lt;/code&gt; вместе с &lt;code&gt;match-data&lt;/code&gt; для имитации эффекта специальной формы &lt;code&gt;save-match-data&lt;/code&gt; . Вот как:</target>
        </trans-unit>
        <trans-unit id="83f0c3ff12a175b5bd61986907e7575fa94c2a7c" translate="yes" xml:space="preserve">
          <source>You create a server by calling &lt;code&gt;make-network-process&lt;/code&gt; (see &lt;a href=&quot;network-processes#Network-Processes&quot;&gt;Network Processes&lt;/a&gt;) with &lt;code&gt;:server t&lt;/code&gt;. The server will listen for connection requests from clients. When it accepts a client connection request, that creates a new network connection, itself a process object, with the following parameters:</source>
          <target state="translated">Вы создаете сервер, вызывая &lt;code&gt;make-network-process&lt;/code&gt; (см. &lt;a href=&quot;network-processes#Network-Processes&quot;&gt;Сетевые процессы&lt;/a&gt; ) с &lt;code&gt;:server t&lt;/code&gt; . Сервер будет прослушивать запросы на подключение от клиентов. Когда он принимает запрос на соединение с клиентом, он создает новое сетевое соединение, которое само является объектом процесса, со следующими параметрами:</target>
        </trans-unit>
        <trans-unit id="881c0ee895ce85f5865eab61cfa10d0f6a76397b" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to give a directory or extension in the file name &lt;var&gt;library&lt;/var&gt;. Normally, you just give a bare file name, like this:</source>
          <target state="translated">Вам не нужно указывать каталог или расширение в &lt;var&gt;library&lt;/var&gt; имен файлов . Обычно вы просто указываете простое имя файла, например:</target>
        </trans-unit>
        <trans-unit id="fbd7565e6ef2c69ebc424cd4d55eda96abba6825" translate="yes" xml:space="preserve">
          <source>You have to really understand the workings of Custom to use &lt;code&gt;:get&lt;/code&gt; correctly. It is meant for values that are treated in Custom as variables but are not actually stored in Lisp variables. It is almost surely a mistake to specify &lt;var&gt;getfunction&lt;/var&gt; for a value that really is stored in a Lisp variable.</source>
          <target state="translated">Вы должны действительно понимать, как работает Custom, чтобы использовать &lt;code&gt;:get&lt;/code&gt; правильно. Он предназначен для значений, которые обрабатываются в Custom как переменные, но на самом деле не хранятся в переменных Lisp. Почти наверняка ошибкой будет указывать &lt;var&gt;getfunction&lt;/var&gt; для значения, которое действительно хранится в переменной Lisp.</target>
        </trans-unit>
        <trans-unit id="250e9de8dfdad97a789ba335883b8381db6cff3b" translate="yes" xml:space="preserve">
          <source>You may not have any Chinese font matching the above font specification. Most X distributions include only Chinese fonts that have &amp;lsquo;</source>
          <target state="translated">У вас может не быть китайского шрифта, соответствующего указанной выше спецификации шрифта. Большинство дистрибутивов X включают только китайские шрифты, в которых есть '</target>
        </trans-unit>
        <trans-unit id="5592784496a96bf64ba4c588372aaa108775800a" translate="yes" xml:space="preserve">
          <source>You may set the &lt;code&gt;term-file-prefix&lt;/code&gt; variable to &lt;code&gt;nil&lt;/code&gt; in your init file if you do not wish to load the terminal-initialization file.</source>
          <target state="translated">Вы можете установить для переменной &lt;code&gt;term-file-prefix&lt;/code&gt; значение &lt;code&gt;nil&lt;/code&gt; в вашем файле инициализации, если вы не хотите загружать файл инициализации терминала.</target>
        </trans-unit>
        <trans-unit id="254ad5806cfc1ef4994dcfb1615e5f6bf32875fe" translate="yes" xml:space="preserve">
          <source>You may use</source>
          <target state="translated">Вы можете использовать</target>
        </trans-unit>
        <trans-unit id="705dd37ab9efea425b6b2d825f010aff8486d766" translate="yes" xml:space="preserve">
          <source>You may want to restrict the value type for specific keys, for example, the value associated with the &lt;code&gt;&quot;bar&quot;&lt;/code&gt; key can only be an integer. You can specify this by using a list instead of an atom in the list. The first element will specify the key, like before, while the second element will specify the value type. For example:</source>
          <target state="translated">Вы можете захотеть ограничить тип значения для определенных ключей, например, значение, связанное с клавишей &lt;code&gt;&quot;bar&quot;&lt;/code&gt; может быть только целым числом. Вы можете указать это, используя список вместо атома в списке. Первый элемент будет указывать ключ, как и раньше, а второй элемент укажет тип значения. Например:</target>
        </trans-unit>
        <trans-unit id="9273477536a6ec4516bebb4420ddf1d040c31c38" translate="yes" xml:space="preserve">
          <source>You may wonder how the documentation string could be optional, since there are required components of the function that follow it (the body). Since evaluation of a string returns that string, without any side effects, it has no effect if it is not the last form in the body. Thus, in practice, there is no confusion between the first form of the body and the documentation string; if the only body form is a string then it serves both as the return value and as the documentation.</source>
          <target state="translated">Вы можете задаться вопросом,как строка документации может быть необязательной,так как есть необходимые компоненты функции,которые следуют за ней (тело).Так как оценка строки возвращает эту строку,без каких-либо побочных эффектов,она не имеет никакого эффекта,если это не последняя форма в теле.Таким образом,на практике нет никакой путаницы между первой формой тела и строкой документации;если единственной формой тела является строка,то она служит и возвращаемым значением,и документацией.</target>
        </trans-unit>
        <trans-unit id="900c89aa7858404ac352621578900c924533f33e" translate="yes" xml:space="preserve">
          <source>You might ask why we take the trouble to compute an expansion for a macro and then evaluate the expansion. Why not have the macro body produce the desired results directly? The reason has to do with compilation.</source>
          <target state="translated">Вы можете спросить,почему мы берем на себя задачу вычислить расширение для макроса,а затем оценить это расширение.Почему бы не получить желаемый результат непосредственно от макроорганизма? Причина связана с компиляцией.</target>
        </trans-unit>
        <trans-unit id="299a28df52a8b70a93fbe14f3581cd5c98f77237" translate="yes" xml:space="preserve">
          <source>You might think that we could just as well write &lt;code&gt;(kill-buffer
(current-buffer))&lt;/code&gt; and dispense with the variable &lt;code&gt;buffer&lt;/code&gt;. However, the way shown above is safer, if &lt;var&gt;body-form&lt;/var&gt; happens to get an error after switching to a different buffer! (Alternatively, you could write a &lt;code&gt;save-current-buffer&lt;/code&gt; around &lt;var&gt;body-form&lt;/var&gt;, to ensure that the temporary buffer becomes current again in time to kill it.)</source>
          <target state="translated">Вы можете подумать, что мы могли бы просто написать &lt;code&gt;(kill-buffer (current-buffer))&lt;/code&gt; и отказаться от переменной &lt;code&gt;buffer&lt;/code&gt; . Однако способ, показанный выше, более безопасен, если &lt;var&gt;body-form&lt;/var&gt; выдает ошибку после переключения на другой буфер! (В качестве альтернативы вы можете написать &lt;code&gt;save-current-buffer&lt;/code&gt; вокруг &lt;var&gt;body-form&lt;/var&gt; , чтобы гарантировать, что временный буфер снова станет текущим вовремя, чтобы убить его.)</target>
        </trans-unit>
        <trans-unit id="da3bf328c9848febb6d15ded7d6844d35421d122" translate="yes" xml:space="preserve">
          <source>You might wish to save the file modes value returned by &lt;code&gt;backup-buffer&lt;/code&gt; and use that (if non-&lt;code&gt;nil&lt;/code&gt;) to set the mode bits of the file that you write. This is what &lt;code&gt;save-buffer&lt;/code&gt; normally does. See &lt;a href=&quot;making-backups#Making-Backups&quot;&gt;Making Backup Files&lt;/a&gt;.</source>
          <target state="translated">Вы можете захотеть сохранить значение режима файла, возвращаемое &lt;code&gt;backup-buffer&lt;/code&gt; и использовать его (если не &lt;code&gt;nil&lt;/code&gt; ) для установки битов режима файла, который вы пишете. Это то, что обычно делает &lt;code&gt;save-buffer&lt;/code&gt; . См. &lt;a href=&quot;making-backups#Making-Backups&quot;&gt;Создание файлов резервных копий&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9215673aefab481b45813f0fa92c883f61b0c29" translate="yes" xml:space="preserve">
          <source>You must check that the position &lt;code&gt;forward-sexp&lt;/code&gt; finds is a place that the program will really get to. In &lt;code&gt;cond&lt;/code&gt;, for example, this may not be true.</source>
          <target state="translated">Вы должны проверить, что позиция, которую находит &lt;code&gt;forward-sexp&lt;/code&gt; , - это то место, куда программа действительно попадет. В &lt;code&gt;cond&lt;/code&gt; , например, это может быть не так.</target>
        </trans-unit>
        <trans-unit id="51f5656401ab51893908bb7a3769d00c811f8e97" translate="yes" xml:space="preserve">
          <source>You must instrument your code in order to debug it with Edebug.</source>
          <target state="translated">Вы должны инструментировать свой код,чтобы отладить его с помощью Edebug.</target>
        </trans-unit>
        <trans-unit id="92d8a5f57a7342ca8d6994763be4e024fc25de83" translate="yes" xml:space="preserve">
          <source>You must not use C initializers for static or global variables unless the variables are never written once Emacs is dumped. These variables with initializers are allocated in an area of memory that becomes read-only (on certain operating systems) as a result of dumping Emacs. See &lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;Pure Storage&lt;/a&gt;.</source>
          <target state="translated">Вы не должны использовать инициализаторы C для статических или глобальных переменных, если только переменные никогда не записываются после дампа Emacs. Эти переменные с инициализаторами размещаются в области памяти, которая становится доступной только для чтения (в некоторых операционных системах) в результате сброса Emacs. См. &lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;Чистое хранилище&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="44f7d5820fc6877d2ebf1e1337d191b902950554" translate="yes" xml:space="preserve">
          <source>You should always call this function and not hope for &lt;code&gt;progress-reporter-update&lt;/code&gt; to print &amp;lsquo;</source>
          <target state="translated">Вы всегда должны вызывать эту функцию и не надеяться, что &lt;code&gt;progress-reporter-update&lt;/code&gt; напечатает '</target>
        </trans-unit>
        <trans-unit id="1be9d26f5e8a75fb2fba0237a3ccf7878eff6e8f" translate="yes" xml:space="preserve">
          <source>You should check nonlocal exit conditions where it matters: before you allocated some resource or after you allocated a resource that might need freeing, or where a failure means further processing is impossible or infeasible.</source>
          <target state="translated">Вы должны проверить условия нелокального выхода,если это имеет значение:до того,как вы выделили некоторый ресурс или после того,как вы выделили ресурс,который может нуждаться в освобождении,или когда сбой означает,что дальнейшая обработка невозможна или неосуществима.</target>
        </trans-unit>
        <trans-unit id="17e06068fbddd22d9fbea7d3518b0194a6db9f0c" translate="yes" xml:space="preserve">
          <source>You should make sure that the &lt;code&gt;revert-buffer-function&lt;/code&gt; does not print messages that unnecessarily duplicate Auto Revert&amp;rsquo;s own messages, displayed if &lt;code&gt;auto-revert-verbose&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, and effectively override a &lt;code&gt;nil&lt;/code&gt; value for &lt;code&gt;auto-revert-verbose&lt;/code&gt;. Hence, adapting a mode for auto-reverting often involves getting rid of such messages. This is especially important for buffers that automatically revert every &lt;code&gt;auto-revert-interval&lt;/code&gt; seconds.</source>
          <target state="translated">Вы должны убедиться, что &lt;code&gt;revert-buffer-function&lt;/code&gt; не печатает сообщения, которые без необходимости дублируют собственные сообщения Auto Revert, отображаемые, если &lt;code&gt;auto-revert-verbose&lt;/code&gt; имеет значение &lt;code&gt;t&lt;/code&gt; , и эффективно отменяют значение &lt;code&gt;nil&lt;/code&gt; для &lt;code&gt;auto-revert-verbose&lt;/code&gt; . Следовательно, адаптация режима для автоматического возврата часто включает в себя избавление от таких сообщений. Это особенно важно для буферов, которые автоматически возвращаются через каждые секунды &lt;code&gt;auto-revert-interval&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f43c32e904e2d01bffda8f48a464506ecb5abfdb" translate="yes" xml:space="preserve">
          <source>You should not change this flag in a running Emacs.</source>
          <target state="translated">Вы не должны менять этот флаг в работающем Emacs.</target>
        </trans-unit>
        <trans-unit id="78382bec96f1383b3b9f7cf1d0ee49e56451d4a0" translate="yes" xml:space="preserve">
          <source>You should not try to come up with the elements for a byte-code function yourself, because if they are inconsistent, Emacs may crash when you call the function. Always leave it to the byte compiler to create these objects; it makes the elements consistent (we hope).</source>
          <target state="translated">Не стоит пытаться самостоятельно придумать элементы для функции байт-кода,так как если они непоследовательны,то при вызове функции может произойти аварийное завершение работы Emacs.Всегда оставляйте байтовый компилятор для создания этих объектов;это сделает элементы согласованными (мы надеемся).</target>
        </trans-unit>
        <trans-unit id="a8b99313ac8b106147a2ee5daf11626c31e11b74" translate="yes" xml:space="preserve">
          <source>You should only ever change this variable with a let-binding; never with &lt;code&gt;setq&lt;/code&gt;.</source>
          <target state="translated">Вы должны изменять эту переменную только с помощью привязки let; никогда с &lt;code&gt;setq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc343ca2fc3ffa018a3e0252552bf4fd83a22960" translate="yes" xml:space="preserve">
          <source>You should use one and only one of the above properties. You can also specify the height of the space, with these properties:</source>
          <target state="translated">Вы должны использовать одно и только одно из вышеперечисленных свойств.С помощью этих свойств можно также указать высоту пространства:</target>
        </trans-unit>
        <trans-unit id="d51f5b9f224606f1a98062af9d6e5bde45206890" translate="yes" xml:space="preserve">
          <source>You specify a field with a buffer position, &lt;var&gt;pos&lt;/var&gt;. We think of each field as containing a range of buffer positions, so the position you specify stands for the field containing that position.</source>
          <target state="translated">Вы указываете поле с буферной позицией &lt;var&gt;pos&lt;/var&gt; . Мы думаем, что каждое поле содержит диапазон позиций буфера, поэтому указанная вами позиция соответствует полю, содержащему эту позицию.</target>
        </trans-unit>
        <trans-unit id="1442db37243e3e8261203bdbbe8c4604c6e2a5f6" translate="yes" xml:space="preserve">
          <source>You specify a minibuffer history list with the optional &lt;var&gt;history&lt;/var&gt; argument to &lt;code&gt;read-from-minibuffer&lt;/code&gt; or &lt;code&gt;completing-read&lt;/code&gt;. Here are the possible values for it:</source>
          <target state="translated">Вы указываете список истории минибуфера с необязательным аргументом &lt;var&gt;history&lt;/var&gt; для &lt;code&gt;read-from-minibuffer&lt;/code&gt; или &lt;code&gt;completing-read&lt;/code&gt; . Вот возможные значения для него:</target>
        </trans-unit>
        <trans-unit id="0fcc1942078d1f3399b7b8f94f330e183e349c24" translate="yes" xml:space="preserve">
          <source>You specify a value for a symbol with &lt;code&gt;setq&lt;/code&gt;. For example,</source>
          <target state="translated">Вы указываете значение для символа с помощью &lt;code&gt;setq&lt;/code&gt; . Например,</target>
        </trans-unit>
        <trans-unit id="ce5aac5f8358ca3925cb91173688137456aa4da1" translate="yes" xml:space="preserve">
          <source>You specify the customization type in &lt;code&gt;defcustom&lt;/code&gt; with the &lt;code&gt;:type&lt;/code&gt; keyword. The argument of &lt;code&gt;:type&lt;/code&gt; is evaluated, but only once when the &lt;code&gt;defcustom&lt;/code&gt; is executed, so it isn&amp;rsquo;t useful for the value to vary. Normally we use a quoted constant. For example:</source>
          <target state="translated">Вы указываете тип настройки в &lt;code&gt;defcustom&lt;/code&gt; с ключевым словом &lt;code&gt;:type&lt;/code&gt; . Аргумент &lt;code&gt;:type&lt;/code&gt; оценивается, но только один раз при выполнении &lt;code&gt;defcustom&lt;/code&gt; , поэтому изменение значения бесполезно. Обычно мы используем константу в кавычках. Например:</target>
        </trans-unit>
        <trans-unit id="0ab2fc33508c339c78d220056f9d56bbb674dd89" translate="yes" xml:space="preserve">
          <source>You use &amp;lsquo;</source>
          <target state="translated">Ты используешь '</target>
        </trans-unit>
        <trans-unit id="2fe2a0ef56cf84320662c46b2e058fa32addd4ed" translate="yes" xml:space="preserve">
          <source>Your code should use &lt;code&gt;unwind-protect&lt;/code&gt; to make sure the group is always finished. The call to &lt;code&gt;activate-change-group&lt;/code&gt; should be inside the &lt;code&gt;unwind-protect&lt;/code&gt;, in case the user types</source>
          <target state="translated">Ваш код должен использовать &lt;code&gt;unwind-protect&lt;/code&gt; от размотки, чтобы группа всегда была завершена. Вызов группы &lt;code&gt;activate-change-group&lt;/code&gt; должен быть внутри функции &lt;code&gt;unwind-protect&lt;/code&gt; от размотки , если пользователь вводит</target>
        </trans-unit>
        <trans-unit id="f5c071241f297fef004a78d6b450966295cda23d" translate="yes" xml:space="preserve">
          <source>Your init file can prevent the loading of the terminal-specific library by setting the variable &lt;code&gt;term-file-prefix&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Ваш файл инициализации может предотвратить загрузку библиотеки, специфичной для терминала, установив для переменной &lt;code&gt;term-file-prefix&lt;/code&gt; значение &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="909f99a779adb66a76fc53ab56c7dd1caf35d0fd" translate="yes" xml:space="preserve">
          <source>Z</source>
          <target state="translated">Z</target>
        </trans-unit>
        <trans-unit id="d157bdbb8b0218e146ce9e4a5902cc725e6b45d2" translate="yes" xml:space="preserve">
          <source>Zero-terminated string, in a fixed-size field with length &lt;var&gt;len&lt;/var&gt;.</source>
          <target state="translated">Строка с нулевым завершением в поле фиксированного размера с длиной &lt;var&gt;len&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="0fb2a07b830cc5f9c7a47e39dbda6ab2e792b799" translate="yes" xml:space="preserve">
          <source>Zero-width assertions</source>
          <target state="translated">утверждения нулевой ширины</target>
        </trans-unit>
        <trans-unit id="7d68a3f9fab2f5c22860445ad1e27f2244cf4517" translate="yes" xml:space="preserve">
          <source>[ &amp;hellip; ]</source>
          <target state="translated">[&amp;hellip;]</target>
        </trans-unit>
        <trans-unit id="27fdedbae650ebb23065095be6258bdecf0822e5" translate="yes" xml:space="preserve">
          <source>[&amp;hellip;]</source>
          <target state="translated">[&amp;hellip;]</target>
        </trans-unit>
        <trans-unit id="a0e0509a9d4fcac34650f92bdac71de61fb5d62b" translate="yes" xml:space="preserve">
          <source>[-+[:digit:]]</source>
          <target state="translated">[-+[:digit:]]</target>
        </trans-unit>
        <trans-unit id="f9acad03b97b7138344a3a4f90107e0319dd3913" translate="yes" xml:space="preserve">
          <source>[-a-z]</source>
          <target state="translated">[-a-z]</target>
        </trans-unit>
        <trans-unit id="65bdd6f65d6cb983742ae4c75df46041f8d87aef" translate="yes" xml:space="preserve">
          <source>[:alnum:]</source>
          <target state="translated">[:alnum:]</target>
        </trans-unit>
        <trans-unit id="96b292d79c7cbc2b2607da3f0978cc08951d3c7f" translate="yes" xml:space="preserve">
          <source>[:alnum:]+</source>
          <target state="translated">[:alnum:]+</target>
        </trans-unit>
        <trans-unit id="01b38721bab3c2b63e0904afe7f2e7ac64012d88" translate="yes" xml:space="preserve">
          <source>[:alpha:]</source>
          <target state="translated">[:alpha:]</target>
        </trans-unit>
        <trans-unit id="dd2fed522aff13d6271f4435361dffe0817f7569" translate="yes" xml:space="preserve">
          <source>[:ascii:]</source>
          <target state="translated">[:ascii:]</target>
        </trans-unit>
        <trans-unit id="c90f96e2fb7b759a2ca2a6deb69ad17b81412395" translate="yes" xml:space="preserve">
          <source>[:blank:]</source>
          <target state="translated">[:blank:]</target>
        </trans-unit>
        <trans-unit id="3fb98d15f444128feff27791d9b47604d8140988" translate="yes" xml:space="preserve">
          <source>[:cntrl:]</source>
          <target state="translated">[:cntrl:]</target>
        </trans-unit>
        <trans-unit id="3bba7cec63b636d38b757769603cad1079a0a01e" translate="yes" xml:space="preserve">
          <source>[:digit:]</source>
          <target state="translated">[:digit:]</target>
        </trans-unit>
        <trans-unit id="8f002d85c535f9c16175fe06294c8e55a04e86ce" translate="yes" xml:space="preserve">
          <source>[:graph:]</source>
          <target state="translated">[:graph:]</target>
        </trans-unit>
        <trans-unit id="36f002a8f57e089972d13fb35cdf7cb50753b4ec" translate="yes" xml:space="preserve">
          <source>[:lower:]</source>
          <target state="translated">[:lower:]</target>
        </trans-unit>
        <trans-unit id="96c6f19a2ec26b4ca8706f9fada3e397ef3d4402" translate="yes" xml:space="preserve">
          <source>[:multibyte:]</source>
          <target state="translated">[:multibyte:]</target>
        </trans-unit>
        <trans-unit id="bbcc7daa34bbfbf571c753dc197548aa4fe79489" translate="yes" xml:space="preserve">
          <source>[:nonascii:]</source>
          <target state="translated">[:nonascii:]</target>
        </trans-unit>
        <trans-unit id="6a4700c3f8d796a490753099cd8ba369d781e21a" translate="yes" xml:space="preserve">
          <source>[:print:]</source>
          <target state="translated">[:print:]</target>
        </trans-unit>
        <trans-unit id="0884729c97bed44aad0ffcf5ff3563854be867a9" translate="yes" xml:space="preserve">
          <source>[:punct:]</source>
          <target state="translated">[:punct:]</target>
        </trans-unit>
        <trans-unit id="ea405a150d88f722b178e52913b011c304385ce5" translate="yes" xml:space="preserve">
          <source>[:space:]</source>
          <target state="translated">[:space:]</target>
        </trans-unit>
        <trans-unit id="1a1d468b38ccda9349b2e209faedc430d49ae372" translate="yes" xml:space="preserve">
          <source>[:unibyte:]</source>
          <target state="translated">[:unibyte:]</target>
        </trans-unit>
        <trans-unit id="985a5973c64047e3a3c7d8de526c2a1a40ecaae2" translate="yes" xml:space="preserve">
          <source>[:upper:]</source>
          <target state="translated">[:upper:]</target>
        </trans-unit>
        <trans-unit id="73f18cd8a2f2dc4a446cd066725f9a97e9a9476f" translate="yes" xml:space="preserve">
          <source>[:word:]</source>
          <target state="translated">[:word:]</target>
        </trans-unit>
        <trans-unit id="7a71d6f1eeddfe5f75a1d723045a4e015efbb61e" translate="yes" xml:space="preserve">
          <source>[:xdigit:]</source>
          <target state="translated">[:xdigit:]</target>
        </trans-unit>
        <trans-unit id="276f013cda94340c0e0e7fd7e1520b322804a377" translate="yes" xml:space="preserve">
          <source>[&lt;var&gt;from&lt;/var&gt;..&lt;var&gt;to&lt;/var&gt;]</source>
          <target state="translated">[&lt;var&gt;from&lt;/var&gt;..&lt;var&gt;to&lt;/var&gt;]</target>
        </trans-unit>
        <trans-unit id="118a41a1ccd27e39efabbc6dfbb671aa7e57bc6c" translate="yes" xml:space="preserve">
          <source>[&lt;var&gt;optional-arg&lt;/var&gt;]</source>
          <target state="translated">[&lt;var&gt;optional-arg&lt;/var&gt;]</target>
        </trans-unit>
        <trans-unit id="22d257011f032b9adb9e6f17ebb5ddfaafd1b032" translate="yes" xml:space="preserve">
          <source>[?\C-\H-x home]</source>
          <target state="translated">[? \ C- \ Hx домой]</target>
        </trans-unit>
        <trans-unit id="4ba5a7b502eb763999de7549b9f71593d61859f7" translate="yes" xml:space="preserve">
          <source>[DEL]</source>
          <target state="translated">[DEL]</target>
        </trans-unit>
        <trans-unit id="d6a5e74455a327d0554791fee74b81ee64ed4c9e" translate="yes" xml:space="preserve">
          <source>[INS]</source>
          <target state="translated">[INS]</target>
        </trans-unit>
        <trans-unit id="37c4f2211eadce5bb7a765f1c50ba8ac90f72ae9" translate="yes" xml:space="preserve">
          <source>[Manual]</source>
          <target state="translated">[Manual]</target>
        </trans-unit>
        <trans-unit id="4dfb66a8c5b5102b00087c67023cc90ced001cec" translate="yes" xml:space="preserve">
          <source>[XYa-yYb-zX]</source>
          <target state="translated">[XYa-yYb-zX]</target>
        </trans-unit>
        <trans-unit id="147c9f0b3e491e6f3d6824f52cc541aeb2c89fb2" translate="yes" xml:space="preserve">
          <source>[XYa-z]</source>
          <target state="translated">[XYa-z]</target>
        </trans-unit>
        <trans-unit id="0d82241232a05e4ca13588ff385c2986ac3c9f1e" translate="yes" xml:space="preserve">
          <source>[[:&lt;var&gt;class&lt;/var&gt;:]]</source>
          <target state="translated">[[:&lt;var&gt;class&lt;/var&gt;:]]</target>
        </trans-unit>
        <trans-unit id="1246d2d1adbda600e44223536b15e99673e276fc" translate="yes" xml:space="preserve">
          <source>[[:alnum:]]+</source>
          <target state="translated">[[:alnum:]]+</target>
        </trans-unit>
        <trans-unit id="ea6c94973ae08ec52be2ff2effd909ce46f075f4" translate="yes" xml:space="preserve">
          <source>[[:ascii:]]</source>
          <target state="translated">[[:ascii:]]</target>
        </trans-unit>
        <trans-unit id="5f81c1b9d5411cfec040ad629fce7acf19641d5c" translate="yes" xml:space="preserve">
          <source>[\u0E01-\u0E3A\u0E3F-\u0E5B]</source>
          <target state="translated">[\u0E01-\u0E3A\u0E3F-\u0E5B]</target>
        </trans-unit>
        <trans-unit id="5087b737b3ecc52a600a2c96b006b06dcc14c434" translate="yes" xml:space="preserve">
          <source>[^ &amp;hellip; ]</source>
          <target state="translated">[^&amp;hellip;]</target>
        </trans-unit>
        <trans-unit id="5c693ec58dd2579a67f2549705b9a4c86bebc3ba" translate="yes" xml:space="preserve">
          <source>[^&amp;hellip;]</source>
          <target state="translated">[^&amp;hellip;]</target>
        </trans-unit>
        <trans-unit id="bb39ed2c198086ef983f84ea96ab03e825f3c623" translate="yes" xml:space="preserve">
          <source>[^[:ascii:]]</source>
          <target state="translated">[^[:ascii:]]</target>
        </trans-unit>
        <trans-unit id="c893b729639d6808bb7e9db74aa766368e4b0957" translate="yes" xml:space="preserve">
          <source>[^\]</source>
          <target state="translated">[^\]</target>
        </trans-unit>
        <trans-unit id="84027ade59d5fe1a9df7ef91114a28b11f6c4f67" translate="yes" xml:space="preserve">
          <source>[^a-z0-9A-Z]</source>
          <target state="translated">[^a-z0-9A-Z]</target>
        </trans-unit>
        <trans-unit id="556d1a0029f7da6fb7e26d9637f6628ff739a3cb" translate="yes" xml:space="preserve">
          <source>[^z-a]</source>
          <target state="translated">[^z-a]</target>
        </trans-unit>
        <trans-unit id="aee9651b5adc1f147736baf3e64beafe6c69a1b5" translate="yes" xml:space="preserve">
          <source>[`-~]</source>
          <target state="translated">[`-~]</target>
        </trans-unit>
        <trans-unit id="423e4b62335292deff7eb9fde1daee6516a5eeba" translate="yes" xml:space="preserve">
          <source>[`a-z{|}~]</source>
          <target state="translated">[`a-z{|}~]</target>
        </trans-unit>
        <trans-unit id="8e7965f4c396908525d410ae91893d1d2bb4e106" translate="yes" xml:space="preserve">
          <source>[a-a0]</source>
          <target state="translated">[a-a0]</target>
        </trans-unit>
        <trans-unit id="86be9db54d3af08374085e6223393004f710c4ad" translate="yes" xml:space="preserve">
          <source>[a-m-z]</source>
          <target state="translated">[a-m-z]</target>
        </trans-unit>
        <trans-unit id="81994cedf58ee82ea36ed3376be34bd77d2206b5" translate="yes" xml:space="preserve">
          <source>[a-z$%.]</source>
          <target state="translated">[a-z$%.]</target>
        </trans-unit>
        <trans-unit id="6395b1b5c03ad4c32bdee5a6be8d32171f15e65d" translate="yes" xml:space="preserve">
          <source>[a-z-]</source>
          <target state="translated">[a-z-]</target>
        </trans-unit>
        <trans-unit id="a0da97a2a929ec523c3e9f2e0aba6a1efba3fc61" translate="yes" xml:space="preserve">
          <source>[a-z]</source>
          <target state="translated">[a-z]</target>
        </trans-unit>
        <trans-unit id="3d4dcea6f7e1f116401a70c922c08fd2beb6625e" translate="yes" xml:space="preserve">
          <source>[a0]</source>
          <target state="translated">[a0]</target>
        </trans-unit>
        <trans-unit id="03b3a4613e299be8c6c0ed73d200dafbbd59eb49" translate="yes" xml:space="preserve">
          <source>[aB]</source>
          <target state="translated">[aB]</target>
        </trans-unit>
        <trans-unit id="6c0abf7e4785da39a67c0257df7d5d70bfbd5cea" translate="yes" xml:space="preserve">
          <source>[ad]</source>
          <target state="translated">[ad]</target>
        </trans-unit>
        <trans-unit id="b4d6893034b5e3a809e67c31a9ea83d389b2736f" translate="yes" xml:space="preserve">
          <source>[ad]*</source>
          <target state="translated">[ad]*</target>
        </trans-unit>
        <trans-unit id="377b624f58d16125a51983fe233ab74af1bd42d9" translate="yes" xml:space="preserve">
          <source>[ad]*?</source>
          <target state="translated">[ad]*?</target>
        </trans-unit>
        <trans-unit id="0d5ba9abdafef20cfcfcabbf14e3a10c626378cd" translate="yes" xml:space="preserve">
          <source>[i-j]</source>
          <target state="translated">[i-j]</target>
        </trans-unit>
        <trans-unit id="1bae2e6a68baf12829665e7101cd6e2cb5157591" translate="yes" xml:space="preserve">
          <source>[i-k]</source>
          <target state="translated">[i-k]</target>
        </trans-unit>
        <trans-unit id="12677cdbbaa5a36ff13c71a558520dd54203099e" translate="yes" xml:space="preserve">
          <source>[ij]</source>
          <target state="translated">[ij]</target>
        </trans-unit>
        <trans-unit id="1db3098df5b746be8788ae0ded47d45dcd9aa92b" translate="yes" xml:space="preserve">
          <source>[ijk]</source>
          <target state="translated">[ijk]</target>
        </trans-unit>
        <trans-unit id="c2f30e21cd9f84f7870359574e5b7fe2bc9ac42c" translate="yes" xml:space="preserve">
          <source>[z-a]</source>
          <target state="translated">[z-a]</target>
        </trans-unit>
        <trans-unit id="4ba04ba30eb77f13222fff5c4528f233d4be9a80" translate="yes" xml:space="preserve">
          <source>[ก-ฺ฿-๛]</source>
          <target state="translated">[ก-ฺ฿-๛]</target>
        </trans-unit>
        <trans-unit id="08534f33c201a45017b502e90a800f1b708ebcb3" translate="yes" xml:space="preserve">
          <source>\</source>
          <target state="translated">\</target>
        </trans-unit>
        <trans-unit id="ab006bb8aacdf6e68299bc1dffccc9bcc8ac3eaf" translate="yes" xml:space="preserve">
          <source>\&quot;</source>
          <target state="translated">\&quot;</target>
        </trans-unit>
        <trans-unit id="d713754a2f5429b28533071b75723dacd3ad9dc8" translate="yes" xml:space="preserve">
          <source>\$</source>
          <target state="translated">\$</target>
        </trans-unit>
        <trans-unit id="6ffcd413016c911d25260ecb424f0d1bcb26f571" translate="yes" xml:space="preserve">
          <source>\&amp;amp;</source>
          <target state="translated">\&amp;amp;</target>
        </trans-unit>
        <trans-unit id="0674c0fe5b9c2842c6e9699001c4cc702fe90c89" translate="yes" xml:space="preserve">
          <source>\&amp;gt;</source>
          <target state="translated">\&amp;gt;</target>
        </trans-unit>
        <trans-unit id="521c22f69c16eddb8cd5294cd7d4ab14f2fd96d8" translate="yes" xml:space="preserve">
          <source>\&amp;lt;</source>
          <target state="translated">\&amp;lt;</target>
        </trans-unit>
        <trans-unit id="7c3b6b03e00373e6bf97d9a5cecaaebaadc04370" translate="yes" xml:space="preserve">
          <source>\&amp;lt;&lt;var&gt;keymap&lt;/var&gt;&amp;gt;</source>
          <target state="translated">\&amp;lt;&lt;var&gt;keymap&lt;/var&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c78811037b1378ea2be22f5a0d100493c4ce3c8d" translate="yes" xml:space="preserve">
          <source>\&amp;lt;\(</source>
          <target state="translated">\&amp;lt;\(</target>
        </trans-unit>
        <trans-unit id="e32ea9ae1a5d0898134354e5fc56199a3c705918" translate="yes" xml:space="preserve">
          <source>\&amp;lt;f\w*\&amp;gt;</source>
          <target state="translated">\&amp;lt;f\w*\&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9ca863000c0131ce2b74e96a2de49fddf5ae1e10" translate="yes" xml:space="preserve">
          <source>\'</source>
          <target state="translated">\'</target>
        </trans-unit>
        <trans-unit id="6226971b34a982c0868cae196a821b0ff0498a84" translate="yes" xml:space="preserve">
          <source>\(</source>
          <target state="translated">\(</target>
        </trans-unit>
        <trans-unit id="d9210fed6ff19ae164fa4a08771cb415c655b35d" translate="yes" xml:space="preserve">
          <source>\( &amp;hellip; \)</source>
          <target state="translated">\ (&amp;hellip; \)</target>
        </trans-unit>
        <trans-unit id="79056355fcd548f300e79e1dc6571bca1d1808b2" translate="yes" xml:space="preserve">
          <source>\(&amp;hellip;\)</source>
          <target state="translated">\(&amp;hellip;\)</target>
        </trans-unit>
        <trans-unit id="c6b1a92fe08d8b4a58b1c0005a2f3c2d6f79d343" translate="yes" xml:space="preserve">
          <source>\(.*\)</source>
          <target state="translated">\(.*\)</target>
        </trans-unit>
        <trans-unit id="ffe2da11e27eca60e291fd03693138eee3f577dc" translate="yes" xml:space="preserve">
          <source>\(.*\)\1</source>
          <target state="translated">\(.*\)\1</target>
        </trans-unit>
        <trans-unit id="e80c8147c6dd88550778c7fd3ed3d61d56edcabd" translate="yes" xml:space="preserve">
          <source>\(...\)</source>
          <target state="translated">\(...\)</target>
        </trans-unit>
        <trans-unit id="446ac16fcd7feac2f7ae565aad94731686f2168b" translate="yes" xml:space="preserve">
          <source>\(?:</source>
          <target state="translated">\(?:</target>
        </trans-unit>
        <trans-unit id="5262066312127aab6f3df9b7e436a1319a5b8c36" translate="yes" xml:space="preserve">
          <source>\(?: &amp;hellip; \)</source>
          <target state="translated">\ (?:&amp;hellip; \)</target>
        </trans-unit>
        <trans-unit id="0a680dc91701e8907e72a15fa28614021c030869" translate="yes" xml:space="preserve">
          <source>\(?:&amp;hellip;\)</source>
          <target state="translated">\(?:&amp;hellip;\)</target>
        </trans-unit>
        <trans-unit id="1a3c6b531df3ece28eb6a8a69ec13f8410b258d9" translate="yes" xml:space="preserve">
          <source>\(?&lt;var&gt;n&lt;/var&gt;:&amp;hellip;\)</source>
          <target state="translated">\(?&lt;var&gt;n&lt;/var&gt;:&amp;hellip;\)</target>
        </trans-unit>
        <trans-unit id="10590a9ad03ce6b1c6cf4c8a2aa703a93b332633" translate="yes" xml:space="preserve">
          <source>\(?&lt;var&gt;num&lt;/var&gt;: &amp;hellip; \)</source>
          <target state="translated">\ (? &lt;var&gt;num&lt;/var&gt; :&amp;hellip; \)</target>
        </trans-unit>
        <trans-unit id="a902a90280b3d9d5fd59031e1d184024726fcf46" translate="yes" xml:space="preserve">
          <source>\(ba*r\)</source>
          <target state="translated">\(ba*r\)</target>
        </trans-unit>
        <trans-unit id="842b9e5fd229cdf5e6442595391f464e516f67cb" translate="yes" xml:space="preserve">
          <source>\(foo\(b*\)\|lose\)\2</source>
          <target state="translated">\(foo\(b*\)\|lose\)\2</target>
        </trans-unit>
        <trans-unit id="9059729433a98c764264378eb964b8f5d0c1028f" translate="yes" xml:space="preserve">
          <source>\(foo\|bar\)x</source>
          <target state="translated">\(foo\|bar\)x</target>
        </trans-unit>
        <trans-unit id="9ab03a42b5dbb498787e70c214c406175bfd5515" translate="yes" xml:space="preserve">
          <source>\(x*\)*</source>
          <target state="translated">\(x*\)*</target>
        </trans-unit>
        <trans-unit id="95a27da1f5a9ce4abfb3347aba532a9d71e57191" translate="yes" xml:space="preserve">
          <source>\(x+y*\)*a</source>
          <target state="translated">\(x+y*\)*a</target>
        </trans-unit>
        <trans-unit id="7b8c2fdd51dbaf559a3ead8bd197b367510384a9" translate="yes" xml:space="preserve">
          <source>\)</source>
          <target state="translated">\)</target>
        </trans-unit>
        <trans-unit id="103ec6eb736a187bdf0920d8aba6d9851277c3b4" translate="yes" xml:space="preserve">
          <source>\)\&amp;gt;</source>
          <target state="translated">\)\&amp;gt;</target>
        </trans-unit>
        <trans-unit id="63ba9a14d805e6a6b8903a280a3f80e9cdc2bdb7" translate="yes" xml:space="preserve">
          <source>\)\_&amp;gt;</source>
          <target state="translated">\)\_&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d4317fdc26437cb39ef7b1e25d9168a28794ee79" translate="yes" xml:space="preserve">
          <source>\001</source>
          <target state="translated">\001</target>
        </trans-unit>
        <trans-unit id="2de673b7fa2e0a0e52326460a59d3f726ea66d02" translate="yes" xml:space="preserve">
          <source>\1</source>
          <target state="translated">\1</target>
        </trans-unit>
        <trans-unit id="c016fb3c2d71f02e58827dbbb11225ca77cbae92" translate="yes" xml:space="preserve">
          <source>\2</source>
          <target state="translated">\2</target>
        </trans-unit>
        <trans-unit id="d0b8c7b863cf4449b021f6d37c0bdf6778137f63" translate="yes" xml:space="preserve">
          <source>\230</source>
          <target state="translated">\230</target>
        </trans-unit>
        <trans-unit id="3f3ddd7e378d6a97ad0b3c7d3e80aaef1aaffbf3" translate="yes" xml:space="preserve">
          <source>\9</source>
          <target state="translated">\9</target>
        </trans-unit>
        <trans-unit id="ea3d4522c960f37d7f56e95598a0b60979cbe2e6" translate="yes" xml:space="preserve">
          <source>\&lt;var&gt;digit&lt;/var&gt;</source>
          <target state="translated">\&lt;var&gt;digit&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="bf36052348e38be1be39a0beea666f9c31ec6629" translate="yes" xml:space="preserve">
          <source>\&lt;var&gt;n&lt;/var&gt;</source>
          <target state="translated">\&lt;var&gt;n&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="b9c84742bd468babcef33d3cb8848ed2b57f191f" translate="yes" xml:space="preserve">
          <source>\=</source>
          <target state="translated">\=</target>
        </trans-unit>
        <trans-unit id="7b907b8b8555612bfad20ba9a4c2838126bd65ad" translate="yes" xml:space="preserve">
          <source>\=\=</source>
          <target state="translated">\=\=</target>
        </trans-unit>
        <trans-unit id="e93c80053bfce51a5762432d480911933e2a2666" translate="yes" xml:space="preserve">
          <source>\=\[</source>
          <target state="translated">\=\[</target>
        </trans-unit>
        <trans-unit id="ebfab5b6318a693844f86f6529442e6d0842201e" translate="yes" xml:space="preserve">
          <source>\=`</source>
          <target state="translated">\=`</target>
        </trans-unit>
        <trans-unit id="1967f9b2e21f10c7ebc603769e0ebe941ec0d64e" translate="yes" xml:space="preserve">
          <source>\?</source>
          <target state="translated">\?</target>
        </trans-unit>
        <trans-unit id="2a58381e2c1c2f2ffb702f9e67ee72b93cde32b2" translate="yes" xml:space="preserve">
          <source>\A-</source>
          <target state="translated">\A-</target>
        </trans-unit>
        <trans-unit id="95bc0dc370dc108367da33cf82301a753f2e319e" translate="yes" xml:space="preserve">
          <source>\B</source>
          <target state="translated">\B</target>
        </trans-unit>
        <trans-unit id="6d5eaec347cfa4cc0c65baecc55531a51cca6dfa" translate="yes" xml:space="preserve">
          <source>\C-</source>
          <target state="translated">\C-</target>
        </trans-unit>
        <trans-unit id="e4166a8c92fc100fe8138332db6e651ea0aa52b6" translate="yes" xml:space="preserve">
          <source>\C&lt;var&gt;c&lt;/var&gt;</source>
          <target state="translated">\C&lt;var&gt;c&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="fa2dbae47baccb8578bb52e0a81011e3abe248b2" translate="yes" xml:space="preserve">
          <source>\C&lt;var&gt;code&lt;/var&gt;</source>
          <target state="translated">\C&lt;var&gt;code&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="cf0aa3440c86c766307437b6095e590dde229ab2" translate="yes" xml:space="preserve">
          <source>\H-</source>
          <target state="translated">\H-</target>
        </trans-unit>
        <trans-unit id="3587e40143c0dbbd2d7b314e1af2d358046d8b40" translate="yes" xml:space="preserve">
          <source>\M-</source>
          <target state="translated">\M-</target>
        </trans-unit>
        <trans-unit id="5abfb32523185e5f54d61feaa08e7cb2ef092606" translate="yes" xml:space="preserve">
          <source>\S-</source>
          <target state="translated">\S-</target>
        </trans-unit>
        <trans-unit id="795c363da7a4cc972165fe480488d4ca9976d8be" translate="yes" xml:space="preserve">
          <source>\S&lt;var&gt;code&lt;/var&gt;</source>
          <target state="translated">\S&lt;var&gt;code&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="ba7c636e514f58789072538028569823681faf9d" translate="yes" xml:space="preserve">
          <source>\U00NNNNNN</source>
          <target state="translated">\U00NNNNNN</target>
        </trans-unit>
        <trans-unit id="dd763376ee8ab23121ea96f020a65565c5e68687" translate="yes" xml:space="preserve">
          <source>\W</source>
          <target state="translated">\W</target>
        </trans-unit>
        <trans-unit id="b4ab9888ef92ead7b21a3c7e8dd91a2e77d98230" translate="yes" xml:space="preserve">
          <source>\[</source>
          <target state="translated">\[</target>
        </trans-unit>
        <trans-unit id="c5cef0c84f05947e1da2b7fc2049dd672f532c97" translate="yes" xml:space="preserve">
          <source>\[&lt;var&gt;command&lt;/var&gt;]</source>
          <target state="translated">\[&lt;var&gt;command&lt;/var&gt;]</target>
        </trans-unit>
        <trans-unit id="9e94758983980504af303ef297fd2bf9d9cea063" translate="yes" xml:space="preserve">
          <source>\\</source>
          <target state="translated">\\</target>
        </trans-unit>
        <trans-unit id="181a0753b3fe2a4d795730d55277a7fe8c24bcc3" translate="yes" xml:space="preserve">
          <source>\\(\\sw\\|\\s_\\)+</source>
          <target state="translated">\\(\\sw\\|\\s_\\)+</target>
        </trans-unit>
        <trans-unit id="fc7cbf2bdfb940bfdae1229f28a4cde7f630b6b0" translate="yes" xml:space="preserve">
          <source>\\.\COM10</source>
          <target state="translated">\\.\COM10</target>
        </trans-unit>
        <trans-unit id="5a6ccc13b9cd760c08582c1976c9225e148b1609" translate="yes" xml:space="preserve">
          <source>\\[...]</source>
          <target state="translated">\\[...]</target>
        </trans-unit>
        <trans-unit id="512bb4099826ee32980158bdee23219738278088" translate="yes" xml:space="preserve">
          <source>\\sw+</source>
          <target state="translated">\\sw+</target>
        </trans-unit>
        <trans-unit id="537d27161a67db8be85295137fdab2efd401ca57" translate="yes" xml:space="preserve">
          <source>\_&amp;gt;</source>
          <target state="translated">\_&amp;gt;</target>
        </trans-unit>
        <trans-unit id="66db9f43e1ddaff6b0ef3ea5f7dbe1bba07c4c98" translate="yes" xml:space="preserve">
          <source>\_&amp;lt;</source>
          <target state="translated">\_&amp;lt;</target>
        </trans-unit>
        <trans-unit id="2028482cf71f36399420ce1217d0cf45ed8c36b9" translate="yes" xml:space="preserve">
          <source>\_&amp;lt;\(</source>
          <target state="translated">\_&amp;lt;\(</target>
        </trans-unit>
        <trans-unit id="b302788f6bbb39476ae634f9d7e0bd038ea24834" translate="yes" xml:space="preserve">
          <source>\`</source>
          <target state="translated">\`</target>
        </trans-unit>
        <trans-unit id="4629ca1b60e263bdc4326334b23323e0434717a5" translate="yes" xml:space="preserve">
          <source>\b</source>
          <target state="translated">\b</target>
        </trans-unit>
        <trans-unit id="8f9b02f0aa3592d6ecdc282edb24043f9b01c77b" translate="yes" xml:space="preserve">
          <source>\bballs?\b</source>
          <target state="translated">\bballs?\b</target>
        </trans-unit>
        <trans-unit id="c2c708b9d3c208586594c8767c31348ecab3e39a" translate="yes" xml:space="preserve">
          <source>\bfoo\b</source>
          <target state="translated">\bfoo\b</target>
        </trans-unit>
        <trans-unit id="f9c6037a49fa5188b35d4eaf5b5bc39b84a40811" translate="yes" xml:space="preserve">
          <source>\c&lt;var&gt;c&lt;/var&gt;</source>
          <target state="translated">\c&lt;var&gt;c&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="7c10f3a2df858b7c658a708e30d3987738d58808" translate="yes" xml:space="preserve">
          <source>\c&lt;var&gt;code&lt;/var&gt;</source>
          <target state="translated">\c&lt;var&gt;code&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="794a729d2e4ffbb094fec03ae9b3acd219371385" translate="yes" xml:space="preserve">
          <source>\f</source>
          <target state="translated">\f</target>
        </trans-unit>
        <trans-unit id="ef7e6794ca9c6a06b54b66f279237fb8daaaeea8" translate="yes" xml:space="preserve">
          <source>\n</source>
          <target state="translated">\n</target>
        </trans-unit>
        <trans-unit id="e1c702e348504013ae2a1faa8cec6a558f9315a8" translate="yes" xml:space="preserve">
          <source>\s</source>
          <target state="translated">\s</target>
        </trans-unit>
        <trans-unit id="a92a54233120d0e800990f99e0c682539eaface7" translate="yes" xml:space="preserve">
          <source>\s-</source>
          <target state="translated">\s-</target>
        </trans-unit>
        <trans-unit id="197d841fa9fb2eb3cdd3854366a33745a4787040" translate="yes" xml:space="preserve">
          <source>\s&lt;var&gt;code&lt;/var&gt;</source>
          <target state="translated">\s&lt;var&gt;code&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="8bf81043e29dfc96a6fe1f30f7116f552de6e7d7" translate="yes" xml:space="preserve">
          <source>\t</source>
          <target state="translated">\t</target>
        </trans-unit>
        <trans-unit id="fae64705e1d51309b68b8bee9ec088553b81876e" translate="yes" xml:space="preserve">
          <source>\uNNNN</source>
          <target state="translated">\uNNNN</target>
        </trans-unit>
        <trans-unit id="84a1312a8a946a90cf99ad056ddaeb081ebe238e" translate="yes" xml:space="preserve">
          <source>\w</source>
          <target state="translated">\w</target>
        </trans-unit>
        <trans-unit id="3149b2b83eb5b14b5d4aaaa2d022394b58be2573" translate="yes" xml:space="preserve">
          <source>\x&lt;var&gt;n&lt;/var&gt;</source>
          <target state="translated">\x&lt;var&gt;n&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="c27b8309dd3ebe3c44adcaadac01ddd01055c738" translate="yes" xml:space="preserve">
          <source>\xe0\</source>
          <target state="translated">\xe0\</target>
        </trans-unit>
        <trans-unit id="3573175dc565405bd7441863e2029d2d321df833" translate="yes" xml:space="preserve">
          <source>\{,1\}</source>
          <target state="translated">\{,1\}</target>
        </trans-unit>
        <trans-unit id="6d499d9e3bc331617d426b261a22596ede69bd8a" translate="yes" xml:space="preserve">
          <source>\{,\}</source>
          <target state="translated">\{,\}</target>
        </trans-unit>
        <trans-unit id="1bebf3720e0772ff068fdb4902dbb92249cb4bb6" translate="yes" xml:space="preserve">
          <source>\{0,1\}</source>
          <target state="translated">\{0,1\}</target>
        </trans-unit>
        <trans-unit id="465f004ce9d90d9bb86fa6b853aed7ec84ca91cb" translate="yes" xml:space="preserve">
          <source>\{0,\}</source>
          <target state="translated">\{0,\}</target>
        </trans-unit>
        <trans-unit id="5848affbf60f5bef81e10b50a4f3dfe8cc89aafa" translate="yes" xml:space="preserve">
          <source>\{1,\}</source>
          <target state="translated">\{1,\}</target>
        </trans-unit>
        <trans-unit id="7b8bb60c66482cc64c71319de5a770dbbc58dbfa" translate="yes" xml:space="preserve">
          <source>\{&lt;var&gt;keymap&lt;/var&gt;}</source>
          <target state="translated">\{&lt;var&gt;keymap&lt;/var&gt;}</target>
        </trans-unit>
        <trans-unit id="68d17f7b12aeaf27d730efe901cb3ce2e17c4362" translate="yes" xml:space="preserve">
          <source>\{&lt;var&gt;m&lt;/var&gt;,&lt;var&gt;n&lt;/var&gt;\}</source>
          <target state="translated">\{&lt;var&gt;m&lt;/var&gt;,&lt;var&gt;n&lt;/var&gt;\}</target>
        </trans-unit>
        <trans-unit id="dd633f08e22338177f7f09984ef3fbae094ca79b" translate="yes" xml:space="preserve">
          <source>\{&lt;var&gt;m&lt;/var&gt;\}</source>
          <target state="translated">\{&lt;var&gt;m&lt;/var&gt;\}</target>
        </trans-unit>
        <trans-unit id="75f55739a2cf803c528710550991a95420fe2ddb" translate="yes" xml:space="preserve">
          <source>\|</source>
          <target state="translated">\|</target>
        </trans-unit>
        <trans-unit id="85e31d55324b34266a6703175212a2ea8282a925" translate="yes" xml:space="preserve">
          <source>^A</source>
          <target state="translated">^A</target>
        </trans-unit>
        <trans-unit id="e7fca6d8f1a9367c717af192e0b0dcba2c5cb68a" translate="yes" xml:space="preserve">
          <source>^L</source>
          <target state="translated">^L</target>
        </trans-unit>
        <trans-unit id="b23707ffb23d2608097e4174e7c475d4ca808677" translate="yes" xml:space="preserve">
          <source>^foo</source>
          <target state="translated">^foo</target>
        </trans-unit>
        <trans-unit id="deb8ccf25fe4c28454012c03785eb57ded7283e7" translate="yes" xml:space="preserve">
          <source>_Noreturn</source>
          <target state="translated">_Noreturn</target>
        </trans-unit>
        <trans-unit id="1927546ecc48790395f3739c5386ecc7c6b3b072" translate="yes" xml:space="preserve">
          <source>_~!@$%^&amp;amp;:&amp;lt;&amp;gt;{}?</source>
          <target state="translated">_~!@$%^&amp;amp;:&amp;lt;&amp;gt;{}?</target>
        </trans-unit>
        <trans-unit id="7e15bb5c01e7dd56499e37c634cf791d3a519aee" translate="yes" xml:space="preserve">
          <source>`</source>
          <target state="translated">`</target>
        </trans-unit>
        <trans-unit id="effd53c64bed7ff6ede6e81e7f15d11111daa224" translate="yes" xml:space="preserve">
          <source>`like this'</source>
          <target state="translated">`как это '</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="f86953c3dd91feb188fa353bfd696a6a142dc802" translate="yes" xml:space="preserve">
          <source>a &lt;var&gt;file&lt;/var&gt; attribute was changed</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; атрибут был изменен</target>
        </trans-unit>
        <trans-unit id="dcf6f0a6a279755af19e17261032e7ab76f14d24" translate="yes" xml:space="preserve">
          <source>a buffer</source>
          <target state="translated">буфер</target>
        </trans-unit>
        <trans-unit id="ba5c69691fe7dcb0f5492dea8f6685fad9953249" translate="yes" xml:space="preserve">
          <source>a buffer name (a string)</source>
          <target state="translated">имя буфера (строка)</target>
        </trans-unit>
        <trans-unit id="96209eeedd22efea63befcb2f2889c362324a49d" translate="yes" xml:space="preserve">
          <source>a cons cell</source>
          <target state="translated">консьержка</target>
        </trans-unit>
        <trans-unit id="a7bf39a7aa4533fae185ed3396ec14da3dc8440a" translate="yes" xml:space="preserve">
          <source>a cons cell &lt;code&gt;(&lt;var&gt;graphical&lt;/var&gt; . &lt;var&gt;text&lt;/var&gt;)&lt;/code&gt;</source>
          <target state="translated">cons-ячейка &lt;code&gt;(&lt;var&gt;graphical&lt;/var&gt; . &lt;var&gt;text&lt;/var&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d4d51ccf0158540ecbfa6183866a2dc7228b7e2e" translate="yes" xml:space="preserve">
          <source>a floating-point value</source>
          <target state="translated">плавающая запятая</target>
        </trans-unit>
        <trans-unit id="fca5763a93bd77ffb39288f08e68cf8e96fcacb0" translate="yes" xml:space="preserve">
          <source>a function</source>
          <target state="translated">функция</target>
        </trans-unit>
        <trans-unit id="f583c9992ce428b42da72b94d362e8df4caab665" translate="yes" xml:space="preserve">
          <source>a glyph code</source>
          <target state="translated">глиф-код</target>
        </trans-unit>
        <trans-unit id="e3206e3d9903d6b482a1ec57beb3831b1014b556" translate="yes" xml:space="preserve">
          <source>a list</source>
          <target state="translated">список</target>
        </trans-unit>
        <trans-unit id="9ad4b2f96cfd13d71b7876f2835e8f3b9850107d" translate="yes" xml:space="preserve">
          <source>a list of buffer-local variable bindings (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;).</source>
          <target state="translated">список привязок переменных локальной буфера (см. &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Локальные переменные буфера&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8aa18e81b47642b632c2119bf7f7121ca85a8229" translate="yes" xml:space="preserve">
          <source>a local keymap (see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;); and,</source>
          <target state="translated">локальная &lt;a href=&quot;keymaps#Keymaps&quot;&gt;раскладка клавиатуры&lt;/a&gt; (см. Раскладки клавиатуры ); и,</target>
        </trans-unit>
        <trans-unit id="5bdea77ac6426ddf792797324dff5e0cd49c3e1e" translate="yes" xml:space="preserve">
          <source>a local syntax table (see &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;);</source>
          <target state="translated">локальная таблица синтаксиса (см. &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Таблицы синтаксиса&lt;/a&gt; );</target>
        </trans-unit>
        <trans-unit id="1d138ee70c40a571f53900806384a5c9f9d176ea" translate="yes" xml:space="preserve">
          <source>a marker</source>
          <target state="translated">маркер</target>
        </trans-unit>
        <trans-unit id="c37f5d4c24ebe19faceff2fa752f48ced17e4bc7" translate="yes" xml:space="preserve">
          <source>a number</source>
          <target state="translated">число</target>
        </trans-unit>
        <trans-unit id="1cf08907c20af74dbafbd5d9fab58c4c2c99704f" translate="yes" xml:space="preserve">
          <source>a number, &lt;var&gt;factor&lt;/var&gt;</source>
          <target state="translated">число, &lt;var&gt;factor&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="48690dc4bbe6fa410b9f0227874582961d09ca4e" translate="yes" xml:space="preserve">
          <source>a prefix key in the local keymap, in such a way that</source>
          <target state="translated">префиксный ключ в локальной ключевой карте,таким образом,чтобы</target>
        </trans-unit>
        <trans-unit id="1b0ec7471233bc1d7240306620f32499b6c0a661" translate="yes" xml:space="preserve">
          <source>a rectangle</source>
          <target state="translated">прямоугольник</target>
        </trans-unit>
        <trans-unit id="60300ac1168a0d3227ac869dd139121b3e9c03dd" translate="yes" xml:space="preserve">
          <source>a regular expression</source>
          <target state="translated">регулярное выражение</target>
        </trans-unit>
        <trans-unit id="555d01e6c83266b3e9f92bd811905370caf62770" translate="yes" xml:space="preserve">
          <source>a string</source>
          <target state="translated">струна</target>
        </trans-unit>
        <trans-unit id="8406980d7ae05fccc52eafb4af56b4cee538dee9" translate="yes" xml:space="preserve">
          <source>a string or vector</source>
          <target state="translated">строка или вектор</target>
        </trans-unit>
        <trans-unit id="94c892fc69517e7275b6439c9862d88dc6d51ab9" translate="yes" xml:space="preserve">
          <source>a symbol</source>
          <target state="translated">символ</target>
        </trans-unit>
        <trans-unit id="6799304ed80963bf9bdbca491146c3d574dc98d5" translate="yes" xml:space="preserve">
          <source>a symbol, &lt;var&gt;function&lt;/var&gt;</source>
          <target state="translated">символ, &lt;var&gt;function&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="1ecf1381c93094fda27556be04beb19a33e53e8b" translate="yes" xml:space="preserve">
          <source>a symbol, &lt;var&gt;symbol&lt;/var&gt;</source>
          <target state="translated">символ, &lt;var&gt;symbol&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="1fdb5f6c02d6b5f86e2e1882dcedad289e91f303" translate="yes" xml:space="preserve">
          <source>a window</source>
          <target state="translated">окно</target>
        </trans-unit>
        <trans-unit id="308ab8140c595dbad9d3ac81515fac02e6c3e988" translate="yes" xml:space="preserve">
          <source>a*</source>
          <target state="translated">a*</target>
        </trans-unit>
        <trans-unit id="69f6642c9d71b463485b4faf4e989dc3fe77a8c6" translate="yes" xml:space="preserve">
          <source>a.b</source>
          <target state="translated">a.b</target>
        </trans-unit>
        <trans-unit id="3ec69c85a4ff96830024afeef2d4e512181c8f7b" translate="yes" xml:space="preserve">
          <source>a/b</source>
          <target state="translated">a/b</target>
        </trans-unit>
        <trans-unit id="ee2be6da91ae879476b152d7ca041f1b683907d0" translate="yes" xml:space="preserve">
          <source>a/b/c</source>
          <target state="translated">a/b/c</target>
        </trans-unit>
        <trans-unit id="378e7a5b72f1d230a631ca8d369607ca69afb621" translate="yes" xml:space="preserve">
          <source>a[i] = x</source>
          <target state="translated">a[i]=x</target>
        </trans-unit>
        <trans-unit id="b0f9a29f8387167e91e7920581c5bab37c2f98bb" translate="yes" xml:space="preserve">
          <source>abbrev-all-caps</source>
          <target state="translated">abbrev-all-caps</target>
        </trans-unit>
        <trans-unit id="90f9b829eb6464830836528e28a3055be5dddcf3" translate="yes" xml:space="preserve">
          <source>abbrev-expand-function</source>
          <target state="translated">abbrev-expand-function</target>
        </trans-unit>
        <trans-unit id="64aadbc15867dca890cf12670e2bea6f10497631" translate="yes" xml:space="preserve">
          <source>abbrev-expansion</source>
          <target state="translated">abbrev-expansion</target>
        </trans-unit>
        <trans-unit id="c0aba5d3634b9ea832b9f37645e574fc163c89eb" translate="yes" xml:space="preserve">
          <source>abbrev-file-name</source>
          <target state="translated">abbrev-file-name</target>
        </trans-unit>
        <trans-unit id="ed35de2ebca31bf684e38db844f7e4f383ccda18" translate="yes" xml:space="preserve">
          <source>abbrev-get</source>
          <target state="translated">abbrev-get</target>
        </trans-unit>
        <trans-unit id="fd92599594970802c5dde91382848553bd04b95a" translate="yes" xml:space="preserve">
          <source>abbrev-insert</source>
          <target state="translated">abbrev-insert</target>
        </trans-unit>
        <trans-unit id="f55d20aa4b67bb0848505f5f21a9f6f8959b8cb7" translate="yes" xml:space="preserve">
          <source>abbrev-minor-mode-table-alist</source>
          <target state="translated">abbrev-minor-mode-table-alist</target>
        </trans-unit>
        <trans-unit id="47ec8937783b078c6436311c191c57a4d2ba4d92" translate="yes" xml:space="preserve">
          <source>abbrev-prefix-mark</source>
          <target state="translated">abbrev-prefix-mark</target>
        </trans-unit>
        <trans-unit id="0657b7dbe6d56e3b2c2e2a10ae61cd2c08aa9f8f" translate="yes" xml:space="preserve">
          <source>abbrev-put</source>
          <target state="translated">abbrev-put</target>
        </trans-unit>
        <trans-unit id="d5cbc24c194dced7676177553bbc929778fb1b40" translate="yes" xml:space="preserve">
          <source>abbrev-start-location</source>
          <target state="translated">abbrev-start-location</target>
        </trans-unit>
        <trans-unit id="6bb5dd6daa6b40b1fce17f14d733624d4ca93d64" translate="yes" xml:space="preserve">
          <source>abbrev-start-location-buffer</source>
          <target state="translated">abbrev-start-location-buffer</target>
        </trans-unit>
        <trans-unit id="ddc566799892329cacf09273a98ce28f0e207631" translate="yes" xml:space="preserve">
          <source>abbrev-symbol</source>
          <target state="translated">abbrev-symbol</target>
        </trans-unit>
        <trans-unit id="6775bce3f1091a9e55f97960f46c114eb1284f42" translate="yes" xml:space="preserve">
          <source>abbrev-table-get</source>
          <target state="translated">abbrev-table-get</target>
        </trans-unit>
        <trans-unit id="72fe8e8ed8bad683f4c0170456fc25646359a78f" translate="yes" xml:space="preserve">
          <source>abbrev-table-name-list</source>
          <target state="translated">abbrev-table-name-list</target>
        </trans-unit>
        <trans-unit id="c7764ddcd16c0ce2cbca184a1aaa194f6cb44c90" translate="yes" xml:space="preserve">
          <source>abbrev-table-p</source>
          <target state="translated">abbrev-table-p</target>
        </trans-unit>
        <trans-unit id="7f4754234cac65c7bdac6187ff50ccfa12276a9b" translate="yes" xml:space="preserve">
          <source>abbrev-table-put</source>
          <target state="translated">abbrev-table-put</target>
        </trans-unit>
        <trans-unit id="e4508d4ac9a33a48aef987b584aeee176d7e5731" translate="yes" xml:space="preserve">
          <source>abbreviate-file-name</source>
          <target state="translated">abbreviate-file-name</target>
        </trans-unit>
        <trans-unit id="ac42dc39c509ffe41dd367bae7ab4d8aec0103f6" translate="yes" xml:space="preserve">
          <source>abbrevs-changed</source>
          <target state="translated">abbrevs-changed</target>
        </trans-unit>
        <trans-unit id="a9993e364706816aba3e25717850c26c9cd0d89d" translate="yes" xml:space="preserve">
          <source>abc</source>
          <target state="translated">abc</target>
        </trans-unit>
        <trans-unit id="ab2780e3d97faa5b51b44bdd0c4aa32c78344d6d" translate="yes" xml:space="preserve">
          <source>abort-recursive-edit</source>
          <target state="translated">abort-recursive-edit</target>
        </trans-unit>
        <trans-unit id="82451b41fd7878180b6aa2b54e369cbec4e8032c" translate="yes" xml:space="preserve">
          <source>abs</source>
          <target state="translated">abs</target>
        </trans-unit>
        <trans-unit id="06653551f2bec9c2d63d3e0cba6db2106798339b" translate="yes" xml:space="preserve">
          <source>accept-change-group</source>
          <target state="translated">accept-change-group</target>
        </trans-unit>
        <trans-unit id="e84f857bfa3606a01c9d9c3be0d4a15cf2447c37" translate="yes" xml:space="preserve">
          <source>accept-process-output</source>
          <target state="translated">accept-process-output</target>
        </trans-unit>
        <trans-unit id="67fa2dcb99c9f8e87bed79c99ec87cd5184bb6ed" translate="yes" xml:space="preserve">
          <source>access-file</source>
          <target state="translated">access-file</target>
        </trans-unit>
        <trans-unit id="66eb838940a63ceb9e3ed17c05d82bf065d5ea2a" translate="yes" xml:space="preserve">
          <source>accessible-keymaps</source>
          <target state="translated">accessible-keymaps</target>
        </trans-unit>
        <trans-unit id="328f0742cf74e8ffdb253376b1803615055e215b" translate="yes" xml:space="preserve">
          <source>acos</source>
          <target state="translated">acos</target>
        </trans-unit>
        <trans-unit id="4b8091654c7e7d22508f6c852329f2aca790d17f" translate="yes" xml:space="preserve">
          <source>activate-change-group</source>
          <target state="translated">activate-change-group</target>
        </trans-unit>
        <trans-unit id="df5835d8fa06288b7ec31102790415680d984736" translate="yes" xml:space="preserve">
          <source>activate-mark-hook</source>
          <target state="translated">activate-mark-hook</target>
        </trans-unit>
        <trans-unit id="85ab6457d485c1f107f68a9ce08ef13756018052" translate="yes" xml:space="preserve">
          <source>active-minibuffer-window</source>
          <target state="translated">active-minibuffer-window</target>
        </trans-unit>
        <trans-unit id="912023acb550a9ae675eb84733dfa4596533ba9f" translate="yes" xml:space="preserve">
          <source>actually works by changing an entry in &lt;code&gt;ctl-x-map&lt;/code&gt;, and this has the effect of changing the bindings of both</source>
          <target state="translated">на самом деле работает, изменяя запись в &lt;code&gt;ctl-x-map&lt;/code&gt; , и это имеет эффект изменения привязки обоих</target>
        </trans-unit>
        <trans-unit id="eac92748b8b9a7e17c67ff451ce666f9a273ff8e" translate="yes" xml:space="preserve">
          <source>adaptive-fill-first-line-regexp</source>
          <target state="translated">adaptive-fill-first-line-regexp</target>
        </trans-unit>
        <trans-unit id="0a55e085e282ffbc92b4d8b36b746561e294f2be" translate="yes" xml:space="preserve">
          <source>adaptive-fill-function</source>
          <target state="translated">adaptive-fill-function</target>
        </trans-unit>
        <trans-unit id="368ae8c059d91df24d567f2dd38e5b281327e122" translate="yes" xml:space="preserve">
          <source>adaptive-fill-mode</source>
          <target state="translated">adaptive-fill-mode</target>
        </trans-unit>
        <trans-unit id="0e6901052be87b1077913d4235d33372871e29c2" translate="yes" xml:space="preserve">
          <source>adaptive-fill-regexp</source>
          <target state="translated">adaptive-fill-regexp</target>
        </trans-unit>
        <trans-unit id="5fcd58b9e6f65ea2e9d7aa8e404eeb5d34259d74" translate="yes" xml:space="preserve">
          <source>add-face-text-property</source>
          <target state="translated">add-face-text-property</target>
        </trans-unit>
        <trans-unit id="362df00e54b7ea2ab36885a1593164fb8c7ee359" translate="yes" xml:space="preserve">
          <source>add-function</source>
          <target state="translated">add-function</target>
        </trans-unit>
        <trans-unit id="d543acc4f92d2540876d091043075058eb4085b4" translate="yes" xml:space="preserve">
          <source>add-hook</source>
          <target state="translated">add-hook</target>
        </trans-unit>
        <trans-unit id="f8298ba605df840f55782fc14bee2a4df1713119" translate="yes" xml:space="preserve">
          <source>add-name-to-file</source>
          <target state="translated">add-name-to-file</target>
        </trans-unit>
        <trans-unit id="7999f2aabdcc2ea549966aea0060fa3c3dc59c41" translate="yes" xml:space="preserve">
          <source>add-text-properties</source>
          <target state="translated">add-text-properties</target>
        </trans-unit>
        <trans-unit id="e0ac4b26263a6fee52c3f404204ed7bdd69f41f8" translate="yes" xml:space="preserve">
          <source>add-to-history</source>
          <target state="translated">add-to-history</target>
        </trans-unit>
        <trans-unit id="90bbd7a33c89135cc8085b561e4d2335a8b50249" translate="yes" xml:space="preserve">
          <source>add-to-invisibility-spec</source>
          <target state="translated">add-to-invisibility-spec</target>
        </trans-unit>
        <trans-unit id="81a42179ffe9eb53331b112999d1c8bd72c93219" translate="yes" xml:space="preserve">
          <source>add-to-list</source>
          <target state="translated">add-to-list</target>
        </trans-unit>
        <trans-unit id="b12d32108f0712b7c262c0663300960ff549c22e" translate="yes" xml:space="preserve">
          <source>add-to-ordered-list</source>
          <target state="translated">add-to-ordered-list</target>
        </trans-unit>
        <trans-unit id="728f5317e44ead5a4097a1d00a52975c65a9d861" translate="yes" xml:space="preserve">
          <source>add-variable-watcher</source>
          <target state="translated">add-variable-watcher</target>
        </trans-unit>
        <trans-unit id="e075d4f78f76511a55006aa90d853a37451a3558" translate="yes" xml:space="preserve">
          <source>adds &lt;code&gt;my-text-hook-function&lt;/code&gt; to the hook called &lt;code&gt;text-mode-hook&lt;/code&gt;.</source>
          <target state="translated">добавляет &lt;code&gt;my-text-hook-function&lt;/code&gt; к перехватчику с именем &lt;code&gt;text-mode-hook&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e92b3f340e645b0cf632829072b615b0f3fae25" translate="yes" xml:space="preserve">
          <source>adjust-window-trailing-edge</source>
          <target state="translated">adjust-window-trailing-edge</target>
        </trans-unit>
        <trans-unit id="da397a984c228db8504051ab813794ef542f9dbd" translate="yes" xml:space="preserve">
          <source>advice-add</source>
          <target state="translated">advice-add</target>
        </trans-unit>
        <trans-unit id="f2f1617428855ab8e93455ca76d4b6eee7bfb5ae" translate="yes" xml:space="preserve">
          <source>advice-eval-interactive-spec</source>
          <target state="translated">advice-eval-interactive-spec</target>
        </trans-unit>
        <trans-unit id="3d9190d99e18108e83a26be36de1a9df76acb9b2" translate="yes" xml:space="preserve">
          <source>advice-function-mapc</source>
          <target state="translated">advice-function-mapc</target>
        </trans-unit>
        <trans-unit id="7ef9de6831ee9fccf99973db97c843ac6d6a58c3" translate="yes" xml:space="preserve">
          <source>advice-function-member-p</source>
          <target state="translated">advice-function-member-p</target>
        </trans-unit>
        <trans-unit id="ddfd72a0be23dd00cac2115cd957143435b68b72" translate="yes" xml:space="preserve">
          <source>advice-mapc</source>
          <target state="translated">advice-mapc</target>
        </trans-unit>
        <trans-unit id="cc2d22aec47ce30ee4b510425a3d03fa456f93bd" translate="yes" xml:space="preserve">
          <source>advice-member-p</source>
          <target state="translated">advice-member-p</target>
        </trans-unit>
        <trans-unit id="aafa4c093fd51eb2105c09f99b28bf27a5ad5a37" translate="yes" xml:space="preserve">
          <source>advice-remove</source>
          <target state="translated">advice-remove</target>
        </trans-unit>
        <trans-unit id="3f4db60e8d59d2d3075150f757377900ea75bb5a" translate="yes" xml:space="preserve">
          <source>after-change-functions</source>
          <target state="translated">after-change-functions</target>
        </trans-unit>
        <trans-unit id="b8de09de57826fdeb467ca065bed02230ec0f8c3" translate="yes" xml:space="preserve">
          <source>after-change-major-mode-hook</source>
          <target state="translated">after-change-major-mode-hook</target>
        </trans-unit>
        <trans-unit id="b4e9dcc4d3dba4a3a74234f2197bb59d9af4f9cc" translate="yes" xml:space="preserve">
          <source>after-find-file</source>
          <target state="translated">after-find-file</target>
        </trans-unit>
        <trans-unit id="d1daad89250e323af3643367ce583f36d073a483" translate="yes" xml:space="preserve">
          <source>after-focus-change-function</source>
          <target state="translated">after-focus-change-function</target>
        </trans-unit>
        <trans-unit id="d7d3e09ba335197cbd6bb1e128976aae52331709" translate="yes" xml:space="preserve">
          <source>after-init-hook</source>
          <target state="translated">after-init-hook</target>
        </trans-unit>
        <trans-unit id="626148d64ad837aa507a8653180b15cb25d5b891" translate="yes" xml:space="preserve">
          <source>after-insert-file-functions</source>
          <target state="translated">after-insert-file-functions</target>
        </trans-unit>
        <trans-unit id="e374803b5550b696e1e6696ce5d7d9caf2078c03" translate="yes" xml:space="preserve">
          <source>after-load-functions</source>
          <target state="translated">after-load-functions</target>
        </trans-unit>
        <trans-unit id="fab2e820859f36159d07a03a03e53a3da2bb8e30" translate="yes" xml:space="preserve">
          <source>after-make-frame-functions</source>
          <target state="translated">after-make-frame-functions</target>
        </trans-unit>
        <trans-unit id="c09a4e037af9e4e568eff8b0601018b127b567c2" translate="yes" xml:space="preserve">
          <source>after-revert-hook</source>
          <target state="translated">after-revert-hook</target>
        </trans-unit>
        <trans-unit id="ab558f90eefa78c995c7525b6c72e3cd16a96405" translate="yes" xml:space="preserve">
          <source>after-save-hook</source>
          <target state="translated">after-save-hook</target>
        </trans-unit>
        <trans-unit id="703fe58832eac76ac1e008a993356696b6c0261a" translate="yes" xml:space="preserve">
          <source>again will collapse back to the original state.</source>
          <target state="translated">снова рухнет обратно в исходное состояние.</target>
        </trans-unit>
        <trans-unit id="193e40d4ccdcae0e81746c3fd2a7bc4a66155992" translate="yes" xml:space="preserve">
          <source>again without changing the buffer text, the evaluation list is effectively unchanged.</source>
          <target state="translated">снова без изменения текста буфера,список оценок фактически остается неизменным.</target>
        </trans-unit>
        <trans-unit id="5b0d2bcb9c51734cc66248084ebae62a52660166" translate="yes" xml:space="preserve">
          <source>again. If the old indentation actually fit the intended nesting of parentheses, and you have put back those parentheses,</source>
          <target state="translated">Опять.Если старый отпечаток действительно подходит к предполагаемому гнезду скобок,и вы положили эти скобки обратно,</target>
        </trans-unit>
        <trans-unit id="4cc71e8d9620617dbc0f33f4e09d7b22c0dc2f92" translate="yes" xml:space="preserve">
          <source>again. If the old indentation actually fits the intended nesting of parentheses, and you have put back those parentheses,</source>
          <target state="translated">Опять.Если старый отпечаток действительно подходит к предполагаемому гнезду скобок,и вы положили эти скобки обратно,</target>
        </trans-unit>
        <trans-unit id="fe575dd87f1c575db4c16f0e957d0e5668fa75ec" translate="yes" xml:space="preserve">
          <source>alist-get</source>
          <target state="translated">alist-get</target>
        </trans-unit>
        <trans-unit id="478a0bf91848f4714b982203f3aa484d371b06e4" translate="yes" xml:space="preserve">
          <source>all-completions</source>
          <target state="translated">all-completions</target>
        </trans-unit>
        <trans-unit id="c79b31cc83d1cacd22d4f8d89542dd3f31de3525" translate="yes" xml:space="preserve">
          <source>all-threads</source>
          <target state="translated">all-threads</target>
        </trans-unit>
        <trans-unit id="d3a526ed61ac37d96b189e7dd169c6fbdb51cfa3" translate="yes" xml:space="preserve">
          <source>alloc.c</source>
          <target state="translated">alloc.c</target>
        </trans-unit>
        <trans-unit id="4e2ad8e6ee0b90393e71ab8caf5544d84ef8b17b" translate="yes" xml:space="preserve">
          <source>allocates dynamic memory for the part that didn&amp;rsquo;t fit. If Emacs will be dumped using the &lt;code&gt;pdump&lt;/code&gt; method (see &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;), the pure-space overflow is of no special importance (it just means some of the preloaded stuff cannot be shared with other Emacs jobs). However, if Emacs will be dumped using the now obsolete &lt;code&gt;unexec&lt;/code&gt; method, the resulting image will work, but garbage collection (see &lt;a href=&quot;garbage-collection#Garbage-Collection&quot;&gt;Garbage Collection&lt;/a&gt;) is disabled in this situation, causing a memory leak. Such an overflow normally won&amp;rsquo;t happen unless you try to preload additional libraries or add features to the standard ones. Emacs will display a warning about the overflow when it starts, if it was dumped using &lt;code&gt;unexec&lt;/code&gt;. If this happens, you should increase the compilation parameter &lt;code&gt;SYSTEM_PURESIZE_EXTRA&lt;/code&gt; in the file</source>
          <target state="translated">выделяет динамическую память для той части, которая не подошла. Если Emacs будет выгружен с использованием метода &lt;code&gt;pdump&lt;/code&gt; (см. &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Сборка Emacs&lt;/a&gt; ), переполнение в чистом пространстве не имеет особого значения (это просто означает, что некоторые из предварительно загруженных данных не могут использоваться совместно с другими заданиями Emacs). Однако, если Emacs будет сброшен с использованием устаревшего метода &lt;code&gt;unexec&lt;/code&gt; , результирующий образ будет работать, но сборка мусора (см. &lt;a href=&quot;garbage-collection#Garbage-Collection&quot;&gt;Сборка мусора&lt;/a&gt; ) в этой ситуации отключена, вызывая утечку памяти. Такое переполнение обычно не происходит, если вы не попытаетесь предварительно загрузить дополнительные библиотеки или добавить функции к стандартным. Emacs отобразит предупреждение о переполнении при запуске, если оно было сброшено с помощью &lt;code&gt;unexec&lt;/code&gt; . В этом случае следует увеличить параметр компиляции &lt;code&gt;SYSTEM_PURESIZE_EXTRA&lt;/code&gt; в файле</target>
        </trans-unit>
        <trans-unit id="092cc25f5295b80e29167bc77f8fb3128dbbd114" translate="yes" xml:space="preserve">
          <source>allows integers, &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;nil&lt;/code&gt; as legitimate values.</source>
          <target state="translated">допускает целые числа, &lt;code&gt;t&lt;/code&gt; и &lt;code&gt;nil&lt;/code&gt; как допустимые значения.</target>
        </trans-unit>
        <trans-unit id="9fa2f36820e686a6b74313f3cd8771d2d82efd04" translate="yes" xml:space="preserve">
          <source>allows the use of scalable fonts with registry &lt;code&gt;iso10646-1&lt;/code&gt;.</source>
          <target state="translated">позволяет использовать масштабируемые шрифты с &lt;code&gt;iso10646-1&lt;/code&gt; реестра .</target>
        </trans-unit>
        <trans-unit id="00f342d2e7c31618b8f7f391c63b84a1380d6c17" translate="yes" xml:space="preserve">
          <source>already, but succeed in popping up a new window. Evaluating the same form again will now not cause any visible changes&amp;mdash;&lt;code&gt;display-buffer&lt;/code&gt; reused the window already showing</source>
          <target state="translated">уже, но удалось открыть новое окно. Повторное вычисление той же формы теперь не вызовет никаких видимых изменений - &lt;code&gt;display-buffer&lt;/code&gt; повторно использовал окно, которое уже отображается</target>
        </trans-unit>
        <trans-unit id="325562c769da3f80d0e63bb56514bc2e2723c9b5" translate="yes" xml:space="preserve">
          <source>alt</source>
          <target state="translated">alt</target>
        </trans-unit>
        <trans-unit id="28ef5d0f98ff4d0e83b4d2d5ddf19beca46d7ea2" translate="yes" xml:space="preserve">
          <source>always equals &lt;var&gt;dividend&lt;/var&gt; if &lt;var&gt;divisor&lt;/var&gt; is nonzero.</source>
          <target state="translated">всегда равно &lt;var&gt;dividend&lt;/var&gt; если &lt;var&gt;divisor&lt;/var&gt; равен нулю.</target>
        </trans-unit>
        <trans-unit id="ff639548eb63a43c77806d09c0400b3c1d00eff2" translate="yes" xml:space="preserve">
          <source>always equals &lt;var&gt;dividend&lt;/var&gt;, subject to rounding error if either argument is floating point and to an &lt;code&gt;arith-error&lt;/code&gt; if &lt;var&gt;dividend&lt;/var&gt; is an integer and &lt;var&gt;divisor&lt;/var&gt; is 0. For &lt;code&gt;floor&lt;/code&gt;, see &lt;a href=&quot;numeric-conversions#Numeric-Conversions&quot;&gt;Numeric Conversions&lt;/a&gt;.</source>
          <target state="translated">всегда равняется &lt;var&gt;dividend&lt;/var&gt; , с учетом ошибки округления, если любой из аргументов является плавающей точкой, и &lt;code&gt;arith-error&lt;/code&gt; если &lt;var&gt;dividend&lt;/var&gt; является целым числом, а &lt;var&gt;divisor&lt;/var&gt; равен 0. Информацию о &lt;code&gt;floor&lt;/code&gt; см. в разделе &lt;a href=&quot;numeric-conversions#Numeric-Conversions&quot;&gt;Числовые преобразования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5fdbcbbb5e1a0f539e5687031e441a8a1b6442c2" translate="yes" xml:space="preserve">
          <source>always quit directly.</source>
          <target state="translated">всегда увольняйся напрямую.</target>
        </trans-unit>
        <trans-unit id="de73eac0c305038f0437bc6a1f994a5a4379ed28" translate="yes" xml:space="preserve">
          <source>an</source>
          <target state="translated">an</target>
        </trans-unit>
        <trans-unit id="0aa1ddf621628987d586a3d4d944e74af1a742b7" translate="yes" xml:space="preserve">
          <source>an expression such as &lt;code&gt;(cadr (assq 'handler list))&lt;/code&gt; is a macro call, and its expansion is:</source>
          <target state="translated">такое выражение, как &lt;code&gt;(cadr (assq 'handler list))&lt;/code&gt; , является вызовом макроса, и его раскрытие выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="3c3d09b722f1fde9c701578ae9e8d2375d5495fd" translate="yes" xml:space="preserve">
          <source>an integer</source>
          <target state="translated">целое число</target>
        </trans-unit>
        <trans-unit id="6238c0de14c3560c8a17193fb4b81a0cf48869b0" translate="yes" xml:space="preserve">
          <source>an integer, &lt;var&gt;number&lt;/var&gt;</source>
          <target state="translated">целое число, &lt;var&gt;number&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="f06df609aed50661247cc6ec96c1599c193c3ec4" translate="yes" xml:space="preserve">
          <source>anchor</source>
          <target state="translated">anchor</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="0b2d72a6529bc1acf8a7bda7bccdc652a56cfe3a" translate="yes" xml:space="preserve">
          <source>and 8-bit raw bytes. In general, these conversions happen when inserting text into a buffer, or when putting text from several strings together in one string. You can also explicitly convert a string&amp;rsquo;s contents to either representation.</source>
          <target state="translated">и 8-битные необработанные байты. Как правило, эти преобразования происходят при вставке текста в буфер или при объединении текста из нескольких строк в одну строку. Вы также можете явно преобразовать содержимое строки в любое представление.</target>
        </trans-unit>
        <trans-unit id="ee86b0a154fa2b192c528eed48cd6f581e963b46" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;&quot;2&quot;&lt;/code&gt; represents</source>
          <target state="translated">и &lt;code&gt;&quot;2&quot;&lt;/code&gt; представляет</target>
        </trans-unit>
        <trans-unit id="63ea6fadc482f8197445dc9092750534caedfb2d" translate="yes" xml:space="preserve">
          <source>and &lt;var&gt;filename&lt;/var&gt; has handler &lt;var&gt;handler&lt;/var&gt;, then &lt;var&gt;handler&lt;/var&gt; is called like this:</source>
          <target state="translated">и &lt;var&gt;filename&lt;/var&gt; имеет обработчик &lt;var&gt;handler&lt;/var&gt; , тогда &lt;var&gt;handler&lt;/var&gt; вызывается так:</target>
        </trans-unit>
        <trans-unit id="6aedb7d930592a1c3ab0ab0607b28bc65e6806e6" translate="yes" xml:space="preserve">
          <source>and Simula, methods that implement generic functions don&amp;rsquo;t belong to a class, they belong to the generic function they implement.</source>
          <target state="translated">и Simula, методы, реализующие универсальные функции, не принадлежат классу, они принадлежат к общей функции, которую они реализуют.</target>
        </trans-unit>
        <trans-unit id="1b1da2c3359192295d28d91f0757dd5967a4c2ac" translate="yes" xml:space="preserve">
          <source>and defining the GPL compatibility symbol:</source>
          <target state="translated">и определение символа совместимости с GPL:</target>
        </trans-unit>
        <trans-unit id="24255e2574b8602edc1cdbf86937eba1945c819c" translate="yes" xml:space="preserve">
          <source>and direct it to load</source>
          <target state="translated">и направить его на загрузку</target>
        </trans-unit>
        <trans-unit id="d2a46a03fe226e5c5a1c72a28937989f1d972ae2" translate="yes" xml:space="preserve">
          <source>and eight-bit characters (see &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Explicit Encoding&lt;/a&gt;).</source>
          <target state="translated">и восьмибитные символы (см. &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Явное кодирование&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="fd1214de18f394d87faf6f0f77ac56fc3ea9c56a" translate="yes" xml:space="preserve">
          <source>and eight-bit characters to their single-byte form, but loses information for non-</source>
          <target state="translated">и восьмиразрядные символы в их однобайтовой форме,но теряет информацию для не-</target>
        </trans-unit>
        <trans-unit id="1bbff02f657a5935e72870538bc7ef53b2e645a8" translate="yes" xml:space="preserve">
          <source>and eight-bit characters.</source>
          <target state="translated">и восьмиразрядные символы.</target>
        </trans-unit>
        <trans-unit id="95dc1e322ad5713420c3eee3d49a2dc874e92f0b" translate="yes" xml:space="preserve">
          <source>and eight-bit characters. In unibyte buffers and strings, these characters have codes in the range 0 through #xFF (255). In a multibyte buffer or string, eight-bit characters have character codes higher than #xFF (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;), but Emacs transparently converts them to their single-byte values when you encode or decode such text.</source>
          <target state="translated">и восьмибитные символы. В однобайтовых буферах и строках эти символы имеют коды в диапазоне от 0 до #xFF (255). В многобайтовом буфере или строке восьмибитовые символы имеют коды символов выше, чем #xFF (см. &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Представления текста&lt;/a&gt; ), но Emacs прозрачно преобразует их в их однобайтовые значения, когда вы кодируете или декодируете такой текст.</target>
        </trans-unit>
        <trans-unit id="4f1f0402bdcb413b722b565e77b3956938cadeea" translate="yes" xml:space="preserve">
          <source>and evaluate the form again. This should display</source>
          <target state="translated">и еще раз оценить форму.Это должно отображать</target>
        </trans-unit>
        <trans-unit id="23e10e2852342704bfcbcae2bba248c7edb4e29e" translate="yes" xml:space="preserve">
          <source>and evaluate the form once more,</source>
          <target state="translated">и еще раз оценить форму,</target>
        </trans-unit>
        <trans-unit id="cf66ef7c394c49cae30c492db17351d6eb27df2d" translate="yes" xml:space="preserve">
          <source>and evaluating our canonical &lt;code&gt;display-buffer&lt;/code&gt; form. This will usually create (and give focus to) a new frame whose root window shows</source>
          <target state="translated">и оцениваем нашу каноническую форму &lt;code&gt;display-buffer&lt;/code&gt; . Обычно это создает (и дает фокус) новый фрейм, в корневом окне которого отображается</target>
        </trans-unit>
        <trans-unit id="13c0a13f05352e42e72f2ab30ed5dbe368b5e078" translate="yes" xml:space="preserve">
          <source>and here is how the result is interpreted:</source>
          <target state="translated">и вот как интерпретируется результат:</target>
        </trans-unit>
        <trans-unit id="6f45fa747fc914092b39064df109c9e751c339ff" translate="yes" xml:space="preserve">
          <source>and how to use it as part of writing extension modules for Emacs. The module</source>
          <target state="translated">и как использовать его в рамках написания модулей расширения для Emacs.Модуль</target>
        </trans-unit>
        <trans-unit id="a2b942ebebb64de66f93a27af658cffb0230eeef" translate="yes" xml:space="preserve">
          <source>and it says to execute the forms &lt;var&gt;a&lt;/var&gt;, &lt;var&gt;b&lt;/var&gt;, &lt;var&gt;c&lt;/var&gt;, and so on, in that order. These forms are called the &lt;em&gt;body&lt;/em&gt; of the &lt;code&gt;progn&lt;/code&gt; form. The value of the last form in the body becomes the value of the entire &lt;code&gt;progn&lt;/code&gt;. &lt;code&gt;(progn)&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">и он говорит выполнять формы &lt;var&gt;a&lt;/var&gt; , &lt;var&gt;b&lt;/var&gt; , &lt;var&gt;c&lt;/var&gt; и так далее в этом порядке. Эти формы называются &lt;em&gt;телом&lt;/em&gt; в &lt;code&gt;progn&lt;/code&gt; формы. Значение последней формы в теле становится значением всего &lt;code&gt;progn&lt;/code&gt; . &lt;code&gt;(progn)&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41cd18a69f5a83ba9ac309c0830fc3704a87222c" translate="yes" xml:space="preserve">
          <source>and it should return the restored buffer. Here &lt;var&gt;desktop-buffer-misc&lt;/var&gt; is the value returned by the function optionally bound to &lt;code&gt;desktop-save-buffer&lt;/code&gt;.</source>
          <target state="translated">и он должен вернуть восстановленный буфер. Здесь &lt;var&gt;desktop-buffer-misc&lt;/var&gt; - это значение, возвращаемое функцией, необязательно связанной с &lt;code&gt;desktop-save-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="233e0f4d00cae535e69968da6678c48f88674960" translate="yes" xml:space="preserve">
          <source>and list the files again. Now there are three names for one file:</source>
          <target state="translated">и повторите список файлов.Теперь есть три имени для одного файла:</target>
        </trans-unit>
        <trans-unit id="9322412fae94c4cc8107c93b8280d12fd73444be" translate="yes" xml:space="preserve">
          <source>and non-</source>
          <target state="translated">и не</target>
        </trans-unit>
        <trans-unit id="730aa929a8a637b7b3b7e661e1028ee2394dac7d" translate="yes" xml:space="preserve">
          <source>and not in</source>
          <target state="translated">и не в</target>
        </trans-unit>
        <trans-unit id="fc5673f441e70d62f1a957435777ea1ac0f866bb" translate="yes" xml:space="preserve">
          <source>and puts it right after the binding for</source>
          <target state="translated">и ставит его сразу после переплета для</target>
        </trans-unit>
        <trans-unit id="a3201046dba4255789c615c0ff760fc79e071cfa" translate="yes" xml:space="preserve">
          <source>and rebuild Emacs.</source>
          <target state="translated">и восстановить Эмакс.</target>
        </trans-unit>
        <trans-unit id="42fcafa9b2c4cd1a30c3c1d0fedc7b54077cda93" translate="yes" xml:space="preserve">
          <source>and returns it as the vector &lt;code&gt;[?\C-c pf1]&lt;/code&gt;.</source>
          <target state="translated">и возвращает его как вектор &lt;code&gt;[?\C-c pf1]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="542b42542c1c5a98e530f6b091a33f665828b7bc" translate="yes" xml:space="preserve">
          <source>and that both these directories contain a file named</source>
          <target state="translated">и что в обоих этих каталогах есть файл с именем</target>
        </trans-unit>
        <trans-unit id="a119cd6caabe412d2f55c15ae37aa618d4468367" translate="yes" xml:space="preserve">
          <source>and the empty string). See &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;.</source>
          <target state="translated">и пустая строка). См. &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;Расширение имени файла&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7dde40742210f41aa5c4cb0ace39cab9757ae3df" translate="yes" xml:space="preserve">
          <source>and the following newline or POP DIRECTIONAL FORMATTING (</source>
          <target state="translated">и следующее ДИРЕКТИВНОЕ ФОРМАТИРОВАНИЕ НОВОСТИ или СОЗ (</target>
        </trans-unit>
        <trans-unit id="27044964c88206a031be8a17de0cff776da43986" translate="yes" xml:space="preserve">
          <source>and the font specification for Chinese GB2312 characters would be this:</source>
          <target state="translated">и спецификация шрифта для китайских иероглифов GB2312 была бы вот такой:</target>
        </trans-unit>
        <trans-unit id="fdcb00caab62194c01e9a75d69f4f0623909dc62" translate="yes" xml:space="preserve">
          <source>and the function call &lt;code&gt;(message &quot;Alias for `foo'.&quot;)&lt;/code&gt; both translate to</source>
          <target state="translated">и вызов функции &lt;code&gt;(message &quot;Alias for `foo'.&quot;)&lt;/code&gt; переводятся как</target>
        </trans-unit>
        <trans-unit id="f5e18da4f46485af0b793cdba87ced182020386f" translate="yes" xml:space="preserve">
          <source>and the host name.</source>
          <target state="translated">и имя хозяина.</target>
        </trans-unit>
        <trans-unit id="e1d7213cf495cc6c3ad7ccb6629f6ab1ba11d695" translate="yes" xml:space="preserve">
          <source>and the like, where most users would expect the network traffic to be encrypted.</source>
          <target state="translated">и тому подобное,где большинство пользователей ожидают,что сетевой трафик будет зашифрован.</target>
        </trans-unit>
        <trans-unit id="30f68b839b907eb05d2222e4c8e617690efaa47e" translate="yes" xml:space="preserve">
          <source>and thus calls &lt;code&gt;autoload&lt;/code&gt;.</source>
          <target state="translated">и поэтому вызывает &lt;code&gt;autoload&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8fdfe6e409242171acf28647aa76797569670a4" translate="yes" xml:space="preserve">
          <source>and to</source>
          <target state="translated">и к</target>
        </trans-unit>
        <trans-unit id="0aea8551e6fb9789c6cf22206efffc7c4c276f9d" translate="yes" xml:space="preserve">
          <source>and to add another alist entry one would write</source>
          <target state="translated">и чтобы добавить еще одну запись об алисте,нужно будет написать.</target>
        </trans-unit>
        <trans-unit id="3e6feeec00df6ea9e884c63733fb6f584de51395" translate="yes" xml:space="preserve">
          <source>and unset one with</source>
          <target state="translated">и снять одну из них с</target>
        </trans-unit>
        <trans-unit id="4979298e8691ebfa825a680550fd002e4f60e986" translate="yes" xml:space="preserve">
          <source>and uses &lt;code&gt;minibuffer-local-completion-map&lt;/code&gt; as its parent keymap.</source>
          <target state="translated">и использует &lt;code&gt;minibuffer-local-completion-map&lt;/code&gt; качестве родительской раскладки клавиатуры.</target>
        </trans-unit>
        <trans-unit id="7182596c162f56fa3fb57988c89558b018fd024b" translate="yes" xml:space="preserve">
          <source>and uses &lt;code&gt;minibuffer-local-map&lt;/code&gt; as its parent keymap (see &lt;a href=&quot;text-from-minibuffer#Definition-of-minibuffer_002dlocal_002dmap&quot;&gt;Definition of minibuffer-local-map&lt;/a&gt;).</source>
          <target state="translated">и использует &lt;code&gt;minibuffer-local-map&lt;/code&gt; в качестве родительской раскладки клавиатуры (см. &lt;a href=&quot;text-from-minibuffer#Definition-of-minibuffer_002dlocal_002dmap&quot;&gt;Определение minibuffer-local-map&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f3f6cf55a5e75a17c89cadc371b8d2e14f373a05" translate="yes" xml:space="preserve">
          <source>and your language environment is multibyte Latin-1, these commands actually bind the multibyte character with code 246, not the byte code 246 (</source>
          <target state="translated">и ваше языковое окружение является многобайтовым латинским 1,эти команды фактически связывают многобайтовый символ с кодом 246,а не с байтовым кодом 246 (</target>
        </trans-unit>
        <trans-unit id="e5c6404c4921b47d1046d71c2169ca2a54672bfe" translate="yes" xml:space="preserve">
          <source>any non-alist</source>
          <target state="translated">любой не-алист</target>
        </trans-unit>
        <trans-unit id="3c305d671dd1d39b0b5796b00915162f7f25d581" translate="yes" xml:space="preserve">
          <source>anything else</source>
          <target state="translated">что-нибудь ещё</target>
        </trans-unit>
        <trans-unit id="572d966a5b4c36fcf117481d477439dc0386ea63" translate="yes" xml:space="preserve">
          <source>anything else, &lt;var&gt;form&lt;/var&gt;</source>
          <target state="translated">что-нибудь еще, &lt;var&gt;form&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="c22edb7bdbee7d2c2b3c24533d83f4302b3101eb" translate="yes" xml:space="preserve">
          <source>anywhere, will display</source>
          <target state="translated">где угодно,будет отображаться</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="13a85c4d4f0e2098d47edd09be2b2c7b45175208" translate="yes" xml:space="preserve">
          <source>append-to-file</source>
          <target state="translated">append-to-file</target>
        </trans-unit>
        <trans-unit id="69f45da1683c501696ebfa086d25192af3807dc6" translate="yes" xml:space="preserve">
          <source>apply</source>
          <target state="translated">apply</target>
        </trans-unit>
        <trans-unit id="21a1a18787447edabc813af16ac3c2b4adb04f35" translate="yes" xml:space="preserve">
          <source>apply-partially</source>
          <target state="translated">apply-partially</target>
        </trans-unit>
        <trans-unit id="e11c360506fddab2fef56a4ecc82fd830d307db5" translate="yes" xml:space="preserve">
          <source>apropos</source>
          <target state="translated">apropos</target>
        </trans-unit>
        <trans-unit id="23d8e0156062165ca3736e9f1e364d414e1d82d5" translate="yes" xml:space="preserve">
          <source>ar</source>
          <target state="translated">ar</target>
        </trans-unit>
        <trans-unit id="60d78b739ca209160c702be65edde27ccb195df1" translate="yes" xml:space="preserve">
          <source>archive-contents</source>
          <target state="translated">archive-contents</target>
        </trans-unit>
        <trans-unit id="031d16ac7f65a9ae69a6df1abe241ee3349582ce" translate="yes" xml:space="preserve">
          <source>are lost.</source>
          <target state="translated">потеряны.</target>
        </trans-unit>
        <trans-unit id="320a6687dbbc9794f90d8a0089a8ab94f17fbaaa" translate="yes" xml:space="preserve">
          <source>are normally generated automatically when Emacs is installed.</source>
          <target state="translated">обычно генерируются автоматически при установке Emacs.</target>
        </trans-unit>
        <trans-unit id="f5d7a5bb9dd91a0afcf8ddcdb2796b1ac45e8af1" translate="yes" xml:space="preserve">
          <source>are the same character. If the terminal can distinguish between them, Emacs conveys the distinction to Lisp programs by representing the former as the integer 9, and the latter as the symbol &lt;code&gt;tab&lt;/code&gt;.</source>
          <target state="translated">один и тот же персонаж. Если терминал может различать их, Emacs передает это различие программам на Лиспе, представляя первое как целое число 9, а второе как символ &lt;code&gt;tab&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3070a7ee67e0461aa4678951be934593dbccd410" translate="yes" xml:space="preserve">
          <source>aref</source>
          <target state="translated">aref</target>
        </trans-unit>
        <trans-unit id="666e64488d74b00196677602cd28af2bf11e36a5" translate="yes" xml:space="preserve">
          <source>arrayp</source>
          <target state="translated">arrayp</target>
        </trans-unit>
        <trans-unit id="3d01b15f1ea9f06eaee5805b2c909ec09dcdb415" translate="yes" xml:space="preserve">
          <source>as &amp;lsquo;</source>
          <target state="translated">в виде '</target>
        </trans-unit>
        <trans-unit id="44b2b85ecf80cc5b480b0158de904c01eefa0d24" translate="yes" xml:space="preserve">
          <source>as follows:</source>
          <target state="translated">следующим образом:</target>
        </trans-unit>
        <trans-unit id="d09d6a4afb52b443c73d1c619e170ec8fd5815f3" translate="yes" xml:space="preserve">
          <source>as prefix keys appear in the global map, so these prefix keys are always available. Major and minor modes can redefine a key as a prefix by putting a prefix key definition for it in the local map or the minor mode&amp;rsquo;s map. See &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Active Keymaps&lt;/a&gt;.</source>
          <target state="translated">поскольку префиксные ключи появляются на глобальной карте, поэтому эти префиксные ключи всегда доступны. Основной и второстепенный режимы могут переопределить ключ как префикс, поместив определение префиксного ключа для него в локальную карту или карту второстепенного режима. См. &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Активные таблицы ключей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34349d0fc5baeec98ff3df564ce62b47e6bea2af" translate="yes" xml:space="preserve">
          <source>as the prefix sets the &lt;var&gt;count&lt;/var&gt; to a non-&lt;code&gt;nil&lt;/code&gt; list, while typing</source>
          <target state="translated">поскольку префикс устанавливает &lt;var&gt;count&lt;/var&gt; в &lt;code&gt;nil&lt;/code&gt; список, при вводе</target>
        </trans-unit>
        <trans-unit id="a6114f67b2de090215f5c7c259fdc3818d50681b" translate="yes" xml:space="preserve">
          <source>as well as various versions of Emacs, you can use conditional compilation based on &lt;code&gt;EMACS_MAJOR_VERSION&lt;/code&gt;.</source>
          <target state="translated">а также различные версии Emacs, вы можете использовать условную компиляцию на основе &lt;code&gt;EMACS_MAJOR_VERSION&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3887c4a64884e62db83a9909df6803b978531acf" translate="yes" xml:space="preserve">
          <source>ascii-case-table</source>
          <target state="translated">ascii-case-table</target>
        </trans-unit>
        <trans-unit id="11aaaef3be5e5905c02f4c7d9b02a2b9a57af3e9" translate="yes" xml:space="preserve">
          <source>aset</source>
          <target state="translated">aset</target>
        </trans-unit>
        <trans-unit id="cb101192dff2cc1ddd0272f73de307c89bebc181" translate="yes" xml:space="preserve">
          <source>ash</source>
          <target state="translated">ash</target>
        </trans-unit>
        <trans-unit id="f6b3e9a1435d3f432e7a6b9003583871fcb26de3" translate="yes" xml:space="preserve">
          <source>asin</source>
          <target state="translated">asin</target>
        </trans-unit>
        <trans-unit id="76e475c2f42f9153c529c710aeb95930ffaac123" translate="yes" xml:space="preserve">
          <source>ask-user-about-lock</source>
          <target state="translated">ask-user-about-lock</target>
        </trans-unit>
        <trans-unit id="a4355f66d0ac2c1d213ce5eb9f7904dc6fa6b64e" translate="yes" xml:space="preserve">
          <source>ask-user-about-supersession-threat</source>
          <target state="translated">ask-user-about-supersession-threat</target>
        </trans-unit>
        <trans-unit id="fb5c548c8f8558c093ed35aa916c97e92b798c49" translate="yes" xml:space="preserve">
          <source>assoc</source>
          <target state="translated">assoc</target>
        </trans-unit>
        <trans-unit id="8484c696921fa3e517d6baaf6ee1d76e79f966b5" translate="yes" xml:space="preserve">
          <source>assoc-default</source>
          <target state="translated">assoc-default</target>
        </trans-unit>
        <trans-unit id="81786bb5f15477867b2dfe035558a080158a8aa7" translate="yes" xml:space="preserve">
          <source>assoc-delete-all</source>
          <target state="translated">assoc-delete-all</target>
        </trans-unit>
        <trans-unit id="5b2c40d54854f57f8ba04bfbe584ce1c26639436" translate="yes" xml:space="preserve">
          <source>assoc-string</source>
          <target state="translated">assoc-string</target>
        </trans-unit>
        <trans-unit id="aa94d9528188a0e7156511d841b65d403e2ec067" translate="yes" xml:space="preserve">
          <source>assq</source>
          <target state="translated">assq</target>
        </trans-unit>
        <trans-unit id="a22d80138d288e3ac044941672238669501f7ff2" translate="yes" xml:space="preserve">
          <source>assq-delete-all</source>
          <target state="translated">assq-delete-all</target>
        </trans-unit>
        <trans-unit id="ccaccb0a8dab85a08ac36168fa0a2e902bf347fb" translate="yes" xml:space="preserve">
          <source>assuming the &lt;code&gt;setq&lt;/code&gt; form shown above has already been executed.</source>
          <target state="translated">предполагая, что форма &lt;code&gt;setq&lt;/code&gt; , показанная выше, уже была выполнена.</target>
        </trans-unit>
        <trans-unit id="a42ff3be78d0fe4a2319fb4bf641bf1b4f309630" translate="yes" xml:space="preserve">
          <source>at command level or to quit a user command would be unpredictable. If you want to permit quitting inside a filter function, bind &lt;code&gt;inhibit-quit&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;. In most cases, the right way to do this is with the macro &lt;code&gt;with-local-quit&lt;/code&gt;. See &lt;a href=&quot;quitting#Quitting&quot;&gt;Quitting&lt;/a&gt;.</source>
          <target state="translated">на командном уровне или выйти из команды пользователя было бы непредсказуемо. Если вы хотите разрешить завершение внутри функции фильтра, привяжите &lt;code&gt;inhibit-quit&lt;/code&gt; к &lt;code&gt;nil&lt;/code&gt; . В большинстве случаев правильный способ сделать это - использовать макрос &lt;code&gt;with-local-quit&lt;/code&gt; . См. &lt;a href=&quot;quitting#Quitting&quot;&gt;Выход&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa2df0dd8a0d825ff39335dff8e464257a3d2877" translate="yes" xml:space="preserve">
          <source>at command level or to quit a user command would be unpredictable. If you want to permit quitting inside a sentinel, bind &lt;code&gt;inhibit-quit&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;. In most cases, the right way to do this is with the macro &lt;code&gt;with-local-quit&lt;/code&gt;. See &lt;a href=&quot;quitting#Quitting&quot;&gt;Quitting&lt;/a&gt;.</source>
          <target state="translated">на командном уровне или выйти из команды пользователя было бы непредсказуемо. Если вы хотите разрешить завершение внутри дозорного, привяжите &lt;code&gt;inhibit-quit&lt;/code&gt; выход к &lt;code&gt;nil&lt;/code&gt; . В большинстве случаев правильный способ сделать это - использовать макрос &lt;code&gt;with-local-quit&lt;/code&gt; . См. &lt;a href=&quot;quitting#Quitting&quot;&gt;Выход&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7688a477de066aadc28f24c02bab1701c61973bf" translate="yes" xml:space="preserve">
          <source>at the bottom of the frame.</source>
          <target state="translated">в нижней части рамы.</target>
        </trans-unit>
        <trans-unit id="f7a308dc35fefdec5e00fb2608d38aac641c2666" translate="yes" xml:space="preserve">
          <source>at the end of the buffer.</source>
          <target state="translated">в конце буфера.</target>
        </trans-unit>
        <trans-unit id="f077504d04fa1bc96b042497b434fd33fabdf43d" translate="yes" xml:space="preserve">
          <source>atan</source>
          <target state="translated">atan</target>
        </trans-unit>
        <trans-unit id="c6f57180e462a4f1e9de24fbe811cfb2c24a0cf9" translate="yes" xml:space="preserve">
          <source>atom</source>
          <target state="translated">atom</target>
        </trans-unit>
        <trans-unit id="1f73b8fc30c9cb9ddf9834f3ffc47ec38965f3d9" translate="yes" xml:space="preserve">
          <source>auctex</source>
          <target state="translated">auctex</target>
        </trans-unit>
        <trans-unit id="0dc6d3fa47fc7bbafb9a8b9576efc54a3f36b3f3" translate="yes" xml:space="preserve">
          <source>aug-19</source>
          <target state="translated">aug-19</target>
        </trans-unit>
        <trans-unit id="1948926965b9f9c343da0eceb17616fddbad0d67" translate="yes" xml:space="preserve">
          <source>aug-20</source>
          <target state="translated">aug-20</target>
        </trans-unit>
        <trans-unit id="2cca81002b8f10e6dc04f008a2a2ec0648d3e693" translate="yes" xml:space="preserve">
          <source>auto-coding-alist</source>
          <target state="translated">auto-coding-alist</target>
        </trans-unit>
        <trans-unit id="e477e8d5856047ef48d7cb6fa1303bb852e4b206" translate="yes" xml:space="preserve">
          <source>auto-coding-functions</source>
          <target state="translated">auto-coding-functions</target>
        </trans-unit>
        <trans-unit id="f6290e9c62303c3095056c43c7c2ff6d273f4f32" translate="yes" xml:space="preserve">
          <source>auto-coding-regexp-alist</source>
          <target state="translated">auto-coding-regexp-alist</target>
        </trans-unit>
        <trans-unit id="5f2728dd1a8eacd616d0222b00f78d652947fbad" translate="yes" xml:space="preserve">
          <source>auto-fill-chars</source>
          <target state="translated">auto-fill-chars</target>
        </trans-unit>
        <trans-unit id="70ed55af54b85d2777e285be439640cf396b52de" translate="yes" xml:space="preserve">
          <source>auto-fill-function</source>
          <target state="translated">auto-fill-function</target>
        </trans-unit>
        <trans-unit id="c3a37941bf89934f84f657be6ebf344ffab68570" translate="yes" xml:space="preserve">
          <source>auto-mode-alist</source>
          <target state="translated">auto-mode-alist</target>
        </trans-unit>
        <trans-unit id="f5ef034a2ef53539a4f4f51f26cdd95d023e4c14" translate="yes" xml:space="preserve">
          <source>auto-raise-tool-bar-buttons</source>
          <target state="translated">auto-raise-tool-bar-buttons</target>
        </trans-unit>
        <trans-unit id="fde4ad3d56a7e79f11c2c53130aadf276bb81444" translate="yes" xml:space="preserve">
          <source>auto-resize-tool-bars</source>
          <target state="translated">auto-resize-tool-bars</target>
        </trans-unit>
        <trans-unit id="3199abec89bac7a79e7aaf2cbe5ec51f5da61418" translate="yes" xml:space="preserve">
          <source>auto-save-default</source>
          <target state="translated">auto-save-default</target>
        </trans-unit>
        <trans-unit id="ab7b28778729b7d45836e9e39c1e1e3ad2ac1517" translate="yes" xml:space="preserve">
          <source>auto-save-file-name-p</source>
          <target state="translated">auto-save-file-name-p</target>
        </trans-unit>
        <trans-unit id="fdb722369334e14495ed1c6c993b4dc960666f1e" translate="yes" xml:space="preserve">
          <source>auto-save-hook</source>
          <target state="translated">auto-save-hook</target>
        </trans-unit>
        <trans-unit id="94faba19af4b11c77675febd015b426de0c2ed19" translate="yes" xml:space="preserve">
          <source>auto-save-interval</source>
          <target state="translated">auto-save-interval</target>
        </trans-unit>
        <trans-unit id="a06087dc5121c9a59c4babee12870e76f1b368c3" translate="yes" xml:space="preserve">
          <source>auto-save-list-file-name</source>
          <target state="translated">auto-save-list-file-name</target>
        </trans-unit>
        <trans-unit id="6d5edf86412ad58d7bfbd8da64eb0f469ae0b15e" translate="yes" xml:space="preserve">
          <source>auto-save-list-file-prefix</source>
          <target state="translated">auto-save-list-file-prefix</target>
        </trans-unit>
        <trans-unit id="7d39953f6fc7cddd77dbedcd643dc2077241a743" translate="yes" xml:space="preserve">
          <source>auto-save-mode</source>
          <target state="translated">auto-save-mode</target>
        </trans-unit>
        <trans-unit id="b6c26b4607d11d303a26508ba415e54958ec6ece" translate="yes" xml:space="preserve">
          <source>auto-save-timeout</source>
          <target state="translated">auto-save-timeout</target>
        </trans-unit>
        <trans-unit id="dd7cd182262afb5b95c29ada96180a23dc158e31" translate="yes" xml:space="preserve">
          <source>auto-save-visited-file-name</source>
          <target state="translated">auto-save-visited-file-name</target>
        </trans-unit>
        <trans-unit id="b2ec3adbcd777378cb630efcfc1bc6506f7f66af" translate="yes" xml:space="preserve">
          <source>auto-window-vscroll</source>
          <target state="translated">auto-window-vscroll</target>
        </trans-unit>
        <trans-unit id="4f25d09afc26355e099f60888cb6afb436cd27bf" translate="yes" xml:space="preserve">
          <source>autoload</source>
          <target state="translated">autoload</target>
        </trans-unit>
        <trans-unit id="658f4634c6a8746a0ab495ceb870770f2bb86209" translate="yes" xml:space="preserve">
          <source>autoload-do-load</source>
          <target state="translated">autoload-do-load</target>
        </trans-unit>
        <trans-unit id="dd3e054e10fc1da8e24e8f5f09db5512116227ed" translate="yes" xml:space="preserve">
          <source>autoloadp</source>
          <target state="translated">autoloadp</target>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="98f873c77d33d8cd47c21a16b1dd71778f7a510f" translate="yes" xml:space="preserve">
          <source>bFrobnicate buffer:</source>
          <target state="translated">буфер bFrobnicate:</target>
        </trans-unit>
        <trans-unit id="6c0596b8ac609191181a90517d51c0b486f23799" translate="yes" xml:space="preserve">
          <source>ba</source>
          <target state="translated">ba</target>
        </trans-unit>
        <trans-unit id="0bb5e22f6a70b2a917f9374337339eb2b91803ed" translate="yes" xml:space="preserve">
          <source>ba\(na\)*</source>
          <target state="translated">ba\(na\)*</target>
        </trans-unit>
        <trans-unit id="2c15bcf3ec9c3fa99561a3541757a78b08bbfdb4" translate="yes" xml:space="preserve">
          <source>back-to-indentation</source>
          <target state="translated">back-to-indentation</target>
        </trans-unit>
        <trans-unit id="f8cf4c5e990d4d92bfd5726b7dedffe8bccba7b6" translate="yes" xml:space="preserve">
          <source>backtrace</source>
          <target state="translated">backtrace</target>
        </trans-unit>
        <trans-unit id="345cf83ab40ab50fc7c9cc0d303048c6217fdae7" translate="yes" xml:space="preserve">
          <source>backtrace-debug</source>
          <target state="translated">backtrace-debug</target>
        </trans-unit>
        <trans-unit id="8d5e1a7a0ba9554a7b79a17f2948fb8e7a9541ae" translate="yes" xml:space="preserve">
          <source>backtrace-frame</source>
          <target state="translated">backtrace-frame</target>
        </trans-unit>
        <trans-unit id="ce5e424a11c9eab73fbe3bfc03de728f69601d55" translate="yes" xml:space="preserve">
          <source>backtrace-output</source>
          <target state="translated">backtrace-output</target>
        </trans-unit>
        <trans-unit id="d039d4c6ba9c0dab8f07e4cf3b238495525fba74" translate="yes" xml:space="preserve">
          <source>backup-buffer</source>
          <target state="translated">backup-buffer</target>
        </trans-unit>
        <trans-unit id="7eeb79111469f50397b0ebf778c00df225153e12" translate="yes" xml:space="preserve">
          <source>backup-by-copying</source>
          <target state="translated">backup-by-copying</target>
        </trans-unit>
        <trans-unit id="24a2a991657de8f5e319feca9be49e261b27796f" translate="yes" xml:space="preserve">
          <source>backup-by-copying-when-linked</source>
          <target state="translated">backup-by-copying-when-linked</target>
        </trans-unit>
        <trans-unit id="99078d8f5dee485ea7a63ac67f2436caca9b3d3c" translate="yes" xml:space="preserve">
          <source>backup-by-copying-when-mismatch</source>
          <target state="translated">backup-by-copying-when-mismatch</target>
        </trans-unit>
        <trans-unit id="bb27c170241cd8793926d5932ed11a8e4a8d4040" translate="yes" xml:space="preserve">
          <source>backup-by-copying-when-privileged-mismatch</source>
          <target state="translated">backup-by-copying-when-privileged-mismatch</target>
        </trans-unit>
        <trans-unit id="54c0b8a350979b072c9837799ccca54926dd5072" translate="yes" xml:space="preserve">
          <source>backup-directory-alist</source>
          <target state="translated">backup-directory-alist</target>
        </trans-unit>
        <trans-unit id="be07c94a6e00e0fddf5c1a60d31b4ebb852d07a0" translate="yes" xml:space="preserve">
          <source>backup-enable-predicate</source>
          <target state="translated">backup-enable-predicate</target>
        </trans-unit>
        <trans-unit id="cfd887a750b212ef7344c4fb28f9e1f33498c8b6" translate="yes" xml:space="preserve">
          <source>backup-file-name-p</source>
          <target state="translated">backup-file-name-p</target>
        </trans-unit>
        <trans-unit id="b6e5ad5b61698a536fe13a7408bd2fcbb21be977" translate="yes" xml:space="preserve">
          <source>backup-inhibited</source>
          <target state="translated">backup-inhibited</target>
        </trans-unit>
        <trans-unit id="fcbc2c188ed7acf286457e9e1ea264bf07915d42" translate="yes" xml:space="preserve">
          <source>backward-button</source>
          <target state="translated">backward-button</target>
        </trans-unit>
        <trans-unit id="f35aa8a3d2c646ab16fe945a015ac0d4f5944541" translate="yes" xml:space="preserve">
          <source>backward-char</source>
          <target state="translated">backward-char</target>
        </trans-unit>
        <trans-unit id="ebefc160d47abebea58fa3053fc11b1571931af7" translate="yes" xml:space="preserve">
          <source>backward-delete-char-untabify</source>
          <target state="translated">backward-delete-char-untabify</target>
        </trans-unit>
        <trans-unit id="483980313584643676d2e3d78a03789e4b61e192" translate="yes" xml:space="preserve">
          <source>backward-delete-char-untabify-method</source>
          <target state="translated">backward-delete-char-untabify-method</target>
        </trans-unit>
        <trans-unit id="16b277053f23d56e63db08da23db2c572886aeaf" translate="yes" xml:space="preserve">
          <source>backward-list</source>
          <target state="translated">backward-list</target>
        </trans-unit>
        <trans-unit id="47952e9d9dd5d84ed1494cfd1dbed2922c583f28" translate="yes" xml:space="preserve">
          <source>backward-prefix-chars</source>
          <target state="translated">backward-prefix-chars</target>
        </trans-unit>
        <trans-unit id="18ba58858414838d1e52aaf98905bae91cfe9508" translate="yes" xml:space="preserve">
          <source>backward-sexp</source>
          <target state="translated">backward-sexp</target>
        </trans-unit>
        <trans-unit id="7910e79081c0256e062f508d705fa6223be45436" translate="yes" xml:space="preserve">
          <source>backward-to-indentation</source>
          <target state="translated">backward-to-indentation</target>
        </trans-unit>
        <trans-unit id="9b8d5a34cc53ede3ca46c415490186b23d022183" translate="yes" xml:space="preserve">
          <source>backward-up-list</source>
          <target state="translated">backward-up-list</target>
        </trans-unit>
        <trans-unit id="71fd16ceda4af3b749b5a00f2c6f2cf1cbeac808" translate="yes" xml:space="preserve">
          <source>backward-word</source>
          <target state="translated">backward-word</target>
        </trans-unit>
        <trans-unit id="8a70e4f46674745de32ba105b000754ba5614ac0" translate="yes" xml:space="preserve">
          <source>backward-word-strictly</source>
          <target state="translated">backward-word-strictly</target>
        </trans-unit>
        <trans-unit id="2147603dc2f627c2ef0364fade52fb370eed4bc5" translate="yes" xml:space="preserve">
          <source>balance-windows</source>
          <target state="translated">balance-windows</target>
        </trans-unit>
        <trans-unit id="a4ad22a50eddc93b54edfd9ec035dc1457ce9592" translate="yes" xml:space="preserve">
          <source>balance-windows-area</source>
          <target state="translated">balance-windows-area</target>
        </trans-unit>
        <trans-unit id="8bec0406497ccf8bb93933005b504d85785dfc14" translate="yes" xml:space="preserve">
          <source>ball</source>
          <target state="translated">ball</target>
        </trans-unit>
        <trans-unit id="788c3efd44143927b270006db1e8b11e8d3cb837" translate="yes" xml:space="preserve">
          <source>ball boy</source>
          <target state="translated">мальчик с мячом</target>
        </trans-unit>
        <trans-unit id="14df8d9ce9d6f26a9909e08b9b687c74803a731a" translate="yes" xml:space="preserve">
          <source>ball boyee</source>
          <target state="translated">бальный мальчик</target>
        </trans-unit>
        <trans-unit id="8b9dc552137abd17e4da88b214a1d2914b57f2b9" translate="yes" xml:space="preserve">
          <source>ball. Boy!</source>
          <target state="translated">Шар.Боже!</target>
        </trans-unit>
        <trans-unit id="99e4f5b9e5272cc0b5ff5f29909fd508cd49e5f2" translate="yes" xml:space="preserve">
          <source>balls</source>
          <target state="translated">balls</target>
        </trans-unit>
        <trans-unit id="9f391cd473a4879e4e4c34e3e0750eacc9b6332d" translate="yes" xml:space="preserve">
          <source>balls boy</source>
          <target state="translated">мальчик с шариками</target>
        </trans-unit>
        <trans-unit id="d33a73667de58cb2066b7b2e57d11d5fffd85ef3" translate="yes" xml:space="preserve">
          <source>bana</source>
          <target state="translated">bana</target>
        </trans-unit>
        <trans-unit id="250e77f12a5ab6972a0895d290c4792f0a326ea8" translate="yes" xml:space="preserve">
          <source>banana</source>
          <target state="translated">banana</target>
        </trans-unit>
        <trans-unit id="46595eb6f5fe1cb2ec74de2d2e9929f27fe7c771" translate="yes" xml:space="preserve">
          <source>bananana</source>
          <target state="translated">bananana</target>
        </trans-unit>
        <trans-unit id="62cdb7020ff920e5aa642c3d4066950dd1f01f4d" translate="yes" xml:space="preserve">
          <source>bar</source>
          <target state="translated">bar</target>
        </trans-unit>
        <trans-unit id="dbb92031d6688f26f429cd909257e6921d58cca8" translate="yes" xml:space="preserve">
          <source>barf-if-buffer-read-only</source>
          <target state="translated">barf-if-buffer-read-only</target>
        </trans-unit>
        <trans-unit id="289d9b777c2b4341b4d94e681baeeaaa7406802d" translate="yes" xml:space="preserve">
          <source>barx</source>
          <target state="translated">barx</target>
        </trans-unit>
        <trans-unit id="e95c0d71e5a737bfc209f7013e45e233a7480a96" translate="yes" xml:space="preserve">
          <source>base-name</source>
          <target state="translated">base-name</target>
        </trans-unit>
        <trans-unit id="da3886fef56605de840fe573e5666e880f0ab5c6" translate="yes" xml:space="preserve">
          <source>base64-decode-region</source>
          <target state="translated">base64-decode-region</target>
        </trans-unit>
        <trans-unit id="6172a725d9bd14ddd86409d1a845041704c3bf40" translate="yes" xml:space="preserve">
          <source>base64-decode-string</source>
          <target state="translated">base64-decode-string</target>
        </trans-unit>
        <trans-unit id="0be8ae738036faeef7f39babec0e879ce288a177" translate="yes" xml:space="preserve">
          <source>base64-encode-region</source>
          <target state="translated">base64-encode-region</target>
        </trans-unit>
        <trans-unit id="06e6fcd533f50151a38d0240221a2f100ef5a81d" translate="yes" xml:space="preserve">
          <source>base64-encode-string</source>
          <target state="translated">base64-encode-string</target>
        </trans-unit>
        <trans-unit id="f0891966f29cf887f37d8e1d92a9b1ac22e4e216" translate="yes" xml:space="preserve">
          <source>base64url-encode-region</source>
          <target state="translated">base64url-encode-region</target>
        </trans-unit>
        <trans-unit id="c39bfc804dd6ff7e5d1f689a32613295717a0a75" translate="yes" xml:space="preserve">
          <source>base64url-encode-string</source>
          <target state="translated">base64url-encode-string</target>
        </trans-unit>
        <trans-unit id="84646782ce2781372868d01daa89942d297164c7" translate="yes" xml:space="preserve">
          <source>baseline, positive upward.</source>
          <target state="translated">базовый уровень,положительный вверх.</target>
        </trans-unit>
        <trans-unit id="5e6e16d34eae46677b0f383fa69022edb5503a7d" translate="yes" xml:space="preserve">
          <source>batch-byte-compile</source>
          <target state="translated">batch-byte-compile</target>
        </trans-unit>
        <trans-unit id="ccfca0309ba27c56755a8011f91e62c41fdc9745" translate="yes" xml:space="preserve">
          <source>baud-rate</source>
          <target state="translated">baud-rate</target>
        </trans-unit>
        <trans-unit id="94bbf63ba980be54380e5e3fae165b5c312ca7d3" translate="yes" xml:space="preserve">
          <source>baz/foo.bar</source>
          <target state="translated">baz/foo.bar</target>
        </trans-unit>
        <trans-unit id="2993adfde2f08c972d4bdfee44cd9f6994b8d645" translate="yes" xml:space="preserve">
          <source>because it will stop reading keys right after</source>
          <target state="translated">потому что он перестанет читать ключи сразу после того.</target>
        </trans-unit>
        <trans-unit id="793cef3c7c9c6a9e33ab0278aff49b5f9c34819e" translate="yes" xml:space="preserve">
          <source>because that action was applicable and had the highest precedence among all applicable actions.</source>
          <target state="translated">потому что это действие применимо и имеет наивысший приоритет среди всех применимых действий.</target>
        </trans-unit>
        <trans-unit id="a3d6b94fac99dd59a3505e2e72e276c10b719c12" translate="yes" xml:space="preserve">
          <source>because this is not portable. Always use &lt;code&gt;file-name-as-directory&lt;/code&gt;.</source>
          <target state="translated">потому что это не переносимо. Всегда используйте &lt;code&gt;file-name-as-directory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38d8fe5c3796e1b93ceb59dcdb879c010507e64a" translate="yes" xml:space="preserve">
          <source>beep</source>
          <target state="translated">beep</target>
        </trans-unit>
        <trans-unit id="f13e68e8e53889d720f8b26eb3d6b188e9c48c48" translate="yes" xml:space="preserve">
          <source>before-change-functions</source>
          <target state="translated">before-change-functions</target>
        </trans-unit>
        <trans-unit id="44f5a3d6efdcb2797c96ba31e6cf4a6e872d66b2" translate="yes" xml:space="preserve">
          <source>before-hack-local-variables-hook</source>
          <target state="translated">before-hack-local-variables-hook</target>
        </trans-unit>
        <trans-unit id="e5d1efe91a85851a226aa712ad5749ceefb6a47c" translate="yes" xml:space="preserve">
          <source>before-init-hook</source>
          <target state="translated">before-init-hook</target>
        </trans-unit>
        <trans-unit id="b65f6aebecdafa7ca869c6575e5c05e9846ec3cb" translate="yes" xml:space="preserve">
          <source>before-make-frame-hook</source>
          <target state="translated">before-make-frame-hook</target>
        </trans-unit>
        <trans-unit id="7f989cf856f85948249d5befcf865ba5df5d1a12" translate="yes" xml:space="preserve">
          <source>before-revert-hook</source>
          <target state="translated">before-revert-hook</target>
        </trans-unit>
        <trans-unit id="8e8b1d0f110b050a8bf84826caa7f347c11074ca" translate="yes" xml:space="preserve">
          <source>before-save-hook</source>
          <target state="translated">before-save-hook</target>
        </trans-unit>
        <trans-unit id="9a6ab0ee3e8ca57ccc2691576a659add71810df4" translate="yes" xml:space="preserve">
          <source>beginning-of-buffer</source>
          <target state="translated">beginning-of-buffer</target>
        </trans-unit>
        <trans-unit id="a1b9107e42b217f36c7450a7b7a33000479cf89f" translate="yes" xml:space="preserve">
          <source>beginning-of-defun</source>
          <target state="translated">beginning-of-defun</target>
        </trans-unit>
        <trans-unit id="c248d5a838d8a1fb10bc74b8ef3f4127c3f1cde1" translate="yes" xml:space="preserve">
          <source>beginning-of-defun-function</source>
          <target state="translated">beginning-of-defun-function</target>
        </trans-unit>
        <trans-unit id="0c0ba84fc6473bda64913099025a1e8f1b2561e1" translate="yes" xml:space="preserve">
          <source>beginning-of-line</source>
          <target state="translated">beginning-of-line</target>
        </trans-unit>
        <trans-unit id="fc38e4aeb7a5b66c5616d1fa21a41af646fb7594" translate="yes" xml:space="preserve">
          <source>benchmark</source>
          <target state="translated">benchmark</target>
        </trans-unit>
        <trans-unit id="3ca051ebb35d46f4efe134fda784712cf3e55213" translate="yes" xml:space="preserve">
          <source>benchmark.el</source>
          <target state="translated">benchmark.el</target>
        </trans-unit>
        <trans-unit id="f66723c07f9f3c00e7720198e32939be417b2223" translate="yes" xml:space="preserve">
          <source>bidi-class</source>
          <target state="translated">bidi-class</target>
        </trans-unit>
        <trans-unit id="fac0f929ad6fe032b202b5fb48b04926d2f98fb5" translate="yes" xml:space="preserve">
          <source>bidi-display-reordering</source>
          <target state="translated">bidi-display-reordering</target>
        </trans-unit>
        <trans-unit id="2dba00ad4d052adb6e55eda7bee402b6e32ba8ad" translate="yes" xml:space="preserve">
          <source>bidi-find-overridden-directionality</source>
          <target state="translated">bidi-find-overridden-directionality</target>
        </trans-unit>
        <trans-unit id="cd4bd7ad008d2751f3a785520c26e7121d2fd2e4" translate="yes" xml:space="preserve">
          <source>bidi-paragraph-direction</source>
          <target state="translated">bidi-paragraph-direction</target>
        </trans-unit>
        <trans-unit id="90f02d5835146ab3efbcd660d8357f6341916726" translate="yes" xml:space="preserve">
          <source>bidi-paragraph-separate-re</source>
          <target state="translated">bidi-paragraph-separate-re</target>
        </trans-unit>
        <trans-unit id="911e1e938be7ff04b84e1a9ecc08ed88b5f8d552" translate="yes" xml:space="preserve">
          <source>bidi-paragraph-start-re</source>
          <target state="translated">bidi-paragraph-start-re</target>
        </trans-unit>
        <trans-unit id="b19e181a27a49cd6714d7083e18308093bb8c21f" translate="yes" xml:space="preserve">
          <source>bidi-string-mark-left-to-right</source>
          <target state="translated">bidi-string-mark-left-to-right</target>
        </trans-unit>
        <trans-unit id="bf2c21e7a88fb42c0d1eb00e0d25db8df70a7bc3" translate="yes" xml:space="preserve">
          <source>bignump</source>
          <target state="translated">bignump</target>
        </trans-unit>
        <trans-unit id="b77e52035f3b00d07c6f7889d4873c8ebdf6ca96" translate="yes" xml:space="preserve">
          <source>binary64 floating point format, which is standardized by &lt;a href=&quot;https://standards.ieee.org/standard/754-2019.html&quot;&gt;IEEE Std 754-2019&lt;/a&gt; and is discussed further in David Goldberg&amp;rsquo;s paper &amp;ldquo;&lt;a href=&quot;https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;What Every Computer Scientist Should Know About Floating-Point Arithmetic&lt;/a&gt;&amp;rdquo;. On modern platforms, floating-point operations follow the IEEE-754 standard closely; however, results are not always rounded correctly on some obsolescent platforms, notably 32-bit x86.</source>
          <target state="translated">Формат binary64 с плавающей запятой, который стандартизирован &lt;a href=&quot;https://standards.ieee.org/standard/754-2019.html&quot;&gt;IEEE Std 754-2019&lt;/a&gt; и обсуждается далее в статье Дэвида Голдберга &amp;laquo; &lt;a href=&quot;https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;Что должен знать каждый компьютерный ученый об арифметике с плавающей запятой&lt;/a&gt; &amp;raquo;. На современных платформах операции с плавающей запятой строго следуют стандарту IEEE-754; однако результаты не всегда округляются правильно на некоторых устаревших платформах, особенно на 32-разрядных платформах x86.</target>
        </trans-unit>
        <trans-unit id="d7f50d9b790ead41cb8993a8965bc8e7e63b5e67" translate="yes" xml:space="preserve">
          <source>bindat-get-field</source>
          <target state="translated">bindat-get-field</target>
        </trans-unit>
        <trans-unit id="f334803ef60b614055cad0e1db66d1fb90611e70" translate="yes" xml:space="preserve">
          <source>bindat-ip-to-string</source>
          <target state="translated">bindat-ip-to-string</target>
        </trans-unit>
        <trans-unit id="dd1b4313fae72c763a08a6c86211acf68d720b33" translate="yes" xml:space="preserve">
          <source>bindat-length</source>
          <target state="translated">bindat-length</target>
        </trans-unit>
        <trans-unit id="822dd3931e1f2fe9e5206aa1a81c56c44bd6ed5e" translate="yes" xml:space="preserve">
          <source>bindat-pack</source>
          <target state="translated">bindat-pack</target>
        </trans-unit>
        <trans-unit id="3a01c7a09eb715a3ea323bd05808eece290cc01a" translate="yes" xml:space="preserve">
          <source>bindat-unpack</source>
          <target state="translated">bindat-unpack</target>
        </trans-unit>
        <trans-unit id="7bc6cf8d4a7054e8dc938bac7e0c1fc0c5e89051" translate="yes" xml:space="preserve">
          <source>binds &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to the first two actual arguments, which are required. If one or two more arguments are provided, &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt; are bound to them respectively; any arguments after the first four are collected into a list and &lt;code&gt;e&lt;/code&gt; is bound to that list. Thus, if there are only two arguments, &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;d&lt;/code&gt; and &lt;code&gt;e&lt;/code&gt; are &lt;code&gt;nil&lt;/code&gt;; if two or three arguments, &lt;code&gt;d&lt;/code&gt; and &lt;code&gt;e&lt;/code&gt; are &lt;code&gt;nil&lt;/code&gt;; if four arguments or fewer, &lt;code&gt;e&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;. Note that exactly five arguments with an explicit &lt;code&gt;nil&lt;/code&gt; argument provided for &lt;code&gt;e&lt;/code&gt; will cause that &lt;code&gt;nil&lt;/code&gt; argument to be passed as a list with one element, &lt;code&gt;(nil)&lt;/code&gt;, as with any other single value for &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="translated">связывает &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;b&lt;/code&gt; с первыми двумя фактическими аргументами, которые необходимы. Если указан еще один или два аргумента, &lt;code&gt;c&lt;/code&gt; и &lt;code&gt;d&lt;/code&gt; привязываются к ним соответственно; любые аргументы после первых четырех собираются в список, и &lt;code&gt;e&lt;/code&gt; привязывается к этому списку. Таким образом, если есть только два аргумента, &lt;code&gt;c&lt;/code&gt; , &lt;code&gt;d&lt;/code&gt; и &lt;code&gt;e&lt;/code&gt; равны &lt;code&gt;nil&lt;/code&gt; ; если два или три аргумента, &lt;code&gt;d&lt;/code&gt; и &lt;code&gt;e&lt;/code&gt; равны &lt;code&gt;nil&lt;/code&gt; ; если четыре аргумента или меньше, &lt;code&gt;e&lt;/code&gt; равно &lt;code&gt;nil&lt;/code&gt; . Обратите внимание, что ровно пять аргументов с явным &lt;code&gt;nil&lt;/code&gt; Аргумент, предоставленный для &lt;code&gt;e&lt;/code&gt; , приведет к тому, что этот аргумент &lt;code&gt;nil&lt;/code&gt; будет передан как список с одним элементом &lt;code&gt;(nil)&lt;/code&gt; , как и любое другое отдельное значение для &lt;code&gt;e&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b21b2ad2e55b4f4c18f5244a49abc3022e0d4307" translate="yes" xml:space="preserve">
          <source>bit is set for both others and group, and the sticky bit is set.</source>
          <target state="translated">бит установлен как для других,так и для группы,а липкий бит установлен.</target>
        </trans-unit>
        <trans-unit id="5733a76950d4ffcf3d885cd8b562f7afc97e79d6" translate="yes" xml:space="preserve">
          <source>bitmap-spec-p</source>
          <target state="translated">bitmap-spec-p</target>
        </trans-unit>
        <trans-unit id="466bc8cef3e71de796ec483e212724a2c2044c68" translate="yes" xml:space="preserve">
          <source>black</source>
          <target state="translated">black</target>
        </trans-unit>
        <trans-unit id="43dba1f918d507717793447d9d3642c0b933f876" translate="yes" xml:space="preserve">
          <source>blink-cursor-alist</source>
          <target state="translated">blink-cursor-alist</target>
        </trans-unit>
        <trans-unit id="a104ae1ae162413d29ff405c941795a6bce11a7a" translate="yes" xml:space="preserve">
          <source>blink-matching-delay</source>
          <target state="translated">blink-matching-delay</target>
        </trans-unit>
        <trans-unit id="defe4780459134ce5aff4a3083afe440928367d3" translate="yes" xml:space="preserve">
          <source>blink-matching-open</source>
          <target state="translated">blink-matching-open</target>
        </trans-unit>
        <trans-unit id="cf451154dbabadfd6aad6ecedb4a5dc16273fae9" translate="yes" xml:space="preserve">
          <source>blink-matching-paren</source>
          <target state="translated">blink-matching-paren</target>
        </trans-unit>
        <trans-unit id="697240338e7779ea86c6fd8dfdec21f640f1c147" translate="yes" xml:space="preserve">
          <source>blink-matching-paren-distance</source>
          <target state="translated">blink-matching-paren-distance</target>
        </trans-unit>
        <trans-unit id="a78d6893ac34bc742d1eecd3cfce7ecaa28dfbe6" translate="yes" xml:space="preserve">
          <source>blink-paren-function</source>
          <target state="translated">blink-paren-function</target>
        </trans-unit>
        <trans-unit id="009c8881d699229bd395f09fa16c5ff619f3aed6" translate="yes" xml:space="preserve">
          <source>bobp</source>
          <target state="translated">bobp</target>
        </trans-unit>
        <trans-unit id="f2eeb85b41f624b0692099c9f0bf0b67b24ab308" translate="yes" xml:space="preserve">
          <source>bolp</source>
          <target state="translated">bolp</target>
        </trans-unit>
        <trans-unit id="5d7d7dc8983bd1c074e5c119186c00bfa1dea154" translate="yes" xml:space="preserve">
          <source>bool-vector</source>
          <target state="translated">bool-vector</target>
        </trans-unit>
        <trans-unit id="8fe30276046678da8e61fa9b269bc4726febc141" translate="yes" xml:space="preserve">
          <source>bool-vector-count-consecutive</source>
          <target state="translated">bool-vector-count-consecutive</target>
        </trans-unit>
        <trans-unit id="d99dc236052eb618bb29404d9709c59b4adfb183" translate="yes" xml:space="preserve">
          <source>bool-vector-count-population</source>
          <target state="translated">bool-vector-count-population</target>
        </trans-unit>
        <trans-unit id="746259cd494b147d7b71edb02f931ed78047d8b4" translate="yes" xml:space="preserve">
          <source>bool-vector-exclusive-or</source>
          <target state="translated">bool-vector-exclusive-or</target>
        </trans-unit>
        <trans-unit id="5a9a5349a722c37d30537dd4dd0d3423806d0660" translate="yes" xml:space="preserve">
          <source>bool-vector-intersection</source>
          <target state="translated">bool-vector-intersection</target>
        </trans-unit>
        <trans-unit id="599d4cd4caa4548dcaffde5f20d2cd4d69dcb966" translate="yes" xml:space="preserve">
          <source>bool-vector-not</source>
          <target state="translated">bool-vector-not</target>
        </trans-unit>
        <trans-unit id="3a98504bbe671c6bafc94a5da752398791874b4a" translate="yes" xml:space="preserve">
          <source>bool-vector-p</source>
          <target state="translated">bool-vector-p</target>
        </trans-unit>
        <trans-unit id="3b237ab398028e560bed4ce868b2109294b975e1" translate="yes" xml:space="preserve">
          <source>bool-vector-set-difference</source>
          <target state="translated">bool-vector-set-difference</target>
        </trans-unit>
        <trans-unit id="907edaa23d619fb67ec8250956afff6d18cbd527" translate="yes" xml:space="preserve">
          <source>bool-vector-subsetp</source>
          <target state="translated">bool-vector-subsetp</target>
        </trans-unit>
        <trans-unit id="936cd9d2984681998c36e58e5278e406e38f5daf" translate="yes" xml:space="preserve">
          <source>bool-vector-union</source>
          <target state="translated">bool-vector-union</target>
        </trans-unit>
        <trans-unit id="22e8129cee15712c1431f81b4bd653368c6d75cd" translate="yes" xml:space="preserve">
          <source>booleanp</source>
          <target state="translated">booleanp</target>
        </trans-unit>
        <trans-unit id="3c71cc99d2fc1c12a3d3e1b27e448ca612a89a1d" translate="yes" xml:space="preserve">
          <source>bootstrap</source>
          <target state="translated">bootstrap</target>
        </trans-unit>
        <trans-unit id="6fec8e1be05965245e145b2c190eb6ae6293d43f" translate="yes" xml:space="preserve">
          <source>bootstrap-emacs.pdmp</source>
          <target state="translated">bootstrap-emacs.pdmp</target>
        </trans-unit>
        <trans-unit id="1279cfb5998f3b589a7f02558880240d85885666" translate="yes" xml:space="preserve">
          <source>boundp</source>
          <target state="translated">boundp</target>
        </trans-unit>
        <trans-unit id="d733442bbada420840556026d804c7be31b9a42c" translate="yes" xml:space="preserve">
          <source>buffer (using Lisp Interaction mode) is a sparse keymap in which the entry for</source>
          <target state="translated">буфер (использующий режим взаимодействия Lisp)-это разреженная клавиатурная карта,в которой запись для</target>
        </trans-unit>
        <trans-unit id="58f21b4d7e3add27f74d2a6576161142083474b8" translate="yes" xml:space="preserve">
          <source>buffer directly and wants to ensure that it exists should use the function &lt;code&gt;messages-buffer&lt;/code&gt;.</source>
          <target state="translated">buffer напрямую и хочет убедиться, что он существует, должен использовать функцию &lt;code&gt;messages-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af42e51fcd451856bb84a262257dba30345872ad" translate="yes" xml:space="preserve">
          <source>buffer does not call these functions, and neither do certain internal buffer changes, such as changes in buffers created by Emacs internally for certain jobs, that should not be visible to Lisp programs.</source>
          <target state="translated">буфер не вызывает эти функции,а также не изменяет некоторые внутренние буферы,например,изменения во внутренних буферах,создаваемых Emacs для определённых вакансий,которые не должны быть видны программам Lisp.</target>
        </trans-unit>
        <trans-unit id="cbbc622444327fd3d2997a3e1ebfd2f6a5a6c679" translate="yes" xml:space="preserve">
          <source>buffer exists and is empty, it inserts &lt;code&gt;(substitute-command-keys initial-scratch-message)&lt;/code&gt; into that buffer.</source>
          <target state="translated">буфер существует и пуст, он вставляет &lt;code&gt;(substitute-command-keys initial-scratch-message)&lt;/code&gt; в этот буфер.</target>
        </trans-unit>
        <trans-unit id="ddc2bf20ceb958bc5260dc360c155b1d09f99316" translate="yes" xml:space="preserve">
          <source>buffer is &lt;code&gt;(&quot;:%s&quot;)&lt;/code&gt;, which allows the shell to display its status along with the major mode as: &amp;lsquo;</source>
          <target state="translated">буфер равен &lt;code&gt;(&quot;:%s&quot;)&lt;/code&gt; , что позволяет оболочке отображать свой статус вместе с основным режимом как: '</target>
        </trans-unit>
        <trans-unit id="903ddc52cf55d7c93ec03b8faa3a73f8b1231c22" translate="yes" xml:space="preserve">
          <source>buffer is displayed alongside &lt;code&gt;initial-buffer-choice&lt;/code&gt;.</source>
          <target state="translated">буфер отображается рядом с &lt;code&gt;initial-buffer-choice&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="397ce7c7103a1c54e5ca057446231bc4eae64a16" translate="yes" xml:space="preserve">
          <source>buffer is empty.</source>
          <target state="translated">буфер пуст.</target>
        </trans-unit>
        <trans-unit id="9a4897ff4f51a834ab02ea3f3a09f8c1a9faf465" translate="yes" xml:space="preserve">
          <source>buffer is killed when you continue execution, and recreated next time it is needed.</source>
          <target state="translated">буфер убивается,когда вы продолжаете выполнение,и воссоздается в следующий раз,когда он понадобится.</target>
        </trans-unit>
        <trans-unit id="efe858af0aa6b0e93a9a54f8fdaf2cc375d72683" translate="yes" xml:space="preserve">
          <source>buffer should invoke this function before clearing the buffer. The &lt;var&gt;item&lt;/var&gt; argument should have the form &lt;code&gt;(&lt;var&gt;function&lt;/var&gt; . &lt;var&gt;args&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;function&lt;/var&gt; is a function to call, with argument list &lt;var&gt;args&lt;/var&gt;, to regenerate the help buffer. The &lt;var&gt;interactive-p&lt;/var&gt; argument is non-&lt;code&gt;nil&lt;/code&gt; if the calling command was invoked interactively; in that case, the stack of items for the</source>
          <target state="translated">buffer должен вызывать эту функцию перед очисткой буфера. &lt;var&gt;item&lt;/var&gt; аргумент должен иметь вид &lt;code&gt;(&lt;var&gt;function&lt;/var&gt; . &lt;var&gt;args&lt;/var&gt;)&lt;/code&gt; , где &lt;var&gt;function&lt;/var&gt; является функцией для вызова, с списком аргументов &lt;var&gt;args&lt;/var&gt; , чтобы регенерировать помощи буфер. &lt;var&gt;interactive-p&lt;/var&gt; аргумент не - &lt;code&gt;nil&lt;/code&gt; , если вызывающая команда была вызвана в интерактивном режиме ; в этом случае стопка элементов для</target>
        </trans-unit>
        <trans-unit id="b483d433c36187b1adf5ea032bc54e899009cc8d" translate="yes" xml:space="preserve">
          <source>buffer so that the user can refer back to them. This includes all the messages that are output with &lt;code&gt;message&lt;/code&gt;. By default, this buffer is read-only and uses the major mode &lt;code&gt;messages-buffer-mode&lt;/code&gt;. Nothing prevents the user from killing the</source>
          <target state="translated">буфер, чтобы пользователь мог вернуться к ним. Сюда входят все сообщения, которые выводятся вместе с &lt;code&gt;message&lt;/code&gt; . По умолчанию этот буфер доступен только для чтения и использует основной режим &lt;code&gt;messages-buffer-mode&lt;/code&gt; . Ничто не мешает пользователю убить</target>
        </trans-unit>
        <trans-unit id="d7a56994331d66dc471a526995820f657450d1fd" translate="yes" xml:space="preserve">
          <source>buffer when Emacs starts up. If it is &lt;code&gt;nil&lt;/code&gt;, the</source>
          <target state="translated">буфер при запуске Emacs. Если это &lt;code&gt;nil&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="c69684b69d2b6f0988d6369adcb38be45f217c8b" translate="yes" xml:space="preserve">
          <source>buffer will automatically update twice per second. You can make the refresh rate faster or slower by customizing this variable.</source>
          <target state="translated">буфер будет автоматически обновляться дважды в секунду.Вы можете сделать частоту обновления быстрее или медленнее,настроив эту переменную.</target>
        </trans-unit>
        <trans-unit id="e07342d4fdd9efc4573078f9dcb37521bad24c81" translate="yes" xml:space="preserve">
          <source>buffer you can use the commands of Lisp Interaction mode (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Interaction.html#Lisp-Interaction&quot;&gt;Lisp Interaction&lt;/a&gt; in</source>
          <target state="translated">buffer вы можете использовать команды режима взаимодействия с Лиспом (см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Interaction.html#Lisp-Interaction&quot;&gt;Взаимодействие с Лиспом&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="2722ab6ba8f927264d9ae97e1b9f25e5ac0040b1" translate="yes" xml:space="preserve">
          <source>buffer&amp;rsquo;s &amp;lsquo;</source>
          <target state="translated">буфер '</target>
        </trans-unit>
        <trans-unit id="f56af144b95cb289ec4ac9347e9a75290840da03" translate="yes" xml:space="preserve">
          <source>buffer, but the next display of a message recreates it. Any Lisp code that needs to access the</source>
          <target state="translated">буфер,но следующее отображение сообщения воссоздает его.Любой код на языке Lisp,который необходим для доступа к</target>
        </trans-unit>
        <trans-unit id="b6ded2b5a5bb2962f6ba9f1606eafc7f88a6fb9c" translate="yes" xml:space="preserve">
          <source>buffer, but without text properties (see &lt;a href=&quot;logging-messages#Logging-Messages&quot;&gt;Logging Messages&lt;/a&gt;).</source>
          <target state="translated">буфер, но без текстовых свойств (см. &lt;a href=&quot;logging-messages#Logging-Messages&quot;&gt;Сообщения журнала&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b025fb1abe38ba90bbb82204e14a0563b16c68b7" translate="yes" xml:space="preserve">
          <source>buffer, or to the echo area.</source>
          <target state="translated">буфер,или в зону эха.</target>
        </trans-unit>
        <trans-unit id="59022bd261061ce35b0bbbb0e92792cc520e88fc" translate="yes" xml:space="preserve">
          <source>buffer, so that the user can see them. Except as described below, this is the &lt;em&gt;only&lt;/em&gt; way these arguments are used.</source>
          <target state="translated">буфер, чтобы пользователь мог их видеть. За исключением случаев, описанных ниже, это &lt;em&gt;единственный&lt;/em&gt; способ использования этих аргументов.</target>
        </trans-unit>
        <trans-unit id="4f26236e474459a3b85ccbacdedc35bdc5db877a" translate="yes" xml:space="preserve">
          <source>buffer, which is used to regenerate the help information when the user clicks on the &amp;lsquo;</source>
          <target state="translated">буфер, который используется для восстановления справочной информации, когда пользователь нажимает кнопку '</target>
        </trans-unit>
        <trans-unit id="38d68bac11ecb765a69d8caa0f02ab49aa8fe349" translate="yes" xml:space="preserve">
          <source>buffer-access-fontified-property</source>
          <target state="translated">buffer-access-fontified-property</target>
        </trans-unit>
        <trans-unit id="fa56a362b5598122cb69c8a2c44f4afc56bdc95e" translate="yes" xml:space="preserve">
          <source>buffer-access-fontify-functions</source>
          <target state="translated">buffer-access-fontify-functions</target>
        </trans-unit>
        <trans-unit id="959beb1b125a9e14e3939248a4feb437ef85c998" translate="yes" xml:space="preserve">
          <source>buffer-auto-save-file-format</source>
          <target state="translated">buffer-auto-save-file-format</target>
        </trans-unit>
        <trans-unit id="6b0478a2b971706d6cdd2ec88fcd15709a1610e3" translate="yes" xml:space="preserve">
          <source>buffer-auto-save-file-name</source>
          <target state="translated">buffer-auto-save-file-name</target>
        </trans-unit>
        <trans-unit id="1d3f5e36669056c6d4945414ed1cddac2d4f6f59" translate="yes" xml:space="preserve">
          <source>buffer-backed-up</source>
          <target state="translated">buffer-backed-up</target>
        </trans-unit>
        <trans-unit id="a9874674f9112ef3f612dfc5b526c01f2f2367e6" translate="yes" xml:space="preserve">
          <source>buffer-base-buffer</source>
          <target state="translated">buffer-base-buffer</target>
        </trans-unit>
        <trans-unit id="6bb47e5c59fd7c42431c423142e4cf9755851246" translate="yes" xml:space="preserve">
          <source>buffer-chars-modified-tick</source>
          <target state="translated">buffer-chars-modified-tick</target>
        </trans-unit>
        <trans-unit id="f72fe7163404a75f553e3fde30a40e7aaa073b8e" translate="yes" xml:space="preserve">
          <source>buffer-disable-undo</source>
          <target state="translated">buffer-disable-undo</target>
        </trans-unit>
        <trans-unit id="52410217d62bf8fba94aa7d7b2061677091f294f" translate="yes" xml:space="preserve">
          <source>buffer-display-count</source>
          <target state="translated">buffer-display-count</target>
        </trans-unit>
        <trans-unit id="23b1c0036af87f34ee2e1c935edf732b708418e4" translate="yes" xml:space="preserve">
          <source>buffer-display-table</source>
          <target state="translated">buffer-display-table</target>
        </trans-unit>
        <trans-unit id="5cec8d617b90cff5dfee0fc316974a3fa5952d1f" translate="yes" xml:space="preserve">
          <source>buffer-display-time</source>
          <target state="translated">buffer-display-time</target>
        </trans-unit>
        <trans-unit id="8199f8a859ad1b67d73d9fcea2a076c22df2c504" translate="yes" xml:space="preserve">
          <source>buffer-enable-undo</source>
          <target state="translated">buffer-enable-undo</target>
        </trans-unit>
        <trans-unit id="c74db4d19f29d4bdd2c8c655f0276a1d03a39700" translate="yes" xml:space="preserve">
          <source>buffer-end</source>
          <target state="translated">buffer-end</target>
        </trans-unit>
        <trans-unit id="ec1e379e6ce51afd5b052e9b922891ea9819e973" translate="yes" xml:space="preserve">
          <source>buffer-file-coding-system</source>
          <target state="translated">buffer-file-coding-system</target>
        </trans-unit>
        <trans-unit id="686c0bdcc61e42f9f36b362fe893c548a36cc5ff" translate="yes" xml:space="preserve">
          <source>buffer-file-format</source>
          <target state="translated">buffer-file-format</target>
        </trans-unit>
        <trans-unit id="3ae670d04b55bac49ff26e0327dd6f1d159da9f1" translate="yes" xml:space="preserve">
          <source>buffer-file-name</source>
          <target state="translated">buffer-file-name</target>
        </trans-unit>
        <trans-unit id="70982799934a4d5fa8e1d4fb1df4654d971239ca" translate="yes" xml:space="preserve">
          <source>buffer-file-number</source>
          <target state="translated">buffer-file-number</target>
        </trans-unit>
        <trans-unit id="216d8e7b5e9b5813b28a3498e800391e42429b19" translate="yes" xml:space="preserve">
          <source>buffer-file-truename</source>
          <target state="translated">buffer-file-truename</target>
        </trans-unit>
        <trans-unit id="0a39477e84277394720ace19581fd0fbb985d7ca" translate="yes" xml:space="preserve">
          <source>buffer-hash</source>
          <target state="translated">buffer-hash</target>
        </trans-unit>
        <trans-unit id="499d1e0bcb7c23ad6f114235eb7219c4844257a1" translate="yes" xml:space="preserve">
          <source>buffer-invisibility-spec</source>
          <target state="translated">buffer-invisibility-spec</target>
        </trans-unit>
        <trans-unit id="8e32567f5293d1386ded0cbba21ed097d69f00ec" translate="yes" xml:space="preserve">
          <source>buffer-list</source>
          <target state="translated">buffer-list</target>
        </trans-unit>
        <trans-unit id="939077514c3778dc81a49d0702a03df6da57a15d" translate="yes" xml:space="preserve">
          <source>buffer-list-update-hook</source>
          <target state="translated">buffer-list-update-hook</target>
        </trans-unit>
        <trans-unit id="e6b5fa613d57049e0036dd1721a400a14b6dc045" translate="yes" xml:space="preserve">
          <source>buffer-live-p</source>
          <target state="translated">buffer-live-p</target>
        </trans-unit>
        <trans-unit id="0157e7ceea37b99aab0db3bb40e4fb505d625a42" translate="yes" xml:space="preserve">
          <source>buffer-local-value</source>
          <target state="translated">buffer-local-value</target>
        </trans-unit>
        <trans-unit id="371ac9dd28299a86e514ef351729fddf92f8e40e" translate="yes" xml:space="preserve">
          <source>buffer-local-variables</source>
          <target state="translated">buffer-local-variables</target>
        </trans-unit>
        <trans-unit id="a8522e2b576d30ec1602919d39e5e4aacc4d88c8" translate="yes" xml:space="preserve">
          <source>buffer-modified-p</source>
          <target state="translated">buffer-modified-p</target>
        </trans-unit>
        <trans-unit id="e2a1424870e63c465011f8ccad14ed9e8bc6147b" translate="yes" xml:space="preserve">
          <source>buffer-modified-tick</source>
          <target state="translated">buffer-modified-tick</target>
        </trans-unit>
        <trans-unit id="200953599b3ec9e57158518f017c087de6188a21" translate="yes" xml:space="preserve">
          <source>buffer-name</source>
          <target state="translated">buffer-name</target>
        </trans-unit>
        <trans-unit id="a8c2e5ceea11408922937b1d12c48f58ab8ccd26" translate="yes" xml:space="preserve">
          <source>buffer-name-history</source>
          <target state="translated">buffer-name-history</target>
        </trans-unit>
        <trans-unit id="06e27a82cf57c2354d57b94b82fe63085996b064" translate="yes" xml:space="preserve">
          <source>buffer-narrowed-p</source>
          <target state="translated">buffer-narrowed-p</target>
        </trans-unit>
        <trans-unit id="27065f4e1488cdb7751d589dd88b0da785786a14" translate="yes" xml:space="preserve">
          <source>buffer-offer-save</source>
          <target state="translated">buffer-offer-save</target>
        </trans-unit>
        <trans-unit id="864a56cd58d2c12fc6f9665b849df0ddf3e07fa9" translate="yes" xml:space="preserve">
          <source>buffer-read-only</source>
          <target state="translated">buffer-read-only</target>
        </trans-unit>
        <trans-unit id="5aaccef76daa22bb1670a9ce8b87d0e4a6367278" translate="yes" xml:space="preserve">
          <source>buffer-save-without-query</source>
          <target state="translated">buffer-save-without-query</target>
        </trans-unit>
        <trans-unit id="fe3c1ce19cec397f5f04b0386c138e93d520a208" translate="yes" xml:space="preserve">
          <source>buffer-saved-size</source>
          <target state="translated">buffer-saved-size</target>
        </trans-unit>
        <trans-unit id="9ab6cee5533b07249f5233abdb78a4e0d038e2f2" translate="yes" xml:space="preserve">
          <source>buffer-size</source>
          <target state="translated">buffer-size</target>
        </trans-unit>
        <trans-unit id="d41a9f78dd23777a3219301afe7bf6577b26e60f" translate="yes" xml:space="preserve">
          <source>buffer-stale-function</source>
          <target state="translated">buffer-stale-function</target>
        </trans-unit>
        <trans-unit id="32454fd3d46e11b88c81d9eabe5cfbd55cde6b96" translate="yes" xml:space="preserve">
          <source>buffer-string</source>
          <target state="translated">buffer-string</target>
        </trans-unit>
        <trans-unit id="a8ea6b0becada411248444bc708d9915a88921d9" translate="yes" xml:space="preserve">
          <source>buffer-substring</source>
          <target state="translated">buffer-substring</target>
        </trans-unit>
        <trans-unit id="de1077e0b8a89084393930a9162dbcf5b9aeef46" translate="yes" xml:space="preserve">
          <source>buffer-substring-filters</source>
          <target state="translated">buffer-substring-filters</target>
        </trans-unit>
        <trans-unit id="7851e639b28a002fcf66bc142c64f608ed003057" translate="yes" xml:space="preserve">
          <source>buffer-substring-no-properties</source>
          <target state="translated">buffer-substring-no-properties</target>
        </trans-unit>
        <trans-unit id="39d153c88190e48e8b23786bc3cffe5601820745" translate="yes" xml:space="preserve">
          <source>buffer-substring-with-bidi-context</source>
          <target state="translated">buffer-substring-with-bidi-context</target>
        </trans-unit>
        <trans-unit id="1837545526a9bff5da92b96e4b9cec09bb013dbc" translate="yes" xml:space="preserve">
          <source>buffer-swap-text</source>
          <target state="translated">buffer-swap-text</target>
        </trans-unit>
        <trans-unit id="5df10256974def134391094b0a53e4e3eeed87da" translate="yes" xml:space="preserve">
          <source>buffer-undo-list</source>
          <target state="translated">buffer-undo-list</target>
        </trans-unit>
        <trans-unit id="907d07509ad60935ecd8f264c2e81ec1e99439b4" translate="yes" xml:space="preserve">
          <source>buffer.</source>
          <target state="translated">buffer.</target>
        </trans-unit>
        <trans-unit id="a12ca972d58cc4fb6b990ba5cb882aed8f221f77" translate="yes" xml:space="preserve">
          <source>buffer. If it does not exist, it creates it, and switches it to &lt;code&gt;messages-buffer-mode&lt;/code&gt;.</source>
          <target state="translated">буфер. Если он не существует, он создает его и переключает в &lt;code&gt;messages-buffer-mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09d46d037f83ec5d76f20f399a28941fe4a0f023" translate="yes" xml:space="preserve">
          <source>buffer. In other respects it is equivalent to &lt;code&gt;display-warning&lt;/code&gt;.</source>
          <target state="translated">буфер. В остальном это эквивалентно &lt;code&gt;display-warning&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e472ed87aefd7845d5fee161efecf9bd9e131fdf" translate="yes" xml:space="preserve">
          <source>buffer. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/List-Buffers.html#List-Buffers&quot;&gt;Listing Existing Buffers&lt;/a&gt; in</source>
          <target state="translated">буфер. См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/List-Buffers.html#List-Buffers&quot;&gt;Список существующих буферов&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="33376ca530eb0f8f98a255afe0034c615da5aea1" translate="yes" xml:space="preserve">
          <source>buffer. The return value is always nil.</source>
          <target state="translated">буфер.Возвращаемое значение всегда равно нулю.</target>
        </trans-unit>
        <trans-unit id="b793428fda847b25484e686eb150e10fb4e8c573" translate="yes" xml:space="preserve">
          <source>buffer. The value &lt;code&gt;t&lt;/code&gt; means there is no limit on how many lines to keep. The value &lt;code&gt;nil&lt;/code&gt; disables message logging entirely. Here&amp;rsquo;s how to display a message and prevent it from being logged:</source>
          <target state="translated">буфер. Значение &lt;code&gt;t&lt;/code&gt; означает, что ограничений на количество строк нет. Значение &lt;code&gt;nil&lt;/code&gt; полностью отключает ведение журнала сообщений. Вот как отобразить сообщение и предотвратить его регистрацию:</target>
        </trans-unit>
        <trans-unit id="46855e94144a938d2553a493571fe7cd8572b8f1" translate="yes" xml:space="preserve">
          <source>buffer. The value should be a symbol that is a major mode command. The default value is &lt;code&gt;lisp-interaction-mode&lt;/code&gt;.</source>
          <target state="translated">буфер. Значение должно быть символом, который является командой основного режима. Значение по умолчанию - &lt;code&gt;lisp-interaction-mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4eef8524fd3e2758d1eb93d5d558899c3e43f21c" translate="yes" xml:space="preserve">
          <source>buffer.)</source>
          <target state="translated">buffer.)</target>
        </trans-unit>
        <trans-unit id="9cd76be221821899abeb75f7a9bf5d51bfda6497" translate="yes" xml:space="preserve">
          <source>buffer.h</source>
          <target state="translated">buffer.h</target>
        </trans-unit>
        <trans-unit id="33a1956c41361312de7802ac3febe603aa2f2899" translate="yes" xml:space="preserve">
          <source>buffer; but see &lt;code&gt;initial-buffer-choice&lt;/code&gt;, below.</source>
          <target state="translated">буфер; но см. &lt;code&gt;initial-buffer-choice&lt;/code&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="936e1a12761df7718dc5dafb1c3466dcd2f7e3eb" translate="yes" xml:space="preserve">
          <source>bufferp</source>
          <target state="translated">bufferp</target>
        </trans-unit>
        <trans-unit id="9b7b514c4b1b5087609224e9e9ce45134a0c4eaa" translate="yes" xml:space="preserve">
          <source>bufferpos-to-filepos</source>
          <target state="translated">bufferpos-to-filepos</target>
        </trans-unit>
        <trans-unit id="1ef184f7bccca4536ce8b6db722e4e08770090b4" translate="yes" xml:space="preserve">
          <source>buffers appear in a window on the bottom right side of the frame.</source>
          <target state="translated">Буферы появляются в окне в нижней правой части рамы.</target>
        </trans-unit>
        <trans-unit id="25a13e8c216a4d30810b68744f8b1583e9f7c032" translate="yes" xml:space="preserve">
          <source>buffers share a window on the bottom left side of the frame and the</source>
          <target state="translated">буферы делят между собой окно в нижней левой части рамы и</target>
        </trans-unit>
        <trans-unit id="0f401af511bfff44e32812b989befbfd7a2f90f9" translate="yes" xml:space="preserve">
          <source>buffers, and also when evaluating expressions via</source>
          <target state="translated">буферы,а также при оценке выражений через</target>
        </trans-unit>
        <trans-unit id="5180d602cf70d63c77ea9dabd804e37a427ca655" translate="yes" xml:space="preserve">
          <source>buffers, nor evaluation using</source>
          <target state="translated">буферы,ни оценка с использованием</target>
        </trans-unit>
        <trans-unit id="1706b34bc261c7eb4cb4d94c4d98a51467d797c9" translate="yes" xml:space="preserve">
          <source>buffers.</source>
          <target state="translated">buffers.</target>
        </trans-unit>
        <trans-unit id="90532ff0e1a43ddc5de084570990cf0010a4e35b" translate="yes" xml:space="preserve">
          <source>bury-buffer</source>
          <target state="translated">bury-buffer</target>
        </trans-unit>
        <trans-unit id="7a8e7aec4fe149efae0a82e3fcb71c353a2eaa0f" translate="yes" xml:space="preserve">
          <source>but you can also add keyword-value pairs before the arguments, like this:</source>
          <target state="translated">но вы также можете добавить пары ключевых слов перед аргументами,например,вот так:</target>
        </trans-unit>
        <trans-unit id="efc2425b3c0f0d465563a4ed6aa8fcbd7a0ee37c" translate="yes" xml:space="preserve">
          <source>but you really want to quit, and not debug, use the</source>
          <target state="translated">но ты действительно хочешь уволиться,а не отлаживать,использовать</target>
        </trans-unit>
        <trans-unit id="d176897bc8cd324d780808a42bde9444b72a6afd" translate="yes" xml:space="preserve">
          <source>butlast</source>
          <target state="translated">butlast</target>
        </trans-unit>
        <trans-unit id="084ed578964817e3de6d5eccddfca1a2694d4628" translate="yes" xml:space="preserve">
          <source>button-activate</source>
          <target state="translated">button-activate</target>
        </trans-unit>
        <trans-unit id="cc349336c170a066ae2327b784a9ffad73a20d32" translate="yes" xml:space="preserve">
          <source>button-at</source>
          <target state="translated">button-at</target>
        </trans-unit>
        <trans-unit id="d7e10429515f87a9bdd7ee901429f5d7114a44be" translate="yes" xml:space="preserve">
          <source>button-end</source>
          <target state="translated">button-end</target>
        </trans-unit>
        <trans-unit id="9c458c797c0623f5b7adf9cf98c62a65bf6e8a5a" translate="yes" xml:space="preserve">
          <source>button-get</source>
          <target state="translated">button-get</target>
        </trans-unit>
        <trans-unit id="a90df4b62390dcc83258a8d0d8a3172b9c7b66a5" translate="yes" xml:space="preserve">
          <source>button-has-type-p</source>
          <target state="translated">button-has-type-p</target>
        </trans-unit>
        <trans-unit id="06e70233fdf00ba1f955fa7a79169f6e2548ed62" translate="yes" xml:space="preserve">
          <source>button-label</source>
          <target state="translated">button-label</target>
        </trans-unit>
        <trans-unit id="2800f938e159cf7f3d28fbdbbb810b69813230d9" translate="yes" xml:space="preserve">
          <source>button-put</source>
          <target state="translated">button-put</target>
        </trans-unit>
        <trans-unit id="c856561217cb5cfbf222a276539b7ceb14a41fc7" translate="yes" xml:space="preserve">
          <source>button-start</source>
          <target state="translated">button-start</target>
        </trans-unit>
        <trans-unit id="7c189ae5728b5f54f88fe8233d5409efb30705b5" translate="yes" xml:space="preserve">
          <source>button-type</source>
          <target state="translated">button-type</target>
        </trans-unit>
        <trans-unit id="7b499c03075dc2fd26441e76c1f13a0f56e39343" translate="yes" xml:space="preserve">
          <source>button-type-get</source>
          <target state="translated">button-type-get</target>
        </trans-unit>
        <trans-unit id="cf37b75faff9dbbd6c2c867cefa09a3a5f9c4ded" translate="yes" xml:space="preserve">
          <source>button-type-put</source>
          <target state="translated">button-type-put</target>
        </trans-unit>
        <trans-unit id="2d4c3629d6e60b0d06b9bddc17789c8ef613071e" translate="yes" xml:space="preserve">
          <source>button-type-subtype-p</source>
          <target state="translated">button-type-subtype-p</target>
        </trans-unit>
        <trans-unit id="3f668ce345889a9c5c97e38a3e8f8a4d8766d41c" translate="yes" xml:space="preserve">
          <source>by default (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Find-Init.html#Find-Init&quot;&gt;How Emacs Finds Your Init File&lt;/a&gt; in</source>
          <target state="translated">по умолчанию (см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Find-Init.html#Find-Init&quot;&gt;Как Emacs находит ваш файл инициализации&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="3cc2a2cb48c20313765f650d97c2e52d0fa74354" translate="yes" xml:space="preserve">
          <source>by installing the &lt;code&gt;no-delete-other-windows&lt;/code&gt; parameter for each of these windows.</source>
          <target state="translated">установив параметр &lt;code&gt;no-delete-other-windows&lt;/code&gt; для каждого из этих окон.</target>
        </trans-unit>
        <trans-unit id="78123ca74bacf885bb1937d816faafc08f9a637d" translate="yes" xml:space="preserve">
          <source>by installing the &lt;code&gt;no-other-window&lt;/code&gt; parameter for each of these windows. In addition, it makes sure that side windows are not deleted via</source>
          <target state="translated">установив параметр &lt;code&gt;no-other-window&lt;/code&gt; для каждого из этих окон. Кроме того, он следит за тем, чтобы боковые окна не удалялись через</target>
        </trans-unit>
        <trans-unit id="2ee6de454a5d0628ee9cc825d8aba8c3d62b7add" translate="yes" xml:space="preserve">
          <source>byte-boolean-vars</source>
          <target state="translated">byte-boolean-vars</target>
        </trans-unit>
        <trans-unit id="9be77cd87f2373c29943c630b8a0c2cd87d5e7f8" translate="yes" xml:space="preserve">
          <source>byte-code-function-p</source>
          <target state="translated">byte-code-function-p</target>
        </trans-unit>
        <trans-unit id="8081fb7bff7a085d0e50482fd816cb30f49f3c06" translate="yes" xml:space="preserve">
          <source>byte-compile</source>
          <target state="translated">byte-compile</target>
        </trans-unit>
        <trans-unit id="d7900311bcfbee549187e00c3d2d4a4e7332fcdf" translate="yes" xml:space="preserve">
          <source>byte-compile-dynamic</source>
          <target state="translated">byte-compile-dynamic</target>
        </trans-unit>
        <trans-unit id="c72769ac84a5daf28e4e7b8d5f24a5a41a155ccc" translate="yes" xml:space="preserve">
          <source>byte-compile-dynamic-docstrings</source>
          <target state="translated">byte-compile-dynamic-docstrings</target>
        </trans-unit>
        <trans-unit id="7acd752daff3d85f70604b7bddd0b90a47e5a059" translate="yes" xml:space="preserve">
          <source>byte-compile-file</source>
          <target state="translated">byte-compile-file</target>
        </trans-unit>
        <trans-unit id="ecb12d2384122429e0953210f8c282b41c32d5b4" translate="yes" xml:space="preserve">
          <source>byte-compiled Lisp files are available. The produced dump file is usually named</source>
          <target state="translated">доступны файлы Lisp,скомпилированные байтами.Созданный файл дампа обычно называется</target>
        </trans-unit>
        <trans-unit id="b0725338da5e468be1acc5185ed52c27b34d8b75" translate="yes" xml:space="preserve">
          <source>byte-recompile-directory</source>
          <target state="translated">byte-recompile-directory</target>
        </trans-unit>
        <trans-unit id="9ede40359b6e2a961f1c1c354dfac69c94a49f78" translate="yes" xml:space="preserve">
          <source>byte-to-position</source>
          <target state="translated">byte-to-position</target>
        </trans-unit>
        <trans-unit id="b97a0d0ead0eae5595a4aabdc862718937e70052" translate="yes" xml:space="preserve">
          <source>byte-to-string</source>
          <target state="translated">byte-to-string</target>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="translated">c</target>
        </trans-unit>
        <trans-unit id="a9ce2a90e6c58260b61bac3dc8c6a2f7815b5c02" translate="yes" xml:space="preserve">
          <source>c[ad]*?a</source>
          <target state="translated">c[ad]*?a</target>
        </trans-unit>
        <trans-unit id="629401451e43ab67b5cedb61e2dabb9c75bcf2f1" translate="yes" xml:space="preserve">
          <source>c[ad]*a</source>
          <target state="translated">c[ad]*a</target>
        </trans-unit>
        <trans-unit id="1a1f9233a4bf0e4dd0c20c67215b488d94cd83c0" translate="yes" xml:space="preserve">
          <source>c[ad]*r</source>
          <target state="translated">c[ad]*r</target>
        </trans-unit>
        <trans-unit id="5ac07116a74946049a68a42d4f37dea306438e77" translate="yes" xml:space="preserve">
          <source>c[ad]\{1,2\}r</source>
          <target state="translated">c[ad]\{1,2\}r</target>
        </trans-unit>
        <trans-unit id="f36535485786b84ea5efd5a877a6d96886c17301" translate="yes" xml:space="preserve">
          <source>c[ad]\{3\}r</source>
          <target state="translated">c[ad]\{3\}r</target>
        </trans-unit>
        <trans-unit id="dcb0ff4e089a10040363ea36b4d1fa7f4a3af0e3" translate="yes" xml:space="preserve">
          <source>ca*ar</source>
          <target state="translated">ca*ar</target>
        </trans-unit>
        <trans-unit id="a552b6caaca24cb07fb55f243c37fb05154a44ec" translate="yes" xml:space="preserve">
          <source>ca*r</source>
          <target state="translated">ca*r</target>
        </trans-unit>
        <trans-unit id="c3868259179474183737c9668da22b170f850355" translate="yes" xml:space="preserve">
          <source>ca+r</source>
          <target state="translated">ca+r</target>
        </trans-unit>
        <trans-unit id="f8c228fb8c7d0e1a1f035b2583c122cd708b1dcb" translate="yes" xml:space="preserve">
          <source>ca?r</source>
          <target state="translated">ca?r</target>
        </trans-unit>
        <trans-unit id="5c5ced81454f97923733662cbe39a4e6ce7a80ba" translate="yes" xml:space="preserve">
          <source>caaaar</source>
          <target state="translated">caaaar</target>
        </trans-unit>
        <trans-unit id="442b1afbc3497978b2168231c11ae0e3c95810d1" translate="yes" xml:space="preserve">
          <source>caaar</source>
          <target state="translated">caaar</target>
        </trans-unit>
        <trans-unit id="d4d94f2ad0e8f77bb0c637ade0269a07c87d0bf7" translate="yes" xml:space="preserve">
          <source>caar</source>
          <target state="translated">caar</target>
        </trans-unit>
        <trans-unit id="3ae4fd30878e4976c17bd3b8a7617ffef5696073" translate="yes" xml:space="preserve">
          <source>cadar</source>
          <target state="translated">cadar</target>
        </trans-unit>
        <trans-unit id="60491490302662b62661d27f693332a105cc25c4" translate="yes" xml:space="preserve">
          <source>caddaar</source>
          <target state="translated">caddaar</target>
        </trans-unit>
        <trans-unit id="8ce5acfef22fd5c9f1f07019cd36124acffd8ed2" translate="yes" xml:space="preserve">
          <source>cadr</source>
          <target state="translated">cadr</target>
        </trans-unit>
        <trans-unit id="d3be657323053cff42a39e59fbe30db8bd5c515e" translate="yes" xml:space="preserve">
          <source>call-interactively</source>
          <target state="translated">call-interactively</target>
        </trans-unit>
        <trans-unit id="729cea9fa87157e1ff1598d40cb6d634dff3cbd6" translate="yes" xml:space="preserve">
          <source>call-process</source>
          <target state="translated">call-process</target>
        </trans-unit>
        <trans-unit id="9f0f3dc8e1eb024ee59b990b3adc50e71f3c324c" translate="yes" xml:space="preserve">
          <source>call-process-region</source>
          <target state="translated">call-process-region</target>
        </trans-unit>
        <trans-unit id="4e2e2c93bf5bd0866e0f33e7cc3458ac476c8ad8" translate="yes" xml:space="preserve">
          <source>call-process-shell-command</source>
          <target state="translated">call-process-shell-command</target>
        </trans-unit>
        <trans-unit id="32cc53b3df07a1bc16ef92c83c9033a0209d57d1" translate="yes" xml:space="preserve">
          <source>call-shell-region</source>
          <target state="translated">call-shell-region</target>
        </trans-unit>
        <trans-unit id="1f72f886991fdbce562e900d25ebfb1a34beee23" translate="yes" xml:space="preserve">
          <source>called-interactively-p</source>
          <target state="translated">called-interactively-p</target>
        </trans-unit>
        <trans-unit id="c3999ca1b813a76e6d36bb4fa954c4097baea217" translate="yes" xml:space="preserve">
          <source>calls functions in &lt;code&gt;after-insert-file-functions&lt;/code&gt;.</source>
          <target state="translated">вызывает функции в функциях &lt;code&gt;after-insert-file-functions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e77d05e62a09c63c214f01dab75556e10df6dda" translate="yes" xml:space="preserve">
          <source>can be symbolic links that are followed, possibly recursively if the link targets are themselves symbolic links. However, a few functions do not follow symbolic links at the end of a file name (</source>
          <target state="translated">могут быть символическими ссылками,за которыми следуют,возможно,рекурсивно,если цели ссылки сами являются символическими ссылками.Однако некоторые функции не следуют по символическим ссылкам в конце имени файла (</target>
        </trans-unit>
        <trans-unit id="5f44edbaab95a81a34823e384150f9908271143b" translate="yes" xml:space="preserve">
          <source>can be used to quote a</source>
          <target state="translated">можно использовать для цитирования</target>
        </trans-unit>
        <trans-unit id="fc0a3b3406f85a2de505f1f1226a3079da51d0ab" translate="yes" xml:space="preserve">
          <source>can see the individual items in that menu and provide help for them. If instead you implement the menu by defining a command that calls &lt;code&gt;x-popup-menu&lt;/code&gt;, the help facilities cannot know what happens inside that command, so they cannot give any help for the menu&amp;rsquo;s items.</source>
          <target state="translated">может просматривать отдельные элементы в этом меню и помогать по ним. Если вместо этого вы реализуете меню, определяя команду, которая вызывает &lt;code&gt;x-popup-menu&lt;/code&gt; , средства справки не могут знать, что происходит внутри этой команды, поэтому они не могут предоставить никакой справки по элементам меню.</target>
        </trans-unit>
        <trans-unit id="1aa0a0ff576aa98b76976f7e10542ecbe512725f" translate="yes" xml:space="preserve">
          <source>cancel-change-group</source>
          <target state="translated">cancel-change-group</target>
        </trans-unit>
        <trans-unit id="d63faaa25add93538fb1fda4d3c6313db4b98b8a" translate="yes" xml:space="preserve">
          <source>cancel-debug-on-entry</source>
          <target state="translated">cancel-debug-on-entry</target>
        </trans-unit>
        <trans-unit id="fa9d14f7ff965dcea90c439ce6e363a996076801" translate="yes" xml:space="preserve">
          <source>cancel-debug-on-variable-change</source>
          <target state="translated">cancel-debug-on-variable-change</target>
        </trans-unit>
        <trans-unit id="d8d3abd86c9799cb35502c91fe0759637e803fea" translate="yes" xml:space="preserve">
          <source>cancel-timer</source>
          <target state="translated">cancel-timer</target>
        </trans-unit>
        <trans-unit id="9b9273d335af3058c719fe97631905752703864f" translate="yes" xml:space="preserve">
          <source>cannot be a key sequence.</source>
          <target state="translated">не может быть последовательностью ключей.</target>
        </trans-unit>
        <trans-unit id="98c055e6c8391c7ae20d6b485747ae21120e3edb" translate="yes" xml:space="preserve">
          <source>cannot be represented as strings; they have to be represented as vectors.</source>
          <target state="translated">не могут быть представлены в виде строк;они должны быть представлены в виде векторов.</target>
        </trans-unit>
        <trans-unit id="f75b4887b48dd029ecac24ce20fc8d78ac680314" translate="yes" xml:space="preserve">
          <source>capital I is downcased into a Turkish dotless i (&amp;lsquo;</source>
          <target state="translated">заглавная буква I превращается в турецкую букву i ('</target>
        </trans-unit>
        <trans-unit id="d01a341706c2a5c67a30eb227bba3d0fd7ace906" translate="yes" xml:space="preserve">
          <source>capitalize</source>
          <target state="translated">capitalize</target>
        </trans-unit>
        <trans-unit id="b44c222faf9a458f9066de866b38a8d561f4d5fc" translate="yes" xml:space="preserve">
          <source>capitalize-region</source>
          <target state="translated">capitalize-region</target>
        </trans-unit>
        <trans-unit id="8f9accc3c8c5616c3a43c57c96ae8b85dd5f4e06" translate="yes" xml:space="preserve">
          <source>capitalize-word</source>
          <target state="translated">capitalize-word</target>
        </trans-unit>
        <trans-unit id="9e32521dd2f8b27b64fe869fdadfa53e7d976f56" translate="yes" xml:space="preserve">
          <source>car</source>
          <target state="translated">car</target>
        </trans-unit>
        <trans-unit id="4dbd9f697e1e53b79562849742dc9f39b85b7443" translate="yes" xml:space="preserve">
          <source>car-safe</source>
          <target state="translated">car-safe</target>
        </trans-unit>
        <trans-unit id="a993daa06cb5a6dc0e923793da2ea2381220e93b" translate="yes" xml:space="preserve">
          <source>case conversion, such as implementations of</source>
          <target state="translated">преобразование случаев,например,внедрение</target>
        </trans-unit>
        <trans-unit id="7ceac34f8a09413fde8c368f7fecec9afa40f548" translate="yes" xml:space="preserve">
          <source>case-fold-search</source>
          <target state="translated">case-fold-search</target>
        </trans-unit>
        <trans-unit id="eb46750138a0b8c9a10ea154e97b0a9e14f5d0c4" translate="yes" xml:space="preserve">
          <source>case-replace</source>
          <target state="translated">case-replace</target>
        </trans-unit>
        <trans-unit id="3ea7abae8cd16e45fa1222fff278b78d291bb563" translate="yes" xml:space="preserve">
          <source>case-table-p</source>
          <target state="translated">case-table-p</target>
        </trans-unit>
        <trans-unit id="9ebad64e5d2b9542779537fce0354f34c099e7ff" translate="yes" xml:space="preserve">
          <source>catch</source>
          <target state="translated">catch</target>
        </trans-unit>
        <trans-unit id="bba17176b529abdfa87f859602aece9432497b63" translate="yes" xml:space="preserve">
          <source>category-docstring</source>
          <target state="translated">category-docstring</target>
        </trans-unit>
        <trans-unit id="930b336bd892a00d44f00461dc40c99246a53bfc" translate="yes" xml:space="preserve">
          <source>category-set-mnemonics</source>
          <target state="translated">category-set-mnemonics</target>
        </trans-unit>
        <trans-unit id="d45cd5edea03b6fb85828c6e5451c26e07b17310" translate="yes" xml:space="preserve">
          <source>category-table</source>
          <target state="translated">category-table</target>
        </trans-unit>
        <trans-unit id="13560419661c15e8796aad7638a2c8db6f2ada26" translate="yes" xml:space="preserve">
          <source>category-table-p</source>
          <target state="translated">category-table-p</target>
        </trans-unit>
        <trans-unit id="c5bf2a9bddaa655e1e7f3157013c3ea31fb0bdf6" translate="yes" xml:space="preserve">
          <source>causes menu items for &lt;code&gt;make-read-only&lt;/code&gt; and &lt;code&gt;make-writable&lt;/code&gt; to show the keyboard bindings for &lt;code&gt;read-only-mode&lt;/code&gt;.</source>
          <target state="translated">заставляет пункты меню &lt;code&gt;make-read-only&lt;/code&gt; и &lt;code&gt;make-writable&lt;/code&gt; отображать привязки клавиатуры для &lt;code&gt;read-only-mode&lt;/code&gt; для чтения .</target>
        </trans-unit>
        <trans-unit id="2f1bc6b4e708ba66975f245cb9b4817747c7451f" translate="yes" xml:space="preserve">
          <source>cda</source>
          <target state="translated">cda</target>
        </trans-unit>
        <trans-unit id="f3c8a3826de32172df5ac9fddd8b7176c366dc1d" translate="yes" xml:space="preserve">
          <source>cdaaada</source>
          <target state="translated">cdaaada</target>
        </trans-unit>
        <trans-unit id="ffa4ccf3e252eb760014dcf5db59c2d60b70f36d" translate="yes" xml:space="preserve">
          <source>cdar</source>
          <target state="translated">cdar</target>
        </trans-unit>
        <trans-unit id="7459f8228fb44e1a2554d0955b76a4861a91fce8" translate="yes" xml:space="preserve">
          <source>cdddr</source>
          <target state="translated">cdddr</target>
        </trans-unit>
        <trans-unit id="bc8c628392766276021b8246ce8a1e025e6b4aef" translate="yes" xml:space="preserve">
          <source>cddr</source>
          <target state="translated">cddr</target>
        </trans-unit>
        <trans-unit id="08665cf78e419d9012b16f1c2844e6325ae1d54b" translate="yes" xml:space="preserve">
          <source>cdr</source>
          <target state="translated">cdr</target>
        </trans-unit>
        <trans-unit id="ecba8bccc55c2834674c421bf3357e23b8ad4e07" translate="yes" xml:space="preserve">
          <source>cdr-safe</source>
          <target state="translated">cdr-safe</target>
        </trans-unit>
        <trans-unit id="baacee0a140dadfd38ae8bffecf196fcdbe816f7" translate="yes" xml:space="preserve">
          <source>ceiling</source>
          <target state="translated">ceiling</target>
        </trans-unit>
        <trans-unit id="585dd2c06e86de9865d3f27ec60e938eff22a3df" translate="yes" xml:space="preserve">
          <source>change-major-mode-after-body-hook</source>
          <target state="translated">change-major-mode-after-body-hook</target>
        </trans-unit>
        <trans-unit id="b44c03704003cf06009fff06fd07d4a5349bc1f4" translate="yes" xml:space="preserve">
          <source>change-major-mode-hook</source>
          <target state="translated">change-major-mode-hook</target>
        </trans-unit>
        <trans-unit id="8d202542b51319acf6d26581dcd2ec994694a04b" translate="yes" xml:space="preserve">
          <source>changes &lt;code&gt;load-path&lt;/code&gt;, the changes will be lost after dumping. See &lt;a href=&quot;library-search#Library-Search&quot;&gt;Library Search&lt;/a&gt;. To make a permanent change to &lt;code&gt;load-path&lt;/code&gt;, use the</source>
          <target state="translated">изменяет &lt;code&gt;load-path&lt;/code&gt; , изменения будут потеряны после сброса. См. &lt;a href=&quot;library-search#Library-Search&quot;&gt;Поиск в библиотеке&lt;/a&gt; . Чтобы сделать постоянное изменение &lt;code&gt;load-path&lt;/code&gt; , используйте</target>
        </trans-unit>
        <trans-unit id="b46f1406d8c4e4795454af9a342289cea19ba48d" translate="yes" xml:space="preserve">
          <source>char-after</source>
          <target state="translated">char-after</target>
        </trans-unit>
        <trans-unit id="d86e5f8581b7044221314bd466f8a14e01231626" translate="yes" xml:space="preserve">
          <source>char-before</source>
          <target state="translated">char-before</target>
        </trans-unit>
        <trans-unit id="be1754975051c16bc9ea34eb64f79a0c62e2f483" translate="yes" xml:space="preserve">
          <source>char-category-set</source>
          <target state="translated">char-category-set</target>
        </trans-unit>
        <trans-unit id="b4c80246d9135863a7b1299b66bb4c307dae318d" translate="yes" xml:space="preserve">
          <source>char-charset</source>
          <target state="translated">char-charset</target>
        </trans-unit>
        <trans-unit id="637b9cb0fbe2071509d451e77ae4d4d1e0c7588f" translate="yes" xml:space="preserve">
          <source>char-code-property-description</source>
          <target state="translated">char-code-property-description</target>
        </trans-unit>
        <trans-unit id="f7aa539bbcd661f9014a8c46b8b278fe091a34fd" translate="yes" xml:space="preserve">
          <source>char-displayable-p</source>
          <target state="translated">char-displayable-p</target>
        </trans-unit>
        <trans-unit id="9ca8899c206d200fd957415c87c6c4da9d7b27f5" translate="yes" xml:space="preserve">
          <source>char-equal</source>
          <target state="translated">char-equal</target>
        </trans-unit>
        <trans-unit id="e947ad39ed4a05e2052913678686cee4b89d8a97" translate="yes" xml:space="preserve">
          <source>char-from-name</source>
          <target state="translated">char-from-name</target>
        </trans-unit>
        <trans-unit id="462239194a9ff4042fa02e6940a86ae2367786b0" translate="yes" xml:space="preserve">
          <source>char-or-string-p</source>
          <target state="translated">char-or-string-p</target>
        </trans-unit>
        <trans-unit id="0cf0d545b8cbd70e63277b4b768f39882babafaa" translate="yes" xml:space="preserve">
          <source>char-property-alias-alist</source>
          <target state="translated">char-property-alias-alist</target>
        </trans-unit>
        <trans-unit id="d610bf74ffcb721f21341e428aad6a8846e65678" translate="yes" xml:space="preserve">
          <source>char-script-table</source>
          <target state="translated">char-script-table</target>
        </trans-unit>
        <trans-unit id="92a6bbff5ee0e65810250923d6ea16ab8a5157e4" translate="yes" xml:space="preserve">
          <source>char-syntax</source>
          <target state="translated">char-syntax</target>
        </trans-unit>
        <trans-unit id="8140f4ffdedf4cf0686dcf81ad0df2438bf5d123" translate="yes" xml:space="preserve">
          <source>char-table-extra-slot</source>
          <target state="translated">char-table-extra-slot</target>
        </trans-unit>
        <trans-unit id="c97dbaeb1d15bb8b3c26c905188263ce5df0d836" translate="yes" xml:space="preserve">
          <source>char-table-p</source>
          <target state="translated">char-table-p</target>
        </trans-unit>
        <trans-unit id="faf09a3c4e4163639df9b1e43f68e02ef317e0f5" translate="yes" xml:space="preserve">
          <source>char-table-parent</source>
          <target state="translated">char-table-parent</target>
        </trans-unit>
        <trans-unit id="763863a0c319acc2df172b25faf4f69ead6af133" translate="yes" xml:space="preserve">
          <source>char-table-range</source>
          <target state="translated">char-table-range</target>
        </trans-unit>
        <trans-unit id="d95ce4b78c9a8b73ec37554d2c4c9a8e7f9d4e03" translate="yes" xml:space="preserve">
          <source>char-table-subtype</source>
          <target state="translated">char-table-subtype</target>
        </trans-unit>
        <trans-unit id="ece232a1bc086eb6454173edd9c449c1e3e1053f" translate="yes" xml:space="preserve">
          <source>char-to-string</source>
          <target state="translated">char-to-string</target>
        </trans-unit>
        <trans-unit id="730a4a2a05582e36d35f4a0e74b03dcd02b84fcd" translate="yes" xml:space="preserve">
          <source>char-width</source>
          <target state="translated">char-width</target>
        </trans-unit>
        <trans-unit id="2fee3440be0e0fc450c28687510a2f5e7c84f8f7" translate="yes" xml:space="preserve">
          <source>char-width-table</source>
          <target state="translated">char-width-table</target>
        </trans-unit>
        <trans-unit id="a7f7f0fe984dca41556b789f2e37975d2e34688e" translate="yes" xml:space="preserve">
          <source>character (but not raw bytes).</source>
          <target state="translated">символ (но не сырые байты).</target>
        </trans-unit>
        <trans-unit id="2b3e3ae22f994ab135a6b83db9fe370ddffdd17f" translate="yes" xml:space="preserve">
          <source>character (character code 127)&amp;mdash;display in one of two ways according to the variable &lt;code&gt;ctl-arrow&lt;/code&gt;. If this variable is non-&lt;code&gt;nil&lt;/code&gt; (the default), these characters are displayed as sequences of two glyphs, where the first glyph is &amp;lsquo;</source>
          <target state="translated">символ (код символа 127) - отображать одним из двух способов в соответствии с переменной &lt;code&gt;ctl-arrow&lt;/code&gt; . Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; (по умолчанию), эти символы отображаются как последовательности двух глифов, где первый глиф - '</target>
        </trans-unit>
        <trans-unit id="588dc13f1aee93f188f4d8d49b649725d5045088" translate="yes" xml:space="preserve">
          <source>character (codes 0&amp;ndash;127).</source>
          <target state="translated">символ (коды 0&amp;ndash;127).</target>
        </trans-unit>
        <trans-unit id="9e55a595069439ee7c3f567ac09a716621ce31ae" translate="yes" xml:space="preserve">
          <source>character (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;).</source>
          <target state="translated">символ (см. &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Текстовые представления&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3b42ab209ca100db317855bdd9b04f3c8cef3135" translate="yes" xml:space="preserve">
          <source>character as a multibyte character and automatically makes the string a multibyte string. If the string constant is read from a unibyte source, then Emacs reads the non-</source>
          <target state="translated">Символ в виде многобайтового символа и автоматически делает строку многобайтовой.Если строковая константа считывается из однобайтового источника,то Emacs считывает небайтовую строку.</target>
        </trans-unit>
        <trans-unit id="7667cfe6e781783f8980e38a2248a59435115e75" translate="yes" xml:space="preserve">
          <source>character as input uses this tab stop feature only in a few major modes, such as Text mode. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tab-Stops.html#Tab-Stops&quot;&gt;Tab Stops&lt;/a&gt; in</source>
          <target state="translated">Символ в качестве ввода использует эту функцию табуляции только в нескольких основных режимах, таких как текстовый режим. См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tab-Stops.html#Tab-Stops&quot;&gt;Табуляторы&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="b5ca5adf0d67a86e7f84f6b957e4e456ac697f3d" translate="yes" xml:space="preserve">
          <source>character as the control equivalent of</source>
          <target state="translated">характер как контрольный эквивалент</target>
        </trans-unit>
        <trans-unit id="8465f7e1da16cac92e2cd2f13a7a0c160e1cc743" translate="yes" xml:space="preserve">
          <source>character as unibyte, and makes the string unibyte.</source>
          <target state="translated">символ в виде однобайта и делает строку однобайтной.</target>
        </trans-unit>
        <trans-unit id="23bb22d8aab24aba9b2f28895b2b23e2a939a85f" translate="yes" xml:space="preserve">
          <source>character class</source>
          <target state="translated">класс знаков</target>
        </trans-unit>
        <trans-unit id="c978bc3267bdbb55ca416dbe21b4e8f840d9d8f4" translate="yes" xml:space="preserve">
          <source>character in a string constant by writing it literally. If the string constant is read from a multibyte source, such as a multibyte buffer or string, or a file that would be visited as multibyte, then Emacs reads each non-</source>
          <target state="translated">символ в строковой константе,записывая его буквально.Если строковая константа читается из многобайтового источника,например,из многобайтового буфера или строки,или из файла,который будет посещен как многобайтовый,то Emacs читает каждую из них,кроме</target>
        </trans-unit>
        <trans-unit id="e4d538de1dcfec494142aaae76abd5fa43c29507" translate="yes" xml:space="preserve">
          <source>character indicates a meta character; thus, the meta characters that can fit in a string have codes in the range from 128 to 255, and are the meta versions of the ordinary</source>
          <target state="translated">символ указывает на мета-символ;таким образом,мета-символы,которые могут поместиться в строку,имеют коды в диапазоне от 128 до 255,и являются мета-версиями обычных</target>
        </trans-unit>
        <trans-unit id="d8831fc6fdc6fc2def6b0c383332707ccb0ba125" translate="yes" xml:space="preserve">
          <source>character is always less than any multibyte non-</source>
          <target state="translated">Символ всегда меньше любого многобайтового нон-байта.</target>
        </trans-unit>
        <trans-unit id="a7cfde3eec214e0afe5bdb37556a0401b2ec1f22" translate="yes" xml:space="preserve">
          <source>character is displayed as &amp;lsquo;</source>
          <target state="translated">символ отображается как '</target>
        </trans-unit>
        <trans-unit id="07635eabb555b20a06b6bd7ef74ea4acfa354604" translate="yes" xml:space="preserve">
          <source>character is less than any non-</source>
          <target state="translated">характер меньше любого другого</target>
        </trans-unit>
        <trans-unit id="77d1fa8f7ec802c80db5cd8fd85d3344926f8bf8" translate="yes" xml:space="preserve">
          <source>character is made invisible by giving it an &lt;code&gt;invisible&lt;/code&gt; text property of &lt;code&gt;t&lt;/code&gt; (see &lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;Invisible Text&lt;/a&gt;).</source>
          <target state="translated">символ становится невидимым, если ему &lt;code&gt;invisible&lt;/code&gt; свойство невидимого текста &lt;code&gt;t&lt;/code&gt; (см. &lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;Невидимый текст&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a4a7116567f19237830d77390d1f6f3543e40b98" translate="yes" xml:space="preserve">
          <source>character quote</source>
          <target state="translated">цитата из символов</target>
        </trans-unit>
        <trans-unit id="d6983fe11ebaf74afd9d63382f876aaa6fb069b9" translate="yes" xml:space="preserve">
          <source>character set than their upper case counterparts; digits and many punctuation characters have a lower numeric value than upper case letters. An</source>
          <target state="translated">набор символов,чем их заглавные аналоги;цифры и многие знаки препинания имеют меньшее числовое значение,чем заглавные буквы..</target>
        </trans-unit>
        <trans-unit id="246df74098a4b74a0d28ced0313e7d6c54b67b8d" translate="yes" xml:space="preserve">
          <source>character set whenever possible, Emacs avoids using the 2**25 bit for those character events.</source>
          <target state="translated">При любой возможности Emacs избегает использования 2**25-битного бита для таких событий.</target>
        </trans-unit>
        <trans-unit id="32ea864bf3c6761c5a37a0ce670318e31f076561" translate="yes" xml:space="preserve">
          <source>character set, &amp;lsquo;</source>
          <target state="translated">набор символов, '</target>
        </trans-unit>
        <trans-unit id="d77c310c054554c3ddc7a2a71a5f69d2c94a1a48" translate="yes" xml:space="preserve">
          <source>character set.</source>
          <target state="translated">Набор символов.</target>
        </trans-unit>
        <trans-unit id="49dfc8080090597c4c55721b76311af288d58e7e" translate="yes" xml:space="preserve">
          <source>character set. This should not be modified by any language environment settings.</source>
          <target state="translated">Набор символов.Это не должно быть изменено никакими настройками языковой среды.</target>
        </trans-unit>
        <trans-unit id="0159890cffca402a6c93d77dc38a60de1516bbef" translate="yes" xml:space="preserve">
          <source>character sets. They modify the specified case table &lt;var&gt;case-table&lt;/var&gt;; they also modify the standard syntax table. See &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;. Normally you would use these functions to change the standard case table.</source>
          <target state="translated">наборы символов. Они изменяют указанную таблицу &lt;var&gt;case-table&lt;/var&gt; ; они также изменяют стандартную таблицу синтаксиса. См. &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Таблицы синтаксиса&lt;/a&gt; . Обычно эти функции используются для изменения стандартной таблицы случаев.</target>
        </trans-unit>
        <trans-unit id="c6902199d14f3ce7f7608c1c7863f890a9d3de2d" translate="yes" xml:space="preserve">
          <source>character takes up only 1 byte, a Latin-1 character takes up 2 bytes, etc. We call this representation of text &lt;em&gt;multibyte&lt;/em&gt;.</source>
          <target state="translated">символ занимает всего 1 байт, символ Latin-1 занимает 2 байта и т. д. Мы называем это представление текста &lt;em&gt;многобайтовым&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4b7a94989b19624a9f52a8ca77c3c504c10ad9ef" translate="yes" xml:space="preserve">
          <source>character to the string. The appended</source>
          <target state="translated">символ к строке.Приложенный</target>
        </trans-unit>
        <trans-unit id="4e9e4aa7bc4fbed0a6dee4aba3f9d11bb4ea039a" translate="yes" xml:space="preserve">
          <source>character with code above 255 is displayed literally, if the terminal supports it. If the terminal does not support it, the character is said to be &lt;em&gt;glyphless&lt;/em&gt;, and it is usually displayed using a placeholder glyph. For example, if a graphical terminal has no font for a character, Emacs usually displays a box containing the character code in hexadecimal. See &lt;a href=&quot;glyphless-chars#Glyphless-Chars&quot;&gt;Glyphless Chars&lt;/a&gt;.</source>
          <target state="translated">символ с кодом выше 255 отображается буквально, если терминал его поддерживает. Если терминал не поддерживает его, символ считается без &lt;em&gt;глифа&lt;/em&gt; и обычно отображается с помощью глифа-заполнителя. Например, если графический терминал не имеет шрифта для символа, Emacs обычно отображает поле, содержащее код символа в шестнадцатеричном формате. См. &lt;a href=&quot;glyphless-chars#Glyphless-Chars&quot;&gt;Знаки без символов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="74390faf07babeb112c888986d4ffef5e28726f3" translate="yes" xml:space="preserve">
          <source>character), Emacs automatically assumes that it is multibyte.</source>
          <target state="translated">символ),Emacs автоматически предполагает,что он многобайтный.</target>
        </trans-unit>
        <trans-unit id="c777fc8dca089b21b5bbbf883a1cd1cfeba88580" translate="yes" xml:space="preserve">
          <source>character, the result is a unibyte string. But if the optional argument &lt;var&gt;multibyte&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function will produce a multibyte string instead. This is useful when you later need to concatenate the result with non-</source>
          <target state="translated">символ, результатом является однобайтная строка. Но если необязательный аргумент &lt;var&gt;multibyte&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , функция вместо этого выдаст многобайтовую строку. Это полезно, когда вам позже потребуется объединить результат с не-</target>
        </trans-unit>
        <trans-unit id="20efd3a2b53bbecb951b9dacf597f0e6a16f8507" translate="yes" xml:space="preserve">
          <source>character.</source>
          <target state="translated">character.</target>
        </trans-unit>
        <trans-unit id="80f2a68df0a4eef7b7fe1465ff703b4e6ee17f3d" translate="yes" xml:space="preserve">
          <source>character. If &lt;var&gt;string&lt;/var&gt; is a unibyte string, it is returned unchanged. Use this function for &lt;var&gt;string&lt;/var&gt; arguments that contain only</source>
          <target state="translated">персонаж. Если &lt;var&gt;string&lt;/var&gt; является однобайтной, она возвращается без изменений. Используйте эту функцию для &lt;var&gt;string&lt;/var&gt; аргументов, которые содержат только</target>
        </trans-unit>
        <trans-unit id="19dcdd8080ab1529af84256810a71d3b8633b4b2" translate="yes" xml:space="preserve">
          <source>character. Otherwise, input method handling is disabled for reading this event.</source>
          <target state="translated">характер.В противном случае обработка метода ввода для чтения этого события отключена.</target>
        </trans-unit>
        <trans-unit id="9ff6c84105ad9b589c193a4f89a2100909f2fe2f" translate="yes" xml:space="preserve">
          <source>character. See &lt;a href=&quot;char-classes#Char-Classes&quot;&gt;Char Classes&lt;/a&gt;.</source>
          <target state="translated">персонаж. См. &lt;a href=&quot;char-classes#Char-Classes&quot;&gt;Классы символов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8addd4d8a8aabc4883565db51abf8fa65b200cf0" translate="yes" xml:space="preserve">
          <source>character. Using a character class is equivalent to mentioning each of the characters in that class; but the latter is not feasible in practice, since some classes include thousands of different characters. A character class should not appear as the lower or upper bound of a range.</source>
          <target state="translated">характер.Использование класса символов эквивалентно упоминанию каждого из символов в этом классе;но на практике это невозможно,так как некоторые классы включают тысячи различных символов.Класс символов не должен отображаться как нижняя или верхняя граница диапазона.</target>
        </trans-unit>
        <trans-unit id="68fb5e799e0bc7d96dc4b0a06976f5bd688e5a8f" translate="yes" xml:space="preserve">
          <source>character; a unibyte non-</source>
          <target state="translated">характер;однобайтовый нон-байт</target>
        </trans-unit>
        <trans-unit id="08525f2a864496868548f655efec5aca8c7f8dcf" translate="yes" xml:space="preserve">
          <source>characterp</source>
          <target state="translated">characterp</target>
        </trans-unit>
        <trans-unit id="38dd565e17fc731c8d54233256ccc0ae4b97860d" translate="yes" xml:space="preserve">
          <source>characters (or meta variants of</source>
          <target state="translated">символы (или мета-варианты</target>
        </trans-unit>
        <trans-unit id="9a8451333f89f84fe99fcfd1159e7a140b634a87" translate="yes" xml:space="preserve">
          <source>characters above 256 can be included in a multibyte string.</source>
          <target state="translated">Символы выше 256 могут быть включены в многобайтовую строку.</target>
        </trans-unit>
        <trans-unit id="7288ceedac3510a3ad55c8a7f20809168e4420ad" translate="yes" xml:space="preserve">
          <source>characters and raw 8-bit bytes; the latter are converted to their multibyte representation corresponding to the codepoints &lt;code&gt;#x3FFF80&lt;/code&gt; through &lt;code&gt;#x3FFFFF&lt;/code&gt;, inclusive (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;codepoints&lt;/a&gt;).</source>
          <target state="translated">символы и необработанные 8-битные байты; последние преобразуются в их многобайтовое представление, соответствующее &lt;code&gt;#x3FFF80&lt;/code&gt; до &lt;code&gt;#x3FFFFF&lt;/code&gt; включительно (см. &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;кодовые точки&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b7eaa06cda6046a2e288f9d4a9cc92a8ab7f75c3" translate="yes" xml:space="preserve">
          <source>characters and their meta variants (but with the exception of</source>
          <target state="translated">персонажи и их мета-варианты (но за исключением</target>
        </trans-unit>
        <trans-unit id="40477dfb41f4b81e156c5f6f973995b343ad5a7c" translate="yes" xml:space="preserve">
          <source>characters are an exception: for them, this function always returns &lt;code&gt;ascii&lt;/code&gt;.</source>
          <target state="translated">символы являются исключением: для них эта функция всегда возвращает &lt;code&gt;ascii&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f42667646e0161643d4ff93d3c6c442e07eb0608" translate="yes" xml:space="preserve">
          <source>characters are encountered. There are fundamental reasons why it is hard to fix this; see &lt;a href=&quot;output-from-processes#Output-from-Processes&quot;&gt;Output from Processes&lt;/a&gt;.)</source>
          <target state="translated">встречаются символы. Есть фундаментальные причины, по которым это трудно исправить; см. &lt;a href=&quot;output-from-processes#Output-from-Processes&quot;&gt;Вывод из процессов&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="42354e03fae962962721acb992beb46b3c32c4e0" translate="yes" xml:space="preserve">
          <source>characters are the same as character codepoints, whereas eight-bit raw bytes are converted to their 8-bit codes. The function signals an error if the character at &lt;var&gt;pos&lt;/var&gt; is non-</source>
          <target state="translated">символы совпадают с кодовыми точками символов, тогда как 8-битные необработанные байты преобразуются в их 8-битные коды. Функция сигнализирует об ошибке, если символ в &lt;var&gt;pos&lt;/var&gt; не-</target>
        </trans-unit>
        <trans-unit id="66db8d3e76ba34aeb04802d1d401c930dad08655" translate="yes" xml:space="preserve">
          <source>characters as symbol constituents regardless of what the syntax table says about them. (However, &lt;code&gt;syntax-table
&lt;/code&gt;text properties can still override the syntax.)</source>
          <target state="translated">символы как составляющие символа, независимо от того, что о них говорится в таблице синтаксиса. (Однако текстовые свойства &lt;code&gt;syntax-table &lt;/code&gt; все еще могут переопределять синтаксис.)</target>
        </trans-unit>
        <trans-unit id="9f331af3c88255b1bfee7895859022ed12ea4479" translate="yes" xml:space="preserve">
          <source>characters by discarding all but the low 8 bits of each character&amp;rsquo;s codepoint. Converting unibyte text to multibyte and back to unibyte reproduces the original unibyte text.</source>
          <target state="translated">символов, отбрасывая все, кроме младших 8 бит кодовой точки каждого символа. Преобразование однобайтового текста в многобайтный и обратно в однобайтный воспроизводит исходный однобайтный текст.</target>
        </trans-unit>
        <trans-unit id="14619e9bdb59702dc264d4480b0938d909be4197" translate="yes" xml:space="preserve">
          <source>characters except for such ISO-2022 control characters ISO-2022 as &lt;code&gt;ESC&lt;/code&gt;, the value is &lt;code&gt;undecided&lt;/code&gt; or &lt;code&gt;(undecided)&lt;/code&gt;, or a variant specifying end-of-line conversion, if that can be deduced from the text.</source>
          <target state="translated">символов, за исключением таких управляющих символов ISO-2022 ISO-2022, как &lt;code&gt;ESC&lt;/code&gt; , значение &lt;code&gt;undecided&lt;/code&gt; или &lt;code&gt;(undecided)&lt;/code&gt; , или вариант, определяющий преобразование конца строки, если это можно вывести из текста.</target>
        </trans-unit>
        <trans-unit id="acf44a46e2597288e187199759a193ee95ca25a0" translate="yes" xml:space="preserve">
          <source>characters from the keyboard. Unlike coding systems, which translate non-</source>
          <target state="translated">символы с клавиатуры.В отличие от систем кодирования,которые переводят не</target>
        </trans-unit>
        <trans-unit id="2c25c12c928eedd9b2a1a4eb2912dcf76e1ce1b6" translate="yes" xml:space="preserve">
          <source>characters in Emacs Lisp files.</source>
          <target state="translated">символы в файлах Emacs Lisp.</target>
        </trans-unit>
        <trans-unit id="e56eb382e187440b0d6d259bbac11bb7b8aa0cb3" translate="yes" xml:space="preserve">
          <source>characters in Emacs strings (and in buffers): unibyte and multibyte. For most Lisp programming, you don&amp;rsquo;t need to be concerned with these two representations. See &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;, for details.</source>
          <target state="translated">символы в строках Emacs (и в буферах): однобайтовые и многобайтовые. Для большей части программирования на Лиспе вам не нужно беспокоиться об этих двух представлениях. См. Подробности в разделе &amp;laquo; &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Текстовые представления&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21811582b1cb72beeaf4c17bd23090f43ea7d5eb" translate="yes" xml:space="preserve">
          <source>characters in Emacs strings: multibyte and unibyte (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;). Roughly speaking, unibyte strings store raw bytes, while multibyte strings store human-readable text. Each character in a unibyte string is a byte, i.e., its value is between 0 and 255. By contrast, each character in a multibyte string may have a value between 0 to 4194303 (see &lt;a href=&quot;character-type#Character-Type&quot;&gt;Character Type&lt;/a&gt;). In both cases, characters above 127 are non-</source>
          <target state="translated">символы в строках Emacs: многобайтовые и однобайтовые (см. &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Текстовые представления&lt;/a&gt; ). Грубо говоря, однобайтовые строки хранят необработанные байты, а многобайтовые строки хранят читаемый человеком текст. Каждый символ в однобайтовой строке является байтом, т. Е. Его значение находится в диапазоне от 0 до 255. Напротив, каждый символ в многобайтовой строке может иметь значение от 0 до 4194303 (см. &lt;a href=&quot;character-type#Character-Type&quot;&gt;Тип символа&lt;/a&gt; ). В обоих случаях символы выше 127 не являются</target>
        </trans-unit>
        <trans-unit id="71ae869f01d341662041951439f2294b20f25b80" translate="yes" xml:space="preserve">
          <source>characters in a string. If you use the &amp;lsquo;</source>
          <target state="translated">символы в строке. Если вы используете '</target>
        </trans-unit>
        <trans-unit id="de04c02aa71b48896db34edf4a4d7cca90f6ba4f" translate="yes" xml:space="preserve">
          <source>characters in file names are not encoded specially; they appear in the file system using the internal Emacs representation.</source>
          <target state="translated">Символы в именах файлов специально не кодируются,они появляются в файловой системе по внутреннему представлению Emacs.</target>
        </trans-unit>
        <trans-unit id="e86a7e0375f95cf5cee1b06f9b361c16ae362813" translate="yes" xml:space="preserve">
          <source>characters in strings are unconditionally printed as backslash sequences by the print functions &lt;code&gt;prin1&lt;/code&gt; and &lt;code&gt;print&lt;/code&gt; that print with quoting.</source>
          <target state="translated">символы в строках безоговорочно печатаются как последовательности обратной косой черты функциями печати &lt;code&gt;prin1&lt;/code&gt; и &lt;code&gt;print&lt;/code&gt; эту печать с кавычками.</target>
        </trans-unit>
        <trans-unit id="80d3c585e03f3b8aa22e36204afce6063b8fb687" translate="yes" xml:space="preserve">
          <source>characters occurring in the string are 8-bit raw bytes.</source>
          <target state="translated">Символы,встречающиеся в строке,представляют собой 8-битные необработанные байты.</target>
        </trans-unit>
        <trans-unit id="bf0b5db25ce9a0c78eabd726365297028d21ad03" translate="yes" xml:space="preserve">
          <source>characters or Unicode-style escape sequences in the string, then Emacs automatically assumes that it is a unibyte string. That is to say, it assumes that all non-</source>
          <target state="translated">символов или экранирующих последовательностей в стиле Юникода в строке,то Emacs автоматически предполагает,что это однобайтовая строка.То есть,она предполагает,что все,кроме</target>
        </trans-unit>
        <trans-unit id="3b836710b9a7b90be971eac9f17af86cc560703c" translate="yes" xml:space="preserve">
          <source>characters remain unchanged. Thus, a unibyte string and its conversion to multibyte are only &lt;code&gt;equal&lt;/code&gt; if the string is all</source>
          <target state="translated">символы остаются без изменений. Таким образом, однобайтная строка и ее преобразование в многобайтовый только &lt;code&gt;equal&lt;/code&gt; , если строке все</target>
        </trans-unit>
        <trans-unit id="e5cbf80bc07f5871007f97db29c2ed3aecc2a831" translate="yes" xml:space="preserve">
          <source>characters such as</source>
          <target state="translated">такие персонажи,как</target>
        </trans-unit>
        <trans-unit id="8410cce753ff60c9ed48cf91be98685c8056a7ef" translate="yes" xml:space="preserve">
          <source>characters that end a sentence without any following whitespace.)</source>
          <target state="translated">символы,которые заканчивают предложение без последующих пробельных символов).)</target>
        </trans-unit>
        <trans-unit id="ba63ffb7d1bad3934b66578c9470d6ef096d25de" translate="yes" xml:space="preserve">
          <source>characters to and from encodings meant to be read by programs, input methods provide human-friendly commands. (See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Input-Methods.html#Input-Methods&quot;&gt;Input Methods&lt;/a&gt; in</source>
          <target state="translated">символы из кодировок, предназначенных для чтения программами, методы ввода предоставляют удобные для человека команды. (См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Input-Methods.html#Input-Methods&quot;&gt;Методы ввода&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="978715fde7e33e420f8fd3fc50c6a9da9fdd4288" translate="yes" xml:space="preserve">
          <source>characters unchanged, and converts bytes with codes 128 through 255 to the multibyte representation of raw eight-bit bytes.</source>
          <target state="translated">символов без изменений,и преобразует байты с кодами от 128 до 255 в многобайтовое представление исходных восьмиразрядных байтов.</target>
        </trans-unit>
        <trans-unit id="495e68bafcfb38f29ca39dd5cd5612e5f21ed0f5" translate="yes" xml:space="preserve">
          <source>characters using multi-byte sequences. Multibyte mode allows you to use all the supported languages and scripts without limitations.</source>
          <target state="translated">символы,использующие многобайтовые последовательности.Многобайтовый режим позволяет использовать все поддерживаемые языки и скрипты без ограничений.</target>
        </trans-unit>
        <trans-unit id="372c1391f44000241f63bd853e6220afdf19c7ef" translate="yes" xml:space="preserve">
          <source>characters with codes 128 through 255 (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;). These characters display as &lt;em&gt;octal escapes&lt;/em&gt;: sequences of four glyphs, where the first glyph is the</source>
          <target state="translated">символы с кодами от 128 до 255 (см. &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Текстовые представления&lt;/a&gt; ). Эти символы отображаются как &lt;em&gt;восьмеричные escape-&lt;/em&gt; символы: последовательности из четырех глифов, где первый глиф - это</target>
        </trans-unit>
        <trans-unit id="d60a387e370b3bdf958c36152ddfb1fd795443fb" translate="yes" xml:space="preserve">
          <source>characters with the Control modifier are an exception, they are represented as control characters).</source>
          <target state="translated">Символы с модификатором Control являются исключением,они представлены в виде символов управления).</target>
        </trans-unit>
        <trans-unit id="5a62282f6366240090b7ba78b835ab66a79bee78" translate="yes" xml:space="preserve">
          <source>characters would be this:</source>
          <target state="translated">персонажи были бы такими:</target>
        </trans-unit>
        <trans-unit id="e3ca325cbb3f65d9a2f91b17deed46a18424f2de" translate="yes" xml:space="preserve">
          <source>characters written as &lt;code&gt;?v&lt;var&gt;literal&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">символы, записанные как &lt;code&gt;?v&lt;var&gt;literal&lt;/var&gt;&lt;/code&gt; ? v .</target>
        </trans-unit>
        <trans-unit id="ff22c2091123d7bfe4a9d2d028361a4373165bea" translate="yes" xml:space="preserve">
          <source>characters) are preferred to all other key sequences and that the return value can never be a menu binding.</source>
          <target state="translated">Символы)предпочтительнее всех остальных последовательностей клавиш,и что возвращаемое значение никогда не может быть привязкой к меню.</target>
        </trans-unit>
        <trans-unit id="665c8d5a3958a17f6ada5cb134b0c7c458105c48" translate="yes" xml:space="preserve">
          <source>characters, and 128 (0200 octal) through 255 (0377 octal) represent non-</source>
          <target state="translated">символы,и от 128 (0200 восьмеричный)до 255 (0377 восьмеричный)представляют собой не</target>
        </trans-unit>
        <trans-unit id="6542a8d6680d775ea313b39a0084d4d057cdc0a9" translate="yes" xml:space="preserve">
          <source>characters, and many of these strings are immutable, i.e., calling &lt;code&gt;ASET&lt;/code&gt; on them produces undefined behavior.</source>
          <target state="translated">символы, и многие из этих строк неизменяемы, т. е. вызов &lt;code&gt;ASET&lt;/code&gt; для них приводит к неопределенному поведению.</target>
        </trans-unit>
        <trans-unit id="d1a4f340a71a7c191683a0ec040f17a21ab16092" translate="yes" xml:space="preserve">
          <source>characters, and values &lt;code&gt;#x80&lt;/code&gt; (128) through &lt;code&gt;#x3FFF7F&lt;/code&gt; (4194175) are for non-</source>
          <target state="translated">символы, а значения от &lt;code&gt;#x80&lt;/code&gt; (128) до &lt;code&gt;#x3FFF7F&lt;/code&gt; (4194175) предназначены для не-</target>
        </trans-unit>
        <trans-unit id="93e79c601adb588015194e55bd112eb35d30990b" translate="yes" xml:space="preserve">
          <source>characters, do not count where &amp;lsquo;</source>
          <target state="translated">символы, не считайте где '</target>
        </trans-unit>
        <trans-unit id="b9c5860c9fe36ef62ecf2d439eb4f1da553ff050" translate="yes" xml:space="preserve">
          <source>characters, regardless of the value of this variable, when the output stream is a multibyte buffer or a marker pointing into one.</source>
          <target state="translated">символов,независимо от значения этой переменной,когда выходной поток является многобайтовым буфером или маркером,указывающим на него.</target>
        </trans-unit>
        <trans-unit id="4426812738e9b43f395fb566f077f90266c6e192" translate="yes" xml:space="preserve">
          <source>characters, regardless of the value of this variable, when the output stream is a unibyte buffer or a marker pointing into one.</source>
          <target state="translated">символов,независимо от значения этой переменной,когда выходной поток является однобайтовым буфером или маркером,указывающим на него.</target>
        </trans-unit>
        <trans-unit id="d31472666490bb6b3c3317f81c39164f55ad10e1" translate="yes" xml:space="preserve">
          <source>characters, these can be represented within Emacs either as unibyte strings or as multibyte strings (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;). Which representation is used depends on how the file is read into Emacs. If it is read with decoding into multibyte representation, the text of the Lisp program will be multibyte text, and its string constants will be multibyte strings. If a file containing Latin-1 characters (for example) is read without decoding, the text of the program will be unibyte text, and its string constants will be unibyte strings. See &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;.</source>
          <target state="translated">символы, они могут быть представлены в Emacs либо как однобайтовые, либо как многобайтовые строки (см. &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Текстовые представления&lt;/a&gt; ). Какое представление используется, зависит от того, как файл читается в Emacs. Если он читается с декодированием в многобайтовое представление, текст программы на Лиспе будет многобайтовым текстом, а его строковые константы будут многобайтовыми строками. Если файл, содержащий символы Latin-1 (например), читается без декодирования, текст программы будет однобайтовым, а его строковые константы будут однобайтными строками. См. &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Системы кодирования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a5cec9ea22e0dcb3d1e1798f0f4fa65de7ea7e34" translate="yes" xml:space="preserve">
          <source>characters.</source>
          <target state="translated">characters.</target>
        </trans-unit>
        <trans-unit id="00847b688156252f705356bb46a9b1f468c56bb8" translate="yes" xml:space="preserve">
          <source>characters. Finally, the &lt;code&gt;eight-bit&lt;/code&gt; charset includes the 8-bit raw bytes; Emacs uses it to represent raw bytes encountered in text.</source>
          <target state="translated">символы. Наконец, &lt;code&gt;eight-bit&lt;/code&gt; кодировка включает 8-битные необработанные байты; Emacs использует его для представления необработанных байтов, встречающихся в тексте.</target>
        </trans-unit>
        <trans-unit id="cd116615f1560e3b227e748886741a07b286e666" translate="yes" xml:space="preserve">
          <source>characters. See &lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;Strings of Events&lt;/a&gt;, for details about</source>
          <target state="translated">символы. См. &amp;laquo; &lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;Строки событий&amp;raquo;&lt;/a&gt; , чтобы узнать подробнее о</target>
        </trans-unit>
        <trans-unit id="ad16c5a957bcc6ad867e13cd7ac9cf3f8347ca7c" translate="yes" xml:space="preserve">
          <source>characters; for example, in the Turkish language environment, the</source>
          <target state="translated">символы;например,в турецкой языковой среде -</target>
        </trans-unit>
        <trans-unit id="49abc0db1c7b0d514f0f646b0b8015889c492d7b" translate="yes" xml:space="preserve">
          <source>charset-after</source>
          <target state="translated">charset-after</target>
        </trans-unit>
        <trans-unit id="dabf367b2dd2e3e3eb247e5aeaf9a58758cb091c" translate="yes" xml:space="preserve">
          <source>charset-list</source>
          <target state="translated">charset-list</target>
        </trans-unit>
        <trans-unit id="dc96ea8e74ba3d0c476f5f0f1c8ea793f053536c" translate="yes" xml:space="preserve">
          <source>charset-plist</source>
          <target state="translated">charset-plist</target>
        </trans-unit>
        <trans-unit id="9dac77ef1ae7a6c98e32f3e3d64b6ee42d276e4e" translate="yes" xml:space="preserve">
          <source>charset-priority-list</source>
          <target state="translated">charset-priority-list</target>
        </trans-unit>
        <trans-unit id="c6f22ace076b640489d3caab7bba3be09ed1b8cf" translate="yes" xml:space="preserve">
          <source>charsetp</source>
          <target state="translated">charsetp</target>
        </trans-unit>
        <trans-unit id="f2d2ceb19e9e5dce03227169ed726ea18d0cfa59" translate="yes" xml:space="preserve">
          <source>check-coding-system</source>
          <target state="translated">check-coding-system</target>
        </trans-unit>
        <trans-unit id="1b095cfb9d1e05fb81e9ce906846cc1a35affa55" translate="yes" xml:space="preserve">
          <source>check-coding-systems-region</source>
          <target state="translated">check-coding-systems-region</target>
        </trans-unit>
        <trans-unit id="f4ffd42b9f504b6041732adb7865c661c1d9cfd8" translate="yes" xml:space="preserve">
          <source>check-declare</source>
          <target state="translated">check-declare</target>
        </trans-unit>
        <trans-unit id="f48444335cfd57b443f07d5ef61420e6e9721979" translate="yes" xml:space="preserve">
          <source>cl-call-next-method</source>
          <target state="translated">cl-call-next-method</target>
        </trans-unit>
        <trans-unit id="077dac1549acff234abfce9b962485d3f680d191" translate="yes" xml:space="preserve">
          <source>cl-defgeneric</source>
          <target state="translated">cl-defgeneric</target>
        </trans-unit>
        <trans-unit id="4b51d58478531564b107c792466f2e9f2228dfe0" translate="yes" xml:space="preserve">
          <source>cl-defmethod</source>
          <target state="translated">cl-defmethod</target>
        </trans-unit>
        <trans-unit id="283bfa0f598830a953414ffd99e5453efb58df96" translate="yes" xml:space="preserve">
          <source>cl-lib</source>
          <target state="translated">cl-lib</target>
        </trans-unit>
        <trans-unit id="91d80fd8e7e92d81a71daa6c1316234046e3f436" translate="yes" xml:space="preserve">
          <source>cl-next-method-p</source>
          <target state="translated">cl-next-method-p</target>
        </trans-unit>
        <trans-unit id="d01c4e7ce940ced4ea41f67ecf27a15efd799942" translate="yes" xml:space="preserve">
          <source>cl-old-struct-compat-mode</source>
          <target state="translated">cl-old-struct-compat-mode</target>
        </trans-unit>
        <trans-unit id="b05bad2744994ea70276bdcc4d59c1d148d45d50" translate="yes" xml:space="preserve">
          <source>cl.el</source>
          <target state="translated">cl.el</target>
        </trans-unit>
        <trans-unit id="73baacff061b193d9cd457f7773384109236e551" translate="yes" xml:space="preserve">
          <source>clear-abbrev-table</source>
          <target state="translated">clear-abbrev-table</target>
        </trans-unit>
        <trans-unit id="30ad1d009b69bb6718df11568775fe0cabee9d0f" translate="yes" xml:space="preserve">
          <source>clear-image-cache</source>
          <target state="translated">clear-image-cache</target>
        </trans-unit>
        <trans-unit id="ba49cfa83bde9013971a2eb67a23bfae263fa755" translate="yes" xml:space="preserve">
          <source>clear-message-function</source>
          <target state="translated">clear-message-function</target>
        </trans-unit>
        <trans-unit id="e919b739acd69cdca5abb680e462cb7b68dd0599" translate="yes" xml:space="preserve">
          <source>clear-string</source>
          <target state="translated">clear-string</target>
        </trans-unit>
        <trans-unit id="221fe0789539ebff75ba72809f1f99a8740ad2d8" translate="yes" xml:space="preserve">
          <source>clear-this-command-keys</source>
          <target state="translated">clear-this-command-keys</target>
        </trans-unit>
        <trans-unit id="585dd7d62cc5e8ff5743635f1949e520c2d7cba9" translate="yes" xml:space="preserve">
          <source>clear-visited-file-modtime</source>
          <target state="translated">clear-visited-file-modtime</target>
        </trans-unit>
        <trans-unit id="b93ec56608fb302fea7a8019d7c0e8e7239fc033" translate="yes" xml:space="preserve">
          <source>click</source>
          <target state="translated">click</target>
        </trans-unit>
        <trans-unit id="e7a369157a1ddcb726eb5adef0187228172813b6" translate="yes" xml:space="preserve">
          <source>click behaves on this button, See &lt;a href=&quot;clickable-text#Clickable-Text&quot;&gt;Clickable Text&lt;/a&gt;.</source>
          <target state="translated">щелчок ведет себя на этой кнопке, см. &lt;a href=&quot;clickable-text#Clickable-Text&quot;&gt;интерактивный текст&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="392dd55d4739da49b2ff0356140297d2db609b70" translate="yes" xml:space="preserve">
          <source>click into. The link action condition can be one of the following:</source>
          <target state="translated">щёлкнуть.Условие действия ссылки может быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="510fdbe4325efab209a9b0a528f04bc9cbac3e3d" translate="yes" xml:space="preserve">
          <source>click is the local or global binding of that character or symbol. Thus, if the action code is &lt;code&gt;&quot;foo&quot;&lt;/code&gt;,</source>
          <target state="translated">click - это локальная или глобальная привязка этого символа или символа. Таким образом, если код действия - &lt;code&gt;&quot;foo&quot;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="6992fa753f2efbba45a7a513bd79554c2ad93892" translate="yes" xml:space="preserve">
          <source>click shall be translated to</source>
          <target state="translated">клик должен быть переведён на</target>
        </trans-unit>
        <trans-unit id="184e713a0f604475a140ab58f13ed786b9000796" translate="yes" xml:space="preserve">
          <source>click should be regarded as occurring inside the link, and how to compute an action code that says what to translate the</source>
          <target state="translated">щелчок мыши следует рассматривать как происходящий внутри ссылки,и как вычислить код действия,который говорит,что нужно транслировать</target>
        </trans-unit>
        <trans-unit id="0ec9fb2b669c798826901a71c259dc12b853d2c1" translate="yes" xml:space="preserve">
          <source>click will also activate the &lt;code&gt;push-button&lt;/code&gt; command. See &lt;a href=&quot;clickable-text#Clickable-Text&quot;&gt;Clickable Text&lt;/a&gt;.</source>
          <target state="translated">щелчок также активирует команду &lt;code&gt;push-button&lt;/code&gt; . См. &lt;a href=&quot;clickable-text#Clickable-Text&quot;&gt;Интерактивный текст&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cbbeaa44bdb9ae2458b008dc0102f0c4185d07f1" translate="yes" xml:space="preserve">
          <source>clicks on links, provided the user clicks on the link quickly without moving the mouse. This behavior is controlled by the user option &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-References.html#Mouse-References&quot;&gt;Mouse References&lt;/a&gt; in</source>
          <target state="translated">щелкает по ссылкам при условии, что пользователь нажимает на ссылку быстро, не перемещая мышь. Это поведение контролируется пользовательской опцией &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt; . См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-References.html#Mouse-References&quot;&gt;Ссылки&lt;/a&gt; на мышь в</target>
        </trans-unit>
        <trans-unit id="e4cee11275d4ce61d8f42adc3a216f22cf3bf21a" translate="yes" xml:space="preserve">
          <source>clone-indirect-buffer</source>
          <target state="translated">clone-indirect-buffer</target>
        </trans-unit>
        <trans-unit id="5faadba9ba3a9c66a117d10901a3c5247d959e10" translate="yes" xml:space="preserve">
          <source>close in spirit to what the attributes specify, if not exact.</source>
          <target state="translated">близкие по духу к тому,что указывают атрибуты,если не точные.</target>
        </trans-unit>
        <trans-unit id="f3e7d6ab42ded6f2a64aa7848fc8a95d3b6248f2" translate="yes" xml:space="preserve">
          <source>close parenthesis</source>
          <target state="translated">близкая скобка</target>
        </trans-unit>
        <trans-unit id="3b9e5a5de2285525c8cc0c49e47cbc8ba1bb8183" translate="yes" xml:space="preserve">
          <source>closepath</source>
          <target state="translated">closepath</target>
        </trans-unit>
        <trans-unit id="ffd947d52b6781b1f7bc160bd20bdeeb8ec1f75c" translate="yes" xml:space="preserve">
          <source>clrhash</source>
          <target state="translated">clrhash</target>
        </trans-unit>
        <trans-unit id="4d2fa139bfda2723ed7c02863acdab241606f297" translate="yes" xml:space="preserve">
          <source>code 0.) This function may be eliminated in the future if it does not seem useful enough to retain.</source>
          <target state="translated">код 0.)Эта функция может быть устранена в будущем,если она не покажется достаточно полезной для сохранения.</target>
        </trans-unit>
        <trans-unit id="60b859e98c7e76dde460baab2234f597d2f394ad" translate="yes" xml:space="preserve">
          <source>code 27, is another sparse keymap.</source>
          <target state="translated">код 27,это еще одна разреженная клавишная карта.</target>
        </trans-unit>
        <trans-unit id="00d73e4a4247b743a3371da790fc1aa031fa49e5" translate="yes" xml:space="preserve">
          <source>code 49). The second example shows a keyboard macro definition that calls &lt;code&gt;read-char&lt;/code&gt; from the minibuffer using &lt;code&gt;eval-expression&lt;/code&gt;. &lt;code&gt;read-char&lt;/code&gt; reads the keyboard macro&amp;rsquo;s very next character, which is</source>
          <target state="translated">код 49). Во втором примере показано определение макроса клавиатуры, которое вызывает &lt;code&gt;read-char&lt;/code&gt; из минибуфера с помощью &lt;code&gt;eval-expression&lt;/code&gt; . &lt;code&gt;read-char&lt;/code&gt; читает следующий символ макроса клавиатуры, который</target>
        </trans-unit>
        <trans-unit id="9881d25c6c72f636dd5301dd214aba8aca40abf4" translate="yes" xml:space="preserve">
          <source>code 49. It becomes the value of &lt;code&gt;last-input-event&lt;/code&gt;, while</source>
          <target state="translated">код 49. Он становится значением &lt;code&gt;last-input-event&lt;/code&gt; , а</target>
        </trans-unit>
        <trans-unit id="4aba32a4c23f2a24e8371e0cf273947109b33e37" translate="yes" xml:space="preserve">
          <source>code for</source>
          <target state="translated">код для</target>
        </trans-unit>
        <trans-unit id="6cda8edf44e7fa0317110370f93dd1d5a42b0fde" translate="yes" xml:space="preserve">
          <source>code for &amp;lsquo;</source>
          <target state="translated">код для '</target>
        </trans-unit>
        <trans-unit id="4e6013e3958e6e88980913d3c6273d036682310c" translate="yes" xml:space="preserve">
          <source>code of the &amp;lsquo;</source>
          <target state="translated">код '</target>
        </trans-unit>
        <trans-unit id="68f25907172320646533642b38366b230ddcecfc" translate="yes" xml:space="preserve">
          <source>codes 88 and 120 respectively.</source>
          <target state="translated">коды 88 и 120 соответственно.</target>
        </trans-unit>
        <trans-unit id="7e109ef133354fb0e7bfb6c25629d6a19d99214d" translate="yes" xml:space="preserve">
          <source>codes have the same definition, they are shown together, as &amp;lsquo;</source>
          <target state="translated">коды имеют одинаковое определение, они показаны вместе, как '</target>
        </trans-unit>
        <trans-unit id="a9f249a55574e0917365caf227ece30468a37afd" translate="yes" xml:space="preserve">
          <source>codes to understand which characters this means. For example, in the default global map, the characters &amp;lsquo;</source>
          <target state="translated">коды, чтобы понять, какие символы это означает. Например, на глобальной карте по умолчанию символы '</target>
        </trans-unit>
        <trans-unit id="8c650bc834c28bae452bfa02b136d058e89013c2" translate="yes" xml:space="preserve">
          <source>codes; the rest are non-</source>
          <target state="translated">коды;остальные нет</target>
        </trans-unit>
        <trans-unit id="20e83d98dccad051398b072718848f5a2ed724f7" translate="yes" xml:space="preserve">
          <source>coding-system-aliases</source>
          <target state="translated">coding-system-aliases</target>
        </trans-unit>
        <trans-unit id="5331b64389913f04db9303a28eaa70f98941600a" translate="yes" xml:space="preserve">
          <source>coding-system-change-eol-conversion</source>
          <target state="translated">coding-system-change-eol-conversion</target>
        </trans-unit>
        <trans-unit id="48f637692c41ea2be8aa7aec49e80ea86a1fabaf" translate="yes" xml:space="preserve">
          <source>coding-system-change-text-conversion</source>
          <target state="translated">coding-system-change-text-conversion</target>
        </trans-unit>
        <trans-unit id="2120d563542e00c2393d994484a449283a4a4287" translate="yes" xml:space="preserve">
          <source>coding-system-charset-list</source>
          <target state="translated">coding-system-charset-list</target>
        </trans-unit>
        <trans-unit id="68608c70c38bff72ec6fcb42934cbb73c915bd83" translate="yes" xml:space="preserve">
          <source>coding-system-eol-type</source>
          <target state="translated">coding-system-eol-type</target>
        </trans-unit>
        <trans-unit id="575515e80926f7394b3d76a182cf83cce03b75d4" translate="yes" xml:space="preserve">
          <source>coding-system-for-read</source>
          <target state="translated">coding-system-for-read</target>
        </trans-unit>
        <trans-unit id="416a6e76e8488190318ceed0dc6e395e85b59efe" translate="yes" xml:space="preserve">
          <source>coding-system-for-write</source>
          <target state="translated">coding-system-for-write</target>
        </trans-unit>
        <trans-unit id="3988ee81b55d396e5ab36f4cdd49a0d7a6bd3e80" translate="yes" xml:space="preserve">
          <source>coding-system-get</source>
          <target state="translated">coding-system-get</target>
        </trans-unit>
        <trans-unit id="e8200626ca621b6bc240ccaac206a5ccdac98dc8" translate="yes" xml:space="preserve">
          <source>coding-system-list</source>
          <target state="translated">coding-system-list</target>
        </trans-unit>
        <trans-unit id="cbf2f20786832ec71adce10bec400135f94614b8" translate="yes" xml:space="preserve">
          <source>coding-system-p</source>
          <target state="translated">coding-system-p</target>
        </trans-unit>
        <trans-unit id="fc525be0cfb448b61cc0fcd92c568619ce63471e" translate="yes" xml:space="preserve">
          <source>coding-system-priority-list</source>
          <target state="translated">coding-system-priority-list</target>
        </trans-unit>
        <trans-unit id="8d9442469eac2cc7a1f1774d6f0bb0309976d0fd" translate="yes" xml:space="preserve">
          <source>coding-system-require-warning</source>
          <target state="translated">coding-system-require-warning</target>
        </trans-unit>
        <trans-unit id="abe65d8e1cce94b8b282b1ae2814af9c2586af9e" translate="yes" xml:space="preserve">
          <source>coding:</source>
          <target state="translated">coding:</target>
        </trans-unit>
        <trans-unit id="0894a5be612f4589456a376bf88c36ef29c7c89d" translate="yes" xml:space="preserve">
          <source>coding: raw-text</source>
          <target state="translated">кодирование:рай-текст</target>
        </trans-unit>
        <trans-unit id="962ba6740003a84130a061affc82e73d97e2517c" translate="yes" xml:space="preserve">
          <source>color-defined-p</source>
          <target state="translated">color-defined-p</target>
        </trans-unit>
        <trans-unit id="25785be39ad670b205db83c96cd195624d465e49" translate="yes" xml:space="preserve">
          <source>color-gray-p</source>
          <target state="translated">color-gray-p</target>
        </trans-unit>
        <trans-unit id="756867a220eecf581e97a678d7304f4a4b9975bc" translate="yes" xml:space="preserve">
          <source>color-supported-p</source>
          <target state="translated">color-supported-p</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
