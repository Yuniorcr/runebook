<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="772d2b9fdf23c3d163c286ee4fa36d24fb8ad72e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;beginning-of-defun-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;начало функции-функции&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d162ca2408549a8341b160b96d75c25bce2b197e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;bidi-display-reordering&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;bidi-display-reordering&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a08279602dfcce01cdeef36d7249896ac2b3f95" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;bidi-paragraph-separate-re&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;биди-абзац-отдельный-ре&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ff40d8b286789cb63d13eaf13acef63e5598914" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;bidi-paragraph-start-re&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;bidi-paragraph-start-re&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="18d149bc7ec32d5cf3972b111bb0b79ff749b2de" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;blink-paren-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;blink-paren-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="329d7de8b8cfe1c815943ac69bc958aaeaf8a368" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-access-fontified-property&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;свойство-доступ-буфер-фонтифицированное&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a551f75d223a0ab7ec885477b95fca09e9f43fd7" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-access-fontify-functions&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;буфер-доступ-fontify-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3597833ca99c1e75c74fd553371e8d545f2a0c8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-auto-save-file-format&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;buffer-auto-save-file-format&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="615f3fdd1d2ce32af7b8537c0ea8ad451a7ad66a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-auto-save-file-name&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;буфер-авто-сохранения-имя-файла&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc49432931c7562cd976a7638c7f255118114e66" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-backed-up&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;резервное копирование буфером&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2b74d3aec67af0163bbf44dad639b8ff01e04dc" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-display-count&lt;/strong&gt;</source>
          <target state="translated">Переменная: количество &lt;strong&gt;отображаемых буферов&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3c4e3bfe8c23f7fa0ad77a29264506b09fa02ce" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-display-table&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;буфер-дисплей-таблица&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d6b9f4219fdafc1cfe744b1e782eca6cf75bd425" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-display-time&lt;/strong&gt;</source>
          <target state="translated">Переменная: время &lt;strong&gt;отображения буфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81530e5415afba2eadead8c884373d28486b52bd" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-file-coding-system&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;буфер-файл-система кодирования&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0efab2c319e42687ca840159e44b661d254a0ed" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-file-format&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;формат файла-буфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4829afa2b5012d27c6a6a2435099a329b292b78" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-file-name&lt;/strong&gt;</source>
          <target state="translated">Переменная: имя &lt;strong&gt;-файла-буфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d9a780b2ba95ca5ccd27079d0bfe72a2a2549b5" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-file-number&lt;/strong&gt;</source>
          <target state="translated">Переменная: номер &lt;strong&gt;-файла-буфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6aac11918e39674348f06ba9b899c87b94a0affe" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-file-truename&lt;/strong&gt;</source>
          <target state="translated">Переменная: имя &lt;strong&gt;-файла-буфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d2a06d907b5f3924887d87fbfaee355ba67efc11" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-invisibility-spec&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;спецификации-невидимости-буфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="77cb440108a55b543ce3afc35fb43568ef8f940b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-list-update-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;буфер-список-обновление-ловушка&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b5e48c4ebd90dfd345158701778425282a008e00" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-name-history&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;имя-буфера-история&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8002a1ae5ea21ef50f058cbfe52b1edb89d3a871" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-read-only&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;буфер только для чтения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a57c43e7c8bf3e450c9a2e4e291d946e427cc248" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-save-without-query&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;буфер-сохранение-без-запроса&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dab121293d32a8bd096dcd4d60e80dc31f942852" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-saved-size&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;размер сохраненного буфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="938fac4b102264f4f09d96abb0bb7dd12aade3f2" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-stale-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;буфер-устаревшая-функция&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="735ab3e525afdef7c7eee4848cabadeaed98c98c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-substring-filters&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;фильтры-подстроки-буфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06e25d2d4270540aef88663feec7bc94a21a6da5" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;buffer-undo-list&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;буфер-список отмены&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d6f28adb99965f69ae640b7707b0875c1fa8e592" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;byte-boolean-vars&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;byte-boolean-vars&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3699e79f2e1fc9aee81a2f23f411a69dc430be16" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;byte-compile-dynamic&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;байт-компиляция-динамическая&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8e688bba5c1dc571affb376bde9d7356d24d024" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;change-major-mode-after-body-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;change-major-mode-after-body-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7069dd188311abbf96076c67d9ad0a8490aa518" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;change-major-mode-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;change-major-mode-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e82f9b7ca50645546eb014f66e686d05bca12501" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;char-property-alias-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;char-property-alias-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70155b2e01ffd51a21a77ece8f167bd54b507037" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;char-script-table&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;char-script-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dab701e34eb03116428c1274f6f923d78b7da983" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;char-width-table&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;char-width-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e44a098f278fd20c44d59bb1cf1850f08b395be7" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;charset-list&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;charset-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="38c45335d82065ece2eae54749b56a87d83767ff" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;clear-message-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;функция-clear-message&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06c48b2e653c3c4c5f23e4ccf17b08abf47dea2f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;coding-system-for-read&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;coding-system-for-read&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="237b3ec37bf4ffcd1163cb3241942cb39f0495ec" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;coding-system-for-write&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;система-кодирования-записи&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a02ca7e84c05a2806a711eda7d62e442101dcec" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;coding-system-require-warning&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;coding-system-require-warning&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cdcbd46965566da527b9c0d91945176a9333907" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;command-debug-status&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;статус-отладки-команды&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ac5eb7bf45ed828c9a998f77ac84284867d1fef" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;command-error-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;команда-ошибка-функция&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a46c52a5dcbac1c7555f39b1eed975802fb3304" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;command-history&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;история команд&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15991290f9fcd1b10e7c5161bd2abd606d2e7188" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;command-line-args-left&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;command-line-args-left&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f740bda3f24c136675288e3b85d8eca12a180b37" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;command-line-args&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;аргументы командной строки&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="05e180088f33c3694145f9997282c03e91ac3eac" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;command-line-functions&lt;/strong&gt;</source>
          <target state="translated">Переменная: функции &lt;strong&gt;командной строки&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="973cba4bd40d06109656f6e222d62746a0c54e77" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;command-line-processed&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;обрабатывается из командной строки&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0f98997365e84bc67073a659031c153ccdf5444" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;command-switch-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;команда-переключатель-список&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0544212a7a9fd29bdd834acde9042fff1945064" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;comment-end-can-be-escaped&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;конец комментария можно-экранировать&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a972e830d788c516e07e8e1069348c44e8112782" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;completing-read-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;завершение-чтение-функция&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56197906a16fbf5412e09405e8273d5e511e5002" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;completion-at-point-functions&lt;/strong&gt;</source>
          <target state="translated">Переменная: функции &lt;strong&gt;завершения на точке&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d3ba38f455dddb925d82f9796cac5f20173f5541" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;completion-extra-properties&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;завершение-дополнительные-свойства&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a9715499444aa58ded2d4575acf35f475402c5e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;completion-ignore-case&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;завершение-игнорирование-регистр&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ff3bda33de242b922bedcb668295bf7d42f438e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;completion-regexp-list&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;завершение-список-регулярных выражений&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="58a5282eefe23f39008cb178d130dba3bed31cf6" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;completion-styles-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;список-стилей завершения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e71579a15148aec951e74bf140f82c711ccf2cae" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;connection-local-criteria-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;список-локальных-критериев соединений&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="043f5967f3f7b3b167156deec2791d6aac3a4a4f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;connection-local-profile-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;connection-local-profile-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ce57e5c1b0a8fcea1f950d76e4de5110813d074" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;cons-cells-consed&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;cons-cell-consed&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6918b55d20e3b4ca9be4d20891c03d67e79669ef" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;current-input-method&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;текущий метод ввода&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="825b95f158eb32b6e25f63d24989ea2e1dcee797" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;current-prefix-arg&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;текущий-префикс-аргумент&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f7f769cf1b07f06f2d59735dd5c6cb2d6c98258" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;cursor-in-echo-area&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;курсор в эхо-области&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee5c44f0f6a1b1774ab1141e2d2461a287ef0f3e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;custom-known-themes&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;известные темы&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd00ff64457832b07a071512a0526b20547c2d62" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;custom-variable-history&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;история настраиваемых переменных&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d68fb85da48d3b5123954444e9ebca76216ea21" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;customize-package-emacs-version-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;customize-package-emacs-version-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="78aaf60f55ebb357b9c49070c6260ac533ac5309" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;data-directory&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;каталог данных&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="58a344a54387c4d3cc3f8a135180c6330d774090" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;deactivate-mark-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;deactivate-mark-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b53b3589f950da70ad7f1f25fdd1d05df9fbb20f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;deactivate-mark&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;deactivate-mark&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39dd7757ff1c5333e03254275d94fb280c321db8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;debug-on-message&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;отладка по сообщению&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="025f1d67816992df92152ebe279d65b9518f5615" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;debug-on-next-call&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;отладка при следующем вызове&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="50d338b5f23a809dc2a0cb9109abaec4324d4238" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;debugger&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;отладчик&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6534bdaf2e2ba38c81da6e8d634f37465f8dd88c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;default-directory&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;каталог по умолчанию&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="275bdca4549fcd8342f290882afdd8e418503f1c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;default-minibuffer-frame&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;default-minibuffer-frame&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02f9aa2f88c57d1ee05c7718935fc2ced046a877" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;default-process-coding-system&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;default-process-coding-system&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91760fc229cc7edc4da0e20baa039bf6b1204b82" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;default-text-properties&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;свойства-текста-по умолчанию&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2cafd55ad7e01593695f50891907a42c70bb710d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;defining-kbd-macro&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;определение-kbd-macro&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7adca875f4718d7921d41f390665433131c0010" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;delayed-warnings-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;задержка-предупреждение-ловушка&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="893866261754a55185a42bbeba3db35a122e4a36" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;delayed-warnings-list&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;список отложенных предупреждений&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="998b448264ccd9ac2669d11874547faab39db821" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;delete-terminal-functions&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;delete-terminal-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4609acd81e58b4c8feccb2fa5b99454639b1aeb1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;desktop-buffer-mode-handlers&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;обработчики режима буфера рабочего стола&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d788b919041731306d1ed3119d25c4e3d05dbc0" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;desktop-save-buffer&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;desktop-save-buffer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a030c59362bee119e34d5212c639c00f2995fae6" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;dir-locals-class-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;dir-locals-class-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee359c15d9b05fdd28a1416beee90ffa0c78359f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;dir-locals-directory-cache&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;dir-locals-directory-cache&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5769de24ebf0a362e3ae0397ccd00822081e65ac" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;disable-point-adjustment&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;настройка точки отключения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16747d6e620da11d5bfac54379fc916cf8cd6744" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;disabled-command-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;отключенная-команда-функция&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36376cf2e4eab1506ba8678c25cf5a9446845fae" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;display-buffer-overriding-action&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;display-buffer-overriding-action&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11b1e365b77825bee10060a7efdeecab8ada0d7b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;doc-directory&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;doc-directory&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="626d7212e019d152b500c7f29944f939c0d1274c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;dynamic-library-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;список динамических библиотек&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89a55fe0d12a27c3430e2ba258035e97a38061fc" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;echo-area-clear-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;echo-area-clear-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c5b58bd144477d747ec4c7b213da60ad5c128ea" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;electric-future-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;electric-future-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e572806cd8a1b31ec37dbf1bb0543b62ffd09a1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;emacs-build-number&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;номер сборки emacs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0ff3ee648a18aea594a95f7ececbc237a2f4fc3" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;emacs-build-time&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;emacs-build-time&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03a7d12289e8c73c549b44bcf96e4731efd34482" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;emacs-major-version&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;emacs-major-version&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d9dd7d9fc7e1909ad18700a0c992d54ab74c642" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;emacs-minor-version&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;emacs-minor-version&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cde688285cb63e6e47cd05b7a43cdfc6becf3530" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;emacs-repository-branch&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;emacs-repository-branch&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c79e2cde6a178ae85fb74875425b6570a91c3742" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;emacs-repository-version&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;версия-репозитория emacs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68bca76b22e84992fafedae258c451654ae6fe9a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;emacs-save-session-functions&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;emacs-save-session-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3474b62651949c2ac00100f372c7fca5154f21a2" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;emacs-startup-hook&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;emacs-startup-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c103c2b6bac39dcb4a58c4c5fa99ec066ee4fd1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;emacs-version&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;emacs-version&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="695ad02566db163e5a095d9e16294685522a209e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;emulation-mode-map-alists&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;emulation-mode-map-alists&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="83142f971da47b444028352263e23e4b2e004630" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;enable-connection-local-variables&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;enable-connection-local-variables&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d990c8adbf5a9051ccd8bb4ddc6e11f972b2fb9e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;enable-dir-local-variables&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;enable-dir-local-variables&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa68ff277a4e1c1baab0a2eae6801f8ceb7c6dd6" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;enable-multibyte-characters&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;enable-multibyte-characters&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9384f8e0da35165c269268c827c3b9400be030e1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;end-of-defun-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;end-of-defun-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb2228773e3960a3562a5d0b4529f5a6fbb3913d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;exec-directory&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;exec-directory&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5f7a072909a05a7acfb2ce2787a33b3347643ab" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;executing-kbd-macro&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;executing-kbd-macro&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="834c14039e894e584c7b3d902fc981ca4a539569" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;extended-command-history&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;extended-command-history&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff8f547fe22eed580ffc25dffb58b76bb3257aa2" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;extra-keyboard-modifiers&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;extra-keyboard-modifiers&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a0aeb0a225689960d486ebdf69c2e38cd9e9ee83" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;face-filters-always-match&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;face-filters-always-match&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="62541be3ae6f08037064f7c0bb564b0d180c908c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;face-font-rescale-alist&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;face-font-rescale-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b62dc8f353a7f5dd27b394ef7acc1c5e16b9e9b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;face-name-history&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;face-name-history&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2a308e761438a1704af8121ef5e2415c2a6330a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;face-remapping-alist&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;face-remapping-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="faaba21d02cede45118faf08bfce32e5dda7c0d8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;features&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;features&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91251a6d2a8edb55b95291421556302c81edaad1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;file-local-variables-alist&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;file-local-variables-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57b79c8ec03eec3862be2d6a6480af4839299e29" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;file-name-coding-system&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;file-name-coding-system&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8d558ad0cbff6804288b3d05654d202a1b159ed" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;file-name-history&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;file-name-history&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14b8c1e425948c3184278e87044dbb8ca3c63512" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;fill-forward-paragraph-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;fill-forward-paragraph-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c60ed11cd687952dfc052511e6c9f2c2e195008" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;fill-paragraph-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;fill-paragraph-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="591bce891a3c54f19fb55f0ad3c019e87b097bcb" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;filter-buffer-substring-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;filter-buffer-substring-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f2e1f9b5804d236ba09779f04d95675887ba394f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;filter-buffer-substring-functions&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;filter-buffer-substring-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="585104e9374304c859e19d5667cb1f64900fa2bb" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;find-file-literally&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;find-file-literally&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb827ade32890a4fe0f8fc6a4c3e5342a327c92b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;find-file-not-found-functions&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;find-file-not-found-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed85746600a7dfa5dc23fe254e262b263f31c022" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;find-word-boundary-function-table&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;find-word-boundary-function-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25306f8fd9fc42d16ab6abe41e38be90fb4b628a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;first-change-hook&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;first-change-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="83845b8b3877cbe023af9234e29b4392b57b9add" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;float-e&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;float-e&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="027bc66973ac341a1e132966c194a359c88924ca" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;float-output-format&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;float-output-format&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef73d36721a81f228697e5e4d457a3dd8323f13f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;float-pi&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;float-pi&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eef3414efac7c8d43e9d9bbf068c2e0b64caf85b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;floats-consed&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;floats-consed&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee7eec64b2bcd92dc96f1c273b98d250346dc8bd" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-defaults&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-defaults&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db03ce99cd86a1454e0b5b57e7ffe4a3153e44d4" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-ensure-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-ensure-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9464a2a14d824ace645bc668d35b60df1fb42517" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-extend-after-change-region-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-extend-after-change-region-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02636e08e837432c2f3e40f575d8a2100c7e2f2b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-extra-managed-props&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-extra-managed-props&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c71c5fd31b4541e464a5198a032fe8ff599a753a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-flush-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-flush-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12cfe1ce4d216177efe622d37adba4c2f250227d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-fontify-buffer-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-fontify-buffer-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db5473f5b4aabfeb0457b3d9aa747450a05dd451" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-fontify-region-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-fontify-region-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30e3a572298f59c2b7f7f9e74f14957464e36566" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-keywords-case-fold-search&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-keywords-case-fold-search&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4a6fe37d5ff10375f3d780faadb23e68ceb198a7" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-keywords-only&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-keywords-only&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="21102dbbc493fd628cc24cdf265d17943d0793e3" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-keywords&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-keywords&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a36fa4c7e5ee47670c599a925a533ce771a9fd89" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-mark-block-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-mark-block-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="19eb2d1cfba942ae4c84708271c9163f9b06bc9d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-multiline&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-multiline&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2196f924b36579e5fc9ee3390dbf45e66799817e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-syntactic-face-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-syntactic-face-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84f4f72a765edcb7c39861e845caa9b59e2ba09a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-syntax-table&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-syntax-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b5c43421370a8b59101b34e2068ad9af004ed645" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-unfontify-buffer-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-unfontify-buffer-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec149d6877ab7d0bba8c5d27a589fdac4c2d3ca2" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;font-lock-unfontify-region-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;font-lock-unfontify-region-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24f727ec96cf594b7b8aa5f6391db95e8a33dcf1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;fontification-functions&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;fontification-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f34e993525d6343f94a9827aded56abc7d6ef101" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;format-alist&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;format-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="649f33a94aa49939d2fa245cb0e028f541ba4433" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;frame-inherited-parameters&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;frame-inherited-parameters&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f565f1138d3f3a7ce54f864a13be1dcec283109" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;frame-title-format&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;frame-title-format&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07057d74b91061d9025776d121cce7ca5ba6aeba" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;fringe-cursor-alist&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;fringe-cursor-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63d6c18885f7ad23a8d5754a1dbf24ced95ce67b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;fringe-indicator-alist&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;fringe-indicator-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6041715157fe646c1c0c8c1d2bdb6ae72c12b0db" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;fringes-outside-margins&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;fringes-outside-margins&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88794fb04afccf3403ae9dccbfef23179b6a931c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;fundamental-mode-abbrev-table&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;fundamental-mode-abbrev-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3c22701d1fdf02da728289a3f73faf581b99cfb" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;gc-elapsed&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;gc-elapsed&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8930565c355d5760c551e36543b675e0a33c70c6" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;gcs-done&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;gcs-done&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48ea952abc9024944e3c7523862fd17e9879a1d0" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;generate-autoload-cookie&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;generate-autoload-cookie&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac6a250704ecaeb08adf9c23fb834141852876be" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;generated-autoload-file&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;generated-autoload-file&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9f41253b6b62b0db371ed8a1e330eceec28ccb3" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;global-abbrev-table&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;global-abbrev-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc72fb4e4c67c3dee4b352f7baa97d361205738e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;global-disable-point-adjustment&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;global-disable-point-adjustment&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c9d72d6617840f90a42a094068d79efd4f284db" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;global-map&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;global-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a64319d323b168c2ee147692a7e2769ee8678646" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;global-mode-string&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;global-mode-string&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3d8266f7b5134d2783643aabf38542fcdaaa5a3a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;glyph-table&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;glyph-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="972890e59e2e94041ffb0d3eb287638c7e67c603" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;glyphless-char-display&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;glyphless-char-display&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d5bd126732c5a689c60f4fa30f2fc99674b96fc" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;hack-local-variables-hook&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;hack-local-variables-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d33fb13795104cad204969a38c5497b29f76b4b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;header-line-format&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;header-line-format&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4af2c637e941a26d3d19589a43bec81d254669f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;help-form&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;help-form&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f48969bf12c7cf4839db82e73855d85f267c5b70" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;help-map&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;help-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="750f869fb23f23cee1fee2105c01417daaa4ad90" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;history-add-new-input&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;history-add-new-input&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29465b30417743b333d7c84ef79146b1aa8ad90a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;horizontal-scroll-bar&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;horizontal-scroll-bar&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4881cc80a7be12a1ea0e0c13378523bc6a758aa9" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;icon-title-format&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;icon-title-format&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="134ea33599fbe952e4b2f0430a8b7be9eba62633" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;ignore-window-parameters&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;ignore-window-parameters&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a6a9ebc069b334bd1989c295d318c71d537ccbd" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;ignored-local-variables&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;ignored-local-variables&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ce976267f721e66fb9cdb2df0691a35b65f78830" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;image-cache-eviction-delay&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;image-cache-eviction-delay&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f3f67543c0910582bc345ec8d8da12623bec259" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;image-format-suffixes&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;image-format-suffixes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93076f3e181dd44e767f4cac8ee5c9914474fcf4" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;image-types&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;image-types&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bcb6301d7e02d199df35733be265b4f5dc58baf4" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;imenu-case-fold-search&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;imenu-case-fold-search&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12841214bf1ee0abf3d90f9f16f636a3c02af2a1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;imenu-create-index-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;imenu-create-index-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf4daaa2d0345e3ad0f904211795269692a0e7ce" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;imenu-extract-index-name-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;imenu-extract-index-name-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eecb03b08ff89084b8741eb2241e06dc00399d86" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;imenu-generic-expression&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;imenu-generic-expression&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99011bbe7e103078ecd6305a69041849f359adaa" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;imenu-prev-index-position-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;imenu-prev-index-position-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4a7fea2af016e6f0a09cd0962be035e093bf5d6" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;imenu-syntax-alist&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;imenu-syntax-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed73e5cee338c7da8c00206d21355602b2423f59" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;indent-line-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;indent-line-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5882339a055b45f93766ac3355b28df51f139c4" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;indent-region-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;indent-region-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d284fb592c3cc8e50e327f982ca53e3cd64e5d2" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;inhibit-field-text-motion&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;inhibit-field-text-motion&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afd80f320b5dca6e8beb50da8efa52ce375f703f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;inhibit-file-name-handlers&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;inhibit-file-name-handlers&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca5f5890cefa08d0a543d569f04d99e965e96905" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;inhibit-file-name-operation&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;inhibit-file-name-operation&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="039ef8e8b4e638a35c2bc4e50df6b6b90d0351fc" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;inhibit-iso-escape-detection&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;inhibit-iso-escape-detection&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ec319f37fdc63e67ecb3e58a626becfbc53d956" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;inhibit-local-variables-regexps&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;inhibit-local-variables-regexps&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d71cc032c21a7cfc38a023e2941a3afbbac59b3" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;inhibit-message&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;inhibit-message&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65f5708c068faf42c5b7286078887c104b886982" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;inhibit-modification-hooks&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;inhibit-modification-hooks&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad0336fbb452882a0ccdb4c5b812731ba52747cf" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;inhibit-nul-byte-detection&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;inhibit-nul-byte-detection&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d2f039dfdbbc072b3ad5281a953a5919378dceb" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;inhibit-point-motion-hooks&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;inhibit-point-motion-hooks&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="faaa955b0125731248af2398a7d66c47ceb8456c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;inhibit-quit&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;inhibit-quit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c031c9eb003d3b092f3dabe61a1dedc5db78a4d3" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;inhibit-read-only&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;inhibit-read-only&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3dde91c10dcfbf4886fae480fdd843dcca8b560" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;inhibit-x-resources&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;inhibit-x-resources&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0015ffbab64fe134a7d2e9a4724e27a55845763e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;init-file-user&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;init-file-user&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e12f2a805c8f1c9f3594978f7f73cdd40ba04edc" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;initial-environment&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;initial-environment&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a985547af432add4e3770c87690a50125d518898" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;initial-window-system&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;начальная-оконная-система&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="55034724c0dab295f75f1bff98c0963f249a62c6" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;input-decode-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;вход-декодирование-карта&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81bd6c10f538c08c57371beba88f4f30b8d0bca9" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;input-method-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;список-методов-ввода&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bba40919ef2d21c050e0b7335238b6c6791180be" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;input-method-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;функция-метод-ввода&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee04aa78f14b7407883d8ca1cf2cb8e04d003e5e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;insert-directory-program&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;insert-directory-program&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5bab59ec28a0f277fc42f87f0f9b7460ca7373ac" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;installation-directory&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;каталог установки&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="476d9c121bfcd62224bb96944fe580bb5a16b987" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;integer-width&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;целочисленная ширина&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb2d7b912c8d9b4daed1f37f2e74844c8a3dfabf" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;interpreter-mode-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;список-режимов-интерпретатора&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04df42f994c147d8b450ad8eeb717fcf322e9b97" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;interprogram-cut-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;межпрограммная функция вырезания&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="449f09f32206b0efafab7bbbcb0bb99a3e1e4f1c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;interprogram-paste-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;межпрограммная-вставка-функция&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ceeea85c96a2b53a8147a9651d4ed6f86de385f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;interrupt-process-functions&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;функции обработки прерывания&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b7da71a51ca22f6d0649d4e49da2c6f532582e5" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;intervals-consed&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;интервально-сжатые&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1841506aadcfa9c2345ec0fb933dccd7202407c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;invocation-directory&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;invocation-directory&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d6d374e7e1c262ae90d86f64fb90a0d9f2a49b5e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;invocation-name&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;имя-вызова&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0dac215e7b7b8b9366c40ed4902aeecff38a6d7" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;kbd-macro-termination-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;kbd-macro-termination-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5574207789a0daa909861e150ab15bdc4e40d9d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;key-translation-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;key-translation-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3343ceddb7cc3efab5d188777f410e7c31d50ee" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;keyboard-translate-table&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;клавиатура-перевод-таблица&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfed6bf42f1bc8686bb5d859423b890d11e8b110" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;kill-buffer-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;kill-buffer-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f304cf696f1e632f8ba6c6f3f7cb1e0454e1509b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;kill-buffer-query-functions&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;kill-buffer-query-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="749877e0fc6c5aa02a13f97fc887fd8db1f6e476" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;kill-emacs-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;kill-emacs-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40941afa9950702d326f1c9da0042f539f733a10" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;kill-ring-yank-pointer&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;kill-ring-yank-pointer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5059432d4ff9d735e103bc89015adc88b5adfee" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;kill-ring&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;kill-ring&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1964fa4e6700a184342396a1d2bd401c8fd0720b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;last-abbrev-location&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;last-abbrev-location&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b44dddd4d20daa9c41c65b545c820845da4ed61" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;last-abbrev-text&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;последний-сокращенный-текст&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f96b335a8c129e24aa3097b0fc86a899050ca7e2" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;last-abbrev&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;last-abbrev&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca26530c67f996e5541f0ab83dec583360a22f2e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;last-coding-system-used&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;последняя использованная система кодирования&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51e3eb3975eec5c5759fd9a546287e64731599df" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;last-command-event&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;последнее-командное-событие&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3380cb0f128839cd32c459048a4215f4926a4016" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;last-command&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;последняя команда&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d078b5c5e51e95f9a7a268c5f2d9f851d179742a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;last-event-frame&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;кадр последнего события&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae2a5b88183f50ea2726089d09b423ec138a6182" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;last-input-event&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;последнее-событие-ввода&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb3a1cdd9122df6d277a06dc000cd7aa859effad" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;last-kbd-macro&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;last-kbd-macro&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f4848b4e152b3099900cb1a959ee4675ac9c2bd2" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;last-nonmenu-event&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;последнее-не-меню-событие&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27e7c66cb75639059adf73d34bab5b5bd0c7cca5" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;last-prefix-arg&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;последний-префикс-аргумент&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c32208b76441fd5ea9a3e76c03d6912d2ff47b3d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;last-repeatable-command&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;последняя-повторяемая-команда&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7b9cbfca51379fc5fe9297a60cc5743e716a3fc9" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;left-fringe-width&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;ширина левого края&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c95db88a3ef3b72bacdfaeecffbeb5ac4a55fa41" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;left-margin-width&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;ширина левого поля&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2a8db3555a15edb3345757dfe61ad6d5b0783075" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;lexical-binding&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;лексическая привязка&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d68310d75a8c0ee563c1ec4e7aff36e695d0a0b4" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;line-prefix&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;префикс строки&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1404a9ebfce7ce4aa2e3035ae79670320daa7499" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;lisp-mode-abbrev-table&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;lisp-mode-abbrev-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d5fb860b020172330fb869243b452da35b8d505" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;list-buffers-directory&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;список-буферов-каталог&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfdb8dce81c3d1d46af0a55b31a105593ae0989d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;load-file-name&lt;/strong&gt;</source>
          <target state="translated">Переменная: имя- &lt;strong&gt;загрузки-файла&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d92e6a91cb2f54dcef758a714a32ba306022835a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;load-file-rep-suffixes&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;load-file-rep-suffixes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4a3adcba049a8a1eb3b2f8db21046b838dada441" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;load-history&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;история загрузки&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2652913099839783dda97daf2885c83512045b50" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;load-in-progress&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;незавершенная загрузка&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="156a83c628b13502fceb68bce4ebddbce2f500c6" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;load-path&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;load-path&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5c4ea914af7bf5b8fc5b4df05326e0d4d7b43bf" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;load-read-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;загрузка-чтение-функция&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="524da005ae21cb2be7bba034c6ab91915be388a3" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;load-suffixes&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;суффиксы нагрузки&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52ba13393b38ffe6932edc53e5301d3fe4e7fef6" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;local-abbrev-table&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;local-abbrev-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f002f80933e739fddd590ca99382d39cc14f095b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;local-function-key-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;local-function-key-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b13161aabecdf4c0615593e29aa09372a4ec0bc" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;locale-coding-system&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;locale-coding-system&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7883292371dd9a11c33eac750d16abb0d9df9d1c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;magic-fallback-mode-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;magic-fallback-mode-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="467d984102d2abb25ab5382e6f1a5c574366d77d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;magic-mode-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;magic-mode-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ec82cf7fe2e7a62bc48aae427a05a9eaae5bff5" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;main-thread&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;основной поток&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc5a9a7e98931e8d7e10153a0f7c7144f093c841" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mark-active&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;mark-active&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="045c81c631d3b2764659e78504e9d44a49a115a8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mark-ring&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;mark-ring&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9efe4d7ea63f72b8d724a0319952c7a28ab43bf6" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;max-image-size&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;максимальный размер изображения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28feacf8069377da4aa006c59fb32992cda1ff04" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;memory-full&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;память заполнена&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a097ea61a90c49b8d606ccb60adc8e64511f1e63" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;menu-bar-final-items&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;menu-bar-final-items&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e069f19aed0c14bbbcf81984b8666ddb356dbf47" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;menu-bar-update-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;menu-bar-update-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a0529b052823000714aadfbf82fb4ff4ce7e6110" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;menu-prompt-more-char&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;menu-prompt-more-char&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34b38083db8f5da8c612cf1e5a2134f6bdba0e95" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;message-truncate-lines&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;message-truncate-lines&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36e64c46211624bbb7a2f3439c98b2417a6816bb" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-allow-text-properties&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;minibuffer-allow-text-properties&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86b47266ef2a3eae6c4b8962cb8a73d897d6e5ea" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-beginning-of-buffer-movement&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;движение-начало-буфера минибуфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37c700bdc7690fa0ad301820b3a2cdb5ab0c07d8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-completion-confirm&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;завершение минибуфера-подтверждение&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e62331aef18940cd6c49a50df7cf0575ecab6e3e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-completion-predicate&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;предикат завершения минибуфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0551ff0d7bf8af1580682c938e31b56936ca615" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-completion-table&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;таблица-завершения-минибуфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5869206b9d91facdf9db29437298498742a3312" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-confirm-exit-commands&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;minibuffer-confirm-exit-commands&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34550c599fbf8b8bbc2a1fa54fb46642bf3b76eb" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-exit-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;минибуфер-выход-крюк&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a22995f59730cd89e9c1eb8927fdabacfa7de1e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-help-form&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;minibuffer-help-form&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0bd1acdcef197b3efe50a90aa8ba1f4b847eae1f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-history&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;история минибуфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d00bd8f5e128d888b8abbc37b73e034daaf1686c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-local-completion-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;карта-завершения-минибуфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f999839f578fc1106e86e0e5b8ecd7460ad7890" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-local-filename-completion-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;минибуфер-локальное-имя-файла-завершение-карта&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e4c20ba978278bf2a699d3aafcb093496e71d27c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-local-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;minibuffer-local-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc3290e95d0abc5c5a4ffdd336d2234c0a1ed241" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-local-must-match-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;minibuffer-local-must-match-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="371c2aa40cf0069dfb0d401511c45d932d8238f6" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-local-ns-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;minibuffer-local-ns-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5cbbfcc0ed02b54140603b63b89033d33dae2f92" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-local-shell-command-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;minibuffer-local-shell-command-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7b4ce29a29a7c6f817da21c4909ef69ac3efb28" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-scroll-window&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;окно прокрутки минибуфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a08709c9c2588b67608a23d1742a508b869f2542" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minibuffer-setup-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;minibuffer-setup-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc8e53c5bd52cd50b0b333e186c9367d3136e0e1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minor-mode-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;minor-mode-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2c6b66a95d6dc19d899fbdb9c9112b5e4a751f1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minor-mode-list&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;второстепенный-список-режимов&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75b26988be05941df375b7b79242dd83889e7bfe" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minor-mode-map-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;minor-mode-map-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e74d14d7b54e493e613a0220791483515214e9ba" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;minor-mode-overriding-map-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;второстепенный режим-overriding-map-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b6b5f09de50ea712ae5dda6a260a8b8a458650e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mode-line-buffer-identification&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;режим-строка-идентификатор-буфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a39b9719d0eb92aa934a11f68548787d75711a1f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mode-line-client&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;режим-линия-клиент&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="193b431ced64a25d5c8de815f38c000a183a6f56" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mode-line-end-spaces&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;mode-line-end-space&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e592780a6bb8217f5a2cb4b75efc8f36fae68864" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mode-line-frame-identification&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;режим-линия-идентификация кадра&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="19a63c09c4d2c80b54f791ad3b590f8322dbf9cd" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mode-line-front-space&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;mode-line-front-space&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c54859dfb75068f2e71380e81e19ba090df19f84" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mode-line-misc-info&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;mode-line-misc-info&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="21ae1572fa855751b49de70b55d7840d072daec3" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mode-line-modes&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;режим-линия-режимы&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31be35ce48d60668b8d58487a6ac27b0568901f9" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mode-line-modified&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;mode-line-modified&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b0b36caa88ac8370144eec1c571477e56f52065" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mode-line-mule-info&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;mode-line-mule-info&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43147db483c6f4a7c771e30c27461fe9cf96f66b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mode-line-position&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;mode-line-position&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec09ff8078ff4edcc85cd6424826f8ed96c383a4" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mode-line-process&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;режим-линия-процесс&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a9caf1e759a19fc1db0810fb7b4e34454445d267" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mode-line-remote&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;mode-line-remote&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0701e4ff67cec7ea958aab00ee3cd086d8fe263d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mode-name&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;имя-режима&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8919b150b1fb6edb5ac01fbe97c9d96aad42abb2" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;module-file-suffix&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;модуль-файл-суффикс&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14f2aab67668982d108b9787519b786903ec5616" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;most-negative-fixnum&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;most-negative-fixnum&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="177381edcb8d6f7bc846ccc5afed7b1a41dc3e4c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;most-positive-fixnum&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;most-positive-fixnum&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e75a139cac8e7a6d5a7f1f9ae4935949865a8835" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mouse-fine-grained-tracking&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;точное отслеживание мыши&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b3b6d24c2c91a430784e9e79b4b57c6ed60330d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;mouse-position-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;функция-положение-мыши&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a63840e30d158bb98ba4e73f1adb0a02ac78e44f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;move-frame-functions&lt;/strong&gt;</source>
          <target state="translated">Переменная: функции &lt;strong&gt;перемещения-кадра&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff3e1902dda28b93b22a5fd0aaa492bacaa45273" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;multi-query-replace-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;multi-query-replace-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e2034c1ca142d075989cc4ecba1b88fdc95449f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;multibyte-syntax-as-symbol&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;многобайтовый синтаксис как символ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f5e8bf6ed474b07f85f77262ab0f53b5a661141" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;multiple-frames&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;несколько кадров&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44829187d84e231d104c3f32ccb3e7363823b4ce" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;network-coding-system-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;network-coding-system-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5616abbb16ee2dd9ac85619d73481dc1589693f7" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;noninteractive&lt;/strong&gt;</source>
          <target state="translated">Переменная: не &lt;strong&gt;интерактивный&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a2510ab78884472b0f79a5e3d8e671650e020991" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;normal-auto-fill-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;normal-auto-fill-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76791fb61d841a3f5f76587e39489a38c5798400" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;num-input-keys&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;число-ввод-ключей&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7abfe57f177c980f51dd02deb7bd33b443966c0" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;num-nonmacro-input-events&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;num-nonmacro-input-events&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="baf513fcccc590093485e4d72dcfc0afeff09de0" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;obarray&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;obarray&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8213a62a693e3766666dad4a7bd2a22373f177a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;other-window-scroll-buffer&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;буфер прокрутки другого окна&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f2c60d4788d574c5a9cef281fc82cbd3a16e4aa" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;overlay-arrow-position&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;положение стрелки-наложения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca1987d4674cf936e4b1fb4d2afa7ddfe232112c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;overlay-arrow-string&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;строка-стрелки-наложения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e07efe1f447c463c1c08fb38d39c55ea30acbd98" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;overlay-arrow-variable-list&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;оверлей-стрелка-список-переменных&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20dd5d84417ea8ca8312a14b7914f7fc8eea3cee" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;overriding-local-map-menu-flag&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;overriding-local-map-menu-flag&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be13b9a768581043e77c56f764d76fb94d660319" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;overriding-local-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;overriding-local-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98be6517446b95446c3d1709a616102fdf7644ff" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;overriding-terminal-local-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;overriding-terminal-local-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8dc0f7318b1f19ef26b3bd67109c22c8467271af" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;overwrite-mode&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;режим перезаписи&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e8245cfaf85314e5235e930f971ef6ee8f9dc6d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;parse-sexp-lookup-properties&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;parse-sexp-lookup-properties&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f726b493c8fb9d6d8d69be4d17e1e6505d5a7cc4" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;path-separator&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;разделитель путей&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53cb9b52cf9d9b46ec49de66d098b2ec962b9fd0" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;play-sound-functions&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;play-sound-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c3584f80d28e5c0513edeaa1e092d476761b597" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;post-command-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;post-command-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d70f6026c68c1e06124135755d292c256c4c1db8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;post-gc-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;post-gc-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08bd5edcc50375e7b65fac1fd0a3e04dfccb828e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;pre-command-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;pre-command-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb1b1cde643fe4cc480040f4519a81bc020c5761" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;pre-redisplay-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;функция предварительного отображения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2ca063852b7b8e485ec89989264c7b77c73fac8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;pre-redisplay-functions&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;pre-redisplay-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba2467d8320e945004dfe3fc03effb39d9052088" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;prefix-arg&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;prefix-arg&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bab24bb81b6a382b7350fd86e8658845cd3d67f7" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;prefix-help-command&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;prefix-help-command&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6672468f034c87daa5836ec0f0b4d9b677154918" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;print-charset-text-property&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;print-charset-text-property&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79882dccfc319f221de8f30046959567ce11ee96" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;print-circle&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;print-circle&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2a2b6c11a9bc60be105ac033d07a0a66d9d78849" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;print-continuous-numbering&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;печать-непрерывная-нумерация&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9714a11d0a7f99d9a01cd1c64315ece9a26b76db" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;print-escape-control-characters&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;print-escape-control-characters&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="714b8812329d456aefecfcf671cfc7dd1891d8fc" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;print-escape-multibyte&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;print-escape-multibyte&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1feb35a095a241deb563cb8d9f690e6d84ded0dd" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;print-escape-newlines&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;print-escape-newlines&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bcbb9005440f3c38af11aec3fa222a5dea048308" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;print-escape-nonascii&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;print-escape-nonascii&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b89dd5b2970558e5b018540d117f3df1f3ade4d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;print-gensym&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;print-gensym&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51c00282e03f0a5aa400ea87143c27f75327b598" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;print-length&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;длина печати&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57b41f21e22342d0bbd7fffaef361e2d6e5f36f7" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;print-level&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;уровень печати&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74ead417ddae9a2d75066b36d9e696a1a78d729d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;print-number-table&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;print-number-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="037401177cb07b1411186c4aba51fe7c0c040adf" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;print-quoted&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;print-quoted&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a65714133a8408f0bd7be560a8cdd47c8f4fc426" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;printable-chars&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;printable-chars&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="611ea996f10d4c25a854fc5ea8a54166d7a44148" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;process-adaptive-read-buffering&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;адаптивная к процессу буферизация чтения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d5e12b2e996994ec0cf11b9a8f4debfa0926e2d8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;process-coding-system-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;список-системы-кодирования-процесса&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f11e76a3793ebab21a369f36821f4a89bb4ba2c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;process-connection-type&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;тип подключения к процессу&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b67b6b5510e69a1f4e3a022dd80be4c2e36d462d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;process-environment&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;процесс-среда&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8ac6385b0dc4dc0ee1ee8f4c46ef6ebe503020b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;process-file-side-effects&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;побочные эффекты файла процесса&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1b2d7460a6b05a9bcb642a5700723553bae6847" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;prog-indentation-context&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;prog-indentation-context&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1830c06835a0e20db16bafca31f5834b929a50a1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;pure-bytes-used&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;чистые байты&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66a3f792e474e308672f80838c4f10432f4e118a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;purify-flag&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;purify-flag&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3adf5b7133413df563c91a0ef11cdf76cb3790da" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;query-replace-history&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;история-замены-запроса&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff95803fedda17b5114acac43e82f5c140a4226a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;query-replace-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;запрос-заменить-карту&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ce45a120c6e49a7b41bfc8716d2e9653fc4b7e8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;quit-flag&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;quit-flag&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72a441d06bb7a1bd54c919b6c6f3e874d524c2a1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;read-circle&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;круг чтения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c4ac3e99cb62a29779dcd3ab7c007943ed1231a7" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;read-expression-history&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;чтение-выражение-история&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff19bc17082940aa0807bc01430858d484427adb" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;read-file-name-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;чтение-имя-файла-функция&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e91adc5b898dad023be62b9a78c7b1c3a50dbc8a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;real-last-command&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;последняя команда&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98810949447199bb0eb664559937043db90450a5" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;regexp-history&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;regexp-history&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97489fd0dd0f3b7690d60f65e7052743ff8be68b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;regexp-unmatchable&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;regexp-unmatchable&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="675f28b09b2460be6c86903892d66725e86df6f8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;register-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;register-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4387cf85b95bd49498e71693448f5e0d8dadb142" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;replace-re-search-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;функция-замена-повторный поиск&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0846d5930674e38df65035db55dd49557d1e765" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;replace-search-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;replace-search-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d37342bfc29ff0e0b5bbdc6b01ce20166eab36a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;revert-buffer-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;функция обратного буфера&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="41e3e32f56700d7ba77f106f5ce525fb99f1456e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;revert-buffer-in-progress-p&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;revert-buffer-in-progress-p&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2053393ff152cc2e43e01d7f777405fd47b93dc" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;revert-buffer-insert-file-contents-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;функция возврата-буфера-вставки-файла-содержимого&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9cd926fe96114e69f7b5c891374db5574c760fd9" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;right-fringe-width&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;ширина правой полосы&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d96194d8740752b78f1a809dbd3478924eb6aed" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;right-margin-width&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;ширина правого поля&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="889a66244500fe2d8c18b731ae5feae3f92bb45f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;save-buffer-coding-system&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;save-buffer-coding-system&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57afdb21a853bff7428faa03cfad7c9a448ffcd8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;scroll-bar-height&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;высота полосы прокрутки&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be5e7109c45594cf33f12b6ea4a9e7f3dadaf0f8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;scroll-bar-width&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;ширина полосы прокрутки&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="434e2b3dcefbafa5398278f5a61dfe4b7fcb8345" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;search-spaces-regexp&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;search-space-regexp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4340847e2f67616ec787e195a7c2858210b56015" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;select-safe-coding-system-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;select-safe-coding-system-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1831e733b22a056af98882b1552151fc46c02c59" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;selective-display&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;выборочное отображение&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11b4c9eb78618adbff73e39b444a72117d7411d0" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;set-message-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;set-message-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f491412f89b307e4a0ec96f592ab35133196c69" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;shell-command-history&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;история команд оболочки&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7e6c4d7ad25138d099d053482e6703291f7b7e7" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;show-help-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;show-help-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="783ec957c651f7f83782b450a000b309a4ce1364" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;special-event-map&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;special-event-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99e7c5a93ad99e869e213461270445d9078f0d5c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;split-string-default-separators&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;разделители-разделители-строки-по умолчанию&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2c521cb94f3c5649e630c4d705fe2d1926a77f4" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;standard-display-table&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;стандарт-дисплей-таблица&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9dd8c63e1fb4d533225e769169d3d10c63eb7088" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;standard-input&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;стандартный ввод&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9d4a7bd5f8b9fdb133e14531a6a698fd0b71bf0" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;standard-output&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;стандартный вывод&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08f0ae2d7753d8824a05d6b6ad21e2889d5290db" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;standard-translation-table-for-decode&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;стандарт-таблица-перевод-для-декодирования&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc2440913b14411c208887c1f19285ce0a191b96" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;standard-translation-table-for-encode&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;стандарт-таблица-перевод-для-кодирования&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="461a0aa834801ae75fd0086eaef04f87d5a78be8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;string-chars-consed&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;string-chars-consed&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="699b056f171c4f5afdd73367578c672468f29b60" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;strings-consed&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;сжатые строки&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0dcf3720d4b860619097e3a21dafe1f7b9299d84" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;suspend-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;подвеска-крюк&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1a71b978079f7cff48c84c8ecd0bcda1770d484" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;suspend-resume-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;приостановить-возобновить-крючок&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e6337538882e76d02586bd36c531849a951d1cdf" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;symbols-consed&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;с условными обозначениями&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25e6dec88de3f226b07d5e8bf0f69b2be742b7c1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;syntax-propertize-extend-region-functions&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;синтаксис-свойства-расширение-регион-функции&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="87d9905c2701294a4109f6a48b8979936a068393" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;syntax-propertize-function&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;функция-свойства-синтаксиса&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3f87b4286f3265a19fb998dd555768298f25bba" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;system-configuration&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;system-configuration&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66df9703724b9d759fcd2b043b2d01184b130233" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;system-key-alist&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;system-key-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6786ef8a1f37da4d6319dd616ce81b8227b6eb8c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;system-messages-locale&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;системные-сообщения-локаль&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="371c0190f5ec25197c7630ba577cbf8c1331b042" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;system-time-locale&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;системное время-локаль&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf5639fde8821d5cc1ad48437ebfe6aa9738f61d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;system-type&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;системный тип&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a675e2d72ecd1da0387d63049b2828deb093673a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;tabulated-list-entries&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;записи-списки-таблицы&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f2eb578ff0d245bd0dff6ecf8ee761a766a23de" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;tabulated-list-format&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;формат табличного списка&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f7067dd7254e3238c983aed1d37f4ebe77aa9b7" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;tabulated-list-printer&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;таблица-список-принтер&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c97bf95b79e019d9b5182776a8f5c6609866827" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;tabulated-list-revert-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;tabulated-list-revert-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f3e483f91a1d8dfa7b09ce5a22f77c609145824" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;tabulated-list-sort-key&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;таблица-список-сортировка-ключ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1147eb98194a351344e2d997c3ee7bf11a9bb126" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;temp-buffer-setup-hook&lt;/strong&gt;</source>
          <target state="translated">Переменная: &lt;strong&gt;temp-buffer-setup-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0caa429d00a021bc1556866553fa6b73d4e0fc34" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;temp-buffer-show-hook&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;temp-buffer-show-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f212a24b60e537a15e8f75d9119b9567ef469020" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;text-mode-abbrev-table&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;text-mode-abbrev-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f0844b40a97b4be956f62eae1cfbbff3d6258da" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;text-property-default-nonsticky&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;text-property-default-nonsticky&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1e419c165532c632e00ccd95f70d330d0f64a5b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;this-command&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;this-command&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="297d1979b7f5427b9509fa3cf06f815bb0af8a7f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;this-original-command&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;this-original-command&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b48a39108eff4653b524e31944527f365b05cd4d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;thread-list-refresh-seconds&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;thread-list-refresh-seconds&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7884b8e2bb05230dbde0f0d7365de33252300aa0" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;tool-bar-border&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;tool-bar-border&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44f25abc25808c3a7744b9241a14d72bbd11ff8c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;tool-bar-button-margin&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;tool-bar-button-margin&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14f8f2b605670e591498747110b0c33eb42a0af2" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;tool-bar-button-relief&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;tool-bar-button-relief&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9b3a9b587a8775736da9d44a31e7c5d99336097" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;tool-bar-map&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;tool-bar-map&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a05cad28a5e4d8b51cccde2de6a5fa7a94abd288" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;tooltip-functions&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;tooltip-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="573211452e6c4ef792ce21c1db73b1a814df64f0" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;translation-table-for-input&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;translation-table-for-input&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b79311360ceb7e6638e083bedd1df2c417eb75c3" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;tty-erase-char&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;tty-erase-char&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3aa6e2d754f329ffbff935d1ac0a93ad80d0733c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;tty-setup-hook&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;tty-setup-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b73efc43ce425c94e83e17f30f7449470d8dd86" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;undo-auto-current-boundary-timer&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;undo-auto-current-boundary-timer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e338284678203b7463487f3a38f18668a9d26d39" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;undo-in-progress&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;undo-in-progress&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc3a27d0e93099cfc7171ba95e793bb7ed353ec6" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;unicode-category-table&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;unicode-category-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7afe370e1d46249c18d745a0dc7fbf9bdb8eef67" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;unload-feature-special-hooks&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;unload-feature-special-hooks&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fd11fc4e6e42b3cc0de62db98be3a4c0c8bccc1d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;unread-command-events&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;unread-command-events&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="946722b8cb0ff2ee2910d07130fdc7f7c782c426" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;use-hard-newlines&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;use-hard-newlines&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="786c193f286ea5179898653206c020a80768c208" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;user-emacs-directory&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;user-emacs-directory&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ceebe7ba64bfea0f550ec298cc153ca246f98e86" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;user-init-file&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;user-init-file&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cfea75ea634eb8ad39199db99d8ba535b9ed2097" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;values&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;values&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="522e5625b0fbc01e798b27a4c5f94bdb885d18c4" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;vc-mode&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;vc-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43e2a353a5150a903df3ca4b92c7ab3f88ce13fa" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;vector-cells-consed&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;vector-cells-consed&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c071c04398be6f2cb186133995742e61ccc7befc" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;vertical-scroll-bar&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;vertical-scroll-bar&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81d4633888dccbafa8bde2eda5ec728b34192711" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;warning-fill-column&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;warning-fill-column&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3fa8b172d156adef920428241bd31b7cb754834c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;warning-fill-prefix&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;warning-fill-prefix&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c69263a21bccd8bfbfed2061779efaee5079e32" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;warning-levels&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;warning-levels&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="096047b56aa4383656a9ac163f7f38391c0c4089" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;warning-prefix-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;warning-prefix-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c843af6368d9caae09ff7b4e66524346dd31636" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;warning-series&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;warning-series&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c63597e64edc181a5396ee2666084330c5edb71" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;warning-type-format&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;warning-type-format&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4bf59029547cbdbb42e4323a83f43477dbcfed16" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;while-no-input-ignore-events&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;while-no-input-ignore-events&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69fbaf905df9b00d1942a22becc24ad885240319" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;window-buffer-change-functions&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;window-buffer-change-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14679c115dc17fc87633dd0f01ba2be5c85754f1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;window-configuration-change-hook&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;window-configuration-change-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb739634a1df959fb1dd68e97b424a1e72719e11" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;window-persistent-parameters&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;window-persistent-parameters&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="95fa8e8146f1850ede6c947edeb16d5d45c98b77" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;window-point-insertion-type&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;window-point-insertion-type&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ebb5e1d0bcd5e84e0a7dbbf5089a09750c2f68b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;window-scroll-functions&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;window-scroll-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c9809b2bd728344c75b4e3b6b9d2f9db98047b2" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;window-selection-change-functions&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;window-selection-change-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="acb59aff6dbaa1554bd50a78e972502e8e5404ef" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;window-setup-hook&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;window-setup-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c65e15c55a876fb6083a4b736809b2a104daf409" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;window-size-change-functions&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;window-size-change-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d75612fc50a8d1813f4abe88bf49cdc0c8880dc8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;window-size-fixed&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;window-size-fixed&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b5627f954b0b8a495bfbe237b060b108651d3c6a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;window-state-change-functions&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;window-state-change-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="757c57f59ca994c10853355266d4e88bba5288fd" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;window-state-change-hook&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;window-state-change-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8645cf95e9c550c8ed3f67ebc8fd826e42fc307" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;window-system&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;window-system&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="adbe12baa2db23a062813dd3a646e8edfa77ea37" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;wrap-prefix&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;wrap-prefix&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c4549ca7273c71bfdf8b223c03f9d767e14e0478" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;write-contents-functions&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;write-contents-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29333e33d28e0e40a9904f8d0ffd91d95ab3effa" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;write-file-functions&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;write-file-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d11877c1e6846044b38635ab52216f7c4b6c73b" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;write-region-annotate-functions&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;write-region-annotate-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d2a14032fdb83dd7fe009543a2246d77fb45a62" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;write-region-inhibit-fsync&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;write-region-inhibit-fsync&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c076e43081d7a072111ddc45af25035b493dd5e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;write-region-post-annotation-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;write-region-post-annotation-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b6a885eab74f501f58feaae71104b968467c358" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;x-alt-keysym&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;x-alt-keysym&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fd8079b44c5955bef31cee1b7517d4cedaf4811f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;x-ctrl-keysym&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;x-ctrl-keysym&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de0e63247b3545a9e78734530920dce49af33df8" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;x-hyper-keysym&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;x-hyper-keysym&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59dfd7c295892d35a49b7bdf7aa718574fe2e935" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;x-meta-keysym&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;x-meta-keysym&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7153899d926404f7f4bb38e2f4d1a0e234c70d1c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;x-pointer-shape&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;x-pointer-shape&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e847ce358f0ff8d292d83ad98b5d71abfbffdf1" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;x-resource-class&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;x-resource-class&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3dd14373280f6ec7ed9a984e9fc628e7bf92b467" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;x-resource-name&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;x-resource-name&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dacb08b5af492be0690f390524227c1097fad694" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;x-sensitive-text-pointer-shape&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;x-sensitive-text-pointer-shape&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dcb26b46ff482368de45867502ed3f4cf6ed6d1d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;x-super-keysym&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;x-super-keysym&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b433ffb98ceda78f8bfff33db982f8f2bfe5f47" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;yank-undo-function&lt;/strong&gt;</source>
          <target state="translated">Variable: &lt;strong&gt;yank-undo-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="5aa8072cb7560c375b88fab2c25f2edc71292437" translate="yes" xml:space="preserve">
          <source>Variables Affecting Output</source>
          <target state="translated">Переменные,влияющие на выходную мощность</target>
        </trans-unit>
        <trans-unit id="4d580b8a57c61e0eb63214714c032421b8be0275" translate="yes" xml:space="preserve">
          <source>Variables Used in the Mode Line</source>
          <target state="translated">Переменные,используемые в строке режима</target>
        </trans-unit>
        <trans-unit id="485d8da4dbe56f282ec7d77c6e57875429143138" translate="yes" xml:space="preserve">
          <source>Variables can also have buffer-local bindings (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;); a few variables have terminal-local bindings (see &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;). These kinds of bindings work somewhat like ordinary local bindings, but they are localized depending on where you are in Emacs.</source>
          <target state="translated">Variables can also have buffer-local bindings (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;); a few variables have terminal-local bindings (see &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;). These kinds of bindings work somewhat like ordinary local bindings, but they are localized depending on where you are in Emacs.</target>
        </trans-unit>
        <trans-unit id="d5d280c591e7e33c5e92151fce25a4e8e58e3f0e" translate="yes" xml:space="preserve">
          <source>Variables controlling completion behavior.</source>
          <target state="translated">Переменные,контролирующие поведение завершения.</target>
        </trans-unit>
        <trans-unit id="7be681eb34254c92b95a0818571edd5b6ea48661" translate="yes" xml:space="preserve">
          <source>Variables of type &lt;code&gt;DEFVAR_BOOL&lt;/code&gt; can only take on the values &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt;. Attempting to assign them any other value will set them to &lt;code&gt;t&lt;/code&gt;:</source>
          <target state="translated">Variables of type &lt;code&gt;DEFVAR_BOOL&lt;/code&gt; can only take on the values &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt; . Attempting to assign them any other value will set them to &lt;code&gt;t&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="58eb0b8c5a0676018a2981e2b03fce8d93b69a0f" translate="yes" xml:space="preserve">
          <source>Variables of type &lt;code&gt;DEFVAR_INT&lt;/code&gt; can take on only integer values. Attempting to assign them any other value will result in an error:</source>
          <target state="translated">Variables of type &lt;code&gt;DEFVAR_INT&lt;/code&gt; can take on only integer values. Attempting to assign them any other value will result in an error:</target>
        </trans-unit>
        <trans-unit id="a760b32f10356fd693c0e949f3529b8609b2405d" translate="yes" xml:space="preserve">
          <source>Variables programs bind to customize their warnings.</source>
          <target state="translated">Переменные программы привязывают для настройки своих предупреждений.</target>
        </trans-unit>
        <trans-unit id="5260444b76ef1bd438c61585595a2c39f70147c5" translate="yes" xml:space="preserve">
          <source>Variables set by the command loop for you to examine.</source>
          <target state="translated">Переменные,задаваемые циклом команд для изучения.</target>
        </trans-unit>
        <trans-unit id="9e74dc189f2d7f134363b60d83dc79b5f8b9a1e5" translate="yes" xml:space="preserve">
          <source>Variables that Never Change</source>
          <target state="translated">Переменные,которые никогда не меняются</target>
        </trans-unit>
        <trans-unit id="a3ec36552e7ef886e8d62fdcd9e40602c84c636a" translate="yes" xml:space="preserve">
          <source>Variables that are aliases for other variables.</source>
          <target state="translated">Переменные,являющиеся псевдонимами для других переменных.</target>
        </trans-unit>
        <trans-unit id="e4cdcb436e2561abd3e1325f7eefb1a1b1e71a30" translate="yes" xml:space="preserve">
          <source>Variables that control what the printing functions do.</source>
          <target state="translated">Переменные,управляющие функциями печати.</target>
        </trans-unit>
        <trans-unit id="ff2c99475d7a3d9deddc9d798776c373e2470e09" translate="yes" xml:space="preserve">
          <source>Variables that hold kill ring data.</source>
          <target state="translated">Переменные,содержащие данные об убийственном кольце.</target>
        </trans-unit>
        <trans-unit id="29c9d74f4b54df072a8bc059ae81983cad7e4a7c" translate="yes" xml:space="preserve">
          <source>Variables that never change.</source>
          <target state="translated">Переменные,которые никогда не меняются.</target>
        </trans-unit>
        <trans-unit id="a6083e693117f8c2616afa79a4ff3a68d44f37e9" translate="yes" xml:space="preserve">
          <source>Variables used in that data structure.</source>
          <target state="translated">Переменные,используемые в этой структуре данных.</target>
        </trans-unit>
        <trans-unit id="a4d0dc31792c68fdca52220f79d3af04e609de89" translate="yes" xml:space="preserve">
          <source>Variables users set to control display of warnings.</source>
          <target state="translated">Пользователи переменных настроены на управление отображением предупреждений.</target>
        </trans-unit>
        <trans-unit id="b2a556c5d947fd30acff0aa48693d5eb2b778b10" translate="yes" xml:space="preserve">
          <source>Variables usually don&amp;rsquo;t need to be autoloaded. An exception is if the variable on its own is generally useful without the whole defining library being loaded. (An example of this might be something like &lt;code&gt;find-exec-terminator&lt;/code&gt;.)</source>
          <target state="translated">Variables usually don&amp;rsquo;t need to be autoloaded. An exception is if the variable on its own is generally useful without the whole defining library being loaded. (An example of this might be something like &lt;code&gt;find-exec-terminator&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="2766d9e281c08653c4618f82d2023d28bdbb7732" translate="yes" xml:space="preserve">
          <source>Variables with Restricted Values</source>
          <target state="translated">Переменные с ограниченными значениями</target>
        </trans-unit>
        <trans-unit id="6421a722adc5c1bcc5c731d9a977c2b5318c3f53" translate="yes" xml:space="preserve">
          <source>Various customization hooks and variables.</source>
          <target state="translated">Различные крючки для настройки и переменных.</target>
        </trans-unit>
        <trans-unit id="4e1c7ebb12752ab41efb9466049f1adff93ab977" translate="yes" xml:space="preserve">
          <source>Various data types that can be used as input streams.</source>
          <target state="translated">Различные типы данных,которые могут использоваться в качестве входных потоков.</target>
        </trans-unit>
        <trans-unit id="839ac4fca006549962c3f7de05f36bcb82e169ab" translate="yes" xml:space="preserve">
          <source>Various data types that can be used as output streams.</source>
          <target state="translated">Различные типы данных,которые могут быть использованы в качестве выходных потоков.</target>
        </trans-unit>
        <trans-unit id="5ca1f5efe5ff9860ebf2a0c8b320c6474710eb78" translate="yes" xml:space="preserve">
          <source>Various other formats are supported.</source>
          <target state="translated">Поддерживаются различные другие форматы.</target>
        </trans-unit>
        <trans-unit id="0ac489d9a1895c6f2eb014ecb11d0e2c0cdd725c" translate="yes" xml:space="preserve">
          <source>Vector Type</source>
          <target state="translated">векторный тип</target>
        </trans-unit>
        <trans-unit id="4cad8cb182489b679287441dffb83204bc591f30" translate="yes" xml:space="preserve">
          <source>Vector of &lt;var&gt;len&lt;/var&gt; elements of type &lt;var&gt;type&lt;/var&gt;, defaulting to bytes. The &lt;var&gt;type&lt;/var&gt; is any of the simple types above, or another vector specified as a list of the form &lt;code&gt;(vec &lt;var&gt;len&lt;/var&gt; [&lt;var&gt;type&lt;/var&gt;])&lt;/code&gt;.</source>
          <target state="translated">Vector of &lt;var&gt;len&lt;/var&gt; elements of type &lt;var&gt;type&lt;/var&gt; , defaulting to bytes. The &lt;var&gt;type&lt;/var&gt; is any of the simple types above, or another vector specified as a list of the form &lt;code&gt;(vec &lt;var&gt;len&lt;/var&gt; [&lt;var&gt;type&lt;/var&gt;])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4d8fa69b55a1468bf147abf44bbdbf7cd114cec" translate="yes" xml:space="preserve">
          <source>Vectors</source>
          <target state="translated">Vectors</target>
        </trans-unit>
        <trans-unit id="dd890137f12c8269fe2f6e2d8f00dbeec49853de" translate="yes" xml:space="preserve">
          <source>Vectors are printed with square brackets surrounding the elements. Thus, a vector whose elements are the symbols &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt; is printed as &lt;code&gt;[a b a]&lt;/code&gt;. You can write vectors in the same way in Lisp input.</source>
          <target state="translated">Vectors are printed with square brackets surrounding the elements. Thus, a vector whose elements are the symbols &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt; is printed as &lt;code&gt;[a b a]&lt;/code&gt; . You can write vectors in the same way in Lisp input.</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="f6ac74c77426f288c7c85c95d3e2e0752da06bc7" translate="yes" xml:space="preserve">
          <source>Version Information</source>
          <target state="translated">Информация о версии</target>
        </trans-unit>
        <trans-unit id="6f961280b418e89ebf7d9a94a505fd17524de6c1" translate="yes" xml:space="preserve">
          <source>Vertical Fractional Scrolling</source>
          <target state="translated">Вертикальная прокрутка фракций</target>
        </trans-unit>
        <trans-unit id="24f114ffd0d6b48f33aeb1c66fd28edb81d979f9" translate="yes" xml:space="preserve">
          <source>Vertical scroll amount, in pixels. Normally, this is 0.</source>
          <target state="translated">Количество прокрутки по вертикали,в пикселях.Обычно это 0.</target>
        </trans-unit>
        <trans-unit id="3f9b0b4839d8e13d831fc5b511adb5b36b696d39" translate="yes" xml:space="preserve">
          <source>Very fast lookup-tables.</source>
          <target state="translated">Очень быстрые поисковые столы.</target>
        </trans-unit>
        <trans-unit id="b6da6c696ae90f36386ef2ac32097cf341e0e381" translate="yes" xml:space="preserve">
          <source>Via the Package Menu, users may download packages from &lt;em&gt;package archives&lt;/em&gt;. Such archives are specified by the variable &lt;code&gt;package-archives&lt;/code&gt;, whose default value contains a single entry: the archive hosted by the GNU project at &lt;a href=&quot;https://elpa.gnu.org&quot;&gt;https://elpa.gnu.org&lt;/a&gt;. This section describes how to set up and maintain a package archive.</source>
          <target state="translated">Via the Package Menu, users may download packages from &lt;em&gt;package archives&lt;/em&gt;. Such archives are specified by the variable &lt;code&gt;package-archives&lt;/code&gt; , whose default value contains a single entry: the archive hosted by the GNU project at &lt;a href=&quot;https://elpa.gnu.org&quot;&gt;https://elpa.gnu.org&lt;/a&gt;. This section describes how to set up and maintain a package archive.</target>
        </trans-unit>
        <trans-unit id="968106212d48214e704ba7218007699b908cc011" translate="yes" xml:space="preserve">
          <source>Views inside and outside of Edebug.</source>
          <target state="translated">Вид изнутри и снаружи Edebug.</target>
        </trans-unit>
        <trans-unit id="d4cd645bdf9acd554823451c75a4b3ac95fd503c" translate="yes" xml:space="preserve">
          <source>Visibility is meaningless on text terminals, since only the selected frame is actually displayed in any case.</source>
          <target state="translated">Видимость бессмысленна на текстовых терминалах,так как в любом случае отображается только выбранный кадр.</target>
        </trans-unit>
        <trans-unit id="08d6eb9d7d0b70e1e2f7ff16375b109c59731e9d" translate="yes" xml:space="preserve">
          <source>Visibility of Frames</source>
          <target state="translated">Видимость кадров</target>
        </trans-unit>
        <trans-unit id="d3a94bce45b2297d43744ffef2942438b299a47f" translate="yes" xml:space="preserve">
          <source>Visiting Files</source>
          <target state="translated">Посещаемые файлы</target>
        </trans-unit>
        <trans-unit id="0c362d65c0b71c0282bdf8488948910da13a2012" translate="yes" xml:space="preserve">
          <source>Visiting a file means reading a file into a buffer. Once this is done, we say that the buffer is &lt;em&gt;visiting&lt;/em&gt; that file, and call the file &lt;em&gt;the visited file&lt;/em&gt; of the buffer.</source>
          <target state="translated">Visiting a file means reading a file into a buffer. Once this is done, we say that the buffer is &lt;em&gt;visiting&lt;/em&gt; that file, and call the file &lt;em&gt;the visited file&lt;/em&gt; of the buffer.</target>
        </trans-unit>
        <trans-unit id="0274a1e55edf09cbea63b919421a47f8e8c9255d" translate="yes" xml:space="preserve">
          <source>Visiting a file, with &lt;code&gt;find-file-noselect&lt;/code&gt; or the commands that use it, performs conversion likewise (because it calls &lt;code&gt;insert-file-contents&lt;/code&gt;); it also calls the mode function for each format that it decodes. It stores a list of the format names in the buffer-local variable &lt;code&gt;buffer-file-format&lt;/code&gt;.</source>
          <target state="translated">Visiting a file, with &lt;code&gt;find-file-noselect&lt;/code&gt; or the commands that use it, performs conversion likewise (because it calls &lt;code&gt;insert-file-contents&lt;/code&gt; ); it also calls the mode function for each format that it decodes. It stores a list of the format names in the buffer-local variable &lt;code&gt;buffer-file-format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2415cb7f63df0c9de23362326ad3c37a9adfc96" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>
        </trans-unit>
        <trans-unit id="a7be8dbb65beeab8726a0f360d79b84f3d32f6e2" translate="yes" xml:space="preserve">
          <source>Wait for another thread to notify &lt;var&gt;cond&lt;/var&gt;, a condition variable. This function will block until the condition is notified, or until a signal is delivered to this thread using &lt;code&gt;thread-signal&lt;/code&gt;.</source>
          <target state="translated">Wait for another thread to notify &lt;var&gt;cond&lt;/var&gt; , a condition variable. This function will block until the condition is notified, or until a signal is delivered to this thread using &lt;code&gt;thread-signal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="749d36dff23d4698291f2b055c5b31742ec5a07c" translate="yes" xml:space="preserve">
          <source>Waiting for Elapsed Time or Input</source>
          <target state="translated">Ожидание истекшего времени или входа.</target>
        </trans-unit>
        <trans-unit id="1813a330b6da950a7eb66012d9aa259525fc97b5" translate="yes" xml:space="preserve">
          <source>Waiting for user input or elapsed time.</source>
          <target state="translated">Ожидание пользовательского ввода или истекшее время.</target>
        </trans-unit>
        <trans-unit id="d0ceaaba51082c2077dd631e1a6651753c03c5ef" translate="yes" xml:space="preserve">
          <source>Warning Basics</source>
          <target state="translated">Основы предупреждения</target>
        </trans-unit>
        <trans-unit id="ea0ef30fd9bda293d78af05a20b81fc75c62d811" translate="yes" xml:space="preserve">
          <source>Warning Options</source>
          <target state="translated">Предупреждающие опции</target>
        </trans-unit>
        <trans-unit id="21cc223192651b1e1f7f5e6e6bc104650334196f" translate="yes" xml:space="preserve">
          <source>Warning Variables</source>
          <target state="translated">Предупреждающие переменные</target>
        </trans-unit>
        <trans-unit id="950eb9ff619006f2694bdc4c44fc4914c6240d09" translate="yes" xml:space="preserve">
          <source>Warnings concepts and functions to report them.</source>
          <target state="translated">Предупреждает концепции и функции,чтобы сообщить о них.</target>
        </trans-unit>
        <trans-unit id="a8d4aaa3899c67cd460bfb444f7db67a1e36b907" translate="yes" xml:space="preserve">
          <source>Ways to compose advice</source>
          <target state="translated">Способы составления рекомендаций</target>
        </trans-unit>
        <trans-unit id="79f5da6994eb4e0faa629213a3ff5a2cfe6f96b4" translate="yes" xml:space="preserve">
          <source>Ways to compose advice.</source>
          <target state="translated">Способы составить совет.</target>
        </trans-unit>
        <trans-unit id="9f42c347cd6eb3cb730ffd48876b95e8ac4d10f8" translate="yes" xml:space="preserve">
          <source>We also speak of the &lt;em&gt;global binding&lt;/em&gt;, which is where (conceptually) the global value is kept.</source>
          <target state="translated">Мы также говорим о &lt;em&gt;глобальной привязке&lt;/em&gt; , в которой (концептуально) хранится глобальное значение.</target>
        </trans-unit>
        <trans-unit id="0d668e5cb1bf3fedea5caf8974c18fb37bb6627b" translate="yes" xml:space="preserve">
          <source>We can call this function by passing it to &lt;code&gt;funcall&lt;/code&gt;, like this:</source>
          <target state="translated">Мы можем вызвать эту функцию, передав ее функции &lt;code&gt;funcall&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="34783863c944d7c3a4275a0a72a8a7a87a6a5772" translate="yes" xml:space="preserve">
          <source>We can, however, reasonably conclude that customizing &lt;code&gt;display-buffer-alist&lt;/code&gt; differs from customizing &lt;code&gt;display-buffer-base-action&lt;/code&gt; in two major aspects: it is stronger because it overrides the &lt;var&gt;action&lt;/var&gt; argument of &lt;code&gt;display-buffer&lt;/code&gt;, and it allows to explicitly specify the affected buffers. In fact, displaying other buffers is not affected in any way by a customization for</source>
          <target state="translated">Мы можем, однако, разумно сделать вывод , что настройка &lt;code&gt;display-buffer-alist&lt;/code&gt; отличается от настройки &lt;code&gt;display-buffer-base-action&lt;/code&gt; в двух основных аспектах: она сильнее , поскольку он отменяет &lt;var&gt;action&lt;/var&gt; аргумента &lt;code&gt;display-buffer&lt;/code&gt; , и это позволяет явно указать затронутые буферы. Фактически, на отображение других буферов никак не влияет настройка для</target>
        </trans-unit>
        <trans-unit id="9d3194adcf565512ddaefe5ff7ccea51d2f1f332" translate="yes" xml:space="preserve">
          <source>We could stop with our examples here but Lisp programs still have an ace up their sleeves which they can use to overrule any customization of &lt;code&gt;display-buffer-alist&lt;/code&gt;. It&amp;rsquo;s the variable &lt;code&gt;display-buffer-overriding-action&lt;/code&gt; which they can bind around &lt;code&gt;display-buffer&lt;/code&gt; calls as follows:</source>
          <target state="translated">На этом мы могли бы остановиться на наших примерах, но у программ на Лиспе все еще есть козырь в рукаве, который они могут использовать для отмены любых настроек &lt;code&gt;display-buffer-alist&lt;/code&gt; . Это переменная &lt;code&gt;display-buffer-overriding-action&lt;/code&gt; , которую они могут привязать к вызовам &lt;code&gt;display-buffer&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="bfc5ece5ba431e6c326e9f44789684fd3627a82c" translate="yes" xml:space="preserve">
          <source>We do not bind &lt;code&gt;this-command&lt;/code&gt; with &lt;code&gt;let&lt;/code&gt; because that would restore the old value in case of error&amp;mdash;a feature of &lt;code&gt;let&lt;/code&gt; which in this case does precisely what we want to avoid.</source>
          <target state="translated">Мы не связываем &lt;code&gt;this-command&lt;/code&gt; с &lt;code&gt;let&lt;/code&gt; , потому что это восстановит старое значение в случае ошибки - особенность &lt;code&gt;let&lt;/code&gt; , которая в данном случае делает именно то, чего мы хотим избежать.</target>
        </trans-unit>
        <trans-unit id="159a9d35556998bedeef1f723841442c69d829a8" translate="yes" xml:space="preserve">
          <source>We do not list the error-strings of this error and its subcategories, because the error message is normally constructed from the data items alone when the error condition &lt;code&gt;file-error&lt;/code&gt; is present. Thus, the error-strings are not very relevant. However, these error symbols do have &lt;code&gt;error-message&lt;/code&gt; properties, and if no data is provided, the &lt;code&gt;error-message&lt;/code&gt; property &lt;em&gt;is&lt;/em&gt; used. See &lt;a href=&quot;files#Files&quot;&gt;Files&lt;/a&gt;.</source>
          <target state="translated">Мы не перечисляем строки ошибок для этой ошибки и ее подкатегорий, потому что сообщение об ошибке обычно строится только из элементов данных, когда присутствует ошибка &lt;code&gt;file-error&lt;/code&gt; условия . Таким образом, строки ошибок не очень актуальны. Однако эти символы ошибок есть &lt;code&gt;error-message&lt;/code&gt; свойства, и если не предусмотрено никаких данных, то &lt;code&gt;error-message&lt;/code&gt; свойство &lt;em&gt;будет&lt;/em&gt; использоваться. См. &lt;a href=&quot;files#Files&quot;&gt;Файлы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5decfae24bac2b0751e1b6135e50a2e5cd9a8a08" translate="yes" xml:space="preserve">
          <source>We do not wish to add new symbols to make finer distinctions unless it is absolutely necessary! In fact, we hope to eliminate some of these alternatives in the future. If you need to make a finer distinction than &lt;code&gt;system-type&lt;/code&gt; allows for, you can test &lt;code&gt;system-configuration&lt;/code&gt;, e.g., against a regexp.</source>
          <target state="translated">Мы не хотим добавлять новые символы для более тонких различий, кроме случаев крайней необходимости! Фактически, мы надеемся устранить некоторые из этих альтернатив в будущем. Если вам нужно провести более тонкое различие, чем позволяет &lt;code&gt;system-type&lt;/code&gt; , вы можете протестировать &lt;code&gt;system-configuration&lt;/code&gt; , например, по регулярному выражению.</target>
        </trans-unit>
        <trans-unit id="7be098d6a87976d013ead5aa99eb0d69a9e5b2d1" translate="yes" xml:space="preserve">
          <source>We emphasize that, unlike &lt;code&gt;read-key-sequence&lt;/code&gt;, the functions &lt;code&gt;read-event&lt;/code&gt;, &lt;code&gt;read-char&lt;/code&gt;, and &lt;code&gt;read-char-exclusive&lt;/code&gt; do not perform the translations described in &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Translation Keymaps&lt;/a&gt;. If you wish to read a single key taking these translations into account, use the function &lt;code&gt;read-key&lt;/code&gt;:</source>
          <target state="translated">Мы подчеркиваем, что, в отличие от &lt;code&gt;read-key-sequence&lt;/code&gt; , функции &lt;code&gt;read-event&lt;/code&gt; , &lt;code&gt;read-char&lt;/code&gt; и &lt;code&gt;read-char-exclusive&lt;/code&gt; не выполняют переводы, описанные в &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;таблице ключей перевода&lt;/a&gt; . Если вы хотите прочитать один ключ с учетом этих переводов, используйте функцию &lt;code&gt;read-key&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="670f88a4884b1b803e1eba7ef68c45091b8b9985" translate="yes" xml:space="preserve">
          <source>We give functions names because it is convenient to refer to them by their names in Lisp expressions. Also, a named Lisp function can easily refer to itself&amp;mdash;it can be recursive. Furthermore, primitives can only be referred to textually by their names, since primitive function objects (see &lt;a href=&quot;primitive-function-type#Primitive-Function-Type&quot;&gt;Primitive Function Type&lt;/a&gt;) have no read syntax.</source>
          <target state="translated">Мы даем функциям имена, потому что на них удобно ссылаться по именам в выражениях Лиспа. Кроме того, именованная функция Lisp может легко ссылаться на себя - она ​​может быть рекурсивной. Более того, на примитивы можно ссылаться только в текстовом виде по их именам, поскольку объекты примитивных функций (см. &lt;a href=&quot;primitive-function-type#Primitive-Function-Type&quot;&gt;Тип примитивной функции&lt;/a&gt; ) не имеют синтаксиса чтения.</target>
        </trans-unit>
        <trans-unit id="6a7c6edd92c0307bfe9f5ccde285aa6b6206dd77" translate="yes" xml:space="preserve">
          <source>We illustrate these possibilities by calling the following function with various prefixes:</source>
          <target state="translated">Мы иллюстрируем эти возможности вызовом следующей функции с различными префиксами:</target>
        </trans-unit>
        <trans-unit id="fbd7c8d6e030bec37125599c7ed1141f965b2b86" translate="yes" xml:space="preserve">
          <source>We invite users to write Lisp programs to store and retrieve text properties in files, using these hooks, and thus to experiment with various data formats and find good ones. Eventually we hope users will produce good, general extensions we can install in Emacs.</source>
          <target state="translated">Мы приглашаем пользователей писать программы на языке Lisp для хранения и извлечения текстовых свойств в файлах,используя эти крючки,и таким образом экспериментировать с различными форматами данных и находить хорошие из них.В конце концов,мы надеемся,что пользователи получат хорошие,общие расширения,которые мы сможем установить в Emacs.</target>
        </trans-unit>
        <trans-unit id="5fadf83090f30144af161405290746495a705dbd" translate="yes" xml:space="preserve">
          <source>We now describe some technical details about the exact suffixes that &lt;code&gt;load&lt;/code&gt; tries.</source>
          <target state="translated">Теперь мы опишем некоторые технические подробности о точных суффиксах, которые пытается &lt;code&gt;load&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98dbbe6139420af597b3a2bbdb6e62506d894544" translate="yes" xml:space="preserve">
          <source>We recommend that modules always perform the compatibility verification, unless they do their job entirely in the initialization function, and don&amp;rsquo;t access any Lisp objects or use any Emacs functions accessible through the environment structure.</source>
          <target state="translated">Мы рекомендуем, чтобы модули всегда выполняли проверку совместимости, если только они не выполняют свою работу полностью в функции инициализации, и не обращаются к каким-либо объектам Lisp или не используют какие-либо функции Emacs, доступные через структуру среды.</target>
        </trans-unit>
        <trans-unit id="57c90ae2691e132592b9cb39b509e4c7e9d9dffe" translate="yes" xml:space="preserve">
          <source>We recommend that new programs avoid dealing with these complexities by not storing keyboard events in strings. Here is how to do that:</source>
          <target state="translated">Мы рекомендуем новым программам избегать решения этих сложных задач,не хранить события клавиатуры в строках.Вот как это сделать:</target>
        </trans-unit>
        <trans-unit id="0d6e0d2496e8712d25196ff14ad46a0c40573ade" translate="yes" xml:space="preserve">
          <source>We recommend that you only bind this variable for modifications that do not result in lasting changes to buffer text contents (for example face changes or temporary modifications). If you need to delay change hooks during a series of changes (typically for performance reasons), use &lt;code&gt;combine-change-calls&lt;/code&gt; or &lt;code&gt;combine-after-change-calls&lt;/code&gt; instead.</source>
          <target state="translated">Мы рекомендуем привязывать эту переменную только для модификаций, которые не приводят к длительным изменениям содержимого буфера текста (например, изменения лица или временные модификации). Если вам нужно отложить перехватчики изменений во время серии изменений (обычно из соображений производительности), используйте вместо этого &lt;code&gt;combine-after-change-calls&lt;/code&gt; &lt;code&gt;combine-change-calls&lt;/code&gt; или вызовы объединения-после-изменения .</target>
        </trans-unit>
        <trans-unit id="74eff4c45f3a86af34cf84ff95f9377a7b69ca68" translate="yes" xml:space="preserve">
          <source>We recommend that you use &lt;code&gt;with-suppressed-warnings&lt;/code&gt; instead, but if you do use this construct, that you use it around the smallest possible piece of code to avoid missing possible warnings other than one you intend to suppress.</source>
          <target state="translated">Мы рекомендуем вместо этого использовать &lt;code&gt;with-suppressed-warnings&lt;/code&gt; , но если вы все же используете эту конструкцию, используйте ее вокруг минимально возможного фрагмента кода, чтобы не пропустить возможные предупреждения, кроме тех, которые вы собираетесь подавить.</target>
        </trans-unit>
        <trans-unit id="6b912ba2b2cf33a76a20dc963c1bb3be8ad475bb" translate="yes" xml:space="preserve">
          <source>We say that &amp;ldquo;the &lt;small&gt;CAR&lt;/small&gt; of this cons cell is&amp;rdquo; whatever object its &lt;small&gt;CAR&lt;/small&gt; slot currently holds, and likewise for the &lt;small&gt;CDR&lt;/small&gt;.</source>
          <target state="translated">Мы говорим, что &amp;laquo; &lt;small&gt;CAR&lt;/small&gt; этой cons-ячейки - это&amp;raquo;, какой бы объект не &lt;small&gt;содержал&lt;/small&gt; ее слот &lt;small&gt;CAR&lt;/small&gt; , и то же самое для &lt;small&gt;CDR&lt;/small&gt; .</target>
        </trans-unit>
        <trans-unit id="465e576b1e106e138ab23c2c80f5f7c0d040d01e" translate="yes" xml:space="preserve">
          <source>We say that a variable is void if its symbol has an unassigned value cell (see &lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;Symbol Components&lt;/a&gt;).</source>
          <target state="translated">Мы говорим, что переменная недействительна, если ее символ имеет ячейку с неназначенным значением (см. &lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;Компоненты символа&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b9ff279e59573eaf1b4bba7e1686aa464914ac68" translate="yes" xml:space="preserve">
          <source>We still have two return points, but this time only the outer one has the tag &lt;code&gt;hack&lt;/code&gt;; the inner one has the tag &lt;code&gt;quux&lt;/code&gt; instead. Therefore, &lt;code&gt;throw&lt;/code&gt; makes the outer &lt;code&gt;catch&lt;/code&gt; return the value &lt;code&gt;yes&lt;/code&gt;. The function &lt;code&gt;print&lt;/code&gt; is never called, and the body-form &lt;code&gt;'no&lt;/code&gt; is never evaluated.</source>
          <target state="translated">У нас все еще есть две точки возврата, но на этот раз только внешняя имеет &lt;code&gt;hack&lt;/code&gt; тега ; у внутреннего вместо этого есть тег &lt;code&gt;quux&lt;/code&gt; . Следовательно, &lt;code&gt;throw&lt;/code&gt; заставляет внешний &lt;code&gt;catch&lt;/code&gt; возвращать значение &lt;code&gt;yes&lt;/code&gt; . Функция &lt;code&gt;print&lt;/code&gt; никогда не вызывается, а body-form &lt;code&gt;'no&lt;/code&gt; никогда не оценивается.</target>
        </trans-unit>
        <trans-unit id="247b16deead2e69a7c5e42167c6021981978e59d" translate="yes" xml:space="preserve">
          <source>We suggest not trying to handle arbitrary Lisp objects as text property names or values&amp;mdash;because a program that general is probably difficult to write, and slow. Instead, choose a set of possible data types that are reasonably flexible, and not too hard to encode.</source>
          <target state="translated">Мы предлагаем не пытаться обрабатывать произвольные объекты Лиспа как имена или значения текстовых свойств, потому что программу такого типа, вероятно, трудно написать и она медленная. Вместо этого выберите набор возможных типов данных, которые являются достаточно гибкими и не слишком сложными для кодирования.</target>
        </trans-unit>
        <trans-unit id="71128c7fdcf74454bb577a9a486c3871ebdeee25" translate="yes" xml:space="preserve">
          <source>We use &lt;code&gt;&quot;p&quot;&lt;/code&gt; because the numeric prefix argument is never &lt;code&gt;nil&lt;/code&gt;. Defined in this way, the function does display the message when called from a keyboard macro.</source>
          <target state="translated">Мы используем &lt;code&gt;&quot;p&quot;&lt;/code&gt; потому что аргумент числового префикса никогда не равен &lt;code&gt;nil&lt;/code&gt; . Определенная таким образом функция действительно отображает сообщение при вызове из макроса клавиатуры.</target>
        </trans-unit>
        <trans-unit id="a0d8bcb390422815013c66894042de12f406dd8c" translate="yes" xml:space="preserve">
          <source>We usually give a name to a function when it is first created. This is called &lt;em&gt;defining a function&lt;/em&gt;, and we usually do it with the &lt;code&gt;defun&lt;/code&gt; macro. This section also describes other ways to define a function.</source>
          <target state="translated">Обычно мы даем имя функции при ее создании. Это называется &lt;em&gt;определением функции&lt;/em&gt; , и мы обычно делаем это с помощью макроса &lt;code&gt;defun&lt;/code&gt; . В этом разделе также описаны другие способы определения функции.</target>
        </trans-unit>
        <trans-unit id="873aa91f570e057f9aa3234f6805ed6332e2535e" translate="yes" xml:space="preserve">
          <source>We will forget about that form immediately after observing that it fails to create a new frame and uses a fallback action instead.</source>
          <target state="translated">Мы забудем об этой форме сразу после того,как увидим,что она не может создать новый фрейм и вместо этого использует fallback действие.</target>
        </trans-unit>
        <trans-unit id="c4a3883630468df1e98b0ca77da51ca930066e11" translate="yes" xml:space="preserve">
          <source>What &lt;code&gt;re-search-forward&lt;/code&gt; does when the search fails depends on the value of &lt;var&gt;noerror&lt;/var&gt;:</source>
          <target state="translated">Что делает &lt;code&gt;re-search-forward&lt;/code&gt; при неудачном поиске, зависит от значения &lt;var&gt;noerror&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="05ea3d35535da7f87673c1cd1eeb34b20cc37a96" translate="yes" xml:space="preserve">
          <source>What C variant Emacs is written in.</source>
          <target state="translated">На чем написан вариант Си Эмакс.</target>
        </trans-unit>
        <trans-unit id="861fd8b53999b4a17c738d46511ecb936ab080b0" translate="yes" xml:space="preserve">
          <source>What Edebug does when matching fails.</source>
          <target state="translated">Что делает Edebug,когда совпадение не удается.</target>
        </trans-unit>
        <trans-unit id="c67ade89bb4aa6b239a652f1f4b73337d1d0d6fc" translate="yes" xml:space="preserve">
          <source>What Emacs does when you report an error.</source>
          <target state="translated">Что делает Emacs,когда вы сообщаете об ошибке.</target>
        </trans-unit>
        <trans-unit id="28e86541f604237f1ddde85ce3753dcce2b65f73" translate="yes" xml:space="preserve">
          <source>What Is a Function?</source>
          <target state="translated">Что такое функция?</target>
        </trans-unit>
        <trans-unit id="087378c8e38ed12b52d683f43c14ee8ece9e15c4" translate="yes" xml:space="preserve">
          <source>What a display table consists of.</source>
          <target state="translated">Из чего состоит таблица отображения.</target>
        </trans-unit>
        <trans-unit id="ec616d2df336547dda35a45c17f3e58298ee87d6" translate="yes" xml:space="preserve">
          <source>What a keymap looks like as a Lisp object.</source>
          <target state="translated">Как выглядит ключевая карта как объект Lisp.</target>
        </trans-unit>
        <trans-unit id="021ec0738237627ae757ca297d8c6b9599099f2f" translate="yes" xml:space="preserve">
          <source>What fraction of a line the vertical scrolling covers, or how many lines, depends on what the lines contain. A value of .5 could scroll a line whose height is very short off the screen, while a value of 3.3 could scroll just part of the way through a tall line or an image.</source>
          <target state="translated">Какая часть линии покрывается вертикальной прокруткой,или сколько линий,зависит от того,что содержится в линиях.Значение .5 может прокручивать линию,высота которой очень мала,за пределами экрана,в то время как значение 3.3 может прокручивать только часть пути через высокую линию или изображение.</target>
        </trans-unit>
        <trans-unit id="6fdd046d2b8a52f691781e5e4b4065ce8a7e042a" translate="yes" xml:space="preserve">
          <source>What function a keystroke invokes.</source>
          <target state="translated">Какую функцию вызывает нажатие клавиши.</target>
        </trans-unit>
        <trans-unit id="443952c0cfcf874d30a07193a08c9c39f6a5cca4" translate="yes" xml:space="preserve">
          <source>What happens when the search fails depends on the value of &lt;var&gt;noerror&lt;/var&gt;. If &lt;var&gt;noerror&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, a &lt;code&gt;search-failed&lt;/code&gt; error is signaled. If &lt;var&gt;noerror&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;search-forward&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; and does nothing. If &lt;var&gt;noerror&lt;/var&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor &lt;code&gt;t&lt;/code&gt;, then &lt;code&gt;search-forward&lt;/code&gt; moves point to the upper bound and returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Что происходит, когда поиск не удается, зависит от значения &lt;var&gt;noerror&lt;/var&gt; . Если &lt;var&gt;noerror&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , выдается сигнал об ошибке &lt;code&gt;search-failed&lt;/code&gt; . Если &lt;var&gt;noerror&lt;/var&gt; равно &lt;code&gt;t&lt;/code&gt; , &lt;code&gt;search-forward&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; и ничего не делает. Если &lt;var&gt;noerror&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; или &lt;code&gt;t&lt;/code&gt; , то &lt;code&gt;search-forward&lt;/code&gt; перемещает точку к верхней границе и возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f19193d2fbedb672944d0291bc293133d60a7942" translate="yes" xml:space="preserve">
          <source>What input looks like when you read it.</source>
          <target state="translated">Как выглядит вход,когда вы его читаете.</target>
        </trans-unit>
        <trans-unit id="a42b5e44c394bd52777815237c3498ce41ae6bb8" translate="yes" xml:space="preserve">
          <source>What is a buffer?</source>
          <target state="translated">Что такое буфер?</target>
        </trans-unit>
        <trans-unit id="5ae38b03174dc4954ba4b06e0e5e4b38a7bb839e" translate="yes" xml:space="preserve">
          <source>What is in a face?</source>
          <target state="translated">Что у тебя на лице?</target>
        </trans-unit>
        <trans-unit id="c4ae6bd14e01eb20113c18dbca5377d7ce068c17" translate="yes" xml:space="preserve">
          <source>What kind of comment is active: &lt;code&gt;nil&lt;/code&gt; if not in a comment or in a comment of style &amp;lsquo;</source>
          <target state="translated">Какой комментарий активен: &lt;code&gt;nil&lt;/code&gt; если не в комментарии или в комментарии стиля '</target>
        </trans-unit>
        <trans-unit id="c9160ba4ba7268eb81a48fb489876b40899f70b7" translate="yes" xml:space="preserve">
          <source>What kinds of colors the terminal supports&amp;mdash;either &lt;code&gt;color&lt;/code&gt;, &lt;code&gt;grayscale&lt;/code&gt;, or &lt;code&gt;mono&lt;/code&gt;.</source>
          <target state="translated">Какие цвета поддерживает терминал: &lt;code&gt;color&lt;/code&gt; , &lt;code&gt;grayscale&lt;/code&gt; или &lt;code&gt;mono&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7206440741f715ed5c44ff6f60d315b4ef73962f" translate="yes" xml:space="preserve">
          <source>What text looks like in the kill ring.</source>
          <target state="translated">Как выглядит текст на кольце убийства.</target>
        </trans-unit>
        <trans-unit id="eccb1f7107637b64a67d5c014009d8c69bfd5675" translate="yes" xml:space="preserve">
          <source>What the debugger does.</source>
          <target state="translated">Что делает отладчик.</target>
        </trans-unit>
        <trans-unit id="ed13d4d55780ebbe3cf675a642d9153cf539e6aa" translate="yes" xml:space="preserve">
          <source>What you see while in the debugger.</source>
          <target state="translated">То,что ты видишь в отладчике.</target>
        </trans-unit>
        <trans-unit id="cecc4af34db9dcdfa481eaa7cb202db99df882e8" translate="yes" xml:space="preserve">
          <source>Whatever the name under which the file is eventually found, and the directory where Emacs found it, Emacs sets the value of the variable &lt;code&gt;load-file-name&lt;/code&gt; to that file&amp;rsquo;s name.</source>
          <target state="translated">Каким бы ни было имя, под которым в конечном итоге был найден файл, и каталог, в котором Emacs его нашел, Emacs устанавливает значение переменной &lt;code&gt;load-file-name&lt;/code&gt; равным имени этого файла.</target>
        </trans-unit>
        <trans-unit id="769bb19e615b7f8e2809e5882e2d05a18f57a531" translate="yes" xml:space="preserve">
          <source>When</source>
          <target state="translated">When</target>
        </trans-unit>
        <trans-unit id="97f07d6b05b134b6e3b2450078e6198580db985c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;auto-compression-mode&lt;/code&gt; is enabled, Emacs automatically uncompresses compressed files when you visit them, and automatically recompresses them if you alter and save them. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Compressed-Files.html#Compressed-Files&quot;&gt;Compressed Files&lt;/a&gt; in</source>
          <target state="translated">Когда включен &lt;code&gt;auto-compression-mode&lt;/code&gt; автоматического сжатия, Emacs автоматически распаковывает сжатые файлы, когда вы их посещаете, и автоматически повторно сжимает их, если вы их изменяете и сохраняете. См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Compressed-Files.html#Compressed-Files&quot;&gt;Сжатые файлы&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="29c280855fec978ae7ea588ae44343f3fa904554" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;bury-buffer&lt;/code&gt; (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;) operates on the selected window (which shows the buffer that shall be buried), it handles case (2) by calling &lt;code&gt;frame-auto-hide-function&lt;/code&gt; (see &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt;) to deal with the selected frame. The other two cases are handled as with &lt;code&gt;replace-buffer-in-windows&lt;/code&gt;.</source>
          <target state="translated">Когда &lt;code&gt;bury-buffer&lt;/code&gt; (см. &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Список &lt;/a&gt;буферов ) работает с выбранным окном (которое показывает буфер, который должен быть скрыт), он обрабатывает case (2), вызывая &lt;code&gt;frame-auto-hide-function&lt;/code&gt; (см. &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Выход из Windows&lt;/a&gt; ) для работы с выбранным Рамка. Два других случая обрабатываются как с &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62dc28175bde9a72a361f1efefa93526f51f8e0d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;capitalize-region&lt;/code&gt; is called interactively, &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are point and the mark, with the smallest first.</source>
          <target state="translated">При интерактивном вызове &lt;code&gt;capitalize-region&lt;/code&gt; &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; точки являются точкой и меткой, причем наименьшая первая.</target>
        </trans-unit>
        <trans-unit id="d3633d4051e74c8040e753e9fc8ad78c48eac2b8" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;capitalize-word&lt;/code&gt; is called interactively, &lt;var&gt;count&lt;/var&gt; is set to the numeric prefix argument.</source>
          <target state="translated">Когда &lt;code&gt;capitalize-word&lt;/code&gt; вызывается в интерактивном режиме, &lt;var&gt;count&lt;/var&gt; устанавливается равным числовому префиксу аргумента.</target>
        </trans-unit>
        <trans-unit id="14c2c19840d8f51b1009fb410cb8b7577795b1ee" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;debug-on-entry&lt;/code&gt; is called interactively, it prompts for &lt;var&gt;function-name&lt;/var&gt; in the minibuffer. If the function is already set up to invoke the debugger on entry, &lt;code&gt;debug-on-entry&lt;/code&gt; does nothing. &lt;code&gt;debug-on-entry&lt;/code&gt; always returns &lt;var&gt;function-name&lt;/var&gt;.</source>
          <target state="translated">При интерактивном вызове &lt;var&gt;function-name&lt;/var&gt; &lt;code&gt;debug-on-entry&lt;/code&gt; запрашивается имя функции в минибуфере. Если функция уже настроена для вызова отладчика при входе, &lt;code&gt;debug-on-entry&lt;/code&gt; ничего не делает. &lt;code&gt;debug-on-entry&lt;/code&gt; всегда возвращает &lt;var&gt;function-name&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="d9cdcbd511c7be9b7613226685d59905e4e81d54" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;downcase-region&lt;/code&gt; is called interactively, &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are point and the mark, with the smallest first.</source>
          <target state="translated">Когда &lt;code&gt;downcase-region&lt;/code&gt; вызывается интерактивно, &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; - это точка и метка, причем наименьшая первая.</target>
        </trans-unit>
        <trans-unit id="9a91b4d51711faa0f3b607fbadd18a85bc85c025" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;downcase-word&lt;/code&gt; is called interactively, &lt;var&gt;count&lt;/var&gt; is set to the numeric prefix argument.</source>
          <target state="translated">Когда &lt;code&gt;downcase-word&lt;/code&gt; вызывается в интерактивном режиме, &lt;var&gt;count&lt;/var&gt; устанавливается в числовой префикс аргумента.</target>
        </trans-unit>
        <trans-unit id="ffdc0a04c7d29eefb34897364d931986470c13ac" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;find-file&lt;/code&gt; is called interactively, it prompts for &lt;var&gt;filename&lt;/var&gt; in the minibuffer.</source>
          <target state="translated">Когда &lt;code&gt;find-file&lt;/code&gt; вызывается в интерактивном режиме, он запрашивает &lt;var&gt;filename&lt;/var&gt; в минибуфере.</target>
        </trans-unit>
        <trans-unit id="41be64811f6682691b8ab255cfdf3b08798221d5" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;fringe-cursor-alist&lt;/code&gt; has a buffer-local value, and there is no bitmap defined for a cursor type, the corresponding value from the default value of &lt;code&gt;fringes-indicator-alist&lt;/code&gt; is used.</source>
          <target state="translated">Когда &lt;code&gt;fringe-cursor-alist&lt;/code&gt; имеет значение, локальное для буфера, и для типа курсора не определено растровое изображение, используется соответствующее значение из значения по умолчанию для &lt;code&gt;fringes-indicator-alist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6102f7fe59282a53519abc9cd1a7ba36dafbcdb5" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;fringe-indicator-alist&lt;/code&gt; has a buffer-local value, and there is no bitmap defined for a logical indicator, or the bitmap is &lt;code&gt;t&lt;/code&gt;, the corresponding value from the default value of &lt;code&gt;fringe-indicator-alist&lt;/code&gt; is used.</source>
          <target state="translated">Когда &lt;code&gt;fringe-indicator-alist&lt;/code&gt; имеет значение, локальное в буфере, и для логического индикатора не определено растровое изображение, или битовая карта равна &lt;code&gt;t&lt;/code&gt; , используется соответствующее значение из значения по умолчанию для &lt;code&gt;fringe-indicator-alist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff7569124d2f1bdb1909ed5176f270e51522c325" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;inhibit-message&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, no message will be displayed in the echo area, it will only be logged to &amp;lsquo;</source>
          <target state="translated">Если &lt;code&gt;inhibit-message&lt;/code&gt; равно &lt;code&gt;nil&lt;/code&gt; , сообщение не будет отображаться в эхо-области, оно будет зарегистрировано только в '</target>
        </trans-unit>
        <trans-unit id="dc1103873e3db33b4aaa3401944505ce479e7276" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;locate-library&lt;/code&gt; is called from a program, it returns the file name as a string. When the user runs &lt;code&gt;locate-library&lt;/code&gt; interactively, the argument &lt;var&gt;interactive-call&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, and this tells &lt;code&gt;locate-library&lt;/code&gt; to display the file name in the echo area.</source>
          <target state="translated">Когда &lt;code&gt;locate-library&lt;/code&gt; вызывается из программы, она возвращает имя файла в виде строки. Когда пользователь запускает &lt;code&gt;locate-library&lt;/code&gt; в интерактивном режиме, аргумент &lt;var&gt;interactive-call&lt;/var&gt; равен &lt;code&gt;t&lt;/code&gt; , и это указывает &lt;code&gt;locate-library&lt;/code&gt; отображать имя файла в эхо-области.</target>
        </trans-unit>
        <trans-unit id="8be3636632ca887811e97095ce158e03f16a012c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;make-temp-file&lt;/code&gt; returns, the file has been created and is empty. At that point, you should write the intended contents into the file.</source>
          <target state="translated">Когда &lt;code&gt;make-temp-file&lt;/code&gt; возвращается, файл был создан и пуст. На этом этапе вы должны записать предполагаемое содержимое в файл.</target>
        </trans-unit>
        <trans-unit id="4a54287d699c1137f2330e3d8c9d0d2560327885" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;nil&lt;/code&gt; is used for &lt;var&gt;end&lt;/var&gt;, it stands for the length of the string. Thus,</source>
          <target state="translated">Когда &lt;code&gt;nil&lt;/code&gt; используется для &lt;var&gt;end&lt;/var&gt; , это означает длину строки. Таким образом,</target>
        </trans-unit>
        <trans-unit id="0e1b580ad41f89e13ab97c3895fac0b26641a1c1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;recenter&lt;/code&gt; is called interactively, &lt;var&gt;count&lt;/var&gt; is the raw prefix argument. Thus, typing</source>
          <target state="translated">Когда &lt;code&gt;recenter&lt;/code&gt; вызывается в интерактивном режиме, &lt;var&gt;count&lt;/var&gt; является аргументом необработанного префикса. Таким образом, набрав</target>
        </trans-unit>
        <trans-unit id="0d795c479f785a22c40363cc857c013c1e18d457" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;require&lt;/code&gt; is used at top level in a file, it takes effect when you byte-compile that file (see &lt;a href=&quot;byte-compilation#Byte-Compilation&quot;&gt;Byte Compilation&lt;/a&gt;) as well as when you load it. This is in case the required package contains macros that the byte compiler must know about. It also avoids byte compiler warnings for functions and variables defined in the file loaded with &lt;code&gt;require&lt;/code&gt;.</source>
          <target state="translated">Когда &lt;code&gt;require&lt;/code&gt; используется на верхнем уровне в файле, он вступает в силу при байтовой компиляции этого файла (см. &lt;a href=&quot;byte-compilation#Byte-Compilation&quot;&gt;Байтовая компиляция&lt;/a&gt; ), а также при его загрузке. Это на случай, если требуемый пакет содержит макросы, о которых должен знать байтовый компилятор. Это также позволяет избежать предупреждений компилятора байтов для функций и переменных, определенных в файле, загруженном с помощью &lt;code&gt;require&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be3ab7615ce3da45abc454d09196bf106573f082" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;save-buffers-kill-terminal&lt;/code&gt; is killing Emacs, it calls the functions in this hook, after asking the standard questions and before calling &lt;code&gt;kill-emacs&lt;/code&gt;. The functions are called in order of appearance, with no arguments. Each function can ask for additional confirmation from the user. If any of them returns &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; does not kill Emacs, and does not run the remaining functions in this hook. Calling &lt;code&gt;kill-emacs&lt;/code&gt; directly does not run this hook.</source>
          <target state="translated">Когда &lt;code&gt;save-buffers-kill-terminal&lt;/code&gt; убивает Emacs, он вызывает функции в этой ловушке, задав стандартные вопросы и перед вызовом &lt;code&gt;kill-emacs&lt;/code&gt; . Функции вызываются в порядке появления без аргументов. Каждая функция может запрашивать у пользователя дополнительное подтверждение. Если какой-либо из них возвращает &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; не уничтожает Emacs и не запускает остальные функции в этой ловушке. Вызов &lt;code&gt;kill-emacs&lt;/code&gt; напрямую не запускает эту ловушку.</target>
        </trans-unit>
        <trans-unit id="e0ce83af193f6f7c9ff4ed6d0442606f8f22899c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;upcase-region&lt;/code&gt; is called interactively, &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are point and the mark, with the smallest first.</source>
          <target state="translated">Когда &lt;code&gt;upcase-region&lt;/code&gt; вызывается в интерактивном режиме, &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; - это точка и метка, причем наименьшая первая.</target>
        </trans-unit>
        <trans-unit id="1fcf4096bb79a3729289a41ba9696402ad41fc4e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;upcase-word&lt;/code&gt; is called interactively, &lt;var&gt;count&lt;/var&gt; is set to the numeric prefix argument.</source>
          <target state="translated">Когда &lt;code&gt;upcase-word&lt;/code&gt; вызывается интерактивно, для параметра &lt;var&gt;count&lt;/var&gt; устанавливается числовой префикс аргумента.</target>
        </trans-unit>
        <trans-unit id="b242d967f89d29cc4deaaa87e4fe29fd952b20f4" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;write-region&lt;/code&gt; actually writes the text from the buffer to the file, it intermixes the specified annotations at the corresponding positions. All this takes place without modifying the buffer.</source>
          <target state="translated">Когда &lt;code&gt;write-region&lt;/code&gt; фактически записывает текст из буфера в файл, он смешивает указанные аннотации в соответствующих позициях. Все это происходит без модификации буфера.</target>
        </trans-unit>
        <trans-unit id="622bd1ed237bdc49bff8e369b92159969081e3a1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;write-region&lt;/code&gt; writes data into a file, it first calls the encoding functions for the formats listed in &lt;code&gt;buffer-file-format&lt;/code&gt;, in the order of appearance in the list.</source>
          <target state="translated">Когда &lt;code&gt;write-region&lt;/code&gt; записи записывает данные в файл, она сначала вызывает функции кодирования для форматов, перечисленных в &lt;code&gt;buffer-file-format&lt;/code&gt; , в порядке появления в списке.</target>
        </trans-unit>
        <trans-unit id="f58c2cefd6c24f0142fd39252193f0da0ed56609" translate="yes" xml:space="preserve">
          <source>When &lt;em&gt;Adaptive Fill Mode&lt;/em&gt; is enabled, Emacs determines the fill prefix automatically from the text in each paragraph being filled rather than using a predetermined value. During filling, this fill prefix gets inserted at the start of the second and subsequent lines of the paragraph as described in &lt;a href=&quot;filling#Filling&quot;&gt;Filling&lt;/a&gt;, and in &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;.</source>
          <target state="translated">Когда включен &lt;em&gt;режим адаптивного&lt;/em&gt; заполнения, Emacs автоматически определяет префикс заполнения по тексту в каждом заполняемом абзаце, а не с использованием заранее определенного значения. Во время заполнения этот префикс заполнения вставляется в начало второй и последующих строк абзаца, как описано в разделах &amp;laquo; &lt;a href=&quot;filling#Filling&quot;&gt;Заливка&amp;raquo;&lt;/a&gt; и &amp;laquo; &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Автозаполнение&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95611c2ce3b163c164fe37e201833ea246ed2c76" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;alist&lt;/var&gt; specifies more than one parameter whose value can affect the new size of &lt;var&gt;frame&lt;/var&gt;, the final size of the frame may differ according to the toolkit used. For example, specifying that a frame should from now on have a menu and/or tool bar instead of none and simultaneously specifying the new height of the frame will inevitably lead to a recalculation of the frame&amp;rsquo;s height. Conceptually, in such case, this function will try to have the explicit height specification prevail. It cannot be excluded, however, that the addition (or removal) of the menu or tool bar, when eventually performed by the toolkit, will defeat this intention.</source>
          <target state="translated">Когда &lt;var&gt;alist&lt;/var&gt; указывает более одного параметра, значение которого может повлиять на новый размер &lt;var&gt;frame&lt;/var&gt; , окончательный размер кадра может отличаться в зависимости от используемого инструментария. Например, указание того, что с этого момента фрейм должен иметь меню и / или панель инструментов, а не ничего, и одновременное указание новой высоты фрейма неизбежно приведет к перерасчету высоты фрейма. По идее, в таком случае эта функция будет пытаться использовать явную спецификацию высоты. Однако нельзя исключать, что добавление (или удаление) меню или панели инструментов, когда в конечном итоге выполняется набором инструментов, разрушит это намерение.</target>
        </trans-unit>
        <trans-unit id="36122306d706808c769481ee234345a7afcd9690" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;arg&lt;/var&gt; is a token, the function is called with point just before that token. A return value of &lt;code&gt;nil&lt;/code&gt; always means to fallback on the default behavior, so the function should return &lt;code&gt;nil&lt;/code&gt; for arguments it does not expect.</source>
          <target state="translated">Когда &lt;var&gt;arg&lt;/var&gt; является токеном, функция вызывается с точкой непосредственно перед этим токеном. Возвращаемое значение &lt;code&gt;nil&lt;/code&gt; всегда означает возврат к поведению по умолчанию, поэтому функция должна возвращать &lt;code&gt;nil&lt;/code&gt; для аргументов, которых она не ожидает.</target>
        </trans-unit>
        <trans-unit id="70afa656b8297636394f7bda1869f0f1b5584bea" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;function-object&lt;/var&gt; is a symbol and the code is byte compiled, the byte-compiler will warn if that function is not defined or might not be known at run time.</source>
          <target state="translated">Когда &lt;var&gt;function-object&lt;/var&gt; является символом, а код компилируется в байтах, компилятор байтов предупреждает, если эта функция не определена или может быть неизвестна во время выполнения.</target>
        </trans-unit>
        <trans-unit id="c1b0783bfe169e954b315d95c75f22ea10f96602" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;function&lt;/var&gt; is called, it receives one argument, the limit of the search; it should begin searching at point, and not search beyond the limit. It should return non-&lt;code&gt;nil&lt;/code&gt; if it succeeds, and set the match data to describe the match that was found. Returning &lt;code&gt;nil&lt;/code&gt; indicates failure of the search.</source>
          <target state="translated">Когда &lt;var&gt;function&lt;/var&gt; вызывается, она получает один аргумент, предел поиска; он должен начинать поиск с точки, а не искать за пределами предела. Он должен вернуть &lt;code&gt;nil&lt;/code&gt; случае успеха и установить данные совпадения для описания найденного совпадения. Возврат &lt;code&gt;nil&lt;/code&gt; указывает на неудачный поиск.</target>
        </trans-unit>
        <trans-unit id="1c193cf78598fb2b982c1e7311aab178608c3fe8" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is called instead of &lt;code&gt;insert&lt;/code&gt; to insert the string, with one argument&amp;mdash;the string to insert.</source>
          <target state="translated">Когда &lt;var&gt;function&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; , она вызывается вместо &lt;code&gt;insert&lt;/code&gt; для вставки строки с одним аргументом - строкой для вставки.</target>
        </trans-unit>
        <trans-unit id="7edfcd2927d7eb3ce9ee67df28d50f6d3f65913c" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;region&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then if Transient Mark mode is enabled and the mark is active, this command calls &lt;code&gt;fill-region&lt;/code&gt; to fill all the paragraphs in the region, instead of filling only the current paragraph. When this command is called interactively, &lt;var&gt;region&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;region&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , тогда, если включен режим Transient Mark и метка активна, эта команда вызывает &lt;code&gt;fill-region&lt;/code&gt; для заполнения всех абзацев в области вместо заполнения только текущего абзаца. Когда эта команда вызывается в интерактивном режиме, &lt;var&gt;region&lt;/var&gt; равен &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb96a32f33ce616e5d94a223da7e43cb71ce3e58" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;seqpat&lt;/var&gt; is &lt;code&gt;or&lt;/code&gt;, things are different: &lt;code&gt;or&lt;/code&gt; matches at the first sub-pattern that matches; the rest of the sub-patterns are ignored. It makes no sense for each sub-pattern to let-bind a different set of symbols because the body forms have no way to distinguish which sub-pattern matched and choose among the different sets. For example, the following is invalid:</source>
          <target state="translated">Когда &lt;var&gt;seqpat&lt;/var&gt; равен &lt;code&gt;or&lt;/code&gt; , все иначе: &lt;code&gt;or&lt;/code&gt; соответствует первому совпадающему подшаблону ; остальные подшаблоны игнорируются. Для каждого подшаблона нет смысла связывать другой набор символов, потому что основные формы не имеют возможности различать, какой подшаблон совпадает, и выбирать среди различных наборов. Например, следующее недопустимо:</target>
        </trans-unit>
        <trans-unit id="5c6905373c56d1e189d1b9e72d2927ce0d02b25e" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;string-or-char&lt;/var&gt; is a character, this function does the same thing as &lt;code&gt;upcase&lt;/code&gt;.</source>
          <target state="translated">Когда &lt;var&gt;string-or-char&lt;/var&gt; является символом, эта функция выполняет то же самое, что и &lt;code&gt;upcase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68993d69a5f33572faef27da041ff42b247bfdf5" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;string-or-char&lt;/var&gt; is a string, this function returns a new string in which each letter in the argument that is lower case is converted to upper case. When &lt;var&gt;string-or-char&lt;/var&gt; is a character, this function returns the corresponding upper case character (an integer); if the original character is upper case, or is not a letter, the return value is equal to the original character.</source>
          <target state="translated">Когда &lt;var&gt;string-or-char&lt;/var&gt; является строкой, эта функция возвращает новую строку, в которой каждая буква в аргументе, имеющая нижний регистр, преобразуется в верхний регистр. Когда &lt;var&gt;string-or-char&lt;/var&gt; является символом, эта функция возвращает соответствующий символ верхнего регистра (целое число); если исходный символ имеет верхний регистр или не является буквой, возвращаемое значение равно исходному символу.</target>
        </trans-unit>
        <trans-unit id="548ed209f2ebeecb5ac09a3226d2177e0fc957e3" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;string-or-char&lt;/var&gt; is a string, this function returns a new string in which each letter in the argument that is upper case is converted to lower case. When &lt;var&gt;string-or-char&lt;/var&gt; is a character, this function returns the corresponding lower case character (an integer); if the original character is lower case, or is not a letter, the return value is equal to the original character.</source>
          <target state="translated">Когда &lt;var&gt;string-or-char&lt;/var&gt; является строкой, эта функция возвращает новую строку, в которой каждая буква в аргументе, имеющая верхний регистр, преобразуется в нижний регистр. Когда &lt;var&gt;string-or-char&lt;/var&gt; является символом, эта функция возвращает соответствующий символ нижнего регистра (целое число); если исходный символ в нижнем регистре или не является буквой, возвращаемое значение равно исходному символу.</target>
        </trans-unit>
        <trans-unit id="aec7bf298d655e4d79266c6f5395a36975ae5701" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;symbol&lt;/var&gt; occurs more than once in &lt;var&gt;seqpat&lt;/var&gt;, the second and subsequent occurrences do not expand to re-binding, but instead expand to an equality test using &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="translated">Когда &lt;var&gt;symbol&lt;/var&gt; встречается в &lt;var&gt;seqpat&lt;/var&gt; более одного раза , второе и последующие вхождения не расширяются до повторной привязки, а вместо этого расширяются до проверки равенства с использованием &lt;code&gt;eq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79ee6379a626450775445557cdc33e9ac77c6947" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;window&lt;/var&gt; is the selected window, the value returned is the value of point in that window&amp;rsquo;s buffer. Strictly speaking, it would be more correct to return the top-level value of point, outside of any &lt;code&gt;save-excursion&lt;/code&gt; forms. But that value is hard to find.</source>
          <target state="translated">Когда &lt;var&gt;window&lt;/var&gt; является выбранным окном, возвращаемое значение является значением точки в буфере этого окна. Строго говоря, было бы правильнее возвращать значение точки верхнего уровня, вне каких &lt;code&gt;save-excursion&lt;/code&gt; либо форм save-excursion . Но такую ​​ценность трудно найти.</target>
        </trans-unit>
        <trans-unit id="ff2b38e7398922085b671c3927f5aabf2d0875ce" translate="yes" xml:space="preserve">
          <source>When Delete Selection mode (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Using-Region.html#Using-Region&quot;&gt;Delete Selection&lt;/a&gt; in</source>
          <target state="translated">В режиме удаления выделения (см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Using-Region.html#Using-Region&quot;&gt;Удалить выделение&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="ed8d89dce2db72b1d1fc0a9ce173807457faeded" translate="yes" xml:space="preserve">
          <source>When Edebug decides what to do.</source>
          <target state="translated">Когда Эдебаг решает,что делать.</target>
        </trans-unit>
        <trans-unit id="682a1c03e8a5f83dafa8b82bac23ab76dd35c93f" translate="yes" xml:space="preserve">
          <source>When Edebug instruments an expression that calls a Lisp macro, it needs additional information about the macro to do the job properly. This is because there is no a-priori way to tell which subexpressions of the macro call are forms to be evaluated. (Evaluation may occur explicitly in the macro body, or when the resulting expansion is evaluated, or any time later.)</source>
          <target state="translated">Когда Edebug инструментирует выражение,которое называет макрос Lisp,ему необходима дополнительная информация о макросе,чтобы выполнить работу должным образом.Это связано с тем,что не существует способа определить,какие подвыражения вызова макроса являются формами,подлежащими оценке.(Оценка может происходить явно в макротеле,или когда оценивается результирующее расширение,или в любое время позднее).</target>
        </trans-unit>
        <trans-unit id="f6ab1edab0ab78847a8335a5c30102a954d1d119" translate="yes" xml:space="preserve">
          <source>When Edebug is about to instrument code for the first time in a session, it runs the hook &lt;code&gt;edebug-setup-hook&lt;/code&gt;, then sets it to &lt;code&gt;nil&lt;/code&gt;. You can use this to load Edebug specifications associated with a package you are using, but only when you use Edebug.</source>
          <target state="translated">Когда Edebug собирается инструментировать код в первый раз в сеансе, он запускает перехватчик &lt;code&gt;edebug-setup-hook&lt;/code&gt; , а затем устанавливает его в &lt;code&gt;nil&lt;/code&gt; . Вы можете использовать это для загрузки спецификаций Edebug, связанных с используемым вами пакетом, но только когда вы используете Edebug.</target>
        </trans-unit>
        <trans-unit id="86db9bb2c44cec8ea05f030677a24c74887d0c52" translate="yes" xml:space="preserve">
          <source>When Edebug is entered and actually reads commands from the user, it saves (and later restores) these additional data:</source>
          <target state="translated">Когда Edebug вводится и фактически читает команды пользователя,он сохраняет (а затем восстанавливает)эти дополнительные данные:</target>
        </trans-unit>
        <trans-unit id="ee514d5086b47d2e011ce7bbf8930ee5f269b78a" translate="yes" xml:space="preserve">
          <source>When Edebug needs to display something (e.g., in trace mode), it saves the current window configuration from outside Edebug (see &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;). When you exit Edebug, it restores the previous window configuration.</source>
          <target state="translated">Когда Edebug необходимо что-то отобразить (например, в режиме трассировки), он сохраняет текущую конфигурацию окна извне Edebug (см. &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Конфигурации окон&lt;/a&gt; ). При выходе из Edebug восстанавливается предыдущая конфигурация окна.</target>
        </trans-unit>
        <trans-unit id="76b7b5b962265dbb538b0806a45dc4fe39967e57" translate="yes" xml:space="preserve">
          <source>When Edebug responds to an error, it shows the last stop point encountered before the error. This may be the location of a call to a function which was not instrumented, and within which the error actually occurred. For an unbound variable error, the last known stop point might be quite distant from the offending variable reference. In that case, you might want to display a full backtrace (see &lt;a href=&quot;edebug-misc#Edebug-Misc&quot;&gt;Edebug Misc&lt;/a&gt;).</source>
          <target state="translated">Когда Edebug реагирует на ошибку, он показывает последнюю точку остановки, встреченную перед ошибкой. Это может быть место вызова функции, которая не была инструментирована и в которой действительно произошла ошибка. Для ошибки несвязанной переменной последняя известная точка остановки может быть довольно далеко от ссылки на переменную, вызывающую нарушение. В этом случае вам может &lt;a href=&quot;edebug-misc#Edebug-Misc&quot;&gt;потребоваться&lt;/a&gt; отобразить полную трассировку (см. Edebug Misc ).</target>
        </trans-unit>
        <trans-unit id="6176eb9ac04a1b1ea4d273f0ed9eb65b0b655da7" translate="yes" xml:space="preserve">
          <source>When Edebug stops execution after an expression, it displays the expression&amp;rsquo;s value in the echo area.</source>
          <target state="translated">Когда Edebug прекращает выполнение после выражения, он отображает значение выражения в эхо-области.</target>
        </trans-unit>
        <trans-unit id="260e8d789584dc294a01939a6c450fc9752d90c7" translate="yes" xml:space="preserve">
          <source>When Edebug stops execution.</source>
          <target state="translated">Когда Edebug останавливает выполнение.</target>
        </trans-unit>
        <trans-unit id="4ee25a0dac628201355c2b1fcdb34b79efca147e" translate="yes" xml:space="preserve">
          <source>When Edebug updates the display.</source>
          <target state="translated">Когда Edebug обновляет дисплей.</target>
        </trans-unit>
        <trans-unit id="1c783d2dbc0911610c080668bcd92807c67e4f84" translate="yes" xml:space="preserve">
          <source>When Emacs Lisp attempts to evaluate a form that, for some reason, cannot be evaluated, it &lt;em&gt;signals&lt;/em&gt; an &lt;em&gt;error&lt;/em&gt;.</source>
          <target state="translated">Когда Emacs Lisp пытается оценить форму, которая по какой-то причине не может быть вычислена, он &lt;em&gt;сигнализирует&lt;/em&gt; об &lt;em&gt;ошибке&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c9c93579fb954356e4374a2562c6d5dd7762d774" translate="yes" xml:space="preserve">
          <source>When Emacs Lisp programs contain string constants with non-</source>
          <target state="translated">Когда программы Emacs Lisp содержат строковые константы с не-</target>
        </trans-unit>
        <trans-unit id="ef0ba63035e5812ec8cf30d30919bc9010ab1f1f" translate="yes" xml:space="preserve">
          <source>When Emacs asks the user whether or not to obey a set of file-local variable specifications, the user can choose to mark them as safe. Doing so adds those variable/value pairs to &lt;code&gt;safe-local-variable-values&lt;/code&gt;, and saves it to the user&amp;rsquo;s custom file.</source>
          <target state="translated">Когда Emacs спрашивает пользователя, следует ли подчиняться набору спецификаций локальных переменных файла, пользователь может пометить их как безопасные. При этом эти пары переменная / значение добавляются в &lt;code&gt;safe-local-variable-values&lt;/code&gt; и сохраняются в пользовательском файле.</target>
        </trans-unit>
        <trans-unit id="ca273e1e51517c29f0f51d90a1b83aa74056e41e" translate="yes" xml:space="preserve">
          <source>When Emacs calls a process filter function, it provides the process output as a multibyte string or as a unibyte string according to the process&amp;rsquo;s filter coding system. Emacs decodes the output according to the process output coding system, which usually produces a multibyte string, except for coding systems such as &lt;code&gt;binary&lt;/code&gt; and &lt;code&gt;raw-text&lt;/code&gt;.</source>
          <target state="translated">Когда Emacs вызывает функцию фильтрации процесса, он предоставляет вывод процесса в виде многобайтовой строки или однобайтовой строки в соответствии с системой кодирования фильтра процесса. Emacs декодирует вывод в соответствии с системой кодирования вывода процесса, которая обычно производит многобайтовую строку, за исключением систем кодирования, таких как &lt;code&gt;binary&lt;/code&gt; и &lt;code&gt;raw-text&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa900a90494b2447338dc8d35032a8183faaaca3" translate="yes" xml:space="preserve">
          <source>When Emacs communicates directly with X, it ignores this argument and uses interrupts if that is the way it knows how to communicate.</source>
          <target state="translated">Когда Emacs общается напрямую с X,он игнорирует этот аргумент и использует прерывания,если он знает,как общаться.</target>
        </trans-unit>
        <trans-unit id="05940a516394b0e719a8192ae47954dbf634ca6f" translate="yes" xml:space="preserve">
          <source>When Emacs displays a given piece of text, the visual appearance of the text may be determined by faces drawn from different sources. If these various sources together specify more than one face for a particular character, Emacs merges the attributes of the various faces. Here is the order in which Emacs merges the faces, from highest to lowest priority:</source>
          <target state="translated">Когда Emacs отображает заданный фрагмент текста,визуальный вид текста может определяться по лицам,нарисованным из разных источников.Если в этих разных источниках вместе указано несколько граней для конкретного персонажа,Emacs объединяет атрибуты различных граней.Здесь указан порядок,в котором Emacs объединяет лица,от высшего до низшего приоритета:</target>
        </trans-unit>
        <trans-unit id="73897f5fccae4d7e373fc474c00a800dd3da53e9" translate="yes" xml:space="preserve">
          <source>When Emacs displays its frames on several terminals (see &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;), each terminal has its own selected frame. But only one of these is &lt;em&gt;the&lt;/em&gt; selected frame: it&amp;rsquo;s the frame that belongs to the terminal from which the most recent input came. That is, when Emacs runs a command that came from a certain terminal, the selected frame is the one of that terminal. Since Emacs runs only a single command at any given time, it needs to consider only one selected frame at a time; this frame is what we call &lt;em&gt;the selected frame&lt;/em&gt; in this manual. The display on which the selected frame is shown is the &lt;em&gt;selected frame&amp;rsquo;s display&lt;/em&gt;.</source>
          <target state="translated">Когда Emacs отображает свои кадры на нескольких терминалах (см. &amp;laquo; &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Несколько терминалов&amp;raquo;&lt;/a&gt; ), каждый терминал имеет свой собственный выбранный кадр. Но только один из них является выбранным кадром: это кадр , который принадлежит к терминалу , из которого пришел самый последний вход. То есть, когда Emacs запускает команду, пришедшую с определенного терминала, выбранный фрейм является фреймом этого терминала. Поскольку Emacs запускает только одну команду в любой момент времени, ему нужно рассматривать только один выбранный кадр за раз; эта рамка - это то, что мы называем &lt;em&gt;выбранной рамкой&lt;/em&gt; в этом руководстве. Дисплей, на котором отображается &lt;em&gt;выбранный кадр, является дисплеем выбранного кадра&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d78f27244918217b23dc3674a1ede749010e4ad" translate="yes" xml:space="preserve">
          <source>When Emacs exhausts memory or other operating system resources, its behavior can be less reliable, in that computations that ordinarily run to completion may abort back to the top level. This may cause Emacs to neglect operations that it normally would have done.</source>
          <target state="translated">Когда Emacs исчерпывает память или другие ресурсы операционной системы,его поведение может быть менее надежным,так как вычисления,которые обычно выполняются до конца,могут прерваться обратно на верхний уровень.Это может привести к тому,что Emacs будет пренебрегать операциями,которые он обычно выполнял бы.</target>
        </trans-unit>
        <trans-unit id="721595b660b32b294a384ee588874d2425404613" translate="yes" xml:space="preserve">
          <source>When Emacs exits normally, it deletes this file; if Emacs crashes, you can look in the file to find all the auto-save files that might contain work that was otherwise lost. The &lt;code&gt;recover-session&lt;/code&gt; command uses this file to find them.</source>
          <target state="translated">Когда Emacs завершает работу в обычном режиме, он удаляет этот файл; если Emacs дает сбой, вы можете заглянуть в файл, чтобы найти все файлы автосохранения, которые могут содержать работу, которая в противном случае была потеряна. Команда &lt;code&gt;recover-session&lt;/code&gt; использует этот файл для их поиска.</target>
        </trans-unit>
        <trans-unit id="aa8e5347135f0be09e0c0987eace74507335ce70" translate="yes" xml:space="preserve">
          <source>When Emacs exits, it terminates all its subprocesses. For subprocesses that run a program, it sends them the &lt;code&gt;SIGHUP&lt;/code&gt; signal; connections are simply closed. Because subprocesses may be doing valuable work, Emacs normally asks the user to confirm that it is ok to terminate them. Each process has a query flag, which, if non-&lt;code&gt;nil&lt;/code&gt;, says that Emacs should ask for confirmation before exiting and thus killing that process. The default for the query flag is &lt;code&gt;t&lt;/code&gt;, meaning &lt;em&gt;do&lt;/em&gt; query.</source>
          <target state="translated">Когда Emacs завершает работу, он завершает все свои подпроцессы. Для подпроцессов, запускающих программу, он отправляет им сигнал &lt;code&gt;SIGHUP&lt;/code&gt; ; соединения просто закрываются. Поскольку подпроцессы могут выполнять ценную работу, Emacs обычно просит пользователя подтвердить, что их можно завершить. У каждого процесса есть флаг запроса, который, если он не &lt;code&gt;nil&lt;/code&gt; , говорит, что Emacs должен запрашивать подтверждение перед выходом и, таким образом, прерывать этот процесс. По умолчанию для флага запроса установлено значение &lt;code&gt;t&lt;/code&gt; , что означает &lt;em&gt;выполнение&lt;/em&gt; запроса.</target>
        </trans-unit>
        <trans-unit id="a531efbc87917902456b02438434d7bc899262eb" translate="yes" xml:space="preserve">
          <source>When Emacs is built with GTK+ support, it by default displays tooltips using GTK+ functions, and the appearance of the tooltips is then controlled by GTK+ settings. GTK+ tooltips can be disabled by changing the value of the variable &lt;code&gt;x-gtk-use-system-tooltips&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;. The rest of this subsection describes how to control non-GTK+ tooltips, which are presented by Emacs itself.</source>
          <target state="translated">Когда Emacs построен с поддержкой GTK +, он по умолчанию отображает всплывающие подсказки с использованием функций GTK +, а внешний вид всплывающих подсказок затем контролируется настройками GTK +. Подсказки GTK + можно отключить, изменив значение переменной &lt;code&gt;x-gtk-use-system-tooltips&lt;/code&gt; на &lt;code&gt;nil&lt;/code&gt; . Остальная часть этого подраздела описывает, как управлять всплывающими подсказками, не относящимися к GTK +, которые предоставляются самим Emacs.</target>
        </trans-unit>
        <trans-unit id="62def33471bd6066f54f227edc99f3fb9c53c88b" translate="yes" xml:space="preserve">
          <source>When Emacs is compiled with</source>
          <target state="translated">Когда Emacs компилируется с</target>
        </trans-unit>
        <trans-unit id="fad13f129d52068f507d7a1cdb6e9c459607627d" translate="yes" xml:space="preserve">
          <source>When Emacs is in the process of loading a file, this variable&amp;rsquo;s value is the name of that file, as Emacs found it during the search described earlier in this section.</source>
          <target state="translated">Когда Emacs загружает файл, значением этой переменной является имя этого файла, которое Emacs нашел во время поиска, описанного ранее в этом разделе.</target>
        </trans-unit>
        <trans-unit id="651c0f6fc25b25ac8f39d30aea53d0c0bf063daa" translate="yes" xml:space="preserve">
          <source>When Emacs is installed, if the installation directory hierarchy can be modified by untrusted users, the application cannot be trusted. This applies also to the directory hierarchies of the programs that Emacs uses, and of the files that Emacs reads and writes.</source>
          <target state="translated">При установке Emacs,если иерархия каталогов установки может быть изменена недоверенными пользователями,приложению нельзя доверять.Это относится также к иерархии каталогов программ,которые использует Emacs,и к файлам,которые Emacs читает и записывает.</target>
        </trans-unit>
        <trans-unit id="e1e0980ee90daa94d4bbe7a41e5e59ab5026bf4d" translate="yes" xml:space="preserve">
          <source>When Emacs is killed, all the information in the Emacs process, aside from files that have been saved, is lost. Because killing Emacs inadvertently can lose a lot of work, the &lt;code&gt;save-buffers-kill-terminal&lt;/code&gt; command queries for confirmation if you have buffers that need saving or subprocesses that are running. It also runs the abnormal hook &lt;code&gt;kill-emacs-query-functions&lt;/code&gt;:</source>
          <target state="translated">Когда Emacs завершается, вся информация в процессе Emacs, кроме файлов, которые были сохранены, теряется. Поскольку непреднамеренное завершение работы Emacs может привести к потере большого объема работы, команда &lt;code&gt;save-buffers-kill-terminal&lt;/code&gt; запрашивает подтверждение, есть ли у вас буферы, которые нужно сохранить, или запущенные подпроцессы. Он также запускает ненормальные функции &lt;code&gt;kill-emacs-query-functions&lt;/code&gt; hook :</target>
        </trans-unit>
        <trans-unit id="10b1ca42c7e5562833e9929714587793d702d9aa" translate="yes" xml:space="preserve">
          <source>When Emacs is nearly out of memory for Lisp objects, a brief message saying so. Otherwise, this is empty.</source>
          <target state="translated">Когда Emacs почти исчерпал память для объектов Lisp,короткое сообщение говорит об этом.В противном случае,оно пустое.</target>
        </trans-unit>
        <trans-unit id="82223f5bcf52ab7b125dc53d52c9b5ab9ae9b00e" translate="yes" xml:space="preserve">
          <source>When Emacs is not idle, &lt;code&gt;current-idle-time&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. This is a convenient way to test whether Emacs is idle.</source>
          <target state="translated">Когда Emacs не простаивает, &lt;code&gt;current-idle-time&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; . Это удобный способ проверить, простаивает ли Emacs.</target>
        </trans-unit>
        <trans-unit id="ebd864041b3e164df73c4b5c73bd3d97aa2d40fc" translate="yes" xml:space="preserve">
          <source>When Emacs is running in batch mode, any request to read from the minibuffer actually reads a line from the standard input descriptor that was supplied when Emacs was started. This supports only basic input: none of the special minibuffer features (history, completion, etc.) are available in batch mode.</source>
          <target state="translated">Когда Emacs работает в пакетном режиме,любой запрос на чтение из минибуфера фактически читает строку из стандартного дескриптора ввода,который был предоставлен при запуске Emacs.Это поддерживает только базовый ввод:ни одна из специальных возможностей минибуфера (история,завершение и т.д.)не доступна в пакетном режиме.</target>
        </trans-unit>
        <trans-unit id="494a76744e9128b2960f31be01919655045499b5" translate="yes" xml:space="preserve">
          <source>When Emacs is started up, it performs the following operations (see &lt;code&gt;normal-top-level&lt;/code&gt; in</source>
          <target state="translated">Когда Emacs запущен, он выполняет следующие операции (см. &lt;code&gt;normal-top-level&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="1a1d14620acb1cf574a4a270597c85b458cf2d34" translate="yes" xml:space="preserve">
          <source>When Emacs loads a Lisp library, it searches for the library in a list of directories specified by the variable &lt;code&gt;load-path&lt;/code&gt;.</source>
          <target state="translated">Когда Emacs загружает библиотеку Lisp, он ищет библиотеку в списке каталогов, заданных переменной &lt;code&gt;load-path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a46d181efa7ff915beb48c6c5e4501bb1c20a19" translate="yes" xml:space="preserve">
          <source>When Emacs loads functions and variables from a byte-compiled file, it normally does not load their documentation strings into memory. Each documentation string is dynamically loaded from the byte-compiled file only when needed. This saves memory, and speeds up loading by skipping the processing of the documentation strings.</source>
          <target state="translated">Когда Emacs загружает функции и переменные из байт-компилированного файла,он обычно не загружает их строки документации в память.Каждая строка документации динамически загружается из байт-компилированного файла только при необходимости.Это экономит память и ускоряет загрузку,пропуская обработку строк документации.</target>
        </trans-unit>
        <trans-unit id="fd6a9034841fc5bb27a1ec385001272526bc68a7" translate="yes" xml:space="preserve">
          <source>When Emacs reads or writes a file, and when Emacs sends text to a subprocess or receives text from a subprocess, it normally performs character code conversion and end-of-line conversion as specified by a particular &lt;em&gt;coding system&lt;/em&gt;.</source>
          <target state="translated">Когда Emacs читает или записывает файл и когда Emacs отправляет текст в подпроцесс или получает текст из подпроцесса, он обычно выполняет преобразование кода символа и преобразование конца строки, как указано в конкретной &lt;em&gt;системе кодирования&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="9ad23996e44b97133257128f9eecfa2703f34fca" translate="yes" xml:space="preserve">
          <source>When Emacs runs on MS-Windows as a GUI session, it supports a small subset of the D-Bus notifications functionality via a native primitive:</source>
          <target state="translated">Когда Emacs работает на MS-Windows как GUI сессия,он поддерживает небольшое подмножество функций уведомления по шине D-Bus через нативный примитив:</target>
        </trans-unit>
        <trans-unit id="bc45c6eeb8ef943a775378bb93e8c468b705489b" translate="yes" xml:space="preserve">
          <source>When Emacs runs on MS-Windows, it does not implement X selections in general, but it does support the clipboard. &lt;code&gt;gui-get-selection&lt;/code&gt; and &lt;code&gt;gui-set-selection&lt;/code&gt; on MS-Windows support the text data type only; if the clipboard holds other types of data, Emacs treats the clipboard as empty. The supported data type is &lt;code&gt;STRING&lt;/code&gt;.</source>
          <target state="translated">Когда Emacs работает в MS-Windows, он вообще не реализует выбор X, но поддерживает буфер обмена. &lt;code&gt;gui-get-selection&lt;/code&gt; и &lt;code&gt;gui-set-selection&lt;/code&gt; в MS-Windows поддерживают только текстовый тип данных; если буфер обмена содержит другие типы данных, Emacs рассматривает буфер обмена как пустой. Поддерживаемый тип данных - &lt;code&gt;STRING&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee2e007d9e7c9cdce5db36bc3c94e230e120d467" translate="yes" xml:space="preserve">
          <source>When Emacs starts up, it sets up the value of &lt;code&gt;load-path&lt;/code&gt; in several steps. First, it initializes &lt;code&gt;load-path&lt;/code&gt; using default locations set when Emacs was compiled. Normally, this is a directory something like</source>
          <target state="translated">Когда Emacs запускается, он устанавливает значение &lt;code&gt;load-path&lt;/code&gt; в несколько шагов. Во-первых, он инициализирует &lt;code&gt;load-path&lt;/code&gt; используя местоположения по умолчанию, установленные при компиляции Emacs. Обычно это каталог вроде</target>
        </trans-unit>
        <trans-unit id="52a18c61573b84ddab859aad581875c9ff91491d" translate="yes" xml:space="preserve">
          <source>When Emacs visits a file, it automatically selects a major mode for the buffer based on information in the file name or in the file itself. It also processes local variables specified in the file text.</source>
          <target state="translated">Когда Emacs посещает файл,он автоматически выбирает основной режим для буфера,основываясь на информации в имени файла или в самом файле.Он также обрабатывает локальные переменные,указанные в тексте файла.</target>
        </trans-unit>
        <trans-unit id="605a3b4c2931745a1a2d86235b7957d822fefa95" translate="yes" xml:space="preserve">
          <source>When Emacs writes process output directly into a multibyte buffer, it decodes the output according to the process output coding system. If the coding system is &lt;code&gt;raw-text&lt;/code&gt; or &lt;code&gt;no-conversion&lt;/code&gt;, Emacs converts the unibyte output to multibyte using &lt;code&gt;string-to-multibyte&lt;/code&gt;, and inserts the resulting multibyte text.</source>
          <target state="translated">Когда Emacs записывает вывод процесса непосредственно в многобайтовый буфер, он декодирует вывод в соответствии с системой кодирования вывода процесса. Если используется система кодирования &lt;code&gt;raw-text&lt;/code&gt; или &lt;code&gt;no-conversion&lt;/code&gt; , Emacs преобразует однобайтный вывод в многобайтовый, используя &lt;code&gt;string-to-multibyte&lt;/code&gt; , и вставляет полученный многобайтовый текст.</target>
        </trans-unit>
        <trans-unit id="a266b19b2d02b82200082904f4b14cd6d1cc3ba3" translate="yes" xml:space="preserve">
          <source>When Font Lock is about to highlight a range of text, it first extends the boundaries of the range as necessary so that they do not fall within text marked with the &lt;code&gt;font-lock-multiline&lt;/code&gt; property. Then it removes any &lt;code&gt;font-lock-multiline&lt;/code&gt; properties from the range, and highlights it. The highlighting specification (mostly &lt;code&gt;font-lock-keywords&lt;/code&gt;) must reinstall this property each time, whenever it is appropriate.</source>
          <target state="translated">Когда Font Lock собирается выделить диапазон текста, он сначала расширяет границы диапазона по мере необходимости, чтобы они не попадали в текст, отмеченный свойством &lt;code&gt;font-lock-multiline&lt;/code&gt; . Затем он удаляет все свойства &lt;code&gt;font-lock-multiline&lt;/code&gt; из диапазона и выделяет его. Спецификация выделения (в основном &lt;code&gt;font-lock-keywords&lt;/code&gt; ) должна переустанавливать это свойство каждый раз, когда это необходимо.</target>
        </trans-unit>
        <trans-unit id="e854bf31a3863b140612f0097581c4fb72f24a20" translate="yes" xml:space="preserve">
          <source>When Font Lock is activated in a buffer, it calls this function with a non-&lt;code&gt;nil&lt;/code&gt; value of &lt;var&gt;contextual&lt;/var&gt; if the value of &lt;code&gt;font-lock-keywords-only&lt;/code&gt; (see &lt;a href=&quot;syntactic-font-lock#Syntactic-Font-Lock&quot;&gt;Syntactic Font Lock&lt;/a&gt;) is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Когда в буфере активирована функция Font Lock, она вызывает эту функцию с &lt;code&gt;nil&lt;/code&gt; значением &lt;var&gt;contextual&lt;/var&gt; , если значение &lt;code&gt;font-lock-keywords-only&lt;/code&gt; (см. &lt;a href=&quot;syntactic-font-lock#Syntactic-Font-Lock&quot;&gt;Синтаксическая блокировка шрифтов&lt;/a&gt; ) равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c92048d20681de8310ca3537f534a52eac489ce" translate="yes" xml:space="preserve">
          <source>When NaNs and signed zeros are involved, non-numeric functions like &lt;code&gt;eql&lt;/code&gt;, &lt;code&gt;equal&lt;/code&gt;, &lt;code&gt;sxhash-eql&lt;/code&gt;, &lt;code&gt;sxhash-equal&lt;/code&gt; and &lt;code&gt;gethash&lt;/code&gt; determine whether values are indistinguishable, not whether they are numerically equal. For example, when &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are the same NaN, &lt;code&gt;(equal x y)&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; whereas &lt;code&gt;(= x y)&lt;/code&gt; uses numeric comparison and returns &lt;code&gt;nil&lt;/code&gt;; conversely, &lt;code&gt;(equal 0.0 -0.0)&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; whereas &lt;code&gt;(= 0.0 -0.0)&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Когда задействованы NaN и нули со &lt;code&gt;eql&lt;/code&gt; , нечисловые функции, такие как eql , &lt;code&gt;equal&lt;/code&gt; , &lt;code&gt;sxhash-eql&lt;/code&gt; , &lt;code&gt;sxhash-equal&lt;/code&gt; и &lt;code&gt;gethash&lt;/code&gt; , определяют, являются ли значения неразличимыми, а не равны ли они численно. Например, когда &lt;var&gt;x&lt;/var&gt; и &lt;var&gt;y&lt;/var&gt; равны NaN, &lt;code&gt;(equal x y)&lt;/code&gt; возвращает &lt;code&gt;t&lt;/code&gt; , тогда как &lt;code&gt;(= x y)&lt;/code&gt; использует числовое сравнение и возвращает &lt;code&gt;nil&lt;/code&gt; ; и наоборот, &lt;code&gt;(equal 0.0 -0.0)&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; тогда как &lt;code&gt;(= 0.0 -0.0)&lt;/code&gt; возвращает &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7628eedf7d5a55741cdd4254c8f9f4e3f8a48cd" translate="yes" xml:space="preserve">
          <source>When Transient Mark mode is enabled and the mark is active, many commands that normally apply to the text near point instead apply to the region. Such commands should use the function &lt;code&gt;use-region-p&lt;/code&gt; to test whether they should operate on the region. See &lt;a href=&quot;the-region#The-Region&quot;&gt;The Region&lt;/a&gt;.</source>
          <target state="translated">Когда режим Transient Mark включен и метка активна, многие команды, которые обычно применяются к тексту рядом с точкой, вместо этого применяются к области. Такие команды должны использовать функцию &lt;code&gt;use-region-p&lt;/code&gt; , чтобы проверить, должны ли они работать с регионом. См &lt;a href=&quot;the-region#The-Region&quot;&gt;. Регион&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7748fb9dee7da8e8fdc2df120965ca7b27bf6bc9" translate="yes" xml:space="preserve">
          <source>When a &amp;lsquo;</source>
          <target state="translated">Когда '</target>
        </trans-unit>
        <trans-unit id="23ccc8d76cb3a5f6f72a7f75c504f21009fe6c44" translate="yes" xml:space="preserve">
          <source>When a Variable is Void</source>
          <target state="translated">Когда Переменная пуста</target>
        </trans-unit>
        <trans-unit id="4bdc00a97eac58b11693b2d0ca9889f59b932904" translate="yes" xml:space="preserve">
          <source>When a buffer is changed, the region that Font Lock refontifies is by default the smallest sequence of whole lines that spans the change. While this works well most of the time, sometimes it doesn&amp;rsquo;t&amp;mdash;for example, when a change alters the syntactic meaning of text on an earlier line.</source>
          <target state="translated">При изменении буфера область, которую обновляет Font Lock, по умолчанию является наименьшей последовательностью целых строк, охватывающих изменение. Хотя в большинстве случаев это работает хорошо, иногда нет, например, когда изменение изменяет синтаксическое значение текста в предыдущей строке.</target>
        </trans-unit>
        <trans-unit id="a84da298c04ef18b307cd5117078865d12124fb0" translate="yes" xml:space="preserve">
          <source>When a buffer is displayed with line numbers (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Display-Custom.html#Display-Custom&quot;&gt;Display Custom&lt;/a&gt; in</source>
          <target state="translated">Когда буфер отображается с номерами строк (см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Display-Custom.html#Display-Custom&quot;&gt;Пользовательское отображение&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="2cfe7af88a87c3ae11ebee495f5e55eb0adbabb5" translate="yes" xml:space="preserve">
          <source>When a child frame is used during minibuffer interaction, for example, to display completions in a separate window, the &lt;code&gt;minibuffer-exit&lt;/code&gt; parameter (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;) is useful in order to deal with the frame when the minibuffer is exited.</source>
          <target state="translated">Когда дочерний фрейм используется во время взаимодействия с минибуфером, например, для отображения завершений в отдельном окне, параметр &lt;code&gt;minibuffer-exit&lt;/code&gt; (см. &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Параметры&lt;/a&gt; взаимодействия с фреймом) полезен для обработки фрейма при выходе из минибуфера.</target>
        </trans-unit>
        <trans-unit id="087c1187a1c448c9270824395c547ec4113f8445" translate="yes" xml:space="preserve">
          <source>When a child frame is used for displaying a buffer via &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt; (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;), the frame&amp;rsquo;s &lt;code&gt;auto-hide-function&lt;/code&gt; parameter (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;) can be set to a function, in order to appropriately deal with the frame when the window displaying the buffer shall be quit.</source>
          <target state="translated">Когда дочерний фрейм используется для отображения буфера через &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt; (см. &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Функции действий отображения буфера&lt;/a&gt; ), параметр &lt;code&gt;auto-hide-function&lt;/code&gt; &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;фрейма&lt;/a&gt; (см. Параметры взаимодействия с кадрами ) может быть установлен на функцию в чтобы правильно обработать кадр, когда окно, отображающее буфер, должно быть закрыто.</target>
        </trans-unit>
        <trans-unit id="2d1f655bdefdfc9fe340c82147407511f9a46b06" translate="yes" xml:space="preserve">
          <source>When a closure is called as a function, any lexical variable references within its definition use the retained lexical environment. Here is an example:</source>
          <target state="translated">Когда закрытие вызывается как функция,любая ссылка на лексическую переменную в ее определении использует сохраненное лексическое окружение.Приведем пример:</target>
        </trans-unit>
        <trans-unit id="e66189de57a74cfc4e86c13b679ebcd5ba04472c" translate="yes" xml:space="preserve">
          <source>When a command to save the buffer starts out to use &lt;code&gt;buffer-file-coding-system&lt;/code&gt; (or &lt;code&gt;save-buffer-coding-system&lt;/code&gt;), and that coding system cannot handle the actual text in the buffer, the command asks the user to choose another coding system (by calling &lt;code&gt;select-safe-coding-system&lt;/code&gt;). After that happens, the command also updates &lt;code&gt;buffer-file-coding-system&lt;/code&gt; to represent the coding system that the user specified.</source>
          <target state="translated">Когда команда для сохранения буфера начинает использовать &lt;code&gt;buffer-file-coding-system&lt;/code&gt; &lt;code&gt;save-buffer-coding-system&lt;/code&gt; (или систему кодирования- буфера ), и эта система кодирования не может обрабатывать фактический текст в буфере, команда просит пользователя выбрать другой система кодирования (путем вызова &lt;code&gt;select-safe-coding-system&lt;/code&gt; ). После этого команда также обновляет &lt;code&gt;buffer-file-coding-system&lt;/code&gt; , чтобы представить систему кодирования, указанную пользователем.</target>
        </trans-unit>
        <trans-unit id="f3acb80ad28b55e133f80b83c259f999c95278dc" translate="yes" xml:space="preserve">
          <source>When a cons cell is part of the shared structure of several lists, storing a new &lt;small&gt;CAR&lt;/small&gt; into the cons changes one element of each of these lists. Here is an example:</source>
          <target state="translated">Когда cons-ячейка является частью общей структуры нескольких списков, сохранение нового &lt;small&gt;CAR&lt;/small&gt; в cons-ячейке изменяет один элемент каждого из этих списков. Вот пример:</target>
        </trans-unit>
        <trans-unit id="24ce297f11d818aee0f401f1b75ca3ab16f216b8" translate="yes" xml:space="preserve">
          <source>When a divider is less than three pixels wide, it is drawn solidly with the foreground of this face. For larger dividers this face is used for the inner part only, excluding the first and last pixel.</source>
          <target state="translated">Когда делитель шириной менее трех пикселей,он нарисован сплошной линией переднего плана.Для больших делителей эта грань используется только для внутренней части,исключая первый и последний пиксель.</target>
        </trans-unit>
        <trans-unit id="861b459804113837922aa9dbdf9df0cc85298e3e" translate="yes" xml:space="preserve">
          <source>When a file is loaded to satisfy an autoload, and it stops due to an error in the evaluation of its contents, any function definitions or &lt;code&gt;provide&lt;/code&gt; calls that occurred during the load are undone. See &lt;a href=&quot;autoload#Autoload&quot;&gt;Autoload&lt;/a&gt;.</source>
          <target state="translated">Когда файл загружается для выполнения автозагрузки и останавливается из-за ошибки в оценке его содержимого, любые определения функций или вызовы &lt;code&gt;provide&lt;/code&gt; которые произошли во время загрузки, отменяются. См. &lt;a href=&quot;autoload#Autoload&quot;&gt;Автозагрузка&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36076467ece93a138319bd92ddfdda23365adb7f" translate="yes" xml:space="preserve">
          <source>When a file specifies local variable values, these become buffer-local values when you visit the file. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Variables.html#File-Variables&quot;&gt;File Variables&lt;/a&gt; in</source>
          <target state="translated">Когда файл определяет значения локальных переменных, они становятся локальными значениями буфера при посещении файла. См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Variables.html#File-Variables&quot;&gt;Переменные файла&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="68f2d158004444aa9ccf7548e354c7dbffab22bf" translate="yes" xml:space="preserve">
          <source>When a form is a macro call, it expands into a new form for Lisp to evaluate. We show the result of the expansion with &amp;lsquo;</source>
          <target state="translated">Когда форма является вызовом макроса, она раскрывается в новую форму для оценки Lisp. Мы показываем результат разложения с помощью '</target>
        </trans-unit>
        <trans-unit id="83eac9bafca98d01a15907eb91f4fe79f6bd983c" translate="yes" xml:space="preserve">
          <source>When a frame has side windows, the following function returns the main window of that frame.</source>
          <target state="translated">Когда в раме есть боковые окна,следующая функция возвращает главное окно этой рамы.</target>
        </trans-unit>
        <trans-unit id="f808ee525a7bb0fa88006d87d6523fc2f1a8b1ec" translate="yes" xml:space="preserve">
          <source>When a function recognizes and processes the argument in &lt;code&gt;argi&lt;/code&gt;, it should return a non-&lt;code&gt;nil&lt;/code&gt; value to say it has dealt with that argument. If it has also dealt with some of the following arguments, it can indicate that by deleting them from &lt;code&gt;command-line-args-left&lt;/code&gt;.</source>
          <target state="translated">Когда функция распознает и обрабатывает аргумент в &lt;code&gt;argi&lt;/code&gt; , она должна возвратить &lt;code&gt;nil&lt;/code&gt; значение, чтобы сказать, что она обработала этот аргумент. Если он также имел дело с некоторыми из следующих аргументов, он может указать на это, удалив их из &lt;code&gt;command-line-args-left&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53c12968a72f82623cb9cdd8ab8be9c144e6d8d5" translate="yes" xml:space="preserve">
          <source>When a function takes two or more arguments that must be file names, it checks each of those names for a handler. For example, if you do this:</source>
          <target state="translated">Когда функция принимает два или более аргументов,которые должны быть именами файлов,она проверяет каждое из этих имен на наличие обработчика.Например,если вы это делаете:</target>
        </trans-unit>
        <trans-unit id="15aca1807f4a43b6a6607c91b93863f63117ce73" translate="yes" xml:space="preserve">
          <source>When a generic function is invoked, it selects the applicable methods by comparing the actual arguments passed by the caller with the argument specializers of each method. A method is applicable if the actual arguments of the call are compatible with the method&amp;rsquo;s specializers. If more than one method is applicable, they are combined using certain rules, described below, and the combination then handles the call.</source>
          <target state="translated">Когда вызывается универсальная функция, она выбирает применимые методы, сравнивая фактические аргументы, переданные вызывающей стороной, со специализаторами аргументов каждого метода. Метод применим, если фактические аргументы вызова совместимы со специализаторами метода. Если применимо более одного метода, они объединяются с использованием определенных правил, описанных ниже, и затем комбинация обрабатывает вызов.</target>
        </trans-unit>
        <trans-unit id="71a5e1c7f4395ec5c6d1fb3ede82f9e01cfc9590" translate="yes" xml:space="preserve">
          <source>When a handler function decides to call the ordinary Emacs primitive for the operation at hand, it needs to prevent the primitive from calling the same handler once again, thus leading to an infinite recursion. The example above shows how to do this, with the variables &lt;code&gt;inhibit-file-name-handlers&lt;/code&gt; and &lt;code&gt;inhibit-file-name-operation&lt;/code&gt;. Be careful to use them exactly as shown above; the details are crucial for proper behavior in the case of multiple handlers, and for operations that have two file names that may each have handlers.</source>
          <target state="translated">Когда функция-обработчик решает вызвать обычный примитив Emacs для данной операции, ей необходимо предотвратить повторный вызов этого же обработчика примитивом, что приведет к бесконечной рекурсии. В приведенном выше примере показано, как это сделать с помощью переменных &lt;code&gt;inhibit-file-name-handlers&lt;/code&gt; и &lt;code&gt;inhibit-file-name-operation&lt;/code&gt; . Будьте осторожны, используйте их точно так, как показано выше; детали имеют решающее значение для правильного поведения в случае нескольких обработчиков и для операций с двумя именами файлов, каждый из которых может иметь обработчики.</target>
        </trans-unit>
        <trans-unit id="3e3d75c0b75d9f3769c40a1a07432101f3bc7dea" translate="yes" xml:space="preserve">
          <source>When a key binding is found in one of the active keymaps, and that binding is a command, the search is over&amp;mdash;the command is executed. However, if the binding is a symbol with a value or a string, Emacs replaces the input key sequences with the variable&amp;rsquo;s value or the string, and restarts the search of the active keymaps. See &lt;a href=&quot;key-lookup#Key-Lookup&quot;&gt;Key Lookup&lt;/a&gt;.</source>
          <target state="translated">Когда привязка клавиш обнаружена в одной из активных таблиц клавиш, и эта привязка является командой, поиск заканчивается - команда выполняется. Однако, если привязка является символом со значением или строкой, Emacs заменяет входные последовательности клавиш значением переменной или строкой и перезапускает поиск активных таблиц клавиш. См. &lt;a href=&quot;key-lookup#Key-Lookup&quot;&gt;Поиск по ключу&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="879e91eed40123d3428319aa38e604d0a9931f3e" translate="yes" xml:space="preserve">
          <source>When a line is exactly as wide as the window, Emacs displays the cursor in the right fringe instead of using two lines. Different bitmaps are used to represent the cursor in the fringe depending on the current buffer&amp;rsquo;s cursor type.</source>
          <target state="translated">Когда ширина строки равна ширине окна, Emacs отображает курсор в правом краю вместо использования двух строк. В зависимости от типа курсора текущего буфера используются разные растровые изображения для представления курсора на границе.</target>
        </trans-unit>
        <trans-unit id="efa2f36d31bd662a1c15d5f57bdd3a139e686c70" translate="yes" xml:space="preserve">
          <source>When a line of text extends beyond the right edge of a window, Emacs can &lt;em&gt;continue&lt;/em&gt; the line (make it wrap to the next screen line), or &lt;em&gt;truncate&lt;/em&gt; the line (limit it to one screen line). The additional screen lines used to display a long text line are called &lt;em&gt;continuation&lt;/em&gt; lines. Continuation is not the same as filling; continuation happens on the screen only, not in the buffer contents, and it breaks a line precisely at the right margin, not at a word boundary. See &lt;a href=&quot;filling#Filling&quot;&gt;Filling&lt;/a&gt;.</source>
          <target state="translated">Когда строка текста выходит за правый край окна, Emacs может &lt;em&gt;продолжить&lt;/em&gt; строку (перенести ее на следующую строку экрана) или &lt;em&gt;обрезать&lt;/em&gt; строку (ограничить ее одной строкой экрана). Дополнительные строки экрана, используемые для отображения длинной текстовой строки, называются строками &lt;em&gt;продолжения&lt;/em&gt; . Продолжение - это не то же самое, что заполнение; продолжение происходит только на экране, а не в содержимом буфера, и прерывает строку точно по правому краю, а не по границе слова. См. &amp;laquo; &lt;a href=&quot;filling#Filling&quot;&gt;Заполнение&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ba9d289e0f20cab7c52b3068c87dd0cb613ad299" translate="yes" xml:space="preserve">
          <source>When a macro call appears in a Lisp program being compiled, the Lisp compiler calls the macro definition just as the interpreter would, and receives an expansion. But instead of evaluating this expansion, it compiles the expansion as if it had appeared directly in the program. As a result, the compiled code produces the value and side effects intended for the macro, but executes at full compiled speed. This would not work if the macro body computed the value and side effects itself&amp;mdash;they would be computed at compile time, which is not useful.</source>
          <target state="translated">Когда в компилируемой программе Lisp появляется вызов макроса, компилятор Lisp вызывает определение макроса точно так же, как это сделал бы интерпретатор, и получает расширение. Но вместо того, чтобы оценивать это расширение, он компилирует расширение, как если бы оно появилось непосредственно в программе. В результате скомпилированный код создает значение и побочные эффекты, предназначенные для макроса, но выполняется с полной скоростью компиляции. Это не сработает, если тело макроса само вычислит значение и побочные эффекты - они будут вычислены во время компиляции, что бесполезно.</target>
        </trans-unit>
        <trans-unit id="1eb0dd1586afbfbb0e3724f438c3cd30d30714bc" translate="yes" xml:space="preserve">
          <source>When a major mode defines a system abbrev, it should call &lt;code&gt;define-abbrev&lt;/code&gt; and specify &lt;code&gt;t&lt;/code&gt; for the &lt;code&gt;:system&lt;/code&gt; property. Be aware that any saved non-system abbrevs are restored at startup, i.e., before some major modes are loaded. Therefore, major modes should not assume that their abbrev tables are empty when they are first loaded.</source>
          <target state="translated">Когда основной режим определяет системное сокращение, он должен вызвать &lt;code&gt;define-abbrev&lt;/code&gt; и указать &lt;code&gt;t&lt;/code&gt; для свойства &lt;code&gt;:system&lt;/code&gt; . Имейте в виду, что любые сохраненные несистемные сокращения восстанавливаются при запуске, т. Е. Перед загрузкой некоторых основных режимов. Таким образом, основные режимы не должны предполагать, что их таблицы сокращений при первой загрузке пусты.</target>
        </trans-unit>
        <trans-unit id="8a03105c21fb50ee3d93c13fa671419d66c0f8e1" translate="yes" xml:space="preserve">
          <source>When a minibuffer is inactive, its major mode is &lt;code&gt;minibuffer-inactive-mode&lt;/code&gt;, with keymap &lt;code&gt;minibuffer-inactive-mode-map&lt;/code&gt;. This is only really useful if the minibuffer is in a separate frame. See &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;.</source>
          <target state="translated">Когда минибуфер неактивен, его основным режимом является &lt;code&gt;minibuffer-inactive-mode&lt;/code&gt; с раскладкой &lt;code&gt;minibuffer-inactive-mode-map&lt;/code&gt; . Это действительно полезно, только если минибуфер находится в отдельном кадре. См. &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Минибуферы и фреймы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="48ac006d9a3055538851ac5d15d58ffe2652f56f" translate="yes" xml:space="preserve">
          <source>When a parent frame is about to be deleted (see &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;), its child frames are recursively deleted before it. There is one exception to this rule: When the child frame serves as a surrogate minibuffer frame (see &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;) for another frame, it is retained until the parent frame has been deleted. If, at this time, no remaining frame uses the child frame as its minibuffer frame, Emacs will try to delete the child frame too. If that deletion fails for whatever reason, the child frame is made a top-level frame.</source>
          <target state="translated">Когда родительский фрейм собирается быть удален (см. &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Удаление фреймов&lt;/a&gt; ), его дочерние фреймы рекурсивно удаляются перед ним. Есть одно исключение из этого правила: когда дочерний фрейм служит суррогатным фреймом минибуфера (см. &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Минибуферы и фреймы&lt;/a&gt; ) для другого фрейма, он сохраняется до тех пор, пока родительский фрейм не будет удален. Если в это время ни один из оставшихся кадров не использует дочерний кадр в качестве кадра минибуфера, Emacs попытается удалить и дочерний кадр. Если это удаление не удается по какой-либо причине, дочерний фрейм становится фреймом верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="ed05a75e23177eb915215123c32f76bdb4c61bc4" translate="yes" xml:space="preserve">
          <source>When a parent frame is resized, its child frames conceptually retain their previous sizes and their positions relative to the left upper corner of the parent. This means that a child frame may become (partially) invisible when its parent frame shrinks. The parameter &lt;code&gt;keep-ratio&lt;/code&gt; (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;) can be used to resize and reposition a child frame proportionally whenever its parent frame is resized. This may avoid obscuring parts of a frame when its parent frame is shrunk.</source>
          <target state="translated">Когда размер родительского фрейма изменяется, его дочерние фреймы концептуально сохраняют свои предыдущие размеры и свое положение относительно левого верхнего угла родительского фрейма. Это означает, что дочерний фрейм может стать (частично) невидимым, когда его родительский фрейм сжимается. Параметр &lt;code&gt;keep-ratio&lt;/code&gt; (см. &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Параметры взаимодействия фреймов&lt;/a&gt; ) может использоваться для пропорционального изменения размера и перемещения дочернего фрейма всякий раз, когда изменяется размер его родительского фрейма. Это может избежать затемнения частей кадра при сжатии его родительского кадра.</target>
        </trans-unit>
        <trans-unit id="b5c3f9b5837def7e9b15c164f72cd506efec7632" translate="yes" xml:space="preserve">
          <source>When a prefix key ending with a keyboard event (a character or function key) has a definition that is a menu keymap, the keymap operates as a keyboard menu; the user specifies the next event by choosing a menu item with the keyboard.</source>
          <target state="translated">Когда префиксная клавиша,заканчивающаяся событием на клавиатуре (символ или функциональная клавиша),имеет определение,представляющее собой раскладку клавиатуры,раскладка работает как меню клавиатуры;пользователь задает следующее событие,выбирая пункт меню с клавиатуры.</target>
        </trans-unit>
        <trans-unit id="f440b9496fba6ce132e0464b8bda1fe9486b9bae" translate="yes" xml:space="preserve">
          <source>When a process is deleted, the process object itself continues to exist as long as other Lisp objects point to it. All the Lisp primitives that work on process objects accept deleted processes, but those that do I/O or send signals will report an error. The process mark continues to point to the same place as before, usually into a buffer where output from the process was being inserted.</source>
          <target state="translated">Когда процесс удаляется,сам объект процесса продолжает существовать до тех пор,пока на него указывают другие объекты Lisp.Все примитивы Lisp,работающие с объектами процесса,принимают удаленные процессы,но те,которые выполняют ввод/вывод или посылают сигналы,сообщат об ошибке.Метка процесса продолжает указывать на то же самое место,что и раньше,обычно в буфер,куда вставлялся выходной сигнал процесса.</target>
        </trans-unit>
        <trans-unit id="56ddd4f83c391de6b941efd892052015c708047f" translate="yes" xml:space="preserve">
          <source>When a program creates a list or the user defines a new function (such as by loading a library), that data is placed in normal storage. If normal storage runs low, then Emacs asks the operating system to allocate more memory. Different types of Lisp objects, such as symbols, cons cells, small vectors, markers, etc., are segregated in distinct blocks in memory. (Large vectors, long strings, buffers and certain other editing types, which are fairly large, are allocated in individual blocks, one per object; small strings are packed into blocks of 8k bytes, and small vectors are packed into blocks of 4k bytes).</source>
          <target state="translated">Когда программа создает список или пользователь определяет новую функцию (например,путем загрузки библиотеки),эти данные помещаются в обычное хранилище.Если нормальное хранилище заканчивается,Emacs просит операционную систему выделить больше памяти.Различные типы объектов Lisp,такие как символы,консольные ячейки,малые векторы,маркеры и т.д.,разделяются на отдельные блоки в памяти.(Большие векторы,длинные строки,буферы и некоторые другие достаточно большие типы редактирования выделяются в отдельные блоки по одному на объект;маленькие строки упаковываются в блоки по 8k байт,а маленькие-в блоки по 4k байт).</target>
        </trans-unit>
        <trans-unit id="e858995b7d6397134442bae4500cffe28c53d118" translate="yes" xml:space="preserve">
          <source>When a program loops infinitely and fails to return, your first problem is to stop the loop. On most operating systems, you can do this with</source>
          <target state="translated">Когда программа зацикливается бесконечно и не возвращается,ваша первая проблема-это остановка цикла.На большинстве операционных систем,вы можете сделать это с помощью</target>
        </trans-unit>
        <trans-unit id="99fc92ca1ef12829e3b40b2fdb5f985c36dc412c" translate="yes" xml:space="preserve">
          <source>When a single operation does both input and output, as do &lt;code&gt;call-process-region&lt;/code&gt; and &lt;code&gt;start-process&lt;/code&gt;, both &lt;code&gt;coding-system-for-read&lt;/code&gt; and &lt;code&gt;coding-system-for-write&lt;/code&gt; affect it.</source>
          <target state="translated">Когда одна операция выполняет как ввод, так и вывод, как и &lt;code&gt;call-process-region&lt;/code&gt; и &lt;code&gt;start-process&lt;/code&gt; , на нее влияют как &lt;code&gt;coding-system-for-read&lt;/code&gt; ,так и &lt;code&gt;coding-system-for-write&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="516a97ac3ec0fdf483b3ca895c8f711f63330dd4" translate="yes" xml:space="preserve">
          <source>When a specification list involves alternatives or repetition, matching it against an actual macro call may require backtracking. For more details, see &lt;a href=&quot;backtracking#Backtracking&quot;&gt;Backtracking&lt;/a&gt;.</source>
          <target state="translated">Когда список спецификаций включает альтернативы или повторение, сопоставление его с фактическим вызовом макроса может потребовать отслеживания с возвратом. Для получения дополнительной информации см. &lt;a href=&quot;backtracking#Backtracking&quot;&gt;Обратный поиск&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a299fd429f9b94cfd9d16f7a978ab66b811cfe4f" translate="yes" xml:space="preserve">
          <source>When a subprocess terminates, Emacs reads any pending output, then stops reading output from that subprocess. Therefore, if the subprocess has children that are still live and still producing output, Emacs won&amp;rsquo;t receive that output.</source>
          <target state="translated">Когда подпроцесс завершается, Emacs читает любой ожидающий вывод, а затем прекращает чтение вывода этого подпроцесса. Следовательно, если у подпроцесса есть дочерние элементы, которые все еще работают и производят вывод, Emacs не получит этот вывод.</target>
        </trans-unit>
        <trans-unit id="d02327464eaa317bb28db233571b0947ae26b2fc" translate="yes" xml:space="preserve">
          <source>When a symbol appears as the car of a list, we find the real function via the symbol.</source>
          <target state="translated">Когда в качестве автомобиля списка появляется символ,мы находим реальную функцию через символ.</target>
        </trans-unit>
        <trans-unit id="c9b22baeefc4620bae940ad60f585e0fdebdf930" translate="yes" xml:space="preserve">
          <source>When a symbol is evaluated, it is treated as a variable. The result is the variable&amp;rsquo;s value, if it has one. If the symbol has no value as a variable, the Lisp interpreter signals an error. For more information on the use of variables, see &lt;a href=&quot;variables#Variables&quot;&gt;Variables&lt;/a&gt;.</source>
          <target state="translated">Когда символ оценивается, он рассматривается как переменная. Результатом является значение переменной, если оно есть. Если символ не имеет значения в качестве переменной, интерпретатор Лиспа сигнализирует об ошибке. Для получения дополнительной информации об использовании переменных см. &lt;a href=&quot;variables#Variables&quot;&gt;Переменные&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca3260b389344f34b98f56c5734682c7799e0212" translate="yes" xml:space="preserve">
          <source>When a syntax error is detected, it might not be reported until much later, after higher-level alternatives have been exhausted, and with the point positioned further from the real error. But if backtracking is disabled when an error occurs, it can be reported immediately. Note that backtracking is also reenabled automatically in several situations; when a new alternative is established by &lt;code&gt;&amp;amp;optional&lt;/code&gt;, &lt;code&gt;&amp;amp;rest&lt;/code&gt;, or &lt;code&gt;&amp;amp;or&lt;/code&gt;, or at the start of processing a sublist, group, or indirect specification. The effect of enabling or disabling backtracking is limited to the remainder of the level currently being processed and lower levels.</source>
          <target state="translated">Когда обнаруживается синтаксическая ошибка, о ней может быть сообщено гораздо позже, когда альтернативы более высокого уровня будут исчерпаны, и точка будет расположена дальше от реальной ошибки. Но если при возникновении ошибки обратное отслеживание отключено, о ней можно немедленно сообщить. Обратите внимание, что в некоторых ситуациях функция обратного отслеживания также включается автоматически; когда новая альтернатива устанавливается &lt;code&gt;&amp;amp;optional&lt;/code&gt; , &lt;code&gt;&amp;amp;rest&lt;/code&gt; , или &lt;code&gt;&amp;amp;or&lt;/code&gt; , или в начале обработки подсписка, группы или косвенной спецификации. Эффект включения или отключения отслеживания с возвратом ограничивается оставшейся частью текущего обрабатываемого уровня и более низкими уровнями.</target>
        </trans-unit>
        <trans-unit id="b11e2d87637b03c717ef6efd4945b67ae857ecab" translate="yes" xml:space="preserve">
          <source>When a user drags something from another application over Emacs, that other application expects Emacs to tell it if Emacs can handle the data that is dragged. The variable &lt;code&gt;x-dnd-test-function&lt;/code&gt; is used by Emacs to determine what to reply. The default value is &lt;code&gt;x-dnd-default-test-function&lt;/code&gt; which accepts drops if the type of the data to be dropped is present in &lt;code&gt;x-dnd-known-types&lt;/code&gt;. You can customize &lt;code&gt;x-dnd-test-function&lt;/code&gt; and/or &lt;code&gt;x-dnd-known-types&lt;/code&gt; if you want Emacs to accept or reject drops based on some other criteria.</source>
          <target state="translated">Когда пользователь перетаскивает что-то из другого приложения через Emacs, это другое приложение ожидает, что Emacs сообщит ему, может ли Emacs обработать перетаскиваемые данные. Переменная &lt;code&gt;x-dnd-test-function&lt;/code&gt; используется Emacs для определения того, на что отвечать. Значение по умолчанию - &lt;code&gt;x-dnd-default-test-function&lt;/code&gt; , которая принимает отбрасывание, если тип удаляемых данных присутствует в &lt;code&gt;x-dnd-known-types&lt;/code&gt; . Вы можете настроить &lt;code&gt;x-dnd-test-function&lt;/code&gt; и / или &lt;code&gt;x-dnd-known-types&lt;/code&gt; , если вы хотите, чтобы Emacs принимал или отклонял отбрасывание на основе некоторых других критериев.</target>
        </trans-unit>
        <trans-unit id="1088cc10e444d7abc4d69e025d9a0f2f59cc4c10" translate="yes" xml:space="preserve">
          <source>When a user runs</source>
          <target state="translated">Когда пользователь запускает</target>
        </trans-unit>
        <trans-unit id="013b54ee6a433237ecb0a87b09afb3684e276c9e" translate="yes" xml:space="preserve">
          <source>When a window is split, there are two live windows where previously there was one. One of these is represented by the same Lisp window object as the original window, and the other is represented by a newly-created Lisp window object. Both of these live windows become leaf nodes of the window tree, as &lt;em&gt;child windows&lt;/em&gt; of a single internal window. If necessary, Emacs automatically creates this internal window, which is also called the &lt;em&gt;parent window&lt;/em&gt;, and assigns it to the appropriate position in the window tree. A set of windows that share the same parent are called &lt;em&gt;siblings&lt;/em&gt;.</source>
          <target state="translated">Когда окно разделено, появляются два живых окна там, где раньше было одно. Один из них представлен тем же объектом окна Lisp, что и исходное окно, а другой представлен вновь созданным объектом окна Lisp. Оба этих живых окна становятся листовыми узлами дерева окон, как &lt;em&gt;дочерние окна&lt;/em&gt; одного внутреннего окна. Если необходимо, Emacs автоматически создает это внутреннее окно, которое также называется &lt;em&gt;родительским окном&lt;/em&gt; , и присваивает ему соответствующую позицию в дереве окон. Набор окон, которые имеют одного и того же родителя, называются &lt;em&gt;одноуровневыми&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a0fff40bc687c049f98993acb43336fd2dbaafc1" translate="yes" xml:space="preserve">
          <source>When an URL is dropped on Emacs it may be a file, but it may also be another URL type (https, etc.). Emacs first checks &lt;code&gt;dnd-protocol-alist&lt;/code&gt; to determine what to do with the URL. If there is no match there and if &lt;code&gt;browse-url-browser-function&lt;/code&gt; is an alist, Emacs looks for a match there. If no match is found the text for the URL is inserted. If you want to alter Emacs behavior, you can customize these variables.</source>
          <target state="translated">Когда URL-адрес помещается в Emacs, это может быть файл, но это также может быть URL-адрес другого типа (https и т. Д.). Emacs сначала проверяет &lt;code&gt;dnd-protocol-alist&lt;/code&gt; , чтобы определить, что делать с URL-адресом. Если там совпадения нет и &lt;code&gt;browse-url-browser-function&lt;/code&gt; является списком, Emacs ищет там совпадение. Если совпадений не найдено, вставляется текст URL-адреса. Если вы хотите изменить поведение Emacs, вы можете настроить эти переменные.</target>
        </trans-unit>
        <trans-unit id="d905b87f7dc12935b9ba5bafff41eb6ecc8d654c" translate="yes" xml:space="preserve">
          <source>When an editing command returns to the editor command loop, Emacs automatically calls &lt;code&gt;set-buffer&lt;/code&gt; on the buffer shown in the selected window. This is to prevent confusion: it ensures that the buffer that the cursor is in, when Emacs reads a command, is the buffer to which that command applies (see &lt;a href=&quot;command-loop#Command-Loop&quot;&gt;Command Loop&lt;/a&gt;). Thus, you should not use &lt;code&gt;set-buffer&lt;/code&gt; to switch visibly to a different buffer; for that, use the functions described in &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;.</source>
          <target state="translated">Когда команда редактирования возвращается в цикл команд редактора, Emacs автоматически вызывает &lt;code&gt;set-buffer&lt;/code&gt; для буфера, показанного в выбранном окне. Это сделано для предотвращения путаницы: это гарантирует, что буфер, в котором находится курсор, когда Emacs читает команду, является буфером, к которому эта команда применяется (см. &lt;a href=&quot;command-loop#Command-Loop&quot;&gt;Цикл команд&lt;/a&gt; ). Таким образом, вы не должны использовать &lt;code&gt;set-buffer&lt;/code&gt; для видимого переключения на другой буфер; для этого воспользуйтесь функциями, описанными в разделе &amp;laquo; &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Переключение буферов&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a63b9424b082eb16ff6e47f9ec417106a08efb63" translate="yes" xml:space="preserve">
          <source>When an element to be deleted appears in the middle of the list, removing it involves changing the &lt;small&gt;CDR&lt;/small&gt;s (see &lt;a href=&quot;setcdr#Setcdr&quot;&gt;Setcdr&lt;/a&gt;).</source>
          <target state="translated">Когда элемент, который необходимо удалить, появляется в середине списка, его удаление включает изменение &lt;small&gt;CDR&lt;/small&gt; (см. &lt;a href=&quot;setcdr#Setcdr&quot;&gt;Setcdr&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f91f46b78ede2a184a9ff10dc05a67b641f68fc1" translate="yes" xml:space="preserve">
          <source>When an error is due to invalid syntax in the program, the byte compiler might get confused about the error&amp;rsquo;s exact location. One way to investigate is to switch to the buffer</source>
          <target state="translated">Когда ошибка возникает из-за недопустимого синтаксиса в программе, байтовый компилятор может запутаться в точном местоположении ошибки. Один из способов исследования - переключиться на буфер</target>
        </trans-unit>
        <trans-unit id="fe67ca8b13923e7334c27d3034d89eaf3eaeaf0e" translate="yes" xml:space="preserve">
          <source>When an error is signaled, &lt;code&gt;signal&lt;/code&gt; searches for an active &lt;em&gt;handler&lt;/em&gt; for the error. A handler is a sequence of Lisp expressions designated to be executed if an error happens in part of the Lisp program. If the error has an applicable handler, the handler is executed, and control resumes following the handler. The handler executes in the environment of the &lt;code&gt;condition-case&lt;/code&gt; that established it; all functions called within that &lt;code&gt;condition-case&lt;/code&gt; have already been exited, and the handler cannot return to them.</source>
          <target state="translated">Когда сообщается об ошибке, &lt;code&gt;signal&lt;/code&gt; ищет активный &lt;em&gt;обработчик&lt;/em&gt; ошибки. Обработчик - это последовательность выражений Лиспа, предназначенная для выполнения, если в части программы на Лиспе происходит ошибка. Если у ошибки есть соответствующий обработчик, обработчик выполняется, и управление возобновляется после обработчика. Обработчик выполняется в среде &lt;code&gt;condition-case&lt;/code&gt; которое его установило; все функции, вызываемые в этом &lt;code&gt;condition-case&lt;/code&gt; , уже завершены, и обработчик не может вернуться к ним.</target>
        </trans-unit>
        <trans-unit id="526e253e8a5f3181a9d9da8a1b7155b742b86978" translate="yes" xml:space="preserve">
          <source>When an error is signaled, Emacs&amp;rsquo;s default reaction is to print an error message and terminate execution of the current command. This is the right thing to do in most cases, such as if you type</source>
          <target state="translated">Когда поступает сигнал об ошибке, по умолчанию Emacs выводит сообщение об ошибке и прекращает выполнение текущей команды. В большинстве случаев это правильно, например, если вы набираете</target>
        </trans-unit>
        <trans-unit id="57011ae63cb24d3bbaef9a2a30919d44a5c13eb5" translate="yes" xml:space="preserve">
          <source>When an operation can take a while to finish, you should inform the user about the progress it makes. This way the user can estimate remaining time and clearly see that Emacs is busy working, not hung. A convenient way to do this is to use a &lt;em&gt;progress reporter&lt;/em&gt;.</source>
          <target state="translated">Когда для завершения операции может потребоваться некоторое время, вы должны сообщить пользователю о ходе ее выполнения. Таким образом, пользователь может оценить оставшееся время и ясно увидеть, что Emacs занят работой, а не завис. Удобный способ сделать это - использовать &lt;em&gt;репортер прогресса&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="d7b21e47df479ca24f88848b86d2e4329934e81a" translate="yes" xml:space="preserve">
          <source>When any event happens, Emacs will call the &lt;var&gt;callback&lt;/var&gt; function passing it a single argument &lt;var&gt;event&lt;/var&gt;, which is of the form</source>
          <target state="translated">Когда происходит какое-либо событие, Emacs вызывает функцию &lt;var&gt;callback&lt;/var&gt; передавая ей &lt;var&gt;event&lt;/var&gt; с одним аргументом , которое имеет форму</target>
        </trans-unit>
        <trans-unit id="f54087aa444a51ff54f6c514333f1db9ca4b0182" translate="yes" xml:space="preserve">
          <source>When called after a change, each function receives five arguments: the overlay, &lt;code&gt;t&lt;/code&gt;, the beginning and end of the text range just modified, and the length of the pre-change text replaced by that range. (For an insertion, the pre-change length is zero; for a deletion, that length is the number of characters deleted, and the post-change beginning and end are equal.)</source>
          <target state="translated">При вызове после изменения каждая функция получает пять аргументов: оверлей, &lt;code&gt;t&lt;/code&gt; , начало и конец только что измененного текстового диапазона, а также длину текста до изменения, замененного этим диапазоном. (Для вставки длина до изменения равна нулю; для удаления эта длина равна количеству удаленных символов, а начало и конец после изменения равны.)</target>
        </trans-unit>
        <trans-unit id="32901ad7853d3072da02c269a04b96f55a95d101" translate="yes" xml:space="preserve">
          <source>When called before a change, each function receives four arguments: the overlay, &lt;code&gt;nil&lt;/code&gt;, and the beginning and end of the text range to be modified.</source>
          <target state="translated">При вызове перед изменением каждая функция получает четыре аргумента: оверлей, &lt;code&gt;nil&lt;/code&gt; , а также начало и конец изменяемого текстового диапазона.</target>
        </trans-unit>
        <trans-unit id="379e276f62a8b0d26dd454758763b3c43a823f7d" translate="yes" xml:space="preserve">
          <source>When called from Lisp, this function is completely equivalent to:</source>
          <target state="translated">При вызове из Лиспа,эта функция полностью эквивалентна:</target>
        </trans-unit>
        <trans-unit id="1e4ecd1153bce92bc43401b33a3763adb2023a7d" translate="yes" xml:space="preserve">
          <source>When called from Lisp, this function prints a message listing the shadowed files, instead of displaying them in a buffer. If the optional argument &lt;code&gt;stringp&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it instead returns the shadowed files as a string.</source>
          <target state="translated">При вызове из Лиспа эта функция печатает сообщение со списком затененных файлов, вместо того, чтобы отображать их в буфере. Если необязательный аргумент &lt;code&gt;stringp&lt;/code&gt; не равен &lt;code&gt;nil&lt;/code&gt; , он вместо этого возвращает затененные файлы в виде строки.</target>
        </trans-unit>
        <trans-unit id="1025d2ab7f41cbfd9c8680dcbf05ab1356f6200a" translate="yes" xml:space="preserve">
          <source>When called interactively, &lt;var&gt;column&lt;/var&gt; is the value of prefix numeric argument. If &lt;var&gt;column&lt;/var&gt; is not an integer, an error is signaled.</source>
          <target state="translated">При интерактивном вызове &lt;var&gt;column&lt;/var&gt; является значением числового аргумента префикса. Если &lt;var&gt;column&lt;/var&gt; не является целым числом, выдается сигнал об ошибке.</target>
        </trans-unit>
        <trans-unit id="ddbb33035ae6026ae4fcd8439b1ecc8b75c72889" translate="yes" xml:space="preserve">
          <source>When called interactively, it prints the uptime in the echo area.</source>
          <target state="translated">При интерактивном вызове он печатает время работы в области эха.</target>
        </trans-unit>
        <trans-unit id="512b6ff9d518561c55b0c73d9b583830f1e19c4a" translate="yes" xml:space="preserve">
          <source>When called interactively, the command defaults to putting point after text, and a prefix argument inverts this behavior.</source>
          <target state="translated">При интерактивном вызове команда по умолчанию ставит точку за текстом,а префиксный аргумент инвертирует это поведение.</target>
        </trans-unit>
        <trans-unit id="c1e95c99e8bc8c354f749aa3affddeba03679d17" translate="yes" xml:space="preserve">
          <source>When choosing the key sequences for Lisp programs to rebind, please follow the Emacs conventions for use of various keys (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Key-Binding-Conventions.html#Key-Binding-Conventions&quot;&gt;Key Binding Conventions&lt;/a&gt;).</source>
          <target state="translated">При выборе последовательностей ключей для программ на Лиспе для повторной привязки, пожалуйста, следуйте соглашениям Emacs по использованию различных ключей (см. &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Key-Binding-Conventions.html#Key-Binding-Conventions&quot;&gt;Соглашения&lt;/a&gt; о привязке ключей ).</target>
        </trans-unit>
        <trans-unit id="53b48e62ee1a029c3d507ab151392d9b81fa4a99" translate="yes" xml:space="preserve">
          <source>When code run by a thread signals an error that is unhandled, the thread exits. Other threads can access the error form which caused the thread to exit using the following function.</source>
          <target state="translated">Когда код,запущенный потоком,сигнализирует об ошибке,которая не обрабатывается,поток завершает свою работу.Другие потоки могут получить доступ к форме ошибки,которая привела к выходу потока,с помощью следующей функции.</target>
        </trans-unit>
        <trans-unit id="26fc8259867dd56763a05c30c19e9f26b5dbdaaa" translate="yes" xml:space="preserve">
          <source>When commands are remapped (see &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt;), &lt;code&gt;key-binding&lt;/code&gt; normally processes command remappings so as to return the remapped command that will actually be executed. However, if &lt;var&gt;no-remap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;key-binding&lt;/code&gt; ignores remappings and returns the binding directly specified for &lt;var&gt;key&lt;/var&gt;.</source>
          <target state="translated">Когда команды переназначены (см. &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Команды&lt;/a&gt; переназначения ), &lt;code&gt;key-binding&lt;/code&gt; обычно обрабатывает переназначения команд, чтобы вернуть переназначенную команду, которая будет фактически выполнена. Однако, если &lt;var&gt;no-remap&lt;/var&gt; отличен от &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;key-binding&lt;/code&gt; игнорирует повторное сопоставление и возвращает привязку, непосредственно заданную для &lt;var&gt;key&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="1bcc346f6a00bc954a41f55bb8f168c5d28fa7bd" translate="yes" xml:space="preserve">
          <source>When constructing a case table, you can provide &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;canonicalize&lt;/var&gt;; then Emacs fills in this slot from the lower case and upper case mappings. You can also provide &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;equivalences&lt;/var&gt;; then Emacs fills in this slot from &lt;var&gt;canonicalize&lt;/var&gt;. In a case table that is actually in use, those components are non-&lt;code&gt;nil&lt;/code&gt;. Do not try to specify &lt;var&gt;equivalences&lt;/var&gt; without also specifying &lt;var&gt;canonicalize&lt;/var&gt;.</source>
          <target state="translated">При построении таблицы case вы можете &lt;code&gt;nil&lt;/code&gt; для &lt;var&gt;canonicalize&lt;/var&gt; ; тогда Emacs заполняет этот слот из нижнего и верхнего регистров. Вы также можете &lt;code&gt;nil&lt;/code&gt; для &lt;var&gt;equivalences&lt;/var&gt; ; тогда Emacs заполняет этот слот из &lt;var&gt;canonicalize&lt;/var&gt; . В фактически используемой таблице вариантов эти компоненты не равны &lt;code&gt;nil&lt;/code&gt; . Не пытайтесь указать &lt;var&gt;equivalences&lt;/var&gt; не указав также &lt;var&gt;canonicalize&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="9c7036dd834760da23b77a262006bb0d858781c8" translate="yes" xml:space="preserve">
          <source>When defining a lambda expression that is to be used as an anonymous function, you can in principle use any method to construct the list. But typically you should use the &lt;code&gt;lambda&lt;/code&gt; macro, or the &lt;code&gt;function&lt;/code&gt; special form, or the &lt;code&gt;#'&lt;/code&gt; read syntax:</source>
          <target state="translated">При определении лямбда-выражения, которое должно использоваться как анонимная функция, вы, в принципе, можете использовать любой метод для создания списка. Но обычно вам следует использовать &lt;code&gt;lambda&lt;/code&gt; макрос, специальную форму &lt;code&gt;function&lt;/code&gt; или синтаксис чтения &lt;code&gt;#'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d1ea493148249faf21a7954fe286fc73f09681a6" translate="yes" xml:space="preserve">
          <source>When defining a macro you must pay attention to the number of times the arguments will be evaluated when the expansion is executed. The following macro (used to facilitate iteration) illustrates the problem. This macro allows us to write a for-loop construct.</source>
          <target state="translated">При определении макроса необходимо обратить внимание на то,сколько раз аргументы будут вычислены при выполнении расширения.Следующий макрос (используемый для облегчения итерации)иллюстрирует проблему.Этот макрос позволяет написать конструкцию for-loop.</target>
        </trans-unit>
        <trans-unit id="ea87e0d7dbdf5374ec0e7361bf0a991a49440aba" translate="yes" xml:space="preserve">
          <source>When defining a user option using &lt;code&gt;defcustom&lt;/code&gt;, you can set its &lt;code&gt;safe-local-variable&lt;/code&gt; property by adding the arguments &lt;code&gt;:safe &lt;var&gt;function&lt;/var&gt;&lt;/code&gt; to &lt;code&gt;defcustom&lt;/code&gt; (see &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;). However, a safety predicate defined using &lt;code&gt;:safe&lt;/code&gt; will only be known once the package that contains the &lt;code&gt;defcustom&lt;/code&gt; is loaded, which is often too late. As an alternative, you can use the autoload cookie (see &lt;a href=&quot;autoload#Autoload&quot;&gt;Autoload&lt;/a&gt;) to assign the option its safety predicate, like this:</source>
          <target state="translated">При определении параметра пользователя с помощью &lt;code&gt;defcustom&lt;/code&gt; , вы можете установить его &lt;code&gt;safe-local-variable&lt;/code&gt; свойство путем добавления аргументов &lt;code&gt;:safe &lt;var&gt;function&lt;/var&gt;&lt;/code&gt; для &lt;code&gt;defcustom&lt;/code&gt; (см &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Определения переменного&lt;/a&gt; ). Однако предикат безопасности, определенный с помощью &lt;code&gt;:safe&lt;/code&gt; , станет известен только &lt;code&gt;defcustom&lt;/code&gt; загрузки пакета, содержащего defcustom , что часто бывает слишком поздно. В качестве альтернативы вы можете использовать файл cookie автозагрузки (см. &lt;a href=&quot;autoload#Autoload&quot;&gt;Автозагрузка&lt;/a&gt; ), чтобы назначить опции ее предикат безопасности, например:</target>
        </trans-unit>
        <trans-unit id="2806d24cf47d96d2e5d91ed9a9c954116c18c451" translate="yes" xml:space="preserve">
          <source>When defining and initializing a variable that holds a complicated value (such as a keymap with bindings in it), it&amp;rsquo;s best to put the entire computation of the value into the &lt;code&gt;defvar&lt;/code&gt;, like this:</source>
          <target state="translated">При определении и инициализации переменной, которая содержит сложное значение (например, раскладку ключей с привязками в ней), лучше всего поместить все вычисление значения в &lt;code&gt;defvar&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="c977341f7fff9083b488a6a6277d4ef2105523d4" translate="yes" xml:space="preserve">
          <source>When deleting the last sibling of a window &lt;var&gt;W&lt;/var&gt;, its parent window is deleted too, with &lt;var&gt;W&lt;/var&gt; replacing it in the window tree. This means that &lt;var&gt;W&lt;/var&gt; must be recombined with its parent&amp;rsquo;s siblings to form a new window combination (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;). In some occasions, deleting a live window may even entail the deletion of two internal windows.</source>
          <target state="translated">При удалении последнего брата окна &lt;var&gt;W&lt;/var&gt; , его родительское окно также удаляется, а &lt;var&gt;W&lt;/var&gt; заменяет его в дереве окон. Это означает, что &lt;var&gt;W&lt;/var&gt; должен быть повторно скомбинирован с его родителями и сестрами, чтобы сформировать новую комбинацию окон (см. &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Окна и Фреймы&lt;/a&gt; ). В некоторых случаях удаление живого окна может даже повлечь за собой удаление двух внутренних окон.</target>
        </trans-unit>
        <trans-unit id="1f21ac0b84af4a66f3cc646c451b88df78bbc28a" translate="yes" xml:space="preserve">
          <source>When documentation strings refer to key sequences, they should use the current, actual key bindings. They can do so using certain special text sequences described below. Accessing documentation strings in the usual way substitutes current key binding information for these special sequences. This works by calling &lt;code&gt;substitute-command-keys&lt;/code&gt;. You can also call that function yourself.</source>
          <target state="translated">Когда строки документации относятся к последовательностям клавиш, они должны использовать текущие фактические привязки клавиш. Они могут сделать это с помощью определенных специальных текстовых последовательностей, описанных ниже. При доступе к строкам документации обычным способом эти специальные последовательности заменяются текущей информацией о привязке клавиш. Это работает путем вызова &lt;code&gt;substitute-command-keys&lt;/code&gt; . Вы также можете вызвать эту функцию самостоятельно.</target>
        </trans-unit>
        <trans-unit id="38784df2dd5c218a5d66ce72d620d406cb126c89" translate="yes" xml:space="preserve">
          <source>When dynamic variable binding is in effect (the default), &lt;code&gt;set&lt;/code&gt; has the same effect as &lt;code&gt;setq&lt;/code&gt;, apart from the fact that &lt;code&gt;set&lt;/code&gt; evaluates its &lt;var&gt;symbol&lt;/var&gt; argument whereas &lt;code&gt;setq&lt;/code&gt; does not. But when a variable is lexically bound, &lt;code&gt;set&lt;/code&gt; affects its &lt;em&gt;dynamic&lt;/em&gt; value, whereas &lt;code&gt;setq&lt;/code&gt; affects its current (lexical) value. See &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;.</source>
          <target state="translated">Когда действует привязка динамической переменной (по умолчанию), &lt;code&gt;set&lt;/code&gt; имеет тот же эффект, что и &lt;code&gt;setq&lt;/code&gt; , за исключением того факта, что &lt;code&gt;set&lt;/code&gt; вычисляет свой аргумент &lt;var&gt;symbol&lt;/var&gt; а &lt;code&gt;setq&lt;/code&gt; - нет. Но когда переменная связана лексически, &lt;code&gt;set&lt;/code&gt; влияет на ее &lt;em&gt;динамическое&lt;/em&gt; значение, а &lt;code&gt;setq&lt;/code&gt; влияет на ее текущее (лексическое) значение. См. Раздел &amp;laquo; &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Переменная область видимости&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f1d9000f8f63f9308377ae130b2620fb8b2d598a" translate="yes" xml:space="preserve">
          <source>When enabling Read Only mode, this mode command also enables View mode if the option &lt;code&gt;view-read-only&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Misc-Buffer.html#Misc-Buffer&quot;&gt;Miscellaneous Buffer Operations&lt;/a&gt; in</source>
          <target state="translated">При включении режима &amp;laquo;Только чтение&amp;raquo; эта команда режима также включает режим просмотра, если параметр &amp;laquo; &lt;code&gt;view-read-only&lt;/code&gt; равен &lt;code&gt;nil&lt;/code&gt; . См. Раздел &amp;laquo; &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Misc-Buffer.html#Misc-Buffer&quot;&gt;Разные операции с буферами&amp;raquo;&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="8aa5d17efedfa09b34f34f20b7fb94849c3e7350" translate="yes" xml:space="preserve">
          <source>When evaluating Emacs Lisp code directly using an &lt;code&gt;eval&lt;/code&gt; call, lexical binding is enabled if the &lt;var&gt;lexical&lt;/var&gt; argument to &lt;code&gt;eval&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;eval#Eval&quot;&gt;Eval&lt;/a&gt;.</source>
          <target state="translated">При оценке кода Emacs Lisp напрямую с помощью вызова &lt;code&gt;eval&lt;/code&gt; лексическая привязка разрешена, если &lt;var&gt;lexical&lt;/var&gt; аргумент &lt;code&gt;eval&lt;/code&gt; не равен &lt;code&gt;nil&lt;/code&gt; . См. &lt;a href=&quot;eval#Eval&quot;&gt;Eval&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ff58c996861fc90fd655da46d45167aa63d6f1a" translate="yes" xml:space="preserve">
          <source>When file I/O functions signal Lisp errors, they usually use the condition &lt;code&gt;file-error&lt;/code&gt; (see &lt;a href=&quot;handling-errors#Handling-Errors&quot;&gt;Handling Errors&lt;/a&gt;). The error message is in most cases obtained from the operating system, according to locale &lt;code&gt;system-messages-locale&lt;/code&gt;, and decoded using coding system &lt;code&gt;locale-coding-system&lt;/code&gt; (see &lt;a href=&quot;locales#Locales&quot;&gt;Locales&lt;/a&gt;).</source>
          <target state="translated">Когда функции файлового ввода-вывода сигнализируют об ошибках Lisp, они обычно используют условие &lt;code&gt;file-error&lt;/code&gt; (см. &lt;a href=&quot;handling-errors#Handling-Errors&quot;&gt;Обработка ошибок&lt;/a&gt; ). Сообщение об ошибке в большинстве случаев получается из операционной системы в соответствии с locale &lt;code&gt;system-messages-locale&lt;/code&gt; и декодируется с использованием системы кодирования &lt;code&gt;locale-coding-system&lt;/code&gt; (см. &lt;a href=&quot;locales#Locales&quot;&gt;Локали&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="350c5b56322aaae92e48e1490682ff07a3544764" translate="yes" xml:space="preserve">
          <source>When horizontal scrolling (see &lt;a href=&quot;horizontal-scrolling#Horizontal-Scrolling&quot;&gt;Horizontal Scrolling&lt;/a&gt;) is in use in a window, that forces truncation.</source>
          <target state="translated">Когда в окне используется горизонтальная прокрутка (см. &lt;a href=&quot;horizontal-scrolling#Horizontal-Scrolling&quot;&gt;Горизонтальная прокрутка&lt;/a&gt; ), это вызывает усечение.</target>
        </trans-unit>
        <trans-unit id="271aaab86b1337a5ba506711da21c73442cad0a7" translate="yes" xml:space="preserve">
          <source>When inserting text into a buffer, Emacs converts the text to the buffer&amp;rsquo;s representation, as specified by &lt;code&gt;enable-multibyte-characters&lt;/code&gt; in that buffer. In particular, when you insert multibyte text into a unibyte buffer, Emacs converts the text to unibyte, even though this conversion cannot in general preserve all the characters that might be in the multibyte text. The other natural alternative, to convert the buffer contents to multibyte, is not acceptable because the buffer&amp;rsquo;s representation is a choice made by the user that cannot be overridden automatically.</source>
          <target state="translated">При вставке текста в буфер Emacs преобразует текст в представление буфера, как указано в &lt;code&gt;enable-multibyte-characters&lt;/code&gt; в этом буфере. В частности, когда вы вставляете многобайтовый текст в однобайтный буфер, Emacs преобразует текст в однобайтный, даже если это преобразование не может в целом сохранить все символы, которые могут быть в многобайтовом тексте. Другая естественная альтернатива - преобразование содержимого буфера в многобайтовое - неприемлема, поскольку представление буфера - это выбор пользователя, который не может быть переопределен автоматически.</target>
        </trans-unit>
        <trans-unit id="78400401d74f8d9f7e140a6ba21ba56a7349b7ae" translate="yes" xml:space="preserve">
          <source>When invoked from within the lexical body of a primary or an &lt;code&gt;:around&lt;/code&gt; auxiliary method, call the next applicable method for the same generic function. Normally, it is called with no arguments, which means to call the next applicable method with the same arguments that the calling method was invoked. Otherwise, the specified arguments are used instead.</source>
          <target state="translated">При вызове из лексического тела первичного или вспомогательного метода &lt;code&gt;:around&lt;/code&gt; вызовите следующий применимый метод для той же универсальной функции. Обычно он вызывается без аргументов, что означает вызов следующего применимого метода с теми же аргументами, что и вызывающий метод. В противном случае вместо них используются указанные аргументы.</target>
        </trans-unit>
        <trans-unit id="22a73a2c2f52de133ad681f2f8a5379ca6fbcaa7" translate="yes" xml:space="preserve">
          <source>When invoked, &lt;var&gt;fname&lt;/var&gt; displays &lt;var&gt;help-text&lt;/var&gt; in a window, then reads and executes a key sequence according to &lt;var&gt;help-map&lt;/var&gt;. The string &lt;var&gt;help-text&lt;/var&gt; should describe the bindings available in &lt;var&gt;help-map&lt;/var&gt;.</source>
          <target state="translated">При вызове &lt;var&gt;fname&lt;/var&gt; отображает &lt;var&gt;help-text&lt;/var&gt; в окне, затем читает и выполняет последовательность клавиш в соответствии с &lt;var&gt;help-map&lt;/var&gt; . Строка &lt;var&gt;help-text&lt;/var&gt; должна описывать привязки, доступные в &lt;var&gt;help-map&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="270e8799b814cfce4a286fe2e722afa5227a904d" translate="yes" xml:space="preserve">
          <source>When it appears inside a generator function, &lt;code&gt;iter-yield&lt;/code&gt; indicates that the current iterator should pause and return &lt;var&gt;value&lt;/var&gt; from &lt;code&gt;iter-next&lt;/code&gt;. &lt;code&gt;iter-yield&lt;/code&gt; evaluates to the &lt;code&gt;value&lt;/code&gt; parameter of next call to &lt;code&gt;iter-next&lt;/code&gt;.</source>
          <target state="translated">Когда он появляется внутри функции генератора, &lt;code&gt;iter-yield&lt;/code&gt; указывает, что текущий итератор должен приостановить работу и вернуть &lt;var&gt;value&lt;/var&gt; из &lt;code&gt;iter-next&lt;/code&gt; . &lt;code&gt;iter-yield&lt;/code&gt; оценивает параметр &lt;code&gt;value&lt;/code&gt; следующего вызова &lt;code&gt;iter-next&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e06cf5c06f558efb415ea91b49073c2f1392b41" translate="yes" xml:space="preserve">
          <source>When it is called with no arguments, it should return the next character.</source>
          <target state="translated">Когда он вызывается без аргументов,он должен вернуть следующий символ.</target>
        </trans-unit>
        <trans-unit id="d04ba64362f113898459c5f6a31354c18e8509fe" translate="yes" xml:space="preserve">
          <source>When it is called with one argument (always a character), &lt;var&gt;function&lt;/var&gt; should save the argument and arrange to return it on the next call. This is called &lt;em&gt;unreading&lt;/em&gt; the character; it happens when the Lisp reader reads one character too many and wants to put it back where it came from. In this case, it makes no difference what value &lt;var&gt;function&lt;/var&gt; returns.</source>
          <target state="translated">Когда она вызывается с одним аргументом (всегда символом), &lt;var&gt;function&lt;/var&gt; должна сохранить аргумент и организовать его возврат при следующем вызове. Это называется &lt;em&gt;непрочитанием&lt;/em&gt; символа; это случается, когда читатель Lisp читает один символ слишком много и хочет вернуть его туда, откуда он появился. В этом случае не имеет значения, какое значение возвращает &lt;var&gt;function&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="95baf6905d346ff81689596bbb3b320ff6f3106c" translate="yes" xml:space="preserve">
          <source>When its value is non-&lt;code&gt;nil&lt;/code&gt;, this variable takes precedence over all other methods of specifying a coding system to use for input, including &lt;code&gt;file-coding-system-alist&lt;/code&gt;, &lt;code&gt;process-coding-system-alist&lt;/code&gt; and &lt;code&gt;network-coding-system-alist&lt;/code&gt;.</source>
          <target state="translated">Если ее значение не равно &lt;code&gt;nil&lt;/code&gt; , эта переменная имеет приоритет над всеми другими методами определения системы кодирования, используемой для ввода, включая &lt;code&gt;file-coding-system-alist&lt;/code&gt; , &lt;code&gt;process-coding-system-alist&lt;/code&gt; и &lt;code&gt;network-coding-system-alist&lt;/code&gt; . .</target>
        </trans-unit>
        <trans-unit id="75d41964794dd951ed71d985fbd5fd1e7a11f18e" translate="yes" xml:space="preserve">
          <source>When kill commands are interwoven with other commands, each kill command makes a new entry in the kill ring. Multiple kill commands in succession build up a single kill ring entry, which would be yanked as a unit; the second and subsequent consecutive kill commands add text to the entry made by the first one.</source>
          <target state="translated">Когда команды убийства переплетаются с другими командами,каждая команда убийства делает новую запись в кольце убийства.Несколько последовательных команд kill создают одну запись в кольце,которая будет дёрнута как единица;вторая и последующие последовательные команды kill добавляют текст к записи,сделанной первой.</target>
        </trans-unit>
        <trans-unit id="b3160ac97062e53673f5b7ae6733ac8a5c41c006" translate="yes" xml:space="preserve">
          <source>When lexical binding is enabled, &lt;var&gt;function-object&lt;/var&gt; is converted into a closure. See &lt;a href=&quot;closures#Closures&quot;&gt;Closures&lt;/a&gt;.</source>
          <target state="translated">Когда лексическая привязка включена, &lt;var&gt;function-object&lt;/var&gt; преобразуется в замыкание. См. &lt;a href=&quot;closures#Closures&quot;&gt;Замыкания&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="649a0e0a802e8cb989511e43554feca7e3834c9d" translate="yes" xml:space="preserve">
          <source>When libxml2 support is available, the following functions can be used to parse HTML or XML text into Lisp object trees.</source>
          <target state="translated">Когда доступна поддержка libxml2,следующие функции могут быть использованы для разбора HTML или XML текста в деревьях объектов Lisp.</target>
        </trans-unit>
        <trans-unit id="2fbc121df2e7d75994e696c8cd6756e93b4a9a7f" translate="yes" xml:space="preserve">
          <source>When loading a source file (not compiled), &lt;code&gt;load&lt;/code&gt; performs character set translation just as Emacs would do when visiting the file. See &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;.</source>
          <target state="translated">При загрузке исходного файла (не скомпилированного) &lt;code&gt;load&lt;/code&gt; выполняет преобразование набора символов так же, как Emacs делал бы это при посещении файла. См. &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Системы кодирования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f966d17e6f91b40f18d6f070e990c0794fe58fe3" translate="yes" xml:space="preserve">
          <source>When loading an Emacs Lisp file or evaluating a Lisp buffer, lexical binding is enabled if the buffer-local variable &lt;code&gt;lexical-binding&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">При загрузке файла Emacs Lisp или оценки буфера Лисп, лексическая связь включена , если буфер локальной переменной &lt;code&gt;lexical-binding&lt;/code&gt; отлична от &lt;code&gt;nil&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e1913cebbaf53d7eca6a957e910ce8d79fca8ec9" translate="yes" xml:space="preserve">
          <source>When loading an uncompiled file, Emacs tries to expand any macros that the file contains (see &lt;a href=&quot;macros#Macros&quot;&gt;Macros&lt;/a&gt;). We refer to this as &lt;em&gt;eager macro expansion&lt;/em&gt;. Doing this (rather than deferring the expansion until the relevant code runs) can significantly speed up the execution of uncompiled code. Sometimes, this macro expansion cannot be done, owing to a cyclic dependency. In the simplest example of this, the file you are loading refers to a macro defined in another file, and that file in turn requires the file you are loading. This is generally harmless. Emacs prints a warning (&amp;lsquo;</source>
          <target state="translated">При загрузке некомпилированного файла Emacs пытается развернуть все макросы, содержащиеся в файле (см. &lt;a href=&quot;macros#Macros&quot;&gt;Макросы&lt;/a&gt; ). Мы называем это &lt;em&gt;стремительным расширением макросов&lt;/em&gt; . Это может значительно ускорить выполнение некомпилированного кода (вместо того, чтобы откладывать раскрытие до запуска соответствующего кода). Иногда это макрорасширение невозможно из-за циклической зависимости. В простейшем примере загружаемый файл ссылается на макрос, определенный в другом файле, а этот файл, в свою очередь, требует загружаемого вами файла. Это вообще безвредно. Emacs выводит предупреждение ('</target>
        </trans-unit>
        <trans-unit id="d977efe2ca2e7e0c3c47bd1b756ac94422eccd1b" translate="yes" xml:space="preserve">
          <source>When marking is finished, all objects still unmarked are garbage. No matter what the Lisp program or the user does, it is impossible to refer to them, since there is no longer a way to reach them. Their space might as well be reused, since no one will miss them. The second (sweep) phase of the garbage collector arranges to reuse them.</source>
          <target state="translated">По окончании разметки все еще немаркированные объекты являются мусором.Независимо от того,что делает программа на языке Lisp или пользователь,на них нельзя ссылаться,так как больше нет способа достучаться до них.Их пространство с тем же успехом можно было бы использовать повторно,так как никто не пропустит их.Вторая (зачистка)фаза сборщика мусора организует их повторное использование.</target>
        </trans-unit>
        <trans-unit id="100be2e7228977cae18240a2a3d8c8d9124982d4" translate="yes" xml:space="preserve">
          <source>When matching a buffer, &amp;lsquo;</source>
          <target state="translated">При сопоставлении с буфером '</target>
        </trans-unit>
        <trans-unit id="3bae7d6a440557da3c24f776682bba86a8a7bfd3" translate="yes" xml:space="preserve">
          <source>When matching a string instead of a buffer, &amp;lsquo;</source>
          <target state="translated">При сопоставлении строки вместо буфера '</target>
        </trans-unit>
        <trans-unit id="5b36abe96eb4b6f19c26bd1ec5a147768f1c4a66" translate="yes" xml:space="preserve">
          <source>When modifying a variable (whose name will usually end with &lt;code&gt;-function&lt;/code&gt;), you can choose whether &lt;var&gt;function&lt;/var&gt; is used globally or only in the current buffer: if &lt;var&gt;place&lt;/var&gt; is just a symbol, then &lt;var&gt;function&lt;/var&gt; is added to the global value of &lt;var&gt;place&lt;/var&gt;. Whereas if &lt;var&gt;place&lt;/var&gt; is of the form &lt;code&gt;(local &lt;var&gt;symbol&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;symbol&lt;/var&gt; is an expression which returns the variable name, then &lt;var&gt;function&lt;/var&gt; will only be added in the current buffer. Finally, if you want to modify a lexical variable, you will have to use &lt;code&gt;(var &lt;var&gt;variable&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">При изменении переменной (имя которой обычно заканчивается на &lt;code&gt;-function&lt;/code&gt; ) вы можете выбрать, будет ли &lt;var&gt;function&lt;/var&gt; использоваться глобально или только в текущем буфере: если &lt;var&gt;place&lt;/var&gt; - это просто символ, то &lt;var&gt;function&lt;/var&gt; добавляется к глобальному значению &lt;var&gt;place&lt;/var&gt; . Если &lt;var&gt;place&lt;/var&gt; имеет форму &lt;code&gt;(local &lt;var&gt;symbol&lt;/var&gt;)&lt;/code&gt; , где &lt;var&gt;symbol&lt;/var&gt; - это выражение, возвращающее имя переменной, тогда &lt;var&gt;function&lt;/var&gt; будет добавлена ​​только в текущий буфер. Наконец, если вы хотите изменить лексическую переменную, вам придется использовать &lt;code&gt;(var &lt;var&gt;variable&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3a3f2a8a8a6dc07a8079628465edef16d500fc7" translate="yes" xml:space="preserve">
          <source>When more than one active keymap defines the same function key for the menu bar, the item appears just once. If the user clicks on that menu bar item, it brings up a single, combined menu containing all the subcommands of that item&amp;mdash;the global subcommands, the local subcommands, and the minor mode subcommands.</source>
          <target state="translated">Когда несколько активных раскладок определяют одну и ту же функциональную клавишу для строки меню, элемент появляется только один раз. Если пользователь щелкает этот элемент строки меню, появляется единое комбинированное меню, содержащее все подкоманды этого элемента - глобальные подкоманды, локальные подкоманды и подкоманды второстепенного режима.</target>
        </trans-unit>
        <trans-unit id="69fd4885d44a5f3a4a20f7e032731c7f78263a05" translate="yes" xml:space="preserve">
          <source>When more than one minor mode keymap is active, the earlier one in &lt;code&gt;minor-mode-map-alist&lt;/code&gt; takes priority. But you should design minor modes so that they don&amp;rsquo;t interfere with each other. If you do this properly, the order will not matter.</source>
          <target state="translated">Когда активна более чем одна раскладка вспомогательного режима, приоритет имеет более ранняя в &lt;code&gt;minor-mode-map-alist&lt;/code&gt; . Но вы должны разработать второстепенные режимы так, чтобы они не мешали друг другу. Если вы сделаете это правильно, порядок не будет иметь значения.</target>
        </trans-unit>
        <trans-unit id="1a8050c7a27dcb66bca7ebd9d7f895d40aee87aa" translate="yes" xml:space="preserve">
          <source>When mouse events occur in special parts of a window, such as a mode line or a scroll bar, the event type shows nothing special&amp;mdash;it is the same symbol that would normally represent that combination of mouse button and modifier keys. The information about the window part is kept elsewhere in the event&amp;mdash;in the coordinates. But &lt;code&gt;read-key-sequence&lt;/code&gt; translates this information into imaginary prefix keys, all of which are symbols: &lt;code&gt;tab-line&lt;/code&gt;, &lt;code&gt;header-line&lt;/code&gt;, &lt;code&gt;horizontal-scroll-bar&lt;/code&gt;, &lt;code&gt;menu-bar&lt;/code&gt;, &lt;code&gt;tab-bar&lt;/code&gt;, &lt;code&gt;mode-line&lt;/code&gt;, &lt;code&gt;vertical-line&lt;/code&gt;, and &lt;code&gt;vertical-scroll-bar&lt;/code&gt;. You can define meanings for mouse clicks in special window parts by defining key sequences using these imaginary prefix keys.</source>
          <target state="translated">Когда события мыши происходят в особых частях окна, таких как строка режима или полоса прокрутки, тип события не показывает ничего особенного - это тот же символ, который обычно представляет комбинацию кнопки мыши и клавиш-модификаторов. Информация о оконной части хранится в другом месте события - в координатах. Но для &lt;code&gt;read-key-sequence&lt;/code&gt; переводит эту информацию в воображаемые ключи префикса, все из которых являются символы: &lt;code&gt;tab-line&lt;/code&gt; , &lt;code&gt;header-line&lt;/code&gt; , &lt;code&gt;horizontal-scroll-bar&lt;/code&gt; , &lt;code&gt;menu-bar&lt;/code&gt; , &lt;code&gt;tab-bar&lt;/code&gt; , &lt;code&gt;mode-line&lt;/code&gt; , &lt;code&gt;vertical-line&lt;/code&gt; , и &lt;code&gt;vertical-scroll-bar&lt;/code&gt; . Вы можете определить значения щелчков мыши в специальных частях окна, задав последовательности клавиш с помощью этих воображаемых префиксных клавиш.</target>
        </trans-unit>
        <trans-unit id="5c84b29b0559591bfde54d52963f64fa669d6447" translate="yes" xml:space="preserve">
          <source>When multiple overlays cover one character, an overlay with higher priority overrides those with lower priority. See &lt;a href=&quot;overlays#Overlays&quot;&gt;Overlays&lt;/a&gt;.</source>
          <target state="translated">Когда несколько оверлеев покрывают один символ, оверлей с более высоким приоритетом заменяет наложения с более низким приоритетом. См. &lt;a href=&quot;overlays#Overlays&quot;&gt;Оверлеи&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25eb5c698117c37d3a9783e95ab97ef5ef9f5588" translate="yes" xml:space="preserve">
          <source>When non-&lt;code&gt;nil&lt;/code&gt;, mouse motion events are generated even for very small movements. Otherwise, motion events are not generated as long as the mouse cursor remains pointing to the same glyph in the text.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , события движения мыши генерируются даже для очень небольших движений. В противном случае события движения не генерируются, пока курсор мыши остается указывающим на тот же глиф в тексте.</target>
        </trans-unit>
        <trans-unit id="047e53ac675fd24d28c78f6b730c89bfd8552535" translate="yes" xml:space="preserve">
          <source>When none of the simple types is appropriate, you can use composite types, which build new types from other types or from specified data. The specified types or data are called the &lt;em&gt;arguments&lt;/em&gt; of the composite type. The composite type normally looks like this:</source>
          <target state="translated">Когда ни один из простых типов не подходит, вы можете использовать составные типы, которые создают новые типы из других типов или из указанных данных. Указанные типы или данные называются &lt;em&gt;аргументами&lt;/em&gt; составного типа. Составной тип обычно выглядит так:</target>
        </trans-unit>
        <trans-unit id="779d725ab8d9715d9f6601fd3bcd1e39eb8f6906" translate="yes" xml:space="preserve">
          <source>When one major mode command calls another, it should do so inside of &lt;code&gt;delay-mode-hooks&lt;/code&gt;.</source>
          <target state="translated">Когда одна команда основного режима вызывает другую, она должна делать это внутри &lt;code&gt;delay-mode-hooks&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de0947bb744aee21a132ab3b19d62edc58d7711a" translate="yes" xml:space="preserve">
          <source>When opening a TLS connection, this should be where the first element is the TLS type (which should either be &lt;code&gt;gnutls-x509pki&lt;/code&gt; or &lt;code&gt;gnutls-anon&lt;/code&gt;, and the remaining elements should form a keyword list acceptable for &lt;code&gt;gnutls-boot&lt;/code&gt;. (This keyword list can be obtained from the &lt;code&gt;gnutls-boot-parameters&lt;/code&gt; function.) The TLS connection will then be negotiated after completing the connection to the host.</source>
          <target state="translated">При открытии соединения TLS первым элементом должен быть тип TLS (который должен быть либо &lt;code&gt;gnutls-x509pki&lt;/code&gt; , либо &lt;code&gt;gnutls-anon&lt;/code&gt; , а остальные элементы должны формировать список ключевых слов, приемлемый для &lt;code&gt;gnutls-boot&lt;/code&gt; . (Этот список ключевых слов может быть полученным из функции &lt;code&gt;gnutls-boot-parameters&lt;/code&gt; .) TLS-соединение будет согласовано после завершения соединения с хостом.</target>
        </trans-unit>
        <trans-unit id="53bf8b39424917bd24fe81e1c5d9a76120ed60ed" translate="yes" xml:space="preserve">
          <source>When performing &lt;code&gt;copy-keymap&lt;/code&gt;, any keymaps that appear directly as bindings in &lt;var&gt;keymap&lt;/var&gt; are also copied recursively, and so on to any number of levels. However, recursive copying does not take place when the definition of a character is a symbol whose function definition is a keymap; the same symbol appears in the new copy.</source>
          <target state="translated">При выполнении &lt;code&gt;copy-keymap&lt;/code&gt; любые раскладки, которые появляются непосредственно как привязки в &lt;var&gt;keymap&lt;/var&gt; , также рекурсивно копируются и так далее на любое количество уровней. Однако рекурсивное копирование не происходит, если определение символа является символом, определение функции которого является таблицей клавиш; тот же символ появляется в новой копии.</target>
        </trans-unit>
        <trans-unit id="3a067675652faa97e22eb59de180ecad738e3406" translate="yes" xml:space="preserve">
          <source>When possible, this command actually works by calling the &lt;code&gt;sort&lt;/code&gt; utility program.</source>
          <target state="translated">Когда это возможно, эта команда фактически работает, вызывая служебную программу &lt;code&gt;sort&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22565d2a77541296c231ea9076bb0b93e0a926ea" translate="yes" xml:space="preserve">
          <source>When pre-allocating, you should make sure &lt;code&gt;(length &lt;var&gt;bindat-raw&lt;/var&gt;)&lt;/code&gt; meets or exceeds the total length to avoid an out-of-range error.</source>
          <target state="translated">При предварительном выделении вы должны убедиться, что &lt;code&gt;(length &lt;var&gt;bindat-raw&lt;/var&gt;)&lt;/code&gt; соответствует или превышает общую длину, чтобы избежать ошибки вне допустимого диапазона.</target>
        </trans-unit>
        <trans-unit id="0ee0a4c579b96173c4d92e82677349c6811a11d2" translate="yes" xml:space="preserve">
          <source>When present, a list of strings containing escape sequences that Emacs will output while configuring a tty for rendering. Emacs emits these strings only when configuring a terminal: if you want to enable a mode on a terminal that is already active (for example, while in &lt;code&gt;tty-setup-hook&lt;/code&gt;), explicitly output the necessary escape sequence using &lt;code&gt;send-string-to-terminal&lt;/code&gt; in addition to adding the sequence to &lt;code&gt;tty-mode-set-strings&lt;/code&gt;.</source>
          <target state="translated">Если присутствует, список строк, содержащих escape-последовательности, которые Emacs будет выводить при настройке tty для рендеринга. Emacs генерирует эти строки только при настройке терминала: если вы хотите включить режим на терминале, который уже активен (например, находясь в &lt;code&gt;tty-setup-hook&lt;/code&gt; ), явно выведите необходимую escape-последовательность, используя &lt;code&gt;send-string-to-terminal&lt;/code&gt; в дополнение к добавлению последовательности в &lt;code&gt;tty-mode-set-strings&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a83e89087505c41136f9017d7224c99949728e0" translate="yes" xml:space="preserve">
          <source>When present, a list of strings that undo the effects of the strings in &lt;code&gt;tty-mode-set-strings&lt;/code&gt;. Emacs emits these strings when exiting, deleting a terminal, or suspending itself.</source>
          <target state="translated">Если присутствует, список строк, отменяющих действие строк в &lt;code&gt;tty-mode-set-strings&lt;/code&gt; . Emacs генерирует эти строки при выходе, удалении терминала или приостановке работы.</target>
        </trans-unit>
        <trans-unit id="08fd877eb8e87706105bac0db9a2794817e4b63a" translate="yes" xml:space="preserve">
          <source>When printing circular structures, this construct is used to represent where the structure loops back onto itself, and &amp;lsquo;</source>
          <target state="translated">При печати круговых структур эта конструкция используется для обозначения того, где структура возвращается в саму себя, и '</target>
        </trans-unit>
        <trans-unit id="da6bcd1fadc74242a658fbfe9f9ad9c68afd303f" translate="yes" xml:space="preserve">
          <source>When reading input results in such a &lt;em&gt;shift-translation&lt;/em&gt;, Emacs sets the variable &lt;code&gt;this-command-keys-shift-translated&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value. Lisp programs can examine this variable if they need to modify their behavior when invoked by shift-translated keys. For example, the function &lt;code&gt;handle-shift-selection&lt;/code&gt; examines the value of this variable to determine how to activate or deactivate the region (see &lt;a href=&quot;the-mark#The-Mark&quot;&gt;handle-shift-selection&lt;/a&gt;).</source>
          <target state="translated">Когда чтение ввода приводит к такому &lt;em&gt;сдвигу-трансляции&lt;/em&gt; , Emacs устанавливает для переменной &lt;code&gt;this-command-keys-shift-translated&lt;/code&gt; значение, отличное от &lt;code&gt;nil&lt;/code&gt; . Программы на Лиспе могут проверять эту переменную, если им нужно изменить свое поведение при вызове с помощью клавиш, переведенных с помощью сдвига. Например, функция &lt;code&gt;handle-shift-selection&lt;/code&gt; проверяет значение этой переменной, чтобы определить, как активировать или деактивировать область (см. &lt;a href=&quot;the-mark#The-Mark&quot;&gt;Handle-shift-selection&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="dd04cadc13a94e0780eae3bc26ccc9f254510535" translate="yes" xml:space="preserve">
          <source>When reading or writing from the standard input/output streams of the Emacs process in batch mode, it is sometimes required to make sure any arbitrary binary data will be read/written verbatim, and/or that no translation of newlines to or from CR-LF pairs is performed. This issue does not exist on POSIX hosts, only on MS-Windows and MS-DOS. The following function allows you to control the I/O mode of any standard stream of the Emacs process.</source>
          <target state="translated">При чтении или записи из стандартных потоков ввода/вывода процесса Emacs в пакетном режиме иногда требуется убедиться,что любые произвольные двоичные данные будут прочитаны/записаны дословно,и/или что не выполняется трансляция новых строк в или из пар CR-LF.Эта проблема не существует на POSIX-хостах,только на MS-Windows и MS-DOS.Следующая функция позволяет управлять режимом ввода/вывода любого стандартного потока процесса Emacs.</target>
        </trans-unit>
        <trans-unit id="b67d232f5124d34368688aba61e81bd9b263a2df" translate="yes" xml:space="preserve">
          <source>When representing a system value (such as a file size or a count of seconds since the Epoch), prefer the corresponding system type (e.g., &lt;code&gt;off_t&lt;/code&gt;, &lt;code&gt;time_t&lt;/code&gt;). Do not assume that a system type is signed, unless this assumption is known to be safe. For example, although &lt;code&gt;off_t&lt;/code&gt; is always signed, &lt;code&gt;time_t&lt;/code&gt; need not be.</source>
          <target state="translated">При представлении системного значения (например, размера файла или количества секунд с начала эпохи) предпочтение следует отдавать соответствующему типу системы (например, &lt;code&gt;off_t&lt;/code&gt; , &lt;code&gt;time_t&lt;/code&gt; ). Не предполагайте, что тип системы подписан, если только это предположение не безопасно. Например, хотя &lt;code&gt;off_t&lt;/code&gt; всегда подписан, &lt;code&gt;time_t&lt;/code&gt; не обязательно.</target>
        </trans-unit>
        <trans-unit id="ac40e3df18fc1975f34cddbac15e959e496bbd8c" translate="yes" xml:space="preserve">
          <source>When set the server will not automatically remove the notification when an action has been invoked. The notification will remain resident in the server until it is explicitly removed by the user or by the sender. This hint is likely only useful when the server has the &lt;code&gt;:persistence&lt;/code&gt; capability.</source>
          <target state="translated">Если установлено, сервер не будет автоматически удалять уведомление при вызове действия. Уведомление будет оставаться на сервере до тех пор, пока оно не будет явно удалено пользователем или отправителем. Эта подсказка, вероятно, будет полезна только в том случае, если сервер имеет возможность &lt;code&gt;:persistence&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9368dc6fce3c40353f1e2bb0df437fe8d76702b" translate="yes" xml:space="preserve">
          <source>When set the server will treat the notification as transient and by-pass the server&amp;rsquo;s persistence capability, if it should exist.</source>
          <target state="translated">Если установлено, сервер будет рассматривать уведомление как временное и игнорировать возможность сохранения сервера, если она должна существовать.</target>
        </trans-unit>
        <trans-unit id="9e6e6c017b1e2de9bbba4574f219e054f0ed3f4f" translate="yes" xml:space="preserve">
          <source>When setting variables according to saved customizations, make sure to set the variables &lt;var&gt;variables&lt;/var&gt; before this one; i.e., delay setting this variable until after those others have been handled. Use &lt;code&gt;:set-after&lt;/code&gt; if setting this variable won&amp;rsquo;t work properly unless those other variables already have their intended values.</source>
          <target state="translated">При установке переменных в соответствии с сохраненными настройками не забудьте установить переменные &lt;var&gt;variables&lt;/var&gt; перед этой; то есть, отложить установку этой переменной до тех пор, пока не будут обработаны другие. Используйте &lt;code&gt;:set-after&lt;/code&gt; , если установка этой переменной не будет работать должным образом, если у этих других переменных уже есть свои предполагаемые значения.</target>
        </trans-unit>
        <trans-unit id="cfff7ef3ea4fdcd00a65945cf2e104dc5743d452" translate="yes" xml:space="preserve">
          <source>When several characters with consecutive</source>
          <target state="translated">Когда несколько символов подряд</target>
        </trans-unit>
        <trans-unit id="2d8b4838128ea072c0106a113248abb6b63cf660" translate="yes" xml:space="preserve">
          <source>When similar constants occur as parts of a program, the Lisp interpreter might save time or space by reusing existing constants or their components. For example, &lt;code&gt;(eq &quot;abc&quot; &quot;abc&quot;)&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; if the interpreter creates only one instance of the string literal &lt;code&gt;&quot;abc&quot;&lt;/code&gt;, and returns &lt;code&gt;nil&lt;/code&gt; if it creates two instances. Lisp programs should be written so that they work regardless of whether this optimization is in use.</source>
          <target state="translated">Когда похожие константы встречаются как части программы, интерпретатор Лиспа может сэкономить время или пространство, повторно используя существующие константы или их компоненты. Например, &lt;code&gt;(eq &quot;abc&quot; &quot;abc&quot;)&lt;/code&gt; возвращает &lt;code&gt;t&lt;/code&gt; , если интерпретатор создает только один экземпляр строкового литерала &lt;code&gt;&quot;abc&quot;&lt;/code&gt; , и возвращает &lt;code&gt;nil&lt;/code&gt; , если он создает два экземпляра. Программы на Лиспе следует писать так, чтобы они работали независимо от того, используется ли эта оптимизация.</target>
        </trans-unit>
        <trans-unit id="3f26b87f1bbbefd1a6d0f776d0a92015f1677217" translate="yes" xml:space="preserve">
          <source>When some Lisp code called by a module function signals an error or throws, the nonlocal exit is trapped, and the pending exit and its associated data are stored in the environment. Whenever a nonlocal exit is pending in the environment, any module</source>
          <target state="translated">Когда какой-нибудь код на языке Lisp,вызванный модульной функцией,сигнализирует об ошибке или бросает,нелокальный выход попадает в ловушку,а ожидающий выход и связанные с ним данные хранятся в окружении.Всякий раз,когда в окружении ожидается нелокальный выход,любой модуль</target>
        </trans-unit>
        <trans-unit id="9db45b5609d26dfd7efc9feec92be1511642a357" translate="yes" xml:space="preserve">
          <source>When some portion of a buffer is hidden, the vertical movement commands operate as if that portion did not exist, allowing a single &lt;code&gt;next-line&lt;/code&gt; command to skip any number of hidden lines. However, character movement commands (such as &lt;code&gt;forward-char&lt;/code&gt;) do not skip the hidden portion, and it is possible (if tricky) to insert or delete text in a hidden portion.</source>
          <target state="translated">Когда какая-то часть буфера скрыта, команды вертикального перемещения действуют так, как если бы эта часть не существовала, позволяя одной команде &lt;code&gt;next-line&lt;/code&gt; пропустить любое количество скрытых строк. Однако команды перемещения символов (такие как &lt;code&gt;forward-char&lt;/code&gt; ) не пропускают скрытую часть, и можно (если это сложно) вставить или удалить текст в скрытой части.</target>
        </trans-unit>
        <trans-unit id="e574ca399de3ea69015e3e8671da1891747a608c" translate="yes" xml:space="preserve">
          <source>When specifying this attribute using &lt;code&gt;set-face-attribute&lt;/code&gt; or &lt;code&gt;set-face-font&lt;/code&gt; (see &lt;a href=&quot;attribute-functions#Attribute-Functions&quot;&gt;Attribute Functions&lt;/a&gt;), you may also supply a font spec, a font entity, or a string. Emacs converts such values to an appropriate font object, and stores that font object as the actual attribute value. If you specify a string, the contents of the string should be a font name (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="translated">При указании этого атрибута с помощью &lt;code&gt;set-face-attribute&lt;/code&gt; или &lt;code&gt;set-face-font&lt;/code&gt; (см. &lt;a href=&quot;attribute-functions#Attribute-Functions&quot;&gt;Функции атрибутов&lt;/a&gt; ) вы также можете указать спецификацию шрифта, объект шрифта или строку. Emacs преобразует такие значения в соответствующий объект шрифта и сохраняет этот объект шрифта как фактическое значение атрибута. Если вы указываете строку, содержимое строки должно быть именем шрифта (см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Шрифты&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="4b11ce5d6802b26c7f2b961ad907723f9d570ab2" translate="yes" xml:space="preserve">
          <source>When text that includes mixed right-to-left and left-to-right characters and bidirectional controls is copied into a different location, it can change its visual appearance, and also can affect the visual appearance of the surrounding text at destination. This is because reordering of bidirectional text specified by the</source>
          <target state="translated">Когда текст,включающий в себя смешанные символы справа налево и слева направо и двунаправленные регуляторы,копируется в другое место,он может изменить свой визуальный вид,а также может повлиять на визуальный вид окружающего текста в месте назначения.Это происходит потому,что переупорядочивание двунаправленного текста,указанного в параметрах</target>
        </trans-unit>
        <trans-unit id="15ed882fb69d01ac6fbd84eb0a9a01f6db124216" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;fac&lt;/code&gt; definition is instrumented and the function is called, the call to &lt;code&gt;edebug&lt;/code&gt; acts as a breakpoint. Depending on the execution mode, Edebug stops or pauses there.</source>
          <target state="translated">Когда определение &lt;code&gt;fac&lt;/code&gt; инструментировано и вызывается функция, вызов &lt;code&gt;edebug&lt;/code&gt; действует как точка останова. В зависимости от режима выполнения Edebug останавливается или приостанавливается на нем.</target>
        </trans-unit>
        <trans-unit id="1139523c738a471ce6a2d8309dc3871f01ec27a0" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;read-key-sequence&lt;/code&gt; function reads a key sequence (see &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;Key Sequence Input&lt;/a&gt;), it uses &lt;em&gt;translation keymaps&lt;/em&gt; to translate certain event sequences into others. The translation keymaps are &lt;code&gt;input-decode-map&lt;/code&gt;, &lt;code&gt;local-function-key-map&lt;/code&gt;, and &lt;code&gt;key-translation-map&lt;/code&gt; (in order of priority).</source>
          <target state="translated">Когда &lt;code&gt;read-key-sequence&lt;/code&gt; Функция считывает последовательность (см &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;Последовательность клавиш ввод&lt;/a&gt; ), он использует &lt;em&gt;переводческие раскладки&lt;/em&gt; переводить определенные последовательности событий в другие. В раскладке переводчика &lt;code&gt;input-decode-map&lt;/code&gt; , &lt;code&gt;local-function-key-map&lt;/code&gt; , и &lt;code&gt;key-translation-map&lt;/code&gt; (в порядке приоритета).</target>
        </trans-unit>
        <trans-unit id="510adf48c83c6cb02951a4ea57e9191853fd42fb" translate="yes" xml:space="preserve">
          <source>When the Lisp reader encounters a symbol, it reads all the characters of the name. Then it hashes those characters to find an index in a table called an &lt;em&gt;obarray&lt;/em&gt;. Hashing is an efficient method of looking something up. For example, instead of searching a telephone book cover to cover when looking up Jan Jones, you start with the J&amp;rsquo;s and go from there. That is a simple version of hashing. Each element of the obarray is a &lt;em&gt;bucket&lt;/em&gt; which holds all the symbols with a given hash code; to look for a given name, it is sufficient to look through all the symbols in the bucket for that name&amp;rsquo;s hash code. (The same idea is used for general Emacs hash tables, but they are a different data type; see &lt;a href=&quot;hash-tables#Hash-Tables&quot;&gt;Hash Tables&lt;/a&gt;.)</source>
          <target state="translated">Когда читатель Лиспа встречает символ, он читает все символы имени. Затем он хеширует эти символы, чтобы найти индекс в таблице, называемой &lt;em&gt;obarray&lt;/em&gt; . Хеширование - эффективный метод поиска информации. Например, вместо того, чтобы искать в телефонной книге от корки до корки, ища Яна Джонса, вы начинаете с буквы J и переходите оттуда. Это простая версия хеширования. Каждый элемент obarray является &lt;em&gt;ковш&lt;/em&gt; , который содержит все символы с заданным хэш - кодом; Чтобы найти данное имя, достаточно просмотреть все символы в корзине на предмет хэш-кода этого имени. (Та же идея используется для общих хэш-таблиц Emacs, но это другой тип данных; см. &lt;a href=&quot;hash-tables#Hash-Tables&quot;&gt;Хеш-таблицы&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="28edbb235f4190b9615e134862d5947f7521701a" translate="yes" xml:space="preserve">
          <source>When the argument to &lt;code&gt;upcase-initials&lt;/code&gt; is a character, &lt;code&gt;upcase-initials&lt;/code&gt; has the same result as &lt;code&gt;upcase&lt;/code&gt;.</source>
          <target state="translated">Когда аргумент &lt;code&gt;upcase-initials&lt;/code&gt; является символом, &lt;code&gt;upcase-initials&lt;/code&gt; имеет тот же результат, что и &lt;code&gt;upcase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="903eba992e3e61c401fd6817aaa779226f6240ea" translate="yes" xml:space="preserve">
          <source>When the binding is &lt;code&gt;nil&lt;/code&gt;, it doesn&amp;rsquo;t constitute a definition but it does take precedence over a default binding or a binding in the parent keymap. On the other hand, a binding of &lt;code&gt;nil&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; override lower-precedence keymaps; thus, if the local map gives a binding of &lt;code&gt;nil&lt;/code&gt;, Emacs uses the binding from the global map.</source>
          <target state="translated">Когда привязка равна &lt;code&gt;nil&lt;/code&gt; , она не является определением, но имеет приоритет над привязкой по умолчанию или привязкой в ​​родительской таблице клавиш. С другой стороны, связывание &lt;code&gt;nil&lt;/code&gt; вовсе &lt;em&gt;не&lt;/em&gt; переопределять более низкий приоритет раскладок; таким образом, если локальная карта дает привязку &lt;code&gt;nil&lt;/code&gt; , Emacs использует привязку из глобальной карты.</target>
        </trans-unit>
        <trans-unit id="20571cabec1ca29dcf057e55fc1b7097d15497a2" translate="yes" xml:space="preserve">
          <source>When the buffer has many overlay strings (e.g., see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;before-string&lt;/a&gt;) that conceal some of the buffer text or &lt;code&gt;display&lt;/code&gt; properties that are strings, it is a good idea to use the &lt;code&gt;cursor&lt;/code&gt; property on these strings to cue the Emacs display about the places where to put the cursor while traversing these strings. This directly communicates to the display engine where the Lisp program wants to put the cursor, or where the user would expect the cursor, when point is located on some buffer position that is &amp;ldquo;covered&amp;rdquo; by the display or overlay string.</source>
          <target state="translated">Когда в буфере есть много оверлейных строк (например, см. &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Строку до&lt;/a&gt; ), которые скрывают некоторый текст буфера или свойства &lt;code&gt;display&lt;/code&gt; которые являются строками, рекомендуется использовать свойство &lt;code&gt;cursor&lt;/code&gt; в этих строках, чтобы указывать на отображение Emacs о местах куда поставить курсор при обходе этих строк. Это напрямую сообщает механизму отображения, где программа на Лиспе хочет поместить курсор или где пользователь ожидает курсор, когда точка находится в некоторой позиции буфера, которая &amp;laquo;покрыта&amp;raquo; отображаемой или наложенной строкой.</target>
        </trans-unit>
        <trans-unit id="20eff5623e92ef1e3650b5301a263aee2445dae2" translate="yes" xml:space="preserve">
          <source>When the characters before and after &lt;var&gt;pos&lt;/var&gt; are part of the same field, there is no doubt which field contains &lt;var&gt;pos&lt;/var&gt;: the one those characters both belong to. When &lt;var&gt;pos&lt;/var&gt; is at a boundary between fields, which field it belongs to depends on the stickiness of the &lt;code&gt;field&lt;/code&gt; properties of the two surrounding characters (see &lt;a href=&quot;sticky-properties#Sticky-Properties&quot;&gt;Sticky Properties&lt;/a&gt;). The field whose property would be inherited by text inserted at &lt;var&gt;pos&lt;/var&gt; is the field that contains &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">Когда символы до и после &lt;var&gt;pos&lt;/var&gt; являются частью одного и того же поля, нет сомнений в том, какое поле содержит &lt;var&gt;pos&lt;/var&gt; : то, к которому оба этих символа принадлежат. Когда &lt;var&gt;pos&lt;/var&gt; находится на границе между полями, какое поле принадлежит зависит от липкости &lt;code&gt;field&lt;/code&gt; свойств двух окружающих символов (см &lt;a href=&quot;sticky-properties#Sticky-Properties&quot;&gt;Липкие Свойства&lt;/a&gt; ). Поле, свойство которого будет унаследовано текстом, вставленным в &lt;var&gt;pos&lt;/var&gt; , - это поле, которое содержит &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c85287eeb03ccaab5ae0349af6b14a141439609b" translate="yes" xml:space="preserve">
          <source>When the code is byte-compiled, &lt;var&gt;function-object&lt;/var&gt; is compiled into a byte-code function object (see &lt;a href=&quot;byte-compilation#Byte-Compilation&quot;&gt;Byte Compilation&lt;/a&gt;).</source>
          <target state="translated">Когда код компилируется байтом, &lt;var&gt;function-object&lt;/var&gt; компилируется в объект функции байтового кода (см. &lt;a href=&quot;byte-compilation#Byte-Compilation&quot;&gt;Байтовая компиляция&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="16eb5d5db50ce3f76fa52383db660c768327699a" translate="yes" xml:space="preserve">
          <source>When the command &lt;code&gt;completion-at-point&lt;/code&gt; runs, it calls the functions in the list one by one, without any argument. Each function should return &lt;code&gt;nil&lt;/code&gt; unless it can and wants to take responsibility for the completion data for the text at point. Otherwise it should return a list of the following form:</source>
          <target state="translated">Когда выполняется команда &lt;code&gt;completion-at-point&lt;/code&gt; , она вызывает функции в списке одну за другой без каких-либо аргументов. Каждая функция должна возвращать &lt;code&gt;nil&lt;/code&gt; , если она не может и не хочет брать на себя ответственность за данные завершения для текста в точке. В противном случае он должен вернуть список следующего вида:</target>
        </trans-unit>
        <trans-unit id="cc9842d846c44bcb20fb609c0236af44d089fe37" translate="yes" xml:space="preserve">
          <source>When the data changes, you will want to update the text in the buffer. You can update all nodes by calling &lt;code&gt;ewoc-refresh&lt;/code&gt;, or just specific nodes using &lt;code&gt;ewoc-invalidate&lt;/code&gt;, or all nodes satisfying a predicate using &lt;code&gt;ewoc-map&lt;/code&gt;. Alternatively, you can delete invalid nodes using &lt;code&gt;ewoc-delete&lt;/code&gt; or &lt;code&gt;ewoc-filter&lt;/code&gt;, and add new nodes in their place. Deleting a node from an ewoc deletes its associated textual description from buffer, as well.</source>
          <target state="translated">Когда данные изменятся, вы захотите обновить текст в буфере. Вы можете обновить все узлы, вызвав &lt;code&gt;ewoc-refresh&lt;/code&gt; , или только определенные узлы, используя &lt;code&gt;ewoc-invalidate&lt;/code&gt; , или все узлы, удовлетворяющие предикату, используя &lt;code&gt;ewoc-map&lt;/code&gt; . В качестве альтернативы вы можете удалить недопустимые узлы, используя &lt;code&gt;ewoc-delete&lt;/code&gt; или &lt;code&gt;ewoc-filter&lt;/code&gt; , и добавить на их место новые узлы. Удаление узла из ewoc также удаляет связанное с ним текстовое описание из буфера.</target>
        </trans-unit>
        <trans-unit id="6388524eb3dc02caf6125a1a89d5a5245a8a2c27" translate="yes" xml:space="preserve">
          <source>When the debugger has been entered, the &lt;code&gt;debug-on-error&lt;/code&gt; variable is temporarily set according to &lt;code&gt;eval-expression-debug-on-error&lt;/code&gt;. If the latter variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;debug-on-error&lt;/code&gt; will temporarily be set to &lt;code&gt;t&lt;/code&gt;. This means that any further errors that occur while doing a debugging session will (by default) trigger another backtrace. If this is not what you want, you can either set &lt;code&gt;eval-expression-debug-on-error&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;, or set &lt;code&gt;debug-on-error&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; in &lt;code&gt;debugger-mode-hook&lt;/code&gt;.</source>
          <target state="translated">После входа в &lt;code&gt;debug-on-error&lt;/code&gt; переменная debug-on-error временно устанавливается в соответствии с &lt;code&gt;eval-expression-debug-on-error&lt;/code&gt; . Если последняя переменная не равна &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;debug-on-error&lt;/code&gt; будет временно установлена ​​на &lt;code&gt;t&lt;/code&gt; . Это означает, что любые дальнейшие ошибки, возникающие при выполнении сеанса отладки, вызовут (по умолчанию) другую обратную трассировку. Если это не то , что вы хотите, вы можете установить &lt;code&gt;eval-expression-debug-on-error&lt;/code&gt; к &lt;code&gt;nil&lt;/code&gt; , или набор &lt;code&gt;debug-on-error&lt;/code&gt; к &lt;code&gt;nil&lt;/code&gt; в &lt;code&gt;debugger-mode-hook&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="116b487d24afef3c502923ab2671a73c01141758" translate="yes" xml:space="preserve">
          <source>When the debugger is entered, it displays the previously selected buffer in one window and a buffer named</source>
          <target state="translated">При вводе отладчика в одном окне отображается ранее выбранный буфер и буфер с именем</target>
        </trans-unit>
        <trans-unit id="1fc26a4083b90b099be3cf1a7e543139a468f085" translate="yes" xml:space="preserve">
          <source>When the developers of X labeled software distributors as &amp;ldquo;vendors&amp;rdquo;, they showed their false assumption that no system could ever be developed and distributed noncommercially.</source>
          <target state="translated">Когда разработчики X назвали дистрибьюторов программного обеспечения &amp;laquo;поставщиками&amp;raquo;, они продемонстрировали свое ложное предположение, что никакая система никогда не может быть разработана и распространена некоммерчески.</target>
        </trans-unit>
        <trans-unit id="868aa93cf62b554bd54442f30c7fbe16cecc3883" translate="yes" xml:space="preserve">
          <source>When the element-type is a &lt;code&gt;choice&lt;/code&gt;, you use &lt;code&gt;:inline&lt;/code&gt; not in the &lt;code&gt;choice&lt;/code&gt; itself, but in (some of) the alternatives of the &lt;code&gt;choice&lt;/code&gt;. For example, to match a list which must start with a file name, followed either by the symbol &lt;code&gt;t&lt;/code&gt; or two strings, use this customization type:</source>
          <target state="translated">Когда тип элемента - это &lt;code&gt;choice&lt;/code&gt; , вы используете &lt;code&gt;:inline&lt;/code&gt; не в самом &lt;code&gt;choice&lt;/code&gt; , а в (некоторых) альтернативах &lt;code&gt;choice&lt;/code&gt; . Например, чтобы сопоставить список, который должен начинаться с имени файла, за которым следует либо символ &lt;code&gt;t&lt;/code&gt; , либо две строки, используйте этот тип настройки:</target>
        </trans-unit>
        <trans-unit id="50f85733da0cca31724a927061810bc233cc29b7" translate="yes" xml:space="preserve">
          <source>When the first argument is &lt;code&gt;error&lt;/code&gt;, the debugger indicates that it is being entered because an error or &lt;code&gt;quit&lt;/code&gt; was signaled and not handled, by displaying &amp;lsquo;</source>
          <target state="translated">Когда первым аргументом является &lt;code&gt;error&lt;/code&gt; , отладчик указывает, что он вводится, потому что ошибка или &lt;code&gt;quit&lt;/code&gt; был сигнализирован и не обработан, отображая '</target>
        </trans-unit>
        <trans-unit id="4aaff6bd65dbb250e1c7c10b992a01f561f55200" translate="yes" xml:space="preserve">
          <source>When the first argument is &lt;code&gt;exit&lt;/code&gt;, it indicates the exit of a stack frame previously marked to invoke the debugger on exit. The second argument given to &lt;code&gt;debug&lt;/code&gt; in this case is the value being returned from the frame. The debugger displays &amp;lsquo;</source>
          <target state="translated">Когда первым аргументом является &lt;code&gt;exit&lt;/code&gt; , он указывает на выход из кадра стека, ранее отмеченного для вызова отладчика при выходе. Второй аргумент для &lt;code&gt;debug&lt;/code&gt; в этом случае - это значение, возвращаемое из кадра. Отладчик отображает '</target>
        </trans-unit>
        <trans-unit id="2d2b82d4695d852dec34c98cac550f0643b2cad0" translate="yes" xml:space="preserve">
          <source>When the first argument is &lt;code&gt;t&lt;/code&gt;, this indicates a call to &lt;code&gt;debug&lt;/code&gt; due to evaluation of a function call form when &lt;code&gt;debug-on-next-call&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. The debugger displays &amp;lsquo;</source>
          <target state="translated">Когда первым аргументом является &lt;code&gt;t&lt;/code&gt; , это указывает на вызов &lt;code&gt;debug&lt;/code&gt; из-за оценки формы вызова функции, когда &lt;code&gt;debug-on-next-call&lt;/code&gt; не равно &lt;code&gt;nil&lt;/code&gt; . Отладчик отображает '</target>
        </trans-unit>
        <trans-unit id="437fb785eaff0110643951108b4c2601385f2eda" translate="yes" xml:space="preserve">
          <source>When the function &lt;code&gt;set-visited-file-name&lt;/code&gt; is called interactively, it prompts for &lt;var&gt;filename&lt;/var&gt; in the minibuffer.</source>
          <target state="translated">Когда функция &lt;code&gt;set-visited-file-name&lt;/code&gt; вызывается в интерактивном режиме, она запрашивает &lt;var&gt;filename&lt;/var&gt; в минибуфере.</target>
        </trans-unit>
        <trans-unit id="88c8fa590b3fc15bf32a65bc9619b93076007948" translate="yes" xml:space="preserve">
          <source>When the key sequence consists of multiple events, key lookup processes the events sequentially: the binding of the first event is found, and must be a keymap; then the second event&amp;rsquo;s binding is found in that keymap, and so on until all the events in the key sequence are used up. (The binding thus found for the last event may or may not be a keymap.) Thus, the process of key lookup is defined in terms of a simpler process for looking up a single event in a keymap. How that is done depends on the type of object associated with the event in that keymap.</source>
          <target state="translated">Когда последовательность ключей состоит из нескольких событий, поиск ключей обрабатывает события последовательно: обнаруживается привязка первого события, и это должна быть таблица ключей; тогда в этой раскладке будет найдена привязка второго события, и так до тех пор, пока не будут израсходованы все события в ключевой последовательности. (Привязка, найденная таким образом для последнего события, может быть или не быть таблицей ключей.) Таким образом, процесс поиска ключа определяется в терминах более простого процесса поиска одного события в таблице ключей. Как это делается, зависит от типа объекта, связанного с событием в этой раскладке.</target>
        </trans-unit>
        <trans-unit id="c78aa7d01e0f3dda797421d0f1e715ec1fc8cab9" translate="yes" xml:space="preserve">
          <source>When the last buffer position scanned was the (potential) first character of a two character construct (comment delimiter or escaped/char-quoted character pair), the &lt;var&gt;syntax-code&lt;/var&gt; (see &lt;a href=&quot;syntax-table-internals#Syntax-Table-Internals&quot;&gt;Syntax Table Internals&lt;/a&gt;) of that position. Otherwise &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Когда последняя отсканированная позиция буфера была (потенциальным) первым символом двухсимвольной конструкции (разделитель комментария или пара символов с экранированием / кавычками), &lt;var&gt;syntax-code&lt;/var&gt; (см. &lt;a href=&quot;syntax-table-internals#Syntax-Table-Internals&quot;&gt;Внутреннее устройство таблицы синтаксиса&lt;/a&gt; ) этой позиции. В противном случае &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="825967648fe4b8b05ea065a8874cda93ed1c6b99" translate="yes" xml:space="preserve">
          <source>When the length of a field is not fixed, it typically depends on the value of a preceding field. In this case, the length &lt;var&gt;len&lt;/var&gt; can be given either as a list &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; ...)&lt;/code&gt; identifying a &lt;em&gt;field name&lt;/em&gt; in the format specified for &lt;code&gt;bindat-get-field&lt;/code&gt; below, or by an expression &lt;code&gt;(eval &lt;var&gt;form&lt;/var&gt;)&lt;/code&gt; where &lt;var&gt;form&lt;/var&gt; should evaluate to an integer, specifying the field length.</source>
          <target state="translated">Когда длина поля не фиксирована, она обычно зависит от значения предыдущего поля. В этом случае длина &lt;var&gt;len&lt;/var&gt; может быть задана либо в виде списка &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; ...)&lt;/code&gt; определяющего &lt;em&gt;имя поля&lt;/em&gt; в формате, указанном для &lt;code&gt;bindat-get-field&lt;/code&gt; ниже, либо в виде выражения &lt;code&gt;(eval &lt;var&gt;form&lt;/var&gt;)&lt;/code&gt; котором &lt;var&gt;form&lt;/var&gt; должна оцениваться как целое число, определяющее длину поля.</target>
        </trans-unit>
        <trans-unit id="9aa6539eef0b2917849bccf8335e069d4701fcaf" translate="yes" xml:space="preserve">
          <source>When the list reaches &lt;code&gt;kill-ring-max&lt;/code&gt; entries in length, adding a new entry automatically deletes the last entry.</source>
          <target state="translated">Когда список достигает длины &lt;code&gt;kill-ring-max&lt;/code&gt; , добавление новой записи автоматически удаляет последнюю запись.</target>
        </trans-unit>
        <trans-unit id="0f7bf8623de177bc6d5806aaa805e68bb56585b7" translate="yes" xml:space="preserve">
          <source>When the minibuffer is active, it is the next window if the selected window is the one at the bottom right corner. In this case, &lt;code&gt;scroll-other-window&lt;/code&gt; attempts to scroll the minibuffer. If the minibuffer contains just one line, it has nowhere to scroll to, so the line reappears after the echo area momentarily displays the message &amp;lsquo;</source>
          <target state="translated">Когда минибуфер активен, это следующее окно, если выбрано окно в правом нижнем углу. В этом случае &lt;code&gt;scroll-other-window&lt;/code&gt; пытается прокрутить минибуфер. Если минибуфер содержит только одну строку, ему некуда прокручивать, поэтому строка снова появляется после того, как в эхо-области на мгновение отображается сообщение '</target>
        </trans-unit>
        <trans-unit id="b511155a847eb0dd269cb9b74a381ee567232762" translate="yes" xml:space="preserve">
          <source>When the minor mode &lt;code&gt;cursor-intangible-mode&lt;/code&gt; is turned on, point is moved away from any position that has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;cursor-intangible&lt;/code&gt; property, just before redisplay happens.</source>
          <target state="translated">Когда включен второстепенный режим &lt;code&gt;cursor-intangible-mode&lt;/code&gt; , точка перемещается из любой позиции, которая имеет &lt;code&gt;nil&lt;/code&gt; свойство &lt;code&gt;cursor-intangible&lt;/code&gt; , непосредственно перед повторным отображением.</target>
        </trans-unit>
        <trans-unit id="e67379465709e25367fcee329d3d8b8588cea3df" translate="yes" xml:space="preserve">
          <source>When the mode line refers to a variable which does not have a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;risky-local-variable&lt;/code&gt; property, any text properties given or specified within that variable&amp;rsquo;s values are ignored. This is because such properties could otherwise specify functions to be called, and those functions could come from file local variables.</source>
          <target state="translated">Когда строка режима ссылается на переменную, которая не имеет &lt;code&gt;nil&lt;/code&gt; свойства &lt;code&gt;risky-local-variable&lt;/code&gt; , любые текстовые свойства, заданные или указанные в значениях этой переменной, игнорируются. Это связано с тем, что в противном случае такие свойства могли бы указывать функции, которые должны быть вызваны, и эти функции могли бы поступать из локальных переменных файла.</target>
        </trans-unit>
        <trans-unit id="867868a0f1c45320b706ebd1ebe235b75366cb8a" translate="yes" xml:space="preserve">
          <source>When the mouse pointer lies on a hot-spot area of an image, the &lt;var&gt;plist&lt;/var&gt; of that hot-spot is consulted; if it contains a &lt;code&gt;help-echo&lt;/code&gt; property, that defines a tool-tip for the hot-spot, and if it contains a &lt;code&gt;pointer&lt;/code&gt; property, that defines the shape of the mouse cursor when it is on the hot-spot. See &lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;Pointer Shape&lt;/a&gt;, for available pointer shapes.</source>
          <target state="translated">Когда указатель мыши находится на активной области изображения, &lt;var&gt;plist&lt;/var&gt; список этой горячей точки; если он содержит свойство &lt;code&gt;help-echo&lt;/code&gt; , которое определяет всплывающую подсказку для активной точки, и если оно содержит свойство &lt;code&gt;pointer&lt;/code&gt; , которое определяет форму курсора мыши, когда он находится в горячей точке. См. В разделе &lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;Форма&lt;/a&gt; указателя доступные формы указателя.</target>
        </trans-unit>
        <trans-unit id="72113dbbbb848882544104dd72c42be0c0e260c9" translate="yes" xml:space="preserve">
          <source>When the name of the terminal type contains a hyphen or underscore, and no library is found whose name is identical to the terminal&amp;rsquo;s name, Emacs strips from the terminal&amp;rsquo;s name the last hyphen or underscore and everything that follows it, and tries again. This process is repeated until Emacs finds a matching library, or until there are no more hyphens or underscores in the name (i.e., there is no terminal-specific library). For example, if the terminal name is &amp;lsquo;</source>
          <target state="translated">Когда имя типа терминала содержит дефис или подчеркивание и не найдена библиотека, имя которой идентично имени терминала, Emacs удаляет из имени терминала последний дефис или подчеркивание и все, что следует за ним, и пытается снова. Этот процесс повторяется до тех пор, пока Emacs не найдет подходящую библиотеку или пока в имени не останется дефисов или подчеркиваний (т. Е. Нет библиотеки, специфичной для терминала). Например, если имя терминала - '</target>
        </trans-unit>
        <trans-unit id="08f7c1705d495e69780bc2bcc50f97a26e1059c3" translate="yes" xml:space="preserve">
          <source>When the optional argument &lt;var&gt;no-properties&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function strips text properties from the return value.</source>
          <target state="translated">Когда необязательный аргумент &lt;var&gt;no-properties&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , эта функция удаляет текстовые свойства из возвращаемого значения.</target>
        </trans-unit>
        <trans-unit id="1b74a1907b8b052e24ae5b68dcf685e26d16cb4b" translate="yes" xml:space="preserve">
          <source>When the paragraph already has two lines, the function next looks for a prefix candidate on the second line, in just the same way it did for the first line. If it doesn&amp;rsquo;t find one, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Когда в абзаце уже есть две строки, функция выполняет поиск кандидата на префикс во второй строке точно так же, как это было для первой строки. Если не находит, возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f154952d92c35cb0658c37cf9dfc68160ea96f4" translate="yes" xml:space="preserve">
          <source>When the selected window is a member of a group of windows, this function returns a list of the windows in the group, ordered such that the first window in the list is displaying the earliest part of the buffer, and so on. Otherwise the function returns a list containing just the selected window.</source>
          <target state="translated">Когда выбранное окно является членом группы окон,эта функция возвращает список окон в группе,упорядоченный таким образом,чтобы в первом окне в списке отображалась самая ранняя часть буфера,и так далее.В противном случае функция возвращает список,содержащий только выбранное окно.</target>
        </trans-unit>
        <trans-unit id="7c1a91e1facfa16f4d1f57d01bd761ee745cfffc" translate="yes" xml:space="preserve">
          <source>When the selected window is the minibuffer, the next window is normally the leftmost one immediately above it. You can specify a different window to scroll, when the minibuffer is selected, by setting the variable &lt;code&gt;minibuffer-scroll-window&lt;/code&gt;. This variable has no effect when any other window is selected. When it is non-&lt;code&gt;nil&lt;/code&gt; and the minibuffer is selected, it takes precedence over &lt;code&gt;other-window-scroll-buffer&lt;/code&gt;. See &lt;a href=&quot;minibuffer-misc#Definition-of-minibuffer_002dscroll_002dwindow&quot;&gt;Definition of minibuffer-scroll-window&lt;/a&gt;.</source>
          <target state="translated">Когда выбранное окно является минибуфером, следующим окном обычно является крайнее левое окно непосредственно над ним. Вы можете указать другое окно для прокрутки, когда минибуфер выбран, установив переменную &lt;code&gt;minibuffer-scroll-window&lt;/code&gt; . Эта переменная не действует, когда выбрано любое другое окно. Когда он не равен &lt;code&gt;nil&lt;/code&gt; и выбран минибуфер, он имеет приоритет над &lt;code&gt;other-window-scroll-buffer&lt;/code&gt; . См. &lt;a href=&quot;minibuffer-misc#Definition-of-minibuffer_002dscroll_002dwindow&quot;&gt;Определение minibuffer-scroll-window&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65b73cca993f2fe1cb5f748b78ef4aa722107d7b" translate="yes" xml:space="preserve">
          <source>When the session manager restarts a suspended session, it directs these applications to individually reload their saved state. It does this by specifying a special command-line argument that says what saved session to restore. For Emacs, this argument is &amp;lsquo;</source>
          <target state="translated">Когда диспетчер сеансов перезапускает приостановленный сеанс, он дает указание этим приложениям по отдельности перезагружать свое сохраненное состояние. Это достигается путем указания специального аргумента командной строки, который сообщает, какой сохраненный сеанс нужно восстановить. Для Emacs это аргумент '</target>
        </trans-unit>
        <trans-unit id="4e0bfac048c5fbdf0664b55932d085da1a85dae9" translate="yes" xml:space="preserve">
          <source>When the strings have different lengths, and they match up to the length of &lt;var&gt;string1&lt;/var&gt;, then the result is &lt;code&gt;t&lt;/code&gt;. If they match up to the length of &lt;var&gt;string2&lt;/var&gt;, the result is &lt;code&gt;nil&lt;/code&gt;. A string of no characters is less than any other string.</source>
          <target state="translated">Если строки имеют разную длину и совпадают до длины &lt;var&gt;string1&lt;/var&gt; , результатом будет &lt;code&gt;t&lt;/code&gt; . Если они совпадают до длины &lt;var&gt;string2&lt;/var&gt; , результат равен &lt;code&gt;nil&lt;/code&gt; . Строка без символов меньше любой другой строки.</target>
        </trans-unit>
        <trans-unit id="af0300acfd03cbaa9a0a6bf99f2ac8060ee62768" translate="yes" xml:space="preserve">
          <source>When the syntax table is not flexible enough to specify the syntax of a language, you can override the syntax table for specific character occurrences in the buffer, by applying a &lt;code&gt;syntax-table&lt;/code&gt; text property. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;, for how to apply text properties.</source>
          <target state="translated">Если таблица синтаксиса недостаточно гибкая, чтобы указать синтаксис языка, вы можете переопределить таблицу синтаксиса для определенных вхождений символов в буфере, применив свойство текста &lt;code&gt;syntax-table&lt;/code&gt; . См. &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Свойства текста&lt;/a&gt; , чтобы узнать, как применить свойства текста.</target>
        </trans-unit>
        <trans-unit id="1db00d52e9bbcfea5035cd408802b3a0306b3dfc" translate="yes" xml:space="preserve">
          <source>When the user calls a completion command like &lt;code&gt;minibuffer-complete&lt;/code&gt; (see &lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;Completion Commands&lt;/a&gt;), Emacs looks for the first style listed in &lt;code&gt;completion-styles&lt;/code&gt; and calls its &lt;var&gt;try-completion&lt;/var&gt; function. If this function returns &lt;code&gt;nil&lt;/code&gt;, Emacs moves to the next listed completion style and calls its &lt;var&gt;try-completion&lt;/var&gt; function, and so on until one of the &lt;var&gt;try-completion&lt;/var&gt; functions successfully performs completion and returns a non-&lt;code&gt;nil&lt;/code&gt; value. A similar procedure is used for listing completions, via the &lt;var&gt;all-completions&lt;/var&gt; functions.</source>
          <target state="translated">Когда пользователь вызывает команду завершения, такую ​​как &lt;code&gt;minibuffer-complete&lt;/code&gt; (см. &lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;Команды завершения&lt;/a&gt; ), Emacs ищет первый стиль, указанный в &lt;code&gt;completion-styles&lt;/code&gt; и вызывает свою функцию &lt;var&gt;try-completion&lt;/var&gt; . Если эта функция возвращает &lt;code&gt;nil&lt;/code&gt; , Emacs переходит к следующему перечисленному стилю завершения и вызывает свою функцию &lt;var&gt;try-completion&lt;/var&gt; , и так далее, пока одна из функций &lt;var&gt;try-completion&lt;/var&gt; успешно не выполнит завершение и не вернет значение, отличное от &lt;code&gt;nil&lt;/code&gt; . Аналогичная процедура используется для перечисления завершений с помощью функций &lt;var&gt;all-completions&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="14f683f2a85a22a1e45fced6299295b17164ca51" translate="yes" xml:space="preserve">
          <source>When the user has found the desired alternative from the menu, he or she should type the corresponding character&amp;mdash;the one whose binding is that alternative.</source>
          <target state="translated">Когда пользователь нашел желаемую альтернативу в меню, он или она должны ввести соответствующий символ - тот, чья привязка является этой альтернативой.</target>
        </trans-unit>
        <trans-unit id="9317c688985f82ebf84721bb442636b2f8139dd1" translate="yes" xml:space="preserve">
          <source>When the user is expected to enter input in the process buffer for transmission to the process, the process marker separates the new input from previous output.</source>
          <target state="translated">Когда пользователь должен ввести вход в буфер процесса для передачи в процесс,маркер процесса отделяет новый вход от предыдущего выхода.</target>
        </trans-unit>
        <trans-unit id="ac010bcd028637555de6cf7eabeafb1cd4753b5c" translate="yes" xml:space="preserve">
          <source>When the user performs a double click, Emacs generates first an ordinary click event, and then a double-click event. Therefore, you must design the command binding of the double click event to assume that the single-click command has already run. It must produce the desired results of a double click, starting from the results of a single click.</source>
          <target state="translated">Когда пользователь выполняет двойной щелчок,Emacs генерирует сначала обычное событие щелчка,а затем событие двойного щелчка.Поэтому вы должны спроектировать привязку команды к событию двойного щелчка,чтобы предположить,что команда двойного щелчка уже выполнена.Она должна давать желаемые результаты двойного щелчка,начиная с результатов одиночного щелчка.</target>
        </trans-unit>
        <trans-unit id="42c946654a87e7d3b90db47be73a1375093f4282" translate="yes" xml:space="preserve">
          <source>When the user presses a mouse button and releases it at the same location, that generates a &lt;em&gt;click&lt;/em&gt; event. All mouse click event share the same format:</source>
          <target state="translated">Когда пользователь нажимает кнопку мыши и отпускает ее в том же месте, возникает событие &lt;em&gt;щелчка&lt;/em&gt; . Все события щелчка мыши имеют один и тот же формат:</target>
        </trans-unit>
        <trans-unit id="faec751060a4a3168faff64c732fb50f43804cfd" translate="yes" xml:space="preserve">
          <source>When the user responds with &lt;var&gt;char&lt;/var&gt;, &lt;code&gt;map-y-or-n-p&lt;/code&gt; calls &lt;var&gt;function&lt;/var&gt;. If it returns non-&lt;code&gt;nil&lt;/code&gt;, the object is considered acted upon, and &lt;code&gt;map-y-or-n-p&lt;/code&gt; advances to the next object in &lt;var&gt;list&lt;/var&gt;. If it returns &lt;code&gt;nil&lt;/code&gt;, the prompt is repeated for the same object.</source>
          <target state="translated">Когда пользователь отвечает &lt;var&gt;char&lt;/var&gt; , &lt;code&gt;map-y-or-n-p&lt;/code&gt; вызывает &lt;var&gt;function&lt;/var&gt; . Если он возвращает не &lt;code&gt;nil&lt;/code&gt; , объект считается обработанным, и &lt;code&gt;map-y-or-n-p&lt;/code&gt; переходит к следующему объекту в &lt;var&gt;list&lt;/var&gt; . Если он возвращает &lt;code&gt;nil&lt;/code&gt; , запрос повторяется для того же объекта.</target>
        </trans-unit>
        <trans-unit id="741ae86db3b85a667d27d7e6c6aae8b804c436b2" translate="yes" xml:space="preserve">
          <source>When the user supplies input, Emacs becomes non-idle while executing the input. Then it becomes idle again, and all the idle timers that are set up to repeat will subsequently run another time, one by one.</source>
          <target state="translated">Когда пользователь подает входные данные,Emacs во время выполнения входных данных становится неудобным.Затем он снова становится нерабочим,и все таймеры,которые настроены на повтор,впоследствии будут запущены в другой раз,один за другим.</target>
        </trans-unit>
        <trans-unit id="89716f5cb5eeb5b8c85a3590d36ec0859f4a7c29" translate="yes" xml:space="preserve">
          <source>When the user types a command to exit the minibuffer, &lt;code&gt;read-from-minibuffer&lt;/code&gt; constructs the return value from the text in the minibuffer. Normally it returns a string containing that text. However, if &lt;var&gt;read&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;read-from-minibuffer&lt;/code&gt; reads the text and returns the resulting Lisp object, unevaluated. (See &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Input Functions&lt;/a&gt;, for information about reading.)</source>
          <target state="translated">Когда пользователь вводит команду выхода из минибуфера, &lt;code&gt;read-from-minibuffer&lt;/code&gt; создает возвращаемое значение из текста в минибуфере. Обычно он возвращает строку, содержащую этот текст. Однако, если &lt;var&gt;read&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;read-from-minibuffer&lt;/code&gt; читает текст и возвращает полученный объект Lisp без оценки. (Для получения информации о чтении см. &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Функции ввода&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="97f45c4ec31296ee422fe0b971089f7631eaa365" translate="yes" xml:space="preserve">
          <source>When the variable &lt;code&gt;cursor-sensor-inhibit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the &lt;code&gt;cursor-intangible&lt;/code&gt; property and the &lt;code&gt;cursor-sensor-functions&lt;/code&gt; property (described below) are ignored.</source>
          <target state="translated">Когда переменная &lt;code&gt;cursor-sensor-inhibit&lt;/code&gt; равна &lt;code&gt;nil&lt;/code&gt; , свойство &lt;code&gt;cursor-intangible&lt;/code&gt; и свойство &lt;code&gt;cursor-sensor-functions&lt;/code&gt; (описанные ниже) игнорируются.</target>
        </trans-unit>
        <trans-unit id="2dde0528a1289ac3a5932cd0bf44f453463d97b7" translate="yes" xml:space="preserve">
          <source>When the variable &lt;code&gt;cursor-sensor-inhibit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the &lt;code&gt;cursor-sensor-functions&lt;/code&gt; property is ignored.</source>
          <target state="translated">Когда переменная &lt;code&gt;cursor-sensor-inhibit&lt;/code&gt; равна &lt;code&gt;nil&lt;/code&gt; , свойство &lt;code&gt;cursor-sensor-functions&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="6144c35a4d6dfbb14e5c9c91910a7a2deb2b5670" translate="yes" xml:space="preserve">
          <source>When the variable &lt;code&gt;inhibit-point-motion-hooks&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; (as it is by default), the &lt;code&gt;intangible&lt;/code&gt; property is ignored.</source>
          <target state="translated">Когда переменная &lt;code&gt;inhibit-point-motion-hooks&lt;/code&gt; равна &lt;code&gt;nil&lt;/code&gt; (как по умолчанию), &lt;code&gt;intangible&lt;/code&gt; свойство игнорируется.</target>
        </trans-unit>
        <trans-unit id="ba305369b4288ce358505822a5c384bb32983af6" translate="yes" xml:space="preserve">
          <source>When these functions are called, &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; is bound to non-&lt;code&gt;nil&lt;/code&gt;. If the functions modify the buffer, you might want to bind &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;, so as to cause the change hooks to run for these modifications. However, doing this may call your own change hook recursively, so be sure to prepare for that.</source>
          <target state="translated">Когда эти функции вызываются, &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; привязываются к ненулевому &lt;code&gt;nil&lt;/code&gt; . Если функции модифицируют буфер, вы можете захотеть привязать &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; к &lt;code&gt;nil&lt;/code&gt; , чтобы заставить обработчики изменений запускаться для этих изменений. Однако это может вызвать рекурсивный вызов вашей собственной ловушки изменений, так что будьте готовы к этому.</target>
        </trans-unit>
        <trans-unit id="db50335fab79153d655d1d69d82d0d93bfc61107" translate="yes" xml:space="preserve">
          <source>When these functions are called, &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; is bound to non-&lt;code&gt;nil&lt;/code&gt;. If the functions modify the buffer, you might want to bind &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;, so as to cause the change hooks to run for these modifications. However, doing this may call your own change hook recursively, so be sure to prepare for that. See &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;.</source>
          <target state="translated">Когда эти функции вызываются, &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; привязываются к ненулевому &lt;code&gt;nil&lt;/code&gt; . Если функции модифицируют буфер, вы можете захотеть привязать &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; к &lt;code&gt;nil&lt;/code&gt; , чтобы заставить обработчики изменений запускаться для этих изменений. Однако это может вызвать рекурсивный вызов вашей собственной ловушки изменений, так что будьте готовы к этому. См. &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Перехватчики изменений&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6b15446f7a271c0367154a83a6d06ed034256569" translate="yes" xml:space="preserve">
          <source>When this command is called interactively, it prompts for &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">Когда эта команда вызывается в интерактивном режиме, она запрашивает &lt;var&gt;filename&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="fed0c479d83fce5cc1e10bf3f041d1165c0811c5" translate="yes" xml:space="preserve">
          <source>When this function is called during the execution of a &lt;code&gt;delay-mode-hooks&lt;/code&gt; form, it does not run the hooks or &lt;code&gt;hack-local-variables&lt;/code&gt; or evaluate the forms immediately. Instead, it arranges for the next call to &lt;code&gt;run-mode-hooks&lt;/code&gt; to run them.</source>
          <target state="translated">Когда эта функция вызывается во время выполнения формы &lt;code&gt;delay-mode-hooks&lt;/code&gt; , она не запускает ловушки или &lt;code&gt;hack-local-variables&lt;/code&gt; и не оценивает формы немедленно. Вместо этого он организует следующий вызов &lt;code&gt;run-mode-hooks&lt;/code&gt; чтобы запустить их.</target>
        </trans-unit>
        <trans-unit id="cba05056187d43b5da8624443810218851db7488" translate="yes" xml:space="preserve">
          <source>When this function is called interactively, &lt;var&gt;position&lt;/var&gt; is the numeric prefix argument, if provided; otherwise it is read from the minibuffer.</source>
          <target state="translated">Когда эта функция вызывается в интерактивном режиме, &lt;var&gt;position&lt;/var&gt; является аргументом числового префикса, если он указан; в противном случае он читается из минибуфера.</target>
        </trans-unit>
        <trans-unit id="596b547820cdaa6f0bcdaac5093b2c88521ba9b0" translate="yes" xml:space="preserve">
          <source>When this is &lt;code&gt;bidi&lt;/code&gt;, the drawing order is reversed if and only if the value of &lt;code&gt;bidi-paragraph-direction&lt;/code&gt; (see &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;) is &lt;code&gt;right-to-left&lt;/code&gt; in the buffer displayed in the window most recently selected within the main window area of this frame. Sometimes that window may be hard to find, so heuristics are used to avoid that the drawing order changes inadvertently when another window gets selected.</source>
          <target state="translated">Когда это &lt;code&gt;bidi&lt;/code&gt; , порядок рисования меняется на противоположный тогда и только тогда, когда значение &lt;code&gt;bidi-paragraph-direction&lt;/code&gt; &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;отображения&lt;/a&gt; (см. Двунаправленное отображение ) находится &lt;code&gt;right-to-left&lt;/code&gt; в буфере, отображаемом в окне, которое было выбрано последним в области главного окна этого окна. Рамка. Иногда это окно бывает трудно найти, поэтому используются эвристики, чтобы избежать непреднамеренного изменения порядка рисования при выборе другого окна.</target>
        </trans-unit>
        <trans-unit id="3dad205ad2aecabde94354eb00231e56ad99a1c5" translate="yes" xml:space="preserve">
          <source>When this is called with &lt;code&gt;(inc x)&lt;/code&gt;, the argument &lt;var&gt;var&lt;/var&gt; is the symbol &lt;code&gt;x&lt;/code&gt;&amp;mdash;&lt;em&gt;not&lt;/em&gt; the &lt;em&gt;value&lt;/em&gt; of &lt;code&gt;x&lt;/code&gt;, as it would be in a function. The body of the macro uses this to construct the expansion, which is &lt;code&gt;(setq x (1+ x))&lt;/code&gt;. Once the macro definition returns this expansion, Lisp proceeds to evaluate it, thus incrementing &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Когда это вызывается с &lt;code&gt;(inc x)&lt;/code&gt; , аргумент &lt;var&gt;var&lt;/var&gt; является символом &lt;code&gt;x&lt;/code&gt; - &lt;em&gt;не &lt;/em&gt;&lt;em&gt;значение&lt;/em&gt; из &lt;code&gt;x&lt;/code&gt; , как это было бы в функции. В теле макроса это используется для построения раскрытия, которое имеет вид &lt;code&gt;(setq x (1+ x))&lt;/code&gt; . Как только определение макроса возвращает это расширение, Lisp продолжает его вычислять, увеличивая таким образом &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70ec9983d5d4c52908190215a3df6033c89819ff" translate="yes" xml:space="preserve">
          <source>When this is non-&lt;code&gt;nil&lt;/code&gt;, Emacs displays a special glyph in the fringe of each empty line at the end of the buffer, on graphical displays. See &lt;a href=&quot;fringes#Fringes&quot;&gt;Fringes&lt;/a&gt;. This variable is automatically buffer-local in every buffer.</source>
          <target state="translated">Если он не равен &lt;code&gt;nil&lt;/code&gt; , Emacs отображает специальный глиф на краю каждой пустой строки в конце буфера на графических дисплеях. См. &lt;a href=&quot;fringes#Fringes&quot;&gt;Fringes&lt;/a&gt; . Эта переменная автоматически является локальной в каждом буфере.</target>
        </trans-unit>
        <trans-unit id="538e76672c08a7e7749673909c0c44f11608e76b" translate="yes" xml:space="preserve">
          <source>When this is non-&lt;code&gt;nil&lt;/code&gt;, all macro arguments will be instrumented in the generated code. For any macro, an &lt;code&gt;edebug-form-spec&lt;/code&gt; overrides this option. So to specify exceptions for macros that have some arguments evaluated and some not, use &lt;code&gt;def-edebug-spec&lt;/code&gt; to specify an &lt;code&gt;edebug-form-spec&lt;/code&gt;.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , все аргументы макроса будут инструментированы в сгенерированном коде. Для любого макроса &lt;code&gt;edebug-form-spec&lt;/code&gt; отменяет этот параметр. Таким образом, чтобы указать исключения для макросов, некоторые аргументы которых оцениваются, а некоторые нет, используйте &lt;code&gt;def-edebug-spec&lt;/code&gt; , чтобы указать &lt;code&gt;edebug-form-spec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de2b4a24778e77b285b4c2c9f14744354940bf00" translate="yes" xml:space="preserve">
          <source>When this is set non-&lt;code&gt;nil&lt;/code&gt;, an abbrev entered entirely in upper case is expanded using all upper case. Otherwise, an abbrev entered entirely in upper case is expanded by capitalizing each word of the expansion.</source>
          <target state="translated">Если установлено значение, отличное от &lt;code&gt;nil&lt;/code&gt; , сокращение, введенное полностью в верхнем регистре, раскрывается полностью в верхнем регистре. В противном случае сокращение, введенное полностью в верхнем регистре, раскрывается с заглавной буквы в каждом слове расширения.</target>
        </trans-unit>
        <trans-unit id="41d0968ffa34e55de40f328d2e63e3f268a1d1c3" translate="yes" xml:space="preserve">
          <source>When this keyword is given, the &lt;var&gt;title&lt;/var&gt; string of the actions is interpreted as icon name.</source>
          <target state="translated">Когда задано это ключевое слово, строка &lt;var&gt;title&lt;/var&gt; действий интерпретируется как имя значка.</target>
        </trans-unit>
        <trans-unit id="d4c8a243d1bb8a9bda4f06cc416116ce664c6329" translate="yes" xml:space="preserve">
          <source>When this minor mode is enabled, windows showing a temporary buffer are automatically resized to fit their buffer&amp;rsquo;s contents.</source>
          <target state="translated">Когда этот второстепенный режим включен, окна, показывающие временный буфер, автоматически изменяют размер, чтобы соответствовать содержимому их буфера.</target>
        </trans-unit>
        <trans-unit id="7aa9f8f7d9d30e1064e24ad0694a6eb136e28b2b" translate="yes" xml:space="preserve">
          <source>When this obsolete variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;point-left&lt;/code&gt; and &lt;code&gt;point-entered&lt;/code&gt; hooks are not run, and the &lt;code&gt;intangible&lt;/code&gt; property has no effect. Do not set this variable globally; bind it with &lt;code&gt;let&lt;/code&gt;. Since the affected properties are obsolete, this variable&amp;rsquo;s default value is &lt;code&gt;t&lt;/code&gt;, to effectively disable them.</source>
          <target state="translated">Когда эта устаревшая переменная не равна &lt;code&gt;nil&lt;/code&gt; , хуки &amp;laquo; &lt;code&gt;point-left&lt;/code&gt; и &amp;laquo; &lt;code&gt;point-entered&lt;/code&gt; не запускаются, и свойство &lt;code&gt;intangible&lt;/code&gt; не действует. Не устанавливайте эту переменную глобально; &lt;code&gt;let&lt;/code&gt; его с let . Поскольку затронутые свойства устарели, значение этой переменной по умолчанию - &lt;code&gt;t&lt;/code&gt; , чтобы эффективно отключить их.</target>
        </trans-unit>
        <trans-unit id="ce5d9ccf3510c648f74876cddfb3f8fa432f414d" translate="yes" xml:space="preserve">
          <source>When this parameter is non-&lt;code&gt;nil&lt;/code&gt;, Emacs will by default make this frame invisible whenever the minibuffer (see &lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;Minibuffers&lt;/a&gt;) is exited. Alternatively, it can specify the functions &lt;code&gt;iconify-frame&lt;/code&gt; and &lt;code&gt;delete-frame&lt;/code&gt;. This parameter is useful to make a child frame disappear automatically (similar to how Emacs deals with a window) when exiting the minibuffer.</source>
          <target state="translated">Если этот параметр не равен &lt;code&gt;nil&lt;/code&gt; , Emacs по умолчанию будет делать этот фрейм невидимым всякий раз, когда минибуфер (см. &lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;Минибуфер&lt;/a&gt; ) выходит из строя . В качестве альтернативы он может указать функции &lt;code&gt;iconify-frame&lt;/code&gt; и &lt;code&gt;delete-frame&lt;/code&gt; . Этот параметр полезен для автоматического исчезновения дочернего фрейма (аналогично тому, как Emacs работает с окном) при выходе из минибуфера.</target>
        </trans-unit>
        <trans-unit id="65a370dce07b5f1356430e60c6962d6907472d6a" translate="yes" xml:space="preserve">
          <source>When this parameter specifies a function, that function will be called instead of the function specified by the variable &lt;code&gt;frame-auto-hide-function&lt;/code&gt; when quitting the frame&amp;rsquo;s only window (see &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt;) and there are other frames left.</source>
          <target state="translated">Когда этот параметр определяет функцию, эта функция будет вызываться вместо функции, указанной переменной &lt;code&gt;frame-auto-hide-function&lt;/code&gt; , при выходе из единственного окна фрейма (см. &amp;laquo; &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Выход из Windows&amp;raquo;&lt;/a&gt; ), и остаются другие фреймы.</target>
        </trans-unit>
        <trans-unit id="ee3e7677010e786cb09365087ed57f54fcce0e2a" translate="yes" xml:space="preserve">
          <source>When this progress reporter is subsequently used, it will display &lt;var&gt;message&lt;/var&gt; in the echo area, followed by progress percentage. &lt;var&gt;message&lt;/var&gt; is treated as a simple string. If you need it to depend on a filename, for instance, use &lt;code&gt;format-message&lt;/code&gt; before calling this function.</source>
          <target state="translated">Когда этот репортер прогресса используется впоследствии, он будет отображать &lt;var&gt;message&lt;/var&gt; в эхо-области, за которым следует процент выполнения. &lt;var&gt;message&lt;/var&gt; рассматривается как простая строка. Если вам нужно, чтобы это зависело, например, от имени файла, используйте &lt;code&gt;format-message&lt;/code&gt; перед вызовом этой функции.</target>
        </trans-unit>
        <trans-unit id="e061fdfe432d1444a6ef2c8ecfe8107d7e038ba0" translate="yes" xml:space="preserve">
          <source>When this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt; and related functions will not use the Echo Area to display messages.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;message&lt;/code&gt; и связанные функции не будут использовать область эха для отображения сообщений.</target>
        </trans-unit>
        <trans-unit id="4021b690b71c815e17de814ae4283cefc26865b2" translate="yes" xml:space="preserve">
          <source>When this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs does not create an error handler around process filter functions and sentinels. Therefore, errors in these functions also invoke the debugger. See &lt;a href=&quot;processes#Processes&quot;&gt;Processes&lt;/a&gt;.</source>
          <target state="translated">Когда эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , Emacs не создает обработчик ошибок для функций фильтрации процесса и сигнальных индикаторов. Следовательно, ошибки в этих функциях также вызывают отладчик. См. &lt;a href=&quot;processes#Processes&quot;&gt;Процессы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5068bf891eebc3cb3bbda675336428c5e895d463" translate="yes" xml:space="preserve">
          <source>When this variable is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a fill prefix to use for filling each warning&amp;rsquo;s text.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , она указывает префикс заполнения, который будет использоваться для заполнения текста каждого предупреждения.</target>
        </trans-unit>
        <trans-unit id="81ca35ca79ea45a3fbfe9c0787260d134bf307a1" translate="yes" xml:space="preserve">
          <source>When this variable is non-&lt;code&gt;nil&lt;/code&gt;, no end-of-line conversion is done, no matter which coding system is specified. This applies to all the Emacs I/O and subprocess primitives, and to the explicit encoding and decoding functions (see &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Explicit Encoding&lt;/a&gt;).</source>
          <target state="translated">Когда эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , преобразование конца строки не выполняется, независимо от того, какая система кодирования указана. Это относится ко всем примитивам ввода-вывода и подпроцесса Emacs, а также к функциям явного кодирования и декодирования (см. &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Явное кодирование&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8687cb3c3b79cbfcb026745e0f9f09477f64a956" translate="yes" xml:space="preserve">
          <source>When this variable is set to &lt;code&gt;nil&lt;/code&gt;, cached values are never expired. Use this setting with caution, only if you are sure nothing other than Emacs ever changes the remote files. If it is set to &lt;code&gt;t&lt;/code&gt;, cached values are never used. This is the safest value, but could result in performance degradation.</source>
          <target state="translated">Когда для этой переменной установлено значение &lt;code&gt;nil&lt;/code&gt; , кешированные значения никогда не истекают. Используйте этот параметр с осторожностью, только если вы уверены, что ничто, кроме Emacs, никогда не изменяет удаленные файлы. Если установлено значение &lt;code&gt;t&lt;/code&gt; , кэшированные значения никогда не используются. Это самое безопасное значение, но оно может привести к снижению производительности.</target>
        </trans-unit>
        <trans-unit id="ab0579fa2fce2dc10de79c7ad712aaa99c2337cb" translate="yes" xml:space="preserve">
          <source>When to Use Autoload</source>
          <target state="translated">Когда использовать автозагрузку</target>
        </trans-unit>
        <trans-unit id="3ed62392e425d09f177ad5809b0daa952ff79ca8" translate="yes" xml:space="preserve">
          <source>When to Use Autoload.</source>
          <target state="translated">Когда использовать автозагрузку.</target>
        </trans-unit>
        <trans-unit id="fdf6d344287a175c6a8967387442678350b04d03" translate="yes" xml:space="preserve">
          <source>When trace recording is enabled, each function entry and exit adds lines to the trace buffer. A function entry record consists of &amp;lsquo;</source>
          <target state="translated">Когда запись трассировки включена, каждый вход и выход функции добавляет строки в буфер трассировки. Запись функции состоит из '</target>
        </trans-unit>
        <trans-unit id="834ea781fa499fac97ca17a9fe5554133e348a79" translate="yes" xml:space="preserve">
          <source>When two users edit the same file at the same time, they are likely to interfere with each other. Emacs tries to prevent this situation from arising by recording a &lt;em&gt;file lock&lt;/em&gt; when a file is being modified. Emacs can then detect the first attempt to modify a buffer visiting a file that is locked by another Emacs job, and ask the user what to do. The file lock is really a file, a symbolic link with a special name, stored in the same directory as the file you are editing. The name is constructed by prepending</source>
          <target state="translated">Когда два пользователя редактируют один и тот же файл одновременно, они могут мешать друг другу. Emacs пытается предотвратить возникновение этой ситуации, записывая &lt;em&gt;блокировку файла,&lt;/em&gt; когда файл изменяется. Затем Emacs может обнаружить первую попытку изменить буфер, обращающийся к файлу, который заблокирован другим заданием Emacs, и спросить пользователя, что ему делать. Блокировка файла на самом деле представляет собой файл, символическую ссылку со специальным именем, хранящуюся в том же каталоге, что и файл, который вы редактируете. Имя создается путем добавления</target>
        </trans-unit>
        <trans-unit id="5bc6bfbf01248a0c2fbe9946e76e0bc18182e404" translate="yes" xml:space="preserve">
          <source>When used interactively, this command will set the height of the currently selected frame to the number of lines specified by the numeric prefix.</source>
          <target state="translated">При интерактивном использовании эта команда установит высоту текущего выбранного кадра на количество строк,заданное числовым префиксом.</target>
        </trans-unit>
        <trans-unit id="5cafc503dcb04c5c70f5d47179201c8f2874b550" translate="yes" xml:space="preserve">
          <source>When used interactively, this command will set the width of the currently selected frame to the number of columns specified by the numeric prefix.</source>
          <target state="translated">При интерактивном использовании эта команда установит ширину текущего выбранного кадра на количество столбцов,заданное числовым префиксом.</target>
        </trans-unit>
        <trans-unit id="df05d2e62b078fec8b896bb8287c2d4222c3b139" translate="yes" xml:space="preserve">
          <source>When using X, you can specify what the &lt;code&gt;text&lt;/code&gt; pointer style really looks like by setting the variable &lt;code&gt;x-pointer-shape&lt;/code&gt;.</source>
          <target state="translated">При использовании X вы можете указать, как действительно выглядит стиль &lt;code&gt;text&lt;/code&gt; указателя, установив переменную &lt;code&gt;x-pointer-shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9b92ac174a5019eef5c2e0102afe0200a8ed13b" translate="yes" xml:space="preserve">
          <source>When using a text terminal, only one frame can be displayed at a time on the terminal, so after a call to &lt;code&gt;select-frame&lt;/code&gt;, the next redisplay actually displays the newly selected frame. This frame remains selected until a subsequent call to &lt;code&gt;select-frame&lt;/code&gt;. Each frame on a text terminal has a number which appears in the mode line before the buffer name (see &lt;a href=&quot;mode-line-variables#Mode-Line-Variables&quot;&gt;Mode Line Variables&lt;/a&gt;).</source>
          <target state="translated">При использовании текстового терминала одновременно на терминале может отображаться только один кадр, поэтому после вызова &lt;code&gt;select-frame&lt;/code&gt; следующее повторное отображение фактически отображает вновь выбранный кадр. Этот фрейм остается выбранным до следующего вызова &lt;code&gt;select-frame&lt;/code&gt; . Каждый фрейм на текстовом терминале имеет номер, который появляется в строке режима перед именем буфера (см. &lt;a href=&quot;mode-line-variables#Mode-Line-Variables&quot;&gt;Переменные строки режима&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1fb240f590926f4790a778103dba455bb7437554" translate="yes" xml:space="preserve">
          <source>When using a window system, the program can press any of the modifier keys in this way. Otherwise, only the</source>
          <target state="translated">При использовании оконной системы программа может нажать таким образом любую из клавиш-модификаторов.В противном случае,только</target>
        </trans-unit>
        <trans-unit id="743e4b1bde33abccc30e27027d01b2d431af1429" translate="yes" xml:space="preserve">
          <source>When using aliases in menus, often it is useful to display the equivalent key bindings for the real command name, not the aliases (which typically don&amp;rsquo;t have any key bindings except for the menu itself). To request this, give the alias symbol a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;menu-alias&lt;/code&gt; property. Thus,</source>
          <target state="translated">При использовании псевдонимов в меню часто бывает полезно отображать эквивалентные привязки клавиш для реального имени команды, а не псевдонимы (которые обычно не имеют привязок клавиш, кроме самого меню). Чтобы запросить это, присвойте символу &lt;code&gt;menu-alias&lt;/code&gt; свойство псевдонима меню, отличное от &lt;code&gt;nil&lt;/code&gt; . Таким образом,</target>
        </trans-unit>
        <trans-unit id="2255f628b701429ffde71421b986144bd381a09c" translate="yes" xml:space="preserve">
          <source>When using this hook to save buffers that are not visiting files (for instance, special-mode buffers), keep in mind that, if the function fails to save correctly and returns a &lt;code&gt;nil&lt;/code&gt; value, &lt;code&gt;save-buffer&lt;/code&gt; will go on to prompt the user for a file to save the buffer in. If this is undesirable, consider having the function fail by raising an error.</source>
          <target state="translated">При использовании этой ловушки для сохранения буферов, которые не обращаются к файлам (например, буферов специального режима), имейте в виду, что, если функция не сможет правильно сохранить и возвращает &lt;code&gt;nil&lt;/code&gt; значение, &lt;code&gt;save-buffer&lt;/code&gt; продолжит запрашивать пользователя для файла, в котором будет сохранен буфер. Если это нежелательно, рассмотрите возможность отказа функции из-за ошибки.</target>
        </trans-unit>
        <trans-unit id="52d9ebeef7f578e57680b4e7adf0127d0fce594f" translate="yes" xml:space="preserve">
          <source>When we added support for larger basic character codes beyond 127, and additional modifier bits, we had to change the representation of meta characters. Now the flag that represents the Meta modifier in a character is 2**27 and such numbers cannot be included in a string.</source>
          <target state="translated">Когда мы добавили поддержку более крупных базовых кодов символов за пределами 127,а также дополнительные модификаторы битов,нам пришлось изменить представление мета-символов.Теперь флаг,представляющий мета-символ в символе,равен 2**27 и такие числа не могут быть включены в строку.</target>
        </trans-unit>
        <trans-unit id="5c65e6c00ce9da8e43ad1a0dd48d10b0a70b6e63" translate="yes" xml:space="preserve">
          <source>When windows that display buffers associated with process change their dimensions, the affected processes should be told about these changes. By default, when the window configuration changes, Emacs will automatically call &lt;code&gt;set-process-window-size&lt;/code&gt; on behalf of every process whose buffer is displayed in a window, passing it the smallest dimensions of all the windows displaying the process&amp;rsquo;s buffer. This works via &lt;code&gt;window-configuration-change-hook&lt;/code&gt; (see &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Hooks&lt;/a&gt;), which is told to invoke the function that is the value of the variable &lt;code&gt;window-adjust-process-window-size-function&lt;/code&gt; for each process whose buffer is displayed in at least one window. You can customize this behavior by setting the value of that variable.</source>
          <target state="translated">Когда окна, отображающие буферы, связанные с процессом, изменяют свои размеры, затронутые процессы должны быть проинформированы об этих изменениях. По умолчанию, когда конфигурация окна изменяется, Emacs автоматически вызывает &lt;code&gt;set-process-window-size&lt;/code&gt; от имени каждого процесса, буфер которого отображается в окне, передавая ему наименьшие размеры из всех окон, отображающих буфер процесса. Это работает через &lt;code&gt;window-configuration-change-hook&lt;/code&gt; (см. &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Ловушки окон&lt;/a&gt; ), которой предлагается вызвать функцию, которая является значением переменной &lt;code&gt;window-adjust-process-window-size-function&lt;/code&gt; для каждого процесса, буфер которого отображается в хотя бы одно окно. Вы можете настроить это поведение, установив значение этой переменной.</target>
        </trans-unit>
        <trans-unit id="06746e6b5df68fb0c28eb425241d6ff6da24c050" translate="yes" xml:space="preserve">
          <source>When writing a Lisp function, do &lt;em&gt;not&lt;/em&gt; rely on this behavior of the command loop to restore the current buffer after an operation. Editing commands can also be called as Lisp functions by other programs, not just from the command loop; it is convenient for the caller if the subroutine does not change which buffer is current (unless, of course, that is the subroutine&amp;rsquo;s purpose).</source>
          <target state="translated">При написании Лисп-функции &lt;em&gt;не&lt;/em&gt; полагайтесь на это поведение командного цикла для восстановления текущего буфера после операции. Команды редактирования также могут вызываться как функции Lisp другими программами, а не только из цикла команд; для вызывающей стороны удобно, если подпрограмма не меняет текущий буфер (если, конечно, это не является целью подпрограммы).</target>
        </trans-unit>
        <trans-unit id="699d5342c4bf3085a86ab0f7d9279ec17f711cd4" translate="yes" xml:space="preserve">
          <source>When writing an application, you should normally use &lt;code&gt;display-buffer&lt;/code&gt; (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) or the higher-level functions described in &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;, instead of calling &lt;code&gt;set-window-buffer&lt;/code&gt; directly.</source>
          <target state="translated">При написании приложения вам обычно следует использовать &lt;code&gt;display-buffer&lt;/code&gt; (см. &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Раздел &amp;laquo;Выбор окна&amp;raquo;&lt;/a&gt; ) или функции более высокого уровня, описанные в разделе &amp;laquo; &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Переключение буферов&amp;raquo;&lt;/a&gt; , вместо прямого вызова &lt;code&gt;set-window-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c82038cf5b058ded1e983cec027be8a019d1723f" translate="yes" xml:space="preserve">
          <source>When writing the forms in a Lisp library file, keep in mind that the file might be loaded more than once. For example, think about whether each variable should be reinitialized when you reload the library; &lt;code&gt;defvar&lt;/code&gt; does not change the value if the variable is already initialized. (See &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Defining Variables&lt;/a&gt;.)</source>
          <target state="translated">При написании форм в файле библиотеки Lisp помните, что файл может загружаться более одного раза. Например, подумайте, нужно ли переинициализировать каждую переменную при перезагрузке библиотеки; &lt;code&gt;defvar&lt;/code&gt; не изменяет значение, если переменная уже инициализирована. (См. &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Определение переменных&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="382b15cd020a2d009645451fcf8e7fed06614cd0" translate="yes" xml:space="preserve">
          <source>When you access files using NFS, there may be a small probability that you and another user will both lock the same file simultaneously. If this happens, it is possible for the two users to make changes simultaneously, but Emacs will still warn the user who saves second. Also, the detection of modification of a buffer visiting a file changed on disk catches some cases of simultaneous editing; see &lt;a href=&quot;modification-time#Modification-Time&quot;&gt;Modification Time&lt;/a&gt;.</source>
          <target state="translated">Когда вы получаете доступ к файлам с помощью NFS, существует небольшая вероятность того, что вы и другой пользователь заблокируете один и тот же файл одновременно. Если это произойдет, два пользователя могут внести изменения одновременно, но Emacs все равно будет предупреждать пользователя, который экономит вторым. Кроме того, обнаружение модификации буфера при обращении к файлу, измененному на диске, выявляет некоторые случаи одновременного редактирования; см. &lt;a href=&quot;modification-time#Modification-Time&quot;&gt;Время модификации&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0bc690f6f6404e9a83bedaa30fd2ec320db85c84" translate="yes" xml:space="preserve">
          <source>When you add an association to a hash table and the table is full, it grows automatically. This value specifies how to make the hash table larger, at that time.</source>
          <target state="translated">Когда вы добавляете ассоциацию в хэш-таблицу и таблица заполнена,она растет автоматически.Это значение определяет,как увеличить хэш-таблицу в это время.</target>
        </trans-unit>
        <trans-unit id="f5f338d0f03189daa964f980d00248ed9d67844e" translate="yes" xml:space="preserve">
          <source>When you add an element to &lt;code&gt;minor-mode-alist&lt;/code&gt;, use &lt;code&gt;assq&lt;/code&gt; to check for an existing element, to avoid duplication. For example:</source>
          <target state="translated">Когда вы добавляете элемент в &lt;code&gt;minor-mode-alist&lt;/code&gt; , используйте &lt;code&gt;assq&lt;/code&gt; для проверки существующего элемента, чтобы избежать дублирования. Например:</target>
        </trans-unit>
        <trans-unit id="3b7dc1a49eeb6202c3978c8353b9e37c0e990fc3" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;make-frame&lt;/code&gt;, you should specify a non-&lt;code&gt;nil&lt;/code&gt; value for this parameter if the values of the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt; parameters represent the user&amp;rsquo;s stated preference; otherwise, use &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Когда вы вызываете &lt;code&gt;make-frame&lt;/code&gt; , вы должны указать для этого параметра &lt;code&gt;nil&lt;/code&gt; значение, если значения &lt;code&gt;left&lt;/code&gt; и &lt;code&gt;top&lt;/code&gt; параметров представляют заявленные пользователем предпочтения; в противном случае используйте &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c9a0f4eb4f88581582ff9d8911f62ecfaf9f852" translate="yes" xml:space="preserve">
          <source>When you call a function that may search, you may need to save and restore the match data around that call, if you want to preserve the match data from an earlier search for later use. Here is an example that shows the problem that arises if you fail to save the match data:</source>
          <target state="translated">При вызове функции,которая может выполнять поиск,возможно,потребуется сохранить и восстановить данные о совпадении вокруг этого вызова,если вы хотите сохранить данные о совпадении из более раннего поиска для последующего использования.Вот пример,в котором показана проблема,возникающая в случае невозможности сохранения данных о совпадениях:</target>
        </trans-unit>
        <trans-unit id="8adf75ef3b7d98de1964eb6600f9c9a22a53218a" translate="yes" xml:space="preserve">
          <source>When you call the filling functions interactively, using a prefix argument implies the value &lt;code&gt;full&lt;/code&gt; for &lt;var&gt;justify&lt;/var&gt;.</source>
          <target state="translated">Когда вы вызываете функции заполнения в интерактивном режиме, использование аргумента префикса подразумевает значение &lt;code&gt;full&lt;/code&gt; для &lt;var&gt;justify&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7cfab4b20b6c663c69d9cbc3db830f5a8762989f" translate="yes" xml:space="preserve">
          <source>When you change the value of this variable, the new value does not take effect in an existing buffer until the next time auto-save mode is reenabled in it. If auto-save mode is already enabled, auto-saves continue to go in the same file name until &lt;code&gt;auto-save-mode&lt;/code&gt; is called again.</source>
          <target state="translated">Когда вы изменяете значение этой переменной, новое значение не вступает в силу в существующем буфере до тех пор, пока в нем не будет снова включен режим автосохранения. Если режим автосохранения уже включен, автосохранение будет продолжаться с тем же именем файла, пока &lt;code&gt;auto-save-mode&lt;/code&gt; будет вызван снова.</target>
        </trans-unit>
        <trans-unit id="f5d2fa55b53970ef1e24e90fb466cf91b6bfbaff" translate="yes" xml:space="preserve">
          <source>When you click the mouse when the mouse pointer is over a hot-spot, an event is composed by combining the &lt;var&gt;id&lt;/var&gt; of the hot-spot with the mouse event; for instance, &lt;code&gt;[area4 mouse-1]&lt;/code&gt; if the hot-spot&amp;rsquo;s &lt;var&gt;id&lt;/var&gt; is &lt;code&gt;area4&lt;/code&gt;.</source>
          <target state="translated">Когда вы щелкаете мышью, когда указатель мыши находится над активной точкой, событие составляется путем объединения &lt;var&gt;id&lt;/var&gt; горячей точки с событием мыши; например, &lt;code&gt;[area4 mouse-1]&lt;/code&gt; , если &lt;var&gt;id&lt;/var&gt; горячей точки - &lt;code&gt;area4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d3ba12b14f1396bca73837bdcf2f3e95ccefc5b" translate="yes" xml:space="preserve">
          <source>When you compile a file, you can optionally enable the &lt;em&gt;dynamic function loading&lt;/em&gt; feature (also known as &lt;em&gt;lazy loading&lt;/em&gt;). With dynamic function loading, loading the file doesn&amp;rsquo;t fully read the function definitions in the file. Instead, each function definition contains a place-holder which refers to the file. The first time each function is called, it reads the full definition from the file, to replace the place-holder.</source>
          <target state="translated">Когда вы компилируете файл, вы можете дополнительно включить &lt;em&gt;функцию загрузки динамических функций&lt;/em&gt; (также известную как &lt;em&gt;ленивая загрузка&lt;/em&gt; ). При динамической загрузке функций загрузка файла не полностью читает определения функций в файле. Вместо этого каждое определение функции содержит заполнитель, который ссылается на файл. При первом вызове каждой функции она считывает полное определение из файла, чтобы заменить заполнитель.</target>
        </trans-unit>
        <trans-unit id="8308354e56a292ba74b0e5ee1a6b1a8bb32c4bca" translate="yes" xml:space="preserve">
          <source>When you create a frame and specify its screen position with the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt; parameters, use this parameter to say whether the specified position was user-specified (explicitly requested in some way by a human user) or merely program-specified (chosen by a program). A non-&lt;code&gt;nil&lt;/code&gt; value says the position was user-specified.</source>
          <target state="translated">Когда вы создаете фрейм и указываете его положение на экране с помощью параметров &lt;code&gt;left&lt;/code&gt; и &lt;code&gt;top&lt;/code&gt; , используйте этот параметр, чтобы указать, была ли указанная позиция указана пользователем (явно запрошена каким-то образом пользователем-человеком) или просто указана программой (выбрана пользователем) программа). Не- &lt;code&gt;nil&lt;/code&gt; значение говорит позиция была задаваемый пользователем.</target>
        </trans-unit>
        <trans-unit id="6216690caef48b451a547d4473f7640a85757634" translate="yes" xml:space="preserve">
          <source>When you create a local binding for a variable, that binding takes effect only within a limited portion of the program (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;). This section describes exactly what this means.</source>
          <target state="translated">Когда вы создаете локальную привязку для переменной, эта привязка действует только в ограниченной части программы (см. &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Локальные переменные&lt;/a&gt; ). В этом разделе точно описано, что это означает.</target>
        </trans-unit>
        <trans-unit id="ae6ddb6b4899f10919c333c5ad4b6f0c875117cc" translate="yes" xml:space="preserve">
          <source>When you create a new marker, you can make it point nowhere, or point to the present position of point, or to the beginning or end of the accessible portion of the buffer, or to the same place as another given marker.</source>
          <target state="translated">При создании нового маркера можно сделать его точкой нигде,или указать на текущее положение точки,или на начало или конец доступной части буфера,или на то же самое место,что и другой данный маркер.</target>
        </trans-unit>
        <trans-unit id="bc07e734d3ee625873ceb670d1e297bf66f905b7" translate="yes" xml:space="preserve">
          <source>When you create a window, or display a different buffer in it, the display-start position is set to a display-start position recently used for the same buffer, or to &lt;code&gt;point-min&lt;/code&gt; if the buffer doesn&amp;rsquo;t have any.</source>
          <target state="translated">Когда вы создаете окно или отображаете в нем другой буфер, позиция display-start устанавливается на позицию display-start, которая недавно использовалась для того же буфера, или на &lt;code&gt;point-min&lt;/code&gt; , если в буфере ее нет.</target>
        </trans-unit>
        <trans-unit id="1f14104fde1b22ca43537088f2503e50d4d6208d" translate="yes" xml:space="preserve">
          <source>When you create an array, other than a char-table, you must specify its length. You cannot specify the length of a char-table, because that is determined by the range of character codes.</source>
          <target state="translated">При создании массива,отличного от графического,необходимо указать его длину.Длину char-таблицы указать нельзя,так как она определяется диапазоном символьных кодов.</target>
        </trans-unit>
        <trans-unit id="f498d932b50abb178ecbeec8eb4b30ad419fb787" translate="yes" xml:space="preserve">
          <source>When you create the frame, you can explicitly specify its minibuffer window (in some other frame) with the &lt;code&gt;minibuffer&lt;/code&gt; frame parameter (see &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Buffer Parameters&lt;/a&gt;). If you don&amp;rsquo;t, then the minibuffer is found in the frame which is the value of the variable &lt;code&gt;default-minibuffer-frame&lt;/code&gt;. Its value should be a frame that does have a minibuffer.</source>
          <target state="translated">Когда вы создаете фрейм, вы можете явно указать его окно минибуфера (в каком-то другом фрейме) с помощью параметра фрейма &lt;code&gt;minibuffer&lt;/code&gt; (см. &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Параметры буфера&lt;/a&gt; ). Если вы этого не сделаете, то минибуфер будет найден в кадре, который является значением переменной &lt;code&gt;default-minibuffer-frame&lt;/code&gt; . Его значением должен быть кадр, у которого есть минибуфер.</target>
        </trans-unit>
        <trans-unit id="a4c7bd55ccf34c0d514c7fbbf83e872160c62ddb" translate="yes" xml:space="preserve">
          <source>When you define a major mode using &lt;code&gt;define-derived-mode&lt;/code&gt;, it automatically makes sure these conventions are followed. If you define a major mode &amp;ldquo;by hand&amp;rdquo;, not using &lt;code&gt;define-derived-mode&lt;/code&gt;, use the following functions to handle these conventions automatically.</source>
          <target state="translated">Когда вы определяете основной режим с помощью &lt;code&gt;define-derived-mode&lt;/code&gt; , он автоматически обеспечивает соблюдение этих соглашений. Если вы определяете основной режим &amp;laquo;вручную&amp;raquo;, не используя &lt;code&gt;define-derived-mode&lt;/code&gt; , используйте следующие функции для автоматической обработки этих соглашений.</target>
        </trans-unit>
        <trans-unit id="dfbf91163ec659ba66214fef082c1b87b2196d04" translate="yes" xml:space="preserve">
          <source>When you define a user option with &lt;code&gt;defcustom&lt;/code&gt;, you must specify its &lt;em&gt;customization type&lt;/em&gt;. That is a Lisp object which describes (1) which values are legitimate and (2) how to display the value in the customization buffer for editing.</source>
          <target state="translated">Когда вы определяете пользовательский параметр с помощью &lt;code&gt;defcustom&lt;/code&gt; , вы должны указать его &lt;em&gt;тип настройки&lt;/em&gt; . Это объект Lisp, который описывает (1) какие значения допустимы и (2) как отображать значение в буфере настройки для редактирования.</target>
        </trans-unit>
        <trans-unit id="a9ef6e1fd038c8fa62c42e173a11f9fc1cc461a7" translate="yes" xml:space="preserve">
          <source>When you define a variable whose value is a function, or a list of functions, use a name that ends in &amp;lsquo;</source>
          <target state="translated">Когда вы определяете переменную, значение которой является функцией или списком функций, используйте имя, которое заканчивается на '</target>
        </trans-unit>
        <trans-unit id="3d1a6d288d8bfcd06e684f9ee90b340e528a3d00" translate="yes" xml:space="preserve">
          <source>When you define a variable, always consider whether you should mark it as safe or risky; see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;.</source>
          <target state="translated">Когда вы определяете переменную, всегда думайте, следует ли вам пометить ее как безопасную или опасную; см. &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;Локальные переменные файла&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="089dfe2b00a702a3713c6ffc6f296f35b798e416" translate="yes" xml:space="preserve">
          <source>When you do insertion with inheritance, &lt;em&gt;which&lt;/em&gt; properties are inherited, and from where, depends on which properties are &lt;em&gt;sticky&lt;/em&gt;. Insertion after a character inherits those of its properties that are &lt;em&gt;rear-sticky&lt;/em&gt;. Insertion before a character inherits those of its properties that are &lt;em&gt;front-sticky&lt;/em&gt;. When both sides offer different sticky values for the same property, the previous character&amp;rsquo;s value takes precedence.</source>
          <target state="translated">Когда вы выполняете вставку с наследованием, &lt;em&gt;какие&lt;/em&gt; свойства наследуются и откуда, зависит от того, какие свойства являются &lt;em&gt;закрепленными&lt;/em&gt; . Вставка после символа наследует те из его свойств, которые являются &lt;em&gt;липкими сзади&lt;/em&gt; . Вставка перед символом наследует те из его свойств, которые &lt;em&gt;закреплены спереди&lt;/em&gt; . Когда обе стороны предлагают разные липкие значения для одного и того же свойства, значение предыдущего символа имеет приоритет.</target>
        </trans-unit>
        <trans-unit id="37b7fd18304bc6eb9c8301a24ddc05493f27d27f" translate="yes" xml:space="preserve">
          <source>When you edit a file in Emacs, you are actually working on a buffer that is visiting that file&amp;mdash;that is, the contents of the file are copied into the buffer and the copy is what you edit. Changes to the buffer do not change the file until you &lt;em&gt;save&lt;/em&gt; the buffer, which means copying the contents of the buffer into the file. Buffers which are not visiting a file can still be &amp;ldquo;saved&amp;rdquo;, in a sense, using functions in the buffer-local &lt;code&gt;write-contents-functions&lt;/code&gt; hook.</source>
          <target state="translated">Когда вы редактируете файл в Emacs, вы фактически работаете с буфером, который обращается к этому файлу, то есть содержимое файла копируется в буфер, а копия - это то, что вы редактируете. Изменения в буфере не изменяют файл, пока вы не &lt;em&gt;сохраните&lt;/em&gt; буфер, что означает копирование содержимого буфера в файл. Буферы, которые не обращаются к файлу, все еще могут быть &amp;laquo;сохранены&amp;raquo;, в некотором смысле, с помощью функций в перехватчике &lt;code&gt;write-contents-functions&lt;/code&gt; локального буфера .</target>
        </trans-unit>
        <trans-unit id="7f427de0f7b199c666b32e125fa591ceef64dc1a" translate="yes" xml:space="preserve">
          <source>When you enter a new Edebug level, Edebug will normally stop at the first instrumented function it encounters. If you prefer to stop only at a break point, or not at all (for example, when gathering coverage data), change the value of &lt;code&gt;edebug-initial-mode&lt;/code&gt; from its default &lt;code&gt;step&lt;/code&gt; to &lt;code&gt;go&lt;/code&gt;, or &lt;code&gt;Go-nonstop&lt;/code&gt;, or one of its other values (see &lt;a href=&quot;edebug-options#Edebug-Options&quot;&gt;Edebug Options&lt;/a&gt;). You can do this readily with</source>
          <target state="translated">Когда вы входите на новый уровень Edebug, Edebug обычно останавливается на первой обнаруженной инструментальной функции. Если вы предпочитаете останавливаться только в точке останова или вообще не останавливаться (например, при сборе данных о покрытии), измените значение &lt;code&gt;edebug-initial-mode&lt;/code&gt; с &lt;code&gt;step&lt;/code&gt; по умолчанию, чтобы &lt;code&gt;go&lt;/code&gt; , или &lt;code&gt;Go-nonstop&lt;/code&gt; , или одного из его другие значения (см. &lt;a href=&quot;edebug-options#Edebug-Options&quot;&gt;Параметры Edebug&lt;/a&gt; ). Вы можете легко сделать это с помощью</target>
        </trans-unit>
        <trans-unit id="940d8ca82d6954332936bae37ad5371c634676bd" translate="yes" xml:space="preserve">
          <source>When you evaluate a &lt;code&gt;defcustom&lt;/code&gt; form with</source>
          <target state="translated">Когда вы оцениваете форму &lt;code&gt;defcustom&lt;/code&gt; с помощью</target>
        </trans-unit>
        <trans-unit id="d5707edb8d3bfbb1a648002d26ade65f6366c3b8" translate="yes" xml:space="preserve">
          <source>When you evaluate a top-level &lt;code&gt;defvar&lt;/code&gt; form with</source>
          <target state="translated">Когда вы оцениваете форму &lt;code&gt;defvar&lt;/code&gt; верхнего уровня с помощью</target>
        </trans-unit>
        <trans-unit id="c02e2bd19a86bb2d429aa5ecdbb164c754d42b8b" translate="yes" xml:space="preserve">
          <source>When you evaluate an expression interactively, the Lisp interpreter first reads the textual representation of it, producing a Lisp object, and then evaluates that object (see &lt;a href=&quot;evaluation#Evaluation&quot;&gt;Evaluation&lt;/a&gt;). However, evaluation and reading are separate activities. Reading returns the Lisp object represented by the text that is read; the object may or may not be evaluated later. See &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Input Functions&lt;/a&gt;, for a description of &lt;code&gt;read&lt;/code&gt;, the basic function for reading objects.</source>
          <target state="translated">Когда вы оцениваете выражение в интерактивном режиме, интерпретатор Лиспа сначала считывает его текстовое представление, создавая объект Лиспа, а затем оценивает этот объект (см. &lt;a href=&quot;evaluation#Evaluation&quot;&gt;Оценка&lt;/a&gt; ). Однако оценка и чтение - это разные виды деятельности. Чтение возвращает объект Lisp, представленный прочитанным текстом; объект может быть оценен или не оценен позже. См. В разделе &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Функции ввода&lt;/a&gt; описание &lt;code&gt;read&lt;/code&gt; , основной функции чтения объектов.</target>
        </trans-unit>
        <trans-unit id="71e2c1e3e799c338bea9e1fae2a8af5c0b8b11e8" translate="yes" xml:space="preserve">
          <source>When you have a series of similar questions to ask, such as &amp;ldquo;Do you want to save this buffer?&amp;rdquo; for each buffer in turn, you should use &lt;code&gt;map-y-or-n-p&lt;/code&gt; to ask the collection of questions, rather than asking each question individually. This gives the user certain convenient facilities such as the ability to answer the whole series at once.</source>
          <target state="translated">Если у вас есть ряд похожих вопросов, например: &amp;laquo;Вы хотите сохранить этот буфер?&amp;raquo; для каждого буфера по очереди вы должны использовать &lt;code&gt;map-y-or-n-p&lt;/code&gt; чтобы задать набор вопросов, а не задавать каждый вопрос по отдельности. Это дает пользователю определенные удобные возможности, такие как возможность ответить сразу на всю серию.</target>
        </trans-unit>
        <trans-unit id="db140447ee8174a2469e79f3a449481bef9eb597" translate="yes" xml:space="preserve">
          <source>When you have to look at the contents of a key sequence that might be a string, use &lt;code&gt;listify-key-sequence&lt;/code&gt; (see &lt;a href=&quot;event-input-misc#Event-Input-Misc&quot;&gt;Event Input Misc&lt;/a&gt;) first, to convert it to a list.</source>
          <target state="translated">Когда вам нужно просмотреть содержимое ключевой последовательности, которая может быть строкой, &lt;code&gt;listify-key-sequence&lt;/code&gt; используйте listify-key-sequence (см. &lt;a href=&quot;event-input-misc#Event-Input-Misc&quot;&gt;Разное, ввод событий&lt;/a&gt; ), чтобы преобразовать ее в список.</target>
        </trans-unit>
        <trans-unit id="fa1c1f94288fba61082beac1e047b620c6c5c4e8" translate="yes" xml:space="preserve">
          <source>When you insert a new item in an existing menu, you probably want to put it in a particular place among the menu&amp;rsquo;s existing items. If you use &lt;code&gt;define-key&lt;/code&gt; to add the item, it normally goes at the front of the menu. To put it elsewhere in the menu, use &lt;code&gt;define-key-after&lt;/code&gt;:</source>
          <target state="translated">Когда вы вставляете новый элемент в существующее меню, вы, вероятно, захотите поместить его в определенное место среди существующих пунктов меню. Если вы используете &lt;code&gt;define-key&lt;/code&gt; для добавления элемента, он обычно находится в начале меню. Чтобы поместить его в другое место в меню, используйте команду &lt;code&gt;define-key-after&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4ace45c3d17a404d7ddc45441ae3c56685ab458e" translate="yes" xml:space="preserve">
          <source>When you insert text directly at the place where a marker points, there are two possible ways to relocate that marker: it can point before the inserted text, or point after it. You can specify which one a given marker should do by setting its &lt;em&gt;insertion type&lt;/em&gt;. Note that use of &lt;code&gt;insert-before-markers&lt;/code&gt; ignores markers&amp;rsquo; insertion types, always relocating a marker to point after the inserted text.</source>
          <target state="translated">Когда вы вставляете текст непосредственно в то место, куда указывает маркер, есть два возможных способа переместить этот маркер: он может указывать перед вставленным текстом или указывать после него. Вы можете указать, что должен делать данный маркер, задав его &lt;em&gt;тип вставки&lt;/em&gt; . Обратите внимание, что при использовании &lt;code&gt;insert-before-markers&lt;/code&gt; игнорируются типы вставки маркеров, всегда перемещая маркер так, чтобы он указывал после вставленного текста.</target>
        </trans-unit>
        <trans-unit id="1376d36136c03ac766ebe953a082636da9bce32c" translate="yes" xml:space="preserve">
          <source>When you introduce a new group into Emacs, use the &lt;code&gt;:version&lt;/code&gt; keyword in the &lt;code&gt;defgroup&lt;/code&gt;; then you need not use it for the individual members of the group.</source>
          <target state="translated">Когда вы вводите новую группу в Emacs, используйте ключевое слово &lt;code&gt;:version&lt;/code&gt; в &lt;code&gt;defgroup&lt;/code&gt; ; тогда вам не нужно использовать его для отдельных членов группы.</target>
        </trans-unit>
        <trans-unit id="dc2f909a65ee1114b4a704963febe2d4ed0ef40c" translate="yes" xml:space="preserve">
          <source>When you invoke command</source>
          <target state="translated">Когда вы вызываете команду</target>
        </trans-unit>
        <trans-unit id="9e70d8400e251f1195c63d2550e6a672fed619c6" translate="yes" xml:space="preserve">
          <source>When you load or reload files, bear in mind that the &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;load-library&lt;/code&gt; functions automatically load a byte-compiled file rather than a non-compiled file of similar name. If you rewrite a file that you intend to save and reinstall, you need to byte-compile the new version; otherwise Emacs will load the older, byte-compiled file instead of your newer, non-compiled file! If that happens, the message displayed when loading the file includes, &amp;lsquo;</source>
          <target state="translated">Когда вы загружаете или перезагружаете файлы, имейте в виду, что функции &lt;code&gt;load&lt;/code&gt; и &lt;code&gt;load-library&lt;/code&gt; автоматически загружают скомпилированный в байтах файл, а не некомпилированный файл с аналогичным именем. Если вы переписываете файл, который собираетесь сохранить и переустановить, вам необходимо выполнить байтовую компиляцию новой версии; в противном случае Emacs загрузит старый, скомпилированный в байтах файл вместо вашего нового, не скомпилированного файла! Если это произойдет, при загрузке файла появится сообщение:</target>
        </trans-unit>
        <trans-unit id="2e43dc75880c5e42db7ee1d9da0158991a0b03f8" translate="yes" xml:space="preserve">
          <source>When you move to this item with &lt;code&gt;widget-forward&lt;/code&gt; or &lt;code&gt;widget-backward&lt;/code&gt;, it will display the string &lt;var&gt;motion-doc&lt;/var&gt; in the echo area. In addition, &lt;var&gt;motion-doc&lt;/var&gt; is used as the mouse &lt;code&gt;help-echo&lt;/code&gt; string and may actually be a function or form evaluated to yield a help string. If it is a function, it is called with one argument, the widget.</source>
          <target state="translated">Когда вы переходите к этому элементу с помощью &lt;code&gt;widget-forward&lt;/code&gt; или &lt;code&gt;widget-backward&lt;/code&gt; , он отобразит строку &lt;var&gt;motion-doc&lt;/var&gt; в эхо-области. Кроме того, &lt;var&gt;motion-doc&lt;/var&gt; используется как строка &lt;code&gt;help-echo&lt;/code&gt; мыши и на самом деле может быть функцией или формой, вычисляемой для получения строки справки. Если это функция, она вызывается с одним аргументом - виджетом.</target>
        </trans-unit>
        <trans-unit id="6f87e825d0eb5cf4f1104ba14fafbc8b0f0b6158" translate="yes" xml:space="preserve">
          <source>When you need to modify a function defined in another library, or when you need to modify a hook like &lt;code&gt;&lt;var&gt;foo&lt;/var&gt;-function&lt;/code&gt;, a process filter, or basically any variable or object field which holds a function value, you can use the appropriate setter function, such as &lt;code&gt;fset&lt;/code&gt; or &lt;code&gt;defun&lt;/code&gt; for named functions, &lt;code&gt;setq&lt;/code&gt; for hook variables, or &lt;code&gt;set-process-filter&lt;/code&gt; for process filters, but those are often too blunt, completely throwing away the previous value.</source>
          <target state="translated">Когда вам нужно изменить функцию, определенную в другой библиотеке, или когда вам нужно изменить ловушку, такую ​​как &lt;code&gt;&lt;var&gt;foo&lt;/var&gt;-function&lt;/code&gt; , фильтр процесса или в основном любую переменную или поле объекта, которое содержит значение функции, вы можете использовать соответствующую функцию установки, такие как &lt;code&gt;fset&lt;/code&gt; или &lt;code&gt;defun&lt;/code&gt; для именованных функций, &lt;code&gt;setq&lt;/code&gt; для переменных- ловушек или &lt;code&gt;set-process-filter&lt;/code&gt; для фильтров процессов, но они часто слишком грубые, полностью отбрасывая предыдущее значение.</target>
        </trans-unit>
        <trans-unit id="a39b71d5d4babed1c190cd88fc543b454b1a30a9" translate="yes" xml:space="preserve">
          <source>When you run Emacs, it enters the &lt;em&gt;editor command loop&lt;/em&gt; almost immediately. This loop reads key sequences, executes their definitions, and displays the results. In this chapter, we describe how these things are done, and the subroutines that allow Lisp programs to do them.</source>
          <target state="translated">Когда вы запускаете Emacs, он почти сразу же входит в &lt;em&gt;цикл команд редактора&lt;/em&gt; . Этот цикл считывает ключевые последовательности, выполняет их определения и отображает результаты. В этой главе мы описываем, как это делается, и подпрограммы, которые позволяют программам на Лиспе это делать.</target>
        </trans-unit>
        <trans-unit id="bcb11ba33e37d812266385875ce1818f6c3b5d98" translate="yes" xml:space="preserve">
          <source>When you signal an error, you specify an &lt;em&gt;error symbol&lt;/em&gt; to specify the kind of error you have in mind. Each error has one and only one error symbol to categorize it. This is the finest classification of errors defined by the Emacs Lisp language.</source>
          <target state="translated">Когда вы сигнализируете об ошибке, вы указываете &lt;em&gt;символ ошибки,&lt;/em&gt; чтобы указать вид ошибки, которую вы имеете в виду. Каждая ошибка имеет один и только один символ ошибки для ее классификации. Это лучшая классификация ошибок, определенная языком Emacs Lisp.</target>
        </trans-unit>
        <trans-unit id="b793737cfa50e1afd7288a0b029662a6368a275c" translate="yes" xml:space="preserve">
          <source>When you start Emacs, it normally attempts to load your &lt;em&gt;init file&lt;/em&gt;. This is either a file named</source>
          <target state="translated">Когда вы запускаете Emacs, он обычно пытается загрузить ваш &lt;em&gt;файл инициализации&lt;/em&gt; . Это либо файл с именем</target>
        </trans-unit>
        <trans-unit id="c8ff56c98c659b4c2a82cbf9d308d3140f1a11bd" translate="yes" xml:space="preserve">
          <source>When you use &lt;code&gt;:group&lt;/code&gt; in a &lt;code&gt;defgroup&lt;/code&gt;, it makes the new group a subgroup of &lt;var&gt;group&lt;/var&gt;.</source>
          <target state="translated">Когда вы используете &lt;code&gt;:group&lt;/code&gt; в &lt;code&gt;defgroup&lt;/code&gt; , он делает новую группу подгруппой &lt;var&gt;group&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="9394c249d0193b7bb56563b934fca6beb80699b7" translate="yes" xml:space="preserve">
          <source>When you use &lt;code&gt;compute-motion&lt;/code&gt; for the minibuffer, you need to use &lt;code&gt;minibuffer-prompt-width&lt;/code&gt; to get the horizontal position of the beginning of the first screen line. See &lt;a href=&quot;minibuffer-contents#Minibuffer-Contents&quot;&gt;Minibuffer Contents&lt;/a&gt;.</source>
          <target state="translated">Когда вы используете &lt;code&gt;compute-motion&lt;/code&gt; для минибуфера, вам нужно использовать &lt;code&gt;minibuffer-prompt-width&lt;/code&gt; , чтобы получить горизонтальное положение начала первой строки экрана. См. &lt;a href=&quot;minibuffer-contents#Minibuffer-Contents&quot;&gt;Содержимое минибуфера&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9553413c3f23b971e4db382ac958c06f8af34a3d" translate="yes" xml:space="preserve">
          <source>When you use &lt;code&gt;frame-parameter&lt;/code&gt; to query the value of either of these two frame parameters, the return value is always an integer. When using &lt;code&gt;set-frame-parameter&lt;/code&gt;, passing a &lt;code&gt;nil&lt;/code&gt; value imposes an actual default value of 8 pixels.</source>
          <target state="translated">Когда вы используете &lt;code&gt;frame-parameter&lt;/code&gt; для запроса значения любого из этих двух параметров кадра, возвращаемое значение всегда является целым числом. При использовании параметра &lt;code&gt;set-frame-parameter&lt;/code&gt; передача значения &lt;code&gt;nil&lt;/code&gt; накладывает фактическое значение по умолчанию 8 пикселей.</target>
        </trans-unit>
        <trans-unit id="44103a26b593a1a072ebe4f6ac9f1f8d807f5700" translate="yes" xml:space="preserve">
          <source>When you use the command</source>
          <target state="translated">Когда вы используете команду</target>
        </trans-unit>
        <trans-unit id="b8ad75dd6a50d9891847f305b97c9d0dcb7f39a5" translate="yes" xml:space="preserve">
          <source>When you use the read syntax &amp;lsquo;</source>
          <target state="translated">Когда вы используете синтаксис чтения '</target>
        </trans-unit>
        <trans-unit id="b41758871c41b9129acbafdd3508fda1aa612647" translate="yes" xml:space="preserve">
          <source>When you visit a file whose expanded file name (see &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;), with version numbers and backup suffixes removed using &lt;code&gt;file-name-sans-versions&lt;/code&gt; (see &lt;a href=&quot;file-name-components#File-Name-Components&quot;&gt;File Name Components&lt;/a&gt;), matches a &lt;var&gt;regexp&lt;/var&gt;, &lt;code&gt;set-auto-mode&lt;/code&gt; calls the corresponding &lt;var&gt;mode-function&lt;/var&gt;. This feature enables Emacs to select the proper major mode for most files.</source>
          <target state="translated">Когда вы посещаете файл, расширенное имя которого (см. &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;Расширение имени файла&lt;/a&gt; ), с номерами версий и суффиксами резервных копий, удаленными с помощью &lt;code&gt;file-name-sans-versions&lt;/code&gt; (см. &lt;a href=&quot;file-name-components#File-Name-Components&quot;&gt;Компоненты имени файла&lt;/a&gt; ), соответствует &lt;var&gt;regexp&lt;/var&gt; , &lt;code&gt;set-auto-mode&lt;/code&gt; вызывает соответствующий &lt;var&gt;mode-function&lt;/var&gt; . Эта функция позволяет Emacs выбрать правильный основной режим для большинства файлов.</target>
        </trans-unit>
        <trans-unit id="c40090d6c39f85f238b391a1e2407892e201a9c6" translate="yes" xml:space="preserve">
          <source>When you want to get rid of a window used for displaying a buffer, you can call &lt;code&gt;delete-window&lt;/code&gt; or &lt;code&gt;delete-windows-on&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;) to remove that window from its frame. If the buffer is shown on a separate frame, you might want to call &lt;code&gt;delete-frame&lt;/code&gt; (see &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;) instead. If, on the other hand, a window has been reused for displaying the buffer, you might prefer showing the buffer previously shown in that window, by calling the function &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; (see &lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt;). Finally, you might want to either bury (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;) or kill (see &lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;Killing Buffers&lt;/a&gt;) the window&amp;rsquo;s buffer.</source>
          <target state="translated">Если вы хотите избавиться от окна, используемого для отображения буфера, вы можете вызвать &lt;code&gt;delete-window&lt;/code&gt; или &lt;code&gt;delete-windows-on&lt;/code&gt; (см. &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Удаление Windows&lt;/a&gt; ), чтобы удалить это окно из его фрейма. Если буфер отображается в отдельном фрейме, вы можете вместо этого вызвать &lt;code&gt;delete-frame&lt;/code&gt; (см. &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Удаление фреймов&lt;/a&gt; ). Если, с другой стороны, окно было повторно использовано для отображения буфера, вы можете предпочесть показать буфер, ранее показанный в этом окне, вызвав функцию &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; (см. &lt;a href=&quot;window-history#Window-History&quot;&gt;История окон&lt;/a&gt; ). Наконец, вы можете захотеть либо закопать (см. &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Список &lt;/a&gt;&lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;буферов&lt;/a&gt; ), либо уничтожить (см. Убивающие буферы ) буфер окна.</target>
        </trans-unit>
        <trans-unit id="707ae37eb58de80b6c30a330553423c84bd2692d" translate="yes" xml:space="preserve">
          <source>When you write a list as an expression in your program, you specify which function to call, and how many arguments to give it, in the text of the program. Usually that&amp;rsquo;s just what you want. Occasionally you need to compute at run time which function to call. To do that, use the function &lt;code&gt;funcall&lt;/code&gt;. When you also need to determine at run time how many arguments to pass, use &lt;code&gt;apply&lt;/code&gt;.</source>
          <target state="translated">Когда вы пишете в своей программе список в виде выражения, вы указываете, какую функцию вызывать и сколько аргументов ей передать в тексте программы. Обычно это именно то, что вам нужно. Иногда вам нужно во время выполнения вычислить, какую функцию вызывать. Для этого используйте функцию &lt;code&gt;funcall&lt;/code&gt; . Если вам также необходимо определить во время выполнения, сколько аргументов передать, используйте &lt;code&gt;apply&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="874bbfe629036b3a6d9635eb5f25968f20745e46" translate="yes" xml:space="preserve">
          <source>When you write a selectively displayed buffer into a file, all the control-m&amp;rsquo;s are output as newlines. This means that when you next read in the file, it looks OK, with nothing hidden. The selective display effect is seen only within Emacs.</source>
          <target state="translated">Когда вы записываете в файл выборочно отображаемый буфер, все control-m выводятся как символы новой строки. Это означает, что при следующем чтении файла он выглядит нормально, ничего не скрыто. Эффект выборочного отображения виден только в Emacs.</target>
        </trans-unit>
        <trans-unit id="b53fd76361fdcb42e825a91e2de7846b8aa8e17c" translate="yes" xml:space="preserve">
          <source>When your program encounters invalid input data, it can either signal a Lisp error by calling &lt;code&gt;error&lt;/code&gt; or &lt;code&gt;signal&lt;/code&gt; or report a warning with severity &lt;code&gt;:error&lt;/code&gt;. Signaling a Lisp error is the easiest thing to do, but it means the program cannot continue processing. If you want to take the trouble to implement a way to continue processing despite the bad data, then reporting a warning of severity &lt;code&gt;:error&lt;/code&gt; is the right way to inform the user of the problem. For instance, the Emacs Lisp byte compiler can report an error that way and continue compiling other functions. (If the program signals a Lisp error and then handles it with &lt;code&gt;condition-case&lt;/code&gt;, the user won&amp;rsquo;t see the error message; it could show the message to the user by reporting it as a warning.)</source>
          <target state="translated">Когда ваша программа встречает недопустимые входные данные, она может либо сигнализировать об ошибке Lisp, вызывая &lt;code&gt;error&lt;/code&gt; или &lt;code&gt;signal&lt;/code&gt; , либо сообщать предупреждение с серьезностью &lt;code&gt;:error&lt;/code&gt; . Сигнализировать об ошибке Лиспа - это проще всего, но это означает, что программа не может продолжить обработку. Если вы хотите реализовать способ продолжения обработки, несмотря на неверные данные, то сообщение с предупреждением о серьезности &lt;code&gt;:error&lt;/code&gt; - правильный способ сообщить пользователю о проблеме. Например, байтовый компилятор Emacs Lisp может таким образом сообщить об ошибке и продолжить компиляцию других функций. (Если программа сигнализирует об ошибке Lisp, а затем обрабатывает ее с помощью &lt;code&gt;condition-case&lt;/code&gt; , пользователь не увидит сообщение об ошибке; он может показать сообщение пользователю, сообщив об этом как о предупреждении.)</target>
        </trans-unit>
        <trans-unit id="66c78cc9e204ca6eccaf9a3e94bebe32de83cbaf" translate="yes" xml:space="preserve">
          <source>Whenever Edebug is entered, it needs to save and restore certain data before even deciding whether to make trace information or stop the program.</source>
          <target state="translated">Всякий раз,когда вводится Edebug,он должен сохранять и восстанавливать определенные данные еще до того,как будет принято решение о том,делать ли информацию о трассировке или остановить программу.</target>
        </trans-unit>
        <trans-unit id="25e25ae381cb2fae34d659db4a0640b5794226a9" translate="yes" xml:space="preserve">
          <source>Whenever Emacs starts up, it automatically calls the function &lt;code&gt;package-activate-all&lt;/code&gt; to make installed packages available to the current session. This is done after loading the early init file, but before loading the regular init file (see &lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;Startup Summary&lt;/a&gt;). Packages are not automatically made available if the user option &lt;code&gt;package-enable-at-startup&lt;/code&gt; is set to &lt;code&gt;nil&lt;/code&gt; in the early init file.</source>
          <target state="translated">Каждый раз, когда запускается Emacs, он автоматически вызывает функцию &lt;code&gt;package-activate-all&lt;/code&gt; , чтобы сделать установленные пакеты доступными для текущего сеанса. Это делается после загрузки файла начальной инициализации, но перед загрузкой обычного файла инициализации (см. &lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;Сводка запуска&lt;/a&gt; ). Пакеты не становятся доступными автоматически, если для параметра пользователя &lt;code&gt;package-enable-at-startup&lt;/code&gt; установлено значение &lt;code&gt;nil&lt;/code&gt; в раннем файле инициализации.</target>
        </trans-unit>
        <trans-unit id="43b31733a33654bdd2805cbb8407b551234cd747" translate="yes" xml:space="preserve">
          <source>Whenever Font Lock mode performs syntactic fontification on a stretch of text, it first calls the function specified by &lt;code&gt;syntax-propertize-function&lt;/code&gt;. Major modes can use this to apply &lt;code&gt;syntax-table&lt;/code&gt; text properties to override the buffer&amp;rsquo;s syntax table in special cases. See &lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;Syntax Properties&lt;/a&gt;.</source>
          <target state="translated">Всякий раз, когда режим Font Lock выполняет синтаксическое оформление фрагмента текста, он сначала вызывает функцию, указанную в &lt;code&gt;syntax-propertize-function&lt;/code&gt; . В основных режимах это можно использовать для применения свойств текста &lt;code&gt;syntax-table&lt;/code&gt; для переопределения таблицы синтаксиса буфера в особых случаях. См. &lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;Свойства синтаксиса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9701532f8ac11b4570ffcf320b2ed064240dd127" translate="yes" xml:space="preserve">
          <source>Whenever you change the sort direction in Tabulated List buffers, this indicator toggles between ascending (&amp;ldquo;asc&amp;rdquo;) and descending (&amp;ldquo;desc&amp;rdquo;).</source>
          <target state="translated">Всякий раз, когда вы меняете направление сортировки в буферах табличного списка, этот индикатор переключается между возрастанием (&amp;laquo;asc&amp;raquo;) и убыванием (&amp;laquo;desc&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="3e1bafb7630a8bc5ab2531e22bb1081e38243747" translate="yes" xml:space="preserve">
          <source>Where a &lt;var&gt;button&lt;/var&gt; parameter is specified, it means an object referring to a specific button, either an overlay (for overlay buttons), or a buffer-position or marker (for text property buttons). Such an object is passed as the first argument to a button&amp;rsquo;s invocation function when it is invoked.</source>
          <target state="translated">Если указан параметр &lt;var&gt;button&lt;/var&gt; , это означает объект, ссылающийся на конкретную кнопку, либо наложение (для кнопок наложения), либо на позицию в буфере или маркер (для кнопок свойств текста). Такой объект передается в качестве первого аргумента функции вызова кнопки при ее вызове.</target>
        </trans-unit>
        <trans-unit id="d02666e8ab0c39778c99525936a2eaabd73b0532" translate="yes" xml:space="preserve">
          <source>Where doc strings are defined and stored.</source>
          <target state="translated">Где определяются и хранятся строки документа.</target>
        </trans-unit>
        <trans-unit id="3f4813623d55184860c5f6a01f4e228c1283117a" translate="yes" xml:space="preserve">
          <source>Where exactly paragraphs start and end, for the purpose of the Emacs</source>
          <target state="translated">Где именно начинаются и заканчиваются абзацы для Имаков...</target>
        </trans-unit>
        <trans-unit id="ba39325c6742aa442576d455038d87a41dd28808" translate="yes" xml:space="preserve">
          <source>Where removed text sometimes is saved for later use.</source>
          <target state="translated">Где удаленный текст иногда сохраняется для последующего использования.</target>
        </trans-unit>
        <trans-unit id="5462eb41ab2f1c98473618bced8fdcf5d18a95ce" translate="yes" xml:space="preserve">
          <source>Whether a child frame can have a menu or tool bar is window-system or window manager dependent. Most window-systems explicitly disallow menu bars for child frames. It seems advisable to disable both, menu and tool bars, via the frame&amp;rsquo;s initial parameters settings.</source>
          <target state="translated">Может ли дочерний фрейм иметь меню или панель инструментов, зависит от оконной системы или оконного менеджера. Большинство оконных систем явно запрещают строки меню для дочерних фреймов. Кажется целесообразным отключить и меню, и панели инструментов с помощью начальных настроек параметров фрейма.</target>
        </trans-unit>
        <trans-unit id="a101caa7a5eec779be4af1d0623f1d986489dd25" translate="yes" xml:space="preserve">
          <source>Whether or not a box should be drawn around characters, its color, the width of the box lines, and 3D appearance. Here are the possible values of the &lt;code&gt;:box&lt;/code&gt; attribute, and what they mean:</source>
          <target state="translated">Следует ли рисовать рамку вокруг символов, его цвет, ширину линий рамки и трехмерный вид. Вот возможные значения атрибута &lt;code&gt;:box&lt;/code&gt; и их значение:</target>
        </trans-unit>
        <trans-unit id="cd3ff50be6d445e1a4ed9f70f6f9b1bb63841a38" translate="yes" xml:space="preserve">
          <source>Whether or not characters should be displayed in inverse video. The value should be &lt;code&gt;t&lt;/code&gt; (yes) or &lt;code&gt;nil&lt;/code&gt; (no).</source>
          <target state="translated">Должны ли символы отображаться в инверсном видео. Значение должно быть &lt;code&gt;t&lt;/code&gt; (да) или &lt;code&gt;nil&lt;/code&gt; (нет).</target>
        </trans-unit>
        <trans-unit id="621368ad433e8ead587b19fc3ef1c07ad4ba1121" translate="yes" xml:space="preserve">
          <source>Whether or not characters should be overlined, and in what color. If the value is &lt;code&gt;t&lt;/code&gt;, overlining uses the foreground color of the face. If the value is a string, overlining uses that color. The value &lt;code&gt;nil&lt;/code&gt; means do not overline.</source>
          <target state="translated">Должны ли символы быть подчеркнуты и какого цвета. Если значение равно &lt;code&gt;t&lt;/code&gt; , при наложении используется цвет переднего плана лица. Если значение является строкой, при наложении используется этот цвет. Значение &lt;code&gt;nil&lt;/code&gt; означает, что не следует подчеркивать.</target>
        </trans-unit>
        <trans-unit id="87b82f71ddfeb6b5f036533b3f7f4860e4362d1a" translate="yes" xml:space="preserve">
          <source>Whether or not characters should be strike-through, and in what color. The value is used like that of &lt;code&gt;:overline&lt;/code&gt;.</source>
          <target state="translated">Должны ли символы быть перечеркнутыми и какого цвета. Значение используется как &lt;code&gt;:overline&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a349727f4624f6ab021246da8483aa44028c8643" translate="yes" xml:space="preserve">
          <source>Whether or not characters should be underlined, and in what way. The possible values of the &lt;code&gt;:underline&lt;/code&gt; attribute are:</source>
          <target state="translated">Следует ли подчеркивать символы и каким образом. Возможные значения атрибута &lt;code&gt;:underline&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3a36329c0176b418cdd12abd5e5ccbc9ca3d83e2" translate="yes" xml:space="preserve">
          <source>Whether or not the terminal can display the face attributes given in &lt;var&gt;value&lt;/var&gt;&amp;hellip; (see &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Face Attributes&lt;/a&gt;). See &lt;a href=&quot;display-feature-testing#Display-Face-Attribute-Testing&quot;&gt;Display Face Attribute Testing&lt;/a&gt;, for more information on exactly how this testing is done.</source>
          <target state="translated">Может ли терминал отображать атрибуты лица, указанные в &lt;var&gt;value&lt;/var&gt; &amp;hellip; (см. &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Атрибуты лица&lt;/a&gt; ). См. Раздел &amp;laquo; &lt;a href=&quot;display-feature-testing#Display-Face-Attribute-Testing&quot;&gt;Проверка атрибутов лица&amp;raquo;&lt;/a&gt; для получения дополнительной информации о том, как именно проводится это тестирование.</target>
        </trans-unit>
        <trans-unit id="9ee7143441116933b2b1d2fb74c143183a73d67e" translate="yes" xml:space="preserve">
          <source>Whether or not this face will be extended beyond end of line and will affect the display of the empty space between the end of line and the edge of the window. The value should be &lt;code&gt;t&lt;/code&gt; to display the empty space between end of line and edge of the window using this face, or &lt;code&gt;nil&lt;/code&gt; to not use this face for the space between the end of the line and the edge of the window. When Emacs merges several faces for displaying the empty space beyond end of line, only those faces with &lt;code&gt;:extend&lt;/code&gt; non-&lt;code&gt;nil&lt;/code&gt; will be merged. By default, only a small number of faces, notably, &lt;code&gt;region&lt;/code&gt;, have this attribute set. This attribute is different from the others in that when a theme doesn&amp;rsquo;t specify an explicit value for a face, the value from the original face definition by &lt;code&gt;defface&lt;/code&gt; is inherited (see &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;).</source>
          <target state="translated">Будет ли эта грань расширяться за пределы конца строки и влиять на отображение пустого пространства между концом строки и краем окна. Значение должно быть &lt;code&gt;t&lt;/code&gt; , чтобы отображать пустое пространство между концом строки и краем окна, использующего эту грань, или &lt;code&gt;nil&lt;/code&gt; , чтобы не использовать эту грань для пространства между концом строки и краем окна. Когда Emacs объединяет несколько граней для отображения пустого пространства за концом строки, будут объединены только те грани с &lt;code&gt;:extend&lt;/code&gt; non- &lt;code&gt;nil&lt;/code&gt; . По умолчанию только небольшое количество лиц, особенно &lt;code&gt;region&lt;/code&gt; , установите этот атрибут. Этот атрибут отличается от других тем, что, когда в теме не указано явное значение для лица, наследуется значение из исходного определения лица с помощью &lt;code&gt;defface&lt;/code&gt; (см. &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Определение лиц&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1b103ae335cfa2bb9c78948f91ad92c8adb3c29b" translate="yes" xml:space="preserve">
          <source>Whether or not to pause for &lt;code&gt;edebug-sit-for-seconds&lt;/code&gt; on reaching a breakpoint. Set to &lt;code&gt;nil&lt;/code&gt; to prevent the pause, non-&lt;code&gt;nil&lt;/code&gt; to allow it.</source>
          <target state="translated">&lt;code&gt;edebug-sit-for-seconds&lt;/code&gt; ли делать паузу на edebug-sit-for-seconds при достижении точки останова. Установите &lt;code&gt;nil&lt;/code&gt; чтобы предотвратить паузу, и &lt;code&gt;nil&lt;/code&gt; чтобы разрешить ее.</target>
        </trans-unit>
        <trans-unit id="3339a6de20f77bd40ffb1ed898ed4bb70552d7e6" translate="yes" xml:space="preserve">
          <source>Whether recursive entry to minibuffer is allowed.</source>
          <target state="translated">Разрешен ли рекурсивный вход в минибуфер.</target>
        </trans-unit>
        <trans-unit id="1ce168d2c5a0dc5c2330545c5a50a1abb3761466" translate="yes" xml:space="preserve">
          <source>Whether the action &lt;code&gt;renamed&lt;/code&gt; is returned, depends on the used watch library. Otherwise, the actions &lt;code&gt;deleted&lt;/code&gt; and &lt;code&gt;created&lt;/code&gt; could be returned in a random order.</source>
          <target state="translated">Будет ли возвращено &lt;code&gt;renamed&lt;/code&gt; действие , зависит от используемой библиотеки часов. В противном случае &lt;code&gt;deleted&lt;/code&gt; и &lt;code&gt;created&lt;/code&gt; могут быть возвращены в случайном порядке.</target>
        </trans-unit>
        <trans-unit id="96dabfa3befc4cf90264ef632624f49c9ceaaef3" translate="yes" xml:space="preserve">
          <source>Whether the frame has scroll bars (see &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Scroll Bars&lt;/a&gt;) for vertical scrolling, and which side of the frame they should be on. The possible values are &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, and &lt;code&gt;nil&lt;/code&gt; for no scroll bars.</source>
          <target state="translated">Есть ли у фрейма полосы прокрутки (см. &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Полосы прокрутки&lt;/a&gt; ) для вертикальной прокрутки и с какой стороны фрейма они должны быть. Возможные значения: &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; и &lt;code&gt;nil&lt;/code&gt; без полос прокрутки.</target>
        </trans-unit>
        <trans-unit id="570cdec0afbab44285125073d07498367313b12c" translate="yes" xml:space="preserve">
          <source>Whether the frame has scroll bars for horizontal scrolling (&lt;code&gt;t&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt; mean yes, &lt;code&gt;nil&lt;/code&gt; means no).</source>
          <target state="translated">Есть ли в кадре полосы прокрутки для горизонтальной прокрутки ( &lt;code&gt;t&lt;/code&gt; и &lt;code&gt;bottom&lt;/code&gt; означают да, &lt;code&gt;nil&lt;/code&gt; означает нет).</target>
        </trans-unit>
        <trans-unit id="46c8e8c485a23a80ef755951ee8e139296254b76" translate="yes" xml:space="preserve">
          <source>Whether the menu bar is wrapped or truncated whenever its width becomes too large to fit on its frame depends on the toolkit . Usually, only Motif and MS-Windows builds can wrap the menu bar. When they (un-)wrap the menu bar, they try to keep the outer height of the frame unchanged, so the native height of the frame (see below) will change instead.</source>
          <target state="translated">Будет ли панель меню обернута или усечена,если ее ширина станет слишком большой,чтобы поместиться на ее рамке,зависит от набора инструментов.Обычно только сборки Motif и MS-Windows могут обернуть панель меню.Когда они (un-)завертывают панель меню,они пытаются сохранить внешнюю высоту фрейма неизменной,поэтому вместо нее меняется исходная высота фрейма (см.ниже).</target>
        </trans-unit>
        <trans-unit id="3225f8a8df7af5e6c1696d052e30a6fd5b493417" translate="yes" xml:space="preserve">
          <source>Whether this frame has its own minibuffer. The value &lt;code&gt;t&lt;/code&gt; means yes, &lt;code&gt;nil&lt;/code&gt; means no, &lt;code&gt;only&lt;/code&gt; means this frame is just a minibuffer. If the value is a minibuffer window (in some other frame), the frame uses that minibuffer.</source>
          <target state="translated">Есть ли у этого кадра свой минибуфер. Значение &lt;code&gt;t&lt;/code&gt; означает да, &lt;code&gt;nil&lt;/code&gt; означает нет, &lt;code&gt;only&lt;/code&gt; означает, что этот кадр является просто минибуфером. Если значение является окном минибуфера (в каком-то другом кадре), кадр использует этот минибуфер.</target>
        </trans-unit>
        <trans-unit id="d2f6aa5530c5eed14409c879a79ce151a1ce3180" translate="yes" xml:space="preserve">
          <source>Whether to query if exiting will kill a process.</source>
          <target state="translated">Запрос о том,будет ли выход убивать процесс.</target>
        </trans-unit>
        <trans-unit id="a30cb334b0a4c61c095185a2336a959e81e282e4" translate="yes" xml:space="preserve">
          <source>Which File Defined a Certain Symbol</source>
          <target state="translated">Какой файл определил определенный символ.</target>
        </trans-unit>
        <trans-unit id="6333b28a91521bad756efc5b44c75736ce6349f6" translate="yes" xml:space="preserve">
          <source>Which buffer is current, and the positions of point and the mark in the current buffer, are saved and restored.</source>
          <target state="translated">Какой буфер является текущим,а позиции точки и метки в текущем буфере сохраняются и восстанавливаются.</target>
        </trans-unit>
        <trans-unit id="4604b0e4277280e8cbbfe834a63404bd4ec61668" translate="yes" xml:space="preserve">
          <source>Which buffers have been or should be shown.</source>
          <target state="translated">Какие буферы были или должны быть показаны.</target>
        </trans-unit>
        <trans-unit id="d57ea32eeaa1bddbc30ef3b79fbf8e85b67e6b87" translate="yes" xml:space="preserve">
          <source>Which character sets are used in a buffer?</source>
          <target state="translated">Какие наборы символов используются в буфере?</target>
        </trans-unit>
        <trans-unit id="46c8ee6549ff4d0835a19102159828fa10263ac4" translate="yes" xml:space="preserve">
          <source>Which parameters are accepted by the notification server can be checked via &lt;code&gt;notifications-get-capabilities&lt;/code&gt;.</source>
          <target state="translated">Какие параметры принимает сервер уведомлений, можно проверить с помощью &lt;code&gt;notifications-get-capabilities&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5d68f0edd1de7e191fb9888edee4a6bdb5cd0a8" translate="yes" xml:space="preserve">
          <source>Which window system is being used.</source>
          <target state="translated">Какая оконная система используется.</target>
        </trans-unit>
        <trans-unit id="982c8a6972c3e9f30d81bf085e5ad89215bdf352" translate="yes" xml:space="preserve">
          <source>While Edebug is active, the command</source>
          <target state="translated">Пока Edebug активен,команда</target>
        </trans-unit>
        <trans-unit id="e77219cea90f180ba9fd77cd16c9872f93dcfca6" translate="yes" xml:space="preserve">
          <source>While Emacs waits for the synchronous subprocess to terminate, the user can quit by typing</source>
          <target state="translated">Пока Emacs ждет завершения синхронного подпроцесса,пользователь может выйти из него,набрав</target>
        </trans-unit>
        <trans-unit id="a0e9cf839f5ec54d82aeb0511d9c2ac3ea7094c9" translate="yes" xml:space="preserve">
          <source>While a sentinel is running, the process sentinel is temporarily set to &lt;code&gt;nil&lt;/code&gt; so that the sentinel won&amp;rsquo;t run recursively. For this reason it is not possible for a sentinel to specify a new sentinel.</source>
          <target state="translated">Пока дозорный работает, дозорный процесс временно устанавливается на &lt;code&gt;nil&lt;/code&gt; чтобы дозорный не работал рекурсивно. По этой причине дозорный не может указать нового дозорного.</target>
        </trans-unit>
        <trans-unit id="3bca0316676840ea135f514876dcb5d700c34bac" translate="yes" xml:space="preserve">
          <source>While a sentinel or filter function is running, this function returns non-&lt;code&gt;nil&lt;/code&gt; if Emacs was waiting for keyboard input from the user at the time the sentinel or filter function was called, or &lt;code&gt;nil&lt;/code&gt; if it was not.</source>
          <target state="translated">Пока функция дозорного или фильтра работает, эта функция возвращает &lt;code&gt;nil&lt;/code&gt; если Emacs ожидал ввода с клавиатуры от пользователя в момент вызова функции дозорного или фильтрующего, или &lt;code&gt;nil&lt;/code&gt; если это не так.</target>
        </trans-unit>
        <trans-unit id="44c6b48c29b2eea207adfb6603fdd19cc584e716" translate="yes" xml:space="preserve">
          <source>While executing or tracing, you can interrupt the execution by typing any Edebug command. Edebug stops the program at the next stop point and then executes the command you typed. For example, typing</source>
          <target state="translated">Во время выполнения или трассировки вы можете прервать выполнение,набрав любую команду Edebug.Edebug останавливает программу в следующей точке остановки,а затем выполняет введенную команду.Например,ввод</target>
        </trans-unit>
        <trans-unit id="4b7d809185c9cf5559ee0f75e3a5509cf67c9b64" translate="yes" xml:space="preserve">
          <source>While global variables are shared among all Emacs Lisp threads, local variables are not&amp;mdash;a dynamic &lt;code&gt;let&lt;/code&gt; binding is local. Each thread also has its own current buffer (see &lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;Current Buffer&lt;/a&gt;) and its own match data (see &lt;a href=&quot;match-data#Match-Data&quot;&gt;Match Data&lt;/a&gt;).</source>
          <target state="translated">В то время как глобальные переменные являются общими для всех потоков Emacs Lisp, локальные переменные - нет - динамическое связывание &lt;code&gt;let&lt;/code&gt; является локальным. Каждый поток также имеет свой собственный текущий буфер (см. &lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;Текущий буфер&lt;/a&gt; ) и свои собственные данные соответствия (см. &lt;a href=&quot;match-data#Match-Data&quot;&gt;Данные&lt;/a&gt; сопоставления ).</target>
        </trans-unit>
        <trans-unit id="9f6b6c536addb2d944507d585c2d3b9b43662ada" translate="yes" xml:space="preserve">
          <source>While holding down the meta and shift keys, the user might press the second mouse button on the window&amp;rsquo;s mode line, and then drag the mouse into another window. That produces a pair of events like these:</source>
          <target state="translated">Удерживая нажатыми клавиши meta и shift, пользователь может нажать вторую кнопку мыши на строке режима окна, а затем перетащить мышь в другое окно. Это создает пару таких событий:</target>
        </trans-unit>
        <trans-unit id="0ce07a1bc20c1df5be5ff473ceaca3be3b6dfe4d" translate="yes" xml:space="preserve">
          <source>While holding the control key down, the user might hold down the second mouse button, and drag the mouse from one line to the next. That produces two events, as shown here:</source>
          <target state="translated">Удерживая клавишу управления нажатой,пользователь может удерживать вторую кнопку мыши и перетаскивать мышь с одной строки на другую.Это приводит к двум событиям,как показано здесь:</target>
        </trans-unit>
        <trans-unit id="aa2b138dc7a434874a587f2ea0714355fe7e8345" translate="yes" xml:space="preserve">
          <source>While in Edebug, you can set a breakpoint with</source>
          <target state="translated">Находясь в Edebug,вы можете установить точку останова с помощью</target>
        </trans-unit>
        <trans-unit id="b96e5a724c0ebbb3de9c153f70114adfb541cb53" translate="yes" xml:space="preserve">
          <source>While this function is mainly intended for use in auto-reverting, it could be used for other purposes as well. For instance, if auto-reverting is not enabled, it could be used to warn the user that the buffer needs reverting. The idea behind the &lt;var&gt;noconfirm&lt;/var&gt; argument is that it should be &lt;code&gt;t&lt;/code&gt; if the buffer is going to be reverted without asking the user and &lt;code&gt;nil&lt;/code&gt; if the function is just going to be used to warn the user that the buffer is out of date. In particular, for use in auto-reverting, &lt;var&gt;noconfirm&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;. If the function is only going to be used for auto-reverting, you can ignore the &lt;var&gt;noconfirm&lt;/var&gt; argument.</source>
          <target state="translated">While this function is mainly intended for use in auto-reverting, it could be used for other purposes as well. For instance, if auto-reverting is not enabled, it could be used to warn the user that the buffer needs reverting. The idea behind the &lt;var&gt;noconfirm&lt;/var&gt; argument is that it should be &lt;code&gt;t&lt;/code&gt; if the buffer is going to be reverted without asking the user and &lt;code&gt;nil&lt;/code&gt; if the function is just going to be used to warn the user that the buffer is out of date. In particular, for use in auto-reverting, &lt;var&gt;noconfirm&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; . If the function is only going to be used for auto-reverting, you can ignore the &lt;var&gt;noconfirm&lt;/var&gt; argument.</target>
        </trans-unit>
        <trans-unit id="09ec9a61d40e758f8a1ea280765235554cb46e51" translate="yes" xml:space="preserve">
          <source>While using Edebug, you can specify &lt;em&gt;breakpoints&lt;/em&gt; in the program you are testing: these are places where execution should stop. You can set a breakpoint at any stop point, as defined in &lt;a href=&quot;using-edebug#Using-Edebug&quot;&gt;Using Edebug&lt;/a&gt;. For setting and unsetting breakpoints, the stop point that is affected is the first one at or after point in the source code buffer. Here are the Edebug commands for breakpoints:</source>
          <target state="translated">While using Edebug, you can specify &lt;em&gt;breakpoints&lt;/em&gt; in the program you are testing: these are places where execution should stop. You can set a breakpoint at any stop point, as defined in &lt;a href=&quot;using-edebug#Using-Edebug&quot;&gt;Using Edebug&lt;/a&gt;. For setting and unsetting breakpoints, the stop point that is affected is the first one at or after point in the source code buffer. Here are the Edebug commands for breakpoints:</target>
        </trans-unit>
        <trans-unit id="fa12cd365478af88379663588f57e8ff97a39d58" translate="yes" xml:space="preserve">
          <source>While window change functions are run, the functions described next can be called to get more insight into what has changed for a specific window or frame since the last redisplay. All these functions take a live window as single, optional argument, defaulting to the selected window.</source>
          <target state="translated">Пока выполняются функции смены окон,можно вызвать функции,описанные ниже,чтобы получить более полное представление о том,что изменилось для конкретного окна или рамки с момента последнего повторного показа.Все эти функции принимают &quot;живое&quot; окно в качестве единственного,необязательного аргумента,по умолчанию для выбранного окна.</target>
        </trans-unit>
        <trans-unit id="21a7273c21de5277f0ec77123f7d544d0ae946c6" translate="yes" xml:space="preserve">
          <source>While within Edebug, you can evaluate expressions as if Edebug were not running. Edebug tries to be invisible to the expression&amp;rsquo;s evaluation and printing. Evaluation of expressions that cause side effects will work as expected, except for changes to data that Edebug explicitly saves and restores. See &lt;a href=&quot;the-outside-context#The-Outside-Context&quot;&gt;The Outside Context&lt;/a&gt;, for details on this process.</source>
          <target state="translated">While within Edebug, you can evaluate expressions as if Edebug were not running. Edebug tries to be invisible to the expression&amp;rsquo;s evaluation and printing. Evaluation of expressions that cause side effects will work as expected, except for changes to data that Edebug explicitly saves and restores. See &lt;a href=&quot;the-outside-context#The-Outside-Context&quot;&gt;The Outside Context&lt;/a&gt;, for details on this process.</target>
        </trans-unit>
        <trans-unit id="ddce35a991a7cc6488454c01eee293fd067c30fc" translate="yes" xml:space="preserve">
          <source>Whitespace characters before and after the commas are ignored.</source>
          <target state="translated">Пробельные символы до и после запятых игнорируются.</target>
        </trans-unit>
        <trans-unit id="cefe02b00f13ea6c3bbe7d3da7dad90a1a52f9a6" translate="yes" xml:space="preserve">
          <source>Whitespace characters: &amp;lsquo;&amp;rsquo; or &amp;lsquo;</source>
          <target state="translated">Whitespace characters: &amp;lsquo;&amp;rsquo; or &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="6070f5330973d3f20cf4dd45a51e33df12e43edc" translate="yes" xml:space="preserve">
          <source>Whole number of seconds.</source>
          <target state="translated">Всего несколько секунд.</target>
        </trans-unit>
        <trans-unit id="5978321d9551ea526dd1e41cdfbcda064a3e0c90" translate="yes" xml:space="preserve">
          <source>Why Text Properties are not Intervals</source>
          <target state="translated">Почему текстовые свойства не являются интервалами.</target>
        </trans-unit>
        <trans-unit id="7c8f385f8776abe3ee23cd356b28fcbf13f32163" translate="yes" xml:space="preserve">
          <source>Why text properties do not use Lisp-visible text intervals.</source>
          <target state="translated">Почему в свойствах текста не используются текстовые интервалы,видимые на языке Lisp.</target>
        </trans-unit>
        <trans-unit id="55b1b545af40f90e002eebaef362d6c451427538" translate="yes" xml:space="preserve">
          <source>Width and height in millimeters as &amp;lsquo;</source>
          <target state="translated">Width and height in millimeters as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="4f2caf4fd01ef1de25a0fa06f078de09fbbe7ae0" translate="yes" xml:space="preserve">
          <source>Window Configuration Type</source>
          <target state="translated">Тип конфигурации окна</target>
        </trans-unit>
        <trans-unit id="4719b364ada9ea80bc95dadf1a46b5d6e42f300b" translate="yes" xml:space="preserve">
          <source>Window Configurations</source>
          <target state="translated">Конфигурации окон</target>
        </trans-unit>
        <trans-unit id="383fc633828b7f53a6347e277fbc6931a7fb4718" translate="yes" xml:space="preserve">
          <source>Window Dividers</source>
          <target state="translated">Оконные разделители</target>
        </trans-unit>
        <trans-unit id="f2acc5dfa54156a214d1606598b55d8bc1d36e43" translate="yes" xml:space="preserve">
          <source>Window Frame Parameters</source>
          <target state="translated">Параметры оконной рамы</target>
        </trans-unit>
        <trans-unit id="23cfeec33d3985ca43bf26e706bb33e16524aae7" translate="yes" xml:space="preserve">
          <source>Window Header Lines</source>
          <target state="translated">Линии заголовков окон</target>
        </trans-unit>
        <trans-unit id="aea40a08850dedc93176c8c25cbf6c46773b984b" translate="yes" xml:space="preserve">
          <source>Window History</source>
          <target state="translated">История окна</target>
        </trans-unit>
        <trans-unit id="2adeacaba642526348dabb53054e0f9ba68a48ff" translate="yes" xml:space="preserve">
          <source>Window Internals</source>
          <target state="translated">Оконные интерьеры</target>
        </trans-unit>
        <trans-unit id="0aa526e852b8c127dccb3d9d8f01d311682e7f8e" translate="yes" xml:space="preserve">
          <source>Window Management Parameters</source>
          <target state="translated">Параметры управления окнами</target>
        </trans-unit>
        <trans-unit id="7e63c35b290d11eceb95853777f7c66c956be145" translate="yes" xml:space="preserve">
          <source>Window Parameters</source>
          <target state="translated">Параметры окон</target>
        </trans-unit>
        <trans-unit id="ddf6b6b64a3f967df5de0d5f500dc367c7816d58" translate="yes" xml:space="preserve">
          <source>Window Sizes</source>
          <target state="translated">Размеры окна</target>
        </trans-unit>
        <trans-unit id="e3d90bae9b52e6df713535cc491f9d7260cb7e1d" translate="yes" xml:space="preserve">
          <source>Window System Selections</source>
          <target state="translated">Выбор оконной системы</target>
        </trans-unit>
        <trans-unit id="99cc4ccf3f53f630b2d30920cc334165dfa70c56" translate="yes" xml:space="preserve">
          <source>Window Systems</source>
          <target state="translated">Оконные системы</target>
        </trans-unit>
        <trans-unit id="92bfda0dd090278d55f83c688172701c41d07f9e" translate="yes" xml:space="preserve">
          <source>Window Type</source>
          <target state="translated">Тип окна</target>
        </trans-unit>
        <trans-unit id="22a63e85e94d72b84de62c3dd1b814e7ef77e9dd" translate="yes" xml:space="preserve">
          <source>Window change functions are called during redisplay for each frame as follows: First, any buffer-local window buffer change function, window size change function, selected window change and window state change functions are called in this order. Next, the default values for these functions are called in the same order. Then any buffer-local window configuration change functions are called followed by functions specified by the default value of those functions. Finally, functions on &lt;code&gt;window-state-change-hook&lt;/code&gt; are run.</source>
          <target state="translated">Window change functions are called during redisplay for each frame as follows: First, any buffer-local window buffer change function, window size change function, selected window change and window state change functions are called in this order. Next, the default values for these functions are called in the same order. Then any buffer-local window configuration change functions are called followed by functions specified by the default value of those functions. Finally, functions on &lt;code&gt;window-state-change-hook&lt;/code&gt; are run.</target>
        </trans-unit>
        <trans-unit id="0a566afc3561cc5cec927cae0207cc941a9353aa" translate="yes" xml:space="preserve">
          <source>Window change functions are run for a specific frame only if a corresponding change was registered for that frame earlier. Such changes include the creation or deletion of a window or the assignment of another buffer or size to a window. Note that even when such a change has been registered, this does not mean that any of the hooks described above is run. If, for example, a change was registered within the scope of a window excursion (see &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;), this will trigger a call of window change functions only if that excursion still persists at the time change functions are run. If it is exited earlier, hooks will be run only if registered by a change outside the scope of that excursion.</source>
          <target state="translated">Window change functions are run for a specific frame only if a corresponding change was registered for that frame earlier. Such changes include the creation or deletion of a window or the assignment of another buffer or size to a window. Note that even when such a change has been registered, this does not mean that any of the hooks described above is run. If, for example, a change was registered within the scope of a window excursion (see &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;), this will trigger a call of window change functions only if that excursion still persists at the time change functions are run. If it is exited earlier, hooks will be run only if registered by a change outside the scope of that excursion.</target>
        </trans-unit>
        <trans-unit id="b6e565000823201cf9f76d83eeb2ce5e7ac9f359" translate="yes" xml:space="preserve">
          <source>Window change functions should not create or delete windows or change the buffer, size or selection status of any window because there is no guarantee that the information about such a change will be propagated to other window change functions. If at all, any such change should be executed only by the last function listed by the default value of &lt;code&gt;window-state-change-hook&lt;/code&gt;.</source>
          <target state="translated">Window change functions should not create or delete windows or change the buffer, size or selection status of any window because there is no guarantee that the information about such a change will be propagated to other window change functions. If at all, any such change should be executed only by the last function listed by the default value of &lt;code&gt;window-state-change-hook&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ca7163596db4bd70d63749d7a570ef34f5c5069" translate="yes" xml:space="preserve">
          <source>Window configurations do not have a read syntax; their print syntax looks like &amp;lsquo;</source>
          <target state="translated">Window configurations do not have a read syntax; their print syntax looks like &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="1d3d93f781bc955d732be578f67fb0deca437299" translate="yes" xml:space="preserve">
          <source>Window dividers are bars drawn between a frame&amp;rsquo;s windows. A right divider is drawn between a window and any adjacent windows on the right. Its width (thickness) is specified by the frame parameter &lt;code&gt;right-divider-width&lt;/code&gt;. A bottom divider is drawn between a window and adjacent windows on the bottom or the echo area. Its width is specified by the frame parameter &lt;code&gt;bottom-divider-width&lt;/code&gt;. In either case, specifying a width of zero means to not draw such dividers. See &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Layout Parameters&lt;/a&gt;.</source>
          <target state="translated">Window dividers are bars drawn between a frame&amp;rsquo;s windows. A right divider is drawn between a window and any adjacent windows on the right. Its width (thickness) is specified by the frame parameter &lt;code&gt;right-divider-width&lt;/code&gt; . A bottom divider is drawn between a window and adjacent windows on the bottom or the echo area. Its width is specified by the frame parameter &lt;code&gt;bottom-divider-width&lt;/code&gt; . In either case, specifying a width of zero means to not draw such dividers. See &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Layout Parameters&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7d7ad521e7ccb431c898f004aae10b9fcd97052e" translate="yes" xml:space="preserve">
          <source>Window managers generally heed user-specified positions, and some heed program-specified positions too. But many ignore program-specified positions, placing the window in a default fashion or letting the user place it with the mouse. Some window managers, including &lt;code&gt;twm&lt;/code&gt;, let the user specify whether to obey program-specified positions or ignore them.</source>
          <target state="translated">Window managers generally heed user-specified positions, and some heed program-specified positions too. But many ignore program-specified positions, placing the window in a default fashion or letting the user place it with the mouse. Some window managers, including &lt;code&gt;twm&lt;/code&gt; , let the user specify whether to obey program-specified positions or ignore them.</target>
        </trans-unit>
        <trans-unit id="1ac30c43ebb99ef6fdeeea2b26ee628487f8b105" translate="yes" xml:space="preserve">
          <source>Window managers might not bother to extend their focus follows mouse policy to child frames. Customizing &lt;code&gt;mouse-autoselect-window&lt;/code&gt; can help in this regard (see &lt;a href=&quot;mouse-window-auto_002dselection#Mouse-Window-Auto_002dselection&quot;&gt;Mouse Window Auto-selection&lt;/a&gt;).</source>
          <target state="translated">Window managers might not bother to extend their focus follows mouse policy to child frames. Customizing &lt;code&gt;mouse-autoselect-window&lt;/code&gt; can help in this regard (see &lt;a href=&quot;mouse-window-auto_002dselection#Mouse-Window-Auto_002dselection&quot;&gt;Mouse Window Auto-selection&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="6e452eeb875beec394b3abe50031295c7bb2eae1" translate="yes" xml:space="preserve">
          <source>Window systems provide general ways for the user to control which window gets keyboard input. This choice of window is called the &lt;em&gt;focus&lt;/em&gt;. When the user does something to switch between Emacs frames, that generates a &lt;em&gt;focus event&lt;/em&gt;. The normal definition of a focus event, in the global keymap, is to select a new frame within Emacs, as the user would expect. See &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;, which also describes hooks related to focus events.</source>
          <target state="translated">Window systems provide general ways for the user to control which window gets keyboard input. This choice of window is called the &lt;em&gt;focus&lt;/em&gt;. When the user does something to switch between Emacs frames, that generates a &lt;em&gt;focus event&lt;/em&gt;. The normal definition of a focus event, in the global keymap, is to select a new frame within Emacs, as the user would expect. See &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;, which also describes hooks related to focus events.</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="be6f7128e1368ad70800befb826104ed0c1bda9a" translate="yes" xml:space="preserve">
          <source>Windows and Frames</source>
          <target state="translated">Windows and Frames</target>
        </trans-unit>
        <trans-unit id="2e188987453ed30440b9c0e01d3bc06dc6caecbc" translate="yes" xml:space="preserve">
          <source>Windows and Point</source>
          <target state="translated">Windows and Point</target>
        </trans-unit>
        <trans-unit id="8eaccfa1394601c417974424029ea241c342bf12" translate="yes" xml:space="preserve">
          <source>Windows are grouped into frames (see &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;). Each frame contains at least one window; the user can subdivide it into multiple, non-overlapping windows to view several buffers at once. Lisp programs can use multiple windows for a variety of purposes. In Rmail, for example, you can view a summary of message titles in one window, and the contents of the selected message in another window.</source>
          <target state="translated">Windows are grouped into frames (see &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;). Each frame contains at least one window; the user can subdivide it into multiple, non-overlapping windows to view several buffers at once. Lisp programs can use multiple windows for a variety of purposes. In Rmail, for example, you can view a summary of message titles in one window, and the contents of the selected message in another window.</target>
        </trans-unit>
        <trans-unit id="442df2648c226eb5a7b76a491a65f77c9ed3c717" translate="yes" xml:space="preserve">
          <source>Windows are grouped on the screen into frames; each window belongs to one and only one frame. See &lt;a href=&quot;frame-type#Frame-Type&quot;&gt;Frame Type&lt;/a&gt;.</source>
          <target state="translated">Windows are grouped on the screen into frames; each window belongs to one and only one frame. See &lt;a href=&quot;frame-type#Frame-Type&quot;&gt;Frame Type&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ae05c0cf1406d754b9681ad2b7e23e7ead25ad0e" translate="yes" xml:space="preserve">
          <source>Windows have no read syntax. They print in hash notation, giving the window number and the name of the buffer being displayed. The window numbers exist to identify windows uniquely, since the buffer displayed in any given window can change frequently.</source>
          <target state="translated">У Windows нет синтаксиса для чтения.Они печатают в хэш-нотации,указывая номер окна и имя отображаемого буфера.Номера окон существуют для уникальной идентификации окон,так как буфер,отображаемый в любом данном окне,может часто меняться.</target>
        </trans-unit>
        <trans-unit id="fdf9128b6bea0651ba58ad62c53b7ddaebe1ea6c" translate="yes" xml:space="preserve">
          <source>Windows icon file. If &lt;var&gt;icon&lt;/var&gt; is not a string, or if this parameter is not specified, the standard Emacs icon will be used.</source>
          <target state="translated">Windows icon file. If &lt;var&gt;icon&lt;/var&gt; is not a string, or if this parameter is not specified, the standard Emacs icon will be used.</target>
        </trans-unit>
        <trans-unit id="2eced8326ec21d9f7d69dba0bfb2bcdec56754d5" translate="yes" xml:space="preserve">
          <source>Windows in the same frame are organized into a &lt;em&gt;window tree&lt;/em&gt;, whose leaf nodes are the live windows. The internal nodes of a window tree are not live; they exist for the purpose of organizing the relationships between live windows. The root node of a window tree is called the &lt;em&gt;root window&lt;/em&gt;. It can be either a live window (if the frame has just one window), or an internal window.</source>
          <target state="translated">Windows in the same frame are organized into a &lt;em&gt;window tree&lt;/em&gt;, whose leaf nodes are the live windows. The internal nodes of a window tree are not live; they exist for the purpose of organizing the relationships between live windows. The root node of a window tree is called the &lt;em&gt;root window&lt;/em&gt;. It can be either a live window (if the frame has just one window), or an internal window.</target>
        </trans-unit>
        <trans-unit id="fa199959bd4c34b8dec232ab0f4f26f817f32d3a" translate="yes" xml:space="preserve">
          <source>Windows subdivide frames.</source>
          <target state="translated">Субдивидуальные рамки Windows.</target>
        </trans-unit>
        <trans-unit id="9625ad71e1126b85f0c9b31dbd77fa5cb6db2ec0" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;cl-case&lt;/code&gt;, you would need to explicitly declare a local variable &lt;code&gt;code&lt;/code&gt; to hold the return value of &lt;code&gt;get-return-code&lt;/code&gt;. Also &lt;code&gt;cl-case&lt;/code&gt; is difficult to use with strings because it uses &lt;code&gt;eql&lt;/code&gt; for comparison.</source>
          <target state="translated">With &lt;code&gt;cl-case&lt;/code&gt; , you would need to explicitly declare a local variable &lt;code&gt;code&lt;/code&gt; to hold the return value of &lt;code&gt;get-return-code&lt;/code&gt; . Also &lt;code&gt;cl-case&lt;/code&gt; is difficult to use with strings because it uses &lt;code&gt;eql&lt;/code&gt; for comparison.</target>
        </trans-unit>
        <trans-unit id="379c5ad0fc05121b28d86312f7275e845327cfdf" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;debugger-stack-frame-as-list&lt;/code&gt; non-&lt;code&gt;nil&lt;/code&gt;, the above example would look as follows:</source>
          <target state="translated">With &lt;code&gt;debugger-stack-frame-as-list&lt;/code&gt; non- &lt;code&gt;nil&lt;/code&gt; , the above example would look as follows:</target>
        </trans-unit>
        <trans-unit id="6100bd81973aa5e616388683b73c2c5e9ccd6566" translate="yes" xml:space="preserve">
          <source>With Emacs, you can have a drag event without even changing your clothes. A &lt;em&gt;drag event&lt;/em&gt; happens every time the user presses a mouse button and then moves the mouse to a different character position before releasing the button. Like all mouse events, drag events are represented in Lisp as lists. The lists record both the starting mouse position and the final position, like this:</source>
          <target state="translated">With Emacs, you can have a drag event without even changing your clothes. A &lt;em&gt;drag event&lt;/em&gt; happens every time the user presses a mouse button and then moves the mouse to a different character position before releasing the button. Like all mouse events, drag events are represented in Lisp as lists. The lists record both the starting mouse position and the final position, like this:</target>
        </trans-unit>
        <trans-unit id="d1dc946c2f6fe89324445abc6e222b559616382c" translate="yes" xml:space="preserve">
          <source>With a prefix argument &lt;var&gt;n&lt;/var&gt;, the temporary breakpoint is placed &lt;var&gt;n&lt;/var&gt; sexps beyond point. If the containing list ends before &lt;var&gt;n&lt;/var&gt; more elements, then the place to stop is after the containing expression.</source>
          <target state="translated">With a prefix argument &lt;var&gt;n&lt;/var&gt; , the temporary breakpoint is placed &lt;var&gt;n&lt;/var&gt; sexps beyond point. If the containing list ends before &lt;var&gt;n&lt;/var&gt; more elements, then the place to stop is after the containing expression.</target>
        </trans-unit>
        <trans-unit id="ecb154911a9d6e366231dc08d7ca7f3855eaa8fd" translate="yes" xml:space="preserve">
          <source>With a prefix argument,</source>
          <target state="translated">С префиксным аргументом,</target>
        </trans-unit>
        <trans-unit id="210c23b8bcc2767909392a98f4eda932b17f5a83" translate="yes" xml:space="preserve">
          <source>With an argument of 0, unconditionally do &lt;em&gt;not&lt;/em&gt; make any backup file.</source>
          <target state="translated">With an argument of 0, unconditionally do &lt;em&gt;not&lt;/em&gt; make any backup file.</target>
        </trans-unit>
        <trans-unit id="8c81c5821676f0924542fa74b61fdd66d16a6e61" translate="yes" xml:space="preserve">
          <source>With an argument of 16 or 64, reflecting 2 or 3</source>
          <target state="translated">С аргументом 16 или 64,отражающим 2 или 3</target>
        </trans-unit>
        <trans-unit id="87eba365dd983ee0592230b13c20c52100f40dd2" translate="yes" xml:space="preserve">
          <source>With an argument of 4 or 64, reflecting 1 or 3</source>
          <target state="translated">С аргументом 4 или 64,отражающим 1 или 3</target>
        </trans-unit>
        <trans-unit id="e7ce6ed10fead795cfac1fde7a353d1e9aebcb87" translate="yes" xml:space="preserve">
          <source>With an argument of zero, &lt;code&gt;recenter&lt;/code&gt; positions the current line at the top of the window. The command &lt;code&gt;recenter-top-bottom&lt;/code&gt; offers a more convenient way to achieve this.</source>
          <target state="translated">With an argument of zero, &lt;code&gt;recenter&lt;/code&gt; positions the current line at the top of the window. The command &lt;code&gt;recenter-top-bottom&lt;/code&gt; offers a more convenient way to achieve this.</target>
        </trans-unit>
        <trans-unit id="347d2530c8917d08eba5b99f61f3aa4d6352f05f" translate="yes" xml:space="preserve">
          <source>With one or more &lt;var&gt;divisors&lt;/var&gt;, this function divides &lt;var&gt;number&lt;/var&gt; by each divisor in &lt;var&gt;divisors&lt;/var&gt; in turn, and returns the quotient. With no &lt;var&gt;divisors&lt;/var&gt;, this function returns 1/&lt;var&gt;number&lt;/var&gt;, i.e., the multiplicative inverse of &lt;var&gt;number&lt;/var&gt;. Each argument may be a number or a marker.</source>
          <target state="translated">With one or more &lt;var&gt;divisors&lt;/var&gt; , this function divides &lt;var&gt;number&lt;/var&gt; by each divisor in &lt;var&gt;divisors&lt;/var&gt; in turn, and returns the quotient. With no &lt;var&gt;divisors&lt;/var&gt; , this function returns 1/ &lt;var&gt;number&lt;/var&gt; , i.e., the multiplicative inverse of &lt;var&gt;number&lt;/var&gt; . Each argument may be a number or a marker.</target>
        </trans-unit>
        <trans-unit id="a3c3cd80ce77cd76a8344934a743105c47af6c03" translate="yes" xml:space="preserve">
          <source>With point at the start:</source>
          <target state="translated">С точкой в начале:</target>
        </trans-unit>
        <trans-unit id="3566916c616498258bd7794ada3495127a35c723" translate="yes" xml:space="preserve">
          <source>With rare exceptions, the only reasonable way to use &lt;code&gt;make-variable-buffer-local&lt;/code&gt; in a Lisp package is for a variable which is used only within that package. Using it on a variable used by other packages would interfere with them.</source>
          <target state="translated">With rare exceptions, the only reasonable way to use &lt;code&gt;make-variable-buffer-local&lt;/code&gt; in a Lisp package is for a variable which is used only within that package. Using it on a variable used by other packages would interfere with them.</target>
        </trans-unit>
        <trans-unit id="f49f278bd7d6fdff3d1215f4f54950d09d622b6c" translate="yes" xml:space="preserve">
          <source>With some window managers you may have to customize the variable &lt;code&gt;frame-resize-pixelwise&lt;/code&gt; (see &lt;a href=&quot;frame-size#Frame-Size&quot;&gt;Frame Size&lt;/a&gt;) in order to make a frame truly appear maximized or full-screen. Moreover, some window managers might not support smooth transition between the various full-screen or maximization states. Customizing the variable &lt;code&gt;x-frame-normalize-before-maximize&lt;/code&gt; can help to overcome that.</source>
          <target state="translated">With some window managers you may have to customize the variable &lt;code&gt;frame-resize-pixelwise&lt;/code&gt; (see &lt;a href=&quot;frame-size#Frame-Size&quot;&gt;Frame Size&lt;/a&gt;) in order to make a frame truly appear maximized or full-screen. Moreover, some window managers might not support smooth transition between the various full-screen or maximization states. Customizing the variable &lt;code&gt;x-frame-normalize-before-maximize&lt;/code&gt; can help to overcome that.</target>
        </trans-unit>
        <trans-unit id="46fdf2b4d7e3cd9b5e28a3b4a9a7952875281ecb" translate="yes" xml:space="preserve">
          <source>With some window managers you may have to set this to non-&lt;code&gt;nil&lt;/code&gt; in order to make a frame appear truly maximized or full-screen.</source>
          <target state="translated">With some window managers you may have to set this to non- &lt;code&gt;nil&lt;/code&gt; in order to make a frame appear truly maximized or full-screen.</target>
        </trans-unit>
        <trans-unit id="b1dfcbaccda3157f5fe6d62d6b90e1b8f41f4014" translate="yes" xml:space="preserve">
          <source>With the help of &lt;code&gt;apply&lt;/code&gt; (see &lt;a href=&quot;calling-functions#Calling-Functions&quot;&gt;Calling Functions&lt;/a&gt;), we can append all the lists in a list of lists:</source>
          <target state="translated">With the help of &lt;code&gt;apply&lt;/code&gt; (see &lt;a href=&quot;calling-functions#Calling-Functions&quot;&gt;Calling Functions&lt;/a&gt;), we can append all the lists in a list of lists:</target>
        </trans-unit>
        <trans-unit id="b2f47f160c5a2523aadfbc79ba2e6750a57bd5e3" translate="yes" xml:space="preserve">
          <source>With the return point in effect, &lt;code&gt;catch&lt;/code&gt; evaluates the forms of the &lt;var&gt;body&lt;/var&gt; in textual order. If the forms execute normally (without error or nonlocal exit) the value of the last body form is returned from the &lt;code&gt;catch&lt;/code&gt;.</source>
          <target state="translated">With the return point in effect, &lt;code&gt;catch&lt;/code&gt; evaluates the forms of the &lt;var&gt;body&lt;/var&gt; in textual order. If the forms execute normally (without error or nonlocal exit) the value of the last body form is returned from the &lt;code&gt;catch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10051c84c8f5c674f94fa417b4da657f0b49040c" translate="yes" xml:space="preserve">
          <source>With the second form of &lt;var&gt;variables&lt;/var&gt;, if &lt;var&gt;directory&lt;/var&gt; is the initial substring of the file&amp;rsquo;s directory, then &lt;var&gt;list&lt;/var&gt; is applied recursively by following the above rules; &lt;var&gt;list&lt;/var&gt; should be of one of the two forms accepted by this function in &lt;var&gt;variables&lt;/var&gt;.</source>
          <target state="translated">With the second form of &lt;var&gt;variables&lt;/var&gt; , if &lt;var&gt;directory&lt;/var&gt; is the initial substring of the file&amp;rsquo;s directory, then &lt;var&gt;list&lt;/var&gt; is applied recursively by following the above rules; &lt;var&gt;list&lt;/var&gt; should be of one of the two forms accepted by this function in &lt;var&gt;variables&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7d29af94b07c044caf68181642a1733e49ac59d4" translate="yes" xml:space="preserve">
          <source>With this erroneous macro definition, the program worked fine when interpreted but failed when compiled. This macro definition called &lt;code&gt;set-buffer-multibyte&lt;/code&gt; during compilation, which was wrong, and then did nothing when the compiled package was run. The definition that the programmer really wanted was this:</source>
          <target state="translated">With this erroneous macro definition, the program worked fine when interpreted but failed when compiled. This macro definition called &lt;code&gt;set-buffer-multibyte&lt;/code&gt; during compilation, which was wrong, and then did nothing when the compiled package was run. The definition that the programmer really wanted was this:</target>
        </trans-unit>
        <trans-unit id="a1d036ceb743d38c138e7a131e52930adf1628cc" translate="yes" xml:space="preserve">
          <source>With this method, you can easily define different commands for different links. Furthermore, the global definition of</source>
          <target state="translated">С помощью этого метода можно легко задавать разные команды для разных ссылок.Более того,глобальное определение</target>
        </trans-unit>
        <trans-unit id="35b5bb0fc1084b49d0782acec9ceac821436a3ab" translate="yes" xml:space="preserve">
          <source>With this method, you can specify any order for the list, but there is no danger of losing a buffer or adding something that is not a valid live buffer.</source>
          <target state="translated">С помощью этого метода можно указать любой порядок для списка,но нет опасности потерять буфер или добавить что-то,что не является действительным живым буфером.</target>
        </trans-unit>
        <trans-unit id="4e98f5e43b9ac57e09faf03bee04730bd5197ff0" translate="yes" xml:space="preserve">
          <source>With very few exceptions, most modules need to exchange data with Lisp programs that call them: accept arguments to module functions and return values from module functions. For this purpose, the module</source>
          <target state="translated">За редким исключением,большинству модулей необходимо обмениваться данными с вызывающими их программами на языке Lisp:принимать аргументы к модульным функциям и возвращать значения из модульных функций.Для этого модуль</target>
        </trans-unit>
        <trans-unit id="7caf467bdd796e36080976d3906617d560556261" translate="yes" xml:space="preserve">
          <source>Within Edebug, the recursion depth appears one deeper than the recursion depth outside Edebug. This is not true of the automatically updated evaluation list window.</source>
          <target state="translated">В пределах Edebug глубина рекурсии отображается на одну глубину глубже,чем глубина рекурсии за пределами Edebug.Это не относится к автоматически обновляемому окну списка оценок.</target>
        </trans-unit>
        <trans-unit id="4731ff9126f64e37ebf637bf6384565db7275f18" translate="yes" xml:space="preserve">
          <source>Within Edebug, you normally view an Emacs buffer showing the source of the Lisp code you are debugging. This is referred to as the &lt;em&gt;source code buffer&lt;/em&gt;, and it is temporarily read-only.</source>
          <target state="translated">Within Edebug, you normally view an Emacs buffer showing the source of the Lisp code you are debugging. This is referred to as the &lt;em&gt;source code buffer&lt;/em&gt;, and it is temporarily read-only.</target>
        </trans-unit>
        <trans-unit id="d1bb6325e0ab022386022d97ac9161d9afc1f618" translate="yes" xml:space="preserve">
          <source>Within a macro definition, you can use the &lt;code&gt;declare&lt;/code&gt; form (see &lt;a href=&quot;defining-macros#Defining-Macros&quot;&gt;Defining Macros&lt;/a&gt;) to specify how</source>
          <target state="translated">Within a macro definition, you can use the &lt;code&gt;declare&lt;/code&gt; form (see &lt;a href=&quot;defining-macros#Defining-Macros&quot;&gt;Defining Macros&lt;/a&gt;) to specify how</target>
        </trans-unit>
        <trans-unit id="9ec232c680982df144b8116755db517b98c19d63" translate="yes" xml:space="preserve">
          <source>Within the function &lt;code&gt;For&lt;/code&gt; itself, the local variable &lt;code&gt;args&lt;/code&gt; refers to objects controlled by Emacs&amp;rsquo;s stack-marking garbage collector. Although the garbage collector does not reclaim objects reachable from C &lt;code&gt;Lisp_Object&lt;/code&gt; stack variables, it may move some of the components of an object, such as the contents of a string or the text of a buffer. Therefore, functions that access these components must take care to refetch their addresses after performing Lisp evaluation. This means that instead of keeping C pointers to string contents or buffer text, the code should keep the buffer or string position, and recompute the C pointer from the position after performing Lisp evaluation. Lisp evaluation can occur via calls to &lt;code&gt;eval_sub&lt;/code&gt; or &lt;code&gt;Feval&lt;/code&gt;, either directly or indirectly.</source>
          <target state="translated">Within the function &lt;code&gt;For&lt;/code&gt; itself, the local variable &lt;code&gt;args&lt;/code&gt; refers to objects controlled by Emacs&amp;rsquo;s stack-marking garbage collector. Although the garbage collector does not reclaim objects reachable from C &lt;code&gt;Lisp_Object&lt;/code&gt; stack variables, it may move some of the components of an object, such as the contents of a string or the text of a buffer. Therefore, functions that access these components must take care to refetch their addresses after performing Lisp evaluation. This means that instead of keeping C pointers to string contents or buffer text, the code should keep the buffer or string position, and recompute the C pointer from the position after performing Lisp evaluation. Lisp evaluation can occur via calls to &lt;code&gt;eval_sub&lt;/code&gt; or &lt;code&gt;Feval&lt;/code&gt; , either directly or indirectly.</target>
        </trans-unit>
        <trans-unit id="4eeaacf4f0fbb0afa707847e230d8aa614f5ae4c" translate="yes" xml:space="preserve">
          <source>Word constituents: &amp;lsquo;</source>
          <target state="translated">Word constituents: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="9572417b1d5255e84a942b3aa87434cf833f506f" translate="yes" xml:space="preserve">
          <source>Word matching regards &lt;var&gt;string&lt;/var&gt; as a sequence of words, disregarding punctuation that separates them. It searches the buffer for the same sequence of words. Each word must be distinct in the buffer (searching for the word &amp;lsquo;</source>
          <target state="translated">Word matching regards &lt;var&gt;string&lt;/var&gt; as a sequence of words, disregarding punctuation that separates them. It searches the buffer for the same sequence of words. Each word must be distinct in the buffer (searching for the word &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="00040bab8a787438c2c0cf5248ac025642115fad" translate="yes" xml:space="preserve">
          <source>Work</source>
          <target state="translated">Work</target>
        </trans-unit>
        <trans-unit id="91af2af195b855fa2238bc0f535f365700aeec06" translate="yes" xml:space="preserve">
          <source>Working around the parser&amp;rsquo;s limitations.</source>
          <target state="translated">Working around the parser&amp;rsquo;s limitations.</target>
        </trans-unit>
        <trans-unit id="cb8d5d1705b3b9faf14d2484c5e4e44780d9afad" translate="yes" xml:space="preserve">
          <source>Write a documentation string for this command that describes the special commands available in this mode. See &lt;a href=&quot;mode-help#Mode-Help&quot;&gt;Mode Help&lt;/a&gt;.</source>
          <target state="translated">Write a documentation string for this command that describes the special commands available in this mode. See &lt;a href=&quot;mode-help#Mode-Help&quot;&gt;Mode Help&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="864a8eef75c1c894b7cab5feb09ac3718b4b9410" translate="yes" xml:space="preserve">
          <source>Write display actions without stress</source>
          <target state="translated">Пишите действия дисплея без стресса</target>
        </trans-unit>
        <trans-unit id="fd000642f00fc412d748e915b7fbf684c1227f4c" translate="yes" xml:space="preserve">
          <source>Writing C code for Emacs.</source>
          <target state="translated">Пишу код на Си для Emacs.</target>
        </trans-unit>
        <trans-unit id="660c8694caa7ef2967d6e21173a5034c7875f8fd" translate="yes" xml:space="preserve">
          <source>Writing Code to Handle Errors</source>
          <target state="translated">Пишущий код для обработки ошибок</target>
        </trans-unit>
        <trans-unit id="4af63b63f2a7ae43c3f6325bbc82300036f0434a" translate="yes" xml:space="preserve">
          <source>Writing Custom themes.</source>
          <target state="translated">Написание пользовательских тем.</target>
        </trans-unit>
        <trans-unit id="f5c12b8b18b9d8c5848942dbd94e868460b590ae" translate="yes" xml:space="preserve">
          <source>Writing Dynamically-Loaded Modules</source>
          <target state="translated">Написание динамически нагруженных модулей</target>
        </trans-unit>
        <trans-unit id="cad83bf497fdcbae89ec83a1f8895ba4a2abe72d" translate="yes" xml:space="preserve">
          <source>Writing Emacs Primitives</source>
          <target state="translated">Написание Emacs Primitives</target>
        </trans-unit>
        <trans-unit id="fb433a8ef0470f85a2d44720d6d0064769e11ef9" translate="yes" xml:space="preserve">
          <source>Writing Module Functions</source>
          <target state="translated">Функции модуля записи</target>
        </trans-unit>
        <trans-unit id="8b1775056003275de1952faafc3b7f9ff185031c" translate="yes" xml:space="preserve">
          <source>Writing a good indentation function can be difficult and to a large extent it is still a black art. Many major mode authors will start by writing a simple indentation function that works for simple cases, for example by comparing with the indentation of the previous text line. For most programming languages that are not really line-based, this tends to scale very poorly: improving such a function to let it handle more diverse situations tends to become more and more difficult, resulting in the end with a large, complex, unmaintainable indentation function which nobody dares to touch.</source>
          <target state="translated">Писать хорошую функцию отступа может быть трудно,и в значительной степени это все еще черное искусство.Многие авторы основных режимов начинают с написания простой функции отступов,которая работает для простых случаев,например,путем сравнения с отступом предыдущей текстовой строки.Для большинства языков программирования,которые на самом деле не основаны на строках,это имеет тенденцию к очень плохому масштабированию:улучшение такой функции,чтобы она могла справляться с более разнообразными ситуациями,имеет тенденцию становиться всё более и более трудным,в результате чего в конечном итоге получается большая,сложная,недостижимая функция отступов,к которой никто не осмеливается прикоснуться.</target>
        </trans-unit>
        <trans-unit id="2a05f677633a2316415855a3c46061d24cc1bae7" translate="yes" xml:space="preserve">
          <source>Writing a module and integrating it into Emacs comprises the following tasks:</source>
          <target state="translated">Написание модуля и его интеграция в Emacs включает в себя следующие задачи:</target>
        </trans-unit>
        <trans-unit id="87b5bc351f6388fc831c182bad1fddd07f5a27e5" translate="yes" xml:space="preserve">
          <source>Writing and using documentation strings.</source>
          <target state="translated">Написание и использование строк документации.</target>
        </trans-unit>
        <trans-unit id="e0cfa66332938119e483b2dd8067f05476ab0cd5" translate="yes" xml:space="preserve">
          <source>Writing changed buffers back into files.</source>
          <target state="translated">Запись измененных буферов обратно в файлы.</target>
        </trans-unit>
        <trans-unit id="a8d27d5a6ca7448a081f7d90c27269f1bafb63d4" translate="yes" xml:space="preserve">
          <source>Writing customization group definitions.</source>
          <target state="translated">Написание определений групп настройки.</target>
        </trans-unit>
        <trans-unit id="2676ae17d67dd3eff0363728ab580e2cc26726e5" translate="yes" xml:space="preserve">
          <source>Writing display actions can be a pain because one has to lump together action functions and action alists in one huge list. (Historical reasons prevented us from having &lt;code&gt;display-buffer&lt;/code&gt; support separate arguments for these.) It might help to memorize some basic forms like the ones listed below:</source>
          <target state="translated">Writing display actions can be a pain because one has to lump together action functions and action alists in one huge list. (Historical reasons prevented us from having &lt;code&gt;display-buffer&lt;/code&gt; support separate arguments for these.) It might help to memorize some basic forms like the ones listed below:</target>
        </trans-unit>
        <trans-unit id="c745756ceb786034792158e8cc61d7e702e6c1d7" translate="yes" xml:space="preserve">
          <source>Writing initialization code for the module.</source>
          <target state="translated">Написание кода инициализации модуля.</target>
        </trans-unit>
        <trans-unit id="d56a22849f994b20f6600cd3460bcd34f83598c7" translate="yes" xml:space="preserve">
          <source>Writing loadable modules for Emacs.</source>
          <target state="translated">Запись загружаемых модулей для Emacs.</target>
        </trans-unit>
        <trans-unit id="959325f732b116da9f4c17d9d52b38658b0cbc9a" translate="yes" xml:space="preserve">
          <source>Writing new files from parts of buffers.</source>
          <target state="translated">Запись новых файлов из частей буферов.</target>
        </trans-unit>
        <trans-unit id="5bf31f22f8e9138838ff5aca48a3d16351326757" translate="yes" xml:space="preserve">
          <source>Writing one or more module functions.</source>
          <target state="translated">Запись одной или нескольких функций модуля.</target>
        </trans-unit>
        <trans-unit id="626850315f11a109b89b0e2ca304b47d1ebd1583" translate="yes" xml:space="preserve">
          <source>Writing to Files</source>
          <target state="translated">Написание в Файлы</target>
        </trans-unit>
        <trans-unit id="df13e2249d0344c5995feed860c249b907bbf885" translate="yes" xml:space="preserve">
          <source>Writing your own completion function.</source>
          <target state="translated">Пишешь свою собственную функцию завершения.</target>
        </trans-unit>
        <trans-unit id="81cecdbcf5a884358d6d64dd07151bcc864ea3cb" translate="yes" xml:space="preserve">
          <source>Wrong Time</source>
          <target state="translated">Неправильное время</target>
        </trans-unit>
        <trans-unit id="847312eff98f615b33d04af640ff3b0aef444a8d" translate="yes" xml:space="preserve">
          <source>Wrong number of arguments</source>
          <target state="translated">Неверное количество аргументов</target>
        </trans-unit>
        <trans-unit id="6785d9d939e22abdd99b9e4cc3100ddf46a32841" translate="yes" xml:space="preserve">
          <source>Wrong type argument</source>
          <target state="translated">Неправильный аргумент типа</target>
        </trans-unit>
        <trans-unit id="1116afb51e066f31e7f64320374c74be96ef6620" translate="yes" xml:space="preserve">
          <source>Wrote &lt;var&gt;filename&lt;/var&gt;</source>
          <target state="translated">Wrote &lt;var&gt;filename&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="701b9b6003d2ac52c5714c24742c56c8bfed8cfd" translate="yes" xml:space="preserve">
          <source>X Resources</source>
          <target state="translated">X Ресурсы</target>
        </trans-unit>
        <trans-unit id="91ad8eeae3f28e745985c0e4c09aa39f01cb0d2a" translate="yes" xml:space="preserve">
          <source>X resource settings typically apply to all frames. If you want to specify some X resources solely for the sake of the initial frame, and you don&amp;rsquo;t want them to apply to subsequent frames, here&amp;rsquo;s how to achieve this. Specify parameters in &lt;code&gt;default-frame-alist&lt;/code&gt; to override the X resources for subsequent frames; then, to prevent these from affecting the initial frame, specify the same parameters in &lt;code&gt;initial-frame-alist&lt;/code&gt; with values that match the X resources.</source>
          <target state="translated">X resource settings typically apply to all frames. If you want to specify some X resources solely for the sake of the initial frame, and you don&amp;rsquo;t want them to apply to subsequent frames, here&amp;rsquo;s how to achieve this. Specify parameters in &lt;code&gt;default-frame-alist&lt;/code&gt; to override the X resources for subsequent frames; then, to prevent these from affecting the initial frame, specify the same parameters in &lt;code&gt;initial-frame-alist&lt;/code&gt; with values that match the X resources.</target>
        </trans-unit>
        <trans-unit id="295b502d3fe0cbfa2c47b23759be43a0d24bc09f" translate="yes" xml:space="preserve">
          <source>XBM Images</source>
          <target state="translated">XBM-изображения</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="6b648f9c53c1f8ff2d73b0125b92611fa1d058b9" translate="yes" xml:space="preserve">
          <source>XPM Images</source>
          <target state="translated">XPM изображения</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
