<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="86bc094886fdeba60f289e032c68c8317ae4043d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;delete&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function deletes the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; after copying it, like &lt;code&gt;delete-and-extract-region&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;delete&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , функция удаляет текст между &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; после его копирования, как &lt;code&gt;delete-and-extract-region&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="583bbbf5f052337915c912c6916ac7ea82f20788" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;depth&lt;/var&gt; is nonzero, treat the starting position as being &lt;var&gt;depth&lt;/var&gt; parentheses deep. The scanner moves forward or backward through the buffer until the depth changes to zero &lt;var&gt;count&lt;/var&gt; times. Hence, a positive value for &lt;var&gt;depth&lt;/var&gt; has the effect of moving out &lt;var&gt;depth&lt;/var&gt; levels of parenthesis from the starting position, while a negative &lt;var&gt;depth&lt;/var&gt; has the effect of moving deeper by &lt;var&gt;-depth&lt;/var&gt; levels of parenthesis.</source>
          <target state="translated">Если &lt;var&gt;depth&lt;/var&gt; равна нулю, рассматривать начальную позицию как &lt;var&gt;depth&lt;/var&gt; скобках глубины. Сканер перемещается вперед или назад через буфер до глубины изменений к нулю &lt;var&gt;count&lt;/var&gt; раз. Следовательно, положительное значение &lt;var&gt;depth&lt;/var&gt; имеет эффект &lt;var&gt;-depth&lt;/var&gt; уровней &lt;var&gt;depth&lt;/var&gt; круглых скобок из начальной позиции, в то время как отрицательное значение &lt;var&gt;depth&lt;/var&gt; имеет эффект перемещения глубже на уровни скобок.</target>
        </trans-unit>
        <trans-unit id="e570710a94fca9498161ecc4ef84a4efd598a9fb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;device-name&lt;/var&gt; is a non-empty string identifying a network interface name (see &lt;code&gt;network-interface-list&lt;/code&gt;), only handle packets received on that interface. If &lt;var&gt;device-name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (the default), handle packets received on any interface.</source>
          <target state="translated">Если &lt;var&gt;device-name&lt;/var&gt; - непустая строка, определяющая имя сетевого интерфейса (см. &lt;code&gt;network-interface-list&lt;/code&gt; ), обрабатывать только пакеты, полученные на этом интерфейсе. Если &lt;var&gt;device-name&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; (по умолчанию), обрабатывать пакеты, полученные на любом интерфейсе.</target>
        </trans-unit>
        <trans-unit id="12f30a418a7e15703ff91629848e61377eccace2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dir-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;make-temp-file&lt;/code&gt; creates an empty directory instead of an empty file. It returns the file name, not the directory name, of that directory. See &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;.</source>
          <target state="translated">Если &lt;var&gt;dir-flag&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;make-temp-file&lt;/code&gt; создает пустой каталог вместо пустого файла. Он возвращает имя файла, а не имя каталога этого каталога. См. &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Имена каталогов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="382c60da8a13c8d050fbe0739934b6aa2ac57217" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;display-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, as it always is in interactive calls, that means to display the new buffer by calling &lt;code&gt;pop-to-buffer&lt;/code&gt;. If &lt;var&gt;norecord&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means not to put the new buffer to the front of the buffer list.</source>
          <target state="translated">Если &lt;var&gt;display-flag&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , как всегда в интерактивных вызовах, это означает отображение нового буфера путем вызова &lt;code&gt;pop-to-buffer&lt;/code&gt; . Если &lt;var&gt;norecord&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это означает, что новый буфер не следует помещать в начало списка буферов.</target>
        </trans-unit>
        <trans-unit id="d1e8d3736b52fa94007796d9c1692ce665882dce" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;display&lt;/var&gt; is a list, each element should have the form &lt;code&gt;(&lt;var&gt;characteristic&lt;/var&gt; &lt;var&gt;value&lt;/var&gt;&amp;hellip;)&lt;/code&gt;. Here &lt;var&gt;characteristic&lt;/var&gt; specifies a way of classifying terminals, and the &lt;var&gt;value&lt;/var&gt;s are possible classifications which &lt;var&gt;display&lt;/var&gt; should apply to. Here are the possible values of &lt;var&gt;characteristic&lt;/var&gt;:</source>
          <target state="translated">Если &lt;var&gt;display&lt;/var&gt; представляет собой список, каждый элемент должен иметь форму &lt;code&gt;(&lt;var&gt;characteristic&lt;/var&gt; &lt;var&gt;value&lt;/var&gt;&amp;hellip;)&lt;/code&gt; . Здесь &lt;var&gt;characteristic&lt;/var&gt; определяет способ классификации терминалов, а &lt;var&gt;value&lt;/var&gt; - это возможные классификации, к которым должен применяться &lt;var&gt;display&lt;/var&gt; . Вот возможные значения &lt;var&gt;characteristic&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="d174f427d4eaafddfb52beb9773287900f2dc3d1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;display&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;call-process&lt;/code&gt; redisplays the buffer as output is inserted. (However, if the coding system chosen for decoding output is &lt;code&gt;undecided&lt;/code&gt;, meaning deduce the encoding from the actual data, then redisplay sometimes cannot continue once non-</source>
          <target state="translated">Если &lt;var&gt;display&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;call-process&lt;/code&gt; повторно отображает буфер при вставке вывода. (Однако, если система кодирования, выбранная для декодирования выходных данных, &lt;code&gt;undecided&lt;/code&gt; , что означает вывод кодировки из фактических данных, то повторное отображение иногда не может продолжаться, если</target>
        </trans-unit>
        <trans-unit id="d4ea21d8c5c7d2d29c428ac36f3f90962e9c87ca" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;divisor&lt;/var&gt; is specified, this uses the kind of division operation that corresponds to &lt;code&gt;mod&lt;/code&gt;, rounding downward.</source>
          <target state="translated">Если указан &lt;var&gt;divisor&lt;/var&gt; , используется операция деления, соответствующая &lt;code&gt;mod&lt;/code&gt; , с округлением в меньшую сторону.</target>
        </trans-unit>
        <trans-unit id="bc479043ec0d2b18757e218cedb7c00e95ecd19e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;divisor&lt;/var&gt; is zero, &lt;code&gt;mod&lt;/code&gt; signals an &lt;code&gt;arith-error&lt;/code&gt; error if both arguments are integers, and returns a NaN otherwise.</source>
          <target state="translated">Если &lt;var&gt;divisor&lt;/var&gt; равен нулю, &lt;code&gt;mod&lt;/code&gt; сигнализирует &lt;code&gt;arith-error&lt;/code&gt; ошибке арифметической ошибки, если оба аргумента являются целыми числами, и возвращает NaN в противном случае.</target>
        </trans-unit>
        <trans-unit id="c178623deb0b8f95f251d48a76e84fefbf62e3e9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;do-all&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, or if the user option &lt;code&gt;apropos-do-all&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;apropos&lt;/code&gt; also shows key bindings for the functions that are found; it also shows &lt;em&gt;all&lt;/em&gt; interned symbols, not just meaningful ones (and it lists them in the return value as well).</source>
          <target state="translated">Если &lt;var&gt;do-all&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; или если пользовательская опция &lt;code&gt;apropos-do-all&lt;/code&gt; не равна &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;apropos&lt;/code&gt; также показывает привязки клавиш для найденных функций; он также показывает &lt;em&gt;все&lt;/em&gt; интернированные символы, а не только значимые (и также перечисляет их в возвращаемом значении).</target>
        </trans-unit>
        <trans-unit id="33ce637a0a2b19370799328e896cfce3437e0172" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;doc&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it becomes the function documentation of &lt;var&gt;name&lt;/var&gt;. Otherwise, any documentation provided by &lt;var&gt;definition&lt;/var&gt; is used.</source>
          <target state="translated">Если &lt;var&gt;doc&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , он становится документом функции &lt;var&gt;name&lt;/var&gt; . В противном случае используется любая документация, предоставленная по &lt;var&gt;definition&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c4a82d22d8f8d771a79894593f0df6df2d7aee61" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dontroute-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the process can only send to hosts on the same network as the local host.</source>
          <target state="translated">Если &lt;var&gt;dontroute-flag&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , процесс может отправлять сообщения только узлам в той же сети, что и локальный узел.</target>
        </trans-unit>
        <trans-unit id="42ab5fc91f5dab9895db7481ee5983a4ac9c211e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;ellipsis&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a string which will replace the end of &lt;var&gt;string&lt;/var&gt; (including any padding) if it extends beyond &lt;var&gt;width&lt;/var&gt;, unless the display width of &lt;var&gt;string&lt;/var&gt; is equal to or less than the display width of &lt;var&gt;ellipsis&lt;/var&gt;. If &lt;var&gt;ellipsis&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and not a string, it stands for the value of the variable &lt;code&gt;truncate-string-ellipsis&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;ellipsis&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , это должна быть строка, которая заменит конец &lt;var&gt;string&lt;/var&gt; (включая любые отступы), если она выходит за пределы &lt;var&gt;width&lt;/var&gt; , за исключением случаев, когда ширина отображения &lt;var&gt;string&lt;/var&gt; равна или меньше ширины отображения &lt;var&gt;ellipsis&lt;/var&gt; . Если &lt;var&gt;ellipsis&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; и не является строкой, оно означает значение переменной &lt;code&gt;truncate-string-ellipsis&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2826cdb06deaf308761e56a316ed73d9e5203aea" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;environment&lt;/var&gt; is provided, it specifies an alist of macro definitions that shadow the currently defined macros. Byte compilation uses this feature.</source>
          <target state="translated">Если задана &lt;var&gt;environment&lt;/var&gt; , она указывает список определений макросов, которые затеняют макросы, определенные в данный момент. При байтовой компиляции используется эта функция.</target>
        </trans-unit>
        <trans-unit id="542f387e299daf7482746baebebaf49843ffc886" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;eop&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means do only left-justification if &lt;code&gt;current-justification&lt;/code&gt; specifies full justification. This is used for the last line of a paragraph; even if the paragraph as a whole is fully justified, the last line should not be.</source>
          <target state="translated">Если &lt;var&gt;eop&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это означает, что выполняется только выравнивание по левому краю, если &lt;code&gt;current-justification&lt;/code&gt; указывает полное выравнивание. Используется для последней строки абзаца; даже если абзац полностью выровнен по ширине, последней строки быть не должно.</target>
        </trans-unit>
        <trans-unit id="b767a472593eb9087c36efb1a2677ff134751d76" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;event&lt;/var&gt; is a click or button-down event, this returns the location of the event. If &lt;var&gt;event&lt;/var&gt; is a drag event, this returns the drag&amp;rsquo;s starting position.</source>
          <target state="translated">Если &lt;var&gt;event&lt;/var&gt; является событием щелчка или нажатия кнопки, это возвращает местоположение события. Если &lt;var&gt;event&lt;/var&gt; является событием перетаскивания, это возвращает начальную позицию перетаскивания.</target>
        </trans-unit>
        <trans-unit id="3182d1cd085f5c5f9e4f0a7063ec64d91c4a544c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;event&lt;/var&gt; is a drag event, this returns the position where the user released the mouse button. If &lt;var&gt;event&lt;/var&gt; is a click or button-down event, the value is actually the starting position, which is the only position such events have.</source>
          <target state="translated">Если &lt;var&gt;event&lt;/var&gt; является событием перетаскивания, это возвращает позицию, в которой пользователь отпустил кнопку мыши. Если &lt;var&gt;event&lt;/var&gt; является событием щелчка или нажатия кнопки, значение фактически является начальной позицией, которая является единственной позицией, которую имеют такие события.</target>
        </trans-unit>
        <trans-unit id="3561dde7538812edf47c410dd61e2d20f114d954" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;exit-data&lt;/var&gt; is a string, its contents are stuffed into the terminal input buffer so that the shell (or whatever program next reads input) can read them.</source>
          <target state="translated">Если &lt;var&gt;exit-data&lt;/var&gt; является строкой, ее содержимое помещается во входной буфер терминала, чтобы оболочка (или любая другая программа, которая затем считывает ввод) могла их прочитать.</target>
        </trans-unit>
        <trans-unit id="05f37cadbb1d9d78268503daae0a0ec0a61c8159" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;exit-data&lt;/var&gt; is an integer, that is used as the exit status of the Emacs process. (This is useful primarily in batch operation; see &lt;a href=&quot;batch-mode#Batch-Mode&quot;&gt;Batch Mode&lt;/a&gt;.)</source>
          <target state="translated">Если &lt;var&gt;exit-data&lt;/var&gt; - целое число, это используется как статус выхода процесса Emacs. (Это полезно в первую очередь при пакетной работе; см. &lt;a href=&quot;batch-mode#Batch-Mode&quot;&gt;Пакетный режим&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="59385a764aea280257ae8a44bb876d196cf10076" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;exit-data&lt;/var&gt; is neither an integer nor a string, or is omitted, that means to use the (system-specific) exit status which indicates successful program termination.</source>
          <target state="translated">Если &lt;var&gt;exit-data&lt;/var&gt; являются ни целым числом, ни строкой или опущены, это означает использование (зависящего от системы) статуса выхода, который указывает на успешное завершение программы.</target>
        </trans-unit>
        <trans-unit id="6c659d5850809a6a575e252a2a77f0596847d686" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;face&lt;/var&gt; already has a default face spec, this macro does nothing.</source>
          <target state="translated">Если &lt;var&gt;face&lt;/var&gt; уже имеет спецификацию лица по умолчанию, этот макрос ничего не делает.</target>
        </trans-unit>
        <trans-unit id="94fed5cb65c7a9b4818db37905cdfffe7eb23fbd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;family&lt;/var&gt; is specified but not available, Emacs will try the other families given in &lt;var&gt;alternate-families&lt;/var&gt;, one by one, until it finds a family that does exist.</source>
          <target state="translated">Если &lt;var&gt;family&lt;/var&gt; указано, но недоступно, Emacs будет пробовать другие семейства, заданные в &lt;var&gt;alternate-families&lt;/var&gt; , одно за другим, пока не найдет существующее семейство.</target>
        </trans-unit>
        <trans-unit id="d1a45b958c28835fb9698926a23f189506fbeaa6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;field&lt;/var&gt; is negative, sorting is by the -&lt;var&gt;field&lt;/var&gt;th field from the end of the line. This command is useful for sorting tables.</source>
          <target state="translated">Если &lt;var&gt;field&lt;/var&gt; отрицательное, сортировка производится по &lt;var&gt;field&lt;/var&gt; - ому от конца строки. Эта команда полезна для сортировки таблиц.</target>
        </trans-unit>
        <trans-unit id="566d542bf0d5e3db4f936d01f488aacec2657302" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file-handler&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then look for a file name handler for the current buffer&amp;rsquo;s &lt;code&gt;default-directory&lt;/code&gt;, and invoke that file name handler to make the process. If there is no such handler, proceed as if &lt;var&gt;file-handler&lt;/var&gt; were &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;file-handler&lt;/var&gt; отличен от &lt;code&gt;nil&lt;/code&gt; , тогда найдите обработчик имени файла для &lt;code&gt;default-directory&lt;/code&gt; по умолчанию текущего буфера и вызовите этот обработчик имени файла, чтобы выполнить процесс. Если такого обработчика нет, действуйте, как если бы &lt;var&gt;file-handler&lt;/var&gt; был &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3029954c3bea56e5ef19a69293e88d581a2b3d92" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file&lt;/var&gt; is a directory, changes for all files in that directory will be notified. This does not work recursively.</source>
          <target state="translated">Если &lt;var&gt;file&lt;/var&gt; является каталогом, будут уведомлены изменения для всех файлов в этом каталоге. Это не работает рекурсивно.</target>
        </trans-unit>
        <trans-unit id="2bad1c2c05300f5f775e1639c12dada6dd4ed103" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; does not contain either a directory name, or the suffix &lt;code&gt;.el&lt;/code&gt; or &lt;code&gt;.elc&lt;/code&gt;, this function insists on adding one of these suffixes, and it will not load from a file whose name is just &lt;var&gt;filename&lt;/var&gt; with no added suffix. (The variable &lt;code&gt;load-suffixes&lt;/code&gt; specifies the exact required suffixes.)</source>
          <target state="translated">Если &lt;var&gt;filename&lt;/var&gt; не содержит ни имени каталога, ни суффикса &lt;code&gt;.el&lt;/code&gt; или &lt;code&gt;.elc&lt;/code&gt; , эта функция настаивает на добавлении одного из этих суффиксов, и она не будет загружаться из файла, имя которого является просто &lt;var&gt;filename&lt;/var&gt; без добавленного суффикса. (Переменная &lt;code&gt;load-suffixes&lt;/code&gt; указывает точные требуемые суффиксы.)</target>
        </trans-unit>
        <trans-unit id="f17ccd75236d0820b4feff180f7e0404537acbed" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; has additional names aside from &lt;var&gt;filename&lt;/var&gt;, it continues to have those names. In fact, adding the name &lt;var&gt;newname&lt;/var&gt; with &lt;code&gt;add-name-to-file&lt;/code&gt; and then deleting &lt;var&gt;filename&lt;/var&gt; has the same effect as renaming, aside from momentary intermediate states and treatment of errors, directories and symbolic links.</source>
          <target state="translated">Если &lt;var&gt;filename&lt;/var&gt; имеет дополнительные имена, помимо &lt;var&gt;filename&lt;/var&gt; , оно продолжает иметь эти имена. Фактически, добавление имени &lt;var&gt;newname&lt;/var&gt; с помощью &lt;code&gt;add-name-to-file&lt;/code&gt; с последующим удалением &lt;var&gt;filename&lt;/var&gt; имеет тот же эффект, что и переименование, за исключением мгновенных промежуточных состояний и обработки ошибок, каталогов и символических ссылок.</target>
        </trans-unit>
        <trans-unit id="601974afa1a162f114a8f0d68223d4f6961c670d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or the empty string, that stands for &amp;ldquo;no visited file&amp;rdquo;. In this case, &lt;code&gt;set-visited-file-name&lt;/code&gt; marks the buffer as having no visited file, without changing the buffer&amp;rsquo;s modified flag.</source>
          <target state="translated">Если &lt;var&gt;filename&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; или пустая строка, это означает &amp;laquo;нет посещенного файла&amp;raquo;. В этом случае &lt;code&gt;set-visited-file-name&lt;/code&gt; помечает буфер как не имеющий посещенного файла без изменения флага изменения буфера.</target>
        </trans-unit>
        <trans-unit id="7ae4783183417f463cd8a075cbb06e5ff1fa6eeb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is a directory name (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;), &lt;code&gt;write-file&lt;/code&gt; uses the name of the visited file, in directory &lt;var&gt;filename&lt;/var&gt;. If the buffer is not visiting a file, it uses the buffer name instead.</source>
          <target state="translated">Если &lt;var&gt;filename&lt;/var&gt; является именем каталога (см. &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Имена каталогов&lt;/a&gt; ), &lt;code&gt;write-file&lt;/code&gt; использует имя посещенного файла в &lt;var&gt;filename&lt;/var&gt; каталога . Если буфер не обращается к файлу, вместо этого он использует имя буфера.</target>
        </trans-unit>
        <trans-unit id="a01e16f24a067a0fb0043befb2b5119347bcb45b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is a non-empty string, this function changes the name of the file visited in the current buffer to &lt;var&gt;filename&lt;/var&gt;. (If the buffer had no visited file, this gives it one.) The &lt;em&gt;next time&lt;/em&gt; the buffer is saved it will go in the newly-specified file.</source>
          <target state="translated">Если &lt;var&gt;filename&lt;/var&gt; - непустая строка, эта функция изменяет имя файла, посещенного в текущем буфере, на &lt;var&gt;filename&lt;/var&gt; . (Если в буфере не было посещенного файла, он его получает .) В &lt;em&gt;следующий раз,&lt;/em&gt; когда буфер будет сохранен, он войдет в новый указанный файл.</target>
        </trans-unit>
        <trans-unit id="4acbb928ad7718634c30ddbc650bf49d7077a8c1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is a relative file name, such as</source>
          <target state="translated">Если &lt;var&gt;filename&lt;/var&gt; является относительным именем файла, например</target>
        </trans-unit>
        <trans-unit id="ab7cf9a0ae4ba5c2776dd494921001dee3b006d8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is local, whether magic or not, this function does nothing and returns &lt;code&gt;nil&lt;/code&gt;. Otherwise it returns the file name of the local copy file.</source>
          <target state="translated">Если &lt;var&gt;filename&lt;/var&gt; является локальным, магическим или нет, эта функция ничего не делает и возвращает &lt;code&gt;nil&lt;/code&gt; . В противном случае он возвращает имя файла локальной копии.</target>
        </trans-unit>
        <trans-unit id="bdcfa385b467a3758b0eaf7c8873a2a13cecce6c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fin&lt;/var&gt; is not a &lt;code&gt;NULL&lt;/code&gt; pointer, it will be called with the &lt;var&gt;ptr&lt;/var&gt; as the argument when the &lt;code&gt;user-ptr&lt;/code&gt; object is garbage-collected. Don&amp;rsquo;t run any expensive code in a finalizer, because GC must finish quickly to keep Emacs responsive.</source>
          <target state="translated">Если &lt;var&gt;fin&lt;/var&gt; не является указателем &lt;code&gt;NULL&lt;/code&gt; , он будет вызываться с &lt;var&gt;ptr&lt;/var&gt; в качестве аргумента при сборке мусора для объекта &lt;code&gt;user-ptr&lt;/code&gt; . Не запускайте дорогостоящий код в финализаторе, потому что сборщик мусора должен завершать работу быстро, чтобы Emacs оставался отзывчивым.</target>
        </trans-unit>
        <trans-unit id="ff7b175c80093cc1a7c87a1db4ec4c5183f22789" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;firstonly&lt;/var&gt; is &lt;code&gt;non-ascii&lt;/code&gt;, then the value is a single vector representing the first key sequence found, rather than a list of all possible key sequences. If &lt;var&gt;firstonly&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, then the value is the first key sequence, except that key sequences consisting entirely of</source>
          <target state="translated">Если &lt;var&gt;firstonly&lt;/var&gt; не является &lt;code&gt;non-ascii&lt;/code&gt; , тогда значение представляет собой единственный вектор, представляющий первую найденную последовательность ключей, а не список всех возможных последовательностей ключей. Если &lt;var&gt;firstonly&lt;/var&gt; равно &lt;code&gt;t&lt;/code&gt; , то значение является первой ключевой последовательностью, за исключением тех ключевых последовательностей, которые полностью состоят из</target>
        </trans-unit>
        <trans-unit id="a9c9a4ebd36d51532de9109ecf1ef74ffdcffcee" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fixedcase&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;replace-match&lt;/code&gt; uses the replacement text without case conversion; otherwise, it converts the replacement text depending upon the capitalization of the text to be replaced. If the original text is all upper case, this converts the replacement text to upper case. If all words of the original text are capitalized, this capitalizes all the words of the replacement text. If all the words are one-letter and they are all upper case, they are treated as capitalized words rather than all-upper-case words.</source>
          <target state="translated">Если &lt;var&gt;fixedcase&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , тогда &lt;code&gt;replace-match&lt;/code&gt; использует заменяющий текст без преобразования регистра; в противном случае он преобразует замещающий текст в зависимости от использования заглавных букв в заменяемом тексте. Если исходный текст написан полностью в верхнем регистре, это преобразует замещающий текст в верхний регистр. Если все слова исходного текста пишутся с заглавной буквы, все слова заменяющего текста пишутся с заглавной буквы. Если все слова состоят из одной буквы и все в верхнем регистре, они рассматриваются как слова с заглавной буквы, а не как слова с заглавными буквами.</target>
        </trans-unit>
        <trans-unit id="2a40d1cb2516be8709248d56281f02652ac6d7e4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;flow&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs uses &lt;small&gt;XON/XOFF&lt;/small&gt; (</source>
          <target state="translated">Если &lt;var&gt;flow&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , то Emacs использует &lt;small&gt;XON / XOFF&lt;/small&gt; (</target>
        </trans-unit>
        <trans-unit id="635c63be0831a1ed757723114405aa6bd54fbaf8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;focus-frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, that cancels any existing redirection for &lt;var&gt;frame&lt;/var&gt;, which therefore once again receives its own events.</source>
          <target state="translated">Если &lt;var&gt;focus-frame&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , это отменяет любое существующее перенаправление для &lt;var&gt;frame&lt;/var&gt; , который, следовательно, снова получает свои собственные события.</target>
        </trans-unit>
        <trans-unit id="8115dfd568aadd54bb88af1c3a50bd5b70843371" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;font&lt;/var&gt; is a font spec and the font spec does not specify &lt;var&gt;property&lt;/var&gt;, the return value is &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;font&lt;/var&gt; is a font object or font entity, the value for the &lt;var&gt;:script&lt;/var&gt; property may be a list of scripts supported by the font.</source>
          <target state="translated">Если &lt;var&gt;font&lt;/var&gt; является спецификацией шрифта, а спецификация шрифта не определяет &lt;var&gt;property&lt;/var&gt; , возвращаемое значение равно &lt;code&gt;nil&lt;/code&gt; . Если &lt;var&gt;font&lt;/var&gt; является объектом шрифта или сущностью шрифта, значением свойства &lt;var&gt;:script&lt;/var&gt; может быть список сценариев, поддерживаемых шрифтом.</target>
        </trans-unit>
        <trans-unit id="db64fed9b323411c5eb65e89e464409b9f0d0e85" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fontname-regexp&lt;/var&gt; matches the font name that is about to be used, this says to choose a larger similar font according to the factor &lt;var&gt;scale-factor&lt;/var&gt;. You would use this feature to normalize the font size if certain fonts are bigger or smaller than their nominal heights and widths would suggest.</source>
          <target state="translated">Если &lt;var&gt;fontname-regexp&lt;/var&gt; совпадает с именем шрифта, который будет использоваться, это говорит о том, что нужно выбрать более крупный аналогичный шрифт в соответствии с коэффициентом &lt;var&gt;scale-factor&lt;/var&gt; . Эту функцию можно использовать для нормализации размера шрифта, если некоторые шрифты больше или меньше, чем предполагают их номинальная высота и ширина.</target>
        </trans-unit>
        <trans-unit id="e2966ac7cad9193bc97d279b647a6bfcb8f2ef3f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;for-call-interactively&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;commandp&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; only for objects that &lt;code&gt;call-interactively&lt;/code&gt; could call&amp;mdash;thus, not for keyboard macros.</source>
          <target state="translated">Если &lt;var&gt;for-call-interactively&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;commandp&lt;/code&gt; возвращает &lt;code&gt;t&lt;/code&gt; только для объектов, которые могут &lt;code&gt;call-interactively&lt;/code&gt; вызов - таким образом, не для макросов клавиатуры.</target>
        </trans-unit>
        <trans-unit id="a3879501f40effed5dfc6a6e9c2f47f761a3fe35" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to fix the line&amp;rsquo;s indentation if that doesn&amp;rsquo;t match the left margin value.</source>
          <target state="translated">Если &lt;var&gt;force&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это говорит о том, что нужно исправить отступ строки, если он не соответствует значению левого поля.</target>
        </trans-unit>
        <trans-unit id="afc5dde916e411b66706e2ecc6bab5d6fbd387bf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this command recompiles every &amp;lsquo;</source>
          <target state="translated">Если &lt;var&gt;force&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , эта команда перекомпилирует каждые '</target>
        </trans-unit>
        <trans-unit id="e1306eaefee46fe549483b00767967f1bec09389" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;format-string&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or the empty string, &lt;code&gt;message&lt;/code&gt; clears the echo area; if the echo area has been expanded automatically, this brings it back to its normal size. If the minibuffer is active, this brings the minibuffer contents back onto the screen immediately.</source>
          <target state="translated">Если &lt;var&gt;format-string&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; или пустая строка, &lt;code&gt;message&lt;/code&gt; очищает эхо-область; если эхо-область была расширена автоматически, это возвращает ее к нормальному размеру. Если минибуфер активен, содержимое минибуфера немедленно возвращается на экран.</target>
        </trans-unit>
        <trans-unit id="34926853f3ae3a13c10cafcd6ea5fc9cab947853" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame-number&lt;/var&gt; is out of range, &lt;code&gt;backtrace-frame&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если номер &lt;var&gt;frame-number&lt;/var&gt; выходит за пределы допустимого диапазона, &lt;code&gt;backtrace-frame&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="026b2b86d9f4214d5e7e3288181c07240948b829" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;buffer-predicate&lt;/code&gt; parameter, then &lt;code&gt;other-buffer&lt;/code&gt; uses that predicate to decide which buffers to consider. It calls the predicate once for each buffer, and if the value is &lt;code&gt;nil&lt;/code&gt;, that buffer is ignored. See &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Buffer Parameters&lt;/a&gt;.</source>
          <target state="translated">Если &lt;var&gt;frame&lt;/var&gt; имеет параметр &lt;code&gt;buffer-predicate&lt;/code&gt; , &lt;code&gt;other-buffer&lt;/code&gt; &lt;code&gt;nil&lt;/code&gt; , то другой буфер использует этот предикат, чтобы решить, какие буферы рассматривать. Он вызывает предикат один раз для каждого буфера, и если значение равно &lt;code&gt;nil&lt;/code&gt; , этот буфер игнорируется. См. &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Параметры буфера&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe96a7f4fb23e15bbd04ceb9ff4687a306778bd9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; has at least one side window, this command saves the state of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window in the &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s &lt;code&gt;window-state&lt;/code&gt; frame parameter and deletes all side windows on &lt;var&gt;frame&lt;/var&gt; afterwards.</source>
          <target state="translated">Если &lt;var&gt;frame&lt;/var&gt; имеет , по меньшей мере , одно боковое окно, эта команда сохраняет состояние &lt;var&gt;frame&lt;/var&gt; &amp;laquo;корневого окна s в &lt;var&gt;frame&lt;/var&gt; &amp;laquo;ы &lt;code&gt;window-state&lt;/code&gt; параметров кадра и удаляет все боковые окна на &lt;var&gt;frame&lt;/var&gt; впоследствии.</target>
        </trans-unit>
        <trans-unit id="5f73160b9240e36ee07d2bed7f88dc75834bed9f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; has no side windows, but does have a &lt;code&gt;window-state&lt;/code&gt; parameter, this command uses that parameter&amp;rsquo;s value to restore the side windows on &lt;var&gt;frame&lt;/var&gt; leaving &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s main window alone.</source>
          <target state="translated">Если у &lt;var&gt;frame&lt;/var&gt; нет боковых окон, но есть параметр &lt;code&gt;window-state&lt;/code&gt; , эта команда использует значение этого параметра для восстановления боковых окон в &lt;var&gt;frame&lt;/var&gt; оставляя только главное окно &lt;var&gt;frame&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="8195a57843d2cbe8d7e96776dd8503054a2428ca" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; has no side windows, it returns &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window. Otherwise, it returns either an internal non-side window such that all other non-side windows on &lt;var&gt;frame&lt;/var&gt; descend from it, or the single live non-side window of &lt;var&gt;frame&lt;/var&gt;. Note that the main window of a frame cannot be deleted via &lt;code&gt;delete-window&lt;/code&gt;.</source>
          <target state="translated">Если у &lt;var&gt;frame&lt;/var&gt; нет боковых окон, возвращается корневое окно &lt;var&gt;frame&lt;/var&gt; . В противном случае он возвращает либо внутреннее небоковое окно, так что все другие небоковые окна &lt;var&gt;frame&lt;/var&gt; спускаются из него, либо единственное живое небоковое окно &lt;var&gt;frame&lt;/var&gt; . Обратите внимание, что главное окно фрейма нельзя удалить через &lt;code&gt;delete-window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="367726c34a9b53c1f745c95df8caaf6d2fb4d85e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this function sets the default attributes for newly created frames. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function sets the attributes for all existing frames, as well as for newly created frames.</source>
          <target state="translated">Если &lt;var&gt;frame&lt;/var&gt; равен &lt;code&gt;t&lt;/code&gt; , эта функция устанавливает атрибуты по умолчанию для вновь созданных кадров. Если &lt;var&gt;frame&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , эта функция устанавливает атрибуты для всех существующих кадров, а также для вновь созданных кадров.</target>
        </trans-unit>
        <trans-unit id="ca49ccfd45cbf005e0b3343c38212bce9dd98fbd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; is a frame, this returns &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s local buffer list. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, the fundamental buffer list is used: the buffers appear in order of most recent display or selection, regardless of which frames they were displayed on.</source>
          <target state="translated">Если &lt;var&gt;frame&lt;/var&gt; является кадром, возвращается список локальных буферов &lt;var&gt;frame&lt;/var&gt; . Если &lt;var&gt;frame&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; или опущен, используется основной список буферов: буферы появляются в порядке последнего отображения или выбора, независимо от того, в каких кадрах они были отображены.</target>
        </trans-unit>
        <trans-unit id="21526ce05c895c517d009c1e340b9297495ca30a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, that means the selected frame (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;). If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this function returns the value of the specified attribute for newly-created frames (this is normally &lt;code&gt;unspecified&lt;/code&gt;, unless you have specified some value using &lt;code&gt;set-face-attribute&lt;/code&gt;; see below).</source>
          <target state="translated">Если &lt;var&gt;frame&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , это означает выбранный кадр (см. &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Фокус ввода&lt;/a&gt; ). Если &lt;var&gt;frame&lt;/var&gt; равен &lt;code&gt;t&lt;/code&gt; , эта функция возвращает значение указанного атрибута для вновь созданных кадров (обычно это &lt;code&gt;unspecified&lt;/code&gt; , если вы не указали какое-либо значение с помощью &lt;code&gt;set-face-attribute&lt;/code&gt; ; см. Ниже).</target>
        </trans-unit>
        <trans-unit id="04c9f5dbdbf57056de20af216b6217e5a1008869" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; is the selected frame, this makes &lt;var&gt;window&lt;/var&gt; the selected window.</source>
          <target state="translated">Если &lt;var&gt;frame&lt;/var&gt; является выбранной рамкой, это делает &lt;var&gt;window&lt;/var&gt; выбранным окном.</target>
        </trans-unit>
        <trans-unit id="b62a326d9c59337c9206f5c8cb417ff496177d7c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;from-fn&lt;/var&gt; is a function, it is called with two arguments, &lt;var&gt;begin&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, which specify the part of the buffer it should convert. It should convert the text by editing it in place. Since this can change the length of the text, &lt;var&gt;from-fn&lt;/var&gt; should return the modified end position.</source>
          <target state="translated">Если &lt;var&gt;from-fn&lt;/var&gt; является функцией, она вызывается с двумя аргументами, &lt;var&gt;begin&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; , которые определяют часть буфера, которую она должна преобразовать. Он должен преобразовать текст, отредактировав его на месте. Поскольку это может изменить длину текста, &lt;var&gt;from-fn&lt;/var&gt; должно возвращать измененную конечную позицию.</target>
        </trans-unit>
        <trans-unit id="15031736989c5b527bdff961b4f960a9873281df" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;from-string&lt;/var&gt; contains upper-case letters, then &lt;code&gt;perform-replace&lt;/code&gt; binds &lt;code&gt;case-fold-search&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;, and it uses the &lt;var&gt;replacements&lt;/var&gt; without altering their case.</source>
          <target state="translated">Если &lt;var&gt;from-string&lt;/var&gt; содержит буквы в верхнем регистре, то &lt;code&gt;perform-replace&lt;/code&gt; привязывает &lt;code&gt;case-fold-search&lt;/code&gt; к &lt;code&gt;nil&lt;/code&gt; и использует &lt;var&gt;replacements&lt;/var&gt; без изменения их регистра.</target>
        </trans-unit>
        <trans-unit id="b095f85199320ea0f381313e29fdf428be161d8f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt; are omitted, &lt;var&gt;var&lt;/var&gt; is bound to &lt;code&gt;nil&lt;/code&gt; before the loop begins, and the loop exits if &lt;var&gt;var&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; at the beginning of an iteration. Here is an example:</source>
          <target state="translated">Если &lt;var&gt;from&lt;/var&gt; и &lt;var&gt;to&lt;/var&gt; опущены, &lt;var&gt;var&lt;/var&gt; привязывается к &lt;code&gt;nil&lt;/code&gt; перед началом цикла, и цикл завершается, если &lt;var&gt;var&lt;/var&gt; отличен от &lt;code&gt;nil&lt;/code&gt; в начале итерации. Вот пример:</target>
        </trans-unit>
        <trans-unit id="1749d4cb0d69ee3cfd7d906a44778e4c075c3f6e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;full-directory-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means the directory listing is expected to show the full contents of a directory. You should specify &lt;code&gt;t&lt;/code&gt; when &lt;var&gt;file&lt;/var&gt; is a directory and switches do not contain &amp;lsquo;</source>
          <target state="translated">Если &lt;var&gt;full-directory-p&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это означает, что ожидается, что в листинге каталогов будет показано полное содержимое каталога. Вы должны указать &lt;code&gt;t&lt;/code&gt; , если &lt;var&gt;file&lt;/var&gt; является каталогом, а переключатели не содержат '</target>
        </trans-unit>
        <trans-unit id="d66247893505a369ed4cb053e0b5c6f2f090957e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;full-name&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function returns the files&amp;rsquo; absolute file names. Otherwise, it returns the names relative to the specified directory.</source>
          <target state="translated">Если &lt;var&gt;full-name&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , функция возвращает абсолютные имена файлов. В противном случае он возвращает имена относительно указанного каталога.</target>
        </trans-unit>
        <trans-unit id="d49fa525b58a0d59a11a107ecb8b69695fb04221" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fun&lt;/var&gt; changes the window configuration by splitting or deleting windows, that does not alter the set of windows walked, which is determined prior to calling &lt;var&gt;fun&lt;/var&gt; for the first time.</source>
          <target state="translated">Если &lt;var&gt;fun&lt;/var&gt; изменяет конфигурацию окна, разделяя или удаляя окна, это не меняет набор пройденных окон, который определяется перед вызовом &lt;var&gt;fun&lt;/var&gt; в первый раз.</target>
        </trans-unit>
        <trans-unit id="3fe508d57bda90eaddaffa2325240754b59f9d43" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; already has a non-void function definition that is not an autoload object, this function does nothing and returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, it constructs an autoload object (see &lt;a href=&quot;autoload-type#Autoload-Type&quot;&gt;Autoload Type&lt;/a&gt;), and stores it as the function definition for &lt;var&gt;function&lt;/var&gt;. The autoload object has this form:</source>
          <target state="translated">Если &lt;var&gt;function&lt;/var&gt; уже имеет непустое определение функции, которое не является объектом автозагрузки, эта функция ничего не делает и возвращает &lt;code&gt;nil&lt;/code&gt; . В противном случае он создает объект автозагрузки (см. &lt;a href=&quot;autoload-type#Autoload-Type&quot;&gt;Тип автозагрузки&lt;/a&gt; ) и сохраняет его как определение &lt;var&gt;function&lt;/var&gt; для функции . Объект автозагрузки имеет такую ​​форму:</target>
        </trans-unit>
        <trans-unit id="3518254475be6f5cca76bf3354fd0622d9edf816" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt; property &lt;code&gt;permanent-local-hook&lt;/code&gt;, then &lt;code&gt;kill-all-local-variables&lt;/code&gt; (or changing major modes) won&amp;rsquo;t delete it from the hook variable&amp;rsquo;s local value.</source>
          <target state="translated">Если &lt;var&gt;function&lt;/var&gt; имеет свойство, отличное от &lt;code&gt;nil&lt;/code&gt; ,&amp;laquo; &lt;code&gt;permanent-local-hook&lt;/code&gt; , то &lt;code&gt;kill-all-local-variables&lt;/code&gt; (или изменение основных режимов) не удалит его из локального значения переменной перехватчика.</target>
        </trans-unit>
        <trans-unit id="c28743625f6ee6485550c2099ff72be5c7aec25b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is a byte-code function object, this immediately finishes loading the byte code of &lt;var&gt;function&lt;/var&gt; from its byte-compiled file, if it is not fully loaded already. Otherwise, it does nothing. It always returns &lt;var&gt;function&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;function&lt;/var&gt; является объектом функции с байтовым кодом, это немедленно завершает загрузку байтового кода &lt;var&gt;function&lt;/var&gt; из файла, скомпилированного в байтах, если он еще не загружен полностью. В противном случае ничего не происходит. Он всегда возвращает &lt;var&gt;function&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="8c8dfe3909828e5bff9da4775e218962c70f106e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is a symbol, this function first looks for the &lt;code&gt;function-documentation&lt;/code&gt; property of that symbol; if that has a non-&lt;code&gt;nil&lt;/code&gt; value, the documentation comes from that value (if the value is not a string, it is evaluated).</source>
          <target state="translated">Если &lt;var&gt;function&lt;/var&gt; является символом, эта функция сначала ищет свойство &lt;code&gt;function-documentation&lt;/code&gt; функции этого символа; если оно имеет &lt;code&gt;nil&lt;/code&gt; значение, документация исходит из этого значения (если значение не является строкой, оно оценивается).</target>
        </trans-unit>
        <trans-unit id="c552c00d2fb0acf113638f263536a85a69ccb679" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is already present in &lt;var&gt;hook&lt;/var&gt; (comparing using &lt;code&gt;equal&lt;/code&gt;), then &lt;code&gt;add-hook&lt;/code&gt; does not add it a second time.</source>
          <target state="translated">Если &lt;var&gt;function&lt;/var&gt; уже присутствует в &lt;var&gt;hook&lt;/var&gt; (сравнение с использованием &lt;code&gt;equal&lt;/code&gt; ), то &lt;code&gt;add-hook&lt;/code&gt; не добавляет ее во второй раз.</target>
        </trans-unit>
        <trans-unit id="d7df9fa48fe1587ad4057ede1a2ac2a660dbfefb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is not a symbol, or if it has no &lt;code&gt;function-documentation&lt;/code&gt; property, then &lt;code&gt;documentation&lt;/code&gt; extracts the documentation string from the actual function definition, reading it from a file if called for.</source>
          <target state="translated">Если &lt;var&gt;function&lt;/var&gt; не является символом или у нее нет свойства &lt;code&gt;function-documentation&lt;/code&gt; , то &lt;code&gt;documentation&lt;/code&gt; извлекает строку документации из фактического определения функции, считывая ее из файла, если это необходимо.</target>
        </trans-unit>
        <trans-unit id="fcfb65a38e3f1e3c8d577272d09f4b1b738b8de8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is not interactive, then the combined function will inherit the interactive spec, if any, of the original function. Else, the combined function will be interactive and will use the interactive spec of &lt;var&gt;function&lt;/var&gt;. One exception: if the interactive spec of &lt;var&gt;function&lt;/var&gt; is a function (i.e., a &lt;code&gt;lambda&lt;/code&gt; expression or an &lt;code&gt;fbound&lt;/code&gt; symbol rather than an expression or a string), then the interactive spec of the combined function will be a call to that function with as sole argument the interactive spec of the original function. To interpret the spec received as argument, use &lt;code&gt;advice-eval-interactive-spec&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;function&lt;/var&gt; не является интерактивной, то комбинированная функция унаследует интерактивную спецификацию исходной функции, если таковая имеется. В противном случае комбинированная функция будет интерактивной и будет использовать интерактивную спецификацию &lt;var&gt;function&lt;/var&gt; . Одно исключение: если интерактивная спецификация &lt;var&gt;function&lt;/var&gt; является функцией (т. &lt;code&gt;fbound&lt;/code&gt; &lt;code&gt;lambda&lt;/code&gt; выражением или символом fbound, а не выражением или строкой), тогда интерактивная спецификация объединенной функции будет вызовом этой функции с единственным аргументом интерактивная спецификация исходной функции. Чтобы интерпретировать спецификацию, полученную в качестве аргумента, используйте &lt;code&gt;advice-eval-interactive-spec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32c4bd79d78007d309e09a0d0bec3ddb57209ca3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; was previously registered as a fontification function using &lt;code&gt;jit-lock-register&lt;/code&gt;, this function unregisters it.</source>
          <target state="translated">Если &lt;var&gt;function&lt;/var&gt; была ранее зарегистрирована как функция фонификации с использованием &lt;code&gt;jit-lock-register&lt;/code&gt; , эта функция отменяет регистрацию.</target>
        </trans-unit>
        <trans-unit id="d031017db8498190d8da521cbc0271e5ff39cb8b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;greedy&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function extends the match backwards as far as possible, stopping when a single additional previous character cannot be part of a match for &lt;var&gt;regexp&lt;/var&gt;. When the match is extended, its starting position is allowed to occur before &lt;var&gt;limit&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;greedy&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , эта функция расширяет соответствие в обратном направлении, насколько это возможно, останавливаясь, когда один дополнительный предыдущий символ не может быть частью совпадения для &lt;var&gt;regexp&lt;/var&gt; . Когда матч продлевается, его стартовая позиция может занять до &lt;var&gt;limit&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="de124be120a7804c2bc4dcb4bcdea91661a2b84c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;header&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the frame title for the box is &amp;lsquo;</source>
          <target state="translated">Если &lt;var&gt;header&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , заголовком фрейма для поля будет '</target>
        </trans-unit>
        <trans-unit id="7326d6e29ee45b9a104a4687a636f156545a9354" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;here&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it inserts the text in the buffer before point, and returns &lt;code&gt;nil&lt;/code&gt;. When this function is called interactively, it prints the same information in the echo area, but giving a prefix argument makes &lt;var&gt;here&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;here&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , он вставляет текст в буфер перед точкой и возвращает &lt;code&gt;nil&lt;/code&gt; . Когда эта функция вызывается в интерактивном режиме, она печатает ту же информацию в эхо-области, но указание аргумента префикса делает &lt;var&gt;here&lt;/var&gt; отличным от &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3486bcd8782ee56514593a504032686da70375f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;hook&lt;/var&gt; is a non-&lt;code&gt;nil&lt;/code&gt; symbol whose &lt;code&gt;no-self-insert&lt;/code&gt; property is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;hook&lt;/var&gt; can explicitly control whether to insert the self-inserting input character that triggered the expansion. If &lt;var&gt;hook&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt; in this case, that inhibits insertion of the character. By contrast, if &lt;var&gt;hook&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;expand-abbrev&lt;/code&gt; (or &lt;code&gt;abbrev-insert&lt;/code&gt;) also returns &lt;code&gt;nil&lt;/code&gt;, as if expansion had not really occurred.</source>
          <target state="translated">Если &lt;var&gt;hook&lt;/var&gt; является &lt;code&gt;nil&lt;/code&gt; символом, у которого свойство &lt;code&gt;no-self-insert&lt;/code&gt; не- &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;hook&lt;/var&gt; может явно контролировать, нужно ли вставлять самовставляемый входной символ, который запускал раскрытие. Если в этом случае &lt;var&gt;hook&lt;/var&gt; возвращает &lt;code&gt;nil&lt;/code&gt; , это запрещает вставку символа. Напротив, если &lt;var&gt;hook&lt;/var&gt; возвращает &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;expand-abbrev&lt;/code&gt; (или &lt;code&gt;abbrev-insert&lt;/code&gt; ) также возвращает &lt;code&gt;nil&lt;/code&gt; , как если бы раскрытие на самом деле не произошло.</target>
        </trans-unit>
        <trans-unit id="d16533ab79378f58db6c05f66c73e9f5942168bb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;human&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the description is human-oriented. System abbrevs are listed and identified as such. Otherwise the description is a Lisp expression&amp;mdash;a call to &lt;code&gt;define-abbrev-table&lt;/code&gt; that would define &lt;var&gt;name&lt;/var&gt; as it is currently defined, but without the system abbrevs. (The mode or package using &lt;var&gt;name&lt;/var&gt; is supposed to add these to &lt;var&gt;name&lt;/var&gt; separately.)</source>
          <target state="translated">Если &lt;var&gt;human&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , описание ориентировано на человека. Системные сокращения перечислены и обозначены как таковые. В противном случае описание является выражением Лиспа - вызовом &lt;code&gt;define-abbrev-table&lt;/code&gt; , который определил бы &lt;var&gt;name&lt;/var&gt; в том виде, в каком оно определено в настоящее время, но без системных сокращений. (Предполагается, что режим или пакет, использующие &lt;var&gt;name&lt;/var&gt; , добавляют их к &lt;var&gt;name&lt;/var&gt; отдельно.)</target>
        </trans-unit>
        <trans-unit id="4fb11bdd7919b821549c820e30bcdab23b65ddf8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;ignore-case&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, characters are converted to lower-case before comparing them.</source>
          <target state="translated">Если &lt;var&gt;ignore-case&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , символы преобразуются в нижний регистр перед их сравнением.</target>
        </trans-unit>
        <trans-unit id="ce81e7e8bde20e3f5a7bca91ea554bcf82c0643a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;image&lt;/var&gt; is a single image specification, Emacs draws the tool bar button in disabled state by applying an edge-detection algorithm to the image.</source>
          <target state="translated">Если &lt;var&gt;image&lt;/var&gt; представляет собой спецификацию одного изображения, Emacs рисует кнопку панели инструментов в отключенном состоянии, применяя алгоритм обнаружения краев к изображению.</target>
        </trans-unit>
        <trans-unit id="64d20b99c0a35bc94cf60fe36333713b6a3905c7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;include-cmds&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, complete key sequences in the result vector are interleaved with pseudo-events of the form &lt;code&gt;(nil . &lt;var&gt;COMMAND&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;COMMAND&lt;/var&gt; is the binding of the key sequence (see &lt;a href=&quot;command-overview#Command-Overview&quot;&gt;Command Overview&lt;/a&gt;).</source>
          <target state="translated">Если &lt;var&gt;include-cmds&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , полные последовательности клавиш в векторе результатов чередуются с псевдособытиями формы &lt;code&gt;(nil . &lt;var&gt;COMMAND&lt;/var&gt;)&lt;/code&gt; , где &lt;var&gt;COMMAND&lt;/var&gt; - это привязка последовательности клавиш (см. &lt;a href=&quot;command-overview#Command-Overview&quot;&gt;Обзор команд&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0a309119a0c28d33dceec892ff301ac8dd27e404" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;inherit-input-method&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the current input method (if any) is employed to make it possible to enter a non-</source>
          <target state="translated">Если &lt;var&gt;inherit-input-method&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , то используется текущий метод ввода (если есть), чтобы можно было ввести не-</target>
        </trans-unit>
        <trans-unit id="5023a04034e117314618eace81f2f46d79b6c374" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;inherit&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, only attributes directly defined by &lt;var&gt;face&lt;/var&gt; are considered, so the return value may be &lt;code&gt;unspecified&lt;/code&gt;, or a relative value. If &lt;var&gt;inherit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;face&lt;/var&gt;&amp;rsquo;s definition of &lt;var&gt;attribute&lt;/var&gt; is merged with the faces specified by its &lt;code&gt;:inherit&lt;/code&gt; attribute; however the return value may still be &lt;code&gt;unspecified&lt;/code&gt; or relative. If &lt;var&gt;inherit&lt;/var&gt; is a face or a list of faces, then the result is further merged with that face (or faces), until it becomes specified and absolute.</source>
          <target state="translated">Если &lt;var&gt;inherit&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , учитываются только атрибуты, непосредственно определенные &lt;var&gt;face&lt;/var&gt; , поэтому возвращаемое значение может быть &lt;code&gt;unspecified&lt;/code&gt; или относительным. Если &lt;var&gt;inherit&lt;/var&gt; отлична от &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;face&lt;/var&gt; определение &amp;laquo;s из &lt;var&gt;attribute&lt;/var&gt; объединяется с лицами , указанными СВОИМ &lt;code&gt;:inherit&lt;/code&gt; атрибута; однако возвращаемое значение может быть &lt;code&gt;unspecified&lt;/code&gt; или относительным. Если &lt;var&gt;inherit&lt;/var&gt; - это грань или список граней, то результат дополнительно объединяется с этим лицом (или гранями), пока он не станет определенным и абсолютным.</target>
        </trans-unit>
        <trans-unit id="fc5a99940587624d5f8e88905e5e3ffbe83de8bf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;inherit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the inserted characters inherit sticky text properties from the two characters before and after the insertion point. See &lt;a href=&quot;sticky-properties#Sticky-Properties&quot;&gt;Sticky Properties&lt;/a&gt;.</source>
          <target state="translated">Если &lt;var&gt;inherit&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , вставленные символы наследуют свойства закрепленного текста от двух символов до и после точки вставки. См. &amp;laquo; &lt;a href=&quot;sticky-properties#Sticky-Properties&quot;&gt;Липкие свойства&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd6d2bf7276652257bfa2fcf702f1de6249212e0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;initial&lt;/var&gt; is a string, the minibuffer starts out containing the text of the string, with point at the end, when the user starts to edit the text. If the user simply types</source>
          <target state="translated">Если &lt;var&gt;initial&lt;/var&gt; является строкой, минибуфер начинается с текста строки с точкой в ​​конце, когда пользователь начинает редактировать текст. Если пользователь просто набирает</target>
        </trans-unit>
        <trans-unit id="8680d30b1fc65c2bd5d4cdd6205c1b439666973e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;interactive&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says &lt;var&gt;function&lt;/var&gt; can be called interactively. This lets completion in</source>
          <target state="translated">Если &lt;var&gt;interactive&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , это означает , что &lt;var&gt;function&lt;/var&gt; может вызываться интерактивно. Это позволяет завершить</target>
        </trans-unit>
        <trans-unit id="305323029dc5e36501ec002d854e6fa1bda89b72" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;iterator&lt;/var&gt; is suspended inside an &lt;code&gt;unwind-protect&lt;/code&gt;&amp;rsquo;s &lt;code&gt;bodyform&lt;/code&gt; and becomes unreachable, Emacs will eventually run unwind handlers after a garbage collection pass. (Note that &lt;code&gt;iter-yield&lt;/code&gt; is illegal inside an &lt;code&gt;unwind-protect&lt;/code&gt;&amp;rsquo;s &lt;code&gt;unwindforms&lt;/code&gt;.) To ensure that these handlers are run before then, use &lt;code&gt;iter-close&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;iterator&lt;/var&gt; подвешен внутри &lt;code&gt;unwind-protect&lt;/code&gt; &amp;laquo;s &lt;code&gt;bodyform&lt;/code&gt; и становится недоступным, Emacs в конечном итоге запустить UNWIND обработчиков после сбора мусора прохода. (Обратите внимание , что &lt;code&gt;iter-yield&lt;/code&gt; является незаконным внутри &lt;code&gt;unwind-protect&lt;/code&gt; &amp;laquo;ы &lt;code&gt;unwindforms&lt;/code&gt; .) Для того, чтобы гарантировать , что эти обработчики запускаются до этого, использовать &lt;code&gt;iter-close&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68adac69631bb6af71abb5acf2b791fb1a4f7a22" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;kbdmacro&lt;/var&gt; is a symbol, then its function definition is used in place of &lt;var&gt;kbdmacro&lt;/var&gt;. If that is another symbol, this process repeats. Eventually the result should be a string or vector. If the result is not a symbol, string, or vector, an error is signaled.</source>
          <target state="translated">Если &lt;var&gt;kbdmacro&lt;/var&gt; является символом, то вместо &lt;var&gt;kbdmacro&lt;/var&gt; используется определение его функции . Если это другой символ, этот процесс повторяется. В конечном итоге результатом должна быть строка или вектор. Если результат не является символом, строкой или вектором, выдается сигнал об ошибке.</target>
        </trans-unit>
        <trans-unit id="9801a6f8d4beefddfb578511212b729fa3e04a67" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keep-backup-version&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then true file version numbers understood as such by the file system are discarded from the return value, but backup version numbers are kept.</source>
          <target state="translated">Если &lt;var&gt;keep-backup-version&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , то истинные номера версий файлов, которые понимает файловая система как таковые, исключаются из возвращаемого значения, но номера версий резервных копий сохраняются.</target>
        </trans-unit>
        <trans-unit id="fd493bfae6974707467e8f4da94507ec95f258ad" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keep-mode-if-same&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function does not call the mode command if the buffer is already in the proper major mode. For instance, &lt;code&gt;set-visited-file-name&lt;/code&gt; sets this to &lt;code&gt;t&lt;/code&gt; to avoid killing buffer local variables that the user may have set.</source>
          <target state="translated">Если &lt;var&gt;keep-mode-if-same&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , эта функция не вызывает команду режима, если буфер уже находится в правильном основном режиме. Например, &lt;code&gt;set-visited-file-name&lt;/code&gt; устанавливает для него значение &lt;code&gt;t&lt;/code&gt; , чтобы избежать уничтожения локальных переменных буфера, которые мог установить пользователь.</target>
        </trans-unit>
        <trans-unit id="2e5d6b64d5441408f2897b53ae6d730e7cd4bb9f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keepalive-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; for a stream connection, enable exchange of low-level keep-alive messages.</source>
          <target state="translated">Если &lt;var&gt;keepalive-flag&lt;/var&gt; для потокового соединения не равен &lt;code&gt;nil&lt;/code&gt; , включите обмен сообщениями проверки активности низкого уровня.</target>
        </trans-unit>
        <trans-unit id="d0e9336903c21276287d695af3704a99778e5015" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key-regexp&lt;/var&gt; is:</source>
          <target state="translated">Если &lt;var&gt;key-regexp&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="a0b9b556380220ffb46b1c6fb65c0dc341cb6d60" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; contains a meta character (not a function key), that character is implicitly replaced by a two-character sequence: the value of &lt;code&gt;meta-prefix-char&lt;/code&gt;, followed by the corresponding non-meta character. Thus, the first example below is handled by conversion into the second example.</source>
          <target state="translated">Если &lt;var&gt;key&lt;/var&gt; содержит метасимвол (не функциональную клавишу), этот символ неявно заменяется двухсимвольной последовательностью: значением &lt;code&gt;meta-prefix-char&lt;/code&gt; , за которым следует соответствующий немета-символ. Таким образом, первый пример ниже обрабатывается путем преобразования во второй пример.</target>
        </trans-unit>
        <trans-unit id="38ecfb9f9e1a3501bfaf1c274b2980c7981abc98" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; is &lt;code&gt;[t]&lt;/code&gt;, this sets the default binding in &lt;var&gt;keymap&lt;/var&gt;. When an event has no binding of its own, the Emacs command loop uses the keymap&amp;rsquo;s default binding, if there is one.</source>
          <target state="translated">Если &lt;var&gt;key&lt;/var&gt; равен &lt;code&gt;[t]&lt;/code&gt; , это устанавливает привязку по умолчанию в &lt;var&gt;keymap&lt;/var&gt; . Когда событие не имеет собственной привязки, командный цикл Emacs использует привязку по умолчанию для раскладки клавиатуры, если она есть.</target>
        </trans-unit>
        <trans-unit id="9d007ebbfe70936b9c16b4e47f3152c8a687dbe1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, the value is the complete status information for the connection, server, serial port, or pipe; that is, the list of keywords and values specified in &lt;code&gt;make-network-process&lt;/code&gt;, &lt;code&gt;make-serial-process&lt;/code&gt;, or &lt;code&gt;make-pipe-process&lt;/code&gt;, except that some of the values represent the current status instead of what you specified.</source>
          <target state="translated">Если &lt;var&gt;key&lt;/var&gt; равен &lt;code&gt;t&lt;/code&gt; , значение представляет собой полную информацию о состоянии соединения, сервера, последовательного порта или канала; то есть список ключевых слов и значений, указанных в &lt;code&gt;make-network-process&lt;/code&gt; , &lt;code&gt;make-serial-process&lt;/code&gt; или &lt;code&gt;make-pipe-process&lt;/code&gt; , за исключением того, что некоторые из значений представляют текущий статус вместо того, что вы указали.</target>
        </trans-unit>
        <trans-unit id="3eef88733b744d4d8ba22904057183486bf34f35" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; is a keyword, the function returns the value corresponding to that keyword.</source>
          <target state="translated">Если &lt;var&gt;key&lt;/var&gt; является ключевым словом, функция возвращает значение, соответствующее этому ключевому слову.</target>
        </trans-unit>
        <trans-unit id="1fe505c313fe10ccf51a3b1c4045e8bdd68ce758" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; starts with a mouse event (perhaps following a prefix event), the maps to be consulted are determined based on the event&amp;rsquo;s position. Otherwise, they are determined based on the value of point. However, you can override either of them by specifying &lt;var&gt;position&lt;/var&gt;. If &lt;var&gt;position&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be either a buffer position or an event position like the value of &lt;code&gt;event-start&lt;/code&gt;. Then the maps consulted are determined based on &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;key&lt;/var&gt; начинается с события мыши (возможно, после события префикса), карты, к которым следует обращаться, определяются на основе положения события. В противном случае они определяются на основе стоимости балла. Однако вы можете переопределить любой из них, указав &lt;var&gt;position&lt;/var&gt; . Если &lt;var&gt;position&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это должна быть позиция в буфере или позиция события, такая как значение &lt;code&gt;event-start&lt;/code&gt; . Затем используемые карты определяются в зависимости от &lt;var&gt;position&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="1ab7dbf10e805849d749f51d1bbad999b0122aec" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keymap&lt;/var&gt; has submaps (bindings for prefix keys), they too receive new parent keymaps that reflect what &lt;var&gt;parent&lt;/var&gt; specifies for those prefix keys.</source>
          <target state="translated">Если &lt;var&gt;keymap&lt;/var&gt; имеет подкарта (привязки для ключей префиксов), они тоже получают новые родительские раскладки , которые отражают то , что &lt;var&gt;parent&lt;/var&gt; указуют , для этих ключей префиксов.</target>
        </trans-unit>
        <trans-unit id="fccb678faab353122fa2e1f5a9ac1b9fe483270c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keymap&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the maps used are the current active keymaps, disregarding &lt;code&gt;overriding-local-map&lt;/code&gt; (that is, pretending its value is &lt;code&gt;nil&lt;/code&gt;). If &lt;var&gt;keymap&lt;/var&gt; is a keymap, then the maps searched are &lt;var&gt;keymap&lt;/var&gt; and the global keymap. If &lt;var&gt;keymap&lt;/var&gt; is a list of keymaps, only those keymaps are searched.</source>
          <target state="translated">Если &lt;var&gt;keymap&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , то используемые карты - это текущие активные раскладки клавиатуры, без учета &lt;code&gt;overriding-local-map&lt;/code&gt; (то есть притворство, что его значение равно &lt;code&gt;nil&lt;/code&gt; ). Если &lt;var&gt;keymap&lt;/var&gt; является раскладкой, то ищутся &lt;var&gt;keymap&lt;/var&gt; и глобальная раскладка. Если &lt;var&gt;keymap&lt;/var&gt; - это список раскладок, поиск выполняется только в этих раскладках.</target>
        </trans-unit>
        <trans-unit id="afef749f0ed8d9b7b5e44103ec3b6c41f83801a9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keymap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that keymap is the local keymap to use in the minibuffer. If &lt;var&gt;keymap&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the value of &lt;code&gt;minibuffer-local-map&lt;/code&gt; is used as the keymap. Specifying a keymap is the most important way to customize the minibuffer for various applications such as completion.</source>
          <target state="translated">Если &lt;var&gt;keymap&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; , эта раскладка клавиатуры является локальной раскладкой клавиш для использования в минибуфере. Если &lt;var&gt;keymap&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , значение &lt;code&gt;minibuffer-local-map&lt;/code&gt; используется как keymap. Указание раскладки клавиатуры - самый важный способ настроить минибуфер для различных приложений, таких как автозавершение.</target>
        </trans-unit>
        <trans-unit id="f5b57269deb4b6580452d3f46f04e726e68c9f94" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;laxmatch&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it means there should be no error if there is no subexpression numbered &lt;var&gt;subexp&lt;/var&gt; in &lt;var&gt;matcher&lt;/var&gt;. Obviously, fontification of the subexpression numbered &lt;var&gt;subexp&lt;/var&gt; will not occur. However, fontification of other subexpressions (and other regexps) will continue. If &lt;var&gt;laxmatch&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and the specified subexpression is missing, then an error is signaled which terminates search-based fontification.</source>
          <target state="translated">Если &lt;var&gt;laxmatch&lt;/var&gt; отлична от &lt;code&gt;nil&lt;/code&gt; , это означает , что не должно быть никакой ошибки , если нет Подвыражение пронумерованных &lt;var&gt;subexp&lt;/var&gt; в &lt;var&gt;matcher&lt;/var&gt; . Очевидно, что фонификация пронумерованного подвыражения &lt;var&gt;subexp&lt;/var&gt; не произойдет. Однако фонификация других подвыражений (и других регулярных выражений) продолжится. Если &lt;var&gt;laxmatch&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; и указанное подвыражение отсутствует, то выдается сигнал об ошибке, которая завершает фонтификацию на основе поиска.</target>
        </trans-unit>
        <trans-unit id="f2901c57b5d8694910a57307520ad3c26e7ccbbe" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;left&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and &lt;var&gt;inverse&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means that the y-pixel value returned for any line specifies the distance in pixels from the left edge of the last (leftmost) glyph of that line to the right edge (body edge if &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;) of &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;left&lt;/var&gt; and &lt;var&gt;inverse&lt;/var&gt; are both non-&lt;code&gt;nil&lt;/code&gt;, the y-pixel value returned for any line specifies the distance in pixels from the left edge (body edge if &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;) of &lt;var&gt;window&lt;/var&gt; to the left edge of the last (leftmost) glyph of that line.</source>
          <target state="translated">Если &lt;var&gt;left&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , а &lt;var&gt;inverse&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , это означает, что значение y-пикселя, возвращаемое для любой строки, определяет расстояние в пикселях от левого края последнего (крайнего левого) глифа этой строки до правого края (края тела, если &lt;var&gt;body&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; ) &lt;var&gt;window&lt;/var&gt; . Если &lt;var&gt;left&lt;/var&gt; и &lt;var&gt;inverse&lt;/var&gt; оба не равны &lt;code&gt;nil&lt;/code&gt; , значение y-пикселя, возвращаемое для любой строки, указывает расстояние в пикселях от левого края (край &lt;var&gt;body&lt;/var&gt; если body не равно &lt;code&gt;nil&lt;/code&gt; ) &lt;var&gt;window&lt;/var&gt; до левого края последнего (самого левого) глиф этой строки.</target>
        </trans-unit>
        <trans-unit id="be828177f3b6c4b6519507c07d4107040b780ade" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, it means to choose a new seed as if Emacs were restarting, typically from the system entropy. On systems lacking entropy pools, choose the seed from less-random volatile data such as the current time.</source>
          <target state="translated">Если &lt;var&gt;limit&lt;/var&gt; равен &lt;code&gt;t&lt;/code&gt; , это означает выбор нового начального числа, как если бы Emacs перезапускался, обычно из системной энтропии. В системах без пулов энтропии выберите начальное значение из менее случайных изменчивых данных, таких как текущее время.</target>
        </trans-unit>
        <trans-unit id="5b68f1050fcbf8f573965d7b17ddf9c856e8812b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is a positive fixnum, the value is chosen to be nonnegative and less than &lt;var&gt;limit&lt;/var&gt;. Otherwise, the value might be any fixnum, i.e., any integer from &lt;code&gt;most-negative-fixnum&lt;/code&gt; through &lt;code&gt;most-positive-fixnum&lt;/code&gt; (see &lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;Integer Basics&lt;/a&gt;).</source>
          <target state="translated">Если &lt;var&gt;limit&lt;/var&gt; - положительное фиксированное число, значение выбирается неотрицательным и меньше &lt;var&gt;limit&lt;/var&gt; . В противном случае значение может быть любым fixnum, т. Е. Любым целым числом от &lt;code&gt;most-negative-fixnum&lt;/code&gt; до &lt;code&gt;most-positive-fixnum&lt;/code&gt; (см. &lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;Основы &lt;/a&gt;целых чисел ).</target>
        </trans-unit>
        <trans-unit id="417d75bb8b3a1c460180c3c7926ae36dac0d4145" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is a string, it means to choose a new seed based on the string&amp;rsquo;s contents.</source>
          <target state="translated">Если &lt;var&gt;limit&lt;/var&gt; является строкой, это означает выбор нового семени на основе содержимого строки.</target>
        </trans-unit>
        <trans-unit id="0492de86ea3be849e0f2da0effb3111a934e1754" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a buffer position; if the beginning of the field is before &lt;var&gt;limit&lt;/var&gt;, then &lt;var&gt;limit&lt;/var&gt; will be returned instead.</source>
          <target state="translated">Если &lt;var&gt;limit&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это буферная позиция; если начало поля до &lt;var&gt;limit&lt;/var&gt; , то вместо него будет возвращено &lt;var&gt;limit&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="587785dff44f5e0f04e90e83cc8bb6b74173c381" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a buffer position; if the end of the field is after &lt;var&gt;limit&lt;/var&gt;, then &lt;var&gt;limit&lt;/var&gt; will be returned instead.</source>
          <target state="translated">Если &lt;var&gt;limit&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это позиция буфера; если конец поля находится за &lt;var&gt;limit&lt;/var&gt; , вместо него будет возвращено &lt;var&gt;limit&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a89303d2068a0479a9c61c462ccd8dc0fefef1c2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it must be a position in the current buffer. It specifies the upper bound to the search. No match extending after that position is accepted. If &lt;var&gt;limit&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the end of the accessible portion of the buffer.</source>
          <target state="translated">Если &lt;var&gt;limit&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это должна быть позиция в текущем буфере. Он определяет верхнюю границу поиска. Никакие совпадения после этой позиции не принимаются. Если &lt;var&gt;limit&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется конец доступной части буфера.</target>
        </trans-unit>
        <trans-unit id="355c20aed688261f90727f7234112f9681ff781f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it must be a position in the current buffer; it specifies the upper bound to the search. The match found must not extend after that position.</source>
          <target state="translated">Если &lt;var&gt;limit&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это должна быть позиция в текущем буфере; он определяет верхнюю границу поиска. Найденное совпадение не должно продолжаться после этой позиции.</target>
        </trans-unit>
        <trans-unit id="9297be59454e1a754f06eef423b65713648dc0ea" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the scan ends at position &lt;var&gt;limit&lt;/var&gt;. If there is no property change before that point, &lt;code&gt;next-single-property-change&lt;/code&gt; returns &lt;var&gt;limit&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;limit&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то сканирование заканчивается на &lt;var&gt;limit&lt;/var&gt; позиции . Если до этой точки не произошло никаких изменений свойства, значение параметра &lt;code&gt;next-single-property-change&lt;/code&gt; возвращает &lt;var&gt;limit&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="9690710ef9da23b621d7dfa860746992d8f37deb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the scan ends at position &lt;var&gt;limit&lt;/var&gt;. If there is no property change before that point, this function returns &lt;var&gt;limit&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;limit&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то сканирование заканчивается на &lt;var&gt;limit&lt;/var&gt; позиции . Если до этого момента не было изменений свойств, эта функция возвращает &lt;var&gt;limit&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="76ec879549d2b357eaf032a4d1a0e5d120d2878c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is supplied (it must be a number or a marker), it specifies the maximum position in the buffer that point can be skipped to. Point will stop at or before &lt;var&gt;limit&lt;/var&gt;.</source>
          <target state="translated">Если указан &lt;var&gt;limit&lt;/var&gt; (это должно быть число или маркер), он указывает максимальную позицию в буфере, до которой можно пропустить точку. Точка остановится на уровне или выше &lt;var&gt;limit&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="76a425c9b93feedd8259bab6b2fe5cdc7ac0c135" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;linger-arg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, wait for successful transmission of all queued packets on the connection before it is deleted (see &lt;code&gt;delete-process&lt;/code&gt;). If &lt;var&gt;linger-arg&lt;/var&gt; is an integer, it specifies the maximum time in seconds to wait for queued packets to be sent before closing the connection. The default is &lt;code&gt;nil&lt;/code&gt;, which means to discard unsent queued packets when the process is deleted.</source>
          <target state="translated">Если &lt;var&gt;linger-arg&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , дождитесь успешной передачи всех пакетов в очереди по соединению, прежде чем оно будет удалено (см. &lt;code&gt;delete-process&lt;/code&gt; ). Если параметр &lt;var&gt;linger-arg&lt;/var&gt; является целым числом, он указывает максимальное время в секундах, в течение которого следует ожидать отправки пакетов из очереди перед закрытием соединения. Значение по умолчанию - &lt;code&gt;nil&lt;/code&gt; , что означает отбрасывание неотправленных пакетов в очереди при удалении процесса.</target>
        </trans-unit>
        <trans-unit id="d20324b9dfe0ad3135dd3cca84e3a639d94edf1c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;list&lt;/var&gt; is not &lt;code&gt;nil&lt;/code&gt; or a cons cell, &lt;code&gt;safe-length&lt;/code&gt; returns 0.</source>
          <target state="translated">Если &lt;var&gt;list&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; или не является cons-ячейкой, &lt;code&gt;safe-length&lt;/code&gt; возвращает 0.</target>
        </trans-unit>
        <trans-unit id="f21c3cb62cce40abd0a67cd9eafca1b0c8049e07" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;literal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;replacement&lt;/var&gt; is inserted exactly as it is, the only alterations being case changes as needed. If it is &lt;code&gt;nil&lt;/code&gt; (the default), then the character &amp;lsquo;</source>
          <target state="translated">Если &lt;var&gt;literal&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , то &lt;var&gt;replacement&lt;/var&gt; вставляется точно так, как есть, единственными изменениями являются изменения регистра по мере необходимости. Если он равен &lt;code&gt;nil&lt;/code&gt; (по умолчанию), то символ '</target>
        </trans-unit>
        <trans-unit id="db6c136a27bb820796e874179ca984f900ddb4cc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;load&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this command loads the compiled file after compiling it. Interactively, &lt;var&gt;load&lt;/var&gt; is the prefix argument.</source>
          <target state="translated">Если &lt;var&gt;load&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , эта команда загружает скомпилированный файл после его компиляции. В интерактивном режиме &lt;var&gt;load&lt;/var&gt; - это префиксный аргумент.</target>
        </trans-unit>
        <trans-unit id="ea9440d9b5f4dd277725a72af24eaba7092d6a75" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;local&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to add &lt;var&gt;function&lt;/var&gt; to the buffer-local hook list instead of to the global hook list. This makes the hook buffer-local and adds &lt;code&gt;t&lt;/code&gt; to the buffer-local value. The latter acts as a flag to run the hook functions in the default value as well as in the local value.</source>
          <target state="translated">Если &lt;var&gt;local&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это говорит о добавлении &lt;var&gt;function&lt;/var&gt; в список ловушек локального буфера, а не в глобальный список ловушек. Это делает перехватчик буфера локальным и добавляет &lt;code&gt;t&lt;/code&gt; к локальному значению буфера. Последний действует как флаг для запуска функций ловушки в значении по умолчанию, а также в локальном значении.</target>
        </trans-unit>
        <trans-unit id="a6cde464c5f6e3d1d68e588fb6c6d428cffda934" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;local&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to remove &lt;var&gt;function&lt;/var&gt; from the buffer-local hook list instead of from the global hook list.</source>
          <target state="translated">Если &lt;var&gt;local&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это означает , что &lt;var&gt;function&lt;/var&gt; должна быть удалена из списка обработчиков локального буфера, а не из глобального списка обработчиков.</target>
        </trans-unit>
        <trans-unit id="8d65aea389f65c19be6a6aafc97ff590a4cd1b41" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;loopfunc&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function that is called, without arguments, prior to each iteration of the macro. If &lt;var&gt;loopfunc&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;, then this stops execution of the macro.</source>
          <target state="translated">Если &lt;var&gt;loopfunc&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это функция, которая вызывается без аргументов перед каждой итерацией макроса. Если &lt;var&gt;loopfunc&lt;/var&gt; возвращает &lt;code&gt;nil&lt;/code&gt; , выполнение макроса останавливается.</target>
        </trans-unit>
        <trans-unit id="5fe23c8bf6b4ebe541da711f4408c1aca504de8d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mask&lt;/var&gt; is &lt;code&gt;heuristic&lt;/code&gt; or &lt;code&gt;(heuristic &lt;var&gt;bg&lt;/var&gt;)&lt;/code&gt;, build a clipping mask for the image, so that the background of a frame is visible behind the image. If &lt;var&gt;bg&lt;/var&gt; is not specified, or if &lt;var&gt;bg&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, determine the background color of the image by looking at the four corners of the image, assuming the most frequently occurring color from the corners is the background color of the image. Otherwise, &lt;var&gt;bg&lt;/var&gt; must be a list &lt;code&gt;(&lt;var&gt;red&lt;/var&gt; &lt;var&gt;green&lt;/var&gt; &lt;var&gt;blue&lt;/var&gt;)&lt;/code&gt; specifying the color to assume for the background of the image.</source>
          <target state="translated">Если &lt;var&gt;mask&lt;/var&gt; является &lt;code&gt;heuristic&lt;/code&gt; или &lt;code&gt;(heuristic &lt;var&gt;bg&lt;/var&gt;)&lt;/code&gt; , создайте обтравочную маску для изображения, чтобы фон кадра был виден позади изображения. Если &lt;var&gt;bg&lt;/var&gt; не указан или если &lt;var&gt;bg&lt;/var&gt; равно &lt;code&gt;t&lt;/code&gt; , определите цвет фона изображения, посмотрев на четыре угла изображения, предполагая, что наиболее часто встречающийся цвет от углов - это цвет фона изображения. В противном случае &lt;var&gt;bg&lt;/var&gt; должен быть списком &lt;code&gt;(&lt;var&gt;red&lt;/var&gt; &lt;var&gt;green&lt;/var&gt; &lt;var&gt;blue&lt;/var&gt;)&lt;/code&gt; определяющим цвет фона изображения.</target>
        </trans-unit>
        <trans-unit id="c2fbe70a6023303a1a1c54aca4b69ff1e60244b5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mask&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, remove a mask from the image, if it has one. Images in some formats include a mask which can be removed by specifying &lt;code&gt;:mask nil&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;mask&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; , удалите маску с изображения, если она есть. Изображения в некоторых форматах содержат маску, которую можно удалить, указав &lt;code&gt;:mask nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29b3c63a62c16a62b20885f28c3a0f60d1f12ab1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;match-list&lt;/var&gt; refers to a buffer that doesn&amp;rsquo;t exist, you don&amp;rsquo;t get an error; that sets the match data in a meaningless but harmless way.</source>
          <target state="translated">Если &lt;var&gt;match-list&lt;/var&gt; относится к несуществующему буферу, вы не получите ошибку; который устанавливает данные соответствия бессмысленным, но безвредным способом.</target>
        </trans-unit>
        <trans-unit id="6b868964784012f301882061fadf2a9192150264" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;match-regexp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns only those file names that contain a match for that regular expression&amp;mdash;the other file names are excluded from the list. On case-insensitive filesystems, the regular expression matching is case-insensitive.</source>
          <target state="translated">Если &lt;var&gt;match-regexp&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , эта функция возвращает только те имена файлов, которые содержат совпадение для этого регулярного выражения - другие имена файлов исключаются из списка. В файловых системах без учета регистра при сопоставлении регулярных выражений регистр не учитывается.</target>
        </trans-unit>
        <trans-unit id="a945bf4fa1494c2e854b52dfe7655381799b677c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;message&lt;/var&gt; is a string, then the optional argument &lt;var&gt;buffer-name&lt;/var&gt; is the name of the buffer used to display it when a pop-up buffer is used, defaulting to</source>
          <target state="translated">Если &lt;var&gt;message&lt;/var&gt; является строкой, то необязательный аргумент &lt;var&gt;buffer-name&lt;/var&gt; - это имя буфера, используемого для его отображения при использовании всплывающего буфера, по умолчанию</target>
        </trans-unit>
        <trans-unit id="760f0f6a2a1bc2d59cd6eae2a7e49da39f7cba81" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;message&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is displayed in the echo area while &lt;var&gt;string&lt;/var&gt; is displayed in the buffer. If it is &lt;code&gt;nil&lt;/code&gt;, a default message says to type &lt;var&gt;char&lt;/var&gt; to continue.</source>
          <target state="translated">Если &lt;var&gt;message&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , оно отображается в эхо-области, а &lt;var&gt;string&lt;/var&gt; отображается в буфере. Если он равен &lt;code&gt;nil&lt;/code&gt; , сообщение по умолчанию предлагает ввести &lt;var&gt;char&lt;/var&gt; для продолжения.</target>
        </trans-unit>
        <trans-unit id="ea7a25f7e7e8508103c16260b0a4d9e913d01385" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;min-value&lt;/var&gt; and &lt;var&gt;max-value&lt;/var&gt; are numbers, you can give the argument &lt;var&gt;current-value&lt;/var&gt; a numerical value specifying the initial progress; if omitted, this defaults to &lt;var&gt;min-value&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;min-value&lt;/var&gt; и &lt;var&gt;max-value&lt;/var&gt; являются числами, вы можете дать аргументу &lt;var&gt;current-value&lt;/var&gt; числовое значение, определяющее начальный прогресс; если опущено, по умолчанию используется &lt;var&gt;min-value&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="cb777f84764d51a3d01c9187dbee3b0316f62b83" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;minibuf&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, the cyclic ordering includes all minibuffer windows. If &lt;var&gt;minibuf&lt;/var&gt; is neither &lt;code&gt;t&lt;/code&gt; nor &lt;code&gt;nil&lt;/code&gt;, minibuffer windows are not included even if they are active.</source>
          <target state="translated">Если &lt;var&gt;minibuf&lt;/var&gt; равен &lt;code&gt;t&lt;/code&gt; , циклическое упорядочение включает все окна минибуфера. Если &lt;var&gt;minibuf&lt;/var&gt; не равен ни &lt;code&gt;t&lt;/code&gt; , ни &lt;code&gt;nil&lt;/code&gt; , окна минибуфера не включаются, даже если они активны.</target>
        </trans-unit>
        <trans-unit id="76a2b331501df7f82f53a73ac549c9fe781c256d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mode&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function adds &lt;var&gt;keywords&lt;/var&gt; to &lt;code&gt;font-lock-keywords&lt;/code&gt; in the current buffer. This way of calling &lt;code&gt;font-lock-add-keywords&lt;/code&gt; is usually used in mode hook functions.</source>
          <target state="translated">Если &lt;var&gt;mode&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , эта функция добавляет &lt;var&gt;keywords&lt;/var&gt; к ключевым словам &lt;code&gt;font-lock-keywords&lt;/code&gt; в текущем буфере. Этот способ вызова &lt;code&gt;font-lock-add-keywords&lt;/code&gt; обычно используется в функциях ловушки режима.</target>
        </trans-unit>
        <trans-unit id="358fff141b55cbcbbf4a72f5daf12d75a9590b09" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mode&lt;/var&gt; is a symbol which is a major mode command name, such as &lt;code&gt;c-mode&lt;/code&gt;, the effect is that enabling Font Lock mode in &lt;var&gt;mode&lt;/var&gt; will add &lt;var&gt;keywords&lt;/var&gt; to &lt;code&gt;font-lock-keywords&lt;/code&gt;. Calling with a non-&lt;code&gt;nil&lt;/code&gt; value of &lt;var&gt;mode&lt;/var&gt; is correct only in your</source>
          <target state="translated">Если &lt;var&gt;mode&lt;/var&gt; - это символ, который является именем основной команды режима, например &lt;code&gt;c-mode&lt;/code&gt; , эффект состоит в том, что включение режима Font Lock в &lt;var&gt;mode&lt;/var&gt; добавляет &lt;var&gt;keywords&lt;/var&gt; к ключевым словам &lt;code&gt;font-lock-keywords&lt;/code&gt; . Вызов с &lt;code&gt;nil&lt;/code&gt; значением &lt;var&gt;mode&lt;/var&gt; верен только в вашем</target>
        </trans-unit>
        <trans-unit id="2554816ae984d23f35288cef825daf0cffbd1b77" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;multibyte&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, strings given to the process filter are multibyte, otherwise they are unibyte. The default is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;multibyte&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , строки, передаваемые фильтру процесса, являются многобайтовыми, в противном случае - однобайтовыми. По умолчанию &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cd8ae8855810177e168ad382d0f1df3450d7ae5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;must-succeed&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, failure to open the connection terminates Emacs. Otherwise, it is an ordinary Lisp error.</source>
          <target state="translated">Если значение &lt;var&gt;must-succeed&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , неудача при открытии соединения завершает работу Emacs. В противном случае это обычная ошибка Лиспа.</target>
        </trans-unit>
        <trans-unit id="e5a85e125d6507b27a491ad49accf35437a93d01" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mustbenew&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;write-region&lt;/code&gt; asks for confirmation if &lt;var&gt;filename&lt;/var&gt; names an existing file. If &lt;var&gt;mustbenew&lt;/var&gt; is the symbol &lt;code&gt;excl&lt;/code&gt;, then &lt;code&gt;write-region&lt;/code&gt; does not ask for confirmation, but instead it signals an error &lt;code&gt;file-already-exists&lt;/code&gt; if the file already exists. Although &lt;code&gt;write-region&lt;/code&gt; normally follows a symbolic link and creates the pointed-to file if the symbolic link is dangling, it does not follow symbolic links if &lt;var&gt;mustbenew&lt;/var&gt; is &lt;code&gt;excl&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;mustbenew&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;write-region&lt;/code&gt; запрашивает подтверждение, если &lt;var&gt;filename&lt;/var&gt; именует существующий файл. Если &lt;var&gt;mustbenew&lt;/var&gt; является символом &lt;code&gt;excl&lt;/code&gt; , то зона &lt;code&gt;write-region&lt;/code&gt; не запрашивает подтверждения, а вместо этого сигнализирует об ошибке, что &lt;code&gt;file-already-exists&lt;/code&gt; если файл уже существует. Хотя &lt;code&gt;write-region&lt;/code&gt; обычно следует за символической ссылкой и создает указанный файл, если символическая ссылка болтается, она не следует за символическими ссылками, если &lt;var&gt;mustbenew&lt;/var&gt; является &lt;code&gt;excl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3746e7a4b93c2f5e09997704bda110912ad41e91" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it puts point &lt;var&gt;n&lt;/var&gt; tenths of the way from the beginning of the accessible portion of the buffer. In an interactive call, &lt;var&gt;n&lt;/var&gt; is the numeric prefix argument, if provided; otherwise &lt;var&gt;n&lt;/var&gt; defaults to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;n&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , то он помещает точку &lt;var&gt;n&lt;/var&gt; в десятых долях от начала доступной части буфера. В интерактивном вызове &lt;var&gt;n&lt;/var&gt; - это числовой аргумент префикса, если он указан; в противном случае &lt;var&gt;n&lt;/var&gt; по умолчанию &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fa5843f9731734f80c905de68bf6f57d9a02cd3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is zero, &lt;code&gt;nthcdr&lt;/code&gt; returns all of &lt;var&gt;list&lt;/var&gt;. If the length of &lt;var&gt;list&lt;/var&gt; is &lt;var&gt;n&lt;/var&gt; or less, &lt;code&gt;nthcdr&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;n&lt;/var&gt; равно нулю, &lt;code&gt;nthcdr&lt;/code&gt; возвращает весь &lt;var&gt;list&lt;/var&gt; . Если длина &lt;var&gt;list&lt;/var&gt; равна &lt;var&gt;n&lt;/var&gt; или меньше, &lt;code&gt;nthcdr&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4b40ddbf15f1a1972220177b91db86c24e8d264" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is zero, indicating a request for the latest kill, &lt;code&gt;current-kill&lt;/code&gt; calls the value of &lt;code&gt;interprogram-paste-function&lt;/code&gt; (documented below) before consulting the kill ring. If that value is a function and calling it returns a string or a list of several strings, &lt;code&gt;current-kill&lt;/code&gt; pushes the strings onto the kill ring and returns the first string. It also sets the yanking pointer to point to the kill-ring entry of the first string returned by &lt;code&gt;interprogram-paste-function&lt;/code&gt;, regardless of the value of &lt;var&gt;do-not-move&lt;/var&gt;. Otherwise, &lt;code&gt;current-kill&lt;/code&gt; does not treat a zero value for &lt;var&gt;n&lt;/var&gt; specially: it returns the entry pointed at by the yanking pointer and does not move the yanking pointer.</source>
          <target state="translated">Если &lt;var&gt;n&lt;/var&gt; равно нулю, что указывает на запрос последнего уничтожения, &lt;code&gt;current-kill&lt;/code&gt; вызывает значение функции &lt;code&gt;interprogram-paste-function&lt;/code&gt; (задокументировано ниже) перед обращением к кольцу уничтожений. Если это значение является функцией, и ее вызов возвращает строку или список из нескольких строк, &lt;code&gt;current-kill&lt;/code&gt; помещает строки в список уничтожений и возвращает первую строку. Он также устанавливает указатель восстановления так, чтобы он указывал на запись kill-ring первой строки, возвращаемой &lt;code&gt;interprogram-paste-function&lt;/code&gt; , независимо от значения &lt;var&gt;do-not-move&lt;/var&gt; . В противном случае &lt;code&gt;current-kill&lt;/code&gt; не обрабатывает нулевое значение для &lt;var&gt;n&lt;/var&gt; . специально: он возвращает запись, на которую указывает указатель восстановления, и не перемещает указатель восстановления.</target>
        </trans-unit>
        <trans-unit id="c4a84c3df345bcac96cded9a268e2fd2a15b3b21" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function modifies the fontset of the selected frame or that of &lt;var&gt;frame&lt;/var&gt; if &lt;var&gt;frame&lt;/var&gt; is not &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;name&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , эта функция изменяет набор шрифтов выбранного фрейма или шрифт &lt;var&gt;frame&lt;/var&gt; если &lt;var&gt;frame&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23df771eaf3bad31db2ac910d60c1121c8c471d3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this function modifies the default fontset, whose short name is &amp;lsquo;</source>
          <target state="translated">Если &lt;var&gt;name&lt;/var&gt; является &lt;code&gt;t&lt;/code&gt; , то эта функция изменяет набор шрифтов по умолчанию, чьи короткое имя &quot;</target>
        </trans-unit>
        <trans-unit id="0730e252581492ff86652eae61f09fd2092984ed" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it means to delete all overlays in the specified region. If &lt;var&gt;start&lt;/var&gt; and/or &lt;var&gt;end&lt;/var&gt; are omitted or &lt;code&gt;nil&lt;/code&gt;, that means the beginning and end of the buffer respectively. Therefore, &lt;code&gt;(remove-overlays)&lt;/code&gt; removes all the overlays in the current buffer.</source>
          <target state="translated">Если &lt;var&gt;name&lt;/var&gt; не указано или равно &lt;code&gt;nil&lt;/code&gt; , это означает удаление всех оверлеев в указанной области. Если &lt;var&gt;start&lt;/var&gt; и / или &lt;var&gt;end&lt;/var&gt; опущены или &lt;code&gt;nil&lt;/code&gt; , это означает начало и конец буфера соответственно. Следовательно, &lt;code&gt;(remove-overlays)&lt;/code&gt; удаляет все наложения в текущем буфере.</target>
        </trans-unit>
        <trans-unit id="6af1bf26a6a0bc89c6b24efcee8567b5fd3a6e3d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;new-pos&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;constrain-to-field&lt;/code&gt; uses the value of point instead, and moves point to the resulting position in addition to returning that position.</source>
          <target state="translated">Если &lt;var&gt;new-pos&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , тогда &lt;code&gt;constrain-to-field&lt;/code&gt; использует вместо этого значение point и перемещает точку в результирующую позицию в дополнение к возврату этой позиции.</target>
        </trans-unit>
        <trans-unit id="9b5541e81cf359db0249d926f39f56051c6aaf6f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;newname&lt;/var&gt; exists, then it must be an empty directory if &lt;var&gt;oldname&lt;/var&gt; is a directory and a non-directory otherwise.</source>
          <target state="translated">Если существует &lt;var&gt;newname&lt;/var&gt; , то это должен быть пустой каталог, если &lt;var&gt;oldname&lt;/var&gt; является каталогом, и не каталог в противном случае.</target>
        </trans-unit>
        <trans-unit id="70f0c76c07e217c62c33d733d989713df6e7203e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;newname&lt;/var&gt; is a symbolic link, its directory entry is replaced, not the directory entry it points to. If &lt;var&gt;oldname&lt;/var&gt; is a symbolic link, this function might or might not follow the link; it does not follow the link on GNU platforms. If &lt;var&gt;oldname&lt;/var&gt; is a directory, this function typically fails, although for the superuser on a few old-fashioned non-GNU platforms it can succeed and create a filesystem that is not tree-structured.</source>
          <target state="translated">Если &lt;var&gt;newname&lt;/var&gt; является символической ссылкой, заменяется ее запись в каталоге, а не запись в каталоге, на которую она указывает. Если &lt;var&gt;oldname&lt;/var&gt; является символической ссылкой, эта функция может переходить или не следовать по ссылке; он не переходит по ссылке на платформах GNU. Если &lt;var&gt;oldname&lt;/var&gt; является каталогом, эта функция обычно терпит неудачу, хотя для суперпользователя на нескольких устаревших платформах, отличных от GNU, она может успешно работать и создавать файловую систему, не имеющую древовидной структуры.</target>
        </trans-unit>
        <trans-unit id="e5bad4da3538be0c529de47a9ba28d4ee862b7df" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;no-error&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and a suitable path can&amp;rsquo;t be found, don&amp;rsquo;t signal an error. Instead, return a list of directories as before, except that &lt;code&gt;nil&lt;/code&gt; appears in place of the image directory.</source>
          <target state="translated">Если &lt;var&gt;no-error&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; и подходящий путь не может быть найден, не сигнализируйте об ошибке. Вместо этого верните список каталогов, как и раньше, за исключением того, что вместо каталога изображений отображается &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36e771c9c8ea6812625c3ae824d4c85aff3882bf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;no-remap&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, find the bindings for &lt;var&gt;other-command&lt;/var&gt; and treat them as though they are also bindings for &lt;var&gt;command&lt;/var&gt;. If &lt;var&gt;no-remap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, include the vector &lt;code&gt;[remap &lt;var&gt;other-command&lt;/var&gt;]&lt;/code&gt; in the list of possible key sequences, instead of finding those bindings.</source>
          <target state="translated">Если &lt;var&gt;no-remap&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , найдите привязки для &lt;var&gt;other-command&lt;/var&gt; и относитесь к ним так, как будто они также являются привязками для &lt;var&gt;command&lt;/var&gt; . Если &lt;var&gt;no-remap&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , включите вектор &lt;code&gt;[remap &lt;var&gt;other-command&lt;/var&gt;]&lt;/code&gt; в список возможных ключевых последовательностей вместо поиска этих привязок.</target>
        </trans-unit>
        <trans-unit id="de293f24fde5a6bfad440f3302beb58e65ef06e1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;no-remap&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, return the bindings for &lt;var&gt;other-command&lt;/var&gt; rather than &lt;var&gt;command&lt;/var&gt;. If &lt;var&gt;no-remap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, return the bindings for &lt;var&gt;command&lt;/var&gt;, ignoring the fact that it is remapped.</source>
          <target state="translated">Если &lt;var&gt;no-remap&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , вернуть привязки для &lt;var&gt;other-command&lt;/var&gt; а не для &lt;var&gt;command&lt;/var&gt; . Если &lt;var&gt;no-remap&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , вернуть привязки для &lt;var&gt;command&lt;/var&gt; , игнорируя тот факт, что она переназначена.</target>
        </trans-unit>
        <trans-unit id="00e082503381f94a9d71d41842fc34eccabb510d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noauto&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says not to enable or disable Auto-Save mode. The mode remains enabled if it was enabled before.</source>
          <target state="translated">Если &lt;var&gt;noauto&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это означает , что нельзя включать и отключать режим автосохранения. Режим остается включенным, если он был включен ранее.</target>
        </trans-unit>
        <trans-unit id="b29af83687727fd1b589a3008542c14f5b548ea8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nodigits&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;suppress-keymap&lt;/code&gt; defines digits to run &lt;code&gt;digit-argument&lt;/code&gt;, and</source>
          <target state="translated">Если &lt;var&gt;nodigits&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;suppress-keymap&lt;/code&gt; определяет цифры для запуска &lt;code&gt;digit-argument&lt;/code&gt; , и</target>
        </trans-unit>
        <trans-unit id="d0a493315f909df0fe4aba7cda1b88945120716f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nodisp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;sit-for&lt;/code&gt; does not redisplay, but it still returns as soon as input is available (or when the timeout elapses).</source>
          <target state="translated">Если &lt;var&gt;nodisp&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;sit-for&lt;/code&gt; не отображается повторно, но все равно возвращается, как только ввод становится доступным (или когда истекает тайм-аут).</target>
        </trans-unit>
        <trans-unit id="d5c2797052a29fc6fac6d9aca68e89cff39f4db3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noerror&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;word-search-forward&lt;/code&gt; signals an error if the search fails. If &lt;var&gt;noerror&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, then it returns &lt;code&gt;nil&lt;/code&gt; instead of signaling an error. If &lt;var&gt;noerror&lt;/var&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor &lt;code&gt;t&lt;/code&gt;, it moves point to &lt;var&gt;limit&lt;/var&gt; (or the end of the accessible portion of the buffer) and returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;noerror&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;word-search-forward&lt;/code&gt; сигнализирует об ошибке, если поиск не удался. Если &lt;var&gt;noerror&lt;/var&gt; равно &lt;code&gt;t&lt;/code&gt; , то вместо сообщения об ошибке возвращается &lt;code&gt;nil&lt;/code&gt; . Если &lt;var&gt;noerror&lt;/var&gt; не является ни &lt;code&gt;nil&lt;/code&gt; , ни &lt;code&gt;t&lt;/code&gt; , он перемещает точку до &lt;var&gt;limit&lt;/var&gt; (или конец доступной части буфера) и возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b34901434cb924798166f7998a7c369b13aa3ff8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noerror&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that suppresses errors from actual loading of the file. In that case, &lt;code&gt;require&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; if loading the file fails. Normally, &lt;code&gt;require&lt;/code&gt; returns &lt;var&gt;feature&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;noerror&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это подавляет ошибки при фактической загрузке файла. В этом случае &lt;code&gt;require&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; , если загрузка файла не удалась. Обычно &lt;code&gt;require&lt;/code&gt; &lt;var&gt;feature&lt;/var&gt; возврата .</target>
        </trans-unit>
        <trans-unit id="fb8a7c392a4b5b154111bf576d8db335aef254ae" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noescape&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that inhibits use of quoting characters in the output. (This argument is supported in Emacs versions 19 and later.)</source>
          <target state="translated">Если &lt;var&gt;noescape&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это запрещает использование кавычек в выводе. (Этот аргумент поддерживается в Emacs версии 19 и новее.)</target>
        </trans-unit>
        <trans-unit id="bac112f69fe2ae136cf186ae67923f75cd73b274" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noexclude&lt;/var&gt; is present and non-&lt;code&gt;nil&lt;/code&gt;, that disables the normal action of &lt;code&gt;yank-handled-properties&lt;/code&gt; and &lt;code&gt;yank-excluded-properties&lt;/code&gt; on the inserted string.</source>
          <target state="translated">Если присутствует &lt;var&gt;noexclude&lt;/var&gt; и не &lt;code&gt;nil&lt;/code&gt; , это отключает нормальное действие &lt;code&gt;yank-handled-properties&lt;/code&gt; и &lt;code&gt;yank-excluded-properties&lt;/code&gt; для вставленной строки.</target>
        </trans-unit>
        <trans-unit id="7eb19dbd4a4e2455ddba09e86ea3f445ea3b92cc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noforce&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;position&lt;/var&gt; would place point off screen at the next redisplay, then redisplay computes a new window-start position that works well with point, and thus &lt;var&gt;position&lt;/var&gt; is not used.</source>
          <target state="translated">Если &lt;var&gt;noforce&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , и &lt;var&gt;position&lt;/var&gt; будет помещать точку за пределы экрана при следующем повторном отображении, тогда redisplay вычисляет новую позицию начала окна, которая хорошо работает с точкой, и, таким образом, &lt;var&gt;position&lt;/var&gt; не используется.</target>
        </trans-unit>
        <trans-unit id="0ecca1827da80ecd5be14fb9fb2d0fbd4811a32f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noforce&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function does not recompile files that have an up-to-date &amp;lsquo;</source>
          <target state="translated">Если &lt;var&gt;noforce&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , эта функция не перекомпилирует файлы с обновленным '</target>
        </trans-unit>
        <trans-unit id="78f3227e2803afeeafa3e87719ab498e6a18e8a6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noindirect&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;where-is-internal&lt;/code&gt; doesn&amp;rsquo;t look inside menu-items to find their commands. This makes it possible to search for a menu-item itself.</source>
          <target state="translated">Если &lt;var&gt;noindirect&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;where-is-internal&lt;/code&gt; не заглядывает внутрь пунктов меню, чтобы найти их команды. Это позволяет искать сам пункт меню.</target>
        </trans-unit>
        <trans-unit id="26693b86f9e15c7345b1f99c962018c4276f22ce" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nomodes&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means don&amp;rsquo;t alter the buffer&amp;rsquo;s major mode, don&amp;rsquo;t process local variables specifications in the file, and don&amp;rsquo;t run &lt;code&gt;find-file-hook&lt;/code&gt;. This feature is used by &lt;code&gt;revert-buffer&lt;/code&gt; in some cases.</source>
          <target state="translated">Если &lt;var&gt;nomodes&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это означает, что не изменяйте основной режим буфера, не обрабатывайте спецификации локальных переменных в файле и не запускайте &lt;code&gt;find-file-hook&lt;/code&gt; . Эта функция в некоторых случаях используется &lt;code&gt;revert-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d10ebd500fb3448c1a40d71edf4b908895de050" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nonstickiness&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means that the property &lt;var&gt;property&lt;/var&gt; is rear-nonsticky by default. Since all properties are front-nonsticky by default, this makes &lt;var&gt;property&lt;/var&gt; nonsticky in both directions by default.</source>
          <target state="translated">Если &lt;var&gt;nonstickiness&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; , это означает, что свойство &lt;var&gt;property&lt;/var&gt; не липкое по умолчанию. Поскольку по умолчанию все свойства не прикрепляются спереди, по умолчанию это делает &lt;var&gt;property&lt;/var&gt; незакрепленным в обоих направлениях.</target>
        </trans-unit>
        <trans-unit id="83892fe7706bb36fcc64573410d45dd2c22713cb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nosort&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;directory-files&lt;/code&gt; does not sort the list, so you get the file names in no particular order. Use this if you want the utmost possible speed and don&amp;rsquo;t care what order the files are processed in. If the order of processing is visible to the user, then the user will probably be happier if you do sort the names.</source>
          <target state="translated">Если &lt;var&gt;nosort&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;directory-files&lt;/code&gt; не сортирует список, поэтому вы получаете имена файлов в произвольном порядке. Используйте это, если вам нужна максимально возможная скорость и вам все равно, в каком порядке обрабатываются файлы. Если порядок обработки виден пользователю, то он, вероятно, будет счастливее, если вы все-таки отсортируете имена.</target>
        </trans-unit>
        <trans-unit id="e9ba6185ce28fd5f39867dd3f5cda9873d3d87e2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nosqueeze&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means do not change interior whitespace.</source>
          <target state="translated">Если &lt;var&gt;nosqueeze&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это означает, что внутренние пробелы не меняются.</target>
        </trans-unit>
        <trans-unit id="6598274c6486d7fe5670d764afd9c92143e9519e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nosqueeze&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means to leave whitespace other than line breaks untouched. If &lt;var&gt;squeeze-after&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a position in the region, and means don&amp;rsquo;t canonicalize spaces before that position.</source>
          <target state="translated">Если &lt;var&gt;nosqueeze&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это означает, что пробелы, кроме разрывов строк, должны оставаться нетронутыми. Если &lt;var&gt;squeeze-after&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , он указывает позицию в регионе и означает, что не следует канонизировать пробелы перед этой позицией.</target>
        </trans-unit>
        <trans-unit id="d6892e309bf8fcc44554b83a98e758b86dcaf968" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nosqueeze&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means to leave whitespace other than line breaks untouched. If &lt;var&gt;to-eop&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means to keep filling to the end of the paragraph&amp;mdash;or the next hard newline, if &lt;code&gt;use-hard-newlines&lt;/code&gt; is enabled (see below).</source>
          <target state="translated">Если &lt;var&gt;nosqueeze&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это означает, что пробелы, кроме разрывов строк, должны оставаться нетронутыми. Если &lt;var&gt;to-eop&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это означает, что нужно продолжать заполнение до конца абзаца или до следующего жесткого перехода на новую строку, если включен параметр &lt;code&gt;use-hard-newlines&lt;/code&gt; (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="e931aa8ba8f040aad8beafd66d9db46e9038ece6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;not-current&lt;/var&gt;, if point is in a region where we have a match, then skip past that and find the next instance instead.</source>
          <target state="translated">Если &lt;var&gt;not-current&lt;/var&gt; , если точка находится в регионе, где у нас есть совпадение, пропустите это и вместо этого найдите следующий экземпляр.</target>
        </trans-unit>
        <trans-unit id="ad5c7639ee10fd0fbdca8effe5c458cff315189c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noundo&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;subst-char-in-region&lt;/code&gt; does not record the change for undo and does not mark the buffer as modified. This was useful for controlling the old selective display feature (see &lt;a href=&quot;selective-display#Selective-Display&quot;&gt;Selective Display&lt;/a&gt;).</source>
          <target state="translated">Если &lt;var&gt;noundo&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;subst-char-in-region&lt;/code&gt; не записывает изменение для отмены и не отмечает буфер как измененный. Это было полезно для управления старой функцией выборочного отображения (см. &lt;a href=&quot;selective-display#Selective-Display&quot;&gt;Выборочный дисплей&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a9014652f43b7f3736feab16399f1f869b549d21" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; are numbers with differing types or values, then they cannot be the same object and &lt;code&gt;eq&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. If they are fixnums with the same value, then they are the same object and &lt;code&gt;eq&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt;. If they were computed separately but happen to have the same value and the same non-fixnum numeric type, then they might or might not be the same object, and &lt;code&gt;eq&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; depending on whether the Lisp interpreter created one object or two.</source>
          <target state="translated">Если &lt;var&gt;object1&lt;/var&gt; и &lt;var&gt;object2&lt;/var&gt; - числа с разными типами или значениями, то они не могут быть одним и тем же объектом, и &lt;code&gt;eq&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; . Если это фиксированные числа с одинаковым значением, то это один и тот же объект, и &lt;code&gt;eq&lt;/code&gt; возвращает &lt;code&gt;t&lt;/code&gt; . Если они были вычислены отдельно, но имеют одно и то же значение и один и тот же числовой тип non-fixnum, тогда они могут быть или не быть одним и тем же объектом, а &lt;code&gt;eq&lt;/code&gt; возвращает &lt;code&gt;t&lt;/code&gt; или &lt;code&gt;nil&lt;/code&gt; в зависимости от того, создал ли интерпретатор Лиспа один объект или два.</target>
        </trans-unit>
        <trans-unit id="2af6f2a24faac9514358b8004f083d20948c6b84" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; are symbols with the same name, they are normally the same object&amp;mdash;but see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt; for exceptions. For other non-numeric types (e.g., lists, vectors, strings), two arguments with the same contents or elements are not necessarily &lt;code&gt;eq&lt;/code&gt; to each other: they are &lt;code&gt;eq&lt;/code&gt; only if they are the same object, meaning that a change in the contents of one will be reflected by the same change in the contents of the other.</source>
          <target state="translated">Если &lt;var&gt;object1&lt;/var&gt; и &lt;var&gt;object2&lt;/var&gt; являются символами с одним и тем же именем, они обычно являются одним и тем же объектом, но см. Раздел &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Создание символов&lt;/a&gt; для исключений. Для других нечисловых типов (например, списки, векторы, строка), два аргумента с тем же содержимым или элементы не обязательно &lt;code&gt;eq&lt;/code&gt; друг с другом: они &lt;code&gt;eq&lt;/code&gt; только если они и тот же объект, а это означает , что изменение содержания одного будет отражаться таким же изменением содержимого другого.</target>
        </trans-unit>
        <trans-unit id="b1ee70c11cfc433529378d20ac72c39a1e8fea7d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object&lt;/var&gt; is a buffer, &lt;var&gt;pos&lt;/var&gt; is the position in the buffer.</source>
          <target state="translated">Если &lt;var&gt;object&lt;/var&gt; является буфером, &lt;var&gt;pos&lt;/var&gt; - это позиция в буфере.</target>
        </trans-unit>
        <trans-unit id="0e27eb072bc84c5470eb495591cdba437e15fad2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object&lt;/var&gt; is a string (an overlay string or a string displayed with the &lt;code&gt;display&lt;/code&gt; property), &lt;var&gt;pos&lt;/var&gt; is the position in that string.</source>
          <target state="translated">Если &lt;var&gt;object&lt;/var&gt; является строкой (строка наложения или строка, отображаемая со свойством &lt;code&gt;display&lt;/code&gt; ), &lt;var&gt;pos&lt;/var&gt; - это позиция в этой строке.</target>
        </trans-unit>
        <trans-unit id="38a61ea0980d18fce10e9b53b0321cf0fdd0800c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object&lt;/var&gt; is an overlay, that overlay has a &lt;code&gt;help-echo&lt;/code&gt; property, and &lt;var&gt;pos&lt;/var&gt; is the position in the overlay&amp;rsquo;s buffer.</source>
          <target state="translated">Если &lt;var&gt;object&lt;/var&gt; является наложением, это наложение имеет свойство &lt;code&gt;help-echo&lt;/code&gt; , а &lt;var&gt;pos&lt;/var&gt; - это позиция в буфере наложения.</target>
        </trans-unit>
        <trans-unit id="d3a9907e2699fe2ba585907784b6a1667fe8494e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;old-pos&lt;/var&gt; is at the boundary of two fields, then the acceptable final positions depend on the argument &lt;var&gt;escape-from-edge&lt;/var&gt;. If &lt;var&gt;escape-from-edge&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;new-pos&lt;/var&gt; must be in the field whose &lt;code&gt;field&lt;/code&gt; property equals what new characters inserted at &lt;var&gt;old-pos&lt;/var&gt; would inherit. (This depends on the stickiness of the &lt;code&gt;field&lt;/code&gt; property for the characters before and after &lt;var&gt;old-pos&lt;/var&gt;.) If &lt;var&gt;escape-from-edge&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;new-pos&lt;/var&gt; can be anywhere in the two adjacent fields. Additionally, if two fields are separated by another field with the special value &lt;code&gt;boundary&lt;/code&gt;, then any point within this special field is also considered to be on the boundary.</source>
          <target state="translated">Если &lt;var&gt;old-pos&lt;/var&gt; находится на границе двух полей, то приемлемые конечные позиции зависят от аргумента &lt;var&gt;escape-from-edge&lt;/var&gt; . Если &lt;var&gt;escape-from-edge&lt;/var&gt; является &lt;code&gt;nil&lt;/code&gt; , то &lt;var&gt;new-pos&lt;/var&gt; должны быть в поле, &lt;code&gt;field&lt;/code&gt; свойство равно , что новые символы , вставленные в &lt;var&gt;old-pos&lt;/var&gt; унаследуют. (Это зависит от липкости свойства &lt;code&gt;field&lt;/code&gt; для символов до и после &lt;var&gt;old-pos&lt;/var&gt; .) Если &lt;var&gt;escape-from-edge&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;new-pos&lt;/var&gt; может быть где угодно в двух соседних полях. Кроме того, если два поля разделены другим полем со специальным значением &lt;code&gt;boundary&lt;/code&gt; , то любая точка в этом специальном поле также считается находящейся на границе.</target>
        </trans-unit>
        <trans-unit id="7b45ce06e8242468687d939a7db0ceab289b73f3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;oldmap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that changes the behavior of &lt;code&gt;substitute-key-definition&lt;/code&gt;: the bindings in &lt;var&gt;oldmap&lt;/var&gt; determine which keys to rebind. The rebindings still happen in &lt;var&gt;keymap&lt;/var&gt;, not in &lt;var&gt;oldmap&lt;/var&gt;. Thus, you can change one map under the control of the bindings in another. For example,</source>
          <target state="translated">Если &lt;var&gt;oldmap&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это меняет поведение определения- &lt;code&gt;substitute-key-definition&lt;/code&gt; : привязки в &lt;var&gt;oldmap&lt;/var&gt; определяют, какие ключи нужно повторно привязать. В переприсваивании все еще случается в &lt;var&gt;keymap&lt;/var&gt; , а не в &lt;var&gt;oldmap&lt;/var&gt; . Таким образом, вы можете менять одну карту под управлением привязок в другой. Например,</target>
        </trans-unit>
        <trans-unit id="2a6bdbd640045c08255f0d67a91e3c33581a9f85" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;omit-nulls&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the result contains null strings whenever there are two consecutive matches for &lt;var&gt;separators&lt;/var&gt;, or a match is adjacent to the beginning or end of &lt;var&gt;string&lt;/var&gt;. If &lt;var&gt;omit-nulls&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, these null strings are omitted from the result.</source>
          <target state="translated">Если параметр &lt;var&gt;omit-nulls&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; (или опущен), результат будет содержать пустые строки всякий раз, когда есть два последовательных совпадения для &lt;var&gt;separators&lt;/var&gt; или совпадение находится рядом с началом или концом &lt;var&gt;string&lt;/var&gt; . Если &lt;var&gt;omit-nulls&lt;/var&gt; равно &lt;code&gt;t&lt;/code&gt; , эти пустые строки не включаются в результат.</target>
        </trans-unit>
        <trans-unit id="4aad24ed126b51cb92662abeec69efc832d15095" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;oobinline-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; for a stream connection, receive out-of-band data in the normal data stream. Otherwise, ignore out-of-band data.</source>
          <target state="translated">Если &lt;var&gt;oobinline-flag&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; для потокового соединения, принимать внеполосные данные в обычном потоке данных. В противном случае игнорируйте внеполосные данные.</target>
        </trans-unit>
        <trans-unit id="37779651e9adbb5f6f48ea776433a34f31a2eb33" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;operation&lt;/var&gt; is &lt;code&gt;insert-file-contents&lt;/code&gt;, the argument corresponding to the target may be a cons cell of the form &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt; . &lt;var&gt;buffer&lt;/var&gt;)&lt;/code&gt;. In that case, &lt;var&gt;filename&lt;/var&gt; is a file name to look up in &lt;code&gt;file-coding-system-alist&lt;/code&gt;, and &lt;var&gt;buffer&lt;/var&gt; is a buffer that contains the file&amp;rsquo;s contents (not yet decoded). If &lt;code&gt;file-coding-system-alist&lt;/code&gt; specifies a function to call for this file, and that function needs to examine the file&amp;rsquo;s contents (as it usually does), it should examine the contents of &lt;var&gt;buffer&lt;/var&gt; instead of reading the file.</source>
          <target state="translated">Если &lt;var&gt;operation&lt;/var&gt; - это &lt;code&gt;insert-file-contents&lt;/code&gt; , аргумент, соответствующий цели, может быть cons-ячейкой формы &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt; . &lt;var&gt;buffer&lt;/var&gt;)&lt;/code&gt; . В этом случае &lt;var&gt;filename&lt;/var&gt; - это имя файла для поиска в &lt;code&gt;file-coding-system-alist&lt;/code&gt; , а &lt;var&gt;buffer&lt;/var&gt; - это буфер, содержащий содержимое файла (еще не декодированное). Если &lt;code&gt;file-coding-system-alist&lt;/code&gt; указывает функцию для вызова этого файла, и эта функция должна проверить содержимое файла (как обычно), она должна проверять содержимое &lt;var&gt;buffer&lt;/var&gt; вместо чтения файла.</target>
        </trans-unit>
        <trans-unit id="d891618ccc439543f9deced17fd85e88a18cce65" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;param&lt;/var&gt; is present and non-&lt;code&gt;nil&lt;/code&gt;, it replaces &lt;var&gt;string&lt;/var&gt; (or the substring of &lt;var&gt;string&lt;/var&gt; being processed) as the object passed to &lt;var&gt;function&lt;/var&gt; (or &lt;code&gt;insert&lt;/code&gt;). For example, if &lt;var&gt;function&lt;/var&gt; is &lt;code&gt;yank-rectangle&lt;/code&gt;, &lt;var&gt;param&lt;/var&gt; should be a list of strings to insert as a rectangle.</source>
          <target state="translated">Если &lt;var&gt;param&lt;/var&gt; и не равен &lt;code&gt;nil&lt;/code&gt; , он заменяет &lt;var&gt;string&lt;/var&gt; (или подстроку обрабатываемой &lt;var&gt;string&lt;/var&gt; ) как объект, переданный в &lt;var&gt;function&lt;/var&gt; (или &lt;code&gt;insert&lt;/code&gt; ). Например, если &lt;var&gt;function&lt;/var&gt; - это &lt;code&gt;yank-rectangle&lt;/code&gt; , &lt;var&gt;param&lt;/var&gt; должен быть списком строк для вставки в виде прямоугольника.</target>
        </trans-unit>
        <trans-unit id="d30e2c584d8dbc2a078ae811bcb4a57e2608707f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;mode-class&lt;/code&gt; symbol property, then &lt;code&gt;define-derived-mode&lt;/code&gt; sets the &lt;code&gt;mode-class&lt;/code&gt; property of &lt;var&gt;variant&lt;/var&gt; to the same value. This ensures, for example, that if &lt;var&gt;parent&lt;/var&gt; is a special mode, then &lt;var&gt;variant&lt;/var&gt; is also a special mode (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">Если &lt;var&gt;parent&lt;/var&gt; элемент имеет свойство символа &lt;code&gt;mode-class&lt;/code&gt; отличное от &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;define-derived-mode&lt;/code&gt; устанавливает свойство &lt;code&gt;mode-class&lt;/code&gt; режима для &lt;var&gt;variant&lt;/var&gt; на то же значение. Это гарантирует, например, что если &lt;var&gt;parent&lt;/var&gt; является особым режимом, то &lt;var&gt;variant&lt;/var&gt; также будет особым режимом (см. &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Соглашения об основных&lt;/a&gt; режимах ).</target>
        </trans-unit>
        <trans-unit id="7b1617578c1a56dedad969852c0b1d45b2ea11df" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pattern&lt;/var&gt; is written as a relative file name, it is interpreted relative to the current default directory. The file names returned are normally also relative to the current default directory. However, if &lt;var&gt;full&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, they are absolute.</source>
          <target state="translated">Если &lt;var&gt;pattern&lt;/var&gt; записан как относительное имя файла, он интерпретируется относительно текущего каталога по умолчанию. Возвращаемые имена файлов обычно также относятся к текущему каталогу по умолчанию. Однако, если &lt;var&gt;full&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , они абсолютны.</target>
        </trans-unit>
        <trans-unit id="1c99972e410371a92d8f69b335df771151454562" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pattern&lt;/var&gt; is written as an absolute file name, the values are absolute also.</source>
          <target state="translated">Если &lt;var&gt;pattern&lt;/var&gt; записан как абсолютное имя файла, значения также являются абсолютными.</target>
        </trans-unit>
        <trans-unit id="fc49ec34b1436f43b3eeb5e7a55dc8182e6de5e6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;period&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the returned value includes the period that delimits the extension, and if &lt;var&gt;filename&lt;/var&gt; has no extension, the value is &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;period&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , то возвращаемое значение включает точку, ограничивающую расширение, а если &lt;var&gt;filename&lt;/var&gt; не имеет расширения, значение равно &lt;code&gt;&quot;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ed3a227cc989252164f90e310eca16feab9cb5c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pixels-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;lines&lt;/var&gt; specifies a number of pixels. In this case, the return value is &lt;var&gt;lines&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;pixels-p&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;lines&lt;/var&gt; задают количество пикселей. В этом случае возвращаемое значение - &lt;var&gt;lines&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="784762c4516053ed35d7fc0595d15975dab5431a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pixelwise&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the return value is rounded down to the nearest integer, if necessary. This means that if a column on the right of the text area is only partially visible, that column is not counted. It also means that the width of a window&amp;rsquo;s body can never exceed its total width as returned by &lt;code&gt;window-total-width&lt;/code&gt;.</source>
          <target state="translated">Если по &lt;var&gt;pixelwise&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , возвращаемое значение при необходимости округляется до ближайшего целого числа. Это означает, что если столбец справа от текстовой области виден только частично, этот столбец не учитывается. Это также означает, что ширина тела окна никогда не может превышать его общую ширину, возвращаемую функцией &lt;code&gt;window-total-width&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c62e60e501a28aa524f768d674258822704eccc8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pixelwise&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the return value is rounded down to the nearest integer, if necessary. This means that if a line at the bottom of the text area is only partially visible, that line is not counted. It also means that the height of a window&amp;rsquo;s body can never exceed its total height as returned by &lt;code&gt;window-total-height&lt;/code&gt;.</source>
          <target state="translated">Если по &lt;var&gt;pixelwise&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , возвращаемое значение при необходимости округляется до ближайшего целого числа. Это означает, что если строка в нижней части текстовой области видна только частично, эта строка не учитывается. Это также означает, что высота тела окна никогда не может превышать его общую высоту, возвращаемую функцией &lt;code&gt;window-total-height&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e57da36286b8cb1902091ef2218e3a32b743eac" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pos-or-prop&lt;/var&gt; is a marker or number, this function returns a non-&lt;code&gt;nil&lt;/code&gt; value if the text at that position is currently invisible.</source>
          <target state="translated">Если &lt;var&gt;pos-or-prop&lt;/var&gt; является маркером или числом, эта функция возвращает &lt;code&gt;nil&lt;/code&gt; значение, если текст в этой позиции в настоящее время невидим.</target>
        </trans-unit>
        <trans-unit id="b657c5c40081843536657ec55d6f3cad825161c2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pos-or-prop&lt;/var&gt; is any other kind of Lisp object, that is taken to mean a possible value of the &lt;code&gt;invisible&lt;/code&gt; text or overlay property. In that case, this function returns a non-&lt;code&gt;nil&lt;/code&gt; value if that value would cause text to become invisible, based on the current value of &lt;code&gt;buffer-invisibility-spec&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;pos-or-prop&lt;/var&gt; - это любой другой тип объекта Lisp, это означает возможное значение &lt;code&gt;invisible&lt;/code&gt; текста или свойства наложения. В этом случае эта функция возвращает значение, отличное от &lt;code&gt;nil&lt;/code&gt; , если это значение приведет к тому, что текст станет невидимым, на основе текущего значения &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d64ca800dd9eb161d321e9a0d7374e76e593748" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pos&lt;/var&gt; is at the beginning of its field, and &lt;var&gt;escape-from-edge&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the return value is always the beginning of the preceding field that &lt;em&gt;ends&lt;/em&gt; at &lt;var&gt;pos&lt;/var&gt;, regardless of the stickiness of the &lt;code&gt;field&lt;/code&gt; properties around &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;pos&lt;/var&gt; находятся в начале своего поля, и &lt;var&gt;escape-from-edge&lt;/var&gt; отличен от &lt;code&gt;nil&lt;/code&gt; , то возвращаемого значения всегда начало предыдущего поля , которое &lt;em&gt;заканчивается&lt;/em&gt; в &lt;var&gt;pos&lt;/var&gt; , независимо от липкости из &lt;code&gt;field&lt;/code&gt; свойств вокруг &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="46417bbbf875d6256c94c47b965787bbed275199" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pos&lt;/var&gt; is at the end of its field, and &lt;var&gt;escape-from-edge&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the return value is always the end of the following field that &lt;em&gt;begins&lt;/em&gt; at &lt;var&gt;pos&lt;/var&gt;, regardless of the stickiness of the &lt;code&gt;field&lt;/code&gt; properties around &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;pos&lt;/var&gt; находится в конце своего поля, а &lt;var&gt;escape-from-edge&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , то возвращаемое значение всегда является концом следующего поля, которое &lt;em&gt;начинается&lt;/em&gt; с &lt;var&gt;pos&lt;/var&gt; , независимо от липкости свойств &lt;code&gt;field&lt;/code&gt; вокруг &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="96a53e112df0ffde3b4c25dce291c3cce9686c57" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or a marker that points nowhere, then &lt;var&gt;marker&lt;/var&gt; is set to point nowhere.</source>
          <target state="translated">Если &lt;var&gt;position&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; или маркер никуда не указывает, то &lt;var&gt;marker&lt;/var&gt; устанавливается в никуда.</target>
        </trans-unit>
        <trans-unit id="83c105bf919f3622f1dcd1a7fd5c58cceeef6513" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, it means to use the current mouse position (or the top-left corner of the frame if the mouse is not available on a text terminal). If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it means to precompute the key binding equivalents for the keymaps specified in &lt;var&gt;menu&lt;/var&gt;, without actually displaying or popping up the menu.</source>
          <target state="translated">Если &lt;var&gt;position&lt;/var&gt; равно &lt;code&gt;t&lt;/code&gt; , это означает использование текущего положения мыши (или верхнего левого угла фрейма, если мышь недоступна на текстовом терминале). Если &lt;var&gt;position&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; , это означает предварительное вычисление эквивалентов привязки клавиш для раскладок клавиш, указанных в &lt;var&gt;menu&lt;/var&gt; , без фактического отображения или всплывающего меню.</target>
        </trans-unit>
        <trans-unit id="f3eeaf5e6367889ab92df1cab57056dd2fc164b3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;position&lt;/var&gt; is at the end of &lt;var&gt;object&lt;/var&gt;, both the &lt;small&gt;CAR&lt;/small&gt; and the &lt;small&gt;CDR&lt;/small&gt; of the value are &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;position&lt;/var&gt; находится в конце &lt;var&gt;object&lt;/var&gt; , как &lt;small&gt;CAR, так&lt;/small&gt; и &lt;small&gt;CDR&lt;/small&gt; значения равны &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="faac8d599dce1586e227e803a02a728fc9b08789" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;position&lt;/var&gt; is visible, &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;partially&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;; if &lt;var&gt;partially&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and the character following &lt;var&gt;position&lt;/var&gt; is fully visible, it returns a list of the form &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are the pixel coordinates relative to the top left corner of the window; otherwise it returns an extended list of the form &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt; &lt;var&gt;rtop&lt;/var&gt; &lt;var&gt;rbot&lt;/var&gt; &lt;var&gt;rowh&lt;/var&gt; &lt;var&gt;vpos&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;rtop&lt;/var&gt; and &lt;var&gt;rbot&lt;/var&gt; specify the number of off-window pixels at the top and bottom of the row at &lt;var&gt;position&lt;/var&gt;, &lt;var&gt;rowh&lt;/var&gt; specifies the visible height of that row, and &lt;var&gt;vpos&lt;/var&gt; specifies the vertical position (zero-based row number) of that row.</source>
          <target state="translated">Если &lt;var&gt;position&lt;/var&gt; видима, &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; возвращает &lt;code&gt;t&lt;/code&gt; , если &lt;var&gt;partially&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; ; если &lt;var&gt;partially&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; и символ, следующий за &lt;var&gt;position&lt;/var&gt; , полностью виден, он возвращает список в форме &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; , где &lt;var&gt;x&lt;/var&gt; и &lt;var&gt;y&lt;/var&gt; - координаты пикселя относительно верхнего левого угла окна; в противном случае он возвращает расширенный список вида &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt; &lt;var&gt;rtop&lt;/var&gt; &lt;var&gt;rbot&lt;/var&gt; &lt;var&gt;rowh&lt;/var&gt; &lt;var&gt;vpos&lt;/var&gt;)&lt;/code&gt; , где &lt;var&gt;rtop&lt;/var&gt; и &lt;var&gt;rbot&lt;/var&gt; указывает количество пикселей вне окна вверху и внизу строки в &lt;var&gt;position&lt;/var&gt; , &lt;var&gt;rowh&lt;/var&gt; указывает видимую высоту этой строки, а &lt;var&gt;vpos&lt;/var&gt; указывает вертикальное положение ( отсчитываемый от нуля номер строки) этой строки.</target>
        </trans-unit>
        <trans-unit id="55cc33edc7be2cd9526c5a9533403095ca7c456a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and if &lt;var&gt;collection&lt;/var&gt; contains several strings that are equal to each other, as determined by &lt;code&gt;compare-strings&lt;/code&gt; according to &lt;code&gt;completion-ignore-case&lt;/code&gt;, then &lt;var&gt;predicate&lt;/var&gt; should accept either all or none of them. Otherwise, the return value of &lt;code&gt;test-completion&lt;/code&gt; is essentially unpredictable.</source>
          <target state="translated">Если &lt;var&gt;predicate&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; и если &lt;var&gt;collection&lt;/var&gt; содержит несколько строк, которые равны друг другу, как определено &lt;code&gt;compare-strings&lt;/code&gt; соответствии с &lt;code&gt;completion-ignore-case&lt;/code&gt; , то &lt;var&gt;predicate&lt;/var&gt; должен принимать либо все, либо ни одну из них. В противном случае возвращаемое значение &lt;code&gt;test-completion&lt;/code&gt; по существу непредсказуемо.</target>
        </trans-unit>
        <trans-unit id="bdb1cc039095ceac1bea80584a172b1f443cac21" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a function of one argument that decides which file names are acceptable completion alternatives. A file name is an acceptable value if &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt; for it.</source>
          <target state="translated">Если &lt;var&gt;predicate&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , он определяет функцию одного аргумента, которая определяет, какие имена файлов являются приемлемыми альтернативами завершения. Имя файла является допустимым значением, если для него &lt;var&gt;predicate&lt;/var&gt; возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8580e26c159c1afb13cde8e06fdd1a34d8e08cd5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;prefix&lt;/var&gt; is given, it should be a prefix key sequence; then &lt;code&gt;accessible-keymaps&lt;/code&gt; includes only the submaps whose prefixes start with &lt;var&gt;prefix&lt;/var&gt;. These elements look just as they do in the value of &lt;code&gt;(accessible-keymaps)&lt;/code&gt;; the only difference is that some elements are omitted.</source>
          <target state="translated">Если указан &lt;var&gt;prefix&lt;/var&gt; , это должна быть последовательность ключей префикса; тогда &lt;code&gt;accessible-keymaps&lt;/code&gt; включают только подкарты, префиксы которых начинаются с &lt;var&gt;prefix&lt;/var&gt; . Эти элементы выглядят так же, как и в значении &lt;code&gt;(accessible-keymaps)&lt;/code&gt; ; единственная разница в том, что некоторые элементы опущены.</target>
        </trans-unit>
        <trans-unit id="a347999f1d1b713f4dd4865d93365fa337bb5c95" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;prefix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a prefix key; then the listing includes only keys that start with &lt;var&gt;prefix&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;prefix&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , это должен быть ключ префикса; тогда список включает только ключи, начинающиеся с &lt;var&gt;prefix&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="ca36dbd3bd6f556ea18734cb45b9bd8faaa32550" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;preserve&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to stop preserving the height/width of &lt;var&gt;window&lt;/var&gt;, lifting any respective restraint induced by a previous call of this function for &lt;var&gt;window&lt;/var&gt;. Calling &lt;code&gt;enlarge-window&lt;/code&gt;, &lt;code&gt;shrink-window&lt;/code&gt; or &lt;code&gt;fit-window-to-buffer&lt;/code&gt; with &lt;var&gt;window&lt;/var&gt; as argument may also remove the respective restraint.</source>
          <target state="translated">Если &lt;var&gt;preserve&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , это означает прекращение сохранения высоты / ширины &lt;var&gt;window&lt;/var&gt; , снятие любого соответствующего ограничения, вызванного предыдущим вызовом этой функции для &lt;var&gt;window&lt;/var&gt; . Вызов &lt;code&gt;enlarge-window&lt;/code&gt; , окна &lt;code&gt;shrink-window&lt;/code&gt; или &lt;code&gt;fit-window-to-buffer&lt;/code&gt; с &lt;var&gt;window&lt;/var&gt; качестве аргумента также может удалить соответствующее ограничение.</target>
        </trans-unit>
        <trans-unit id="70b2755117f45760e422eb22c3d62e12c4e7c7a4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pretend&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs displays &lt;var&gt;height&lt;/var&gt; lines of output in &lt;var&gt;frame&lt;/var&gt;, but does not change its value for the actual height of the frame. This is only useful on text terminals. Using a smaller height than the terminal actually implements may be useful to reproduce behavior observed on a smaller screen, or if the terminal malfunctions when using its whole screen. Setting the frame height directly does not always work, because knowing the correct actual size may be necessary for correct cursor positioning on text terminals.</source>
          <target state="translated">Если &lt;var&gt;pretend&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , то Emacs отображает строки &lt;var&gt;height&lt;/var&gt; вывода в &lt;var&gt;frame&lt;/var&gt; , но не изменяет свое значение для фактической высоты кадра. Это полезно только на текстовых терминалах. Использование меньшей высоты, чем на самом деле реализует терминал, может быть полезно для воспроизведения поведения, наблюдаемого на меньшем экране, или в случае сбоя терминала при использовании всего экрана. Непосредственная установка высоты фрейма не всегда работает, потому что знание правильного фактического размера может быть необходимо для правильного позиционирования курсора на текстовых терминалах.</target>
        </trans-unit>
        <trans-unit id="798dab2980b4189ca407ba85b40f9a38bc88abfd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; does not have a buffer, &lt;code&gt;process-mark&lt;/code&gt; returns a marker that points nowhere.</source>
          <target state="translated">Если &lt;var&gt;process&lt;/var&gt; не имеет буфера, &lt;code&gt;process-mark&lt;/code&gt; возвращает маркер, который никуда не указывает.</target>
        </trans-unit>
        <trans-unit id="440f703b88c0360d005a972e8afcd27c23624d36" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; is a datagram connection or server, this function returns its remote peer address.</source>
          <target state="translated">Если &lt;var&gt;process&lt;/var&gt; является подключением дейтаграммы или сервером, эта функция возвращает адрес его удаленного узла.</target>
        </trans-unit>
        <trans-unit id="b974ca55176bdcfc401335afa634c590cb8298b6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; is a datagram connection or server, this function sets its remote peer address to &lt;var&gt;address&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;process&lt;/var&gt; является соединением или сервером дейтаграммы, эта функция устанавливает адрес его удаленного узла на &lt;var&gt;address&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2fb199d58887ed1728511057c2cf80aabcf45b87" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; is a non-blocking network stream that hasn&amp;rsquo;t been fully set up yet, then this function will block until that has happened. If given the optional &lt;var&gt;no-block&lt;/var&gt; parameter, this function will return &lt;code&gt;nil&lt;/code&gt; instead of blocking.</source>
          <target state="translated">Если &lt;var&gt;process&lt;/var&gt; представляет собой неблокирующий сетевой поток, который еще не был полностью настроен, эта функция будет блокироваться, пока это не произойдет. Если указан необязательный параметр &lt;var&gt;no-block&lt;/var&gt; , эта функция вернет &lt;code&gt;nil&lt;/code&gt; вместо блокировки.</target>
        </trans-unit>
        <trans-unit id="61ac6dbc8147a26153803b8153c37f8ee249df1c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; is a process, and the argument &lt;var&gt;just-this-one&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, only output from that process is handled, suspending output from other processes until some output has been received from that process or the timeout expires. If &lt;var&gt;just-this-one&lt;/var&gt; is an integer, also inhibit running timers. This feature is generally not recommended, but may be necessary for specific applications, such as speech synthesis.</source>
          <target state="translated">Если &lt;var&gt;process&lt;/var&gt; является процессом, а аргумент &lt;var&gt;just-this-one&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , обрабатывается только вывод этого процесса, приостанавливая вывод от других процессов до тех пор, пока какой-либо вывод не будет получен от этого процесса или не истечет время ожидания. Если &lt;var&gt;just-this-one&lt;/var&gt; является целым числом, также запретите работу таймеров. Эта функция обычно не рекомендуется, но может быть необходима для определенных приложений, например для синтеза речи.</target>
        </trans-unit>
        <trans-unit id="bb4c2d271cb8d5cf6b340e26056049f2b0cd468d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;program&lt;/var&gt; exits with a non-zero exit status, this function signals an error.</source>
          <target state="translated">Если &lt;var&gt;program&lt;/var&gt; завершается с ненулевым статусом выхода, эта функция сигнализирует об ошибке.</target>
        </trans-unit>
        <trans-unit id="284b476ea5c6c02ef3e08ef66c25dfe87039466a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;program&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, Emacs opens a new pseudoterminal (pty) and associates its input and output with &lt;var&gt;buffer-or-name&lt;/var&gt;, without creating a subprocess. In that case, the remaining arguments &lt;var&gt;args&lt;/var&gt; are ignored.</source>
          <target state="translated">Если &lt;var&gt;program&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; , Emacs открывает новый псевдотерминал (pty) и связывает его ввод и вывод с &lt;var&gt;buffer-or-name&lt;/var&gt; без создания подпроцесса. В этом случае остальные аргументы &lt;var&gt;args&lt;/var&gt; игнорируются.</target>
        </trans-unit>
        <trans-unit id="7a068c0ed13f4b12558a0ac454fd5ebc9a03b071" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;prompt&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that becomes the overall prompt string for the keymap. The prompt string should be given for menu keymaps (see &lt;a href=&quot;defining-menus#Defining-Menus&quot;&gt;Defining Menus&lt;/a&gt;).</source>
          <target state="translated">Если &lt;var&gt;prompt&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; , она становится общей строкой подсказки для раскладки клавиатуры. Строка подсказки должна быть предоставлена ​​для раскладок меню (см. &lt;a href=&quot;defining-menus#Defining-Menus&quot;&gt;Определение меню&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b9183e502e9d5b4a77e58ff41346ba19cb0aa17f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;prompt&lt;/var&gt; is supplied, it specifies a string for prompting the user. The prompt string is always displayed in the echo area, followed by a single &amp;lsquo;</source>
          <target state="translated">Если указано &lt;var&gt;prompt&lt;/var&gt; , оно указывает строку для запроса пользователя. Строка приглашения всегда отображается в эхо-области, за которой следует одиночный символ '</target>
        </trans-unit>
        <trans-unit id="b8cdf2773a6fb1439f3a41376c8f7fe6ac57d8da" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;props&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the effect is to get rid of all properties from the specified range of text. Here&amp;rsquo;s an example:</source>
          <target state="translated">Если &lt;var&gt;props&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , эффект заключается в том, чтобы избавиться от всех свойств из указанного диапазона текста. Вот пример:</target>
        </trans-unit>
        <trans-unit id="8afb837ad0393bcd35f16b34e9e0d91dd9d41b2e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;query-flag&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it replaces all occurrences; otherwise, it asks the user what to do about each one.</source>
          <target state="translated">Если &lt;var&gt;query-flag&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , он заменяет все вхождения; в противном случае он спрашивает пользователя, что делать с каждым из них.</target>
        </trans-unit>
        <trans-unit id="0d3207a5cfbb93826b7faedab3cdbc2f46ee5045" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;query-only&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it only lists processes whose query flag is non-&lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;query-before-exit#Query-Before-Exit&quot;&gt;Query Before Exit&lt;/a&gt;.</source>
          <target state="translated">Если &lt;var&gt;query-only&lt;/var&gt; отличен от &lt;code&gt;nil&lt;/code&gt; , в нем перечислены только процессы, флаг запроса которых не равен &lt;code&gt;nil&lt;/code&gt; . См. &amp;laquo; &lt;a href=&quot;query-before-exit#Query-Before-Exit&quot;&gt;Запрос перед выходом&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6890ef2b1573eed73e499d955a44c98846cafb19" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;quit-char&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the character to use for quitting. Normally this character is</source>
          <target state="translated">Если &lt;var&gt;quit-char&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , он указывает символ, используемый для выхода. Обычно этот персонаж</target>
        </trans-unit>
        <trans-unit id="a3a577714ad408acffc0d7cc1067326e87907443" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;read-function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function, which is used instead of &lt;code&gt;read&lt;/code&gt; to read expressions one by one. This function is called with one argument, the stream for reading input. You can also use the variable &lt;code&gt;load-read-function&lt;/code&gt; (see &lt;a href=&quot;how-programs-do-loading#Definition-of-load_002dread_002dfunction&quot;&gt;How Programs Do Loading&lt;/a&gt;) to specify this function, but it is more robust to use the &lt;var&gt;read-function&lt;/var&gt; argument.</source>
          <target state="translated">Если &lt;var&gt;read-function&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , это должна быть функция, которая используется вместо &lt;code&gt;read&lt;/code&gt; для чтения выражений одно за другим. Эта функция вызывается с одним аргументом - потоком для чтения ввода. Вы также можете использовать переменную &lt;code&gt;load-read-function&lt;/code&gt; (см. &lt;a href=&quot;how-programs-do-loading#Definition-of-load_002dread_002dfunction&quot;&gt;Как программы &lt;/a&gt;загружаются ), чтобы указать эту функцию, но более надежным является использование аргумента &lt;var&gt;read-function&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="d3db26c2ae9afb5816606d7f0a78c1829b1ed42d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;read&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;default&lt;/var&gt; is also used as the input to &lt;code&gt;read&lt;/code&gt;, if the user enters empty input. If &lt;var&gt;default&lt;/var&gt; is a list of strings, the first string is used as the input. If &lt;var&gt;default&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, empty input results in an &lt;code&gt;end-of-file&lt;/code&gt; error. However, in the usual case (where &lt;var&gt;read&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;), &lt;code&gt;read-from-minibuffer&lt;/code&gt; ignores &lt;var&gt;default&lt;/var&gt; when the user enters empty input and returns an empty string, &lt;code&gt;&quot;&quot;&lt;/code&gt;. In this respect, it differs from all the other minibuffer input functions in this chapter.</source>
          <target state="translated">Если &lt;var&gt;read&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то &lt;var&gt;default&lt;/var&gt; также используется как ввод для &lt;code&gt;read&lt;/code&gt; , если пользователь вводит пустой ввод. Если по &lt;var&gt;default&lt;/var&gt; это список строк, первая строка используется в качестве входных. Если &lt;var&gt;default&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , пустой ввод приводит к ошибке &lt;code&gt;end-of-file&lt;/code&gt; . Однако в обычном случае (когда &lt;var&gt;read&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; ), &lt;code&gt;read-from-minibuffer&lt;/code&gt; игнорирует &lt;var&gt;default&lt;/var&gt; когда пользователь вводит пустой ввод и возвращает пустую строку &lt;code&gt;&quot;&quot;&lt;/code&gt; . В этом отношении он отличается от всех других функций ввода минибуфера в этой главе.</target>
        </trans-unit>
        <trans-unit id="5bad559afbcb968e474745ed42743ad8548140a8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;real-binding&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;item-string&lt;/var&gt; appears in the menu but cannot be selected.</source>
          <target state="translated">Если &lt;var&gt;real-binding&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; , тогда &lt;var&gt;item-string&lt;/var&gt; появляется в меню, но не может быть выбрана.</target>
        </trans-unit>
        <trans-unit id="1a263509e902be80b222e3f22285ef1c3be84047" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;real-binding&lt;/var&gt; is a symbol and has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;menu-enable&lt;/code&gt; property, that property is an expression that controls whether the menu item is enabled. Every time the keymap is used to display a menu, Emacs evaluates the expression, and it enables the menu item only if the expression&amp;rsquo;s value is non-&lt;code&gt;nil&lt;/code&gt;. When a menu item is disabled, it is displayed in a fuzzy fashion, and cannot be selected.</source>
          <target state="translated">Если &lt;var&gt;real-binding&lt;/var&gt; является символом и имеет &lt;code&gt;nil&lt;/code&gt; свойство &lt;code&gt;menu-enable&lt;/code&gt; , это свойство является выражением, которое определяет, включен ли пункт меню. Каждый раз, когда раскладка клавиатуры используется для отображения меню, Emacs оценивает выражение и включает пункт меню, только если значение выражения не равно &lt;code&gt;nil&lt;/code&gt; . Когда пункт меню отключен, он отображается нечетко и не может быть выбран.</target>
        </trans-unit>
        <trans-unit id="29fba77baa5fe708b6e13bfc62e89f6007e228b0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;record-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then this command and its arguments are unconditionally added to the list &lt;code&gt;command-history&lt;/code&gt;. Otherwise, the command is added only if it uses the minibuffer to read an argument. See &lt;a href=&quot;command-history#Command-History&quot;&gt;Command History&lt;/a&gt;.</source>
          <target state="translated">Если &lt;var&gt;record-flag&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , то эта команда и ее аргументы безоговорочно добавляются в список &lt;code&gt;command-history&lt;/code&gt; . В противном случае команда добавляется только в том случае, если она использует минибуфер для чтения аргумента. См. &lt;a href=&quot;command-history#Command-History&quot;&gt;Историю команд&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b2c805c5f0aa1671bed4ef92a3890da3c1d0949" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;regexp-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;from-string&lt;/var&gt; is considered a regular expression; otherwise, it must match literally. If &lt;var&gt;delimited-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then only replacements surrounded by word boundaries are considered.</source>
          <target state="translated">Если &lt;var&gt;regexp-flag&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , то &lt;var&gt;from-string&lt;/var&gt; считается регулярным выражением; в противном случае он должен совпадать буквально. Если &lt;var&gt;delimited-flag&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , то рассматриваются только замены, окруженные границами слов.</target>
        </trans-unit>
        <trans-unit id="cae4def785cb9497f8cd4e7881057bc29505c8c4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;registry&lt;/var&gt; is specified but not available, Emacs will try the other registries given in &lt;var&gt;alternate-registries&lt;/var&gt;, one by one, until it finds a registry that does exist.</source>
          <target state="translated">Если &lt;var&gt;registry&lt;/var&gt; указан, но недоступен, Emacs будет пробовать другие реестры, указанные в &lt;var&gt;alternate-registries&lt;/var&gt; , один за другим, пока не найдет реестр, который действительно существует.</target>
        </trans-unit>
        <trans-unit id="26052509c06bed95c26314f9cccfbe9d4958b6f1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;rehash-size&lt;/var&gt; is an integer, it should be positive, and the hash table grows by adding approximately that much to the nominal size. If &lt;var&gt;rehash-size&lt;/var&gt; is floating point, it had better be greater than 1, and the hash table grows by multiplying the old size by approximately that number.</source>
          <target state="translated">Если &lt;var&gt;rehash-size&lt;/var&gt; является целым числом, оно должно быть положительным, и хеш-таблица увеличивается, прибавляя примерно столько же к номинальному размеру. Если &lt;var&gt;rehash-size&lt;/var&gt; является плавающей запятой, он должен быть больше 1, а хеш-таблица увеличивается, умножая старый размер примерно на это число.</target>
        </trans-unit>
        <trans-unit id="f2aea6014682cd0fd1247472b57595db84c9d053" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;remote&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;code&gt;default-directory&lt;/code&gt; is a remote directory, &lt;var&gt;program&lt;/var&gt; is searched on the respective remote host.</source>
          <target state="translated">Если &lt;var&gt;remote&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , а &lt;code&gt;default-directory&lt;/code&gt; - это удаленный каталог, &lt;var&gt;program&lt;/var&gt; ищется на соответствующем удаленном хосте.</target>
        </trans-unit>
        <trans-unit id="dfe3cec663924e20b8e8887353bd47071e65adc6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;repeat-count&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be an integer. Then it specifies how many times to use each of the strings in the &lt;var&gt;replacements&lt;/var&gt; list before advancing cyclically to the next one.</source>
          <target state="translated">Если &lt;var&gt;repeat-count&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , он должен быть целым числом. Затем он указывает, сколько раз использовать каждую из строк в списке &lt;var&gt;replacements&lt;/var&gt; перед циклическим переходом к следующей.</target>
        </trans-unit>
        <trans-unit id="4ba4b93350562914b3611df9d32c00e0da009f40" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;repeat&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the timer runs just once, the first time Emacs remains idle for a long enough time. More often &lt;var&gt;repeat&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, which means to run the timer &lt;em&gt;each time&lt;/em&gt; Emacs remains idle for &lt;var&gt;secs&lt;/var&gt; seconds.</source>
          <target state="translated">Если &lt;var&gt;repeat&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , таймер запускается только один раз, первый раз, когда Emacs простаивает достаточно долгое время. Чаще &lt;var&gt;repeat&lt;/var&gt; это не- &lt;code&gt;nil&lt;/code&gt; , что означает для запуска таймера &lt;em&gt;каждый раз&lt;/em&gt; , когда Emacs остается в режиме ожидания в течение &lt;var&gt;secs&lt;/var&gt; секунд.</target>
        </trans-unit>
        <trans-unit id="d67d19c85268ddcf560ad1dcebef1d1a4641647a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;replace&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;kill-new&lt;/code&gt; replaces the first element of the kill ring with &lt;var&gt;string&lt;/var&gt;, rather than pushing &lt;var&gt;string&lt;/var&gt; onto the kill ring.</source>
          <target state="translated">Если &lt;var&gt;replace&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;kill-new&lt;/code&gt; заменяет первый элемент списка уничтожений &lt;var&gt;string&lt;/var&gt; , а не помещает &lt;var&gt;string&lt;/var&gt; в список уничтожений.</target>
        </trans-unit>
        <trans-unit id="d4725e9067b58a8acd67ce0d63643d233b166952" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;replacements&lt;/var&gt; is a cons cell, &lt;code&gt;(&lt;var&gt;function&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;data&lt;/var&gt;)&lt;/code&gt;, this means to call &lt;var&gt;function&lt;/var&gt; after each match to get the replacement text. This function is called with two arguments: &lt;var&gt;data&lt;/var&gt;, and the number of replacements already made.</source>
          <target state="translated">Если &lt;var&gt;replacements&lt;/var&gt; - это cons-ячейка &lt;code&gt;(&lt;var&gt;function&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;data&lt;/var&gt;)&lt;/code&gt; , это означает вызов &lt;var&gt;function&lt;/var&gt; после каждого совпадения для получения текста замены. Эта функция вызывается с двумя аргументами: &lt;var&gt;data&lt;/var&gt; и количеством уже выполненных замен.</target>
        </trans-unit>
        <trans-unit id="e9b92e7de5ef3d0096eef07cab7e5acb3e5f3a02" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reseat&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, all markers on the &lt;var&gt;match-list&lt;/var&gt; list are reseated to point to nowhere.</source>
          <target state="translated">Если &lt;var&gt;reseat&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; , все маркеры в &lt;var&gt;match-list&lt;/var&gt; соответствий переустанавливаются так, чтобы указывать в никуда.</target>
        </trans-unit>
        <trans-unit id="9e22a90f87ee4e0a28f0a43256bea55bceb44c30" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reseat&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, all markers on the &lt;var&gt;reuse&lt;/var&gt; list are reseated to point to nowhere.</source>
          <target state="translated">Если &lt;var&gt;reseat&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; , все маркеры в списке &lt;var&gt;reuse&lt;/var&gt; переустанавливаются и указывают в никуда.</target>
        </trans-unit>
        <trans-unit id="79faed9a6e8588e5f1f6d0061a7ceab47596f5f2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;restriction&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a list of charsets to search. Alternatively, it can be a coding system, in which case the returned charset must be supported by that coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;).</source>
          <target state="translated">Если &lt;var&gt;restriction&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , это должен быть список кодировок для поиска. В качестве альтернативы, это может быть система кодирования, и в этом случае возвращаемая кодировка должна поддерживаться этой системой кодирования (см. &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Системы кодирования&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4e0a2593036d10955a73cdcc3a1bed33b3212e9a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reuse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a list. In that case, &lt;code&gt;match-data&lt;/code&gt; stores the match data in &lt;var&gt;reuse&lt;/var&gt;. That is, &lt;var&gt;reuse&lt;/var&gt; is destructively modified. &lt;var&gt;reuse&lt;/var&gt; does not need to have the right length. If it is not long enough to contain the match data, it is extended. If it is too long, the length of &lt;var&gt;reuse&lt;/var&gt; stays the same, but the elements that were not used are set to &lt;code&gt;nil&lt;/code&gt;. The purpose of this feature is to reduce the need for garbage collection.</source>
          <target state="translated">Если &lt;var&gt;reuse&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , это должен быть список. В этом случае &lt;code&gt;match-data&lt;/code&gt; сохраняют данные соответствия при &lt;var&gt;reuse&lt;/var&gt; . То есть &lt;var&gt;reuse&lt;/var&gt; деструктивно модифицируется. &lt;var&gt;reuse&lt;/var&gt; не обязательно должно иметь правильную длину. Если его недостаточно для хранения данных соответствия, он расширяется. Если он слишком длинный, продолжительность &lt;var&gt;reuse&lt;/var&gt; остается прежней, но неиспользованные элементы устанавливаются &lt;code&gt;nil&lt;/code&gt; . Цель этой функции - уменьшить потребность в сборке мусора.</target>
        </trans-unit>
        <trans-unit id="222679d354577d757ac22b3b1566dd77fc259235" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reuseaddr-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; (the default) for a stream server process, allow this server to reuse a specific port number (see &lt;code&gt;:service&lt;/code&gt;), unless another process on this host is already listening on that port. If &lt;var&gt;reuseaddr-flag&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, there may be a period of time after the last use of that port (by any process on the host) where it is not possible to make a new server on that port.</source>
          <target state="translated">Если &lt;var&gt;reuseaddr-flag&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; (по умолчанию) для процесса потокового сервера, разрешите этому серверу повторно использовать определенный номер порта (см . &lt;code&gt;:service&lt;/code&gt; ), если другой процесс на этом хосте уже не прослушивает этот порт. Если &lt;var&gt;reuseaddr-flag&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , может быть период времени после последнего использования этого порта (любым процессом на хосте), когда невозможно создать новый сервер на этом порту.</target>
        </trans-unit>
        <trans-unit id="ae9dd7142bb21c9c57e2950646994b2965287f32" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">Если &lt;var&gt;reverse&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , сортировка выполняется в обратном порядке.</target>
        </trans-unit>
        <trans-unit id="622bc88ea182e257798f41748330ff7bc1b3830b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;rigid&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; (interactively, with a prefix argument), then after this command indents a line or inserts a tab, it also rigidly indents the entire balanced expression which starts at the beginning of the current line, in order to reflect the new indentation. This argument is ignored if the command indents the region.</source>
          <target state="translated">Если &lt;var&gt;rigid&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; (интерактивно, с аргументом префикса), то после того, как эта команда делает отступ для строки или вставляет табуляцию, она также жестко отступает от всего сбалансированного выражения, которое начинается в начале текущей строки, чтобы отразить новый отступ. Этот аргумент игнорируется, если команда делает отступ в области.</target>
        </trans-unit>
        <trans-unit id="08f1cd4e99cfd160730c721b29ea4ba5b4a55e0d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;seconds&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, Emacs is considered idle while waiting for user input to arrive. Idle timers&amp;mdash;those created with &lt;code&gt;run-with-idle-timer&lt;/code&gt; (see &lt;a href=&quot;idle-timers#Idle-Timers&quot;&gt;Idle Timers&lt;/a&gt;)&amp;mdash;can run during this period. However, if &lt;var&gt;seconds&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the state of idleness remains unchanged. If Emacs is non-idle when &lt;code&gt;read-event&lt;/code&gt; is called, it remains non-idle throughout the operation of &lt;code&gt;read-event&lt;/code&gt;; if Emacs is idle (which can happen if the call happens inside an idle timer), it remains idle.</source>
          <target state="translated">Если &lt;var&gt;seconds&lt;/var&gt; являются &lt;code&gt;nil&lt;/code&gt; , Emacs считается простоем во время ожидания ввода пользователя , чтобы прибыть. &lt;a href=&quot;idle-timers#Idle-Timers&quot;&gt;Таймеры &lt;/a&gt; &lt;code&gt;run-with-idle-timer&lt;/code&gt; созданные с помощью таймера работы с таймером простоя (см. Таймеры простоя ) - могут работать в течение этого периода. Однако, если &lt;var&gt;seconds&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , состояние бездействия остается неизменным. Если Emacs не находится в состоянии ожидания при вызове &lt;code&gt;read-event&lt;/code&gt; , он остается неактивным на протяжении всей операции &lt;code&gt;read-event&lt;/code&gt; ; если Emacs простаивает (что может произойти, если вызов происходит внутри таймера простоя), он остается бездействующим.</target>
        </trans-unit>
        <trans-unit id="5642e33637174a8c339af0aa142ae8c3a71c46aa" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;seconds&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a number specifying the maximum time to wait for input, in seconds. If no input arrives within that time, &lt;code&gt;read-event&lt;/code&gt; stops waiting and returns &lt;code&gt;nil&lt;/code&gt;. A floating point &lt;var&gt;seconds&lt;/var&gt; means to wait for a fractional number of seconds. Some systems support only a whole number of seconds; on these systems, &lt;var&gt;seconds&lt;/var&gt; is rounded down. If &lt;var&gt;seconds&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;read-event&lt;/code&gt; waits as long as necessary for input to arrive.</source>
          <target state="translated">Если &lt;var&gt;seconds&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , это должно быть число, указывающее максимальное время ожидания ввода в секундах. Если в течение этого времени ввод не поступает, &lt;code&gt;read-event&lt;/code&gt; прекращает ожидание и возвращает &lt;code&gt;nil&lt;/code&gt; . Плавающей точкой &lt;var&gt;seconds&lt;/var&gt; означает ждать дробного числа секунд. Некоторые системы поддерживают только целое количество секунд; в этих системах &lt;var&gt;seconds&lt;/var&gt; округляются в меньшую сторону. Если &lt;var&gt;seconds&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;read-event&lt;/code&gt; ждет столько времени, сколько необходимо для поступления ввода.</target>
        </trans-unit>
        <trans-unit id="8386d9a4eefbe519440f3c3d975d045871d06db5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;separation&lt;/var&gt; is 0 and &lt;var&gt;to&lt;/var&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor numerically equal to &lt;var&gt;from&lt;/var&gt;, &lt;code&gt;number-sequence&lt;/code&gt; signals an error, since those arguments specify an infinite sequence.</source>
          <target state="translated">Если &lt;var&gt;separation&lt;/var&gt; равно 0, а &lt;var&gt;to&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; или численно не равно &lt;var&gt;from&lt;/var&gt; , числовая &lt;code&gt;number-sequence&lt;/code&gt; сигнализирует об ошибке, поскольку эти аргументы задают бесконечную последовательность.</target>
        </trans-unit>
        <trans-unit id="6d92d4436bafe64db0b8bdba3d216bc11fa628fc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;separators&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the default is the value of &lt;code&gt;split-string-default-separators&lt;/code&gt; and the function behaves as if &lt;var&gt;omit-nulls&lt;/var&gt; were &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Если параметр &lt;var&gt;separators&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; (или опущен), по умолчанию используется значение &lt;code&gt;split-string-default-separators&lt;/code&gt; , и функция ведет себя так, как если бы &lt;var&gt;omit-nulls&lt;/var&gt; были &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09d4f13d9281bb64e2677b4eac3ea8ecb6bf1ab5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;separators&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to &lt;code&gt;&quot;\\s-+&quot;&lt;/code&gt;, which is a regular expression that matches one or more characters with whitespace syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</source>
          <target state="translated">Если &lt;var&gt;separators&lt;/var&gt; опущены или &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется &lt;code&gt;&quot;\\s-+&quot;&lt;/code&gt; , которое является регулярным выражением, которое соответствует одному или нескольким символам с синтаксисом пробелов (см. &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Таблицу классов синтаксиса&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="854fc5a8bf2a20bd3bff850b8a969c5717c1f0a2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;sequence&lt;/var&gt; is a list, &lt;code&gt;delete&lt;/code&gt; is to &lt;code&gt;delq&lt;/code&gt; as &lt;code&gt;member&lt;/code&gt; is to &lt;code&gt;memq&lt;/code&gt;: it uses &lt;code&gt;equal&lt;/code&gt; to compare elements with &lt;var&gt;object&lt;/var&gt;, like &lt;code&gt;member&lt;/code&gt;; when it finds an element that matches, it cuts the element out just as &lt;code&gt;delq&lt;/code&gt; would. As with &lt;code&gt;delq&lt;/code&gt;, you should typically use the return value by assigning it to the variable which held the original list.</source>
          <target state="translated">Если &lt;var&gt;sequence&lt;/var&gt; является списком, &lt;code&gt;delete&lt;/code&gt; относится к &lt;code&gt;delq&lt;/code&gt; , как &lt;code&gt;member&lt;/code&gt; относится к &lt;code&gt;memq&lt;/code&gt; : он использует &lt;code&gt;equal&lt;/code&gt; для сравнения элементов с &lt;var&gt;object&lt;/var&gt; , например &lt;code&gt;member&lt;/code&gt; ; когда он находит совпадающий элемент, он вырезает его так же, как и &lt;code&gt;delq&lt;/code&gt; . Как и в случае с &lt;code&gt;delq&lt;/code&gt; , вы обычно должны использовать возвращаемое значение, назначая его переменной, которая содержала исходный список.</target>
        </trans-unit>
        <trans-unit id="f9659fb0feaec0514fe61e48c096bba52bcb7e4f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;sequence&lt;/var&gt; is empty, this function signals an error.</source>
          <target state="translated">Если &lt;var&gt;sequence&lt;/var&gt; пуста, эта функция сигнализирует об ошибке.</target>
        </trans-unit>
        <trans-unit id="a701d0e0b8bfabee07d5e74d36fccd0aaf23ff6d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;server-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, create a server. Otherwise, create a connection. For a stream type server, &lt;var&gt;server-flag&lt;/var&gt; may be an integer, which then specifies the length of the queue of pending connections to the server. The default queue length is 5.</source>
          <target state="translated">Если &lt;var&gt;server-flag&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , создайте сервер. В противном случае создайте соединение. Для сервера потокового типа server &lt;var&gt;server-flag&lt;/var&gt; может быть целым числом, которое затем определяет длину очереди ожидающих подключений к серверу. Длина очереди по умолчанию - 5.</target>
        </trans-unit>
        <trans-unit id="6213d01563379e9136196a8c3dea906d973f8bea" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;set-minimum&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the new scroll amount becomes the lower bound for automatic scrolling; that is, automatic scrolling will not scroll a window to a column less than the value returned by this function. Interactive calls pass non-&lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;set-minimum&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;set-minimum&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , новая величина прокрутки становится нижней границей для автоматической прокрутки; то есть автоматическая прокрутка не будет прокручивать окно до столбца, меньшего, чем значение, возвращаемое этой функцией. Интерактивные вызовы проходят &lt;code&gt;nil&lt;/code&gt; для &lt;var&gt;set-minimum&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="cd51b1294a9e7a2e5ef38fe131e5f49b53ebe0de" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;side&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt;, the new window is placed on the right of &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;side&lt;/var&gt; is &lt;code&gt;left&lt;/code&gt;, the new window is placed on the left of &lt;var&gt;window&lt;/var&gt;. In both these cases, &lt;var&gt;size&lt;/var&gt; specifies a total window width, in columns.</source>
          <target state="translated">Если &lt;var&gt;side&lt;/var&gt; является &lt;code&gt;t&lt;/code&gt; или &lt;code&gt;right&lt;/code&gt; , новое окно помещается в правой части &lt;var&gt;window&lt;/var&gt; . Если &lt;var&gt;side&lt;/var&gt; будет &lt;code&gt;left&lt;/code&gt; , новое окно помещается в левой части &lt;var&gt;window&lt;/var&gt; . В обоих случаях &lt;var&gt;size&lt;/var&gt; определяет общую ширину окна в столбцах.</target>
        </trans-unit>
        <trans-unit id="1b71e5e555e2a363d30553ba727292f357281932" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;size&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function obeys the variables &lt;code&gt;window-min-height&lt;/code&gt; and &lt;code&gt;window-min-width&lt;/code&gt; (see &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;). Thus, it signals an error if splitting would result in making a window smaller than those variables specify. However, a non-&lt;code&gt;nil&lt;/code&gt; value for &lt;var&gt;size&lt;/var&gt; causes those variables to be ignored; in that case, the smallest allowable window is considered to be one that has space for a text area one line tall and/or two columns wide.</source>
          <target state="translated">Если &lt;var&gt;size&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , эта функция подчиняется переменным &lt;code&gt;window-min-height&lt;/code&gt; и &lt;code&gt;window-min-width&lt;/code&gt; (см. &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Размеры окна&lt;/a&gt; ). Таким образом, он сигнализирует об ошибке, если разбиение приведет к уменьшению окна меньше, чем указано в этих переменных. Однако значение &lt;var&gt;size&lt;/var&gt; , отличное от &lt;code&gt;nil&lt;/code&gt; приводит к игнорированию этих переменных; в этом случае наименьшим допустимым окном считается такое, в котором есть место для текстовой области в одну строку в высоту и / или в два столбца в ширину.</target>
        </trans-unit>
        <trans-unit id="b633c9205c4f539145890a7ae6e749104bec146b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;spec-alist&lt;/var&gt; contains more than one association with the same &lt;var&gt;letter&lt;/var&gt;, the closest one to the start of the list is used.</source>
          <target state="translated">Если &lt;var&gt;spec-alist&lt;/var&gt; содержит более одной ассоциации с одной и той же &lt;var&gt;letter&lt;/var&gt; , используется ближайшая к началу списка.</target>
        </trans-unit>
        <trans-unit id="ee5c4e886babc50191f48bbbcd6e8f7a70511d96" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;spec-alist&lt;/var&gt; contains more unique &lt;var&gt;letter&lt;/var&gt; keys than there are unique specification characters in &lt;var&gt;template&lt;/var&gt;, the unused keys are simply ignored.</source>
          <target state="translated">Если &lt;var&gt;spec-alist&lt;/var&gt; содержит больше уникальных &lt;var&gt;letter&lt;/var&gt; ключей, чем уникальных символов спецификации в &lt;var&gt;template&lt;/var&gt; , неиспользуемые ключи просто игнорируются.</target>
        </trans-unit>
        <trans-unit id="84f9a512be9e80fe9a56d88f0957df707399bdf9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;spec_version&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the server supports a specification prior to &amp;lsquo;</source>
          <target state="translated">Если &lt;var&gt;spec_version&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , сервер поддерживает спецификацию до '</target>
        </trans-unit>
        <trans-unit id="af0dbbeb9d2f1be798ead1bbb9b5024e72bd988d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;start&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the command writes the entire buffer contents (&lt;em&gt;not&lt;/em&gt; just the accessible portion) to the file and ignores &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;start&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , команда записывает все содержимое буфера (а &lt;em&gt;не&lt;/em&gt; только доступную часть) в файл и игнорирует &lt;var&gt;end&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7e7cdef8a248c833f3e9f0975b11a5c6d1f54491" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;start&lt;/var&gt; is a string, then &lt;code&gt;write-region&lt;/code&gt; writes or appends that string, rather than text from the buffer. &lt;var&gt;end&lt;/var&gt; is ignored in this case.</source>
          <target state="translated">Если &lt;var&gt;start&lt;/var&gt; является строкой, то &lt;code&gt;write-region&lt;/code&gt; записи записывает или добавляет эту строку, а не текст из буфера. &lt;var&gt;end&lt;/var&gt; в этом случае игнорируется.</target>
        </trans-unit>
        <trans-unit id="9f8b47e15ad68d0891e8c9b125e2797186ef0b5c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;start&lt;/var&gt; is supplied, then reading begins at index &lt;var&gt;start&lt;/var&gt; in the string (where the first character is at index 0). If you specify &lt;var&gt;end&lt;/var&gt;, then reading is forced to stop just before that index, as if the rest of the string were not there.</source>
          <target state="translated">Если указано &lt;var&gt;start&lt;/var&gt; , то чтение начинается с &lt;var&gt;start&lt;/var&gt; индекса в строке (где первый символ находится в индексе 0). Если вы укажете &lt;var&gt;end&lt;/var&gt; , чтение будет остановлено непосредственно перед этим индексом, как если бы остальной части строки там не было.</target>
        </trans-unit>
        <trans-unit id="1064524b7d7d3e8de9713f9ea7f70aea53abf953" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;state&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;start&lt;/var&gt; is assumed to be at the top level of parenthesis structure, such as the beginning of a function definition. Alternatively, you might wish to resume parsing in the middle of the structure. To do this, you must provide a &lt;var&gt;state&lt;/var&gt; argument that describes the initial status of parsing. The value returned by a previous call to &lt;code&gt;parse-partial-sexp&lt;/code&gt; will do nicely.</source>
          <target state="translated">Если &lt;var&gt;state&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , предполагается , что &lt;var&gt;start&lt;/var&gt; находится на верхнем уровне структуры скобок, например, в начале определения функции. В качестве альтернативы вы можете возобновить синтаксический анализ в середине структуры. Для этого вы должны предоставить аргумент &lt;var&gt;state&lt;/var&gt; который описывает начальный статус синтаксического анализа. Подойдет значение, возвращенное предыдущим вызовом &lt;code&gt;parse-partial-sexp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b1e965c41f20d0496aa0f65e56130346a4d517f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;stderr&lt;/var&gt; is a buffer, Emacs will create a pipe process, the &lt;em&gt;standard error process&lt;/em&gt;. This process will have the default filter (see &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;), sentinel (see &lt;a href=&quot;sentinels#Sentinels&quot;&gt;Sentinels&lt;/a&gt;), and coding systems (see &lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;Default Coding Systems&lt;/a&gt;). On the other hand, it will use &lt;var&gt;query-flag&lt;/var&gt; as its query-on-exit flag (see &lt;a href=&quot;query-before-exit#Query-Before-Exit&quot;&gt;Query Before Exit&lt;/a&gt;). It will be associated with the &lt;var&gt;stderr&lt;/var&gt; buffer (see &lt;a href=&quot;process-buffers#Process-Buffers&quot;&gt;Process Buffers&lt;/a&gt;) and send its output (which is the standard error of the main process) there.</source>
          <target state="translated">Если &lt;var&gt;stderr&lt;/var&gt; является буфером, Emacs создаст конвейерный процесс, &lt;em&gt;стандартный процесс ошибок&lt;/em&gt; . Этот процесс будет иметь фильтр по умолчанию (см. &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Функции фильтра&lt;/a&gt; ), дозор (см. &lt;a href=&quot;sentinels#Sentinels&quot;&gt;Стражи&lt;/a&gt; ) и системы кодирования (см. &lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;Системы кодирования по умолчанию&lt;/a&gt; ). С другой стороны, он будет использовать &lt;var&gt;query-flag&lt;/var&gt; качестве флага запроса при выходе (см. &amp;laquo; &lt;a href=&quot;query-before-exit#Query-Before-Exit&quot;&gt;Запрос перед выходом&amp;raquo;&lt;/a&gt; ). Он будет связан с буфером &lt;var&gt;stderr&lt;/var&gt; (см. &lt;a href=&quot;process-buffers#Process-Buffers&quot;&gt;Буферы процессов&lt;/a&gt; ) и отправит туда свои выходные данные (что является стандартной ошибкой основного процесса).</target>
        </trans-unit>
        <trans-unit id="a5e62af174b242025e0fdb63aecdd440c285a2c7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;stderr&lt;/var&gt; is a pipe process, Emacs will use it as standard error process for the new process.</source>
          <target state="translated">Если &lt;var&gt;stderr&lt;/var&gt; является конвейерным процессом, Emacs будет использовать его как стандартный процесс обработки ошибок для нового процесса.</target>
        </trans-unit>
        <trans-unit id="ed5602c6572f68ec28cdd36515ff160efea43149" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;stopped&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, start the network connection or server in the stopped state.</source>
          <target state="translated">Если значение &amp;laquo; &lt;var&gt;stopped&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , запустите сетевое соединение или сервер в остановленном состоянии.</target>
        </trans-unit>
        <trans-unit id="a8f1e9ac512b8b8aa763432c8aa6436fd5cc736c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;stopped&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, start the process in the stopped state. In the stopped state, a pipe process does not accept incoming data, but you can send outgoing data. The stopped state is set by &lt;code&gt;stop-process&lt;/code&gt; and cleared by &lt;code&gt;continue-process&lt;/code&gt; (see &lt;a href=&quot;signals-to-processes#Signals-to-Processes&quot;&gt;Signals to Processes&lt;/a&gt;).</source>
          <target state="translated">Если значение &amp;laquo; &lt;var&gt;stopped&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , запустить процесс в остановленном состоянии. В остановленном состоянии конвейерный процесс не принимает входящие данные, но вы можете отправлять исходящие данные. Остановленное состояние устанавливается с помощью &lt;code&gt;stop-process&lt;/code&gt; и сбрасывается с помощью &lt;code&gt;continue-process&lt;/code&gt; (см. &amp;laquo; &lt;a href=&quot;signals-to-processes#Signals-to-Processes&quot;&gt;Сигналы для процессов&amp;raquo;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="486bdcab2a6b255a0b57fc7fb8ae9ec92b88d963" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string-or-char&lt;/var&gt; is a string, this function capitalizes the initials of the words in &lt;var&gt;string-or-char&lt;/var&gt;, without altering any letters other than the initials. It returns a new string whose contents are a copy of &lt;var&gt;string-or-char&lt;/var&gt;, in which each word has had its initial letter converted to upper case.</source>
          <target state="translated">Если &lt;var&gt;string-or-char&lt;/var&gt; является строкой, эта функция использует заглавные буквы в инициалах слов в &lt;var&gt;string-or-char&lt;/var&gt; , не изменяя никаких букв, кроме инициалов. Он возвращает новую строку, содержимое которой является копией &lt;var&gt;string-or-char&lt;/var&gt; , в которой каждое слово имеет начальную букву, преобразованную в верхний регистр.</target>
        </trans-unit>
        <trans-unit id="238dd0f09c59f6b49fbe1e9c6ba5d5c043f84e1f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string&lt;/var&gt; does not reach &lt;var&gt;width&lt;/var&gt;, then the result ends where &lt;var&gt;string&lt;/var&gt; ends. If one multi-column character in &lt;var&gt;string&lt;/var&gt; extends across the column &lt;var&gt;width&lt;/var&gt;, that character is not included in the result. Thus, the result can fall short of &lt;var&gt;width&lt;/var&gt; but cannot go beyond it.</source>
          <target state="translated">Если &lt;var&gt;string&lt;/var&gt; не достигает &lt;var&gt;width&lt;/var&gt; , результат заканчивается там, где заканчивается &lt;var&gt;string&lt;/var&gt; . Если один многостолбцовый символ в &lt;var&gt;string&lt;/var&gt; простирается по &lt;var&gt;width&lt;/var&gt; столбца , этот символ не включается в результат. Таким образом, результат может не хватить &lt;var&gt;width&lt;/var&gt; но не выйти за ее пределы.</target>
        </trans-unit>
        <trans-unit id="b7faa9f933af4a311232e27474b1f916a7348050" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string&lt;/var&gt; is a multibyte string, this function returns &lt;var&gt;string&lt;/var&gt; itself. Otherwise, it returns a new string with the same bytes as &lt;var&gt;string&lt;/var&gt;, but treating each multibyte sequence as one character. This means that the value may have fewer characters than &lt;var&gt;string&lt;/var&gt; has. If a byte sequence in &lt;var&gt;string&lt;/var&gt; is invalid as a multibyte representation of a single character, each byte in the sequence is treated as a raw 8-bit byte. The newly-created string contains no text properties.</source>
          <target state="translated">Если &lt;var&gt;string&lt;/var&gt; является многобайтовой строкой, эта функция возвращает саму &lt;var&gt;string&lt;/var&gt; . В противном случае он возвращает новую строку с теми же байтами, что и &lt;var&gt;string&lt;/var&gt; , но обрабатывает каждую многобайтовую последовательность как один символ. Это означает, что значение может содержать меньше символов, чем &lt;var&gt;string&lt;/var&gt; . Если последовательность байтов в &lt;var&gt;string&lt;/var&gt; недопустима как многобайтовое представление одиночного символа, каждый байт в последовательности рассматривается как необработанный 8-битный байт. Вновь созданная строка не содержит текстовых свойств.</target>
        </trans-unit>
        <trans-unit id="4b608a2f2f52718650c1a44a54ce290435148dc4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string&lt;/var&gt; is already a unibyte string, this function returns &lt;var&gt;string&lt;/var&gt; itself. Otherwise, it returns a new string with the same bytes as &lt;var&gt;string&lt;/var&gt;, but treating each byte as a separate character (so that the value may have more characters than &lt;var&gt;string&lt;/var&gt;); as an exception, each eight-bit character representing a raw byte is converted into a single byte. The newly-created string contains no text properties.</source>
          <target state="translated">Если &lt;var&gt;string&lt;/var&gt; уже является однобайтовой строкой, эта функция возвращает саму &lt;var&gt;string&lt;/var&gt; . В противном случае он возвращает новую строку с теми же байтами, что и &lt;var&gt;string&lt;/var&gt; , но обрабатывает каждый байт как отдельный символ (так что значение может иметь больше символов, чем &lt;var&gt;string&lt;/var&gt; ); в виде исключения каждый восьмибитовый символ, представляющий необработанный байт, преобразуется в один байт. Вновь созданная строка не содержит текстовых свойств.</target>
        </trans-unit>
        <trans-unit id="cc1e8a34915dedfac1b19a6d45f70ebc384f6e81" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, its characters are sent to Emacs&amp;rsquo;s superior shell, to be read as terminal input. The characters in &lt;var&gt;string&lt;/var&gt; are not echoed by the superior shell; only the results appear.</source>
          <target state="translated">Если &lt;var&gt;string&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; , ее символы отправляются в вышестоящую оболочку Emacs для чтения как ввод терминала. Символы в &lt;var&gt;string&lt;/var&gt; не отображаются вышестоящей оболочкой; появляются только результаты.</target>
        </trans-unit>
        <trans-unit id="38e099f5f28342bbc774d61a146dfdaae0efdaba" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;strings&lt;/var&gt; is the empty list, the return value is a regexp that never matches anything.</source>
          <target state="translated">Если &lt;var&gt;strings&lt;/var&gt; - это пустой список, возвращаемое значение - это регулярное выражение, которое никогда ни с чем не соответствует.</target>
        </trans-unit>
        <trans-unit id="97e5f295c2cdf3fef7745bcc83f6d9310efe00b9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;subexp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to replace just subexpression number &lt;var&gt;subexp&lt;/var&gt; of the regexp that was matched, not the entire match. For example, after matching &amp;lsquo;</source>
          <target state="translated">Если &lt;var&gt;subexp&lt;/var&gt; отличен от &lt;code&gt;nil&lt;/code&gt; , это означает , что нужно заменить только &lt;var&gt;subexp&lt;/var&gt; ression number subexp совпадающего регулярного выражения, а не все совпадение. Например, после сопоставления '</target>
        </trans-unit>
        <trans-unit id="17e6c14619a48c15c81a8a104a358917ec58b2f5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;subtype&lt;/var&gt; has the &lt;code&gt;char-table-extra-slots&lt;/code&gt; symbol property, that specifies the number of extra slots in the char-table. This should be an integer between 0 and 10; otherwise, &lt;code&gt;make-char-table&lt;/code&gt; raises an error. If &lt;var&gt;subtype&lt;/var&gt; has no &lt;code&gt;char-table-extra-slots&lt;/code&gt; symbol property (see &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;), the char-table has no extra slots.</source>
          <target state="translated">Если &lt;var&gt;subtype&lt;/var&gt; имеет свойство символа &lt;code&gt;char-table-extra-slots&lt;/code&gt; , которое указывает количество дополнительных слотов в char-table. Это должно быть целое число от 0 до 10; в противном случае &lt;code&gt;make-char-table&lt;/code&gt; выдает ошибку. Если &lt;var&gt;subtype&lt;/var&gt; не имеет свойства символа &lt;code&gt;char-table-extra-slots&lt;/code&gt; (см. &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Списки свойств&lt;/a&gt; ), таблица char не имеет дополнительных слотов.</target>
        </trans-unit>
        <trans-unit id="e9e41abd138984c7d2eb029448da7b05b35bf5d3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;suffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;make-temp-file&lt;/code&gt; adds it at the end of the file name.</source>
          <target state="translated">Если &lt;var&gt;suffix&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;make-temp-file&lt;/code&gt; добавляет его в конец имени файла.</target>
        </trans-unit>
        <trans-unit id="b0cb3b361bbbcfca5af1fce7182f5c264d301f0b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; has a buffer-local binding in the current buffer, &lt;code&gt;defvar&lt;/code&gt; acts on the default value, which is buffer-independent, rather than the buffer-local binding. It sets the default value if the default value is void. See &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;.</source>
          <target state="translated">Если &lt;var&gt;symbol&lt;/var&gt; имеет привязку к локальному буферу в текущем буфере, &lt;code&gt;defvar&lt;/code&gt; действует на значение по умолчанию, которое не зависит от буфера, а не на привязку к локальному буферу. Он устанавливает значение по умолчанию, если значение по умолчанию недействительно. См. Раздел &amp;laquo; &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Локальные переменные буфера&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef082f86ace32c0314e201d0be908b051f5492a3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; has a dynamic local binding, &lt;code&gt;makunbound&lt;/code&gt; voids the current binding, and this voidness lasts only as long as the local binding is in effect. Afterwards, the previously shadowed local or global binding is reexposed; then the variable will no longer be void, unless the reexposed binding is void too.</source>
          <target state="translated">Если &lt;var&gt;symbol&lt;/var&gt; имеет динамическую локальную привязку, &lt;code&gt;makunbound&lt;/code&gt; аннулирует текущую привязку, и эта пустота длится только до тех пор, пока действует локальная привязка. После этого повторно отображается ранее затененная локальная или глобальная привязка; тогда переменная больше не будет недействительной, если только повторно выставленная привязка не станет недействительной.</target>
        </trans-unit>
        <trans-unit id="0b4b053a21b46acafcc9fca3c5b527939c88adfd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; is already lexically bound (e.g., if the &lt;code&gt;defvar&lt;/code&gt; form occurs in a &lt;code&gt;let&lt;/code&gt; form with lexical binding enabled), then &lt;code&gt;defvar&lt;/code&gt; sets the dynamic value. The lexical binding remains in effect until its binding construct exits. See &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;.</source>
          <target state="translated">Если &lt;var&gt;symbol&lt;/var&gt; уже лексически привязан (например, если форма &lt;code&gt;defvar&lt;/code&gt; встречается в форме &lt;code&gt;let&lt;/code&gt; с включенной лексической привязкой), то &lt;code&gt;defvar&lt;/code&gt; устанавливает динамическое значение. Лексическое связывание остается в силе, пока не завершится его конструкция связывания. См. Раздел &amp;laquo; &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Переменная область видимости&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02b9b71c4c64cf72e491274e76972257c5144331" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a symbol; then this macro defines &lt;var&gt;symbol&lt;/var&gt; as a function for popping up the menu (see &lt;a href=&quot;pop_002dup-menus#Pop_002dUp-Menus&quot;&gt;Pop-Up Menus&lt;/a&gt;), with &lt;var&gt;doc&lt;/var&gt; as its documentation string. &lt;var&gt;symbol&lt;/var&gt; should not be quoted.</source>
          <target state="translated">Если &lt;var&gt;symbol&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , это должен быть символ; тогда этот макрос определяет &lt;var&gt;symbol&lt;/var&gt; как функцию для вызова меню (см. &amp;laquo; &lt;a href=&quot;pop_002dup-menus#Pop_002dUp-Menus&quot;&gt;Всплывающие меню&amp;raquo;&lt;/a&gt; ) с &lt;var&gt;doc&lt;/var&gt; в качестве строки документации. &lt;var&gt;symbol&lt;/var&gt; не следует цитировать.</target>
        </trans-unit>
        <trans-unit id="981ad96cac5032c5ebab6758c7ff3993a6216ce8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; is not actually a symbol, a &lt;code&gt;wrong-type-argument&lt;/code&gt; error is signaled.</source>
          <target state="translated">Если &lt;var&gt;symbol&lt;/var&gt; самом деле не является символом, сигнализируется ошибка &lt;code&gt;wrong-type-argument&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccbbbbbaec743c0719bb95b5ca9b992a3beee9f1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; is part of a sequencing pattern &lt;var&gt;seqpat&lt;/var&gt; (e.g., by using &lt;code&gt;and&lt;/code&gt;, below), the binding is also available to the portion of &lt;var&gt;seqpat&lt;/var&gt; following the appearance of &lt;var&gt;symbol&lt;/var&gt;. This usage has some caveats, see &lt;a href=&quot;#pcase_002dsymbol_002dcaveats&quot;&gt;caveats&lt;/a&gt;.</source>
          <target state="translated">Если &lt;var&gt;symbol&lt;/var&gt; является частью последовательности &lt;var&gt;seqpat&lt;/var&gt; шаблона (например, с помощью &lt;code&gt;and&lt;/code&gt; , ниже), привязка также доступна для части &lt;var&gt;seqpat&lt;/var&gt; , следующей за появлением &lt;var&gt;symbol&lt;/var&gt; . У этого использования есть некоторые предостережения, см. &lt;a href=&quot;#pcase_002dsymbol_002dcaveats&quot;&gt;Предостережения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fcac716a2ce0d702099f5bd80357cf72ea94c32f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s definition is a byte-code function object, &lt;code&gt;byte-compile&lt;/code&gt; does nothing and returns &lt;code&gt;nil&lt;/code&gt;. It does not compile the symbol&amp;rsquo;s definition again, since the original (non-compiled) code has already been replaced in the symbol&amp;rsquo;s function cell by the byte-compiled code.</source>
          <target state="translated">Если определение &lt;var&gt;symbol&lt;/var&gt; является объектом функции байтового кода, &lt;code&gt;byte-compile&lt;/code&gt; ничего не делает и возвращает &lt;code&gt;nil&lt;/code&gt; . Он не компилирует определение символа снова, поскольку исходный (не скомпилированный) код уже был заменен в функциональной ячейке символа компилированным байтом кодом.</target>
        </trans-unit>
        <trans-unit id="5f27a90dd8bffeddda02c9a0142776a45ffe4f38" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;syntax&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the return value is &lt;code&gt;nil&lt;/code&gt;. This is so that the expression</source>
          <target state="translated">Если &lt;var&gt;syntax&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , возвращаемое значение равно &lt;code&gt;nil&lt;/code&gt; . Это так, что выражение</target>
        </trans-unit>
        <trans-unit id="dc45e1d679498d8d5df720f51ef1aa38cdbd5542" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;syntaxes&lt;/var&gt; starts with &amp;lsquo;</source>
          <target state="translated">Если &lt;var&gt;syntaxes&lt;/var&gt; начинается с '</target>
        </trans-unit>
        <trans-unit id="e2426d81f8b8ba08be26cbd86258aed2310c30a8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;target&lt;/var&gt; is a relative file name, the resulting symbolic link is interpreted relative to the directory containing the symbolic link. See &lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;Relative File Names&lt;/a&gt;.</source>
          <target state="translated">Если &lt;var&gt;target&lt;/var&gt; является относительным именем файла, результирующая символическая ссылка интерпретируется относительно каталога, содержащего символическую ссылку. См. &lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;Относительные имена файлов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eac7052b536752164e12dcf27b7eff2371525b90" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;template&lt;/var&gt; contains the same specification character more than once, then the same &lt;var&gt;replacement&lt;/var&gt; found in &lt;var&gt;spec-alist&lt;/var&gt; is used as a basis for all of that character&amp;rsquo;s substitutions.</source>
          <target state="translated">Если &lt;var&gt;template&lt;/var&gt; содержит один и тот же символ спецификации более одного раза, то такая же &lt;var&gt;replacement&lt;/var&gt; найденная в &lt;var&gt;spec-alist&lt;/var&gt; , используется в качестве основы для всех замен этого символа.</target>
        </trans-unit>
        <trans-unit id="bcaa3c59d1bd107d501986d7c09c4e8f2f0ecf78" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;terminal&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame&amp;rsquo;s terminal. &lt;var&gt;terminal&lt;/var&gt; can also be a frame, meaning that frame&amp;rsquo;s terminal.</source>
          <target state="translated">Если &lt;var&gt;terminal&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется терминал выбранного кадра. &lt;var&gt;terminal&lt;/var&gt; также может быть фреймом, что означает терминал фрейма.</target>
        </trans-unit>
        <trans-unit id="d820257dd4d95ef64be75ea9b9ab576f34b6841f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;text&lt;/var&gt; is a string, &lt;code&gt;make-temp-file&lt;/code&gt; inserts it in the file.</source>
          <target state="translated">Если &lt;var&gt;text&lt;/var&gt; является строкой, &lt;code&gt;make-temp-file&lt;/code&gt; вставляет его в файл.</target>
        </trans-unit>
        <trans-unit id="47f916373b85444012892bbaa32e2ee85c921af1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;thread&lt;/var&gt; is blocked in &lt;code&gt;condition-wait&lt;/code&gt;, this returns the condition variable.</source>
          <target state="translated">Если &lt;var&gt;thread&lt;/var&gt; заблокирован в &lt;code&gt;condition-wait&lt;/code&gt; , это возвращает переменную условия.</target>
        </trans-unit>
        <trans-unit id="67559f5e436fb644e7082eeec37b4136a62c6fce" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;thread&lt;/var&gt; is blocked in &lt;code&gt;mutex-lock&lt;/code&gt;, this returns the mutex.</source>
          <target state="translated">Если &lt;var&gt;thread&lt;/var&gt; заблокирован блокировкой &lt;code&gt;mutex-lock&lt;/code&gt; , это возвращает мьютекс.</target>
        </trans-unit>
        <trans-unit id="d148be74ea38df9497915eeb8e705ef9a145eb3f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;thread&lt;/var&gt; is blocked in &lt;code&gt;thread-join&lt;/code&gt;, this returns the thread for which it is waiting.</source>
          <target state="translated">Если &lt;var&gt;thread&lt;/var&gt; заблокирован в &lt;code&gt;thread-join&lt;/code&gt; , это возвращает поток, которого он ожидает.</target>
        </trans-unit>
        <trans-unit id="5f7bc097b53fcf1da308ff7c97c2dcc898251390" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;thread&lt;/var&gt; is the main thread, the signal is not propagated there. Instead, it is shown as message in the main thread.</source>
          <target state="translated">Если &lt;var&gt;thread&lt;/var&gt; является основным потоком, сигнал там не распространяется. Вместо этого оно отображается как сообщение в основном потоке.</target>
        </trans-unit>
        <trans-unit id="2587d4a2a4e9483d470c237279298811c9e7a8fc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;time&lt;/var&gt; has higher precision than nanoseconds, then this function truncates it to nanosecond precision towards negative infinity. This function signals an error if &lt;var&gt;time&lt;/var&gt; (truncated to nanoseconds) cannot be represented by &lt;code&gt;struct timespec&lt;/code&gt;. For example, if &lt;code&gt;time_t&lt;/code&gt; is a 32-bit integer type, then a &lt;var&gt;time&lt;/var&gt; value of ten billion seconds would signal an error, but a &lt;var&gt;time&lt;/var&gt; value of 600 picoseconds would get truncated to zero.</source>
          <target state="translated">Если &lt;var&gt;time&lt;/var&gt; имеет более высокую точность, чем наносекунды, эта функция обрезает его с точностью до наносекунды в сторону отрицательной бесконечности. Эта функция сигнализирует об ошибке, если &lt;var&gt;time&lt;/var&gt; (усеченное до наносекунд) не может быть представлено &lt;code&gt;struct timespec&lt;/code&gt; . Например, если &lt;code&gt;time_t&lt;/code&gt; является 32-битным целочисленным типом, то значение &lt;var&gt;time&lt;/var&gt; в десять миллиардов секунд будет сигнализировать об ошибке, а значение &lt;var&gt;time&lt;/var&gt; в 600 пикосекунд будет усечено до нуля.</target>
        </trans-unit>
        <trans-unit id="fbf56cdaf0c7a03f2b2dfc154c9d986d9e169a52" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;time&lt;/var&gt; is infinite or a NaN, this function signals an error. Otherwise, if &lt;var&gt;time&lt;/var&gt; cannot be represented exactly, conversion truncates it toward minus infinity. When &lt;var&gt;form&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, conversion is always exact so no truncation occurs, and the returned clock resolution is no less than that of &lt;var&gt;time&lt;/var&gt;. By way of contrast, &lt;code&gt;float-time&lt;/code&gt; can convert any Lisp time value without signaling an error, although the result might not be exact. See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;.</source>
          <target state="translated">Если &lt;var&gt;time&lt;/var&gt; бесконечно или NaN, эта функция сигнализирует об ошибке. В противном случае, если &lt;var&gt;time&lt;/var&gt; не может быть представлено точно, преобразование усекает его до минус бесконечности. Когда &lt;var&gt;form&lt;/var&gt; - &lt;code&gt;t&lt;/code&gt; , преобразование всегда точное, поэтому усечения не происходит, а возвращаемое разрешение часов не меньше разрешения &lt;var&gt;time&lt;/var&gt; . Напротив, &lt;code&gt;float-time&lt;/code&gt; может преобразовывать любое значение времени Lisp, не сигнализируя об ошибке, хотя результат может быть неточным. См. &amp;laquo; &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Время дня&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3bf007ce5f322c4636ceb949ca3a999685c3b78c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;time&lt;/var&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor an integer flag returned by &lt;code&gt;visited-file-modtime&lt;/code&gt;, it should be a Lisp time value (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">Если &lt;var&gt;time&lt;/var&gt; не является ни &lt;code&gt;nil&lt;/code&gt; ни целочисленным флагом, возвращаемым &lt;code&gt;visited-file-modtime&lt;/code&gt; , это должно быть значение времени Lisp (см. &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Время дня&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="51ed1963d031e695fe67ebb2febf4852eab7b79e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;time&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then this function gives the new file the same last-modified time that the old one has. (This works on only some operating systems.) If setting the time gets an error, &lt;code&gt;copy-file&lt;/code&gt; signals a &lt;code&gt;file-date-error&lt;/code&gt; error. In an interactive call, a prefix argument specifies a non-&lt;code&gt;nil&lt;/code&gt; value for &lt;var&gt;time&lt;/var&gt;.</source>
          <target state="translated">Если &lt;var&gt;time&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , то эта функция дает новому файлу то же время последнего изменения, что и старому. (Это работает только в некоторых операционных системах.) Если при установке времени возникает ошибка, &lt;code&gt;copy-file&lt;/code&gt; сигнализирует &lt;code&gt;file-date-error&lt;/code&gt; ошибке file-date- error. В интерактивном вызове префиксный аргумент указывает &lt;code&gt;nil&lt;/code&gt; значение для &lt;var&gt;time&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="faea1fea326683eb4563aaf16a9ff19b6bc0c76c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;to-column&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be an integer specifying the number of columns of indentation; then this function gives each line exactly that much indentation, by either adding or deleting whitespace.</source>
          <target state="translated">Если &lt;var&gt;to-column&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , это должно быть целое число, указывающее количество столбцов с отступом; тогда эта функция дает каждой строке ровно такой же отступ, добавляя или удаляя пробелы.</target>
        </trans-unit>
        <trans-unit id="6f6fa639431eb645cc79363b3a76cb55f7941e29" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;to-fn&lt;/var&gt; is a function, it is called with three arguments: &lt;var&gt;begin&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, which specify the part of the buffer it should convert, and &lt;var&gt;buffer&lt;/var&gt;, which specifies which buffer. There are two ways it can do the conversion:</source>
          <target state="translated">Если &lt;var&gt;to-fn&lt;/var&gt; является функцией, она вызывается с тремя аргументами: &lt;var&gt;begin&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; , которые определяют часть буфера, которую она должна преобразовать, и &lt;var&gt;buffer&lt;/var&gt; , которая указывает, какой буфер. Есть два способа выполнить преобразование:</target>
        </trans-unit>
        <trans-unit id="81fd781d39eec7ea3f46b072e42d9c27a2a64fee" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;to-fn&lt;/var&gt; is a string, it is a shell command; Emacs runs the command as a filter to perform the conversion.</source>
          <target state="translated">Если &lt;var&gt;to-fn&lt;/var&gt; - строка, это команда оболочки; Emacs запускает команду как фильтр для выполнения преобразования.</target>
        </trans-unit>
        <trans-unit id="e6bfd27da3325d8ff754d2a572396684f54008e8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;tty&lt;/var&gt; is already suspended, this function does nothing.</source>
          <target state="translated">Если &lt;var&gt;tty&lt;/var&gt; уже приостановлен, эта функция ничего не делает.</target>
        </trans-unit>
        <trans-unit id="cee74f41416cc96f2a24289ecaaaa869a1e44796" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;tty&lt;/var&gt; specifies a terminal device used by Emacs, this function relinquishes the device and restores it to its prior state. Frames that used the device continue to exist, but are not updated and Emacs doesn&amp;rsquo;t read input from them. &lt;var&gt;tty&lt;/var&gt; can be a terminal object, a frame (meaning the terminal for that frame), or &lt;code&gt;nil&lt;/code&gt; (meaning the terminal for the selected frame). See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">Если &lt;var&gt;tty&lt;/var&gt; определяет оконечное устройство, используемое Emacs, эта функция освобождает устройство и восстанавливает его в предыдущее состояние. Фреймы, которые использовали устройство, продолжают существовать, но не обновляются, и Emacs не считывает ввод с них. &lt;var&gt;tty&lt;/var&gt; может быть конечным объектом, фреймом (что означает терминал для этого фрейма) или &lt;code&gt;nil&lt;/code&gt; (означает терминал для выбранного фрейма). См. &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Несколько терминалов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="866dc9dc6319fc85a323bd658b6535cb79305c35" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;uid&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it should be a number (a user-id) or a string (a login name). Then &lt;code&gt;user-full-name&lt;/code&gt; returns the full name corresponding to that user-id or login name. If you specify a user-id or login name that isn&amp;rsquo;t defined, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;uid&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , тогда это должно быть число (идентификатор пользователя) или строка (имя пользователя). Затем &lt;code&gt;user-full-name&lt;/code&gt; возвращает полное имя, соответствующее этому идентификатору пользователя или имени входа. Если вы укажете идентификатор пользователя или имя для входа, которые не определены, он вернет &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99a0d9fdada8443612f364827def2de927d53fd2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;undo&lt;/var&gt; is present and non-&lt;code&gt;nil&lt;/code&gt;, it is a function that will be called by &lt;code&gt;yank-pop&lt;/code&gt; to undo the insertion of the current object. It is called with two arguments, the start and end of the current region. &lt;var&gt;function&lt;/var&gt; can set &lt;code&gt;yank-undo-function&lt;/code&gt; to override the &lt;var&gt;undo&lt;/var&gt; value.</source>
          <target state="translated">Если &lt;var&gt;undo&lt;/var&gt; присутствует и не - &lt;code&gt;nil&lt;/code&gt; , это функция , которая будет вызвана &lt;code&gt;yank-pop&lt;/code&gt; , чтобы отменить вставку текущего объекта. Он вызывается с двумя аргументами: началом и концом текущего региона. &lt;var&gt;function&lt;/var&gt; может установить функцию &lt;code&gt;yank-undo-function&lt;/code&gt; для &lt;var&gt;undo&lt;/var&gt; значения отмены .</target>
        </trans-unit>
        <trans-unit id="c7fa8e08868183dc2249f0e3555b97870b32e09c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;update&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;window-end&lt;/code&gt; always returns an up-to-date value for where display ends, based on the current &lt;code&gt;window-start&lt;/code&gt; value. If a previously saved value of that position is still valid, &lt;code&gt;window-end&lt;/code&gt; returns that value; otherwise it computes the correct value by scanning the buffer text.</source>
          <target state="translated">Если &lt;var&gt;update&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;window-end&lt;/code&gt; всегда возвращает актуальное значение для того места, где заканчивается отображение, на основе текущего значения &lt;code&gt;window-start&lt;/code&gt; . Если ранее сохраненное значение этой позиции все еще действует, &lt;code&gt;window-end&lt;/code&gt; возвращает это значение; в противном случае он вычисляет правильное значение, просматривая текст буфера.</target>
        </trans-unit>
        <trans-unit id="83f961012b906889ca57a51ce9b30370f12471fe" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;use-external-socket&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; use any sockets passed to Emacs on invocation instead of allocating one. This is used by the Emacs server code to allow on-demand socket activation. If Emacs wasn&amp;rsquo;t passed a socket, this option is silently ignored.</source>
          <target state="translated">Если &lt;var&gt;use-external-socket&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , используйте любые сокеты, переданные Emacs при вызове, вместо выделения одного. Это используется кодом сервера Emacs, чтобы разрешить активацию сокета по требованию. Если Emacs не передал сокет, эта опция игнорируется.</target>
        </trans-unit>
        <trans-unit id="6a7c7b9022969765745e412569e605585ab060b3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value1&lt;/var&gt; is a relative value for the face attribute &lt;var&gt;attribute&lt;/var&gt;, returns it merged with the underlying value &lt;var&gt;value2&lt;/var&gt;; otherwise, if &lt;var&gt;value1&lt;/var&gt; is an absolute value for the face attribute &lt;var&gt;attribute&lt;/var&gt;, returns &lt;var&gt;value1&lt;/var&gt; unchanged.</source>
          <target state="translated">Если &lt;var&gt;value1&lt;/var&gt; является относительным значением атрибута &lt;var&gt;attribute&lt;/var&gt; лица , возвращается его объединенное с базовым значением &lt;var&gt;value2&lt;/var&gt; ; в противном случае, если &lt;var&gt;value1&lt;/var&gt; является абсолютным значением атрибута &lt;var&gt;attribute&lt;/var&gt; лица , возвращается &lt;var&gt;value1&lt;/var&gt; без изменений.</target>
        </trans-unit>
        <trans-unit id="1501c691e888db9ec6ebe0af2b4f6a762c79934d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value&lt;/var&gt; is specified, and &lt;var&gt;symbol&lt;/var&gt; is void (i.e., it has no dynamically bound value; see &lt;a href=&quot;void-variables#Void-Variables&quot;&gt;Void Variables&lt;/a&gt;), then &lt;var&gt;value&lt;/var&gt; is evaluated and &lt;var&gt;symbol&lt;/var&gt; is set to the result. But if &lt;var&gt;symbol&lt;/var&gt; is not void, &lt;var&gt;value&lt;/var&gt; is not evaluated, and &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s value is left unchanged. If &lt;var&gt;value&lt;/var&gt; is omitted, the value of &lt;var&gt;symbol&lt;/var&gt; is not changed in any case.</source>
          <target state="translated">Если &lt;var&gt;value&lt;/var&gt; указано, а &lt;var&gt;symbol&lt;/var&gt; недействителен (т. Е. Не имеет динамически связанного значения; см. &amp;laquo; &lt;a href=&quot;void-variables#Void-Variables&quot;&gt;Переменные пустоты&amp;raquo;&lt;/a&gt; ), то &lt;var&gt;value&lt;/var&gt; оценивается, и в результате устанавливается &lt;var&gt;symbol&lt;/var&gt; . Но если &lt;var&gt;symbol&lt;/var&gt; не является недействительным, &lt;var&gt;value&lt;/var&gt; не оценивается, а значение &lt;var&gt;symbol&lt;/var&gt; остается неизменным. Если &lt;var&gt;value&lt;/var&gt; не указано, значение &lt;var&gt;symbol&lt;/var&gt; ни в коем случае не изменяется.</target>
        </trans-unit>
        <trans-unit id="081b95c700fe775f26956ab6db394efc7894ffdb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;var&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means no variable is bound. Then the error symbol and associated data are not available to the handler.</source>
          <target state="translated">Если &lt;var&gt;var&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , это означает, что никакая переменная не привязана. Тогда символ ошибки и связанные данные будут недоступны для обработчика.</target>
        </trans-unit>
        <trans-unit id="6cf26c5d8c1fc1e03f7659c51c2167b19849253e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;variable&lt;/var&gt; does not have a default value, then calling this command will give it a default value of &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;variable&lt;/var&gt; already has a default value, that value remains unchanged. Subsequently calling &lt;code&gt;makunbound&lt;/code&gt; on &lt;var&gt;variable&lt;/var&gt; will result in a void buffer-local value and leave the default value unaffected.</source>
          <target state="translated">Если &lt;var&gt;variable&lt;/var&gt; не имеет значения по умолчанию, то вызов этой команды даст ей значение по умолчанию &lt;code&gt;nil&lt;/code&gt; . Если &lt;var&gt;variable&lt;/var&gt; уже имеет значение по умолчанию, это значение остается неизменным. Впоследствии вызов &lt;code&gt;makunbound&lt;/code&gt; on &lt;var&gt;variable&lt;/var&gt; приведет к пустому локальному значению в буфере и оставит неизменным значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="9680817196d72f27e9d13cbb6b1d48bfec334e08" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;visible-ok&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;other-buffer&lt;/code&gt; avoids returning a buffer visible in any window on any visible frame, except as a last resort. If &lt;var&gt;visible-ok&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it does not matter whether a buffer is displayed somewhere or not.</source>
          <target state="translated">Если &lt;var&gt;visible-ok&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;other-buffer&lt;/code&gt; избегает возврата буфера, видимого в любом окне на любом видимом кадре, кроме как в крайнем случае. Если &lt;var&gt;visible-ok&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то не имеет значения, отображается где-то буфер или нет.</target>
        </trans-unit>
        <trans-unit id="6f11bdf42f1d530cd96bae1b60625343f5524e02" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;visit&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, then Emacs establishes an association between the buffer and the file: the buffer is then visiting that file. It also sets the last file modification time for the current buffer to &lt;var&gt;filename&lt;/var&gt;&amp;rsquo;s modtime, and marks the buffer as not modified. This feature is used by &lt;code&gt;save-buffer&lt;/code&gt;, but you probably should not use it yourself.</source>
          <target state="translated">Если &lt;var&gt;visit&lt;/var&gt; равно &lt;code&gt;t&lt;/code&gt; , то Emacs устанавливает связь между буфером и файлом: затем буфер обращается к этому файлу. Он также устанавливает время последней модификации файла для текущего буфера равным времени модификации &lt;var&gt;filename&lt;/var&gt; и помечает буфер как неизмененный. Эта функция используется &lt;code&gt;save-buffer&lt;/code&gt; , но вам, вероятно, не стоит использовать ее самостоятельно.</target>
        </trans-unit>
        <trans-unit id="246e4d1c6e6afb943ca327caf9e64f83136f20aa" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;visit&lt;/var&gt; is a string, it specifies the file name to visit. This way, you can write the data to one file (&lt;var&gt;filename&lt;/var&gt;) while recording the buffer as visiting another file (&lt;var&gt;visit&lt;/var&gt;). The argument &lt;var&gt;visit&lt;/var&gt; is used in the echo area message and also for file locking; &lt;var&gt;visit&lt;/var&gt; is stored in &lt;code&gt;buffer-file-name&lt;/code&gt;. This feature is used to implement &lt;code&gt;file-precious-flag&lt;/code&gt;; don&amp;rsquo;t use it yourself unless you really know what you&amp;rsquo;re doing.</source>
          <target state="translated">Если &lt;var&gt;visit&lt;/var&gt; представляет собой строку, она указывает имя файла для посещения. Таким образом, вы можете записать данные в один файл ( &lt;var&gt;filename&lt;/var&gt; ), записывая буфер как посещение другого файла ( &lt;var&gt;visit&lt;/var&gt; ). Аргумент &lt;var&gt;visit&lt;/var&gt; используется в сообщении эхо-области, а также для блокировки файла; &lt;var&gt;visit&lt;/var&gt; хранится в &lt;code&gt;buffer-file-name&lt;/code&gt; . Эта функция используется для реализации &lt;code&gt;file-precious-flag&lt;/code&gt; ; не используйте его самостоятельно, если вы действительно не знаете, что делаете.</target>
        </trans-unit>
        <trans-unit id="6b4a4b3a70e1e0d0b1f3aa6c9e23277f30082674" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;visit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function additionally marks the buffer as unmodified and sets up various fields in the buffer so that it is visiting the file &lt;var&gt;filename&lt;/var&gt;: these include the buffer&amp;rsquo;s visited file name and its last save file modtime. This feature is used by &lt;code&gt;find-file-noselect&lt;/code&gt; and you probably should not use it yourself.</source>
          <target state="translated">Если &lt;var&gt;visit&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , эта функция дополнительно помечает буфер как немодифицированный и настраивает различные поля в буфере так, чтобы он обращался к файлу &lt;var&gt;filename&lt;/var&gt; : они включают имя файла, посещенного буфером, и время его последнего сохранения. Эта функция используется командой &lt;code&gt;find-file-noselect&lt;/code&gt; и вам, вероятно, не следует использовать ее самостоятельно.</target>
        </trans-unit>
        <trans-unit id="ec5dbce89952423fb67e0972aa3a58ef96e350a3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;warn&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then this function issues a warning if an auto-save file exists and is more recent than the visited file.</source>
          <target state="translated">Если &lt;var&gt;warn&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , то эта функция выдает предупреждение, если файл с автосохранением существует и является более новым, чем посещенный файл.</target>
        </trans-unit>
        <trans-unit id="b46d4acb4cf7b9dce319e3d320c437f4387c6047" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;key-and-value&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt;, both the key and the value must be live in order to preserve the association. Thus, the hash table does not protect either keys or values from garbage collection; if either one is collected as garbage, that removes the association.</source>
          <target state="translated">Если &lt;var&gt;weak&lt;/var&gt; - это &lt;code&gt;key-and-value&lt;/code&gt; или &lt;code&gt;t&lt;/code&gt; , и ключ, и значение должны быть активными, чтобы сохранить связь. Таким образом, хеш-таблица не защищает ни ключи, ни значения от сборки мусора; если какой-либо из них будет собран как мусор, это удалит связь.</target>
        </trans-unit>
        <trans-unit id="bc5451feb70a80d59c655a33edf898614731b08d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;key-or-value&lt;/code&gt;, either the key or the value can preserve the association. Thus, associations are removed from the hash table when both their key and value would be collected as garbage (if not for references from weak hash tables).</source>
          <target state="translated">Если &lt;var&gt;weak&lt;/var&gt; является &lt;code&gt;key-or-value&lt;/code&gt; , либо ключ или значение может сохранить ассоциацию. Таким образом, ассоциации удаляются из хеш-таблицы, когда и их ключ, и значение будут собраны как мусор (если бы не ссылки из слабых хеш-таблиц).</target>
        </trans-unit>
        <trans-unit id="ae9e60e0603a0552eb11d49586c0ad595cdd8b54" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;value&lt;/code&gt;, then the hash table does not prevent values from being collected as garbage (if they are not referenced anywhere else); if a particular value does get collected, the corresponding association is removed from the hash table.</source>
          <target state="translated">Если &lt;var&gt;weak&lt;/var&gt; имеет &lt;code&gt;value&lt;/code&gt; , то хеш-таблица не предотвращает сбор значений как мусор (если на них больше нигде нет ссылок); если определенное значение действительно собирается, соответствующая ассоциация удаляется из хеш-таблицы.</target>
        </trans-unit>
        <trans-unit id="62cef1d954d6fb85b755e1ce780adbcbe0be9175" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;width&lt;/var&gt; is a number, it specifies that the space width should be &lt;var&gt;width&lt;/var&gt; times the normal character width. &lt;var&gt;width&lt;/var&gt; can also be a &lt;em&gt;pixel width&lt;/em&gt; specification (see &lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;Pixel Specification&lt;/a&gt;).</source>
          <target state="translated">Если &lt;var&gt;width&lt;/var&gt; - это число, оно указывает, что ширина пробела должна быть &lt;var&gt;width&lt;/var&gt; на ширину обычной ширины символа. &lt;var&gt;width&lt;/var&gt; также может быть спецификацией &lt;em&gt;ширины&lt;/em&gt; в &lt;em&gt;пикселях&lt;/em&gt; (см. &lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;Спецификацию пикселей&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2a0f880b17579fea02ad371d9abc1dc449748a52" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wildcards&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, which is always true in an interactive call, then &lt;code&gt;find-file&lt;/code&gt; expands wildcard characters in &lt;var&gt;filename&lt;/var&gt; and visits all the matching files.</source>
          <target state="translated">Если &lt;var&gt;wildcards&lt;/var&gt; отличны от &lt;code&gt;nil&lt;/code&gt; , что всегда верно в интерактивном вызове, то &lt;code&gt;find-file&lt;/code&gt; расширяет подстановочные знаки в &lt;var&gt;filename&lt;/var&gt; и посещает все соответствующие файлы.</target>
        </trans-unit>
        <trans-unit id="07a4e63abbb85f3d495187a672b77ef3d46bf086" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">Если &lt;var&gt;window&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется выбранное окно.</target>
        </trans-unit>
        <trans-unit id="3b0662b3c0b907db7784baf8422c8523260adbe7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. If the window cannot be resized as demanded, an error is signaled.</source>
          <target state="translated">Если &lt;var&gt;window&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется выбранное окно. Если размер окна не может быть изменен в соответствии с требованиями, выдается сигнал об ошибке.</target>
        </trans-unit>
        <trans-unit id="73895410117091f2036192e72faa26f5ae8a3696" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is &lt;em&gt;strongly dedicated&lt;/em&gt; to a buffer and &lt;var&gt;buffer-or-name&lt;/var&gt; does not specify that buffer, this function signals an error. See &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;.</source>
          <target state="translated">Если &lt;var&gt;window&lt;/var&gt; будет &lt;em&gt;сильно посвящен&lt;/em&gt; в буфер и &lt;var&gt;buffer-or-name&lt;/var&gt; не указывает , что буфер, эта функция сигнализирует об ошибке. См. &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Выделенные окна&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="87cda5d75535ddbcabe4ce91eae66bc6b587dc3b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is a live window, the new window inherits various properties from it, including margins and scroll bars. If &lt;var&gt;window&lt;/var&gt; is an internal window, the new window inherits the properties of the window selected within &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame.</source>
          <target state="translated">Если &lt;var&gt;window&lt;/var&gt; является активным окном, новое окно наследует от него различные свойства, включая поля и полосы прокрутки. Если &lt;var&gt;window&lt;/var&gt; является внутренним окном, новое окно наследует свойства окна, выбранного в рамке &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a7fd3640aa79ae6b142869e1fb11e2f5db2b31c5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is not large enough to accommodate a scroll bar of the desired dimension, this leaves the corresponding scroll bar unchanged.</source>
          <target state="translated">Если &lt;var&gt;window&lt;/var&gt; недостаточно велико для размещения полосы прокрутки желаемого размера, соответствующая полоса прокрутки остается неизменной.</target>
        </trans-unit>
        <trans-unit id="ddd6d6ca0b31575b80b1be34d6d03c61b740c27d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is not large enough to accommodate fringes of the desired width, this leaves the fringes of &lt;var&gt;window&lt;/var&gt; unchanged.</source>
          <target state="translated">Если &lt;var&gt;window&lt;/var&gt; недостаточно большое, чтобы вместить бахрому желаемой ширины, края &lt;var&gt;window&lt;/var&gt; остаются неизменными.</target>
        </trans-unit>
        <trans-unit id="c7d26a822d67cd3b20eb23d2c8d5237b866ae162" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is not large enough to accommodate margins of the desired width, this leaves the margins of &lt;var&gt;window&lt;/var&gt; unchanged.</source>
          <target state="translated">Если &lt;var&gt;window&lt;/var&gt; недостаточно велико для размещения полей желаемой ширины, это оставляет поля &lt;var&gt;window&lt;/var&gt; без изменений.</target>
        </trans-unit>
        <trans-unit id="cbd6e55f0d32133d423f36ec54beceef4df93dda" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is part of a horizontal combination and the value of the option &lt;code&gt;fit-window-to-buffer-horizontally&lt;/code&gt; (see below) is non-&lt;code&gt;nil&lt;/code&gt;, this function adjusts &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s width. The new width of &lt;var&gt;window&lt;/var&gt; is calculated from the maximum length of its buffer&amp;rsquo;s lines that follow the current start position of &lt;var&gt;window&lt;/var&gt;. The optional argument &lt;var&gt;max-width&lt;/var&gt; specifies a maximum width and defaults to the width of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame. The optional argument &lt;var&gt;min-width&lt;/var&gt; specifies a minimum width and defaults to &lt;code&gt;window-min-width&lt;/code&gt;. Both &lt;var&gt;max-width&lt;/var&gt; and &lt;var&gt;min-width&lt;/var&gt; are specified in columns and include fringes, margins and scrollbars, if any.</source>
          <target state="translated">Если &lt;var&gt;window&lt;/var&gt; является частью горизонтальной комбинации и значение опции &lt;code&gt;fit-window-to-buffer-horizontally&lt;/code&gt; (см. Ниже) не равно &lt;code&gt;nil&lt;/code&gt; , эта функция регулирует ширину &lt;var&gt;window&lt;/var&gt; . Новая ширина &lt;var&gt;window&lt;/var&gt; вычисляется из максимальной длины строк его буфера, следующих за текущей начальной позицией &lt;var&gt;window&lt;/var&gt; . Необязательный аргумент &lt;var&gt;max-width&lt;/var&gt; определяет максимальную ширину и по умолчанию равен ширине рамки &lt;var&gt;window&lt;/var&gt; . Необязательный аргумент &lt;var&gt;min-width&lt;/var&gt; указывает минимальную ширину и по умолчанию равен &lt;code&gt;window-min-width&lt;/code&gt; . И &lt;var&gt;max-width&lt;/var&gt; и &lt;var&gt;min-width&lt;/var&gt; указываются в столбцах и включают бахрому, поля и полосы прокрутки, если таковые имеются.</target>
        </trans-unit>
        <trans-unit id="dd4030d09853d72a6ad706951a4c09bc51fe8c7e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is part of a vertical combination, this function adjusts &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s height. The new height is calculated from the actual height of the accessible portion of its buffer. The optional argument &lt;var&gt;max-height&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the maximum total height that this function can give &lt;var&gt;window&lt;/var&gt;. The optional argument &lt;var&gt;min-height&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the minimum total height that it can give, which overrides the variable &lt;code&gt;window-min-height&lt;/code&gt;. Both &lt;var&gt;max-height&lt;/var&gt; and &lt;var&gt;min-height&lt;/var&gt; are specified in lines and include mode and header line and a bottom divider, if any.</source>
          <target state="translated">Если &lt;var&gt;window&lt;/var&gt; является частью вертикальной комбинации, эта функция регулирует высоту &lt;var&gt;window&lt;/var&gt; . Новая высота рассчитывается исходя из фактической высоты доступной части его буфера. Необязательный аргумент &lt;var&gt;max-height&lt;/var&gt; , если он не &lt;code&gt;nil&lt;/code&gt; , указывает максимальную общую высоту, которую эта функция может дать &lt;var&gt;window&lt;/var&gt; . Необязательный аргумент &lt;var&gt;min-height&lt;/var&gt; , если он не &lt;code&gt;nil&lt;/code&gt; , указывает минимальную общую высоту, которую он может дать, которая переопределяет переменную &lt;code&gt;window-min-height&lt;/code&gt; . И &lt;var&gt;max-height&lt;/var&gt; , и &lt;var&gt;min-height&lt;/var&gt; указываются в строках и включают режим, строку заголовка и нижний разделитель, если таковой имеется.</target>
        </trans-unit>
        <trans-unit id="2a4770ab34ce275d090f2c3f83f1fdd06899dedc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is selected, this simply does &lt;code&gt;goto-char&lt;/code&gt; in &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer.</source>
          <target state="translated">Если выбрано &lt;var&gt;window&lt;/var&gt; , он просто выполняет &lt;code&gt;goto-char&lt;/code&gt; в буфере &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7b1f3819de02532b271f42167ead365a3b2a4b01" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; shall be deleted, is the only window on its frame and there are other frames on that frame&amp;rsquo;s terminal, the value of the optional argument &lt;var&gt;bury-or-kill&lt;/var&gt; determines how to proceed with the window. If &lt;var&gt;bury-or-kill&lt;/var&gt; equals &lt;code&gt;kill&lt;/code&gt;, the frame is deleted unconditionally. Otherwise, the fate of the frame is determined by calling &lt;code&gt;frame-auto-hide-function&lt;/code&gt; (see below) with that frame as sole argument.</source>
          <target state="translated">Если &lt;var&gt;window&lt;/var&gt; должно быть удалено, это единственное окно в его фрейме и на терминале этого фрейма есть другие фреймы, значение необязательного аргумента &lt;var&gt;bury-or-kill&lt;/var&gt; определяет, как продолжить работу с окном. Если &lt;var&gt;bury-or-kill&lt;/var&gt; равно &lt;code&gt;kill&lt;/code&gt; , кадр удаляется безоговорочно. В противном случае судьба кадра определяется путем вызова функции &lt;code&gt;frame-auto-hide-function&lt;/code&gt; (см. Ниже) с этим кадром в качестве единственного аргумента.</target>
        </trans-unit>
        <trans-unit id="b4a6963591d62872fac299ee519da1185778699d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is finite, then &lt;var&gt;s&lt;/var&gt; is a floating-point number between 0.5 (inclusive) and 1.0 (exclusive), &lt;var&gt;e&lt;/var&gt; is an integer, and &lt;var&gt;x&lt;/var&gt; = &lt;var&gt;s&lt;/var&gt; * 2**&lt;var&gt;e&lt;/var&gt;. If &lt;var&gt;x&lt;/var&gt; is zero or infinity, then &lt;var&gt;s&lt;/var&gt; is the same as &lt;var&gt;x&lt;/var&gt;. If &lt;var&gt;x&lt;/var&gt; is a NaN, then &lt;var&gt;s&lt;/var&gt; is also a NaN. If &lt;var&gt;x&lt;/var&gt; is zero, then &lt;var&gt;e&lt;/var&gt; is 0.</source>
          <target state="translated">Если &lt;var&gt;x&lt;/var&gt; конечно, то &lt;var&gt;s&lt;/var&gt; - это число с плавающей запятой от 0,5 (включительно) до 1,0 (исключая), &lt;var&gt;e&lt;/var&gt; - целое число и &lt;var&gt;x&lt;/var&gt; = &lt;var&gt;s&lt;/var&gt; * 2 ** &lt;var&gt;e&lt;/var&gt; . Если &lt;var&gt;x&lt;/var&gt; равен нулю или бесконечности, то &lt;var&gt;s&lt;/var&gt; совпадает с &lt;var&gt;x&lt;/var&gt; . Если &lt;var&gt;x&lt;/var&gt; является NaN, то &lt;var&gt;s&lt;/var&gt; также является NaN. Если &lt;var&gt;x&lt;/var&gt; равен нулю, то &lt;var&gt;e&lt;/var&gt; равен 0.</target>
        </trans-unit>
        <trans-unit id="447e7b65c8b11485cc215c5eb0d80eeaf6769f7b" translate="yes" xml:space="preserve">
          <source>If ACLs are not supported or the file does not exist, then the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если ACL не поддерживаются или файл не существует, возвращаемое значение равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5c1fbb91a50e63cb0b76b1c5d578b1789a7a55a" translate="yes" xml:space="preserve">
          <source>If Auto Compression mode is enabled, as it is by default, then if &lt;code&gt;load&lt;/code&gt; can not find a file, it searches for a compressed version of the file before trying other file names. It decompresses and loads it if it exists. It looks for compressed versions by appending each of the suffixes in &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; to the file name. The value of this variable must be a list of strings. Its standard value is &lt;code&gt;(&quot;.gz&quot;)&lt;/code&gt;.</source>
          <target state="translated">Если режим Auto Compression включен, как это установлено по умолчанию, то, если &lt;code&gt;load&lt;/code&gt; не может найти файл, он выполняет поиск сжатой версии файла перед попыткой использования других имен файлов. Он распаковывает и загружает его, если он существует. Он ищет сжатые версии, добавляя каждый из суффиксов в &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; к имени файла. Значение этой переменной должно быть списком строк. Стандартное значение - &lt;code&gt;(&quot;.gz&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19e54c962f7dd79e1fc7867f5e3102aa865a73ca" translate="yes" xml:space="preserve">
          <source>If Edebug detects a syntax error while instrumenting, it leaves point at the erroneous code and signals an &lt;code&gt;invalid-read-syntax&lt;/code&gt; error. Example:</source>
          <target state="translated">Если Edebug обнаруживает синтаксическую ошибку во время инструментирования, он оставляет точку в ошибочном коде и сигнализирует об ошибке &lt;code&gt;invalid-read-syntax&lt;/code&gt; . Пример:</target>
        </trans-unit>
        <trans-unit id="3be47050736fff885a6116b32ea1daa64351b7ed" translate="yes" xml:space="preserve">
          <source>If Emacs exits due to signaling an error in batch mode, the exit status of the Emacs command is non-zero:</source>
          <target state="translated">Если Emacs выходит из-за сигнала об ошибке в пакетном режиме,то статус выхода команды Emacs ненулевой:</target>
        </trans-unit>
        <trans-unit id="e67a7deab72fd9417551a81812eaf2e9f7e5f914" translate="yes" xml:space="preserve">
          <source>If Emacs is built with GTK+ or Nextstep, the tool bar can only show one line, so this variable has no effect.</source>
          <target state="translated">Если Emacs собирается с помощью GTK+или Nextstep,то на панели инструментов может отображаться только одна строка,поэтому эта переменная не имеет никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="d56940dc3553b8f69d6b8d13681d9f5a7c74b029" translate="yes" xml:space="preserve">
          <source>If Emacs is idle, this function returns the length of time Emacs has been idle, using the same format as &lt;code&gt;current-time&lt;/code&gt; (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">Если Emacs простаивает, эта функция возвращает время, в течение которого Emacs простаивает, используя тот же формат, что и &lt;code&gt;current-time&lt;/code&gt; (см. &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Время дня&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ec4add1da37cdefc247326ddd0e133ce9fba3efb" translate="yes" xml:space="preserve">
          <source>If SELinux is not supported or the file does not exist, then the return value is &lt;code&gt;(nil nil nil nil)&lt;/code&gt;.</source>
          <target state="translated">Если SELinux не поддерживается или файл не существует, возвращается значение &lt;code&gt;(nil nil nil nil)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab14e08663cfa91c3db576b804543ef8f8a279b3" translate="yes" xml:space="preserve">
          <source>If Transient Mark mode is enabled or &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function deactivates the mark and runs the normal hook &lt;code&gt;deactivate-mark-hook&lt;/code&gt;. Otherwise, it does nothing.</source>
          <target state="translated">Если включен режим Transient Mark или &lt;var&gt;force&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , эта функция деактивирует метку и запускает обычный крючок &lt;code&gt;deactivate-mark-hook&lt;/code&gt; . В противном случае ничего не происходит.</target>
        </trans-unit>
        <trans-unit id="07d7f05b9ae25ab88e359a5dc53a4252b71ffe70" translate="yes" xml:space="preserve">
          <source>If Transient Mark mode is enabled, and &lt;code&gt;mark-even-if-inactive&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;mark&lt;/code&gt; signals an error if the mark is inactive. However, if &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;mark&lt;/code&gt; disregards inactivity of the mark, and returns the mark position (or &lt;code&gt;nil&lt;/code&gt;) anyway.</source>
          <target state="translated">Если включен режим Transient Mark, а значение &lt;code&gt;mark-even-if-inactive&lt;/code&gt; равно &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;mark&lt;/code&gt; сигнализирует об ошибке, если метка неактивна. Однако, если &lt;var&gt;force&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;mark&lt;/code&gt; игнорирует бездействие метки и все равно возвращает положение метки (или &lt;code&gt;nil&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4a86e0d976aa7cf58f838e55f71256266064bf71" translate="yes" xml:space="preserve">
          <source>If Transient Mark mode is enabled, certain editing commands that normally apply to text near point, apply instead to the region when the mark is active. This is the main motivation for using Transient Mark mode. (Another is that this enables highlighting of the region when the mark is active. See &lt;a href=&quot;display#Display&quot;&gt;Display&lt;/a&gt;.)</source>
          <target state="translated">Если включен режим временной метки, определенные команды редактирования, которые обычно применяются к тексту рядом с точкой, вместо этого применяются к области, когда метка активна. Это основная мотивация для использования режима Transient Mark. (Во-вторых, это позволяет выделить область, когда метка активна. См. &lt;a href=&quot;display#Display&quot;&gt;Дисплей&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="8605a51e352c5b5f1ad525364c97c770197a7dee" translate="yes" xml:space="preserve">
          <source>If a &amp;lsquo;</source>
          <target state="translated">Если '</target>
        </trans-unit>
        <trans-unit id="f143509ca8ee59240acfff6197c41217c9159e0c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;defcustom&lt;/code&gt; does not specify any &lt;code&gt;:group&lt;/code&gt;, the last group defined with &lt;code&gt;defgroup&lt;/code&gt; in the same file will be used. This way, most &lt;code&gt;defcustom&lt;/code&gt; do not need an explicit &lt;code&gt;:group&lt;/code&gt;.</source>
          <target state="translated">Если &lt;code&gt;defcustom&lt;/code&gt; не указывает any &lt;code&gt;:group&lt;/code&gt; , будет использоваться последняя группа, определенная с помощью &lt;code&gt;defgroup&lt;/code&gt; в том же файле. Таким образом, большинству &lt;code&gt;defcustom&lt;/code&gt; не требуется явная &lt;code&gt;:group&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0130db0b8b3db08d4951e056fcfc2b5ec763ea50" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;throw&lt;/code&gt; is executed during the execution of &lt;var&gt;body&lt;/var&gt;, specifying the same value &lt;var&gt;tag&lt;/var&gt;, the &lt;code&gt;catch&lt;/code&gt; form exits immediately; the value it returns is whatever was specified as the second argument of &lt;code&gt;throw&lt;/code&gt;.</source>
          <target state="translated">Если во время выполнения &lt;var&gt;body&lt;/var&gt; выполняется &lt;code&gt;throw&lt;/code&gt; с указанием того же &lt;var&gt;tag&lt;/var&gt; значения , форма &lt;code&gt;catch&lt;/code&gt; немедленно завершает работу; возвращаемое значение - это то, что было указано во втором аргументе &lt;code&gt;throw&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0706edfed7e00cc4d42f94bdd4da4bee79e492ca" translate="yes" xml:space="preserve">
          <source>If a &lt;var&gt;symbol&lt;/var&gt; is not buffer-local for the current buffer, and is not marked automatically buffer-local, &lt;code&gt;setq-default&lt;/code&gt; has the same effect as &lt;code&gt;setq&lt;/code&gt;. If &lt;var&gt;symbol&lt;/var&gt; is buffer-local for the current buffer, then this changes the value that other buffers will see (as long as they don&amp;rsquo;t have a buffer-local value), but not the value that the current buffer sees.</source>
          <target state="translated">Если &lt;var&gt;symbol&lt;/var&gt; не является локальным для текущего буфера и не помечается автоматически как локальный для буфера, &lt;code&gt;setq-default&lt;/code&gt; имеет тот же эффект, что и &lt;code&gt;setq&lt;/code&gt; . Если &lt;var&gt;symbol&lt;/var&gt; является локальным в буфере для текущего буфера, то это изменяет значение, которое будут видеть другие буферы (пока они не имеют локального для буфера значения), но не значение, которое видит текущий буфер.</target>
        </trans-unit>
        <trans-unit id="6d09d11f96853cfc9168b5bb65e4e288953cb8a6" translate="yes" xml:space="preserve">
          <source>If a &lt;var&gt;tag&lt;/var&gt; has the form &lt;code&gt;(eval &lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt;, evaluate &lt;var&gt;expr&lt;/var&gt; with the variable &lt;code&gt;tag&lt;/code&gt; dynamically bound to the value of &lt;var&gt;form&lt;/var&gt;. A non-&lt;code&gt;nil&lt;/code&gt; result indicates a match.</source>
          <target state="translated">Если &lt;var&gt;tag&lt;/var&gt; имеет форму &lt;code&gt;(eval &lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt; , оцените &lt;var&gt;expr&lt;/var&gt; с &lt;code&gt;tag&lt;/code&gt; переменной, динамически привязанным к значению &lt;var&gt;form&lt;/var&gt; . Не- &lt;code&gt;nil&lt;/code&gt; результат указывает на совпадение.</target>
        </trans-unit>
        <trans-unit id="d64f9083808f39165ea317967b062c0b1c2aa875" translate="yes" xml:space="preserve">
          <source>If a backtrace frame starts with &amp;lsquo;</source>
          <target state="translated">Если кадр обратной трассировки начинается с '</target>
        </trans-unit>
        <trans-unit id="2bc2b27e155784dc9a258adf0bf0a8d412c0d63d" translate="yes" xml:space="preserve">
          <source>If a backup was made by renaming, the return value is a cons cell of the form (&lt;var&gt;modes&lt;/var&gt;&lt;var&gt;extra-alist&lt;/var&gt;&lt;var&gt;backupname&lt;/var&gt;), where &lt;var&gt;modes&lt;/var&gt; are the mode bits of the original file, as returned by &lt;code&gt;file-modes&lt;/code&gt; (see &lt;a href=&quot;testing-accessibility#Testing-Accessibility&quot;&gt;Testing Accessibility&lt;/a&gt;), &lt;var&gt;extra-alist&lt;/var&gt; is an alist describing the original file&amp;rsquo;s extended attributes, as returned by &lt;code&gt;file-extended-attributes&lt;/code&gt; (see &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;), and &lt;var&gt;backupname&lt;/var&gt; is the name of the backup.</source>
          <target state="translated">Если резервная копия была сделана путем переименования, возвращаемое значение является минусы ячейки формы ( &lt;var&gt;modes&lt;/var&gt; &lt;var&gt;extra-alist&lt;/var&gt; &lt;var&gt;backupname&lt;/var&gt; ), где &lt;var&gt;modes&lt;/var&gt; являются биты режима исходного файла, возвращенное &lt;code&gt;file-modes&lt;/code&gt; (см &lt;a href=&quot;testing-accessibility#Testing-Accessibility&quot;&gt;Тестирование доступности&lt;/a&gt; ), &lt;var&gt;extra-alist&lt;/var&gt; - это список, описывающий расширенные атрибуты исходного файла, возвращаемый атрибутом &lt;code&gt;file-extended-attributes&lt;/code&gt; (см. &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Расширенные атрибуты&lt;/a&gt; ), а &lt;var&gt;backupname&lt;/var&gt; - это имя резервной копии.</target>
        </trans-unit>
        <trans-unit id="2c88897a720af47e907771ae913e7fc5603c0e89" translate="yes" xml:space="preserve">
          <source>If a buffer is &lt;em&gt;read-only&lt;/em&gt;, then you cannot change its contents, although you may change your view of the contents by scrolling and narrowing.</source>
          <target state="translated">Если буфер доступен &lt;em&gt;только для чтения&lt;/em&gt; , вы не можете изменить его содержимое, хотя вы можете изменить свое представление содержимого, прокручивая и сужая.</target>
        </trans-unit>
        <trans-unit id="c470f9c5e67a1af9ac52b8a461ba9c4467bb7077" translate="yes" xml:space="preserve">
          <source>If a character has a &lt;code&gt;category&lt;/code&gt; property, we call it the &lt;em&gt;property category&lt;/em&gt; of the character. It should be a symbol. The properties of the symbol serve as defaults for the properties of the character.</source>
          <target state="translated">Если персонаж имеет свойство &lt;code&gt;category&lt;/code&gt; , мы называем его &lt;em&gt;категорией&lt;/em&gt; свойств персонажа. Это должен быть символ. Свойства символа служат по умолчанию для свойств символа.</target>
        </trans-unit>
        <trans-unit id="5ab0e335265f6f91a6770f98adbf5ffcddb3bf12" translate="yes" xml:space="preserve">
          <source>If a character has a &lt;code&gt;category&lt;/code&gt; property, we call it the &lt;em&gt;property category&lt;/em&gt; of the character. It should be a symbol. The properties of this symbol serve as defaults for the properties of the character.</source>
          <target state="translated">Если персонаж имеет свойство &lt;code&gt;category&lt;/code&gt; , мы называем его &lt;em&gt;категорией&lt;/em&gt; свойств персонажа. Это должен быть символ. Свойства этого символа служат значениями по умолчанию для свойств символа.</target>
        </trans-unit>
        <trans-unit id="a325bcfd7299a47799b677ecb3d032bd944fd5f7" translate="yes" xml:space="preserve">
          <source>If a character has a non-&lt;code&gt;nil&lt;/code&gt; entry in an active display table, the display table takes effect; in this case, Emacs does not consult &lt;code&gt;glyphless-char-display&lt;/code&gt; at all.</source>
          <target state="translated">Если у символа есть запись, отличная от &lt;code&gt;nil&lt;/code&gt; в активной таблице отображения, таблица отображения вступает в силу; в этом случае Emacs вообще не &lt;code&gt;glyphless-char-display&lt;/code&gt; к glyphless-char-display .</target>
        </trans-unit>
        <trans-unit id="6a2b8c4ce0a813f762458f74fdba3b2d22b1abe1" translate="yes" xml:space="preserve">
          <source>If a character has the property &lt;code&gt;modification-hooks&lt;/code&gt;, then its value should be a list of functions; modifying that character calls all of those functions before the actual modification. Each function receives two arguments: the beginning and end of the part of the buffer being modified. Note that if a particular modification hook function appears on several characters being modified by a single primitive, you can&amp;rsquo;t predict how many times the function will be called. Furthermore, insertion will not modify any existing character, so this hook will only be run when removing some characters, replacing them with others, or changing their text-properties.</source>
          <target state="translated">Если у персонажа есть &lt;code&gt;modification-hooks&lt;/code&gt; свойства , то его значением должен быть список функций; изменение этого символа вызывает все эти функции перед фактическим изменением. Каждая функция получает два аргумента: начало и конец изменяемой части буфера. Обратите внимание: если конкретная функция перехвата модификации появляется на нескольких символах, изменяемых одним примитивом, вы не можете предсказать, сколько раз функция будет вызываться. Кроме того, вставка не изменит какой-либо существующий символ, поэтому этот хук будет запускаться только при удалении некоторых символов, замене их другими или изменении их текстовых свойств.</target>
        </trans-unit>
        <trans-unit id="cf6c171a09ab4b48f6f51b014c81c9b650ae5c4f" translate="yes" xml:space="preserve">
          <source>If a character has the property &lt;code&gt;read-only&lt;/code&gt;, then modifying that character is not allowed. Any command that would do so gets an error, &lt;code&gt;text-read-only&lt;/code&gt;. If the property value is a string, that string is used as the error message.</source>
          <target state="translated">Если у символа есть свойство &lt;code&gt;read-only&lt;/code&gt; , то изменение этого символа запрещено. Любая команда, которая будет это делать, получит ошибку &lt;code&gt;text-read-only&lt;/code&gt; . Если значение свойства является строкой, эта строка используется как сообщение об ошибке.</target>
        </trans-unit>
        <trans-unit id="5ff4a394e8b02fd937e03c0717ce827002675ca4" translate="yes" xml:space="preserve">
          <source>If a character&amp;rsquo;s &lt;code&gt;front-sticky&lt;/code&gt; property is &lt;code&gt;t&lt;/code&gt;, then all its properties are front-sticky. If the &lt;code&gt;front-sticky&lt;/code&gt; property is a list, then the sticky properties of the character are those whose names are in the list. For example, if a character has a &lt;code&gt;front-sticky&lt;/code&gt; property whose value is &lt;code&gt;(face read-only)&lt;/code&gt;, then insertion before the character can inherit its &lt;code&gt;face&lt;/code&gt; property and its &lt;code&gt;read-only&lt;/code&gt; property, but no others.</source>
          <target state="translated">Если свойство &lt;code&gt;front-sticky&lt;/code&gt; у персонажа равно &lt;code&gt;t&lt;/code&gt; , то все его свойства front-sticky. Если свойство &lt;code&gt;front-sticky&lt;/code&gt; - это список, то липкие свойства символа - это те, чьи имена находятся в списке. Например, если у персонажа есть свойство &lt;code&gt;front-sticky&lt;/code&gt; , значение которого &lt;code&gt;(face read-only)&lt;/code&gt; , то вставка перед символом может унаследовать его свойство &lt;code&gt;face&lt;/code&gt; и свойство &lt;code&gt;read-only&lt;/code&gt; , но никакие другие.</target>
        </trans-unit>
        <trans-unit id="cd39a6445b8e750c7f9dd57cb8ea29448e449653" translate="yes" xml:space="preserve">
          <source>If a command &lt;var&gt;other-command&lt;/var&gt; is remapped to &lt;var&gt;command&lt;/var&gt;:</source>
          <target state="translated">Если команда &lt;var&gt;other-command&lt;/var&gt; переназначается на &lt;var&gt;command&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="ca799751386325886a8170a870fc3794daed593d" translate="yes" xml:space="preserve">
          <source>If a command ends with point inside or at the boundary of invisible text, the main editing loop relocates point to one of the two ends of the invisible text. Emacs chooses the direction of relocation so that it is the same as the overall movement direction of the command; if in doubt, it prefers a position where an inserted char would not inherit the &lt;code&gt;invisible&lt;/code&gt; property. Additionally, if the text is not replaced by an ellipsis and the command only moved within the invisible text, then point is moved one extra character so as to try and reflect the command&amp;rsquo;s movement by a visible movement of the cursor.</source>
          <target state="translated">Если команда заканчивается точкой внутри или на границе невидимого текста, основной цикл редактирования перемещает точку на один из двух концов невидимого текста. Emacs выбирает направление перемещения так, чтобы оно совпадало с общим направлением перемещения команды; в случае сомнений он предпочитает позицию, в которой вставленный символ не унаследует свойство &lt;code&gt;invisible&lt;/code&gt; . Кроме того, если текст не заменен многоточием, а команда перемещается только внутри невидимого текста, то точка перемещается на один дополнительный символ, чтобы попытаться отразить перемещение команды видимым движением курсора.</target>
        </trans-unit>
        <trans-unit id="c02095386719e5b0d1fbf2aae78668af843d5ca3" translate="yes" xml:space="preserve">
          <source>If a command has multiple bindings, this function normally uses the first one it finds. You can specify one particular key binding by assigning an &lt;code&gt;:advertised-binding&lt;/code&gt; symbol property to the command, like this:</source>
          <target state="translated">Если команда имеет несколько привязок, эта функция обычно использует первую найденную. Вы можете указать одну конкретную привязку клавиш, назначив команде свойство символа &lt;code&gt;:advertised-binding&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="5d1a39eb22ef81b7fb55d0807c90696ea2cfa0f7" translate="yes" xml:space="preserve">
          <source>If a command name has a property &lt;code&gt;enable-recursive-minibuffers&lt;/code&gt; that is non-&lt;code&gt;nil&lt;/code&gt;, then the command can use the minibuffer to read arguments even if it is invoked from the minibuffer. A command can also achieve this by binding &lt;code&gt;enable-recursive-minibuffers&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; in the interactive declaration (see &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;). The minibuffer command &lt;code&gt;next-matching-history-element&lt;/code&gt; (normally</source>
          <target state="translated">Если имя команды имеет свойство &lt;code&gt;enable-recursive-minibuffers&lt;/code&gt; , отличное от &lt;code&gt;nil&lt;/code&gt; , то команда может использовать минибуфер для чтения аргументов, даже если он вызывается из минибуфера. Команда также может добиться этого, привязав &lt;code&gt;enable-recursive-minibuffers&lt;/code&gt; к &lt;code&gt;t&lt;/code&gt; в интерактивном объявлении (см. &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Использование Interactive&lt;/a&gt; ). Команда минибуфера &lt;code&gt;next-matching-history-element&lt;/code&gt; (обычно</target>
        </trans-unit>
        <trans-unit id="6bb6a6576cb926daa3494c0908a08057d34148fb" translate="yes" xml:space="preserve">
          <source>If a connection from a process contains buffered data, &lt;code&gt;accept-process-output&lt;/code&gt; can return non-&lt;code&gt;nil&lt;/code&gt; even after the process has exited. Therefore, although the following loop:</source>
          <target state="translated">Если соединение от процесса содержит буферизованные данные, &lt;code&gt;accept-process-output&lt;/code&gt; может возвращать &lt;code&gt;nil&lt;/code&gt; даже после выхода из процесса. Поэтому хотя и следующий цикл:</target>
        </trans-unit>
        <trans-unit id="4caa731ac6b008d448f362c498f5481d5e11ec54" translate="yes" xml:space="preserve">
          <source>If a customization item has a type such as &lt;code&gt;hook&lt;/code&gt; or &lt;code&gt;alist&lt;/code&gt;, which supports &lt;code&gt;:options&lt;/code&gt;, you can add additional values to the list from outside the &lt;code&gt;defcustom&lt;/code&gt; declaration by calling &lt;code&gt;custom-add-frequent-value&lt;/code&gt;. For example, if you define a function &lt;code&gt;my-lisp-mode-initialization&lt;/code&gt; intended to be called from &lt;code&gt;emacs-lisp-mode-hook&lt;/code&gt;, you might want to add that to the list of reasonable values for &lt;code&gt;emacs-lisp-mode-hook&lt;/code&gt;, but not by editing its definition. You can do it thus:</source>
          <target state="translated">Если у элемента настройки есть тип, такой как &lt;code&gt;hook&lt;/code&gt; или &lt;code&gt;alist&lt;/code&gt; , который поддерживает &lt;code&gt;:options&lt;/code&gt; , вы можете добавить дополнительные значения в список вне декларации &lt;code&gt;defcustom&lt;/code&gt; , вызвав &lt;code&gt;custom-add-frequent-value&lt;/code&gt; partial -value . Например, если вы определяете функцию &lt;code&gt;my-lisp-mode-initialization&lt;/code&gt; , предназначенную для &lt;code&gt;emacs-lisp-mode-hook&lt;/code&gt; из emacs-lisp-mode-hook , вы можете добавить ее в список разумных значений для &lt;code&gt;emacs-lisp-mode-hook&lt;/code&gt; , но не редактируя его определение. Сделать это можно так:</target>
        </trans-unit>
        <trans-unit id="6efb7988bcf68e6a2f95773375f6e046c871845c" translate="yes" xml:space="preserve">
          <source>If a daemon was requested, it calls &lt;code&gt;server-start&lt;/code&gt;. (On POSIX systems, if a background daemon was requested, it then detaches from the controlling terminal.) See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html#Emacs-Server&quot;&gt;Emacs Server&lt;/a&gt; in</source>
          <target state="translated">Если был запрошен демон, он вызывает &lt;code&gt;server-start&lt;/code&gt; . (В системах POSIX, если был запрошен фоновый демон, он затем отсоединяется от управляющего терминала.) См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html#Emacs-Server&quot;&gt;Emacs Server&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="0eec4f909bc2a2b8d762de836142aa6d9abdc05e" translate="yes" xml:space="preserve">
          <source>If a file has a &amp;lsquo;</source>
          <target state="translated">Если у файла есть '</target>
        </trans-unit>
        <trans-unit id="f449b7603d80817180abb3dea84db94c1bc2d093" translate="yes" xml:space="preserve">
          <source>If a file name handler is invoked, it determines the program to run based on the first argument &lt;var&gt;program&lt;/var&gt;. For instance, suppose that a handler for remote files is invoked. Then the path that is used for searching for the program might be different from &lt;code&gt;exec-path&lt;/code&gt;.</source>
          <target state="translated">Если вызывается обработчик имени файла, он определяет программу для запуска на основе первого аргумента &lt;var&gt;program&lt;/var&gt; . Например, предположим, что запущен обработчик удаленных файлов. Тогда путь, который используется для поиска программы, может отличаться от &lt;code&gt;exec-path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="009f7589e473df75e8be2a540f5e95f30abe2214" translate="yes" xml:space="preserve">
          <source>If a file&amp;rsquo;s name is</source>
          <target state="translated">Если имя файла</target>
        </trans-unit>
        <trans-unit id="909ad20685056441977aa0878c59a154ccf3d576" translate="yes" xml:space="preserve">
          <source>If a file-local variable could specify an arbitrary function or Lisp expression that would be called later, visiting a file could take over your Emacs. Emacs protects against this by automatically setting only those file-local variables whose specified values are known to be safe. Other file-local variables are set only if the user agrees.</source>
          <target state="translated">Если файловая локальная переменная может указать произвольную функцию или выражение Lisp,которое будет вызвано позже,то посещение файла может взять на себя ваш Emacs.Emacs защищает от этого,автоматически устанавливая только те файлово-локальные переменные,указанные значения которых,как известно,безопасны.Остальные файл-локальные переменные устанавливаются только при согласии пользователя.</target>
        </trans-unit>
        <trans-unit id="b6da7e96e65ba0f36317067a20d84bd5da2d1d3d" translate="yes" xml:space="preserve">
          <source>If a frame has a non-&lt;code&gt;nil&lt;/code&gt; title, it appears in the window system&amp;rsquo;s title bar at the top of the frame, and also in the mode line of windows in that frame if &lt;code&gt;mode-line-frame-identification&lt;/code&gt; uses &amp;lsquo;</source>
          <target state="translated">Если заголовок фрейма не равен &lt;code&gt;nil&lt;/code&gt; , он отображается в строке заголовка оконной системы в верхней части фрейма, а также в строке режима окон в этом фрейме, если в &lt;code&gt;mode-line-frame-identification&lt;/code&gt; используется '</target>
        </trans-unit>
        <trans-unit id="23e66a655fb8d036410d6e10616867d04de9b35f" translate="yes" xml:space="preserve">
          <source>If a frame has evaluated its arguments and called its function already, &lt;var&gt;evald&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; and &lt;var&gt;args&lt;/var&gt; is a list of values. &lt;var&gt;flags&lt;/var&gt; is a plist of properties of the current frame: currently, the only supported property is &lt;code&gt;:debug-on-exit&lt;/code&gt;, which is &lt;code&gt;t&lt;/code&gt; if the stack frame&amp;rsquo;s &lt;code&gt;debug-on-exit&lt;/code&gt; flag is set.</source>
          <target state="translated">Если фрейм уже оценил свои аргументы и вызвал свою функцию, &lt;var&gt;evald&lt;/var&gt; - это &lt;code&gt;t&lt;/code&gt; , а &lt;var&gt;args&lt;/var&gt; - это список значений. &lt;var&gt;flags&lt;/var&gt; - это список свойств текущего кадра: в настоящее время поддерживается только одно свойство &lt;code&gt;:debug-on-exit&lt;/code&gt; , что равно &lt;code&gt;t&lt;/code&gt; , если установлен флаг &lt;code&gt;debug-on-exit&lt;/code&gt; кадра стека .</target>
        </trans-unit>
        <trans-unit id="1d9e46c7c1be49972c908c4bcd8928513196de0b" translate="yes" xml:space="preserve">
          <source>If a frame has not evaluated its arguments yet or is a special form, &lt;var&gt;evald&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; and &lt;var&gt;args&lt;/var&gt; is a list of forms.</source>
          <target state="translated">Если фрейм еще не оценил свои аргументы или является специальной формой, &lt;var&gt;evald&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; а &lt;var&gt;args&lt;/var&gt; - это список форм.</target>
        </trans-unit>
        <trans-unit id="8ad4d628235cb3816a950ab23fc8cbae997732d6" translate="yes" xml:space="preserve">
          <source>If a function in &lt;code&gt;emacs-save-session-functions&lt;/code&gt; returns non-&lt;code&gt;nil&lt;/code&gt;, Emacs tells the session manager to cancel the shutdown.</source>
          <target state="translated">Если функция в &lt;code&gt;emacs-save-session-functions&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; , Emacs сообщает диспетчеру сеансов отменить завершение работы.</target>
        </trans-unit>
        <trans-unit id="2a0938ebf0b2e6eda3af83386b59338c24d1a6ac" translate="yes" xml:space="preserve">
          <source>If a function in &lt;code&gt;write-file-functions&lt;/code&gt; returns non-&lt;code&gt;nil&lt;/code&gt;, it is responsible for making a backup file (if that is appropriate). To do so, execute the following code:</source>
          <target state="translated">Если функция в &lt;code&gt;write-file-functions&lt;/code&gt; возвращает отличное от &lt;code&gt;nil&lt;/code&gt; , она отвечает за создание файла резервной копии (если это уместно). Для этого выполните следующий код:</target>
        </trans-unit>
        <trans-unit id="45a2004aa694211fb63e30f8d45131d77ed77910" translate="yes" xml:space="preserve">
          <source>If a function name is underlined, that means Emacs knows where its source code is located. You can click with the mouse on that name, or move to it and type</source>
          <target state="translated">Если имя функции подчеркнуто,это означает,что Emacs знает,где находится ее исходный код.Вы можете щелкнуть мышью на этом имени,или перейти к нему и набрать</target>
        </trans-unit>
        <trans-unit id="bc9fb1fbe9e79ab7e7987eb4809776d1373f2542" translate="yes" xml:space="preserve">
          <source>If a given family is specified but does not exist, this variable specifies alternative font families to try. Each element should have this form:</source>
          <target state="translated">Если заданное семейство указано,но не существует,то эта переменная определяет альтернативные семейства шрифтов,которые следует попробовать.Каждый элемент должен иметь такую форму:</target>
        </trans-unit>
        <trans-unit id="7163e535874a24fb9a92945549690ad69c9b9c91" translate="yes" xml:space="preserve">
          <source>If a group of consecutive characters have equal and non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;intangible&lt;/code&gt; properties, then you cannot place point between them. If you try to move point forward into the group, point actually moves to the end of the group. If you try to move point backward into the group, point actually moves to the start of the group.</source>
          <target state="translated">Если группа последовательных символов имеет равные и отличные от &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;intangible&lt;/code&gt; свойства, то вы не можете разместить точку между ними. Если вы попытаетесь переместить точку в группу, точка фактически переместится в конец группы. Если вы попытаетесь переместить точку назад в группу, точка фактически переместится в начало группы.</target>
        </trans-unit>
        <trans-unit id="4daee049e0d024cf26498e0b0e1e416e277242ec" translate="yes" xml:space="preserve">
          <source>If a hook variable has a non-&lt;code&gt;nil&lt;/code&gt; value, that value should be a list of functions. &lt;code&gt;run-hooks&lt;/code&gt; calls all the functions, one by one, with no arguments.</source>
          <target state="translated">Если переменная-ловушка имеет &lt;code&gt;nil&lt;/code&gt; значение, это значение должно быть списком функций. &lt;code&gt;run-hooks&lt;/code&gt; вызывает все функции одну за другой без аргументов.</target>
        </trans-unit>
        <trans-unit id="fae7e2f6e8ad8c2b2c1155f361ef0b2395901d47" translate="yes" xml:space="preserve">
          <source>If a key is defined as a prefix in more than one active map, then its various definitions are in effect merged: the commands defined in the minor mode keymaps come first, followed by those in the local map&amp;rsquo;s prefix definition, and then by those from the global map.</source>
          <target state="translated">Если ключ определен как префикс более чем в одной активной карте, то его различные определения фактически объединяются: сначала идут команды, определенные в таблицах клавиш вспомогательного режима, затем следуют команды в определении префикса локальной карты, а затем - команды из глобальная карта.</target>
        </trans-unit>
        <trans-unit id="3e325f3f0bffc2b381cfd7f40aec87ce62ca6bdd" translate="yes" xml:space="preserve">
          <source>If a list of display specifications includes more than one replacing display specification, the first overrides the rest. Replacing display specifications make most other display specifications irrelevant, since those don&amp;rsquo;t apply to the replacement.</source>
          <target state="translated">Если список спецификаций дисплея включает более одной заменяющей спецификации дисплея, первая имеет приоритет над остальными. Замена спецификаций дисплея делает большинство других характеристик дисплея неактуальными, поскольку они не относятся к замене.</target>
        </trans-unit>
        <trans-unit id="98c0cfaa42fee87c09b24c943a05698f58091bee" translate="yes" xml:space="preserve">
          <source>If a macro has a helper function to build its result, and that macro is used both locally and outside the package, then &lt;code&gt;eval-and-compile&lt;/code&gt; should be used to get the helper both when compiling and then later when running.</source>
          <target state="translated">Если у макроса есть вспомогательная функция для построения своего результата, и этот макрос используется как локально, так и вне пакета, то для получения помощника следует использовать &lt;code&gt;eval-and-compile&lt;/code&gt; как при компиляции, так и позже при запуске.</target>
        </trans-unit>
        <trans-unit id="71012494381897ae21b221e46898bd150769e458" translate="yes" xml:space="preserve">
          <source>If a macro has no Edebug specification, neither through a &lt;code&gt;debug&lt;/code&gt; declaration nor through a &lt;code&gt;def-edebug-spec&lt;/code&gt; call, the variable &lt;code&gt;edebug-eval-macro-args&lt;/code&gt; comes into play.</source>
          <target state="translated">Если макрос не имеет спецификации Edebug, ни через объявление &lt;code&gt;debug&lt;/code&gt; ни через вызов &lt;code&gt;def-edebug-spec&lt;/code&gt; , в &lt;code&gt;edebug-eval-macro-args&lt;/code&gt; переменная edebug-eval-macro-args .</target>
        </trans-unit>
        <trans-unit id="548e6e96fe74dbbc73fe3dcae50bba962c7fd3f9" translate="yes" xml:space="preserve">
          <source>If a module needs to call Emacs functions, it should do so through the</source>
          <target state="translated">Если модулю необходимо вызвать функции Emacs,он должен сделать это через команду</target>
        </trans-unit>
        <trans-unit id="438931f48764200c63d972c27896bd946ba67b5f" translate="yes" xml:space="preserve">
          <source>If a newline character has this property, it is a &amp;ldquo;hard&amp;rdquo; newline. The fill commands do not alter hard newlines and do not move words across them. However, this property takes effect only if the &lt;code&gt;use-hard-newlines&lt;/code&gt; minor mode is enabled. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Hard-and-Soft-Newlines.html#Hard-and-Soft-Newlines&quot;&gt;Hard and Soft Newlines&lt;/a&gt; in</source>
          <target state="translated">Если символ новой строки имеет это свойство, это &amp;laquo;жесткий&amp;raquo; перевод строки. Команды заполнения не изменяют жесткие символы новой строки и не перемещают слова по ним. Однако это свойство действует только в том случае, если включен второстепенный режим &lt;code&gt;use-hard-newlines&lt;/code&gt; . См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Hard-and-Soft-Newlines.html#Hard-and-Soft-Newlines&quot;&gt;Жесткие и мягкие символы новой строки&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="cf898f148459e4667a515d27fdc45dec6967774c" translate="yes" xml:space="preserve">
          <source>If a part of &lt;var&gt;body&lt;/var&gt; binds &lt;code&gt;inhibit-quit&lt;/code&gt; to non-&lt;code&gt;nil&lt;/code&gt;, arrival of input during those parts won&amp;rsquo;t cause an abort until the end of that part.</source>
          <target state="translated">Если часть &lt;var&gt;body&lt;/var&gt; привязывается к &amp;laquo; &lt;code&gt;inhibit-quit&lt;/code&gt; отличному от &lt;code&gt;nil&lt;/code&gt; , поступление ввода во время этих частей не вызовет прерывания до конца этой части.</target>
        </trans-unit>
        <trans-unit id="61692cd8db0d28fecba2475130992ccef1b3727c" translate="yes" xml:space="preserve">
          <source>If a particular grouping construct in the regular expression was never matched&amp;mdash;for instance, if it appears inside of an alternative that wasn&amp;rsquo;t used, or inside of a repetition that repeated zero times&amp;mdash;then the corresponding &amp;lsquo;</source>
          <target state="translated">Если конкретная конструкция группирования в регулярном выражении никогда не была сопоставлена ​​- например, если она появляется внутри альтернативы, которая не использовалась, или внутри повторения, которое повторяется ноль раз, - тогда соответствующий '</target>
        </trans-unit>
        <trans-unit id="af4fe3395c8b45518750584483251291bcceffcb" translate="yes" xml:space="preserve">
          <source>If a problem occurs when you run the program, you can use the built-in Emacs Lisp debugger to suspend the Lisp evaluator, and examine and/or alter its internal state.</source>
          <target state="translated">Если при запуске программы возникает проблема,вы можете использовать встроенный отладчик Emacs Lisp,чтобы приостановить работу вычислителя Lisp,а также проверить и/или изменить его внутреннее состояние.</target>
        </trans-unit>
        <trans-unit id="243106beefd7f4681b63a362a29ccf5e5ae51a7e" translate="yes" xml:space="preserve">
          <source>If a program attempts to change objects that should not be changed, the resulting behavior is undefined: the Lisp interpreter might signal an error, or it might crash or behave unpredictably in other ways.&lt;a href=&quot;#FOOT2&quot; name=&quot;DOCF2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;</source>
          <target state="translated">Если программа пытается изменить объекты, которые не должны быть изменены, результирующее поведение не определено: интерпретатор Лисп может сигнализировать об ошибке, или он может аварийно завершить работу или вести себя непредсказуемо по-другому. &lt;a href=&quot;#FOOT2&quot; name=&quot;DOCF2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c435d12951a941c540a76edf63e274f49c4fb461" translate="yes" xml:space="preserve">
          <source>If a program makes several text changes in the same area of the buffer, using the macro &lt;code&gt;combine-after-change-calls&lt;/code&gt; around that part of the program can make it run considerably faster when after-change hooks are in use. When the after-change hooks are ultimately called, the arguments specify a portion of the buffer including all of the changes made within the &lt;code&gt;combine-after-change-calls&lt;/code&gt; body.</source>
          <target state="translated">Если программа вносит несколько изменений текста в одну и ту же область буфера, использование макроса, &lt;code&gt;combine-after-change-calls&lt;/code&gt; в этой части программы, может значительно ускорить ее выполнение при использовании ловушек после изменения. Когда в конечном итоге вызываются перехватчики после изменения, аргументы определяют часть буфера, включая все изменения, сделанные в теле &lt;code&gt;combine-after-change-calls&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d81a2b42f603297bebed05ca83ccda1b8a78048" translate="yes" xml:space="preserve">
          <source>If a specification fails to match at some point, this does not necessarily mean a syntax error will be signaled; instead, &lt;em&gt;backtracking&lt;/em&gt; will take place until all alternatives have been exhausted. Eventually every element of the argument list must be matched by some element in the specification, and every required element in the specification must match some argument.</source>
          <target state="translated">Если спецификация не соответствует в какой-то момент, это не обязательно означает, что будет сигнализироваться синтаксическая ошибка; вместо этого будет выполняться &lt;em&gt;обратное отслеживание&lt;/em&gt; до тех пор, пока не будут исчерпаны все альтернативы. В конце концов, каждому элементу списка аргументов должен соответствовать некоторый элемент в спецификации, и каждый требуемый элемент в спецификации должен соответствовать некоторому аргументу.</target>
        </trans-unit>
        <trans-unit id="7ba26fa136b6d3f5f0d0bae4d89c52641ff643b4" translate="yes" xml:space="preserve">
          <source>If a subexpression of a backquote construct has no substitutions or splices, it acts like &lt;code&gt;quote&lt;/code&gt; in that it yields conses, vectors and strings that might be shared and should not be modified. See &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;Self-Evaluating Forms&lt;/a&gt;.</source>
          <target state="translated">Если подвыражение конструкции обратных кавычек не имеет замен или сращиваний, оно действует как &lt;code&gt;quote&lt;/code&gt; , так как дает конусы, векторы и строки, которые могут использоваться совместно и не должны изменяться. См. &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;Формы для самооценки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="514160586b0a8e80be8af506a6edc7f6e6ac6e26" translate="yes" xml:space="preserve">
          <source>If a symbol with the desired name is found, the reader uses that symbol. If the obarray does not contain a symbol with that name, the reader makes a new symbol and adds it to the obarray. Finding or adding a symbol with a certain name is called &lt;em&gt;interning&lt;/em&gt; it, and the symbol is then called an &lt;em&gt;interned symbol&lt;/em&gt;.</source>
          <target state="translated">Если символ с желаемым именем найден, читатель использует этот символ. Если obarray не содержит символа с таким именем, средство чтения создает новый символ и добавляет его в obarray. Поиск или добавление символа с определенным именем называется &lt;em&gt;интернированием&lt;/em&gt; , а затем этот символ называется &lt;em&gt;интернированным символом&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5792ba55fa583eab230c2719559e8b5d0ed2308f" translate="yes" xml:space="preserve">
          <source>If a syntactic problem is preventing Lisp from even reading the program, you can locate it using Lisp editing commands.</source>
          <target state="translated">Если синтаксическая проблема мешает Lisp даже читать программу,вы можете найти ее,используя команды редактирования Lisp.</target>
        </trans-unit>
        <trans-unit id="bffb687fbdff53add60c8beb535d1c15fcec78ae" translate="yes" xml:space="preserve">
          <source>If a timer function calls functions that can change the match data, it should save and restore the match data. See &lt;a href=&quot;saving-match-data#Saving-Match-Data&quot;&gt;Saving Match Data&lt;/a&gt;.</source>
          <target state="translated">Если функция таймера вызывает функции, которые могут изменять данные соответствия, она должна сохранять и восстанавливать данные соответствия. См. &lt;a href=&quot;saving-match-data#Saving-Match-Data&quot;&gt;Сохранение данных матча&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1a3dab018b18bf5dc87ccab46352179b2b3b307c" translate="yes" xml:space="preserve">
          <source>If a variable appears as an element of &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt;, the map specified by that element totally replaces any map specified for the same variable in &lt;code&gt;minor-mode-map-alist&lt;/code&gt;.</source>
          <target state="translated">Если переменная появляется как элемент &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt; , карта, указанная этим элементом, полностью заменяет любую карту, указанную для той же переменной в &lt;code&gt;minor-mode-map-alist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02cb55f35f85cb2854d347ba342c503214f2b062" translate="yes" xml:space="preserve">
          <source>If a window&amp;rsquo;s pixel height is not an integral multiple of its frame&amp;rsquo;s default character height, the number of lines occupied by the window is rounded internally. This is done in a way such that, if the window is a parent window, the sum of the total heights of all its child windows internally equals the total height of their parent. This means that although two windows have the same pixel height, their internal total heights may differ by one line. This means also, that if window is vertically combined and has a next sibling, the topmost row of that sibling can be calculated as the sum of this window&amp;rsquo;s topmost row and total height (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;)</source>
          <target state="translated">Если высота в пикселях окна не является целым числом, кратным высоте символа его фрейма по умолчанию, количество строк, занимаемых окном, округляется внутри. Это делается таким образом, что, если окно является родительским окном, сумма общих высот всех его дочерних окон внутренне равна общей высоте их родительского окна. Это означает, что хотя два окна имеют одинаковую высоту в пикселях, их внутренняя общая высота может отличаться на одну строку. Это также означает, что если окно объединено по вертикали и имеет следующего брата, самая верхняя строка этого брата может быть рассчитана как сумма самой верхней строки этого окна и общей высоты (см. &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Координаты и окна&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="ef0b95c50f0eef3857eb543b00e33c0bcde5709c" translate="yes" xml:space="preserve">
          <source>If a window&amp;rsquo;s pixel width is not an integral multiple of its frame&amp;rsquo;s character width, the number of lines occupied by the window is rounded internally. This is done in a way such that, if the window is a parent window, the sum of the total widths of all its children internally equals the total width of their parent. This means that although two windows have the same pixel width, their internal total widths may differ by one column. This means also, that if this window is horizontally combined and has a next sibling, the leftmost column of that sibling can be calculated as the sum of this window&amp;rsquo;s leftmost column and total width (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;). The optional argument &lt;var&gt;round&lt;/var&gt; behaves as it does for &lt;code&gt;window-total-height&lt;/code&gt;.</source>
          <target state="translated">Если ширина окна в пикселях не является целым кратным ширине символа его фрейма, количество строк, занимаемых окном, округляется внутри. Это делается таким образом, что, если окно является родительским окном, сумма общей ширины всех его дочерних элементов внутри равна общей ширине их родительского окна. Это означает, что хотя два окна имеют одинаковую ширину в пикселях, их внутренняя общая ширина может отличаться на один столбец. Это также означает, что если это окно объединено по горизонтали и имеет следующего брата, крайний левый столбец этого родственного элемента может быть вычислен как сумма самого левого столбца этого окна и общей ширины (см. &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Координаты и окна&lt;/a&gt; ). Необязательный аргумент &lt;var&gt;round&lt;/var&gt; ведет себя так же, как и для &lt;code&gt;window-total-height&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f54ed66047ff25005c5a27d3c92a34578c06887" translate="yes" xml:space="preserve">
          <source>If actual arguments for the optional and rest variables are omitted, then they always default to &lt;code&gt;nil&lt;/code&gt;. There is no way for the function to distinguish between an explicit argument of &lt;code&gt;nil&lt;/code&gt; and an omitted argument. However, the body of the function is free to consider &lt;code&gt;nil&lt;/code&gt; an abbreviation for some other meaningful value. This is what &lt;code&gt;substring&lt;/code&gt; does; &lt;code&gt;nil&lt;/code&gt; as the third argument to &lt;code&gt;substring&lt;/code&gt; means to use the length of the string supplied.</source>
          <target state="translated">Если фактические аргументы для дополнительных переменных и переменных отдыха опущены, они всегда по умолчанию равны &lt;code&gt;nil&lt;/code&gt; . Функция не может отличить явный аргумент &lt;code&gt;nil&lt;/code&gt; от пропущенного аргумента. Однако тело функции может рассматривать &lt;code&gt;nil&lt;/code&gt; как сокращение для какого-либо другого значимого значения. Это то, что делает &lt;code&gt;substring&lt;/code&gt; ; &lt;code&gt;nil&lt;/code&gt; в качестве третьего аргумента &lt;code&gt;substring&lt;/code&gt; означает использование длины предоставленной строки.</target>
        </trans-unit>
        <trans-unit id="4dd0b048a1ae42f26f486c26d115d7212b1fef97" translate="yes" xml:space="preserve">
          <source>If all of these functions return &lt;code&gt;nil&lt;/code&gt;, then the argument is treated as a file name to visit.</source>
          <target state="translated">Если все эти функции возвращают &lt;code&gt;nil&lt;/code&gt; , то аргумент рассматривается как имя файла для посещения.</target>
        </trans-unit>
        <trans-unit id="80c524a9180c48af0283044015fb44d72905d3db" translate="yes" xml:space="preserve">
          <source>If all the &lt;var&gt;conditions&lt;/var&gt; turn out &lt;code&gt;nil&lt;/code&gt;, then the &lt;code&gt;or&lt;/code&gt; expression returns &lt;code&gt;nil&lt;/code&gt;. Just &lt;code&gt;(or)&lt;/code&gt;, with no &lt;var&gt;conditions&lt;/var&gt;, returns &lt;code&gt;nil&lt;/code&gt;, appropriate because all the &lt;var&gt;conditions&lt;/var&gt; turned out &lt;code&gt;nil&lt;/code&gt;. (Think about it; which one did not?)</source>
          <target state="translated">Если все &lt;var&gt;conditions&lt;/var&gt; оказываются &lt;code&gt;nil&lt;/code&gt; , то выражение &lt;code&gt;or&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; . Just &lt;code&gt;(or)&lt;/code&gt; без &lt;var&gt;conditions&lt;/var&gt; возвращает &lt;code&gt;nil&lt;/code&gt; , что является подходящим, поскольку все &lt;var&gt;conditions&lt;/var&gt; оказались &lt;code&gt;nil&lt;/code&gt; . (Подумайте об этом; какой из них нет?)</target>
        </trans-unit>
        <trans-unit id="9d8206c2839ebaaa2594473d36a35256669c56e5" translate="yes" xml:space="preserve">
          <source>If all the &lt;var&gt;conditions&lt;/var&gt; turn out non-&lt;code&gt;nil&lt;/code&gt;, then the value of the last of them becomes the value of the &lt;code&gt;and&lt;/code&gt; form. Just &lt;code&gt;(and)&lt;/code&gt;, with no &lt;var&gt;conditions&lt;/var&gt;, returns &lt;code&gt;t&lt;/code&gt;, appropriate because all the &lt;var&gt;conditions&lt;/var&gt; turned out non-&lt;code&gt;nil&lt;/code&gt;. (Think about it; which one did not?)</source>
          <target state="translated">Если все &lt;var&gt;conditions&lt;/var&gt; оказываются не- &lt;code&gt;nil&lt;/code&gt; , то значение последнего из них становится значение &lt;code&gt;and&lt;/code&gt; формы. Just &lt;code&gt;(and)&lt;/code&gt; без &lt;var&gt;conditions&lt;/var&gt; возвращает &lt;code&gt;t&lt;/code&gt; , что является подходящим, поскольку все &lt;var&gt;conditions&lt;/var&gt; оказались &lt;code&gt;nil&lt;/code&gt; . (Подумайте об этом; какой из них нет?)</target>
        </trans-unit>
        <trans-unit id="d7d69013792720d185b2b66133b846cd99c6e339" translate="yes" xml:space="preserve">
          <source>If all the arguments are integers, the result is an integer, obtained by rounding the quotient towards zero after each division.</source>
          <target state="translated">Если все аргументы являются целыми числами,то результатом будет целое число,полученное путем округления кватитета до нуля после каждого деления.</target>
        </trans-unit>
        <trans-unit id="a66d8e038907512ea75e34f80ae5aca0011c55e8" translate="yes" xml:space="preserve">
          <source>If all the characters in the range specified for &lt;code&gt;buffer-substring&lt;/code&gt; have a non-&lt;code&gt;nil&lt;/code&gt; value for this property, &lt;code&gt;buffer-substring&lt;/code&gt; does not call the &lt;code&gt;buffer-access-fontify-functions&lt;/code&gt; functions. It assumes these characters already have the right text properties, and just copies the properties they already have.</source>
          <target state="translated">Если все символы в диапазоне, указанном для &lt;code&gt;buffer-substring&lt;/code&gt; , имеют &lt;code&gt;nil&lt;/code&gt; значение для этого свойства, &lt;code&gt;buffer-substring&lt;/code&gt; не вызывает функции &lt;code&gt;buffer-access-fontify-functions&lt;/code&gt; functions. Предполагается, что эти символы уже имеют нужные текстовые свойства, и просто копирует те свойства, которые у них уже есть.</target>
        </trans-unit>
        <trans-unit id="74daf9e3ff4eb549cd541100a271641a4e2e3986" translate="yes" xml:space="preserve">
          <source>If an alist element matches &lt;var&gt;key&lt;/var&gt; by this criterion, then &lt;code&gt;assoc-default&lt;/code&gt; returns a value based on this element. If the element is a cons, then the value is the element&amp;rsquo;s &lt;small&gt;CDR&lt;/small&gt;. Otherwise, the return value is &lt;var&gt;default&lt;/var&gt;.</source>
          <target state="translated">Если элемент alist соответствует &lt;var&gt;key&lt;/var&gt; по этому критерию, то &lt;code&gt;assoc-default&lt;/code&gt; возвращает значение, основанное на этом элементе. Если элемент является минусом, то значением является &lt;small&gt;CDR&lt;/small&gt; элемента . В противном случае возвращается значение по &lt;var&gt;default&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="8bfdfc86e81d4db3fe90351ba0ef1fb79c3e2576" translate="yes" xml:space="preserve">
          <source>If an editor command sets this variable non-&lt;code&gt;nil&lt;/code&gt;, then the editor command loop deactivates the mark after the command returns (if Transient Mark mode is enabled). All the primitives that change the buffer set &lt;code&gt;deactivate-mark&lt;/code&gt;, to deactivate the mark when the command is finished. Setting this variable makes it buffer-local.</source>
          <target state="translated">Если команда редактора устанавливает эту переменную не &lt;code&gt;nil&lt;/code&gt; , то цикл команд редактора деактивирует метку после возврата команды (если включен режим временной метки). Все примитивы, которые изменяют буфер, устанавливают &lt;code&gt;deactivate-mark&lt;/code&gt; , чтобы деактивировать отметку, когда команда завершена. Установка этой переменной делает ее локальным для буфера.</target>
        </trans-unit>
        <trans-unit id="4b945adb45e9f446f56407d3dc48a6722aedabb2" translate="yes" xml:space="preserve">
          <source>If an element of &lt;code&gt;auto-mode-alist&lt;/code&gt; has the form &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt;
&lt;var&gt;function&lt;/var&gt; t)&lt;/code&gt;, then after calling &lt;var&gt;function&lt;/var&gt;, Emacs searches &lt;code&gt;auto-mode-alist&lt;/code&gt; again for a match against the portion of the file name that did not match before. This feature is useful for uncompression packages: an entry of the form &lt;code&gt;(&quot;\\.gz\\'&quot;
&lt;var&gt;function&lt;/var&gt; t)&lt;/code&gt; can uncompress the file and then put the uncompressed file in the proper mode according to the name sans &amp;lsquo;</source>
          <target state="translated">Если элемент &lt;code&gt;auto-mode-alist&lt;/code&gt; имеет форму &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; &lt;var&gt;function&lt;/var&gt; t)&lt;/code&gt; , то после вызова &lt;var&gt;function&lt;/var&gt; Emacs снова ищет &lt;code&gt;auto-mode-alist&lt;/code&gt; для совпадения с частью имени файла, которая не совпадала ранее. Эта функция полезна для пакетов без сжатия: запись формы &lt;code&gt;(&quot;\\.gz\\'&quot; &lt;var&gt;function&lt;/var&gt; t)&lt;/code&gt; может распаковать файл и затем поместить несжатый файл в соответствующий режим в соответствии с именем sans'</target>
        </trans-unit>
        <trans-unit id="1fd0bc1acf76a530f3520b116420dfdd3224243b" translate="yes" xml:space="preserve">
          <source>If an element of &lt;code&gt;completion-ignored-extensions&lt;/code&gt; ends in a slash &amp;lsquo;</source>
          <target state="translated">Если элемент &lt;code&gt;completion-ignored-extensions&lt;/code&gt; заканчивается косой чертой '</target>
        </trans-unit>
        <trans-unit id="f0bedb2e343491e22a55abc5e6b2edad751f20da" translate="yes" xml:space="preserve">
          <source>If an element of &lt;var&gt;display&lt;/var&gt; specifies more than one &lt;var&gt;value&lt;/var&gt; for a given &lt;var&gt;characteristic&lt;/var&gt;, any of those values is acceptable. If &lt;var&gt;display&lt;/var&gt; has more than one element, each element should specify a different &lt;var&gt;characteristic&lt;/var&gt;; then &lt;em&gt;each&lt;/em&gt; characteristic of the terminal must match one of the &lt;var&gt;value&lt;/var&gt;s specified for it in &lt;var&gt;display&lt;/var&gt;.</source>
          <target state="translated">Если элемент &lt;var&gt;display&lt;/var&gt; указывает более одного &lt;var&gt;value&lt;/var&gt; для данной &lt;var&gt;characteristic&lt;/var&gt; , любое из этих значений является приемлемым. Если &lt;var&gt;display&lt;/var&gt; имеет более одного элемента, каждый элемент должен указывать разные &lt;var&gt;characteristic&lt;/var&gt; ; тогда &lt;em&gt;каждая&lt;/em&gt; характеристика терминала должна соответствовать одному из &lt;var&gt;value&lt;/var&gt; указанных для нее на &lt;var&gt;display&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a0f85ef9bf7f78b5e45751f2cae294ae69e741d6" translate="yes" xml:space="preserve">
          <source>If an element of a keymap is a char-table, it counts as holding bindings for all character events with no modifier bits (see &lt;a href=&quot;other-char-bits#modifier-bits&quot;&gt;modifier bits&lt;/a&gt;): the element whose index is &lt;var&gt;c&lt;/var&gt; is the binding for the character &lt;var&gt;c&lt;/var&gt;. This is a compact way to record lots of bindings. A keymap with such a char-table is called a &lt;em&gt;full keymap&lt;/em&gt;. Other keymaps are called &lt;em&gt;sparse keymaps&lt;/em&gt;.</source>
          <target state="translated">Если элемент раскладки клавиатуры является таблицей символов, он считается удерживающими привязками для всех событий символа без битов модификатора (см. &lt;a href=&quot;other-char-bits#modifier-bits&quot;&gt;Биты модификатора&lt;/a&gt; ): элемент с индексом &lt;var&gt;c&lt;/var&gt; является привязкой для символа &lt;var&gt;c&lt;/var&gt; . Это компактный способ записать множество привязок. Раскладка с такой таблицей символов называется &lt;em&gt;полной раскладкой&lt;/em&gt; . Другие раскладки клавиатуры называются &lt;em&gt;разреженными раскладками&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c9922dfd72e7c6301d3e7e3226411370e6e9e816" translate="yes" xml:space="preserve">
          <source>If an element of a keymap is itself a keymap, it counts as if this inner keymap were inlined in the outer keymap. This is used for multiple-inheritance, such as in &lt;code&gt;make-composed-keymap&lt;/code&gt;.</source>
          <target state="translated">Если элемент раскладки клавиатуры сам по себе является раскладкой, он считается так, как если бы эта внутренняя раскладка была встроена во внешнюю раскладку. Это используется для множественного наследования, например, в &lt;code&gt;make-composed-keymap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="794700a26b21d88036a1d6d6c1bb7a8042db8bd7" translate="yes" xml:space="preserve">
          <source>If an error (or other nonlocal exit) occurs inside the body of &lt;code&gt;atomic-change-group&lt;/code&gt;, it unmakes all the changes in that buffer that were during the execution of the body. This kind of change group has no effect on any other buffers&amp;mdash;any such changes remain.</source>
          <target state="translated">Если ошибка (или другой нелокальный выход) происходит внутри тела &lt;code&gt;atomic-change-group&lt;/code&gt; , он отменяет все изменения в этом буфере, которые были во время выполнения тела. Такой тип группы изменений не влияет на другие буферы - любые такие изменения остаются.</target>
        </trans-unit>
        <trans-unit id="b96d2db48a3e38faee5fded775347f9916a661df" translate="yes" xml:space="preserve">
          <source>If an error happens during execution of a filter function, it is caught automatically, so that it doesn&amp;rsquo;t stop the execution of whatever program was running when the filter function was started. However, if &lt;code&gt;debug-on-error&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, errors are not caught. This makes it possible to use the Lisp debugger to debug filter functions. See &lt;a href=&quot;debugger#Debugger&quot;&gt;Debugger&lt;/a&gt;.</source>
          <target state="translated">Если ошибка происходит во время выполнения функции фильтра, она перехватывается автоматически, чтобы не останавливать выполнение любой программы, которая выполнялась при запуске функции фильтрации. Однако, если &lt;code&gt;debug-on-error&lt;/code&gt; равна &lt;code&gt;nil&lt;/code&gt; , ошибки не обнаруживаются. Это позволяет использовать отладчик Lisp для отладки функций фильтрации. См. &lt;a href=&quot;debugger#Debugger&quot;&gt;Отладчик&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="16d5d6b6ed23920d3d7ce1f0ad21aad044d422f0" translate="yes" xml:space="preserve">
          <source>If an error happens during execution of a sentinel, it is caught automatically, so that it doesn&amp;rsquo;t stop the execution of whatever programs was running when the sentinel was started. However, if &lt;code&gt;debug-on-error&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, errors are not caught. This makes it possible to use the Lisp debugger to debug the sentinel. See &lt;a href=&quot;debugger#Debugger&quot;&gt;Debugger&lt;/a&gt;.</source>
          <target state="translated">Если во время выполнения дозорного происходит ошибка, она перехватывается автоматически, чтобы не останавливать выполнение любых программ, которые выполнялись при запуске дозорного. Однако, если &lt;code&gt;debug-on-error&lt;/code&gt; равна &lt;code&gt;nil&lt;/code&gt; , ошибки не обнаруживаются. Это позволяет использовать отладчик Lisp для отладки дозорного. См. &lt;a href=&quot;debugger#Debugger&quot;&gt;Отладчик&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7576496955d9c8fe66999ffe6ac9638a3d4b0d14" translate="yes" xml:space="preserve">
          <source>If an error is handled by some &lt;code&gt;condition-case&lt;/code&gt; form, this ordinarily prevents the debugger from being run, even if &lt;code&gt;debug-on-error&lt;/code&gt; says this error should invoke the debugger.</source>
          <target state="translated">Если ошибка обрабатывается какой &lt;code&gt;condition-case&lt;/code&gt; формой случая , это обычно предотвращает запуск отладчика, даже если &lt;code&gt;debug-on-error&lt;/code&gt; сообщает, что эта ошибка должна вызвать отладчик.</target>
        </trans-unit>
        <trans-unit id="bb1089078e8bda3d5179947460aa8b6a9afdccb9" translate="yes" xml:space="preserve">
          <source>If an error occurs during an evaluation from the evaluation list, the error message is displayed in a string as if it were the result. Therefore, expressions using variables that are not currently valid do not interrupt your debugging.</source>
          <target state="translated">Если во время обработки из списка оценок происходит ошибка,сообщение об ошибке отображается в строке,как если бы это был результат.Поэтому выражения,использующие переменные,которые на данный момент недействительны,не прерывают отладку.</target>
        </trans-unit>
        <trans-unit id="cd204baa76eb198b8d26040a8681eac19d3a32a6" translate="yes" xml:space="preserve">
          <source>If an error was signaled, presumably the variable &lt;code&gt;debug-on-error&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. If &lt;code&gt;quit&lt;/code&gt; was signaled, then presumably the variable &lt;code&gt;debug-on-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если была обнаружена ошибка, предположительно, переменная &lt;code&gt;debug-on-error&lt;/code&gt; не равна &lt;code&gt;nil&lt;/code&gt; . Если был получен сигнал о &lt;code&gt;quit&lt;/code&gt; , то, вероятно, переменная &lt;code&gt;debug-on-quit&lt;/code&gt; не равна &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ac4638e34f448d2176b52875ef4f2ae48a1c64a" translate="yes" xml:space="preserve">
          <source>If an expression in your program produces a value containing circular list structure, you may get an error when Edebug attempts to print it.</source>
          <target state="translated">Если выражение в вашей программе выдает значение,содержащее круговую структуру списка,вы можете получить ошибку,когда Edebug попытается его распечатать.</target>
        </trans-unit>
        <trans-unit id="83e95e3593e5ba7d75e8a5f81e09496856f8762e" translate="yes" xml:space="preserve">
          <source>If an expression&amp;rsquo;s first symbol is that of a special form, the expression should follow the rules of that special form; otherwise, Emacs&amp;rsquo;s behavior is not well-defined (though it will not crash). For example, &lt;code&gt;((lambda (x) x . 3) 4)&lt;/code&gt; contains a subexpression that begins with &lt;code&gt;lambda&lt;/code&gt; but is not a well-formed &lt;code&gt;lambda&lt;/code&gt; expression, so Emacs may signal an error, or may return 3 or 4 or &lt;code&gt;nil&lt;/code&gt;, or may behave in other ways.</source>
          <target state="translated">Если первым символом выражения является символ особой формы, выражение должно следовать правилам этой особой формы; в противном случае поведение Emacs не определено четко (хотя и не произойдет сбой). Например, &lt;code&gt;((lambda (x) x . 3) 4)&lt;/code&gt; содержит подвыражение, которое начинается с &lt;code&gt;lambda&lt;/code&gt; но не является правильно сформированным &lt;code&gt;lambda&lt;/code&gt; выражением, поэтому Emacs может сигнализировать об ошибке или может возвращать 3 или 4 или &lt;code&gt;nil&lt;/code&gt; , или может вести себя иначе.</target>
        </trans-unit>
        <trans-unit id="ef63e3482304164515199599167722e126821fc8" translate="yes" xml:space="preserve">
          <source>If an image in the image cache has not been displayed for a specified period of time, Emacs removes it from the cache and frees the associated memory.</source>
          <target state="translated">Если изображение в кэше изображений не отображалось в течение определенного периода времени,Emacs удаляет его из кэша и освобождает связанную с ним память.</target>
        </trans-unit>
        <trans-unit id="b0b9eb6f1ea605f94ee0744cdcce85dafd0092ee" translate="yes" xml:space="preserve">
          <source>If an input character is upper-case (or has the shift modifier) and has no key binding, but its lower-case equivalent has one, then &lt;code&gt;read-key-sequence&lt;/code&gt; converts the character to lower case. Note that &lt;code&gt;lookup-key&lt;/code&gt; does not perform case conversion in this way.</source>
          <target state="translated">Если входной символ имеет верхний регистр (или имеет модификатор сдвига) и не имеет привязки клавиш, но его эквивалент в нижнем регистре имеет один регистр, то &lt;code&gt;read-key-sequence&lt;/code&gt; преобразует символ в нижний регистр. Обратите внимание, что &lt;code&gt;lookup-key&lt;/code&gt; не выполняет преобразование регистра таким образом.</target>
        </trans-unit>
        <trans-unit id="c978c7eeed0d2a8515ee8ca4aeb1040cc8a43019" translate="yes" xml:space="preserve">
          <source>If an overlay has a &lt;code&gt;category&lt;/code&gt; property, we call it the &lt;em&gt;category&lt;/em&gt; of the overlay. It should be a symbol. The properties of the symbol serve as defaults for the properties of the overlay.</source>
          <target state="translated">Если наложение имеет свойство &lt;code&gt;category&lt;/code&gt; , мы называем его &lt;em&gt;категорией&lt;/em&gt; наложения. Это должен быть символ. Свойства символа служат значениями по умолчанию для свойств наложения.</target>
        </trans-unit>
        <trans-unit id="c237ac180b9da966635d558c6b10abd0eea515bb" translate="yes" xml:space="preserve">
          <source>If an overlay has a &lt;code&gt;help-echo&lt;/code&gt; property, then when you move the mouse onto the text in the overlay, Emacs displays a help string in the echo area, or in the tooltip window. For details see &lt;a href=&quot;special-properties#Text-help_002decho&quot;&gt;Text help-echo&lt;/a&gt;.</source>
          <target state="translated">Если наложение имеет свойство &lt;code&gt;help-echo&lt;/code&gt; , тогда, когда вы наводите указатель мыши на текст наложения, Emacs отображает строку справки в эхо-области или в окне всплывающей подсказки. Для получения дополнительной информации см. &lt;a href=&quot;special-properties#Text-help_002decho&quot;&gt;Text help-echo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e7059e05227dc5f1ff385e286e4aadac14a7bb0" translate="yes" xml:space="preserve">
          <source>If any buffers are auto-saved, &lt;code&gt;do-auto-save&lt;/code&gt; normally displays a message saying &amp;lsquo;</source>
          <target state="translated">Если какие-либо буферы автоматически сохраняются, &lt;code&gt;do-auto-save&lt;/code&gt; обычно отображает сообщение с надписью '</target>
        </trans-unit>
        <trans-unit id="b398921f8b70f112936a79cd10e1c65e69b5289d" translate="yes" xml:space="preserve">
          <source>If any full-width windows are present, only those windows are considered. A minibuffer window is never a candidate. A dedicated window (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;) is never a candidate unless the optional argument &lt;var&gt;dedicated&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. The selected window is never returned, unless it is the only candidate. However, if the optional argument &lt;var&gt;not-selected&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns &lt;code&gt;nil&lt;/code&gt; in that case.</source>
          <target state="translated">Если есть какие-либо окна во всю ширину, учитываются только эти окна. Окно минибуфера никогда не является кандидатом. Выделенное окно (см. &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Выделенные окна&lt;/a&gt; ) никогда не является кандидатом, если необязательный аргумент &lt;var&gt;dedicated&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; . Выбранное окно никогда не возвращается, если только оно не является единственным кандидатом. Однако, если необязательный аргумент &lt;var&gt;not-selected&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , эта функция в этом случае возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7ea12623a225de3a0805b08cfcbf1a9f944e06a" translate="yes" xml:space="preserve">
          <source>If any function in &lt;code&gt;write-region-annotate-functions&lt;/code&gt; returns with a different buffer current, Emacs calls &lt;code&gt;write-region-post-annotation-function&lt;/code&gt; more than once. Emacs calls it with the last buffer that was current, and again with the buffer before that, and so on back to the original buffer.</source>
          <target state="translated">Если какая-либо функция в &lt;code&gt;write-region-annotate-functions&lt;/code&gt; возвращается с другим текущим буфером, Emacs вызывает &lt;code&gt;write-region-post-annotation-function&lt;/code&gt; более одного раза. Emacs вызывает его с последним буфером, который был текущим, и снова с буфером до этого, и так далее обратно к исходному буферу.</target>
        </trans-unit>
        <trans-unit id="207735bef0d8ecc047235f0cdc4365432c0e909e" translate="yes" xml:space="preserve">
          <source>If any given attribute has not been specified during the preceding steps, Emacs applies the attribute of the &lt;code&gt;default&lt;/code&gt; face.</source>
          <target state="translated">Если какой-либо атрибут не был задан на предыдущих шагах, Emacs применяет атрибут лица по &lt;code&gt;default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a4fd90c3d8ffc0107542304b0d34991bf68442f" translate="yes" xml:space="preserve">
          <source>If any of the &lt;var&gt;conditions&lt;/var&gt; evaluates to &lt;code&gt;nil&lt;/code&gt;, then the result of the &lt;code&gt;and&lt;/code&gt; must be &lt;code&gt;nil&lt;/code&gt; regardless of the remaining &lt;var&gt;conditions&lt;/var&gt;; so &lt;code&gt;and&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; right away, ignoring the remaining &lt;var&gt;conditions&lt;/var&gt;.</source>
          <target state="translated">Если какое-либо из &lt;var&gt;conditions&lt;/var&gt; оценивается как &lt;code&gt;nil&lt;/code&gt; , то результат &lt;code&gt;and&lt;/code&gt; должен быть равен &lt;code&gt;nil&lt;/code&gt; независимо от остальных &lt;var&gt;conditions&lt;/var&gt; ; so &lt;code&gt;and&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; , игнорируя остальные &lt;var&gt;conditions&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="fdf1f839b81c56a0c15cfb77ed81ec0e32313b36" translate="yes" xml:space="preserve">
          <source>If any of the &lt;var&gt;conditions&lt;/var&gt; evaluates to a non-&lt;code&gt;nil&lt;/code&gt; value, then the result of the &lt;code&gt;or&lt;/code&gt; must be non-&lt;code&gt;nil&lt;/code&gt;; so &lt;code&gt;or&lt;/code&gt; returns right away, ignoring the remaining &lt;var&gt;conditions&lt;/var&gt;. The value it returns is the non-&lt;code&gt;nil&lt;/code&gt; value of the condition just evaluated.</source>
          <target state="translated">Если какое-либо из &lt;var&gt;conditions&lt;/var&gt; оценивается как &lt;code&gt;nil&lt;/code&gt; значение, то результат &lt;code&gt;or&lt;/code&gt; должен быть &lt;code&gt;nil&lt;/code&gt; ; so &lt;code&gt;or&lt;/code&gt; возвращается сразу же, игнорируя остальные &lt;var&gt;conditions&lt;/var&gt; . Возвращаемое им значение является &lt;code&gt;nil&lt;/code&gt; значением только что оцененного условия.</target>
        </trans-unit>
        <trans-unit id="c49c4e3f88c006d5e147f8d6c7e243982a86546c" translate="yes" xml:space="preserve">
          <source>If any of the functions in this hook returns non-&lt;code&gt;nil&lt;/code&gt;, the file is considered already written and the rest are not called and neither are the functions in &lt;code&gt;write-file-functions&lt;/code&gt;.</source>
          <target state="translated">Если какая-либо из функций в этом хуке возвращает &lt;code&gt;nil&lt;/code&gt; , файл считается уже записанным, а остальные не вызываются, как и функции в &lt;code&gt;write-file-functions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01ea4c2d2042c831547f78252041f98a8f433fa9" translate="yes" xml:space="preserve">
          <source>If any of the specified values is zero, no window can be created on the corresponding side. &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; will not signal an error in that case, but will return &lt;code&gt;nil&lt;/code&gt;. If a specified value just forbids the creation of an additional side window, the most suitable window on that side is reused and may have its &lt;code&gt;window-slot&lt;/code&gt; parameter changed accordingly.</source>
          <target state="translated">Если любое из указанных значений равно нулю, на соответствующей стороне не может быть создано ни одного окна. &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; не будет сигнализировать об ошибке в этом случае, но вернет &lt;code&gt;nil&lt;/code&gt; . Если указанное значение просто запрещает создание дополнительного бокового окна, наиболее подходящее окно на этой стороне используется повторно и может иметь соответствующий параметр &lt;code&gt;window-slot&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="374b52ae64de7017caf47364121148c90657479f" translate="yes" xml:space="preserve">
          <source>If any other type of object is found, the events used so far in the lookup form a complete key, and the object is its binding, but the binding is not executable as a command.</source>
          <target state="translated">Если найден какой-либо другой тип объекта,то события,использованные до сих пор в поиске,являются полным ключом,а объект-его привязкой,но привязка не выполняется в виде команды.</target>
        </trans-unit>
        <trans-unit id="1d8e8479db6971bdadb82163778c2d31bd749b04" translate="yes" xml:space="preserve">
          <source>If any text in the region already has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;face&lt;/code&gt; property, those face(s) are retained. This function sets the &lt;code&gt;face&lt;/code&gt; property to a list of faces, with &lt;var&gt;face&lt;/var&gt; as the first element (by default) and the pre-existing faces as the remaining elements. If the optional argument &lt;var&gt;appendp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;face&lt;/var&gt; is appended to the end of the list instead. Note that in a face list, the first occurring value for each attribute takes precedence.</source>
          <target state="translated">Если какой-либо текст в области уже имеет свойство &lt;code&gt;face&lt;/code&gt; , отличное от &lt;code&gt;nil&lt;/code&gt; , эти лица сохраняются. Эта функция устанавливает свойство &lt;code&gt;face&lt;/code&gt; в список лиц, с &lt;var&gt;face&lt;/var&gt; в качестве первого элемента (по умолчанию) и ранее существовавших лиц в качестве оставшихся элементов. Если необязательный аргумент &lt;var&gt;appendp&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;face&lt;/var&gt; добавляется в конец списка. Обратите внимание, что в списке лиц первое встречающееся значение для каждого атрибута имеет приоритет.</target>
        </trans-unit>
        <trans-unit id="6f6bfe9f1061d8adf7f832f1826f0f50c0156163" translate="yes" xml:space="preserve">
          <source>If appropriate, it creates a graphical frame. As part of creating the graphical frame, it initializes the window system specified by &lt;code&gt;initial-frame-alist&lt;/code&gt; and &lt;code&gt;default-frame-alist&lt;/code&gt; (see &lt;a href=&quot;initial-parameters#Initial-Parameters&quot;&gt;Initial Parameters&lt;/a&gt;) for the graphical frame, by calling the &lt;code&gt;window-system-initialization&lt;/code&gt; function for that window system. This is not done in batch (noninteractive) or daemon mode.</source>
          <target state="translated">При необходимости он создает графический фрейм. Как часть создания графического фрейма, он инициализирует оконную систему, указанную в &lt;code&gt;initial-frame-alist&lt;/code&gt; и &lt;code&gt;default-frame-alist&lt;/code&gt; (см. &lt;a href=&quot;initial-parameters#Initial-Parameters&quot;&gt;Начальные параметры&lt;/a&gt; ) для графического фрейма, путем вызова функции &lt;code&gt;window-system-initialization&lt;/code&gt; оконной системы для этой оконной системы. Это не выполняется в пакетном (не интерактивном) режиме или режиме демона.</target>
        </trans-unit>
        <trans-unit id="0be5fcf223e7492c26c34f33aba4f7281833b444" translate="yes" xml:space="preserve">
          <source>If argument &lt;var&gt;preserve-uid-gid&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, we let the operating system decide the user and group ownership of the new file (this is usually set to the user running Emacs). If &lt;var&gt;preserve-uid-gid&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, we attempt to copy the user and group ownership of the file. This works only on some operating systems, and only if you have the correct permissions to do so.</source>
          <target state="translated">Если аргумент &lt;var&gt;preserve-uid-gid&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , мы позволяем операционной системе определять пользователя и группу, владеющую новым файлом (обычно это устанавливается для пользователя, запускающего Emacs). Если &lt;var&gt;preserve-uid-gid&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , мы пытаемся скопировать пользователя и группу, владеющую файлом. Это работает только в некоторых операционных системах и только в том случае, если у вас есть соответствующие разрешения.</target>
        </trans-unit>
        <trans-unit id="b901b43ecef22f92e6dad567b955ac1454dffa56" translate="yes" xml:space="preserve">
          <source>If at garbage collection time the undo info for the current command exceeds this limit, Emacs discards the info and displays a warning. This is a last ditch limit to prevent memory overflow.</source>
          <target state="translated">Если во время сбора мусора информация об отмене текущей команды превышает этот предел,Emacs отбрасывает эту информацию и выводит предупреждение.Это последний лимит канавы для предотвращения переполнения памяти.</target>
        </trans-unit>
        <trans-unit id="7a492759d0b9fd8e5bf98107c2695c5fae247780" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;:max-width&lt;/code&gt; and &lt;code&gt;:height&lt;/code&gt; are specified, but &lt;code&gt;:width&lt;/code&gt; is not, preserving the aspect ratio might require that width exceeds &lt;code&gt;:max-width&lt;/code&gt;. If this happens, scaling will use a smaller value for the height so as to preserve the aspect ratio while not exceeding &lt;code&gt;:max-width&lt;/code&gt;. Similarly when both &lt;code&gt;:max-height&lt;/code&gt; and &lt;code&gt;:width&lt;/code&gt; are specified, but &lt;code&gt;:height&lt;/code&gt; is not. For example, if you have a 200x100 image and specify that &lt;code&gt;:width&lt;/code&gt; should be 400 and &lt;code&gt;:max-height&lt;/code&gt; should be 150, you&amp;rsquo;ll end up with an image that is 300x150: Preserving the aspect ratio and not exceeding the &amp;ldquo;max&amp;rdquo; setting. This combination of parameters is a useful way of saying &amp;ldquo;display this image as large as possible, but no larger than the available display area&amp;rdquo;.</source>
          <target state="translated">Если указаны оба параметра &lt;code&gt;:max-width&lt;/code&gt; и &lt;code&gt;:height&lt;/code&gt; , а &lt;code&gt;:width&lt;/code&gt; - нет, для сохранения соотношения сторон может потребоваться, чтобы ширина превышала &lt;code&gt;:max-width&lt;/code&gt; . Если это произойдет, при масштабировании будет использоваться меньшее значение для высоты, чтобы сохранить соотношение сторон, не превышая &lt;code&gt;:max-width&lt;/code&gt; . Точно так же, когда указаны &lt;code&gt;:max-height&lt;/code&gt; и &lt;code&gt;:width&lt;/code&gt; , а &lt;code&gt;:height&lt;/code&gt; - нет. Например, если у вас есть изображение размером 200x100 и укажите, что &lt;code&gt;:width&lt;/code&gt; должно быть 400, а &lt;code&gt;:max-height&lt;/code&gt; должно быть 150, вы получите изображение размером 300x150: сохраняя соотношение сторон и не превышая настройку &amp;laquo;max&amp;raquo;. Эта комбинация параметров - удобный способ сказать &amp;laquo;отображать это изображение как можно больше, но не больше доступной области отображения&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="b0ee3f6c00c1b8ce8a38eb0b6b009d345cdf245e" translate="yes" xml:space="preserve">
          <source>If both &lt;var&gt;target&lt;/var&gt; and &lt;var&gt;linkname&lt;/var&gt; have remote file name syntax, and if both remote identifications are equal, the symbolic link points to the local file name part of &lt;var&gt;target&lt;/var&gt;.</source>
          <target state="translated">Если и &lt;var&gt;target&lt;/var&gt; и &lt;var&gt;linkname&lt;/var&gt; имеют синтаксис удаленного имени файла и если обе удаленные идентификаторы равны, символическая ссылка указывает на часть имени локального файла &lt;var&gt;target&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="cb151627cc061abee8d8bf5fa108eaf13699a0a3" translate="yes" xml:space="preserve">
          <source>If called from Lisp with a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;buffer&lt;/var&gt; argument, this function displays the documentation for that buffer&amp;rsquo;s major and minor modes, rather than those of the current buffer.</source>
          <target state="translated">При вызове из Лиспа с аргументом &lt;var&gt;buffer&lt;/var&gt; , отличным от &lt;code&gt;nil&lt;/code&gt; , эта функция отображает документацию для основного и второстепенного режимов этого буфера, а не для текущего буфера.</target>
        </trans-unit>
        <trans-unit id="b78048003acdb1229558285b58cce83d7ed8a966" translate="yes" xml:space="preserve">
          <source>If called interactively with no prefix argument, this command invokes a transient mode for adjusting indentation rigidly. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Indentation-Commands.html#Indentation-Commands&quot;&gt;Indentation Commands&lt;/a&gt; in</source>
          <target state="translated">Если эта команда вызывается в интерактивном режиме без аргумента префикса, эта команда вызывает переходный режим для жесткой настройки отступа. См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Indentation-Commands.html#Indentation-Commands&quot;&gt;Команды отступа&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="a2f05e0f166dde8de0bcdfd83d874da97c808afc" translate="yes" xml:space="preserve">
          <source>If called interactively, this command prompts for &lt;var&gt;character&lt;/var&gt; using its Unicode name or its code point. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Inserting-Text.html#Inserting-Text&quot;&gt;Inserting Text&lt;/a&gt; in</source>
          <target state="translated">При интерактивном вызове эта команда запрашивает &lt;var&gt;character&lt;/var&gt; используя его имя в Юникоде или его кодовую точку. См. Раздел &amp;laquo; &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Inserting-Text.html#Inserting-Text&quot;&gt;Вставка текста&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="bec58c9c6f7e1d78b7e04af503844fbe0b77e8d8" translate="yes" xml:space="preserve">
          <source>If called non-interactively, &lt;var&gt;mode&lt;/var&gt; must be an integer. Only the lowest 12 bits of the integer are used; on most systems, only the lowest 9 bits are meaningful. You can use the Lisp construct for octal numbers to enter &lt;var&gt;mode&lt;/var&gt;. For example,</source>
          <target state="translated">Если вызывается не интерактивно, &lt;var&gt;mode&lt;/var&gt; должен быть целым числом. Используются только младшие 12 бит целого числа; в большинстве систем значимы только младшие 9 бит. Вы можете использовать конструкцию Лиспа для восьмеричных чисел для входа в &lt;var&gt;mode&lt;/var&gt; . Например,</target>
        </trans-unit>
        <trans-unit id="697a3e2341919babe955a417091c1d61e468dd0f" translate="yes" xml:space="preserve">
          <source>If compiled with GnuTLS, Emacs offers built-in cryptographic support. Following the GnuTLS API terminology, the available tools are digests, MACs, symmetric ciphers, and AEAD ciphers.</source>
          <target state="translated">При компиляции с GnuTLS Emacs предлагает встроенную криптографическую поддержку.Следуя терминологии GnuTLS API,доступными инструментами являются дайджесты,MACs,симметричные шифры и шифры AEAD.</target>
        </trans-unit>
        <trans-unit id="0b4caab5499880569503f08e74d47fa52d4abb14" translate="yes" xml:space="preserve">
          <source>If consecutive characters have unequal non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;intangible&lt;/code&gt; properties, they belong to separate groups; each group is separately treated as described above.</source>
          <target state="translated">Если последовательные символы имеют неравные, отличные от &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;intangible&lt;/code&gt; свойства, они принадлежат к отдельным группам; каждую группу обрабатывают отдельно, как описано выше.</target>
        </trans-unit>
        <trans-unit id="8861219114987340fa0175b8d8040faddf5d79f9" translate="yes" xml:space="preserve">
          <source>If decoded text is inserted in some buffer, this command returns the length of the decoded text. If that buffer is a unibyte buffer (see &lt;a href=&quot;selecting-a-representation#Selecting-a-Representation&quot;&gt;Selecting a Representation&lt;/a&gt;), the internal representation of the decoded text (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;) is inserted into the buffer as individual bytes.</source>
          <target state="translated">Если декодированный текст вставлен в некоторый буфер, эта команда возвращает длину декодированного текста. Если этот буфер является однобайтовым буфером (см. &lt;a href=&quot;selecting-a-representation#Selecting-a-Representation&quot;&gt;Выбор представления&lt;/a&gt; ), внутреннее представление декодированного текста (см. &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Представления текста&lt;/a&gt; ) вставляется в буфер как отдельные байты.</target>
        </trans-unit>
        <trans-unit id="1868b5514617e7be689264a4de2fe369509204fb" translate="yes" xml:space="preserve">
          <source>If deleting the window would leave no more windows in the window tree (e.g., if it is the only live window in the frame) or all remaining windows on &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame are side windows (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;), an error is signaled. If &lt;var&gt;window&lt;/var&gt; is part of an atomic window (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;), this function tries to delete the root of that atomic window instead.</source>
          <target state="translated">Если удаление окна не оставит больше окон в окне дерева (например, если это единственное живое окно в кадре) , или все остальные окна на &lt;var&gt;window&lt;/var&gt; раме &amp;laquo;s имеют боковые окна (см &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;боковые окна&lt;/a&gt; ), сигнализирует об ошибке. Если &lt;var&gt;window&lt;/var&gt; является частью атомарного окна (см. &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Атомарные окна&lt;/a&gt; ), эта функция вместо этого пытается удалить корень этого атомарного окна.</target>
        </trans-unit>
        <trans-unit id="17cc98f8b3f5bbd9f9adfc31e26ce49f0be6a385" translate="yes" xml:space="preserve">
          <source>If either of these functions is called in a command that was invoked using the mouse&amp;mdash;more precisely, if &lt;code&gt;last-nonmenu-event&lt;/code&gt; (see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;) is either &lt;code&gt;nil&lt;/code&gt; or a list&amp;mdash;then it uses a dialog box or pop-up menu to ask the question. Otherwise, it uses keyboard input. You can force use either of the mouse or of keyboard input by binding &lt;code&gt;last-nonmenu-event&lt;/code&gt; to a suitable value around the call.</source>
          <target state="translated">Если какая-либо из этих функций вызывается в команде, которая была вызвана с помощью мыши - точнее, если &lt;code&gt;last-nonmenu-event&lt;/code&gt; (см. &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Информация о цикле команд&lt;/a&gt; ) равно &lt;code&gt;nil&lt;/code&gt; или списку - тогда используется диалоговое окно или всплывающее меню. задать вопрос. В противном случае используется ввод с клавиатуры. Вы можете принудительно использовать либо мышь, либо ввод с клавиатуры, &lt;code&gt;last-nonmenu-event&lt;/code&gt; к подходящему значению вокруг вызова.</target>
        </trans-unit>
        <trans-unit id="45bf1b4255bac8c96c5cbfb0ef79309aaa2aa0fc" translate="yes" xml:space="preserve">
          <source>If encoded text is inserted in some buffer, this command returns the length of the encoded text.</source>
          <target state="translated">Если в какой-то буфер вставлен кодированный текст,то данная команда возвращает длину закодированного текста.</target>
        </trans-unit>
        <trans-unit id="7cfcf382829c0a591a31d5f1858635938f636235" translate="yes" xml:space="preserve">
          <source>If every &lt;var&gt;condition&lt;/var&gt; evaluates to &lt;code&gt;nil&lt;/code&gt;, so that every clause fails, &lt;code&gt;cond&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если каждое &lt;var&gt;condition&lt;/var&gt; оценивается как &lt;code&gt;nil&lt;/code&gt; , поэтому каждое предложение не выполняется, &lt;code&gt;cond&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16b308e442a51b045935b6909d71f2c02991dcac" translate="yes" xml:space="preserve">
          <source>If functions are defined programmatically (with &lt;code&gt;fset&lt;/code&gt; say), then &lt;code&gt;eval-and-compile&lt;/code&gt; can be used to have that done at compile-time as well as run-time, so calls to those functions are checked (and warnings about &amp;ldquo;not known to be defined&amp;rdquo; suppressed).</source>
          <target state="translated">Если функции определены программно ( скажем, с помощью &lt;code&gt;fset&lt;/code&gt; ), то &lt;code&gt;eval-and-compile&lt;/code&gt; можно использовать для выполнения этого во время компиляции, а также во время выполнения, поэтому вызовы этих функций проверяются (и предупреждения о &amp;laquo;неизвестно быть определенным &amp;raquo;подавлено).</target>
        </trans-unit>
        <trans-unit id="5c129c5231bb00580890ea0f7117085c0fa3bf61" translate="yes" xml:space="preserve">
          <source>If given, this should be the identifier of a previously defined gradient object.</source>
          <target state="translated">Если дано,то это должен быть идентификатор ранее определенного градиентного объекта.</target>
        </trans-unit>
        <trans-unit id="7e6a51a5498996905b492caacc6859cb50ba7919" translate="yes" xml:space="preserve">
          <source>If image transforms are not supported, &lt;code&gt;:rotation&lt;/code&gt;, &lt;code&gt;:crop&lt;/code&gt;, &lt;code&gt;:width&lt;/code&gt;, &lt;code&gt;:height&lt;/code&gt;, &lt;code&gt;:scale&lt;/code&gt;, &lt;code&gt;:max-width&lt;/code&gt; and &lt;code&gt;:max-height&lt;/code&gt; will only be usable through ImageMagick, if available (see &lt;a href=&quot;imagemagick-images#ImageMagick-Images&quot;&gt;ImageMagick Images&lt;/a&gt;).</source>
          <target state="translated">Если изображение преобразования не поддерживаются, &lt;code&gt;:rotation&lt;/code&gt; , &lt;code&gt;:crop&lt;/code&gt; , &lt;code&gt;:width&lt;/code&gt; , &lt;code&gt;:height&lt;/code&gt; , &lt;code&gt;:scale&lt;/code&gt; , &lt;code&gt;:max-width&lt;/code&gt; и &lt;code&gt;:max-height&lt;/code&gt; будет использоваться только через ImageMagick, если таковые имеются (см &lt;a href=&quot;imagemagick-images#ImageMagick-Images&quot;&gt;ImageMagick Images&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="be1841000b7ca7ecd02fe657726d303725073556" translate="yes" xml:space="preserve">
          <source>If in doubt, use &lt;code&gt;any&lt;/code&gt;; the only known proper use of &lt;code&gt;interactive&lt;/code&gt; is if you need to decide whether to display a helpful message while a function is running.</source>
          <target state="translated">В случае сомнений используйте &lt;code&gt;any&lt;/code&gt; ; единственное известное правильное использование &lt;code&gt;interactive&lt;/code&gt; - это когда вам нужно решить, отображать ли полезное сообщение во время работы функции.</target>
        </trans-unit>
        <trans-unit id="25d359ce61cf8c815d198212ff26252c75ac0564" translate="yes" xml:space="preserve">
          <source>If it doesn&amp;rsquo;t find a suitable window, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если подходящего окна не найдено, функция возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d663e9f71b40bc3b791ff1f7fbbfe0e96c637a33" translate="yes" xml:space="preserve">
          <source>If it is -1, that means auto-saving is temporarily shut off in this buffer due to a substantial decrease in size. Explicitly saving the buffer stores a positive value in this variable, thus reenabling auto-saving. Turning auto-save mode off or on also updates this variable, so that the substantial decrease in size is forgotten.</source>
          <target state="translated">Если это -1,то это означает,что автосохранение временно отключается в этом буфере из-за существенного уменьшения размера.Явное сохранение буфера сохраняет положительное значение в этой переменной,таким образом заново включается автосохранение.Выключение или включение режима автосохранения также обновляет эту переменную,так что существенное уменьшение размера забывается.</target>
        </trans-unit>
        <trans-unit id="c3fcc3cec543bf1340c5f3eed0b2d2edd23dc9d2" translate="yes" xml:space="preserve">
          <source>If it is -2, that means this buffer should disregard changes in buffer size; in particular, it should not shut off auto-saving temporarily due to changes in buffer size.</source>
          <target state="translated">Если это -2,то это означает,что этот буфер не должен учитывать изменения в размере буфера,в частности,он не должен временно отключать автосохранение из-за изменения размера буфера.</target>
        </trans-unit>
        <trans-unit id="26f7b148788693e43d5b15be6a524986c17c9bdf" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;split-window-below&lt;/code&gt; adjusts point in each of the two windows to minimize redisplay. (This is useful on slow terminals.) It selects whichever window contains the screen line that point was previously on. Note that this only affects &lt;code&gt;split-window-below&lt;/code&gt;, not the lower-level &lt;code&gt;split-window&lt;/code&gt; function.</source>
          <target state="translated">Если он равен &lt;code&gt;nil&lt;/code&gt; , функция &lt;code&gt;split-window-below&lt;/code&gt; настраивает точку в каждом из двух окон, чтобы минимизировать повторное отображение. (Это полезно на медленных терминалах.) Он выбирает любое окно, содержащее строку экрана, на которой ранее находилась точка. Обратите внимание , что это влияет только &lt;code&gt;split-window-below&lt;/code&gt; , а не ниже уровень &lt;code&gt;split-window&lt;/code&gt; функции.</target>
        </trans-unit>
        <trans-unit id="75bb0c08c9579f4b67e1bdcee5654535bf0851c8" translate="yes" xml:space="preserve">
          <source>If it is impossible to move to column &lt;var&gt;column&lt;/var&gt; because that is in the middle of a multicolumn character such as a tab, point moves to the end of that character. However, if &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;column&lt;/var&gt; is in the middle of a tab, then &lt;code&gt;move-to-column&lt;/code&gt; either converts the tab into spaces (when &lt;code&gt;indent-tabs-mode&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;), or inserts enough spaces before it (otherwise), so that point can move precisely to column &lt;var&gt;column&lt;/var&gt;. Other multicolumn characters can cause anomalies despite &lt;var&gt;force&lt;/var&gt;, since there is no way to split them.</source>
          <target state="translated">Если невозможно перейти к столбцу &lt;var&gt;column&lt;/var&gt; потому что он находится в середине многоколоночного символа, такого как табуляция, точка перемещается в конец этого символа. Однако, если &lt;var&gt;force&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , а &lt;var&gt;column&lt;/var&gt; находится в середине вкладки, то при &lt;code&gt;move-to-column&lt;/code&gt; табуляция либо преобразуется в пробелы (когда &lt;code&gt;indent-tabs-mode&lt;/code&gt; равно &lt;code&gt;nil&lt;/code&gt; ), либо перед ней вставляется достаточное количество пробелов (в противном случае ), чтобы эта точка могла точно переместиться в столбец &lt;var&gt;column&lt;/var&gt; . Другие многоколоночные символы могут вызывать аномалии, несмотря на &lt;var&gt;force&lt;/var&gt; , так как их невозможно разделить.</target>
        </trans-unit>
        <trans-unit id="4c061e5992b432ab0822e64b7514d9bc023cedfe" translate="yes" xml:space="preserve">
          <source>If it is impossible to obtain the load average, this function signals an error. On some platforms, access to load averages requires installing Emacs as setuid or setgid so that it can read kernel information, and that usually isn&amp;rsquo;t advisable.</source>
          <target state="translated">Если невозможно получить среднюю нагрузку, эта функция сигнализирует об ошибке. На некоторых платформах для доступа к средним нагрузкам требуется установить Emacs как setuid или setgid, чтобы он мог читать информацию о ядре, а это обычно не рекомендуется.</target>
        </trans-unit>
        <trans-unit id="7758a8649ab676d21a46b78499adca1ee262c836" translate="yes" xml:space="preserve">
          <source>If it is possible to move &lt;var&gt;count&lt;/var&gt; words, without being stopped prematurely by the buffer boundary or a field boundary, the value is &lt;code&gt;t&lt;/code&gt;. Otherwise, the return value is &lt;code&gt;nil&lt;/code&gt; and point stops at the buffer boundary or field boundary.</source>
          <target state="translated">Если можно переместить &lt;var&gt;count&lt;/var&gt; слова без преждевременной остановки границей буфера или границ поля, значение равно &lt;code&gt;t&lt;/code&gt; . В противном случае возвращаемое значение равно &lt;code&gt;nil&lt;/code&gt; и точка останавливается на границе буфера или поля.</target>
        </trans-unit>
        <trans-unit id="fd9b78d9850bcf0fff88ff5b620b111b6dc77cc2" translate="yes" xml:space="preserve">
          <source>If its value is &lt;code&gt;width-only&lt;/code&gt;, sizes are evened only if the reused window is on the left or right of the selected one and the selected window is wider than the reused one. If its value is &lt;code&gt;height-only&lt;/code&gt; sizes are evened only if the reused window is above or beneath the selected window and the selected window is higher than the reused one. Any other non-&lt;code&gt;nil&lt;/code&gt; value means to even sizes in any of these cases provided the selected window is larger than the reused one in the sense of their combination.</source>
          <target state="translated">Если его значение - &lt;code&gt;width-only&lt;/code&gt; , размеры выравниваются только в том случае, если повторно используемое окно находится слева или справа от выбранного, а выбранное окно шире, чем повторно используемое. Если его значение - &lt;code&gt;height-only&lt;/code&gt; размеры выравниваются только в том случае, если повторно используемое окно находится выше или ниже выбранного окна, а выбранное окно выше повторно используемого. Любое другое значение, отличное от &lt;code&gt;nil&lt;/code&gt; означает, что размеры в любом из этих случаев будут выровнены, при условии, что выбранное окно больше повторно используемого в смысле их комбинации.</target>
        </trans-unit>
        <trans-unit id="a382ec562741e63e7998a124cb803b1183dfef44" translate="yes" xml:space="preserve">
          <source>If loading the file succeeds but does not provide &lt;var&gt;feature&lt;/var&gt;, &lt;code&gt;require&lt;/code&gt; signals an error about the missing feature.</source>
          <target state="translated">Если загрузка файла прошла успешно, но не предоставляет &lt;var&gt;feature&lt;/var&gt; , &lt;code&gt;require&lt;/code&gt; сигнализирует об ошибке об отсутствующей функции.</target>
        </trans-unit>
        <trans-unit id="1c9993b616405d69a26202591fe2c37eafc12f84" translate="yes" xml:space="preserve">
          <source>If more than one frame is considered, the cyclic ordering is obtained by appending the orderings for those frames, in the same order as the list of all live frames (see &lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;Finding All Frames&lt;/a&gt;).</source>
          <target state="translated">Если рассматривается более одного кадра, циклическое упорядочение получается путем добавления порядка для этих кадров в том же порядке, что и список всех живых кадров (см. &lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;Поиск всех кадров&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="caf0360b452a602e7271a13c236426dd72800cb8" translate="yes" xml:space="preserve">
          <source>If more than one window qualifies as usable according to these rules, this function makes a choice in the following order of preference:</source>
          <target state="translated">Если более одного окна квалифицируется как пригодное для использования в соответствии с этими правилами,эта функция делает выбор в следующем порядке предпочтений:</target>
        </trans-unit>
        <trans-unit id="60ca5dbda750b8d340c893a8fd68059aff011a7b" translate="yes" xml:space="preserve">
          <source>If narrowing is in effect, &lt;var&gt;position&lt;/var&gt; still counts from the beginning of the buffer, but point cannot go outside the accessible portion. If &lt;var&gt;position&lt;/var&gt; is out of range, &lt;code&gt;goto-char&lt;/code&gt; moves point to the beginning or the end of the accessible portion.</source>
          <target state="translated">Если действует сужение, &lt;var&gt;position&lt;/var&gt; прежнему отсчитывается от начала буфера, но точка не может выходить за пределы доступной части. Если &lt;var&gt;position&lt;/var&gt; вне допустимого диапазона, &lt;code&gt;goto-char&lt;/code&gt; перемещает точку в начало или конец доступной части.</target>
        </trans-unit>
        <trans-unit id="4da11780726f2d02db95b81120b41418f94d288c" translate="yes" xml:space="preserve">
          <source>If no &lt;var&gt;sequences&lt;/var&gt; are given, &lt;code&gt;nil&lt;/code&gt; is returned:</source>
          <target state="translated">Если &lt;var&gt;sequences&lt;/var&gt; не указаны, возвращается &lt;code&gt;nil&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="afa63ffa83226e6d4d0087510463ec804351a8e2" translate="yes" xml:space="preserve">
          <source>If no alist element matches &lt;var&gt;key&lt;/var&gt;, &lt;code&gt;assoc-default&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если ни один элемент alist не соответствует &lt;var&gt;key&lt;/var&gt; , &lt;code&gt;assoc-default&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="099527a76ee688c1972fba42fc2746eb0aa78de6" translate="yes" xml:space="preserve">
          <source>If no instrumented code is being executed when &lt;code&gt;edebug&lt;/code&gt; is called, that function calls &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="translated">Если инструментальный код не выполняется при &lt;code&gt;edebug&lt;/code&gt; , эта функция вызывает &lt;code&gt;debug&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b7902d119289744c9c60b8e9ba8734e44d393c2" translate="yes" xml:space="preserve">
          <source>If no matching character or flags are needed, only one character (specifying the syntax class) is sufficient.</source>
          <target state="translated">Если не нужны совпадающие символы или флаги,достаточно одного символа (указывая синтаксический класс).</target>
        </trans-unit>
        <trans-unit id="6635be92db6b49ff346c8530d9044f8cfebe5e76" translate="yes" xml:space="preserve">
          <source>If no return point is in effect with tag &lt;var&gt;tag&lt;/var&gt;, then a &lt;code&gt;no-catch&lt;/code&gt; error is signaled with data &lt;code&gt;(&lt;var&gt;tag&lt;/var&gt; &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">Если для тега &lt;var&gt;tag&lt;/var&gt; действует точка возврата , то об ошибке &lt;code&gt;no-catch&lt;/code&gt; сообщается с помощью данных &lt;code&gt;(&lt;var&gt;tag&lt;/var&gt; &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c623989ecb4b6aa623ded291c555cd7366aec465" translate="yes" xml:space="preserve">
          <source>If no sentinel function was specified for a process, it will use the default sentinel function, which inserts a message in the process&amp;rsquo;s buffer with the process name and the string describing the event.</source>
          <target state="translated">Если для процесса не указана сигнальная функция, он будет использовать стандартную сигнальную функцию, которая вставляет сообщение в буфер процесса с именем процесса и строкой, описывающей событие.</target>
        </trans-unit>
        <trans-unit id="fc7669396f72d8863e9cf2e15da6cad47eca550a" translate="yes" xml:space="preserve">
          <source>If no specific base offset is set for alignment, it is always relative to the left edge of the text area. For example, &amp;lsquo;</source>
          <target state="translated">Если для выравнивания не задано конкретное базовое смещение, оно всегда выполняется относительно левого края текстовой области. Например, '</target>
        </trans-unit>
        <trans-unit id="2d6c0df365fb46197c73cec7c0435c48adc4054f" translate="yes" xml:space="preserve">
          <source>If no suitable buffer exists, the buffer</source>
          <target state="translated">Если подходящего буфера нет,то буфер</target>
        </trans-unit>
        <trans-unit id="92a082cb753749db0e7088ebfc66a0bc66e1e3da" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt; such an entry tells Emacs to preserve the size of the window chosen (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;). The value should be either &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt; to preserve the width of the window, &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;t)&lt;/code&gt; to preserve its height or &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;t)&lt;/code&gt; to preserve both, its width and its height. This entry should be processed only under certain conditions which are specified right after this list.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; ,то такая запись сообщает Emacs о необходимости сохранить размер выбранного окна (см. &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Сохранение размеров окна&lt;/a&gt; ). Значение должно быть либо &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt; чтобы сохранить ширину окна, &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;t)&lt;/code&gt; чтобы сохранить его высоту, либо &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;t)&lt;/code&gt; чтобы сохранить его ширину и высоту. Эта запись должна обрабатываться только при определенных условиях, которые указаны сразу после этого списка.</target>
        </trans-unit>
        <trans-unit id="2df23b09dda1e396597f8ec06e758ffb6362d745" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug binds &lt;code&gt;print-circle&lt;/code&gt; to this value while printing results. The default value is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , Edebug привязывает &lt;code&gt;print-circle&lt;/code&gt; к этому значению при печати результатов. Значение по умолчанию - &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8b4d06f0cea614db276930788a603afccf902aa" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug binds &lt;code&gt;print-length&lt;/code&gt; to this value while printing results. The default value is &lt;code&gt;50&lt;/code&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , Edebug связывает &lt;code&gt;print-length&lt;/code&gt; с этим значением при печати результатов. Значение по умолчанию - &lt;code&gt;50&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebac442e709eda708f773e90646194acc862b933" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug binds &lt;code&gt;print-level&lt;/code&gt; to this value while printing results. The default value is &lt;code&gt;50&lt;/code&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , Edebug связывает &lt;code&gt;print-level&lt;/code&gt; с этим значением при печати результатов. Значение по умолчанию - &lt;code&gt;50&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5bbdc3e349ee9de9df4fff61c4ed3ebcd61f2ff" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug tests coverage of all expressions debugged. See &lt;a href=&quot;coverage-testing#Coverage-Testing&quot;&gt;Coverage Testing&lt;/a&gt;.</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , Edebug проверяет покрытие всех отлаженных выражений. См. &lt;a href=&quot;coverage-testing#Coverage-Testing&quot;&gt;Тестирование покрытия&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf21ba8fe3d5a3afec7e5ab377e09959c68764d5" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug tries to remove any of its own instrumentation when showing the results of expressions. This is relevant when debugging macros where the results of expressions are themselves instrumented expressions. As a very artificial example, suppose that the example function &lt;code&gt;fac&lt;/code&gt; has been instrumented, and consider a macro of the form:</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , Edebug пытается удалить любой из своих инструментов при отображении результатов выражений. Это актуально при отладке макросов, в которых результаты выражений сами являются инструментальными выражениями. В качестве очень искусственного примера предположим, что функция-пример &lt;code&gt;fac&lt;/code&gt; была оснащена инструментами, и рассмотрим макрос формы:</target>
        </trans-unit>
        <trans-unit id="06f558a0db32f216e4552c38fae062a52450fbe2" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Emacs automatically lowers the frame when it is deselected. Some window managers do not allow this.</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , Emacs автоматически опускает фрейм, когда он не выбран. Некоторые оконные менеджеры не позволяют этого.</target>
        </trans-unit>
        <trans-unit id="d0f999f9fb0c1cb7b78d9f1e89393cdc199fe103" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Emacs automatically raises the frame when it is selected. Some window managers do not allow this.</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , Emacs автоматически поднимает рамку при ее выборе. Некоторые оконные менеджеры не позволяют этого.</target>
        </trans-unit>
        <trans-unit id="9c3f60d0c9b1e0439fcfc255da11300a37a2873b" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, always ask for the server&amp;rsquo;s capabilities, even when doing a &amp;lsquo;</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , всегда запрашивайте возможности сервера, даже если выполняете '</target>
        </trans-unit>
        <trans-unit id="8297a79a55a2079d3efa603d16f6eb1d0132e092" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, an expression to test for at every stop point. If the result is non-&lt;code&gt;nil&lt;/code&gt;, then break. Errors are ignored. See &lt;a href=&quot;global-break-condition#Global-Break-Condition&quot;&gt;Global Break Condition&lt;/a&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , выражение для проверки в каждой точке остановки. Если результат не равен &lt;code&gt;nil&lt;/code&gt; , то перерыв. Ошибки игнорируются. См. &lt;a href=&quot;global-break-condition#Global-Break-Condition&quot;&gt;Глобальное условие разрыва&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86b7764a4b5a389fb150dcdc9c80efb20f92bc18" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, and &lt;code&gt;:return-value&lt;/code&gt; is also non-&lt;code&gt;nil&lt;/code&gt;, Emacs will warn if the connection isn&amp;rsquo;t encrypted. This is useful for protocols like</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; и &lt;code&gt;:return-value&lt;/code&gt; также не &lt;code&gt;nil&lt;/code&gt; , Emacs предупредит, если соединение не зашифровано. Это полезно для таких протоколов, как</target>
        </trans-unit>
        <trans-unit id="434f9fa211c26b9ea10b34c88422ffccf1a3d1fa" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, continue defining or executing any keyboard macro that is executing outside of Edebug. Use this with caution since it is not debugged. See &lt;a href=&quot;edebug-execution-modes#Edebug-Execution-Modes&quot;&gt;Edebug Execution Modes&lt;/a&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , продолжайте определение или выполнение любого макроса клавиатуры, который выполняется вне Edebug. Используйте это с осторожностью, так как это не отлажено. См. &lt;a href=&quot;edebug-execution-modes#Edebug-Execution-Modes&quot;&gt;Раздел Режимы выполнения Edebug&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09f55e7f1ed0753693dffc3dd3c1787fc1a815e1" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, do opportunistic</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , сделайте оппортунистический</target>
        </trans-unit>
        <trans-unit id="3c1e8b6c51588a7fe1f3ca87b947b981bc73afc8" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, such an entry tells &lt;code&gt;display-buffer&lt;/code&gt; to mark any window it creates as dedicated to its buffer (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;). It does that by calling &lt;code&gt;set-window-dedicated-p&lt;/code&gt; with the chosen window as first argument and the entry&amp;rsquo;s value as second.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , такая запись сообщает &lt;code&gt;display-buffer&lt;/code&gt; пометить любое окно, которое он создает, как выделенное для его буфера (см. &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Выделенные окна&lt;/a&gt; ). Он делает это, вызывая &lt;code&gt;set-window-dedicated-p&lt;/code&gt; с выбранным окном в качестве первого аргумента и значением записи в качестве второго.</target>
        </trans-unit>
        <trans-unit id="83842571f2da9dfd88127a81e7bd282c6bb11150" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, tell Xt to wait for the window manager to confirm geometry changes. Some window managers, including versions of Fvwm2 and KDE, fail to confirm, so Xt hangs. Set this to &lt;code&gt;nil&lt;/code&gt; to prevent hanging with those window managers.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , скажите Xt дождаться, пока оконный менеджер подтвердит изменения геометрии. Некоторые оконные менеджеры, включая версии Fvwm2 и KDE, не могут подтвердить, поэтому Xt зависает. Установите значение &lt;code&gt;nil&lt;/code&gt; , чтобы не зависать с этими оконными менеджерами.</target>
        </trans-unit>
        <trans-unit id="efd9a8e593ce9ad32fc830d9618b3acb28445443" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, that means number continuously across print calls. This affects the numbers printed for &amp;lsquo;</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , это означает, что число непрерывно во всех вызовах печати. Это влияет на числа, напечатанные для '</target>
        </trans-unit>
        <trans-unit id="2a4541e8d7c469c57e74b63f08c2025c97e0882c" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="9be8f94664dd4525417ea58d6dc2ff472536e701" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the color for the background of scroll bars. It is equivalent to the &lt;code&gt;:background&lt;/code&gt; attribute of the &lt;code&gt;scroll-bar&lt;/code&gt; face.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , цвет фона полос прокрутки. Он эквивалентен атрибуту &lt;code&gt;:background&lt;/code&gt; лицевой &lt;code&gt;scroll-bar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9ac4b1e76bdba2df8d1d561f666e5db1883fcc4" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the color for the foreground of scroll bars. It is equivalent to the &lt;code&gt;:foreground&lt;/code&gt; attribute of the &lt;code&gt;scroll-bar&lt;/code&gt; face.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , цвет переднего плана полос прокрутки. Он эквивалентен атрибуту &lt;code&gt;:foreground&lt;/code&gt; лицевой &lt;code&gt;scroll-bar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adc6455ac3165478fddd2e57e3f43c6b9d048a35" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the default value of &lt;code&gt;print-circle&lt;/code&gt; for printing results in Edebug. See &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Output Variables&lt;/a&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , значение по умолчанию &lt;code&gt;print-circle&lt;/code&gt; для печати приводит к Edebug. См. &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Выходные переменные&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e96b1587470baab87f7e448864020eda5787b934" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the default value of &lt;code&gt;print-length&lt;/code&gt; for printing results in Edebug. See &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Output Variables&lt;/a&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , значение &lt;code&gt;print-length&lt;/code&gt; печати по умолчанию для печати приводит к Edebug. См. &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Выходные переменные&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e6e7e87e1c8258c8084276530c822b9a8e24b00" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the default value of &lt;code&gt;print-level&lt;/code&gt; for printing results in Edebug. See &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Output Variables&lt;/a&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , значение уровня &lt;code&gt;print-level&lt;/code&gt; по умолчанию для печати приводит к Edebug. См. &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Выходные переменные&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4dbca5f789d3b451ab7705325121fbfc1c24775e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame can be moved with the mouse by dragging the header line of its topmost window.</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , фрейм можно перемещать с помощью мыши, перетаскивая строку заголовка самого верхнего окна.</target>
        </trans-unit>
        <trans-unit id="8b4877f75b5365fe0a54e72c2c62ecb6c6d15e86" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame can be moved with the mouse by dragging the mode line of its bottommost window. Note that such a frame is not allowed to have its own minibuffer window.</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , рамку можно перемещать с помощью мыши, перетаскивая строку режима самого нижнего окна. Обратите внимание, что такому фрейму не разрешается иметь собственное окно минибуфера.</target>
        </trans-unit>
        <trans-unit id="318d4d00cdd54ad23fd3e065537a23cdde9e75e3" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame can be resized by dragging its internal borders, if present, with the mouse.</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , размер кадра можно изменить, перетащив его внутренние границы, если они есть, с помощью мыши.</target>
        </trans-unit>
        <trans-unit id="a43ce41848c96c8ad14f6796e1d973d08c57fa8e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame is drawn to the screen without double buffering. Emacs normally attempts to use double buffering, where available, to reduce flicker. Set this property if you experience display bugs or pine for that retro, flicker-y feeling.</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , кадр выводится на экран без двойной буферизации. Emacs обычно пытается использовать двойную буферизацию, если это возможно, для уменьшения мерцания. Установите это свойство, если вы столкнулись с ошибками отображения или хотите почувствовать мерцание в стиле ретро.</target>
        </trans-unit>
        <trans-unit id="bc1ad98081e6e325221a3abe42d5ac8ed1f7c21f" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame is visible on all virtual desktops on systems with virtual desktops.</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , кадр виден на всех виртуальных рабочих столах в системах с виртуальными рабочими столами.</target>
        </trans-unit>
        <trans-unit id="b44601ecee8752e8c0f8056fa9e24dc94ac1ca89" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the greeting string returned by the host.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , строка приветствия, возвращаемая хостом.</target>
        </trans-unit>
        <trans-unit id="40cc2de753b0ea772d8160c0c2ca7c1eca5fbf7e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the host&amp;rsquo;s capability string.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , строка возможностей хоста.</target>
        </trans-unit>
        <trans-unit id="913ca5bd1d8fdf1f8806857c3c6b7d729b5ba66a" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the named function prevents the &lt;code&gt;undo&lt;/code&gt; operation from being restricted to the active region, if &lt;code&gt;undo&lt;/code&gt; is invoked immediately after the function. See &lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , указанная функция предотвращает ограничение операции &lt;code&gt;undo&lt;/code&gt; активной областью, если &lt;code&gt;undo&lt;/code&gt; вызывается сразу после функции. См. &lt;a href=&quot;undo#Undo&quot;&gt;Отменить&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d8e8f3e81bf8fc64ffd0106f328d6a269d4831b" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the side windows on the left and right of a frame occupy the frame&amp;rsquo;s full height. Otherwise, the side windows on the top and bottom of the frame occupy the frame&amp;rsquo;s full width.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , боковые окна слева и справа от рамки занимают всю высоту рамки. В противном случае боковые окна сверху и снизу рамы занимают всю ширину рамы.</target>
        </trans-unit>
        <trans-unit id="6849fc0b0f94a8fa335c8cd9a717ed71ba10be1a" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value is a function to generate prefix text for warnings. Programs can bind the variable to a suitable function. &lt;code&gt;display-warning&lt;/code&gt; calls this function with the warnings buffer current, and the function can insert text in it. That text becomes the beginning of the warning message.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , значение является функцией для генерации префиксного текста для предупреждений. Программы могут привязать переменную к подходящей функции. &lt;code&gt;display-warning&lt;/code&gt; вызывает эту функцию с текущим буфером предупреждений, и функция может вставлять в него текст. Этот текст становится началом предупреждающего сообщения.</target>
        </trans-unit>
        <trans-unit id="a73c2141d528d307e119504f64bddbdbc47d5931" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value of this variable is a function for &lt;code&gt;mouse-position&lt;/code&gt; to call. &lt;code&gt;mouse-position&lt;/code&gt; calls this function just before returning, with its normal return value as the sole argument, and it returns whatever this function returns to it.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , значение этой переменной является функцией, которую нужно вызвать с помощью &lt;code&gt;mouse-position&lt;/code&gt; . &lt;code&gt;mouse-position&lt;/code&gt; вызывает эту функцию непосредственно перед возвратом с ее обычным возвращаемым значением в качестве единственного аргумента и возвращает все, что ей возвращает эта функция.</target>
        </trans-unit>
        <trans-unit id="750c670af188e92079aa3e73ea73d571df6e4c56" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value should be a regular expression describing the end of a sentence, including the whitespace following the sentence. (All paragraph boundaries also end sentences, regardless.)</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , значение должно быть регулярным выражением, описывающим конец предложения, включая пробелы после предложения. (Все границы абзацев также заканчивают предложения, независимо.)</target>
        </trans-unit>
        <trans-unit id="c36e160fc038d6c8fa570f7f15030f619d7679da" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value should look like this:</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , значение должно выглядеть так:</target>
        </trans-unit>
        <trans-unit id="5dd5a98b9783da84f3c6b8a9cb9fa1c915208201" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value specifies the slot of the side window supposed to display the buffer. This entry is used only by &lt;code&gt;display-buffer-in-side-window&lt;/code&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , значение указывает слот бокового окна, которое должно отображать буфер. Эта запись используется только &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2761f772ea8c9a650bbb931af03989afe8eaeafc" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this buffer-local variable holds a regular expression that specifies what text can appear before the open-parenthesis that starts a defun. That is to say, a defun begins on a line that starts with a match for this regular expression, followed by a character with open-parenthesis syntax.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , эта локальная в буфере переменная содержит регулярное выражение, указывающее, какой текст может стоять перед открывающей круглой скобкой, с которой начинается defun. Другими словами, defun начинается со строки, которая начинается с совпадения с этим регулярным выражением, за которым следует символ с синтаксисом с открытыми скобками.</target>
        </trans-unit>
        <trans-unit id="e6476927ea753cd0c025802bf82f4bd899e70109" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this frame&amp;rsquo;s window is never split automatically.</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , окно этого фрейма никогда не разделяется автоматически.</target>
        </trans-unit>
        <trans-unit id="a4e5bffd8c4ad2619c77cd8c172745f3480ba234" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this frame&amp;rsquo;s window-system window is drawn without decorations, like the title, minimize/maximize boxes and external borders. This usually means that the window cannot be dragged, resized, iconified, maximized or deleted with the mouse. If &lt;code&gt;nil&lt;/code&gt;, the frame&amp;rsquo;s window is usually drawn with all the elements listed above unless their display has been suspended via window manager settings.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , окно оконной системы этого фрейма рисуется без украшений, таких как заголовок, минимизация / развертывание блоков и внешних границ. Обычно это означает, что окно нельзя перетаскивать, изменять размер, уменьшать, увеличивать или удалять с помощью мыши. Если &lt;code&gt;nil&lt;/code&gt; , окно фрейма обычно рисуется со всеми перечисленными выше элементами, если их отображение не было приостановлено в настройках оконного менеджера.</target>
        </trans-unit>
        <trans-unit id="befe1b622137d81a8704e321ed93a4af1ba6f0ff" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this is a directory within which to look for the</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , это каталог, в котором нужно искать</target>
        </trans-unit>
        <trans-unit id="29d9d4b33508048f3fc26e3bfc177f3409d73fc0" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means that the frame does not want to receive input focus via explicit mouse clicks or when moving the mouse into it either via &lt;code&gt;focus-follows-mouse&lt;/code&gt; (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;) or &lt;code&gt;mouse-autoselect-window&lt;/code&gt; (see &lt;a href=&quot;mouse-window-auto_002dselection#Mouse-Window-Auto_002dselection&quot;&gt;Mouse Window Auto-selection&lt;/a&gt;). This may have the unwanted side-effect that a user cannot scroll a non-selected frame with the mouse. Some window managers may not honor this parameter.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , это означает, что фрейм не хочет получать фокус ввода посредством явных щелчков мышью или при перемещении в него мыши через &lt;code&gt;focus-follows-mouse&lt;/code&gt; (см. &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Фокус ввода&lt;/a&gt; ) или &lt;code&gt;mouse-autoselect-window&lt;/code&gt; (см. &lt;a href=&quot;mouse-window-auto_002dselection#Mouse-Window-Auto_002dselection&quot;&gt;Окно мыши Автоматический выбор&lt;/a&gt; ). Это может иметь нежелательный побочный эффект, заключающийся в том, что пользователь не может прокручивать невыбранный кадр с помощью мыши. Некоторые оконные менеджеры могут не учитывать этот параметр.</target>
        </trans-unit>
        <trans-unit id="b7e95ea56bde9c36bccfc56c9be82022db509b49" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means that the frame does not want to receive input focus when it is mapped (see &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibility of Frames&lt;/a&gt;). Some window managers may not honor this parameter.</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , это означает, что кадр не хочет получать фокус ввода при отображении (см. &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Видимость кадров&lt;/a&gt; ). Некоторые оконные менеджеры могут не учитывать этот параметр.</target>
        </trans-unit>
        <trans-unit id="08c2d3c2c49097a87f9798fe68b125db546bcce1" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means that this frame is a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;), and this parameter specifies its parent frame. If &lt;code&gt;nil&lt;/code&gt;, this means that this frame is a normal, top-level frame.</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , это означает, что данный кадр является дочерним (см. &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Дочерние кадры&lt;/a&gt; ), и этот параметр указывает его родительский кадр. Если &lt;code&gt;nil&lt;/code&gt; , это означает, что этот кадр является обычным кадром верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="3dc5cecd5ae6adced229d7859e627328536d0fb9" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means that this is an &lt;em&gt;override redirect&lt;/em&gt; frame&amp;mdash;a frame not handled by window managers under X. Override redirect frames have no window manager decorations, can be positioned and resized only via Emacs&amp;rsquo; positioning and resizing functions and are usually drawn on top of all other frames. Setting this parameter has no effect on MS-Windows.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , это означает, что это фрейм &lt;em&gt;переадресации перенаправления&lt;/em&gt; - фрейм, не обрабатываемый оконными менеджерами в X. Фреймы переопределения перенаправления не имеют декораций оконного менеджера, их можно позиционировать и изменять размер только с помощью функций позиционирования и изменения размера Emacs и обычно нарисованный поверх всех остальных рамок. Установка этого параметра не влияет на MS-Windows.</target>
        </trans-unit>
        <trans-unit id="da44bdfd5b24c8bfe0e4891fe8c73345cdb16849" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means the menu bar is external (not part of the native frame of &lt;var&gt;frame&lt;/var&gt;).</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , это означает, что строка меню является внешней (не является частью собственного фрейма &lt;var&gt;frame&lt;/var&gt; ).</target>
        </trans-unit>
        <trans-unit id="962a1a045ca85f14cf97fdf8ab31eea548b04b94" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means the tool bar is external (not part of the native frame of &lt;var&gt;frame&lt;/var&gt;).</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , это означает, что панель инструментов является внешней (не является частью собственного фрейма &lt;var&gt;frame&lt;/var&gt; ).</target>
        </trans-unit>
        <trans-unit id="4eac0859d84f0a05577356e8fbce498e280209b6" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this parameter specifies another frame whose deletion will automatically trigger the deletion of this frame. See &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , этот параметр указывает другой фрейм, удаление которого автоматически инициирует удаление этого фрейма. См. &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Удаление кадров&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20ed41705ebeeda266d5dae4c9797dae4768c160" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this parameter specifies the frame whose windows will be scrolled whenever the mouse wheel is scrolled with the mouse pointer hovering over this frame, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-Commands.html#Mouse-Commands&quot;&gt;Mouse Commands&lt;/a&gt; in</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , этот параметр указывает фрейм, окна которого будут прокручиваться всякий раз, когда колесо мыши прокручивается с указателем мыши, наведенным на этот фрейм, см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-Commands.html#Mouse-Commands&quot;&gt;Команды мыши&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="ea97d1dd955b4a93685dec6602c740f2fecdb06f" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this property indicates that the case of the abbrev&amp;rsquo;s name is significant and should only match a text with the same pattern of capitalization. It also disables the code that modifies the capitalization of the expansion.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , это свойство указывает, что регистр имени аббревиатуры имеет значение и должен соответствовать только тексту с тем же шаблоном использования заглавных букв. Он также отключает код, который изменяет регистр в раскрытии.</target>
        </trans-unit>
        <trans-unit id="3b0f23f2b6d5c910a35b595d44ea4ce68ff1dea0" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this property is a regular expression that indicates how to extract the name of the abbrev before point, before looking it up in the table. When the regular expression matches before point, the abbrev name is expected to be in submatch 1. If this property is &lt;code&gt;nil&lt;/code&gt;, the default is to use &lt;code&gt;backward-word&lt;/code&gt; and &lt;code&gt;forward-word&lt;/code&gt; to find the name. This property allows the use of abbrevs whose name contains characters of non-word syntax.</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , это свойство является регулярным выражением, которое указывает, как извлечь имя сокращения перед точкой, прежде чем искать его в таблице. Когда регулярное выражение совпадает перед точкой, ожидается, что сокращенное имя будет в подматче 1. Если это свойство равно &lt;code&gt;nil&lt;/code&gt; , по умолчанию для поиска имени используется &lt;code&gt;backward-word&lt;/code&gt; и &lt;code&gt;forward-word&lt;/code&gt; . Это свойство позволяет использовать аббревиатуры, имя которых содержит символы несловесного синтаксиса.</target>
        </trans-unit>
        <trans-unit id="da204cd82fccce49a73b14d713bb7c44d191f46e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this property marks the abbrev as a system abbrev. Such abbrevs are not saved (see &lt;a href=&quot;abbrev-files#Abbrev-Files&quot;&gt;Abbrev Files&lt;/a&gt;).</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , это свойство отмечает аббревиатуру как системную. Такие сокращения не сохраняются (см. &lt;a href=&quot;abbrev-files#Abbrev-Files&quot;&gt;Файлы сокращений&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b7864d17274f58c7d7228812dc0a0690207352bc" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this property should be a function of no arguments which returns &lt;code&gt;nil&lt;/code&gt; if the abbrev should not be used and &lt;code&gt;t&lt;/code&gt; otherwise.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , это свойство должно быть функцией без аргументов, которая возвращает &lt;code&gt;nil&lt;/code&gt; , если сокращение не следует использовать, и &lt;code&gt;t&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="d52160aabd29ccf2ccf85f78b5eb3a00cb4614a4" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this should be a function that accepts the same arguments as &lt;code&gt;read-file-name&lt;/code&gt;. When &lt;code&gt;read-file-name&lt;/code&gt; is called, it calls this function with the supplied arguments instead of doing its usual work.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , это должна быть функция, которая принимает те же аргументы, что и &lt;code&gt;read-file-name&lt;/code&gt; . Когда вызывается &lt;code&gt;read-file-name&lt;/code&gt; , он вызывает эту функцию с предоставленными аргументами вместо того, чтобы выполнять свою обычную работу.</target>
        </trans-unit>
        <trans-unit id="af404a683fbefe27acb5086d831aa82f029d298e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this specifies that the minor mode should be global rather than buffer-local. It defaults to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , это указывает, что второстепенный режим должен быть глобальным, а не локальным для буфера. По умолчанию значение &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62767a1386886516923d977b00950df7b261c6f7" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this specifies the named variable&amp;rsquo;s documentation string. This is set automatically by &lt;code&gt;defvar&lt;/code&gt; and related functions. See &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , это указывает строку документации именованной переменной. Это устанавливается автоматически с помощью &lt;code&gt;defvar&lt;/code&gt; и связанных функций. См. &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Определение лиц&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20d0b6089b85f69d0a48b3636ebf1867a4b03293" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this tells the window manager to remove the frame&amp;rsquo;s icon from the taskbar associated with the frame&amp;rsquo;s display and inhibit switching to the frame&amp;rsquo;s window via the combination</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , это указывает диспетчеру окон удалить значок кадра с панели задач, связанной с отображением кадра, и запретить переключение на окно кадра с помощью комбинации</target>
        </trans-unit>
        <trans-unit id="c636a6cd5eb64c7cc32e0232081bb6526956cb5c" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable enables detection of circular and shared structure in printing. See &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Circular Objects&lt;/a&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , эта переменная позволяет обнаруживать циклическую и разделяемую структуру при печати. См. &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Круглые объекты&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4943f3537977953a83f606eb122772e31539c861" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable enables detection of uninterned symbols (see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;) in printing. When this is enabled, uninterned symbols print with the prefix &amp;lsquo;</source>
          <target state="translated">Если не равно &lt;code&gt;nil&lt;/code&gt; , эта переменная разрешает обнаружение неорганизованных символов (см. &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Создание символов&lt;/a&gt; ) при печати. Когда этот параметр включен, неорганизованные символы печатаются с префиксом '</target>
        </trans-unit>
        <trans-unit id="e740af8f1d9afb1b33a754a87cc5c1a51f9a0cf2" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable enables the reading of circular and shared structures. See &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Circular Objects&lt;/a&gt;. Its default value is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , эта переменная разрешает чтение циклических и общих структур. См. &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Круглые объекты&lt;/a&gt; . Его значение по умолчанию - &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c43ef7f6cdbaf44d75a6a5e8be960c86f73a9314" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable holds a function for finding the beginning of a defun. The function &lt;code&gt;beginning-of-defun&lt;/code&gt; calls this function instead of using its normal method, passing it its optional argument. If the argument is non-&lt;code&gt;nil&lt;/code&gt;, the function should move back by that many functions, like &lt;code&gt;beginning-of-defun&lt;/code&gt; does.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , эта переменная содержит функцию для поиска начала defun. Функция &lt;code&gt;beginning-of-defun&lt;/code&gt; вызывает эту функцию вместо использования ее обычного метода, передавая ей необязательный аргумент. Если аргумент не равен &lt;code&gt;nil&lt;/code&gt; , функция должна переместиться назад на такое же количество функций, как это происходит &lt;code&gt;beginning-of-defun&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ba48d5a1f651bee184dff9da83bc16ddb3d2bb6" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable holds a function for finding the end of a defun. The function &lt;code&gt;end-of-defun&lt;/code&gt; calls this function instead of using its normal method.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , эта переменная содержит функцию для поиска конца defun. Функция &lt;code&gt;end-of-defun&lt;/code&gt; вызывает эту функцию вместо использования ее обычного метода.</target>
        </trans-unit>
        <trans-unit id="a45561e07f2520c635c526032ab3106d071ec2d8" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable holds a keymap to use instead of &lt;code&gt;overriding-local-map&lt;/code&gt;, the buffer&amp;rsquo;s local keymap, text property or overlay keymaps, and all the minor mode keymaps.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , эта переменная содержит раскладку клавиатуры для использования вместо &lt;code&gt;overriding-local-map&lt;/code&gt; , локальную раскладку буфера, текстовое свойство или раскладку раскладок, а также раскладки всех вспомогательных режимов.</target>
        </trans-unit>
        <trans-unit id="b0a3bbe8306a043ed80dc3d3269b0d063a9cdaf5" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable holds a keymap to use instead of the buffer&amp;rsquo;s local keymap, any text property or overlay keymaps, and any minor mode keymaps. This keymap, if specified, overrides all other maps that would have been active, except for the current global map.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , эта переменная содержит раскладку клавиатуры для использования вместо локальной раскладки буфера, любое свойство текста или раскладку раскладки клавиатуры, а также любые раскладки вспомогательного режима. Эта раскладка клавиатуры, если она указана, отменяет все другие карты, которые были бы активными, кроме текущей глобальной карты.</target>
        </trans-unit>
        <trans-unit id="1106df1ab5132fac1dbae2e453ec2bd4a0ec3e6d" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable is a string that specifies a file or directory for Emacs to display after starting up, instead of the startup screen. If its value is a function, Emacs calls that function which must return a buffer which is then displayed. If its value is &lt;code&gt;t&lt;/code&gt;, Emacs displays the</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , эта переменная представляет собой строку, которая определяет файл или каталог, который Emacs будет отображать после запуска вместо экрана запуска. Если его значением является функция, Emacs вызывает эту функцию, которая должна возвращать буфер, который затем отображается. Если его значение равно &lt;code&gt;t&lt;/code&gt; , Emacs отображает</target>
        </trans-unit>
        <trans-unit id="a7735c3b50e466c5346e5483a5cf6de45a740a3c" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable&amp;rsquo;s value should be a regular expression matching a line separates two paragraphs. The regular expression is always matched after a newline, so it is best to anchor it, i.e., begin it with a &lt;code&gt;&quot;^&quot;&lt;/code&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , значение этой переменной должно быть регулярным выражением, соответствующим строке, разделяющей два абзаца. Регулярное выражение всегда сопоставляется после новой строки, поэтому лучше всего привязать его, т. Е. Начинать с символа &lt;code&gt;&quot;^&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8c483d93ec64f7cd1bb9d46db96b7a9b42b8cbd" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable&amp;rsquo;s value should be a regular expression matching a line that starts or separates two paragraphs. The regular expression is always matched after a newline, so it is best to anchor it, i.e., begin it with a &lt;code&gt;&quot;^&quot;&lt;/code&gt;.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , значение этой переменной должно быть регулярным выражением, соответствующим строке, которая начинается или разделяет два абзаца. Регулярное выражение всегда сопоставляется после новой строки, поэтому лучше всего привязать его, т. Е. Начинать с символа &lt;code&gt;&quot;^&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="280cbc03daf2bda778c4a01d6aeb7519dd501af4" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, try to make an asynchronous connection.</source>
          <target state="translated">Если не &lt;code&gt;nil&lt;/code&gt; , попробуйте установить асинхронное соединение.</target>
        </trans-unit>
        <trans-unit id="61817df020a9cee36aafed5b8511a8145e9c9a55" translate="yes" xml:space="preserve">
          <source>If none of the alternatives will work, then &lt;var&gt;symbol&lt;/var&gt; is defined as &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если ни одна из альтернатив не работает, &lt;var&gt;symbol&lt;/var&gt; определяется как &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab210fcdba9cf2a292faa98b31540cd2272662ce" translate="yes" xml:space="preserve">
          <source>If not a string, &lt;var&gt;prompter&lt;/var&gt; should be a function of one argument (the next object to ask about) and should return the question text. If the value is a string, that is the question to ask the user. The function can also return &lt;code&gt;t&lt;/code&gt;, meaning do act on this object (and don&amp;rsquo;t ask the user), or &lt;code&gt;nil&lt;/code&gt;, meaning ignore this object (and don&amp;rsquo;t ask the user).</source>
          <target state="translated">Если это не строка, &lt;var&gt;prompter&lt;/var&gt; должна быть функцией одного аргумента (следующего объекта, о котором нужно спросить) и должна возвращать текст вопроса. Если значение является строкой, это вопрос, который следует задать пользователю. Функция также может возвращать &lt;code&gt;t&lt;/code&gt; , что означает действовать на этот объект (и не спрашивать пользователя), или &lt;code&gt;nil&lt;/code&gt; , что означает игнорировать этот объект (и не спрашивать пользователя).</target>
        </trans-unit>
        <trans-unit id="67a1d4c8683efa99c2168cdafc5e612006344baf" translate="yes" xml:space="preserve">
          <source>If not running in batch mode, it initializes the window system that the variable &lt;code&gt;initial-window-system&lt;/code&gt; specifies (see &lt;a href=&quot;window-systems#Window-Systems&quot;&gt;initial-window-system&lt;/a&gt;). The initialization function, &lt;code&gt;window-system-initialization&lt;/code&gt;, is a &lt;em&gt;generic function&lt;/em&gt; (see &lt;a href=&quot;generic-functions#Generic-Functions&quot;&gt;Generic Functions&lt;/a&gt;) whose actual implementation is different for each supported window system. If the value of &lt;code&gt;initial-window-system&lt;/code&gt; is &lt;var&gt;windowsystem&lt;/var&gt;, then the appropriate implementation of the initialization function is defined in the file</source>
          <target state="translated">Если он не работает в пакетном режиме, он инициализирует оконную систему, которую указывает переменная &lt;code&gt;initial-window-system&lt;/code&gt; (см. &lt;a href=&quot;window-systems#Window-Systems&quot;&gt;Initial-window-system&lt;/a&gt; ). Функция инициализации, &lt;code&gt;window-system-initialization&lt;/code&gt; , является &lt;em&gt;универсальной функцией&lt;/em&gt; (см. &lt;a href=&quot;generic-functions#Generic-Functions&quot;&gt;Общие функции&lt;/a&gt; ), фактическая реализация которой отличается для каждой поддерживаемой оконной системы. Если значением &lt;code&gt;initial-window-system&lt;/code&gt; является &lt;var&gt;windowsystem&lt;/var&gt; , то соответствующая реализация функции инициализации определяется в файле</target>
        </trans-unit>
        <trans-unit id="bb9448622189047367a41ddeacab7b38408ac501" translate="yes" xml:space="preserve">
          <source>If omitted, &lt;var&gt;key-type&lt;/var&gt; and &lt;var&gt;value-type&lt;/var&gt; default to &lt;code&gt;sexp&lt;/code&gt;.</source>
          <target state="translated">Если не указано, &lt;var&gt;key-type&lt;/var&gt; и &lt;var&gt;value-type&lt;/var&gt; значения по умолчанию - &lt;code&gt;sexp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7e71cebc3c66ab4082f201e462bbaf1ce7c0b68" translate="yes" xml:space="preserve">
          <source>If one end of the region is in the middle of a word, the part of the word within the region is treated as an entire word.</source>
          <target state="translated">Если один конец региона находится в середине слова,то часть слова внутри региона рассматривается как целое слово.</target>
        </trans-unit>
        <trans-unit id="66a4039abe03c13c0561b28386a05539429258f2" translate="yes" xml:space="preserve">
          <source>If one of these events arrives in the middle of a key sequence&amp;mdash;that is, after a prefix key&amp;mdash;then Emacs reorders the events so that this event comes either before or after the multi-event key sequence, not within it.</source>
          <target state="translated">Если одно из этих событий происходит в середине ключевой последовательности, то есть после префиксного ключа, то Emacs переупорядочивает события так, чтобы это событие происходило либо до, либо после многособытийной ключевой последовательности, а не внутри нее.</target>
        </trans-unit>
        <trans-unit id="70c820f28b6f81163a2fcd6aeeb0821735017d2c" translate="yes" xml:space="preserve">
          <source>If one of those coding systems can safely encode all the specified text, &lt;code&gt;select-safe-coding-system&lt;/code&gt; chooses it and returns it. Otherwise, it asks the user to choose from a list of coding systems which can encode all the text, and returns the user&amp;rsquo;s choice.</source>
          <target state="translated">Если одна из этих систем кодирования может безопасно закодировать весь указанный текст, &lt;code&gt;select-safe-coding-system&lt;/code&gt; выбирает его и возвращает. В противном случае он просит пользователя выбрать из списка систем кодирования, которые могут кодировать весь текст, и возвращает выбор пользователя.</target>
        </trans-unit>
        <trans-unit id="ac28b562a40846fb95c93a8e31234c329ab78e48" translate="yes" xml:space="preserve">
          <source>If only one match exists and &lt;var&gt;filename&lt;/var&gt; matches it exactly, the function returns &lt;code&gt;t&lt;/code&gt;. The function returns &lt;code&gt;nil&lt;/code&gt; if directory &lt;var&gt;directory&lt;/var&gt; contains no name starting with &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">Если существует только одно совпадение и &lt;var&gt;filename&lt;/var&gt; совпадает с ним точно, функция возвращает &lt;code&gt;t&lt;/code&gt; . Функция возвращает &lt;code&gt;nil&lt;/code&gt; , если каталог &lt;var&gt;directory&lt;/var&gt; содержит имени, начинающегося с &lt;var&gt;filename&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="01df909390f239453c6a94e3d0fb276a63413958" translate="yes" xml:space="preserve">
          <source>If optional argument &lt;var&gt;base64url&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then padding is optional, and the URL variant of base 64 encoding is used.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;base64url&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то заполнение не является обязательным, и используется вариант URL-адреса с кодировкой base 64.</target>
        </trans-unit>
        <trans-unit id="d861c286c60b784f7a1b3417fdf86a78bcec09ba" translate="yes" xml:space="preserve">
          <source>If optional argument &lt;var&gt;buffer&lt;/var&gt; specifies a buffer, the decoded text is inserted in that buffer after point (point does not move). In this case, the return value is the length of the decoded text. If that buffer is a unibyte buffer, the internal representation of the decoded text is inserted into it as individual bytes.</source>
          <target state="translated">Если дополнительный аргумент &lt;var&gt;buffer&lt;/var&gt; указывает буфер, декодированный текст вставляется в этот буфер после точки (точка не перемещается). В этом случае возвращаемое значение - длина декодированного текста. Если этот буфер является однобайтовым буфером, внутреннее представление декодированного текста вставляется в него как отдельные байты.</target>
        </trans-unit>
        <trans-unit id="480ea6c814466472736a87d99b32421822788b2f" translate="yes" xml:space="preserve">
          <source>If optional argument &lt;var&gt;style-variant-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to create bold, italic and bold-italic variants of the fontset as well. These variant fontsets do not have a short name, only a long one, which is made by altering &lt;var&gt;fontpattern&lt;/var&gt; to indicate the bold and/or italic status.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;style-variant-p&lt;/var&gt; отличен от &lt;code&gt;nil&lt;/code&gt; , это означает , что нужно также создавать полужирный, курсив и полужирный курсивный вариант набора шрифтов. Эти варианты наборов шрифтов не имеют короткого имени, а только длинного, которое &lt;var&gt;fontpattern&lt;/var&gt; путем изменения fontpattern для обозначения полужирного и / или курсивного статуса.</target>
        </trans-unit>
        <trans-unit id="22b0c570c8e94a4480bf1874391ca5f7bf4ec0af" translate="yes" xml:space="preserve">
          <source>If parts of the string have &lt;code&gt;face&lt;/code&gt; properties, they control display of the text just as they would text in the buffer. Any characters which have no &lt;code&gt;face&lt;/code&gt; properties are displayed, by default, in the face &lt;code&gt;mode-line&lt;/code&gt; or &lt;code&gt;mode-line-inactive&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Standard-Faces.html#Standard-Faces&quot;&gt;Standard Faces&lt;/a&gt; in</source>
          <target state="translated">Если части строки имеют свойства &lt;code&gt;face&lt;/code&gt; , они управляют отображением текста так же, как и текст в буфере. Любые символы , которые не имеют &lt;code&gt;face&lt;/code&gt; свойств отображаются по умолчанию, в лице &lt;code&gt;mode-line&lt;/code&gt; или &lt;code&gt;mode-line-inactive&lt;/code&gt; (см &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Standard-Faces.html#Standard-Faces&quot;&gt;Стандарт лица&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="8bac572666fabef579b22818bbade7a65d83f51c" translate="yes" xml:space="preserve">
          <source>If passed a marker as its argument, &lt;code&gt;copy-marker&lt;/code&gt; returns a new marker that points to the same place and the same buffer as does &lt;var&gt;marker-or-integer&lt;/var&gt;. If passed an integer as its argument, &lt;code&gt;copy-marker&lt;/code&gt; returns a new marker that points to position &lt;var&gt;marker-or-integer&lt;/var&gt; in the current buffer.</source>
          <target state="translated">Если в качестве аргумента передан маркер, &lt;code&gt;copy-marker&lt;/code&gt; возвращает новый маркер, указывающий на то же место и тот же буфер, что и &lt;var&gt;marker-or-integer&lt;/var&gt; . Если передано целое число в качестве аргумента, &lt;code&gt;copy-marker&lt;/code&gt; возвращает новый маркер, указывающий на положение &lt;var&gt;marker-or-integer&lt;/var&gt; в текущем буфере.</target>
        </trans-unit>
        <trans-unit id="dfe34896c40a35569875599278219978bfea436c" translate="yes" xml:space="preserve">
          <source>If point is in the middle of a word, the part of the word before point is ignored when moving forward. The rest is treated as an entire word.</source>
          <target state="translated">Если точка находится в середине слова,то при движении вперед часть слова перед точкой игнорируется.Остальное рассматривается как целое слово.</target>
        </trans-unit>
        <trans-unit id="3749fd862364fdb39215d6dc2b445a92a26ab2f8" translate="yes" xml:space="preserve">
          <source>If point was inside the deleted region, its value afterward is &lt;var&gt;start&lt;/var&gt;. Otherwise, point relocates with the surrounding text, as markers do.</source>
          <target state="translated">Если точка находилась внутри удаленной области, ее значение впоследствии будет &lt;var&gt;start&lt;/var&gt; . В противном случае точка перемещается вместе с окружающим текстом, как и маркеры.</target>
        </trans-unit>
        <trans-unit id="80e36e301d501f8216853561e1b67dadd77e8c14" translate="yes" xml:space="preserve">
          <source>If present, &lt;var&gt;doc&lt;/var&gt; should be the function&amp;rsquo;s documentation string (see &lt;a href=&quot;function-documentation#Function-Documentation&quot;&gt;Function Documentation&lt;/a&gt;); &lt;var&gt;declare&lt;/var&gt;, if present, should be a &lt;code&gt;declare&lt;/code&gt; form (see &lt;a href=&quot;declare-form#Declare-Form&quot;&gt;Declare Form&lt;/a&gt;) specifying the function&amp;rsquo;s metadata.</source>
          <target state="translated">Если присутствует, &lt;var&gt;doc&lt;/var&gt; должен быть строкой документации функции (см. &lt;a href=&quot;function-documentation#Function-Documentation&quot;&gt;Документацию по функциям&lt;/a&gt; ); &lt;var&gt;declare&lt;/var&gt; , если он присутствует, должен быть формой &lt;code&gt;declare&lt;/code&gt; (см. &lt;a href=&quot;declare-form#Declare-Form&quot;&gt;Форма объявления&lt;/a&gt; ), определяющей метаданные функции.</target>
        </trans-unit>
        <trans-unit id="592fe49d913f982c1c614220519b3c486b6bc502" translate="yes" xml:space="preserve">
          <source>If provided, &lt;var&gt;stopped&lt;/var&gt; must be &lt;code&gt;nil&lt;/code&gt;; it is an error to use any non-&lt;code&gt;nil&lt;/code&gt; value. The &lt;code&gt;:stop&lt;/code&gt; key is ignored otherwise and is retained for compatibility with other process types such as pipe processes. Asynchronous subprocesses never start in the stopped state.</source>
          <target state="translated">Если предусмотрено, значение &lt;var&gt;stopped&lt;/var&gt; должно быть &lt;code&gt;nil&lt;/code&gt; ; использование любого &lt;code&gt;nil&lt;/code&gt; значения является ошибкой . В противном случае ключ &lt;code&gt;:stop&lt;/code&gt; игнорируется и сохраняется для совместимости с другими типами процессов, такими как конвейерные процессы. Асинхронные подпроцессы никогда не запускаются в остановленном состоянии.</target>
        </trans-unit>
        <trans-unit id="dfcc614230ff099bc17d061b1a9cb77878a865a4" translate="yes" xml:space="preserve">
          <source>If provided, &lt;var&gt;subfeatures&lt;/var&gt; should be a list of symbols indicating a set of specific subfeatures provided by this version of &lt;var&gt;feature&lt;/var&gt;. You can test the presence of a subfeature using &lt;code&gt;featurep&lt;/code&gt;. The idea of subfeatures is that you use them when a package (which is one &lt;var&gt;feature&lt;/var&gt;) is complex enough to make it useful to give names to various parts or functionalities of the package, which might or might not be loaded, or might or might not be present in a given version. See &lt;a href=&quot;network-feature-testing#Network-Feature-Testing&quot;&gt;Network Feature Testing&lt;/a&gt;, for an example.</source>
          <target state="translated">Если предоставлено, &lt;var&gt;subfeatures&lt;/var&gt; должны быть списком символов, обозначающих набор определенных подкомпонентов, предоставляемых этой версией &lt;var&gt;feature&lt;/var&gt; . Вы можете проверить наличие подкомпонента с помощью &lt;code&gt;featurep&lt;/code&gt; . Идея подфункций заключается в том, что вы используете их, когда пакет (который является одной &lt;var&gt;feature&lt;/var&gt; ) достаточно сложен, чтобы было полезно давать имена различным частям или функциям пакета, которые могут или не могут быть загружены, или могут или не могут присутствовать в данной версии. См. Пример в разделе &amp;laquo; &lt;a href=&quot;network-feature-testing#Network-Feature-Testing&quot;&gt;Тестирование сетевых функций&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e2eabbe3fa4f2d35632affab0a43c6df27913857" translate="yes" xml:space="preserve">
          <source>If reading the file got an error because the file does not exist, but its directory does exist, the caller should pass a non-&lt;code&gt;nil&lt;/code&gt; value for &lt;var&gt;error&lt;/var&gt;. In that case, &lt;code&gt;after-find-file&lt;/code&gt; issues a warning: &amp;lsquo;</source>
          <target state="translated">Если при чтении файла возникла ошибка, потому что файл не существует, но его каталог существует, вызывающий должен передать &lt;code&gt;nil&lt;/code&gt; значение для &lt;var&gt;error&lt;/var&gt; . В этом случае &lt;code&gt;after-find-file&lt;/code&gt; выдает предупреждение: '</target>
        </trans-unit>
        <trans-unit id="554a84d46c1333835581ab6df680ffa7a31b4615" translate="yes" xml:space="preserve">
          <source>If repeated invocations of this command have already shown all buffers previously shown in &lt;var&gt;window&lt;/var&gt;, further invocations will show buffers from the buffer list of the frame &lt;var&gt;window&lt;/var&gt; appears on (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;).</source>
          <target state="translated">Если повторные вызовы этой команды уже показали все буферы, ранее показанные в &lt;var&gt;window&lt;/var&gt; , дальнейшие вызовы покажут буферы из списка буферов, в котором появляется &lt;var&gt;window&lt;/var&gt; фрейма (см. &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Список&lt;/a&gt; буферов ).</target>
        </trans-unit>
        <trans-unit id="eea47e31caf682f7c71a68241a70e2c82326f87d" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;t&lt;/code&gt;, draw an arc in &lt;em&gt;positive angle direction&lt;/em&gt;. Otherwise, draw it in &lt;em&gt;negative angle direction&lt;/em&gt;.</source>
          <target state="translated">Если установлено значение &lt;code&gt;t&lt;/code&gt; , нарисуйте дугу в &lt;em&gt;положительном угловом направлении&lt;/em&gt; . В противном случае нарисуйте его под &lt;em&gt;отрицательным углом&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1f172df4c7c3218d6e1f98dbbb15ba718462660a" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;t&lt;/code&gt;, draw an arc sweep greater than or equal to 180 degrees. Otherwise, draw an arc sweep smaller than or equal to 180 degrees.</source>
          <target state="translated">Если установлено значение &lt;code&gt;t&lt;/code&gt; , нарисуйте дугу больше или равную 180 градусам. В противном случае нарисуйте дугу, меньшую или равную 180 градусам.</target>
        </trans-unit>
        <trans-unit id="67032af11735e17a37ddd89ff58864ae7c1ce3e1" translate="yes" xml:space="preserve">
          <source>If several sources (overlays and/or a text property) specify values for the &lt;code&gt;display&lt;/code&gt; property, only one of the values takes effect, following the rules of &lt;code&gt;get-char-property&lt;/code&gt;. See &lt;a href=&quot;examining-properties#Examining-Properties&quot;&gt;Examining Properties&lt;/a&gt;.</source>
          <target state="translated">Если несколько источников (наложения и / или текстовое свойство) задают значения для свойства &lt;code&gt;display&lt;/code&gt; , только одно из значений вступает в силу в соответствии с правилами &lt;code&gt;get-char-property&lt;/code&gt; . См. &lt;a href=&quot;examining-properties#Examining-Properties&quot;&gt;Исследование свойств&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c074546b8fe6d7ca3e6f2e14f46644ca120fdf4a" translate="yes" xml:space="preserve">
          <source>If some Lisp object can&amp;rsquo;t be represented in JSON, the serialization functions will signal an error of type &lt;code&gt;wrong-type-argument&lt;/code&gt;. The parsing functions can also signal the following errors:</source>
          <target state="translated">Если какой-либо объект Lisp не может быть представлен в JSON, функции сериализации сообщат об ошибке типа &amp;laquo; &lt;code&gt;wrong-type-argument&lt;/code&gt; . Функции синтаксического анализа также могут сигнализировать о следующих ошибках:</target>
        </trans-unit>
        <trans-unit id="8e5e3934a5d5e20d2331b5a62708ba9dc067be98" translate="yes" xml:space="preserve">
          <source>If some values are covered by more than one of the alternatives, customize will choose the first alternative that the value fits. This means you should always list the most specific types first, and the most general last. Here&amp;rsquo;s an example of proper usage:</source>
          <target state="translated">Если некоторые значения охватываются несколькими альтернативами, при настройке будет выбрана первая альтернатива, которой соответствует значение. Это означает, что вы всегда должны сначала перечислять наиболее конкретные типы, а последние - наиболее общие. Вот пример правильного использования:</target>
        </trans-unit>
        <trans-unit id="9ef863607d02025ca88f613cd7f2998c82c1e3cb" translate="yes" xml:space="preserve">
          <source>If something special should be done if the user switches a buffer from this mode to any other major mode, this mode can set up a buffer-local value for &lt;code&gt;change-major-mode-hook&lt;/code&gt; (see &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creating Buffer-Local&lt;/a&gt;).</source>
          <target state="translated">Если нужно сделать что-то особенное, если пользователь переключает буфер из этого режима в любой другой основной режим, этот режим может установить значение локального буфера для &lt;code&gt;change-major-mode-hook&lt;/code&gt; (см. &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Создание локального буфера&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="06b14227a7f4c3fc1c01323854e38f7bd6895191" translate="yes" xml:space="preserve">
          <source>If splitting the selected window fails and there is a non-dedicated window below the selected one showing some other buffer, this function tries to use that window for showing &lt;var&gt;buffer&lt;/var&gt;.</source>
          <target state="translated">Если разделение выбранного окна не удается, а под выбранным есть незанятое окно, показывающее другой буфер, эта функция пытается использовать это окно для отображения &lt;var&gt;buffer&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="3171bd5912c72436fbbc18b56096ef42d8a41b5f" translate="yes" xml:space="preserve">
          <source>If started by the X session manager, it calls &lt;code&gt;emacs-session-restore&lt;/code&gt; passing it as argument the ID of the previous session. See &lt;a href=&quot;session-management#Session-Management&quot;&gt;Session Management&lt;/a&gt;.</source>
          <target state="translated">Если запускается менеджером X-сеанса, он вызывает &lt;code&gt;emacs-session-restore&lt;/code&gt; , передавая ему в качестве аргумента идентификатор предыдущего сеанса. См. &lt;a href=&quot;session-management#Session-Management&quot;&gt;Управление сеансом&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a5c5d634f325e4f5dde5c41de6695d4c44baf93f" translate="yes" xml:space="preserve">
          <source>If started on a text terminal, it loads the terminal-specific Lisp library (see &lt;a href=&quot;terminal_002dspecific#Terminal_002dSpecific&quot;&gt;Terminal-Specific&lt;/a&gt;), and runs the hook &lt;code&gt;tty-setup-hook&lt;/code&gt;. This is not done in &lt;code&gt;--batch&lt;/code&gt; mode, nor if &lt;code&gt;term-file-prefix&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если он запущен на текстовом терминале, он загружает специфичную для терминала библиотеку Lisp (см. &lt;a href=&quot;terminal_002dspecific#Terminal_002dSpecific&quot;&gt;Специфичные для терминала&lt;/a&gt; ) и запускает ловушку &lt;code&gt;tty-setup-hook&lt;/code&gt; . Это не выполняется ни в режиме &lt;code&gt;--batch&lt;/code&gt; , ни в том случае, если &lt;code&gt;term-file-prefix&lt;/code&gt; равен &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29f4b9655356d4a0356d199cc4f7f41ac90dc783" translate="yes" xml:space="preserve">
          <source>If successful it returns a list of Lisp representations of network addresses, otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">В случае успеха он возвращает список Lisp-представлений сетевых адресов, в противном случае возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40c0fd421e87b00227c46aaa704ee2421a1c5407" translate="yes" xml:space="preserve">
          <source>If text has a &lt;code&gt;line-prefix&lt;/code&gt; property, the prefix it defines will be added at display time to the beginning of every non-continuation line. It may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;).</source>
          <target state="translated">Если текст имеет свойство &lt;code&gt;line-prefix&lt;/code&gt; , префикс, который он определяет, будет добавлен во время отображения в начало каждой строки, не являющейся продолжением. Это может быть строка или изображение (см. &amp;laquo; &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Другие характеристики отображения&amp;raquo;&lt;/a&gt; ) или отрезок пробелов, например, указанный в свойствах отображения &lt;code&gt;:width&lt;/code&gt; или &lt;code&gt;:align-to&lt;/code&gt; (см. &amp;laquo; &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Указанное пространство&amp;raquo;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="44bc217d22059bdc283ced6839d350ff858ba4cd" translate="yes" xml:space="preserve">
          <source>If text has a &lt;code&gt;wrap-prefix&lt;/code&gt; property, the prefix it defines will be added at display time to the beginning of every continuation line due to text wrapping (so if lines are truncated, the wrap-prefix is never used). It may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;).</source>
          <target state="translated">Если текст имеет свойство &lt;code&gt;wrap-prefix&lt;/code&gt; , префикс, который он определяет, будет добавлен во время отображения в начало каждой строки продолжения из-за переноса текста (поэтому, если строки усекаются, префикс wrap-prefix никогда не используется). Это может быть строка или изображение (см. &amp;laquo; &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Другие характеристики отображения&amp;raquo;&lt;/a&gt; ) или отрезок пробелов, например, указанный в свойствах отображения &lt;code&gt;:width&lt;/code&gt; или &lt;code&gt;:align-to&lt;/code&gt; (см. &amp;laquo; &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Указанное пространство&amp;raquo;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5d15fe92b153b20c4991e58ddab61aea1df96e7c" translate="yes" xml:space="preserve">
          <source>If text has a string as its &lt;code&gt;help-echo&lt;/code&gt; property, then when you move the mouse onto that text, Emacs displays that string in the echo area, or in the tooltip window (see &lt;a href=&quot;tooltips#Tooltips&quot;&gt;Tooltips&lt;/a&gt;), after passing it through &lt;code&gt;substitute-command-keys&lt;/code&gt;.</source>
          <target state="translated">Если текст имеет строку в качестве свойства &lt;code&gt;help-echo&lt;/code&gt; , тогда, когда вы наводите указатель мыши на этот текст, Emacs отображает эту строку в области эха или в окне всплывающей подсказки (см. &lt;a href=&quot;tooltips#Tooltips&quot;&gt;Всплывающие подсказки&lt;/a&gt; ) после передачи ее через &lt;code&gt;substitute-command-keys&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b184a99089048ed59983006ccef80734494848e0" translate="yes" xml:space="preserve">
          <source>If that frame has evaluated its arguments and called its function already, the return value is &lt;code&gt;(t &lt;var&gt;function&lt;/var&gt;
&lt;var&gt;arg-values&lt;/var&gt;&amp;hellip;)&lt;/code&gt;.</source>
          <target state="translated">Если этот фрейм уже оценил свои аргументы и вызвал свою функцию, возвращаемое значение будет &lt;code&gt;(t &lt;var&gt;function&lt;/var&gt; &lt;var&gt;arg-values&lt;/var&gt;&amp;hellip;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="847eb61278468d0df3be4da2323afe62799a6a4e" translate="yes" xml:space="preserve">
          <source>If that frame has not evaluated the arguments yet, or is a special form, the value is &lt;code&gt;(nil &lt;var&gt;function&lt;/var&gt; &lt;var&gt;arg-forms&lt;/var&gt;&amp;hellip;)&lt;/code&gt;.</source>
          <target state="translated">Если этот кадр еще не оценил аргументы или является специальной формой, значение равно &lt;code&gt;(nil &lt;var&gt;function&lt;/var&gt; &lt;var&gt;arg-forms&lt;/var&gt;&amp;hellip;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d9b7696c9777c3fdef5f5f1690ef14ee23382d9" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="translated">Если</target>
        </trans-unit>
        <trans-unit id="5e17af952a2c4573220ead681dd1e997a966e239" translate="yes" xml:space="preserve">
          <source>If the 1-minute load average is available, but the 5- or 15-minute averages are not, this function returns a shortened list containing the available averages.</source>
          <target state="translated">Если доступно 1-минутное среднее значение загрузки,а 5-или 15-минутное-нет,то данная функция возвращает сокращенный список,содержащий доступные средние значения.</target>
        </trans-unit>
        <trans-unit id="97280f2e3281d934f6ea504750b20af163002078" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;defcustom&lt;/code&gt; form for &lt;var&gt;var&lt;/var&gt; has been evaluated prior to this &lt;code&gt;custom-set-variables&lt;/code&gt; call, &lt;var&gt;expression&lt;/var&gt; is immediately evaluated, and the variable&amp;rsquo;s value is set to the result. Otherwise, &lt;var&gt;expression&lt;/var&gt; is stored into the variable&amp;rsquo;s &lt;code&gt;saved-value&lt;/code&gt; property, to be evaluated when the relevant &lt;code&gt;defcustom&lt;/code&gt; is called (usually when the library defining that variable is loaded into Emacs).</source>
          <target state="translated">Если &lt;code&gt;defcustom&lt;/code&gt; форма для &lt;var&gt;var&lt;/var&gt; была оценена до этого вызова &lt;code&gt;custom-set-variables&lt;/code&gt; , &lt;var&gt;expression&lt;/var&gt; вычисляется немедленно, и значение переменной устанавливается равным результату. В противном случае &lt;var&gt;expression&lt;/var&gt; сохраняется в свойстве &lt;code&gt;saved-value&lt;/code&gt; переменной для оценки при &lt;code&gt;defcustom&lt;/code&gt; соответствующего defcustom (обычно, когда библиотека, определяющая эту переменную, загружается в Emacs).</target>
        </trans-unit>
        <trans-unit id="f174fd011e0f1c8a4e31cac2931b13c453f23857" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;font-lock-multiline&lt;/code&gt; variable is set to &lt;code&gt;t&lt;/code&gt;, Font Lock will try to add the &lt;code&gt;font-lock-multiline&lt;/code&gt; property automatically on multiline constructs. This is not a universal solution, however, since it slows down Font Lock somewhat. It can miss some multiline constructs, or make the property larger or smaller than necessary.</source>
          <target state="translated">Если для переменной &lt;code&gt;font-lock-multiline&lt;/code&gt; установлено значение &lt;code&gt;t&lt;/code&gt; , Font Lock попытается автоматически добавить свойство &lt;code&gt;font-lock-multiline&lt;/code&gt; в многострочные конструкции. Однако это не универсальное решение, так как оно несколько замедляет Font Lock. Он может пропустить некоторые многострочные конструкции или сделать свойство больше или меньше, чем необходимо.</target>
        </trans-unit>
        <trans-unit id="1790598c9ae458e0c35a5d4725099be9d0246fd4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;other-window&lt;/code&gt; parameter of the selected window is a function, and &lt;code&gt;ignore-window-parameters&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, that function will be called with the arguments &lt;var&gt;count&lt;/var&gt; and &lt;var&gt;all-frames&lt;/var&gt; instead of the normal operation of this function.</source>
          <target state="translated">Если параметр &lt;code&gt;other-window&lt;/code&gt; выбранного окна является функцией, а параметр &lt;code&gt;ignore-window-parameters&lt;/code&gt; равен &lt;code&gt;nil&lt;/code&gt; , эта функция будет вызываться с &lt;var&gt;count&lt;/var&gt; аргументов и &lt;var&gt;all-frames&lt;/var&gt; вместо нормальной работы этой функции.</target>
        </trans-unit>
        <trans-unit id="03b321af0c9e866eddae56c1656e85dcbc358fbe" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;window&lt;/code&gt; property is non-&lt;code&gt;nil&lt;/code&gt;, then the overlay applies only on that window.</source>
          <target state="translated">Если свойство &lt;code&gt;window&lt;/code&gt; равно &lt;code&gt;nil&lt;/code&gt; , то наложение применяется только к этому окну.</target>
        </trans-unit>
        <trans-unit id="97d3e8d43b35d39378da1c412e7a81cc5af262b9" translate="yes" xml:space="preserve">
          <source>If the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;list&lt;/var&gt; is &lt;code&gt;lambda&lt;/code&gt;, then the list is a lambda expression. This is presumed to be a function, and is treated as such (see above). In order to execute properly as a key binding, this function must be a command&amp;mdash;it must have an &lt;code&gt;interactive&lt;/code&gt; specification. See &lt;a href=&quot;defining-commands#Defining-Commands&quot;&gt;Defining Commands&lt;/a&gt;.</source>
          <target state="translated">Если &lt;small&gt;CAR&lt;/small&gt; из &lt;var&gt;list&lt;/var&gt; является &lt;code&gt;lambda&lt;/code&gt; , то список является лямбда - выражение. Предполагается, что это функция, и она рассматривается как таковая (см. Выше). Для правильного выполнения в качестве привязки клавиш эта функция должна быть командой - она ​​должна иметь &lt;code&gt;interactive&lt;/code&gt; спецификацию. См. &lt;a href=&quot;defining-commands#Defining-Commands&quot;&gt;Определение команд&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7154685a78e92985a36c6d7e12500a86e731c4fc" translate="yes" xml:space="preserve">
          <source>If the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;list&lt;/var&gt; is the symbol &lt;code&gt;keymap&lt;/code&gt;, then the list is a keymap, and is treated as a keymap (see above).</source>
          <target state="translated">Если &lt;small&gt;АВТОМОБИЛЬ&lt;/small&gt; из &lt;var&gt;list&lt;/var&gt; является символ &lt;code&gt;keymap&lt;/code&gt; , то список является раскладкой, и рассматриваются как раскладки клавиатуры (смотрите выше).</target>
        </trans-unit>
        <trans-unit id="fe289f9488db4ee1cd75cb0cd7b6108b6d71dc5c" translate="yes" xml:space="preserve">
          <source>If the &lt;small&gt;CDR&lt;/small&gt; of a list&amp;rsquo;s last cons cell is some value other than &lt;code&gt;nil&lt;/code&gt;, we call the structure a &lt;em&gt;dotted list&lt;/em&gt;, since its printed representation would use dotted pair notation (see &lt;a href=&quot;dotted-pair-notation#Dotted-Pair-Notation&quot;&gt;Dotted Pair Notation&lt;/a&gt;). There is one other possibility: some cons cell&amp;rsquo;s &lt;small&gt;CDR&lt;/small&gt; could point to one of the previous cons cells in the list. We call that structure a &lt;em&gt;circular list&lt;/em&gt;.</source>
          <target state="translated">Если &lt;small&gt;CDR&lt;/small&gt; последней cons-ячейки списка представляет собой какое-то значение, отличное от &lt;code&gt;nil&lt;/code&gt; , мы называем структуру &lt;em&gt;пунктирным списком&lt;/em&gt; , поскольку в ее печатном представлении будет использоваться нотация пар с точками (см. &lt;a href=&quot;dotted-pair-notation#Dotted-Pair-Notation&quot;&gt;Нотация&lt;/a&gt; точечных пар ). Есть еще одна возможность: &lt;small&gt;CDR&lt;/small&gt; некоторой cons-ячейки может указывать на одну из предыдущих cons-ячеек в списке. Мы называем эту структуру &lt;em&gt;круговым списком&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="424e8198016ba0ccc4d18f9f610113713028987b" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;alist&lt;/var&gt; argument of that function (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) contains a &lt;code&gt;preserve-size&lt;/code&gt; entry, the size of the window produced by that function is preserved.</source>
          <target state="translated">Если аргумент &lt;var&gt;alist&lt;/var&gt; этой функции (см. &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Выбор окна&lt;/a&gt; ) содержит запись с &lt;code&gt;preserve-size&lt;/code&gt; , размер окна, созданного этой функцией, сохраняется.</target>
        </trans-unit>
        <trans-unit id="c52639c39140e2bd123aed39bf8018dece7b3c48" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;doc-string&lt;/var&gt; argument is supplied, it specifies the documentation string for the variable (stored in the symbol&amp;rsquo;s &lt;code&gt;variable-documentation&lt;/code&gt; property). See &lt;a href=&quot;documentation#Documentation&quot;&gt;Documentation&lt;/a&gt;.</source>
          <target state="translated">Если указан аргумент &lt;var&gt;doc-string&lt;/var&gt; , он указывает строку документации для переменной (хранящуюся в свойстве &lt;code&gt;variable-documentation&lt;/code&gt; символа ). См. &lt;a href=&quot;documentation#Documentation&quot;&gt;Документацию&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d01ce025c58e0693441c85648be2ceace369821d" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;docstring&lt;/var&gt; argument is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the documentation for &lt;var&gt;new-alias&lt;/var&gt;; otherwise, the alias gets the same documentation as &lt;var&gt;base-variable&lt;/var&gt; has, if any, unless &lt;var&gt;base-variable&lt;/var&gt; is itself an alias, in which case &lt;var&gt;new-alias&lt;/var&gt; gets the documentation of the variable at the end of the chain of aliases.</source>
          <target state="translated">Если аргумент &lt;var&gt;docstring&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , он указывает документацию для &lt;var&gt;new-alias&lt;/var&gt; ; в противном случае псевдоним получает ту же документацию, что и &lt;var&gt;base-variable&lt;/var&gt; , если таковая имеется, если только &lt;var&gt;base-variable&lt;/var&gt; сама не является псевдонимом, и в этом случае &lt;var&gt;new-alias&lt;/var&gt; получает документацию переменной в конце цепочки псевдонимов.</target>
        </trans-unit>
        <trans-unit id="8abe3fc2fdc3412f9be8328b5b8da045f82402b4" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;file&lt;/var&gt; cannot be watched for some reason, this function signals a &lt;code&gt;file-notify-error&lt;/code&gt; error.</source>
          <target state="translated">Если по какой-то причине просмотр &lt;var&gt;file&lt;/var&gt; невозможен, эта функция сигнализирует &lt;code&gt;file-notify-error&lt;/code&gt; ошибке file-notify- error.</target>
        </trans-unit>
        <trans-unit id="d4664b8df5d4e7d3bdde95bfdbcdf58cf12a2663" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;find-file&lt;/var&gt; argument to &lt;code&gt;normal-mode&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;normal-mode&lt;/code&gt; assumes that the &lt;code&gt;find-file&lt;/code&gt; function is calling it. In this case, it may process local variables in the &amp;lsquo;</source>
          <target state="translated">Если аргумент &lt;var&gt;find-file&lt;/var&gt; для &lt;code&gt;normal-mode&lt;/code&gt; равен &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;normal-mode&lt;/code&gt; предполагает, что его вызывает функция &lt;code&gt;find-file&lt;/code&gt; . В этом случае он может обрабатывать локальные переменные в '</target>
        </trans-unit>
        <trans-unit id="544e0e4ec05ea04f153a1ffe2c205b4abdb7efdd" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;height&lt;/var&gt; value doesn&amp;rsquo;t fit the previous possibilities, it is a form. Emacs evaluates it to get the new height, with the symbol &lt;code&gt;height&lt;/code&gt; bound to the current specified font height.</source>
          <target state="translated">Если значение &lt;var&gt;height&lt;/var&gt; не соответствует предыдущим возможностям, это форма. Emacs оценивает его, чтобы получить новую высоту, при этом &lt;code&gt;height&lt;/code&gt; символа привязана к текущей указанной высоте шрифта.</target>
        </trans-unit>
        <trans-unit id="2ee2a9e2a05e9cbd4ebcabce4d98e573ce6b99f1" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;path&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that list of directories is used instead of &lt;code&gt;load-path&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;path&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , этот список каталогов используется вместо &lt;code&gt;load-path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9dbd115e2fe4851e1fd608ae59011205214448c" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;value&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, mark &lt;var&gt;option&lt;/var&gt; as automatically buffer-local; if the value is &lt;code&gt;permanent&lt;/code&gt;, also set &lt;var&gt;option&lt;/var&gt;s &lt;code&gt;permanent-local&lt;/code&gt; property to &lt;code&gt;t&lt;/code&gt;. See &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creating Buffer-Local&lt;/a&gt;.</source>
          <target state="translated">Если &lt;var&gt;value&lt;/var&gt; равно &lt;code&gt;t&lt;/code&gt; , отметьте &lt;var&gt;option&lt;/var&gt; как автоматически локальный в буфере; если значение является &lt;code&gt;permanent&lt;/code&gt; , также установите для свойства &lt;var&gt;option&lt;/var&gt; s &lt;code&gt;permanent-local&lt;/code&gt; значение &lt;code&gt;t&lt;/code&gt; . См. &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Создание Buffer-Local&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc8ad90de57bbf124d088ff2c62b110c84781c3c" translate="yes" xml:space="preserve">
          <source>If the Emacs process&amp;rsquo;s user-id does not correspond to any known user (and provided &lt;code&gt;NAME&lt;/code&gt; is not set), the result is &lt;code&gt;&quot;unknown&quot;&lt;/code&gt;.</source>
          <target state="translated">Если идентификатор пользователя процесса Emacs не соответствует ни одному известному пользователю (и при условии, что &lt;code&gt;NAME&lt;/code&gt; не установлено), результатом будет &lt;code&gt;&quot;unknown&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b4e9cfb4b7ef208b80fee0e223a915694d643a8" translate="yes" xml:space="preserve">
          <source>If the action code is a string or vector, the</source>
          <target state="translated">Если код действия представляет собой строку или вектор,то</target>
        </trans-unit>
        <trans-unit id="22a69351149b285cd95fc9520541a02ef12445d5" translate="yes" xml:space="preserve">
          <source>If the actual subdivision into intervals is meaningful, that means you can distinguish between a buffer that is just one interval with a certain property, and a buffer containing the same text subdivided into two intervals, both of which have that property.</source>
          <target state="translated">Если фактическое разделение на интервалы имеет смысл,то это означает,что можно различать буфер,который представляет собой всего лишь один интервал с определенным свойством,и буфер,содержащий один и тот же текст,разделенный на два интервала,оба из которых имеют это свойство.</target>
        </trans-unit>
        <trans-unit id="5a83c2ef9b2ea8b65afff88495273d99dca09042" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;binary&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the function returns the &lt;em&gt;text form&lt;/em&gt; of the hash, as an ordinary Lisp string. If &lt;var&gt;binary&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it returns the hash in &lt;em&gt;binary form&lt;/em&gt;, as a sequence of bytes stored in a unibyte string.</source>
          <target state="translated">Если &lt;var&gt;binary&lt;/var&gt; аргумент опущен или равен &lt;code&gt;nil&lt;/code&gt; , функция возвращает &lt;em&gt;текстовую форму&lt;/em&gt; хэша как обычную строку Лиспа. Если &lt;var&gt;binary&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , он возвращает хэш в &lt;em&gt;двоичной форме&lt;/em&gt; , как последовательность байтов, хранящихся в однобайтовой строке.</target>
        </trans-unit>
        <trans-unit id="e10d049a8be15c0c954d31fb09186546a431b4fd" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;delay-question&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, delay sending this question until the process has finished replying to any previous questions. This produces more reliable results with some processes.</source>
          <target state="translated">Если аргумент &lt;var&gt;delay-question&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , отложите отправку этого вопроса до тех пор, пока процесс не закончит отвечать на любые предыдущие вопросы. Это дает более надежные результаты для некоторых процессов.</target>
        </trans-unit>
        <trans-unit id="fdab9ed15c636e7683dee919701455b2de68f386" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;help&lt;/var&gt; is given, it should be a list of this form:</source>
          <target state="translated">Если дана &lt;var&gt;help&lt;/var&gt; по аргументу , это должен быть список такой формы:</target>
        </trans-unit>
        <trans-unit id="7880971ad13cb4ee532d137f1832525ca323a437" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;inherit-input-method&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the minibuffer inherits the current input method (see &lt;a href=&quot;input-methods#Input-Methods&quot;&gt;Input Methods&lt;/a&gt;) and the setting of &lt;code&gt;enable-multibyte-characters&lt;/code&gt; (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;) from whichever buffer was current before entering the minibuffer.</source>
          <target state="translated">Если аргумент &lt;var&gt;inherit-input-method&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то минибуфер наследует текущий метод ввода (см. &lt;a href=&quot;input-methods#Input-Methods&quot;&gt;Методы ввода&lt;/a&gt; ) и настройку &lt;code&gt;enable-multibyte-characters&lt;/code&gt; (см. &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Текстовые представления&lt;/a&gt; ) от того буфера, который был текущим до входа в минибуфер.</target>
        </trans-unit>
        <trans-unit id="79a597d61ae6fb37cd3c5f737528903c265a9607" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it must be a function of one argument, unless &lt;var&gt;collection&lt;/var&gt; is a hash table, in which case it should be a function of two arguments. It is used to test each possible match, and the match is accepted only if &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. The argument given to &lt;var&gt;predicate&lt;/var&gt; is either a string or a cons cell (the &lt;small&gt;CAR&lt;/small&gt; of which is a string) from the alist, or a symbol (&lt;em&gt;not&lt;/em&gt; a symbol name) from the obarray. If &lt;var&gt;collection&lt;/var&gt; is a hash table, &lt;var&gt;predicate&lt;/var&gt; is called with two arguments, the string key and the associated value.</source>
          <target state="translated">Если &lt;var&gt;predicate&lt;/var&gt; аргумента не равен &lt;code&gt;nil&lt;/code&gt; , тогда он должен быть функцией одного аргумента, если &lt;var&gt;collection&lt;/var&gt; является хэш-таблицей, и в этом случае она должна быть функцией двух аргументов. Он используется для проверки каждого возможного совпадения, и совпадение принимается, только если &lt;var&gt;predicate&lt;/var&gt; возвращает &lt;code&gt;nil&lt;/code&gt; . Аргумент, передаваемый &lt;var&gt;predicate&lt;/var&gt; - это либо строка, либо cons-ячейка ( &lt;small&gt;CAR&lt;/small&gt; в которой является строкой) из списка, либо символ ( &lt;em&gt;не&lt;/em&gt; имя символа) из obarray. Если &lt;var&gt;collection&lt;/var&gt; является хэш-таблицей, &lt;var&gt;predicate&lt;/var&gt; вызывается с двумя аргументами: строковым ключом и связанным значением.</target>
        </trans-unit>
        <trans-unit id="1e8ec49cd22906ec7c362708e48e45bccbf9fab6" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;replace&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it means to replace the contents of the buffer (actually, just the accessible portion) with the contents of the file. This is better than simply deleting the buffer contents and inserting the whole file, because (1) it preserves some marker positions and (2) it puts less data in the undo list.</source>
          <target state="translated">Если аргумент &lt;var&gt;replace&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это означает замену содержимого буфера (фактически, только доступной части) содержимым файла. Это лучше, чем просто удалить содержимое буфера и вставить весь файл, потому что (1) он сохраняет некоторые позиции маркеров и (2) помещает меньше данных в список отмены.</target>
        </trans-unit>
        <trans-unit id="b9ce24fc8b5938e53493beb02dffd65685e0462c" translate="yes" xml:space="preserve">
          <source>If the argument is a string with text properties, the property list in the copy is itself a copy, not shared with the original&amp;rsquo;s property list. However, the actual values of the properties are shared. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">Если аргумент является строкой с текстовыми свойствами, список свойств в копии сам является копией, а не совместно со списком свойств оригинала. Однако фактические значения свойств являются общими. См. &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Свойства текста&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6769c6ffad1ce1803b2f5f120ff2fd6346460fe" translate="yes" xml:space="preserve">
          <source>If the attempt to make point visible (i.e., in a fully-visible screen line) fails, the display routines will disregard the requested window-start position and compute a new one anyway. Thus, for reliable results Lisp programs that call this function should always move point to be inside the window whose display starts at &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">Если попытка сделать точку видимой (то есть в полностью видимой строке экрана) не удалась, процедуры отображения проигнорируют запрошенную позицию начала окна и все равно вычисят новую. Таким образом, для надежных результатов программы на Лиспе, которые вызывают эту функцию, всегда должны перемещать точку так, чтобы она находилась внутри окна, отображение которого начинается с &lt;var&gt;position&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="53aa631615bd5530c64e36d6c02beaed78d34de9" translate="yes" xml:space="preserve">
          <source>If the autoloaded file fails to define the desired Lisp function or macro, then an error is signaled with data &lt;code&gt;&quot;Autoloading failed to
define function &lt;var&gt;function-name&lt;/var&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">Если автоматически загружаемый файл не может определить желаемую функцию или макрос Лиспа, то выдается сигнал об ошибке с данными &lt;code&gt;&quot;Autoloading failed to define function &lt;var&gt;function-name&lt;/var&gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="803922d41afa50bf9a9d9ac003f082cfe949a52b" translate="yes" xml:space="preserve">
          <source>If the base location starts with &amp;lsquo;</source>
          <target state="translated">Если базовое местоположение начинается с '</target>
        </trans-unit>
        <trans-unit id="b618cf6da3ee38d4f1100dca09e58dac2332f9d6" translate="yes" xml:space="preserve">
          <source>If the binding of a key sequence is a keymap, we call the key sequence a &lt;em&gt;prefix key&lt;/em&gt;. Otherwise, we call it a &lt;em&gt;complete key&lt;/em&gt; (because no more events can be added to it). If the binding is &lt;code&gt;nil&lt;/code&gt;, we call the key &lt;em&gt;undefined&lt;/em&gt;. Examples of prefix keys are</source>
          <target state="translated">Если привязка последовательности клавиш является таблицей клавиш, мы называем последовательность &lt;em&gt;клавиш префиксным ключом&lt;/em&gt; . В противном случае мы называем его &lt;em&gt;полным ключом&lt;/em&gt; (потому что к нему нельзя добавлять больше событий). Если привязка равна &lt;code&gt;nil&lt;/code&gt; , мы называем ключ &lt;em&gt;неопределенным&lt;/em&gt; . Примеры префиксных ключей:</target>
        </trans-unit>
        <trans-unit id="b42b592b3eaf84b0272824c58a7b1c63f70a7137" translate="yes" xml:space="preserve">
          <source>If the buffer</source>
          <target state="translated">Если буфер</target>
        </trans-unit>
        <trans-unit id="9fb23d2ab9e30a958cb01f3be9687521a1f2108c" translate="yes" xml:space="preserve">
          <source>If the buffer has no recorded last modification time, this function returns zero. This case occurs, for instance, if the buffer is not visiting a file or if the time has been explicitly cleared by &lt;code&gt;clear-visited-file-modtime&lt;/code&gt;. Note, however, that &lt;code&gt;visited-file-modtime&lt;/code&gt; returns a timestamp for some non-file buffers too. For instance, in a Dired buffer listing a directory, it returns the last modification time of that directory, as recorded by Dired.</source>
          <target state="translated">Если в буфере не записано время последней модификации, эта функция возвращает ноль. Этот случай возникает, например, если буфер не обращается к файлу или если время было явно очищено с помощью &lt;code&gt;clear-visited-file-modtime&lt;/code&gt; . Однако обратите внимание, что &lt;code&gt;visited-file-modtime&lt;/code&gt; возвращает метку времени для некоторых нефайловых буферов. Например, в буфере Dired, в котором указан каталог, он возвращает время последней модификации этого каталога, записанное Dired.</target>
        </trans-unit>
        <trans-unit id="3eb696d2b48fba3d8c9166772e7011af11a1be37" translate="yes" xml:space="preserve">
          <source>If the buffer is visiting a file and contains unsaved changes, &lt;code&gt;kill-buffer&lt;/code&gt; asks the user to confirm before the buffer is killed. It does this even if not called interactively. To prevent the request for confirmation, clear the modified flag before calling &lt;code&gt;kill-buffer&lt;/code&gt;. See &lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;Buffer Modification&lt;/a&gt;.</source>
          <target state="translated">Если &lt;code&gt;kill-buffer&lt;/code&gt; обращается к файлу и содержит несохраненные изменения, kill-buffer просит пользователя подтвердить, прежде чем буфер будет уничтожен. Он делает это, даже если не вызывается в интерактивном режиме. Чтобы предотвратить запрос подтверждения, снимите измененный флаг перед вызовом &lt;code&gt;kill-buffer&lt;/code&gt; . См. &amp;laquo; &lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;Модификация буфера&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b0bca82333b4ce5dd152ea39f5819e4f37d2eaa1" translate="yes" xml:space="preserve">
          <source>If the buffer is visiting a file that doesn&amp;rsquo;t exist, this function returns -1.</source>
          <target state="translated">Если буфер обращается к несуществующему файлу, эта функция возвращает -1.</target>
        </trans-unit>
        <trans-unit id="f6ab4ecbe64f576dadab98e97450e5f18510d5ba" translate="yes" xml:space="preserve">
          <source>If the buffer of a window of &lt;var&gt;configuration&lt;/var&gt; has been killed since &lt;var&gt;configuration&lt;/var&gt; was made, that window is, as a rule, removed from the restored configuration. However, if that window is the last window remaining in the restored configuration, another live buffer is shown in it.</source>
          <target state="translated">Если буфер окна &lt;var&gt;configuration&lt;/var&gt; был убит , так как &lt;var&gt;configuration&lt;/var&gt; была сделана, что окно, как правило, удалены из восстановленной конфигурации. Однако, если это окно является последним окном, оставшимся в восстановленной конфигурации, в нем отображается другой активный буфер.</target>
        </trans-unit>
        <trans-unit id="6e8f1242e15fde8f68946683c1fc5e14009fd4e5" translate="yes" xml:space="preserve">
          <source>If the buffer or text is read-only, &lt;code&gt;kill-region&lt;/code&gt; modifies the kill ring just the same, then signals an error without modifying the buffer. This is convenient because it lets the user use a series of kill commands to copy text from a read-only buffer into the kill ring.</source>
          <target state="translated">Если буфер или текст доступны только для чтения, &lt;code&gt;kill-region&lt;/code&gt; точно так же изменяет список уничтожений, а затем сигнализирует об ошибке без изменения буфера. Это удобно, потому что позволяет пользователю использовать серию команд уничтожения для копирования текста из буфера только для чтения в список уничтожения.</target>
        </trans-unit>
        <trans-unit id="808f6a7fd9a07ae313e156bf9263fe4bfab2277b" translate="yes" xml:space="preserve">
          <source>If the buffer position &lt;var&gt;position&lt;/var&gt; is visible in window &lt;var&gt;window&lt;/var&gt;, this function returns the display coordinates of the upper/left corner of the glyph at &lt;var&gt;position&lt;/var&gt;. The return value is a cons of the X- and Y-coordinates of that corner, relative to an origin at (0, 0) of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s display. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;position&lt;/var&gt; is not visible in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">Если позиция &lt;var&gt;position&lt;/var&gt; буфера видна в окне &lt;var&gt;window&lt;/var&gt; , эта функция возвращает отображаемые координаты верхнего / левого угла глифа в &lt;var&gt;position&lt;/var&gt; . Возвращаемое значение - это минусы X- и Y-координат этого угла относительно начала координат в (0, 0) отображения &lt;var&gt;window&lt;/var&gt; . Он возвращает &lt;code&gt;nil&lt;/code&gt; , если &lt;var&gt;position&lt;/var&gt; не видна в &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2c08f507628df4359197a1739c4f41981f186505" translate="yes" xml:space="preserve">
          <source>If the buffer size specified by &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; is large enough to hold the string&amp;rsquo;s text, the function stores in &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; the actual number of bytes copied to &lt;var&gt;buf&lt;/var&gt;, including the terminating null byte, and returns &lt;code&gt;true&lt;/code&gt;. If the buffer is too small, the function raises the &lt;code&gt;args-out-of-range&lt;/code&gt; error condition, stores the required number of bytes in &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt;, and returns &lt;code&gt;false&lt;/code&gt;. See &lt;a href=&quot;module-nonlocal#Module-Nonlocal&quot;&gt;Module Nonlocal&lt;/a&gt;, for how to handle pending error conditions.</source>
          <target state="translated">Если размер буфера, указанный в &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; , достаточно велик, чтобы вместить текст строки, функция сохраняет в &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; фактическое количество байтов, скопированных в &lt;var&gt;buf&lt;/var&gt; , включая завершающий нулевой байт, и возвращает &lt;code&gt;true&lt;/code&gt; . Если буфер слишком мал, функция вызывает условие ошибки &lt;code&gt;args-out-of-range&lt;/code&gt; , сохраняет необходимое количество байтов в &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; и возвращает &lt;code&gt;false&lt;/code&gt; . См. &amp;laquo; &lt;a href=&quot;module-nonlocal#Module-Nonlocal&quot;&gt;Module Nonlocal&amp;raquo;&lt;/a&gt; , чтобы узнать, как обрабатывать ожидающие ошибки.</target>
        </trans-unit>
        <trans-unit id="4096e8444dc3c6041bd288b8d8d22dfd6b4f8727" translate="yes" xml:space="preserve">
          <source>If the buffer that used to be current has been killed by the time of exit from &lt;code&gt;save-current-buffer&lt;/code&gt;, then it is not made current again, of course. Instead, whichever buffer was current just before exit remains current.</source>
          <target state="translated">Если буфер, который раньше был текущим, был уничтожен к моменту выхода из &lt;code&gt;save-current-buffer&lt;/code&gt; , то, конечно, он не станет снова текущим. Вместо этого, тот буфер, который был текущим непосредственно перед выходом, остается текущим.</target>
        </trans-unit>
        <trans-unit id="c5684710e6f636642a1e22d212f2b9d103d05737" translate="yes" xml:space="preserve">
          <source>If the button has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;follow-link&lt;/code&gt; property, and &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt; is set, a quick</source>
          <target state="translated">Если кнопка имеет свойство, отличное от &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;follow-link&lt;/code&gt; , и установлено значение &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt; follow-link , быстрое</target>
        </trans-unit>
        <trans-unit id="eccbf77d477d2a7c5de1862108f5baba2e869ed2" translate="yes" xml:space="preserve">
          <source>If the characters copied from &lt;var&gt;string&lt;/var&gt; have text properties, the properties are copied into the new string also. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">Если символы, скопированные из &lt;var&gt;string&lt;/var&gt; имеют свойства текста, эти свойства также копируются в новую строку. См. &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Свойства текста&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b607989553c9dbdef0c41babb143b4033c4f93b" translate="yes" xml:space="preserve">
          <source>If the command asks for a prefix argument, it receives the value &lt;var&gt;prefix-argument&lt;/var&gt;. If &lt;code&gt;execute-extended-command&lt;/code&gt; is called interactively, the current raw prefix argument is used for &lt;var&gt;prefix-argument&lt;/var&gt;, and thus passed on to whatever command is run.</source>
          <target state="translated">Если команда запрашивает аргумент префикса, она получает значение &lt;var&gt;prefix-argument&lt;/var&gt; . Если &lt;code&gt;execute-extended-command&lt;/code&gt; вызывается в интерактивном режиме, текущий необработанный аргумент префикса используется в качестве &lt;var&gt;prefix-argument&lt;/var&gt; и, таким образом, передается любой выполняемой команде.</target>
        </trans-unit>
        <trans-unit id="3fc92ac537a37267fa3d2ae35555184873591f1b" translate="yes" xml:space="preserve">
          <source>If the command is a keyboard macro (i.e., a string or vector), Emacs executes it using &lt;code&gt;execute-kbd-macro&lt;/code&gt; (see &lt;a href=&quot;keyboard-macros#Keyboard-Macros&quot;&gt;Keyboard Macros&lt;/a&gt;).</source>
          <target state="translated">Если команда является макросом клавиатуры (т. &lt;code&gt;execute-kbd-macro&lt;/code&gt; или вектором), Emacs выполняет ее с помощью execute-kbd-macro (см. &lt;a href=&quot;keyboard-macros#Keyboard-Macros&quot;&gt;Макросы клавиатуры&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3e7fee2389ae3316646e9192b70deb7670674b09" translate="yes" xml:space="preserve">
          <source>If the command was invoked through shift-translation, set the mark and activate the region temporarily, or extend an already active region, before the command is run. If the command was invoked without shift-translation, and the region is temporarily active, deactivate the region before the command is run. Special.</source>
          <target state="translated">Если команда была вызвана через сдвиг-трансляцию,установите метку и временно активируйте область,или продлите уже активную область,прежде чем команда будет запущена.Если команда была вызвана без сдвига,и область временно активна,то перед выполнением команды необходимо отключить область.Особый.</target>
        </trans-unit>
        <trans-unit id="6c83cfde2807ead6babd5c50dc52c4abfd86c927" translate="yes" xml:space="preserve">
          <source>If the condition is a function, &lt;var&gt;func&lt;/var&gt;, then a position &lt;var&gt;pos&lt;/var&gt; is inside a link if &lt;code&gt;(&lt;var&gt;func&lt;/var&gt; &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt; evaluates to non-&lt;code&gt;nil&lt;/code&gt;. The value returned by &lt;var&gt;func&lt;/var&gt; serves as the action code.</source>
          <target state="translated">Если условие является функцией &lt;var&gt;func&lt;/var&gt; , тогда позиция &lt;var&gt;pos&lt;/var&gt; находится внутри ссылки, если &lt;code&gt;(&lt;var&gt;func&lt;/var&gt; &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt; оценивается как &lt;code&gt;nil&lt;/code&gt; . Значение, возвращаемое &lt;var&gt;func&lt;/var&gt; служит кодом действия.</target>
        </trans-unit>
        <trans-unit id="2b611e5d0539f4653aead23fb1c79ba4aee87256" translate="yes" xml:space="preserve">
          <source>If the condition is the symbol &lt;code&gt;mouse-face&lt;/code&gt;, a position is inside a link if there is a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;mouse-face&lt;/code&gt; property at that position. The action code is always &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Если условие является символом &lt;code&gt;mouse-face&lt;/code&gt; , позиция внутри ссылки , если есть не- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;mouse-face&lt;/code&gt; собственности в этой позиции. Код действия всегда &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="056e7702641ae931e2d243ed19a6e2197a02f48c" translate="yes" xml:space="preserve">
          <source>If the condition value is anything else, then the position is inside a link and the condition itself is the action code. Clearly, you should specify this kind of condition only when applying the condition via a text or property overlay on the link text (so that it does not apply to the entire buffer).</source>
          <target state="translated">Если значение условия-это что-то другое,то позиция находится внутри ссылки,а само условие-код действия.Очевидно,что такое условие следует указывать только при применении условия через текст или наложение свойств на текст ссылки (чтобы оно не применялось ко всему буферу).</target>
        </trans-unit>
        <trans-unit id="bf453ddf2c18b51f178d0aea4c9759763dbe2cac" translate="yes" xml:space="preserve">
          <source>If the connection &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;shell&lt;/code&gt;, this parameter will be interpreted as a format-spec string that will be executed to make the connection. The specs available are &amp;lsquo;</source>
          <target state="translated">Если &lt;code&gt;type&lt;/code&gt; соединения - &lt;code&gt;shell&lt;/code&gt; , этот параметр будет интерпретирован как строка спецификации формата, которая будет выполнена для установления соединения. Доступные спецификации:</target>
        </trans-unit>
        <trans-unit id="1b87022066cecde4b54384a04abbdd54e7dc31cd" translate="yes" xml:space="preserve">
          <source>If the content directory contains a file named</source>
          <target state="translated">Если каталог содержимого содержит файл с именем</target>
        </trans-unit>
        <trans-unit id="e45ae9eaeb69f38a1876754ce7a5029f59407d6b" translate="yes" xml:space="preserve">
          <source>If the crop area is outside or overlaps the edge of the image it will be reduced to exclude any areas outside of the image. This means it is not possible to use &lt;code&gt;:crop&lt;/code&gt; to increase the size of the image by entering large &lt;var&gt;width&lt;/var&gt; or &lt;var&gt;height&lt;/var&gt; values.</source>
          <target state="translated">Если область кадрирования находится за пределами изображения или перекрывает его край, она будет уменьшена, чтобы исключить любые области за пределами изображения. Это означает, что нельзя использовать &lt;code&gt;:crop&lt;/code&gt; для увеличения размера изображения путем ввода больших значений &lt;var&gt;width&lt;/var&gt; или &lt;var&gt;height&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="070aacbb69df6bef77d26cbb42be7950af03d1a9" translate="yes" xml:space="preserve">
          <source>If the current Emacs session restored its state from a dump file, this function returns information about the dump file and the time it took to restore the Emacs state. The value is an alist &lt;code&gt;((dumped-with-pdumper&amp;nbsp;.&amp;nbsp;t)&amp;nbsp;(load-time&amp;nbsp;.&amp;nbsp;&lt;var&gt;time&lt;/var&gt;)&amp;nbsp;(dump-file-name&amp;nbsp;.&amp;nbsp;&lt;var&gt;file&lt;/var&gt;))&lt;/code&gt;, where &lt;var&gt;file&lt;/var&gt; is the name of the dump file, and &lt;var&gt;time&lt;/var&gt; is the time in seconds it took to restore the state from the dump file. If the current session was not restored from a dump file, the value is nil.</source>
          <target state="translated">Если текущий сеанс Emacs восстановил свое состояние из файла дампа, эта функция возвращает информацию о файле дампа и времени, которое потребовалось для восстановления состояния Emacs. Значением является список &lt;code&gt;((dumped-with-pdumper&amp;nbsp;.&amp;nbsp;t)&amp;nbsp;(load-time&amp;nbsp;.&amp;nbsp;&lt;var&gt;time&lt;/var&gt;)&amp;nbsp;(dump-file-name&amp;nbsp;.&amp;nbsp;&lt;var&gt;file&lt;/var&gt;))&lt;/code&gt; , где &lt;var&gt;file&lt;/var&gt; - это имя файла дампа, а &lt;var&gt;time&lt;/var&gt; - время в секундах. потребовалось восстановить состояние из файла дампа. Если текущий сеанс не был восстановлен из файла дампа, значение равно нулю.</target>
        </trans-unit>
        <trans-unit id="d0eeb02c99c9b3df4b9d379c927dc934adec3211" translate="yes" xml:space="preserve">
          <source>If the current buffer is not the same as the selected window&amp;rsquo;s buffer, &lt;code&gt;recursive-edit&lt;/code&gt; saves and restores the current buffer. Otherwise, if you switch buffers, the buffer you switched to is current after &lt;code&gt;recursive-edit&lt;/code&gt; returns.</source>
          <target state="translated">Если текущий буфер не совпадает с буфером выбранного окна, &lt;code&gt;recursive-edit&lt;/code&gt; сохраняет и восстанавливает текущий буфер. В противном случае, если вы переключите буферы, буфер, на который вы переключились, будет текущим после возврата &lt;code&gt;recursive-edit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e253d213ea596399bdda97ff0dc4b3561896f5b" translate="yes" xml:space="preserve">
          <source>If the debugger was entered due to a</source>
          <target state="translated">Если отладчик был введен из-за</target>
        </trans-unit>
        <trans-unit id="33b4631942887b90e212a97ab276b928655c23c0" translate="yes" xml:space="preserve">
          <source>If the default value is &lt;code&gt;nil&lt;/code&gt;, then whenever Emacs creates a new buffer via a command such as</source>
          <target state="translated">Если значение по умолчанию - &lt;code&gt;nil&lt;/code&gt; , то всякий раз, когда Emacs создает новый буфер с помощью такой команды, как</target>
        </trans-unit>
        <trans-unit id="b7e870a26e6d4420e95bcef64f66010c99679503" translate="yes" xml:space="preserve">
          <source>If the display is not up to date, &lt;code&gt;window-line-height&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. In that case, &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; may be used to obtain related information.</source>
          <target state="translated">Если отображение не обновлено, &lt;code&gt;window-line-height&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; . В этом случае &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; может использоваться для получения связанной информации.</target>
        </trans-unit>
        <trans-unit id="fc8a692ea2ab45dd7d66680b28759c6ef6c56a76" translate="yes" xml:space="preserve">
          <source>If the environment variable &lt;code&gt;EMACSLOADPATH&lt;/code&gt; is set, it modifies the above initialization procedure. Emacs initializes &lt;code&gt;load-path&lt;/code&gt; based on the value of the environment variable.</source>
          <target state="translated">Если установлена ​​переменная среды &lt;code&gt;EMACSLOADPATH&lt;/code&gt; , она изменяет указанную выше процедуру инициализации. Emacs инициализирует &lt;code&gt;load-path&lt;/code&gt; на основе значения переменной окружения.</target>
        </trans-unit>
        <trans-unit id="0b0792d3cb5a730ad75c8819fca45ba09bdd293d" translate="yes" xml:space="preserve">
          <source>If the error is not handled, the two arguments are used in printing the error message. Normally, this error message is provided by the &lt;code&gt;error-message&lt;/code&gt; property of &lt;var&gt;error-symbol&lt;/var&gt;. If &lt;var&gt;data&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this is followed by a colon and a comma separated list of the unevaluated elements of &lt;var&gt;data&lt;/var&gt;. For &lt;code&gt;error&lt;/code&gt;, the error message is the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;data&lt;/var&gt; (that must be a string). Subcategories of &lt;code&gt;file-error&lt;/code&gt; are handled specially.</source>
          <target state="translated">Если ошибка не обрабатывается, два аргумента используются при печати сообщения об ошибке. Обычно это сообщение об ошибке предоставляется свойством &lt;code&gt;error-message&lt;/code&gt; свойства &lt;var&gt;error-symbol&lt;/var&gt; . Если &lt;var&gt;data&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , за ним следует двоеточие и список неоцененных элементов &lt;var&gt;data&lt;/var&gt; разделенных запятыми . Для &lt;code&gt;error&lt;/code&gt; , сообщение об ошибке является &lt;small&gt;CAR&lt;/small&gt; из &lt;var&gt;data&lt;/var&gt; (который должен быть строкой). Подкатегории &lt;code&gt;file-error&lt;/code&gt; обрабатываются специально.</target>
        </trans-unit>
        <trans-unit id="a1b1a1682bbb0c3c3979b868da534ea83fc519b4" translate="yes" xml:space="preserve">
          <source>If the event has modifiers, Emacs attempts to resolve them and return the code of the corresponding character. For example, if the user types</source>
          <target state="translated">Если в событии есть модификаторы,Emacs пытается их разрешить и вернуть код соответствующего символа.Например,если пользователь вводит</target>
        </trans-unit>
        <trans-unit id="225e4b6cef0a4ca594213b47905edc7ed2bc1eac" translate="yes" xml:space="preserve">
          <source>If the events are all characters and all can fit in a string, then &lt;code&gt;read-key-sequence&lt;/code&gt; returns a string (see &lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;Strings of Events&lt;/a&gt;). Otherwise, it returns a vector, since a vector can hold all kinds of events&amp;mdash;characters, symbols, and lists. The elements of the string or vector are the events in the key sequence.</source>
          <target state="translated">Если все события представляют собой символы и все могут уместиться в строке, то &lt;code&gt;read-key-sequence&lt;/code&gt; возвращает строку (см. &lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;Строки событий&lt;/a&gt; ). В противном случае он возвращает вектор, поскольку вектор может содержать все виды событий - символы, символы и списки. Элементы строки или вектора - это события в ключевой последовательности.</target>
        </trans-unit>
        <trans-unit id="ce369d4f903bbc523e37f3d49117138394797808" translate="yes" xml:space="preserve">
          <source>If the exact result needs expensive processing, the function will return &lt;code&gt;nil&lt;/code&gt; rather than an approximation. This is the default if the argument is omitted.</source>
          <target state="translated">Если точный результат требует дорогостоящей обработки, функция вернет &lt;code&gt;nil&lt;/code&gt; а не приближение. Это значение по умолчанию, если аргумент опущен.</target>
        </trans-unit>
        <trans-unit id="6478f8f8f9e75aaedaa7f79c8530c973ef5dc68e" translate="yes" xml:space="preserve">
          <source>If the expression is a function call and the function has a &lt;code&gt;safe-local-eval-function&lt;/code&gt; property, the property value determines whether the expression is safe to evaluate. The property value can be a predicate to call to test the expression, a list of such predicates (it&amp;rsquo;s safe if any predicate succeeds), or &lt;code&gt;t&lt;/code&gt; (always safe provided the arguments are constant).</source>
          <target state="translated">Если выражение является вызовом функции и функция имеет свойство &lt;code&gt;safe-local-eval-function&lt;/code&gt; , значение свойства определяет, безопасно ли оценивать выражение. Значением свойства может быть предикат, вызываемый для проверки выражения, список таких предикатов (безопасно, если какой-либо предикат завершится успешно) или &lt;code&gt;t&lt;/code&gt; (всегда безопасно, если аргументы постоянны).</target>
        </trans-unit>
        <trans-unit id="246f0b794f5833994c3b4afba6bb00dea24847ff" translate="yes" xml:space="preserve">
          <source>If the feature is not present, then &lt;code&gt;require&lt;/code&gt; loads &lt;var&gt;filename&lt;/var&gt; with &lt;code&gt;load&lt;/code&gt;. If &lt;var&gt;filename&lt;/var&gt; is not supplied, then the name of the symbol &lt;var&gt;feature&lt;/var&gt; is used as the base file name to load. However, in this case, &lt;code&gt;require&lt;/code&gt; insists on finding &lt;var&gt;feature&lt;/var&gt; with an added &amp;lsquo;</source>
          <target state="translated">Если такой возможности нет, &lt;code&gt;require&lt;/code&gt; загрузить &lt;var&gt;filename&lt;/var&gt; с помощью &lt;code&gt;load&lt;/code&gt; . Если &lt;var&gt;filename&lt;/var&gt; не указано, то имя символа &lt;var&gt;feature&lt;/var&gt; используется в качестве базового имени файла для загрузки. Однако в этом случае &lt;code&gt;require&lt;/code&gt; настаивает на поиске &lt;var&gt;feature&lt;/var&gt; с добавленным '</target>
        </trans-unit>
        <trans-unit id="1b34ced467c1db9728611c7e825513efb68ab17e" translate="yes" xml:space="preserve">
          <source>If the file &lt;var&gt;filename&lt;/var&gt; is a symbolic link, this function does not follow it and instead returns its link target as a string. (The link target string is not necessarily the full absolute file name of the target; determining the full file name that the link points to is nontrivial, see below.)</source>
          <target state="translated">Если &lt;var&gt;filename&lt;/var&gt; является символической ссылкой, эта функция не следует за ней и вместо этого возвращает цель ссылки в виде строки. (Целевая строка ссылки не обязательно является полным абсолютным именем целевого файла; определение полного имени файла, на которое указывает ссылка, нетривиально, см. Ниже.)</target>
        </trans-unit>
        <trans-unit id="daa4cbc77776264f23c0b7180ce1cedea2df5b48" translate="yes" xml:space="preserve">
          <source>If the file &lt;var&gt;filename&lt;/var&gt; is not a symbolic link, or does not exist, or if there is trouble determining whether it is a symbolic link, &lt;code&gt;file-symlink-p&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если &lt;var&gt;filename&lt;/var&gt; не является символической ссылкой, или не существует, или если есть проблемы с определением, является ли это символической ссылкой, &lt;code&gt;file-symlink-p&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9081835f33fcc13ee24a20a867687f9c01a96103" translate="yes" xml:space="preserve">
          <source>If the file does not exist, or if there was trouble determining whether the file exists, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если файл не существует или возникла проблема с определением, существует ли файл, эта функция возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6be3be1ef2fedd8fcb4152b1108b2cfb54d0fc98" translate="yes" xml:space="preserve">
          <source>If the file has a &amp;lsquo;</source>
          <target state="translated">Если у файла есть '</target>
        </trans-unit>
        <trans-unit id="41388f1b4096e6fa4787336ec13211d44a826c00" translate="yes" xml:space="preserve">
          <source>If the first binding found is not a prefix definition (a keymap or a symbol defined as a keymap), all subsequent bindings from other minor modes are omitted, since they would be completely shadowed. Similarly, the list omits non-prefix bindings that follow prefix bindings.</source>
          <target state="translated">Если первая найденная привязка не является префиксным определением (раскладка или символ,определенный как раскладка),то все последующие привязки из других второстепенных режимов опускаются,так как они будут полностью затенены.Аналогичным образом,список опускает не префиксные привязки,которые следуют за префиксными.</target>
        </trans-unit>
        <trans-unit id="1269fe1c152616b5831220daaf4b88ca325ebbd9" translate="yes" xml:space="preserve">
          <source>If the first character of a &lt;code&gt;help-echo&lt;/code&gt; string has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;help-echo-inhibit-substitution&lt;/code&gt; property, then it is displayed as-is by &lt;code&gt;show-help-function&lt;/code&gt;, without being passed through &lt;code&gt;substitute-command-keys&lt;/code&gt;.</source>
          <target state="translated">Если первый символ строки &lt;code&gt;help-echo&lt;/code&gt; имеет свойство, отличное от &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;help-echo-inhibit-substitution&lt;/code&gt; , то он отображается как есть &lt;code&gt;show-help-function&lt;/code&gt; , без передачи через &lt;code&gt;substitute-command-keys&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0504a2b1bfe3f74f41527bbd85fbbaf1d767693d" translate="yes" xml:space="preserve">
          <source>If the first element of a list being evaluated is a Lisp function object, byte-code object or primitive function object, then that list is a &lt;em&gt;function call&lt;/em&gt;. For example, here is a call to the function &lt;code&gt;+&lt;/code&gt;:</source>
          <target state="translated">Если первым элементом оцениваемого списка является объект функции Lisp, объект байтового кода или объект примитивной функции, то этот список является &lt;em&gt;вызовом функции&lt;/em&gt; . Например, вот вызов функции &lt;code&gt;+&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d4d3598834c24a7693a8fd21c29f55906c01fa05" translate="yes" xml:space="preserve">
          <source>If the first element of a list being evaluated is a macro object, then the list is a &lt;em&gt;macro call&lt;/em&gt;. When a macro call is evaluated, the elements of the rest of the list are &lt;em&gt;not&lt;/em&gt; initially evaluated. Instead, these elements themselves are used as the arguments of the macro. The macro definition computes a replacement form, called the &lt;em&gt;expansion&lt;/em&gt; of the macro, to be evaluated in place of the original form. The expansion may be any sort of form: a self-evaluating constant, a symbol, or a list. If the expansion is itself a macro call, this process of expansion repeats until some other sort of form results.</source>
          <target state="translated">Если первым элементом оцениваемого списка является объект макроса, то список является &lt;em&gt;вызовом макроса&lt;/em&gt; . Когда выполняется вызов макроса, элементы остальной части списка изначально &lt;em&gt;не&lt;/em&gt; оцениваются. Вместо этого сами эти элементы используются в качестве аргументов макроса. Определение макроса вычисляет заменяющую форму, называемую &lt;em&gt;раскрытием&lt;/em&gt; макроса, которая будет оцениваться вместо исходной формы. Расширение может иметь любую форму: самооценка константы, символа или списка. Если раскрытие само по себе является вызовом макроса, этот процесс расширения повторяется до тех пор, пока не будет получен какой-либо другой вид формы.</target>
        </trans-unit>
        <trans-unit id="6f7e00b69b17dbca10bf930ce17a6a8d2d2e1e94" translate="yes" xml:space="preserve">
          <source>If the first element of the list is a symbol then evaluation examines the symbol&amp;rsquo;s function cell, and uses its contents instead of the original symbol. If the contents are another symbol, this process, called &lt;em&gt;symbol function indirection&lt;/em&gt;, is repeated until it obtains a non-symbol. See &lt;a href=&quot;function-names#Function-Names&quot;&gt;Function Names&lt;/a&gt;, for more information about symbol function indirection.</source>
          <target state="translated">Если первый элемент списка является символом, тогда оценка проверяет функциональную ячейку символа и использует ее содержимое вместо исходного символа. Если содержимым является другой символ, этот процесс, называемый &lt;em&gt;косвенным обращением к символьной функции&lt;/em&gt; , повторяется до тех пор, пока не будет получен несимвол. См. Раздел &lt;a href=&quot;function-names#Function-Names&quot;&gt;Имена функций&lt;/a&gt; для получения дополнительной информации о косвенном обращении к символьной функции.</target>
        </trans-unit>
        <trans-unit id="ad92a627467e7834d807fa7b3dd6513ec66d6a69" translate="yes" xml:space="preserve">
          <source>If the flag has any other value, the completion function should return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если флаг имеет любое другое значение, функция завершения должна вернуть &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fb2ca720c18bb03a7cfb28e99d5e6859f339dce" translate="yes" xml:space="preserve">
          <source>If the forms in &lt;var&gt;body&lt;/var&gt; do not change the major mode in the output buffer, so that it is still Help mode at the end of their execution, then &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; makes this buffer read-only at the end, and also scans it for function and variable names to make them into clickable cross-references. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Docstring-hyperlinks&quot;&gt;Tips for Documentation Strings&lt;/a&gt;, in particular the item on hyperlinks in documentation strings, for more details.</source>
          <target state="translated">Если формы в &lt;var&gt;body&lt;/var&gt; не изменяют основной режим в выходном буфере, так что он все еще остается режимом справки в конце их выполнения, то &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; делает этот буфер доступным только для чтения в конце, а также сканирует его на предмет имен функций и переменных, чтобы превратить их в интерактивные перекрестные ссылки. Дополнительные сведения см. В разделе &amp;laquo; &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Docstring-hyperlinks&quot;&gt;Советы по&lt;/a&gt; строкам документации&amp;raquo; , в частности в разделе о гиперссылках в строках документации.</target>
        </trans-unit>
        <trans-unit id="34ae174f15000b5b4f1155077643095ccbcd1d70" translate="yes" xml:space="preserve">
          <source>If the fourth argument &lt;var&gt;stop-before&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, parsing stops when it comes to any character that starts a sexp. If &lt;var&gt;stop-comment&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, parsing stops after the start of an unnested comment. If &lt;var&gt;stop-comment&lt;/var&gt; is the symbol &lt;code&gt;syntax-table&lt;/code&gt;, parsing stops after the start of an unnested comment or a string, or after the end of an unnested comment or a string, whichever comes first.</source>
          <target state="translated">Если четвертый аргумент &lt;var&gt;stop-before&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , синтаксический анализ останавливается, когда дело доходит до любого символа, который запускает sexp. Если &lt;var&gt;stop-comment&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , синтаксический анализ останавливается после начала невложенного комментария. Если &lt;var&gt;stop-comment&lt;/var&gt; является &lt;code&gt;syntax-table&lt;/code&gt; символов, синтаксический анализ останавливается после начала невложенного комментария или строки или после конца невложенного комментария или строки, в зависимости от того, что наступит раньше.</target>
        </trans-unit>
        <trans-unit id="dbfab4d630e281344c72bf5e9a98b187083a44b0" translate="yes" xml:space="preserve">
          <source>If the fourth element, &lt;var&gt;syntax-alist&lt;/var&gt;, is non-&lt;code&gt;nil&lt;/code&gt;, it should be a list of cons cells of the form &lt;code&gt;(&lt;var&gt;char-or-string&lt;/var&gt;
. &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt;. These are used to set up a syntax table for syntactic fontification; the resulting syntax table is stored in &lt;code&gt;font-lock-syntax-table&lt;/code&gt;. If &lt;var&gt;syntax-alist&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, syntactic fontification uses the syntax table returned by the &lt;code&gt;syntax-table&lt;/code&gt; function. See &lt;a href=&quot;syntax-table-functions#Syntax-Table-Functions&quot;&gt;Syntax Table Functions&lt;/a&gt;.</source>
          <target state="translated">Если четвертый элемент, &lt;var&gt;syntax-alist&lt;/var&gt; , не равен &lt;code&gt;nil&lt;/code&gt; , это должен быть список cons-ячеек формы &lt;code&gt;(&lt;var&gt;char-or-string&lt;/var&gt; . &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; . Они используются для создания таблицы синтаксиса для синтаксической фонификации; результирующая таблица синтаксиса сохраняется в таблице синтаксиса &lt;code&gt;font-lock-syntax-table&lt;/code&gt; . Если &lt;var&gt;syntax-alist&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , синтаксическая фонификация использует синтаксическую таблицу, возвращаемую функцией &lt;code&gt;syntax-table&lt;/code&gt; . См. &lt;a href=&quot;syntax-table-functions#Syntax-Table-Functions&quot;&gt;Функции таблицы синтаксиса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca26394f9acc0f72bb7c85a2233be0fd78bf02fd" translate="yes" xml:space="preserve">
          <source>If the frame from which &lt;var&gt;configuration&lt;/var&gt; was saved is dead, all this function does is to restore the value of the variable &lt;code&gt;minibuffer-scroll-window&lt;/code&gt; and to adjust the value returned by &lt;code&gt;minibuffer-selected-window&lt;/code&gt;. In this case, the function returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, it returns &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Если кадр, из которого была сохранена &lt;var&gt;configuration&lt;/var&gt; , мертв, все, что делает эта функция, - это восстанавливает значение переменной &lt;code&gt;minibuffer-scroll-window&lt;/code&gt; и корректирует значение, возвращаемое &lt;code&gt;minibuffer-selected-window&lt;/code&gt; . В этом случае функция возвращает &lt;code&gt;nil&lt;/code&gt; . В противном случае возвращается &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43e23c2c5c0fbaf03bfa45ab6610d5c3c070c4f5" translate="yes" xml:space="preserve">
          <source>If the frame name was specified explicitly when the frame was created, this parameter will be that name. If the frame wasn&amp;rsquo;t explicitly named, this parameter will be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если имя фрейма было указано явно при создании фрейма, этот параметр будет этим именем. Если фрейм не был назван явно, этот параметр будет равен &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b40b680f37eec91a65c8d822eaa97f36e3776ed1" translate="yes" xml:space="preserve">
          <source>If the function cell is void, the return value is &lt;code&gt;nil&lt;/code&gt;. To distinguish between a function cell that is void and one set to &lt;code&gt;nil&lt;/code&gt;, use &lt;code&gt;fboundp&lt;/code&gt; (see below).</source>
          <target state="translated">Если функциональная ячейка пуста, возвращаемое значение равно &lt;code&gt;nil&lt;/code&gt; . Чтобы отличить пустую функциональную ячейку от &lt;code&gt;nil&lt;/code&gt; , используйте &lt;code&gt;fboundp&lt;/code&gt; (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="b1124e09571d6a7b655a7b4df0e1722289f39b5b" translate="yes" xml:space="preserve">
          <source>If the function reads input itself, it can have the effect of altering the event that follows. For example, here&amp;rsquo;s how to define</source>
          <target state="translated">Если функция сама считывает ввод, это может повлиять на изменение последующего события. Например, вот как определить</target>
        </trans-unit>
        <trans-unit id="b96a696d6b170dde1f2edcc76f25c109b66df8b6" translate="yes" xml:space="preserve">
          <source>If the height spec is a cons of the format shown, the numeric height is &lt;var&gt;ratio&lt;/var&gt; times the height of face &lt;var&gt;face&lt;/var&gt;. &lt;var&gt;ratio&lt;/var&gt; can be any type of number, or &lt;code&gt;nil&lt;/code&gt; which means a ratio of 1. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, it refers to the current face.</source>
          <target state="translated">Если спецификация высоты является недостатком показанного формата, числовая высота равна &lt;var&gt;ratio&lt;/var&gt; высоты &lt;var&gt;face&lt;/var&gt; . &lt;var&gt;ratio&lt;/var&gt; может быть любым числом или &lt;code&gt;nil&lt;/code&gt; что означает коэффициент 1. Если &lt;var&gt;face&lt;/var&gt; равно &lt;code&gt;t&lt;/code&gt; , оно относится к текущему лицу.</target>
        </trans-unit>
        <trans-unit id="256c5fa77fea0edfc5bc4b36c843f4724d0484db" translate="yes" xml:space="preserve">
          <source>If the height spec is a cons of the format shown, the numeric height is &lt;var&gt;ratio&lt;/var&gt; times the height of the contents of the line.</source>
          <target state="translated">Если спецификация высоты является минусом показанного формата, числовая высота равна &lt;var&gt;ratio&lt;/var&gt; умноженному на высоту содержимого строки.</target>
        </trans-unit>
        <trans-unit id="d3170a24913f8e79e2fe1e2b1d247d7b1d093881" translate="yes" xml:space="preserve">
          <source>If the height spec is a float, &lt;var&gt;float&lt;/var&gt;, the numeric height value is &lt;var&gt;float&lt;/var&gt; times the frame&amp;rsquo;s default line height.</source>
          <target state="translated">Если спецификация высоты - это float, &lt;var&gt;float&lt;/var&gt; , числовое значение высоты равно &lt;var&gt;float&lt;/var&gt; , умноженному на высоту строки фрейма по умолчанию.</target>
        </trans-unit>
        <trans-unit id="360acc6136e529abcfe96a8d521d34c34dec43c2" translate="yes" xml:space="preserve">
          <source>If the height spec is a positive integer, the height value is that integer.</source>
          <target state="translated">Если спецификация высоты является положительным целым числом,то значение высоты является этим целым числом.</target>
        </trans-unit>
        <trans-unit id="98e412860a40fccd31b62cd34f4c1f036c5e60de" translate="yes" xml:space="preserve">
          <source>If the hook variable is buffer-local, the buffer-local variable will be used instead of the global variable. However, if the buffer-local variable contains the element &lt;code&gt;t&lt;/code&gt;, the global hook variable will be run as well.</source>
          <target state="translated">Если переменная-ловушка является локальной в буфере, вместо глобальной будет использоваться переменная, локальная в буфере. Однако, если переменная локальной буфера содержит элемент &lt;code&gt;t&lt;/code&gt; , глобальная переменная ловушки также будет запущена.</target>
        </trans-unit>
        <trans-unit id="9ce6481c7077ae75ab928e3ea2e9fe7899f54a10" translate="yes" xml:space="preserve">
          <source>If the hook variable&amp;rsquo;s name does not end with &amp;lsquo;</source>
          <target state="translated">Если имя переменной ловушки не заканчивается на '</target>
        </trans-unit>
        <trans-unit id="7194289d33f24df74509a84c551f2a7b847a6c3c" translate="yes" xml:space="preserve">
          <source>If the input method function calls &lt;code&gt;read-event&lt;/code&gt; or &lt;code&gt;read-key-sequence&lt;/code&gt;, it should bind &lt;code&gt;input-method-function&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; first, to prevent recursion.</source>
          <target state="translated">Если функция метода ввода вызывает &lt;code&gt;read-event&lt;/code&gt; или &lt;code&gt;read-key-sequence&lt;/code&gt; , она должна сначала привязать &lt;code&gt;input-method-function&lt;/code&gt; к &lt;code&gt;nil&lt;/code&gt; , чтобы предотвратить рекурсию.</target>
        </trans-unit>
        <trans-unit id="b92832948f818aa5efd59c2e9db8f1bbd9dfaf42" translate="yes" xml:space="preserve">
          <source>If the keyboard character value is in the range of 0 to 127, it can go in the string unchanged.</source>
          <target state="translated">Если значение символа клавиатуры находится в диапазоне от 0 до 127,то оно может попасть в строку без изменений.</target>
        </trans-unit>
        <trans-unit id="a78d52707568efb8cb99d72237791962edb1bb7d" translate="yes" xml:space="preserve">
          <source>If the last event came from a keyboard macro, the value is &lt;code&gt;macro&lt;/code&gt;.</source>
          <target state="translated">Если последнее событие произошло от макроса клавиатуры, значение будет &lt;code&gt;macro&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db9de26b78dce76c9d7c2f665eaa2e2f3820a073" translate="yes" xml:space="preserve">
          <source>If the last line of the documentation string begins with the keyword &amp;lsquo;</source>
          <target state="translated">Если последняя строка в документации начинается с ключевого слова '</target>
        </trans-unit>
        <trans-unit id="29659fa361b130ec92b10faa358cc4b631fd3026" translate="yes" xml:space="preserve">
          <source>If the last redisplay of &lt;var&gt;window&lt;/var&gt; was preempted, and did not finish, Emacs does not know the position of the end of display in that window. In that case, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если последнее повторное отображение &lt;var&gt;window&lt;/var&gt; было прервано и не было завершено, Emacs не знает позицию конца отображения в этом окне. В этом случае эта функция возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="593f83092bf8a9f2ef87711ac3044535d5c9c61a" translate="yes" xml:space="preserve">
          <source>If the last regular expression search found a match, this function returns the position of the start of the matching text or of a subexpression of it.</source>
          <target state="translated">Если последний поиск в регулярном выражении нашел совпадение,то эта функция возвращает позицию начала совпадающего текста или его подвыражения.</target>
        </trans-unit>
        <trans-unit id="a09d4605b1d9c1964692cc9c6b51d21e2e5fc180" translate="yes" xml:space="preserve">
          <source>If the last such operation was done against a string with &lt;code&gt;string-match&lt;/code&gt;, then you should pass the same string as the argument &lt;var&gt;in-string&lt;/var&gt;. After a buffer search or match, you should omit &lt;var&gt;in-string&lt;/var&gt; or pass &lt;code&gt;nil&lt;/code&gt; for it; but you should make sure that the current buffer when you call &lt;code&gt;match-string&lt;/code&gt; is the one in which you did the searching or matching. Failure to follow this advice will lead to incorrect results.</source>
          <target state="translated">Если последняя такая операция была сделана для строки с &lt;code&gt;string-match&lt;/code&gt; , то вы должны передать ту же строку, что и аргумент &lt;var&gt;in-string&lt;/var&gt; . После поиска или совпадения в буфере вы должны опустить &lt;var&gt;in-string&lt;/var&gt; или передать для нее &lt;code&gt;nil&lt;/code&gt; ; но вы должны убедиться, что текущий буфер при вызове &lt;code&gt;match-string&lt;/code&gt; - это тот, в котором вы выполняли поиск или сопоставление. Несоблюдение этого совета приведет к неверным результатам.</target>
        </trans-unit>
        <trans-unit id="e62a0d108f094251e8c76edc0426c34a0df15e77" translate="yes" xml:space="preserve">
          <source>If the length is not a multiple of 8, the printed representation shows extra elements, but these extras really make no difference. For instance, in the next example, the two bool-vectors are equal, because only the first 3 bits are used:</source>
          <target state="translated">Если длина не кратна 8,то в распечатанном представлении отображаются дополнительные элементы,но эти дополнительные элементы действительно не имеют значения.Например,в следующем примере два bool-вектора равны,потому что используются только первые 3 бита:</target>
        </trans-unit>
        <trans-unit id="e1a58687f298bfc5e14e06f12ac22bf3d01e6a0e" translate="yes" xml:space="preserve">
          <source>If the lower bound of a range is greater than its upper bound, the range is empty and represents no characters. Thus, &amp;lsquo;</source>
          <target state="translated">Если нижняя граница диапазона больше, чем его верхняя граница, диапазон пуст и не представляет никаких символов. Таким образом, '</target>
        </trans-unit>
        <trans-unit id="23d26dae81faa69c7288d9d25473c5bab73ca975" translate="yes" xml:space="preserve">
          <source>If the macro is expanded just once, in compilation, then the object is constructed just once, during compilation. But in interpreted execution, the macro is expanded each time the macro call runs, and this means a new object is constructed each time.</source>
          <target state="translated">Если макрос разворачивается всего один раз,при компиляции,то объект строится всего один раз,при компиляции.Однако при интерпретированном выполнении макрос расширяется каждый раз при вызове макроса,а это значит,что каждый раз создается новый объект.</target>
        </trans-unit>
        <trans-unit id="bc125edda6b08303280445c68325d12ae377eac0" translate="yes" xml:space="preserve">
          <source>If the menu keymap contains a binding to a nested keymap, the nested keymap specifies a &lt;em&gt;submenu&lt;/em&gt;. There will be a menu item, labeled by the nested keymap&amp;rsquo;s item string, and clicking on this item automatically pops up the specified submenu. As a special exception, if the menu keymap contains a single nested keymap and no other menu items, the menu shows the contents of the nested keymap directly, not as a submenu.</source>
          <target state="translated">Если раскладка меню содержит привязку к вложенной раскладке, то вложенная раскладка определяет &lt;em&gt;подменю&lt;/em&gt; . Там будет пункт меню, помеченный строкой элемента вложенной раскладки клавиатуры, и щелчок по этому пункту автоматически вызывает указанное подменю. В качестве особого исключения, если раскладка меню содержит единственную вложенную раскладку клавиатуры и никаких других пунктов меню, в меню отображается содержимое вложенной раскладки клавиатуры напрямую, а не как подменю.</target>
        </trans-unit>
        <trans-unit id="4f7ebb7b6e6d5779c7c43bfe78217b03a694528d" translate="yes" xml:space="preserve">
          <source>If the minibuffer window is active, it is normally considered (so that this function returns &lt;code&gt;nil&lt;/code&gt;). However, if the optional argument &lt;var&gt;no-mini&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the minibuffer window is ignored even if active. The optional argument &lt;var&gt;all-frames&lt;/var&gt; has the same meaning as for &lt;code&gt;next-window&lt;/code&gt;.</source>
          <target state="translated">Если окно минибуфера активно, оно обычно считается (так что эта функция возвращает &lt;code&gt;nil&lt;/code&gt; ). Однако, если необязательный аргумент &lt;var&gt;no-mini&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , окно минибуфера игнорируется, даже если оно активно. Необязательный аргумент &lt;var&gt;all-frames&lt;/var&gt; имеет то же значение, что и для &lt;code&gt;next-window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="faf29a5efd78ebe45a2c9aa07cbed9ae9d00bde9" translate="yes" xml:space="preserve">
          <source>If the minor mode Abbrev mode is enabled, the buffer-local variable &lt;code&gt;abbrev-mode&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and abbrevs are automatically expanded in the buffer. For the user-level commands for abbrevs, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Abbrevs.html#Abbrevs&quot;&gt;Abbrev Mode&lt;/a&gt; in</source>
          <target state="translated">Если включен второстепенный режим Abbrev mode, локальная в буфере переменная &lt;code&gt;abbrev-mode&lt;/code&gt; не равна &lt;code&gt;nil&lt;/code&gt; , и сокращения автоматически расширяются в буфере. Информацию о командах уровня пользователя для сокращений см. В &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Abbrevs.html#Abbrevs&quot;&gt;разделе Режим сокращений&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="de290dee00842dc125e13b1b3e24f4708ce7084f" translate="yes" xml:space="preserve">
          <source>If the mode command is called from Lisp (i.e., non-interactively), it should enable the mode if the argument is omitted or &lt;code&gt;nil&lt;/code&gt;; it should toggle the mode if the argument is the symbol &lt;code&gt;toggle&lt;/code&gt;; otherwise it should treat the argument in the same way as for an interactive call with a numeric prefix argument, as described above.</source>
          <target state="translated">Если команда режима вызывается из Лиспа (т. Е. Не интерактивно), она должна включить режим, если аргумент опущен или равен &lt;code&gt;nil&lt;/code&gt; ; он должен переключать режим, если аргумент - &lt;code&gt;toggle&lt;/code&gt; символа ; в противном случае он должен обрабатывать аргумент так же, как и для интерактивного вызова с аргументом числового префикса, как описано выше.</target>
        </trans-unit>
        <trans-unit id="bec430cf6e44ccde778d907c50c0e83848046d8c" translate="yes" xml:space="preserve">
          <source>If the mode handles a language that has a syntax for comments, it should set the variables that define the comment syntax. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Options-for-Comments.html#Options-for-Comments&quot;&gt;Options Controlling Comments&lt;/a&gt; in</source>
          <target state="translated">Если режим обрабатывает язык, имеющий синтаксис для комментариев, он должен установить переменные, которые определяют синтаксис комментария. См. Раздел &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Options-for-Comments.html#Options-for-Comments&quot;&gt;Параметры управления комментариями&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="766701d4c597749957ec20b1f96189d041bff034" translate="yes" xml:space="preserve">
          <source>If the multi-file package contains auxiliary data files (such as images), the package&amp;rsquo;s Lisp code can refer to these files via the variable &lt;code&gt;load-file-name&lt;/code&gt; (see &lt;a href=&quot;loading#Loading&quot;&gt;Loading&lt;/a&gt;). Here is an example:</source>
          <target state="translated">Если многофайловый пакет содержит вспомогательные файлы данных (такие как изображения), код Lisp пакета может ссылаться на эти файлы через переменную &lt;code&gt;load-file-name&lt;/code&gt; (см. &lt;a href=&quot;loading#Loading&quot;&gt;Загрузка&lt;/a&gt; ). Вот пример:</target>
        </trans-unit>
        <trans-unit id="d409ef26b553fc0018482eae4ed734f3c5c6a110" translate="yes" xml:space="preserve">
          <source>If the name of an item in the group starts with &lt;var&gt;prefix&lt;/var&gt;, and the customizable variable &lt;code&gt;custom-unlispify-remove-prefixes&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the item&amp;rsquo;s tag will omit &lt;var&gt;prefix&lt;/var&gt;. A group can have any number of prefixes.</source>
          <target state="translated">Если имя элемента в группе начинается с &lt;var&gt;prefix&lt;/var&gt; , а настраиваемая переменная &lt;code&gt;custom-unlispify-remove-prefixes&lt;/code&gt; не равна &lt;code&gt;nil&lt;/code&gt; , тег элемента будет опускать &lt;var&gt;prefix&lt;/var&gt; . У группы может быть любое количество префиксов.</target>
        </trans-unit>
        <trans-unit id="70c90c2a423ece13756844b933ee2df670dd4b76" translate="yes" xml:space="preserve">
          <source>If the new auto-reverting is part of Emacs, you should mention it in the documentation string of &lt;code&gt;global-auto-revert-non-file-buffers&lt;/code&gt;.</source>
          <target state="translated">Если новый автоматический возврат является частью Emacs, вы должны упомянуть его в строке документации &lt;code&gt;global-auto-revert-non-file-buffers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59618baebc74ea9b713a2434becf1bd9cef8f88b" translate="yes" xml:space="preserve">
          <source>If the object is a string, its text properties are copied into the output. The text properties of the &amp;lsquo;</source>
          <target state="translated">Если объект является строкой, его текстовые свойства копируются в вывод. Текстовые свойства '</target>
        </trans-unit>
        <trans-unit id="bbf1c2ad722d60dcaedc7d580443b6a686265aa8" translate="yes" xml:space="preserve">
          <source>If the operating system doesn&amp;rsquo;t supply all the information necessary to compute the value, the unknown elements of the list are &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если операционная система не предоставляет всю информацию, необходимую для вычисления значения, неизвестные элементы списка равны &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4134e96049215e44babeaf58a040a9486a384f27" translate="yes" xml:space="preserve">
          <source>If the option &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see below) is non-&lt;code&gt;nil&lt;/code&gt;, this function will try to resize the frame of &lt;var&gt;window&lt;/var&gt; to fit its contents by calling &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see below).</source>
          <target state="translated">Если опция &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (см. Ниже) не равна &lt;code&gt;nil&lt;/code&gt; , эта функция попытается изменить размер рамки &lt;var&gt;window&lt;/var&gt; чтобы соответствовать его содержимому, вызывая &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="7a1f7cafee4e439f83630c4e50184d68bca21388" translate="yes" xml:space="preserve">
          <source>If the option &lt;code&gt;load-prefer-newer&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then when searching suffixes, &lt;code&gt;load&lt;/code&gt; selects whichever version of a file (&amp;lsquo;</source>
          <target state="translated">Если опция &lt;code&gt;load-prefer-newer&lt;/code&gt; равна &lt;code&gt;nil&lt;/code&gt; , то при поиске суффиксов &lt;code&gt;load&lt;/code&gt; выбирает ту версию файла ('</target>
        </trans-unit>
        <trans-unit id="6972526adbec033bedbd9f1472b039c3252b6c51" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;code&gt;keymaps&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a list of keymaps to search in. This argument is ignored if &lt;code&gt;position&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если необязательный аргумент &lt;code&gt;keymaps&lt;/code&gt; равен &lt;code&gt;nil&lt;/code&gt; , он определяет список раскладок клавиатуры для поиска. Этот аргумент игнорируется, если &lt;code&gt;position&lt;/code&gt; равна &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d13d6f2b54cc4e9294b60597b7417e40d2eac6e" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;absolute&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to return edges relative to the native position of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame. &lt;var&gt;absolute&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to return coordinates relative to the origin (0, 0) of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s display. On non-graphical systems this argument has no effect.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;absolute&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , это означает, что нужно возвращать края относительно исходной позиции рамки &lt;var&gt;window&lt;/var&gt; . &lt;var&gt;absolute&lt;/var&gt; не- &lt;code&gt;nil&lt;/code&gt; средства для возврата координаты относительно начала координат (0, 0) &lt;var&gt;window&lt;/var&gt; дисплея &amp;laquo;с. На неграфические системы этот аргумент не действует.</target>
        </trans-unit>
        <trans-unit id="942217ba0ceb902eab90c24638b8f068b8adc202" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;body&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to return the edges corresponding to the total size of &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;body&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to return the edges of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body (aka text area). If &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;window&lt;/var&gt; must specify a live window.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;body&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , это означает, что нужно вернуть края, соответствующие общему размеру &lt;var&gt;window&lt;/var&gt; . &lt;var&gt;body&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; означает возврат краев тела &lt;var&gt;window&lt;/var&gt; (также известной как текстовая область). Если &lt;var&gt;body&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;window&lt;/var&gt; должно указывать живое окно.</target>
        </trans-unit>
        <trans-unit id="98a6a65e6e71ac598f7759ffc1aa4f0f17eb5099" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;check-timers&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then if no input is available, Emacs runs any timers which are ready. See &lt;a href=&quot;timers#Timers&quot;&gt;Timers&lt;/a&gt;.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;check-timers&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , тогда, если ввод недоступен, Emacs запускает любые готовые таймеры. См. &lt;a href=&quot;timers#Timers&quot;&gt;Таймеры&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8f788f6da02c6227cc5cf0441d2b91d40d5c360" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;discard-comments&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, any top-level comment is discarded. (This argument is obsolete and will be removed in future Emacs versions. To remove comments, use the &lt;code&gt;xml-remove-comments&lt;/code&gt; utility function on the data before you call the parsing function.)</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;discard-comments&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , любой комментарий верхнего уровня отбрасывается. (Этот аргумент устарел и будет удален в будущих версиях Emacs. Чтобы удалить комментарии, используйте служебную функцию &lt;code&gt;xml-remove-comments&lt;/code&gt; для данных, прежде чем вызывать функцию синтаксического анализа.)</target>
        </trans-unit>
        <trans-unit id="b6ab51bf07649dfa9b96691b7fc43fbdf855ba00" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;first&lt;/var&gt; is an integer, it denotes the index (starting with 0) of the first line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s glyph matrix to be returned. Note that if &lt;var&gt;window&lt;/var&gt; has a header line, the line with index 0 is that header line. If &lt;var&gt;first&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the first line to be considered is determined by the value of the optional argument &lt;var&gt;body&lt;/var&gt;: If &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to start with the first line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body, skipping any header line, if present. Otherwise, this function will start with the first line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s glyph matrix, possibly the header line.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;first&lt;/var&gt; является целым числом, он обозначает возвращаемый индекс (начиная с 0) первой строки матрицы глифов &lt;var&gt;window&lt;/var&gt; . Обратите внимание, что если &lt;var&gt;window&lt;/var&gt; имеет строку заголовка, строка с индексом 0 является этой строкой заголовка. Если &lt;var&gt;first&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , первая рассматриваемая строка определяется значением необязательного аргумента &lt;var&gt;body&lt;/var&gt; : если &lt;var&gt;body&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , это означает, что нужно начинать с первой строки тела &lt;var&gt;window&lt;/var&gt; , пропуская любую строку заголовка, если таковая имеется. . В противном случае эта функция начнется с первой строки матрицы глифов &lt;var&gt;window&lt;/var&gt; , возможно, строки заголовка.</target>
        </trans-unit>
        <trans-unit id="2a8154d809b8ebbd9c4648ca1d0087a606bb47e2" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;fold-wildcards&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, consecutive wildcards in the XLFD are folded into one.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;fold-wildcards&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , последовательные групповые символы в XLFD объединяются в один.</target>
        </trans-unit>
        <trans-unit id="17803140fbecda3b457cb2f98fe20241b13198d0" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;force-same-window&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the selected window is not suitable for displaying the buffer, this function always signals an error when called non-interactively. In interactive use, if the selected window is a minibuffer window, this function will try to use some other window instead. If the selected window is strongly dedicated to its buffer, the option &lt;code&gt;switch-to-buffer-in-dedicated-window&lt;/code&gt; described next can be used to proceed.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;force-same-window&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; и выбранное окно не подходит для отображения буфера, эта функция всегда сигнализирует об ошибке при неинтерактивном вызове. При интерактивном использовании, если выбранное окно является окном минибуфера, эта функция попытается использовать вместо этого какое-нибудь другое окно. Если выбранное окно строго предназначено для своего буфера, для продолжения можно использовать опцию &lt;code&gt;switch-to-buffer-in-dedicated-window&lt;/code&gt; описанную далее.</target>
        </trans-unit>
        <trans-unit id="bf71899a17742651d2154bd40f20ac07da3c6d22" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;frame&lt;/var&gt; is specified, it returns the name of the font of &lt;var&gt;face&lt;/var&gt; for that frame. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the selected frame is used. In the latter case, if the optional third argument &lt;var&gt;character&lt;/var&gt; is supplied, it returns the font name used for &lt;var&gt;character&lt;/var&gt;.</source>
          <target state="translated">Если указан необязательный аргумент &lt;var&gt;frame&lt;/var&gt; , он возвращает имя шрифта &lt;var&gt;face&lt;/var&gt; для этого кадра. Если &lt;var&gt;frame&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , используется выбранный кадр. В последнем случае, если указан необязательный третий &lt;var&gt;character&lt;/var&gt; аргумента , он возвращает имя шрифта, используемое для &lt;var&gt;character&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="96eea2deb29fd0e9c6ac91753ac1f4c6f87dd7cb" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;frames&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this applies the font to the selected frame only. If &lt;var&gt;frames&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a list of frames to act upon, or &lt;code&gt;t&lt;/code&gt; meaning all existing and all future graphical frames.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;frames&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , шрифт применяется только к выбранному фрейму. Если &lt;var&gt;frames&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , это должен быть список фреймов, над которыми нужно действовать, или &lt;code&gt;t&lt;/code&gt; означает все существующие и все будущие графические фреймы.</target>
        </trans-unit>
        <trans-unit id="66524ab75cc1a677566a8075645e69c22c49d84e" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;group&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function also checks that the file&amp;rsquo;s group would be unchanged.</source>
          <target state="translated">Если необязательная &lt;var&gt;group&lt;/var&gt; аргументов не равна &lt;code&gt;nil&lt;/code&gt; , эта функция также проверяет, что группа файла не изменилась.</target>
        </trans-unit>
        <trans-unit id="dc7b9b4167f6b13cb2f8aa1c39c6cc0cdb4b372d" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;handle-mode&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, then all this function does is return a symbol specifying the major mode, if the &amp;lsquo;</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;handle-mode&lt;/var&gt; равен &lt;code&gt;t&lt;/code&gt; , тогда все, что делает эта функция, - это возвращает символ, определяющий основной режим, если '</target>
        </trans-unit>
        <trans-unit id="efc9a5f2a0d3d044b40f95f8b635024abb54970f" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to return non-&lt;code&gt;nil&lt;/code&gt; if and only if &lt;var&gt;window&lt;/var&gt; is part of a horizontal combination.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;horizontal&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это означает, что возвращается &lt;code&gt;nil&lt;/code&gt; если и только если &lt;var&gt;window&lt;/var&gt; является частью горизонтальной комбинации.</target>
        </trans-unit>
        <trans-unit id="83a9c8a93022a096b01708b60415f35cb89112fd" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;ignore&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it means to ignore minimum window sizes and fixed-size restrictions. If &lt;var&gt;ignore&lt;/var&gt; is &lt;code&gt;safe&lt;/code&gt;, this means windows can get as small as one line and/or two columns.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;ignore&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это означает игнорирование минимальных размеров окна и ограничений фиксированного размера. Если &lt;var&gt;ignore&lt;/var&gt; это &lt;code&gt;safe&lt;/code&gt; , это означает , что окна могут получить как малые , как одна строка и / или двух столбцов.</target>
        </trans-unit>
        <trans-unit id="4f213acc0249fad89d41d85026c2365c2d829cc6" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;inhibit-capture-property&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;old-pos&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt; property of that name, then any field boundaries are ignored.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;inhibit-capture-property&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , а &lt;var&gt;old-pos&lt;/var&gt; имеет &lt;code&gt;nil&lt;/code&gt; свойство с этим именем, то любые границы поля игнорируются.</target>
        </trans-unit>
        <trans-unit id="70a29817b0c4edcca5649ad869cb723c93bcbf44" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;keep-size&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this keeps the number of frame lines and columns fixed. (If non-&lt;code&gt;nil&lt;/code&gt;, the option &lt;code&gt;frame-inhibit-implied-resize&lt;/code&gt; described in the next section will override this.) If &lt;var&gt;keep-size&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; (or with a prefix argument), it tries to keep the size of the display area of the current frame fixed by adjusting the number of lines and columns.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;keep-size&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , это сохраняет количество строк и столбцов кадра фиксированным. (Если не &lt;code&gt;nil&lt;/code&gt; , опция &lt;code&gt;frame-inhibit-implied-resize&lt;/code&gt; описанная в следующем разделе, переопределит это.) Если &lt;var&gt;keep-size&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; (или с аргументом префикса), он пытается сохранить размер дисплея площадь текущего кадра фиксируется регулировкой количества строк и столбцов.</target>
        </trans-unit>
        <trans-unit id="de719d27f6f2cb678c19f026b7e92ec281747e6b" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;last&lt;/var&gt; is an integer, it denotes the index of the last line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s glyph matrix that shall be returned. If &lt;var&gt;last&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the last line to be considered is determined by the value of &lt;var&gt;body&lt;/var&gt;: If &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to use the last line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body, omitting &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s mode line, if present. Otherwise, this means to use the last line of &lt;var&gt;window&lt;/var&gt; which may be the mode line.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;last&lt;/var&gt; является целым числом, он обозначает индекс последней строки матрицы глифов &lt;var&gt;window&lt;/var&gt; которая должна быть возвращена. Если &lt;var&gt;last&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , последняя рассматриваемая строка определяется значением &lt;var&gt;body&lt;/var&gt; : Если &lt;var&gt;body&lt;/var&gt; не &lt;code&gt;nil&lt;/code&gt; , это означает использование последней строки тела &lt;var&gt;window&lt;/var&gt; , пропуская строку режима &lt;var&gt;window&lt;/var&gt; , если она есть. В противном случае это означает использование последней строки &lt;var&gt;window&lt;/var&gt; которая может быть строкой режима.</target>
        </trans-unit>
        <trans-unit id="12c83b7f9aace8c155bb219d0fd91503e17d0817" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;mini&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to return the minibuffer window if and only if it is currently active. If &lt;var&gt;mini&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function may return the minibuffer window even when it&amp;rsquo;s not active. However, if &lt;var&gt;wrap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it always acts as if &lt;var&gt;mini&lt;/var&gt; were &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;mini&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , это означает, что окно минибуфера должно возвращаться тогда и только тогда, когда оно активно в данный момент. Если &lt;var&gt;mini&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , эта функция может вернуть окно минибуфера, даже если оно не активно. Однако, если &lt;var&gt;wrap&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , он всегда действует так, как если бы &lt;var&gt;mini&lt;/var&gt; был равен &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5511462c9c4977d0cd83a29124933c790a0a0164" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;must-suffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;load&lt;/code&gt; insists that the file name used must end in either &amp;lsquo;</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;must-suffix&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;load&lt;/code&gt; настаивает на том, чтобы используемое имя файла заканчивалось либо на '</target>
        </trans-unit>
        <trans-unit id="6239f8f2206b6656204db08625818021608084ae" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;no-angles&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the angle brackets around function keys and event symbols are omitted; this is for compatibility with old versions of Emacs which didn&amp;rsquo;t use the brackets.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;no-angles&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , угловые скобки вокруг функциональных клавиш и символов событий опускаются; это сделано для совместимости со старыми версиями Emacs, в которых скобки не использовались.</target>
        </trans-unit>
        <trans-unit id="541d4ba76979bfd5c88c5d5842f7e0fd1e0a1d50" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;no-pad&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then this function doesn&amp;rsquo;t generate the padding (&lt;code&gt;=&lt;/code&gt;).</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;no-pad&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , тогда эта функция не генерирует заполнение ( &lt;code&gt;=&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f66a6b09ca7b976ee8eb89e6be2104be63ce1a76" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;no-pad&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then this function doesn&amp;rsquo;t generate the padding.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;no-pad&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то эта функция не генерирует заполнение.</target>
        </trans-unit>
        <trans-unit id="77d5b1707ea76a1dbdb066e84d247eab1870ba77" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;norecord&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function does not alter the list of most recently selected windows, nor the buffer list.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;norecord&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , эта функция не изменяет ни список последних выбранных окон, ни список буферов.</target>
        </trans-unit>
        <trans-unit id="a5326dfb605251ff6c0b5692abbc55c1aa47aa5e" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;nosuffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;load&lt;/code&gt; does not try the suffixes &amp;lsquo;</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;nosuffix&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;load&lt;/code&gt; не пытается использовать суффиксы '</target>
        </trans-unit>
        <trans-unit id="a279dc204bfea65e494272f987280f42d5b4e3a8" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;old-name&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a file in the user&amp;rsquo;s home directory,</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;old-name&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , он указывает файл в домашнем каталоге пользователя,</target>
        </trans-unit>
        <trans-unit id="b64c0af0469d5571e33c344081b577166c995bc0" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;only-in-line&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and constraining &lt;var&gt;new-pos&lt;/var&gt; in the usual way would move it to a different line, &lt;var&gt;new-pos&lt;/var&gt; is returned unconstrained. This used in commands that move by line, such as &lt;code&gt;next-line&lt;/code&gt; and &lt;code&gt;beginning-of-line&lt;/code&gt;, so that they respect field boundaries only in the case where they can still move to the right line.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;only-in-line&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , а ограничение &lt;var&gt;new-pos&lt;/var&gt; обычным способом переместит его на другую строку, &lt;var&gt;new-pos&lt;/var&gt; возвращается без ограничений. Это используется в командах, которые перемещаются по строке, таких как &lt;code&gt;next-line&lt;/code&gt; и &lt;code&gt;beginning-of-line&lt;/code&gt; , поэтому они соблюдают границы поля только в том случае, если они все еще могут перемещаться на правую строку.</target>
        </trans-unit>
        <trans-unit id="89a3540a2ddd227c3da7412945b6da99d10dfd7d" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;only&lt;/var&gt; is &lt;code&gt;vertically&lt;/code&gt;, this function may resize the frame vertically only. If &lt;var&gt;only&lt;/var&gt; is &lt;code&gt;horizontally&lt;/code&gt;, it may resize the frame horizontally only.</source>
          <target state="translated">Если дополнительный аргумент &lt;var&gt;only&lt;/var&gt; в &lt;code&gt;vertically&lt;/code&gt; положении , эта функция может изменить размер кадра только по вертикали. Если &lt;var&gt;only&lt;/var&gt; по &lt;code&gt;horizontally&lt;/code&gt; , он может изменять размер рамки только по горизонтали.</target>
        </trans-unit>
        <trans-unit id="5a230cb235eaaab6d70d21c1cb8a38327fbdcb69" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to return the coordinates in terms of the default character width and height of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;), rounded if necessary. &lt;var&gt;pixelwise&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to return the coordinates in pixels. Note that the pixel specified by &lt;var&gt;right&lt;/var&gt; and &lt;var&gt;bottom&lt;/var&gt; is immediately outside of these edges. If &lt;var&gt;absolute&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;pixelwise&lt;/var&gt; is implicitly non-&lt;code&gt;nil&lt;/code&gt; too.</source>
          <target state="translated">Если необязательный аргумент по &lt;var&gt;pixelwise&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , это означает, что необходимо возвращать координаты в терминах ширины символа по умолчанию и высоты рамки &lt;var&gt;window&lt;/var&gt; (см. &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Шрифт рамки&lt;/a&gt; ), округленных при необходимости. &lt;var&gt;pixelwise&lt;/var&gt; ОТСУТСТВИЕ &lt;code&gt;nil&lt;/code&gt; средств , чтобы вернуть координаты в пикселях. Обратите внимание, что пиксель, указанный &lt;var&gt;right&lt;/var&gt; и &lt;var&gt;bottom&lt;/var&gt; находится непосредственно за пределами этих краев. Если &lt;var&gt;absolute&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , то по &lt;var&gt;pixelwise&lt;/var&gt; неявно не равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67538d7d98419175426b128c36b0b3bebe8742df" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;delta&lt;/var&gt; is interpreted as pixels.</source>
          <target state="translated">Если необязательный аргумент по &lt;var&gt;pixelwise&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;delta&lt;/var&gt; интерпретируется как пиксели.</target>
        </trans-unit>
        <trans-unit id="a9879bc9333880b25266af065a9218d798d982fc" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;delta&lt;/var&gt; will be interpreted as pixels.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;pixelwise&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;delta&lt;/var&gt; будет интерпретироваться как пиксели.</target>
        </trans-unit>
        <trans-unit id="e79461cf0df5f6b16759d099fcd618f8a17c7868" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns the body height of &lt;var&gt;window&lt;/var&gt; counted in pixels.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;pixelwise&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , эта функция возвращает высоту тела &lt;var&gt;window&lt;/var&gt; в пикселях.</target>
        </trans-unit>
        <trans-unit id="88be3cbbdc085160c9724bd37eb18c5ece2bd9f1" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns the body width of &lt;var&gt;window&lt;/var&gt; in units of pixels.</source>
          <target state="translated">Если необязательный аргумент по &lt;var&gt;pixelwise&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , эта функция возвращает ширину тела &lt;var&gt;window&lt;/var&gt; в пикселях.</target>
        </trans-unit>
        <trans-unit id="e2f9666d74b1c2d8541a5e786737c4a527467fd1" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;preserve-permissions&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function copies the file modes (or &amp;ldquo;permissions&amp;rdquo;) of &lt;var&gt;oldname&lt;/var&gt; to &lt;var&gt;newname&lt;/var&gt;, as well as the Access Control List and SELinux context (if any). See &lt;a href=&quot;information-about-files#Information-about-Files&quot;&gt;Information about Files&lt;/a&gt;.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;preserve-permissions&lt;/var&gt; отлична от &lt;code&gt;nil&lt;/code&gt; , эта функция копирует режимы файлов (или &amp;laquo;разрешения&amp;raquo;) от &lt;var&gt;oldname&lt;/var&gt; к &lt;var&gt;newname&lt;/var&gt; , а также перечень и SELinux контекст управления доступом (если таковые имеются). См. &lt;a href=&quot;information-about-files#Information-about-Files&quot;&gt;Информацию о файлах&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="029a3d44d3a297af4af150ff61d208892d560bbb" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;preserve-size&lt;/var&gt; of that function (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;) is non-&lt;code&gt;nil&lt;/code&gt;, the size established by that function is preserved.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;preserve-size&lt;/var&gt; этой функции (см. &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Изменение размера окна&lt;/a&gt; ) не равен &lt;code&gt;nil&lt;/code&gt; , размер, установленный этой функцией, сохраняется.</target>
        </trans-unit>
        <trans-unit id="6e6bbdaef60dada357717568596197154dd7321c" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;preserve&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this means to preserve the current height/width of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body. The height/width of &lt;var&gt;window&lt;/var&gt; will change only if Emacs has no better choice. Resizing a window whose height/width is preserved by this function never throws an error.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;preserve&lt;/var&gt; равен &lt;code&gt;t&lt;/code&gt; , это означает сохранение текущей высоты / ширины тела &lt;var&gt;window&lt;/var&gt; . Высота / ширина &lt;var&gt;window&lt;/var&gt; изменится только в том случае, если у Emacs нет лучшего выбора. Изменение размера окна, высота / ширина которого сохраняется этой функцией, никогда не вызывает ошибки.</target>
        </trans-unit>
        <trans-unit id="89f5f499a676e24ccca2ae80726f4f232f2be90d" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;prompt&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a string to display in the echo area as a prompt. If &lt;var&gt;prompt&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or the string &amp;lsquo;</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;prompt&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это должна быть строка, отображаемая в эхо-области как приглашение. Если &lt;var&gt;prompt&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; или строка '</target>
        </trans-unit>
        <trans-unit id="d01db317320d26ca3e4ad5d1baa6aead22560513" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;rawfile&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;after-find-file&lt;/code&gt; is not called, and the &lt;code&gt;find-file-not-found-functions&lt;/code&gt; are not run in case of failure. What&amp;rsquo;s more, a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;rawfile&lt;/var&gt; value suppresses coding system conversion and format conversion.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;rawfile&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;after-find-file&lt;/code&gt; не вызывается, и функции &lt;code&gt;find-file-not-found-functions&lt;/code&gt; не запускаются в случае сбоя. Более того, значение &lt;var&gt;rawfile&lt;/var&gt; ,отличное от &lt;code&gt;nil&lt;/code&gt; , подавляет преобразование системы кодирования и преобразование формата.</target>
        </trans-unit>
        <trans-unit id="9dee660bbd61d9d3eb4ff8e4b9583cdaa1d22789" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;really-word&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it finds a word; otherwise, it finds a symbol (which includes both word characters and symbol constituent characters).</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;really-word&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , он находит слово; в противном случае он находит символ (который включает как символы слова, так и символы, составляющие символ).</target>
        </trans-unit>
        <trans-unit id="cb6c903ec4ea9d4de23615c3a0c722139cb94b36" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;remember-pos&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function looks for the &lt;var&gt;id&lt;/var&gt; element on the current line, if any, and tries to move to that entry after all the entries are (re)inserted.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;remember-pos&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , эта функция ищет элемент &lt;var&gt;id&lt;/var&gt; в текущей строке, если таковой имеется, и пытается перейти к этой записи после (повторной) вставки всех записей.</target>
        </trans-unit>
        <trans-unit id="c50ccd8c5be45306369670ca97b8346a0508bffa" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;round&lt;/var&gt; is &lt;code&gt;ceiling&lt;/code&gt;, this function returns the smallest integer larger than &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s pixel height divided by the character height of its frame; if it is &lt;code&gt;floor&lt;/code&gt;, it returns the largest integer smaller than said value; with any other &lt;var&gt;round&lt;/var&gt; it returns the internal value of &lt;var&gt;windows&lt;/var&gt;&amp;rsquo;s total height.</source>
          <target state="translated">Если необязательным аргументом &lt;var&gt;round&lt;/var&gt; является &lt;code&gt;ceiling&lt;/code&gt; , эта функция возвращает наименьшее целое число, превышающее высоту пикселя &lt;var&gt;window&lt;/var&gt; , деленную на высоту символа его кадра; если он &lt;code&gt;floor&lt;/code&gt; , он возвращает наибольшее целое число, меньшее указанного значения; с любым другим &lt;var&gt;round&lt;/var&gt; возвращает внутреннее значение общей высоты &lt;var&gt;windows&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="5c0338135cc80796e1eb8d151c1e9949aeae7c3d" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;sign&lt;/var&gt; is a negative number, it means to use the right or bottom edge of &lt;var&gt;window&lt;/var&gt; as reference position instead of &lt;code&gt;window-point&lt;/code&gt;. If &lt;var&gt;sign&lt;/var&gt; is a positive number, it means to use the left or top edge of &lt;var&gt;window&lt;/var&gt; as reference position.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;sign&lt;/var&gt; - отрицательное число, это означает использование правого или нижнего края &lt;var&gt;window&lt;/var&gt; качестве ссылочной позиции вместо &lt;code&gt;window-point&lt;/code&gt; . Если &lt;var&gt;sign&lt;/var&gt; является положительным числом, это означает использование левого или верхнего края &lt;var&gt;window&lt;/var&gt; качестве контрольной позиции.</target>
        </trans-unit>
        <trans-unit id="2e74dce35aeb60451a6f89698126e1e40b28805c" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;strict&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then point must be in or next to the symbol or word&amp;mdash;if no symbol or word is there, the function returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, a nearby symbol or word on the same line is acceptable.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;strict&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то точка должна находиться внутри символа или слова или рядом с ними - если нет символа или слова, функция возвращает &lt;code&gt;nil&lt;/code&gt; . В противном случае можно использовать ближайший символ или слово в той же строке.</target>
        </trans-unit>
        <trans-unit id="85a078037bb47ea6da257269962f893fa95d36c4" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;substitute&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, Emacs calls the function &lt;code&gt;substitute-env-vars&lt;/code&gt; to expand any environment variables in &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;substitute&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , Emacs вызывает функцию &lt;code&gt;substitute-env-vars&lt;/code&gt; , чтобы раскрыть любые переменные среды в &lt;var&gt;value&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="048f128e5ceb4df9f865a4f7389308d38bf4767b" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;switch-buffer&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and completion is performed in the minibuffer, &lt;var&gt;function&lt;/var&gt; will be called with current buffer set to the buffer from which the minibuffer was entered.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;switch-buffer&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; и завершение выполняется в минибуфере, &lt;var&gt;function&lt;/var&gt; будет вызываться с текущим буфером, установленным на буфер, из которого был введен минибуфер.</target>
        </trans-unit>
        <trans-unit id="08a4dd17345e143aedf66d1ce0a83721748bf1e6" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;trash&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the variable &lt;code&gt;delete-by-moving-to-trash&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this command moves the file into the system Trash instead of deleting it. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Misc-File-Ops.html#Misc-File-Ops&quot;&gt;Miscellaneous File Operations&lt;/a&gt; in</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;trash&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; а переменная &lt;code&gt;delete-by-moving-to-trash&lt;/code&gt; не равна &lt;code&gt;nil&lt;/code&gt; , эта команда перемещает файл в системную корзину вместо его удаления. См. Раздел &amp;laquo; &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Misc-File-Ops.html#Misc-File-Ops&quot;&gt;Разные операции с файлами&amp;raquo;&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="4c7d233a39cdc40ae2a87dce42cf20848095fce5" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;trim&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a regular expression to match text to trim from the beginning and end of each substring. If trimming makes the substring empty, it is treated as null.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;trim&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это должно быть регулярное выражение, соответствующее тексту для обрезки от начала и до конца каждой подстроки. Если обрезка делает подстроку пустой, она обрабатывается как null.</target>
        </trans-unit>
        <trans-unit id="0474de3e3cfb36597aeb20e585cfaab243a75642" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;update&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function will only erase or add entries that have changed since the last print. This is several times faster if most entries haven&amp;rsquo;t changed since the last time this function was called. The only difference in outcome is that tags placed via &lt;code&gt;tabulated-list-put-tag&lt;/code&gt; will not be removed from entries that haven&amp;rsquo;t changed (normally all tags are removed).</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;update&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , эта функция удалит или добавит только те записи, которые изменились с момента последней печати. Это в несколько раз быстрее, если большинство записей не изменилось с момента последнего вызова этой функции. Единственная разница в результате заключается в том, что теги, размещенные с помощью &lt;code&gt;tabulated-list-put-tag&lt;/code&gt; , не будут удалены из записей, которые не изменились (обычно удаляются все теги).</target>
        </trans-unit>
        <trans-unit id="34ef184b831e0c920b50c5c6e19e0c8ea037c0fc" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;wrap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to wrap &lt;var&gt;direction&lt;/var&gt; around frame borders. For example, if &lt;var&gt;window&lt;/var&gt; is at the top of the frame and &lt;var&gt;direction&lt;/var&gt; is &lt;code&gt;above&lt;/code&gt;, then this function usually returns the frame&amp;rsquo;s minibuffer window if it&amp;rsquo;s active and a window at the bottom of the frame otherwise.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;wrap&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это означает перенос &lt;var&gt;direction&lt;/var&gt; вокруг границ кадра. Например, если &lt;var&gt;window&lt;/var&gt; находится вверху фрейма, а &lt;var&gt;direction&lt;/var&gt; - &lt;code&gt;above&lt;/code&gt; , то эта функция обычно возвращает окно минибуфера фрейма, если оно активно, и окно внизу фрейма в противном случае.</target>
        </trans-unit>
        <trans-unit id="8549d0f21d86c989d10e25c901126fd388809096" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;writable&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to not use markers for sampling positions like &lt;code&gt;window-point&lt;/code&gt; or &lt;code&gt;window-start&lt;/code&gt;. This argument should be non-&lt;code&gt;nil&lt;/code&gt; when the state will be written to disk and read back in another session.</source>
          <target state="translated">Если необязательный аргумент &lt;var&gt;writable&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , это означает, что не следует использовать маркеры для выборки позиций, таких как &lt;code&gt;window-point&lt;/code&gt; &lt;code&gt;window-start&lt;/code&gt; или начало окна . Этот аргумент должен быть отличным от &lt;code&gt;nil&lt;/code&gt; когда состояние будет записано на диск и прочитано в другом сеансе.</target>
        </trans-unit>
        <trans-unit id="ceb05d9193a1bc7f982112320813187e1c1876a3" translate="yes" xml:space="preserve">
          <source>If the optional arguments &lt;var&gt;reference-face&lt;/var&gt; and &lt;var&gt;frame&lt;/var&gt; are specified, the returned list includes only fonts that are the same size as &lt;var&gt;reference-face&lt;/var&gt; (a face name) currently is on the frame &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">Если указаны необязательные аргументы &lt;var&gt;reference-face&lt;/var&gt; и &lt;var&gt;frame&lt;/var&gt; , возвращаемый список включает только шрифты того же размера, что и &lt;var&gt;reference-face&lt;/var&gt; (имя лица), которые в настоящее время находятся в кадре &lt;var&gt;frame&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="5277a2e4b2715d42fd68e395b8ef7fb55afa51fe" translate="yes" xml:space="preserve">
          <source>If the optional second argument &lt;var&gt;do-not-move&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;current-kill&lt;/code&gt; doesn&amp;rsquo;t alter the yanking pointer; it just returns the &lt;var&gt;n&lt;/var&gt;th kill, counting from the current yanking pointer.</source>
          <target state="translated">Если необязательный второй аргумент &lt;var&gt;do-not-move&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;current-kill&lt;/code&gt; не изменяет указатель восстановления; он просто возвращает &lt;var&gt;n&lt;/var&gt; - е уничтожение, считая от текущего указателя восстановления.</target>
        </trans-unit>
        <trans-unit id="0e51c40bdf5065b39b31e97f01fc136cf2c272d7" translate="yes" xml:space="preserve">
          <source>If the optional second argument &lt;var&gt;ignore&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a string, a potential buffer name. It means to consider that potential buffer acceptable, if it is tried, even it is the name of an existing buffer (which would normally be rejected). Thus, if buffers named &amp;lsquo;</source>
          <target state="translated">Если необязательный второй аргумент &lt;var&gt;ignore&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это должна быть строка, потенциальное имя буфера. Это означает, что потенциальный буфер считается приемлемым, если он будет попытаться, даже если это имя существующего буфера (который обычно будет отклонен). Таким образом, если буферы с именем '</target>
        </trans-unit>
        <trans-unit id="21b56a00ec159b94529bf7aadfc94d111c5699b4" translate="yes" xml:space="preserve">
          <source>If the paragraph has as yet only one line, the function tests the validity of the prefix candidate just found. The function then returns the candidate if it&amp;rsquo;s valid, or a string of spaces otherwise. (see the description of &lt;code&gt;adaptive-fill-first-line-regexp&lt;/code&gt; below).</source>
          <target state="translated">Если в абзаце пока только одна строка, функция проверяет правильность только что найденного кандидата на префикс. Затем функция возвращает кандидата, если он действителен, или строку пробелов в противном случае. (см. описание &lt;code&gt;adaptive-fill-first-line-regexp&lt;/code&gt; ниже).</target>
        </trans-unit>
        <trans-unit id="dfd81ad0f84ba2b0164d9238eabfac5d9cb05431" translate="yes" xml:space="preserve">
          <source>If the parameter&amp;rsquo;s value is a symbol, it specifies a number through the value of &lt;code&gt;tty-color-mode-alist&lt;/code&gt;, and the associated number is used instead.</source>
          <target state="translated">Если значение параметра является символом, оно указывает число через значение &lt;code&gt;tty-color-mode-alist&lt;/code&gt; , и вместо него используется связанный номер.</target>
        </trans-unit>
        <trans-unit id="9893303f7ed34f18f99bb475aaec259e0d2ecbf2" translate="yes" xml:space="preserve">
          <source>If the part of &lt;var&gt;filename&lt;/var&gt; before the first slash is &amp;lsquo;</source>
          <target state="translated">Если часть имени &lt;var&gt;filename&lt;/var&gt; перед первой косой чертой - '</target>
        </trans-unit>
        <trans-unit id="5f22cf6536ccc005c13385137d89081d1dc837e2" translate="yes" xml:space="preserve">
          <source>If the predicate is neither &lt;code&gt;t&lt;/code&gt; nor &lt;code&gt;nil&lt;/code&gt;, then it should be a function of no arguments. It will be called in each buffer to decide whether to offer to save that buffer. If it returns a non-&lt;code&gt;nil&lt;/code&gt; value in a certain buffer, that means do offer to save that buffer.</source>
          <target state="translated">Если предикат не равен ни &lt;code&gt;t&lt;/code&gt; , ни &lt;code&gt;nil&lt;/code&gt; , то он должен быть функцией без аргументов. Он будет вызываться в каждом буфере, чтобы решить, предлагать ли сохранить этот буфер. Если он возвращает &lt;code&gt;nil&lt;/code&gt; значение в определенном буфере, это означает, что вы предлагаете сохранить этот буфер.</target>
        </trans-unit>
        <trans-unit id="650d2ded902ef2d668e84d6c2d0f41e02a33671b" translate="yes" xml:space="preserve">
          <source>If the prefix key ends with a mouse event, Emacs handles the menu keymap by popping up a visible menu, so that the user can select a choice with the mouse. When the user clicks on a menu item, the event generated is whatever character or symbol has the binding that brought about that menu item. (A menu item may generate a series of events if the menu has multiple levels or comes from the menu bar.)</source>
          <target state="translated">Если префиксная клавиша заканчивается событием мыши,Emacs управляет клавиатурой меню,вытаскивая видимое меню,чтобы пользователь мог выбрать нужный пункт мышью.Когда пользователь нажимает на элемент меню,генерируется событие,независимо от того,какой символ или символ имеет привязку,которая привела к этому элементу меню.(Элемент меню может генерировать серию событий,если меню имеет несколько уровней или поступает из строки меню).</target>
        </trans-unit>
        <trans-unit id="57227ce473189ca647671661a371ca4ff2aa3d17" translate="yes" xml:space="preserve">
          <source>If the previous nonblank line has no indent points beyond the current column, this command does nothing.</source>
          <target state="translated">Если предыдущая незаполненная строка не имеет отступов за пределами текущего столбца,данная команда ничего не делает.</target>
        </trans-unit>
        <trans-unit id="3ff12eb1a5dce92c245dde7c64a07f76dd4a443b" translate="yes" xml:space="preserve">
          <source>If the previous nonblank line has no next indent point (i.e., none at a great enough column position), &lt;code&gt;indent-relative&lt;/code&gt; either does nothing (if &lt;var&gt;unindented-ok&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;) or calls &lt;code&gt;tab-to-tab-stop&lt;/code&gt;. Thus, if point is underneath and to the right of the last column of a short line of text, this command ordinarily moves point to the next tab stop by inserting whitespace.</source>
          <target state="translated">Если предыдущая непустая строка не имеет следующей точки отступа (т. &lt;var&gt;unindented-ok&lt;/var&gt; достаточно большой позиции столбца), &lt;code&gt;indent-relative&lt;/code&gt; либо ничего не делает (если unindented-ok не равен &lt;code&gt;nil&lt;/code&gt; ), либо вызывает &lt;code&gt;tab-to-tab-stop&lt;/code&gt; . Таким образом, если точка находится под и справа от последнего столбца короткой строки текста, эта команда обычно перемещает точку на следующую позицию табуляции, вставляя пробел.</target>
        </trans-unit>
        <trans-unit id="f4da0c6d9b4449d476585ee23e7db4cf7ce32c0b" translate="yes" xml:space="preserve">
          <source>If the problem is not simply an imbalance of parentheses, a useful technique is to try</source>
          <target state="translated">Если проблема заключается не просто в дисбалансе скобок,то полезным методом является попробовать</target>
        </trans-unit>
        <trans-unit id="db8ed5464e72b8c476ff4ec16a10f0cd51524277" translate="yes" xml:space="preserve">
          <source>If the process has the &lt;code&gt;adjust-window-size-function&lt;/code&gt; property (see &lt;a href=&quot;process-information#Process-Information&quot;&gt;Process Information&lt;/a&gt;), its value overrides the global and buffer-local values of &lt;code&gt;window-adjust-process-window-size-function&lt;/code&gt;.</source>
          <target state="translated">Если у процесса есть свойство &lt;code&gt;adjust-window-size-function&lt;/code&gt; (см. &lt;a href=&quot;process-information#Process-Information&quot;&gt;Информация о процессе&lt;/a&gt; ), его значение переопределяет глобальные и локальные для буфера значения функции &lt;code&gt;window-adjust-process-window-size-function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="deb072058be162ae286bf0b45dcb8683abfed0a3" translate="yes" xml:space="preserve">
          <source>If the process object represents a network, serial, or pipe connection, its status changes to &lt;code&gt;closed&lt;/code&gt;; otherwise, it changes to &lt;code&gt;signal&lt;/code&gt;, unless the process already exited. See &lt;a href=&quot;process-information#Process-Information&quot;&gt;process-status&lt;/a&gt;.</source>
          <target state="translated">Если объект процесса представляет собой сетевое, последовательное соединение или соединение по трубопроводу, его статус меняется на &amp;laquo; &lt;code&gt;closed&lt;/code&gt; ; в противном случае он переходит в &lt;code&gt;signal&lt;/code&gt; , если процесс еще не завершен. См. &lt;a href=&quot;process-information#Process-Information&quot;&gt;Статус процесса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45961f038e011d9c685fb46da83bdbfb5b85f171" translate="yes" xml:space="preserve">
          <source>If the process&amp;rsquo;s buffer is displayed in a window, your Lisp program may wish to tell the process the dimensions of that window, so that the process could adapt its output to those dimensions, much as it adapts to the screen dimensions. The following functions allow communicating this kind of information to processes; however, not all systems support the underlying functionality, so it is best to provide fallbacks, e.g., via command-line arguments or environment variables.</source>
          <target state="translated">Если буфер процесса отображается в окне, ваша программа на Лиспе может пожелать сообщить процессу размеры этого окна, чтобы процесс мог адаптировать свой вывод к этим измерениям так же, как он адаптируется к размерам экрана. Следующие функции позволяют передавать такую ​​информацию процессам; однако не все системы поддерживают базовую функциональность, поэтому лучше всего предоставить резервные варианты, например, с помощью аргументов командной строки или переменных среды.</target>
        </trans-unit>
        <trans-unit id="8cd7170a08590da16f5decc34d06ab10bce6a4b0" translate="yes" xml:space="preserve">
          <source>If the property is &lt;code&gt;nil&lt;/code&gt;, the character&amp;rsquo;s syntax is determined from the current syntax table in the usual way.</source>
          <target state="translated">Если свойство равно &lt;code&gt;nil&lt;/code&gt; , синтаксис символа определяется из текущей синтаксической таблицы обычным способом.</target>
        </trans-unit>
        <trans-unit id="a8ff877c231716bcd85163a925d07773b1cd1a3a" translate="yes" xml:space="preserve">
          <source>If the property value is &lt;code&gt;t&lt;/code&gt;, the newline character has no effect on the displayed height of the line&amp;mdash;the visible contents alone determine the height. The &lt;code&gt;line-spacing&lt;/code&gt; property, described below, is also ignored in this case. This is useful for tiling small images (or image slices) without adding blank areas between the images.</source>
          <target state="translated">Если значение свойства равно &lt;code&gt;t&lt;/code&gt; , символ новой строки не влияет на отображаемую высоту строки - только видимое содержимое определяет высоту. Свойство &lt;code&gt;line-spacing&lt;/code&gt; , описанное ниже, в этом случае также игнорируется. Это полезно для мозаики небольших изображений (или фрагментов изображений) без добавления пустых областей между изображениями.</target>
        </trans-unit>
        <trans-unit id="9332afdec02fd82c547da6eae33cd85f1c4398ad" translate="yes" xml:space="preserve">
          <source>If the property value is a list of the form &lt;code&gt;(&lt;var&gt;height&lt;/var&gt;
&lt;var&gt;total&lt;/var&gt;)&lt;/code&gt;, that adds extra space &lt;em&gt;below&lt;/em&gt; the display line. First Emacs uses &lt;var&gt;height&lt;/var&gt; as a height spec to control extra space &lt;em&gt;above&lt;/em&gt; the line; then it adds enough space &lt;em&gt;below&lt;/em&gt; the line to bring the total line height up to &lt;var&gt;total&lt;/var&gt;. In this case, any value of &lt;code&gt;line-spacing&lt;/code&gt; property for the newline is ignored.</source>
          <target state="translated">Если значением свойства является список формы &lt;code&gt;(&lt;var&gt;height&lt;/var&gt; &lt;var&gt;total&lt;/var&gt;)&lt;/code&gt; , это добавляет дополнительное пространство &lt;em&gt;под&lt;/em&gt; строкой отображения. Сначала Emacs использует &lt;var&gt;height&lt;/var&gt; как спецификацию высоты для управления лишним пространством &lt;em&gt;над&lt;/em&gt; строкой; затем он добавляет достаточно места &lt;em&gt;под&lt;/em&gt; линией, чтобы довести общую высоту строки до &lt;var&gt;total&lt;/var&gt; . В этом случае любое значение свойства &lt;code&gt;line-spacing&lt;/code&gt; для новой строки игнорируется.</target>
        </trans-unit>
        <trans-unit id="d11de86d9df45640319ada9503f7c6f26a6b6d39" translate="yes" xml:space="preserve">
          <source>If the property value is a syntax table, that table is used instead of the current buffer&amp;rsquo;s syntax table to determine the syntax for the underlying text character.</source>
          <target state="translated">Если значение свойства является таблицей синтаксиса, эта таблица используется вместо таблицы синтаксиса текущего буфера для определения синтаксиса основного текстового символа.</target>
        </trans-unit>
        <trans-unit id="864eb49d276a3277ab58bccd89b45a4672ea219c" translate="yes" xml:space="preserve">
          <source>If the property value isn&amp;rsquo;t &lt;code&gt;nil&lt;/code&gt;, isn&amp;rsquo;t a string, and doesn&amp;rsquo;t refer to text in a file, then it is evaluated as a Lisp expression to obtain a string.</source>
          <target state="translated">Если значение свойства не равно &lt;code&gt;nil&lt;/code&gt; , не является строкой и не ссылается на текст в файле, то оно оценивается как выражение Лиспа для получения строки.</target>
        </trans-unit>
        <trans-unit id="38f97111526e39821c2939de43b1aba8774177fb" translate="yes" xml:space="preserve">
          <source>If the property value refers to a documentation string stored in the</source>
          <target state="translated">Если значение свойства ссылается на строку документации,сохраненную в параметре</target>
        </trans-unit>
        <trans-unit id="6ac707385120af438b707d6888f43c296b9d96b5" translate="yes" xml:space="preserve">
          <source>If the reference window is internal, a reused window must share with it the edge specified by the &lt;code&gt;direction&lt;/code&gt; entry. Hence if, for example, the reference window is the frame&amp;rsquo;s root window and the value of the &lt;code&gt;direction&lt;/code&gt; entry is &lt;code&gt;left&lt;/code&gt;, a reused window must be on the left of the frame. This means that the left edge coordinate of the chosen window and that of the reference window are the same.</source>
          <target state="translated">Если ссылочное окно внутреннее, многоразовое использование окно должно разделить с ним краем , указанный в &lt;code&gt;direction&lt;/code&gt; входа. Следовательно, если, например, опорным окном является корневое окно фрейма, а значение записи &lt;code&gt;direction&lt;/code&gt; &lt;code&gt;left&lt;/code&gt; , повторно используемое окно должно находиться слева от фрейма. Это означает, что координаты левого края выбранного окна и эталонного окна совпадают.</target>
        </trans-unit>
        <trans-unit id="9f5b2b71a3d3948411e4d70107c5df0df5f1c0c4" translate="yes" xml:space="preserve">
          <source>If the reference window is live, the edge the chosen window will share with it is always the opposite of the one specified by the &lt;code&gt;direction&lt;/code&gt; entry. For example, if the value of the &lt;code&gt;direction&lt;/code&gt; entry is &lt;code&gt;left&lt;/code&gt;, the chosen window&amp;rsquo;s right edge coordinate (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;) will equal the reference window&amp;rsquo;s left edge coordinate.</source>
          <target state="translated">Если ссылка окно живое, край выбранного окно будет делиться с ним всегда противоположен тем , указанным в &lt;code&gt;direction&lt;/code&gt; входа. Например, если значение &lt;code&gt;direction&lt;/code&gt; входа в &lt;code&gt;left&lt;/code&gt; , правом край выбранного окна координат (см &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Координаты и окно&lt;/a&gt; ) будет равен левый край окна задания координаты.</target>
        </trans-unit>
        <trans-unit id="de8210d397027ede8152086bfd375e22438b2494" translate="yes" xml:space="preserve">
          <source>If the region contains null bytes, the value is &lt;code&gt;no-conversion&lt;/code&gt;, even if the region contains text encoded in some coding system.</source>
          <target state="translated">Если область содержит нулевые байты, значение &lt;code&gt;no-conversion&lt;/code&gt; , даже если область содержит текст, закодированный в какой-либо системе кодирования.</target>
        </trans-unit>
        <trans-unit id="0d6ba2dd5762a7f4a7ba3464533b3e64af4857d6" translate="yes" xml:space="preserve">
          <source>If the region contains only</source>
          <target state="translated">Если регион содержит только</target>
        </trans-unit>
        <trans-unit id="da6ea29f28104a6e98fc44a5521cbaeb973455e6" translate="yes" xml:space="preserve">
          <source>If the region ends with a newline, that is ignored unless the optional third argument &lt;var&gt;count-final-newline&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если область заканчивается новой строкой, она игнорируется, если только необязательный третий аргумент &lt;var&gt;count-final-newline&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd0c3591cf826a762edbb01a1829efc13aec39b6" translate="yes" xml:space="preserve">
          <source>If the register contains a rectangle, then the rectangle is inserted with its upper left corner at point. This means that text is inserted in the current line and underneath it on successive lines.</source>
          <target state="translated">Если регистр содержит прямоугольник,то в него вставляется прямоугольник с верхним левым углом в точке.Это означает,что текст вставляется в текущую линию и под неё на последовательных линиях.</target>
        </trans-unit>
        <trans-unit id="5200a31714675a4baf5e8883a9477814cbe3c49a" translate="yes" xml:space="preserve">
          <source>If the register contains something other than saved text (a string) or a rectangle (a list), currently useless things happen. This may be changed in the future.</source>
          <target state="translated">Если регистр содержит нечто иное,чем сохраненный текст (строка)или прямоугольник (список),то в настоящее время происходят бесполезные вещи.Это может быть изменено в будущем.</target>
        </trans-unit>
        <trans-unit id="15587f2b6b239a89a7a50c6b82274c197ef4f9d8" translate="yes" xml:space="preserve">
          <source>If the ring is full, insertion removes the oldest element to make room for the new element.</source>
          <target state="translated">Если кольцо заполнено,вставка удаляет самый старый элемент,чтобы освободить место для нового элемента.</target>
        </trans-unit>
        <trans-unit id="07d396c6040d9ac9a81e1564994516bdd4c6f009" translate="yes" xml:space="preserve">
          <source>If the ring is full, this function removes the newest element to make room for the inserted element.</source>
          <target state="translated">Если кольцо заполнено,эта функция удаляет самый новый элемент,чтобы освободить место для вставляемого элемента.</target>
        </trans-unit>
        <trans-unit id="351123b37ff30f7d72eb53f1e662ced452ab9e5f" translate="yes" xml:space="preserve">
          <source>If the root window is live, &lt;var&gt;root&lt;/var&gt; is that window itself. Otherwise, &lt;var&gt;root&lt;/var&gt; is a list &lt;code&gt;(&lt;var&gt;dir&lt;/var&gt; &lt;var&gt;edges&lt;/var&gt; &lt;var&gt;w1&lt;/var&gt;
&lt;var&gt;w2&lt;/var&gt; ...)&lt;/code&gt; where &lt;var&gt;dir&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; for a horizontal combination and &lt;code&gt;t&lt;/code&gt; for a vertical combination, &lt;var&gt;edges&lt;/var&gt; gives the size and position of the combination, and the remaining elements are the child windows. Each child window may again be a window object (for a live window) or a list with the same format as above (for an internal window). The &lt;var&gt;edges&lt;/var&gt; element is a list &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;
&lt;var&gt;top&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; &lt;var&gt;bottom&lt;/var&gt;)&lt;/code&gt;, similar to the value returned by &lt;code&gt;window-edges&lt;/code&gt; (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;).</source>
          <target state="translated">Если корневое окно активно, &lt;var&gt;root&lt;/var&gt; является само это окно. В противном случае &lt;var&gt;root&lt;/var&gt; список &lt;code&gt;(&lt;var&gt;dir&lt;/var&gt; &lt;var&gt;edges&lt;/var&gt; &lt;var&gt;w1&lt;/var&gt; &lt;var&gt;w2&lt;/var&gt; ...)&lt;/code&gt; , где &lt;var&gt;dir&lt;/var&gt; является &lt;code&gt;nil&lt;/code&gt; для горизонтальной комбинации и &lt;code&gt;t&lt;/code&gt; для вертикальной комбинации, &lt;var&gt;edges&lt;/var&gt; дает размер и положение комбинации, а остальные элементы являются дочерними окнами. Каждое дочернее окно может снова быть объектом окна (для живого окна) или списком с тем же форматом, что и выше (для внутреннего окна). Элемент &lt;var&gt;edges&lt;/var&gt; - это список &lt;code&gt;(&lt;var&gt;left&lt;/var&gt; &lt;var&gt;top&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; &lt;var&gt;bottom&lt;/var&gt;)&lt;/code&gt; , аналогично значению, возвращаемому &lt;code&gt;window-edges&lt;/code&gt; (см. &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Координаты и окна&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="75f2d2615cdf15afd6e2956e0f406addfc292e3f" translate="yes" xml:space="preserve">
          <source>If the same device is already used by another Emacs terminal, this function signals an error. If &lt;var&gt;tty&lt;/var&gt; is not suspended, this function does nothing.</source>
          <target state="translated">Если то же устройство уже используется другим терминалом Emacs, эта функция сигнализирует об ошибке. Если &lt;var&gt;tty&lt;/var&gt; не приостановлен, эта функция ничего не делает.</target>
        </trans-unit>
        <trans-unit id="9f4664c6eaadcc29dcd11a7a83385d2fcd93ec2a" translate="yes" xml:space="preserve">
          <source>If the scan reaches the beginning or end of (the accessible part of) the buffer while in the middle of a parenthetical grouping, an error is signaled. If it reaches the beginning or end between groupings but before count is used up, &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">Если сканирование достигает начала или конца (доступной части) буфера, находясь в середине группировки в скобках, выдается сигнал об ошибке. Если он достигает начала или конца между группировками, но до того, как счетчик &lt;code&gt;nil&lt;/code&gt; , возвращается nil .</target>
        </trans-unit>
        <trans-unit id="4acd2aff831c33301fe4a64be957276117c7148c" translate="yes" xml:space="preserve">
          <source>If the scan reaches the beginning or end of the accessible part of the buffer before it has scanned over &lt;var&gt;count&lt;/var&gt; parenthetical groupings, the return value is &lt;code&gt;nil&lt;/code&gt; if the depth at that point is zero; if the depth is non-zero, a &lt;code&gt;scan-error&lt;/code&gt; error is signaled.</source>
          <target state="translated">Если достигает сканирования в начале или в конце доступной части буфера до его сканируют по &lt;var&gt;count&lt;/var&gt; вводные группировок, возвращаемое значение равно &lt;code&gt;nil&lt;/code&gt; , если глубина в этой точке равна нулю; если глубина не равна нулю, сигнализируется &lt;code&gt;scan-error&lt;/code&gt; ошибки сканирования .</target>
        </trans-unit>
        <trans-unit id="b72b3d1bc43c12b4a85856c7dd6958ece6c9afb4" translate="yes" xml:space="preserve">
          <source>If the selected window already displays the specified buffer, it continues to do so, but another window is nonetheless found to display it as well.</source>
          <target state="translated">Если в выбранном окне уже отображается указанный буфер,то он продолжает это делать,но,тем не менее,найдено другое окно для его отображения.</target>
        </trans-unit>
        <trans-unit id="dceae8e1e44f45ff9d0c4b64f5bf61c85f4575b9" translate="yes" xml:space="preserve">
          <source>If the selected window cannot be scrolled any further, this function signals an error. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если выбранное окно не может быть прокручено дальше, эта функция сигнализирует об ошибке. В противном случае возвращается &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e01943ee8ae40b424c8c87ce4dfa3f86b2e61d4c" translate="yes" xml:space="preserve">
          <source>If the server has a non-default filter, the connection process does not get a separate process buffer; otherwise, Emacs creates a new buffer for the purpose. The buffer name is the server&amp;rsquo;s buffer name or process name, concatenated with the client identification string.</source>
          <target state="translated">Если на сервере установлен фильтр, отличный от фильтра по умолчанию, процесс подключения не получает отдельный буфер процесса; в противном случае Emacs создает для этой цели новый буфер. Имя буфера - это имя буфера сервера или имя процесса, объединенное со строкой идентификации клиента.</target>
        </trans-unit>
        <trans-unit id="b444a41e96b7b5461f62ba6762f799de730d5fed" translate="yes" xml:space="preserve">
          <source>If the size of the runtime object passed to the module is smaller than what it expects, it means the module was compiled for an Emacs version newer (later) than the one which attempts to load it, i.e. the module might be incompatible with the Emacs binary.</source>
          <target state="translated">Если размер переданного модулю объекта времени выполнения меньше,чем он ожидал,это означает,что модуль был скомпилирован для Emacs версии более новой (более поздней),чем та,которая пытается его загрузить,т.е.модуль может быть несовместим с бинарным файлом Emacs.</target>
        </trans-unit>
        <trans-unit id="3125142d2b191df0f1c165cd14c13902b40256a6" translate="yes" xml:space="preserve">
          <source>If the specified buffer is already displayed in another window, in any frame on the current terminal, this switches to that window instead of creating a new frame. However, the selected window is never used for this.</source>
          <target state="translated">Если указанный буфер уже отображается в другом окне,в любом фрейме текущего терминала,то вместо создания нового фрейма он переключается на этот фрейм.Однако выбранное окно для этого никогда не используется.</target>
        </trans-unit>
        <trans-unit id="368eb52100a670c323089c06cb84ffa26ffa5f61" translate="yes" xml:space="preserve">
          <source>If the specified file name matches more than one handler, the one whose match starts last in the file name gets precedence. This rule is chosen so that handlers for jobs such as uncompression are handled first, before handlers for jobs such as remote file access.</source>
          <target state="translated">Если указанное имя файла совпадает более чем с одним обработчиком,то приоритет получает тот,чье совпадение начинается последним в имени файла.Это правило выбирается таким образом,что обработчики таких заданий,как распаковка,обрабатываются в первую очередь,до обработчиков таких заданий,как удаленный доступ к файлам.</target>
        </trans-unit>
        <trans-unit id="47338737b3726ee5de9d6fe222ce94ab18a8e014" translate="yes" xml:space="preserve">
          <source>If the specified portions of the two strings match, the value is &lt;code&gt;t&lt;/code&gt;. Otherwise, the value is an integer which indicates how many leading characters agree, and which string is less. Its absolute value is one plus the number of characters that agree at the beginning of the two strings. The sign is negative if &lt;var&gt;string1&lt;/var&gt; (or its specified portion) is less.</source>
          <target state="translated">Если указанные части двух строк совпадают, значение равно &lt;code&gt;t&lt;/code&gt; . В противном случае значение представляет собой целое число, которое указывает, сколько ведущих символов согласовано, а какая строка меньше. Его абсолютное значение равно единице плюс количество символов, совпадающих в начале двух строк. Знак отрицательный, если &lt;var&gt;string1&lt;/var&gt; (или ее заданная часть) меньше.</target>
        </trans-unit>
        <trans-unit id="b72a9bc23284b1b084d3b464c5edfa5fdb086238" translate="yes" xml:space="preserve">
          <source>If the specified text includes raw bytes (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;), &lt;code&gt;select-safe-coding-system&lt;/code&gt; suggests &lt;code&gt;raw-text&lt;/code&gt; for its encoding.</source>
          <target state="translated">Если указанный текст включает необработанные байты (см. &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Представления текста&lt;/a&gt; ), &lt;code&gt;select-safe-coding-system&lt;/code&gt; предлагает &lt;code&gt;raw-text&lt;/code&gt; для его кодировки.</target>
        </trans-unit>
        <trans-unit id="3744739d16eed63f1dd914249642ab3e23bd01ab" translate="yes" xml:space="preserve">
          <source>If the string &lt;var&gt;string&lt;/var&gt; does not contain control characters, you can do the same job in a more general way by creating (and then subsequently deleting) an overlay with a &lt;code&gt;before-string&lt;/code&gt; property. See &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;.</source>
          <target state="translated">Если строковая &lt;var&gt;string&lt;/var&gt; не содержит управляющих символов, вы можете выполнить ту же работу более общим способом, создав (а затем удалив) наложение со свойством &lt;code&gt;before-string&lt;/code&gt; . См. &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Свойства наложения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d944f5ccc1c2dcc8be92dff45d1a38a5f4016504" translate="yes" xml:space="preserve">
          <source>If the string or vector &lt;var&gt;key&lt;/var&gt; is not a valid key sequence according to the prefix keys specified in &lt;var&gt;keymap&lt;/var&gt;, it must be too long and have extra events at the end that do not fit into a single key sequence. Then the value is a number, the number of events at the front of &lt;var&gt;key&lt;/var&gt; that compose a complete key.</source>
          <target state="translated">Если строковый или векторный &lt;var&gt;key&lt;/var&gt; не является допустимой последовательностью ключей в соответствии с префиксными ключами, указанными в &lt;var&gt;keymap&lt;/var&gt; ключей , она должна быть слишком длинной и иметь в конце дополнительные события, которые не помещаются в одну последовательность ключей. Тогда значение - это число, количество событий перед &lt;var&gt;key&lt;/var&gt; , составляющих полный ключ.</target>
        </trans-unit>
        <trans-unit id="1e63534bbb115f7e096f3e5fe79eec8a69b6b872" translate="yes" xml:space="preserve">
          <source>If the subprocess writes to its standard error stream, by default the error output is also passed to the process filter function. If Emacs uses a pseudo-TTY (pty) for communication with the subprocess, then it is impossible to separate the standard output and standard error streams of the subprocess, because a pseudo-TTY has only one output channel. In that case, if you want to keep the output to those streams separate, you should redirect one of them to a file&amp;mdash;for example, by using an appropriate shell command via &lt;code&gt;start-process-shell-command&lt;/code&gt; or a similar function.</source>
          <target state="translated">Если подпроцесс записывает в свой стандартный поток ошибок, по умолчанию вывод ошибок также передается в функцию фильтрации процесса. Если Emacs использует псевдо-TTY (pty) для связи с подпроцессом, то невозможно разделить потоки стандартного вывода и стандартные потоки ошибок подпроцесса, потому что псевдо-TTY имеет только один канал вывода. В этом случае, если вы хотите сохранить вывод в эти потоки отдельно, вы должны перенаправить один из них в файл - например, используя соответствующую команду оболочки через &lt;code&gt;start-process-shell-command&lt;/code&gt; или аналогичную функцию.</target>
        </trans-unit>
        <trans-unit id="18702f98124649c8759bfe76e277da2cdd4539dd" translate="yes" xml:space="preserve">
          <source>If the symbol has an Edebug specification, this &lt;em&gt;indirect specification&lt;/em&gt; should be either a list specification that is used in place of the symbol, or a function that is called to process the arguments. The specification may be defined with &lt;code&gt;def-edebug-spec&lt;/code&gt; just as for macros. See the &lt;code&gt;defun&lt;/code&gt; example.</source>
          <target state="translated">Если у символа есть спецификация Edebug, эта &lt;em&gt;косвенная спецификация&lt;/em&gt; должна быть либо спецификацией списка, которая используется вместо символа, либо функцией, которая вызывается для обработки аргументов. Спецификация может быть определена с помощью &lt;code&gt;def-edebug-spec&lt;/code&gt; так же, как для макросов. См. Пример &lt;code&gt;defun&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="374fdf8e2f867fb559b2ac4c3da7aad809207ef4" translate="yes" xml:space="preserve">
          <source>If the system can&amp;rsquo;t provide the requested information, or if &lt;var&gt;item&lt;/var&gt; is not one of those symbols, the value is &lt;code&gt;nil&lt;/code&gt;. All strings in the return value are decoded using &lt;code&gt;locale-coding-system&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Locales.html#Locales&quot;&gt;Locales&lt;/a&gt; in</source>
          <target state="translated">Если система не может предоставить запрошенную информацию или &lt;var&gt;item&lt;/var&gt; не является одним из этих символов, значение равно &lt;code&gt;nil&lt;/code&gt; . Все строки в возвращаемом значении декодируются с использованием &lt;code&gt;locale-coding-system&lt;/code&gt; . См. &lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Locales.html#Locales&quot;&gt;Регионы&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="058904110d90f3382409450e37c5d8142365664c" translate="yes" xml:space="preserve">
          <source>If the system doesn&amp;rsquo;t provide a way to determine the processor run time, &lt;code&gt;get-internal-run-time&lt;/code&gt; returns the same time as &lt;code&gt;current-time&lt;/code&gt;.</source>
          <target state="translated">Если система не предоставляет способ определить время выполнения процессора, &lt;code&gt;get-internal-run-time&lt;/code&gt; возвращает то же время, что и &lt;code&gt;current-time&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="434b5b0af97ab8d8dd5e8759dd47712f688d17c6" translate="yes" xml:space="preserve">
          <source>If the target of a symbolic links has remote file name syntax, &lt;code&gt;file-truename&lt;/code&gt; returns it quoted. See &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;Functions that Expand Filenames&lt;/a&gt;.</source>
          <target state="translated">Если цель символьных ссылок имеет синтаксис удаленного имени &lt;code&gt;file-truename&lt;/code&gt; , file-truename возвращает его в кавычках. См. &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;Функции, расширяющие имена файлов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c00d5af3b2ed2919c1b3c4daeaaeb19caff9b66" translate="yes" xml:space="preserve">
          <source>If the text area of &lt;var&gt;frame&lt;/var&gt; measured in pixels is not a multiple of its default font size, the values returned by these functions are rounded down to the number of characters of the default font that fully fit into the text area.</source>
          <target state="translated">Если размер текстовой области &lt;var&gt;frame&lt;/var&gt; в пикселях не кратен размеру шрифта по умолчанию, значения, возвращаемые этими функциями, округляются в меньшую сторону до количества символов шрифта по умолчанию, которые полностью помещаются в текстовую область.</target>
        </trans-unit>
        <trans-unit id="8786be1522ac71c913570f53dec91d3853821ad2" translate="yes" xml:space="preserve">
          <source>If the text being copied has any text properties, these are copied into the string along with the characters they belong to. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;. However, overlays (see &lt;a href=&quot;overlays#Overlays&quot;&gt;Overlays&lt;/a&gt;) in the buffer and their properties are ignored, not copied.</source>
          <target state="translated">Если копируемый текст имеет какие-либо текстовые свойства, они копируются в строку вместе с символами, которым они принадлежат. См. &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Свойства текста&lt;/a&gt; . Однако оверлеи (см. &lt;a href=&quot;overlays#Overlays&quot;&gt;Оверлеи&lt;/a&gt; ) в буфере и их свойства игнорируются, а не копируются.</target>
        </trans-unit>
        <trans-unit id="7e0e1d506376880fbedc83b940ca88f8dbddc189" translate="yes" xml:space="preserve">
          <source>If the text comes from an overlay string via &lt;code&gt;before-string&lt;/code&gt; or &lt;code&gt;after-string&lt;/code&gt; properties (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;), or from a display string (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), and the string doesn&amp;rsquo;t contain a &lt;code&gt;face&lt;/code&gt; or &lt;code&gt;mouse-face&lt;/code&gt; property, or these properties leave some face attributes undefined, but the buffer text affected by the overlay/display property does define a face or those attributes, Emacs applies the face attributes of the &amp;ldquo;underlying&amp;rdquo; buffer text. Note that this is so even if the overlay or display string is displayed in the display margins (see &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;Display Margins&lt;/a&gt;).</source>
          <target state="translated">Если текст поступает из строки наложения через свойства &lt;code&gt;before-string&lt;/code&gt; или &lt;code&gt;after-string&lt;/code&gt; (см. &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Свойства наложения&lt;/a&gt; ) или из отображаемой строки (см. &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Другие характеристики отображения&lt;/a&gt; ), а строка не содержит свойства &lt;code&gt;face&lt;/code&gt; или лица &lt;code&gt;mouse-face&lt;/code&gt; , или эти свойства оставляют некоторые атрибуты лица неопределенными, но текст буфера, на который влияет свойство overlay / display, действительно определяет лицо или эти атрибуты, Emacs применяет атрибуты лица &amp;laquo;нижележащего&amp;raquo; текста буфера. Обратите внимание, что это так, даже если оверлей или строка отображения отображаются на полях отображения (см. &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;Поля отображения&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a97f7657ea771f686cebbc0832dcd8543f3efd08" translate="yes" xml:space="preserve">
          <source>If the text consists of a special glyph, the glyph can specify a particular face. See &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;.</source>
          <target state="translated">Если текст состоит из специального глифа, этот глиф может указывать на конкретное лицо. См. &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Глифы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ed1c5d19c45070f011fd3ad93563e85d39f4884" translate="yes" xml:space="preserve">
          <source>If the text contains a &lt;code&gt;face&lt;/code&gt; or &lt;code&gt;mouse-face&lt;/code&gt; property, Emacs applies the specified faces and face attributes. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;. (This is how Font Lock mode faces are applied. See &lt;a href=&quot;font-lock-mode#Font-Lock-Mode&quot;&gt;Font Lock Mode&lt;/a&gt;.)</source>
          <target state="translated">Если текст содержит свойство &lt;code&gt;face&lt;/code&gt; или лица &lt;code&gt;mouse-face&lt;/code&gt; , Emacs применяет указанные лица и атрибуты лица. См. &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Особые свойства&lt;/a&gt; . (Вот как применяются &lt;a href=&quot;font-lock-mode#Font-Lock-Mode&quot;&gt;начертания в режиме Font Lock&lt;/a&gt; . См. Раздел Font Lock Mode .)</target>
        </trans-unit>
        <trans-unit id="188480b76f860986894ec660734475f5481a24b8" translate="yes" xml:space="preserve">
          <source>If the text contains no multibyte characters, the function returns the list &lt;code&gt;(undecided)&lt;/code&gt;.</source>
          <target state="translated">Если текст не содержит многобайтовых символов, функция возвращает список &lt;code&gt;(undecided)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c67ef61d0e798bd2ee21b733b0d87a814c416b58" translate="yes" xml:space="preserve">
          <source>If the text is to be read back into Lisp, then you should print with quoting characters to avoid ambiguity. Likewise, if the purpose is to describe a Lisp object clearly for a Lisp programmer. However, if the purpose of the output is to look nice for humans, then it is usually better to print without quoting.</source>
          <target state="translated">Если текст должен быть прочитан обратно в Lisp,то во избежание двусмысленности следует печатать с кавычками.Точно так же,если целью является четкое описание объекта на языке Lisp для программиста,работающего на этом языке.Однако,если цель вывода-хорошо выглядеть для человека,то,как правило,лучше печатать без кавычек.</target>
        </trans-unit>
        <trans-unit id="a28c0597326f1c340e9d260f3f2992cc34aaeb88" translate="yes" xml:space="preserve">
          <source>If the text lies within an active region, Emacs highlights it using the &lt;code&gt;region&lt;/code&gt; face. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Standard-Faces.html#Standard-Faces&quot;&gt;Standard Faces&lt;/a&gt; in</source>
          <target state="translated">Если текст находится внутри активной области, Emacs выделяет его с помощью грани &lt;code&gt;region&lt;/code&gt; . См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Standard-Faces.html#Standard-Faces&quot;&gt;Стандартные грани&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="3152ab7e2009ef4b0ce7a2a65fc608a7c95eccd9" translate="yes" xml:space="preserve">
          <source>If the text lies within an overlay with a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;face&lt;/code&gt; property, Emacs applies the face(s) specified by that property. If the overlay has a &lt;code&gt;mouse-face&lt;/code&gt; property and the mouse is near enough to the overlay, Emacs applies the face or face attributes specified by the &lt;code&gt;mouse-face&lt;/code&gt; property instead. See &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;.</source>
          <target state="translated">Если текст находится внутри оверлея с отличным от &lt;code&gt;nil&lt;/code&gt; свойством &lt;code&gt;face&lt;/code&gt; , Emacs применяет грань (и), заданную этим свойством. Если наложение имеет свойство &lt;code&gt;mouse-face&lt;/code&gt; и указатель мыши находится достаточно близко к наложению, Emacs вместо этого применяет атрибуты лица или лица, указанные в свойстве &lt;code&gt;mouse-face&lt;/code&gt; . См. &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Свойства наложения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8ea720c5ffd43b26e4511d204c3c42a1ebbf0ac" translate="yes" xml:space="preserve">
          <source>If the text lies within the mode line of the selected window, Emacs applies the &lt;code&gt;mode-line&lt;/code&gt; face. For the mode line of a non-selected window, Emacs applies the &lt;code&gt;mode-line-inactive&lt;/code&gt; face. For a header line, Emacs applies the &lt;code&gt;header-line&lt;/code&gt; face. For a tab line, Emacs applies the &lt;code&gt;tab-line&lt;/code&gt; face.</source>
          <target state="translated">Если текст находится в строке режима выбранного окна, Emacs применяет грань &lt;code&gt;mode-line&lt;/code&gt; . Для строки режима невыбранного окна Emacs применяет лицо &lt;code&gt;mode-line-inactive&lt;/code&gt; . Для строки заголовка Emacs применяет лицо &lt;code&gt;header-line&lt;/code&gt; . Для строки табуляции Emacs применяет лицевую сторону &lt;code&gt;tab-line&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f14408a8adf68c964ab66da93531e1a6dcf2ca7d" translate="yes" xml:space="preserve">
          <source>If the text property can&amp;rsquo;t be found, the function returns &lt;code&gt;nil&lt;/code&gt;. If it&amp;rsquo;s found, point is placed at the end of the region that has this text property match, and a &lt;code&gt;prop-match&lt;/code&gt; structure is returned.</source>
          <target state="translated">Если свойство text не может быть найдено, функция возвращает &lt;code&gt;nil&lt;/code&gt; . Если он найден, точка помещаются в конце области , которая имеет этот текст спичку свойства и &lt;code&gt;prop-match&lt;/code&gt; структура возвращается.</target>
        </trans-unit>
        <trans-unit id="cf486874c81d1fe52f4ef78646fb3b9ced6f1ff2" translate="yes" xml:space="preserve">
          <source>If the third argument &lt;var&gt;target-depth&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, parsing stops if the depth in parentheses becomes equal to &lt;var&gt;target-depth&lt;/var&gt;. The depth starts at 0, or at whatever is given in &lt;var&gt;state&lt;/var&gt;.</source>
          <target state="translated">Если третий аргумент &lt;var&gt;target-depth&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , синтаксический анализ останавливается, если глубина в круглых скобках становится равной &lt;var&gt;target-depth&lt;/var&gt; . Глубина начинается с 0 или с любого значения, указанного в &lt;var&gt;state&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="9d5ad229b8c2601e6354d21fe0f2c4a561753fd7" translate="yes" xml:space="preserve">
          <source>If the third element of the &lt;code&gt;quit-restore&lt;/code&gt; parameter is a list of buffer, window start (see &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;), and point (see &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;), and that buffer is still live, the buffer will be displayed, and start and point set accordingly. If, in addition, &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer was temporarily resized, this function will also try to restore the original height of &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">Если третий элемент параметра &lt;code&gt;quit-restore&lt;/code&gt; представляет собой список буфера, начало окна (см. &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Начало и конец окна&lt;/a&gt; ) и точка (см. &lt;a href=&quot;window-point#Window-Point&quot;&gt;Точка окна&lt;/a&gt; ), и этот буфер все еще активен, буфер будет отображаться, и начнется и точка устанавливается соответственно. Если, кроме того, размер буфера &lt;var&gt;window&lt;/var&gt; был временно изменен, эта функция также попытается восстановить исходную высоту &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="08c08de732ef1903e040dc8cf4dec2533c0a2c93" translate="yes" xml:space="preserve">
          <source>If the thread exits, all the processes locked to it are unlocked.</source>
          <target state="translated">При выходе из потока все процессы,заблокированные на нем,разблокируются.</target>
        </trans-unit>
        <trans-unit id="9b71f206c2504ba9835d9d1903e089a08251f745" translate="yes" xml:space="preserve">
          <source>If the two objects are not &lt;code&gt;equal&lt;/code&gt;, the values returned by &lt;code&gt;sxhash-equal&lt;/code&gt; are usually different, but not always; once in a rare while, by luck, you will encounter two distinct-looking objects that give the same result from &lt;code&gt;sxhash-equal&lt;/code&gt;.</source>
          <target state="translated">Если два объекта не &lt;code&gt;equal&lt;/code&gt; , значения, возвращаемые &lt;code&gt;sxhash-equal&lt;/code&gt; , обычно различны, но не всегда; изредка, по счастливой случайности, вы встретите два совершенно разных объекта, которые дают одинаковый результат при использовании &lt;code&gt;sxhash-equal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fbd3cda5f7477844c9dcdbfc32e84643051e910" translate="yes" xml:space="preserve">
          <source>If the user chooses the first alternative in the choice, then the overall list has two elements and the second element is &lt;code&gt;t&lt;/code&gt;. If the user chooses the second alternative, then the overall list has three elements and the second and third must be strings.</source>
          <target state="translated">Если пользователь выбирает первую альтернативу в выборе, то общий список состоит из двух элементов, а второй элемент - &lt;code&gt;t&lt;/code&gt; . Если пользователь выбирает вторую альтернативу, то общий список состоит из трех элементов, а второй и третий должны быть строками.</target>
        </trans-unit>
        <trans-unit id="9fd4d775c63b1a97e06fd3e09efa71f518031662" translate="yes" xml:space="preserve">
          <source>If the user first types</source>
          <target state="translated">Если первый тип пользователя</target>
        </trans-unit>
        <trans-unit id="ed418a913476cd3524c85ba5a1824a2ceeeef0aa" translate="yes" xml:space="preserve">
          <source>If the user gets rid of the dialog box without making a valid choice, for instance using the window manager, then this produces a quit and &lt;code&gt;x-popup-dialog&lt;/code&gt; does not return.</source>
          <target state="translated">Если пользователь избавляется от диалогового окна, не сделав правильного выбора, например, с помощью диспетчера окон, то это вызывает выход, и &lt;code&gt;x-popup-dialog&lt;/code&gt; не возвращается.</target>
        </trans-unit>
        <trans-unit id="1c4d7a33c83c3a3d552119c04d724d503fdfe072" translate="yes" xml:space="preserve">
          <source>If the user gets rid of the menu without making a valid choice, for instance by clicking the mouse away from a valid choice or by typing</source>
          <target state="translated">Если пользователь избавляется от меню,не сделав правильного выбора,например,щелкнув мышью в сторону от правильного выбора или напечатав</target>
        </trans-unit>
        <trans-unit id="ea4480620e10d170e62b5dd356b4e58bbdf1b518" translate="yes" xml:space="preserve">
          <source>If the user presses and releases the left mouse button over the same location, that generates a sequence of events like this:</source>
          <target state="translated">Если пользователь нажимает и отпускает левую кнопку мыши над тем же самым местом,это создает последовательность событий,подобную этой:</target>
        </trans-unit>
        <trans-unit id="219b7bca739acce06d6952536ce4a19ab3917e6a" translate="yes" xml:space="preserve">
          <source>If the user then types</source>
          <target state="translated">Если пользователь,то введите</target>
        </trans-unit>
        <trans-unit id="3ce549524a0375112651ee6807c161b6db6cdf00" translate="yes" xml:space="preserve">
          <source>If the user types</source>
          <target state="translated">Если пользователь вводит</target>
        </trans-unit>
        <trans-unit id="a384ff5a54f414aff1846ff0c45074f478370490" translate="yes" xml:space="preserve">
          <source>If the user wants to completely control the look of the prompt, the most convenient way to do that is to specify the &lt;code&gt;default&lt;/code&gt; face at the end of all face lists. For instance:</source>
          <target state="translated">Если пользователь хочет полностью контролировать вид приглашения, наиболее удобный способ сделать это - указать лицо по &lt;code&gt;default&lt;/code&gt; в конце всех списков лиц. Например:</target>
        </trans-unit>
        <trans-unit id="f0afc2a17ad86f3382250b68dcf2c4ea65c5e9a6" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;default&lt;/code&gt;, only print &lt;code&gt;charset&lt;/code&gt; text properties if there is an &amp;ldquo;unexpected&amp;rdquo; &lt;code&gt;charset&lt;/code&gt; property. For ascii characters, all charsets are considered &amp;ldquo;expected&amp;rdquo;. Otherwise, the expected &lt;code&gt;charset&lt;/code&gt; property of a character is given by &lt;code&gt;char-charset&lt;/code&gt;.</source>
          <target state="translated">Если значение по &lt;code&gt;default&lt;/code&gt; , свойства текста &lt;code&gt;charset&lt;/code&gt; печатаются только при наличии &amp;laquo;неожиданного&amp;raquo; свойства &lt;code&gt;charset&lt;/code&gt; . Для символов ascii все кодировки считаются &amp;laquo;ожидаемыми&amp;raquo;. В противном случае ожидаемое свойство &lt;code&gt;charset&lt;/code&gt; символа задается &lt;code&gt;char-charset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ab3879e5145736dfbed3b20968831ce59dc17fb" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;grow-only&lt;/code&gt;, the tool bar expands automatically, but does not contract automatically. To contract the tool bar, the user has to redraw the frame by entering</source>
          <target state="translated">Если значение &lt;code&gt;grow-only&lt;/code&gt; , панель инструментов расширяется автоматически, но не сужается автоматически. Чтобы свернуть панель инструментов, пользователь должен перерисовать рамку, введя</target>
        </trans-unit>
        <trans-unit id="7cb68140441efc447477892703745ce3bcdf30fe" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;height&lt;/code&gt;, then only the window&amp;rsquo;s height is fixed; if the value is &lt;code&gt;width&lt;/code&gt;, then only the window&amp;rsquo;s width is fixed. Any other non-&lt;code&gt;nil&lt;/code&gt; value fixes both the width and the height.</source>
          <target state="translated">Если значение равно &lt;code&gt;height&lt;/code&gt; , то фиксируется только высота окна; если значение равно &lt;code&gt;width&lt;/code&gt; , то фиксируется только ширина окна. Любое другое значение, отличное от &lt;code&gt;nil&lt;/code&gt; , фиксирует как ширину, так и высоту.</target>
        </trans-unit>
        <trans-unit id="5bdc6e42a3b35b4cc7c1e6809e7ebf7a4ddd5c36" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt; (the default), then there is no limit.</source>
          <target state="translated">Если значение равно &lt;code&gt;nil&lt;/code&gt; (по умолчанию), то ограничения нет.</target>
        </trans-unit>
        <trans-unit id="c15eae920adf8ce0d2fec498eb508af66805c17a" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;charset&lt;/code&gt; text properties are never printed. If &lt;code&gt;t&lt;/code&gt;, they are always printed.</source>
          <target state="translated">Если значение равно &lt;code&gt;nil&lt;/code&gt; , свойства текста &lt;code&gt;charset&lt;/code&gt; никогда не печатаются. Если &lt;code&gt;t&lt;/code&gt; , они всегда печатаются.</target>
        </trans-unit>
        <trans-unit id="92b326569ebf15a4b7fb245bb0fdceba7a93dec6" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, Emacs does not remove images from the cache except when you explicitly clear it. This mode can be useful for debugging.</source>
          <target state="translated">Если значение равно &lt;code&gt;nil&lt;/code&gt; , Emacs не удаляет изображения из кеша, кроме случаев, когда вы явно очищаете его. Этот режим может быть полезен для отладки.</target>
        </trans-unit>
        <trans-unit id="39a8877903cd7fa29b7cceab7cd75abec4a154c6" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, as it is by default, then the function &lt;code&gt;sentence-end&lt;/code&gt; constructs the regexp. That is why you should always call the function &lt;code&gt;sentence-end&lt;/code&gt; to obtain the regexp to be used to recognize the end of a sentence.</source>
          <target state="translated">Если значение равно &lt;code&gt;nil&lt;/code&gt; , как оно есть по умолчанию, то функция &amp;laquo; &lt;code&gt;sentence-end&lt;/code&gt; предложения&amp;raquo; создает регулярное выражение. Вот почему вы всегда должны вызывать функцию &lt;code&gt;sentence-end&lt;/code&gt; чтобы получить регулярное выражение, которое будет использоваться для распознавания конца предложения.</target>
        </trans-unit>
        <trans-unit id="468729e3a9700545eff7256bd812b75139abbdf7" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, that means use no stipple pattern.</source>
          <target state="translated">Если значение равно &lt;code&gt;nil&lt;/code&gt; , это означает, что штриховой узор не используется.</target>
        </trans-unit>
        <trans-unit id="36597fbd18928466d8e834377bf073ed7a691958" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, there is no short cut, and &lt;code&gt;indent-region&lt;/code&gt; actually works line by line.</source>
          <target state="translated">Если значение равно &lt;code&gt;nil&lt;/code&gt; , сокращенного пути нет, и &lt;code&gt;indent-region&lt;/code&gt; фактически работает построчно.</target>
        </trans-unit>
        <trans-unit id="700a7b58dc10a099d378778b3c8f172734efe6b0" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;no&lt;/code&gt;, then if the completion table fails to match the text at point, &lt;code&gt;completion-at-point&lt;/code&gt; moves on to the next function in &lt;code&gt;completion-at-point-functions&lt;/code&gt; instead of reporting a completion failure.</source>
          <target state="translated">Если значение равно &amp;laquo; &lt;code&gt;no&lt;/code&gt; , то, если таблица завершения не соответствует тексту в точке, &lt;code&gt;completion-at-point&lt;/code&gt; переходит к следующей функции в функциях &lt;code&gt;completion-at-point-functions&lt;/code&gt; вместо сообщения об ошибке завершения.</target>
        </trans-unit>
        <trans-unit id="4e41af7941c3971292e0e85b00bbeefc61e9670e" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;special&lt;/code&gt;, the named major mode is special. See &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;.</source>
          <target state="translated">Если значение является &lt;code&gt;special&lt;/code&gt; , указанный основной режим является специальным. См. &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Соглашения об основном режиме&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f672a47781029fb09f39975884574172889a7af7" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;t&lt;/code&gt;, these commands instead move point to the beginning or end of the buffer (depending on scrolling direction); only if point is already on that position do they signal an error.</source>
          <target state="translated">Если значение равно &lt;code&gt;t&lt;/code&gt; , эти команды вместо этого перемещают точку в начало или конец буфера (в зависимости от направления прокрутки); только если точка уже находится в этой позиции, они сигнализируют об ошибке.</target>
        </trans-unit>
        <trans-unit id="29d957785b808e7c19d9391f0a4be2c11d43d626" translate="yes" xml:space="preserve">
          <source>If the value is a function, &lt;code&gt;current-kill&lt;/code&gt; calls it to get the most recent kill. If the function returns a non-&lt;code&gt;nil&lt;/code&gt; value, then that value is used as the most recent kill. If it returns &lt;code&gt;nil&lt;/code&gt;, then the front of the kill ring is used.</source>
          <target state="translated">Если значение является функцией, &lt;code&gt;current-kill&lt;/code&gt; вызывает ее, чтобы получить последнее уничтожение. Если функция возвращает &lt;code&gt;nil&lt;/code&gt; значение, тогда это значение используется как последнее уничтожение. Если он возвращает &lt;code&gt;nil&lt;/code&gt; , то используется передняя часть списка уничтожений.</target>
        </trans-unit>
        <trans-unit id="2efa664ce25bc68241838829062a86b1d08a26ca" translate="yes" xml:space="preserve">
          <source>If the value is a function, &lt;code&gt;kill-new&lt;/code&gt; and &lt;code&gt;kill-append&lt;/code&gt; call it with the new first element of the kill ring as the argument.</source>
          <target state="translated">Если значение является функцией, &lt;code&gt;kill-new&lt;/code&gt; и &lt;code&gt;kill-append&lt;/code&gt; вызывают ее с новым первым элементом списка уничтожений в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="5e905120e99d2f357f206cb76e224ddcd21994e5" translate="yes" xml:space="preserve">
          <source>If the value is a list, each list element corresponds to one entry, and should have the form &lt;code&gt;(&lt;var&gt;id&lt;/var&gt;&amp;nbsp;&lt;var&gt;contents&lt;/var&gt;)&lt;/code&gt;, where</source>
          <target state="translated">Если значением является список, каждый элемент списка соответствует одной записи и должен иметь форму &lt;code&gt;(&lt;var&gt;id&lt;/var&gt;&amp;nbsp;&lt;var&gt;contents&lt;/var&gt;)&lt;/code&gt; , где</target>
        </trans-unit>
        <trans-unit id="fb730abde36feb6570e0edc644f20655f48ac985" translate="yes" xml:space="preserve">
          <source>If the value is a list, only the listed windows are saved and restored.</source>
          <target state="translated">Если значение является списком,то сохраняются и восстанавливаются только перечисленные окна.</target>
        </trans-unit>
        <trans-unit id="af878dd003d2bc2e6b758e24fbfb3309bd97c17e" translate="yes" xml:space="preserve">
          <source>If the value is an integer, it directly specifies the maximum image height and width, measured in pixels. If it is floating point, it specifies the maximum image height and width as a ratio to the frame height and width. If the value is non-numeric, there is no explicit limit on the size of images.</source>
          <target state="translated">Если значение целое,то оно непосредственно задает максимальную высоту и ширину изображения,измеряемую в пикселях.Если это плавающая точка,то она задаёт максимальную высоту и ширину изображения в соотношении с высотой и шириной кадра.Если значение не числовое,то явного ограничения на размер изображения нет.</target>
        </trans-unit>
        <trans-unit id="33f437b405d89bf668073b5c7ce081a5a2c02dcd" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt; and not &lt;code&gt;t&lt;/code&gt;, Emacs adjusts point to keep the cursor at the same vertical position, even if the scrolling command didn&amp;rsquo;t move point off-window.</source>
          <target state="translated">Если значение не &lt;code&gt;nil&lt;/code&gt; , а не &lt;code&gt;t&lt;/code&gt; , Emacs корректирует точку, чтобы курсор оставался в том же вертикальном положении, даже если команда прокрутки не сместила точку за пределы окна.</target>
        </trans-unit>
        <trans-unit id="2851cccc0e63a3f52ab08d7a9cb6c3e6a674388d" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;display-buffer&lt;/code&gt; does not necessarily have to display the buffer and the caller is prepared to accept that. This entry is not intended for user customizations, since there is no guarantee that an arbitrary caller of &lt;code&gt;display-buffer&lt;/code&gt; will be able to handle the case that no window will display the buffer. &lt;code&gt;display-buffer-no-window&lt;/code&gt; is the only action function that cares about this entry.</source>
          <target state="translated">Если значение не равно &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;display-buffer&lt;/code&gt; не обязательно должен отображать буфер, и вызывающая сторона готова принять это. Эта запись не предназначена для пользовательских настроек, поскольку нет гарантии, что произвольный вызывающий &lt;code&gt;display-buffer&lt;/code&gt; сможет обработать случай, когда никакое окно не будет отображать буфер. &lt;code&gt;display-buffer-no-window&lt;/code&gt; - единственная функция действия, которая заботится об этой записи.</target>
        </trans-unit>
        <trans-unit id="477bb7946100fa9a868977f2ca1fc8c26a6c6644" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function is considered generally safe for evaluation. See &lt;a href=&quot;function-safety#Function-Safety&quot;&gt;Function Safety&lt;/a&gt;.</source>
          <target state="translated">Если значение не равно &lt;code&gt;nil&lt;/code&gt; , указанная функция считается безопасной для оценки. См. &lt;a href=&quot;function-safety#Function-Safety&quot;&gt;Функциональная безопасность&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e16aff5bcb64ef95cfca3536ac2753af829bb27a" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function is considered to be pure (see &lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;What Is a Function&lt;/a&gt;). Calls with constant arguments can be evaluated at compile time. This may shift run time errors to compile time. Not to be confused with pure storage (see &lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;Pure Storage&lt;/a&gt;).</source>
          <target state="translated">Если значение не равно &lt;code&gt;nil&lt;/code&gt; , названная функция считается чистой (см. &lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;Что такое функция&lt;/a&gt; ). Вызовы с постоянными аргументами можно оценивать во время компиляции. Это может сместить ошибки времени выполнения во время компиляции. Не путать с чистым хранилищем (см. &lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;Чистое хранилище&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="259729fa4406a0a6d0d70913ff740b5affcc6f9b" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function is disabled as a command. See &lt;a href=&quot;disabling-commands#Disabling-Commands&quot;&gt;Disabling Commands&lt;/a&gt;.</source>
          <target state="translated">Если значение не равно &lt;code&gt;nil&lt;/code&gt; , указанная функция отключается как команда. См. &lt;a href=&quot;disabling-commands#Disabling-Commands&quot;&gt;Отключение команд&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7cb441f9be2c8cb05d790d297512b2da9a0fdd51" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function is safe to call in file-local evaluation forms. See &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;.</source>
          <target state="translated">Если значение не равно &lt;code&gt;nil&lt;/code&gt; , указанную функцию можно безопасно вызывать в формах оценки локального файла. См. Раздел &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;Локальные переменные файла&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7090499177c1d5aa1c6ffaf8fc256cc9286d33ab" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function should not be deleted from the local value of a hook variable when changing major modes. See &lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;Setting Hooks&lt;/a&gt;.</source>
          <target state="translated">Если значение не равно &lt;code&gt;nil&lt;/code&gt; , указанная функция не должна удаляться из локального значения переменной-ловушки при изменении основных режимов. См. &lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;Настройка хуков&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7bcd63797aa231c2fc8170dd790d6c1274593c68" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named variable is a buffer-local variable whose value should not be reset when changing major modes. See &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creating Buffer-Local&lt;/a&gt;.</source>
          <target state="translated">Если значение не равно &lt;code&gt;nil&lt;/code&gt; , указанная переменная является локальной переменной буфера, значение которой не должно сбрасываться при изменении основных режимов. См. &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Создание Buffer-Local&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23ce86d21a94c261ce33a6155e01509d55aa1608" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named variable is considered risky as a file-local variable. See &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;.</source>
          <target state="translated">Если значение не равно &lt;code&gt;nil&lt;/code&gt; , указанная переменная считается опасной как локальная переменная файла. См. Раздел &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;Локальные переменные файла&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5e9f0af4d30295bb81b9dc7f9a19baa56bc6dd78" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, then comments are treated as whitespace by the functions in this section and by &lt;code&gt;forward-sexp&lt;/code&gt;, &lt;code&gt;scan-lists&lt;/code&gt; and &lt;code&gt;scan-sexps&lt;/code&gt;.</source>
          <target state="translated">Если значение не равно &lt;code&gt;nil&lt;/code&gt; , то комментарии обрабатываются как пробел функциями в этом разделе и &lt;code&gt;forward-sexp&lt;/code&gt; , &lt;code&gt;scan-lists&lt;/code&gt; и &lt;code&gt;scan-sexps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9afa3015bea2a1daaa715c6ae2ba74ee7419f635" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, this signals that the selected window must not be used for displaying the buffer. All action functions that (re-)use an existing window should respect this entry.</source>
          <target state="translated">Если значение не равно &lt;code&gt;nil&lt;/code&gt; , это сигнализирует, что выбранное окно не должно использоваться для отображения буфера. Все функции действий, которые (повторно) используют существующее окно, должны учитывать эту запись.</target>
        </trans-unit>
        <trans-unit id="ee5cc1ed2e593d6b233408babcfcb8e3035d9a94" translate="yes" xml:space="preserve">
          <source>If the value is zero or &lt;code&gt;nil&lt;/code&gt;, then auto-saving is not done as a result of idleness, only after a certain number of input events as specified by &lt;code&gt;auto-save-interval&lt;/code&gt;.</source>
          <target state="translated">Если значение равно нулю или &lt;code&gt;nil&lt;/code&gt; , то автосохранение не выполняется в результате бездействия, а только после определенного количества входных событий, как указано в &lt;code&gt;auto-save-interval&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76f5d493cd82fcfb629f119ac8dbd7a3b97bad0c" translate="yes" xml:space="preserve">
          <source>If the value is zero, then command input is not echoed.</source>
          <target state="translated">Если значение равно нулю,то вход команды не эхо-сигнал.</target>
        </trans-unit>
        <trans-unit id="060f0c2de95a83bc0ccb45f9abd9bb5bd7667b58" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;selective-display&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, then the character control-m marks the start of hidden text; the control-m, and the rest of the line following it, are not displayed. This is explicit selective display.</source>
          <target state="translated">Если значение &lt;code&gt;selective-display&lt;/code&gt; равно &lt;code&gt;t&lt;/code&gt; , то символ control-m отмечает начало скрытого текста; Control-m и остальная часть следующей за ним строки не отображаются. Это явный выборочный показ.</target>
        </trans-unit>
        <trans-unit id="555139376ac09bc81e6c182a9608275dd0abd710" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;selective-display&lt;/code&gt; is a positive integer, then lines that start with more than that many columns of indentation are not displayed.</source>
          <target state="translated">Если значение &lt;code&gt;selective-display&lt;/code&gt; является положительным целым числом, то строки, начинающиеся с большего количества столбцов с отступом, не отображаются.</target>
        </trans-unit>
        <trans-unit id="68582a05aa95013824d3ad372c233549e62c49f2" translate="yes" xml:space="preserve">
          <source>If the value of &lt;var&gt;ascent&lt;/var&gt; is a non-negative number no greater than 100, it specifies that &lt;var&gt;ascent&lt;/var&gt; percent of the height of the space should be considered as the ascent of the space&amp;mdash;that is, the part above the baseline. The ascent may also be specified in pixel units with a &lt;em&gt;pixel ascent&lt;/em&gt; specification (see &lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;Pixel Specification&lt;/a&gt;).</source>
          <target state="translated">Если значение &lt;var&gt;ascent&lt;/var&gt; является неотрицательным числом, не превышающим 100, оно указывает, что процент &lt;var&gt;ascent&lt;/var&gt; от высоты помещения следует рассматривать как подъем помещения, то есть часть над базовой линией. Подъем также может быть указан в пиксельных единицах со спецификацией &lt;em&gt;подъема пикселей&lt;/em&gt; (см. &lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;Спецификацию пикселей&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c67a95af34a0a2fbb8831a9466cb5e82ffc37289" translate="yes" xml:space="preserve">
          <source>If the value of &lt;var&gt;condition&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the clause fails, so the &lt;code&gt;cond&lt;/code&gt; moves on to the following clause, trying its &lt;var&gt;condition&lt;/var&gt;.</source>
          <target state="translated">Если значение &lt;var&gt;condition&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , предложение не выполняется, поэтому &lt;code&gt;cond&lt;/code&gt; переходит к следующему предложению, пробуя его &lt;var&gt;condition&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="b26492df425382cda0433c05f8eee45418127a7d" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;disabled&lt;/code&gt; property is a string, the message saying the command is disabled includes that string. For example:</source>
          <target state="translated">Если значение свойства &lt;code&gt;disabled&lt;/code&gt; является строкой, сообщение о том, что команда отключена, включает эту строку. Например:</target>
        </trans-unit>
        <trans-unit id="566ca9c0dbabe27b2c6fa5789311bef1cbda3a5f" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;help-echo&lt;/code&gt; property is a function, that function is called with three arguments, &lt;var&gt;window&lt;/var&gt;, &lt;var&gt;object&lt;/var&gt; and &lt;var&gt;pos&lt;/var&gt; and should return a help string or &lt;code&gt;nil&lt;/code&gt; for none. The first argument, &lt;var&gt;window&lt;/var&gt; is the window in which the help was found. The second, &lt;var&gt;object&lt;/var&gt;, is the buffer, overlay or string which had the &lt;code&gt;help-echo&lt;/code&gt; property. The &lt;var&gt;pos&lt;/var&gt; argument is as follows:</source>
          <target state="translated">Если значением свойства &lt;code&gt;help-echo&lt;/code&gt; является функция, эта функция вызывается с тремя аргументами, &lt;var&gt;window&lt;/var&gt; , &lt;var&gt;object&lt;/var&gt; и &lt;var&gt;pos&lt;/var&gt; , и должна возвращать строку справки или &lt;code&gt;nil&lt;/code&gt; ,если нет. Первый аргумент &lt;var&gt;window&lt;/var&gt; - это окно, в котором была найдена справка. Второй &lt;var&gt;object&lt;/var&gt; - это буфер, наложение или строка, &lt;code&gt;help-echo&lt;/code&gt; свойство help-echo . &lt;var&gt;pos&lt;/var&gt; аргумент выглядит следующим образом :</target>
        </trans-unit>
        <trans-unit id="272c984932838f6844b94c52070e171efba296f8" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;help-echo&lt;/code&gt; property is neither a function nor a string, it is evaluated to obtain a help string.</source>
          <target state="translated">Если значение свойства &lt;code&gt;help-echo&lt;/code&gt; не является ни функцией, ни строкой, оно оценивается для получения строки справки.</target>
        </trans-unit>
        <trans-unit id="b8c377b2a9a4ca7febcecccc29dc18024a3f802e" translate="yes" xml:space="preserve">
          <source>If the value of the variable is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;save-buffer&lt;/code&gt; doesn&amp;rsquo;t add newlines at all. &lt;code&gt;nil&lt;/code&gt; is the default value, but a few major modes set it to &lt;code&gt;t&lt;/code&gt; in particular buffers.</source>
          <target state="translated">Если значение переменной равно &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;save-buffer&lt;/code&gt; вообще не добавляет новые строки. &lt;code&gt;nil&lt;/code&gt; - значение по умолчанию, но несколько основных режимов устанавливают его на &lt;code&gt;t&lt;/code&gt; в определенных буферах.</target>
        </trans-unit>
        <trans-unit id="0ac5493d5a3cecee27b7d297a2e462236561533c" translate="yes" xml:space="preserve">
          <source>If the value of this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt; (the default), Emacs performs bidirectional reordering for display. The reordering affects buffer text, as well as display strings and overlay strings from text and overlay properties in the buffer (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;, and see &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;). If the value is &lt;code&gt;nil&lt;/code&gt;, Emacs does not perform bidirectional reordering in the buffer.</source>
          <target state="translated">Если значение этой локальной переменной буфера не равно &lt;code&gt;nil&lt;/code&gt; (по умолчанию), Emacs выполняет двунаправленное переупорядочение для отображения. Изменение порядка влияет на текст буфера, а также на отображаемые строки и строки наложения из текста и свойств наложения в буфере (см. &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Свойства наложения&lt;/a&gt; и см. Свойства &lt;a href=&quot;display-property#Display-Property&quot;&gt;отображения&lt;/a&gt; ). Если значение равно &lt;code&gt;nil&lt;/code&gt; , Emacs не выполняет двунаправленное переупорядочение в буфере.</target>
        </trans-unit>
        <trans-unit id="19cfe301d5b1c21b59d7667f67b9846e5cb99b66" translate="yes" xml:space="preserve">
          <source>If the value of this buffer-local variable is the symbol &lt;code&gt;right-to-left&lt;/code&gt; or &lt;code&gt;left-to-right&lt;/code&gt;, all paragraphs in the buffer are assumed to have that specified direction. Any other value is equivalent to &lt;code&gt;nil&lt;/code&gt; (the default), which means to determine the base direction of each paragraph from its contents.</source>
          <target state="translated">Если значением этой локальной переменной в буфере является символ &lt;code&gt;right-to-left&lt;/code&gt; или &lt;code&gt;left-to-right&lt;/code&gt; , предполагается, что все абзацы в буфере имеют это указанное направление. Любое другое значение эквивалентно &lt;code&gt;nil&lt;/code&gt; (значение по умолчанию), что означает определение базового направления каждого абзаца по его содержимому.</target>
        </trans-unit>
        <trans-unit id="812fc63336994f949e3d3139adf98158b4eeeb2b" translate="yes" xml:space="preserve">
          <source>If the value of this option is non-&lt;code&gt;nil&lt;/code&gt;, Emacs resizes windows in units of pixels. This currently affects functions like &lt;code&gt;split-window&lt;/code&gt; (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;), &lt;code&gt;maximize-window&lt;/code&gt;, &lt;code&gt;minimize-window&lt;/code&gt;, &lt;code&gt;fit-window-to-buffer&lt;/code&gt;, &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; and &lt;code&gt;shrink-window-if-larger-than-buffer&lt;/code&gt; (all listed below).</source>
          <target state="translated">Если значение этой опции не равно &lt;code&gt;nil&lt;/code&gt; , Emacs изменяет размеры окон в пикселях. Это в настоящее время затрагивает такие функции , как &lt;code&gt;split-window&lt;/code&gt; (см &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Разделения окон&lt;/a&gt; ), &lt;code&gt;maximize-window&lt;/code&gt; , &lt;code&gt;minimize-window&lt;/code&gt; , &lt;code&gt;fit-window-to-buffer&lt;/code&gt; , &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; и &lt;code&gt;shrink-window-if-larger-than-buffer&lt;/code&gt; ( все перечислено ниже).</target>
        </trans-unit>
        <trans-unit id="5cf1bf75cb42bb084c10a3366213ff8870a2d138" translate="yes" xml:space="preserve">
          <source>If the value of this parameter is &lt;code&gt;nil&lt;/code&gt;, the frame&amp;rsquo;s position and size remain unaltered when the parent frame is resized, so the position and size ratios may change. If the value of this parameter is &lt;code&gt;t&lt;/code&gt;, Emacs will try to preserve the frame&amp;rsquo;s size and position ratios, hence the frame&amp;rsquo;s size and position relative to its parent frame may change.</source>
          <target state="translated">Если значение этого параметра равно &lt;code&gt;nil&lt;/code&gt; , позиция и размер фрейма остаются неизменными при изменении размера родительского фрейма, поэтому соотношение положения и размера может измениться. Если значение этого параметра равно &lt;code&gt;t&lt;/code&gt; , Emacs попытается сохранить размер кадра и соотношения положения, следовательно, размер и положение кадра относительно его родительского кадра могут измениться.</target>
        </trans-unit>
        <trans-unit id="0510e819ccf0c675338a805bc0b404c4a3b6f7a9" translate="yes" xml:space="preserve">
          <source>If the value of this variable is &lt;code&gt;nil&lt;/code&gt;, standard functions that read from the minibuffer don&amp;rsquo;t add new elements to the history list. This lets Lisp programs explicitly manage input history by using &lt;code&gt;add-to-history&lt;/code&gt;. The default value is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Если значение этой переменной равно &lt;code&gt;nil&lt;/code&gt; , стандартные функции, считывающие из минибуфера, не добавляют новые элементы в список истории. Это позволяет программам на Лиспе явно управлять историей ввода с помощью &lt;code&gt;add-to-history&lt;/code&gt; . Значение по умолчанию - &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f0defdc43585356036419fc3a095ddbc8793b32" translate="yes" xml:space="preserve">
          <source>If the value of this variable is &lt;code&gt;t&lt;/code&gt;, that means when adding a new history element, all previous identical elements are deleted.</source>
          <target state="translated">Если значение этой переменной равно &lt;code&gt;t&lt;/code&gt; , это означает, что при добавлении нового элемента истории все предыдущие идентичные элементы удаляются.</target>
        </trans-unit>
        <trans-unit id="00e756b626fcfa2be38e0c2c66f51589b80680ba" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt; (the default), &lt;code&gt;split-window-below&lt;/code&gt; behaves as described above.</source>
          <target state="translated">Если значение этой переменной не равно &lt;code&gt;nil&lt;/code&gt; (по умолчанию), &lt;code&gt;split-window-below&lt;/code&gt; ведет себя, как описано выше.</target>
        </trans-unit>
        <trans-unit id="a59f8293a2949cc6a25118ff9b69aa66a58661cb" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;display-buffer&lt;/code&gt; is allowed to split an existing window to make a new window for displaying in. This is the default.</source>
          <target state="translated">Если значение этой переменной не равно &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;display-buffer&lt;/code&gt; позволяет разделить существующее окно, чтобы создать новое окно для отображения. Это значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="a9a51ed077c6bca22acf5bd2c879943a99f0bb0f" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs loads a terminal-specific initialization file as follows:</source>
          <target state="translated">Если значение этой переменной не равно &lt;code&gt;nil&lt;/code&gt; , Emacs загружает специфичный для терминала файл инициализации следующим образом:</target>
        </trans-unit>
        <trans-unit id="9c4d11e131a1d859bb2af4f2e3fdec41460a90c4" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, Font Lock does not do syntactic fontification, only search-based fontification based on &lt;code&gt;font-lock-keywords&lt;/code&gt;. It is normally set by Font Lock mode based on the &lt;var&gt;keywords-only&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;. If the value is &lt;code&gt;nil&lt;/code&gt;, Font Lock will call &lt;code&gt;jit-lock-register&lt;/code&gt; (see &lt;a href=&quot;other-font-lock-variables#Other-Font-Lock-Variables&quot;&gt;Other Font Lock Variables&lt;/a&gt;) to set up for automatic refontification of buffer text following a modified line to reflect the new syntactic context due to the change.</source>
          <target state="translated">Если значение этой переменной не равно &lt;code&gt;nil&lt;/code&gt; , Font Lock не выполняет синтаксическое фонирование, а только фонирование на основе поиска, основанное на &lt;code&gt;font-lock-keywords&lt;/code&gt; . Обычно он устанавливается в режиме Font Lock на основе элемента &lt;var&gt;keywords-only&lt;/var&gt; в &lt;code&gt;font-lock-defaults&lt;/code&gt; . Если значение равно &lt;code&gt;nil&lt;/code&gt; , Font Lock вызовет &lt;code&gt;jit-lock-register&lt;/code&gt; (см. &lt;a href=&quot;other-font-lock-variables#Other-Font-Lock-Variables&quot;&gt;Другие переменные Font Lock&lt;/a&gt; ), чтобы настроить автоматическое обновление текста буфера, следующего за измененной строкой, чтобы отразить новый синтаксический контекст из-за изменения.</target>
        </trans-unit>
        <trans-unit id="2960c7a8febeec7d927a7af133e174629bbfb833" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, case is not considered significant in completion. Within &lt;code&gt;read-file-name&lt;/code&gt;, this variable is overridden by &lt;code&gt;read-file-name-completion-ignore-case&lt;/code&gt; (see &lt;a href=&quot;reading-file-names#Reading-File-Names&quot;&gt;Reading File Names&lt;/a&gt;); within &lt;code&gt;read-buffer&lt;/code&gt;, it is overridden by &lt;code&gt;read-buffer-completion-ignore-case&lt;/code&gt; (see &lt;a href=&quot;high_002dlevel-completion#High_002dLevel-Completion&quot;&gt;High-Level Completion&lt;/a&gt;).</source>
          <target state="translated">Если значение этой переменной не равно &lt;code&gt;nil&lt;/code&gt; , регистр не считается значимым в завершении. В пределах &lt;code&gt;read-file-name&lt;/code&gt; эта переменная переопределяется &lt;code&gt;read-file-name-completion-ignore-case&lt;/code&gt; (см. &lt;a href=&quot;reading-file-names#Reading-File-Names&quot;&gt;Чтение имен файлов&lt;/a&gt; ); в &lt;code&gt;read-buffer&lt;/code&gt; он переопределяется методом &lt;code&gt;read-buffer-completion-ignore-case&lt;/code&gt; (см. &lt;a href=&quot;high_002dlevel-completion#High_002dLevel-Completion&quot;&gt;Завершение высокого уровня&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d6c67d32ca611252d8fc5f1b5880098b768694a6" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a window object. When the function &lt;code&gt;scroll-other-window&lt;/code&gt; is called in the minibuffer, it scrolls this window (see &lt;a href=&quot;textual-scrolling#Textual-Scrolling&quot;&gt;Textual Scrolling&lt;/a&gt;).</source>
          <target state="translated">Если значение этой переменной не равно &lt;code&gt;nil&lt;/code&gt; , это должен быть объект окна. Когда в минибуфере вызывается функция &lt;code&gt;scroll-other-window&lt;/code&gt; , она прокручивает это окно (см. &lt;a href=&quot;textual-scrolling#Textual-Scrolling&quot;&gt;Текстовая прокрутка&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9e95218ab547b22918b93cabf2b6d43c2fe537ca" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, that means &lt;code&gt;display-buffer&lt;/code&gt; may display buffers by making new frames. The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если значение этой переменной не равно &lt;code&gt;nil&lt;/code&gt; , это означает, что &lt;code&gt;display-buffer&lt;/code&gt; может отображать буферы, создавая новые кадры. По умолчанию - &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="360c01786da313e8914310faac623782020e21b4" translate="yes" xml:space="preserve">
          <source>If the value specifies a function, that function is called with one argument&amp;mdash;the chosen window. The function is supposed to adjust the height of the window; its return value is ignored. Suitable functions are &lt;code&gt;shrink-window-if-larger-than-buffer&lt;/code&gt; and &lt;code&gt;fit-window-to-buffer&lt;/code&gt;, see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;.</source>
          <target state="translated">Если значение определяет функцию, эта функция вызывается с одним аргументом - выбранным окном. Функция предназначена для регулировки высоты окна; его возвращаемое значение игнорируется. Подходящие функции: &lt;code&gt;shrink-window-if-larger-than-buffer&lt;/code&gt; и &lt;code&gt;fit-window-to-buffer&lt;/code&gt; , см. &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Изменение размера окна&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57707f18f785ecc801b8f5afbc05fff4dced7d86" translate="yes" xml:space="preserve">
          <source>If the value specifies a function, that function is called with one argument&amp;mdash;the chosen window. The function is supposed to adjust the width of the window; its return value is ignored.</source>
          <target state="translated">Если значение определяет функцию, эта функция вызывается с одним аргументом - выбранным окном. Функция предназначена для регулировки ширины окна; его возвращаемое значение игнорируется.</target>
        </trans-unit>
        <trans-unit id="a79cda4b6734f4c8cd077b1e9f5396ef14b06321" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;auto-resize-tool-bars&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, Emacs wraps the internal tool bar when its width becomes too large for its frame. If and when Emacs (un-)wraps the internal tool bar, it by default keeps the outer height of the frame unchanged, so the native height of the frame (see below) will change instead. Emacs built with GTK+, on the other hand, never wraps the tool bar but may automatically increase the outer width of a frame in order to accommodate an overlong tool bar.</source>
          <target state="translated">Если переменная &lt;code&gt;auto-resize-tool-bars&lt;/code&gt; равна &lt;code&gt;nil&lt;/code&gt; , Emacs оборачивает внутреннюю панель инструментов, когда ее ширина становится слишком большой для ее рамки. Если и когда Emacs (un-) обертывает внутреннюю панель инструментов, он по умолчанию сохраняет внешнюю высоту фрейма неизменной, поэтому вместо этого изменится собственная высота фрейма (см. Ниже). Emacs, созданный с помощью GTK +, с другой стороны, никогда не оборачивает панель инструментов, но может автоматически увеличивать внешнюю ширину фрейма, чтобы приспособиться к слишком длинной панели инструментов.</target>
        </trans-unit>
        <trans-unit id="c8070019cd13c6f9ef8f3dd737702a0064c04727" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;completion-ignore-case&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, completion ignores case when comparing the input against the possible matches. See &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;. In this mode of operation, &lt;var&gt;predicate&lt;/var&gt; must also ignore case, or you will get surprising results.</source>
          <target state="translated">Если переменная &lt;code&gt;completion-ignore-case&lt;/code&gt; равна &lt;code&gt;nil&lt;/code&gt; , завершение игнорирует регистр при сравнении ввода с возможными совпадениями. См. &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Основное завершение&lt;/a&gt; . В этом режиме работы &lt;var&gt;predicate&lt;/var&gt; также должен игнорировать регистр, иначе вы получите неожиданные результаты.</target>
        </trans-unit>
        <trans-unit id="42c1194e671d47a84f55790bd93d0d192ce44404" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;minibuffer-allow-text-properties&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the string that is returned includes whatever text properties were present in the minibuffer. Otherwise all the text properties are stripped when the value is returned.</source>
          <target state="translated">Если переменная &lt;code&gt;minibuffer-allow-text-properties&lt;/code&gt; не равна &lt;code&gt;nil&lt;/code&gt; , то возвращаемая строка включает все текстовые свойства, которые присутствовали в минибуфере. В противном случае все свойства текста удаляются при возврате значения.</target>
        </trans-unit>
        <trans-unit id="0fd52c18b8e8730c692db14bdff9e0f641a8adfc" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;select-safe-coding-system-accept-default-p&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function taking a single argument. It is used in place of &lt;var&gt;accept-default-p&lt;/var&gt;, overriding any value supplied for this argument.</source>
          <target state="translated">Если переменная &lt;code&gt;select-safe-coding-system-accept-default-p&lt;/code&gt; не равна &lt;code&gt;nil&lt;/code&gt; , это должна быть функция, принимающая единственный аргумент. Он используется вместо &lt;var&gt;accept-default-p&lt;/var&gt; , переопределяя любое значение, указанное для этого аргумента.</target>
        </trans-unit>
        <trans-unit id="ba30a6d68e9424f264d433cf2bc9e1d8da9ccbb1" translate="yes" xml:space="preserve">
          <source>If the variable is lexically bound, the value reported by &lt;code&gt;symbol-value&lt;/code&gt; is not necessarily the same as the variable&amp;rsquo;s lexical value, which is determined by the lexical environment rather than the symbol&amp;rsquo;s value cell. See &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;.</source>
          <target state="translated">Если переменная лексически связана, значение, сообщаемое &lt;code&gt;symbol-value&lt;/code&gt; , не обязательно совпадает с лексическим значением переменной, которое определяется лексической средой, а не ячейкой значения символа. См. Раздел &amp;laquo; &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Переменная область видимости&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2cc97422846b390d66f71d3f440cd0096fde1d63" translate="yes" xml:space="preserve">
          <source>If the variable is terminal-local (see &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;), this function signals an error. Such variables cannot have buffer-local bindings as well.</source>
          <target state="translated">Если переменная является локальной для терминала (см. &amp;laquo; &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Несколько терминалов&amp;raquo;&lt;/a&gt; ), эта функция сигнализирует об ошибке. Такие переменные также не могут иметь привязки к локальному буферу.</target>
        </trans-unit>
        <trans-unit id="5499f5ed3b50f30f4688e5c4db6fba581e67d1a2" translate="yes" xml:space="preserve">
          <source>If the variable&amp;rsquo;s name ends in &amp;lsquo;</source>
          <target state="translated">Если имя переменной заканчивается на '</target>
        </trans-unit>
        <trans-unit id="e9f61c12e5a938e87c2c68dc7d8b0cb42c3add87" translate="yes" xml:space="preserve">
          <source>If the variable&amp;rsquo;s value is &lt;code&gt;nil&lt;/code&gt; then there is no function to call.</source>
          <target state="translated">Если значение переменной равно &lt;code&gt;nil&lt;/code&gt; функция для вызова отсутствует.</target>
        </trans-unit>
        <trans-unit id="da77a96697264f1d46e2cb1c7d972dbe27f731bf" translate="yes" xml:space="preserve">
          <source>If the vector does not include the port number, &lt;var&gt;p&lt;/var&gt;, or if &lt;var&gt;omit-port&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the result does not include the &lt;code&gt;:&lt;var&gt;p&lt;/var&gt;&lt;/code&gt; suffix.</source>
          <target state="translated">Если вектор не включает номер порта &lt;var&gt;p&lt;/var&gt; или если параметр &lt;var&gt;omit-port&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , результат не будет включать суффикс &lt;code&gt;:&lt;var&gt;p&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="025248ccceae386bc67ad5cd8e7c95dde75410bd" translate="yes" xml:space="preserve">
          <source>If the width is too small, &lt;code&gt;format&lt;/code&gt; does not truncate the object&amp;rsquo;s printed representation. Thus, you can use a width to specify a minimum spacing between columns with no risk of losing information. In the following two examples, &amp;lsquo;</source>
          <target state="translated">Если ширина слишком мала, &lt;code&gt;format&lt;/code&gt; не усекает печатное представление объекта. Таким образом, вы можете использовать ширину, чтобы указать минимальный интервал между столбцами без риска потери информации. В следующих двух примерах '</target>
        </trans-unit>
        <trans-unit id="e88f1c383e1c6de576660f951c4c14f3986be3ba" translate="yes" xml:space="preserve">
          <source>If the window contains a row taller than the height of the window (for example in the presence of a large image), the scroll functions will adjust the window&amp;rsquo;s vertical scroll position to scroll the partially visible row. Lisp callers can disable this feature by binding the variable &lt;code&gt;auto-window-vscroll&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; (see &lt;a href=&quot;vertical-scrolling#Vertical-Scrolling&quot;&gt;Vertical Scrolling&lt;/a&gt;).</source>
          <target state="translated">Если окно содержит строку выше, чем высота окна (например, при наличии большого изображения), функции прокрутки будут регулировать положение вертикальной прокрутки окна для прокрутки частично видимой строки. Вызывающие Lisp могут отключить эту функцию, &lt;code&gt;auto-window-vscroll&lt;/code&gt; переменную auto-window-vscroll к &lt;code&gt;nil&lt;/code&gt; (см. &lt;a href=&quot;vertical-scrolling#Vertical-Scrolling&quot;&gt;Вертикальная прокрутка&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="58da0ad987577d2d969ffa549fd2f1c2eb3eab39" translate="yes" xml:space="preserve">
          <source>If there are backups numbered 1, 2, 3, 5, and 7, and both of these variables have the value 2, then the backups numbered 1 and 2 are kept as old versions and those numbered 5 and 7 are kept as new versions; backup version 3 is excess. The function &lt;code&gt;find-backup-file-name&lt;/code&gt; (see &lt;a href=&quot;backup-names#Backup-Names&quot;&gt;Backup Names&lt;/a&gt;) is responsible for determining which backup versions to delete, but does not delete them itself.</source>
          <target state="translated">Если есть резервные копии с номерами 1, 2, 3, 5 и 7, и обе эти переменные имеют значение 2, то резервные копии с номерами 1 и 2 сохраняются как старые версии, а резервные копии с номерами 5 и 7 сохраняются как новые версии; резервная версия 3 избыточна. Функция &lt;code&gt;find-backup-file-name&lt;/code&gt; (см. &lt;a href=&quot;backup-names#Backup-Names&quot;&gt;Имена резервных копий&lt;/a&gt; ) отвечает за определение удаляемых версий резервных копий, но не удаляет их сама.</target>
        </trans-unit>
        <trans-unit id="e6b4bfda96fbc609978591cef5622b754174446a" translate="yes" xml:space="preserve">
          <source>If there are two candidate windows of the same size, this function prefers the one that comes first in the cyclic ordering of windows, starting from the selected window.</source>
          <target state="translated">Если есть два окна-кандидата одинакового размера,то эта функция предпочитает то окно,которое приходит первым в циклической последовательности окон,начиная с выбранного окна.</target>
        </trans-unit>
        <trans-unit id="7b7eb1941e0354d1c6f4238cc39982b2e0eea94d" translate="yes" xml:space="preserve">
          <source>If there is a dedicated window showing the buffer, and that window is the only one on its frame, this function also deletes that frame if it is not the only frame on the terminal.</source>
          <target state="translated">Если есть выделенное окно,показывающее буфер,и это окно единственное на своем фрейме,то эта функция также удаляет этот фрейм,если он не единственный фрейм на терминале.</target>
        </trans-unit>
        <trans-unit id="2ddb1fcae7a9d577f34c9ea1b850f472c8e9a139" translate="yes" xml:space="preserve">
          <source>If there is a fill prefix, &lt;code&gt;indent-region&lt;/code&gt; indents each line by making it start with the fill prefix.</source>
          <target state="translated">Если есть префикс заполнения, &lt;code&gt;indent-region&lt;/code&gt; делает отступ для каждой строки, заставляя ее начинаться с префикса заполнения.</target>
        </trans-unit>
        <trans-unit id="8e9e69163b0fbf6e36bd75fa2ef274e9f29d014e" translate="yes" xml:space="preserve">
          <source>If there is a fill prefix, and the second of the lines being joined starts with the prefix, then &lt;code&gt;delete-indentation&lt;/code&gt; deletes the fill prefix before joining the lines. See &lt;a href=&quot;margins#Margins&quot;&gt;Margins&lt;/a&gt;.</source>
          <target state="translated">Если есть префикс заполнения и вторая из соединяемых строк начинается с префикса, то &lt;code&gt;delete-indentation&lt;/code&gt; удаляет префикс заполнения перед объединением строк. См. &lt;a href=&quot;margins#Margins&quot;&gt;Поля&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00c7be75182fe6893a2fc04a1937b3015736bb74" translate="yes" xml:space="preserve">
          <source>If there is a match, the value of &lt;code&gt;pcase&lt;/code&gt; is the value of the last of &lt;var&gt;body-forms&lt;/var&gt; in the successful clause. Otherwise, &lt;code&gt;pcase&lt;/code&gt; evaluates to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если есть совпадение, значение &lt;code&gt;pcase&lt;/code&gt; - это значение последней &lt;var&gt;body-forms&lt;/var&gt; в предложении Success . В противном случае, &lt;code&gt;pcase&lt;/code&gt; принимает значение &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="239149c24e786c9e2489616d4cd84a2398b91519" translate="yes" xml:space="preserve">
          <source>If there is an image at the click location, this is the image object as returned by &lt;code&gt;find-image&lt;/code&gt; (see &lt;a href=&quot;defining-images#Defining-Images&quot;&gt;Defining Images&lt;/a&gt;); otherwise this is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если в месте щелчка есть изображение, это объект изображения, возвращенный &lt;code&gt;find-image&lt;/code&gt; (см. &lt;a href=&quot;defining-images#Defining-Images&quot;&gt;Определение изображений&lt;/a&gt; ); в противном случае это &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eea73d996587a876ca65a3ae23b074ee83114aeb" translate="yes" xml:space="preserve">
          <source>If there is more than one conversion, &lt;code&gt;write-region&lt;/code&gt; merges their annotations destructively into one sorted list. Later, when the text from the buffer is actually written to the file, it intermixes the specified annotations at the corresponding positions. All this takes place without modifying the buffer.</source>
          <target state="translated">Если есть более одного преобразования, &lt;code&gt;write-region&lt;/code&gt; разрушающе объединяет их аннотации в один отсортированный список. Позже, когда текст из буфера фактически записывается в файл, он смешивает указанные аннотации в соответствующих позициях. Все это происходит без модификации буфера.</target>
        </trans-unit>
        <trans-unit id="bc71318b153defd40d75c8fb2df1691e14b3d63d" translate="yes" xml:space="preserve">
          <source>If there is no &lt;var&gt;prop&lt;/var&gt; property strictly speaking, but the character has a property category that is a symbol, then &lt;code&gt;get-text-property&lt;/code&gt; returns the &lt;var&gt;prop&lt;/var&gt; property of that symbol.</source>
          <target state="translated">Если, строго говоря, свойства &lt;var&gt;prop&lt;/var&gt; отсутствует , но у персонажа есть категория свойств, которая является символом, то &lt;code&gt;get-text-property&lt;/code&gt; возвращает свойство &lt;var&gt;prop&lt;/var&gt; этого символа.</target>
        </trans-unit>
        <trans-unit id="62df673db401de9102912271f958fe629ab77b49" translate="yes" xml:space="preserve">
          <source>If there is no applicable handler for the error, it terminates the current command and returns control to the editor command loop. (The command loop has an implicit handler for all kinds of errors.) The command loop&amp;rsquo;s handler uses the error symbol and associated data to print an error message. You can use the variable &lt;code&gt;command-error-function&lt;/code&gt; to control how this is done:</source>
          <target state="translated">Если для ошибки нет подходящего обработчика, он завершает текущую команду и возвращает управление циклу команд редактора. (У командного цикла есть неявный обработчик для всех видов ошибок.) Обработчик командного цикла использует символ ошибки и связанные данные для печати сообщения об ошибке. Вы можете использовать переменную &lt;code&gt;command-error-function&lt;/code&gt; , чтобы контролировать, как это делается:</target>
        </trans-unit>
        <trans-unit id="d13e9413b607a2a2de3ef7114c92fa2e573d925d" translate="yes" xml:space="preserve">
          <source>If there is no font that exactly matches all desired face attributes (&lt;code&gt;:width&lt;/code&gt;, &lt;code&gt;:height&lt;/code&gt;, &lt;code&gt;:weight&lt;/code&gt;, and &lt;code&gt;:slant&lt;/code&gt;), this variable specifies the order in which these attributes should be considered when selecting the closest matching font. The value should be a list containing those four attribute symbols, in order of decreasing importance. The default is &lt;code&gt;(:width :height :weight
:slant)&lt;/code&gt;.</source>
          <target state="translated">Если нет шрифта , который точно соответствует всем желаемым атрибутам лица ( &lt;code&gt;:width&lt;/code&gt; , &lt;code&gt;:height&lt;/code&gt; , &lt;code&gt;:weight&lt;/code&gt; , а также &lt;code&gt;:slant&lt;/code&gt; ), этот переменные определяет порядок , в котором эти атрибуты должны быть рассмотрены при выборе наиболее близкий соответствующий шрифта. Значение должно быть списком, содержащим эти четыре символа атрибутов в порядке убывания важности. По умолчанию это &lt;code&gt;(:width :height :weight :slant)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd34e79fd11cb89ebb18daa849151e90f2652afa" translate="yes" xml:space="preserve">
          <source>If there is no line corresponding to the specified &lt;var&gt;line&lt;/var&gt;, &lt;code&gt;window-line-height&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, it returns a list &lt;code&gt;(&lt;var&gt;height&lt;/var&gt; &lt;var&gt;vpos&lt;/var&gt; &lt;var&gt;ypos&lt;/var&gt; &lt;var&gt;offbot&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;height&lt;/var&gt; is the height in pixels of the visible part of the line, &lt;var&gt;vpos&lt;/var&gt; and &lt;var&gt;ypos&lt;/var&gt; are the vertical position in lines and pixels of the line relative to the top of the first text line, and &lt;var&gt;offbot&lt;/var&gt; is the number of off-window pixels at the bottom of the text line. If there are off-window pixels at the top of the (first) text line, &lt;var&gt;ypos&lt;/var&gt; is negative.</source>
          <target state="translated">Если нет строки, соответствующей указанной &lt;var&gt;line&lt;/var&gt; , &lt;code&gt;window-line-height&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; . В противном случае он возвращает список &lt;code&gt;(&lt;var&gt;height&lt;/var&gt; &lt;var&gt;vpos&lt;/var&gt; &lt;var&gt;ypos&lt;/var&gt; &lt;var&gt;offbot&lt;/var&gt;)&lt;/code&gt; , где &lt;var&gt;height&lt;/var&gt; - это высота в пикселях видимой части строки, &lt;var&gt;vpos&lt;/var&gt; и &lt;var&gt;ypos&lt;/var&gt; - вертикальное положение в строках и пикселях строки относительно верха первого текста. line, а &lt;var&gt;offbot&lt;/var&gt; - количество пикселей вне окна в нижней части текстовой строки. Если есть пиксели вне окна в верхней части (первой) текстовой строки, &lt;var&gt;ypos&lt;/var&gt; отрицательный.</target>
        </trans-unit>
        <trans-unit id="58d49d5547a126f307c0ac2b901ef857396f1b2b" translate="yes" xml:space="preserve">
          <source>If there is no recent invocation of &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; that can be undone, this function tries to show a buffer from the buffer list of the frame &lt;var&gt;window&lt;/var&gt; appears on (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;).</source>
          <target state="translated">Если нет недавнего вызова &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; , который можно отменить, эта функция пытается показать буфер из списка буферов, в котором появляется &lt;var&gt;window&lt;/var&gt; фрейма (см. &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Список&lt;/a&gt; буферов ).</target>
        </trans-unit>
        <trans-unit id="9dd64eab7b6ffb8f7e5924983ab88700dd4b03cd" translate="yes" xml:space="preserve">
          <source>If there is no such window, this function tries to create a new window by splitting the selected one, and displays &lt;var&gt;buffer&lt;/var&gt; there. It will also try to adjust that window&amp;rsquo;s size provided &lt;var&gt;alist&lt;/var&gt; contains a suitable &lt;code&gt;window-height&lt;/code&gt; or &lt;code&gt;window-width&lt;/code&gt; entry, see above.</source>
          <target state="translated">Если такого окна нет, эта функция пытается создать новое окно, разделив выбранное, и отображает в нем &lt;var&gt;buffer&lt;/var&gt; . Он также попытается отрегулировать размер этого окна, если &lt;var&gt;alist&lt;/var&gt; содержит подходящую запись о &lt;code&gt;window-height&lt;/code&gt; или &lt;code&gt;window-width&lt;/code&gt; , см. Выше.</target>
        </trans-unit>
        <trans-unit id="078fd7bfdb217b2ab89e33373df21b9f10571d5f" translate="yes" xml:space="preserve">
          <source>If there is no window at that position, the return value is &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">Если в этой позиции нет окна, возвращаемое значение равно &lt;code&gt;nil&lt;/code&gt; . Если &lt;var&gt;frame&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется выбранный кадр.</target>
        </trans-unit>
        <trans-unit id="5dcb701415ed2df9a0a0875bc17e2ee8bca7d7e1" translate="yes" xml:space="preserve">
          <source>If there is no window at the specified position, the return value is &lt;code&gt;nil&lt;/code&gt; . Otherwise, the return value is one of the following:</source>
          <target state="translated">Если в указанной позиции окна нет, возвращаемое значение равно &lt;code&gt;nil&lt;/code&gt; . В противном случае возвращаемое значение может быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="93b073a7aa145aa9caa6dda66c1ae5ec8fc7be99" translate="yes" xml:space="preserve">
          <source>If there is no window system support, this function does nothing.</source>
          <target state="translated">Если нет поддержки оконной системы,эта функция ничего не делает.</target>
        </trans-unit>
        <trans-unit id="9913df0d9bdf18e69b5564a0b6970ac42b891192" translate="yes" xml:space="preserve">
          <source>If there was overflow in pure space (see &lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;Pure Storage&lt;/a&gt;), and Emacs was dumped using the (now obsolete) &lt;code&gt;unexec&lt;/code&gt; method (see &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;), then &lt;code&gt;garbage-collect&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, because a real garbage collection cannot be done in that case.</source>
          <target state="translated">Если произошло переполнение в чистом пространстве (см. &lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;Pure Storage&lt;/a&gt; ), и Emacs был сброшен с использованием (теперь устаревшего) метода &lt;code&gt;unexec&lt;/code&gt; (см. &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Сборка Emacs&lt;/a&gt; ), то сборщик &lt;code&gt;garbage-collect&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; , потому что в этом случае настоящая сборка мусора не может быть выполнена.</target>
        </trans-unit>
        <trans-unit id="2d00cfb9d4ff8180801f1e00b989d13809bdad99" translate="yes" xml:space="preserve">
          <source>If there was previously no binding for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;keymap&lt;/var&gt;, the new binding is added at the beginning of &lt;var&gt;keymap&lt;/var&gt;. The order of bindings in a keymap makes no difference for keyboard input, but it does matter for menu keymaps (see &lt;a href=&quot;menu-keymaps#Menu-Keymaps&quot;&gt;Menu Keymaps&lt;/a&gt;).</source>
          <target state="translated">Если ранее не было привязки для &lt;var&gt;key&lt;/var&gt; в &lt;var&gt;keymap&lt;/var&gt; клавиатуры , новая привязка добавляется в начало &lt;var&gt;keymap&lt;/var&gt; . Порядок привязок в раскладке клавиатуры не имеет значения для ввода с клавиатуры, но имеет значение для раскладок меню (см. &lt;a href=&quot;menu-keymaps#Menu-Keymaps&quot;&gt;Раскладки меню&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="bc26661694c756b8d17373d3511cb3072fe325ce" translate="yes" xml:space="preserve">
          <source>If these measures are not sufficient to prevent malfunction, a library can define an explicit unloader named &lt;code&gt;&lt;var&gt;feature&lt;/var&gt;-unload-function&lt;/code&gt;. If that symbol is defined as a function, &lt;code&gt;unload-feature&lt;/code&gt; calls it with no arguments before doing anything else. It can do whatever is appropriate to unload the library. If it returns &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;unload-feature&lt;/code&gt; proceeds to take the normal unload actions. Otherwise it considers the job to be done.</source>
          <target state="translated">Если этих мер недостаточно для предотвращения сбоя, библиотека может определить явный разгрузчик с именем &lt;code&gt;&lt;var&gt;feature&lt;/var&gt;-unload-function&lt;/code&gt; . Если этот символ определен как функция, &lt;code&gt;unload-feature&lt;/code&gt; вызывает его без аргументов, прежде чем делать что-либо еще. Он может делать все необходимое, чтобы выгрузить библиотеку. Если он возвращает &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;unload-feature&lt;/code&gt; продолжает выполнять обычные действия по разгрузке. В противном случае он считает работу выполненной.</target>
        </trans-unit>
        <trans-unit id="f6e978456ddb3af8bdb29674f743e9d5dd150503" translate="yes" xml:space="preserve">
          <source>If these parameters include &lt;code&gt;(minibuffer . nil)&lt;/code&gt;, that indicates that the initial frame should have no minibuffer. In this case, Emacs creates a separate &lt;em&gt;minibuffer-only frame&lt;/em&gt; as well.</source>
          <target state="translated">Если эти параметры включают &lt;code&gt;(minibuffer . nil)&lt;/code&gt; , это означает, что в начальном кадре не должно быть минибуфера. В этом случае Emacs также создает отдельный &lt;em&gt;фрейм только для минибуфера&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="45a33a7d9575de222295306570ac344670f6cf04" translate="yes" xml:space="preserve">
          <source>If these settings affect the frame geometry and appearance, you&amp;rsquo;ll see the frame appear with the wrong ones and then change to the specified ones. If that bothers you, you can specify the same geometry and appearance with X resources; those do take effect before the frame is created. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;X Resources&lt;/a&gt; in</source>
          <target state="translated">Если эти настройки влияют на геометрию и внешний вид рамки, вы увидите, что рамка отображается с неправильными параметрами, а затем изменится на указанные. Если вас это беспокоит, вы можете указать ту же геометрию и внешний вид с ресурсами X; они вступают в силу до создания кадра. См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;Ресурсы X&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="20b37a1a8d0ef1b02a68fec7c144c8fa31d612e3" translate="yes" xml:space="preserve">
          <source>If these two fields are not equal, a change in the status of the process needs to be reported, either by running the sentinel or by inserting a message in the process buffer.</source>
          <target state="translated">Если эти два поля не равны,необходимо сообщить об изменении статуса процесса,либо запустив sendinel,либо вставив сообщение в буфер процесса.</target>
        </trans-unit>
        <trans-unit id="9e4a278a7bb8c7d888ffd1bd92ec0c91aad99bbe" translate="yes" xml:space="preserve">
          <source>If these two values differ, each of them is called (if not &lt;code&gt;nil&lt;/code&gt;) with two arguments: the old value of point, and the new one.</source>
          <target state="translated">Если эти два значения различаются, каждое из них вызывается (если не &lt;code&gt;nil&lt;/code&gt; ) с двумя аргументами: старым значением точки и новым.</target>
        </trans-unit>
        <trans-unit id="5bb514ff1bb5eb470a34a42dcf8fc1976c539473" translate="yes" xml:space="preserve">
          <source>If this attempts to move past the beginning or end of the buffer (or the limits of the accessible portion, when narrowing is in effect), it signals an error with error symbol &lt;code&gt;beginning-of-buffer&lt;/code&gt; or &lt;code&gt;end-of-buffer&lt;/code&gt;.</source>
          <target state="translated">Если это пытается переместиться за начало или конец буфера (или за пределы доступной части, когда действует сужение), он сигнализирует об ошибке с символом ошибки &amp;laquo; &lt;code&gt;beginning-of-buffer&lt;/code&gt; или &amp;laquo; &lt;code&gt;end-of-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d89a8b26977d8b1cba2b979d344a05b8f10a0e1c" translate="yes" xml:space="preserve">
          <source>If this buffer local variable is non-&lt;code&gt;nil&lt;/code&gt;, a single character which usually terminates a comment doesn&amp;rsquo;t do so when that character is escaped. This is used in C and C++ Modes, where line comments starting with &amp;lsquo;</source>
          <target state="translated">Если эта локальная переменная буфера не равна &lt;code&gt;nil&lt;/code&gt; , одиночный символ, который обычно завершает комментарий, не делает этого, когда этот символ экранирован. Это используется в режимах C и C ++, где строковые комментарии начинаются с '</target>
        </trans-unit>
        <trans-unit id="2a78281c6da18de26fb269a25c35ff41b470eed4" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs Lisp files and buffers are evaluated using lexical binding instead of dynamic binding. (However, special variables are still dynamically bound; see below.) If &lt;code&gt;nil&lt;/code&gt;, dynamic binding is used for all local variables. This variable is typically set for a whole Emacs Lisp file, as a file local variable (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;). Note that unlike other such variables, this one must be set in the first line of a file.</source>
          <target state="translated">Если эта локальная в буфере переменная не равна &lt;code&gt;nil&lt;/code&gt; , файлы и буферы Emacs Lisp оцениваются с использованием лексической привязки вместо динамической. (Однако специальные переменные по-прежнему связаны динамически; см. Ниже.) Если &lt;code&gt;nil&lt;/code&gt; , динамическое связывание используется для всех локальных переменных. Эта переменная обычно устанавливается для всего файла Emacs Lisp как локальная переменная &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;файла&lt;/a&gt; (см. Локальные переменные файла ). Обратите внимание, что в отличие от других подобных переменных, эта должна быть установлена ​​в первой строке файла.</target>
        </trans-unit>
        <trans-unit id="5fd544423344dffb99b915492fe4d50fbde43e7e" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, it defines a &lt;em&gt;line prefix&lt;/em&gt; which Emacs displays at the start of every non-continuation line. Its value may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;). The value is interpreted in the same way as a &lt;code&gt;display&lt;/code&gt; text property. See &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;.</source>
          <target state="translated">Если эта локальная в буфере переменная не равна &lt;code&gt;nil&lt;/code&gt; , она определяет &lt;em&gt;префикс строки,&lt;/em&gt; который Emacs отображает в начале каждой &lt;em&gt;строки, не&lt;/em&gt; являющейся продолжением. Его значение может быть строкой или изображением (см. &amp;laquo; &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Другие характеристики отображения&amp;raquo;&lt;/a&gt; ) или отрезком пробелов, например, указанным в свойствах отображения &lt;code&gt;:width&lt;/code&gt; или &lt;code&gt;:align-to&lt;/code&gt; (см. &amp;laquo; &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Указанное пространство&amp;raquo;&lt;/a&gt; ). Значение интерпретируется так же, как свойство &lt;code&gt;display&lt;/code&gt; текста. См. Раздел &lt;a href=&quot;display-property#Display-Property&quot;&gt;Свойство отображения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ed4e323befa87981b8acf726e4f3b6b4fee8d81" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, it defines a &lt;em&gt;wrap prefix&lt;/em&gt; which Emacs displays at the start of every continuation line. (If lines are truncated, &lt;code&gt;wrap-prefix&lt;/code&gt; is never used.) Its value may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;). The value is interpreted in the same way as a &lt;code&gt;display&lt;/code&gt; text property. See &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;.</source>
          <target state="translated">Если эта локальная в буфере переменная не равна &lt;code&gt;nil&lt;/code&gt; , она определяет &lt;em&gt;префикс&lt;/em&gt; переноса, который Emacs отображает в начале каждой строки продолжения. (Если строки усечены, &lt;code&gt;wrap-prefix&lt;/code&gt; никогда не используется.) Его значение может быть строкой или изображением (см. &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Другие спецификации дисплея&lt;/a&gt; ) или отрезком пробела, например, указанным в свойствах &lt;code&gt;:width&lt;/code&gt; или &lt;code&gt;:align-to&lt;/code&gt; display ( см. &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Указанное пространство&lt;/a&gt; ). Значение интерпретируется так же, как свойство &lt;code&gt;display&lt;/code&gt; текста. См. Раздел &lt;a href=&quot;display-property#Display-Property&quot;&gt;Свойство отображения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b2093e43127b528d7fa6ef0ef8cefd2e58a3d1e" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, lines that extend beyond the right edge of the window are truncated; otherwise, they are continued. As a special exception, the variable &lt;code&gt;truncate-partial-width-windows&lt;/code&gt; takes precedence in &lt;em&gt;partial-width&lt;/em&gt; windows (i.e., windows that do not occupy the entire frame width).</source>
          <target state="translated">Если эта локальная переменная буфера не равна &lt;code&gt;nil&lt;/code&gt; , строки, выходящие за правый край окна, усекаются; в противном случае они продолжаются. В качестве особого исключения переменная &lt;code&gt;truncate-partial-width-windows&lt;/code&gt; имеет приоритет в окнах &lt;em&gt;частичной ширины&lt;/em&gt; (т. Е. Окнах, которые не занимают всю ширину кадра).</target>
        </trans-unit>
        <trans-unit id="432a86badb47f48e7893242df18107541092759f" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, the buffer will have its state saved in the desktop file at desktop save. If the value is a function, it is called at desktop save with argument &lt;var&gt;desktop-dirname&lt;/var&gt;, and its value is saved in the desktop file along with the state of the buffer for which it was called. When file names are returned as part of the auxiliary information, they should be formatted using the call</source>
          <target state="translated">Если эта локальная переменная буфера не равна &lt;code&gt;nil&lt;/code&gt; , состояние буфера будет сохранено в файле рабочего стола при сохранении рабочего стола. Если значением является функция, она вызывается при сохранении рабочего стола с аргументом &lt;var&gt;desktop-dirname&lt;/var&gt; , и его значение сохраняется в файле рабочего стола вместе с состоянием буфера, для которого оно было вызвано. Когда имена файлов возвращаются как часть вспомогательной информации, их следует форматировать с помощью вызова</target>
        </trans-unit>
        <trans-unit id="aea1538287ef132a6f081b048de51ee7126dd3d0" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, the size of any window displaying the buffer cannot normally be changed. Deleting a window or changing the frame&amp;rsquo;s size may still change the window&amp;rsquo;s size, if there is no choice.</source>
          <target state="translated">Если эта локальная переменная буфера не равна &lt;code&gt;nil&lt;/code&gt; , размер любого окна, отображающего буфер, обычно не может быть изменен. Удаление окна или изменение размера фрейма может по-прежнему изменять размер окна, если нет выбора.</target>
        </trans-unit>
        <trans-unit id="ca6416739929a65d7f2b8c3c029749537cabf4cd" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs displays &amp;lsquo;</source>
          <target state="translated">Если эта локальная в буфере переменная не равна &lt;code&gt;nil&lt;/code&gt; , тогда Emacs отображает '</target>
        </trans-unit>
        <trans-unit id="f7b2357a9b265553c83c5f86a847eef1e6ada00f" translate="yes" xml:space="preserve">
          <source>If this command acts on the entire buffer (i.e., if called interactively with the mark inactive, or called from Lisp with &lt;var&gt;end&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt;), it also deletes all trailing lines at the end of the buffer if the variable &lt;code&gt;delete-trailing-lines&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если эта команда воздействует на весь буфер (т. Е. Если вызывается интерактивно с неактивной меткой или вызывается из Lisp с &lt;var&gt;end&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; ), она также удаляет все завершающие строки в конце буфера, если переменная &lt;code&gt;delete-trailing-lines&lt;/code&gt; не является - &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10e05f72983ccd5f7221cc5bbedbc6e56e4772a2" translate="yes" xml:space="preserve">
          <source>If this date doesn&amp;rsquo;t exist (if you&amp;rsquo;re running this on January 31st, for instance), then the date will be shifted back until you get a valid date (which will be February 28th or 29th, depending).</source>
          <target state="translated">Если этой даты не существует (например, если вы запускаете ее 31 января), то дата будет сдвинута назад до тех пор, пока вы не получите действительную дату (это будет 28 или 29 февраля, в зависимости от этого).</target>
        </trans-unit>
        <trans-unit id="6021a1625b26607bebed3ac67c79e7ec4507fa5a" translate="yes" xml:space="preserve">
          <source>If this flag is non-&lt;code&gt;nil&lt;/code&gt;, it says that the window has been scrolled explicitly by the Lisp program, and the value of the window&amp;rsquo;s &lt;code&gt;start&lt;/code&gt; was set for redisplay to honor. This affects what the next redisplay does if point is off the screen: instead of scrolling the window to show the text around point, it moves point to a location that is on the screen.</source>
          <target state="translated">Если этот флаг не - &lt;code&gt;nil&lt;/code&gt; , это говорит о том , что окно прокручивается явно программой Лиспа, и значение окна &lt;code&gt;start&lt;/code&gt; было установлено для перерисовки в честь. Это влияет на то, что делает следующее повторное отображение, если точка находится за пределами экрана: вместо прокрутки окна, чтобы показать текст вокруг точки, он перемещает точку в место, которое находится на экране.</target>
        </trans-unit>
        <trans-unit id="d6d906318560283537873b00d59001402d7d79d1" translate="yes" xml:space="preserve">
          <source>If this function chooses a window on another frame, it makes that frame visible and, unless &lt;var&gt;alist&lt;/var&gt; contains an &lt;code&gt;inhibit-switch-frame&lt;/code&gt; entry, raises that frame if necessary.</source>
          <target state="translated">Если эта функция выбирает окно в другом фрейме, она делает этот фрейм видимым и, если в &lt;var&gt;alist&lt;/var&gt; не содержится запись запрета &lt;code&gt;inhibit-switch-frame&lt;/code&gt; , при необходимости поднимает этот фрейм.</target>
        </trans-unit>
        <trans-unit id="083f00a7a5dc646d622c67db6c142468e4d124a3" translate="yes" xml:space="preserve">
          <source>If this function finds a match, the index of the first character beyond the match is available as &lt;code&gt;(match-end 0)&lt;/code&gt;. See &lt;a href=&quot;match-data#Match-Data&quot;&gt;Match Data&lt;/a&gt;.</source>
          <target state="translated">Если эта функция находит совпадение, индекс первого символа после совпадения доступен как &lt;code&gt;(match-end 0)&lt;/code&gt; . См. &lt;a href=&quot;match-data#Match-Data&quot;&gt;Данные соответствия&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00afe0829cdcf5109e09154bc5fa5ac61c0045b3" translate="yes" xml:space="preserve">
          <source>If this function is called more than once for the same &lt;var&gt;tabname&lt;/var&gt;, subsequent calls add the definitions in &lt;var&gt;definitions&lt;/var&gt; to &lt;var&gt;tabname&lt;/var&gt;, rather than overwriting the entire original contents. (A subsequent call only overrides abbrevs explicitly redefined or undefined in &lt;var&gt;definitions&lt;/var&gt;.)</source>
          <target state="translated">Если эта функция вызывается более одного раза для одного и того же имени &lt;var&gt;tabname&lt;/var&gt; , последующие вызовы добавляют определения в &lt;var&gt;definitions&lt;/var&gt; к имени &lt;var&gt;tabname&lt;/var&gt; , а не перезаписывают все исходное содержимое. (Последующий вызов заменяет только сокращения, явно переопределенные или неопределенные в &lt;var&gt;definitions&lt;/var&gt; .)</target>
        </trans-unit>
        <trans-unit id="ce7c75305a7d83b0473e741f01d7a4f352cc4272" translate="yes" xml:space="preserve">
          <source>If this function reaches the end of the buffer (or of the accessible portion, if narrowing is in effect), it positions point there. No error is signaled.</source>
          <target state="translated">Если эта функция достигает конца буфера (или доступной части,если сужается),то она позиционируется там.Ошибка не сигнализируется.</target>
        </trans-unit>
        <trans-unit id="869432596a2a5223e5603635258e0bd03b99e0ab" translate="yes" xml:space="preserve">
          <source>If this function returns &lt;code&gt;fail&lt;/code&gt;, &lt;code&gt;display-buffer&lt;/code&gt; will skip the execution of any further display actions and return &lt;code&gt;nil&lt;/code&gt; immediately. If this function returns &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;display-buffer&lt;/code&gt; will continue with the next display action, if any.</source>
          <target state="translated">Если эта функция вернет &lt;code&gt;fail&lt;/code&gt; , &lt;code&gt;display-buffer&lt;/code&gt; пропустит выполнение любых дальнейших действий отображения и немедленно вернет &lt;code&gt;nil&lt;/code&gt; . Если эта функция возвращает &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;display-buffer&lt;/code&gt; продолжит выполнение следующего действия display, если таковое имеется.</target>
        </trans-unit>
        <trans-unit id="4cf9767642228285268994a6ab6915acdd90f010" translate="yes" xml:space="preserve">
          <source>If this function returns a vector, Emacs will decide, as part of the text encoding or decoding process, what eol conversion to use. For decoding, the end-of-line format of the text is auto-detected, and the eol conversion is set to match it (e.g., DOS-style CRLF format will imply &lt;code&gt;dos&lt;/code&gt; eol conversion). For encoding, the eol conversion is taken from the appropriate default coding system (e.g., default value of &lt;code&gt;buffer-file-coding-system&lt;/code&gt; for &lt;code&gt;buffer-file-coding-system&lt;/code&gt;), or from the default eol conversion appropriate for the underlying platform.</source>
          <target state="translated">Если эта функция возвращает вектор, Emacs решит, как часть процесса кодирования или декодирования текста, какое преобразование eol использовать. Для декодирования, конец-линии формата текста автоматически определяется, и преобразование EOL устанавливается в соответствии с ней (например, формат CRLF DOS-стиль будет означать &lt;code&gt;dos&lt;/code&gt; преобразования EOL). Для кодирования преобразование eol берется из соответствующей системы кодирования по умолчанию (например, значение по умолчанию для &lt;code&gt;buffer-file-coding-system&lt;/code&gt; для &lt;code&gt;buffer-file-coding-system&lt;/code&gt; ) или из преобразования eol по умолчанию, подходящего для базовой платформы.</target>
        </trans-unit>
        <trans-unit id="957e091db8006f7d5019b6610a727feaefde8377" translate="yes" xml:space="preserve">
          <source>If this is &lt;code&gt;above&lt;/code&gt;, the window-system will display the window that corresponds to the frame above all other window-system windows that do not have the &lt;code&gt;above&lt;/code&gt; property set. If this is &lt;code&gt;nil&lt;/code&gt;, the frame&amp;rsquo;s window is displayed below all windows that have the &lt;code&gt;above&lt;/code&gt; property set and above all windows that have the &lt;code&gt;below&lt;/code&gt; property set. If this is &lt;code&gt;below&lt;/code&gt;, the frame&amp;rsquo;s window is displayed below all windows that do not have the &lt;code&gt;below&lt;/code&gt; property set.</source>
          <target state="translated">Если это &lt;code&gt;above&lt;/code&gt; , оконная система будет отображать окно, соответствующее фрейму, над всеми другими окнами оконной системы, для которых не установлено указанное &lt;code&gt;above&lt;/code&gt; свойство. Если это &lt;code&gt;nil&lt;/code&gt; , окно фрейма отображается под всеми окнами, для которых установлено &lt;code&gt;above&lt;/code&gt; свойство, и над всеми окнами, для которых установлено указанное &lt;code&gt;below&lt;/code&gt; свойство. Если это &lt;code&gt;below&lt;/code&gt; , окно фрейма отображается под всеми окнами, для которых не заданы указанные &lt;code&gt;below&lt;/code&gt; свойства.</target>
        </trans-unit>
        <trans-unit id="a1b52e2df3a9e454258b898cfd79cd310a2b4629" translate="yes" xml:space="preserve">
          <source>If this is &lt;code&gt;nil&lt;/code&gt;, minibuffer-only frames are never resized automatically.</source>
          <target state="translated">Если это &lt;code&gt;nil&lt;/code&gt; , размер фреймов только для минибуфера никогда не изменяется автоматически.</target>
        </trans-unit>
        <trans-unit id="1b97a488003cc5ca076256ac37cb97d8ce9b384b" translate="yes" xml:space="preserve">
          <source>If this is a cons cell with the symbol &lt;code&gt;text-pixels&lt;/code&gt; in its &lt;small&gt;CAR&lt;/small&gt;, the &lt;small&gt;CDR&lt;/small&gt; of that cell specifies the width of the frame&amp;rsquo;s text area in pixels.</source>
          <target state="translated">Если это cons-ячейка с &lt;code&gt;text-pixels&lt;/code&gt; символа в ее &lt;small&gt;CAR&lt;/small&gt; , &lt;small&gt;CDR&lt;/small&gt; этой ячейки определяет ширину текстовой области фрейма в пикселях.</target>
        </trans-unit>
        <trans-unit id="ceab50f0b43f6e3c6d961c1c4b3442015452d10b" translate="yes" xml:space="preserve">
          <source>If this is a function, that function is called with the minibuffer-only frame to be resized as sole argument. At the time this function is called, the buffer of the minibuffer window of that frame is the buffer whose contents will be shown the next time that window is redisplayed. The function is expected to fit the frame to the buffer in some appropriate way.</source>
          <target state="translated">Если это функция,то она вызывается с кадром только для минибуфера,который должен быть изменен по размеру в качестве единственного аргумента.При вызове этой функции буфером окна минибуфера этого кадра является буфер,содержимое которого будет показано при следующем повторном отображении этого кадра.Ожидается,что функция подгонит кадр под буфер каким-либо подходящим образом.</target>
        </trans-unit>
        <trans-unit id="ba58f7a102aacf78663d445e616b82cacc64e985" translate="yes" xml:space="preserve">
          <source>If this is a number, Emacs performs gamma correction which adjusts the brightness of all colors. The value should be the screen gamma of your display.</source>
          <target state="translated">Если это число,Emacs выполняет гамма-коррекцию,которая регулирует яркость всех цветов.Значение должно быть гаммой экрана вашего дисплея.</target>
        </trans-unit>
        <trans-unit id="214dc66d885f284b40d9e4dd95560530b6fa7bad" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;fit-window-to-buffer&lt;/code&gt; can resize windows horizontally. If this is &lt;code&gt;nil&lt;/code&gt; (the default) &lt;code&gt;fit-window-to-buffer&lt;/code&gt; never resizes windows horizontally. If this is &lt;code&gt;only&lt;/code&gt;, it can resize windows horizontally only. Any other value means &lt;code&gt;fit-window-to-buffer&lt;/code&gt; can resize windows in both dimensions.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;fit-window-to-buffer&lt;/code&gt; может изменять размер окон по горизонтали. Если это &lt;code&gt;nil&lt;/code&gt; (по умолчанию), &lt;code&gt;fit-window-to-buffer&lt;/code&gt; никогда не изменяет размеры окон по горизонтали. Если это &lt;code&gt;only&lt;/code&gt; , он может изменять размер окон только по горизонтали. Любое другое значение означает, что &lt;code&gt;fit-window-to-buffer&lt;/code&gt; может изменять размер окон в обоих измерениях.</target>
        </trans-unit>
        <trans-unit id="68fad749eafc426bf4990d05bc7ff44d68a8f27b" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, Edebug saves and restores point in all displayed buffers.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , Edebug сохраняет и восстанавливает точку во всех отображаемых буферах.</target>
        </trans-unit>
        <trans-unit id="c7d3e31eef250c7f036160920ec649b83cac0e19" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, Edebug saves and restores the window configuration. That takes some time, so if your program does not care what happens to the window configurations, it is better to set this variable to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , Edebug сохраняет и восстанавливает конфигурацию окна. Это займет некоторое время, поэтому, если вашей программе все равно, что происходит с конфигурациями окон, лучше установить для этой переменной значение &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25397ea9796e92b2f97a1c9835eb561c55c0d2c6" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, Lisp programs and the Emacs user can use the mark even when it is inactive. This option affects the behavior of Transient Mark mode. When the option is non-&lt;code&gt;nil&lt;/code&gt;, deactivation of the mark turns off region highlighting, but commands that use the mark behave as if the mark were still active.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , программы на Лиспе и пользователь Emacs могут использовать метку, даже если она неактивна. Эта опция влияет на поведение режима Transient Mark. Если параметр не равен &lt;code&gt;nil&lt;/code&gt; , деактивация метки отключает выделение области, но команды, использующие метку, ведут себя так, как если бы метка все еще была активной.</target>
        </trans-unit>
        <trans-unit id="32e5f481bd60270d4d523952079fe2b86a69f722" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, activation of the minibuffer raises the frame that the minibuffer window is in.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , активация минибуфера поднимает кадр, в котором находится окно минибуфера.</target>
        </trans-unit>
        <trans-unit id="4cd5343813932e73cf5340856c97ee940339918f" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, it specifies how Emacs should ring the bell. Its value should be a function of no arguments. If this is non-&lt;code&gt;nil&lt;/code&gt;, it takes precedence over the &lt;code&gt;visible-bell&lt;/code&gt; variable.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , это указывает, как Emacs должен звонить в колокол. Его значение должно быть функцией без аргументов. Если это не &lt;code&gt;nil&lt;/code&gt; , оно имеет приоритет перед переменной &lt;code&gt;visible-bell&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efc97046a89125b922e5821a3169617150b06d88" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, it suppresses the display of any truncation and continuation glyphs (see &lt;a href=&quot;truncation#Truncation&quot;&gt;Truncation&lt;/a&gt;) for all buffers displayed by this frame. This is useful to eliminate such glyphs when fitting a frame to its buffer via &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;).</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , он подавляет отображение любых глифов усечения и продолжения (см. &lt;a href=&quot;truncation#Truncation&quot;&gt;Усечение&lt;/a&gt; ) для всех буферов, отображаемых этим кадром. Это полезно для устранения таких глифов при подгонке кадра к его буферу с помощью &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (см. &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Изменение размера окна&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="15bc554b1227e9ff4e2721564b7c2b2775503828" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, its value specifies the current input method function.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , его значение определяет функцию текущего метода ввода.</target>
        </trans-unit>
        <trans-unit id="d8ebd7b13853249094ed488c8f78e6577cc51264" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, lines exactly as wide as the window (not counting the final newline character) are not continued. Instead, when point is at the end of the line, the cursor appears in the right fringe.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , строки шириной, равной ширине окна (не считая последнего символа новой строки), не продолжаются. Вместо этого, когда точка находится в конце строки, курсор появляется в правой части.</target>
        </trans-unit>
        <trans-unit id="e8990e9caa5c1237e7d8e51a9c922fecc23e5895" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, normal evaluation of defining forms such as &lt;code&gt;defun&lt;/code&gt; and &lt;code&gt;defmacro&lt;/code&gt; instruments them for Edebug. This applies to &lt;code&gt;eval-defun&lt;/code&gt;, &lt;code&gt;eval-region&lt;/code&gt;, &lt;code&gt;eval-buffer&lt;/code&gt;, and &lt;code&gt;eval-current-buffer&lt;/code&gt;.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , обычная оценка определяющих форм, таких как &lt;code&gt;defun&lt;/code&gt; и &lt;code&gt;defmacro&lt;/code&gt; ,определяет их для Edebug. Это применимо к &lt;code&gt;eval-defun&lt;/code&gt; , &lt;code&gt;eval-region&lt;/code&gt; , &lt;code&gt;eval-buffer&lt;/code&gt; и &lt;code&gt;eval-current-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d6c08e8d8b954fd9b6294fd0ec73a15ae4084db" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, that means to print quoted forms using abbreviated reader syntax, e.g., &lt;code&gt;(quote foo)&lt;/code&gt; prints as &lt;code&gt;'foo&lt;/code&gt;, and &lt;code&gt;(function foo)&lt;/code&gt; as &lt;code&gt;#'foo&lt;/code&gt;. The default is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , это означает, что формы в кавычках должны печататься с использованием сокращенного синтаксиса читателя, например, &lt;code&gt;(quote foo)&lt;/code&gt; печатается как &lt;code&gt;'foo&lt;/code&gt; , а &lt;code&gt;(function foo)&lt;/code&gt; как &lt;code&gt;#'foo&lt;/code&gt; . По умолчанию &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bd893cb621263d5a8aed807abb674c372296c4e" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, the byte compiler generates compiled files that are set up for dynamic function loading.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , байтовый компилятор генерирует скомпилированные файлы, которые настроены для динамической загрузки функций.</target>
        </trans-unit>
        <trans-unit id="f671cbf7a74fb9649d8457f3817e33c450312bf6" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, the byte compiler generates compiled files that are set up for dynamic loading of documentation strings.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , байтовый компилятор генерирует скомпилированные файлы, которые настроены для динамической загрузки строк документации.</target>
        </trans-unit>
        <trans-unit id="b07863475998c4a32689d25fb90d69b1da1bf839" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, the commands &lt;code&gt;eval-defun&lt;/code&gt;, &lt;code&gt;eval-region&lt;/code&gt;, &lt;code&gt;eval-buffer&lt;/code&gt;, and &lt;code&gt;eval-current-buffer&lt;/code&gt; instrument all forms, even those that don&amp;rsquo;t define anything. This doesn&amp;rsquo;t apply to loading or evaluations in the minibuffer.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , все формы команд &lt;code&gt;eval-defun&lt;/code&gt; , &lt;code&gt;eval-region&lt;/code&gt; , &lt;code&gt;eval-buffer&lt;/code&gt; и &lt;code&gt;eval-current-buffer&lt;/code&gt; - даже те, которые ничего не определяют. Это не относится к загрузке или оценке в минибуфере.</target>
        </trans-unit>
        <trans-unit id="44390378a6c86190f73e863e432a1f4ef3129c93" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, the syntax scanning functions, like &lt;code&gt;forward-sexp&lt;/code&gt;, pay attention to &lt;code&gt;syntax-table&lt;/code&gt; text properties. Otherwise they use only the current syntax table.</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , функции сканирования синтаксиса, такие как &lt;code&gt;forward-sexp&lt;/code&gt; , обращают внимание на свойства текста &lt;code&gt;syntax-table&lt;/code&gt; . В противном случае они используют только текущую таблицу синтаксиса.</target>
        </trans-unit>
        <trans-unit id="31979f380b3a283a11adf5b42adad210b4c1c1c0" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, then this frame is not eligible as candidate for the functions &lt;code&gt;next-frame&lt;/code&gt;, &lt;code&gt;previous-frame&lt;/code&gt; (see &lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;Finding All Frames&lt;/a&gt;) and &lt;code&gt;other-frame&lt;/code&gt;, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Frame-Commands.html#Frame-Commands&quot;&gt;Frame Commands&lt;/a&gt; in</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , то этот кадр не подходит в качестве кандидата для функций &lt;code&gt;next-frame&lt;/code&gt; , &lt;code&gt;previous-frame&lt;/code&gt; (см. &lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;Поиск всех кадров&lt;/a&gt; ) и &lt;code&gt;other-frame&lt;/code&gt; , см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Frame-Commands.html#Frame-Commands&quot;&gt;Команды кадров&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="7474f5eb32084fc7c649f56db83b1ebc853f111c" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, trace each function entry and exit. Tracing output is displayed in a buffer named</source>
          <target state="translated">Если это не &lt;code&gt;nil&lt;/code&gt; , проследите каждый вход и выход функции. Выходные данные трассировки отображаются в буфере с именем</target>
        </trans-unit>
        <trans-unit id="966b0b23e2e6a979368c63d07ebeae90cd5c5031" translate="yes" xml:space="preserve">
          <source>If this is non-zero, killing Emacs while this process is still running does not ask for confirmation about killing the process.</source>
          <target state="translated">Если это ненулевое значение,то убийство Emacs во время выполнения этого процесса не требует подтверждения об убийстве процесса.</target>
        </trans-unit>
        <trans-unit id="d54a1a91cde2285cd5aaadb10fc1f42680cf6093" translate="yes" xml:space="preserve">
          <source>If this is specified, the value should be the customization group for this mode. (Not all major modes have one.) The command &lt;code&gt;customize-mode&lt;/code&gt; uses this. &lt;code&gt;define-derived-mode&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; automatically define the specified customization group.</source>
          <target state="translated">Если это указано, значение должно быть группой настройки для этого режима. (Не во всех основных режимах он есть.) Его использует команда &lt;code&gt;customize-mode&lt;/code&gt; . &lt;code&gt;define-derived-mode&lt;/code&gt; делает &lt;em&gt;не&lt;/em&gt; автоматически определять указанную группу настройки.</target>
        </trans-unit>
        <trans-unit id="04620961e87f58784713e3322ba28ec85c00503d" translate="yes" xml:space="preserve">
          <source>If this mode is appropriate only for specially-prepared text produced by the mode itself (rather than by the user typing at the keyboard or by an external file), then the major mode command symbol should have a property named &lt;code&gt;mode-class&lt;/code&gt; with value &lt;code&gt;special&lt;/code&gt;, put on as follows:</source>
          <target state="translated">Если этот режим подходит только для специально подготовленного текста, созданного самим режимом (а не вводом пользователем на клавиатуре или внешним файлом), то символ команды основного режима должен иметь свойство с именем &lt;code&gt;mode-class&lt;/code&gt; со значением &lt;code&gt;special&lt;/code&gt; , наденьте следующее:</target>
        </trans-unit>
        <trans-unit id="e52d7d62fa08aa799be7c38c4bcea4fc9b87548a" translate="yes" xml:space="preserve">
          <source>If this option is &lt;code&gt;nil&lt;/code&gt; (the default), &lt;code&gt;scroll-up-command&lt;/code&gt; and &lt;code&gt;scroll-down-command&lt;/code&gt; simply signal an error when no more scrolling is possible.</source>
          <target state="translated">Если этот параметр равен &lt;code&gt;nil&lt;/code&gt; (по умолчанию), команды &lt;code&gt;scroll-up-command&lt;/code&gt; и &lt;code&gt;scroll-down-command&lt;/code&gt; просто сигнализируют об ошибке, когда прокрутка становится невозможной.</target>
        </trans-unit>
        <trans-unit id="c72c6e58405043640334e93fb6f7182db318cd87" translate="yes" xml:space="preserve">
          <source>If this option is &lt;code&gt;nil&lt;/code&gt; (the default), a frame&amp;rsquo;s text pixel size is usually rounded to a multiple of the current values of that frame&amp;rsquo;s &lt;code&gt;frame-char-height&lt;/code&gt; and &lt;code&gt;frame-char-width&lt;/code&gt; whenever the frame is resized. If this is non-&lt;code&gt;nil&lt;/code&gt;, no rounding occurs, hence frame sizes can increase/decrease by one pixel.</source>
          <target state="translated">Если этот параметр равен &lt;code&gt;nil&lt;/code&gt; (по умолчанию), размер пикселя текста кадра обычно округляется до кратного числа текущих значений &lt;code&gt;frame-char-height&lt;/code&gt; и &lt;code&gt;frame-char-width&lt;/code&gt; при изменении размера кадра. Если это не &lt;code&gt;nil&lt;/code&gt; , округление не происходит, следовательно, размеры кадра могут увеличиваться / уменьшаться на один пиксель.</target>
        </trans-unit>
        <trans-unit id="54e6a84c9b36ca0d120b8c3a7c43d66826e7e66f" translate="yes" xml:space="preserve">
          <source>If this option is &lt;code&gt;nil&lt;/code&gt;, changing a frame&amp;rsquo;s font, menu bar, tool bar, internal borders, fringes or scroll bars may resize its outer frame in order to keep the number of columns or lines of its text area unaltered. If this option is &lt;code&gt;t&lt;/code&gt;, no such resizing is done.</source>
          <target state="translated">Если этот параметр равен &lt;code&gt;nil&lt;/code&gt; , изменение шрифта фрейма, строки меню, панели инструментов, внутренних границ, полос или полос прокрутки может изменить размер его внешнего фрейма, чтобы количество столбцов или строк в текстовой области оставалось неизменным. Если этот параметр равен &lt;code&gt;t&lt;/code&gt; , такое изменение размера не выполняется.</target>
        </trans-unit>
        <trans-unit id="bc3d02de48ee15116c952f577e906c1c9aa16a73" translate="yes" xml:space="preserve">
          <source>If this option is &lt;code&gt;t&lt;/code&gt;, whenever a scrolling command moves point off-window, Emacs tries to adjust point to keep the cursor at its old vertical position in the window, rather than the window edge.</source>
          <target state="translated">Если эта опция - &lt;code&gt;t&lt;/code&gt; , всякий раз, когда команда прокрутки перемещает точку за пределы окна, Emacs пытается настроить точку, чтобы курсор оставался в его старом вертикальном положении в окне, а не на краю окна.</target>
        </trans-unit>
        <trans-unit id="c9c66e4f3c606fe9374e63f54b58084764036d09" translate="yes" xml:space="preserve">
          <source>If this option is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;fit-window-to-buffer&lt;/code&gt; can fit a frame to its buffer. A frame is fit if and only if its root window is a live window and this option is non-&lt;code&gt;nil&lt;/code&gt;. If this is &lt;code&gt;horizontally&lt;/code&gt;, frames are fit horizontally only. If this is &lt;code&gt;vertically&lt;/code&gt;, frames are fit vertically only. Any other non-&lt;code&gt;nil&lt;/code&gt; value means frames can be resized in both dimensions.</source>
          <target state="translated">Если этот параметр не равен &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;fit-window-to-buffer&lt;/code&gt; может уместить фрейм в свой буфер. Фрейм подходит тогда и только тогда, когда его корневое окно является активным окном, и этот параметр не равен &lt;code&gt;nil&lt;/code&gt; . Если это &lt;code&gt;horizontally&lt;/code&gt; , рамки подходят только по горизонтали. Если это &lt;code&gt;vertically&lt;/code&gt; , рамки подходят только вертикально. Любое другое значение, отличное от &lt;code&gt;nil&lt;/code&gt; , означает, что размеры фреймов можно изменять в обоих измерениях.</target>
        </trans-unit>
        <trans-unit id="5a164d6ee90c48aec0e7a278ea57b7f2b904c6c5" translate="yes" xml:space="preserve">
          <source>If this option is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;kill-region&lt;/code&gt; does not signal an error if the buffer or text is read-only. Instead, it simply returns, updating the kill ring but not changing the buffer.</source>
          <target state="translated">Если этот параметр не равен &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;kill-region&lt;/code&gt; не сигнализирует об ошибке, если буфер или текст доступны только для чтения. Вместо этого он просто возвращается, обновляя список уничтожений, но не изменяя буфер.</target>
        </trans-unit>
        <trans-unit id="22125abcac48d44de59b6d6f7908442688ad4bf5" translate="yes" xml:space="preserve">
          <source>If this option is non-&lt;code&gt;nil&lt;/code&gt;, Emacs moves the mouse pointer to the frame selected by &lt;code&gt;select-frame-set-input-focus&lt;/code&gt;. That function is used by a number of commands like, for example, &lt;code&gt;other-frame&lt;/code&gt; and &lt;code&gt;pop-to-buffer&lt;/code&gt;.</source>
          <target state="translated">Если этот параметр не равен &lt;code&gt;nil&lt;/code&gt; , Emacs перемещает указатель мыши на фрейм, выбранный с помощью &lt;code&gt;select-frame-set-input-focus&lt;/code&gt; . Эта функция используется рядом команд, например, &lt;code&gt;other-frame&lt;/code&gt; и &lt;code&gt;pop-to-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6926437ee3cbc9261b34b88045a049cd4e85b2e" translate="yes" xml:space="preserve">
          <source>If this option is non-&lt;code&gt;nil&lt;/code&gt;, then rather than stopping at the first suffix that exists, &lt;code&gt;load&lt;/code&gt; tests them all, and uses whichever file is the newest.</source>
          <target state="translated">Если этот параметр не равен &lt;code&gt;nil&lt;/code&gt; , то вместо того, чтобы останавливаться на первом существующем суффиксе, &lt;code&gt;load&lt;/code&gt; проверяет их все и использует тот файл, который является самым новым.</target>
        </trans-unit>
        <trans-unit id="7938d876e61b6c7f68a93ccf5def31340f0740d4" translate="yes" xml:space="preserve">
          <source>If this parameter is a number, the bottom edge of the frame never appears below the bottom edge of its display or parent frame. Moreover, as many pixels of the frame as specified by that number will remain visible when the frame is moved against any of the remaining edges of its display or parent frame. Setting this parameter is useful to guard against dragging a child frame with a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;drag-with-mode-line&lt;/code&gt; parameter completely out of the area of its parent frame.</source>
          <target state="translated">Если этот параметр является числом, нижний край фрейма никогда не будет ниже нижнего края его дисплея или родительского фрейма. Более того, столько пикселей кадра, сколько указано этим числом, будет оставаться видимым, когда кадр перемещается против любого из оставшихся краев его дисплея или родительского кадра. Установка этого параметра полезна для защиты от перетаскивания дочернего кадра с &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;drag-with-mode-line&lt;/code&gt; полностью за пределы области его родительского кадра.</target>
        </trans-unit>
        <trans-unit id="4992c37fede8a3de36e28c682e030ea0ca3db304" translate="yes" xml:space="preserve">
          <source>If this parameter is a number, the top edge of the frame never appears above the top edge of its display or parent frame. Moreover, as many pixels of the frame as specified by that number will remain visible when the frame is moved against any of the remaining edges of its display or parent frame. Setting this parameter is useful to guard against dragging a child frame with a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;drag-with-header-line&lt;/code&gt; parameter completely out of the area of its parent frame.</source>
          <target state="translated">Если этот параметр является числом, верхний край фрейма никогда не появляется над верхним краем его отображения или родительского фрейма. Более того, столько пикселей кадра, сколько указано этим числом, будет оставаться видимым, когда кадр перемещается против любого из оставшихся краев его дисплея или родительского кадра. Установка этого параметра полезна для защиты от перетаскивания дочернего фрейма с &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;drag-with-header-line&lt;/code&gt; полностью за пределы области его родительского фрейма.</target>
        </trans-unit>
        <trans-unit id="10409beb3adb01bf40f542ff77e3e5110bb6c63e" translate="yes" xml:space="preserve">
          <source>If this property is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a keymap for a portion of the text. This keymap is used when the character after point is within the overlay, and takes precedence over most other keymaps. See &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Active Keymaps&lt;/a&gt;.</source>
          <target state="translated">Если это свойство не равно &lt;code&gt;nil&lt;/code&gt; , оно указывает раскладку для части текста. Эта раскладка используется, когда символ после точки находится внутри оверлея, и имеет приоритет над большинством других раскладок. См. &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Активные таблицы ключей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d2b81550b31723ed604392c207f47173dad656f" translate="yes" xml:space="preserve">
          <source>If this property is non-&lt;code&gt;nil&lt;/code&gt;, the overlay is deleted automatically if it becomes empty (i.e., if its length becomes zero). If you give an empty overlay (see &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;empty overlay&lt;/a&gt;) a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;evaporate&lt;/code&gt; property, that deletes it immediately. Note that, unless an overlay has this property, it will not be deleted when the text between its starting and ending positions is deleted from the buffer.</source>
          <target state="translated">Если это свойство не равно &lt;code&gt;nil&lt;/code&gt; , наложение удаляется автоматически, если оно становится пустым (т. Е. Если его длина становится равной нулю). Если вы дадите пустому оверлею (см. &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Пустой оверлей&lt;/a&gt; ) свойство, отличное от &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;evaporate&lt;/code&gt; , оно немедленно удалит его. Обратите внимание, что если наложение не имеет этого свойства, оно не будет удалено, когда текст между его начальной и конечной позициями будет удален из буфера.</target>
        </trans-unit>
        <trans-unit id="10e35c6643ea67ea950c9d4d716db33c0599a8da" translate="yes" xml:space="preserve">
          <source>If this property is omitted, it defaults to 50.</source>
          <target state="translated">Если это свойство опущено,то по умолчанию оно составляет 50.</target>
        </trans-unit>
        <trans-unit id="b5a662f58b04bc1493160f98949460c71e1112e3" translate="yes" xml:space="preserve">
          <source>If this user option is set to &lt;code&gt;t&lt;/code&gt; (the default), then Emacs asks for confirmation before killing processes on exit. If it is &lt;code&gt;nil&lt;/code&gt;, Emacs kills processes without confirmation, i.e., the query flag of all processes is ignored.</source>
          <target state="translated">Если эта пользовательская опция установлена ​​на &lt;code&gt;t&lt;/code&gt; (по умолчанию), то Emacs запрашивает подтверждение перед завершением процессов при выходе. Если он равен &lt;code&gt;nil&lt;/code&gt; , Emacs уничтожает процессы без подтверждения, т. Е. Флаг запроса всех процессов игнорируется.</target>
        </trans-unit>
        <trans-unit id="7f1aca46aaa1831df876a405f5ebfb2e74ca7800" translate="yes" xml:space="preserve">
          <source>If this variable has a non-&lt;code&gt;nil&lt;/code&gt; value (the default), running the command &lt;code&gt;eval-expression&lt;/code&gt; causes &lt;code&gt;debug-on-error&lt;/code&gt; to be temporarily bound to &lt;code&gt;t&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Evaluating Emacs-Lisp Expressions&lt;/a&gt; in</source>
          <target state="translated">Если эта переменная имеет значение, отличное от &lt;code&gt;nil&lt;/code&gt; (по умолчанию), выполнение команды &lt;code&gt;eval-expression&lt;/code&gt; приводит к временной привязке функции &lt;code&gt;debug-on-error&lt;/code&gt; к &lt;code&gt;t&lt;/code&gt; . Смотрите &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Вычисление выражений Emacs-Lisp&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="dc406ae5e5fdc48715cf4643b78845c64944a962" translate="yes" xml:space="preserve">
          <source>If this variable has a non-&lt;code&gt;nil&lt;/code&gt; value, ISO-2022 escape sequences are ignored when detecting the encoding of a region or a string. The result is that no text is ever detected as encoded in some ISO-2022 encoding, and all escape sequences become visible in a buffer. &lt;strong&gt;Warning:&lt;/strong&gt;&lt;em&gt;Use this variable with extreme caution, because many files in the Emacs distribution use ISO-2022 encoding.&lt;/em&gt;</source>
          <target state="translated">Если эта переменная имеет &lt;code&gt;nil&lt;/code&gt; значение, escape-последовательности ISO-2022 игнорируются при обнаружении кодировки области или строки. В результате никакой текст никогда не обнаруживается как закодированный в некоторой кодировке ISO-2022, и все escape-последовательности становятся видимыми в буфере. &lt;strong&gt;Предупреждение: &lt;/strong&gt;&lt;em&gt;используйте эту переменную с особой осторожностью, потому что многие файлы в дистрибутиве Emacs используют кодировку ISO-2022.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5da5197b312d51b191187d6196c20e10a6137205" translate="yes" xml:space="preserve">
          <source>If this variable has a non-&lt;code&gt;nil&lt;/code&gt; value, null bytes are ignored when detecting the encoding of a region or a string. This allows the encoding of text that contains null bytes to be correctly detected, such as Info files with Index nodes.</source>
          <target state="translated">Если эта переменная имеет значение, отличное от &lt;code&gt;nil&lt;/code&gt; , нулевые байты игнорируются при обнаружении кодировки области или строки. Это позволяет правильно определять кодировку текста, содержащего нулевые байты, например файлов Info с узлами индекса.</target>
        </trans-unit>
        <trans-unit id="c373b5c3a8de63fb3cea0bba1d0eb1e3d3ef7af5" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt; (the default), or it fails to match a filename, the backup is made in the original file&amp;rsquo;s directory.</source>
          <target state="translated">Если эта переменная равна &lt;code&gt;nil&lt;/code&gt; (по умолчанию) или не соответствует имени файла, резервная копия создается в каталоге исходного файла.</target>
        </trans-unit>
        <trans-unit id="9b260f60b0da661c6386e4a8c57481caca5f924e" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt; and the initial minibuffer contents are empty, the user may have to explicitly fetch the next history element to access a default value. If the variable is non-&lt;code&gt;nil&lt;/code&gt;, the initial minibuffer contents are always non-empty and the user can always request a default value by immediately typing</source>
          <target state="translated">Если эта переменная равна &lt;code&gt;nil&lt;/code&gt; и начальное содержимое минибуфера пусто, пользователю, возможно, придется явно выбрать следующий элемент истории, чтобы получить доступ к значению по умолчанию. Если переменная не равна &lt;code&gt;nil&lt;/code&gt; , начальное содержимое минибуфера всегда непусто, и пользователь всегда может запросить значение по умолчанию, немедленно набрав</target>
        </trans-unit>
        <trans-unit id="4a377c85d375a1d05f2bc24d6a94706665f459b2" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;split-window&lt;/code&gt; can only split a window (denoted by &lt;var&gt;window&lt;/var&gt;) if &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s screen area is large enough to accommodate both itself and the new window.</source>
          <target state="translated">Если эта переменная равна &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;split-window&lt;/code&gt; может разделить окно (обозначается &lt;var&gt;window&lt;/var&gt; ) только в том случае, если область экрана &lt;var&gt;window&lt;/var&gt; достаточно велика, чтобы разместить как само окно, так и новое окно.</target>
        </trans-unit>
        <trans-unit id="e5efa0bdf46c1cfda3ed747418a3db73ea898921" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;switch-to-buffer&lt;/code&gt; displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; at the position of that buffer&amp;rsquo;s &lt;code&gt;point&lt;/code&gt;. If this variable is &lt;code&gt;already-displayed&lt;/code&gt;, it tries to display the buffer at its previous position in the selected window, provided the buffer is currently displayed in some other window on any visible or iconified frame. If this variable is &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;switch-to-buffer&lt;/code&gt; unconditionally tries to display the buffer at its previous position in the selected window.</source>
          <target state="translated">Если эта переменная равна &lt;code&gt;nil&lt;/code&gt; , при &lt;code&gt;switch-to-buffer&lt;/code&gt; отображается буфер, указанный параметром &lt;var&gt;buffer-or-name&lt;/var&gt; , в позиции &lt;code&gt;point&lt;/code&gt; этого буфера . Если эта переменная &lt;code&gt;already-displayed&lt;/code&gt; , она пытается отобразить буфер в его предыдущей позиции в выбранном окне, при условии, что буфер в настоящее время отображается в каком-либо другом окне в любом видимом или отображаемом фрейме. Если эта переменная равна &lt;code&gt;t&lt;/code&gt; , &lt;code&gt;switch-to-buffer&lt;/code&gt; безоговорочно пытается отобразить буфер в его предыдущей позиции в выбранном окне.</target>
        </trans-unit>
        <trans-unit id="21114982217e29f559b82573a3eccc2b154e4432" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; may switch to any buffer, including those already shown in other windows.</source>
          <target state="translated">Если эта переменная равна &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; может переключиться на любой буфер, включая те, которые уже показаны в других окнах.</target>
        </trans-unit>
        <trans-unit id="d8a3d004b6873a2a169b03d65608121fffb72f67" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, Emacs does not lock files.</source>
          <target state="translated">Если эта переменная равна &lt;code&gt;nil&lt;/code&gt; , Emacs не блокирует файлы.</target>
        </trans-unit>
        <trans-unit id="89623922f044cdd08657525c28b20ee10211a651" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;blink-matching-open&lt;/code&gt; does nothing.</source>
          <target state="translated">Если эта переменная равна &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;blink-matching-open&lt;/code&gt; ничего не делает.</target>
        </trans-unit>
        <trans-unit id="2cfb381e21594551805791d32d6d3364b07223cd" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;read-from-minibuffer&lt;/code&gt; and &lt;code&gt;read-string&lt;/code&gt; strip all text properties from the minibuffer input before returning it. However, &lt;code&gt;read-no-blanks-input&lt;/code&gt; (see below), as well as &lt;code&gt;read-minibuffer&lt;/code&gt; and related functions (see &lt;a href=&quot;object-from-minibuffer#Object-from-Minibuffer&quot;&gt;Reading Lisp Objects With the Minibuffer&lt;/a&gt;), and all functions that do minibuffer input with completion, discard text properties unconditionally, regardless of the value of this variable.</source>
          <target state="translated">Если эта переменная равна &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;read-from-minibuffer&lt;/code&gt; и &lt;code&gt;read-string&lt;/code&gt; удаляют все текстовые свойства из ввода минибуфера перед его возвратом. Однако, &lt;code&gt;read-no-blanks-input&lt;/code&gt; (см. Ниже), а также &lt;code&gt;read-minibuffer&lt;/code&gt; и связанные функции (см. &lt;a href=&quot;object-from-minibuffer#Object-from-Minibuffer&quot;&gt;Чтение объектов Lisp с помощью минибуфера&lt;/a&gt; ) и все функции, которые выполняют ввод минибуфера с завершением, безоговорочно отбрасывают свойства текста, независимо от значение этой переменной.</target>
        </trans-unit>
        <trans-unit id="b1d0a7e3669bd5769ff2e4ddd7ec40d799965cf0" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, this does not necessarily mean that any window showing the buffer can be resized in the desired direction. To determine that, use the function &lt;code&gt;window-resizable&lt;/code&gt;. See &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;.</source>
          <target state="translated">Если эта переменная равна &lt;code&gt;nil&lt;/code&gt; , это не обязательно означает, что любое окно, показывающее буфер, может быть изменено в желаемом направлении. Чтобы определить это, используйте функцию изменения &lt;code&gt;window-resizable&lt;/code&gt; . См. Раздел &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Изменение размера Windows&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a14af0d500a6d6203f4039a676d4516a111cf6ae" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, you cannot invoke minibuffer commands when the minibuffer is active, not even if you switch to another window to do it.</source>
          <target state="translated">Если эта переменная равна &lt;code&gt;nil&lt;/code&gt; , вы не можете вызывать команды минибуфера, когда минибуфер активен, даже если для этого вы переключитесь в другое окно.</target>
        </trans-unit>
        <trans-unit id="594867f6c30f7651767ce9e8c5f29e2d63c57c0c" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;split-window&lt;/code&gt; tries to resize all windows that are part of the same combination as &lt;var&gt;window&lt;/var&gt;, in order to accommodate the new window. In particular, this may allow &lt;code&gt;split-window&lt;/code&gt; to succeed even if &lt;var&gt;window&lt;/var&gt; is a fixed-size window or too small to ordinarily split. Furthermore, subsequently resizing or deleting &lt;var&gt;window&lt;/var&gt; may resize all other windows in its combination.</source>
          <target state="translated">Если эта переменная равна &lt;code&gt;t&lt;/code&gt; , &lt;code&gt;split-window&lt;/code&gt; пытается изменить размер всех окон, которые являются частью той же комбинации, что и &lt;var&gt;window&lt;/var&gt; , чтобы приспособить новое окно. В частности, это может обеспечить &lt;code&gt;split-window&lt;/code&gt; даже если &lt;var&gt;window&lt;/var&gt; является окном фиксированного размера или слишком маленьким для обычного разделения. Кроме того, последующее изменение размера или удаление &lt;var&gt;window&lt;/var&gt; может изменить размер всех других окон в его комбинации.</target>
        </trans-unit>
        <trans-unit id="d1240ec35ce1119433c9ff4d706e7e07c1704aa2" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;t&lt;/code&gt;, then saving a file deletes excess backup versions silently. If it is &lt;code&gt;nil&lt;/code&gt;, that means to ask for confirmation before deleting excess backups. Otherwise, they are not deleted at all.</source>
          <target state="translated">Если эта переменная &lt;code&gt;t&lt;/code&gt; , то при сохранении файла лишние версии резервной копии автоматически удаляются. Если он равен &lt;code&gt;nil&lt;/code&gt; , это означает, что перед удалением лишних резервных копий требуется запросить подтверждение. В противном случае они вообще не удаляются.</target>
        </trans-unit>
        <trans-unit id="20cf7005f85044b4fe10e90fbd2922b7f7fb99a9" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt; (the default), Emacs makes backups by copying in cases where renaming would change either the owner or the group of the file.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; (по умолчанию), Emacs создает резервные копии путем копирования в тех случаях, когда переименование изменило бы владельца или группу файла.</target>
        </trans-unit>
        <trans-unit id="6ac994bc716560b0f970621acd4b471ce55be78a" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt; when a command returns to the command loop, then the command loop does not check for those text properties, and does not move point out of sequences that have them.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; когда команда возвращается в командный цикл, то командный цикл не проверяет эти текстовые свойства и не перемещает точку из последовательностей, в которых они есть.</target>
        </trans-unit>
        <trans-unit id="bace1650d13777be92f95887dd4d32eecfa88f81" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt; and related functions call it with no arguments when their argument message is &lt;code&gt;nil&lt;/code&gt; or the empty string.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;message&lt;/code&gt; и связанные функции вызывают ее без аргументов, если их аргумент message равен &lt;code&gt;nil&lt;/code&gt; или пустой строке.</target>
        </trans-unit>
        <trans-unit id="c1f25dcc5e8473bcf19e57671b5e742689784221" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;read-buffer&lt;/code&gt; ignores case when performing completion while reading the buffer name.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;read-buffer&lt;/code&gt; игнорирует регистр при выполнении завершения при чтении имени буфера.</target>
        </trans-unit>
        <trans-unit id="bbc01c87c2c736a01297e40708d9bc2eea75308d" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;read-file-name&lt;/code&gt; ignores case when performing completion.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;read-file-name&lt;/code&gt; игнорирует регистр при выполнении завершения.</target>
        </trans-unit>
        <trans-unit id="e1af2e516e1731ec5691914fe684ea6870a2bd9b" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;scan-sexps&lt;/code&gt; treats all non-</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;scan-sexps&lt;/code&gt; обрабатывает все не-</target>
        </trans-unit>
        <trans-unit id="2806dadd88bb70627d555c7ccdb2df2e87d6e884" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;sort-subr&lt;/code&gt; and the other buffer sorting functions ignore case when comparing strings.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;sort-subr&lt;/code&gt; и другие функции сортировки буфера игнорируют регистр при сравнении строк.</target>
        </trans-unit>
        <trans-unit id="6c25756dd86611671f3153436090287d38ed5950" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;switch-to-buffer&lt;/code&gt; respects display actions specified by &lt;code&gt;display-buffer-overriding-action&lt;/code&gt;, &lt;code&gt;display-buffer-alist&lt;/code&gt; and other display related variables.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , при &lt;code&gt;switch-to-buffer&lt;/code&gt; учитываются действия отображения, указанные в &lt;code&gt;display-buffer-overriding-action&lt;/code&gt; , &lt;code&gt;display-buffer-alist&lt;/code&gt; и других переменных, связанных с отображением.</target>
        </trans-unit>
        <trans-unit id="2d9323d5a2f41b361036ddb3df85eeaea1baaabe" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; will refrain from switching to certain buffers. The following values can be used:</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; будет воздерживаться от переключения на определенные буферы. Могут использоваться следующие значения:</target>
        </trans-unit>
        <trans-unit id="6f8b633c15af3635e4d6fb6a6c0f5084235f704f" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; calls it as a function to do the job of displaying a help buffer. The function gets one argument, which is the buffer it should display.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; вызывает ее как функцию, выполняющую работу по отображению буфера справки. Функция получает один аргумент - буфер, который она должна отображать.</target>
        </trans-unit>
        <trans-unit id="b45139ff1fb7adc7b74e6d5409a3a5983efc470b" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs always makes backup files by copying. The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , Emacs всегда создает резервные копии файлов путем копирования. По умолчанию - &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d51063434f8bbb63a99074f83c5e64c82816980" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs auto-saves buffers in the files they are visiting. That is, the auto-save is done in the same file that you are editing. Normally, this variable is &lt;code&gt;nil&lt;/code&gt;, so auto-save files have distinct names that are created by &lt;code&gt;make-auto-save-file-name&lt;/code&gt;.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , Emacs автоматически сохраняет буферы в файлах, которые они посещают. То есть автосохранение выполняется в том же файле, который вы редактируете. Обычно эта переменная равна &lt;code&gt;nil&lt;/code&gt; , поэтому файлы автосохранения имеют разные имена, которые создаются командой &lt;code&gt;make-auto-save-file-name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="834c09bab1aa496311263cf0de3e2ca620518527" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs displays a message at the beginning and end of garbage collection. The default value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , Emacs отображает сообщение в начале и в конце сборки мусора. Значение по умолчанию - &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3633f89136bf7feadfc976095b51e28ac6f62fd" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs does not look up X resources, and X resources do not have any effect when creating new frames.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , Emacs не ищет ресурсы X, а ресурсы X не имеют никакого эффекта при создании новых кадров.</target>
        </trans-unit>
        <trans-unit id="207397c1e70879d418a5aeb0b3721f4a98bea246" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs makes backups by copying for files with multiple names (hard links). The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , Emacs создает резервные копии, копируя файлы с несколькими именами (жесткие ссылки). По умолчанию - &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4133361e941fb85b4b5864cbd4b84b18bec370a2" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs will try to automatically select the window under the mouse pointer. The following values are meaningful:</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , Emacs попытается автоматически выбрать окно под указателем мыши. Значимы следующие значения:</target>
        </trans-unit>
        <trans-unit id="3f388d3d4bc61aef5a9232085d49b686ff163ff7" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, a period followed by just one space does not count as the end of a sentence, and the filling functions avoid breaking the line at such a place.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , точка, за которой следует только один пробел, не считается концом предложения, и функции заполнения избегают разрыва строки в таком месте.</target>
        </trans-unit>
        <trans-unit id="950d5268ecb65fd2680e60c1d248cc988f2f3806" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, a sentence can end without a period. This is used for languages like Thai, where sentences end with a double space but without a period.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , предложение может заканчиваться без точки. Это используется для таких языков, как тайский, где предложения заканчиваются двойным пробелом, но без точки.</target>
        </trans-unit>
        <trans-unit id="d3d32a32adfb3aeef6215fd4bfb85130c2a123e8" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, all of the change hooks are disabled; none of them run. This affects all the hook variables described above in this section, as well as the hooks attached to certain special text properties (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;) and overlay properties (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;).</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , все перехватчики изменений отключены; никто из них не убегает. Это влияет на все переменные ловушки, описанные выше в этом разделе, а также ловушки, прикрепленные к определенным специальным свойствам текста (см. &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Специальные свойства&lt;/a&gt; ) и свойствам наложения (см. &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Свойства наложения&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2ffc9890d3b90ef1f3080654443150dd4bbab62b" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, backups are inhibited. It records the result of testing &lt;code&gt;backup-enable-predicate&lt;/code&gt; on the visited file name. It can also coherently be used by other mechanisms that inhibit backups based on which file is visited. For example, VC sets this variable non-&lt;code&gt;nil&lt;/code&gt; to prevent making backups for files managed with a version control system.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , резервное копирование запрещено. Он записывает результат тестирования &lt;code&gt;backup-enable-predicate&lt;/code&gt; для имени посещенного файла. Он также может согласованно использоваться другими механизмами, которые запрещают резервное копирование в зависимости от того, какой файл посещается. Например, VC устанавливает для этой переменной значение отличное от &lt;code&gt;nil&lt;/code&gt; чтобы предотвратить резервное копирование файлов, управляемых системой контроля версий.</target>
        </trans-unit>
        <trans-unit id="dbec36e38f19eeb11c146f8269324b7fdf70520f" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, buffers that are visiting files have auto-saving enabled by default. Otherwise, they do not.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , для буферов, обращающихся к файлам, по умолчанию включено автосохранение. В противном случае - нет.</target>
        </trans-unit>
        <trans-unit id="025314b7262d14c39abfca6e9831f30272667c3e" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, calling &lt;code&gt;recenter&lt;/code&gt; with a &lt;code&gt;nil&lt;/code&gt;&lt;var&gt;count&lt;/var&gt; argument and non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;redisplay&lt;/var&gt; argument redraws the frame. The default value is &lt;code&gt;tty&lt;/code&gt;, which means only redraw the frame if it is a tty frame.</source>
          <target state="translated">Если этот переменный не - &lt;code&gt;nil&lt;/code&gt; , вызывая &lt;code&gt;recenter&lt;/code&gt; с &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;count&lt;/var&gt; аргументом и не- &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;redisplay&lt;/var&gt; аргументом перерисовывает фрейм. Значение по умолчанию - &lt;code&gt;tty&lt;/code&gt; , что означает перерисовку кадра только в том случае, если это кадр tty.</target>
        </trans-unit>
        <trans-unit id="3494024f21dd122ec5225998d1cc7fc1f54d85a6" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, certain motion functions including &lt;code&gt;forward-word&lt;/code&gt;, &lt;code&gt;forward-sentence&lt;/code&gt;, and &lt;code&gt;forward-paragraph&lt;/code&gt; ignore field boundaries.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , некоторые функции перемещения, включая &lt;code&gt;forward-word&lt;/code&gt; , &lt;code&gt;forward-sentence&lt;/code&gt; и &lt;code&gt;forward-paragraph&lt;/code&gt; , игнорируют границы полей.</target>
        </trans-unit>
        <trans-unit id="bd0f3e86b9ecff032bd540684c751ffd8dd5b909" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, commands defined with &lt;code&gt;make-help-screen&lt;/code&gt; display their &lt;var&gt;help-line&lt;/var&gt; strings in the echo area at first, and display the longer &lt;var&gt;help-text&lt;/var&gt; strings only if the user types the help character again.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , команды, определенные с &lt;code&gt;make-help-screen&lt;/code&gt; сначала отображают свои &lt;var&gt;help-line&lt;/var&gt; в эхо-области и отображают более длинные строки &lt;var&gt;help-text&lt;/var&gt; только в том случае, если пользователь снова набирает символ справки.</target>
        </trans-unit>
        <trans-unit id="9750f1edf74db0b608b6fccefea113c32bd8ce2e" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, control characters in strings are printed as backslash sequences by the print functions &lt;code&gt;prin1&lt;/code&gt; and &lt;code&gt;print&lt;/code&gt; that print with quoting. If this variable and &lt;code&gt;print-escape-newlines&lt;/code&gt; are both non-&lt;code&gt;nil&lt;/code&gt;, the latter takes precedences for newlines and formfeeds.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , управляющие символы в строках печатаются как последовательности обратной косой черты функциями печати &lt;code&gt;prin1&lt;/code&gt; и &lt;code&gt;print&lt;/code&gt; эту печать с заключением в кавычки . Если и эта переменная, и &lt;code&gt;print-escape-newlines&lt;/code&gt; не равны &lt;code&gt;nil&lt;/code&gt; , последний имеет приоритет для новых строк и форм.</target>
        </trans-unit>
        <trans-unit id="0ebcf8ab557e661172fe9de6982d3f1cecc78d63" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, every stack frame of the backtrace is displayed as a list. This aims at improving the backtrace readability at the cost of special forms no longer being visually different from regular function calls.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , каждый кадр стека обратной трассировки отображается в виде списка. Это нацелено на улучшение читаемости обратной трассировки за счет того, что специальные формы больше не будут визуально отличаться от обычных вызовов функций.</target>
        </trans-unit>
        <trans-unit id="825abb330d17f730939fccaedf4a9b54362af1aa" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, face filters that specify attributes applied only when certain conditions are met will be deemed to match always.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , фильтры лиц, которые определяют атрибуты, применяемые только при соблюдении определенных условий, будут считаться соответствующими всегда.</target>
        </trans-unit>
        <trans-unit id="73b99057e876adfddae006656294be7fad80418d" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, indentation functions can insert tabs as well as spaces. Otherwise, they insert only spaces. Setting this variable automatically makes it buffer-local in the current buffer.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , функции отступа могут вставлять как табуляцию, так и пробелы. В противном случае они вставляют только пробелы. Установка этой переменной автоматически делает ее локальным в текущем буфере.</target>
        </trans-unit>
        <trans-unit id="e475f46321e795ba81086b40cd4690ce691cace1" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it is used instead of &lt;code&gt;system-name&lt;/code&gt; for purposes of generating email addresses. For example, it is used when constructing the default value of &lt;code&gt;user-mail-address&lt;/code&gt;. See &lt;a href=&quot;user-identification#User-Identification&quot;&gt;User Identification&lt;/a&gt;.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , она используется вместо имени &lt;code&gt;system-name&lt;/code&gt; для создания адресов электронной почты. Например, он используется при построении значения по умолчанию для &lt;code&gt;user-mail-address&lt;/code&gt; . См. &lt;a href=&quot;user-identification#User-Identification&quot;&gt;Идентификация пользователя&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a72e135e2602c7ab3b2c6d5205e6df8a8c1f366" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it means that the user plans to use global abbrevs only. This tells the commands that define mode-specific abbrevs to define global ones instead. This variable does not alter the behavior of the functions in this section; it is examined by their callers.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , это означает, что пользователь планирует использовать только глобальные сокращения. Это указывает командам, определяющим сокращения для конкретного режима, вместо этого определять глобальные. Эта переменная не меняет поведения функций в этом разделе; это проверяется их абонентами.</target>
        </trans-unit>
        <trans-unit id="28a614e5388ec41951b4289105842e28d7c742aa" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it prevents Emacs from loading the default initialization library file. The default value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , это предотвращает загрузку Emacs файла библиотеки инициализации по умолчанию. Значение по умолчанию - &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01405602d1f9c9c7910f4c21fb957b674e7f4e15" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it says to call the debugger before the next &lt;code&gt;eval&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt; or &lt;code&gt;funcall&lt;/code&gt;. Entering the debugger sets &lt;code&gt;debug-on-next-call&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , она говорит, что нужно вызвать отладчик перед следующим &lt;code&gt;eval&lt;/code&gt; , &lt;code&gt;apply&lt;/code&gt; или &lt;code&gt;funcall&lt;/code&gt; . Ввод отладчика устанавливает &lt;code&gt;debug-on-next-call&lt;/code&gt; к &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="530af39356cdaa6611678480707bf74e936dfaf2" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function of one argument, the text of a message to display in the echo area. This function will be called by &lt;code&gt;message&lt;/code&gt; and related functions. If the function returns &lt;code&gt;nil&lt;/code&gt;, the message is displayed in the echo area as usual. If this function returns a string, that string is displayed in the echo area instead of the original one. If this function returns other non-&lt;code&gt;nil&lt;/code&gt; values, that means the message was already handled, so &lt;code&gt;message&lt;/code&gt; will not display anything in the echo area. See also &lt;code&gt;clear-message-function&lt;/code&gt; that can be used to clear the message displayed by this function.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , она должна быть функцией одного аргумента - текста сообщения, отображаемого в эхо-области. Эта функция будет вызываться &lt;code&gt;message&lt;/code&gt; и связанными функциями. Если функция возвращает &lt;code&gt;nil&lt;/code&gt; , сообщение отображается в эхо-области как обычно. Если эта функция возвращает строку, эта строка отображается в эхо-области вместо исходной. Если эта функция возвращает другие значения, отличные от &lt;code&gt;nil&lt;/code&gt; , это означает, что сообщение уже было обработано, поэтому &lt;code&gt;message&lt;/code&gt; ничего не будет отображать в эхо-области. См. Также &lt;code&gt;clear-message-function&lt;/code&gt; которую можно использовать для очистки сообщения, отображаемого этой функцией.</target>
        </trans-unit>
        <trans-unit id="e2ad2623c2c20ffd237a9f8ff4f6b25a14cd11ae" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function that is called with no arguments, to choose an enclosing range of text for refontification for the command</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , это должна быть функция, которая вызывается без аргументов, чтобы выбрать охватывающий диапазон текста для повторной настройки для команды.</target>
        </trans-unit>
        <trans-unit id="5e34de40cdee34dbcbae19ce1c28736a9aabb232" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function to determine which face to use for a given syntactic element (a string or a comment).</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , это должна быть функция, определяющая, какое лицо использовать для данного синтаксического элемента (строки или комментария).</target>
        </trans-unit>
        <trans-unit id="736539861dd446a2363faa03b08be25dfdb36758" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a regular expression that says how to search for whitespace. In that case, any group of spaces in a regular expression being searched for stands for use of this regular expression. However, spaces inside of constructs such as &amp;lsquo;</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , это должно быть регулярное выражение, указывающее, как искать пробелы. В этом случае любая группа пробелов в регулярном выражении, в котором выполняется поиск, означает использование этого регулярного выражения. Однако пробелы внутри таких конструкций, как '</target>
        </trans-unit>
        <trans-unit id="94da8319895436b58271d8d72a7d99fdf5bd1757" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a string of characters that can end a sentence without following spaces.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , это должна быть строка символов, которые могут завершать предложение без следующих пробелов.</target>
        </trans-unit>
        <trans-unit id="9e8a33451a4e0e6e7f790a3cc598efe8a089d8fa" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a function called to display help strings. These may be &lt;code&gt;help-echo&lt;/code&gt; properties, menu help strings (see &lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;Simple Menu Items&lt;/a&gt;, see &lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;Extended Menu Items&lt;/a&gt;), or tool bar help strings (see &lt;a href=&quot;tool-bar#Tool-Bar&quot;&gt;Tool Bar&lt;/a&gt;). The specified function is called with one argument, the help string to display, which is passed through &lt;code&gt;substitute-command-keys&lt;/code&gt; before being given to the function, unless the help string has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;help-echo-inhibit-substitution&lt;/code&gt; property on its first character; see &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Keys in Documentation&lt;/a&gt;. See the code of Tooltip mode (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;Tooltips&lt;/a&gt; in</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , она определяет функцию, вызываемую для отображения строк справки. Это могут быть свойства &lt;code&gt;help-echo&lt;/code&gt; справки, строки справки меню (см. &lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;Простые элементы меню&lt;/a&gt; , см. &lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;Расширенные элементы меню&lt;/a&gt; ) или строки справки панели инструментов (см. Панель &lt;a href=&quot;tool-bar#Tool-Bar&quot;&gt;инструментов&lt;/a&gt; ). Указанная функция вызываются с одним аргументом, справочной строкой на дисплей, который передается через &lt;code&gt;substitute-command-keys&lt;/code&gt; перед тем , как дана функцией, если помощь строка не имеет не- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;help-echo-inhibit-substitution&lt;/code&gt; собственности на своем первый персонаж; см. &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Ключи в документации&lt;/a&gt; . См. Код режима всплывающих подсказок (см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;Всплывающие подсказки&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="4287285430bf7978ba440dfcc104a76072b43a35" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the coding system to use for reading a file, or for input from a synchronous subprocess.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , она указывает систему кодирования, используемую для чтения файла или для ввода из синхронного подпроцесса.</target>
        </trans-unit>
        <trans-unit id="3c10b413e9e836ba3f5eb5e379ef529e4a062a92" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the initial execution mode for Edebug when it is first activated. Possible values are &lt;code&gt;step&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;go&lt;/code&gt;, &lt;code&gt;Go-nonstop&lt;/code&gt;, &lt;code&gt;trace&lt;/code&gt;, &lt;code&gt;Trace-fast&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, and &lt;code&gt;Continue-fast&lt;/code&gt;.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , она указывает начальный режим выполнения для Edebug при его первой активации. Возможные значения: &lt;code&gt;step&lt;/code&gt; , &lt;code&gt;next&lt;/code&gt; , &lt;code&gt;go&lt;/code&gt; , &lt;code&gt;Go-nonstop&lt;/code&gt; , &lt;code&gt;trace&lt;/code&gt; , &lt;code&gt;Trace-fast&lt;/code&gt; , &lt;code&gt;continue&lt;/code&gt; и &lt;code&gt;Continue-fast&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="940530d5bdee4613d57b898314fac2eba6763217" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it tells &lt;code&gt;scroll-other-window&lt;/code&gt; which buffer&amp;rsquo;s window to scroll.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , она сообщает &lt;code&gt;scroll-other-window&lt;/code&gt; , какое окно буфера нужно прокручивать.</target>
        </trans-unit>
        <trans-unit id="796d64fb0f974a198f156df00380fe8b383a4f59" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, its value is a form to evaluate whenever the character &lt;code&gt;help-char&lt;/code&gt; is read. If evaluating the form produces a string, that string is displayed.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , ее значение представляет собой форму для оценки при чтении символа &lt;code&gt;help-char&lt;/code&gt; . Если при вычислении формы получается строка, эта строка отображается.</target>
        </trans-unit>
        <trans-unit id="4cd924a70c5a5420e03b4274b724474270d013cd" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, its value should be a function that finds the next definition to put in the buffer index, scanning backward in the buffer from point. It should return &lt;code&gt;nil&lt;/code&gt; if it doesn&amp;rsquo;t find another definition before point. Otherwise it should leave point at the place it finds a definition and return any non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , ее значением должна быть функция, которая находит следующее определение для размещения в индексе буфера, просматривая буфер назад от точки. Он должен вернуть &lt;code&gt;nil&lt;/code&gt; , если не найдет другого определения перед точкой. В противном случае он должен оставить точку в том месте, где находит определение, и вернуть любое &lt;code&gt;nil&lt;/code&gt; значение.</target>
        </trans-unit>
        <trans-unit id="5966261c0c16f735efd5e99361f20e922539db62" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, its value should be a function to return the name for a definition, assuming point is in that definition as the &lt;code&gt;imenu-prev-index-position-function&lt;/code&gt; function would leave it.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , ее значением должна быть функция, возвращающая имя для определения, при условии, что точка находится в этом определении, поскольку &lt;code&gt;imenu-prev-index-position-function&lt;/code&gt; оставит его.</target>
        </trans-unit>
        <trans-unit id="1f013b1f0ed05ce1ab2df32aa0fef5d09e538287" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, some standard functions do not process window parameters. The functions currently affected by this are &lt;code&gt;split-window&lt;/code&gt;, &lt;code&gt;delete-window&lt;/code&gt;, &lt;code&gt;delete-other-windows&lt;/code&gt;, and &lt;code&gt;other-window&lt;/code&gt;.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , некоторые стандартные функции не обрабатывают параметры окна. В настоящее время это затрагивает следующие функции: &lt;code&gt;split-window&lt;/code&gt; , &lt;code&gt;delete-window&lt;/code&gt; , &lt;code&gt;delete-other-windows&lt;/code&gt; и &lt;code&gt;other-window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03c7c4d79ccb4d42f80c3d18e6c04a8e755e29f2" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the &lt;code&gt;line-move&lt;/code&gt;, &lt;code&gt;scroll-up&lt;/code&gt;, and &lt;code&gt;scroll-down&lt;/code&gt; functions will automatically modify the vertical scroll position to scroll through display rows that are taller than the height of the window, for example in the presence of large images.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , функции &lt;code&gt;line-move&lt;/code&gt; , &lt;code&gt;scroll-up&lt;/code&gt; и &lt;code&gt;scroll-down&lt;/code&gt; автоматически изменят положение вертикальной прокрутки для прокрутки отображаемых строк, которые выше, чем высота окна, например, при наличии большие изображения.</target>
        </trans-unit>
        <trans-unit id="5f51c12f5aa3e060488bafd691e3268772c08c8b" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the completion commands automatically display a list of possible completions whenever nothing can be completed because the next character is not uniquely determined.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , команды завершения автоматически отображают список возможных завершений всякий раз, когда ничего не может быть завершено, потому что следующий символ не определен однозначно.</target>
        </trans-unit>
        <trans-unit id="21443464bd01045a5e435e1de5bf762da34a42e1" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the filling functions do not delete newlines that have the &lt;code&gt;hard&lt;/code&gt; text property. These hard newlines act as paragraph separators. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Hard-and-Soft-Newlines.html#Hard-and-Soft-Newlines&quot;&gt;Hard and Soft Newlines&lt;/a&gt; in</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , функции заполнения не удаляют символы новой строки, имеющие свойство &lt;code&gt;hard&lt;/code&gt; текста. Эти жесткие символы новой строки действуют как разделители абзацев. См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Hard-and-Soft-Newlines.html#Hard-and-Soft-Newlines&quot;&gt;Жесткие и мягкие символы новой строки&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="679fbd7d9ffa305c2784992adda94271941edb90" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the function &lt;code&gt;yank-pop&lt;/code&gt; uses its value instead of &lt;code&gt;delete-region&lt;/code&gt; to delete the text inserted by the previous &lt;code&gt;yank&lt;/code&gt; or &lt;code&gt;yank-pop&lt;/code&gt; command. The value must be a function of two arguments, the start and end of the current region.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , функция &lt;code&gt;yank-pop&lt;/code&gt; использует свое значение вместо &lt;code&gt;delete-region&lt;/code&gt; для удаления текста, вставленного предыдущей командой &lt;code&gt;yank&lt;/code&gt; или &lt;code&gt;yank-pop&lt;/code&gt; . Значение должно быть функцией двух аргументов, начала и конца текущей области.</target>
        </trans-unit>
        <trans-unit id="93a2434654ec45e739de56657a18ff8876d78ad0" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the prefixes specified by a group&amp;rsquo;s &lt;code&gt;:prefix&lt;/code&gt; keyword are omitted from tag names, whenever the user customizes the group.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , префиксы, заданные ключевым словом group &lt;code&gt;:prefix&lt;/code&gt; , опускаются из имен тегов всякий раз, когда пользователь настраивает группу.</target>
        </trans-unit>
        <trans-unit id="e5d159208606e32b48fc2d1b9aded69f5b4066fd" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the tool bar automatically resizes to show all defined tool bar items&amp;mdash;but not larger than a quarter of the frame&amp;rsquo;s height.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , панель инструментов автоматически изменяет размер, чтобы отобразить все определенные элементы панели инструментов, но не более четверти высоты фрейма.</target>
        </trans-unit>
        <trans-unit id="13e280ca7f80fc8854be1c34c381f58c33201e02" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the value of &lt;code&gt;overriding-local-map&lt;/code&gt; or &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; can affect the display of the menu bar. The default value is &lt;code&gt;nil&lt;/code&gt;, so those map variables have no effect on the menu bar.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , значение &lt;code&gt;overriding-local-map&lt;/code&gt; или &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; может повлиять на отображение строки меню. Значение по умолчанию - &lt;code&gt;nil&lt;/code&gt; , поэтому эти переменные карты не влияют на строку меню.</target>
        </trans-unit>
        <trans-unit id="4124d763334c8a7421ef5e7e0065624fb83c8f7c" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;save-buffer&lt;/code&gt; protects against I/O errors while saving by writing the new file to a temporary name instead of the name it is supposed to have, and then renaming it to the intended name after it is clear there are no errors. This procedure prevents problems such as a lack of disk space from resulting in an invalid file.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , то &lt;code&gt;save-buffer&lt;/code&gt; защищает от ошибок ввода-вывода при сохранении, записывая новый файл во временное имя вместо имени, которое он должен иметь, а затем переименовывает его в предполагаемое имя после того, как оно будет понятно, ошибок нет. Эта процедура предотвращает возникновение таких проблем, как нехватка места на диске, в результате чего файл окажется недействительным.</target>
        </trans-unit>
        <trans-unit id="af993b034155d780baaff868c13c3f78dad09007" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs quits immediately, unless &lt;code&gt;inhibit-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. Typing</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , то Emacs немедленно завершает работу, если только &lt;code&gt;inhibit-quit&lt;/code&gt; равно &lt;code&gt;nil&lt;/code&gt; . Печатать</target>
        </trans-unit>
        <trans-unit id="76218ba9f2ed8739a1159ea14cb27b16675a7947" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then multibyte non-</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , то многобайтовые не-</target>
        </trans-unit>
        <trans-unit id="347e0ea47aafb7add84c5d8c171d6c7c19355bd0" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then newline characters in strings are printed as &amp;lsquo;</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , то символы новой строки в строках печатаются как '</target>
        </trans-unit>
        <trans-unit id="6c347410c56038a6f8cb71013d4d57ee168183fc" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then read-only buffers and, depending on the actual value, some or all read-only characters may be modified. Read-only characters in a buffer are those that have a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;read-only&lt;/code&gt; text property. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;, for more information about text properties.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , тогда буферы только для чтения и, в зависимости от фактического значения, могут быть изменены некоторые или все символы только для чтения. Доступные только для чтения символы в буфере - это те, которые имеют свойство текста, доступное только для &lt;code&gt;read-only&lt;/code&gt; отличное от &lt;code&gt;nil&lt;/code&gt; . См. &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Специальные свойства&lt;/a&gt; для получения дополнительной информации о свойствах текста.</target>
        </trans-unit>
        <trans-unit id="0b2ed4fbebaf5d95d00f7d374e99d6b6f8a364f2" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then the various &lt;code&gt;find-file&lt;/code&gt; commands check for wildcard characters and visit all the files that match them (when invoked interactively or when their &lt;var&gt;wildcards&lt;/var&gt; argument is non-&lt;code&gt;nil&lt;/code&gt;). If this option is &lt;code&gt;nil&lt;/code&gt;, then the &lt;code&gt;find-file&lt;/code&gt; commands ignore their &lt;var&gt;wildcards&lt;/var&gt; argument and never treat wildcard characters specially.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , то различные команды &lt;code&gt;find-file&lt;/code&gt; проверяют наличие подстановочных знаков и обращаются ко всем файлам, которые им соответствуют (при интерактивном вызове или когда их аргумент &lt;var&gt;wildcards&lt;/var&gt; отличен от &lt;code&gt;nil&lt;/code&gt; ). Если эта опция равна &lt;code&gt;nil&lt;/code&gt; , то команды &lt;code&gt;find-file&lt;/code&gt; игнорируют свой аргумент &lt;var&gt;wildcards&lt;/var&gt; и никогда не обрабатывают подстановочные знаки специально.</target>
        </trans-unit>
        <trans-unit id="c78c42547923adcce6905297eaf8af608611acc0" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then unibyte non-</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , то unibyte non-</target>
        </trans-unit>
        <trans-unit id="6647182cae9f951d8aeda46add5a82e6ede0ce3e" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, tool bar items display in raised form when the mouse moves over them.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , элементы панели инструментов отображаются в выпуклой форме при наведении на них мыши.</target>
        </trans-unit>
        <trans-unit id="8dfab937b0b83165d5343abdad293917abfa1c29" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, two words of different kind (e.g., English and CJK) will be separated with a space when concatenating one that is in the end of a line and the other that is in the beginning of the next line for filling.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , два слова разного типа (например, English и CJK) будут разделены пробелом при объединении одного, которое находится в конце строки, и другого, которое находится в начале следующей строки для начинка.</target>
        </trans-unit>
        <trans-unit id="fa1c4b04a8d4d70822b089390ffdf01fa17e5734" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, when the undo info exceeds &lt;code&gt;undo-outer-limit&lt;/code&gt;, Emacs asks in the echo area whether to discard the info. The default value is &lt;code&gt;nil&lt;/code&gt;, which means to discard it automatically.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , когда информация об отмене превышает &lt;code&gt;undo-outer-limit&lt;/code&gt; , Emacs спрашивает в эхо-области, следует ли отбросить информацию. Значение по умолчанию - &lt;code&gt;nil&lt;/code&gt; , что означает его автоматическое отклонение.</target>
        </trans-unit>
        <trans-unit id="fa5ff03c3e322d8d21fa31e2c5f3c569a8fff9a1" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, you can invoke commands (such as &lt;code&gt;find-file&lt;/code&gt;) that use minibuffers even while the minibuffer is active. Such invocation produces a recursive editing level for a new minibuffer. The outer-level minibuffer is invisible while you are editing the inner one.</source>
          <target state="translated">Если эта переменная не равна &lt;code&gt;nil&lt;/code&gt; , вы можете вызывать команды (например, &lt;code&gt;find-file&lt;/code&gt; ), которые используют минибуфер, даже когда минибуфер активен. Такой вызов создает рекурсивный уровень редактирования для нового минибуфера. Минибуфер внешнего уровня невидим, пока вы редактируете внутренний.</target>
        </trans-unit>
        <trans-unit id="7987f4ed83976384243a666b286c2798956277e4" translate="yes" xml:space="preserve">
          <source>If this variable&amp;rsquo;s value is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;write-region&lt;/code&gt; uses the &lt;code&gt;fsync&lt;/code&gt; system call after writing a file. Although this slows Emacs down, it lessens the risk of data loss after power failure. If the value is &lt;code&gt;t&lt;/code&gt;, Emacs does not use &lt;code&gt;fsync&lt;/code&gt;. The default value is &lt;code&gt;nil&lt;/code&gt; when Emacs is interactive, and &lt;code&gt;t&lt;/code&gt; when Emacs runs in batch mode. See &lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;Files and Storage&lt;/a&gt;.</source>
          <target state="translated">Если значение этой переменной равно &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;write-region&lt;/code&gt; использует системный вызов &lt;code&gt;fsync&lt;/code&gt; после записи файла. Хотя это замедляет работу Emacs, это снижает риск потери данных после сбоя питания. Если значение равно &lt;code&gt;t&lt;/code&gt; , Emacs не использует &lt;code&gt;fsync&lt;/code&gt; . Значение по умолчанию - &lt;code&gt;nil&lt;/code&gt; , когда Emacs является интерактивным, и &lt;code&gt;t&lt;/code&gt; , когда Emacs работает в пакетном режиме. См. &lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;Файлы и хранилище&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a8c9dc8dcf95bb83031625a9f5835f26578f929b" translate="yes" xml:space="preserve">
          <source>If this variable&amp;rsquo;s value is non-&lt;code&gt;nil&lt;/code&gt;, an open parenthesis in column 0 is considered to be the start of a defun. If it is &lt;code&gt;nil&lt;/code&gt;, an open parenthesis in column 0 has no special meaning. The default is &lt;code&gt;t&lt;/code&gt;. If a string literal happens to have a parenthesis in column 0, escape it with a backslash to avoid a false positive.</source>
          <target state="translated">Если значение этой переменной не равно &lt;code&gt;nil&lt;/code&gt; , открытая скобка в столбце 0 считается началом функции defun. Если он равен &lt;code&gt;nil&lt;/code&gt; , открывающая скобка в столбце 0 не имеет особого значения. По умолчанию &lt;code&gt;t&lt;/code&gt; . Если у строкового литерала есть скобка в столбце 0, закройте его обратной косой чертой, чтобы избежать ложного срабатывания.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
