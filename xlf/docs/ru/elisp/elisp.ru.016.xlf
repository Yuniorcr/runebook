<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="2793d8b41a5fb22673ccbb20fb899bf671a14181" translate="yes" xml:space="preserve">
          <source>The user-level commands for using Imenu are described in the Emacs Manual (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Imenu.html#Imenu&quot;&gt;Imenu&lt;/a&gt; in</source>
          <target state="translated">Команды уровня пользователя для использования Imenu описаны в Руководстве по Emacs (см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Imenu.html#Imenu&quot;&gt;Imenu&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="4b8f3d6a5479ec17f0291de524aeca77c644b100" translate="yes" xml:space="preserve">
          <source>The user-level commands for using Imenu are described in the Emacs Manual (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Imenu.html#Imenu&quot;&gt;Imenu&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30be3069546127e24c5678d1a47150d319e9b5c5" translate="yes" xml:space="preserve">
          <source>The usual and simplest way is to set the variable &lt;code&gt;imenu-generic-expression&lt;/code&gt;:</source>
          <target state="translated">Обычный и самый простой способ - установить переменную &lt;code&gt;imenu-generic-expression&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="90c75b3bffda92eeaca86bfbbe99a7430c08eb6e" translate="yes" xml:space="preserve">
          <source>The usual conventions for displaying characters.</source>
          <target state="translated">Обычные конвенции для отображения символов.</target>
        </trans-unit>
        <trans-unit id="2bd44e25afda0f432266a4e8544ff3b09136787e" translate="yes" xml:space="preserve">
          <source>The usual effect of signaling an error is to terminate the command that is running and return immediately to the Emacs editor command loop. You can arrange to trap errors occurring in a part of your program by establishing an error handler, with the special form &lt;code&gt;condition-case&lt;/code&gt;. A simple example looks like this:</source>
          <target state="translated">Обычный эффект сообщения об ошибке - завершить выполняющуюся команду и немедленно вернуться в цикл команд редактора Emacs. Вы можете организовать перехват ошибок, возникающих в части вашей программы, установив обработчик ошибок с помощью специальной формы &lt;code&gt;condition-case&lt;/code&gt; . Простой пример выглядит так:</target>
        </trans-unit>
        <trans-unit id="bda6ef848c823990e6e54452a3858487c06e4809" translate="yes" xml:space="preserve">
          <source>The usual interface functions for visiting.</source>
          <target state="translated">Обычные функции интерфейса для посещения.</target>
        </trans-unit>
        <trans-unit id="af1901f1654ae4b4ade44f3e4daa9e941c61b525" translate="yes" xml:space="preserve">
          <source>The usual menu keymap item properties, &lt;code&gt;:visible&lt;/code&gt;, &lt;code&gt;:enable&lt;/code&gt;, &lt;code&gt;:button&lt;/code&gt;, and &lt;code&gt;:filter&lt;/code&gt;, are useful in tool bar bindings and have their normal meanings. The &lt;var&gt;real-binding&lt;/var&gt; in the item must be a command, not a keymap; in other words, it does not work to define a tool bar icon as a prefix key.</source>
          <target state="translated">Обычные свойства меню раскладки пункта, &lt;code&gt;:visible&lt;/code&gt; , &lt;code&gt;:enable&lt;/code&gt; , &lt;code&gt;:button&lt;/code&gt; , и &lt;code&gt;:filter&lt;/code&gt; , могут быть использованы в штриховых привязках инструмента и имеют свои обычные значения. &lt;var&gt;real-binding&lt;/var&gt; в элементе должна быть командой, а не раскладка; Другими словами, определение значка панели инструментов в качестве префиксного ключа не работает.</target>
        </trans-unit>
        <trans-unit id="ac47370c7e29666366c5084b597a830112308e12" translate="yes" xml:space="preserve">
          <source>The usual purpose of tracking mouse motion is to indicate on the screen the consequences of pushing or releasing a button at the current position.</source>
          <target state="translated">Обычная цель отслеживания движения мыши-указать на экране последствия нажатия или отпускания кнопки в текущей позиции.</target>
        </trans-unit>
        <trans-unit id="4945884c017dad70b10d5d997fdc2f6a3086adf5" translate="yes" xml:space="preserve">
          <source>The usual read syntax for alphanumeric characters is a question mark followed by the character; thus, &amp;lsquo;</source>
          <target state="translated">Обычный синтаксис чтения для буквенно-цифровых символов - это вопросительный знак, за которым следует символ; таким образом, '</target>
        </trans-unit>
        <trans-unit id="5b4827bb568bf80753c3882d75fd2ab2a82f4c4c" translate="yes" xml:space="preserve">
          <source>The usual reason to specify a documentation string for a type is to provide more information about the meanings of alternatives inside a &lt;code&gt;choice&lt;/code&gt; type or the parts of some other composite type.</source>
          <target state="translated">Обычная причина для указания строки документации для типа - предоставить дополнительную информацию о значениях альтернатив внутри типа &lt;code&gt;choice&lt;/code&gt; или частей какого-либо другого составного типа.</target>
        </trans-unit>
        <trans-unit id="93b29e680886ef3e32073a78d95db6b48a506c98" translate="yes" xml:space="preserve">
          <source>The usual regexp special characters are not special inside a character alternative. A completely different set of characters is special: &amp;lsquo;</source>
          <target state="translated">Обычные специальные символы регулярного выражения не являются специальными внутри альтернативных символов. Совершенно другой набор символов особенный: '</target>
        </trans-unit>
        <trans-unit id="d9d1876d8ad2be0bc6c8de7cd54c94dfc02c0053" translate="yes" xml:space="preserve">
          <source>The usual regular expression functions do backtracking when necessary to handle the &amp;lsquo;</source>
          <target state="translated">Обычные функции регулярных выражений выполняют поиск с возвратом, когда это необходимо для обработки '</target>
        </trans-unit>
        <trans-unit id="c019ba7cb944335d1fef89c7810b797ce8729a29" translate="yes" xml:space="preserve">
          <source>The usual role of a terminal-specific library is to enable special keys to send sequences that Emacs can recognize. It may also need to set or add to &lt;code&gt;input-decode-map&lt;/code&gt; if the Termcap or Terminfo entry does not specify all the terminal&amp;rsquo;s function keys. See &lt;a href=&quot;terminal-input#Terminal-Input&quot;&gt;Terminal Input&lt;/a&gt;.</source>
          <target state="translated">Обычная роль библиотеки, специфичной для терминала, состоит в том, чтобы разрешить специальным клавишам отправлять последовательности, которые Emacs может распознать. Также может потребоваться установить или добавить в &lt;code&gt;input-decode-map&lt;/code&gt; decode -map, если запись Termcap или Terminfo не определяет все функциональные клавиши терминала. См. &lt;a href=&quot;terminal-input#Terminal-Input&quot;&gt;Терминальный ввод&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3392a5efb2e33159132ee8ca55dd0bd95184127" translate="yes" xml:space="preserve">
          <source>The usual use of this feature is to fill comments in programming language modes. If the function needs to fill a paragraph in the usual way, it can do so as follows:</source>
          <target state="translated">Обычным использованием этой функции является заполнение комментариев в режимах языка программирования.Если функции необходимо заполнить абзац обычным образом,она может сделать это следующим образом:</target>
        </trans-unit>
        <trans-unit id="ba8560d5e995fe38c893b74271adb5dbf50667f4" translate="yes" xml:space="preserve">
          <source>The usual way to change the value of a variable is with the special form &lt;code&gt;setq&lt;/code&gt;. When you need to compute the choice of variable at run time, use the function &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">Обычный способ изменить значение переменной - использовать специальную форму &lt;code&gt;setq&lt;/code&gt; . Когда вам нужно вычислить выбор переменной во время выполнения, используйте &lt;code&gt;set&lt;/code&gt; функций .</target>
        </trans-unit>
        <trans-unit id="ad41ba273b5018a4ad09f4b5ea08e124af9c068c" translate="yes" xml:space="preserve">
          <source>The usual way to define a face is through the &lt;code&gt;defface&lt;/code&gt; macro. This macro associates a face name (a symbol) with a default &lt;em&gt;face spec&lt;/em&gt;. A face spec is a construct which specifies what attributes a face should have on any given terminal; for example, a face spec might specify one foreground color on high-color terminals, and a different foreground color on low-color terminals.</source>
          <target state="translated">Обычный способ определить лицо - &lt;code&gt;defface&lt;/code&gt; макрос defface . Этот макрос связывает имя лица (символ) со &lt;em&gt;спецификацией лица по&lt;/em&gt; умолчанию . Спецификация лица - это конструкция, которая определяет, какие атрибуты лицо должно иметь на любом данном терминале; например, спецификация лица может указывать один цвет переднего плана на высокоцветных терминалах и другой цвет переднего плана на низкоцветных терминалах.</target>
        </trans-unit>
        <trans-unit id="ab4be22e46f2537548bcdd8b14595a57667df9f7" translate="yes" xml:space="preserve">
          <source>The usual way to define the SMIE grammar of a language is by defining a new global variable that holds the precedence table by giving a set of BNF rules. For example, the grammar definition for a small Pascal-like language could look like:</source>
          <target state="translated">Обычный способ определения грамматики SMIE языка-это определение новой глобальной переменной,содержащей таблицу приоритетов,с помощью набора правил BNF.Например,грамматическое определение для небольшого Паскаль-подобного языка может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="ea823ab039487ce6c627239fb33b038961688356" translate="yes" xml:space="preserve">
          <source>The usual way to make a buffer-local binding is with &lt;code&gt;make-local-variable&lt;/code&gt;, which is what major mode commands typically use. This affects just the current buffer; all other buffers (including those yet to be created) will continue to share the default value unless they are explicitly given their own buffer-local bindings.</source>
          <target state="translated">Обычный способ сделать привязку к локальному буферу - с помощью &lt;code&gt;make-local-variable&lt;/code&gt; , что обычно используется командами основного режима. Это влияет только на текущий буфер; все остальные буферы (включая те, которые еще предстоит создать) будут по-прежнему использовать значение по умолчанию, если им явно не присвоены собственные привязки к локальному буферу.</target>
        </trans-unit>
        <trans-unit id="0fe16ddfa309e34d499b3360c2ffbfd59734391f" translate="yes" xml:space="preserve">
          <source>The usual way to make a menu keymap produce a menu is to make it the definition of a prefix key. (A Lisp program can explicitly pop up a menu and receive the user&amp;rsquo;s choice&amp;mdash;see &lt;a href=&quot;pop_002dup-menus#Pop_002dUp-Menus&quot;&gt;Pop-Up Menus&lt;/a&gt;.)</source>
          <target state="translated">Обычный способ заставить раскладку меню создавать меню - сделать ее определением префиксной клавиши. (Программа на Лиспе может явно вызывать меню и получать выбор пользователя - см. &lt;a href=&quot;pop_002dup-menus#Pop_002dUp-Menus&quot;&gt;Всплывающие меню&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="413eaf722746475cb7fc0070f78d8c7cbef5d401" translate="yes" xml:space="preserve">
          <source>The usual way to read a file into a buffer as a sequence of bytes, so you can decode the contents explicitly, is with &lt;code&gt;insert-file-contents-literally&lt;/code&gt; (see &lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;Reading from Files&lt;/a&gt;); alternatively, specify a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;rawfile&lt;/var&gt; argument when visiting a file with &lt;code&gt;find-file-noselect&lt;/code&gt;. These methods result in a unibyte buffer.</source>
          <target state="translated">Обычный способ прочитать файл в буфер как последовательность байтов, чтобы вы могли явно декодировать содержимое, - это &lt;code&gt;insert-file-contents-literally&lt;/code&gt; (см. &lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;Чтение из файлов&lt;/a&gt; ); в качестве альтернативы укажите аргумент &lt;var&gt;rawfile&lt;/var&gt; ,отличный от &lt;code&gt;nil&lt;/code&gt; ,приобращении к файлу с помощью &lt;code&gt;find-file-noselect&lt;/code&gt; . Эти методы приводят к созданию однобайтового буфера.</target>
        </trans-unit>
        <trans-unit id="5a11c911f5b0f69a171b92b7cffb6822859b5ec3" translate="yes" xml:space="preserve">
          <source>The usual way to reference a variable is to write the symbol which names it. See &lt;a href=&quot;symbol-forms#Symbol-Forms&quot;&gt;Symbol Forms&lt;/a&gt;.</source>
          <target state="translated">Обычный способ ссылки на переменную - написать символ, который ее называет. См. &lt;a href=&quot;symbol-forms#Symbol-Forms&quot;&gt;Формы символов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5526547f8b2c540a3aed5c614e44c4e6712243b8" translate="yes" xml:space="preserve">
          <source>The usual way to use the byte sequence that results from explicitly encoding text is to copy it to a file or process&amp;mdash;for example, to write it with &lt;code&gt;write-region&lt;/code&gt; (see &lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;Writing to Files&lt;/a&gt;), and suppress encoding by binding &lt;code&gt;coding-system-for-write&lt;/code&gt; to &lt;code&gt;no-conversion&lt;/code&gt;.</source>
          <target state="translated">Обычный способ использования байтовой последовательности, полученной в результате явного кодирования текста, - это скопировать ее в файл или процесс, например, записать с помощью &lt;code&gt;write-region&lt;/code&gt; (см. &lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;Запись в файлы&lt;/a&gt; ), и подавить кодирование путем привязки &lt;code&gt;coding-system-for-write&lt;/code&gt; к &lt;code&gt;no-conversion&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36be957267ce38e09b5982a5646ced40aa3279e5" translate="yes" xml:space="preserve">
          <source>The valid values of &lt;code&gt;syntax-table&lt;/code&gt; text property are:</source>
          <target state="translated">Допустимые значения свойства текста &lt;code&gt;syntax-table&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="356e00fd867a17cbdcb1217100288420420a4192" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;auto-raise&lt;/code&gt; should be used when your window manager has the focus automatically follow the position of the mouse pointer and a frame that gains focus is raised automatically.</source>
          <target state="translated">Значение &lt;code&gt;auto-raise&lt;/code&gt; следует использовать , когда ваш оконный менеджер имеет фокус автоматически следовать позиции указателя мыши и кадр , который получает фокус поднимается автоматически.</target>
        </trans-unit>
        <trans-unit id="893aaa83d61bb05c575aed10c479a15392b8a63f" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;t&lt;/code&gt; should be used when your window manager has the focus automatically follow the position of the mouse pointer but a frame that gains focus is not raised automatically and may even remain occluded by other window-system windows.</source>
          <target state="translated">Значение &lt;code&gt;t&lt;/code&gt; следует использовать, когда у вашего оконного менеджера фокус автоматически следует за положением указателя мыши, но фрейм, который получает фокус, не поднимается автоматически и может даже оставаться закрытым другими окнами оконной системы.</target>
        </trans-unit>
        <trans-unit id="aed9f61a23e975eb7392678e85f51f4d74310e87" translate="yes" xml:space="preserve">
          <source>The value &lt;var&gt;color&lt;/var&gt; specifies the color to draw with. The default is the foreground color of the face for simple boxes, and the background color of the face for 3D boxes.</source>
          <target state="translated">&lt;var&gt;color&lt;/var&gt; значения определяет цвет для рисования. По умолчанию используется цвет переднего плана лица для простых блоков и цвет фона лица для трехмерных блоков.</target>
        </trans-unit>
        <trans-unit id="726b5e07fbd252dac7c2dae2a2b05f252281e1cf" translate="yes" xml:space="preserve">
          <source>The value &lt;var&gt;height&lt;/var&gt; is the value that was specified for the height of the horizontal scroll bar (which may be &lt;code&gt;nil&lt;/code&gt;); &lt;var&gt;lines&lt;/var&gt; is the (possibly rounded) number of lines that the horizontally scroll bar actually occupies.</source>
          <target state="translated">Значение &lt;var&gt;height&lt;/var&gt; - это значение, указанное для высоты горизонтальной полосы прокрутки (которое может быть &lt;code&gt;nil&lt;/code&gt; ); &lt;var&gt;lines&lt;/var&gt; - это (возможно, округленное) количество строк, которые фактически занимает горизонтальная полоса прокрутки.</target>
        </trans-unit>
        <trans-unit id="db2573e485b9f1d52d90fe7b697fd92212845cf8" translate="yes" xml:space="preserve">
          <source>The value &lt;var&gt;style&lt;/var&gt; specifies whether to draw a 3D box. If it is &lt;code&gt;released-button&lt;/code&gt;, the box looks like a 3D button that is not being pressed. If it is &lt;code&gt;pressed-button&lt;/code&gt;, the box looks like a 3D button that is being pressed. If it is &lt;code&gt;nil&lt;/code&gt; or omitted, a plain 2D box is used.</source>
          <target state="translated">В стоимости &lt;var&gt;style&lt;/var&gt; определяет , следует ли нарисовать 3D окно. Если она &lt;code&gt;released-button&lt;/code&gt; , окно выглядит как 3D-кнопка, которую не нажимают. Если она &lt;code&gt;pressed-button&lt;/code&gt; , поле выглядит как нажатая 3D-кнопка. Если он равен &lt;code&gt;nil&lt;/code&gt; или опущен, используется простой 2D-блок.</target>
        </trans-unit>
        <trans-unit id="1eb8d30e0ef6e2c616649855299438edaa4b6387" translate="yes" xml:space="preserve">
          <source>The value &lt;var&gt;width&lt;/var&gt; is the value that was specified for the width of the vertical scroll bar (which may be &lt;code&gt;nil&lt;/code&gt;); &lt;var&gt;columns&lt;/var&gt; is the (possibly rounded) number of columns that the vertical scroll bar actually occupies.</source>
          <target state="translated">&lt;var&gt;width&lt;/var&gt; значения - это значение, указанное для ширины вертикальной полосы прокрутки (которое может быть &lt;code&gt;nil&lt;/code&gt; ); &lt;var&gt;columns&lt;/var&gt; - это (возможно, округленное) количество столбцов, которые фактически занимает вертикальная полоса прокрутки.</target>
        </trans-unit>
        <trans-unit id="738dcd4e09dec82d9c9cbf00960b591b0d043018" translate="yes" xml:space="preserve">
          <source>The value can also be a list of error conditions (see &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;Signaling Errors&lt;/a&gt;). Then the debugger is called only for error conditions in this list (except those also listed in &lt;code&gt;debug-ignored-errors&lt;/code&gt;). For example, if you set &lt;code&gt;debug-on-error&lt;/code&gt; to the list &lt;code&gt;(void-variable)&lt;/code&gt;, the debugger is only called for errors about a variable that has no value.</source>
          <target state="translated">Значение также может быть списком условий ошибки (см. &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;Сигнализация ошибок&lt;/a&gt; ). Затем отладчик вызывается только для условий ошибки в этом списке (кроме тех, которые также перечислены в &lt;code&gt;debug-ignored-errors&lt;/code&gt; ). Например, если вы установили &lt;code&gt;debug-on-error&lt;/code&gt; в список &lt;code&gt;(void-variable)&lt;/code&gt; , отладчик вызывается только для ошибок, связанных с переменной, которая не имеет значения.</target>
        </trans-unit>
        <trans-unit id="0fca95603596a3c0776843a564cf75cbd2a26719" translate="yes" xml:space="preserve">
          <source>The value can also be a symbol with a function definition. That is equivalent to &lt;code&gt;t&lt;/code&gt;, except that the next warning will also call the function with no arguments with the warnings buffer current. The function can insert text which will serve as a header for the series of warnings.</source>
          <target state="translated">Значение также может быть символом с определением функции. Это эквивалентно &lt;code&gt;t&lt;/code&gt; , за исключением того, что следующее предупреждение также вызовет функцию без аргументов с текущим буфером предупреждений. Функция может вставлять текст, который будет служить заголовком для серии предупреждений.</target>
        </trans-unit>
        <trans-unit id="036ce65d4e444cc9ca133db8c5ff911fde4b8b3b" translate="yes" xml:space="preserve">
          <source>The value can also be floating point or a function, which specifies the height relative to an &lt;em&gt;underlying face&lt;/em&gt; (see &lt;a href=&quot;displaying-faces#Displaying-Faces&quot;&gt;Displaying Faces&lt;/a&gt;). A floating-point value specifies the amount by which to scale the height of the underlying face. A function value is called with one argument, the height of the underlying face, and returns the height of the new face. If the function is passed an integer argument, it must return an integer.</source>
          <target state="translated">Значение также может быть с плавающей точкой или функцией, которая определяет высоту относительно &lt;em&gt;нижележащего лица&lt;/em&gt; (см. &lt;a href=&quot;displaying-faces#Displaying-Faces&quot;&gt;Отображение лиц&lt;/a&gt; ). Значение с плавающей запятой указывает величину, на которую можно масштабировать высоту нижележащего лица. Значение функции вызывается с одним аргументом, высотой нижележащего лица, и возвращает высоту нового лица. Если функции передается целочисленный аргумент, она должна возвращать целое число.</target>
        </trans-unit>
        <trans-unit id="93f34264bf299dd9ff1623c4a048f9a90b6d13e4" translate="yes" xml:space="preserve">
          <source>The value can be &lt;code&gt;nil&lt;/code&gt; (don&amp;rsquo;t use parity), the symbol &lt;code&gt;odd&lt;/code&gt; (use odd parity), or the symbol &lt;code&gt;even&lt;/code&gt; (use even parity). If &lt;var&gt;parity&lt;/var&gt; is not given, it defaults to no parity.</source>
          <target state="translated">Значение может быть &lt;code&gt;nil&lt;/code&gt; (не использовать четность), &lt;code&gt;odd&lt;/code&gt; символом (использовать нечетную четность) или &lt;code&gt;even&lt;/code&gt; символом (использовать четность). Если &lt;var&gt;parity&lt;/var&gt; не задана, по умолчанию не используется четность.</target>
        </trans-unit>
        <trans-unit id="b19ab7691b129f64fc5f72d4c526e81bb1415159" translate="yes" xml:space="preserve">
          <source>The value can be a string; that should be the name of a file containing external-format X bitmap data. The file is found in the directories listed in the variable &lt;code&gt;x-bitmap-file-path&lt;/code&gt;.</source>
          <target state="translated">Значение может быть строкой; это должно быть имя файла, содержащего данные растрового изображения X внешнего формата. Файл находится в каталогах, перечисленных в переменной &lt;code&gt;x-bitmap-file-path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90810279cbdbc3d6497008e3e858bcead8d9c860" translate="yes" xml:space="preserve">
          <source>The value can be an approximation. The function may avoid expensive processing and return an inexact result.</source>
          <target state="translated">Значение может быть аппроксимацией.Функция может избежать дорогостоящей обработки и вернуть неточный результат.</target>
        </trans-unit>
        <trans-unit id="a0ff635173abbeea2ba4af8f9b36759383fe725e" translate="yes" xml:space="preserve">
          <source>The value cell holds a symbol&amp;rsquo;s value as a variable, which is what you get if the symbol itself is evaluated as a Lisp expression. See &lt;a href=&quot;variables#Variables&quot;&gt;Variables&lt;/a&gt;, for details about how values are set and retrieved, including complications such as &lt;em&gt;local bindings&lt;/em&gt; and &lt;em&gt;scoping rules&lt;/em&gt;. Most symbols can have any Lisp object as a value, but certain special symbols have values that cannot be changed; these include &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt;, and any symbol whose name starts with &amp;lsquo;</source>
          <target state="translated">Ячейка значения содержит значение символа как переменную, что вы получаете, если сам символ оценивается как выражение Лиспа. См. В разделе &amp;laquo; &lt;a href=&quot;variables#Variables&quot;&gt;Переменные&amp;raquo;&lt;/a&gt; подробные сведения о том, как устанавливаются и извлекаются значения, включая такие сложности, как &lt;em&gt;локальные привязки&lt;/em&gt; и &lt;em&gt;правила области действия&lt;/em&gt; . Большинство символов могут иметь в качестве значения любой объект Lisp, но некоторые специальные символы имеют значения, которые нельзя изменить; к ним относятся &lt;code&gt;nil&lt;/code&gt; и &lt;code&gt;t&lt;/code&gt; , а также любой символ, имя которого начинается с '</target>
        </trans-unit>
        <trans-unit id="00902684377c36ec854c666f66e1def68419f7f0" translate="yes" xml:space="preserve">
          <source>The value decides which Lisp object to use for representing a JSON array. It can be either &lt;code&gt;array&lt;/code&gt;, the default, to use Lisp arrays; or &lt;code&gt;list&lt;/code&gt; to use lists.</source>
          <target state="translated">Значение решает, какой объект Lisp использовать для представления массива JSON. Это может быть любой &lt;code&gt;array&lt;/code&gt; (по умолчанию) для использования массивов Лиспа; или &lt;code&gt;list&lt;/code&gt; для использования списков.</target>
        </trans-unit>
        <trans-unit id="16edef5cb81f91f4adf2188db4dc4f629deae17d" translate="yes" xml:space="preserve">
          <source>The value decides which Lisp object to use for representing the key-value mappings of a JSON object. It can be either &lt;code&gt;hash-table&lt;/code&gt;, the default, to make hashtables with strings as keys; &lt;code&gt;alist&lt;/code&gt; to use alists with symbols as keys; or &lt;code&gt;plist&lt;/code&gt; to use plists with keyword symbols as keys.</source>
          <target state="translated">Значение определяет, какой объект Lisp использовать для представления сопоставлений значения ключа объекта JSON. Это может быть либо &lt;code&gt;hash-table&lt;/code&gt; , используемая по умолчанию, для создания хэш-таблиц со строками в качестве ключей; &lt;code&gt;alist&lt;/code&gt; для использования списков с символами в качестве ключей; или &lt;code&gt;plist&lt;/code&gt; , чтобы использовать списки с ключевыми словами в качестве ключей.</target>
        </trans-unit>
        <trans-unit id="3fa2905ebfc7e60316747f384efec8fd2b021c6b" translate="yes" xml:space="preserve">
          <source>The value decides which Lisp object to use to represent the JSON keyword &lt;code&gt;false&lt;/code&gt;. It defaults to the symbol &lt;code&gt;:false&lt;/code&gt;.</source>
          <target state="translated">Значение определяет, какой объект Lisp использовать для представления ключевого слова JSON &lt;code&gt;false&lt;/code&gt; . По умолчанию используется символ &lt;code&gt;:false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70971f173ca78b68c08bef1aa1b243f7d8fcb51c" translate="yes" xml:space="preserve">
          <source>The value decides which Lisp object to use to represent the JSON keyword &lt;code&gt;null&lt;/code&gt;. It defaults to the symbol &lt;code&gt;:null&lt;/code&gt;.</source>
          <target state="translated">Значение определяет, какой объект Lisp использовать для представления ключевого слова JSON &lt;code&gt;null&lt;/code&gt; . По умолчанию используется символ &lt;code&gt;:null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fe437d2786c53546e9e4721af67a363a80470e7" translate="yes" xml:space="preserve">
          <source>The value denotes the side of the frame or window where a new window displaying the buffer shall be created. This entry is used by &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; to indicate the side of the frame where a new side window shall be placed (see &lt;a href=&quot;displaying-buffers-in-side-windows#Displaying-Buffers-in-Side-Windows&quot;&gt;Displaying Buffers in Side Windows&lt;/a&gt;). It is also used by &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; to indicate the side of an existing window where the new window shall be located (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;).</source>
          <target state="translated">Значение обозначает сторону кадра или окна, где должно быть создано новое окно, отображающее буфер. Эта запись используется &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; для указания стороны кадра, где должно быть размещено новое боковое окно (см. &lt;a href=&quot;displaying-buffers-in-side-windows#Displaying-Buffers-in-Side-Windows&quot;&gt;Отображение буферов в&lt;/a&gt; боковых окнах ). Он также используется &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; для указания стороны существующего окна, где должно быть расположено новое окно (см. &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Атомарные окна&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f7ee348338ce1106641a672b981019be718a72ff" translate="yes" xml:space="preserve">
          <source>The value has no effect when renaming would not alter the owner or group of the file; that is, for files which are owned by the user and whose group matches the default for a new file created there by the user.</source>
          <target state="translated">Значение не влияет на то,что переименование не изменит владельца или группу файла,т.е.для файлов,которые принадлежат пользователю и чья группа совпадает со значением по умолчанию для нового файла,созданного там пользователем.</target>
        </trans-unit>
        <trans-unit id="ffc415f45e41ef7cef7291f52d1ca8b82b116694" translate="yes" xml:space="preserve">
          <source>The value has the form &lt;code&gt;(&lt;var&gt;offset&lt;/var&gt; &lt;var&gt;abbr&lt;/var&gt;)&lt;/code&gt;. Here &lt;var&gt;offset&lt;/var&gt; is an integer giving the number of seconds ahead of Universal Time (east of Greenwich). A negative value means west of Greenwich. The second element, &lt;var&gt;abbr&lt;/var&gt;, is a string giving an abbreviation for the time zone, e.g., &amp;lsquo;</source>
          <target state="translated">Значение имеет форму &lt;code&gt;(&lt;var&gt;offset&lt;/var&gt; &lt;var&gt;abbr&lt;/var&gt;)&lt;/code&gt; . Здесь &lt;var&gt;offset&lt;/var&gt; - это целое число, дающее количество секунд до всемирного времени (к востоку от Гринвича). Отрицательное значение означает запад от Гринвича. Второй элемент &lt;var&gt;abbr&lt;/var&gt; представляет собой строку, дающую сокращенное обозначение часового пояса, например '</target>
        </trans-unit>
        <trans-unit id="d54c14bbe8e273d4103e284f553d7a5a47ac3803" translate="yes" xml:space="preserve">
          <source>The value is 5 because that is the</source>
          <target state="translated">Значение 5,потому что это</target>
        </trans-unit>
        <trans-unit id="fcb6e2e9389f7780a675906dacf95eb444c0772f" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;nil&lt;/code&gt; for a subexpression inside a &amp;lsquo;</source>
          <target state="translated">Значение равно &lt;code&gt;nil&lt;/code&gt; для части выражения внутри '</target>
        </trans-unit>
        <trans-unit id="ac9636b8cfc92069e35cc830e2013018fdbb6b7e" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;count&lt;/var&gt; is out of range, or for a subexpression inside a &amp;lsquo;</source>
          <target state="translated">Значение равно &lt;code&gt;nil&lt;/code&gt; , если &lt;var&gt;count&lt;/var&gt; выходит за пределы допустимого диапазона или для подвыражения внутри '</target>
        </trans-unit>
        <trans-unit id="c167e0d6bf2b798519700d2a08b4be56ddb7ac7a" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;pos&lt;/var&gt; is not visible in &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that stands for the selected window. If &lt;var&gt;pos&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that stands for the value of point in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">Значение равно &lt;code&gt;nil&lt;/code&gt; если &lt;var&gt;pos&lt;/var&gt; не отображается в &lt;var&gt;window&lt;/var&gt; . Если &lt;var&gt;window&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , это означает выбранное окно. Если &lt;var&gt;pos&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , это означает значение точки в &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a178845a64825fe33f0ce1505830cf0c8571ccb5" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;state&lt;/var&gt; represents a parse which has arrived at a top level position.</source>
          <target state="translated">Значение равно &lt;code&gt;nil&lt;/code&gt; если &lt;var&gt;state&lt;/var&gt; представляет собой синтаксический анализ, который достиг позиции верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="f1847ffb79e4ef977f22b0f89bbfa3a8711353ea" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;nil&lt;/code&gt; if the properties remain unchanged all the way to the end of &lt;var&gt;object&lt;/var&gt; and &lt;var&gt;limit&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;. If the value is non-&lt;code&gt;nil&lt;/code&gt;, it is a position greater than or equal to &lt;var&gt;pos&lt;/var&gt;. The value equals &lt;var&gt;pos&lt;/var&gt; only when &lt;var&gt;limit&lt;/var&gt; equals &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">Значение равно &lt;code&gt;nil&lt;/code&gt; если свойства остаются неизменными до конца &lt;var&gt;object&lt;/var&gt; а &lt;var&gt;limit&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; . Если значение не равно &lt;code&gt;nil&lt;/code&gt; , это позиция больше или равна &lt;var&gt;pos&lt;/var&gt; . Значение равно &lt;var&gt;pos&lt;/var&gt; только тогда, когда &lt;var&gt;limit&lt;/var&gt; равен &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="f42191ef8fc8d62fa782e6182ae3d4adf74e945c" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;nil&lt;/code&gt; if the property remains unchanged all the way to the end of &lt;var&gt;object&lt;/var&gt; and &lt;var&gt;limit&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;. If the value is non-&lt;code&gt;nil&lt;/code&gt;, it is a position greater than or equal to &lt;var&gt;pos&lt;/var&gt;; it equals &lt;var&gt;pos&lt;/var&gt; only if &lt;var&gt;limit&lt;/var&gt; equals &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">Значение равно &lt;code&gt;nil&lt;/code&gt; если свойство остается неизменным до конца &lt;var&gt;object&lt;/var&gt; а &lt;var&gt;limit&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; . Если значение не равно &lt;code&gt;nil&lt;/code&gt; , это позиция больше или равна &lt;var&gt;pos&lt;/var&gt; ; он равен &lt;var&gt;pos&lt;/var&gt; , только если &lt;var&gt;limit&lt;/var&gt; равен &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="862c753ca19532a871df595b1b786989741df504" translate="yes" xml:space="preserve">
          <source>The value is a form (an expression).</source>
          <target state="translated">Значение представляет собой форму (выражение).</target>
        </trans-unit>
        <trans-unit id="ec33dbdc3801cba4b2a38abf814dcf1da00c4804" translate="yes" xml:space="preserve">
          <source>The value is a function.</source>
          <target state="translated">Значение является функцией.</target>
        </trans-unit>
        <trans-unit id="18ad4635bccc9d11d2025c4e0e4bf454e39e4870" translate="yes" xml:space="preserve">
          <source>The value is a key sequence. The customization buffer shows the key sequence using the same syntax as the</source>
          <target state="translated">Значение представляет собой последовательность клавиш.Буфер настройки показывает последовательность ключей с использованием того же синтаксиса,что и</target>
        </trans-unit>
        <trans-unit id="92047d2ff22dd07d30de54ae74480f7db138859c" translate="yes" xml:space="preserve">
          <source>The value is a list of all defined character set names.</source>
          <target state="translated">Значение представляет собой список всех определенных имен наборов символов.</target>
        </trans-unit>
        <trans-unit id="42e3b3b8e9f18abe4b0e6fc019c88b2b88f0e5a7" translate="yes" xml:space="preserve">
          <source>The value is a list of forms (expressions).</source>
          <target state="translated">Значение представляет собой список форм (выражений).</target>
        </trans-unit>
        <trans-unit id="d9d7add64fd5fda2d55573b4b40ddee4fa132824" translate="yes" xml:space="preserve">
          <source>The value is a list of functions.</source>
          <target state="translated">Значение представляет собой список функций.</target>
        </trans-unit>
        <trans-unit id="744e014c080a028da5111b9957a721b5376e2f9e" translate="yes" xml:space="preserve">
          <source>The value is a predicate&amp;mdash;a function of one argument that returns non-&lt;code&gt;nil&lt;/code&gt; for success and &lt;code&gt;nil&lt;/code&gt; for failure.</source>
          <target state="translated">Значение является предикатом - функцией одного аргумента, которая возвращает &lt;code&gt;nil&lt;/code&gt; в случае успеха и &lt;code&gt;nil&lt;/code&gt; в случае неудачи.</target>
        </trans-unit>
        <trans-unit id="fc95eed350ead41f92d508546cbe37902aff0c7a" translate="yes" xml:space="preserve">
          <source>The value is a program name.</source>
          <target state="translated">Значение-это название программы.</target>
        </trans-unit>
        <trans-unit id="b563d6300ce73a67d16482c93e6765622dfc6342" translate="yes" xml:space="preserve">
          <source>The value is a whole shell command.</source>
          <target state="translated">Значение-целая команда оболочки.</target>
        </trans-unit>
        <trans-unit id="0fb0a1e296cb5eb5561689c7425698e96e4d5162" translate="yes" xml:space="preserve">
          <source>The value is always a string ending with a slash.</source>
          <target state="translated">Значение всегда является строкой,заканчивающейся косой чертой.</target>
        </trans-unit>
        <trans-unit id="38abcf64aec0a36e0f511c163ed2cd547b75773a" translate="yes" xml:space="preserve">
          <source>The value is an alist or nested alist in which each element describes one unpacked field.</source>
          <target state="translated">Значение-алист или вложенный алист,в котором каждый элемент описывает одно распакованное поле.</target>
        </trans-unit>
        <trans-unit id="f7f574a40cde0014d34b1f4c77ea68404bc7d6db" translate="yes" xml:space="preserve">
          <source>The value is an expression for determining whether the named menu item should be enabled in menus. See &lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;Simple Menu Items&lt;/a&gt;.</source>
          <target state="translated">Значение представляет собой выражение для определения, должен ли указанный пункт меню быть включен в меню. См. &lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;Простые пункты меню&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="988d1fb03cc87294d6912ad4a008a4a541a3d1cf" translate="yes" xml:space="preserve">
          <source>The value is an interactive form for the named function. Normally, you should not set this directly; use the &lt;code&gt;interactive&lt;/code&gt; special form instead. See &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;.</source>
          <target state="translated">Значение представляет собой интерактивную форму для названной функции. Обычно вы не должны устанавливать это напрямую; используйте вместо этого &lt;code&gt;interactive&lt;/code&gt; специальную форму. См. &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Интерактивный вызов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a2675782eef27c42642a60fce1752cbb34644db5" translate="yes" xml:space="preserve">
          <source>The value is boolean&amp;mdash;either &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt;. Note that by using &lt;code&gt;choice&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; together (see the next section), you can specify that the value must be &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt;, but also specify the text to describe each value in a way that fits the specific meaning of the alternative.</source>
          <target state="translated">Значение является логическим - либо &lt;code&gt;nil&lt;/code&gt; , либо &lt;code&gt;t&lt;/code&gt; . Обратите внимание, что, используя вместе &lt;code&gt;choice&lt;/code&gt; и &lt;code&gt;const&lt;/code&gt; (см. Следующий раздел), вы можете указать, что значение должно быть &lt;code&gt;nil&lt;/code&gt; или &lt;code&gt;t&lt;/code&gt; , но также указать текст для описания каждого значения таким образом, чтобы он соответствовал конкретному значению альтернативы.</target>
        </trans-unit>
        <trans-unit id="3894f2edc61204404042bc861be88ec42f3d3a29" translate="yes" xml:space="preserve">
          <source>The value is copied from &lt;code&gt;this-command&lt;/code&gt; when a command returns to the command loop, except when the command has specified a prefix argument for the following command.</source>
          <target state="translated">Значение копируется из &lt;code&gt;this-command&lt;/code&gt; , когда команда возвращается в командный цикл, за исключением случаев, когда команда указала аргумент префикса для следующей команды.</target>
        </trans-unit>
        <trans-unit id="306c554506d781ac28efad2e4ea92701f816dce5" translate="yes" xml:space="preserve">
          <source>The value is either a major mode or a list of major modes. &lt;code&gt;display-buffer-reuse-mode-window&lt;/code&gt; may reuse a window whenever the value specified by this entry matches the major mode of that window&amp;rsquo;s buffer. Other action functions ignore such entries.</source>
          <target state="translated">Значение - это либо основной режим, либо список основных режимов. &lt;code&gt;display-buffer-reuse-mode-window&lt;/code&gt; может повторно использовать окно всякий раз, когда значение, указанное в этой записи, совпадает с основным режимом буфера этого окна. Другие функции действий игнорируют такие записи.</target>
        </trans-unit>
        <trans-unit id="1843e0f5c17e7f0a09b0d1319f9a950d3c352fa5" translate="yes" xml:space="preserve">
          <source>The value is either the empty vector, or is a newly constructed nonempty vector that is not &lt;code&gt;eq&lt;/code&gt; to any existing vector.</source>
          <target state="translated">Значение является либо пустым вектором, либо вновь созданным непустым вектором, не &lt;code&gt;eq&lt;/code&gt; ни одному из существующих векторов.</target>
        </trans-unit>
        <trans-unit id="eb6e5361e7a91533e27cdf7399370f943e9ba10d" translate="yes" xml:space="preserve">
          <source>The value is measured in baud.</source>
          <target state="translated">Значение измеряется в бодах.</target>
        </trans-unit>
        <trans-unit id="be4e71b6f99d1f91e5e6b4886554248affe4a867" translate="yes" xml:space="preserve">
          <source>The value is negative if the first substring is less, positive if the first is greater, and zero if they are equal. The absolute value of the result is one plus the index of the first differing characters within the substrings.</source>
          <target state="translated">Значение отрицательное,если первая подстрока меньше,положительное,если первая больше,и нулевое,если они равны.Абсолютное значение результата-один плюс индекс первых отличающихся символов внутри подстрок.</target>
        </trans-unit>
        <trans-unit id="a221deec0b7b326eded452b6cef1afc0c42096b1" translate="yes" xml:space="preserve">
          <source>The value is normally &lt;code&gt;nil&lt;/code&gt;; Lisp programs bind it to &lt;code&gt;t&lt;/code&gt; for brief periods of time.</source>
          <target state="translated">Значение обычно равно &lt;code&gt;nil&lt;/code&gt; ; Программы на Лиспе привязывают его к &lt;code&gt;t&lt;/code&gt; на короткие промежутки времени.</target>
        </trans-unit>
        <trans-unit id="a10d990baa1d6dc687c357d4165562f04a895757" translate="yes" xml:space="preserve">
          <source>The value is normally a list of the form &lt;code&gt;(&lt;var&gt;filenum&lt;/var&gt;
&lt;var&gt;devnum&lt;/var&gt;)&lt;/code&gt;. This pair of numbers uniquely identifies the file among all files accessible on the system. See the function &lt;code&gt;file-attributes&lt;/code&gt;, in &lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;File Attributes&lt;/a&gt;, for more information about them.</source>
          <target state="translated">Значение обычно представляет собой список в форме &lt;code&gt;(&lt;var&gt;filenum&lt;/var&gt; &lt;var&gt;devnum&lt;/var&gt;)&lt;/code&gt; . Эта пара чисел однозначно идентифицирует файл среди всех файлов, доступных в системе. См функциональных &lt;code&gt;file-attributes&lt;/code&gt; в &lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;файловых атрибутах&lt;/a&gt; , для получения дополнительной информации о них.</target>
        </trans-unit>
        <trans-unit id="f6457f0bb5cd3fdfe83d6454775a62a020b7ae87" translate="yes" xml:space="preserve">
          <source>The value is normally an absolute file name. It can also be &lt;code&gt;nil&lt;/code&gt;, if the definition is not associated with any file. If &lt;var&gt;symbol&lt;/var&gt; specifies an autoloaded function, the value can be a relative file name without extension.</source>
          <target state="translated">Значение обычно является абсолютным именем файла. Он также может быть &lt;code&gt;nil&lt;/code&gt; , если определение не связано ни с каким файлом. Если &lt;var&gt;symbol&lt;/var&gt; указывает автоматически загружаемую функцию, значением может быть относительное имя файла без расширения.</target>
        </trans-unit>
        <trans-unit id="f4bcfcbe7d05d1c0191cd0ba7af653328fe120d2" translate="yes" xml:space="preserve">
          <source>The value is significant only as to whether it is &lt;code&gt;nil&lt;/code&gt; or not. Since such variables often end up acquiring more values over time, this convention is not strongly recommended.</source>
          <target state="translated">Значение имеет значение только в том случае, если оно равно &lt;code&gt;nil&lt;/code&gt; или нет. Поскольку такие переменные часто со временем приобретают больше значений, это соглашение настоятельно не рекомендуется.</target>
        </trans-unit>
        <trans-unit id="778494fde2953cd1ddb11ad185ad2d2dd95186e4" translate="yes" xml:space="preserve">
          <source>The value may also be &lt;code&gt;nil&lt;/code&gt;. Then all commands work normally, even disabled ones.</source>
          <target state="translated">Значение также может быть &lt;code&gt;nil&lt;/code&gt; . Тогда все команды работают нормально, даже отключенные.</target>
        </trans-unit>
        <trans-unit id="ef59b01ef55bdf2efe2493eea3cfaf23a97d2e9e" translate="yes" xml:space="preserve">
          <source>The value may be any Lisp object that can be printed and read back. You can use &lt;code&gt;sexp&lt;/code&gt; as a fall-back for any option, if you don&amp;rsquo;t want to take the time to work out a more specific type to use.</source>
          <target state="translated">Значением может быть любой объект Lisp, который можно распечатать и прочитать. Вы можете использовать &lt;code&gt;sexp&lt;/code&gt; как запасной вариант для любого варианта, если не хотите тратить время на разработку более конкретного типа для использования.</target>
        </trans-unit>
        <trans-unit id="b99730ddec359b16348016cabda6e3291d81a09e" translate="yes" xml:space="preserve">
          <source>The value must be &lt;var&gt;value&lt;/var&gt;&amp;mdash;nothing else is allowed.</source>
          <target state="translated">Значение должно быть &lt;var&gt;value&lt;/var&gt; ничего другого не допускается.</target>
        </trans-unit>
        <trans-unit id="87b4d5cd14fe72c47e3003a8680a757eb4604dbf" translate="yes" xml:space="preserve">
          <source>The value must be a character code. A character code is actually an integer, but this type shows the value by inserting the character in the buffer, rather than by showing the number.</source>
          <target state="translated">Значение должно быть символьным кодом.Символьный код на самом деле является целым числом,но этот тип показывает значение,вставляя символ в буфер,а не показывая число.</target>
        </trans-unit>
        <trans-unit id="356d38d5cf3fa505e305c63022ab492161a1a6ed" translate="yes" xml:space="preserve">
          <source>The value must be a coding-system name, and you can do completion with</source>
          <target state="translated">Значение должно быть именем системы кодирования,и вы можете сделать заполнение с помощью</target>
        </trans-unit>
        <trans-unit id="63573ffb5bc552f254086ecf27ae3051cb0cceff" translate="yes" xml:space="preserve">
          <source>The value must be a cons cell, its &lt;small&gt;CAR&lt;/small&gt; must fit &lt;var&gt;car-type&lt;/var&gt;, and its &lt;small&gt;CDR&lt;/small&gt; must fit &lt;var&gt;cdr-type&lt;/var&gt;. For example, &lt;code&gt;(cons string
symbol)&lt;/code&gt; is a customization type which matches values such as &lt;code&gt;(&quot;foo&quot; . foo)&lt;/code&gt;.</source>
          <target state="translated">Значение должно быть cons-ячейкой, ее &lt;small&gt;CAR&lt;/small&gt; должен соответствовать &lt;var&gt;car-type&lt;/var&gt; , а его &lt;small&gt;CDR&lt;/small&gt; должен соответствовать &lt;var&gt;cdr-type&lt;/var&gt; . Например, &lt;code&gt;(cons string symbol)&lt;/code&gt; - это тип настройки, который соответствует таким значениям, как &lt;code&gt;(&quot;foo&quot; . foo)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57910dac76238c31c6f7af52f08cdcf756ebfb61" translate="yes" xml:space="preserve">
          <source>The value must be a directory. The widget provides completion.</source>
          <target state="translated">Значение должно быть каталогом.Виджет обеспечивает завершение.</target>
        </trans-unit>
        <trans-unit id="810836eddfb49dd28f43e49c497214d6e73aaac5" translate="yes" xml:space="preserve">
          <source>The value must be a file name for an existing file. The widget provides completion.</source>
          <target state="translated">Значение должно быть именем файла для существующего файла.Виджет обеспечивает завершение.</target>
        </trans-unit>
        <trans-unit id="b6a74a7f285c0c5906e259820de400e746147836" translate="yes" xml:space="preserve">
          <source>The value must be a file name. The widget provides completion.</source>
          <target state="translated">Значение должно быть именем файла.Виджет обеспечивает завершение.</target>
        </trans-unit>
        <trans-unit id="13f9e716c79c89cbb1b9b4a0a3061a3b3b7535c7" translate="yes" xml:space="preserve">
          <source>The value must be a function taking one argument (a frame), supposed to return non-&lt;code&gt;nil&lt;/code&gt; if that frame is a candidate for displaying the buffer. This entry is used by &lt;code&gt;display-buffer-use-some-frame&lt;/code&gt;.</source>
          <target state="translated">Значение должно быть функцией, принимающей один аргумент (кадр), которая должна возвращать &lt;code&gt;nil&lt;/code&gt; если этот кадр является кандидатом на отображение буфера. Эта запись используется &lt;code&gt;display-buffer-use-some-frame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0769814e541d4c1c6d9cf382832b62aff25584a" translate="yes" xml:space="preserve">
          <source>The value must be a function that takes one argument, a window, and returns either a new window (which will be used to display the desired buffer) or &lt;code&gt;nil&lt;/code&gt; (which means the splitting failed). The default value is &lt;code&gt;split-window-sensibly&lt;/code&gt;, which is documented next.</source>
          <target state="translated">Значение должно быть функцией, которая принимает один аргумент, окно, и возвращает либо новое окно (которое будет использоваться для отображения желаемого буфера), либо &lt;code&gt;nil&lt;/code&gt; (что означает сбой разделения). Значение по умолчанию - &lt;code&gt;split-window-sensibly&lt;/code&gt; , что описано далее.</target>
        </trans-unit>
        <trans-unit id="10add5bdc2dc784e1ca37482866dfd6d4c60ef8f" translate="yes" xml:space="preserve">
          <source>The value must be a list and each element of the list must fit the type &lt;var&gt;element-type&lt;/var&gt;. This appears in the customization buffer as a list of elements, with &amp;lsquo;</source>
          <target state="translated">Значение должно быть списком, и каждый элемент списка должен соответствовать типу &lt;var&gt;element-type&lt;/var&gt; . Он отображается в буфере настройки как список элементов с '</target>
        </trans-unit>
        <trans-unit id="69283ab46854490317f97e1feb0235ad06aef920" translate="yes" xml:space="preserve">
          <source>The value must be a list of cons-cells, the &lt;small&gt;CAR&lt;/small&gt; of each cell representing a key of customization type &lt;var&gt;key-type&lt;/var&gt;, and the &lt;small&gt;CDR&lt;/small&gt; of the same cell representing a value of customization type &lt;var&gt;value-type&lt;/var&gt;. The user can add and delete key/value pairs, and edit both the key and the value of each pair.</source>
          <target state="translated">Значение должно быть списком cons-ячеек, &lt;small&gt;CAR&lt;/small&gt; каждой ячейки представляет ключ типа настройки типа &lt;var&gt;key-type&lt;/var&gt; , а &lt;small&gt;CDR&lt;/small&gt; той же ячейки представляет значение типа настройки тип- &lt;var&gt;value-type&lt;/var&gt; . Пользователь может добавлять и удалять пары ключ / значение, а также редактировать как ключ, так и значение каждой пары.</target>
        </trans-unit>
        <trans-unit id="e94e481856916cf8928303ce6c5fe6173ae9d7b6" translate="yes" xml:space="preserve">
          <source>The value must be a list of functions. This customization type is used for hook variables. You can use the &lt;code&gt;:options&lt;/code&gt; keyword in a hook variable&amp;rsquo;s &lt;code&gt;defcustom&lt;/code&gt; to specify a list of functions recommended for use in the hook; See &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;.</source>
          <target state="translated">Значение должно быть списком функций. Этот тип настройки используется для переменных ловушки. Вы можете использовать ключевое слово &lt;code&gt;:options&lt;/code&gt; в &lt;code&gt;defcustom&lt;/code&gt; переменной ловушки, чтобы указать список функций, рекомендуемых для использования в ловушке ; См. &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Определения переменных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54b586711663d904f858b9b290b8d22b94a091f6" translate="yes" xml:space="preserve">
          <source>The value must be a list with exactly as many elements as the &lt;var&gt;element-types&lt;/var&gt; given; and each element must fit the corresponding &lt;var&gt;element-type&lt;/var&gt;.</source>
          <target state="translated">Значение должно быть списком с точно таким же количеством элементов, как заданные &lt;var&gt;element-types&lt;/var&gt; ; и каждый элемент должен соответствовать соответствующему &lt;var&gt;element-type&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="896d6796a36a3b3136852c309aa7d01c3792f5f6" translate="yes" xml:space="preserve">
          <source>The value must be a list, and each element of the list must match one of the &lt;var&gt;types&lt;/var&gt; specified.</source>
          <target state="translated">The value must be a list, and each element of the list must match one of the &lt;var&gt;types&lt;/var&gt; specified.</target>
        </trans-unit>
        <trans-unit id="3aeeaa45e096ad8313dd25ab21d8c10013208130" translate="yes" xml:space="preserve">
          <source>The value must be a number (floating point or integer).</source>
          <target state="translated">Значение должно быть числом (с плавающей точкой или целым числом).</target>
        </trans-unit>
        <trans-unit id="945efd91d2acb86b2c28413feb5748c4d0bd2079" translate="yes" xml:space="preserve">
          <source>The value must be a string. The customization buffer shows the string without delimiting &amp;lsquo;</source>
          <target state="translated">The value must be a string. The customization buffer shows the string without delimiting &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="4752821348ac6fabc91456f988d3e618cd05d1f6" translate="yes" xml:space="preserve">
          <source>The value must be a symbol which is a face name. The widget provides completion.</source>
          <target state="translated">Значение должно быть символом,который является именем лица.Виджет обеспечивает завершение.</target>
        </trans-unit>
        <trans-unit id="67a06078fab94776bb45407ad95be9c13181139f" translate="yes" xml:space="preserve">
          <source>The value must be a symbol. It appears in the customization buffer as the symbol name. The widget provides completion.</source>
          <target state="translated">Значение должно быть символом.Оно появляется в буфере настройки как имя символа.Виджет обеспечивает завершение.</target>
        </trans-unit>
        <trans-unit id="5849f60cb5b32368a764c6539b8c8a00d225ed38" translate="yes" xml:space="preserve">
          <source>The value must be a valid color name. The widget provides completion for color names, as well as a sample and a button for selecting a color name from a list of color names shown in a</source>
          <target state="translated">Значение должно быть правильным именем цвета.Виджет предоставляет заполнение имен цветов,а также образец и кнопку для выбора имени цвета из списка имен цветов,отображаемых в</target>
        </trans-unit>
        <trans-unit id="d2c0b88b87276fde817f7f25e6fbe66a3b002536" translate="yes" xml:space="preserve">
          <source>The value must be a variable name. The widget provides completion.</source>
          <target state="translated">Значение должно быть именем переменной.Виджет обеспечивает завершение.</target>
        </trans-unit>
        <trans-unit id="866e1c92bc84fa3056c2cc92aa9eb34d171bc22b" translate="yes" xml:space="preserve">
          <source>The value must be an integer.</source>
          <target state="translated">Значение должно быть целым числом.</target>
        </trans-unit>
        <trans-unit id="ce3a6a49432bb3e2bb25953ebf11758d62c57727" translate="yes" xml:space="preserve">
          <source>The value must be either a lambda expression or a function name. The widget provides completion for function names.</source>
          <target state="translated">Значение должно быть либо выражением лямбда,либо именем функции.Виджет обеспечивает завершение имен функций.</target>
        </trans-unit>
        <trans-unit id="9de80c74f410724e3e9d2d4e057e94956796434d" translate="yes" xml:space="preserve">
          <source>The value must be floating point.</source>
          <target state="translated">Значение должно быть плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="597960a6ce739f902fa9c94199257d090be01a23" translate="yes" xml:space="preserve">
          <source>The value must fit one of &lt;var&gt;alternative-types&lt;/var&gt;. For example, &lt;code&gt;(choice integer string)&lt;/code&gt; allows either an integer or a string.</source>
          <target state="translated">The value must fit one of &lt;var&gt;alternative-types&lt;/var&gt; . For example, &lt;code&gt;(choice integer string)&lt;/code&gt; allows either an integer or a string.</target>
        </trans-unit>
        <trans-unit id="c16d4e66c8a9aef6f1bbfad4e5db9283eb01c2d3" translate="yes" xml:space="preserve">
          <source>The value must specify a window that may have displayed the buffer previously. &lt;code&gt;display-buffer-in-previous-window&lt;/code&gt; will give preference to such a window provided it is still live and not dedicated to another buffer.</source>
          <target state="translated">The value must specify a window that may have displayed the buffer previously. &lt;code&gt;display-buffer-in-previous-window&lt;/code&gt; will give preference to such a window provided it is still live and not dedicated to another buffer.</target>
        </trans-unit>
        <trans-unit id="a8dcd9a15008fc01a594ad9652de93cb7a57eb20" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;(acos &lt;var&gt;arg&lt;/var&gt;)&lt;/code&gt; is a number between 0 and pi (inclusive) whose cosine is &lt;var&gt;arg&lt;/var&gt;. If &lt;var&gt;arg&lt;/var&gt; is out of range (outside [-1, 1]), &lt;code&gt;acos&lt;/code&gt; returns a NaN.</source>
          <target state="translated">The value of &lt;code&gt;(acos &lt;var&gt;arg&lt;/var&gt;)&lt;/code&gt; is a number between 0 and pi (inclusive) whose cosine is &lt;var&gt;arg&lt;/var&gt; . If &lt;var&gt;arg&lt;/var&gt; is out of range (outside [-1, 1]), &lt;code&gt;acos&lt;/code&gt; returns a NaN.</target>
        </trans-unit>
        <trans-unit id="fd06b4d6ba82cc559a28714761ccf61d840a6365" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;(asin &lt;var&gt;arg&lt;/var&gt;)&lt;/code&gt; is a number between -pi/2 and pi/2 (inclusive) whose sine is &lt;var&gt;arg&lt;/var&gt;. If &lt;var&gt;arg&lt;/var&gt; is out of range (outside [-1, 1]), &lt;code&gt;asin&lt;/code&gt; returns a NaN.</source>
          <target state="translated">The value of &lt;code&gt;(asin &lt;var&gt;arg&lt;/var&gt;)&lt;/code&gt; is a number between -pi/2 and pi/2 (inclusive) whose sine is &lt;var&gt;arg&lt;/var&gt; . If &lt;var&gt;arg&lt;/var&gt; is out of range (outside [-1, 1]), &lt;code&gt;asin&lt;/code&gt; returns a NaN.</target>
        </trans-unit>
        <trans-unit id="9a7380bf9f6c5b9249cafc94b2adcec1cea58bac" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;(atan &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; is a number between -pi/2 and pi/2 (exclusive) whose tangent is &lt;var&gt;y&lt;/var&gt;. If the optional second argument &lt;var&gt;x&lt;/var&gt; is given, the value of &lt;code&gt;(atan y x)&lt;/code&gt; is the angle in radians between the vector &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;]&lt;/code&gt; and the &lt;code&gt;X&lt;/code&gt; axis.</source>
          <target state="translated">The value of &lt;code&gt;(atan &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; is a number between -pi/2 and pi/2 (exclusive) whose tangent is &lt;var&gt;y&lt;/var&gt; . If the optional second argument &lt;var&gt;x&lt;/var&gt; is given, the value of &lt;code&gt;(atan y x)&lt;/code&gt; is the angle in radians between the vector &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;]&lt;/code&gt; and the &lt;code&gt;X&lt;/code&gt; axis.</target>
        </trans-unit>
        <trans-unit id="c9e728ea829977e40f53b131b5144e09a9f2f814" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;auto-fill-function&lt;/code&gt; is &lt;code&gt;do-auto-fill&lt;/code&gt; when Auto Fill mode is enabled. That is a function whose sole purpose is to implement the usual strategy for breaking a line.</source>
          <target state="translated">The value of &lt;code&gt;auto-fill-function&lt;/code&gt; is &lt;code&gt;do-auto-fill&lt;/code&gt; when Auto Fill mode is enabled. That is a function whose sole purpose is to implement the usual strategy for breaking a line.</target>
        </trans-unit>
        <trans-unit id="d3bae7cd024789f811c4af6bb48478148919779d" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;exec-path&lt;/code&gt; is used by &lt;code&gt;call-process&lt;/code&gt; and &lt;code&gt;start-process&lt;/code&gt; when the &lt;var&gt;program&lt;/var&gt; argument is not an absolute file name.</source>
          <target state="translated">The value of &lt;code&gt;exec-path&lt;/code&gt; is used by &lt;code&gt;call-process&lt;/code&gt; and &lt;code&gt;start-process&lt;/code&gt; when the &lt;var&gt;program&lt;/var&gt; argument is not an absolute file name.</target>
        </trans-unit>
        <trans-unit id="30c13d6566147e5f7ff2d3b3fa785aa4e4166cab" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;global-mode-string&lt;/code&gt;.</source>
          <target state="translated">The value of &lt;code&gt;global-mode-string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d3a2b88654bd12f5337924840af3d4601a33e57" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;input-decode-map&lt;/code&gt; is usually set up automatically according to the terminal&amp;rsquo;s Terminfo or Termcap entry, but sometimes those need help from terminal-specific Lisp files. Emacs comes with terminal-specific files for many common terminals; their main purpose is to make entries in &lt;code&gt;input-decode-map&lt;/code&gt; beyond those that can be deduced from Termcap and Terminfo. See &lt;a href=&quot;terminal_002dspecific#Terminal_002dSpecific&quot;&gt;Terminal-Specific&lt;/a&gt;.</source>
          <target state="translated">The value of &lt;code&gt;input-decode-map&lt;/code&gt; is usually set up automatically according to the terminal&amp;rsquo;s Terminfo or Termcap entry, but sometimes those need help from terminal-specific Lisp files. Emacs comes with terminal-specific files for many common terminals; their main purpose is to make entries in &lt;code&gt;input-decode-map&lt;/code&gt; beyond those that can be deduced from Termcap and Terminfo. See &lt;a href=&quot;terminal_002dspecific#Terminal_002dSpecific&quot;&gt;Terminal-Specific&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="639680a63cdaad1e211652d86db8f9e826824dca" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;kill-ring-yank-pointer&lt;/code&gt; is always &lt;code&gt;eq&lt;/code&gt; to one of the links in the kill ring list. The element it identifies is the &lt;small&gt;CAR&lt;/small&gt; of that link. Kill commands, which change the kill ring, also set this variable to the value of &lt;code&gt;kill-ring&lt;/code&gt;. The effect is to rotate the ring so that the newly killed text is at the front.</source>
          <target state="translated">The value of &lt;code&gt;kill-ring-yank-pointer&lt;/code&gt; is always &lt;code&gt;eq&lt;/code&gt; to one of the links in the kill ring list. The element it identifies is the &lt;small&gt;CAR&lt;/small&gt; of that link. Kill commands, which change the kill ring, also set this variable to the value of &lt;code&gt;kill-ring&lt;/code&gt; . The effect is to rotate the ring so that the newly killed text is at the front.</target>
        </trans-unit>
        <trans-unit id="b0adbfa26a0f5e416e962a7d1ef1be229d44f4eb" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;load-history&lt;/code&gt; may have one element whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;nil&lt;/code&gt;. This element describes definitions made with &lt;code&gt;eval-buffer&lt;/code&gt; on a buffer that is not visiting a file.</source>
          <target state="translated">The value of &lt;code&gt;load-history&lt;/code&gt; may have one element whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;nil&lt;/code&gt; . This element describes definitions made with &lt;code&gt;eval-buffer&lt;/code&gt; on a buffer that is not visiting a file.</target>
        </trans-unit>
        <trans-unit id="0c0cf4e96ec8565ee4c3ece809d9e7876396b3e6" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;mode-name&lt;/code&gt;.</source>
          <target state="translated">The value of &lt;code&gt;mode-name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01f5f8f11917d60cc33932b39ed53647b1e12540" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;pointm&lt;/code&gt; at the last redisplay time.</source>
          <target state="translated">The value of &lt;code&gt;pointm&lt;/code&gt; at the last redisplay time.</target>
        </trans-unit>
        <trans-unit id="15b964ce86184c0c14ba0a0fa6d8168b77cc4283" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;process-connection-type&lt;/code&gt; takes effect when &lt;code&gt;make-process&lt;/code&gt; or &lt;code&gt;start-process&lt;/code&gt; is called. So you can specify how to communicate with one subprocess by binding the variable around the call to these functions.</source>
          <target state="translated">The value of &lt;code&gt;process-connection-type&lt;/code&gt; takes effect when &lt;code&gt;make-process&lt;/code&gt; or &lt;code&gt;start-process&lt;/code&gt; is called. So you can specify how to communicate with one subprocess by binding the variable around the call to these functions.</target>
        </trans-unit>
        <trans-unit id="f4917d7965a0a2a0eceea9527333fc312c3a1d97" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;track-mouse&lt;/code&gt; is that of the last form in &lt;var&gt;body&lt;/var&gt;. You should design &lt;var&gt;body&lt;/var&gt; to return when it sees the up-event that indicates the release of the button, or whatever kind of event means it is time to stop tracking.</source>
          <target state="translated">The value of &lt;code&gt;track-mouse&lt;/code&gt; is that of the last form in &lt;var&gt;body&lt;/var&gt; . You should design &lt;var&gt;body&lt;/var&gt; to return when it sees the up-event that indicates the release of the button, or whatever kind of event means it is time to stop tracking.</target>
        </trans-unit>
        <trans-unit id="8e1d48548038a94283629f3b24139decfc462f06" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;geometry&lt;/var&gt; should be a list of the form &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;width&lt;/var&gt; and &lt;var&gt;height&lt;/var&gt; specify the width and height of the cropped image. If &lt;var&gt;x&lt;/var&gt; is a positive number it specifies the offset of the cropped area from the left of the original image, and if negative the offset from the right. If &lt;var&gt;y&lt;/var&gt; is a positive number it specifies the offset from the top of the original image, and if negative from the bottom. If &lt;var&gt;x&lt;/var&gt; or &lt;var&gt;y&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt; or unspecified the crop area will be centered on the original image.</source>
          <target state="translated">The value of &lt;var&gt;geometry&lt;/var&gt; should be a list of the form &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; . &lt;var&gt;width&lt;/var&gt; and &lt;var&gt;height&lt;/var&gt; specify the width and height of the cropped image. If &lt;var&gt;x&lt;/var&gt; is a positive number it specifies the offset of the cropped area from the left of the original image, and if negative the offset from the right. If &lt;var&gt;y&lt;/var&gt; is a positive number it specifies the offset from the top of the original image, and if negative from the bottom. If &lt;var&gt;x&lt;/var&gt; or &lt;var&gt;y&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt; or unspecified the crop area will be centered on the original image.</target>
        </trans-unit>
        <trans-unit id="f9a0aa42133a8566714c8da5cfb1ac14d08f0cbd" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;list&lt;/var&gt; specifies the objects to ask questions about. It should be either a list of objects or a generator function. If it is a function, it should expect no arguments, and should return either the next object to ask about, or &lt;code&gt;nil&lt;/code&gt;, meaning to stop asking questions.</source>
          <target state="translated">The value of &lt;var&gt;list&lt;/var&gt; specifies the objects to ask questions about. It should be either a list of objects or a generator function. If it is a function, it should expect no arguments, and should return either the next object to ask about, or &lt;code&gt;nil&lt;/code&gt; , meaning to stop asking questions.</target>
        </trans-unit>
        <trans-unit id="292f71c1213df0a0c0f3e562c978b3b0e7d59643" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;package&lt;/var&gt; needs to be unique and it needs to match the &lt;var&gt;package&lt;/var&gt; value appearing in the &lt;code&gt;:package-version&lt;/code&gt; keyword. Since the user might see the value in an error message, a good choice is the official name of the package, such as MH-E or Gnus.</source>
          <target state="translated">The value of &lt;var&gt;package&lt;/var&gt; needs to be unique and it needs to match the &lt;var&gt;package&lt;/var&gt; value appearing in the &lt;code&gt;:package-version&lt;/code&gt; keyword. Since the user might see the value in an error message, a good choice is the official name of the package, such as MH-E or Gnus.</target>
        </trans-unit>
        <trans-unit id="fb4c37d36e42ca7bde0fbebe3ad9e40de14d67b3" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;persistent&lt;/var&gt; is the value specified for &lt;var&gt;window&lt;/var&gt; with the last successful invocation of &lt;code&gt;set-window-scroll-bars&lt;/code&gt;, &lt;code&gt;nil&lt;/code&gt; if there never was one.</source>
          <target state="translated">The value of &lt;var&gt;persistent&lt;/var&gt; is the value specified for &lt;var&gt;window&lt;/var&gt; with the last successful invocation of &lt;code&gt;set-window-scroll-bars&lt;/code&gt; , &lt;code&gt;nil&lt;/code&gt; if there never was one.</target>
        </trans-unit>
        <trans-unit id="49f9de5cdd026d53e82afe5f7a540af01f423517" translate="yes" xml:space="preserve">
          <source>The value of a &lt;code&gt;while&lt;/code&gt; form is always &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">The value of a &lt;code&gt;while&lt;/code&gt; form is always &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9912c1305dfe708608a449f833a2f31f708f2dbf" translate="yes" xml:space="preserve">
          <source>The value of a hook variable should be a list of functions. You can manipulate that list using the normal Lisp facilities, but the modular way is to use the functions &lt;code&gt;add-hook&lt;/code&gt; and &lt;code&gt;remove-hook&lt;/code&gt;, defined below. They take care to handle some unusual situations and avoid problems.</source>
          <target state="translated">The value of a hook variable should be a list of functions. You can manipulate that list using the normal Lisp facilities, but the modular way is to use the functions &lt;code&gt;add-hook&lt;/code&gt; and &lt;code&gt;remove-hook&lt;/code&gt; , defined below. They take care to handle some unusual situations and avoid problems.</target>
        </trans-unit>
        <trans-unit id="c0ed2587fe635b2d9e79d3541e6cc504fd9eebb9" translate="yes" xml:space="preserve">
          <source>The value of point in each displayed buffer is saved and restored if &lt;code&gt;edebug-save-displayed-buffer-points&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">The value of point in each displayed buffer is saved and restored if &lt;code&gt;edebug-save-displayed-buffer-points&lt;/code&gt; is non- &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0652902dbda00a1f1b8c6d489b8db651b1b2521c" translate="yes" xml:space="preserve">
          <source>The value of point is a number no less than 1, and no greater than the buffer size plus 1. If narrowing is in effect (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;), then point is constrained to fall within the accessible portion of the buffer (possibly at one end of it).</source>
          <target state="translated">The value of point is a number no less than 1, and no greater than the buffer size plus 1. If narrowing is in effect (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;), then point is constrained to fall within the accessible portion of the buffer (possibly at one end of it).</target>
        </trans-unit>
        <trans-unit id="c649d29a460c292a996b1cc1a21ea82f922077f2" translate="yes" xml:space="preserve">
          <source>The value of such an element denotes the side of the existing window where the new window shall be located. Valid values are &lt;code&gt;below&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;above&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;. The default is &lt;code&gt;below&lt;/code&gt;. The &lt;code&gt;window-atom&lt;/code&gt; parameter of the new window is set to this value.</source>
          <target state="translated">The value of such an element denotes the side of the existing window where the new window shall be located. Valid values are &lt;code&gt;below&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , &lt;code&gt;above&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt; . The default is &lt;code&gt;below&lt;/code&gt; . The &lt;code&gt;window-atom&lt;/code&gt; parameter of the new window is set to this value.</target>
        </trans-unit>
        <trans-unit id="3bee44a93e7dbfe8f5da10b43e59eebc67ba3be4" translate="yes" xml:space="preserve">
          <source>The value of such an element specifies an existing window the new window shall be combined with. If it specifies an internal window, all children of that window become part of the atomic window too. If no window is specified, the new window becomes a sibling of the selected window. The &lt;code&gt;window-atom&lt;/code&gt; parameter of the existing window is set to &lt;code&gt;main&lt;/code&gt; provided that window is live and its &lt;code&gt;window-atom&lt;/code&gt; parameter was not already set.</source>
          <target state="translated">The value of such an element specifies an existing window the new window shall be combined with. If it specifies an internal window, all children of that window become part of the atomic window too. If no window is specified, the new window becomes a sibling of the selected window. The &lt;code&gt;window-atom&lt;/code&gt; parameter of the existing window is set to &lt;code&gt;main&lt;/code&gt; provided that window is live and its &lt;code&gt;window-atom&lt;/code&gt; parameter was not already set.</target>
        </trans-unit>
        <trans-unit id="36dca9fc8ccdca39123615ba9dd441f1ea0709cd" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;:mime-charset&lt;/code&gt; property is also defined as an alias for the coding system.</source>
          <target state="translated">The value of the &lt;code&gt;:mime-charset&lt;/code&gt; property is also defined as an alias for the coding system.</target>
        </trans-unit>
        <trans-unit id="683fca4c2cdec479bdd8c0d4b67ec7a0cb22ccb8" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;:width&lt;/code&gt;, &lt;code&gt;:align-to&lt;/code&gt;, &lt;code&gt;:height&lt;/code&gt;, and &lt;code&gt;:ascent&lt;/code&gt; properties can be a special kind of expression that is evaluated during redisplay. The result of the evaluation is used as an absolute number of pixels.</source>
          <target state="translated">The value of the &lt;code&gt;:width&lt;/code&gt; , &lt;code&gt;:align-to&lt;/code&gt; , &lt;code&gt;:height&lt;/code&gt; , and &lt;code&gt;:ascent&lt;/code&gt; properties can be a special kind of expression that is evaluated during redisplay. The result of the evaluation is used as an absolute number of pixels.</target>
        </trans-unit>
        <trans-unit id="b5883233bcfdece07654ec3fc2db74080cba9898" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;setq&lt;/code&gt; form is the value of the last &lt;var&gt;form&lt;/var&gt;.</source>
          <target state="translated">The value of the &lt;code&gt;setq&lt;/code&gt; form is the value of the last &lt;var&gt;form&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c20effc01d2e40edc2a51c8522b1818bc27ec613" translate="yes" xml:space="preserve">
          <source>The value of the &lt;var&gt;key-regexp&lt;/var&gt; argument specifies what part of each record is the sort key. The &lt;var&gt;key-regexp&lt;/var&gt; could match the whole record, or only a part. In the latter case, the rest of the record has no effect on the sorted order of records, but it is carried along when the record moves to its new position.</source>
          <target state="translated">The value of the &lt;var&gt;key-regexp&lt;/var&gt; argument specifies what part of each record is the sort key. The &lt;var&gt;key-regexp&lt;/var&gt; could match the whole record, or only a part. In the latter case, the rest of the record has no effect on the sorted order of records, but it is carried along when the record moves to its new position.</target>
        </trans-unit>
        <trans-unit id="61f439d56d48d0b8c0f5d67dbcbbd53e2a928133" translate="yes" xml:space="preserve">
          <source>The value of the &lt;var&gt;record-regexp&lt;/var&gt; argument specifies how to divide the buffer into sort records. At the end of each record, a search is done for this regular expression, and the text that matches it is taken as the next record. For example, the regular expression &amp;lsquo;</source>
          <target state="translated">The value of the &lt;var&gt;record-regexp&lt;/var&gt; argument specifies how to divide the buffer into sort records. At the end of each record, a search is done for this regular expression, and the text that matches it is taken as the next record. For example, the regular expression &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="39ba2b3d88e32ebb4217d6fb97a97f51cd7ad773" translate="yes" xml:space="preserve">
          <source>The value of the last form in &lt;var&gt;body&lt;/var&gt; is returned, unless the argument &lt;var&gt;quit-function&lt;/var&gt; is specified. In that case, it is called with two arguments: the window showing the buffer and the result of &lt;var&gt;body&lt;/var&gt;. The final return value is then whatever &lt;var&gt;quit-function&lt;/var&gt; returns.</source>
          <target state="translated">The value of the last form in &lt;var&gt;body&lt;/var&gt; is returned, unless the argument &lt;var&gt;quit-function&lt;/var&gt; is specified. In that case, it is called with two arguments: the window showing the buffer and the result of &lt;var&gt;body&lt;/var&gt; . The final return value is then whatever &lt;var&gt;quit-function&lt;/var&gt; returns.</target>
        </trans-unit>
        <trans-unit id="e78b740538539c7c406d38d214ecf64e0a9c548f" translate="yes" xml:space="preserve">
          <source>The value of the last form in &lt;var&gt;body&lt;/var&gt; is returned.</source>
          <target state="translated">The value of the last form in &lt;var&gt;body&lt;/var&gt; is returned.</target>
        </trans-unit>
        <trans-unit id="5503ca30040ea0d8a2bf36ebd8b2d6d451adef8e" translate="yes" xml:space="preserve">
          <source>The value of the optional argument &lt;var&gt;require-match&lt;/var&gt; determines how the user may exit the minibuffer:</source>
          <target state="translated">The value of the optional argument &lt;var&gt;require-match&lt;/var&gt; determines how the user may exit the minibuffer:</target>
        </trans-unit>
        <trans-unit id="91cb6366ae526fcd118c1c7987633bf5fb25c0aa" translate="yes" xml:space="preserve">
          <source>The value of this abnormal hook should be a list of functions, which are used to compute a completion table (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;) for completing the text at point. It can be used by major modes to provide mode-specific completion tables (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">The value of this abnormal hook should be a list of functions, which are used to compute a completion table (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;) for completing the text at point. It can be used by major modes to provide mode-specific completion tables (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="1f63a8b7cc8d9cea6e125635c39e1ca62c26e1ba" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the (mode-specific) abbreviation table of the current buffer. It can also be a list of such tables.</source>
          <target state="translated">Значение этой буферно-локальной переменной является (модовой)аббревиатурой текущего буфера.Она также может быть списком таких таблиц.</target>
        </trans-unit>
        <trans-unit id="ffb436c64e5dfdae7baf41af2904d33b30ffad65" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the default directory for the current buffer. It should be an absolute directory name; it may start with &amp;lsquo;</source>
          <target state="translated">The value of this buffer-local variable is the default directory for the current buffer. It should be an absolute directory name; it may start with &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="911b12790a3948cec2a227be07bf8d24f3677dcc" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the length of the current buffer, when it was last read in, saved, or auto-saved. This is used to detect a substantial decrease in size, and turn off auto-saving in response.</source>
          <target state="translated">Значением этой буферно-локальной переменной является длина текущего буфера,когда он был последний раз прочитан,сохранен или автосохранен.Это используется для того,чтобы обнаружить существенное уменьшение размера и в ответ отключить автосохранение.</target>
        </trans-unit>
        <trans-unit id="0fd2598f40c31f5cad837711cfca8950d8dcbaeb" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the list of saved former marks of the current buffer, most recent first.</source>
          <target state="translated">Значением этой буферно-локальной переменной является список сохраненных прежних меток текущего буфера,последняя из которых первая.</target>
        </trans-unit>
        <trans-unit id="34c1d5bd1b00a5f68781fa93debb24f2ea06a228" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the spacing between tab stops used for displaying tab characters in Emacs buffers. The value is in units of columns, and the default is 8. Note that this feature is completely independent of the user-settable tab stops used by the command &lt;code&gt;tab-to-tab-stop&lt;/code&gt;. See &lt;a href=&quot;indent-tabs#Indent-Tabs&quot;&gt;Indent Tabs&lt;/a&gt;.</source>
          <target state="translated">The value of this buffer-local variable is the spacing between tab stops used for displaying tab characters in Emacs buffers. The value is in units of columns, and the default is 8. Note that this feature is completely independent of the user-settable tab stops used by the command &lt;code&gt;tab-to-tab-stop&lt;/code&gt; . See &lt;a href=&quot;indent-tabs#Indent-Tabs&quot;&gt;Indent Tabs&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="519d26f1c87601f1ce760feed44524edd2e01ae9" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable should be a function (of no arguments) to be called after self-inserting a character from the table &lt;code&gt;auto-fill-chars&lt;/code&gt;, see below. It may be &lt;code&gt;nil&lt;/code&gt;, in which case nothing special is done in that case.</source>
          <target state="translated">The value of this buffer-local variable should be a function (of no arguments) to be called after self-inserting a character from the table &lt;code&gt;auto-fill-chars&lt;/code&gt; , see below. It may be &lt;code&gt;nil&lt;/code&gt; , in which case nothing special is done in that case.</target>
        </trans-unit>
        <trans-unit id="caea4537a082e3806e14a0dedfb084a8ccdecf75" translate="yes" xml:space="preserve">
          <source>The value of this obsolete variable should be a list of functions that accept a single string argument and return another string. The default &lt;code&gt;filter-buffer-substring&lt;/code&gt; function passes the buffer substring to the first function in this list, and the return value of each function is passed to the next function. The return value of the last function is passed to &lt;code&gt;filter-buffer-substring-functions&lt;/code&gt;.</source>
          <target state="translated">The value of this obsolete variable should be a list of functions that accept a single string argument and return another string. The default &lt;code&gt;filter-buffer-substring&lt;/code&gt; function passes the buffer substring to the first function in this list, and the return value of each function is passed to the next function. The return value of the last function is passed to &lt;code&gt;filter-buffer-substring-functions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14a333d5db25651595647364a355fb887be56865" translate="yes" xml:space="preserve">
          <source>The value of this option can be also a list of frame parameters. In that case, implied resizing is inhibited for the change of a parameter that appears in this list. Parameters currently handled by this option are &lt;code&gt;font&lt;/code&gt;, &lt;code&gt;font-backend&lt;/code&gt;, &lt;code&gt;internal-border-width&lt;/code&gt;, &lt;code&gt;menu-bar-lines&lt;/code&gt; and &lt;code&gt;tool-bar-lines&lt;/code&gt;.</source>
          <target state="translated">The value of this option can be also a list of frame parameters. In that case, implied resizing is inhibited for the change of a parameter that appears in this list. Parameters currently handled by this option are &lt;code&gt;font&lt;/code&gt; , &lt;code&gt;font-backend&lt;/code&gt; , &lt;code&gt;internal-border-width&lt;/code&gt; , &lt;code&gt;menu-bar-lines&lt;/code&gt; and &lt;code&gt;tool-bar-lines&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e83ed5cb4d5f62c69d5bf2a02a4d3115ea77186" translate="yes" xml:space="preserve">
          <source>The value of this option is an alist mapping conditions to display actions. Each condition may be either a regular expression matching a buffer name or a function that takes two arguments: a buffer name and the &lt;var&gt;action&lt;/var&gt; argument passed to &lt;code&gt;display-buffer&lt;/code&gt;. If either the name of the buffer passed to &lt;code&gt;display-buffer&lt;/code&gt; matches a regular expression in this alist, or the function specified by a condition returns non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;display-buffer&lt;/code&gt; uses the corresponding display action to display the buffer.</source>
          <target state="translated">The value of this option is an alist mapping conditions to display actions. Each condition may be either a regular expression matching a buffer name or a function that takes two arguments: a buffer name and the &lt;var&gt;action&lt;/var&gt; argument passed to &lt;code&gt;display-buffer&lt;/code&gt; . If either the name of the buffer passed to &lt;code&gt;display-buffer&lt;/code&gt; matches a regular expression in this alist, or the function specified by a condition returns non- &lt;code&gt;nil&lt;/code&gt; , then &lt;code&gt;display-buffer&lt;/code&gt; uses the corresponding display action to display the buffer.</target>
        </trans-unit>
        <trans-unit id="f7f0d552de7fde481ea8ba3d348287bb76ef6370" translate="yes" xml:space="preserve">
          <source>The value of this option should be a display action. This option can be used to define a standard display action for calls to &lt;code&gt;display-buffer&lt;/code&gt;.</source>
          <target state="translated">The value of this option should be a display action. This option can be used to define a standard display action for calls to &lt;code&gt;display-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1982bc460b3acf20b72b5d8f8e0b8f69732c0b5a" translate="yes" xml:space="preserve">
          <source>The value of this parameter is a cons cell whose &lt;small&gt;CAR&lt;/small&gt; and &lt;small&gt;CDR&lt;/small&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specify the minimum values (in columns) for the left and right margin of this window (see &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;Display Margins&lt;/a&gt;. When present, Emacs will use these values instead of the actual margin widths for determining whether a window can be split or shrunk horizontally.</source>
          <target state="translated">The value of this parameter is a cons cell whose &lt;small&gt;CAR&lt;/small&gt; and &lt;small&gt;CDR&lt;/small&gt;, if non- &lt;code&gt;nil&lt;/code&gt; , specify the minimum values (in columns) for the left and right margin of this window (see &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;Display Margins&lt;/a&gt;. When present, Emacs will use these values instead of the actual margin widths for determining whether a window can be split or shrunk horizontally.</target>
        </trans-unit>
        <trans-unit id="73135c98ff9d5f3b757d7d2d8c8c54929aa02856" translate="yes" xml:space="preserve">
          <source>The value of this property, &lt;var&gt;help&lt;/var&gt;, specifies a help-echo string to display while the mouse is on that item. This is displayed in the same way as &lt;code&gt;help-echo&lt;/code&gt; text properties (see &lt;a href=&quot;special-properties#Help-display&quot;&gt;Help display&lt;/a&gt;). Note that this must be a constant string, unlike the &lt;code&gt;help-echo&lt;/code&gt; property for text and overlays.</source>
          <target state="translated">The value of this property, &lt;var&gt;help&lt;/var&gt; , specifies a help-echo string to display while the mouse is on that item. This is displayed in the same way as &lt;code&gt;help-echo&lt;/code&gt; text properties (see &lt;a href=&quot;special-properties#Help-display&quot;&gt;Help display&lt;/a&gt;). Note that this must be a constant string, unlike the &lt;code&gt;help-echo&lt;/code&gt; property for text and overlays.</target>
        </trans-unit>
        <trans-unit id="12db18bf704f645ea58921e288a12705f317f668" translate="yes" xml:space="preserve">
          <source>The value of this user option is a symbol that specifies the style Emacs should use for single quotes in the wording of help and messages. If the option&amp;rsquo;s value is &lt;code&gt;curve&lt;/code&gt;, the style is</source>
          <target state="translated">The value of this user option is a symbol that specifies the style Emacs should use for single quotes in the wording of help and messages. If the option&amp;rsquo;s value is &lt;code&gt;curve&lt;/code&gt; , the style is</target>
        </trans-unit>
        <trans-unit id="a39d636df5f5c9f6eeef4e7d617080a5753f3330" translate="yes" xml:space="preserve">
          <source>The value of this variable determines the major mode of the initial</source>
          <target state="translated">Значение этой переменной определяет основной режим исходной</target>
        </trans-unit>
        <trans-unit id="ec9a110c01c8c7ed80a2b14875b7fd93b17a23df" translate="yes" xml:space="preserve">
          <source>The value of this variable indicates the time at which Emacs was built. It uses the style of &lt;code&gt;current-time&lt;/code&gt; (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;), or is &lt;code&gt;nil&lt;/code&gt; if the information is not available.</source>
          <target state="translated">The value of this variable indicates the time at which Emacs was built. It uses the style of &lt;code&gt;current-time&lt;/code&gt; (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;), or is &lt;code&gt;nil&lt;/code&gt; if the information is not available.</target>
        </trans-unit>
        <trans-unit id="7126b5bb562715f119a074a9fb6f9539c652ed90" translate="yes" xml:space="preserve">
          <source>The value of this variable is &lt;code&gt;t&lt;/code&gt; once the command line has been processed.</source>
          <target state="translated">The value of this variable is &lt;code&gt;t&lt;/code&gt; once the command line has been processed.</target>
        </trans-unit>
        <trans-unit id="d734191b39f03642c9ca10157d8d93befc682dbb" translate="yes" xml:space="preserve">
          <source>The value of this variable is a buffer position (an integer or a marker) for &lt;code&gt;expand-abbrev&lt;/code&gt; to use as the start of the next abbrev to be expanded. The value can also be &lt;code&gt;nil&lt;/code&gt;, which means to use the word before point instead. &lt;code&gt;abbrev-start-location&lt;/code&gt; is set to &lt;code&gt;nil&lt;/code&gt; each time &lt;code&gt;expand-abbrev&lt;/code&gt; is called. This variable is also set by &lt;code&gt;abbrev-prefix-mark&lt;/code&gt;.</source>
          <target state="translated">The value of this variable is a buffer position (an integer or a marker) for &lt;code&gt;expand-abbrev&lt;/code&gt; to use as the start of the next abbrev to be expanded. The value can also be &lt;code&gt;nil&lt;/code&gt; , which means to use the word before point instead. &lt;code&gt;abbrev-start-location&lt;/code&gt; is set to &lt;code&gt;nil&lt;/code&gt; each time &lt;code&gt;expand-abbrev&lt;/code&gt; is called. This variable is also set by &lt;code&gt;abbrev-prefix-mark&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fa6cf030fdf3d942d3466e8d2a76742bda4ab1b" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;) that specifies, for each character, its Unicode &lt;code&gt;General_Category&lt;/code&gt; property as a symbol.</source>
          <target state="translated">The value of this variable is a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;) that specifies, for each character, its Unicode &lt;code&gt;General_Category&lt;/code&gt; property as a symbol.</target>
        </trans-unit>
        <trans-unit id="7ba7ac5d05f8bee892363deea964b1380bb266d1" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table that specifies the width of each character in columns that it will occupy on the screen.</source>
          <target state="translated">Значение этой переменной представляет собой графическую таблицу,которая задает ширину каждого символа в столбцах,которые он будет занимать на экране.</target>
        </trans-unit>
        <trans-unit id="fb2925010bd994bd500ca39b6e263f1a4fbc0618" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table that specifies, for each character, a symbol whose name is the script to which the character belongs, according to the Unicode Standard classification of the Unicode code space into script-specific blocks. This char-table has a single extra slot whose value is the list of all script symbols.</source>
          <target state="translated">Значение этой переменной представляет собой графическую таблицу,на которой для каждого символа указывается символ,имя которого является сценарием,к которому принадлежит этот символ,в соответствии со стандартной классификацией пространства кодов Юникода в блоках сценария.Этот графический стол имеет один дополнительный слот,значением которого является список всех символов скрипта.</target>
        </trans-unit>
        <trans-unit id="62e38dcba10ebd10ed021a19971e4e68aec9afdc" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table that specifies, for each character, whether it is printable or not. That is, if evaluating &lt;code&gt;(aref printable-chars char)&lt;/code&gt; results in &lt;code&gt;t&lt;/code&gt;, the character is printable, and if it results in &lt;code&gt;nil&lt;/code&gt;, it is not.</source>
          <target state="translated">The value of this variable is a char-table that specifies, for each character, whether it is printable or not. That is, if evaluating &lt;code&gt;(aref printable-chars char)&lt;/code&gt; results in &lt;code&gt;t&lt;/code&gt; , the character is printable, and if it results in &lt;code&gt;nil&lt;/code&gt; , it is not.</target>
        </trans-unit>
        <trans-unit id="d185fa900c5b6d5d5843afc08b4f7ca02fa56927" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table which defines glyphless characters and how they are displayed. Each entry must be one of the following display methods:</source>
          <target state="translated">Значение этой переменной представляет собой графическую таблицу,которая определяет безглифные символы и способ их отображения.Каждая запись должна быть одним из следующих методов отображения:</target>
        </trans-unit>
        <trans-unit id="16053fd945be0355c0afa6bafe1716c51992d3ce" translate="yes" xml:space="preserve">
          <source>The value of this variable is a full keymap used by Electric Command Future mode. The functions in this map allow you to edit commands you have not yet thought about executing.</source>
          <target state="translated">Значение этой переменной представляет собой полную клавиатурную карту,используемую в режиме Electric Command Future.Функции этой карты позволяют редактировать команды,о выполнении которых Вы еще не задумывались.</target>
        </trans-unit>
        <trans-unit id="bc9b16dd544b211e330b1ab8935748a5b2ce4d61" translate="yes" xml:space="preserve">
          <source>The value of this variable is a function that &lt;code&gt;expand-abbrev&lt;/code&gt; will call with no arguments to do the expansion. The function can do anything it wants before and after performing the expansion. It should return the abbrev symbol if expansion took place.</source>
          <target state="translated">The value of this variable is a function that &lt;code&gt;expand-abbrev&lt;/code&gt; will call with no arguments to do the expansion. The function can do anything it wants before and after performing the expansion. It should return the abbrev symbol if expansion took place.</target>
        </trans-unit>
        <trans-unit id="895242d99288a5e7484baa95b5a0b6635e384c18" translate="yes" xml:space="preserve">
          <source>The value of this variable is a function that &lt;code&gt;filter-buffer-substring&lt;/code&gt; will call to do the actual work. The function receives three arguments, the same as those of &lt;code&gt;filter-buffer-substring&lt;/code&gt;, which it should treat as per the documentation of that function. It should return the filtered text (and optionally delete the source text).</source>
          <target state="translated">The value of this variable is a function that &lt;code&gt;filter-buffer-substring&lt;/code&gt; will call to do the actual work. The function receives three arguments, the same as those of &lt;code&gt;filter-buffer-substring&lt;/code&gt; , which it should treat as per the documentation of that function. It should return the filtered text (and optionally delete the source text).</target>
        </trans-unit>
        <trans-unit id="fbbbbaa436e4df5bde4fbe1ba9b2858aa0e0c766" translate="yes" xml:space="preserve">
          <source>The value of this variable is a function that can be used by &lt;code&gt;indent-region&lt;/code&gt; as a short cut. It should take two arguments, the start and end of the region. You should design the function so that it will produce the same results as indenting the lines of the region one by one, but presumably faster.</source>
          <target state="translated">The value of this variable is a function that can be used by &lt;code&gt;indent-region&lt;/code&gt; as a short cut. It should take two arguments, the start and end of the region. You should design the function so that it will produce the same results as indenting the lines of the region one by one, but presumably faster.</target>
        </trans-unit>
        <trans-unit id="f3821bf85d9aeff1378d29948aa261bfa194d593" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of ImageMagick image types which Emacs may attempt to render using ImageMagick. Each list element should be one of the symbols in the list returned by &lt;code&gt;imagemagick-types&lt;/code&gt;, or an equivalent string. Alternatively, a value of &lt;code&gt;t&lt;/code&gt; enables ImageMagick for all possible image types. Regardless of the value of this variable, &lt;code&gt;imagemagick-types-inhibit&lt;/code&gt; (see below) takes precedence.</source>
          <target state="translated">The value of this variable is a list of ImageMagick image types which Emacs may attempt to render using ImageMagick. Each list element should be one of the symbols in the list returned by &lt;code&gt;imagemagick-types&lt;/code&gt; , or an equivalent string. Alternatively, a value of &lt;code&gt;t&lt;/code&gt; enables ImageMagick for all possible image types. Regardless of the value of this variable, &lt;code&gt;imagemagick-types-inhibit&lt;/code&gt; (see below) takes precedence.</target>
        </trans-unit>
        <trans-unit id="9de9333a1769c5c462265b3d8bd79b1d5ee87d05" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of all minor mode commands.</source>
          <target state="translated">Значение этой переменной представляет собой список всех второстепенных команд режима.</target>
        </trans-unit>
        <trans-unit id="47a8ae72a588c611af4dd474d9a9965282c852e9" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of completion style (symbols) to use for performing completion. A &lt;em&gt;completion style&lt;/em&gt; is a set of rules for generating completions. Each symbol occurring this list must have a corresponding entry in &lt;code&gt;completion-styles-alist&lt;/code&gt;.</source>
          <target state="translated">The value of this variable is a list of completion style (symbols) to use for performing completion. A &lt;em&gt;completion style&lt;/em&gt; is a set of rules for generating completions. Each symbol occurring this list must have a corresponding entry in &lt;code&gt;completion-styles-alist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29a32af46e4eeadb6fb35baac6ed9c6739f1c9f8" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of directories to search for programs to run in subprocesses. Each element is either the name of a directory (i.e., a string), or &lt;code&gt;nil&lt;/code&gt;, which stands for the default directory (which is the value of &lt;code&gt;default-directory&lt;/code&gt;). See &lt;a href=&quot;locating-files#Locating-Files&quot;&gt;executable-find&lt;/a&gt;, for the details of this search.</source>
          <target state="translated">The value of this variable is a list of directories to search for programs to run in subprocesses. Each element is either the name of a directory (i.e., a string), or &lt;code&gt;nil&lt;/code&gt; , which stands for the default directory (which is the value of &lt;code&gt;default-directory&lt;/code&gt; ). See &lt;a href=&quot;locating-files#Locating-Files&quot;&gt;executable-find&lt;/a&gt;, for the details of this search.</target>
        </trans-unit>
        <trans-unit id="4f32a4eab842de190c1e695fd9e2152827b42fc2" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of directories to search when loading files with &lt;code&gt;load&lt;/code&gt;. Each element is a string (which must be a directory) or &lt;code&gt;nil&lt;/code&gt; (which stands for the current working directory).</source>
          <target state="translated">The value of this variable is a list of directories to search when loading files with &lt;code&gt;load&lt;/code&gt; . Each element is a string (which must be a directory) or &lt;code&gt;nil&lt;/code&gt; (which stands for the current working directory).</target>
        </trans-unit>
        <trans-unit id="253b1f7802a872862cd35b4dffcb6775c54311a8" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of elements of the form &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;abbrev-table&lt;/var&gt;)&lt;/code&gt; where &lt;var&gt;mode&lt;/var&gt; is the name of a variable: if the variable is bound to a non-&lt;code&gt;nil&lt;/code&gt; value, then the &lt;var&gt;abbrev-table&lt;/var&gt; is active, otherwise it is ignored. &lt;var&gt;abbrev-table&lt;/var&gt; can also be a list of abbrev tables.</source>
          <target state="translated">The value of this variable is a list of elements of the form &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;abbrev-table&lt;/var&gt;)&lt;/code&gt; where &lt;var&gt;mode&lt;/var&gt; is the name of a variable: if the variable is bound to a non- &lt;code&gt;nil&lt;/code&gt; value, then the &lt;var&gt;abbrev-table&lt;/var&gt; is active, otherwise it is ignored. &lt;var&gt;abbrev-table&lt;/var&gt; can also be a list of abbrev tables.</target>
        </trans-unit>
        <trans-unit id="40d59ecb84f610c7ca9b936f63f0ac181287b46b" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of event types that serve as alternative help characters. These events are handled just like the event specified by &lt;code&gt;help-char&lt;/code&gt;.</source>
          <target state="translated">The value of this variable is a list of event types that serve as alternative help characters. These events are handled just like the event specified by &lt;code&gt;help-char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ddcbef14446d78cc4e1ee3e9fae5bc0b58251c5" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of functions to be called after a file is visited. The file&amp;rsquo;s local-variables specification (if any) will have been processed before the hooks are run. The buffer visiting the file is current when the hook functions are run.</source>
          <target state="translated">The value of this variable is a list of functions to be called after a file is visited. The file&amp;rsquo;s local-variables specification (if any) will have been processed before the hooks are run. The buffer visiting the file is current when the hook functions are run.</target>
        </trans-unit>
        <trans-unit id="4a37504953ca04fe3adf8b140d470266df3deb66" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of functions to be called before writing out a buffer to its visited file. If one of them returns non-&lt;code&gt;nil&lt;/code&gt;, the file is considered already written and the rest of the functions are not called, nor is the usual code for writing the file executed.</source>
          <target state="translated">The value of this variable is a list of functions to be called before writing out a buffer to its visited file. If one of them returns non- &lt;code&gt;nil&lt;/code&gt; , the file is considered already written and the rest of the functions are not called, nor is the usual code for writing the file executed.</target>
        </trans-unit>
        <trans-unit id="fb6acbc82868d45944f82b4791b7635aef8fde9d" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of functions to be called when &lt;code&gt;find-file&lt;/code&gt; or &lt;code&gt;find-file-noselect&lt;/code&gt; is passed a nonexistent file name. &lt;code&gt;find-file-noselect&lt;/code&gt; calls these functions as soon as it detects a nonexistent file. It calls them in the order of the list, until one of them returns non-&lt;code&gt;nil&lt;/code&gt;. &lt;code&gt;buffer-file-name&lt;/code&gt; is already set up.</source>
          <target state="translated">The value of this variable is a list of functions to be called when &lt;code&gt;find-file&lt;/code&gt; or &lt;code&gt;find-file-noselect&lt;/code&gt; is passed a nonexistent file name. &lt;code&gt;find-file-noselect&lt;/code&gt; calls these functions as soon as it detects a nonexistent file. It calls them in the order of the list, until one of them returns non- &lt;code&gt;nil&lt;/code&gt; . &lt;code&gt;buffer-file-name&lt;/code&gt; is already set up.</target>
        </trans-unit>
        <trans-unit id="ce64d0031359699b8cfafc51d537afbdf1484ede" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of symbols that are the features loaded in the current Emacs session. Each symbol was put in this list with a call to &lt;code&gt;provide&lt;/code&gt;. The order of the elements in the &lt;code&gt;features&lt;/code&gt; list is not significant.</source>
          <target state="translated">The value of this variable is a list of symbols that are the features loaded in the current Emacs session. Each symbol was put in this list with a call to &lt;code&gt;provide&lt;/code&gt; . The order of the elements in the &lt;code&gt;features&lt;/code&gt; list is not significant.</target>
        </trans-unit>
        <trans-unit id="63e64601fef9cafb97c46d2990222c9f7f4311c8" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of the keywords to highlight. Lisp programs should not set this variable directly. Normally, the value is automatically set by Font Lock mode, using the &lt;var&gt;keywords&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;. The value can also be altered using the functions &lt;code&gt;font-lock-add-keywords&lt;/code&gt; and &lt;code&gt;font-lock-remove-keywords&lt;/code&gt; (see &lt;a href=&quot;customizing-keywords#Customizing-Keywords&quot;&gt;Customizing Keywords&lt;/a&gt;).</source>
          <target state="translated">The value of this variable is a list of the keywords to highlight. Lisp programs should not set this variable directly. Normally, the value is automatically set by Font Lock mode, using the &lt;var&gt;keywords&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt; . The value can also be altered using the functions &lt;code&gt;font-lock-add-keywords&lt;/code&gt; and &lt;code&gt;font-lock-remove-keywords&lt;/code&gt; (see &lt;a href=&quot;customizing-keywords#Customizing-Keywords&quot;&gt;Customizing Keywords&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="133759324957b9672c4b0b1c0d11bac955ea2da2" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of the values returned by all the expressions that were read, evaluated, and printed from buffers (including the minibuffer) by the standard Emacs commands which do this. (Note that this does &lt;em&gt;not&lt;/em&gt; include evaluation in</source>
          <target state="translated">The value of this variable is a list of the values returned by all the expressions that were read, evaluated, and printed from buffers (including the minibuffer) by the standard Emacs commands which do this. (Note that this does &lt;em&gt;not&lt;/em&gt; include evaluation in</target>
        </trans-unit>
        <trans-unit id="f54e2eed25b0db677a48a0649bd0311f6852f604" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of themes loaded into Emacs. Each theme is represented by a Lisp symbol (the theme name). The default value of this variable is a list containing two dummy themes: &lt;code&gt;(user changed)&lt;/code&gt;. The &lt;code&gt;changed&lt;/code&gt; theme stores settings made before any Custom themes are applied (e.g., variables set outside of Customize). The &lt;code&gt;user&lt;/code&gt; theme stores settings the user has customized and saved. Any additional themes declared with the &lt;code&gt;deftheme&lt;/code&gt; macro are added to the front of this list.</source>
          <target state="translated">The value of this variable is a list of themes loaded into Emacs. Each theme is represented by a Lisp symbol (the theme name). The default value of this variable is a list containing two dummy themes: &lt;code&gt;(user changed)&lt;/code&gt; . The &lt;code&gt;changed&lt;/code&gt; theme stores settings made before any Custom themes are applied (e.g., variables set outside of Customize). The &lt;code&gt;user&lt;/code&gt; theme stores settings the user has customized and saved. Any additional themes declared with the &lt;code&gt;deftheme&lt;/code&gt; macro are added to the front of this list.</target>
        </trans-unit>
        <trans-unit id="124d3c23221104c7409d74944cb02f2b99b0114e" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of warnings to be displayed after the current command has finished. Each element must be a list</source>
          <target state="translated">Значение этой переменной представляет собой список предупреждений,которые будут отображаться после завершения текущей команды.Каждый элемент должен быть списком</target>
        </trans-unit>
        <trans-unit id="89d3ec324274c4cfefe0acf837435da3f85f3c47" translate="yes" xml:space="preserve">
          <source>The value of this variable is a local keymap for characters following the Help key,</source>
          <target state="translated">Значение этой переменной является локальной ключевой картой для символов,следующих за клавишей справки,</target>
        </trans-unit>
        <trans-unit id="aa3a6a128eaffd7a416313e23382dec1addead25" translate="yes" xml:space="preserve">
          <source>The value of this variable is a mode line construct that controls the contents of the mode-line. It is always buffer-local in all buffers.</source>
          <target state="translated">Значение этой переменной представляет собой модную строчную конструкцию,управляющую содержимым модной строки.Во всех буферах она всегда является буферизованной.</target>
        </trans-unit>
        <trans-unit id="25cd23c85bbb1ee221f951d01edffe0cd1ce0147" translate="yes" xml:space="preserve">
          <source>The value of this variable is a nonnegative integer that controls whether Emacs signals a range error when a large integer would be calculated. Integers with absolute values less than 2**&lt;var&gt;n&lt;/var&gt;, where &lt;var&gt;n&lt;/var&gt; is this variable&amp;rsquo;s value, do not signal a range error. Attempts to create larger integers typically signal a range error, although there might be no signal if a larger integer can be created cheaply. Setting this variable to a large number can be costly if a computation creates huge integers.</source>
          <target state="translated">The value of this variable is a nonnegative integer that controls whether Emacs signals a range error when a large integer would be calculated. Integers with absolute values less than 2** &lt;var&gt;n&lt;/var&gt; , where &lt;var&gt;n&lt;/var&gt; is this variable&amp;rsquo;s value, do not signal a range error. Attempts to create larger integers typically signal a range error, although there might be no signal if a larger integer can be created cheaply. Setting this variable to a large number can be costly if a computation creates huge integers.</target>
        </trans-unit>
        <trans-unit id="b0a0e6475857d62888333d14d74963c15033a16f" translate="yes" xml:space="preserve">
          <source>The value of this variable is a string, the name of a directory that contains programs that come with GNU Emacs and are intended for Emacs to invoke. The program &lt;code&gt;movemail&lt;/code&gt; is an example of such a program; Rmail uses it to fetch new mail from an inbox.</source>
          <target state="translated">The value of this variable is a string, the name of a directory that contains programs that come with GNU Emacs and are intended for Emacs to invoke. The program &lt;code&gt;movemail&lt;/code&gt; is an example of such a program; Rmail uses it to fetch new mail from an inbox.</target>
        </trans-unit>
        <trans-unit id="cfb572f9bc2f44e32d32a8a2cdf630179f422cca" translate="yes" xml:space="preserve">
          <source>The value of this variable is a symbol indicating the type of operating system Emacs is running on. The possible values are:</source>
          <target state="translated">Значение этой переменной является символом,указывающим на тип операционной системы,на которой запущен Emacs.Возможными значениями являются:</target>
        </trans-unit>
        <trans-unit id="8002c2c1eaf55d7b7ae8a209355f0464c509a693" translate="yes" xml:space="preserve">
          <source>The value of this variable is a symbol that specifies the style Emacs should use for single quotes in the wording of help and messages. If the variable&amp;rsquo;s value is &lt;code&gt;curve&lt;/code&gt;, the style is</source>
          <target state="translated">The value of this variable is a symbol that specifies the style Emacs should use for single quotes in the wording of help and messages. If the variable&amp;rsquo;s value is &lt;code&gt;curve&lt;/code&gt; , the style is</target>
        </trans-unit>
        <trans-unit id="2bdd79099d412978e3bbbe37242d52feb2a029ee" translate="yes" xml:space="preserve">
          <source>The value of this variable is an alist of package archives recognized by the Emacs package manager.</source>
          <target state="translated">Значение этой переменной представляет собой список архивов пакетов,распознаваемых менеджером пакетов Emacs.</target>
        </trans-unit>
        <trans-unit id="c06b37baadabba3c87ddc88b38f5d0fd1b8c18ac" translate="yes" xml:space="preserve">
          <source>The value of this variable is an alist that associates the names of loaded library files with the names of the functions and variables they defined, as well as the features they provided or required.</source>
          <target state="translated">Значение этой переменной-алист,который связывает имена загруженных библиотечных файлов с именами функций и переменных,которые они определили,а также с характеристиками,которые они предоставили или потребовали.</target>
        </trans-unit>
        <trans-unit id="81c720fde775ca08c6d96c03b1485dbda6b71c77" translate="yes" xml:space="preserve">
          <source>The value of this variable is an alist whose elements have the form &lt;code&gt;(&lt;var&gt;face&lt;/var&gt; . &lt;var&gt;remapping&lt;/var&gt;)&lt;/code&gt;. This causes Emacs to display any text having the face &lt;var&gt;face&lt;/var&gt; with &lt;var&gt;remapping&lt;/var&gt;, rather than the ordinary definition of &lt;var&gt;face&lt;/var&gt;.</source>
          <target state="translated">The value of this variable is an alist whose elements have the form &lt;code&gt;(&lt;var&gt;face&lt;/var&gt; . &lt;var&gt;remapping&lt;/var&gt;)&lt;/code&gt; . This causes Emacs to display any text having the face &lt;var&gt;face&lt;/var&gt; with &lt;var&gt;remapping&lt;/var&gt; , rather than the ordinary definition of &lt;var&gt;face&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c2f18cf20c9a3c4ca8706679eb65fe735172405b" translate="yes" xml:space="preserve">
          <source>The value of this variable is not guaranteed to be accurate except while processing &lt;code&gt;frame-title-format&lt;/code&gt; or &lt;code&gt;icon-title-format&lt;/code&gt;.</source>
          <target state="translated">The value of this variable is not guaranteed to be accurate except while processing &lt;code&gt;frame-title-format&lt;/code&gt; or &lt;code&gt;icon-title-format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="933998c144085b4faa6ba67abba92172b97c7da6" translate="yes" xml:space="preserve">
          <source>The value of this variable is the buffer for which &lt;code&gt;abbrev-start-location&lt;/code&gt; has been set. Trying to expand an abbrev in any other buffer clears &lt;code&gt;abbrev-start-location&lt;/code&gt;. This variable is set by &lt;code&gt;abbrev-prefix-mark&lt;/code&gt;.</source>
          <target state="translated">The value of this variable is the buffer for which &lt;code&gt;abbrev-start-location&lt;/code&gt; has been set. Trying to expand an abbrev in any other buffer clears &lt;code&gt;abbrev-start-location&lt;/code&gt; . This variable is set by &lt;code&gt;abbrev-prefix-mark&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8abb5c97c277797f521989347c2e42ed6365ddf0" translate="yes" xml:space="preserve">
          <source>The value of this variable is the completion table (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;) used for completion in the minibuffer. This is the global variable that contains what &lt;code&gt;completing-read&lt;/code&gt; passes to &lt;code&gt;try-completion&lt;/code&gt;. It is used by minibuffer completion commands such as &lt;code&gt;minibuffer-complete-word&lt;/code&gt;.</source>
          <target state="translated">The value of this variable is the completion table (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;) used for completion in the minibuffer. This is the global variable that contains what &lt;code&gt;completing-read&lt;/code&gt; passes to &lt;code&gt;try-completion&lt;/code&gt; . It is used by minibuffer completion commands such as &lt;code&gt;minibuffer-complete-word&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96328791cd147154e17de70ea41f23cfbbba1087" translate="yes" xml:space="preserve">
          <source>The value of this variable is the default output stream&amp;mdash;the stream that print functions use when the &lt;var&gt;stream&lt;/var&gt; argument is &lt;code&gt;nil&lt;/code&gt;. The default is &lt;code&gt;t&lt;/code&gt;, meaning display in the echo area.</source>
          <target state="translated">The value of this variable is the default output stream&amp;mdash;the stream that print functions use when the &lt;var&gt;stream&lt;/var&gt; argument is &lt;code&gt;nil&lt;/code&gt; . The default is &lt;code&gt;t&lt;/code&gt; , meaning display in the echo area.</target>
        </trans-unit>
        <trans-unit id="ae0831846c75f4a338c383d0f402cd3358232b5d" translate="yes" xml:space="preserve">
          <source>The value of this variable is the function called to insert an entry at point, including its terminating newline. The function should accept two arguments, &lt;var&gt;id&lt;/var&gt; and &lt;var&gt;contents&lt;/var&gt;, having the same meanings as in &lt;code&gt;tabulated-list-entries&lt;/code&gt;. The default value is a function which inserts an entry in a straightforward way; a mode which uses Tabulated List mode in a more complex way can specify another function.</source>
          <target state="translated">The value of this variable is the function called to insert an entry at point, including its terminating newline. The function should accept two arguments, &lt;var&gt;id&lt;/var&gt; and &lt;var&gt;contents&lt;/var&gt; , having the same meanings as in &lt;code&gt;tabulated-list-entries&lt;/code&gt; . The default value is a function which inserts an entry in a straightforward way; a mode which uses Tabulated List mode in a more complex way can specify another function.</target>
        </trans-unit>
        <trans-unit id="7eb19205eadf49f07947146594a55f4d23efc62f" translate="yes" xml:space="preserve">
          <source>The value of this variable is the function to call to invoke the debugger. Its value must be a function of any number of arguments, or, more typically, the name of a function. This function should invoke some kind of debugger. The default value of the variable is &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="translated">The value of this variable is the function to call to invoke the debugger. Its value must be a function of any number of arguments, or, more typically, the name of a function. This function should invoke some kind of debugger. The default value of the variable is &lt;code&gt;debug&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e04c4a7f8af8a9ebc7bdd81f634adf0304f9ff3" translate="yes" xml:space="preserve">
          <source>The value of this variable is the function to use to revert this buffer. It should be a function with two optional arguments to do the work of reverting. The two optional arguments, &lt;var&gt;ignore-auto&lt;/var&gt; and &lt;var&gt;noconfirm&lt;/var&gt;, are the arguments that &lt;code&gt;revert-buffer&lt;/code&gt; received.</source>
          <target state="translated">Значение этой переменной - это функция, которая используется для восстановления этого буфера. Это должна быть функция с двумя необязательными аргументами, выполняющая работу по возврату. Два необязательных аргумента, &lt;var&gt;ignore-auto&lt;/var&gt; и &lt;var&gt;noconfirm&lt;/var&gt; , являются аргументами, полученными &lt;code&gt;revert-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dccef0d640ff834b4588b6b92c1b4f8ea1188ab5" translate="yes" xml:space="preserve">
          <source>The value of this variable is the greatest &amp;ldquo;small&amp;rdquo; integer that Emacs Lisp can handle. Typical values are 2**29 - 1 on 32-bit and 2**61 - 1 on 64-bit platforms.</source>
          <target state="translated">Значение этой переменной - наибольшее &amp;laquo;маленькое&amp;raquo; целое число, которое может обработать Emacs Lisp. Типичные значения: 2 ** 29 - 1 на 32-битных платформах и 2 ** 61-1 на 64-битных платформах.</target>
        </trans-unit>
        <trans-unit id="31d2e828cbc40f3144bc61afc08c98328c1ac5de" translate="yes" xml:space="preserve">
          <source>The value of this variable is the help character&amp;mdash;the character that Emacs recognizes as meaning Help. By default, its value is 8, which stands for</source>
          <target state="translated">Значением этой переменной является символ справки - символ, который Emacs распознает как означающий справку. По умолчанию его значение равно 8, что означает</target>
        </trans-unit>
        <trans-unit id="861876551f6ac7a8725b6a32b02dca6d5191372b" translate="yes" xml:space="preserve">
          <source>The value of this variable is the list of command-line arguments passed to Emacs.</source>
          <target state="translated">Значением этой переменной является список аргументов командной строки,передаваемых Emacs.</target>
        </trans-unit>
        <trans-unit id="e1d06ef5c8374bd750485c57abb50eaf06daf7d7" translate="yes" xml:space="preserve">
          <source>The value of this variable is the list of command-line arguments that have not yet been processed.</source>
          <target state="translated">Значением этой переменной является список аргументов командной строки,которые еще не были обработаны.</target>
        </trans-unit>
        <trans-unit id="8621be2dbb39d088c193d4800a069de83beb18d9" translate="yes" xml:space="preserve">
          <source>The value of this variable is the list of properties to remove from inserted text. Its default value contains properties that might lead to annoying results, such as causing the text to respond to the mouse or specifying key bindings. It takes effect after &lt;code&gt;yank-handled-properties&lt;/code&gt;.</source>
          <target state="translated">Значение этой переменной - это список свойств, которые нужно удалить из вставленного текста. Его значение по умолчанию содержит свойства, которые могут привести к неприятным результатам, например, заставить текст реагировать на мышь или указать привязки клавиш. Он вступает в силу после &lt;code&gt;yank-handled-properties&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d9925e5d0a28171f82d357e771493164bc09d3e" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum depth of nesting of parentheses and brackets when printed. Any list or vector at a depth exceeding this limit is abbreviated with an ellipsis. A value of &lt;code&gt;nil&lt;/code&gt; (which is the default) means no limit.</source>
          <target state="translated">Значение этой переменной - максимальная глубина вложения круглых и квадратных скобок при печати. Любой список или вектор на глубине, превышающей этот предел, обозначается многоточием. Значение &lt;code&gt;nil&lt;/code&gt; (по умолчанию) означает отсутствие ограничений.</target>
        </trans-unit>
        <trans-unit id="eb378354f5b1934a365311626daef8c8f15e3726" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum length to which the kill ring can grow, before elements are thrown away at the end. The default value for &lt;code&gt;kill-ring-max&lt;/code&gt; is 60.</source>
          <target state="translated">Значение этой переменной - это максимальная длина, до которой может вырасти список уничтожений, прежде чем в конце элементы будут выброшены. Значение по умолчанию для &lt;code&gt;kill-ring-max&lt;/code&gt; - 60.</target>
        </trans-unit>
        <trans-unit id="d9a8a3bd5402f6a796285f30ee6bc93592d72acc" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum number of elements to print in any list, vector or bool-vector. If an object being printed has more than this many elements, it is abbreviated with an ellipsis.</source>
          <target state="translated">Значение этой переменной-максимальное количество элементов для печати в любом списке,векторе или bool-векторе.Если распечатываемый объект имеет больше,чем это количество элементов,то это сокращается с помощью эллипсиса.</target>
        </trans-unit>
        <trans-unit id="7b37d57abfb4a2f074e6037b361dac854df3ffa8" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum size of &lt;code&gt;mark-ring&lt;/code&gt;. If more marks than this are pushed onto the &lt;code&gt;mark-ring&lt;/code&gt;, &lt;code&gt;push-mark&lt;/code&gt; discards an old mark when it adds a new one.</source>
          <target state="translated">Значение этой переменной - максимальный размер &lt;code&gt;mark-ring&lt;/code&gt; . Если на &lt;code&gt;mark-ring&lt;/code&gt; &lt;code&gt;push-mark&lt;/code&gt; помещается больше меток, чем указано , push-mark сбрасывает старую метку при добавлении новой.</target>
        </trans-unit>
        <trans-unit id="48773690fdc08336034aef99b22ec4fc2a9b5c64" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of bytes of pure storage allocated so far. Typically, in a dumped Emacs, this number is very close to the total amount of pure storage available&amp;mdash;if it were not, we would preallocate less.</source>
          <target state="translated">Значение этой переменной - количество байтов, выделенных на данный момент чистой памяти. Обычно в выгруженном Emacs это число очень близко к общему объему доступной чистой памяти - в противном случае мы бы предварительно распределили меньше.</target>
        </trans-unit>
        <trans-unit id="2c86f658454ce161d8f58c6e376a24f5f8cf79cd" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of bytes of storage that must be allocated for Lisp objects after one garbage collection in order to trigger another garbage collection. You can use the result returned by &lt;code&gt;garbage-collect&lt;/code&gt; to get an information about size of the particular object type; space allocated to the contents of buffers does not count.</source>
          <target state="translated">Значение этой переменной - количество байтов памяти, которые должны быть выделены для объектов Lisp после одной сборки мусора, чтобы запустить другую сборку мусора. Вы можете использовать результат, возвращаемый &lt;code&gt;garbage-collect&lt;/code&gt; чтобы получить информацию о размере конкретного типа объекта; пространство, выделенное для содержимого буферов, не учитывается.</target>
        </trans-unit>
        <trans-unit id="150ad9877598c36bf3cee9f020560f46415fcc2e" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of lines of continuity to retain when scrolling by full screens. For example, &lt;code&gt;scroll-up&lt;/code&gt; with an argument of &lt;code&gt;nil&lt;/code&gt; scrolls so that this many lines at the bottom of the window appear instead at the top. The default value is &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">Значение этой переменной - это количество непрерывных строк, которое сохраняется при прокрутке на весь экран. Например, &lt;code&gt;scroll-up&lt;/code&gt; с аргументом &lt;code&gt;nil&lt;/code&gt; прокручивается так, что такое количество строк внизу окна появляется вместо того, чтобы отображаться вверху. Значение по умолчанию - &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d8917920114f6f4a89a92a84fe6cd7179f01520" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of newest versions to keep when a new numbered backup is made. The newly made backup is included in the count. The default value is 2.</source>
          <target state="translated">Значением этой переменной является количество новейших версий,которые нужно сохранить при создании новой пронумерованной резервной копии.Вновь сделанная резервная копия включается в подсчет.Значение по умолчанию равно 2.</target>
        </trans-unit>
        <trans-unit id="3fda003729cd66ceee7578e564a338758839795b" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of oldest versions to keep when a new numbered backup is made. The default value is 2.</source>
          <target state="translated">Значением этой переменной является количество самых старых версий,которые нужно сохранить при создании новой пронумерованной резервной копии.Значение по умолчанию равно 2.</target>
        </trans-unit>
        <trans-unit id="0178a3a721a41f19d88414a6b7b93fafcc92109e" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of seconds of idle time that should cause auto-saving. Each time the user pauses for this long, Emacs does auto-saving for all buffers in which that is enabled. (If the current buffer is large, the specified timeout is multiplied by a factor that increases as the size increases; for a million-byte buffer, the factor is almost 4.)</source>
          <target state="translated">Значение этой переменной-количество секунд простоя,которое должно привести к автосохранению.Каждый раз,когда пользователь делает такую длительную паузу,Emacs делает автосохранение для всех буферов,в которых она включена.(Если текущий буфер большой,то указанный тайм-аут умножается на коэффициент,который увеличивается с увеличением размера;для буфера размером в миллион байт этот коэффициент равен почти 4).</target>
        </trans-unit>
        <trans-unit id="fdf8e548c75801c18e4f5fe5fdd7423692172485" translate="yes" xml:space="preserve">
          <source>The value of this variable is the numerically least &amp;ldquo;small&amp;rdquo; integer that Emacs Lisp can handle. It is negative. Typical values are -2**29 on 32-bit and -2**61 on 64-bit platforms.</source>
          <target state="translated">Значение этой переменной - это наименьшее числовое &amp;laquo;маленькое&amp;raquo; целое число, которое может обработать Emacs Lisp. Это отрицательно. Типичные значения - -2 ** 29 на 32-битных платформах и -2 ** 61 на 64-битных платформах.</target>
        </trans-unit>
        <trans-unit id="b63628af4530d5ce2d1423179f1adbff69a076e4" translate="yes" xml:space="preserve">
          <source>The value of this variable is the raw prefix argument for the &lt;em&gt;next&lt;/em&gt; editing command. Commands such as &lt;code&gt;universal-argument&lt;/code&gt; that specify prefix arguments for the following command work by setting this variable.</source>
          <target state="translated">Значение этой переменной является аргументом необработанного префикса для &lt;em&gt;следующей&lt;/em&gt; команды редактирования. Команды, такие как &lt;code&gt;universal-argument&lt;/code&gt; которые определяют аргументы префикса для следующей команды, работают, устанавливая эту переменную.</target>
        </trans-unit>
        <trans-unit id="8bd5505e14516c641a0fb607026db3f9d627e426" translate="yes" xml:space="preserve">
          <source>The value of this variable is the standard display table, which is used when Emacs is displaying a buffer in a window with neither a window display table nor a buffer display table defined, or when Emacs is outputting text to the standard output or error streams. Although its default is typically &lt;code&gt;nil&lt;/code&gt;, in an interactive session if the terminal cannot display curved quotes, its default maps curved quotes to ASCII approximations. See &lt;a href=&quot;text-quoting-style#Text-Quoting-Style&quot;&gt;Text Quoting Style&lt;/a&gt;.</source>
          <target state="translated">Значением этой переменной является стандартная таблица отображения, которая используется, когда Emacs отображает буфер в окне, в котором не определены ни таблица отображения окна, ни таблица отображения буфера, или когда Emacs выводит текст в стандартный поток вывода или потоки ошибок. Хотя его значение по умолчанию обычно равно &lt;code&gt;nil&lt;/code&gt; , в интерактивном сеансе, если терминал не может отображать изогнутые котировки, его значение по умолчанию сопоставляет изогнутые кавычки с приближением ASCII. См. &lt;a href=&quot;text-quoting-style#Text-Quoting-Style&quot;&gt;Стиль цитирования текста&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59e3ab4b6c002115ffa6a12ef7488eb1000fce9d" translate="yes" xml:space="preserve">
          <source>The value of this variable is the version of Emacs being run. It is a string such as &lt;code&gt;&quot;26.1&quot;&lt;/code&gt;. A value with three numeric components, such as &lt;code&gt;&quot;26.0.91&quot;&lt;/code&gt;, indicates an unreleased test version. (Prior to Emacs 26.1, the string includes an extra final component with the integer that is now stored in &lt;code&gt;emacs-build-number&lt;/code&gt;; e.g., &lt;code&gt;&quot;25.1.1&quot;&lt;/code&gt;.)</source>
          <target state="translated">Значение этой переменной - это версия запущенного Emacs. Это строка типа &lt;code&gt;&quot;26.1&quot;&lt;/code&gt; . Значение с тремя числовыми компонентами, например &lt;code&gt;&quot;26.0.91&quot;&lt;/code&gt; , указывает на невыпущенную тестовую версию. (До Emacs 26.1 строка включала дополнительный последний компонент с целым числом, которое теперь хранится в &lt;code&gt;emacs-build-number&lt;/code&gt; , например, &lt;code&gt;&quot;25.1.1&quot;&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="13d6c3bf692d7cebd430e9a540f492e27af06ad8" translate="yes" xml:space="preserve">
          <source>The value of this variable lists the ImageMagick image types which should never be rendered using ImageMagick, regardless of the value of &lt;code&gt;imagemagick-enabled-types&lt;/code&gt;. A value of &lt;code&gt;t&lt;/code&gt; disables ImageMagick entirely.</source>
          <target state="translated">Значение этой переменной перечисляет типы изображений ImageMagick, которые никогда не должны отображаться с использованием ImageMagick, независимо от значения типов &lt;code&gt;imagemagick-enabled-types&lt;/code&gt; . Значение &lt;code&gt;t&lt;/code&gt; полностью отключает ImageMagick.</target>
        </trans-unit>
        <trans-unit id="303b235b615311f7ea255c195980f3dd06aa14e0" translate="yes" xml:space="preserve">
          <source>The value of this variable must be a function, which is called by &lt;code&gt;completing-read&lt;/code&gt; to actually do its work. It should accept the same arguments as &lt;code&gt;completing-read&lt;/code&gt;. This can be bound to a different function to completely override the normal behavior of &lt;code&gt;completing-read&lt;/code&gt;.</source>
          <target state="translated">Значением этой переменной должна быть функция, которая вызывается путем &lt;code&gt;completing-read&lt;/code&gt; чтобы фактически выполнить свою работу. Он должен принимать те же аргументы, что и &lt;code&gt;completing-read&lt;/code&gt; . Это может быть связано с другой функцией, чтобы полностью переопределить нормальное поведение &lt;code&gt;completing-read&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1226f2429f46bf033e925f781cf8b85d8cb67680" translate="yes" xml:space="preserve">
          <source>The value of this variable names an Emacs Lisp file where the autoload calls should go. The default value is</source>
          <target state="translated">Значение этой переменной называет файл Emacs Lisp,в котором должны происходить вызовы автозагрузки.Значение по умолчанию</target>
        </trans-unit>
        <trans-unit id="40d83e7def34305b8fc50d910e7c289b690bac09" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a display action, which is treated with the highest priority by &lt;code&gt;display-buffer&lt;/code&gt;. The default value is an empty display action, i.e., &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt;.</source>
          <target state="translated">Значением этой переменной должно быть действие отображения, которое обрабатывается с наивысшим приоритетом &lt;code&gt;display-buffer&lt;/code&gt; . Значение по умолчанию - пустое действие отображения, т &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de683728d88c65383b1fb0a4d4c0e143b0d98fe0" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a function (of no arguments) to be called whenever a character with close parenthesis syntax is inserted. The value of &lt;code&gt;blink-paren-function&lt;/code&gt; may be &lt;code&gt;nil&lt;/code&gt;, in which case nothing is done.</source>
          <target state="translated">Значением этой переменной должна быть функция (без аргументов), вызываемая всякий раз, когда вставляется символ с синтаксисом закрывающих скобок. Значение функции &lt;code&gt;blink-paren-function&lt;/code&gt; может быть равно &lt;code&gt;nil&lt;/code&gt; , и в этом случае ничего не делается.</target>
        </trans-unit>
        <trans-unit id="b2dc1fa5f1a2fdb6c4c6717f7f894d9f186ffcae" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a function of two arguments: a process and the list of windows displaying the process&amp;rsquo;s buffer. When the function is called, the process&amp;rsquo;s buffer is the current buffer. The function should return a cons cell &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; that describes the dimensions of the logical process window to be passed via a call to &lt;code&gt;set-process-window-size&lt;/code&gt;. The function can also return &lt;code&gt;nil&lt;/code&gt;, in which case Emacs will not call &lt;code&gt;set-process-window-size&lt;/code&gt; for this process.</source>
          <target state="translated">Значение этой переменной должно быть функцией двух аргументов: процесса и списка окон, отображающих буфер процесса. Когда функция вызывается, буфер процесса является текущим буфером. Функция должна возвращать cons-ячейку &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; которая описывает размеры окна логического процесса, передаваемого через вызов &lt;code&gt;set-process-window-size&lt;/code&gt; . Функция также может возвращать &lt;code&gt;nil&lt;/code&gt; , и в этом случае Emacs не будет вызывать &lt;code&gt;set-process-window-size&lt;/code&gt; для этого процесса.</target>
        </trans-unit>
        <trans-unit id="18ecc20cfb79cb28cfc3c0f86e79cb037503ab21" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a function. When the user invokes a disabled command interactively, this function is called instead of the disabled command. It can use &lt;code&gt;this-command-keys&lt;/code&gt; to determine what the user typed to run the command, and thus find the command itself.</source>
          <target state="translated">Значение этой переменной должно быть функцией. Когда пользователь в интерактивном режиме вызывает отключенную команду, эта функция вызывается вместо отключенной команды. Он может использовать &lt;code&gt;this-command-keys&lt;/code&gt; , чтобы определить, что пользователь ввел для выполнения команды, и таким образом найти саму команду.</target>
        </trans-unit>
        <trans-unit id="440fd6f3fe4086cfcbed381053251b8ba6bd3e2e" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a string whose syntax is a Lisp comment.</source>
          <target state="translated">Значением этой переменной должна быть строка,синтаксис которой является комментарием на языке Lisp.</target>
        </trans-unit>
        <trans-unit id="a518e7693499305932b085da27f9bb3f7b0a936b" translate="yes" xml:space="preserve">
          <source>The value of this variable should be either &lt;code&gt;nil&lt;/code&gt; or a fraction &lt;var&gt;f&lt;/var&gt; between 0 and 1. If it is a fraction, that specifies where on the screen to put point when scrolling down. More precisely, when a window scrolls down because point is above the window start, the new start position is chosen to put point &lt;var&gt;f&lt;/var&gt; part of the window height from the top. The larger &lt;var&gt;f&lt;/var&gt;, the more aggressive the scrolling.</source>
          <target state="translated">Значение этой переменной должно быть либо &lt;code&gt;nil&lt;/code&gt; либо дробью &lt;var&gt;f&lt;/var&gt; от 0 до 1. Если это дробь, это указывает, где на экране поставить точку при прокрутке вниз. Точнее, когда окно прокручивается вниз, потому что точка находится выше начала окна, новая начальная позиция выбирается так, чтобы точка &lt;var&gt;f&lt;/var&gt; помещалась на часть высоты окна сверху. Чем больше &lt;var&gt;f&lt;/var&gt; , тем агрессивнее прокрутка.</target>
        </trans-unit>
        <trans-unit id="da9ab538210ad97f321250c6838047d4466efc1a" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies a function to call to check whether a buffer needs reverting. The default value only handles buffers that are visiting files, by checking their modification time. Buffers that are not visiting files require a custom function of one optional argument &lt;var&gt;noconfirm&lt;/var&gt;. The function should return non-&lt;code&gt;nil&lt;/code&gt; if the buffer should be reverted. The buffer is current when this function is called.</source>
          <target state="translated">Значение этой переменной указывает функцию, которую нужно вызвать, чтобы проверить, требуется ли возврат буфера. Значение по умолчанию обрабатывает только буферы, которые обращаются к файлам, проверяя время их модификации. Для буферов, которые не &lt;var&gt;noconfirm&lt;/var&gt; файлам, требуется настраиваемая функция с одним необязательным аргументом noconfirm . Функция должна возвращать &lt;code&gt;nil&lt;/code&gt; если буфер должен быть восстановлен. Буфер является текущим при вызове этой функции.</target>
        </trans-unit>
        <trans-unit id="12dca8a93c0036a1980e2e69ff462cb1ac961e17" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies how often to do auto-saving, in terms of number of input events. Each time this many additional input events are read, Emacs does auto-saving for all buffers in which that is enabled. Setting this to zero disables autosaving based on the number of characters typed.</source>
          <target state="translated">Значение этой переменной определяет частоту выполнения автосохранения,с точки зрения количества входных событий.Каждый раз,когда считывается столько дополнительных входных событий,Emacs делает автосохранение для всех буферов,в которых оно включено.Установка этого значения в ноль отключает автосохранение в зависимости от количества набранных символов.</target>
        </trans-unit>
        <trans-unit id="2ee4257ee2662122b633a4b0cbe9a66ce225a38e" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the amount of consing before a garbage collection occurs, as a fraction of the current heap size. This criterion and &lt;code&gt;gc-cons-threshold&lt;/code&gt; apply in parallel, and garbage collection occurs only when both criteria are satisfied.</source>
          <target state="translated">Значение этой переменной указывает количество потребляемых ресурсов до того, как произойдет сборка мусора, как часть текущего размера кучи. Этот критерий и &lt;code&gt;gc-cons-threshold&lt;/code&gt; применяются параллельно, и сборка мусора происходит только при соблюдении обоих критериев.</target>
        </trans-unit>
        <trans-unit id="e15c226f38ff49c3333b1e006ff2cc624b6b04dc" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the current sort key for the Tabulated List buffer. If it is &lt;code&gt;nil&lt;/code&gt;, no sorting is done. Otherwise, it should have the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;flip&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;name&lt;/var&gt; is a string matching one of the column names in &lt;code&gt;tabulated-list-format&lt;/code&gt;, and &lt;var&gt;flip&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means to invert the sort order.</source>
          <target state="translated">Значение этой переменной определяет текущий ключ сортировки для буфера табличного списка. Если он равен &lt;code&gt;nil&lt;/code&gt; , сортировка не производится. В противном случае он должен иметь форму &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;flip&lt;/var&gt;)&lt;/code&gt; , где &lt;var&gt;name&lt;/var&gt; - это строка, соответствующая одному из имен столбцов в &lt;code&gt;tabulated-list-format&lt;/code&gt; , а &lt;var&gt;flip&lt;/var&gt; , если не &lt;code&gt;nil&lt;/code&gt; , означает инвертирование порядка сортировки.</target>
        </trans-unit>
        <trans-unit id="c4af1068f1e05dee5d6fefee8b641be1f2c78d71" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the function to use to insert the updated contents when reverting this buffer. The function receives two arguments: first the file name to use; second, &lt;code&gt;t&lt;/code&gt; if the user has asked to read the auto-save file.</source>
          <target state="translated">Значение этой переменной указывает функцию, которая будет использоваться для вставки обновленного содержимого при возврате этого буфера. Функция получает два аргумента: первый - имя используемого файла; во-вторых, &lt;code&gt;t&lt;/code&gt; если пользователь попросил прочитать файл автосохранения.</target>
        </trans-unit>
        <trans-unit id="d7f7bfe65157559bbddd1955ea91ebf264d68077" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the maximum length for all history lists that don&amp;rsquo;t specify their own maximum lengths. If the value is &lt;code&gt;t&lt;/code&gt;, that means there is no maximum (don&amp;rsquo;t delete old elements). If a history list variable&amp;rsquo;s symbol has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;history-length&lt;/code&gt; property, it overrides this variable for that particular history list.</source>
          <target state="translated">Значение этой переменной определяет максимальную длину для всех списков истории, которые не указывают свои собственные максимальные длины. Если значение равно &lt;code&gt;t&lt;/code&gt; , это означает, что максимума нет (не удаляйте старые элементы). Если символ переменной списка истории имеет свойство &lt;code&gt;history-length&lt;/code&gt; отличное от &lt;code&gt;nil&lt;/code&gt; , он переопределяет эту переменную для этого конкретного списка истории.</target>
        </trans-unit>
        <trans-unit id="57d3c0b7a901e93cfaa40fe9b9de672f0e622cf4" translate="yes" xml:space="preserve">
          <source>The value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, is the current glyph table. It takes effect only on character terminals; on graphical displays, all glyphs are displayed literally. The glyph table should be a vector whose &lt;var&gt;g&lt;/var&gt;th element specifies how to display glyph code &lt;var&gt;g&lt;/var&gt;, where &lt;var&gt;g&lt;/var&gt; is the glyph code for a glyph whose face is unspecified. Each element should be one of the following:</source>
          <target state="translated">Значение этой переменной, если не &lt;code&gt;nil&lt;/code&gt; , является текущей таблицей глифов. Он действует только на символьные терминалы; на графических дисплеях все глифы отображаются буквально. Таблица глифов должна быть вектором, &lt;var&gt;g&lt;/var&gt; - й элемент которого указывает, как отображать код глифа &lt;var&gt;g&lt;/var&gt; , где &lt;var&gt;g&lt;/var&gt; - код глифа для глифа, лицо которого не указано. Каждый элемент должен быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="ce482bcd0ec534adb705f36979bc396efd3afe84" translate="yes" xml:space="preserve">
          <source>The value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, should be a function. This function is called, with no arguments, after &lt;code&gt;write-region&lt;/code&gt; has completed.</source>
          <target state="translated">Значение этой переменной, если оно не равно &lt;code&gt;nil&lt;/code&gt; , должно быть функцией. Эта функция вызывается без аргументов, после &lt;code&gt;write-region&lt;/code&gt; завершена.</target>
        </trans-unit>
        <trans-unit id="4bc5385973eb55e5a5f4212d89cd8023b5d45cc8" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;call-process&lt;/code&gt; (unless you told it not to wait) indicates the reason for process termination. A number gives the exit status of the subprocess; 0 means success, and any other value means failure. If the process terminated with a signal, &lt;code&gt;call-process&lt;/code&gt; returns a string describing the signal. If you told &lt;code&gt;call-process&lt;/code&gt; not to wait, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Значение, возвращаемое &lt;code&gt;call-process&lt;/code&gt; (если вы не сказали ему не ждать), указывает причину завершения процесса. Число указывает статус выхода подпроцесса; 0 означает успех, а любое другое значение означает неудачу. Если процесс завершился сигналом, &lt;code&gt;call-process&lt;/code&gt; возвращает строку, описывающую сигнал. Если вы сказали &lt;code&gt;call-process&lt;/code&gt; не ждать, он вернет &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f96085924dfd5d71ffa529190dd3a22501712287" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;garbage-collect&lt;/code&gt; describes the amount of memory used by Lisp data, broken down by data type. By contrast, the function &lt;code&gt;memory-limit&lt;/code&gt; provides information on the total amount of memory Emacs is currently using.</source>
          <target state="translated">Значение, возвращаемое &lt;code&gt;garbage-collect&lt;/code&gt; описывает объем памяти, используемый данными Lisp, с разбивкой по типам данных. Напротив, функция &lt;code&gt;memory-limit&lt;/code&gt; предоставляет информацию об общем объеме памяти, используемой Emacs в настоящее время.</target>
        </trans-unit>
        <trans-unit id="31e7a32e779b109733b4aa450e495a30fb5d2ec6" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;parse-partial-sexp&lt;/code&gt; (a Lisp primitive for indentation and nesting computation) when it parses up to the beginning of this line.</source>
          <target state="translated">Значение, возвращаемое &lt;code&gt;parse-partial-sexp&lt;/code&gt; (примитив Lisp для вычисления отступов и вложенности), когда он анализирует до начала этой строки.</target>
        </trans-unit>
        <trans-unit id="22d588379a0688ed195ba832770bfcb90fc7a1a1" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;save-excursion&lt;/code&gt; is the result of the last form in &lt;var&gt;body&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if no body forms were given.</source>
          <target state="translated">Значение, возвращаемое функцией &lt;code&gt;save-excursion&lt;/code&gt; , является результатом последней формы в &lt;var&gt;body&lt;/var&gt; , или &lt;code&gt;nil&lt;/code&gt; если формы тела не заданы.</target>
        </trans-unit>
        <trans-unit id="e0452bed199b14aafda21c04a93f979b209faa96" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;save-restriction&lt;/code&gt; is that returned by the last form in &lt;var&gt;body&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if no body forms were given.</source>
          <target state="translated">Значение, возвращаемое ограничением &lt;code&gt;save-restriction&lt;/code&gt; это значение, возвращаемое последней формой в &lt;var&gt;body&lt;/var&gt; , или &lt;code&gt;nil&lt;/code&gt; , если формы тела не заданы.</target>
        </trans-unit>
        <trans-unit id="c74d3864bf57e201710c0f494d7941abdf62bf83" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;window-state-get&lt;/code&gt; can be used in the same session to make a clone of a window in another window. It can be also written to disk and read back in another session. In either case, use the following function to restore the state of the window.</source>
          <target state="translated">Значение, возвращаемое функцией &lt;code&gt;window-state-get&lt;/code&gt; , можно использовать в том же сеансе для создания клона окна в другом окне. Его также можно записать на диск и прочитать в другом сеансе. В любом случае используйте следующую функцию для восстановления состояния окна.</target>
        </trans-unit>
        <trans-unit id="7596c5c7cfff59135fc00ba0034aff9d324568ff" translate="yes" xml:space="preserve">
          <source>The value returned by the function is a vector of the form &lt;code&gt;[&lt;var&gt;name&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;pixel-size&lt;/var&gt; &lt;var&gt;max-width&lt;/var&gt;
&lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt; &lt;var&gt;average-width&lt;/var&gt;
&lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt;. Here&amp;rsquo;s the description of each components of this vector:</source>
          <target state="translated">Значение , возвращаемое функцией является вектор вида &lt;code&gt;[&lt;var&gt;name&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;pixel-size&lt;/var&gt; &lt;var&gt;max-width&lt;/var&gt; &lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt; &lt;var&gt;average-width&lt;/var&gt; &lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt; . Вот описание каждого компонента этого вектора:</target>
        </trans-unit>
        <trans-unit id="7f1af6cd4e0db0a9010ab9bcf0a730b7bc413d9b" translate="yes" xml:space="preserve">
          <source>The value returned by the function is a vector of the form &lt;code&gt;[&lt;var&gt;opened-name&lt;/var&gt; &lt;var&gt;full-name&lt;/var&gt; &lt;var&gt;size&lt;/var&gt; &lt;var&gt;height&lt;/var&gt;
&lt;var&gt;baseline-offset&lt;/var&gt; &lt;var&gt;relative-compose&lt;/var&gt; &lt;var&gt;default-ascent&lt;/var&gt;
&lt;var&gt;max-width&lt;/var&gt; &lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt;
&lt;var&gt;average-width&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt;. Here&amp;rsquo;s the description of each components of this vector:</source>
          <target state="translated">Значение , возвращаемое функцией является вектор вида &lt;code&gt;[&lt;var&gt;opened-name&lt;/var&gt; &lt;var&gt;full-name&lt;/var&gt; &lt;var&gt;size&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;baseline-offset&lt;/var&gt; &lt;var&gt;relative-compose&lt;/var&gt; &lt;var&gt;default-ascent&lt;/var&gt; &lt;var&gt;max-width&lt;/var&gt; &lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt; &lt;var&gt;average-width&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt; . Вот описание каждого компонента этого вектора:</target>
        </trans-unit>
        <trans-unit id="d45b07b4efd10701d924481455a5da20eaaa3618" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Возвращенное значение равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0a7f39be3f9da493d01e7c44973c0716de188f5" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;var&gt;columns&lt;/var&gt;.</source>
          <target state="translated">Возвращаемое значение - &lt;var&gt;columns&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="975f3a289665270f4ba1e59734e35f87c9928129" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;var&gt;marker&lt;/var&gt;.</source>
          <target state="translated">Возвращаемое значение - &lt;var&gt;marker&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="73a439c0a0e9878cfb0da4ec67a1717f7e4a93a8" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;var&gt;variable&lt;/var&gt;.</source>
          <target state="translated">Возвращаемое значение является &lt;var&gt;variable&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="dec60e5c6fc38f40ce6cf94f56c02b10791c1e22" translate="yes" xml:space="preserve">
          <source>The value returned is always &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Возвращаемое значение всегда равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47d0638c890cedd458d1d1403d1e7e0313168cb6" translate="yes" xml:space="preserve">
          <source>The value returned is the screen line number point has moved to, relative to the top line of the window.</source>
          <target state="translated">Возвращаемое значение-это числовая точка линии экрана,перемещенная относительно верхней линии окна.</target>
        </trans-unit>
        <trans-unit id="b2ccc57b2f309a480d2e7f6a52e01939c829850f" translate="yes" xml:space="preserve">
          <source>The value should be a cons cell of the form &lt;code&gt;(&lt;var&gt;input-coding&lt;/var&gt;
. &lt;var&gt;output-coding&lt;/var&gt;)&lt;/code&gt;. Here &lt;var&gt;input-coding&lt;/var&gt; applies to input from the subprocess, and &lt;var&gt;output-coding&lt;/var&gt; applies to output to it.</source>
          <target state="translated">Значение должно быть cons-ячейкой формы &lt;code&gt;(&lt;var&gt;input-coding&lt;/var&gt; . &lt;var&gt;output-coding&lt;/var&gt;)&lt;/code&gt; . Здесь &lt;var&gt;input-coding&lt;/var&gt; применяется к вводу из подпроцесса, а &lt;var&gt;output-coding&lt;/var&gt; вывода применяется к выводу в него.</target>
        </trans-unit>
        <trans-unit id="afa4a6e9d7cbd4770933f00e367e5337ede28bad" translate="yes" xml:space="preserve">
          <source>The value should be a function for &lt;em&gt;annotating&lt;/em&gt; completions. The function should take one argument, &lt;var&gt;string&lt;/var&gt;, which is a possible completion. It should return a string, which is displayed after the completion &lt;var&gt;string&lt;/var&gt; in the</source>
          <target state="translated">Значение должно быть функцией для &lt;em&gt;аннотирования&lt;/em&gt; завершений. Функция должна принимать один аргумент, &lt;var&gt;string&lt;/var&gt; , которая является возможным завершением. Он должен вернуть строку, которая отображается после &lt;var&gt;string&lt;/var&gt; завершения в</target>
        </trans-unit>
        <trans-unit id="c201901c0018b0c92d92e65e50c18f3c1c34c052" translate="yes" xml:space="preserve">
          <source>The value should be a function for sorting completions, when &lt;code&gt;completion-cycle-threshold&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the user is cycling through completion alternatives. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Completion Options&lt;/a&gt; in</source>
          <target state="translated">Значение должно быть функцией для сортировки завершений, когда &lt;code&gt;completion-cycle-threshold&lt;/code&gt; равно &lt;code&gt;nil&lt;/code&gt; и пользователь циклически перебирает варианты завершения. См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Варианты завершения&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="ba777ba7c7fa48650a02e65762611a05ad3b440b" translate="yes" xml:space="preserve">
          <source>The value should be a function for sorting completions, when &lt;code&gt;completion-cycle-threshold&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the user is cycling through completion alternatives. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Completion Options&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ba0d62cbcc1ae0208dc24b05830349e9976f9d" translate="yes" xml:space="preserve">
          <source>The value should be a function for sorting completions. The function should take one argument, a list of completion strings, and return a sorted list of completion strings. It is allowed to alter the input list destructively.</source>
          <target state="translated">Значение должно быть функцией для сортировки завершений.Функция должна принять один аргумент-список завершенных строк и вернуть отсортированный список завершенных строк.Допускается деструктивное изменение входного списка.</target>
        </trans-unit>
        <trans-unit id="e101dd6c8e98ecc490ae874e5dcfb9d80b45d061" translate="yes" xml:space="preserve">
          <source>The value should be a function that takes no arguments and returns a frame, or &lt;code&gt;nil&lt;/code&gt; if no frame could be created. The default value is a function that creates a frame using the parameters specified by &lt;code&gt;pop-up-frame-alist&lt;/code&gt; (see below).</source>
          <target state="translated">Значение должно быть функцией, которая не принимает аргументов и возвращает фрейм, или &lt;code&gt;nil&lt;/code&gt; , если фрейм не может быть создан. Значение по умолчанию - это функция, которая создает фрейм, используя параметры, указанные в &lt;code&gt;pop-up-frame-alist&lt;/code&gt; (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="b2200b61001be6b8b42c0f192f2e1441d6be0fba" translate="yes" xml:space="preserve">
          <source>The value should be a function to add annotations in the completions buffer. This function must accept one argument, a completion, and should either return &lt;code&gt;nil&lt;/code&gt; or a string to be displayed next to the completion.</source>
          <target state="translated">Значение должно быть функцией для добавления аннотаций в буфер завершений. Эта функция должна принимать один аргумент, завершение, и должна либо возвращать &lt;code&gt;nil&lt;/code&gt; , либо строку, которая будет отображаться рядом с завершением.</target>
        </trans-unit>
        <trans-unit id="faa61fa6487d98c4ad45fdb4f4dd02ad923d60a5" translate="yes" xml:space="preserve">
          <source>The value should be a function to run after performing completion. The function should accept two arguments, &lt;var&gt;string&lt;/var&gt; and &lt;var&gt;status&lt;/var&gt;, where &lt;var&gt;string&lt;/var&gt; is the text to which the field was completed, and &lt;var&gt;status&lt;/var&gt; indicates what kind of operation happened: &lt;code&gt;finished&lt;/code&gt; if text is now complete, &lt;code&gt;sole&lt;/code&gt; if the text cannot be further completed but completion is not finished, or &lt;code&gt;exact&lt;/code&gt; if the text is a valid completion but may be further completed.</source>
          <target state="translated">Значение должно быть функцией, запускаемой после завершения. Функция должна принимать два аргумента, &lt;var&gt;string&lt;/var&gt; и &lt;var&gt;status&lt;/var&gt; , где &lt;var&gt;string&lt;/var&gt; - это текст, которым было заполнено поле, а &lt;var&gt;status&lt;/var&gt; указывает, какая операция произошла: &lt;code&gt;finished&lt;/code&gt; если текст теперь завершен, &lt;code&gt;sole&lt;/code&gt; если текст не может быть завершен, но завершение не закончен или &lt;code&gt;exact&lt;/code&gt; если текст является допустимым завершением, но может быть дополнен в дальнейшем.</target>
        </trans-unit>
        <trans-unit id="9b7ebbfe345be5a867dbde46e6a2761a575df403" translate="yes" xml:space="preserve">
          <source>The value should be a list of completion styles (symbols).</source>
          <target state="translated">Значение должно представлять собой список стилей завершения (символов).</target>
        </trans-unit>
        <trans-unit id="925758dfea64d9dd86f0a3bf26a2bd82f0f1f147" translate="yes" xml:space="preserve">
          <source>The value should be a predicate that completion candidates need to satisfy.</source>
          <target state="translated">Ценность должна быть предикатом,который должны удовлетворять кандидаты на заполнение вакансий.</target>
        </trans-unit>
        <trans-unit id="5cb79d51602bd8eb1cf7a88ebf99635042f65726" translate="yes" xml:space="preserve">
          <source>The value should be a symbol describing what kind of text the completion function is trying to complete. If the symbol matches one of the keys in &lt;code&gt;completion-category-overrides&lt;/code&gt;, the usual completion behavior is overridden. See &lt;a href=&quot;completion-variables#Completion-Variables&quot;&gt;Completion Variables&lt;/a&gt;.</source>
          <target state="translated">Значение должно быть символом, описывающим, какой текст пытается завершить функция завершения. Если символ соответствует одному из ключей в &lt;code&gt;completion-category-overrides&lt;/code&gt; , обычное поведение завершения отменяется . См. &lt;a href=&quot;completion-variables#Completion-Variables&quot;&gt;Переменные завершения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12bf4f6f2a54e741e94637b75c4db474bd81d15b" translate="yes" xml:space="preserve">
          <source>The value should be a value for &lt;code&gt;completion-cycle-threshold&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Completion Options&lt;/a&gt; in</source>
          <target state="translated">Значение должно быть значением для &lt;code&gt;completion-cycle-threshold&lt;/code&gt; (см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Параметры завершения&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="16018e79055192cfd191e04fc5a9f0d4323cab19" translate="yes" xml:space="preserve">
          <source>The value should be a value for &lt;code&gt;completion-cycle-threshold&lt;/code&gt; (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Completion Options&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff26f2d74e7f80625e6dcbebeacb661b2c0a9f8" translate="yes" xml:space="preserve">
          <source>The value should be an alist of elements &lt;code&gt;(&lt;var&gt;prop&lt;/var&gt;
. &lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt;. Each alist element is handled in order. The inserted text is scanned for stretches of text having text properties &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;prop&lt;/var&gt;; for each such stretch, &lt;var&gt;fun&lt;/var&gt; is called with three arguments: the value of the property, and the start and end positions of the text.</source>
          <target state="translated">Значение должно быть списком элементов &lt;code&gt;(&lt;var&gt;prop&lt;/var&gt; . &lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt; . Каждый элемент alist обрабатывается по порядку. Вставленный текст сканируется на предмет фрагментов текста, имеющих свойства текста &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;prop&lt;/var&gt; ; для каждого такого растяжения вызывается &lt;var&gt;fun&lt;/var&gt; с тремя аргументами: значением свойства, а также начальной и конечной позициями текста.</target>
        </trans-unit>
        <trans-unit id="0feffcbb3119f336531a6fd74cbbff440dba66ac" translate="yes" xml:space="preserve">
          <source>The value specifies a direction which, together with a &lt;code&gt;window&lt;/code&gt; entry, allows &lt;code&gt;display-buffer-in-direction&lt;/code&gt; to determine the location of the window to display the buffer.</source>
          <target state="translated">Значение указывает направление, которое вместе с записью &lt;code&gt;window&lt;/code&gt; позволяет &lt;code&gt;display-buffer-in-direction&lt;/code&gt; определять местоположение окна для отображения буфера.</target>
        </trans-unit>
        <trans-unit id="611611e171be434468ec675dea405dd5312d8f63" translate="yes" xml:space="preserve">
          <source>The value specifies a function for determining safe file-local values for the named variable. See &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;.</source>
          <target state="translated">Значение указывает функцию для определения безопасных локальных значений файла для указанной переменной. См. Раздел &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;Локальные переменные файла&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea946c727c16f4c700d3a131807aa1fa7ac26e10" translate="yes" xml:space="preserve">
          <source>The value specifies a minimum height of the window used, in lines. If a window is not or cannot be made as high as specified by this entry, the window is not considered for use. The only client of this entry is presently &lt;code&gt;display-buffer-below-selected&lt;/code&gt;.</source>
          <target state="translated">Значение указывает минимальную высоту используемого окна в строках. Если окно не достигло или не может быть достигнуто такой высоты, как указано в этой записи, окно не считается для использования. Единственный клиент этой записи в настоящее время &lt;code&gt;display-buffer-below-selected&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e878f22a9e22e5e6ae516631fd4b2f22c80a65af" translate="yes" xml:space="preserve">
          <source>The value specifies a window that is in some way related to the window chosen by &lt;code&gt;display-buffer&lt;/code&gt;. This entry is currently used by &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; to indicate the window on whose side the new window shall be created. It is also used by &lt;code&gt;display-buffer-in-direction&lt;/code&gt; to specify the reference window on whose side the resulting window shall appear.</source>
          <target state="translated">Значение указывает окно, которое каким-то образом связано с окном, выбранным &lt;code&gt;display-buffer&lt;/code&gt; . Эта запись в настоящее время используется &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; для указания окна, на чьей стороне должно быть создано новое окно. Он также используется &lt;code&gt;display-buffer-in-direction&lt;/code&gt; для указания ссылочного окна, на чьей стороне должно появиться результирующее окно.</target>
        </trans-unit>
        <trans-unit id="a230a1b00acb88265aaebae444183845a0a12075" translate="yes" xml:space="preserve">
          <source>The value specifies an alist of frame parameters to give a new frame, if one is created. &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; is its one and only addressee.</source>
          <target state="translated">Значение указывает список параметров кадра для создания нового кадра, если он создан. &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; - его единственный адресат.</target>
        </trans-unit>
        <trans-unit id="712354d6ecb588545e689e9cf4e0f436a0db7e70" translate="yes" xml:space="preserve">
          <source>The value specifies an alist of frame parameters to use when the buffer is displayed on a child frame. This entry is used only by &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt;.</source>
          <target state="translated">Значение определяет список параметров кадра, который будет использоваться при отображении буфера в дочернем кадре. Эта запись используется только &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc8a52f49cd1e2b71d0412b55ac293683a602f45" translate="yes" xml:space="preserve">
          <source>The value specifies an alist of window parameters to give the chosen window. All action functions that choose a window should process this entry.</source>
          <target state="translated">Значение задает список параметров окна для предоставления выбранного окна.Все функции действия,которые выбирают окно,должны обработать эту запись.</target>
        </trans-unit>
        <trans-unit id="cebae73a089b0cf31db115ca79a05a8ad5a3d9f1" translate="yes" xml:space="preserve">
          <source>The value specifies options for a command.</source>
          <target state="translated">Значение задает опции для команды.</target>
        </trans-unit>
        <trans-unit id="70a0d168bab1f71658353f8a2d881540c5b9b497" translate="yes" xml:space="preserve">
          <source>The value specifies the parent frame to be used when the buffer is displayed on a child frame. This entry is used only by &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt;.</source>
          <target state="translated">Значение указывает родительский фрейм, который будет использоваться при отображении буфера в дочернем фрейме. Эта запись используется только &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c548691ebd219b442c5f2af316d1d293d80adbd" translate="yes" xml:space="preserve">
          <source>The value specifies the set of frames to search for a window that can be reused because it already displays the buffer. It can be set as follows:</source>
          <target state="translated">Значение задает набор кадров для поиска окна,которое может быть повторно использовано,так как оно уже отображает буфер.Его можно установить следующим образом:</target>
        </trans-unit>
        <trans-unit id="af34abd1ebb5fd7575ea1f5e82855c70ca1ac344" translate="yes" xml:space="preserve">
          <source>The value specifies whether and how to adjust the height of the chosen window and can be one of the following:</source>
          <target state="translated">Значение определяет,нужно ли и как регулировать высоту выбранного окна,и может быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="505bb1f9ff0dba8805de9df77265d82a7c2cdafa" translate="yes" xml:space="preserve">
          <source>The value stores the documentation string of the named face. This is set automatically by &lt;code&gt;defface&lt;/code&gt;. See &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;.</source>
          <target state="translated">Значение хранит строку документации названного лица. Устанавливается автоматически &lt;code&gt;defface&lt;/code&gt; . См. &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Определение лиц&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a55d35705528885818f514326dd9b25fb751d4f9" translate="yes" xml:space="preserve">
          <source>The value string normally has text properties that correspond to the faces, keymaps, etc., that the mode line would have. Any character for which no &lt;code&gt;face&lt;/code&gt; property is specified by &lt;var&gt;format&lt;/var&gt; gets a default value determined by &lt;var&gt;face&lt;/var&gt;. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, that stands for either &lt;code&gt;mode-line&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is selected, otherwise &lt;code&gt;mode-line-inactive&lt;/code&gt;. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, that stands for the default face. If &lt;var&gt;face&lt;/var&gt; is an integer, the value returned by this function will have no text properties.</source>
          <target state="translated">Строка значения обычно имеет текстовые свойства, соответствующие лицам, раскладкам клавиш и т. Д., Которые должна иметь строка режима. Любой символ, для которого свойство &lt;code&gt;face&lt;/code&gt; не указано &lt;var&gt;format&lt;/var&gt; получает значение по умолчанию, определяемое &lt;var&gt;face&lt;/var&gt; . Если &lt;var&gt;face&lt;/var&gt; - &lt;code&gt;t&lt;/code&gt; , это означает любую &lt;code&gt;mode-line&lt;/code&gt; если выбрано &lt;var&gt;window&lt;/var&gt; , в противном случае &lt;code&gt;mode-line-inactive&lt;/code&gt; . Если &lt;var&gt;face&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; или опущен, это означает грань по умолчанию. Если &lt;var&gt;face&lt;/var&gt; является целым числом, значение, возвращаемое этой функцией, не будет иметь текстовых свойств.</target>
        </trans-unit>
        <trans-unit id="3591dd575c16a1fb94691cd3cca981235d32b6ff" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;background&lt;/var&gt;, should be a string specifying the image background color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the PBM that is 0. The default is the frame&amp;rsquo;s background color.</source>
          <target state="translated">Значение &lt;var&gt;background&lt;/var&gt; должно быть строкой, определяющей цвет фона изображения, или &lt;code&gt;nil&lt;/code&gt; для цвета по умолчанию. Этот цвет используется для каждого пикселя в PBM, равного 0. По умолчанию используется цвет фона кадра.</target>
        </trans-unit>
        <trans-unit id="458f07b42dc208884ff2ff5ab13f9b69732605ef" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;background&lt;/var&gt;, should be a string specifying the image background color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the XBM that is 0. The default is the frame&amp;rsquo;s background color.</source>
          <target state="translated">Значение &lt;var&gt;background&lt;/var&gt; должно быть строкой, определяющей цвет фона изображения, или &lt;code&gt;nil&lt;/code&gt; для цвета по умолчанию. Этот цвет используется для каждого пикселя в XBM, который равен 0. По умолчанию используется цвет фона кадра.</target>
        </trans-unit>
        <trans-unit id="83fa724b0ab7a36133791af18f6967d44343acd2" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;data&lt;/var&gt;, specifies the contents of the image. There are three formats you can use for &lt;var&gt;data&lt;/var&gt;:</source>
          <target state="translated">Значение &lt;var&gt;data&lt;/var&gt; определяет содержимое изображения. Вы можете использовать три формата &lt;var&gt;data&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="7b521a7e9b651d09dfd41d51b4e01b49ec76cdfe" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;foreground&lt;/var&gt;, should be a string specifying the image foreground color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the PBM that is 1. The default is the frame&amp;rsquo;s foreground color.</source>
          <target state="translated">Значение, &lt;var&gt;foreground&lt;/var&gt; , должно быть строкой, определяющей цвет переднего плана изображения, или &lt;code&gt;nil&lt;/code&gt; для цвета по умолчанию. Этот цвет используется для каждого пикселя в PBM, равного 1. По умолчанию используется цвет переднего плана кадра.</target>
        </trans-unit>
        <trans-unit id="dc6e9bbff6399dd6222c56642a86367c8cc843d6" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;foreground&lt;/var&gt;, should be a string specifying the image foreground color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the XBM that is 1. The default is the frame&amp;rsquo;s foreground color.</source>
          <target state="translated">Значение, &lt;var&gt;foreground&lt;/var&gt; , должно быть строкой, определяющей цвет переднего плана изображения, или &lt;code&gt;nil&lt;/code&gt; для цвета по умолчанию. Этот цвет используется для каждого пикселя в XBM, который равен 1. По умолчанию используется цвет переднего плана кадра.</target>
        </trans-unit>
        <trans-unit id="eb345c174c35c0159b93a1f9149ad3d4e1130275" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;height&lt;/var&gt;, specifies the height of the image, in pixels.</source>
          <target state="translated">Значение &lt;var&gt;height&lt;/var&gt; указывает высоту изображения в пикселях.</target>
        </trans-unit>
        <trans-unit id="b9ea6d3dec735a3a948c97af424b63f71478e6cb" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;symbols&lt;/var&gt;, should be an alist whose elements have the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;color&lt;/var&gt;)&lt;/code&gt;. In each element, &lt;var&gt;name&lt;/var&gt; is the name of a color as it appears in the image file, and &lt;var&gt;color&lt;/var&gt; specifies the actual color to use for displaying that name.</source>
          <target state="translated">Значение, &lt;var&gt;symbols&lt;/var&gt; , должно быть списком, элементы которого имеют форму &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;color&lt;/var&gt;)&lt;/code&gt; . В каждом элементе &lt;var&gt;name&lt;/var&gt; - это имя цвета, которое отображается в файле изображения, а &lt;var&gt;color&lt;/var&gt; определяет фактический цвет, который будет использоваться для отображения этого имени.</target>
        </trans-unit>
        <trans-unit id="dcde525351a6f12a8b348e73f3817e78fee629b1" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;type&lt;/var&gt;, should be a symbol specifying the type of the image data, as found in &lt;code&gt;image-format-suffixes&lt;/code&gt;. This is used when the image does not have an associated file name, to provide a hint to ImageMagick to help it detect the image type.</source>
          <target state="translated">Значение &lt;var&gt;type&lt;/var&gt; должно быть символом, определяющим тип данных изображения, как указано в &lt;code&gt;image-format-suffixes&lt;/code&gt; . Это используется, когда изображение не имеет связанного имени файла, чтобы предоставить ImageMagick подсказку, чтобы помочь ему определить тип изображения.</target>
        </trans-unit>
        <trans-unit id="531d38e8be68abb161b4857aa037531d56c07b0d" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;weak&lt;/var&gt;, must be one of &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;key-or-value&lt;/code&gt;, &lt;code&gt;key-and-value&lt;/code&gt;, or &lt;code&gt;t&lt;/code&gt; which is an alias for &lt;code&gt;key-and-value&lt;/code&gt;. If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;key&lt;/code&gt; then the hash table does not prevent its keys from being collected as garbage (if they are not referenced anywhere else); if a particular key does get collected, the corresponding association is removed from the hash table.</source>
          <target state="translated">Значение &lt;var&gt;weak&lt;/var&gt; должно быть одним из &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;key&lt;/code&gt; , &lt;code&gt;value&lt;/code&gt; , &lt;code&gt;key-or-value&lt;/code&gt; , &lt;code&gt;key-and-value&lt;/code&gt; или &lt;code&gt;t&lt;/code&gt; , которое является псевдонимом для пары &quot; &lt;code&gt;key-and-value&lt;/code&gt; . Если &lt;var&gt;weak&lt;/var&gt; является &lt;code&gt;key&lt;/code&gt; то хеш-таблица не препятствует тому, чтобы ее ключи были собраны как мусор (если они не упоминаются где-либо еще); если конкретный ключ действительно собирается, соответствующая ассоциация удаляется из хеш-таблицы.</target>
        </trans-unit>
        <trans-unit id="fa76d4528e5ae6cb4684c0da77a8308d0cb82b94" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;width&lt;/var&gt;, specifies the width of the image, in pixels.</source>
          <target state="translated">Значение &lt;var&gt;width&lt;/var&gt; указывает ширину изображения в пикселях.</target>
        </trans-unit>
        <trans-unit id="be1644837474a9fe39ca523e6b28004356025b7a" translate="yes" xml:space="preserve">
          <source>The value, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the maximum minibuffer history length for the named history list variable. See &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;.</source>
          <target state="translated">Значение, если не &lt;code&gt;nil&lt;/code&gt; , указывает максимальную длину истории минибуфера для именованной переменной списка истории. См. &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Историю минибуфера&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7dd81aa41d587c809be779d8678d7703a9d070c" translate="yes" xml:space="preserve">
          <source>The value, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the number of extra slots in the named char-table type. See &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;.</source>
          <target state="translated">Значение, если не &lt;code&gt;nil&lt;/code&gt; , указывает количество дополнительных слотов в названном типе таблицы символов. См. &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Таблицы Char-Tables&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d157992c080feaba61c3f9992a35160809e8293" translate="yes" xml:space="preserve">
          <source>The values in &lt;var&gt;delta&lt;/var&gt; can be negative to subtract values instead.</source>
          <target state="translated">Значения в &lt;var&gt;delta&lt;/var&gt; могут быть отрицательными, чтобы вместо этого вычесть значения.</target>
        </trans-unit>
        <trans-unit id="25bd5003a5bfd3ff9957bc21c007d9f2e961478c" translate="yes" xml:space="preserve">
          <source>The values must be known and written in advance.</source>
          <target state="translated">Значения должны быть известны и записаны заранее.</target>
        </trans-unit>
        <trans-unit id="e5da79067043a3cf400b4585327d4bc12a8d8220" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;modiff&lt;/code&gt; and &lt;code&gt;overlay_modiff&lt;/code&gt;, respectively, after the last complete redisplay. If their current values match &lt;code&gt;modiff&lt;/code&gt; or &lt;code&gt;overlay_modiff&lt;/code&gt;, that means &lt;code&gt;beg_unchanged&lt;/code&gt; and &lt;code&gt;end_unchanged&lt;/code&gt; contain no useful information.</source>
          <target state="translated">Значения &lt;code&gt;modiff&lt;/code&gt; и &lt;code&gt;overlay_modiff&lt;/code&gt; , соответственно, после последнего полного повторного отображения. Если их текущие значения совпадают с &lt;code&gt;modiff&lt;/code&gt; или &lt;code&gt;overlay_modiff&lt;/code&gt; , это означает, что &lt;code&gt;beg_unchanged&lt;/code&gt; и &lt;code&gt;end_unchanged&lt;/code&gt; не содержат полезной информации.</target>
        </trans-unit>
        <trans-unit id="ed47fccd292efe605a4c56a267c480abd538960b" translate="yes" xml:space="preserve">
          <source>The values specified here may be later overridden by invoking &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) on &lt;var&gt;window&lt;/var&gt; with its &lt;var&gt;keep-margins&lt;/var&gt; argument &lt;code&gt;nil&lt;/code&gt; or omitted.</source>
          <target state="translated">Значения, указанные здесь, могут быть позже переопределены путем вызова &lt;code&gt;set-window-buffer&lt;/code&gt; (см. &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Буферы и Windows&lt;/a&gt; ) в &lt;var&gt;window&lt;/var&gt; с его аргументом &lt;var&gt;keep-margins&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; или опущенным.</target>
        </trans-unit>
        <trans-unit id="ffdbbe9270c4e6a0880d799e803e12a916413aa7" translate="yes" xml:space="preserve">
          <source>The values specified here may be later overridden by invoking &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) on &lt;var&gt;window&lt;/var&gt; with its &lt;var&gt;keep-margins&lt;/var&gt; argument &lt;code&gt;nil&lt;/code&gt; or omitted. However, if the optional fifth argument &lt;var&gt;persistent&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the other arguments are processed successfully, the values specified here unconditionally survive subsequent invocations of &lt;code&gt;set-window-buffer&lt;/code&gt;.</source>
          <target state="translated">Значения, указанные здесь, могут быть позже переопределены путем вызова &lt;code&gt;set-window-buffer&lt;/code&gt; (см. &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Буферы и Windows&lt;/a&gt; ) в &lt;var&gt;window&lt;/var&gt; с его аргументом &lt;var&gt;keep-margins&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; или опущенным. Однако, если необязательный пятый &lt;var&gt;persistent&lt;/var&gt; аргумент не равен &lt;code&gt;nil&lt;/code&gt; и другие аргументы обрабатываются успешно, указанные здесь значения безоговорочно сохраняются после последующих вызовов &lt;code&gt;set-window-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f20937a44fbec35b55cf8ad483755599c4f4983" translate="yes" xml:space="preserve">
          <source>The values specified here may be later overridden by invoking &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) on &lt;var&gt;window&lt;/var&gt; with its &lt;var&gt;keep-margins&lt;/var&gt; argument &lt;code&gt;nil&lt;/code&gt; or omitted. However, if the optional fifth argument &lt;var&gt;persistent&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the other arguments are processed successfully, the values specified here unconditionally survive subsequent invocations of &lt;code&gt;set-window-buffer&lt;/code&gt;. This can be used to permanently turn off fringes in the minibuffer window, consult the description of &lt;code&gt;set-window-scroll-bars&lt;/code&gt; for an example (see &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Scroll Bars&lt;/a&gt;).</source>
          <target state="translated">Значения, указанные здесь, могут быть позже переопределены путем вызова &lt;code&gt;set-window-buffer&lt;/code&gt; (см. &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Буферы и Windows&lt;/a&gt; ) в &lt;var&gt;window&lt;/var&gt; с его аргументом &lt;var&gt;keep-margins&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; или опущенным. Однако, если необязательный пятый &lt;var&gt;persistent&lt;/var&gt; аргумент не равен &lt;code&gt;nil&lt;/code&gt; и другие аргументы обрабатываются успешно, указанные здесь значения безоговорочно сохраняются после последующих вызовов &lt;code&gt;set-window-buffer&lt;/code&gt; . Это можно использовать для постоянного отключения полос в окне минибуфера, обратитесь к описанию &lt;code&gt;set-window-scroll-bars&lt;/code&gt; для примера (см. &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Полосы прокрутки&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9d0a64001addcf5c84bd11eeecbbe2a812972b09" translate="yes" xml:space="preserve">
          <source>The values you can use, to specify either of these pointer shapes, are defined in the file</source>
          <target state="translated">Значения,которые вы можете использовать для указания любой из этих фигур указателя,определены в файле</target>
        </trans-unit>
        <trans-unit id="70c4d9624135a1d02ee3a53311a97032dd279c56" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;&lt;var&gt;command&lt;/var&gt;-alternatives&lt;/code&gt; should contain an alist with alternative implementations of &lt;var&gt;command&lt;/var&gt;. Until this variable is set, &lt;code&gt;define-alternatives&lt;/code&gt; has no effect.</source>
          <target state="translated">Переменная &lt;code&gt;&lt;var&gt;command&lt;/var&gt;-alternatives&lt;/code&gt; должна содержать список альтернативных реализаций &lt;var&gt;command&lt;/var&gt; . Пока эта переменная не установлена, &lt;code&gt;define-alternatives&lt;/code&gt; не действует.</target>
        </trans-unit>
        <trans-unit id="edfb1c8edeea6bfd958815e01d5a1cbf976013b7" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;backup-by-copying&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, says to use the second method, which is to copy the original file and overwrite it with the new buffer contents. The variable &lt;code&gt;file-precious-flag&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, also has this effect (as a sideline of its main significance). See &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Saving Buffers&lt;/a&gt;.</source>
          <target state="translated">Переменная &lt;code&gt;backup-by-copying&lt;/code&gt; , если не &lt;code&gt;nil&lt;/code&gt; , говорит об использовании второго метода, который заключается в копировании исходного файла и его перезаписи новым содержимым буфера. Переменная &lt;code&gt;file-precious-flag&lt;/code&gt; , если она не &lt;code&gt;nil&lt;/code&gt; , также имеет этот эффект (как побочный эффект от ее основного значения). См. &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Сохранение буферов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="784cb7a1b10dca75362ea63cc44adc63b202f651" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;display-buffer-overriding-action&lt;/code&gt;.</source>
          <target state="translated">Переменная &lt;code&gt;display-buffer-overriding-action&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da7252e1b84fd0839fae971325637e2c2419366d" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;face-remapping-alist&lt;/code&gt; is used for buffer-local or global changes in the appearance of a face. For instance, it is used to implement the &lt;code&gt;text-scale-adjust&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Scale.html#Text-Scale&quot;&gt;Text Scale&lt;/a&gt; in</source>
          <target state="translated">Переменная &lt;code&gt;face-remapping-alist&lt;/code&gt; используется для локальных или глобальных изменений внешнего вида лица в буфере. Например, он используется для реализации команды &lt;code&gt;text-scale-adjust&lt;/code&gt; (см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Scale.html#Text-Scale&quot;&gt;Масштаб текста&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="7f7cbc24b842583cc3a0c3a4431d846784257d17" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;face-remapping-alist&lt;/code&gt; is used for buffer-local or global changes in the appearance of a face. For instance, it is used to implement the &lt;code&gt;text-scale-adjust&lt;/code&gt; command (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Scale.html#Text-Scale&quot;&gt;Text Scale&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34c858c384be3019173ab7142614489d00972d3" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;file-name-coding-system&lt;/code&gt; specifies the coding system to use for encoding file names. Emacs encodes file names using that coding system for all file operations. If &lt;code&gt;file-name-coding-system&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, Emacs uses a default coding system determined by the selected language environment. In the default language environment, any non-</source>
          <target state="translated">Переменная &lt;code&gt;file-name-coding-system&lt;/code&gt; определяет систему кодирования, используемую для кодирования имен файлов. Emacs кодирует имена файлов, используя эту систему кодирования для всех операций с файлами. Если &lt;code&gt;file-name-coding-system&lt;/code&gt; равна &lt;code&gt;nil&lt;/code&gt; , Emacs использует систему кодирования по умолчанию, определяемую выбранной языковой средой. В языковой среде по умолчанию любые не-</target>
        </trans-unit>
        <trans-unit id="f0a2a7962865afd977c9962e346463309608747d" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;file-name-handler-alist&lt;/code&gt; holds a list of handlers, together with regular expressions that determine when to apply each handler. Each element has this form:</source>
          <target state="translated">Переменная &lt;code&gt;file-name-handler-alist&lt;/code&gt; содержит список обработчиков вместе с регулярными выражениями, которые определяют, когда применять каждый обработчик. Каждый элемент имеет такую ​​форму:</target>
        </trans-unit>
        <trans-unit id="31a91e3271c754112418809b5d918df00d438cdc" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;inhibit-point-motion-hooks&lt;/code&gt; by default inhibits running the &lt;code&gt;point-left&lt;/code&gt; and &lt;code&gt;point-entered&lt;/code&gt; hooks, see &lt;a href=&quot;#Inhibit-point-motion-hooks&quot;&gt;Inhibit point motion hooks&lt;/a&gt;.</source>
          <target state="translated">Переменная &lt;code&gt;inhibit-point-motion-hooks&lt;/code&gt; по умолчанию запрещает запуск хуков &amp;laquo; &lt;code&gt;point-left&lt;/code&gt; и &amp;laquo; &lt;code&gt;point-entered&lt;/code&gt; , см. &lt;a href=&quot;#Inhibit-point-motion-hooks&quot;&gt;Запрет хуков движения точки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="80d2dd14eab302d61ea77d5bcf3d662baf312644" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;kill-ring&lt;/code&gt; holds the kill ring contents, in the form of a list of strings. The most recent kill is always at the front of the list.</source>
          <target state="translated">Переменная &lt;code&gt;kill-ring&lt;/code&gt; хранит содержимое кольца уничтожения в виде списка строк. Самое последнее убийство всегда находится в начале списка.</target>
        </trans-unit>
        <trans-unit id="1af116daf2ff92fc810afa12d7b3276cfcb4e1cd" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;max-mini-window-height&lt;/code&gt;, which specifies the maximum height for resizing minibuffer windows, also applies to the echo area (which is really a special use of the minibuffer window; see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;).</source>
          <target state="translated">Переменная &lt;code&gt;max-mini-window-height&lt;/code&gt; , которая определяет максимальную высоту для изменения размеров окон минибуфера, также применяется к эхо-области (которая на самом деле является особым использованием окна минибуфера; см. &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Окна минибуфера&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="97a8e64d6a49b6e2b383ab7b9d91e1b975482616" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;overriding-local-map&lt;/code&gt; is normally ignored when determining the menu bar contents. That is, the menu bar is computed from the keymaps that would be active if &lt;code&gt;overriding-local-map&lt;/code&gt; were &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Active Keymaps&lt;/a&gt;.</source>
          <target state="translated">Переменная &lt;code&gt;overriding-local-map&lt;/code&gt; обычно игнорируется при определении содержимого строки меню. То есть строка меню вычисляется из раскладок клавиш, которые были бы активны, если бы &lt;code&gt;overriding-local-map&lt;/code&gt; был &lt;code&gt;nil&lt;/code&gt; . См. &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Активные таблицы ключей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7a4850b24d3c2ac6ae8142c3ffc8f37ad0d3a10" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;paragraph-separate&lt;/code&gt; controls how to distinguish paragraphs. See &lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;Standard Regexps&lt;/a&gt;.</source>
          <target state="translated">Переменная &lt;code&gt;paragraph-separate&lt;/code&gt; определяет, как различать абзацы. См. &lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;Стандартные регулярные выражения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4e5e030204bb60690092b5c001a6c2d2385a3dc" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;selection-coding-system&lt;/code&gt; specifies how to encode selections for the window system. See &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;.</source>
          <target state="translated">Переменная &lt;code&gt;selection-coding-system&lt;/code&gt; определяет, как кодировать выбор для оконной системы. См. &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Выбор оконной системы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="005a4747db2da8eb60b4c4d70cc7430741bf77b2" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;use-dialog-box&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Dialog-Boxes.html#Dialog-Boxes&quot;&gt;Dialog Boxes&lt;/a&gt; in</source>
          <target state="translated">&lt;code&gt;use-dialog-box&lt;/code&gt; переменной не равно &lt;code&gt;nil&lt;/code&gt; . См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Dialog-Boxes.html#Dialog-Boxes&quot;&gt;Диалоговые окна&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="8ada775800afc13dc0d7c862a48e5be0c9489358" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;use-dialog-box&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Dialog-Boxes.html#Dialog-Boxes&quot;&gt;Dialog Boxes&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d9e1a111c06c72dd5fe05bcdd79e7bb53745fd" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;vc-mode&lt;/code&gt;, buffer-local in each buffer, records whether the buffer&amp;rsquo;s visited file is maintained with version control, and, if so, which kind. Its value is a string that appears in the mode line, or &lt;code&gt;nil&lt;/code&gt; for no version control.</source>
          <target state="translated">Переменная &lt;code&gt;vc-mode&lt;/code&gt; , buffer-local в каждом буфере, записывает, поддерживается ли посещенный файл буфера с контролем версий, и если да, то какого типа. Его значение - строка, которая появляется в строке режима, или &lt;code&gt;nil&lt;/code&gt; ,если контроль версий отсутствует.</target>
        </trans-unit>
        <trans-unit id="3f4edf43932306ed36279cea1dd13405c1358ef5" translate="yes" xml:space="preserve">
          <source>The variable in overall control of the mode line is &lt;code&gt;mode-line-format&lt;/code&gt;.</source>
          <target state="translated">Переменной в общем управлении строкой &lt;code&gt;mode-line-format&lt;/code&gt; является формат строки режима .</target>
        </trans-unit>
        <trans-unit id="506280d27c3a453af25eaf83b2e22ba4756bde25" translate="yes" xml:space="preserve">
          <source>The variable is a normal hook (see &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;).</source>
          <target state="translated">Переменная - это обычная ловушка (см. &lt;a href=&quot;hooks#Hooks&quot;&gt;Хуки&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="bd9d0d131cd223849d83a9a897d9082204faab10" translate="yes" xml:space="preserve">
          <source>The variable is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">Переменная всегда является локальной для текущего терминала и не может быть локальной для буфера. См. &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Несколько терминалов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="afffab14c74c322c6258e66827462e1a16d2b8ec" translate="yes" xml:space="preserve">
          <source>The variable is always local to the current terminal, and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">Переменная всегда является локальной для текущего терминала и не может быть локальной для буфера. См. &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Несколько терминалов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1b97401b6a596ccc158402fffb09944fd2fd36e2" translate="yes" xml:space="preserve">
          <source>The variable is intended for internal use and is defined in C code. (Emacs code contributed before 2018 may follow other conventions, which are being phased out.)</source>
          <target state="translated">Переменная предназначена для внутреннего использования и определена в C-коде.(Код Emacs,внесенный до 2018 года,может следовать за другими конвенциями,которые в настоящее время постепенно отменяются).</target>
        </trans-unit>
        <trans-unit id="cb202781764a3574f77a5a340b243172f7492fda" translate="yes" xml:space="preserve">
          <source>The variable is intended for internal use and is defined in the file</source>
          <target state="translated">Переменная предназначена для внутреннего использования и определяется в файле</target>
        </trans-unit>
        <trans-unit id="41f80727e5413f13677ccab0cafcbdb5331c71cc" translate="yes" xml:space="preserve">
          <source>The variable is needed because in some cases a function reads an event and then decides not to use it. Storing the event in this variable causes it to be processed normally, by the command loop or by the functions to read command input.</source>
          <target state="translated">Переменная нужна потому,что в некоторых случаях функция читает событие,а затем решает не использовать его.Хранение события в этой переменной приводит к тому,что оно обрабатывается в нормальном режиме,циклом команд или функциями для чтения входных команд.</target>
        </trans-unit>
        <trans-unit id="3150be7b7ac09c6a1f548c75f40f74c6a1f6ef59" translate="yes" xml:space="preserve">
          <source>The variable which directly controls search-based fontification is &lt;code&gt;font-lock-keywords&lt;/code&gt;, which is typically specified via the &lt;var&gt;keywords&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;.</source>
          <target state="translated">Переменная, которая напрямую управляет фонтификацией на основе поиска, - это &lt;code&gt;font-lock-keywords&lt;/code&gt; , которая обычно указывается через элемент &lt;var&gt;keywords&lt;/var&gt; в &lt;code&gt;font-lock-defaults&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c5b07c9b1876282e7d1f551953a370749b40a01" translate="yes" xml:space="preserve">
          <source>The variable&amp;rsquo;s normal value is &lt;code&gt;nil&lt;/code&gt;, which means to handle each warning separately.</source>
          <target state="translated">Нормальное значение переменной - &lt;code&gt;nil&lt;/code&gt; , что означает обработку каждого предупреждения отдельно.</target>
        </trans-unit>
        <trans-unit id="c95ce49750efde5fed6afd86875120cb2d79d29e" translate="yes" xml:space="preserve">
          <source>The variable&amp;rsquo;s ordinary binding, which is not associated with any specific buffer, is called the &lt;em&gt;default binding&lt;/em&gt;. In most cases, this is the global binding.</source>
          <target state="translated">Обычная привязка переменной, которая не связана с каким-либо конкретным буфером, называется &lt;em&gt;привязкой&lt;/em&gt; по &lt;em&gt;умолчанию&lt;/em&gt; . В большинстве случаев это глобальная привязка.</target>
        </trans-unit>
        <trans-unit id="0002578a86e49c7b26b7d6dae1705110ffa7f565" translate="yes" xml:space="preserve">
          <source>The variables &lt;code&gt;last-command&lt;/code&gt;, &lt;code&gt;this-command&lt;/code&gt;, &lt;code&gt;last-command-event&lt;/code&gt;, &lt;code&gt;last-input-event&lt;/code&gt;, &lt;code&gt;last-event-frame&lt;/code&gt;, &lt;code&gt;last-nonmenu-event&lt;/code&gt;, and &lt;code&gt;track-mouse&lt;/code&gt;. Commands in Edebug do not affect these variables outside of Edebug.</source>
          <target state="translated">Переменные &lt;code&gt;last-command&lt;/code&gt; , &lt;code&gt;this-command&lt;/code&gt; , &lt;code&gt;last-command-event&lt;/code&gt; , &lt;code&gt;last-input-event&lt;/code&gt; , &lt;code&gt;last-event-frame&lt;/code&gt; , &lt;code&gt;last-nonmenu-event&lt;/code&gt; и &lt;code&gt;track-mouse&lt;/code&gt; . Команды в Edebug не влияют на эти переменные вне Edebug.</target>
        </trans-unit>
        <trans-unit id="ec74bb4b14cd4ddba613a9beb2bc907924ad1fd7" translate="yes" xml:space="preserve">
          <source>The variables &lt;code&gt;overlay-arrow-position&lt;/code&gt; and &lt;code&gt;overlay-arrow-string&lt;/code&gt; are saved and restored, so you can safely invoke Edebug from the recursive edit elsewhere in the same buffer.</source>
          <target state="translated">Переменные &lt;code&gt;overlay-arrow-position&lt;/code&gt; и &lt;code&gt;overlay-arrow-string&lt;/code&gt; сохраняются и восстанавливаются, поэтому вы можете безопасно вызывать Edebug из рекурсивного редактирования в другом месте того же буфера.</target>
        </trans-unit>
        <trans-unit id="12dd85f0af26cb40d63289524c75ea79f44a055c" translate="yes" xml:space="preserve">
          <source>The variables and subgroups of a group are stored in the &lt;code&gt;custom-group&lt;/code&gt; property of the group&amp;rsquo;s symbol. See &lt;a href=&quot;symbol-plists#Symbol-Plists&quot;&gt;Symbol Plists&lt;/a&gt;. The value of that property is a list of pairs whose &lt;code&gt;car&lt;/code&gt; is the variable or subgroup symbol and the &lt;code&gt;cdr&lt;/code&gt; is either &lt;code&gt;custom-variable&lt;/code&gt; or &lt;code&gt;custom-group&lt;/code&gt;.</source>
          <target state="translated">Переменные и подгруппы группы хранятся в свойстве &lt;code&gt;custom-group&lt;/code&gt; символа группы. См. &lt;a href=&quot;symbol-plists#Symbol-Plists&quot;&gt;Списки символов&lt;/a&gt; . Значение этого свойства представляет собой список пар, &lt;code&gt;car&lt;/code&gt; которых является символом переменной или подгруппы, а &lt;code&gt;cdr&lt;/code&gt; - это либо &lt;code&gt;custom-variable&lt;/code&gt; либо &lt;code&gt;custom-group&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ad60ac6e02db9591e6f7dda4a2e131b2f72ea7a" translate="yes" xml:space="preserve">
          <source>The variables whose names end in &amp;lsquo;</source>
          <target state="translated">Переменные, имена которых заканчиваются на '</target>
        </trans-unit>
        <trans-unit id="bab9f851db4965f0aa949afaf727a84dac3bbdef" translate="yes" xml:space="preserve">
          <source>The various forms in &lt;code&gt;rx&lt;/code&gt; regexps are described below. The shorthand &lt;var&gt;rx&lt;/var&gt; represents any &lt;code&gt;rx&lt;/code&gt; form, and &lt;var&gt;rx&lt;/var&gt;&amp;hellip; means zero or more &lt;code&gt;rx&lt;/code&gt; forms. Where the corresponding string regexp syntax is given, &lt;var&gt;A&lt;/var&gt;, &lt;var&gt;B&lt;/var&gt;, &amp;hellip; are string regexp subexpressions.</source>
          <target state="translated">Различные формы &lt;code&gt;rx&lt;/code&gt; выражений rx описаны ниже. Сокращение &lt;var&gt;rx&lt;/var&gt; представляет любую форму &lt;code&gt;rx&lt;/code&gt; , а &lt;var&gt;rx&lt;/var&gt; &amp;hellip; означает ноль или более форм &lt;code&gt;rx&lt;/code&gt; . Если указан соответствующий синтаксис строкового регулярного выражения, &lt;var&gt;A&lt;/var&gt; , &lt;var&gt;B&lt;/var&gt; ,&amp;hellip; - это подвыражения строкового регулярного выражения.</target>
        </trans-unit>
        <trans-unit id="3fb4271848a99a415f5fac5439780d5440f9b920" translate="yes" xml:space="preserve">
          <source>The vast majority of buffer changing primitives will call &lt;code&gt;before-change-functions&lt;/code&gt; and &lt;code&gt;after-change-functions&lt;/code&gt; in balanced pairs, once for each change, where the arguments to these hooks exactly delimit the change being made. Yet, hook functions should not rely on this always being the case, because some complex primitives call &lt;code&gt;before-change-functions&lt;/code&gt; once before making changes, and then call &lt;code&gt;after-change-functions&lt;/code&gt; zero or more times, depending on how many individual changes the primitive is making. When that happens, the arguments to &lt;code&gt;before-change-functions&lt;/code&gt; will enclose a region in which the individual changes are made, but won&amp;rsquo;t necessarily be the minimal such region, and the arguments to each successive call of &lt;code&gt;after-change-functions&lt;/code&gt; will then delimit the part of text being changed exactly. In general, we advise using either the before- or the after-change hook, but not both.</source>
          <target state="translated">Подавляющее большинство буферных изменяющихся примитивов будет вызывать &lt;code&gt;before-change-functions&lt;/code&gt; и &lt;code&gt;after-change-functions&lt;/code&gt; в симметричных парах, один раз для каждого изменения, где аргументы этих крючков точно разграничить изменение делается. Тем не менее, функции-перехватчики не должны полагаться на это всегда, потому что некоторые сложные примитивы вызывают &lt;code&gt;before-change-functions&lt;/code&gt; до изменения один раз перед внесением изменений, а затем вызывают функции &lt;code&gt;after-change-functions&lt;/code&gt; ноль или более раз, в зависимости от того, сколько отдельных изменений примитива делает. Когда это происходит, аргументы &lt;code&gt;before-change-functions&lt;/code&gt; будет заключать в себе область, в которой вносятся отдельные изменения, но не обязательно будет такой минимальной областью, и аргументы для каждого последующего вызова функций &lt;code&gt;after-change-functions&lt;/code&gt; будут затем точно ограничивать изменяемую часть текста. В общем, мы советуем использовать ловушку до или после изменения, но не оба сразу.</target>
        </trans-unit>
        <trans-unit id="01527b8d037e3db74e702be995e76aba34c55c3a" translate="yes" xml:space="preserve">
          <source>The vector of Lisp objects referenced by the byte code. These include symbols used as function names and variable names.</source>
          <target state="translated">Вектор объектов Lisp,на которые ссылается байтовый код.К ним относятся символы,используемые в качестве имен функций и имен переменных.</target>
        </trans-unit>
        <trans-unit id="c3778db41acf0d35db1dc61c9cf1b4b3b4f8a61d" translate="yes" xml:space="preserve">
          <source>The vendor name. For example, &amp;lsquo;</source>
          <target state="translated">Имя поставщика. Например, '</target>
        </trans-unit>
        <trans-unit id="3336772c213085c20a832b2612cfbefdb3b13ec1" translate="yes" xml:space="preserve">
          <source>The version number comes from the &amp;lsquo;</source>
          <target state="translated">Номер версии происходит от '</target>
        </trans-unit>
        <trans-unit id="81a17dbb44063c857219c81f3cd4198fa63eea70" translate="yes" xml:space="preserve">
          <source>The vertical scroll position is measured in units of the normal line height, which is the height of the default font. Thus, if the value is .5, that means the window contents will be scrolled up half the normal line height. If it is 3.3, that means the window contents are scrolled up somewhat over three times the normal line height.</source>
          <target state="translated">Положение вертикальной прокрутки измеряется в единицах нормальной высоты линии,которая является высотой шрифта по умолчанию.Таким образом,если значение .5,то это означает,что содержимое окна будет прокручиваться вверх на половину высоты нормальной линии.Если значение 3.3,то это означает,что содержимое окна будет прокручиваться чуть больше,чем в три раза выше нормальной высоты линии.</target>
        </trans-unit>
        <trans-unit id="bc4829014d1d53e420832706fbc8210addcc9ffd" translate="yes" xml:space="preserve">
          <source>The very first thing this function does is run the normal hook &lt;code&gt;change-major-mode-hook&lt;/code&gt; (see below).</source>
          <target state="translated">Самое первое, что делает эта функция, - это запускает обычную ловушку &lt;code&gt;change-major-mode-hook&lt;/code&gt; (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="2a386d0814fb0c47f95262bcd9a80770783517ae" translate="yes" xml:space="preserve">
          <source>The virtual memory size of the process, measured in kilobytes.</source>
          <target state="translated">Объем виртуальной памяти процесса,измеряемый в килобайтах.</target>
        </trans-unit>
        <trans-unit id="d546af21745b05bf5bc7bae48a02537d10b7c151" translate="yes" xml:space="preserve">
          <source>The visibility status of a frame is also available as a frame parameter. You can read or change it as such. See &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Management Parameters&lt;/a&gt;. The user can also iconify and deiconify frames with the window manager. This happens below the level at which Emacs can exert any control, but Emacs does provide events that you can use to keep track of such changes. See &lt;a href=&quot;misc-events#Misc-Events&quot;&gt;Misc Events&lt;/a&gt;.</source>
          <target state="translated">Статус видимости кадра также доступен как параметр кадра. Вы можете прочитать или изменить его как таковой. См. &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Параметры управления&lt;/a&gt; . Пользователь также может уменьшать и деактивировать фреймы с помощью оконного менеджера. Это происходит ниже уровня, на котором Emacs может осуществлять любое управление, но Emacs действительно предоставляет события, которые вы можете использовать для отслеживания таких изменений. См. &lt;a href=&quot;misc-events#Misc-Events&quot;&gt;Разные события&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="50e098ac168a10d2d4a1e79562ce0e334e8bd88a" translate="yes" xml:space="preserve">
          <source>The visited file name, obtained with the &lt;code&gt;buffer-file-name&lt;/code&gt; function. See &lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;Buffer File Name&lt;/a&gt;.</source>
          <target state="translated">Имя посещенного файла, полученное с помощью функции &lt;code&gt;buffer-file-name&lt;/code&gt; . См. &lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;Имя файла буфера&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f85520dd16c49b22fafbad49ad07147a119591b" translate="yes" xml:space="preserve">
          <source>The visual effect of an overlay is the same as of the corresponding text property (see &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;). However, due to a different implementation, overlays generally don&amp;rsquo;t scale well (many operations take a time that is proportional to the number of overlays in the buffer). If you need to affect the visual appearance of many portions in the buffer, we recommend using text properties.</source>
          <target state="translated">Визуальный эффект наложения такой же, как и у соответствующего свойства текста (см. &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Свойства текста&lt;/a&gt; ). Однако из-за другой реализации наложения обычно плохо масштабируются (многие операции занимают время, пропорциональное количеству наложений в буфере). Если вам нужно повлиять на внешний вид многих частей в буфере, мы рекомендуем использовать свойства текста.</target>
        </trans-unit>
        <trans-unit id="d5ca138eae9cfe76bef0e2c59914224c9bdc3031" translate="yes" xml:space="preserve">
          <source>The wait functions are designed to wait for a certain amount of time to pass or until there is input. For example, you may wish to pause in the middle of a computation to allow the user time to view the display. &lt;code&gt;sit-for&lt;/code&gt; pauses and updates the screen, and returns immediately if input comes in, while &lt;code&gt;sleep-for&lt;/code&gt; pauses without updating the screen.</source>
          <target state="translated">Функции ожидания предназначены для ожидания, пока пройдет определенное время или пока не будет ввода. Например, вы можете сделать паузу в середине вычисления, чтобы дать пользователю время для просмотра дисплея. &lt;code&gt;sit-for&lt;/code&gt; приостанавливает и обновляет экран и сразу же возвращается при поступлении ввода, в то время как &lt;code&gt;sleep-for&lt;/code&gt; приостанавливает работу без обновления экрана.</target>
        </trans-unit>
        <trans-unit id="192ef2dfd536e9e70dc893e0e89a1431107ac5ac" translate="yes" xml:space="preserve">
          <source>The way to correct this is to use an uninterned symbol instead of &lt;code&gt;max&lt;/code&gt; (see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;). The uninterned symbol can be bound and referred to just like any other symbol, but since it is created by &lt;code&gt;for&lt;/code&gt;, we know that it cannot already appear in the user&amp;rsquo;s program. Since it is not interned, there is no way the user can put it into the program later. It will never appear anywhere except where put by &lt;code&gt;for&lt;/code&gt;. Here is a definition of &lt;code&gt;for&lt;/code&gt; that works this way:</source>
          <target state="translated">Способ исправить это - использовать неинтернированный символ вместо &lt;code&gt;max&lt;/code&gt; (см. &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Создание символов&lt;/a&gt; ). Неограниченный символ может быть связан и на него можно ссылаться так же, как и на любой другой символ, но, поскольку он создан &lt;code&gt;for&lt;/code&gt; , мы знаем, что он не может уже появиться в программе пользователя. Поскольку он не интернирован, пользователь не может позже добавить его в программу. Она никогда не будет появляться в любом месте кроме случаев , когда поставлен &lt;code&gt;for&lt;/code&gt; . Вот определение &lt;code&gt;for&lt;/code&gt; , который работает следующим образом:</target>
        </trans-unit>
        <trans-unit id="66b4cae96d1e2c0bcd9a52b36cee9d786ca97469" translate="yes" xml:space="preserve">
          <source>The way to declare new customization groups is with &lt;code&gt;defgroup&lt;/code&gt;.</source>
          <target state="translated">Способ объявления новых групп настройки - с помощью &lt;code&gt;defgroup&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db0b6d7df13b1e2fdfc4c27e9f22fde31dbc569b" translate="yes" xml:space="preserve">
          <source>The way to display something in the margins is to specify it in a margin display specification in the &lt;code&gt;display&lt;/code&gt; property of some text. This is a replacing display specification, meaning that the text you put it on does not get displayed; the margin display appears, but that text does not.</source>
          <target state="translated">Чтобы отобразить что-либо на полях, нужно указать это в спецификации отображения полей в свойстве &lt;code&gt;display&lt;/code&gt; некоторого текста. Это заменяющая спецификация отображения, означающая, что текст, на который вы ее поместили, не отображается; отображается поле, а текст - нет.</target>
        </trans-unit>
        <trans-unit id="1737239af08f996045b6fcb09811eee72ac3f86e" translate="yes" xml:space="preserve">
          <source>The way to do this is to specify the faces in the text with the special text property &lt;code&gt;font-lock-face&lt;/code&gt; (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;). When Font Lock mode is enabled, this property controls the display, just like the &lt;code&gt;face&lt;/code&gt; property. When Font Lock mode is disabled, &lt;code&gt;font-lock-face&lt;/code&gt; has no effect on the display.</source>
          <target state="translated">Способ сделать это - указать лица в тексте с помощью специального свойства текста &lt;code&gt;font-lock-face&lt;/code&gt; (см. &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Специальные свойства&lt;/a&gt; ). Когда включен режим Font Lock, это свойство управляет отображением, как и свойство &lt;code&gt;face&lt;/code&gt; . Когда режим Font Lock отключен, &lt;code&gt;font-lock-face&lt;/code&gt; не влияет на дисплей.</target>
        </trans-unit>
        <trans-unit id="129aacdb8825813ce33bdb7106847a380bb1f4e6" translate="yes" xml:space="preserve">
          <source>The way to rebind a key is to change its entry in a keymap. If you change a binding in the global keymap, the change is effective in all buffers (though it has no direct effect in buffers that shadow the global binding with a local one). If you change the current buffer&amp;rsquo;s local map, that usually affects all buffers using the same major mode. The &lt;code&gt;global-set-key&lt;/code&gt; and &lt;code&gt;local-set-key&lt;/code&gt; functions are convenient interfaces for these operations (see &lt;a href=&quot;key-binding-commands#Key-Binding-Commands&quot;&gt;Key Binding Commands&lt;/a&gt;). You can also use &lt;code&gt;define-key&lt;/code&gt;, a more general function; then you must explicitly specify the map to change.</source>
          <target state="translated">Способ перепривязки клавиши - изменить ее запись в раскладке клавиатуры. Если вы измените привязку в глобальной раскладке клавиш, изменение будет действовать во всех буферах (хотя оно не имеет прямого эффекта в буферах, которые затеняют глобальную привязку локальной). Если вы измените локальную карту текущего буфера, это обычно влияет на все буферы, использующие один и тот же основной режим. Функции &lt;code&gt;global-set-key&lt;/code&gt; и &lt;code&gt;local-set-key&lt;/code&gt; являются удобными интерфейсами для этих операций (см. &lt;a href=&quot;key-binding-commands#Key-Binding-Commands&quot;&gt;Команды привязки клавиш&lt;/a&gt; ). Вы также можете использовать &lt;code&gt;define-key&lt;/code&gt; , более общую функцию; тогда вы должны явно указать карту, которую нужно изменить.</target>
        </trans-unit>
        <trans-unit id="fe05ab0a232a34266b1e0d8cdfc6c737d45d841d" translate="yes" xml:space="preserve">
          <source>The way you control explicit selective display is by replacing a newline (control-j) with a carriage return (control-m). The text that was formerly a line following that newline is now hidden. Strictly speaking, it is temporarily no longer a line at all, since only newlines can separate lines; it is now part of the previous line.</source>
          <target state="translated">Способом управления явным выборочным отображением является замена новой строки (controll-j)на возврат каретки (control-m).Текст,который раньше был строкой после этой новой строки,теперь скрыт.Строго говоря,он временно вообще не является строкой,так как только новые строки могут разделять строки;теперь он является частью предыдущей строки.</target>
        </trans-unit>
        <trans-unit id="892bdef3fcc8380be601ff3b96fc9536e8469a69" translate="yes" xml:space="preserve">
          <source>The weakness of a hash table specifies whether the presence of a key or value in the hash table preserves it from garbage collection.</source>
          <target state="translated">Слабость хэш-таблицы определяет,сохраняет ли наличие ключа или значения в хэш-таблице от уборки мусора.</target>
        </trans-unit>
        <trans-unit id="d6cc12223fc5458a08353a47288b23382be4b087" translate="yes" xml:space="preserve">
          <source>The widgets can specify predicates to say whether an inline value matches the widget with the &lt;code&gt;:match-inline&lt;/code&gt; element.</source>
          <target state="translated">Виджеты могут указывать предикаты, чтобы сказать, соответствует ли встроенное значение виджету с элементом &lt;code&gt;:match-inline&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed69a293e691b205905c7d5e0a4347f1d87f0d5a" translate="yes" xml:space="preserve">
          <source>The width (in pixels) of lines drawn, and outlines around solid shapes.</source>
          <target state="translated">Ширина (в пикселях)нарисованных линий и очертаний вокруг сплошных форм.</target>
        </trans-unit>
        <trans-unit id="4a1892ba0d0e173378f79f3ed678b5d7efba8a0a" translate="yes" xml:space="preserve">
          <source>The width (thickness) reserved for the bottom divider (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;) of any window on the frame, in pixels. A value of zero means to not draw bottom dividers.</source>
          <target state="translated">Ширина (толщина), зарезервированная для нижнего разделителя (см. Разделители &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;окон&lt;/a&gt; ) любого окна в кадре, в пикселях. Нулевое значение означает, что нижние разделители не отображаются.</target>
        </trans-unit>
        <trans-unit id="558fa961e0191929dec1ba6cbf01d57c94178289" translate="yes" xml:space="preserve">
          <source>The width (thickness) reserved for the right divider (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;) of any window on the frame, in pixels. A value of zero means to not draw right dividers.</source>
          <target state="translated">Ширина (толщина), зарезервированная для правого разделителя (см. Разделители &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;окон&lt;/a&gt; ) любого окна в кадре, в пикселях. Нулевое значение означает, что правые разделители не отображаются.</target>
        </trans-unit>
        <trans-unit id="90bb0e3cf3541f9772a18bad6f13e8fc7599b3c5" translate="yes" xml:space="preserve">
          <source>The width in pixels of the frame&amp;rsquo;s internal border (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">Ширина в пикселях внутренней границы &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;кадра&lt;/a&gt; (см. Геометрия кадра ).</target>
        </trans-unit>
        <trans-unit id="c0695b58e941a86963af8bdaa7c318bb86722ff6" translate="yes" xml:space="preserve">
          <source>The width in pixels of the frame&amp;rsquo;s outer border (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">Ширина в пикселях внешней границы &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;кадра&lt;/a&gt; (см. Геометрия кадра ).</target>
        </trans-unit>
        <trans-unit id="1ad9450ad829c4af084ca6d6f4dff95662763c56" translate="yes" xml:space="preserve">
          <source>The width of the internal border of &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">Ширина внутренней границы &lt;var&gt;frame&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="ae93b55fd23229e2027f0ffca79696be32b880e1" translate="yes" xml:space="preserve">
          <source>The width of the outer border of &lt;var&gt;frame&lt;/var&gt;. The value is meaningful for non-GTK+ X builds only.</source>
          <target state="translated">Ширина внешней границы &lt;var&gt;frame&lt;/var&gt; . Значение имеет смысл только для сборок, не относящихся к GTK + X.</target>
        </trans-unit>
        <trans-unit id="007bb5c61439f12d2ef2a7267ef1975e048fd3b0" translate="yes" xml:space="preserve">
          <source>The width of this window&amp;rsquo;s vertical scroll bar and the height of this window&amp;rsquo;s horizontal scroll bar, in pixels.</source>
          <target state="translated">Ширина вертикальной полосы прокрутки этого окна и высота горизонтальной полосы прокрутки этого окна в пикселях.</target>
        </trans-unit>
        <trans-unit id="e829b9ac7b5a75b53a82013fdf3f85cf151e76f0" translate="yes" xml:space="preserve">
          <source>The width of vertical scroll bars, in pixels, or &lt;code&gt;nil&lt;/code&gt; meaning to use the default width.</source>
          <target state="translated">Ширина вертикальных полос прокрутки в пикселях или &lt;code&gt;nil&lt;/code&gt; ,что означает использование ширины по умолчанию.</target>
        </trans-unit>
        <trans-unit id="e03654807eef2aa62c363739ba25e938310fc1e8" translate="yes" xml:space="preserve">
          <source>The width, in pixels, of the font&amp;rsquo;s space character.</source>
          <target state="translated">Ширина в пикселях символа пробела шрифта.</target>
        </trans-unit>
        <trans-unit id="1dbdff9d4f8aba85601189bb83369c69cf6d80bf" translate="yes" xml:space="preserve">
          <source>The widths of the left and right margins in this window. A value of zero means no margin.</source>
          <target state="translated">Ширина левого и правого полей в этом окне.Значение нуля означает отсутствие поля.</target>
        </trans-unit>
        <trans-unit id="667e71608920d91a6815b335a2f78b9d18827f03" translate="yes" xml:space="preserve">
          <source>The window &lt;var&gt;window&lt;/var&gt; is used for obtaining parameters such as the width, the horizontal scrolling, and the display table. But &lt;code&gt;vertical-motion&lt;/code&gt; always operates on the current buffer, even if &lt;var&gt;window&lt;/var&gt; currently displays some other buffer.</source>
          <target state="translated">Окно &lt;var&gt;window&lt;/var&gt; используется для получения таких параметров, как ширина, горизонтальная прокрутка и таблица отображения. Но &lt;code&gt;vertical-motion&lt;/code&gt; всегда работает с текущим буфером, даже если &lt;var&gt;window&lt;/var&gt; настоящее время отображает какой-то другой буфер.</target>
        </trans-unit>
        <trans-unit id="d2decde8be6ffd87e4a5ac1b11957bbacc1f4066" translate="yes" xml:space="preserve">
          <source>The window &lt;var&gt;window&lt;/var&gt; serves only to specify which display table to use. &lt;code&gt;compute-motion&lt;/code&gt; always operates on the current buffer, regardless of what buffer is displayed in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">Окно &lt;var&gt;window&lt;/var&gt; служит только для указания, какую таблицу отображения использовать. &lt;code&gt;compute-motion&lt;/code&gt; всегда работает с текущим буфером, независимо от того, какой буфер отображается в &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="4f4813f65c74fdebbc7e8be16faa5ab31e765ada" translate="yes" xml:space="preserve">
          <source>The window configuration is not restored on error or quit, but the outside selected window &lt;em&gt;is&lt;/em&gt; reselected even on error or quit in case a &lt;code&gt;save-excursion&lt;/code&gt; is active. If the value of &lt;code&gt;edebug-save-windows&lt;/code&gt; is a list, only the listed windows are saved and restored.</source>
          <target state="translated">Конфигурация окна не восстанавливается по ошибке или бросить курить, но за пределами выбранного окна &lt;em&gt;является&lt;/em&gt; перевыбранным даже в случае ошибки или выхода в случае а &lt;code&gt;save-excursion&lt;/code&gt; активна. Если значение &lt;code&gt;edebug-save-windows&lt;/code&gt; представляет собой список, только перечисленные окна сохраняются и восстанавливаются.</target>
        </trans-unit>
        <trans-unit id="b5e36cb2e5250fc2fc73614846caeb741168fe8f" translate="yes" xml:space="preserve">
          <source>The window in which the click occurred.</source>
          <target state="translated">Окно,в котором произошло нажатие.</target>
        </trans-unit>
        <trans-unit id="43ba63357161599c3c6d640f071701fc41817fb8" translate="yes" xml:space="preserve">
          <source>The window point is established when a window is first created; it is initialized from the buffer&amp;rsquo;s point, or from the window point of another window opened on the buffer if such a window exists.</source>
          <target state="translated">Точка окна устанавливается при первом создании окна; он инициализируется из точки буфера или из точки другого окна, открытого в буфере, если такое окно существует.</target>
        </trans-unit>
        <trans-unit id="21cd1704c6bc80f89122014e2efafdcc999cb781" translate="yes" xml:space="preserve">
          <source>The window specified by any &lt;code&gt;previous-window&lt;/code&gt;&lt;var&gt;alist&lt;/var&gt; entry, provided it is not the selected window.</source>
          <target state="translated">Окно, заданное любой записью в &lt;var&gt;alist&lt;/var&gt; &lt;code&gt;previous-window&lt;/code&gt; , при условии, что это не выбранное окно.</target>
        </trans-unit>
        <trans-unit id="7c5d6bab6152c63ed0eedf9b7490dea6279bde8a" translate="yes" xml:space="preserve">
          <source>The window start and horizontal scrolling of the source code buffer are not restored, however, so that the display remains coherent within Edebug.</source>
          <target state="translated">Начало окна и горизонтальная прокрутка буфера исходного кода,однако,не восстанавливаются,так что отображение остается когерентным внутри Edebug.</target>
        </trans-unit>
        <trans-unit id="8a0992f4eeaaa8c898270f6ac1c10aae2c8bdf2d" translate="yes" xml:space="preserve">
          <source>The window whose scroll bar was clicked on.</source>
          <target state="translated">Окно,полоса прокрутки которого была нажата.</target>
        </trans-unit>
        <trans-unit id="176c003d1370db2fba484fc39d7e42b225a06af7" translate="yes" xml:space="preserve">
          <source>The window&amp;rsquo;s display table, or &lt;code&gt;nil&lt;/code&gt; if none is specified for it.</source>
          <target state="translated">Таблица отображения окна или &lt;code&gt;nil&lt;/code&gt; , если для нее ничего не указано.</target>
        </trans-unit>
        <trans-unit id="d89efc64e6b638f0411a533ab926dc8cf4b43c89" translate="yes" xml:space="preserve">
          <source>The window-relative vertical position of the line containing &lt;code&gt;window_end_pos&lt;/code&gt;.</source>
          <target state="translated">Вертикальное положение строки, содержащей &lt;code&gt;window_end_pos&lt;/code&gt; , относительно окна .</target>
        </trans-unit>
        <trans-unit id="ddc0c25dcfde1cf013980df2ede9f5f487a12559" translate="yes" xml:space="preserve">
          <source>The window-relative vertical position of the line showing the cursor as of the last redisplay that finished.</source>
          <target state="translated">Окно-относительное вертикальное положение линии,показывающее курсор на момент последнего повторного отображения,которое было завершено.</target>
        </trans-unit>
        <trans-unit id="19d78d69ed62dbe0c081baecf64bf39c74beb8b5" translate="yes" xml:space="preserve">
          <source>The windows in each frame are organized into a &lt;em&gt;window tree&lt;/em&gt;. See &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;. The leaf nodes of each window tree are live windows&amp;mdash;the ones actually displaying buffers. The internal nodes of the window tree are &lt;em&gt;internal windows&lt;/em&gt;, which are not live.</source>
          <target state="translated">Окна в каждом фрейме организованы в &lt;em&gt;дерево окон&lt;/em&gt; . См. &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Окна и Фреймы&lt;/a&gt; . Листовые узлы каждого дерева окон - это живые окна, фактически отображающие буферы. Внутренние узлы дерева &lt;em&gt;окон&lt;/em&gt; - это &lt;em&gt;внутренние окна&lt;/em&gt; , которые не являются активными.</target>
        </trans-unit>
        <trans-unit id="7ba5625ecf4e266603282ffe15318affa3471aef" translate="yes" xml:space="preserve">
          <source>The word &lt;em&gt;process&lt;/em&gt; usually means a running program. Emacs itself runs in a process of this sort. However, in Emacs Lisp, a process is a Lisp object that designates a subprocess created by the Emacs process. Programs such as shells, GDB, ftp, and compilers, running in subprocesses of Emacs, extend the capabilities of Emacs. An Emacs subprocess takes textual input from Emacs and returns textual output to Emacs for further manipulation. Emacs can also send signals to the subprocess.</source>
          <target state="translated">Слово &amp;laquo; &lt;em&gt;процесс&amp;raquo;&lt;/em&gt; обычно означает запущенную программу. Сам Emacs выполняет подобный процесс. Однако в Emacs Lisp процесс - это объект Lisp, который обозначает подпроцесс, созданный процессом Emacs. Такие программы, как оболочки, GDB, ftp и компиляторы, работающие в подпроцессах Emacs, расширяют возможности Emacs. Подпроцесс Emacs принимает текстовый ввод от Emacs и возвращает текстовый вывод в Emacs для дальнейшей обработки. Emacs также может посылать сигналы подпроцессу.</target>
        </trans-unit>
        <trans-unit id="5e33feb1b485d5b35c342b63e6368aaa73a16a60" translate="yes" xml:space="preserve">
          <source>The year, an integer typically greater than 1900.</source>
          <target state="translated">Год,целое число,как правило,больше 1900.</target>
        </trans-unit>
        <trans-unit id="5d422c4871acb4daa515b96859ddb6313519114b" translate="yes" xml:space="preserve">
          <source>Then find the actual matching close parenthesis by typing</source>
          <target state="translated">Затем найдите фактическое совпадение близких скобок,набрав</target>
        </trans-unit>
        <trans-unit id="25258eb9508f9f8c3143dbf1060b1f5a03a4190b" translate="yes" xml:space="preserve">
          <source>Then this function returns a list of directories which contains first the directory in which &lt;var&gt;image&lt;/var&gt; was found, followed by the value of &lt;code&gt;load-path&lt;/code&gt;. If &lt;var&gt;path&lt;/var&gt; is given, it is used instead of &lt;code&gt;load-path&lt;/code&gt;.</source>
          <target state="translated">Затем эта функция возвращает список каталогов, который сначала содержит каталог, в котором было найдено &lt;var&gt;image&lt;/var&gt; , а затем значение &lt;code&gt;load-path&lt;/code&gt; . Если указан &lt;var&gt;path&lt;/var&gt; , он используется вместо &lt;code&gt;load-path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="894cb389eb05f2c7493a2ac1931a6e04315bf08c" translate="yes" xml:space="preserve">
          <source>Then, if &lt;var&gt;condition&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; when tested, the &lt;code&gt;cond&lt;/code&gt; form returns the value of &lt;var&gt;condition&lt;/var&gt;.</source>
          <target state="translated">Затем, если при проверке &lt;var&gt;condition&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , форма &lt;code&gt;cond&lt;/code&gt; возвращает значение &lt;var&gt;condition&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="8caa84a6ee4a8ad260f9327c1877dc18fce75afb" translate="yes" xml:space="preserve">
          <source>Then, the font specifications for all but Chinese GB2312 characters have &amp;lsquo;</source>
          <target state="translated">Затем в спецификациях шрифтов для всех символов, кроме китайских GB2312, указано &amp;laquo;</target>
        </trans-unit>
        <trans-unit id="17ee68a49f1c9ee78f81e68f9f744bfe141c4a21" translate="yes" xml:space="preserve">
          <source>Then, whenever &lt;code&gt;my-mode-map&lt;/code&gt; is active, if the user types</source>
          <target state="translated">Затем, когда активна &lt;code&gt;my-mode-map&lt;/code&gt; , если пользователь вводит</target>
        </trans-unit>
        <trans-unit id="5b544e6d0a81a1f1983dd0e6865daf009408806b" translate="yes" xml:space="preserve">
          <source>There are a couple of ways in which a variable could be modified (or at least appear to be modified) without triggering a watchpoint.</source>
          <target state="translated">Существует пара способов,при помощи которых переменная может быть изменена (или,по крайней мере,казаться измененной)без срабатывания точки наблюдения.</target>
        </trans-unit>
        <trans-unit id="4810fd34e613503da7a7271cade94d5170cbacb6" translate="yes" xml:space="preserve">
          <source>There are a number of commands devoted to the editing and recall of previous commands. The commands &lt;code&gt;repeat-complex-command&lt;/code&gt;, and &lt;code&gt;list-command-history&lt;/code&gt; are described in the user manual (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repetition.html#Repetition&quot;&gt;Repetition&lt;/a&gt; in</source>
          <target state="translated">Существует ряд команд, предназначенных для редактирования и вызова предыдущих команд. Команды &lt;code&gt;repeat-complex-command&lt;/code&gt; и &lt;code&gt;list-command-history&lt;/code&gt; описаны в руководстве пользователя (см. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repetition.html#Repetition&quot;&gt;Повторение&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="fcd6f54c3b894dd3a35a446b23aba1e8bcac6bfe" translate="yes" xml:space="preserve">
          <source>There are a number of commands devoted to the editing and recall of previous commands. The commands &lt;code&gt;repeat-complex-command&lt;/code&gt;, and &lt;code&gt;list-command-history&lt;/code&gt; are described in the user manual (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Repetition.html#Repetition&quot;&gt;Repetition&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b011f7007d94c5c72274e3c8d4d061190ed0bc1" translate="yes" xml:space="preserve">
          <source>There are also some bool-vector set operation functions, described below:</source>
          <target state="translated">Существуют также некоторые функции работы с набором векторов bool,описанные ниже:</target>
        </trans-unit>
        <trans-unit id="8bd13201286cd465fcc15dcd843023e25d6a951c" translate="yes" xml:space="preserve">
          <source>There are conventions for writing minor modes just as there are for major modes (see &lt;a href=&quot;major-modes#Major-Modes&quot;&gt;Major Modes&lt;/a&gt;). These conventions are described below. The easiest way to follow them is to use the macro &lt;code&gt;define-minor-mode&lt;/code&gt;. See &lt;a href=&quot;defining-minor-modes#Defining-Minor-Modes&quot;&gt;Defining Minor Modes&lt;/a&gt;.</source>
          <target state="translated">Существуют соглашения для написания второстепенных режимов так же, как и для основных режимов (см. &lt;a href=&quot;major-modes#Major-Modes&quot;&gt;Основные режимы&lt;/a&gt; ). Эти условные обозначения описаны ниже. Самый простой способ следовать им - использовать макрос &lt;code&gt;define-minor-mode&lt;/code&gt; . См. &lt;a href=&quot;defining-minor-modes#Defining-Minor-Modes&quot;&gt;Определение второстепенных режимов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6f5a57538b1c42c6bebc04336094d61e86ca1b21" translate="yes" xml:space="preserve">
          <source>There are currently three forms of Lisp timestamps, each of which represents a number of seconds:</source>
          <target state="translated">В настоящее время существует три формы временных меток Lisp,каждая из которых представляет собой количество секунд:</target>
        </trans-unit>
        <trans-unit id="56dfc4fc368a465162c56454477eaa5687676ab1" translate="yes" xml:space="preserve">
          <source>There are four functions to convert floating-point numbers to integers; they differ in how they round. All accept an argument &lt;var&gt;number&lt;/var&gt; and an optional argument &lt;var&gt;divisor&lt;/var&gt;. Both arguments may be integers or floating-point numbers. &lt;var&gt;divisor&lt;/var&gt; may also be &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;divisor&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, these functions convert &lt;var&gt;number&lt;/var&gt; to an integer, or return it unchanged if it already is an integer. If &lt;var&gt;divisor&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, they divide &lt;var&gt;number&lt;/var&gt; by &lt;var&gt;divisor&lt;/var&gt; and convert the result to an integer. If &lt;var&gt;divisor&lt;/var&gt; is zero (whether integer or floating point), Emacs signals an &lt;code&gt;arith-error&lt;/code&gt; error.</source>
          <target state="translated">Есть четыре функции для преобразования чисел с плавающей запятой в целые числа; они отличаются тем, как они округляются. Все принять аргумент &lt;var&gt;number&lt;/var&gt; и необязательный аргумент &lt;var&gt;divisor&lt;/var&gt; . Оба аргумента могут быть целыми числами или числами с плавающей запятой. &lt;var&gt;divisor&lt;/var&gt; также может быть &lt;code&gt;nil&lt;/code&gt; . Если &lt;var&gt;divisor&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; или опущен, эти функции преобразуют &lt;var&gt;number&lt;/var&gt; в целое число или возвращают его без изменений, если оно уже является целым числом. Если &lt;var&gt;divisor&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , они делят &lt;var&gt;number&lt;/var&gt; на &lt;var&gt;divisor&lt;/var&gt; и преобразуют результат в целое число. Если &lt;var&gt;divisor&lt;/var&gt; равен нулю (целое число или число с плавающей запятой), Emacs сигнализирует &lt;code&gt;arith-error&lt;/code&gt; ошибке арифметической ошибки.</target>
        </trans-unit>
        <trans-unit id="d5eb98c61d7180e170b72be2864914198310f83f" translate="yes" xml:space="preserve">
          <source>There are four ways to specify text properties for text in the mode line:</source>
          <target state="translated">Существует четыре способа задания свойств текста в строке режима:</target>
        </trans-unit>
        <trans-unit id="a9440ba34e5f80f815e1dc28e60b578e2e89b21b" translate="yes" xml:space="preserve">
          <source>There are many other, more specialized, maps than these; in particular those associated with major and minor modes. The minibuffer uses several keymaps (see &lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;Completion Commands&lt;/a&gt;). For more details on keymaps, see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;.</source>
          <target state="translated">Есть много других, более специализированных карт, чем эти; в частности, связанные с основными и второстепенными модами. Минибуфер использует несколько раскладок (см. &lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;Команды завершения&lt;/a&gt; ). Для получения дополнительной информации о &lt;a href=&quot;keymaps#Keymaps&quot;&gt;раскладках&lt;/a&gt; см. Раскладки клавиатуры .</target>
        </trans-unit>
        <trans-unit id="070b832c129cab1c873dac5bab08fc0bc798e588" translate="yes" xml:space="preserve">
          <source>There are many separate minibuffer history lists, used for different kinds of inputs. It&amp;rsquo;s the Lisp programmer&amp;rsquo;s job to specify the right history list for each use of the minibuffer.</source>
          <target state="translated">Есть много отдельных списков истории минибуфера, используемых для различных типов входных данных. Задача программиста на Lisp - указать правильный список истории для каждого использования минибуфера.</target>
        </trans-unit>
        <trans-unit id="c0f9785866adf2557a41519a5ff551bf39a1bb80" translate="yes" xml:space="preserve">
          <source>There are no</source>
          <target state="translated">Нет</target>
        </trans-unit>
        <trans-unit id="efbe79c18c70e6b3a0b9604c044c9cef2637dd78" translate="yes" xml:space="preserve">
          <source>There are other properties defined for the regions of text in a button, but these are not generally interesting for typical uses.</source>
          <target state="translated">Существуют и другие свойства,определяемые для областей текста в кнопке,но они,как правило,не интересны для типичного использования.</target>
        </trans-unit>
        <trans-unit id="65617bc57347ff83b82a4dafdbca7965d572ddf3" translate="yes" xml:space="preserve">
          <source>There are other special conventions for the text in documentation strings&amp;mdash;for instance, you can refer to functions, variables, and sections of this manual. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Documentation-Tips&quot;&gt;Documentation Tips&lt;/a&gt;, for details.</source>
          <target state="translated">Существуют и другие специальные соглашения для текста в строках документации - например, вы можете ссылаться на функции, переменные и разделы этого руководства. См. Подробности в разделе &amp;laquo; &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Documentation-Tips&quot;&gt;Советы&lt;/a&gt; по документации&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="bc70e5c922e2e49cfaf793fd3312e885eaf9157f" translate="yes" xml:space="preserve">
          <source>There are several alternatives you can use for &lt;var&gt;link-data&lt;/var&gt;:</source>
          <target state="translated">Есть несколько альтернатив, которые вы можете использовать для &lt;var&gt;link-data&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="347f46b30b75f43e3e329a51b4f9f141a980e45a" translate="yes" xml:space="preserve">
          <source>There are several functions that take an existing completion table and return a modified version. &lt;code&gt;completion-table-case-fold&lt;/code&gt; returns a case-insensitive table. &lt;code&gt;completion-table-in-turn&lt;/code&gt; and &lt;code&gt;completion-table-merge&lt;/code&gt; combine multiple input tables in different ways. &lt;code&gt;completion-table-subvert&lt;/code&gt; alters a table to use a different initial prefix. &lt;code&gt;completion-table-with-quoting&lt;/code&gt; returns a table suitable for operating on quoted text. &lt;code&gt;completion-table-with-predicate&lt;/code&gt; filters a table with a predicate function. &lt;code&gt;completion-table-with-terminator&lt;/code&gt; adds a terminating string.</source>
          <target state="translated">Есть несколько функций, которые берут существующую таблицу завершения и возвращают измененную версию. &lt;code&gt;completion-table-case-fold&lt;/code&gt; возвращает таблицу без учета регистра. &lt;code&gt;completion-table-in-turn&lt;/code&gt; и &lt;code&gt;completion-table-merge&lt;/code&gt; объединяют несколько входных таблиц по-разному. &lt;code&gt;completion-table-subvert&lt;/code&gt; изменяет таблицу, чтобы использовать другой начальный префикс. &lt;code&gt;completion-table-with-quoting&lt;/code&gt; возвращает таблицу, подходящую для работы с цитируемым текстом. &lt;code&gt;completion-table-with-predicate&lt;/code&gt; фильтрует таблицу с функцией предиката. &lt;code&gt;completion-table-with-terminator&lt;/code&gt; добавляет завершающую строку.</target>
        </trans-unit>
        <trans-unit id="c3c283f44ca32e55d1aeaa6c8ba479ebaa377c9c" translate="yes" xml:space="preserve">
          <source>There are several other variable name conventions; here is a complete list:</source>
          <target state="translated">Существует несколько других соглашений об именах переменных;вот полный список:</target>
        </trans-unit>
        <trans-unit id="4bb1239b76f76c5a9f69f8e0a5f058db3c2c4c76" translate="yes" xml:space="preserve">
          <source>There are several variables that control how Font Lock mode highlights text. But major modes should not set any of these variables directly. Instead, they should set &lt;code&gt;font-lock-defaults&lt;/code&gt; as a buffer-local variable. The value assigned to this variable is used, if and when Font Lock mode is enabled, to set all the other variables.</source>
          <target state="translated">Есть несколько переменных, которые определяют, как режим Font Lock выделяет текст. Но основные режимы не должны устанавливать какие-либо из этих переменных напрямую. Вместо этого они должны установить &lt;code&gt;font-lock-defaults&lt;/code&gt; как локальную переменную буфера. Значение, присвоенное этой переменной, используется, если и когда включен режим Font Lock, для установки всех других переменных.</target>
        </trans-unit>
        <trans-unit id="3520ae182a02058f69edf04f15fb6488c0fe5433" translate="yes" xml:space="preserve">
          <source>There are several ways to explicitly specify a larger line height, either by specifying an absolute height for the display line, or by specifying vertical space. However, no matter what you specify, the actual line height can never be less than the default.</source>
          <target state="translated">Существует несколько способов явного указания большей высоты строки,либо указывая абсолютную высоту для строки отображения,либо указывая вертикальное пространство.Однако,независимо от того,что вы укажете,фактическая высота строки никогда не может быть меньше,чем по умолчанию.</target>
        </trans-unit>
        <trans-unit id="81af9e15a9ba4c2165debde033a9a2d4638a848d" translate="yes" xml:space="preserve">
          <source>There are several ways to find and investigate problems in an Emacs Lisp program.</source>
          <target state="translated">Есть несколько способов найти и исследовать проблемы в программе Emacs Lisp.</target>
        </trans-unit>
        <trans-unit id="d3bcae2f3fa55ef2219d610a3700030045063687" translate="yes" xml:space="preserve">
          <source>There are situations in Lisp where you need to refer to the symbol itself rather than the value of that symbol. One such case is when temporarily overriding the value of a variable, which in Lisp is done with &lt;code&gt;let&lt;/code&gt;. In C sources, this is done by defining a corresponding, constant symbol, and using &lt;code&gt;specbind&lt;/code&gt;. By convention, &lt;code&gt;Qmy_lisp_variable&lt;/code&gt; corresponds to &lt;code&gt;Vmy_lisp_variable&lt;/code&gt;; to define it, use the &lt;code&gt;DEFSYM&lt;/code&gt; macro. i.e.</source>
          <target state="translated">В Лиспе бывают ситуации, когда вам нужно ссылаться на сам символ, а не на значение этого символа. Один из таких случаев - временное переопределение значения переменной, которое в Лиспе выполняется с помощью &lt;code&gt;let&lt;/code&gt; . В источниках C это делается путем определения соответствующего постоянного символа и использования &lt;code&gt;specbind&lt;/code&gt; . По соглашению &lt;code&gt;Qmy_lisp_variable&lt;/code&gt; соответствует &lt;code&gt;Vmy_lisp_variable&lt;/code&gt; ; чтобы определить его, используйте макрос &lt;code&gt;DEFSYM&lt;/code&gt; . т.е.</target>
        </trans-unit>
        <trans-unit id="e4e5b0d0a58dbcdc60ba12438edd47d4ac5481c8" translate="yes" xml:space="preserve">
          <source>There are some file types where it is not appropriate to scan the file contents for a mode specifier. For example, a tar archive may happen to contain, near the end of the file, a member file that has a local variables section specifying a mode for that particular file. This should not be applied to the containing tar file. Similarly, a tiff image file might just happen to contain a first line that seems to match the &amp;lsquo;</source>
          <target state="translated">Существуют некоторые типы файлов, в которых нецелесообразно сканировать содержимое файла на предмет определения режима. Например, tar-архив может содержать ближе к концу файла файл-член, в котором есть секция локальных переменных, определяющая режим для этого конкретного файла. Это не должно применяться к содержащему tar файлу. Точно так же файл изображения tiff может просто содержать первую строку, которая, кажется, соответствует '</target>
        </trans-unit>
        <trans-unit id="6ef12d2e37d1f84f04c09af5a59fb08332be34fe" translate="yes" xml:space="preserve">
          <source>There are some function definitions that &amp;lsquo;</source>
          <target state="translated">Есть некоторые определения функций, которые '</target>
        </trans-unit>
        <trans-unit id="b1fc61b0494cd0a88f92c4b058e0e7bfd5a21e24" translate="yes" xml:space="preserve">
          <source>There are special functions for producing a human-readable textual description of a character for the sake of messages. See &lt;a href=&quot;describing-characters#Describing-Characters&quot;&gt;Describing Characters&lt;/a&gt;.</source>
          <target state="translated">Существуют специальные функции для создания удобочитаемого текстового описания символа для сообщений. См. &lt;a href=&quot;describing-characters#Describing-Characters&quot;&gt;Описание персонажей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e43a50b1dd052eabdd8e042e065f2a2ed9e7998" translate="yes" xml:space="preserve">
          <source>There are three kinds of basic values:</source>
          <target state="translated">Есть три вида основных ценностей:</target>
        </trans-unit>
        <trans-unit id="b0735adb37bfc41b867b231242a40734a3b00756" translate="yes" xml:space="preserve">
          <source>There are three possibilities for the argument &lt;var&gt;arg-descriptor&lt;/var&gt;:</source>
          <target state="translated">Есть три возможности для &lt;var&gt;arg-descriptor&lt;/var&gt; аргумента :</target>
        </trans-unit>
        <trans-unit id="4623fb4685bbf4280a4e141ad3eab869c9975673" translate="yes" xml:space="preserve">
          <source>There are three primitives that create a new subprocess in which to run a program. One of them, &lt;code&gt;make-process&lt;/code&gt;, creates an asynchronous process and returns a process object (see &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;Asynchronous Processes&lt;/a&gt;). The other two, &lt;code&gt;call-process&lt;/code&gt; and &lt;code&gt;call-process-region&lt;/code&gt;, create a synchronous process and do not return a process object (see &lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;Synchronous Processes&lt;/a&gt;). There are various higher-level functions that make use of these primitives to run particular types of process.</source>
          <target state="translated">Есть три примитива, которые создают новый подпроцесс для запуска программы. Один из них, &lt;code&gt;make-process&lt;/code&gt; , создает асинхронный процесс и возвращает объект процесса (см. &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;Асинхронные процессы&lt;/a&gt; ). Два других, &lt;code&gt;call-process&lt;/code&gt; и &lt;code&gt;call-process-region&lt;/code&gt; , создают синхронный процесс и не возвращают объект процесса (см. &amp;laquo; &lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;Синхронные процессы&amp;raquo;&lt;/a&gt; ). Существуют различные высокоуровневые функции, которые используют эти примитивы для запуска определенных типов процессов.</target>
        </trans-unit>
        <trans-unit id="b6ce9698a02eeafb78037fc69ac4b447502a2398" translate="yes" xml:space="preserve">
          <source>There are three ways to do rehighlighting of multiline constructs:</source>
          <target state="translated">Есть три способа переосмыслить многострочные конструкции:</target>
        </trans-unit>
        <trans-unit id="b5ae132907f4eaeb3b141a67fe192bab8554dd75" translate="yes" xml:space="preserve">
          <source>There are three ways to ensure correct identification of multiline constructs:</source>
          <target state="translated">Существует три способа обеспечить правильную идентификацию многострочных конструкций:</target>
        </trans-unit>
        <trans-unit id="02b99159f172f34b42581153a35c9d9f6509e368" translate="yes" xml:space="preserve">
          <source>There are two classes of terminals: &lt;em&gt;text terminals&lt;/em&gt; and &lt;em&gt;graphical terminals&lt;/em&gt;. Text terminals are non-graphics-capable displays, including &lt;code&gt;xterm&lt;/code&gt; and other terminal emulators. On a text terminal, each Emacs frame occupies the terminal&amp;rsquo;s entire screen; although you can create additional frames and switch between them, the terminal only shows one frame at a time. Graphical terminals, on the other hand, are managed by graphical display systems such as the X Window System, which allow Emacs to show multiple frames simultaneously on the same display.</source>
          <target state="translated">There are two classes of terminals: &lt;em&gt;text terminals&lt;/em&gt; and &lt;em&gt;graphical terminals&lt;/em&gt;. Text terminals are non-graphics-capable displays, including &lt;code&gt;xterm&lt;/code&gt; and other terminal emulators. On a text terminal, each Emacs frame occupies the terminal&amp;rsquo;s entire screen; although you can create additional frames and switch between them, the terminal only shows one frame at a time. Graphical terminals, on the other hand, are managed by graphical display systems such as the X Window System, which allow Emacs to show multiple frames simultaneously on the same display.</target>
        </trans-unit>
        <trans-unit id="d56673e36ac18f4a7201d660191225c3ed023071" translate="yes" xml:space="preserve">
          <source>There are two convenience functions for defining tool bar items, as follows.</source>
          <target state="translated">Для определения элементов панели инструментов предусмотрены две удобные функции.</target>
        </trans-unit>
        <trans-unit id="6713d06d362550d2fbd6bf74a5f0fde6d2bcd0fb" translate="yes" xml:space="preserve">
          <source>There are two different methods for specifying directory local variables: by putting them in a special file, or by defining a &lt;em&gt;project class&lt;/em&gt; for that directory.</source>
          <target state="translated">There are two different methods for specifying directory local variables: by putting them in a special file, or by defining a &lt;em&gt;project class&lt;/em&gt; for that directory.</target>
        </trans-unit>
        <trans-unit id="7518b8878262b7af1f08215d0d225f13a54d4a54" translate="yes" xml:space="preserve">
          <source>There are two general categories of types in Emacs Lisp: those having to do with Lisp programming, and those having to do with editing. The former exist in many Lisp implementations, in one form or another. The latter are unique to Emacs Lisp.</source>
          <target state="translated">В Emacs Lisp есть две общие категории типов:те,которые имеют отношение к программированию на Lisp,и те,которые имеют отношение к редактированию.Первые существуют во многих реализациях Lisp,в том или ином виде.Вторая уникальна для Emacs Lisp.</target>
        </trans-unit>
        <trans-unit id="7780ab4bb2fd4b095c1c281e2009b2a706663d9a" translate="yes" xml:space="preserve">
          <source>There are two kinds of input you can get from the keyboard: ordinary keys, and function keys. Ordinary keys correspond to (possibly modified) characters; the events they generate are represented in Lisp as characters. The event type of a &lt;em&gt;character event&lt;/em&gt; is the character itself (an integer), which might have some modifier bits set; see &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;.</source>
          <target state="translated">There are two kinds of input you can get from the keyboard: ordinary keys, and function keys. Ordinary keys correspond to (possibly modified) characters; the events they generate are represented in Lisp as characters. The event type of a &lt;em&gt;character event&lt;/em&gt; is the character itself (an integer), which might have some modifier bits set; see &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="39cd2bac89b7a8134e344d2a81de8082d54c9694" translate="yes" xml:space="preserve">
          <source>There are two representations of the prefix argument: &lt;em&gt;raw&lt;/em&gt; and &lt;em&gt;numeric&lt;/em&gt;. The editor command loop uses the raw representation internally, and so do the Lisp variables that store the information, but commands can request either representation.</source>
          <target state="translated">There are two representations of the prefix argument: &lt;em&gt;raw&lt;/em&gt; and &lt;em&gt;numeric&lt;/em&gt;. The editor command loop uses the raw representation internally, and so do the Lisp variables that store the information, but commands can request either representation.</target>
        </trans-unit>
        <trans-unit id="6bb6034776c4d0f21194c1e0588414124c802332" translate="yes" xml:space="preserve">
          <source>There are two text representations for non-</source>
          <target state="translated">Существуют два текстовых представления для не</target>
        </trans-unit>
        <trans-unit id="fae1a698eafa5dc42066049ce21dee7258f1165c" translate="yes" xml:space="preserve">
          <source>There are two ways that Emacs can make a backup file:</source>
          <target state="translated">Есть два способа,которым Emacs может сделать резервную копию файла:</target>
        </trans-unit>
        <trans-unit id="e05d7168854ad68f1c0b5577b7d65f713b450bc4" translate="yes" xml:space="preserve">
          <source>There are two ways to drag an entire child frame with the mouse: The &lt;code&gt;drag-with-mode-line&lt;/code&gt; parameter, if non-&lt;code&gt;nil&lt;/code&gt;, allows to drag a frame without minibuffer window (see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;) via the mode line area of its bottommost window. The &lt;code&gt;drag-with-header-line&lt;/code&gt; parameter, if non-&lt;code&gt;nil&lt;/code&gt;, allows to drag the frame via the header line area of its topmost window.</source>
          <target state="translated">There are two ways to drag an entire child frame with the mouse: The &lt;code&gt;drag-with-mode-line&lt;/code&gt; parameter, if non- &lt;code&gt;nil&lt;/code&gt; , allows to drag a frame without minibuffer window (see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;) via the mode line area of its bottommost window. The &lt;code&gt;drag-with-header-line&lt;/code&gt; parameter, if non- &lt;code&gt;nil&lt;/code&gt; , allows to drag the frame via the header line area of its topmost window.</target>
        </trans-unit>
        <trans-unit id="febd79069dcce3d171b21ec2da044e27843c284f" translate="yes" xml:space="preserve">
          <source>There are two ways to get out of Emacs: you can kill the Emacs job, which exits permanently, or you can suspend it, which permits you to reenter the Emacs process later. (In a graphical environment, you can of course simply switch to another application without doing anything special to Emacs, then switch back to Emacs when you want.)</source>
          <target state="translated">Есть два способа выбраться из Emacs:вы можете убить работу Emacs,которая выходит навсегда,или вы можете приостановить ее,что позволит вам снова войти в процесс Emacs позже.(В графической среде вы,конечно,можете просто переключиться на другое приложение,не делая ничего особенного для Emacs,а затем снова переключиться на Emacs,когда захотите).</target>
        </trans-unit>
        <trans-unit id="91babbeb975fdf773c24f538fb1cfc649a409b06" translate="yes" xml:space="preserve">
          <source>There are two ways to set up an autoloaded function: by calling &lt;code&gt;autoload&lt;/code&gt;, and by writing a &amp;ldquo;magic&amp;rdquo; comment in the source before the real definition. &lt;code&gt;autoload&lt;/code&gt; is the low-level primitive for autoloading; any Lisp program can call &lt;code&gt;autoload&lt;/code&gt; at any time. Magic comments are the most convenient way to make a function autoload, for packages installed along with Emacs. These comments do nothing on their own, but they serve as a guide for the command &lt;code&gt;update-file-autoloads&lt;/code&gt;, which constructs calls to &lt;code&gt;autoload&lt;/code&gt; and arranges to execute them when Emacs is built.</source>
          <target state="translated">There are two ways to set up an autoloaded function: by calling &lt;code&gt;autoload&lt;/code&gt; , and by writing a &amp;ldquo;magic&amp;rdquo; comment in the source before the real definition. &lt;code&gt;autoload&lt;/code&gt; is the low-level primitive for autoloading; any Lisp program can call &lt;code&gt;autoload&lt;/code&gt; at any time. Magic comments are the most convenient way to make a function autoload, for packages installed along with Emacs. These comments do nothing on their own, but they serve as a guide for the command &lt;code&gt;update-file-autoloads&lt;/code&gt; , which constructs calls to &lt;code&gt;autoload&lt;/code&gt; and arranges to execute them when Emacs is built.</target>
        </trans-unit>
        <trans-unit id="b5a24f5d6edcb58050debdd5416633f2a78ff230" translate="yes" xml:space="preserve">
          <source>There are various defaults for how to blink each type of cursor, if the type is not mentioned as an &lt;var&gt;on-state&lt;/var&gt; here. Changes in this variable do not take effect immediately, only when you specify the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</source>
          <target state="translated">There are various defaults for how to blink each type of cursor, if the type is not mentioned as an &lt;var&gt;on-state&lt;/var&gt; here. Changes in this variable do not take effect immediately, only when you specify the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</target>
        </trans-unit>
        <trans-unit id="fa4758fd3e7817469e8d029cea8975d505254e6e" translate="yes" xml:space="preserve">
          <source>There are, however, a few exceptions: it is ok to use a limited set of expressions such as &lt;code&gt;(point)&lt;/code&gt;, &lt;code&gt;(mark)&lt;/code&gt;, &lt;code&gt;(region-beginning)&lt;/code&gt;, and &lt;code&gt;(region-end)&lt;/code&gt;, because Emacs recognizes them specially and puts the expression (rather than its value) into the command history. To see whether the expression you wrote is one of these exceptions, run the command, then examine &lt;code&gt;(car command-history)&lt;/code&gt;.</source>
          <target state="translated">There are, however, a few exceptions: it is ok to use a limited set of expressions such as &lt;code&gt;(point)&lt;/code&gt; , &lt;code&gt;(mark)&lt;/code&gt; , &lt;code&gt;(region-beginning)&lt;/code&gt; , and &lt;code&gt;(region-end)&lt;/code&gt; , because Emacs recognizes them specially and puts the expression (rather than its value) into the command history. To see whether the expression you wrote is one of these exceptions, run the command, then examine &lt;code&gt;(car command-history)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e9c7cb18529ed6dcc3960b26faa66bf4ad86d08" translate="yes" xml:space="preserve">
          <source>There are, in general, many buffers in an Emacs session. At any time, one of them is designated the &lt;em&gt;current buffer&lt;/em&gt;&amp;mdash;the buffer in which most editing takes place. Most of the primitives for examining or changing text operate implicitly on the current buffer (see &lt;a href=&quot;text#Text&quot;&gt;Text&lt;/a&gt;).</source>
          <target state="translated">There are, in general, many buffers in an Emacs session. At any time, one of them is designated the &lt;em&gt;current buffer&lt;/em&gt;&amp;mdash;the buffer in which most editing takes place. Most of the primitives for examining or changing text operate implicitly on the current buffer (see &lt;a href=&quot;text#Text&quot;&gt;Text&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="ca315d80cf52d85dc191f8a4e11596e3728e557e" translate="yes" xml:space="preserve">
          <source>There can be at most one active notification at any given time. An active notification must be removed by calling &lt;code&gt;w32-notification-close&lt;/code&gt; before a new one can be shown.</source>
          <target state="translated">There can be at most one active notification at any given time. An active notification must be removed by calling &lt;code&gt;w32-notification-close&lt;/code&gt; before a new one can be shown.</target>
        </trans-unit>
        <trans-unit id="652594e6285d683eae8a6b2aac6731460c3a8258" translate="yes" xml:space="preserve">
          <source>There is a name parallel between GnuTLS MAC and digest algorithms but they are separate things internally and should not be mixed.</source>
          <target state="translated">Существует параллель между GnuTLS MAC и алгоритмами дайджеста,но они являются отдельными вещами внутри себя и не должны смешиваться.</target>
        </trans-unit>
        <trans-unit id="e2aa5cf61b46410aac7def0b532cc1292ff7a176" translate="yes" xml:space="preserve">
          <source>There is also a separate global mark ring, but that is used only in a few particular user-level commands, and is not relevant to Lisp programming. So we do not describe it here.</source>
          <target state="translated">Существует также отдельное кольцо глобальных меток,но оно используется только в нескольких конкретных командах пользовательского уровня и не имеет отношения к программированию на языке Lisp.Поэтому мы не описываем его здесь.</target>
        </trans-unit>
        <trans-unit id="5a1a9835b2deb5ae2be8528a446fb5a8f8bfc3a8" translate="yes" xml:space="preserve">
          <source>There is an anomalous case where newly inserted text at &lt;var&gt;pos&lt;/var&gt; would not inherit the &lt;code&gt;field&lt;/code&gt; property from either side. This happens if the previous character&amp;rsquo;s &lt;code&gt;field&lt;/code&gt; property is not rear-sticky, and the following character&amp;rsquo;s &lt;code&gt;field&lt;/code&gt; property is not front-sticky. In this case, &lt;var&gt;pos&lt;/var&gt; belongs to neither the preceding field nor the following field; the field functions treat it as belonging to an empty field whose beginning and end are both at &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">There is an anomalous case where newly inserted text at &lt;var&gt;pos&lt;/var&gt; would not inherit the &lt;code&gt;field&lt;/code&gt; property from either side. This happens if the previous character&amp;rsquo;s &lt;code&gt;field&lt;/code&gt; property is not rear-sticky, and the following character&amp;rsquo;s &lt;code&gt;field&lt;/code&gt; property is not front-sticky. In this case, &lt;var&gt;pos&lt;/var&gt; belongs to neither the preceding field nor the following field; the field functions treat it as belonging to an empty field whose beginning and end are both at &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="99608075f31379d3731857fc93b7b4b2ed2139ed" translate="yes" xml:space="preserve">
          <source>There is another wrinkle: because floating-point arithmetic is not exact, it is often a bad idea to check for equality of floating-point values. Usually it is better to test for approximate equality. Here&amp;rsquo;s a function to do this:</source>
          <target state="translated">There is another wrinkle: because floating-point arithmetic is not exact, it is often a bad idea to check for equality of floating-point values. Usually it is better to test for approximate equality. Here&amp;rsquo;s a function to do this:</target>
        </trans-unit>
        <trans-unit id="4c243b81e8c9962816c02c71e3fa1f5cc7d86fbe" translate="yes" xml:space="preserve">
          <source>There is just one situation where you should specify a string for an &lt;var&gt;initial&lt;/var&gt; argument. This is when you specify a cons cell for the &lt;var&gt;history&lt;/var&gt; argument. See &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;.</source>
          <target state="translated">There is just one situation where you should specify a string for an &lt;var&gt;initial&lt;/var&gt; argument. This is when you specify a cons cell for the &lt;var&gt;history&lt;/var&gt; argument. See &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a125144ca4e988b17612eceb6ec0c03776798e3a" translate="yes" xml:space="preserve">
          <source>There is no argument to specify the length of the char-table, because all char-tables have room for any valid character code as an index.</source>
          <target state="translated">Нет аргументов в пользу указания длины символьной таблицы,так как все символьные таблицы имеют место для любого допустимого символьного кода в качестве индекса.</target>
        </trans-unit>
        <trans-unit id="370afa4bae6026ef7ed6e7018648381f30f86233" translate="yes" xml:space="preserve">
          <source>There is no limit on the number of iterations that may occur. The loop will continue until either &lt;var&gt;condition&lt;/var&gt; evaluates to &lt;code&gt;nil&lt;/code&gt; or until an error or &lt;code&gt;throw&lt;/code&gt; jumps out of it (see &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;).</source>
          <target state="translated">There is no limit on the number of iterations that may occur. The loop will continue until either &lt;var&gt;condition&lt;/var&gt; evaluates to &lt;code&gt;nil&lt;/code&gt; or until an error or &lt;code&gt;throw&lt;/code&gt; jumps out of it (see &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="2001784aa80f2afa0294b2cfd6bb448a06d77ba1" translate="yes" xml:space="preserve">
          <source>There is no primitive for creating terminal objects. Emacs creates them as needed, such as when you call &lt;code&gt;make-frame-on-display&lt;/code&gt; (described below).</source>
          <target state="translated">There is no primitive for creating terminal objects. Emacs creates them as needed, such as when you call &lt;code&gt;make-frame-on-display&lt;/code&gt; (described below).</target>
        </trans-unit>
        <trans-unit id="ea7a53ff8f70c9f430428c9728e618d3bde5ce69" translate="yes" xml:space="preserve">
          <source>There is no special function to access default values in a char-table. To do that, use &lt;code&gt;char-table-range&lt;/code&gt; (see below).</source>
          <target state="translated">There is no special function to access default values in a char-table. To do that, use &lt;code&gt;char-table-range&lt;/code&gt; (see below).</target>
        </trans-unit>
        <trans-unit id="a5fad7ed1e8c3ad9f09e3903d9b1c444ed47bb43" translate="yes" xml:space="preserve">
          <source>There is no way to have required arguments following optional ones&amp;mdash;it would not make sense. To see why this must be so, suppose that &lt;code&gt;c&lt;/code&gt; in the example were optional and &lt;code&gt;d&lt;/code&gt; were required. Suppose three actual arguments are given; which variable would the third argument be for? Would it be used for the &lt;var&gt;c&lt;/var&gt;, or for &lt;var&gt;d&lt;/var&gt;? One can argue for both possibilities. Similarly, it makes no sense to have any more arguments (either required or optional) after a &lt;code&gt;&amp;amp;rest&lt;/code&gt; argument.</source>
          <target state="translated">There is no way to have required arguments following optional ones&amp;mdash;it would not make sense. To see why this must be so, suppose that &lt;code&gt;c&lt;/code&gt; in the example were optional and &lt;code&gt;d&lt;/code&gt; were required. Suppose three actual arguments are given; which variable would the third argument be for? Would it be used for the &lt;var&gt;c&lt;/var&gt; , or for &lt;var&gt;d&lt;/var&gt; ? One can argue for both possibilities. Similarly, it makes no sense to have any more arguments (either required or optional) after a &lt;code&gt;&amp;amp;rest&lt;/code&gt; argument.</target>
        </trans-unit>
        <trans-unit id="c3e4e82ed3441b855ea25aedc8368e992146a44d" translate="yes" xml:space="preserve">
          <source>There is no way to share structure between two hash tables, the way two alists can share a common tail.</source>
          <target state="translated">Нет способа разделить структуру между двумя хэш-таблицами,как два алиста могут иметь общий хвост.</target>
        </trans-unit>
        <trans-unit id="8e7bc00f4cbe042c39601255bf67d8ad682c7e42" translate="yes" xml:space="preserve">
          <source>There is no way to specify two different buttons with different actions.</source>
          <target state="translated">Невозможно указать две разные кнопки с разными действиями.</target>
        </trans-unit>
        <trans-unit id="61dd589ffa94add83c99de7478c67bd1bb20c561" translate="yes" xml:space="preserve">
          <source>There is one exception: if the value of &lt;var&gt;symbol&lt;/var&gt; is a string, it is displayed verbatim: the &lt;code&gt;%&lt;/code&gt;-constructs are not recognized.</source>
          <target state="translated">There is one exception: if the value of &lt;var&gt;symbol&lt;/var&gt; is a string, it is displayed verbatim: the &lt;code&gt;%&lt;/code&gt; -constructs are not recognized.</target>
        </trans-unit>
        <trans-unit id="bc8d78c4efd733708bc3daa467d344b184d4f9d7" translate="yes" xml:space="preserve">
          <source>There should be no newlines in any of these strings.</source>
          <target state="translated">Ни в одной из этих строк не должно быть новых строк.</target>
        </trans-unit>
        <trans-unit id="236a32def63c3e13f6b88accb492b3b35fcd5746" translate="yes" xml:space="preserve">
          <source>Therefore,</source>
          <target state="translated">Therefore,</target>
        </trans-unit>
        <trans-unit id="4a5ccb0d8538fcc42f2c57dd7658bc1aa97f78f2" translate="yes" xml:space="preserve">
          <source>Therefore, avoid binding a variable more than once in a single &lt;code&gt;let&lt;/code&gt; form.</source>
          <target state="translated">Therefore, avoid binding a variable more than once in a single &lt;code&gt;let&lt;/code&gt; form.</target>
        </trans-unit>
        <trans-unit id="3f0c4931ff9ec7321b627fb38158d861e1342e80" translate="yes" xml:space="preserve">
          <source>Therefore, we recommend that your module functions check for nonlocal exit conditions and recover from them, using the functions described below.</source>
          <target state="translated">Поэтому мы рекомендуем,чтобы функции вашего модуля проверяли на наличие нелокальных условий выхода и восстанавливали их,используя функции,описанные ниже.</target>
        </trans-unit>
        <trans-unit id="acdd2f9e8b919a1eaea822bd88c17593f336892c" translate="yes" xml:space="preserve">
          <source>Therefore, with an asynchronous subprocess, if at all possible, use a coding system which determines both the character code conversion and the end of line conversion&amp;mdash;that is, one like &lt;code&gt;latin-1-unix&lt;/code&gt;, rather than &lt;code&gt;undecided&lt;/code&gt; or &lt;code&gt;latin-1&lt;/code&gt;.</source>
          <target state="translated">Therefore, with an asynchronous subprocess, if at all possible, use a coding system which determines both the character code conversion and the end of line conversion&amp;mdash;that is, one like &lt;code&gt;latin-1-unix&lt;/code&gt; , rather than &lt;code&gt;undecided&lt;/code&gt; or &lt;code&gt;latin-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75c7cc98cf6082a937f2f125bb7ef9641a0a7f04" translate="yes" xml:space="preserve">
          <source>Therefore, you must define an Edebug specification for each macro that Edebug will encounter, to explain the format of calls to that macro. To do this, add a &lt;code&gt;debug&lt;/code&gt; declaration to the macro definition. Here is a simple example that shows the specification for the &lt;code&gt;for&lt;/code&gt; example macro (see &lt;a href=&quot;argument-evaluation#Argument-Evaluation&quot;&gt;Argument Evaluation&lt;/a&gt;).</source>
          <target state="translated">Therefore, you must define an Edebug specification for each macro that Edebug will encounter, to explain the format of calls to that macro. To do this, add a &lt;code&gt;debug&lt;/code&gt; declaration to the macro definition. Here is a simple example that shows the specification for the &lt;code&gt;for&lt;/code&gt; example macro (see &lt;a href=&quot;argument-evaluation#Argument-Evaluation&quot;&gt;Argument Evaluation&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="49ef1a726d3cde715758037bc20ad098d7916e7d" translate="yes" xml:space="preserve">
          <source>Therefore, you should avoid side effects in computation of the macro expansion, unless you really know what you are doing.</source>
          <target state="translated">Поэтому следует избегать побочных эффектов при расчете макрорасширения,если только вы действительно не знаете,что делаете.</target>
        </trans-unit>
        <trans-unit id="2acdaf6815658bc6863a95aee2b071c2d08ae394" translate="yes" xml:space="preserve">
          <source>These &lt;em&gt;adjustments&lt;/em&gt; of point that ended up in the middle of invisible text can be disabled by setting &lt;code&gt;disable-point-adjustment&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value. See &lt;a href=&quot;adjusting-point#Adjusting-Point&quot;&gt;Adjusting Point&lt;/a&gt;.</source>
          <target state="translated">These &lt;em&gt;adjustments&lt;/em&gt; of point that ended up in the middle of invisible text can be disabled by setting &lt;code&gt;disable-point-adjustment&lt;/code&gt; to a non- &lt;code&gt;nil&lt;/code&gt; value. See &lt;a href=&quot;adjusting-point#Adjusting-Point&quot;&gt;Adjusting Point&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a8564c8c52bb26dff06c342dbcb38aa25ab8d1b9" translate="yes" xml:space="preserve">
          <source>These Edebug commands let you view aspects of the buffer and window status as they were before entry to Edebug. The outside window configuration is the collection of windows and contents that were in effect outside of Edebug.</source>
          <target state="translated">Эти команды Edebug позволяют вам просматривать аспекты состояния буфера и окна в том виде,в каком они были до входа в Edebug.Конфигурация внешнего окна-это коллекция окон и содержимого,которые действовали вне Edebug.</target>
        </trans-unit>
        <trans-unit id="6453b0933bfa540398285ce050210e845ff2ceb3" translate="yes" xml:space="preserve">
          <source>These add a new node encapsulating &lt;var&gt;data&lt;/var&gt;, adding it to &lt;var&gt;ewoc&lt;/var&gt; before or after &lt;var&gt;node&lt;/var&gt;, respectively.</source>
          <target state="translated">These add a new node encapsulating &lt;var&gt;data&lt;/var&gt; , adding it to &lt;var&gt;ewoc&lt;/var&gt; before or after &lt;var&gt;node&lt;/var&gt; , respectively.</target>
        </trans-unit>
        <trans-unit id="cceb809aac53f3844ad4768044a343487be9a561" translate="yes" xml:space="preserve">
          <source>These add a new node encapsulating &lt;var&gt;data&lt;/var&gt;, putting it, respectively, at the beginning or end of &lt;var&gt;ewoc&lt;/var&gt;&amp;rsquo;s chain of nodes.</source>
          <target state="translated">These add a new node encapsulating &lt;var&gt;data&lt;/var&gt; , putting it, respectively, at the beginning or end of &lt;var&gt;ewoc&lt;/var&gt; &amp;rsquo;s chain of nodes.</target>
        </trans-unit>
        <trans-unit id="9ab0fb39b092432c876efaa650e2a9f9b04d1bbe" translate="yes" xml:space="preserve">
          <source>These additional functions are useful for creating and operating on network connections. Note that they are supported only on some systems.</source>
          <target state="translated">Эти дополнительные функции полезны для создания и работы с сетевыми соединениями.Обратите внимание,что они поддерживаются только на некоторых системах.</target>
        </trans-unit>
        <trans-unit id="2c532782eb32e3923cdfc2475afae8a2de94759f" translate="yes" xml:space="preserve">
          <source>These all match the empty string, but only in specific places.</source>
          <target state="translated">Все они совпадают с пустой строкой,но только в определенных местах.</target>
        </trans-unit>
        <trans-unit id="f41713a72eb6ace454547fa2e43e197443fe335c" translate="yes" xml:space="preserve">
          <source>These are &lt;em&gt;non-greedy&lt;/em&gt; variants of the operators &amp;lsquo;</source>
          <target state="translated">These are &lt;em&gt;non-greedy&lt;/em&gt; variants of the operators &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="05a64b60dec8513fc7fc45aa9b2b7f8fcbfea952" translate="yes" xml:space="preserve">
          <source>These are commands and functions for locating and operating on buttons in an Emacs buffer.</source>
          <target state="translated">Это команды и функции для нахождения и работы с кнопками в буфере Emacs.</target>
        </trans-unit>
        <trans-unit id="a25be8cdc54fda5fa4fb98a074855d8423e41aea" translate="yes" xml:space="preserve">
          <source>These are functions for getting and setting properties of buttons. Often these are used by a button&amp;rsquo;s invocation function to determine what to do.</source>
          <target state="translated">These are functions for getting and setting properties of buttons. Often these are used by a button&amp;rsquo;s invocation function to determine what to do.</target>
        </trans-unit>
        <trans-unit id="d1b514a069d836860d7af7a1feabca32dc715f0b" translate="yes" xml:space="preserve">
          <source>These are handled by &lt;code&gt;serial-process-configure&lt;/code&gt;, which is called by &lt;code&gt;make-serial-process&lt;/code&gt;.</source>
          <target state="translated">These are handled by &lt;code&gt;serial-process-configure&lt;/code&gt; , which is called by &lt;code&gt;make-serial-process&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43e0a28142decb2dd4f625cb10b5b79d2323f33c" translate="yes" xml:space="preserve">
          <source>These are not all the keymaps you would see in actuality.</source>
          <target state="translated">Это не все ключевые карты,которые вы увидите в реальности.</target>
        </trans-unit>
        <trans-unit id="bea269feb73538722101398f683861482dfa4553" translate="yes" xml:space="preserve">
          <source>These are the actual column and row coordinate numbers of the glyph under the &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt; position. If &lt;var&gt;x&lt;/var&gt; lies beyond the last column of actual text on its line, &lt;var&gt;col&lt;/var&gt; is reported by adding fictional extra columns that have the default character width. Row 0 is taken to be the header line if the window has one, or Row 1 if the window also has the tab line, or the topmost row of the text area otherwise. Column 0 is taken to be the leftmost column of the text area for clicks on a window text area, or the leftmost mode line or header line column for clicks there. For clicks on fringes or vertical borders, these have no meaningful data. For clicks on margins, &lt;var&gt;col&lt;/var&gt; is measured from the left edge of the margin area and &lt;var&gt;row&lt;/var&gt; is measured from the top of the margin area.</source>
          <target state="translated">These are the actual column and row coordinate numbers of the glyph under the &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; position. If &lt;var&gt;x&lt;/var&gt; lies beyond the last column of actual text on its line, &lt;var&gt;col&lt;/var&gt; is reported by adding fictional extra columns that have the default character width. Row 0 is taken to be the header line if the window has one, or Row 1 if the window also has the tab line, or the topmost row of the text area otherwise. Column 0 is taken to be the leftmost column of the text area for clicks on a window text area, or the leftmost mode line or header line column for clicks there. For clicks on fringes or vertical borders, these have no meaningful data. For clicks on margins, &lt;var&gt;col&lt;/var&gt; is measured from the left edge of the margin area and &lt;var&gt;row&lt;/var&gt; is measured from the top of the margin area.</target>
        </trans-unit>
        <trans-unit id="b6710b3c7596b8062fe07c6ef077774336111b3b" translate="yes" xml:space="preserve">
          <source>These are the basic trigonometric functions, with argument &lt;var&gt;arg&lt;/var&gt; measured in radians.</source>
          <target state="translated">These are the basic trigonometric functions, with argument &lt;var&gt;arg&lt;/var&gt; measured in radians.</target>
        </trans-unit>
        <trans-unit id="3156ee651cfae432e445cac09c15634298d44340" translate="yes" xml:space="preserve">
          <source>These are the pixel coordinates of the click, relative to the top left corner of &lt;var&gt;object&lt;/var&gt;, which is &lt;code&gt;(0 . 0)&lt;/code&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, which stands for a buffer, the coordinates are relative to the top left corner of the character glyph clicked on.</source>
          <target state="translated">These are the pixel coordinates of the click, relative to the top left corner of &lt;var&gt;object&lt;/var&gt; , which is &lt;code&gt;(0 . 0)&lt;/code&gt; . If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , which stands for a buffer, the coordinates are relative to the top left corner of the character glyph clicked on.</target>
        </trans-unit>
        <trans-unit id="44037f1bfc96fc4c3fcece5a2260c354838848ef" translate="yes" xml:space="preserve">
          <source>These are the pixel width and height of &lt;var&gt;object&lt;/var&gt; or, if this is &lt;code&gt;nil&lt;/code&gt;, those of the character glyph clicked on.</source>
          <target state="translated">These are the pixel width and height of &lt;var&gt;object&lt;/var&gt; or, if this is &lt;code&gt;nil&lt;/code&gt; , those of the character glyph clicked on.</target>
        </trans-unit>
        <trans-unit id="aaa95e66e38549b3b4cfab7bd5de76818d93641c" translate="yes" xml:space="preserve">
          <source>These are the primitive functions for searching through the text in a buffer. They are meant for use in programs, but you may call them interactively. If you do so, they prompt for the search string; the arguments &lt;var&gt;limit&lt;/var&gt; and &lt;var&gt;noerror&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;repeat&lt;/var&gt; is 1. For more details on interactive searching, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Search.html#Search&quot;&gt;Searching and Replacement&lt;/a&gt; in</source>
          <target state="translated">These are the primitive functions for searching through the text in a buffer. They are meant for use in programs, but you may call them interactively. If you do so, they prompt for the search string; the arguments &lt;var&gt;limit&lt;/var&gt; and &lt;var&gt;noerror&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt; , and &lt;var&gt;repeat&lt;/var&gt; is 1. For more details on interactive searching, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Search.html#Search&quot;&gt;Searching and Replacement&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="21e98ec803d85a1e3f1c4b28670195c47feec98b" translate="yes" xml:space="preserve">
          <source>These are the primitive functions for searching through the text in a buffer. They are meant for use in programs, but you may call them interactively. If you do so, they prompt for the search string; the arguments &lt;var&gt;limit&lt;/var&gt; and &lt;var&gt;noerror&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;repeat&lt;/var&gt; is 1. For more details on interactive searching, see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Search.html#Search&quot;&gt;Searching and Replacement&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f6ecbf809bb173225aa25ef24cd83076b55357" translate="yes" xml:space="preserve">
          <source>These are the values for &lt;code&gt;print-length&lt;/code&gt; and &lt;code&gt;print-level&lt;/code&gt; used by &lt;code&gt;eval-expression&lt;/code&gt;, and thus, indirectly, by many interactive evaluation commands (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Evaluating Emacs-Lisp Expressions&lt;/a&gt; in</source>
          <target state="translated">These are the values for &lt;code&gt;print-length&lt;/code&gt; and &lt;code&gt;print-level&lt;/code&gt; used by &lt;code&gt;eval-expression&lt;/code&gt; , and thus, indirectly, by many interactive evaluation commands (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Evaluating Emacs-Lisp Expressions&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="94ec34944edb4cf1176cf7c8771ec808b5fe1d62" translate="yes" xml:space="preserve">
          <source>These are the values for &lt;code&gt;print-length&lt;/code&gt; and &lt;code&gt;print-level&lt;/code&gt; used by &lt;code&gt;eval-expression&lt;/code&gt;, and thus, indirectly, by many interactive evaluation commands (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Evaluating Emacs-Lisp Expressions&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16da5f24988d3dc8397faf47e6b65dae11be9561" translate="yes" xml:space="preserve">
          <source>These commands find the file that ought to contain a function&amp;rsquo;s definition using &lt;code&gt;locate-library&lt;/code&gt;; if that finds no file, they expand the definition file name relative to the directory of the file that contains the &lt;code&gt;declare-function&lt;/code&gt; call.</source>
          <target state="translated">These commands find the file that ought to contain a function&amp;rsquo;s definition using &lt;code&gt;locate-library&lt;/code&gt; ; if that finds no file, they expand the definition file name relative to the directory of the file that contains the &lt;code&gt;declare-function&lt;/code&gt; call.</target>
        </trans-unit>
        <trans-unit id="9610813d55354bbe4e5030f270dfa5ba887ef1c1" translate="yes" xml:space="preserve">
          <source>These commands may fail to work as expected in case of nonlocal exit, as that can bypass the temporary breakpoint where you expected the program to stop.</source>
          <target state="translated">В случае нелокального выхода эти команды могут не работать так,как ожидалось,так как это может обойти временную точку останова,в которой вы ожидали остановку программы.</target>
        </trans-unit>
        <trans-unit id="652e15cb81b20860fa9afbd7456c6600d4924dc7" translate="yes" xml:space="preserve">
          <source>These commands, primarily for interactive use, act based on the indentation in the text.</source>
          <target state="translated">Эти команды,в первую очередь для интерактивного использования,действуют на основе отступов в тексте.</target>
        </trans-unit>
        <trans-unit id="9afc92acf428ab9dda92d38a5fa15921e29d7751" translate="yes" xml:space="preserve">
          <source>These constants are fundamentally different from the constants defined using the &lt;code&gt;defconst&lt;/code&gt; special form (see &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Defining Variables&lt;/a&gt;). A &lt;code&gt;defconst&lt;/code&gt; form serves to inform human readers that you do not intend to change the value of a variable, but Emacs does not raise an error if you actually change it.</source>
          <target state="translated">These constants are fundamentally different from the constants defined using the &lt;code&gt;defconst&lt;/code&gt; special form (see &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Defining Variables&lt;/a&gt;). A &lt;code&gt;defconst&lt;/code&gt; form serves to inform human readers that you do not intend to change the value of a variable, but Emacs does not raise an error if you actually change it.</target>
        </trans-unit>
        <trans-unit id="f9e556f07147f8ec31bdf6d5c6a298d8b46cf7c9" translate="yes" xml:space="preserve">
          <source>These definitions also act as guides for programming tools. For example, the</source>
          <target state="translated">Эти определения также служат руководством для инструментов программирования.Например,</target>
        </trans-unit>
        <trans-unit id="8a8338c7500ec00a26cdd8a7454fff6a72f07f61" translate="yes" xml:space="preserve">
          <source>These escape sequences may also be used in strings. See &lt;a href=&quot;non_002dascii-in-strings#Non_002dASCII-in-Strings&quot;&gt;Non-ASCII in Strings&lt;/a&gt;.</source>
          <target state="translated">These escape sequences may also be used in strings. See &lt;a href=&quot;non_002dascii-in-strings#Non_002dASCII-in-Strings&quot;&gt;Non-ASCII in Strings&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1fe77a489c5367bea12d3ad180626352917c22f7" translate="yes" xml:space="preserve">
          <source>These events are generated when the Emacs process receives the signals &lt;code&gt;SIGUSR1&lt;/code&gt; and &lt;code&gt;SIGUSR2&lt;/code&gt;. They contain no additional data because signals do not carry additional information. They can be useful for debugging (see &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Error Debugging&lt;/a&gt;).</source>
          <target state="translated">These events are generated when the Emacs process receives the signals &lt;code&gt;SIGUSR1&lt;/code&gt; and &lt;code&gt;SIGUSR2&lt;/code&gt; . They contain no additional data because signals do not carry additional information. They can be useful for debugging (see &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Error Debugging&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="4ed1d20ada108250ff1fdf53243d88eb2ca0e4bb" translate="yes" xml:space="preserve">
          <source>These examples show typical uses of &lt;code&gt;error&lt;/code&gt;:</source>
          <target state="translated">These examples show typical uses of &lt;code&gt;error&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7371eee8b69413ed2418406d7a6e8607e5619fd4" translate="yes" xml:space="preserve">
          <source>These facilities provide information about which version of Emacs is in use.</source>
          <target state="translated">Эти средства предоставляют информацию о том,какая версия Emacs используется.</target>
        </trans-unit>
        <trans-unit id="5307fb7809a0088f52c378521717d0b834ea65f4" translate="yes" xml:space="preserve">
          <source>These features permit you to write code to be evaluated during compilation of a program.</source>
          <target state="translated">Эти возможности позволяют писать код,который будет оцениваться во время компиляции программы.</target>
        </trans-unit>
        <trans-unit id="64695ab218480c1570234a3c90fd0da8fa46b8eb" translate="yes" xml:space="preserve">
          <source>These fields are only used in an indirect buffer, or in a buffer that is the base of an indirect buffer. Each holds a marker that records &lt;code&gt;pt&lt;/code&gt;, &lt;code&gt;begv&lt;/code&gt;, and &lt;code&gt;zv&lt;/code&gt; respectively, for this buffer when the buffer is not current.</source>
          <target state="translated">These fields are only used in an indirect buffer, or in a buffer that is the base of an indirect buffer. Each holds a marker that records &lt;code&gt;pt&lt;/code&gt; , &lt;code&gt;begv&lt;/code&gt; , and &lt;code&gt;zv&lt;/code&gt; respectively, for this buffer when the buffer is not current.</target>
        </trans-unit>
        <trans-unit id="32273c814e3a6d721ce29c67960251f2a5c93194" translate="yes" xml:space="preserve">
          <source>These fields count the number of buffer-modification events performed in this buffer. &lt;code&gt;modiff&lt;/code&gt; is incremented after each buffer-modification event, and is never otherwise changed; &lt;code&gt;save_modiff&lt;/code&gt; contains the value of &lt;code&gt;modiff&lt;/code&gt; the last time the buffer was visited or saved; &lt;code&gt;chars_modiff&lt;/code&gt; counts only modifications to the characters in the buffer, ignoring all other kinds of changes (such as text properties); and &lt;code&gt;overlay_modiff&lt;/code&gt; counts only modifications to the buffer&amp;rsquo;s overlays.</source>
          <target state="translated">These fields count the number of buffer-modification events performed in this buffer. &lt;code&gt;modiff&lt;/code&gt; is incremented after each buffer-modification event, and is never otherwise changed; &lt;code&gt;save_modiff&lt;/code&gt; contains the value of &lt;code&gt;modiff&lt;/code&gt; the last time the buffer was visited or saved; &lt;code&gt;chars_modiff&lt;/code&gt; counts only modifications to the characters in the buffer, ignoring all other kinds of changes (such as text properties); and &lt;code&gt;overlay_modiff&lt;/code&gt; counts only modifications to the buffer&amp;rsquo;s overlays.</target>
        </trans-unit>
        <trans-unit id="6844a9a43b79ccec05a390c8b25f33aea98210e1" translate="yes" xml:space="preserve">
          <source>These fields hold, respectively, a list of overlays that end at or before the current overlay center, and a list of overlays that end after the current overlay center. See &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Managing Overlays&lt;/a&gt;. &lt;code&gt;overlays_before&lt;/code&gt; is sorted in order of decreasing end position, and &lt;code&gt;overlays_after&lt;/code&gt; is sorted in order of increasing beginning position.</source>
          <target state="translated">These fields hold, respectively, a list of overlays that end at or before the current overlay center, and a list of overlays that end after the current overlay center. See &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Managing Overlays&lt;/a&gt;. &lt;code&gt;overlays_before&lt;/code&gt; is sorted in order of decreasing end position, and &lt;code&gt;overlays_after&lt;/code&gt; is sorted in order of increasing beginning position.</target>
        </trans-unit>
        <trans-unit id="41d5d75a953e2e4c59e81e7694f747e4614197bb" translate="yes" xml:space="preserve">
          <source>These fields store the buffer&amp;rsquo;s local keymap (see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;), abbrev table (see &lt;a href=&quot;abbrev-tables#Abbrev-Tables&quot;&gt;Abbrev Tables&lt;/a&gt;), syntax table (see &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;), category table (see &lt;a href=&quot;categories#Categories&quot;&gt;Categories&lt;/a&gt;), and display table (see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;).</source>
          <target state="translated">These fields store the buffer&amp;rsquo;s local keymap (see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;), abbrev table (see &lt;a href=&quot;abbrev-tables#Abbrev-Tables&quot;&gt;Abbrev Tables&lt;/a&gt;), syntax table (see &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;), category table (see &lt;a href=&quot;categories#Categories&quot;&gt;Categories&lt;/a&gt;), and display table (see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="caefee5d23d6c6c86af8afeee33d761f23111f61" translate="yes" xml:space="preserve">
          <source>These fields store the conversion tables for converting text to lower case, upper case, and for canonicalizing text for case-fold search. See &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;.</source>
          <target state="translated">These fields store the conversion tables for converting text to lower case, upper case, and for canonicalizing text for case-fold search. See &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7356bdab197c4b307f4273606b00e5f3504341eb" translate="yes" xml:space="preserve">
          <source>These fields store the values of Lisp variables that are automatically buffer-local (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;), whose corresponding variable names have the additional prefix &lt;code&gt;buffer-&lt;/code&gt; and have underscores replaced with dashes. For instance, &lt;code&gt;undo_list&lt;/code&gt; stores the value of &lt;code&gt;buffer-undo-list&lt;/code&gt;.</source>
          <target state="translated">These fields store the values of Lisp variables that are automatically buffer-local (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;), whose corresponding variable names have the additional prefix &lt;code&gt;buffer-&lt;/code&gt; and have underscores replaced with dashes. For instance, &lt;code&gt;undo_list&lt;/code&gt; stores the value of &lt;code&gt;buffer-undo-list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c066cf74888d99cf9151237fbea57958b8cb93e2" translate="yes" xml:space="preserve">
          <source>These fields store the values of Lisp variables that are automatically buffer-local (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;), whose corresponding variable names have underscores replaced with dashes. For instance, &lt;code&gt;mode_line_format&lt;/code&gt; stores the value of &lt;code&gt;mode-line-format&lt;/code&gt;.</source>
          <target state="translated">These fields store the values of Lisp variables that are automatically buffer-local (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;), whose corresponding variable names have underscores replaced with dashes. For instance, &lt;code&gt;mode_line_format&lt;/code&gt; stores the value of &lt;code&gt;mode-line-format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb8146d57fbe325b7f14b432b9d92bc60b3cfeea" translate="yes" xml:space="preserve">
          <source>These frame parameters control the use of fonts and colors.</source>
          <target state="translated">Эти параметры кадра контролируют использование шрифтов и цветов.</target>
        </trans-unit>
        <trans-unit id="75cd82a0c0e58c25cdc9b6bacbe21efea6ec7f69" translate="yes" xml:space="preserve">
          <source>These frame parameters enable or disable various parts of the frame, or control their sizes.</source>
          <target state="translated">Эти параметры рамы позволяют включать или выключать различные части рамы,а также контролировать их размеры.</target>
        </trans-unit>
        <trans-unit id="d255f11855dcf4a52f043d8501aaa97f70e52f62" translate="yes" xml:space="preserve">
          <source>These frame parameters give the most basic information about the frame. &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; are meaningful on all terminals.</source>
          <target state="translated">These frame parameters give the most basic information about the frame. &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; are meaningful on all terminals.</target>
        </trans-unit>
        <trans-unit id="6c680cf74be3c7198bef700334e34054ecd3a7e0" translate="yes" xml:space="preserve">
          <source>These frame parameters, meaningful on all kinds of terminals, deal with which buffers have been, or should, be displayed in the frame.</source>
          <target state="translated">Эти параметры фрейма,имеющие значение на всех типах терминалов,касаются того,какие буферы были или должны быть отображены во фрейме.</target>
        </trans-unit>
        <trans-unit id="6c15e83c2865f543ed1b272587e6e144469be662" translate="yes" xml:space="preserve">
          <source>These functions accept a display (either a frame or the name of a terminal) as an optional argument. We hope in the future to make Emacs support different colors on different text terminals; then this argument will specify which terminal to operate on (the default being the selected frame&amp;rsquo;s terminal; see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;). At present, though, the &lt;var&gt;frame&lt;/var&gt; argument has no effect.</source>
          <target state="translated">These functions accept a display (either a frame or the name of a terminal) as an optional argument. We hope in the future to make Emacs support different colors on different text terminals; then this argument will specify which terminal to operate on (the default being the selected frame&amp;rsquo;s terminal; see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;). At present, though, the &lt;var&gt;frame&lt;/var&gt; argument has no effect.</target>
        </trans-unit>
        <trans-unit id="91e12a819cc188763f60c0b340292fb53a08ac26" translate="yes" xml:space="preserve">
          <source>These functions access and select minibuffer windows, test whether they are active and control how they get resized.</source>
          <target state="translated">Эти функции получают доступ и выбирают окна минибуфера,проверяют,активны ли они,и контролируют их изменение размера.</target>
        </trans-unit>
        <trans-unit id="121a5761d8b20b0742174be73c6b20355bf2397e" translate="yes" xml:space="preserve">
          <source>These functions access the minibuffer prompt and contents.</source>
          <target state="translated">Эти функции получают доступ к подсказкам и содержимому минибуфера.</target>
        </trans-unit>
        <trans-unit id="8471e7b0600804b60a50e9b8512731d75d72de26" translate="yes" xml:space="preserve">
          <source>These functions and variables deal with recursive minibuffers (see &lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;Recursive Editing&lt;/a&gt;):</source>
          <target state="translated">These functions and variables deal with recursive minibuffers (see &lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;Recursive Editing&lt;/a&gt;):</target>
        </trans-unit>
        <trans-unit id="0553c0ae5b9ff8a094605fff6f3203bf3cf7f9a6" translate="yes" xml:space="preserve">
          <source>These functions and variables give information about the total amount of memory allocation that Emacs has done, broken down by data type. Note the difference between these and the values returned by &lt;code&gt;garbage-collect&lt;/code&gt;; those count objects that currently exist, but these count the number or size of all allocations, including those for objects that have since been freed.</source>
          <target state="translated">These functions and variables give information about the total amount of memory allocation that Emacs has done, broken down by data type. Note the difference between these and the values returned by &lt;code&gt;garbage-collect&lt;/code&gt; ; those count objects that currently exist, but these count the number or size of all allocations, including those for objects that have since been freed.</target>
        </trans-unit>
        <trans-unit id="6fc606e7b511561a87e15edff497fda623372a9b" translate="yes" xml:space="preserve">
          <source>These functions and variables provide access to the kill ring at a lower level, but are still convenient for use in Lisp programs, because they take care of interaction with window system selections (see &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;).</source>
          <target state="translated">These functions and variables provide access to the kill ring at a lower level, but are still convenient for use in Lisp programs, because they take care of interaction with window system selections (see &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="57edc7f3b602347790883112e32461c39a8b215d" translate="yes" xml:space="preserve">
          <source>These functions are called with no arguments. They can access the command-line argument under consideration through the variable &lt;code&gt;argi&lt;/code&gt;, which is bound temporarily at this point. The remaining arguments (not including the current one) are in the variable &lt;code&gt;command-line-args-left&lt;/code&gt;.</source>
          <target state="translated">These functions are called with no arguments. They can access the command-line argument under consideration through the variable &lt;code&gt;argi&lt;/code&gt; , which is bound temporarily at this point. The remaining arguments (not including the current one) are in the variable &lt;code&gt;command-line-args-left&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97f83cee255103144d520b839f7f8062dbf43bf9" translate="yes" xml:space="preserve">
          <source>These functions are useful for decoding scroll bar events.</source>
          <target state="translated">Эти функции полезны для декодирования событий полосы прокрутки.</target>
        </trans-unit>
        <trans-unit id="c8f58ab0f0faf7770a13f5fb5b71914974523873" translate="yes" xml:space="preserve">
          <source>These functions compute a position list given particular buffer position or screen position. You can access the data in this position list with the functions described above.</source>
          <target state="translated">Эти функции вычисляют список позиций,заданный конкретной позицией буфера или экрана.Доступ к данным этого списка позиций можно получить с помощью функций,описанных выше.</target>
        </trans-unit>
        <trans-unit id="22c7dfe3c796bddf45291a7df571d895a905f8ec" translate="yes" xml:space="preserve">
          <source>These functions convert events, key sequences, or characters to textual descriptions. These descriptions are useful for including arbitrary text characters or key sequences in messages, because they convert non-printing and whitespace characters to sequences of printing characters. The description of a non-whitespace printing character is the character itself.</source>
          <target state="translated">Эти функции преобразуют события,последовательности клавиш или символы в текстовые описания.Эти описания полезны для включения в сообщения произвольных текстовых символов или последовательностей клавиш,поскольку они преобразуют непечатаемые и пробелы в последовательности печатаемых символов.Описание непечатаемых и белых пробельных символов-это сам символ.</target>
        </trans-unit>
        <trans-unit id="32854e57fd4225961eb6f7a796377d636a1707d5" translate="yes" xml:space="preserve">
          <source>These functions convert the set string to multibyte if the buffer is multibyte, and they convert it to unibyte if the buffer is unibyte, as the search functions do (see &lt;a href=&quot;searching-and-matching#Searching-and-Matching&quot;&gt;Searching and Matching&lt;/a&gt;).</source>
          <target state="translated">These functions convert the set string to multibyte if the buffer is multibyte, and they convert it to unibyte if the buffer is unibyte, as the search functions do (see &lt;a href=&quot;searching-and-matching#Searching-and-Matching&quot;&gt;Searching and Matching&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="bde16a6327954ca3dc2ee15e2e43d1b54fb616d9" translate="yes" xml:space="preserve">
          <source>These functions convert time values (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;) to Lisp timestamps, or into calendrical information and vice versa.</source>
          <target state="translated">These functions convert time values (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;) to Lisp timestamps, or into calendrical information and vice versa.</target>
        </trans-unit>
        <trans-unit id="a82b07d93809f41e92feaab96902ece14f6ca96b" translate="yes" xml:space="preserve">
          <source>These functions convert time values to text in a string, and vice versa. Time values include &lt;code&gt;nil&lt;/code&gt;, numbers, and Lisp timestamps (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">These functions convert time values to text in a string, and vice versa. Time values include &lt;code&gt;nil&lt;/code&gt; , numbers, and Lisp timestamps (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="893a001c0a39bd95a9eed9a404de87e4453643d2" translate="yes" xml:space="preserve">
          <source>These functions copy text characters from strings and buffers along with their properties. The inserted characters have exactly the same properties as the characters they were copied from. By contrast, characters specified as separate arguments, not part of a string or buffer, inherit their text properties from the neighboring text.</source>
          <target state="translated">Эти функции копируют текстовые символы из строк и буферов вместе с их свойствами.Вставленные символы имеют точно такие же свойства,как и символы,из которых они были скопированы.Символы,указанные в качестве отдельных аргументов,а не как часть строки или буфера,напротив,наследуют свои текстовые свойства от соседнего текста.</target>
        </trans-unit>
        <trans-unit id="12996c12645dffe62b5b718b306e09838a845251" translate="yes" xml:space="preserve">
          <source>These functions count each character according to the number of columns it occupies on the screen. This means control characters count as occupying 2 or 4 columns, depending upon the value of &lt;code&gt;ctl-arrow&lt;/code&gt;, and tabs count as occupying a number of columns that depends on the value of &lt;code&gt;tab-width&lt;/code&gt; and on the column where the tab begins. See &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;.</source>
          <target state="translated">These functions count each character according to the number of columns it occupies on the screen. This means control characters count as occupying 2 or 4 columns, depending upon the value of &lt;code&gt;ctl-arrow&lt;/code&gt; , and tabs count as occupying a number of columns that depends on the value of &lt;code&gt;tab-width&lt;/code&gt; and on the column where the tab begins. See &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5587cca0f32b361e7619386323dd5952fc38156a" translate="yes" xml:space="preserve">
          <source>These functions do not modify the strings that are passed to them as arguments.</source>
          <target state="translated">Эти функции не изменяют строки,которые передаются им в качестве аргументов.</target>
        </trans-unit>
        <trans-unit id="0db9562b1b3d1a26285c73f9d1f5a2bc76ccbea1" translate="yes" xml:space="preserve">
          <source>These functions do not move point; instead, they return a position (or &lt;code&gt;nil&lt;/code&gt;). Remember that a position is always between two characters; the position returned by these functions is between two characters with different properties.</source>
          <target state="translated">These functions do not move point; instead, they return a position (or &lt;code&gt;nil&lt;/code&gt; ). Remember that a position is always between two characters; the position returned by these functions is between two characters with different properties.</target>
        </trans-unit>
        <trans-unit id="3480b687890db37e25d8679a8fb2aa1513692262" translate="yes" xml:space="preserve">
          <source>These functions handle both strings and buffers. Keep in mind that positions in a string start from 0, whereas positions in a buffer start from 1. Passing a buffer other than the current buffer may be slow.</source>
          <target state="translated">Эти функции обрабатывают как струны,так и буферы.Помните,что позиции в строке начинаются с 0,в то время как позиции в буфере начинаются с 1.Передача буфера,отличного от текущего,может быть медленной.</target>
        </trans-unit>
        <trans-unit id="0bb3307e88dba10f0e4bca2c9c929691f427fc25" translate="yes" xml:space="preserve">
          <source>These functions let you read and change the parameter values of a frame.</source>
          <target state="translated">Эти функции позволяют считывать и изменять значения параметров кадра.</target>
        </trans-unit>
        <trans-unit id="c6d0e6907567470f2b32ecff3c3b392fd450cfb8" translate="yes" xml:space="preserve">
          <source>These functions move point based on a count of characters. &lt;code&gt;goto-char&lt;/code&gt; is the fundamental primitive; the other functions use that.</source>
          <target state="translated">These functions move point based on a count of characters. &lt;code&gt;goto-char&lt;/code&gt; is the fundamental primitive; the other functions use that.</target>
        </trans-unit>
        <trans-unit id="ab2d1d99ce04f193040231a1c2648552979f7f3c" translate="yes" xml:space="preserve">
          <source>These functions must take care when using &lt;code&gt;window-end&lt;/code&gt; (see &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;); if you need an up-to-date value, you must use the &lt;var&gt;update&lt;/var&gt; argument to ensure you get it.</source>
          <target state="translated">These functions must take care when using &lt;code&gt;window-end&lt;/code&gt; (see &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;); if you need an up-to-date value, you must use the &lt;var&gt;update&lt;/var&gt; argument to ensure you get it.</target>
        </trans-unit>
        <trans-unit id="3599ddd0ccc7c1bb59af0d7739752be6bff46ebb" translate="yes" xml:space="preserve">
          <source>These functions obtain additional information about the window system in use where Emacs shows the specified &lt;var&gt;display&lt;/var&gt;. (Their names begin with &lt;code&gt;x-&lt;/code&gt; for historical reasons.)</source>
          <target state="translated">These functions obtain additional information about the window system in use where Emacs shows the specified &lt;var&gt;display&lt;/var&gt; . (Their names begin with &lt;code&gt;x-&lt;/code&gt; for historical reasons.)</target>
        </trans-unit>
        <trans-unit id="147b8d3bc6d563d67f966133e2f695c2f4abb602" translate="yes" xml:space="preserve">
          <source>These functions operate on regular expressions.</source>
          <target state="translated">Эти функции работают на регулярных выражениях.</target>
        </trans-unit>
        <trans-unit id="e69cc7c761fefbaaa6ca87ea52d54171150d39f1" translate="yes" xml:space="preserve">
          <source>These functions perform calendrical computations using time values (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;). As with any time value, a value of &lt;code&gt;nil&lt;/code&gt; for any of their time-value arguments stands for the current system time, and a single number stands for the number of seconds since the epoch.</source>
          <target state="translated">These functions perform calendrical computations using time values (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;). As with any time value, a value of &lt;code&gt;nil&lt;/code&gt; for any of their time-value arguments stands for the current system time, and a single number stands for the number of seconds since the epoch.</target>
        </trans-unit>
        <trans-unit id="3faf858a56995dbf1b0c10b1e20365c9dbd2ca0e" translate="yes" xml:space="preserve">
          <source>These functions provide a way to determine which color names are valid, and what they look like. In some cases, the value depends on the &lt;em&gt;selected frame&lt;/em&gt;, as described below; see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;, for the meaning of the term &amp;ldquo;selected frame&amp;rdquo;.</source>
          <target state="translated">These functions provide a way to determine which color names are valid, and what they look like. In some cases, the value depends on the &lt;em&gt;selected frame&lt;/em&gt;, as described below; see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;, for the meaning of the term &amp;ldquo;selected frame&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="e4a65d15c1a9ebd9e09a4df510c5e9378c690d84" translate="yes" xml:space="preserve">
          <source>These functions read and set the properties of an overlay:</source>
          <target state="translated">Эти функции считывают и устанавливают свойства оверлея:</target>
        </trans-unit>
        <trans-unit id="607cbb4ce5975ddb134e1cf42345aca20205753f" translate="yes" xml:space="preserve">
          <source>These functions return the default height and width of a character in &lt;var&gt;frame&lt;/var&gt;, measured in pixels. Together, these values establish the size of the default font on &lt;var&gt;frame&lt;/var&gt;. The values depend on the choice of font for &lt;var&gt;frame&lt;/var&gt;, see &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;Font and Color Parameters&lt;/a&gt;.</source>
          <target state="translated">These functions return the default height and width of a character in &lt;var&gt;frame&lt;/var&gt; , measured in pixels. Together, these values establish the size of the default font on &lt;var&gt;frame&lt;/var&gt; . The values depend on the choice of font for &lt;var&gt;frame&lt;/var&gt; , see &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;Font and Color Parameters&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="09a64473d43e2d708e1c38b96ec8cf37fc09d875" translate="yes" xml:space="preserve">
          <source>These functions return the foreground color (or background color, respectively) of face &lt;var&gt;face&lt;/var&gt;, as a string. If the color is unspecified, they return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">These functions return the foreground color (or background color, respectively) of face &lt;var&gt;face&lt;/var&gt; , as a string. If the color is unspecified, they return &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b636fdb808fc2c3c957e28785d6a35d90f659dad" translate="yes" xml:space="preserve">
          <source>These functions return the height and width of the text area of &lt;var&gt;frame&lt;/var&gt;, measured in units of the default font height and width of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). These functions are plain shorthands for writing &lt;code&gt;(frame-parameter frame 'height)&lt;/code&gt; and &lt;code&gt;(frame-parameter frame 'width)&lt;/code&gt;.</source>
          <target state="translated">Эти функции возвращают высоту и ширину текстовой области &lt;var&gt;frame&lt;/var&gt; , измеренные в единицах высоты шрифта по умолчанию и ширины &lt;var&gt;frame&lt;/var&gt; (см. &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Шрифт фрейма&lt;/a&gt; ). Эти функции представляют собой простые сокращения для записи &lt;code&gt;(frame-parameter frame 'height)&lt;/code&gt; и &lt;code&gt;(frame-parameter frame 'width)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d115313b39c99bf9a73e868edab4210be5dfd0f0" translate="yes" xml:space="preserve">
          <source>These functions return the inner width and height of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">Эти функции возвращают внутреннюю ширину и высоту &lt;var&gt;frame&lt;/var&gt; в пикселях.</target>
        </trans-unit>
        <trans-unit id="65317fceab04a5393a4610411e7d919c58166f8a" translate="yes" xml:space="preserve">
          <source>These functions return the native width and height of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">Эти функции возвращают исходную ширину и высоту &lt;var&gt;frame&lt;/var&gt; в пикселях.</target>
        </trans-unit>
        <trans-unit id="e5df50bad22f793708058c5c3f72feb1556e5127" translate="yes" xml:space="preserve">
          <source>These functions return the outer width and height of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">Эти функции возвращают внешнюю ширину и высоту &lt;var&gt;frame&lt;/var&gt; в пикселях.</target>
        </trans-unit>
        <trans-unit id="d38fe85c22ca89727598b0326e70dba74667d37d" translate="yes" xml:space="preserve">
          <source>These functions return the width and height of the text area of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">Эти функции возвращают ширину и высоту текстовой области &lt;var&gt;frame&lt;/var&gt; в пикселях.</target>
        </trans-unit>
        <trans-unit id="5a1289dbdd5c9e8a4981cd1858d16f383b2575b6" translate="yes" xml:space="preserve">
          <source>These functions scan text to determine where screen lines break, and thus take time proportional to the distance scanned.</source>
          <target state="translated">Эти функции сканируют текст для определения места разрыва строк экрана и,таким образом,требуют времени,пропорционального сканированному расстоянию.</target>
        </trans-unit>
        <trans-unit id="32c7206d08128117007e8bcd42d2f606dcff371d" translate="yes" xml:space="preserve">
          <source>These functions take a mouse position list as argument, and return various parts of it:</source>
          <target state="translated">Эти функции принимают в качестве аргумента список позиций мыши и возвращают различные его части:</target>
        </trans-unit>
        <trans-unit id="e6a7353e1fe65b73c3cb43570c87e9dc028c7932" translate="yes" xml:space="preserve">
          <source>These functions test for permission to access a file for reading, writing, or execution. Unless explicitly stated otherwise, they follow symbolic links. See &lt;a href=&quot;kinds-of-files#Kinds-of-Files&quot;&gt;Kinds of Files&lt;/a&gt;.</source>
          <target state="translated">Эти функции проверяют разрешение на доступ к файлу для чтения, записи или выполнения. Если явно не указано иное, они переходят по символическим ссылкам. См. &lt;a href=&quot;kinds-of-files#Kinds-of-Files&quot;&gt;Виды файлов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c38f568a6c8f77175070f3ca62775f408c9dfb6" translate="yes" xml:space="preserve">
          <source>These functions, and one macro, provide convenient ways to modify a list which is stored in a variable.</source>
          <target state="translated">Эти функции и один макрос обеспечивают удобные способы модификации списка,который хранится в переменной.</target>
        </trans-unit>
        <trans-unit id="f3821e4594e2f12e52ea2fed5751cf5bb0734c0c" translate="yes" xml:space="preserve">
          <source>These have the attributes indicated by their names (e.g., &lt;code&gt;bold&lt;/code&gt; has a bold &lt;code&gt;:weight&lt;/code&gt; attribute), with all other attributes unspecified (and so given by &lt;code&gt;default&lt;/code&gt;).</source>
          <target state="translated">У них есть атрибуты, указанные в их именах (например, &lt;code&gt;bold&lt;/code&gt; имеет атрибут bold &lt;code&gt;:weight&lt;/code&gt; ), а все остальные атрибуты не указаны (и поэтому задаются по &lt;code&gt;default&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e47e777be261258dca54be3fbba695fcf02c9d58" translate="yes" xml:space="preserve">
          <source>These have the same meanings as the face attributes of the same name. See &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Face Attributes&lt;/a&gt;. &lt;code&gt;:family&lt;/code&gt; and &lt;code&gt;:foundry&lt;/code&gt; are strings, while the other three are symbols. As example values, &lt;code&gt;:slant&lt;/code&gt; may be &lt;code&gt;italic&lt;/code&gt;, &lt;code&gt;:weight&lt;/code&gt; may be &lt;code&gt;bold&lt;/code&gt; and &lt;code&gt;:width&lt;/code&gt; may be &lt;code&gt;normal&lt;/code&gt;.</source>
          <target state="translated">Они имеют то же значение, что и атрибуты лица с тем же именем. См. &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Атрибуты лица&lt;/a&gt; . &lt;code&gt;:family&lt;/code&gt; и &lt;code&gt;:foundry&lt;/code&gt; - это строки, а остальные три - символы. В качестве примера значений, &lt;code&gt;:slant&lt;/code&gt; может быть &lt;code&gt;italic&lt;/code&gt; , &lt;code&gt;:weight&lt;/code&gt; может быть &lt;code&gt;bold&lt;/code&gt; и &lt;code&gt;:width&lt;/code&gt; может быть &lt;code&gt;normal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fe0bcdf4e749c72aab0c293540927291ac1aa2d" translate="yes" xml:space="preserve">
          <source>These hook variables let you arrange to take notice of changes in buffers (or in a particular buffer, if you make them buffer-local). See also &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;, for how to detect changes to specific parts of the text.</source>
          <target state="translated">Эти переменные-ловушки позволяют вам отслеживать изменения в буферах (или в конкретном буфере, если вы сделаете их локальными для буфера). См. Также &amp;laquo; &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Специальные свойства&amp;raquo;&lt;/a&gt; , чтобы узнать, как определять изменения в определенных частях текста.</target>
        </trans-unit>
        <trans-unit id="b3722c7720a390976cdaddd26a76da19ca95a48a" translate="yes" xml:space="preserve">
          <source>These keymaps control various areas of the mode line. See &lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;Mode Line Format&lt;/a&gt;.</source>
          <target state="translated">Эти раскладки управляют различными областями строки режима. См. Раздел &lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;Формат строки режима&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6e2c6883adbcf22c3241682e727075a42dfe00e" translate="yes" xml:space="preserve">
          <source>These keymaps display the main, top-level menus in the menu bar. Some of them contain sub-menus. For example, the Edit menu contains &lt;code&gt;menu-bar-search-menu&lt;/code&gt;, etc. See &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Menu Bar&lt;/a&gt;.</source>
          <target state="translated">Эти раскладки отображают главное меню верхнего уровня в строке меню. Некоторые из них содержат подменю. Например, меню &amp;laquo;Правка&amp;raquo; содержит &lt;code&gt;menu-bar-search-menu&lt;/code&gt; и т. Д. См. Раздел &amp;laquo; &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Строка меню&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e1b24d17104d2a599a62ef2eba9d12e47d4c600d" translate="yes" xml:space="preserve">
          <source>These keys correspond to common</source>
          <target state="translated">Эти ключи соответствуют общим</target>
        </trans-unit>
        <trans-unit id="4c47cdbac4a7f662759169877670d03eab27b377" translate="yes" xml:space="preserve">
          <source>These kinds of event are generated by moving a mouse wheel. The &lt;var&gt;position&lt;/var&gt; element is a mouse position list (see &lt;a href=&quot;click-events#Click-Events&quot;&gt;Click Events&lt;/a&gt;), specifying the position of the mouse cursor when the event occurred.</source>
          <target state="translated">События такого типа генерируются при перемещении колеса мыши. Элемент &lt;var&gt;position&lt;/var&gt; - это список позиций мыши (см. &amp;laquo; &lt;a href=&quot;click-events#Click-Events&quot;&gt;События щелчка&amp;raquo;&lt;/a&gt; ), в котором указывается положение курсора мыши при возникновении события.</target>
        </trans-unit>
        <trans-unit id="327aa77a271ae0747539593d4f1f1061887141f4" translate="yes" xml:space="preserve">
          <source>These macros all expect three arguments:</source>
          <target state="translated">Все эти макросы ожидают трех аргументов:</target>
        </trans-unit>
        <trans-unit id="661bb57259287c5d9e6a9cf26af06d46adf0c8f2" translate="yes" xml:space="preserve">
          <source>These mapping functions do not allow char-tables because a char-table is a sparse array whose nominal range of indices is very large. To map over a char-table in a way that deals properly with its sparse nature, use the function &lt;code&gt;map-char-table&lt;/code&gt; (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;).</source>
          <target state="translated">Эти функции сопоставления не позволяют использовать таблицы символов, поскольку таблица символов - это разреженный массив, номинальный диапазон индексов которого очень велик. Чтобы отобразить таблицу символов таким образом, чтобы она соответствовала ее разреженной природе, используйте функцию &lt;code&gt;map-char-table&lt;/code&gt; (см. &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="889061821013abb0e636cc7d94dfee19f317076e" translate="yes" xml:space="preserve">
          <source>These mathematical functions allow integers as well as floating-point numbers as arguments.</source>
          <target state="translated">Эти математические функции позволяют использовать в качестве аргументов целые числа,а также числа с плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="0f431d7e8f6682cc5d52bc8367b56e6ab2917c79" translate="yes" xml:space="preserve">
          <source>These move point to the previous or next, respectively, &lt;var&gt;arg&lt;/var&gt;th node in &lt;var&gt;ewoc&lt;/var&gt;. &lt;code&gt;ewoc-goto-prev&lt;/code&gt; does not move if it is already at the first node or if &lt;var&gt;ewoc&lt;/var&gt; is empty, whereas &lt;code&gt;ewoc-goto-next&lt;/code&gt; moves past the last node, returning &lt;code&gt;nil&lt;/code&gt;. Excepting this special case, these functions return the node moved to.</source>
          <target state="translated">Они перемещают точку на предыдущий или следующий, соответственно, узел &lt;var&gt;arg&lt;/var&gt; в &lt;var&gt;ewoc&lt;/var&gt; . &lt;code&gt;ewoc-goto-prev&lt;/code&gt; не перемещается, если он уже находится на первом узле или если &lt;var&gt;ewoc&lt;/var&gt; пуст, тогда как &lt;code&gt;ewoc-goto-next&lt;/code&gt; перемещается за последний узел, возвращая &lt;code&gt;nil&lt;/code&gt; . За исключением этого особого случая, эти функции возвращают перемещенный узел.</target>
        </trans-unit>
        <trans-unit id="ca83389bce48c8c68a57c8b12e41b5c8416c3707" translate="yes" xml:space="preserve">
          <source>These narrow classifications are grouped into a hierarchy of wider classes called &lt;em&gt;error conditions&lt;/em&gt;, identified by &lt;em&gt;condition names&lt;/em&gt;. The narrowest such classes belong to the error symbols themselves: each error symbol is also a condition name. There are also condition names for more extensive classes, up to the condition name &lt;code&gt;error&lt;/code&gt; which takes in all kinds of errors (but not &lt;code&gt;quit&lt;/code&gt;). Thus, each error has one or more condition names: &lt;code&gt;error&lt;/code&gt;, the error symbol if that is distinct from &lt;code&gt;error&lt;/code&gt;, and perhaps some intermediate classifications.</source>
          <target state="translated">Эти узкие классификации сгруппированы в иерархию более широких классов, называемых &lt;em&gt;состояниями ошибок&lt;/em&gt; , которые идентифицируются &lt;em&gt;именами условий&lt;/em&gt; . Самые узкие такие классы принадлежат самим символам ошибок: каждый символ ошибки также является именем условия. Существуют также имена условий для более обширных классов, вплоть до &lt;code&gt;error&lt;/code&gt; имени условия, которая принимает все виды ошибок (но не &lt;code&gt;quit&lt;/code&gt; ). Таким образом, каждая ошибка имеет одно или несколько имен условий: &lt;code&gt;error&lt;/code&gt; , символ ошибки, если он отличается от &lt;code&gt;error&lt;/code&gt; , и, возможно, некоторые промежуточные классификации.</target>
        </trans-unit>
        <trans-unit id="014e4a097c82195bde9b7c25fe9dd9bf73df7a55" translate="yes" xml:space="preserve">
          <source>These normal hooks are run, respectively, when the mark becomes active and when it becomes inactive. The hook &lt;code&gt;activate-mark-hook&lt;/code&gt; is also run at the end of the command loop if the mark is active and it is possible that the region may have changed.</source>
          <target state="translated">Эти обычные перехватчики запускаются, соответственно, когда метка становится активной и когда она становится неактивной. Ловушка &lt;code&gt;activate-mark-hook&lt;/code&gt; также запускается в конце цикла команд, если метка активна и возможно, что область могла измениться.</target>
        </trans-unit>
        <trans-unit id="2e9f87ff7e3198e668f10966de785d119907aade" translate="yes" xml:space="preserve">
          <source>These options affect the behavior of Edebug:</source>
          <target state="translated">Эти опции влияют на поведение Edebug:</target>
        </trans-unit>
        <trans-unit id="a4f845e8272f1ee4ffc16d323f1859daa1283172" translate="yes" xml:space="preserve">
          <source>These overrides are useful when you want to make some text unaffected by the reordering algorithm, and instead directly control the display order. But they can also be used for malicious purposes, known as &lt;em&gt;phishing&lt;/em&gt;. Specifically, a URL on a Web page or a link in an email message can be manipulated to make its visual appearance unrecognizable, or similar to some popular benign location, while the real location, interpreted by a browser in the logical order, is very different.</source>
          <target state="translated">Эти переопределения полезны, когда вы хотите, чтобы некоторый текст не подвергался влиянию алгоритма переупорядочения, а вместо этого напрямую управляли порядком отображения. Но они также могут использоваться в злонамеренных целях, известных как &lt;em&gt;фишинг&lt;/em&gt; . В частности, URL-адресом на веб-странице или ссылкой в ​​сообщении электронной почты можно манипулировать, чтобы сделать его внешний вид неузнаваемым или похожим на какое-то популярное безопасное местоположение, в то время как реальное местоположение, интерпретируемое браузером в логическом порядке, сильно отличается .</target>
        </trans-unit>
        <trans-unit id="095c879a0e1c874617dc77661a08cd7ebf30f266" translate="yes" xml:space="preserve">
          <source>These parameters are mostly useful for child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) that come without window manager decorations. If necessary, they can be used for undecorated top-level frames as well.</source>
          <target state="translated">Эти параметры в основном полезны для дочерних фреймов (см. &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Дочерние фреймы&lt;/a&gt; ), которые поставляются без оформления оконного менеджера. При необходимости их можно использовать и для недекорированных рам верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="153ef778c6b97967d9f2ce43fda7f854e08c56ba" translate="yes" xml:space="preserve">
          <source>These parameters are used internally for implementing side windows (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;).</source>
          <target state="translated">Эти параметры используются внутри для реализации боковых окон (см. &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Боковые окна&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7903a938448c17a3c92a1961733615528e815829" translate="yes" xml:space="preserve">
          <source>These parameters supply forms of interactions between different frames.</source>
          <target state="translated">Эти параметры обеспечивают формы взаимодействия между различными кадрами.</target>
        </trans-unit>
        <trans-unit id="604caa6b860829abeb4d2d5ad8b8d6949bef07a0" translate="yes" xml:space="preserve">
          <source>These problems will never happen in normal circumstances with installed Emacs files. But they are quite likely to happen with Lisp files that you are changing. The easiest way to prevent these problems is to reload the new compiled file immediately after each recompilation.</source>
          <target state="translated">Эти проблемы никогда не произойдут при нормальных обстоятельствах с установленными файлами Emacs.Но вполне вероятно,что они произойдут с Lisp-файлами,которые вы изменяете.Самый простой способ предотвратить эти проблемы-перезагружать новый скомпилированный файл сразу после каждой перекомпиляции.</target>
        </trans-unit>
        <trans-unit id="74497c2b387c074f0b80666e13f53d25f241ac27" translate="yes" xml:space="preserve">
          <source>These properties are obsolete; please use &lt;code&gt;cursor-sensor-functions&lt;/code&gt; instead.</source>
          <target state="translated">Эти свойства устарели; пожалуйста , используйте &lt;code&gt;cursor-sensor-functions&lt;/code&gt; вместо.</target>
        </trans-unit>
        <trans-unit id="6cc7c4e05f99db3539d2f04a9d301a520f52d552" translate="yes" xml:space="preserve">
          <source>These properties are used to record a customizable variable&amp;rsquo;s standard value, saved value, customized-but-unsaved value, and themed values. Do not set them directly; they are managed by &lt;code&gt;defcustom&lt;/code&gt; and related functions. See &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;.</source>
          <target state="translated">Эти свойства используются для записи стандартного значения настраиваемой переменной, сохраненного значения, настроенного, но несохраненного значения и тематических значений. Не устанавливайте их напрямую; они управляются &lt;code&gt;defcustom&lt;/code&gt; и связанными функциями. См. &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Определения переменных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68a5f034c7853205bde56ac0e877bed5c54aae41" translate="yes" xml:space="preserve">
          <source>These properties are used to record a face&amp;rsquo;s standard, saved, customized, and themed face specs. Do not set them directly; they are managed by &lt;code&gt;defface&lt;/code&gt; and related functions. See &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;.</source>
          <target state="translated">Эти свойства используются для записи стандартных, сохраненных, настроенных и тематических характеристик лица. Не устанавливайте их напрямую; они управляются &lt;code&gt;defface&lt;/code&gt; и связанными функциями. См. &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Определение лиц&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1cf87969ab79defe053b28ccbfbf4fba573ae8e3" translate="yes" xml:space="preserve">
          <source>These render &lt;code&gt;cl-case&lt;/code&gt; unsuitable for strings or compound data structures (e.g., lists or vectors). (&lt;code&gt;cond&lt;/code&gt; doesn&amp;rsquo;t have these limitations, but it has others, see above.)</source>
          <target state="translated">Они делают &lt;code&gt;cl-case&lt;/code&gt; непригодным для строк или составных структур данных (например, списков или векторов). ( &lt;code&gt;cond&lt;/code&gt; не имеет этих ограничений, но у него есть другие, см. выше.)</target>
        </trans-unit>
        <trans-unit id="317f88dc617e3083b4efda6c5e9c655c9f5b336a" translate="yes" xml:space="preserve">
          <source>These results make sense because the binary codes for control-_ and control-W are 11111 and 10111, respectively.</source>
          <target state="translated">Эти результаты имеют смысл,так как двоичные коды для Controll-_и Controll-W составляют 11111 и 10111 соответственно.</target>
        </trans-unit>
        <trans-unit id="ad489d015d653d05e2a1ccfa8abb77e06f2f8a64" translate="yes" xml:space="preserve">
          <source>These results make sense, because the binary code for &amp;lsquo;</source>
          <target state="translated">Эти результаты имеют смысл, потому что двоичный код для '</target>
        </trans-unit>
        <trans-unit id="a4c4dda550da1b321a6d80128f1268ee7812b202" translate="yes" xml:space="preserve">
          <source>These return, respectively, the previous node and the next node of &lt;var&gt;node&lt;/var&gt; in &lt;var&gt;ewoc&lt;/var&gt;.</source>
          <target state="translated">Они возвращают, соответственно, предыдущий узел и следующий узел &lt;var&gt;node&lt;/var&gt; в &lt;var&gt;ewoc&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="739a145c115b98a28b37f057c49f7f8134102375" translate="yes" xml:space="preserve">
          <source>These search functions convert the regular expression to multibyte if the buffer is multibyte; they convert the regular expression to unibyte if the buffer is unibyte. See &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;.</source>
          <target state="translated">Эти функции поиска преобразуют регулярное выражение в многобайтовый, если буфер многобайтовый; они преобразуют регулярное выражение в юнибайт, если буфер юнибайт. См. &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Текстовые представления&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cad6f6a80c908d9567b01aa919faa1349448d0c5" translate="yes" xml:space="preserve">
          <source>These search functions convert the search string to multibyte if the buffer is multibyte; they convert the search string to unibyte if the buffer is unibyte. See &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;.</source>
          <target state="translated">Эти функции поиска преобразуют строку поиска в многобайтовую, если буфер многобайтовый; они преобразуют строку поиска в юнибайт, если буфер юнибайт. См. &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Текстовые представления&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd2b14d5ec156e1364acc616d89bab67278f031d" translate="yes" xml:space="preserve">
          <source>These sequences which start with backslash are also known as &lt;em&gt;escape sequences&lt;/em&gt;, because backslash plays the role of an escape character; this has nothing to do with the character</source>
          <target state="translated">Эти последовательности, начинающиеся с обратной косой черты, также известны как &lt;em&gt;escape-последовательности&lt;/em&gt; , поскольку обратная косая черта играет роль escape-символа; это не имеет ничего общего с характером</target>
        </trans-unit>
        <trans-unit id="456dfa373a289f0f0b4deebb6c8a4d3795bcf6cb" translate="yes" xml:space="preserve">
          <source>These set the &lt;code&gt;:foreground&lt;/code&gt; attribute (or &lt;code&gt;:background&lt;/code&gt; attribute, respectively) of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;color&lt;/var&gt;.</source>
          <target state="translated">Они устанавливают атрибут &lt;code&gt;:foreground&lt;/code&gt; (или атрибут &lt;code&gt;:background&lt;/code&gt; , соответственно) &lt;var&gt;face&lt;/var&gt; в &lt;var&gt;color&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="4361dc475638198651233d489b0c06358bc64f73" translate="yes" xml:space="preserve">
          <source>These specify the text to display before and after a button. Each can be:</source>
          <target state="translated">В них указывается текст для отображения до и после кнопки.Каждая из них может быть:</target>
        </trans-unit>
        <trans-unit id="aae1e62c125521a40620f94052f6c91a214adc3a" translate="yes" xml:space="preserve">
          <source>These text properties affect the behavior of the fill commands. They are used for representing formatted text. See &lt;a href=&quot;filling#Filling&quot;&gt;Filling&lt;/a&gt;, and &lt;a href=&quot;margins#Margins&quot;&gt;Margins&lt;/a&gt;.</source>
          <target state="translated">Эти текстовые свойства влияют на поведение команд заливки. Они используются для представления форматированного текста. См. Раздел &amp;laquo; &lt;a href=&quot;filling#Filling&quot;&gt;Заливка&amp;raquo;&lt;/a&gt; и &amp;laquo; &lt;a href=&quot;margins#Margins&quot;&gt;Поля&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f87d3b575a3c7c8a91b4b2214f3ee45679d4e508" translate="yes" xml:space="preserve">
          <source>These types are the first-class citizens of an internal type system. Since the tag space is limited, all other types are the subtypes of &lt;code&gt;Lisp_Vectorlike&lt;/code&gt;. Vector subtypes are enumerated by &lt;code&gt;enum pvec_type&lt;/code&gt;, and nearly all complex objects like windows, buffers, frames, and processes fall into this category.</source>
          <target state="translated">Эти типы являются первоклассными гражданами внутренней системы типов. Поскольку пространство тегов ограничено, все остальные типы являются подтипами &lt;code&gt;Lisp_Vectorlike&lt;/code&gt; . Подтипы &lt;code&gt;enum pvec_type&lt;/code&gt; перечислены в enum pvec_type , и почти все сложные объекты, такие как окна, буферы, фреймы и процессы, попадают в эту категорию.</target>
        </trans-unit>
        <trans-unit id="45b8c3a592e7f6abf7e293e1c03ad1586a17177b" translate="yes" xml:space="preserve">
          <source>These variables affect newly created frames. They do not normally affect existing frames; however, if you set the mouse color of a frame, that also installs the current value of those two variables. See &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;Font and Color Parameters&lt;/a&gt;.</source>
          <target state="translated">Эти переменные влияют на вновь созданные кадры. Обычно они не влияют на существующие фреймы; однако, если вы установите цвет мыши для рамки, это также установит текущее значение этих двух переменных. См. Раздел &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;Параметры шрифта и цвета&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3bd982161583df9a64b8b6e96576aac88da7ce8" translate="yes" xml:space="preserve">
          <source>These variables are used by users to control what happens when a Lisp program reports a warning.</source>
          <target state="translated">Эти переменные используются пользователями для управления тем,что происходит,когда программа на языке Lisp выдает предупреждение.</target>
        </trans-unit>
        <trans-unit id="1db6b1b9fba288780dcd3afa212e5cf3e56eb6c2" translate="yes" xml:space="preserve">
          <source>These variables are used for detecting and reporting circular and shared structure:</source>
          <target state="translated">Эти переменные используются для обнаружения циркулярной и общей структуры и составления отчетов:</target>
        </trans-unit>
        <trans-unit id="105e44643481b52f29feb563c36e254820e60447" translate="yes" xml:space="preserve">
          <source>These variables control details of how the echo area works.</source>
          <target state="translated">Эти переменные управляют деталями того,как работает область эха.</target>
        </trans-unit>
        <trans-unit id="8264858250c0b5c5b182cf58fd1f9b100b7739a2" translate="yes" xml:space="preserve">
          <source>They occupy one-fourth the space of a vector of the same elements.</source>
          <target state="translated">Они занимают четверть пространства вектора одних и тех же элементов.</target>
        </trans-unit>
        <trans-unit id="96fd86992c2d294dc7c966a9cc379303e0e5acd0" translate="yes" xml:space="preserve">
          <source>Things you should think about when you define a variable.</source>
          <target state="translated">Вещи,о которых следует подумать,когда вы определяете переменную.</target>
        </trans-unit>
        <trans-unit id="85f58635e7a6031c4a0dd6f3081e83750aac35d0" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;cond&lt;/code&gt; expression returns &lt;code&gt;foo&lt;/code&gt; if the value of &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;hack&lt;/code&gt;, and returns the string &lt;code&gt;&quot;default&quot;&lt;/code&gt; otherwise.</source>
          <target state="translated">Это выражение &lt;code&gt;cond&lt;/code&gt; возвращает &lt;code&gt;foo&lt;/code&gt; , если значение &lt;code&gt;a&lt;/code&gt; - &lt;code&gt;hack&lt;/code&gt; , и возвращает строку &lt;code&gt;&quot;default&quot;&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="b703be92a7238d219e5c1003ffb23f6cb975b30b" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;defsubst&lt;/code&gt; returns non-nil if there is a fake header at &lt;var&gt;pos&lt;/var&gt;. A fake header is used if &lt;code&gt;tabulated-list-use-header-line&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; to put the column names at the beginning of the buffer. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;pos&lt;/var&gt; defaults to &lt;code&gt;point-min&lt;/code&gt;.</source>
          <target state="translated">Этот &lt;code&gt;defsubst&lt;/code&gt; возвращает ненулевое значение, если в &lt;var&gt;pos&lt;/var&gt; есть поддельный заголовок . Поддельный заголовок используется, если &lt;code&gt;tabulated-list-use-header-line&lt;/code&gt; равен &lt;code&gt;nil&lt;/code&gt; чтобы поместить имена столбцов в начало буфера. Если он опущен или &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;pos&lt;/var&gt; по умолчанию равен &lt;code&gt;point-min&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48176d2024c8007a4ac5be85e04bd56a7171720e" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;defsubst&lt;/code&gt; returns the ID object from &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if that is a list) or from the list returned by &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if it is a function). If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;pos&lt;/var&gt; defaults to point.</source>
          <target state="translated">Этот &lt;code&gt;defsubst&lt;/code&gt; возвращает объект ID из &lt;code&gt;tabulated-list-entries&lt;/code&gt; (если это список) или из списка, возвращаемого &lt;code&gt;tabulated-list-entries&lt;/code&gt; (если это функция). Если опущено или &lt;code&gt;nil&lt;/code&gt; , &lt;var&gt;pos&lt;/var&gt; по умолчанию указывает на точку.</target>
        </trans-unit>
        <trans-unit id="cb3d98858d13b8b6d93ec3bd144c3be22d5c1298" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;defsubst&lt;/code&gt; returns the entry object from &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if that is a list) or from the list returned by &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if it is a function). This will be a vector for the ID at &lt;var&gt;pos&lt;/var&gt;. If there is no entry at &lt;var&gt;pos&lt;/var&gt;, then the function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Этот &lt;code&gt;defsubst&lt;/code&gt; возвращает объект записи из &lt;code&gt;tabulated-list-entries&lt;/code&gt; (если это список) или из списка, возвращаемого &lt;code&gt;tabulated-list-entries&lt;/code&gt; (если это функция). Это будет вектор для идентификатора в &lt;var&gt;pos&lt;/var&gt; . Если в &lt;var&gt;pos&lt;/var&gt; нет записи , функция возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ec261da340db358d40d23007d994d2a60279eb6" translate="yes" xml:space="preserve">
          <source>This API has mandatory and optional parts.</source>
          <target state="translated">Этот API имеет обязательные и опциональные части.</target>
        </trans-unit>
        <trans-unit id="b7609c40d243bed2533715ddbd3d688727dca73c" translate="yes" xml:space="preserve">
          <source>This abnormal hook exists for the benefit of packages like</source>
          <target state="translated">Этот ненормальный крюк существует для пользы пакетов,таких как</target>
        </trans-unit>
        <trans-unit id="58753480194a35a20eca9121e273f8370cbd4c6b" translate="yes" xml:space="preserve">
          <source>This abnormal hook is a list of functions to call when Emacs needs to display a tooltip. Each function is called with a single argument &lt;var&gt;event&lt;/var&gt; which is a copy of the last mouse movement event. If a function on this list actually displays the tooltip, it should return non-&lt;code&gt;nil&lt;/code&gt;, and then the rest of the functions will not be called. The default value of this variable is a single function &lt;code&gt;tooltip-help-tips&lt;/code&gt;.</source>
          <target state="translated">Этот ненормальный перехватчик представляет собой список функций, которые следует вызывать, когда Emacs должен отобразить всплывающую подсказку. Каждая функция вызывается с &lt;var&gt;event&lt;/var&gt; с одним аргументом, которое является копией последнего события движения мыши. Если функция в этом списке действительно отображает всплывающую подсказку, она должна возвращать значение, отличное от &lt;code&gt;nil&lt;/code&gt; , и тогда остальные функции не будут вызываться. Значение по умолчанию для этой переменной - одна функция &lt;code&gt;tooltip-help-tips&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79fc999f2d6f734a8d2f583e4c9251e7567de0ff" translate="yes" xml:space="preserve">
          <source>This abnormal hook is run after loading a file. Each function in the hook is called with a single argument, the absolute filename of the file that was just loaded.</source>
          <target state="translated">Этот ненормальный крюк запускается после загрузки файла.Каждая функция на крючке вызывается с одним аргументом,абсолютным именем файла,который только что был загружен.</target>
        </trans-unit>
        <trans-unit id="9e18cb58ef8cb625a4bc43d899fbc09ba5220975" translate="yes" xml:space="preserve">
          <source>This abnormal hook is run by the syntax parsing code prior to calling &lt;code&gt;syntax-propertize-function&lt;/code&gt;. Its role is to help locate safe starting and ending buffer positions for passing to &lt;code&gt;syntax-propertize-function&lt;/code&gt;. For example, a major mode can add a function to this hook to identify multi-line syntactic constructs, and ensure that the boundaries do not fall in the middle of one.</source>
          <target state="translated">Этот ненормальный перехватчик запускается кодом синтаксического анализа перед вызовом функции- &lt;code&gt;syntax-propertize-function&lt;/code&gt; . Его роль состоит в том, чтобы помочь найти безопасные начальные и конечные позиции буфера для перехода к функции- &lt;code&gt;syntax-propertize-function&lt;/code&gt; . Например, основной режим может добавить к этому хуку функцию для идентификации многострочных синтаксических конструкций и обеспечения того, чтобы границы не попадали в середину одной.</target>
        </trans-unit>
        <trans-unit id="d6f96d5f610333f2d917ab647cc390f66c9defed" translate="yes" xml:space="preserve">
          <source>This abnormal hook permits a derived mode to supply a password for the underlying command interpreter without prompting the user.</source>
          <target state="translated">Этот ненормальный крючок позволяет производному режиму задавать пароль для базового командного интерпретатора,не запрашивая его у пользователя.</target>
        </trans-unit>
        <trans-unit id="6f123b63749113b196200986d7076efd408e9046" translate="yes" xml:space="preserve">
          <source>This acts like a call to &lt;code&gt;set-advertised-calling-convention&lt;/code&gt; (see &lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;Obsolete Functions&lt;/a&gt;); &lt;var&gt;signature&lt;/var&gt; specifies the correct argument list for calling the function or macro, and &lt;var&gt;when&lt;/var&gt; should be a string indicating when the old argument list was first made obsolete.</source>
          <target state="translated">Это действует как вызов &lt;code&gt;set-advertised-calling-convention&lt;/code&gt; о вызове с объявлением о вызове (см. &lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;Устаревшие функции&lt;/a&gt; ); &lt;var&gt;signature&lt;/var&gt; указывает правильный список аргументов для вызова функции или макроса, и &lt;var&gt;when&lt;/var&gt; должна быть строка, указывающая, когда старый список аргументов был впервые сделан устаревшим.</target>
        </trans-unit>
        <trans-unit id="3efa63614ced0a11b3c72a7ee627168a41a3f6a6" translate="yes" xml:space="preserve">
          <source>This adds &lt;code&gt;comint&lt;/code&gt; to the global &lt;code&gt;features&lt;/code&gt; list, so that &lt;code&gt;(require 'comint)&lt;/code&gt; will henceforth know that nothing needs to be done.</source>
          <target state="translated">Это добавляет &lt;code&gt;comint&lt;/code&gt; в список глобальных &lt;code&gt;features&lt;/code&gt; , так что &lt;code&gt;(require 'comint)&lt;/code&gt; отныне будет знать, что ничего не нужно делать.</target>
        </trans-unit>
        <trans-unit id="43afc452dbf0605822321a1093e4e4cd228c755d" translate="yes" xml:space="preserve">
          <source>This adds a shadow rectangle around the image. The value, &lt;var&gt;relief&lt;/var&gt;, specifies the width of the shadow lines, in pixels. If &lt;var&gt;relief&lt;/var&gt; is negative, shadows are drawn so that the image appears as a pressed button; otherwise, it appears as an unpressed button.</source>
          <target state="translated">Это добавляет теневой прямоугольник вокруг изображения. Значение &lt;var&gt;relief&lt;/var&gt; определяет ширину линий тени в пикселях. Если &lt;var&gt;relief&lt;/var&gt; отрицательный, тени рисуются так, что изображение выглядит как нажатая кнопка; в противном случае он отображается как нажатая кнопка.</target>
        </trans-unit>
        <trans-unit id="1a801bffd8f04ef31dc913229d1561a41fc7042e" translate="yes" xml:space="preserve">
          <source>This alist contains connection criteria and their assigned profile names. The function &lt;code&gt;connection-local-set-profiles&lt;/code&gt; updates this list.</source>
          <target state="translated">Этот список содержит критерии подключения и присвоенные им имена профилей. Функция &lt;code&gt;connection-local-set-profiles&lt;/code&gt; обновляет этот список.</target>
        </trans-unit>
        <trans-unit id="4f4502b00e41d7ca380ee4cfc50445848b782901" translate="yes" xml:space="preserve">
          <source>This alist holds directory names, their assigned class names, and modification times of the associated directory local variables file (if there is one). The function &lt;code&gt;dir-locals-set-directory-class&lt;/code&gt; updates this list.</source>
          <target state="translated">Этот список содержит имена каталогов, присвоенные им имена классов и время модификации связанного файла локальных переменных каталога (если он есть). Функция &lt;code&gt;dir-locals-set-directory-class&lt;/code&gt; обновляет этот список.</target>
        </trans-unit>
        <trans-unit id="a8ab290d6f51f915395187d421755332681e880d" translate="yes" xml:space="preserve">
          <source>This alist holds the class symbols and the associated variable settings. It is updated by &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt;.</source>
          <target state="translated">Этот список содержит символы классов и соответствующие настройки переменных. Он обновляется &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc82ba461075944d297062d4c28cc81706a37309" translate="yes" xml:space="preserve">
          <source>This alist holds the connection profile symbols and the associated variable settings. It is updated by &lt;code&gt;connection-local-set-profile-variables&lt;/code&gt;.</source>
          <target state="translated">Этот список содержит символы профиля подключения и соответствующие настройки переменных. Он обновляется &lt;code&gt;connection-local-set-profile-variables&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8171e356e7dd4f8499ba5a1da391cc53d0f4bd00" translate="yes" xml:space="preserve">
          <source>This alist provides a mapping for the versions of Emacs that are associated with versions of a package listed in the &lt;code&gt;:package-version&lt;/code&gt; keyword. Its elements are:</source>
          <target state="translated">Этот список обеспечивает отображение для версий Emacs, которые связаны с версиями пакета, перечисленными в ключевом слове &lt;code&gt;:package-version&lt;/code&gt; . Его элементами являются:</target>
        </trans-unit>
        <trans-unit id="06592cb7cf21d4fcaa0dee8cb5604b4348587185" translate="yes" xml:space="preserve">
          <source>This allows you to add more methods, distinguished by &lt;var&gt;string&lt;/var&gt;, for the same specializers and qualifiers.</source>
          <target state="translated">Это позволяет вам добавлять больше методов, различаемых &lt;var&gt;string&lt;/var&gt; , для тех же специализаций и квалификаторов.</target>
        </trans-unit>
        <trans-unit id="c16f689854eb14d66c247d3bf3249725e2f016e1" translate="yes" xml:space="preserve">
          <source>This allows you to request an exact string match or search when calling a function that wants a regular expression.</source>
          <target state="translated">Это позволяет запросить точное соответствие строки или выполнить поиск при вызове функции,которая хочет получить регулярное выражение.</target>
        </trans-unit>
        <trans-unit id="47fb6ce0a178b4dc9378256a543571c1df9a44d5" translate="yes" xml:space="preserve">
          <source>This alternative can match any Lisp value, but if the user chooses this alternative, that selects the value &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">Эта альтернатива может соответствовать любому значению Lisp, но если пользователь выбирает эту альтернативу, он выбирает значение &lt;var&gt;value&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="112333b5519a3aed32902f3bc5970788aac3b12d" translate="yes" xml:space="preserve">
          <source>This appears in the customization buffer as a checklist, so that each of &lt;var&gt;types&lt;/var&gt; may have either one corresponding element or none. It is not possible to specify two different elements that match the same one of &lt;var&gt;types&lt;/var&gt;. For example, &lt;code&gt;(set integer symbol)&lt;/code&gt; allows one integer and/or one symbol in the list; it does not allow multiple integers or multiple symbols. As a result, it is rare to use nonspecific types such as &lt;code&gt;integer&lt;/code&gt; in a &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">Это отображается в буфере настройки как контрольный список, так что каждый из &lt;var&gt;types&lt;/var&gt; может иметь либо один соответствующий элемент, либо ни одного. Невозможно указать два разных элемента, которые соответствуют одному и тому же &lt;var&gt;types&lt;/var&gt; . Например, &lt;code&gt;(set integer symbol)&lt;/code&gt; разрешает одно целое число и / или один символ в списке; он не позволяет использовать несколько целых чисел или несколько символов. В результате в &lt;code&gt;set&lt;/code&gt; редко используются неспецифические типы, такие как &lt;code&gt;integer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b36ce3a8c3a8ed5189ac8face0c668655a5e5f4c" translate="yes" xml:space="preserve">
          <source>This associates an image map of &lt;em&gt;hot spots&lt;/em&gt; with this image.</source>
          <target state="translated">Это связывает изображение карты &lt;em&gt;горячих точек&lt;/em&gt; с этим изображением.</target>
        </trans-unit>
        <trans-unit id="03693e568733886d4ead4bbfaae6a08b9fdd7df3" translate="yes" xml:space="preserve">
          <source>This auxiliary method will run &lt;em&gt;instead&lt;/em&gt; of the primary method. The most specific of such methods will be run before any other method. Such methods normally use &lt;code&gt;cl-call-next-method&lt;/code&gt;, described below, to invoke the other auxiliary or primary methods.</source>
          <target state="translated">Этот вспомогательный метод будет запущен &lt;em&gt;вместо&lt;/em&gt; основного. Самый конкретный из таких методов будет запущен перед любым другим методом. Такие методы обычно используют &lt;code&gt;cl-call-next-method&lt;/code&gt; , описанный ниже, для вызова других вспомогательных или основных методов.</target>
        </trans-unit>
        <trans-unit id="db147a312f33833d2fd860cd24397cb31dbf000a" translate="yes" xml:space="preserve">
          <source>This auxiliary method will run after the primary method. More accurately, all such methods will run after the primary, in the most-specific-last order.</source>
          <target state="translated">Этот вспомогательный метод будет работать после основного.Точнее,все такие методы будут выполняться после первичного,в наиболее специфическом-последнем порядке.</target>
        </trans-unit>
        <trans-unit id="055c47046a5c43dada4f7a4d408ec55ea04beec6" translate="yes" xml:space="preserve">
          <source>This auxiliary method will run before the primary method. More accurately, all the &lt;code&gt;:before&lt;/code&gt; methods will run before the primary, in the most-specific-first order.</source>
          <target state="translated">Этот вспомогательный метод будет запускаться перед основным методом. Точнее, все методы &lt;code&gt;:before&lt;/code&gt; будут выполняться перед первичными в порядке наиболее специфичного - первого.</target>
        </trans-unit>
        <trans-unit id="bee7bb3a89efc2fe0ae6cd1401c2134693f080dd" translate="yes" xml:space="preserve">
          <source>This behaves correctly whether or not &lt;code&gt;foo-mode&lt;/code&gt; was already enabled, since the &lt;code&gt;foo-mode&lt;/code&gt; mode command unconditionally enables the minor mode when it is called from Lisp with no argument. Disabling a minor mode in a mode hook is a little uglier:</source>
          <target state="translated">Это работает правильно независимо от того, был ли уже включен &lt;code&gt;foo-mode&lt;/code&gt; , поскольку команда &lt;code&gt;foo-mode&lt;/code&gt; mode безусловно включает второстепенный режим, когда он вызывается из Лиспа без аргументов. Отключение второстепенного режима в ловушке режима немного уродливее:</target>
        </trans-unit>
        <trans-unit id="39ca8e6d40bb48a402fdef66a4a6b1b4a21a323e" translate="yes" xml:space="preserve">
          <source>This behaves like &lt;code&gt;scroll-down&lt;/code&gt;, except that if the selected window cannot be scrolled any further and the value of the variable &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, it tries to move to the beginning of the buffer instead. If point is already there, it signals an error.</source>
          <target state="translated">Это ведет себя как &lt;code&gt;scroll-down&lt;/code&gt; , за исключением того, что если выбранное окно не может быть прокручено дальше, а значение переменной &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; равно &lt;code&gt;t&lt;/code&gt; , вместо этого оно пытается перейти к началу буфера. Если точка уже есть, это сигнализирует об ошибке.</target>
        </trans-unit>
        <trans-unit id="7f36ad1f78e72aecbe8b2c0b04e86ce649b99772" translate="yes" xml:space="preserve">
          <source>This behaves like &lt;code&gt;scroll-up&lt;/code&gt;, except that if the selected window cannot be scrolled any further and the value of the variable &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, it tries to move to the end of the buffer instead. If point is already there, it signals an error.</source>
          <target state="translated">Это ведет себя как &lt;code&gt;scroll-up&lt;/code&gt; , за исключением того, что если выбранное окно не может быть прокручено дальше, а значение переменной &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; равно &lt;code&gt;t&lt;/code&gt; , вместо этого оно пытается переместиться в конец буфера. Если точка уже есть, это сигнализирует об ошибке.</target>
        </trans-unit>
        <trans-unit id="1ac98d0eafcb4e384476c40a7a906cd36426c915" translate="yes" xml:space="preserve">
          <source>This behavior is system-dependent; e.g., punctuation and whitespace are never ignored on Cygwin, regardless of locale.</source>
          <target state="translated">Это поведение зависит от системы;например,пунктуация и пробелы никогда не игнорируются на Cygwin,независимо от локали.</target>
        </trans-unit>
        <trans-unit id="854a75c9a12be07e055ae41e6e28be84d26fe4fb" translate="yes" xml:space="preserve">
          <source>This buffer-local variable contains the mode line information on process status in modes used for communicating with subprocesses. It is displayed immediately following the major mode name, with no intervening space. For example, its value in the</source>
          <target state="translated">Эта буферно-локальная переменная содержит строчную информацию о состоянии процесса в режимах,используемых для связи с подпроцессами.Она отображается непосредственно за именем основного режима,без пробела.Например,ее значение в</target>
        </trans-unit>
        <trans-unit id="26971293cec1b62350ce5f2ec93656e3fec17bfe" translate="yes" xml:space="preserve">
          <source>This buffer-local variable contains the name of the file being visited in the current buffer, or &lt;code&gt;nil&lt;/code&gt; if it is not visiting a file. It is a permanent local variable, unaffected by &lt;code&gt;kill-all-local-variables&lt;/code&gt;.</source>
          <target state="translated">Эта локальная в буфере переменная содержит имя файла, посещаемого в текущем буфере, или &lt;code&gt;nil&lt;/code&gt; , если он не обращается к файлу. Это постоянная локальная переменная, на которую не влияет &lt;code&gt;kill-all-local-variables&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b4f48a9402ce9021fdac6a00491950abfac8906" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how control characters are displayed. If it is non-&lt;code&gt;nil&lt;/code&gt;, they are displayed as a caret followed by the character: &amp;lsquo;</source>
          <target state="translated">Эта локальная в буфере переменная управляет отображением управляющих символов. Если он не равен &lt;code&gt;nil&lt;/code&gt; , они отображаются как курсор, за которым следует символ: '</target>
        </trans-unit>
        <trans-unit id="b82206ceced11bfe56f1845c4f3c481cd88baf44" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how the buffer boundaries and window scrolling are indicated in the window fringes.</source>
          <target state="translated">Эта переменная типа &quot;буфер-локал&quot; управляет тем,как отображаются границы буфера и прокрутка окна на его полосах.</target>
        </trans-unit>
        <trans-unit id="d47a47cdae3010d7867a8d17862f4b478496c7b9" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how the cursor looks in a selected window showing the buffer. If its value is &lt;code&gt;t&lt;/code&gt;, that means to use the cursor specified by the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter. Otherwise, the value should be one of the cursor types listed above, and it overrides the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</source>
          <target state="translated">Эта локальная в буфере переменная управляет тем, как курсор выглядит в выбранном окне, показывающем буфер. Если его значение - &lt;code&gt;t&lt;/code&gt; , это означает использование курсора, указанного в параметре рамки &lt;code&gt;cursor-type&lt;/code&gt; . В противном случае значение должно быть одного из перечисленных выше типов курсора, и оно переопределяет параметр кадра &lt;code&gt;cursor-type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1ca4aa7c82d737697dd8d0d960d00652e403afa" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how the cursor looks in a window that is not selected. It supports the same values as the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter; also, &lt;code&gt;nil&lt;/code&gt; means don&amp;rsquo;t display a cursor in nonselected windows, and &lt;code&gt;t&lt;/code&gt; (the default) means use a standard modification of the usual cursor type (solid box becomes hollow box, and bar becomes a narrower bar).</source>
          <target state="translated">Эта локальная в буфере переменная управляет тем, как курсор выглядит в окне, которое не выбрано. Он поддерживает те же значения, что и параметр кадра &lt;code&gt;cursor-type&lt;/code&gt; ; Кроме того, &lt;code&gt;nil&lt;/code&gt; означает, что курсор не отображается в невыделенных окнах, а &lt;code&gt;t&lt;/code&gt; (по умолчанию) означает использование стандартной модификации обычного типа курсора (сплошной прямоугольник становится пустым, а полоса становится более узкой полосой).</target>
        </trans-unit>
        <trans-unit id="0dd7b89ebde5a492e44d747fc9dd3f1d69d5200e" translate="yes" xml:space="preserve">
          <source>This buffer-local variable determines whether searches should ignore case. If the variable is &lt;code&gt;nil&lt;/code&gt; they do not ignore case; otherwise (and by default) they do ignore case.</source>
          <target state="translated">Эта локальная в буфере переменная определяет, должен ли поиск игнорировать регистр. Если переменная равна &lt;code&gt;nil&lt;/code&gt; , регистр не игнорируется; в противном случае (и по умолчанию) регистр игнорируется.</target>
        </trans-unit>
        <trans-unit id="a8e930f5d382fe096fe2bc1869a2652b42c52937" translate="yes" xml:space="preserve">
          <source>This buffer-local variable enables selective display. This means that lines, or portions of lines, may be made hidden.</source>
          <target state="translated">Эта буферная локальная переменная позволяет выборочно отображать данные.Это означает,что строки или части строк могут быть сделаны скрытыми.</target>
        </trans-unit>
        <trans-unit id="6ba2f1b5a0e175e95a9ac3488fc6f3ef00d32ac1" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the &amp;ldquo;pretty&amp;rdquo; name of the current buffer&amp;rsquo;s major mode. Each major mode should set this variable so that the mode name will appear in the mode line. The value does not have to be a string, but can use any of the data types valid in a mode-line construct (see &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Mode Line Data&lt;/a&gt;). To compute the string that will identify the mode name in the mode line, use &lt;code&gt;format-mode-line&lt;/code&gt; (see &lt;a href=&quot;emulating-mode-line#Emulating-Mode-Line&quot;&gt;Emulating Mode Line&lt;/a&gt;).</source>
          <target state="translated">Эта локальная в буфере переменная содержит &amp;laquo;красивое&amp;raquo; имя основного режима текущего буфера. Каждый основной режим должен устанавливать эту переменную, чтобы имя режима отображалось в строке режима. Значение не обязательно должно быть строкой, но может использовать любой из типов данных, допустимых в конструкции строки режима (см. &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Данные строки режима&lt;/a&gt; ). Чтобы вычислить строку, которая будет определять имя режима в строке режима, используйте &lt;code&gt;format-mode-line&lt;/code&gt; (см. &lt;a href=&quot;emulating-mode-line#Emulating-Mode-Line&quot;&gt;Строка режима эмуляции&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4e124125cb63da0d14822f14f50cd5c731f1bc04" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the abbreviated truename of the file visited in the current buffer, or &lt;code&gt;nil&lt;/code&gt; if no file is visited. It is a permanent local, unaffected by &lt;code&gt;kill-all-local-variables&lt;/code&gt;. See &lt;a href=&quot;truenames#Truenames&quot;&gt;Truenames&lt;/a&gt;, and &lt;a href=&quot;directory-names#abbreviate_002dfile_002dname&quot;&gt;abbreviate-file-name&lt;/a&gt;.</source>
          <target state="translated">Эта локальная в буфере переменная содержит сокращенное истинное имя файла, посещенного в текущем буфере, или &lt;code&gt;nil&lt;/code&gt; если ни один файл не посещался. Это постоянная локальная &lt;code&gt;kill-all-local-variables&lt;/code&gt; , на которую не влияют kill-all-local-variables . См. &lt;a href=&quot;truenames#Truenames&quot;&gt;Truenames&lt;/a&gt; и &lt;a href=&quot;directory-names#abbreviate_002dfile_002dname&quot;&gt;сокращенное имя-файла&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b844703a84e21272992606a4863c03e4e7e789d" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the alist of file-local variable settings. Each element of the alist is of the form &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;var&lt;/var&gt; is a symbol of the local variable and &lt;var&gt;value&lt;/var&gt; is its value. When Emacs visits a file, it first collects all the file-local variables into this alist, and then the &lt;code&gt;hack-local-variables&lt;/code&gt; function applies them one by one.</source>
          <target state="translated">Эта локальная в буфере переменная содержит список настроек локальной переменной файла. Каждый элемент списка имеет форму &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; , где &lt;var&gt;var&lt;/var&gt; - это символ локальной переменной, а &lt;var&gt;value&lt;/var&gt; - ее значение. Когда Emacs посещает файл, он сначала собирает все локальные переменные файла в этот список, а затем функция &lt;code&gt;hack-local-variables&lt;/code&gt; применяет их одну за другой.</target>
        </trans-unit>
        <trans-unit id="5fc5aab80adcb832f12f4a45e3b6e909ebe80df5" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the file number and directory device number of the file visited in the current buffer, or &lt;code&gt;nil&lt;/code&gt; if no file or a nonexistent file is visited. It is a permanent local, unaffected by &lt;code&gt;kill-all-local-variables&lt;/code&gt;.</source>
          <target state="translated">Эта локальная в буфере переменная содержит номер файла и номер устройства каталога для файла, посещенного в текущем буфере, или &lt;code&gt;nil&lt;/code&gt; если не посещается ни один файл или несуществующий файл. Это постоянная локальная &lt;code&gt;kill-all-local-variables&lt;/code&gt; , на которую не влияют kill-all-local-variables .</target>
        </trans-unit>
        <trans-unit id="a451d75ee2557e01f0400b09d2af9045e48761c6" translate="yes" xml:space="preserve">
          <source>This buffer-local variable is either &lt;code&gt;nil&lt;/code&gt; or a function for Font Lock mode to call to determine the region to scan and fontify.</source>
          <target state="translated">Эта локальная в буфере переменная имеет значение либо &lt;code&gt;nil&lt;/code&gt; , либо функция для вызова режима Font Lock для определения области для сканирования и фонирования.</target>
        </trans-unit>
        <trans-unit id="c4881b1a5764ec2cc333276f7885b261fa887500" translate="yes" xml:space="preserve">
          <source>This buffer-local variable is the name of the file used for auto-saving the current buffer. It is &lt;code&gt;nil&lt;/code&gt; if the buffer should not be auto-saved.</source>
          <target state="translated">Эта локальная для буфера переменная - это имя файла, используемого для автосохранения текущего буфера. Это &lt;code&gt;nil&lt;/code&gt; если буфер не должен сохраняться автоматически.</target>
        </trans-unit>
        <trans-unit id="92e1c1c14e58f4755d743d128bbd4758cf2daf8e" translate="yes" xml:space="preserve">
          <source>This buffer-local variable records the coding system used for saving the buffer and for writing part of the buffer with &lt;code&gt;write-region&lt;/code&gt;. If the text to be written cannot be safely encoded using the coding system specified by this variable, these operations select an alternative encoding by calling the function &lt;code&gt;select-safe-coding-system&lt;/code&gt; (see &lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;User-Chosen Coding Systems&lt;/a&gt;). If selecting a different encoding requires to ask the user to specify a coding system, &lt;code&gt;buffer-file-coding-system&lt;/code&gt; is updated to the newly selected coding system.</source>
          <target state="translated">Эта локальная переменная буфера записывает систему кодирования, используемую для сохранения буфера и для записи части буфера с &lt;code&gt;write-region&lt;/code&gt; . Если текст, который должен быть записан, не может быть безопасно закодирован с использованием системы кодирования, указанной в этой переменной, эти операции выбирают альтернативную кодировку, вызывая функцию &lt;code&gt;select-safe-coding-system&lt;/code&gt; (см. &lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;Системы кодирования, выбранные пользователем&lt;/a&gt; ). Если для выбора другой кодировки требуется попросить пользователя указать систему кодирования, система кодирования- &lt;code&gt;buffer-file-coding-system&lt;/code&gt; обновляется до вновь выбранной системы кодирования.</target>
        </trans-unit>
        <trans-unit id="17efdfc6682eda1e0603a92ff93b7b0758219f13" translate="yes" xml:space="preserve">
          <source>This buffer-local variable records the number of times a buffer has been displayed in a window. It is incremented each time &lt;code&gt;set-window-buffer&lt;/code&gt; is called for the buffer.</source>
          <target state="translated">Эта локальная для буфера переменная записывает, сколько раз буфер отображался в окне. Он увеличивается каждый раз, когда &lt;code&gt;set-window-buffer&lt;/code&gt; вызывается set-window- buffer.</target>
        </trans-unit>
        <trans-unit id="490c47d457b534b7dc5f22d93a13a9aa33bae8cf" translate="yes" xml:space="preserve">
          <source>This buffer-local variable records the time at which a buffer was last displayed in a window. The value is &lt;code&gt;nil&lt;/code&gt; if the buffer has never been displayed. It is updated each time &lt;code&gt;set-window-buffer&lt;/code&gt; is called for the buffer, with the value returned by &lt;code&gt;current-time&lt;/code&gt; (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">Эта локальная для буфера переменная записывает время последнего отображения буфера в окне. Значение равно &lt;code&gt;nil&lt;/code&gt; если буфер никогда не отображался. Он обновляется каждый раз, когда &lt;code&gt;set-window-buffer&lt;/code&gt; вызывается для буфера, со значением, возвращаемым &lt;code&gt;current-time&lt;/code&gt; (см. &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Время дня&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a8f2327684accfcd211b2b72beee01fea76508f1" translate="yes" xml:space="preserve">
          <source>This buffer-local variable says whether this buffer&amp;rsquo;s file has been backed up on account of this buffer. If it is non-&lt;code&gt;nil&lt;/code&gt;, the backup file has been written. Otherwise, the file should be backed up when it is next saved (if backups are enabled). This is a permanent local; &lt;code&gt;kill-all-local-variables&lt;/code&gt; does not alter it.</source>
          <target state="translated">Эта локальная в буфере переменная сообщает, было ли выполнено резервное копирование файла этого буфера для этого буфера. Если он не равен &lt;code&gt;nil&lt;/code&gt; , файл резервной копии был записан. В противном случае при следующем сохранении файла следует создать резервную копию (если резервное копирование включено). Это постоянный местный житель; &lt;code&gt;kill-all-local-variables&lt;/code&gt; не меняет его.</target>
        </trans-unit>
        <trans-unit id="a6afe8a14ae8e8b156dda8ff2db27360c5718f45" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies a string to display in a buffer listing where the visited file name would go, for buffers that don&amp;rsquo;t have a visited file name. Dired buffers use this variable.</source>
          <target state="translated">Эта локальная для буфера переменная определяет строку, отображаемую в списке буферов, куда будет помещено имя посещенного файла для буферов, у которых нет имени посещенного файла. Буферы Dired используют эту переменную.</target>
        </trans-unit>
        <trans-unit id="33f15a604b26fdc36df67e09f9ee034fbd85e8f8" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the entries displayed in the Tabulated List buffer. Its value should be either a list, or a function.</source>
          <target state="translated">Эта буферная локальная переменная определяет записи,отображаемые в буфере Tabulated List.Ее значение должно быть либо списком,либо функцией.</target>
        </trans-unit>
        <trans-unit id="1f21c98e32a9f3b76b68fe2c0ec081e8dc6806ef" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the format of the Tabulated List data. Its value should be a vector. Each element of the vector represents a data column, and should be a list &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;
&lt;var&gt;width&lt;/var&gt; &lt;var&gt;sort&lt;/var&gt;)&lt;/code&gt;, where</source>
          <target state="translated">Эта локальная в буфере переменная определяет формат данных табличного списка. Его значение должно быть вектором. Каждый элемент вектора представляет собой столбец данных и должен быть списком &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;width&lt;/var&gt; &lt;var&gt;sort&lt;/var&gt;)&lt;/code&gt; , где</target>
        </trans-unit>
        <trans-unit id="7d93991750b7ab5c35f32d42a2ffeee9b4c05c0b" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the mapping from logical fringe indicators to the actual bitmaps displayed in the window fringes. The value is an alist of elements &lt;code&gt;(&lt;var&gt;indicator&lt;/var&gt;
. &lt;var&gt;bitmaps&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;indicator&lt;/var&gt; specifies a logical indicator type and &lt;var&gt;bitmaps&lt;/var&gt; specifies the fringe bitmaps to use for that indicator.</source>
          <target state="translated">Эта локальная в буфере переменная определяет отображение логических индикаторов краев на фактические растровые изображения, отображаемые в краях окна. Значение представляет собой список элементов &lt;code&gt;(&lt;var&gt;indicator&lt;/var&gt; . &lt;var&gt;bitmaps&lt;/var&gt;)&lt;/code&gt; , где &lt;var&gt;indicator&lt;/var&gt; указывает тип логического индикатора, а &lt;var&gt;bitmaps&lt;/var&gt; задают граничные битовые карты, используемые для этого индикатора.</target>
        </trans-unit>
        <trans-unit id="95f79b46eda8b35210d2e89e82a7e8d8ef12856c" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the maximum width of filled lines. Its value should be an integer, which is a number of columns. All the filling, justification, and centering commands are affected by this variable, including Auto Fill mode (see &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;).</source>
          <target state="translated">Эта локальная в буфере переменная определяет максимальную ширину линий с заливкой. Его значение должно быть целым числом, которое представляет собой количество столбцов. Эта переменная влияет на все команды заливки, выравнивания и центрирования, включая режим автозаполнения (см. &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Автозаполнение&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f8f2592db81aaca5fc86b5802b4f2f8b03f39872" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies whether the buffer is read-only. The buffer is read-only if this variable is non-&lt;code&gt;nil&lt;/code&gt;. However, characters that have the &lt;code&gt;inhibit-read-only&lt;/code&gt; text property can still be modified. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;inhibit-read-only&lt;/a&gt;.</source>
          <target state="translated">Эта локальная для буфера переменная определяет, доступен ли буфер только для чтения. Буфер доступен только для чтения, если значение этой переменной не равно &lt;code&gt;nil&lt;/code&gt; . Однако символы с текстовым свойством &lt;code&gt;inhibit-read-only&lt;/code&gt; все еще можно изменить. См. &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Запрет только для чтения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ba4e4c7bb2e6beb986d7edbdf9f9f73ca6bc6ef6" translate="yes" xml:space="preserve">
          <source>This buffer-local variable&amp;rsquo;s value is the undo list of the current buffer. A value of &lt;code&gt;t&lt;/code&gt; disables the recording of undo information.</source>
          <target state="translated">Значение этой локальной переменной буфера является списком отмены текущего буфера. Значение &lt;code&gt;t&lt;/code&gt; отключает запись информации об отмене.</target>
        </trans-unit>
        <trans-unit id="0e00182350e8c8a67e59796df018436e5b1d317d" translate="yes" xml:space="preserve">
          <source>This buffer-local variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a string of text that appears at the beginning of normal text lines and should be disregarded when filling them. Any line that fails to start with the fill prefix is considered the start of a paragraph; so is any line that starts with the fill prefix followed by additional whitespace. Lines that start with the fill prefix but no additional whitespace are ordinary text lines that can be filled together. The resulting filled lines also start with the fill prefix.</source>
          <target state="translated">Эта локальная в буфере переменная, если она не &lt;code&gt;nil&lt;/code&gt; , указывает строку текста, которая появляется в начале обычных текстовых строк и должна игнорироваться при их заполнении. Любая строка, которая не начинается с префикса заполнения, считается началом абзаца; то же самое можно сказать о любой строке, которая начинается с префикса заполнения, за которым следует дополнительный пробел. Строки, которые начинаются с префикса заполнения, но без дополнительных пробелов, являются обычными текстовыми строками, которые можно заполнять вместе. Результирующие закрашенные линии также начинаются с префикса заливки.</target>
        </trans-unit>
        <trans-unit id="1f12b832fb97ab9906c39f3f82fb2c33f026453d" translate="yes" xml:space="preserve">
          <source>This buffer-local variable, if set to a non-&lt;code&gt;nil&lt;/code&gt; value, makes &lt;code&gt;save-buffer&lt;/code&gt; behave as if the buffer were visiting its file literally, i.e., without conversions of any kind. The command &lt;code&gt;find-file-literally&lt;/code&gt; sets this variable&amp;rsquo;s local value, but other equivalent functions and commands can do that as well, e.g., to avoid automatic addition of a newline at the end of the file. This variable is permanent local, so it is unaffected by changes of major modes.</source>
          <target state="translated">Эта локальная для буфера переменная, если установлена ​​в значение, отличное от &lt;code&gt;nil&lt;/code&gt; , заставляет &lt;code&gt;save-buffer&lt;/code&gt; вести себя так, как если бы буфер посещал свой файл буквально, то есть без каких-либо преобразований. Команда &lt;code&gt;find-file-literally&lt;/code&gt; устанавливает локальное значение этой переменной, но другие эквивалентные функции и команды также могут делать это, например, чтобы избежать автоматического добавления новой строки в конец файла. Эта переменная является постоянной локальной, поэтому на нее не влияют изменения основных режимов.</target>
        </trans-unit>
        <trans-unit id="cf2cad6b6d3bf4768a93f4a38fbba84aa555a104" translate="yes" xml:space="preserve">
          <source>This built-in variable is the keymap used as the minibuffer local keymap in the function &lt;code&gt;read-no-blanks-input&lt;/code&gt;. By default, it makes the following bindings, in addition to those of &lt;code&gt;minibuffer-local-map&lt;/code&gt;:</source>
          <target state="translated">Эта встроенная переменная - это раскладка клавиатуры, используемая как локальная раскладка минибуфера в функции &lt;code&gt;read-no-blanks-input&lt;/code&gt; . По умолчанию он делает следующие привязки в дополнение к привязкам &lt;code&gt;minibuffer-local-map&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8723bd0b8c12c1c24f9d8e83b7ed5a4f8794b456" translate="yes" xml:space="preserve">
          <source>This call evaluates the body of the lambda expression with the variable &lt;code&gt;a&lt;/code&gt; bound to 1, &lt;code&gt;b&lt;/code&gt; bound to 2, and &lt;code&gt;c&lt;/code&gt; bound to 3. Evaluation of the body adds these three numbers, producing the result 6; therefore, this call to the function returns the value 6.</source>
          <target state="translated">Этот вызов оценивает тело лямбда-выражения с переменной &lt;code&gt;a&lt;/code&gt; , привязанной к 1, &lt;code&gt;b&lt;/code&gt; , привязанной к 2, и &lt;code&gt;c&lt;/code&gt; , привязанной к 3. При вычислении тела эти три числа складываются, давая результат 6; следовательно, этот вызов функции возвращает значение 6.</target>
        </trans-unit>
        <trans-unit id="7df938cb4e7a1af5452ae3a2da0110e086da7423" translate="yes" xml:space="preserve">
          <source>This calls &lt;var&gt;map-function&lt;/var&gt; for each data element in &lt;var&gt;ewoc&lt;/var&gt; and updates those nodes for which &lt;var&gt;map-function&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. Any &lt;var&gt;args&lt;/var&gt; are passed to &lt;var&gt;map-function&lt;/var&gt;.</source>
          <target state="translated">Это вызывает &lt;var&gt;map-function&lt;/var&gt; для каждого элемента данных в &lt;var&gt;ewoc&lt;/var&gt; и обновляет те узлы, для которых &lt;var&gt;map-function&lt;/var&gt; возвращает &lt;code&gt;nil&lt;/code&gt; . Любые &lt;var&gt;args&lt;/var&gt; передаются в &lt;var&gt;map-function&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="ff5d6fa36d5b7de2c29bc06421c8c4fedddf5293" translate="yes" xml:space="preserve">
          <source>This calls &lt;var&gt;predicate&lt;/var&gt; for each data element in &lt;var&gt;ewoc&lt;/var&gt; and deletes those nodes for which &lt;var&gt;predicate&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;. Any &lt;var&gt;args&lt;/var&gt; are passed to &lt;var&gt;predicate&lt;/var&gt;.</source>
          <target state="translated">Это вызывает &lt;var&gt;predicate&lt;/var&gt; для каждого элемента данных в &lt;var&gt;ewoc&lt;/var&gt; и удаляет те узлы, для которых &lt;var&gt;predicate&lt;/var&gt; возвращает &lt;code&gt;nil&lt;/code&gt; . Любые &lt;var&gt;args&lt;/var&gt; передаются &lt;var&gt;predicate&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="fa0b9b67826a22ee95d4084d49aa21ce9290fa0f" translate="yes" xml:space="preserve">
          <source>This calls &lt;var&gt;predicate&lt;/var&gt; for each data element in &lt;var&gt;ewoc&lt;/var&gt; and returns a list of those elements for which &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. The elements in the list are ordered as in the buffer. Any &lt;var&gt;args&lt;/var&gt; are passed to &lt;var&gt;predicate&lt;/var&gt;.</source>
          <target state="translated">Это вызывает &lt;var&gt;predicate&lt;/var&gt; для каждого элемента данных в &lt;var&gt;ewoc&lt;/var&gt; и возвращает список тех элементов, для которых &lt;var&gt;predicate&lt;/var&gt; возвращает &lt;code&gt;nil&lt;/code&gt; . Элементы в списке упорядочены как в буфере. Любые &lt;var&gt;args&lt;/var&gt; передаются &lt;var&gt;predicate&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c6f9cae052c0af057cc1d5f011d50e57b115567c" translate="yes" xml:space="preserve">
          <source>This calls the &lt;code&gt;get_environment&lt;/code&gt; function using the pointer provided in the &lt;code&gt;runtime&lt;/code&gt; structure to retrieve a pointer to the</source>
          <target state="translated">Это вызывает функцию &lt;code&gt;get_environment&lt;/code&gt; , используя указатель, предоставленный в структуре &lt;code&gt;runtime&lt;/code&gt; чтобы получить указатель на</target>
        </trans-unit>
        <trans-unit id="d702da8b738c83c40c883dea2c26bc538f85c010" translate="yes" xml:space="preserve">
          <source>This can be counterintuitive, in particular if &lt;var&gt;W4&lt;/var&gt; were used for displaying a buffer only temporarily (see &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;Temporary Displays&lt;/a&gt;), and you want to continue working with the initial layout.</source>
          <target state="translated">Это может показаться нелогичным, в частности, если &lt;var&gt;W4&lt;/var&gt; использовался для временного отображения буфера (см. &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;Временные дисплеи&lt;/a&gt; ), и вы хотите продолжить работу с исходным макетом.</target>
        </trans-unit>
        <trans-unit id="7a4f216c24b473c3700bc04233588051f1f3d763" translate="yes" xml:space="preserve">
          <source>This can be customized by changing the map &lt;code&gt;Helper-help-map&lt;/code&gt;.</source>
          <target state="translated">Это можно настроить, изменив карту &lt;code&gt;Helper-help-map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9fec3408eb874f74534306e5560ffc4364f881e" translate="yes" xml:space="preserve">
          <source>This can only be used for functions, and tells the compiler to use &lt;var&gt;expander&lt;/var&gt; as an optimization function. When encountering a call to the function, of the form &lt;code&gt;(&lt;var&gt;function&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt;, the macro expander will call &lt;var&gt;expander&lt;/var&gt; with that form as well as with &lt;var&gt;args&lt;/var&gt;&amp;hellip;, and &lt;var&gt;expander&lt;/var&gt; can either return a new expression to use instead of the function call, or it can return just the form unchanged, to indicate that the function call should be left alone. &lt;var&gt;expander&lt;/var&gt; can be a symbol, or it can be a form &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; in which case &lt;var&gt;arg&lt;/var&gt; will hold the original function call expression, and the (unevaluated) arguments to the function can be accessed using the function&amp;rsquo;s formal arguments.</source>
          <target state="translated">Это может использоваться только для функций и указывает компилятору использовать &lt;var&gt;expander&lt;/var&gt; в качестве функции оптимизации. При обнаружении вызова функции формы &lt;code&gt;(&lt;var&gt;function&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt; , расширитель макроса вызовет &lt;var&gt;expander&lt;/var&gt; с этой формой, а также с &lt;var&gt;args&lt;/var&gt; ..., и &lt;var&gt;expander&lt;/var&gt; может либо вернуть новое выражение для использования вместо вызова функции, либо он может вернуть только форму без изменений, чтобы указать, что вызов функции следует оставить в покое. &lt;var&gt;expander&lt;/var&gt; может быть символом или формой &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; в этом случае &lt;var&gt;arg&lt;/var&gt; будет содержать исходное выражение вызова функции, а (неоцененные) аргументы функции могут быть доступны с использованием формальных аргументов функции.</target>
        </trans-unit>
        <trans-unit id="d76e4e8676364aca2a2925eb23ab9724d9ecdea6" translate="yes" xml:space="preserve">
          <source>This cancels the requested action for &lt;var&gt;timer&lt;/var&gt;, which should be a timer&amp;mdash;usually, one previously returned by &lt;code&gt;run-at-time&lt;/code&gt; or &lt;code&gt;run-with-idle-timer&lt;/code&gt;. This cancels the effect of that call to one of these functions; the arrival of the specified time will not cause anything special to happen.</source>
          <target state="translated">Это отменяет запрошенное действие для &lt;var&gt;timer&lt;/var&gt; , которым должен быть таймер - обычно тот, который ранее был возвращен таймером &lt;code&gt;run-at-time&lt;/code&gt; или &lt;code&gt;run-with-idle-timer&lt;/code&gt; . Это отменяет эффект вызова одной из этих функций; приход указанного времени ничего особенного не вызовет.</target>
        </trans-unit>
        <trans-unit id="e94ed11b42bb2c5d6e6ccb611120710d2777672d" translate="yes" xml:space="preserve">
          <source>This chapter covers the special issues relating to characters and how they are stored in strings and buffers.</source>
          <target state="translated">В этой главе рассматриваются особые вопросы,связанные с символами и их хранением в строках и буферах.</target>
        </trans-unit>
        <trans-unit id="5e6dc1c0b855c30b55cd1ad2a42304656c13efd2" translate="yes" xml:space="preserve">
          <source>This chapter describes a number of features related to the display that Emacs presents to the user.</source>
          <target state="translated">В этой главе описывается ряд функций,связанных с дисплеем,который Emacs представляет пользователю.</target>
        </trans-unit>
        <trans-unit id="f9d44ec4230e8c98e3b0d70421a47d7d9f465cfe" translate="yes" xml:space="preserve">
          <source>This chapter describes how the runnable Emacs executable is dumped with the preloaded Lisp libraries in it, how storage is allocated, and some internal aspects of GNU Emacs that may be of interest to C programmers.</source>
          <target state="translated">В этой главе описывается,как исполняемый файл Emacs дамплируется вместе с предварительно загруженными библиотеками Lisp,как выделяется хранилище и некоторые внутренние аспекты GNU Emacs,которые могут быть интересны программистам на Си.</target>
        </trans-unit>
        <trans-unit id="624fde145402f8d6d3fe708e7379facc34f635dc" translate="yes" xml:space="preserve">
          <source>This chapter describes how to write both major and minor modes, how to indicate them in the mode line, and how they run hooks supplied by the user. For related topics such as keymaps and syntax tables, see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;, and &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;.</source>
          <target state="translated">В этой главе описывается, как написать как основной, так и второстепенный режимы, как указать их в строке режима и как они запускают обработчики, предоставленные пользователем. Для связанных тем, таких как таблицы &lt;a href=&quot;keymaps#Keymaps&quot;&gt;ключей&lt;/a&gt; и синтаксические таблицы, см. Раскладки клавиш и &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;таблицы синтаксиса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a73f07a25208a8d5d49ebc9c53e00d0e6c83fb7" translate="yes" xml:space="preserve">
          <source>This chapter describes the Emacs Lisp functions and variables to find, create, view, save, and otherwise work with files and directories. A few other file-related functions are described in &lt;a href=&quot;buffers#Buffers&quot;&gt;Buffers&lt;/a&gt;, and those related to backups and auto-saving are described in &lt;a href=&quot;backups-and-auto_002dsaving#Backups-and-Auto_002dSaving&quot;&gt;Backups and Auto-Saving&lt;/a&gt;.</source>
          <target state="translated">В этой главе описаны функции и переменные Emacs Lisp для поиска, создания, просмотра, сохранения и другой работы с файлами и каталогами. Некоторые другие функции, связанные с файлами, описаны в &lt;a href=&quot;buffers#Buffers&quot;&gt;разделе &amp;laquo;Буферы&amp;raquo;&lt;/a&gt; , а функции, связанные с резервным копированием и автосохранением, описаны в &lt;a href=&quot;backups-and-auto_002dsaving#Backups-and-Auto_002dSaving&quot;&gt;разделе &amp;laquo;Резервное&lt;/a&gt; копирование и автосохранение&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="7545c843ef69f6c82fc1ea31eff1598a7ea2b3fe" translate="yes" xml:space="preserve">
          <source>This chapter describes the Lisp functions for reading and printing. It also describes &lt;em&gt;streams&lt;/em&gt;, which specify where to get the text (if reading) or where to put it (if printing).</source>
          <target state="translated">В этой главе описаны функции Лиспа для чтения и печати. Он также описывает &lt;em&gt;потоки&lt;/em&gt; , которые указывают, где взять текст (при чтении) или куда его поместить (при печати).</target>
        </trans-unit>
        <trans-unit id="22f7ace6e4e685bb92ce56087226787d9be96ca9" translate="yes" xml:space="preserve">
          <source>This chapter describes the functions and variables related to Emacs windows. See &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;, for how windows are assigned an area of screen available for Emacs to use. See &lt;a href=&quot;display#Display&quot;&gt;Display&lt;/a&gt;, for information on how text is displayed in windows.</source>
          <target state="translated">В этой главе описаны функции и переменные, относящиеся к окнам Emacs. См. &amp;laquo; &lt;a href=&quot;frames#Frames&quot;&gt;Фреймы&amp;raquo;&lt;/a&gt; , чтобы узнать, как окнам назначаются области экрана, доступные для использования Emacs. См. Раздел &amp;laquo; &lt;a href=&quot;display#Display&quot;&gt;Дисплей&amp;raquo;&lt;/a&gt; для получения информации о том, как текст отображается в окнах.</target>
        </trans-unit>
        <trans-unit id="d3459b2e5b0998d91d15863048a7a8c8ef91b8b9" translate="yes" xml:space="preserve">
          <source>This chapter describes the functions that deal with the text in a buffer. Most examine, insert, or delete text in the current buffer, often operating at point or on text adjacent to point. Many are interactive. All the functions that change the text provide for undoing the changes (see &lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;).</source>
          <target state="translated">В этой главе описаны функции, которые работают с текстом в буфере. Большинство из них проверяют, вставляют или удаляют текст в текущем буфере, часто работая с точкой или с текстом, смежным с точкой. Многие из них интерактивны. Все функции, изменяющие текст, позволяют отменить изменения (см. &lt;a href=&quot;undo#Undo&quot;&gt;Отменить&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0ce20f2b5347d828084fd6cba60b6ec5ee82ff2b" translate="yes" xml:space="preserve">
          <source>This chapter describes the purpose, printed representation, and read syntax of each of the standard types in GNU Emacs Lisp. Details on how to use these types can be found in later chapters.</source>
          <target state="translated">В этой главе описывается назначение,печатное представление и синтаксис чтения каждого из стандартных типов в GNU Emacs Lisp.Подробности о том,как использовать эти типы,можно найти в последующих главах.</target>
        </trans-unit>
        <trans-unit id="86f185ef4f486aa57761ecc92952412adc8958cf" translate="yes" xml:space="preserve">
          <source>This chapter is about starting and getting out of Emacs, access to values in the operating system environment, and terminal input, output.</source>
          <target state="translated">Эта глава посвящена запуску и выходу из Emacs,доступу к значениям в среде операционной системы,а также терминальному входу,выходу.</target>
        </trans-unit>
        <trans-unit id="00f4501f6e1912e4ba9feed5929100e344d32bfb" translate="yes" xml:space="preserve">
          <source>This class is used for backslash in TeX mode.</source>
          <target state="translated">Этот класс используется для обратного слеша в режиме TeX.</target>
        </trans-unit>
        <trans-unit id="80d3a7c8c29e5451d6afbe84d9e7d4cd1c702c79" translate="yes" xml:space="preserve">
          <source>This code character is meaningful only at the beginning of the interactive string, and it does not look for a prompt or a newline. It is a single, isolated character.</source>
          <target state="translated">Этот символ кода имеет смысл только в начале интерактивной строки и не ищет подсказку или новую строку.Это одиночный,изолированный символ.</target>
        </trans-unit>
        <trans-unit id="65e11c6537eb3dae64d6ce18fb017a203438b2e0" translate="yes" xml:space="preserve">
          <source>This code letter computes an argument without reading any input. Therefore, it does not use a prompt string, and any prompt string you supply is ignored.</source>
          <target state="translated">Эта кодовая буква вычисляет аргумент,не читая ввода.Поэтому она не использует строку запроса,а любая строка запроса игнорируется.</target>
        </trans-unit>
        <trans-unit id="48852d1aa23644651ff3c065e69dbc3dadaaa7f7" translate="yes" xml:space="preserve">
          <source>This command &lt;em&gt;suspends&lt;/em&gt; a frame. For GUI frames, it calls &lt;code&gt;iconify-frame&lt;/code&gt; (see &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibility of Frames&lt;/a&gt;); for frames on text terminals, it calls either &lt;code&gt;suspend-emacs&lt;/code&gt; or &lt;code&gt;suspend-tty&lt;/code&gt;, depending on whether the frame is displayed on the controlling terminal device or not.</source>
          <target state="translated">Эта команда &lt;em&gt;приостанавливает&lt;/em&gt; фрейм. Для фреймов GUI он вызывает &lt;code&gt;iconify-frame&lt;/code&gt; (см. &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Видимость фреймов&lt;/a&gt; ); для фреймов на текстовых терминалах он вызывает либо &lt;code&gt;suspend-emacs&lt;/code&gt; , либо &lt;code&gt;suspend-tty&lt;/code&gt; , в зависимости от того, отображается ли фрейм на управляющем терминальном устройстве или нет.</target>
        </trans-unit>
        <trans-unit id="cf23ed7494ffe60a0c253320c71f24adff27e634" translate="yes" xml:space="preserve">
          <source>This command activates input method &lt;var&gt;input-method&lt;/var&gt; for the current buffer. It also sets &lt;code&gt;default-input-method&lt;/code&gt; to &lt;var&gt;input-method&lt;/var&gt;. If &lt;var&gt;input-method&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this command deactivates any input method for the current buffer.</source>
          <target state="translated">Эта команда активирует метод &lt;var&gt;input-method&lt;/var&gt; для текущего буфера. Он также устанавливает по &lt;code&gt;default-input-method&lt;/code&gt; для &lt;var&gt;input-method&lt;/var&gt; . Если &lt;var&gt;input-method&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , эта команда деактивирует любой метод ввода для текущего буфера.</target>
        </trans-unit>
        <trans-unit id="59686f85758b5b8941bc715cb7ba63e9cd1610c4" translate="yes" xml:space="preserve">
          <source>This command adds a local rule to adjust the indentation of the current line.</source>
          <target state="translated">Эта команда добавляет локальное правило для настройки отступа текущей строки.</target>
        </trans-unit>
        <trans-unit id="0a7e7476526cfeca449ad69638788acc4bdbbf40" translate="yes" xml:space="preserve">
          <source>This command adds to the numeric argument for the next command. The argument &lt;var&gt;arg&lt;/var&gt; is the raw prefix argument as it was before this command; its value is negated to form the new prefix argument. Don&amp;rsquo;t call this command yourself unless you know what you are doing.</source>
          <target state="translated">Эта команда добавляет числовой аргумент следующей команды. Аргумент &lt;var&gt;arg&lt;/var&gt; - это необработанный аргумент префикса, как это было до этой команды; его значение инвертируется, чтобы сформировать новый аргумент префикса. Не вызывайте эту команду самостоятельно, если вы не знаете, что делаете.</target>
        </trans-unit>
        <trans-unit id="74d9295bb5207f902c4cd8cbf762fbfceb95af5c" translate="yes" xml:space="preserve">
          <source>This command adds to the prefix argument for the following command. The argument &lt;var&gt;arg&lt;/var&gt; is the raw prefix argument as it was before this command; it is used to compute the updated prefix argument. Don&amp;rsquo;t call this command yourself unless you know what you are doing.</source>
          <target state="translated">Эта команда добавляет аргумент префикса для следующей команды. Аргумент &lt;var&gt;arg&lt;/var&gt; - это необработанный аргумент префикса, как это было до этой команды; он используется для вычисления обновленного аргумента префикса. Не вызывайте эту команду самостоятельно, если вы не знаете, что делаете.</target>
        </trans-unit>
        <trans-unit id="8459d4f1dc04b4b16629ae0b5ecd274964f50c86" translate="yes" xml:space="preserve">
          <source>This command adjusts the height or width of &lt;var&gt;window&lt;/var&gt; to fit the text in it. It returns non-&lt;code&gt;nil&lt;/code&gt; if it was able to resize &lt;var&gt;window&lt;/var&gt;, and &lt;code&gt;nil&lt;/code&gt; otherwise. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. Otherwise, it should be a live window.</source>
          <target state="translated">Эта команда регулирует высоту или ширину &lt;var&gt;window&lt;/var&gt; чтобы разместить в нем текст. Он возвращает &lt;code&gt;nil&lt;/code&gt; если ему удалось изменить размер &lt;var&gt;window&lt;/var&gt; , и &lt;code&gt;nil&lt;/code&gt; противном случае. Если &lt;var&gt;window&lt;/var&gt; опущено или равно &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется выбранное окно. В противном случае это должно быть живое окно.</target>
        </trans-unit>
        <trans-unit id="fc6cbfe7ed2009b0dfc3f99d4b4705910652bf0b" translate="yes" xml:space="preserve">
          <source>This command adjusts the size of &lt;var&gt;frame&lt;/var&gt; to display the contents of its buffer exactly. &lt;var&gt;frame&lt;/var&gt; can be any live frame and defaults to the selected one. Fitting is done only if &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window is live. The arguments &lt;var&gt;max-height&lt;/var&gt;, &lt;var&gt;min-height&lt;/var&gt;, &lt;var&gt;max-width&lt;/var&gt; and &lt;var&gt;min-width&lt;/var&gt; specify bounds on the new total size of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window. &lt;var&gt;min-height&lt;/var&gt; and &lt;var&gt;min-width&lt;/var&gt; default to the values of &lt;code&gt;window-min-height&lt;/code&gt; and &lt;code&gt;window-min-width&lt;/code&gt; respectively.</source>
          <target state="translated">Эта команда регулирует размер &lt;var&gt;frame&lt;/var&gt; для точного отображения содержимого его буфера. &lt;var&gt;frame&lt;/var&gt; может быть любым живым кадром и по умолчанию выбран выбранным. Подгонка выполняется только в том случае, если корневое окно &lt;var&gt;frame&lt;/var&gt; активно. Аргументы &lt;var&gt;max-height&lt;/var&gt; , &lt;var&gt;min-height&lt;/var&gt; , &lt;var&gt;max-width&lt;/var&gt; и &lt;var&gt;min-width&lt;/var&gt; определяют границы нового общего размера корневого окна &lt;var&gt;frame&lt;/var&gt; . &lt;var&gt;min-height&lt;/var&gt; и &lt;var&gt;min-width&lt;/var&gt; по умолчанию равны значениям &lt;code&gt;window-min-height&lt;/code&gt; и &lt;code&gt;window-min-width&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="895e3a435b8ba1aa97bf7a257523d9f6c68329fe" translate="yes" xml:space="preserve">
          <source>This command alphabetically sorts lines in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">Эта команда сортирует строки в алфавитном порядке в области между &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; . Если &lt;var&gt;reverse&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , сортировка выполняется в обратном порядке.</target>
        </trans-unit>
        <trans-unit id="60f35140e02216a14272042d6f3929f833c1de8b" translate="yes" xml:space="preserve">
          <source>This command alphabetically sorts pages in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">Эта команда сортирует страницы в алфавитном порядке между &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; . Если &lt;var&gt;reverse&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , сортировка выполняется в обратном порядке.</target>
        </trans-unit>
        <trans-unit id="9f89794b064275d0088c3098df7ee2268f906465" translate="yes" xml:space="preserve">
          <source>This command alphabetically sorts paragraphs in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">Эта команда сортирует абзацы в алфавитном порядке между &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; . Если &lt;var&gt;reverse&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , сортировка выполняется в обратном порядке.</target>
        </trans-unit>
        <trans-unit id="79bfff435d9a71b3c4b3fcf53e51bf55b8df9cd1" translate="yes" xml:space="preserve">
          <source>This command attempts to display &lt;var&gt;buffer-or-name&lt;/var&gt; in the selected window and make it the current buffer. It is often used interactively (as the binding of</source>
          <target state="translated">Эта команда пытается отобразить имя &lt;var&gt;buffer-or-name&lt;/var&gt; в выбранном окне и сделать его текущим буфером. Часто используется интерактивно (как привязка</target>
        </trans-unit>
        <trans-unit id="18c4dcc1fd6c826172f3688906808481d8c1f7dd" translate="yes" xml:space="preserve">
          <source>This command attempts to reduce &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s height as much as possible while still showing its full buffer, but no less than &lt;code&gt;window-min-height&lt;/code&gt; lines. The return value is non-&lt;code&gt;nil&lt;/code&gt; if the window was resized, and &lt;code&gt;nil&lt;/code&gt; otherwise. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. Otherwise, it should be a live window.</source>
          <target state="translated">Эта команда пытается уменьшить высоту &lt;var&gt;window&lt;/var&gt; насколько это возможно, в то же время показывая его полный буфер, но не меньше, чем строки &lt;code&gt;window-min-height&lt;/code&gt; . Возвращаемое значение - не &lt;code&gt;nil&lt;/code&gt; если размер окна был изменен, и &lt;code&gt;nil&lt;/code&gt; противном случае. Если &lt;var&gt;window&lt;/var&gt; опущено или равно &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется выбранное окно. В противном случае это должно быть живое окно.</target>
        </trans-unit>
        <trans-unit id="673eea01d7b257fd44b99b6857c537ccd6403f61" translate="yes" xml:space="preserve">
          <source>This command calls &lt;code&gt;auto-fill-function&lt;/code&gt; whenever that is non-&lt;code&gt;nil&lt;/code&gt; and the character inserted is in the table &lt;code&gt;auto-fill-chars&lt;/code&gt; (see &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;).</source>
          <target state="translated">Эта команда вызывает &lt;code&gt;auto-fill-function&lt;/code&gt; всякий раз, когда оно не равно &lt;code&gt;nil&lt;/code&gt; и вставленный символ находится в таблице &lt;code&gt;auto-fill-chars&lt;/code&gt; (см. &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Автозаполнение&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5b985c1d8b84f28c1da6a78f8b2cc53f577963f3" translate="yes" xml:space="preserve">
          <source>This command calls &lt;code&gt;fit-window-to-buffer&lt;/code&gt; (see above) to do its work.</source>
          <target state="translated">Эта команда вызывает &lt;code&gt;fit-window-to-buffer&lt;/code&gt; (см. Выше) для выполнения своей работы.</target>
        </trans-unit>
        <trans-unit id="cc22573318be888f2063d86700554c0f9921604d" translate="yes" xml:space="preserve">
          <source>This command calls &lt;code&gt;self-insert-command&lt;/code&gt; to insert newlines, which may subsequently break the preceding line by calling &lt;code&gt;auto-fill-function&lt;/code&gt; (see &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;). Typically what &lt;code&gt;auto-fill-function&lt;/code&gt; does is insert a newline; thus, the overall result in this case is to insert two newlines at different places: one at point, and another earlier in the line. &lt;code&gt;newline&lt;/code&gt; does not auto-fill if &lt;var&gt;number-of-newlines&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта команда вызывает команду &lt;code&gt;self-insert-command&lt;/code&gt; для вставки новой строки, которая может впоследствии разорвать предыдущую строку, вызвав &lt;code&gt;auto-fill-function&lt;/code&gt; (см. &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Автозаполнение&lt;/a&gt; ). Обычно &lt;code&gt;auto-fill-function&lt;/code&gt; вставляет новую строку; таким образом, общий результат в этом случае - вставить два символа новой строки в разных местах: один в точке, а другой в начале строки. &lt;code&gt;newline&lt;/code&gt; &lt;var&gt;number-of-newlines&lt;/var&gt; не заполняется автоматически, если число новых строк не равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc574e591e4e2eec7f3e45ad0bd6498afe6e7893" translate="yes" xml:space="preserve">
          <source>This command calls the function in &lt;code&gt;indent-line-function&lt;/code&gt; to indent the current line in a way appropriate for the current major mode.</source>
          <target state="translated">Эта команда вызывает функцию в &lt;code&gt;indent-line-function&lt;/code&gt; , чтобы сделать отступ текущей строки подходящим для текущего основного режима.</target>
        </trans-unit>
        <trans-unit id="45a74130ea5b5379fa9ef34261d143fcb80a3127" translate="yes" xml:space="preserve">
          <source>This command calls the hook &lt;code&gt;kill-emacs-hook&lt;/code&gt;, then exits the Emacs process and kills it.</source>
          <target state="translated">Эта команда вызывает ловушку &lt;code&gt;kill-emacs-hook&lt;/code&gt; , затем завершает процесс Emacs и завершает его.</target>
        </trans-unit>
        <trans-unit id="8c6bb4abf55581a597f716344ee1d4b7e918ce59" translate="yes" xml:space="preserve">
          <source>This command closes the most recently opened (and not yet closed) block.</source>
          <target state="translated">Эта команда закрывает последний открытый (и еще не закрытый)блок.</target>
        </trans-unit>
        <trans-unit id="756594fc50a4d9741af05602545285aac38ae0e4" translate="yes" xml:space="preserve">
          <source>This command considers a region of text as a single paragraph and fills it. If the region was made up of many paragraphs, the blank lines between paragraphs are removed. This function justifies as well as filling when &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта команда рассматривает область текста как один абзац и заполняет его. Если область состоит из многих абзацев, пустые строки между абзацами удаляются. Эта функция выполняет &lt;var&gt;justify&lt;/var&gt; а также заполнение, когда justify не равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54f154b03560bc91944f1f7809150311fbbf935c" translate="yes" xml:space="preserve">
          <source>This command copies the directory named &lt;var&gt;dirname&lt;/var&gt; to &lt;var&gt;newname&lt;/var&gt;. If &lt;var&gt;newname&lt;/var&gt; is a directory name, &lt;var&gt;dirname&lt;/var&gt; will be copied to a subdirectory there. See &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;.</source>
          <target state="translated">Эта команда копирует каталог с именем &lt;var&gt;dirname&lt;/var&gt; в &lt;var&gt;newname&lt;/var&gt; . Если &lt;var&gt;newname&lt;/var&gt; это имя каталога, &lt;var&gt;dirname&lt;/var&gt; будут скопированы в подкаталог там. См. &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Имена каталогов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b2aa6b0f84b36f024a16d1780fb3b2f8164a4d1" translate="yes" xml:space="preserve">
          <source>This command copies the file &lt;var&gt;oldname&lt;/var&gt; to &lt;var&gt;newname&lt;/var&gt;. An error is signaled if &lt;var&gt;oldname&lt;/var&gt; is not a regular file. If &lt;var&gt;newname&lt;/var&gt; names a directory, it copies &lt;var&gt;oldname&lt;/var&gt; into that directory, preserving its final name component.</source>
          <target state="translated">Эта команда копирует файл &lt;var&gt;oldname&lt;/var&gt; в &lt;var&gt;newname&lt;/var&gt; . &lt;var&gt;oldname&lt;/var&gt; об ошибке, если oldname не является обычным файлом. Если &lt;var&gt;newname&lt;/var&gt; называет каталог, он копирует &lt;var&gt;oldname&lt;/var&gt; в этот каталог, сохраняя его окончательный компонент имени.</target>
        </trans-unit>
        <trans-unit id="c8ad2b5b41ccfb8b2f38182e2df30fc1c4b30c1a" translate="yes" xml:space="preserve">
          <source>This command creates a directory named &lt;var&gt;dirname&lt;/var&gt;. If &lt;var&gt;parents&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, as is always the case in an interactive call, that means to create the parent directories first, if they don&amp;rsquo;t already exist. &lt;code&gt;mkdir&lt;/code&gt; is an alias for this.</source>
          <target state="translated">Эта команда создает каталог с именем &lt;var&gt;dirname&lt;/var&gt; . Если &lt;var&gt;parents&lt;/var&gt; отлично от &lt;code&gt;nil&lt;/code&gt; , как это всегда бывает в интерактивном режиме разговора, что средства для создания родительских каталогов первых, если они уже не существуют. &lt;code&gt;mkdir&lt;/code&gt; - это псевдоним для этого.</target>
        </trans-unit>
        <trans-unit id="038aa561e9d82f4d260ddd912eb64042b635bf8c" translate="yes" xml:space="preserve">
          <source>This command creates an empty file named &lt;var&gt;filename&lt;/var&gt;. As &lt;code&gt;make-directory&lt;/code&gt;, this command creates parent directories if &lt;var&gt;parents&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;filename&lt;/var&gt; already exists, this command signals an error.</source>
          <target state="translated">Эта команда создает пустой файл с именем &lt;var&gt;filename&lt;/var&gt; . Как &lt;code&gt;make-directory&lt;/code&gt; , эта команда создает родительские каталоги , если &lt;var&gt;parents&lt;/var&gt; отличен от &lt;code&gt;nil&lt;/code&gt; . Если &lt;var&gt;filename&lt;/var&gt; уже существует, эта команда сигнализирует об ошибке.</target>
        </trans-unit>
        <trans-unit id="a1d4315801ce6d3f5b31ce1276e9ab8688821d79" translate="yes" xml:space="preserve">
          <source>This command decodes the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; according to coding system &lt;var&gt;coding-system&lt;/var&gt;. To make explicit decoding useful, the text before decoding ought to be a sequence of byte values, but both multibyte and unibyte buffers are acceptable (in the multibyte case, the raw byte values should be represented as eight-bit characters). Normally, the decoded text replaces the original text in the buffer, but the optional argument &lt;var&gt;destination&lt;/var&gt; can change that. If &lt;var&gt;destination&lt;/var&gt; is a buffer, the decoded text is inserted in that buffer after point (point does not move); if it is &lt;code&gt;t&lt;/code&gt;, the command returns the decoded text as a multibyte string without inserting it.</source>
          <target state="translated">Эта команда декодирует текст от &lt;var&gt;start&lt;/var&gt; до &lt;var&gt;end&lt;/var&gt; соответствии с системой &lt;var&gt;coding-system&lt;/var&gt; . Чтобы сделать явное декодирование полезным, текст перед декодированием должен быть последовательностью байтовых значений, но допустимы как многобайтовые, так и однобайтовые буферы (в многобайтовом случае необработанные байтовые значения должны быть представлены в виде восьмибитных символов). Как правило, декодируются текст заменяет исходный текст в буфере, но необязательный аргумент &lt;var&gt;destination&lt;/var&gt; может изменить. Если &lt;var&gt;destination&lt;/var&gt; является буфер, декодированный текст вставляется в этот буфер после точки (точка не перемещается); если это &lt;code&gt;t&lt;/code&gt; , команда возвращает декодированный текст как многобайтовую строку, не вставляя ее.</target>
        </trans-unit>
        <trans-unit id="32f4777175150fdcbe2a1a23643a82fc5a4ba066" translate="yes" xml:space="preserve">
          <source>This command deletes &lt;var&gt;count&lt;/var&gt; characters backward, changing tabs into spaces. When the next character to be deleted is a tab, it is first replaced with the proper number of spaces to preserve alignment and then one of those spaces is deleted instead of the tab. If &lt;var&gt;killp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the command saves the deleted characters in the kill ring.</source>
          <target state="translated">Эта команда удаляет &lt;var&gt;count&lt;/var&gt; символов в обратном направлении, заменяя табуляцию пробелами. Когда следующим удаляемым символом является табуляция, он сначала заменяется правильным количеством пробелов, чтобы сохранить выравнивание, а затем один из этих пробелов удаляется вместо табуляции. Если &lt;var&gt;killp&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то команда сохраняет удаленные символы в списке уничтожений.</target>
        </trans-unit>
        <trans-unit id="22ea8b0a20dedb9172859d6df974ea27ab76d8a9" translate="yes" xml:space="preserve">
          <source>This command deletes &lt;var&gt;count&lt;/var&gt; characters directly after point, or before point if &lt;var&gt;count&lt;/var&gt; is negative. If &lt;var&gt;killp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it saves the deleted characters in the kill ring.</source>
          <target state="translated">Эта команда удаляет символы &lt;var&gt;count&lt;/var&gt; сразу после точки или перед точкой, если &lt;var&gt;count&lt;/var&gt; отрицательный. Если &lt;var&gt;killp&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то он сохраняет удаленные символы в списке уничтожений.</target>
        </trans-unit>
        <trans-unit id="1e29c9a0fbb23fca667005f572af80f1ee10ffe4" translate="yes" xml:space="preserve">
          <source>This command deletes &lt;var&gt;count&lt;/var&gt; characters directly before point, or after point if &lt;var&gt;count&lt;/var&gt; is negative. If &lt;var&gt;killp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it saves the deleted characters in the kill ring.</source>
          <target state="translated">Эта команда удаляет символы &lt;var&gt;count&lt;/var&gt; непосредственно перед точкой или после точки, если &lt;var&gt;count&lt;/var&gt; отрицательный. Если &lt;var&gt;killp&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , то он сохраняет удаленные символы в списке уничтожений.</target>
        </trans-unit>
        <trans-unit id="ca7108ce8a70186ad1084ad0d0dc8c98134c3c53" translate="yes" xml:space="preserve">
          <source>This command deletes all frames on &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s terminal, except &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; uses another frame&amp;rsquo;s minibuffer, that minibuffer frame is left untouched. The argument &lt;var&gt;frame&lt;/var&gt; must specify a live frame and defaults to the selected frame. Internally, this command works by calling &lt;code&gt;delete-frame&lt;/code&gt; with &lt;var&gt;force&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; for all frames that shall be deleted.</source>
          <target state="translated">Эта команда удаляет все кадры на &lt;var&gt;frame&lt;/var&gt; &amp;laquo;S терминал, кроме &lt;var&gt;frame&lt;/var&gt; . Если &lt;var&gt;frame&lt;/var&gt; использует минибуфер другого кадра, этот кадр минибуфера остается нетронутым. &lt;var&gt;frame&lt;/var&gt; аргумента должен указывать живой фрейм и по умолчанию использовать выбранный фрейм. Внутренне эта команда работает, вызывая &lt;code&gt;delete-frame&lt;/code&gt; с &lt;var&gt;force&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; для всех кадров, которые должны быть удалены.</target>
        </trans-unit>
        <trans-unit id="a801baba837fbae2db848bbcdf043c44b92a62ee" translate="yes" xml:space="preserve">
          <source>This command deletes the directory named &lt;var&gt;dirname&lt;/var&gt;. The function &lt;code&gt;delete-file&lt;/code&gt; does not work for files that are directories; you must use &lt;code&gt;delete-directory&lt;/code&gt; for them. If &lt;var&gt;recursive&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and the directory contains any files, &lt;code&gt;delete-directory&lt;/code&gt; signals an error. If recursive is non-&lt;code&gt;nil&lt;/code&gt;, there is no error merely because the directory or its files are deleted by some other process before &lt;code&gt;delete-directory&lt;/code&gt; gets to them.</source>
          <target state="translated">Эта команда удаляет каталог с именем &lt;var&gt;dirname&lt;/var&gt; . Функция &lt;code&gt;delete-file&lt;/code&gt; не работает для файлов, которые являются каталогами; вы должны использовать для них &lt;code&gt;delete-directory&lt;/code&gt; . Если &lt;var&gt;recursive&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , а каталог содержит какие-либо файлы, &lt;code&gt;delete-directory&lt;/code&gt; сигнализирует об ошибке. Если рекурсивное значение не равно &lt;code&gt;nil&lt;/code&gt; , ошибки не возникает просто потому, что каталог или его файлы удаляются каким-то другим процессом до того, как к ним попадает &lt;code&gt;delete-directory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6a1626313c1e8a44d5e1bf542d0077364da6eff" translate="yes" xml:space="preserve">
          <source>This command deletes the file &lt;var&gt;filename&lt;/var&gt;. If the file has multiple names, it continues to exist under the other names. If &lt;var&gt;filename&lt;/var&gt; is a symbolic link, &lt;code&gt;delete-file&lt;/code&gt; deletes only the symbolic link and not its target.</source>
          <target state="translated">Эта команда удаляет &lt;var&gt;filename&lt;/var&gt; . Если файл имеет несколько имен, он продолжает существовать под другими именами. Если &lt;var&gt;filename&lt;/var&gt; является символической ссылкой, &lt;code&gt;delete-file&lt;/code&gt; удаляет только символическую ссылку, но не ее цель.</target>
        </trans-unit>
        <trans-unit id="a94a016d509b74c3bce4b176ef112169da75d61e" translate="yes" xml:space="preserve">
          <source>This command deletes the text between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer, and returns &lt;code&gt;nil&lt;/code&gt;. If point was inside the deleted region, its value afterward is &lt;var&gt;start&lt;/var&gt;. Otherwise, point relocates with the surrounding text, as markers do.</source>
          <target state="translated">Эта команда удаляет текст между позициями &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; в текущем буфере и возвращает &lt;code&gt;nil&lt;/code&gt; . Если точка находилась внутри удаленной области, ее значение впоследствии будет &lt;var&gt;start&lt;/var&gt; . В противном случае точка перемещается вместе с окружающим текстом, как и маркеры.</target>
        </trans-unit>
        <trans-unit id="cca5913b83b419877e4d8ab720ce6c7df7f9acdb" translate="yes" xml:space="preserve">
          <source>This command deletes whitespace characters after the last non-whitespace character in each line in the region.</source>
          <target state="translated">Эта команда удаляет пробельные символы после последнего небелого символа в каждой строке региона.</target>
        </trans-unit>
        <trans-unit id="dddaa17447520ba09b411289d6048689899f464d" translate="yes" xml:space="preserve">
          <source>This command displays a description of the contents of the current buffer&amp;rsquo;s case table.</source>
          <target state="translated">Эта команда отображает описание содержимого таблицы case текущего буфера.</target>
        </trans-unit>
        <trans-unit id="7c346a82a085542926f91f7935abc73545129526" translate="yes" xml:space="preserve">
          <source>This command displays a description of the current display table in a help buffer.</source>
          <target state="translated">Эта команда отображает описание текущей таблицы отображения в справочном буфере.</target>
        </trans-unit>
        <trans-unit id="683746dd8591743f5682ffbbc29ba3b571485977" translate="yes" xml:space="preserve">
          <source>This command displays a list of characters in the character set &lt;var&gt;charset&lt;/var&gt;.</source>
          <target state="translated">Эта команда отображает список символов в &lt;var&gt;charset&lt;/var&gt; набора символов .</target>
        </trans-unit>
        <trans-unit id="3a0ecda5eade2dd5d8e8952f216dbbf48cc36d7a" translate="yes" xml:space="preserve">
          <source>This command displays a listing of all living processes. In addition, it finally deletes any process whose status was &amp;lsquo;</source>
          <target state="translated">Эта команда отображает список всех живых процессов. Кроме того, он окончательно удаляет все процессы, статус которых был '</target>
        </trans-unit>
        <trans-unit id="8d52c25e9d936625f4ddc58e3711cc9e74f3a430" translate="yes" xml:space="preserve">
          <source>This command displays the contents of the syntax table of &lt;var&gt;buffer&lt;/var&gt; (by default, the current buffer) in a help buffer.</source>
          <target state="translated">Эта команда отображает содержимое синтаксической таблицы &lt;var&gt;buffer&lt;/var&gt; (по умолчанию текущий буфер) в справочном буфере.</target>
        </trans-unit>
        <trans-unit id="f078da243cd24929fce755d874cfbebed7ee19c0" translate="yes" xml:space="preserve">
          <source>This command displays the disassembled code for &lt;var&gt;object&lt;/var&gt;. In interactive use, or if &lt;var&gt;buffer-or-name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, the output goes in a buffer named</source>
          <target state="translated">Эта команда отображает дизассемблированный код &lt;var&gt;object&lt;/var&gt; . При интерактивном использовании, или если &lt;var&gt;buffer-or-name&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; или опущено, вывод идет в буфер с именем</target>
        </trans-unit>
        <trans-unit id="2762876090466956700e42ae9e7b100c9424e047" translate="yes" xml:space="preserve">
          <source>This command displays the documentation of the current buffer&amp;rsquo;s major mode and minor modes. It uses the &lt;code&gt;documentation&lt;/code&gt; function to retrieve the documentation strings of the major and minor mode commands (see &lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;Accessing Documentation&lt;/a&gt;).</source>
          <target state="translated">Эта команда отображает документацию по основному режиму и второстепенным режимам текущего буфера. Он использует функцию &lt;code&gt;documentation&lt;/code&gt; для получения строк документации по командам основного и второстепенного режима (см. &lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;Доступ к документации&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="906a9d0a67ebfe25157f280b4d00f819df007911" translate="yes" xml:space="preserve">
          <source>This command displays the frequency count data for each line of the current definition.</source>
          <target state="translated">Эта команда отображает данные подсчета частоты для каждой строки текущего определения.</target>
        </trans-unit>
        <trans-unit id="1e3b49c3a1c9795b93c5c5418a1c0d3eff8cf69e" translate="yes" xml:space="preserve">
          <source>This command displays the previous buffer in &lt;var&gt;window&lt;/var&gt;. The argument &lt;var&gt;window&lt;/var&gt; should be a live window or &lt;code&gt;nil&lt;/code&gt; (meaning the selected window). If the optional argument &lt;var&gt;bury-or-kill&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means that the buffer currently shown in &lt;var&gt;window&lt;/var&gt; is about to be buried or killed and consequently should not be switched to in future invocations of this command.</source>
          <target state="translated">Эта команда отображает предыдущий буфер в &lt;var&gt;window&lt;/var&gt; . Довод &lt;var&gt;window&lt;/var&gt; должно быть живым окно или &lt;code&gt;nil&lt;/code&gt; (то есть выбранное окно). Если необязательный аргумент &lt;var&gt;bury-or-kill&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это означает, что буфер, показанный в настоящее время в &lt;var&gt;window&lt;/var&gt; , собирается быть похоронен или уничтожен и, следовательно, не должен переключаться на него при будущих вызовах этой команды.</target>
        </trans-unit>
        <trans-unit id="16105a84850f7950a0920c4e78ab171286e4f734" translate="yes" xml:space="preserve">
          <source>This command displays the rules that are used to indent the current line.</source>
          <target state="translated">Эта команда отображает правила,которые используются для отступов от текущей строки.</target>
        </trans-unit>
        <trans-unit id="6b7280ebc9500d23d64f114ba464e9b849225f10" translate="yes" xml:space="preserve">
          <source>This command displays what is contained in register &lt;var&gt;reg&lt;/var&gt;.</source>
          <target state="translated">Эта команда отображает то, что содержится в регистре &lt;var&gt;reg&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="8dde6d022e9a211cc45bb6e82118d5f40d92a727" translate="yes" xml:space="preserve">
          <source>This command does not follow symbolic links. If &lt;var&gt;filename&lt;/var&gt; is a symbolic link, this command renames the symbolic link, not the file it points to. If &lt;var&gt;newname&lt;/var&gt; is a symbolic link, its directory entry is replaced, not the directory entry it points to.</source>
          <target state="translated">Эта команда не переходит по символическим ссылкам. Если &lt;var&gt;filename&lt;/var&gt; является символической ссылкой, эта команда переименовывает символическую ссылку, а не файл, на который она указывает. Если &lt;var&gt;newname&lt;/var&gt; является символической ссылкой, заменяется ее запись в каталоге, а не запись в каталоге, на которую она указывает.</target>
        </trans-unit>
        <trans-unit id="8b72b7c4c4fbff1834710fd64352ed0aad18bb23" translate="yes" xml:space="preserve">
          <source>This command does not run the hook &lt;code&gt;post-self-insert-hook&lt;/code&gt; unless called interactively or &lt;var&gt;interactive&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта команда не запускает ловушку &lt;code&gt;post-self-insert-hook&lt;/code&gt; , если она не вызывается в интерактивном режиме или если &lt;var&gt;interactive&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ceb0e4da10375df635738b622ce9b4a706e8b83" translate="yes" xml:space="preserve">
          <source>This command does nothing if &lt;var&gt;filename&lt;/var&gt; and &lt;var&gt;newname&lt;/var&gt; are the same directory entry, i.e., if they refer to the same parent directory and give the same name within that directory. Otherwise, if &lt;var&gt;filename&lt;/var&gt; and &lt;var&gt;newname&lt;/var&gt; name the same file, this command does nothing on POSIX-conforming systems, and removes &lt;var&gt;filename&lt;/var&gt; on some non-POSIX systems.</source>
          <target state="translated">Эта команда ничего не делает, если &lt;var&gt;filename&lt;/var&gt; и &lt;var&gt;newname&lt;/var&gt; являются одной и той же записью каталога, то есть если они относятся к одному и тому же родительскому каталогу и дают одно и то же имя в этом каталоге. В противном случае, если &lt;var&gt;filename&lt;/var&gt; и &lt;var&gt;newname&lt;/var&gt; называют один и тот же файл, эта команда ничего не делает в POSIX-совместимых системах и удаляет &lt;var&gt;filename&lt;/var&gt; в некоторых системах, отличных от POSIX.</target>
        </trans-unit>
        <trans-unit id="215a1477f2c72075a1ef839f3f35a9c187a95e3b" translate="yes" xml:space="preserve">
          <source>This command does nothing if the window is already too short to display all of its buffer, or if any of the buffer is scrolled off-screen, or if the window is the only live window in its frame.</source>
          <target state="translated">Эта команда ничего не делает,если окно уже слишком короткое для отображения всего своего буфера,или если любой из буферов прокручивается вне экрана,или если окно является единственным &quot;живым&quot; окном в своем фрейме.</target>
        </trans-unit>
        <trans-unit id="966b0ed68ad81002249062c92710838398fcfe4a" translate="yes" xml:space="preserve">
          <source>This command enables recording undo information for buffer &lt;var&gt;buffer-or-name&lt;/var&gt;, so that subsequent changes can be undone. If no argument is supplied, then the current buffer is used. This function does nothing if undo recording is already enabled in the buffer. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта команда позволяет записывать информацию об отмене для буфера &lt;var&gt;buffer-or-name&lt;/var&gt; , чтобы можно было отменить последующие изменения. Если аргумент не указан, используется текущий буфер. Эта функция ничего не делает, если в буфере уже разрешена отмена записи. Возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a82ddcac78077fdf6491a021c70da5be6b883bc" translate="yes" xml:space="preserve">
          <source>This command encodes the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; according to coding system &lt;var&gt;coding-system&lt;/var&gt;. Normally, the encoded text replaces the original text in the buffer, but the optional argument &lt;var&gt;destination&lt;/var&gt; can change that. If &lt;var&gt;destination&lt;/var&gt; is a buffer, the encoded text is inserted in that buffer after point (point does not move); if it is &lt;code&gt;t&lt;/code&gt;, the command returns the encoded text as a unibyte string without inserting it.</source>
          <target state="translated">Эта команда кодирует текст от &lt;var&gt;start&lt;/var&gt; до &lt;var&gt;end&lt;/var&gt; соответствии с системой &lt;var&gt;coding-system&lt;/var&gt; . Как правило, закодированный текст заменяет исходный текст в буфере, но необязательный аргумент &lt;var&gt;destination&lt;/var&gt; может изменить. Если &lt;var&gt;destination&lt;/var&gt; является буфер, закодированный текст вставляется в этот буфер после точки (точка не перемещается); если это &lt;code&gt;t&lt;/code&gt; , команда возвращает закодированный текст в виде однобайтовой строки, не вставляя ее.</target>
        </trans-unit>
        <trans-unit id="ef5406097f423d50f3e4cf92882d1c513ab70d87" translate="yes" xml:space="preserve">
          <source>This command erases the editable contents of the minibuffer (that is, everything except the prompt), if a minibuffer is current. Otherwise, it erases the entire current buffer.</source>
          <target state="translated">Эта команда стирает редактируемое содержимое минибуфера (то есть все,кроме подсказки),если минибуфер является текущим.В противном случае она стирает весь текущий буфер.</target>
        </trans-unit>
        <trans-unit id="6f45f70a9223f5d68b032e25b623e5f92da9b0d3" translate="yes" xml:space="preserve">
          <source>This command exits the active minibuffer after inserting the last character typed on the keyboard (found in &lt;code&gt;last-command-event&lt;/code&gt;; see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;).</source>
          <target state="translated">Эта команда выходит из активного минибуфера после вставки последнего символа, набранного на клавиатуре (находится в &lt;code&gt;last-command-event&lt;/code&gt; ; см. &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Информация о цикле команд&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="56bee02febe888f30922da274fbb0924fce22169" translate="yes" xml:space="preserve">
          <source>This command exits the active minibuffer. It is normally bound to keys in minibuffer local keymaps.</source>
          <target state="translated">Эта команда выходит из активного минибуфера.Обычно она привязывается к ключам в локальных ключевых картах минибуфера.</target>
        </trans-unit>
        <trans-unit id="9960e68dba13beeea2d45213224bda3bc09c78cb" translate="yes" xml:space="preserve">
          <source>This command expands the abbrev before point, if any. If point does not follow an abbrev, this command does nothing. To do the expansion, it calls the function that is the value of the &lt;code&gt;abbrev-expand-function&lt;/code&gt; variable, with no arguments, and returns whatever that function does.</source>
          <target state="translated">Эта команда расширяет аббревиатуру перед точкой, если таковая имеется. Если точка не следует за сокращением, эта команда ничего не делает. Чтобы выполнить раскрытие, он вызывает функцию, которая является значением переменной &lt;code&gt;abbrev-expand-function&lt;/code&gt; , без аргументов, и возвращает все, что делает эта функция.</target>
        </trans-unit>
        <trans-unit id="78ee150b79a2f4408d7171f2996a0806c6f522bc" translate="yes" xml:space="preserve">
          <source>This command fills each of the paragraphs in the region from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;. It justifies as well if &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта команда заполняет каждый абзац в области от &lt;var&gt;start&lt;/var&gt; до &lt;var&gt;end&lt;/var&gt; . Он также &lt;var&gt;justify&lt;/var&gt; если justify не равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b3e65ed2b1a543af31c994850fab42cc5f6ca5a" translate="yes" xml:space="preserve">
          <source>This command fills each paragraph in the region according to its individual fill prefix. Thus, if the lines of a paragraph were indented with spaces, the filled paragraph will remain indented in the same fashion.</source>
          <target state="translated">Эта команда заполняет каждый абзац в регионе в соответствии с его индивидуальным префиксом заполнения.Таким образом,если строки абзаца были отступы с пробелами,то заполненный абзац будет оставаться отступом в том же порядке.</target>
        </trans-unit>
        <trans-unit id="0bec39ae3f928d4a3feaac0b7e8a0b32dca18131" translate="yes" xml:space="preserve">
          <source>This command fills the paragraph at or after point. If &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, each line is justified as well. It uses the ordinary paragraph motion commands to find paragraph boundaries. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;Paragraphs&lt;/a&gt; in</source>
          <target state="translated">Эта команда заполняет абзац в точке или после нее. Если &lt;var&gt;justify&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , каждая строка также оправдывается. Для поиска границ абзаца он использует обычные команды перемещения абзаца. См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;Параграфы&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="3b9692135a9f2f7dd48a2436e7db28ca2af85acb" translate="yes" xml:space="preserve">
          <source>This command fills the paragraph at or after point. If &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, each line is justified as well. It uses the ordinary paragraph motion commands to find paragraph boundaries. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;Paragraphs&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acc7ffa982f60daf275e8c14e7552f325a34ebe" translate="yes" xml:space="preserve">
          <source>This command finds the file &lt;var&gt;file&lt;/var&gt;, converting it according to format &lt;var&gt;format&lt;/var&gt;. It also makes &lt;var&gt;format&lt;/var&gt; the default if the buffer is saved later.</source>
          <target state="translated">Эта команда находит файл &lt;var&gt;file&lt;/var&gt; , конвертируя его в соответствии с форматом &lt;var&gt;format&lt;/var&gt; . Он также делает &lt;var&gt;format&lt;/var&gt; по умолчанию, если буфер сохраняется позже.</target>
        </trans-unit>
        <trans-unit id="496a4488eb4e6d86a049f91696897547b2057806" translate="yes" xml:space="preserve">
          <source>This command finds the precise file name for library &lt;var&gt;library&lt;/var&gt;. It searches for the library in the same way &lt;code&gt;load&lt;/code&gt; does, and the argument &lt;var&gt;nosuffix&lt;/var&gt; has the same meaning as in &lt;code&gt;load&lt;/code&gt;: don&amp;rsquo;t add suffixes &amp;lsquo;</source>
          <target state="translated">Эта команда находит точное имя файла библиотеки &lt;var&gt;library&lt;/var&gt; . Он ищет библиотеку так же, как и &lt;code&gt;load&lt;/code&gt; , и аргумент &lt;var&gt;nosuffix&lt;/var&gt; имеет то же значение, что и &lt;code&gt;load&lt;/code&gt; : не добавлять суффиксы '</target>
        </trans-unit>
        <trans-unit id="7088c7eb415b5eeea76627a8dbd42f70950ab725" translate="yes" xml:space="preserve">
          <source>This command indents each nonblank line starting between &lt;var&gt;start&lt;/var&gt; (inclusive) and &lt;var&gt;end&lt;/var&gt; (exclusive). If &lt;var&gt;to-column&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;indent-region&lt;/code&gt; indents each nonblank line by calling the current mode&amp;rsquo;s indentation function, the value of &lt;code&gt;indent-line-function&lt;/code&gt;.</source>
          <target state="translated">Эта команда делает отступ для каждой непустой строки, начинающейся между &lt;var&gt;start&lt;/var&gt; (включительно) и &lt;var&gt;end&lt;/var&gt; (исключая). Если &lt;var&gt;to-column&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;indent-region&lt;/code&gt; делает отступ для каждой непустой строки, вызывая функцию отступа текущего режима, значение функции &lt;code&gt;indent-line-function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a9dc457190e631972e795830f311f13a8cd116d" translate="yes" xml:space="preserve">
          <source>This command indents the current line like the previous nonblank line, by calling &lt;code&gt;indent-relative&lt;/code&gt; with &lt;code&gt;t&lt;/code&gt; as the &lt;var&gt;first-only&lt;/var&gt; argument. The return value is unpredictable.</source>
          <target state="translated">Эта команда делает &lt;code&gt;indent-relative&lt;/code&gt; текущей строки, как и для предыдущей непустой строки, путем вызова indent-relative с &lt;code&gt;t&lt;/code&gt; в качестве &lt;var&gt;first-only&lt;/var&gt; аргумента. Возвращаемое значение непредсказуемо.</target>
        </trans-unit>
        <trans-unit id="990ea483ed9c77e9c4b7e9d0a04803fc31bdbeb3" translate="yes" xml:space="preserve">
          <source>This command indents to the left margin if that is not zero. See &lt;a href=&quot;margins#Margins&quot;&gt;Margins&lt;/a&gt;.</source>
          <target state="translated">Эта команда делает отступ до левого поля, если он не равен нулю. См. &lt;a href=&quot;margins#Margins&quot;&gt;Поля&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b299a297e353537b61beb782c88c67e04c9405d5" translate="yes" xml:space="preserve">
          <source>This command inserts &lt;var&gt;count&lt;/var&gt; instances of &lt;var&gt;character&lt;/var&gt; into the current buffer before point. The argument &lt;var&gt;count&lt;/var&gt; must be an integer, and &lt;var&gt;character&lt;/var&gt; must be a character.</source>
          <target state="translated">Эта команда вставляет &lt;var&gt;count&lt;/var&gt; экземпляров &lt;var&gt;character&lt;/var&gt; в текущий буфер перед точкой. Аргумент &lt;var&gt;count&lt;/var&gt; должен быть целым числом, а &lt;var&gt;character&lt;/var&gt; должен быть символом.</target>
        </trans-unit>
        <trans-unit id="3c0b68d54ca5426fce25a0ace8e5b8bf44050795" translate="yes" xml:space="preserve">
          <source>This command inserts before point the text at the front of the kill ring. It sets the mark at the beginning of that text, using &lt;code&gt;push-mark&lt;/code&gt; (see &lt;a href=&quot;the-mark#The-Mark&quot;&gt;The Mark&lt;/a&gt;), and puts point at the end.</source>
          <target state="translated">Эта команда вставляет текст перед точкой в ​​начале списка уничтожений. Он устанавливает метку в начале этого текста, используя &lt;code&gt;push-mark&lt;/code&gt; (см &lt;a href=&quot;the-mark#The-Mark&quot;&gt;. Метка&lt;/a&gt; ), и ставит точку в конце.</target>
        </trans-unit>
        <trans-unit id="00cb850812ecd2a392a86a27a8e2ac9630649afe" translate="yes" xml:space="preserve">
          <source>This command inserts contents of register &lt;var&gt;reg&lt;/var&gt; into the current buffer.</source>
          <target state="translated">Эта команда вставляет содержимое регистра &lt;var&gt;reg&lt;/var&gt; в текущий буфер.</target>
        </trans-unit>
        <trans-unit id="b5823cba999dd07db3971854e8b20896e5e06742" translate="yes" xml:space="preserve">
          <source>This command inserts newlines into the current buffer before point. If &lt;var&gt;number-of-newlines&lt;/var&gt; is supplied, that many newline characters are inserted. In an interactive call, &lt;var&gt;number-of-newlines&lt;/var&gt; is the numeric prefix argument.</source>
          <target state="translated">Эта команда вставляет символы новой строки в текущий буфер перед точкой. Если &lt;var&gt;number-of-newlines&lt;/var&gt; подается, что многие символы новой строки вставляется. В интерактивном вызове &lt;var&gt;number-of-newlines&lt;/var&gt; является аргументом числового префикса.</target>
        </trans-unit>
        <trans-unit id="10d91e2db2ec210a0ecc91241ecef7992c6f3ac3" translate="yes" xml:space="preserve">
          <source>This command inserts spaces between the words of the current line so that the line ends exactly at &lt;code&gt;fill-column&lt;/code&gt;. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта команда вставляет пробелы между словами текущей строки, так что строка заканчивается точно на &lt;code&gt;fill-column&lt;/code&gt; . Возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b0cd33fa3471773723d5fc01a50786b892b7a90" translate="yes" xml:space="preserve">
          <source>This command inserts spaces or tabs before point, up to the next tab stop column defined by &lt;code&gt;tab-stop-list&lt;/code&gt;.</source>
          <target state="translated">Эта команда вставляет пробелы или табуляции перед точкой, до следующего столбца &lt;code&gt;tab-stop-list&lt;/code&gt; определенного списком табуляции .</target>
        </trans-unit>
        <trans-unit id="135878bb1fa11119f45ff9a414a7db8bfe0c0784" translate="yes" xml:space="preserve">
          <source>This command inserts the character &lt;var&gt;char&lt;/var&gt; (the last character typed); it does so &lt;var&gt;count&lt;/var&gt; times, before point, and returns &lt;code&gt;nil&lt;/code&gt;. Most printing characters are bound to this command. In routine use, &lt;code&gt;self-insert-command&lt;/code&gt; is the most frequently called function in Emacs, but programs rarely use it except to install it on a keymap.</source>
          <target state="translated">Эта команда вставляет символ &lt;var&gt;char&lt;/var&gt; (последний набранный символ); он &lt;var&gt;count&lt;/var&gt; время до точки и возвращает &lt;code&gt;nil&lt;/code&gt; . С этой командой привязано большинство печатных символов. При повседневном использовании &lt;code&gt;self-insert-command&lt;/code&gt; является наиболее часто вызываемой функцией в Emacs, но программы редко используют ее, кроме как для установки на раскладке клавиатуры.</target>
        </trans-unit>
        <trans-unit id="9626d7b3e3b091a37ee5ebbf01c44cecd8ac2fd6" translate="yes" xml:space="preserve">
          <source>This command inserts the contents of file &lt;var&gt;file&lt;/var&gt;, converting it according to format &lt;var&gt;format&lt;/var&gt;. If &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are non-&lt;code&gt;nil&lt;/code&gt;, they specify which part of the file to read, as in &lt;code&gt;insert-file-contents&lt;/code&gt; (see &lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;Reading from Files&lt;/a&gt;).</source>
          <target state="translated">Эта команда вставляет содержимое файла &lt;var&gt;file&lt;/var&gt; , конвертируя его в соответствии с форматом &lt;var&gt;format&lt;/var&gt; . Если &lt;var&gt;beg&lt;/var&gt; in и &lt;var&gt;end&lt;/var&gt; не равны &lt;code&gt;nil&lt;/code&gt; , они указывают, какую часть файла читать, как в &lt;code&gt;insert-file-contents&lt;/code&gt; (см. &lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;Чтение из файлов&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="da7021fdc034c60b00dcf1ab5f2bc90527eb6799" translate="yes" xml:space="preserve">
          <source>This command inserts the entire accessible contents of &lt;var&gt;from-buffer-or-name&lt;/var&gt; (which must exist) into the current buffer after point. It leaves the mark after the inserted text. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта команда вставляет все доступное содержимое &lt;var&gt;from-buffer-or-name&lt;/var&gt; (которое должно существовать) в текущий буфер после точки. Оставляет отметку после вставленного текста. Значение равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88e1677d378687ba4ac004484580576a9429d773" translate="yes" xml:space="preserve">
          <source>This command inserts whitespace at point, extending to the same column as the next &lt;em&gt;indent point&lt;/em&gt; of the previous nonblank line. An indent point is a non-whitespace character following whitespace. The next indent point is the first one at a column greater than the current column of point. For example, if point is underneath and to the left of the first non-blank character of a line of text, it moves to that column by inserting whitespace.</source>
          <target state="translated">Эта команда вставляет пробел в точку, расширяясь до того же столбца, что и следующая &lt;em&gt;точка отступа&lt;/em&gt; предыдущей непустой строки. Точка отступа - это непробельный символ, следующий за пробелом. Следующая точка отступа - это первая точка в столбце, большем, чем текущий столбец точки. Например, если точка находится под и слева от первого непустого символа строки текста, она перемещается в этот столбец, вставляя пробел.</target>
        </trans-unit>
        <trans-unit id="9595ecd60bd448bf2daea0ea991b68b101ac3102" translate="yes" xml:space="preserve">
          <source>This command is identical to &lt;code&gt;word-search-backward&lt;/code&gt;, except that the beginning or the end of &lt;var&gt;string&lt;/var&gt; need not match a word boundary, unless &lt;var&gt;string&lt;/var&gt; begins or ends in whitespace.</source>
          <target state="translated">Эта команда идентична команде &lt;code&gt;word-search-backward&lt;/code&gt; , за исключением того, что начало или конец &lt;var&gt;string&lt;/var&gt; не обязательно должны совпадать с границей слова, если только &lt;var&gt;string&lt;/var&gt; начинается или не заканчивается пробелом.</target>
        </trans-unit>
        <trans-unit id="58d41366864bbff2a5b943d6b2e3fe42436c078a" translate="yes" xml:space="preserve">
          <source>This command is identical to &lt;code&gt;word-search-forward&lt;/code&gt;, except that the beginning or the end of &lt;var&gt;string&lt;/var&gt; need not match a word boundary, unless &lt;var&gt;string&lt;/var&gt; begins or ends in whitespace. For instance, searching for &amp;lsquo;</source>
          <target state="translated">Эта команда идентична команде &lt;code&gt;word-search-forward&lt;/code&gt; , за исключением того, что начало или конец &lt;var&gt;string&lt;/var&gt; не обязательно должны совпадать с границей слова, если только &lt;var&gt;string&lt;/var&gt; начинается или не заканчивается пробелом. Например, поиск &quot;</target>
        </trans-unit>
        <trans-unit id="ed953efc17ba150660976b3a7ae8e39f29a1f27a" translate="yes" xml:space="preserve">
          <source>This command is like &lt;code&gt;down-list&lt;/code&gt; but it also pays attention to nesting of tokens other than parentheses, such as &lt;code&gt;begin...end&lt;/code&gt;.</source>
          <target state="translated">Эта команда похожа &lt;code&gt;down-list&lt;/code&gt; команду down-list, но она также обращает внимание на вложение токенов, кроме скобок, например, &lt;code&gt;begin...end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90fafcf0ce43e375742f52a0d7669e6be587582c" translate="yes" xml:space="preserve">
          <source>This command loads the file &lt;var&gt;filename&lt;/var&gt;. If &lt;var&gt;filename&lt;/var&gt; is a relative file name, then the current default directory is assumed. This command does not use &lt;code&gt;load-path&lt;/code&gt;, and does not append suffixes. However, it does look for compressed versions (if Auto Compression Mode is enabled). Use this command if you wish to specify precisely the file name to load.</source>
          <target state="translated">Эта команда загружает &lt;var&gt;filename&lt;/var&gt; . Если &lt;var&gt;filename&lt;/var&gt; является относительным именем файла, то предполагается текущий каталог по умолчанию. Эта команда не использует &lt;code&gt;load-path&lt;/code&gt; и не добавляет суффиксы. Однако он ищет сжатые версии (если включен режим автоматического сжатия). Используйте эту команду, если хотите точно указать имя файла для загрузки.</target>
        </trans-unit>
        <trans-unit id="f2935f28ba5712dfbbb71ecbcf2657b64610540c" translate="yes" xml:space="preserve">
          <source>This command loads the library named &lt;var&gt;library&lt;/var&gt;. It is equivalent to &lt;code&gt;load&lt;/code&gt;, except for the way it reads its argument interactively. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Libraries.html#Lisp-Libraries&quot;&gt;Lisp Libraries&lt;/a&gt; in</source>
          <target state="translated">Эта команда загружает библиотеку с именем &lt;var&gt;library&lt;/var&gt; . Это эквивалентно &lt;code&gt;load&lt;/code&gt; , за исключением того, как он читает свой аргумент в интерактивном режиме. См. &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Libraries.html#Lisp-Libraries&quot;&gt;Библиотеки Lisp&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="160191d4bb44ed7e81142348d251f7dfc55427c1" translate="yes" xml:space="preserve">
          <source>This command loads the library named &lt;var&gt;library&lt;/var&gt;. It is equivalent to &lt;code&gt;load&lt;/code&gt;, except for the way it reads its argument interactively. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Libraries.html#Lisp-Libraries&quot;&gt;Lisp Libraries&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef39c045e00a0f5acb130f922e0ab1680aa3f4f" translate="yes" xml:space="preserve">
          <source>This command makes &lt;var&gt;buffer-or-name&lt;/var&gt; appear in some window, without selecting the window or making the buffer current. The argument &lt;var&gt;buffer-or-name&lt;/var&gt; must be a buffer or the name of an existing buffer. The return value is the window chosen to display the buffer, or &lt;code&gt;nil&lt;/code&gt; if no suitable window was found.</source>
          <target state="translated">Эта команда заставляет &lt;var&gt;buffer-or-name&lt;/var&gt; появляться в каком-либо окне, не выбирая окно и не делая буфер текущим. Аргумент &lt;var&gt;buffer-or-name&lt;/var&gt; должен быть буфером или именем существующего буфера. Возвращаемое значение - это окно, выбранное для отображения буфера, или &lt;code&gt;nil&lt;/code&gt; если подходящего окна не найдено.</target>
        </trans-unit>
        <trans-unit id="230b6284a7b0d716c80f10b4addf825eacbaeb1a" translate="yes" xml:space="preserve">
          <source>This command makes a symbolic link to &lt;var&gt;target&lt;/var&gt;, named &lt;var&gt;linkname&lt;/var&gt;. This is like the shell command &amp;lsquo;</source>
          <target state="translated">Эта команда создает символическую ссылку на &lt;var&gt;target&lt;/var&gt; именем &lt;var&gt;linkname&lt;/var&gt; . Это похоже на команду оболочки '</target>
        </trans-unit>
        <trans-unit id="1289d6efb469369728dd95ac27321e796c44ac18" translate="yes" xml:space="preserve">
          <source>This command marks the buffer as modified, since it does not (as far as Emacs knows) match the contents of &lt;var&gt;filename&lt;/var&gt;, even if it matched the former visited file. It also renames the buffer to correspond to the new file name, unless the new name is already in use.</source>
          <target state="translated">Эта команда помечает буфер как измененный, поскольку он (насколько знает Emacs) не соответствует содержимому имени &lt;var&gt;filename&lt;/var&gt; , даже если он соответствует предыдущему посещенному файлу. Он также переименовывает буфер в соответствии с новым именем файла, если новое имя уже не используется.</target>
        </trans-unit>
        <trans-unit id="3045463093bc030acf63701d5fa42bd3099cd946" translate="yes" xml:space="preserve">
          <source>This command marks the current buffer as unmodified, and not needing to be saved. If &lt;var&gt;arg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it marks the buffer as modified, so that it will be saved at the next suitable occasion. Interactively, &lt;var&gt;arg&lt;/var&gt; is the prefix argument.</source>
          <target state="translated">Эта команда помечает текущий буфер как немодифицированный и не требующий сохранения. Если &lt;var&gt;arg&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , он отмечает буфер как измененный, чтобы он был сохранен при следующем подходящем случае. В интерактивном режиме &lt;var&gt;arg&lt;/var&gt; - это префиксный аргумент.</target>
        </trans-unit>
        <trans-unit id="83dce7265fe49cc7961dc06b31c244e25c921259" translate="yes" xml:space="preserve">
          <source>This command marks the current location of point as the beginning of an abbrev. The next call to &lt;code&gt;expand-abbrev&lt;/code&gt; will use the text from here to point (where it is then) as the abbrev to expand, rather than using the previous word as usual.</source>
          <target state="translated">Эта команда отмечает текущее местоположение точки как начало аббревиатуры. Следующий вызов &lt;code&gt;expand-abbrev&lt;/code&gt; будет использовать текст отсюда до точки (где он находится тогда) в качестве сокращения для расширения, вместо того, чтобы использовать предыдущее слово, как обычно.</target>
        </trans-unit>
        <trans-unit id="e6b4c7abace5f19e4e74417132ebc0b612ae42f7" translate="yes" xml:space="preserve">
          <source>This command moves point backward &lt;var&gt;arg&lt;/var&gt; lines and then to the first nonblank character on that line. It returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;arg&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 1.</source>
          <target state="translated">Эта команда перемещает точку назад в строке &lt;var&gt;arg&lt;/var&gt; а затем к первому непустому символу в этой строке. Возвращает &lt;code&gt;nil&lt;/code&gt; . Если &lt;var&gt;arg&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется 1.</target>
        </trans-unit>
        <trans-unit id="72f9b5cc81ad8b1d9723183c58f4b81888dd722f" translate="yes" xml:space="preserve">
          <source>This command moves point forward &lt;var&gt;arg&lt;/var&gt; lines and then to the first nonblank character on that line. It returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;arg&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 1.</source>
          <target state="translated">Эта команда перемещает точечные строки &lt;var&gt;arg&lt;/var&gt; вперед, а затем к первому непустому символу в этой строке. Возвращает &lt;code&gt;nil&lt;/code&gt; . Если &lt;var&gt;arg&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется 1.</target>
        </trans-unit>
        <trans-unit id="54e975e6175492e7858c03b57a5e94deab998c6a" translate="yes" xml:space="preserve">
          <source>This command moves point to the first non-whitespace character in the current line (which is the line in which point is located). It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта команда перемещает точку к первому непробельному символу в текущей строке (которая является строкой, в которой расположена точка). Возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16bea2b736885b9c1690ddce930c3c97f115aced" translate="yes" xml:space="preserve">
          <source>This command performs abbrev expansion if Abbrev mode is enabled and the inserted character does not have word-constituent syntax. (See &lt;a href=&quot;abbrevs#Abbrevs&quot;&gt;Abbrevs&lt;/a&gt;, and &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;.) It is also responsible for calling &lt;code&gt;blink-paren-function&lt;/code&gt; when the inserted character has close parenthesis syntax (see &lt;a href=&quot;blinking#Blinking&quot;&gt;Blinking&lt;/a&gt;).</source>
          <target state="translated">Эта команда выполняет расширение аббревиатуры, если включен режим аббревиатуры и у вставленного символа нет синтаксиса, составляющего слово. (См. &lt;a href=&quot;abbrevs#Abbrevs&quot;&gt;Сокращения&lt;/a&gt; и &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Таблица классов синтаксиса&lt;/a&gt; .) Он также отвечает за вызов функции &lt;code&gt;blink-paren-function&lt;/code&gt; когда вставленный символ имеет синтаксис закрывающих скобок (см. &lt;a href=&quot;blinking#Blinking&quot;&gt;Мигание&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e69e1e968d5bd8894bf4aa234a5af4025b9c34ec" translate="yes" xml:space="preserve">
          <source>This command performs several complex steps to find a window to display in. These steps are described by means of &lt;em&gt;display actions&lt;/em&gt;, which have the form &lt;code&gt;(&lt;var&gt;functions&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt;. Here, &lt;var&gt;functions&lt;/var&gt; is either a single function or a list of functions, referred to as &amp;ldquo;action functions&amp;rdquo; (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;); and &lt;var&gt;alist&lt;/var&gt; is an association list, referred to as &amp;ldquo;action alist&amp;rdquo; (see &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;Buffer Display Action Alists&lt;/a&gt;). See &lt;a href=&quot;the-zen-of-buffer-display#The-Zen-of-Buffer-Display&quot;&gt;The Zen of Buffer Display&lt;/a&gt;, for samples of display actions.</source>
          <target state="translated">Эта команда выполняет несколько сложных шагов, чтобы найти окно для отображения. Эти шаги описываются с помощью &lt;em&gt;действий отображения&lt;/em&gt; , которые имеют форму &lt;code&gt;(&lt;var&gt;functions&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; . Здесь &lt;var&gt;functions&lt;/var&gt; - это либо отдельная функция, либо список функций, называемых &amp;laquo;функциями действия&amp;raquo; (см. &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Функции действий отображения буфера&lt;/a&gt; ); а &lt;var&gt;alist&lt;/var&gt; - это список ассоциаций, называемый &amp;laquo;список действий&amp;raquo; (см. &amp;laquo; &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;Списки действий отображения буфера&amp;raquo;&lt;/a&gt; ). См. &lt;a href=&quot;the-zen-of-buffer-display#The-Zen-of-Buffer-Display&quot;&gt;&amp;laquo;Дзен буферного отображения&amp;raquo;&lt;/a&gt; , где приведены примеры действий отображения.</target>
        </trans-unit>
        <trans-unit id="ac874fec4a2255555483d76cfda857b73f19b6f5" translate="yes" xml:space="preserve">
          <source>This command pops up a window displaying a help buffer containing a listing of all of the key bindings from both the local and global keymaps. It works by calling &lt;code&gt;describe-bindings&lt;/code&gt;.</source>
          <target state="translated">Эта команда открывает окно с буфером справки, содержащим список всех привязок клавиш как из локальной, так и из глобальной таблицы клавиш. Он работает, вызывая &lt;code&gt;describe-bindings&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5723fae69ad70eaec1a0c94cc1880e06995dbf6e" translate="yes" xml:space="preserve">
          <source>This command provides help for the current mode. It prompts the user in the minibuffer with the message &amp;lsquo;</source>
          <target state="translated">Эта команда предоставляет справку для текущего режима. Он предлагает пользователю в минибуфере сообщение '</target>
        </trans-unit>
        <trans-unit id="3d5429dbf77aa466883c3c347ea5afc4d4ecb447" translate="yes" xml:space="preserve">
          <source>This command puts &lt;var&gt;buffer-or-name&lt;/var&gt; at the end of the buffer list, without changing the order of any of the other buffers on the list. This buffer therefore becomes the least desirable candidate for &lt;code&gt;other-buffer&lt;/code&gt; to return. The argument can be either a buffer itself or the name of one.</source>
          <target state="translated">Эта команда помещает имя- &lt;var&gt;buffer-or-name&lt;/var&gt; в конец списка буферов, не изменяя порядок других буферов в списке. Таким образом, этот буфер становится наименее желательным кандидатом для возврата из &lt;code&gt;other-buffer&lt;/code&gt; . Аргументом может быть либо сам буфер, либо его имя.</target>
        </trans-unit>
        <trans-unit id="fc70666f0de62aefc6b885233548b561b4ad9a48" translate="yes" xml:space="preserve">
          <source>This command puts a &lt;code&gt;charset&lt;/code&gt; text property on the decoded text. The value of the property states the character set used to decode the original text.</source>
          <target state="translated">Эта команда помещает свойство текста &lt;code&gt;charset&lt;/code&gt; в декодированный текст. Значение свойства указывает набор символов, используемый для декодирования исходного текста.</target>
        </trans-unit>
        <trans-unit id="6de88c91142fa60f7a754c756b7132dd95fde0b0" translate="yes" xml:space="preserve">
          <source>This command quits &lt;var&gt;window&lt;/var&gt; and buries its buffer. The argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. With prefix argument &lt;var&gt;kill&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt;, it kills the buffer instead of burying it. It calls the function &lt;code&gt;quit-restore-window&lt;/code&gt; described next to deal with the window and its buffer.</source>
          <target state="translated">Эта команда закрывает &lt;var&gt;window&lt;/var&gt; и закапывает его буфер. Довод &lt;var&gt;window&lt;/var&gt; должно быть живое окно и по умолчанию выбранного. С аргументом префикса &lt;var&gt;kill&lt;/var&gt; , отличным от &lt;code&gt;nil&lt;/code&gt; , он уничтожает буфер, а не хоронит его. Он вызывает описанную ниже функцию &lt;code&gt;quit-restore-window&lt;/code&gt; для работы с окном и его буфером.</target>
        </trans-unit>
        <trans-unit id="7784be5e054a212086b929e5c18f79147958b099" translate="yes" xml:space="preserve">
          <source>This command reads input and specifies a prefix argument for the following command. Don&amp;rsquo;t call this command yourself unless you know what you are doing.</source>
          <target state="translated">Эта команда считывает ввод и указывает аргумент префикса для следующей команды. Не вызывайте эту команду самостоятельно, если вы не знаете, что делаете.</target>
        </trans-unit>
        <trans-unit id="1591295b8cfc29c22db263b3bad15c3dee78fff3" translate="yes" xml:space="preserve">
          <source>This command reads the defun containing point, compiles it, and evaluates the result. If you use this on a defun that is actually a function definition, the effect is to install a compiled version of that function.</source>
          <target state="translated">Эта команда читает точку,содержащую Defun,компилирует ее и оценивает результат.Если вы используете ее в определении функции по умолчанию,то результатом будет установка скомпилированной версии этой функции.</target>
        </trans-unit>
        <trans-unit id="ccfd5aea208043148d6cc8208a6715303f29ede5" translate="yes" xml:space="preserve">
          <source>This command recompiles every &amp;lsquo;</source>
          <target state="translated">Эта команда перекомпилирует каждый</target>
        </trans-unit>
        <trans-unit id="9751089f918672ad55bc34859638929401a63127" translate="yes" xml:space="preserve">
          <source>This command reindents the current line, inserts a newline at point, and then indents the new line (the one following the newline just inserted). It does indentation on both lines by calling &lt;code&gt;indent-according-to-mode&lt;/code&gt;.</source>
          <target state="translated">Эта команда повторно делает отступ в текущей строке, вставляет новую строку в точку, а затем делает отступ для новой строки (той, которая следует за только что вставленной новой строкой). Он делает отступ в обеих строках, вызывая &lt;code&gt;indent-according-to-mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="674d87b8e0fd1f4a4a927563f934f31afe0923bb" translate="yes" xml:space="preserve">
          <source>This command renames the file &lt;var&gt;filename&lt;/var&gt; as &lt;var&gt;newname&lt;/var&gt;.</source>
          <target state="translated">Эта команда переименовывает &lt;var&gt;filename&lt;/var&gt; в &lt;var&gt;newname&lt;/var&gt; имя .</target>
        </trans-unit>
        <trans-unit id="33cf144a77ee4443b03cc309d47171aef5c0b36b" translate="yes" xml:space="preserve">
          <source>This command replaces &lt;var&gt;buffer-or-name&lt;/var&gt; with some other buffer, in all windows displaying it. &lt;var&gt;buffer-or-name&lt;/var&gt; should be a buffer, or the name of an existing buffer; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">Эта команда заменяет &lt;var&gt;buffer-or-name&lt;/var&gt; буфера другим буфером во всех окнах, в которых он отображается. &lt;var&gt;buffer-or-name&lt;/var&gt; должно быть буфером или именем существующего буфера; если опущен или &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется текущий буфер.</target>
        </trans-unit>
        <trans-unit id="f0d050a5b45aa2c2f46e017a12604b72c2821556" translate="yes" xml:space="preserve">
          <source>This command replaces any spaces and tabs around point with a single space, or &lt;var&gt;n&lt;/var&gt; spaces if &lt;var&gt;n&lt;/var&gt; is specified. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта команда заменяет любые пробелы и табуляции вокруг точки одним пробелом или &lt;var&gt;n&lt;/var&gt; пробелами, если указано &lt;var&gt;n&lt;/var&gt; . Возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9518563dd9b2c45fb46443171d7c29cc191c74d" translate="yes" xml:space="preserve">
          <source>This command replaces the buffer text with the text of the visited file on disk. This action undoes all changes since the file was visited or saved.</source>
          <target state="translated">Эта команда заменяет текст буфера на текст посещаемого файла на диске.Это действие отменяет все изменения с момента посещения или сохранения файла.</target>
        </trans-unit>
        <trans-unit id="22808ff36144900f2e5e944e00da7f623fd4b3a9" translate="yes" xml:space="preserve">
          <source>This command replaces the just-yanked entry from the kill ring with a different entry from the kill ring.</source>
          <target state="translated">Эта команда заменяет только что полученную запись с кольца-убийцы на запись,отличную от кольца-убийцы.</target>
        </trans-unit>
        <trans-unit id="07ac52ca608a413584040db481dee6b468476618" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th more recent history element. The position in the history can go beyond the current position and invoke &amp;ldquo;future history&amp;rdquo; (see &lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;Text from Minibuffer&lt;/a&gt;).</source>
          <target state="translated">Эта команда заменяет содержимое минибуфера значением &lt;var&gt;n&lt;/var&gt; - го более позднего элемента истории. Позиция в истории может выходить за пределы текущей позиции и вызывать &amp;laquo;будущую историю&amp;raquo; (см. &lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;Текст из минибуфера&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="13cd76f72c08b167d7fb003a1c860df5865ff580" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th next (newer) history element that completes the current contents of the minibuffer before the point.</source>
          <target state="translated">Эта команда заменяет содержимое минибуфера значением &lt;var&gt;n&lt;/var&gt; - го следующего (более нового) элемента истории, который завершает текущее содержимое минибуфера перед точкой.</target>
        </trans-unit>
        <trans-unit id="b3e0669734868d90d1fcc758500f408c04bc7dfd" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th next (newer) history element that matches &lt;var&gt;pattern&lt;/var&gt; (a regular expression).</source>
          <target state="translated">Эта команда заменяет содержимое минибуфера значением &lt;var&gt;n&lt;/var&gt; - го следующего (более нового) элемента истории, который соответствует &lt;var&gt;pattern&lt;/var&gt; (регулярному выражению).</target>
        </trans-unit>
        <trans-unit id="3b282fe8a23854b6e15eced034c6b71d3945b917" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th previous (older) history element that completes the current contents of the minibuffer before the point.</source>
          <target state="translated">Эта команда заменяет содержимое минибуфера значением &lt;var&gt;n&lt;/var&gt; - го предыдущего (более старого) элемента истории, который завершает текущее содержимое минибуфера перед точкой.</target>
        </trans-unit>
        <trans-unit id="497734350baee3d7a9cc50f04dce49e9cd162e22" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th previous (older) history element that matches &lt;var&gt;pattern&lt;/var&gt; (a regular expression).</source>
          <target state="translated">Эта команда заменяет содержимое минибуфера значением &lt;var&gt;n&lt;/var&gt; - го предыдущего (более старого) элемента истории, который соответствует &lt;var&gt;pattern&lt;/var&gt; (регулярному выражению).</target>
        </trans-unit>
        <trans-unit id="9f32df32b75fee1a1b696fe1b671ad61199effd0" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th previous (older) history element.</source>
          <target state="translated">Эта команда заменяет содержимое минибуфера значением &lt;var&gt;n&lt;/var&gt; - го предыдущего (более старого) элемента истории.</target>
        </trans-unit>
        <trans-unit id="638e9bd64e02db086d2bae52aaade55f7482e7f0" translate="yes" xml:space="preserve">
          <source>This command returns &lt;code&gt;t&lt;/code&gt; if there were no errors and &lt;code&gt;nil&lt;/code&gt; otherwise. When called interactively, it prompts for the file name.</source>
          <target state="translated">Эта команда возвращает &lt;code&gt;t&lt;/code&gt; , если ошибок не было, и &lt;code&gt;nil&lt;/code&gt; в противном случае. При интерактивном вызове запрашивает имя файла.</target>
        </trans-unit>
        <trans-unit id="10ca3b92e36af6ad1335e500f3c9780ba8e9a634" translate="yes" xml:space="preserve">
          <source>This command runs a garbage collection, and returns information on the amount of space in use. (Garbage collection can also occur spontaneously if you use more than &lt;code&gt;gc-cons-threshold&lt;/code&gt; bytes of Lisp data since the previous garbage collection.)</source>
          <target state="translated">Эта команда запускает сборку мусора и возвращает информацию об объеме используемого пространства. (Сборка мусора также может происходить спонтанно, если вы используете больше чем &lt;code&gt;gc-cons-threshold&lt;/code&gt; байтов данных Лиспа с момента предыдущей сборки мусора.)</target>
        </trans-unit>
        <trans-unit id="287189d05b8e5e37d32c497a6b1eee7be4d183d7" translate="yes" xml:space="preserve">
          <source>This command saves some modified file-visiting buffers. Normally it asks the user about each buffer. But if &lt;var&gt;save-silently-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it saves all the file-visiting buffers without querying the user.</source>
          <target state="translated">Эта команда сохраняет некоторые измененные буферы обращения к файлам. Обычно он спрашивает пользователя о каждом буфере. Но если &lt;var&gt;save-silently-p&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , он сохраняет все буферы обращения к файлам, не запрашивая пользователя.</target>
        </trans-unit>
        <trans-unit id="a65db190be7f6c671adcc98a7f3f5116e59141fd" translate="yes" xml:space="preserve">
          <source>This command selects a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;, but does so in a window other than the selected window. It may use another existing window or split a window; see &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;.</source>
          <target state="translated">Эта команда выбирает буфер, обращающийся к файлу с &lt;var&gt;filename&lt;/var&gt; , но делает это в окне, отличном от выбранного окна. Он может использовать другое существующее окно или разделить окно; см. &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Переключение буферов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="619c7615c5651d8ad33d34daff2f42c9a21daef4" translate="yes" xml:space="preserve">
          <source>This command selects a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;, like &lt;code&gt;find-file&lt;/code&gt;, but it marks the buffer as read-only. See &lt;a href=&quot;read-only-buffers#Read-Only-Buffers&quot;&gt;Read Only Buffers&lt;/a&gt;, for related functions and variables.</source>
          <target state="translated">Эта команда выбирает буфер, обращающийся к файлу &lt;var&gt;filename&lt;/var&gt; , например &lt;code&gt;find-file&lt;/code&gt; , но помечает буфер как доступный только для чтения. См. &lt;a href=&quot;read-only-buffers#Read-Only-Buffers&quot;&gt;Буферы только&lt;/a&gt; для чтения , чтобы узнать о связанных функциях и переменных.</target>
        </trans-unit>
        <trans-unit id="37e929336c842c198502c93ddeffe557c6b40269" translate="yes" xml:space="preserve">
          <source>This command selects a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;, using an existing buffer if there is one, and otherwise creating a new buffer and reading the file into it. It also returns that buffer.</source>
          <target state="translated">Эта команда выбирает буфер, обращающийся к &lt;var&gt;filename&lt;/var&gt; файла файла , используя существующий буфер, если он есть, и в противном случае создает новый буфер и считывает файл в него. Он также возвращает этот буфер.</target>
        </trans-unit>
        <trans-unit id="13ded09804e080074b521082674aed70b9290aa1" translate="yes" xml:space="preserve">
          <source>This command sets the value of the environment variable named &lt;var&gt;variable&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;. &lt;var&gt;variable&lt;/var&gt; should be a string. Internally, Emacs Lisp can handle any string. However, normally &lt;var&gt;variable&lt;/var&gt; should be a valid shell identifier, that is, a sequence of letters, digits and underscores, starting with a letter or underscore. Otherwise, errors may occur if subprocesses of Emacs try to access the value of &lt;var&gt;variable&lt;/var&gt;. If &lt;var&gt;value&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; (or, interactively, with a prefix argument), &lt;code&gt;setenv&lt;/code&gt; removes &lt;var&gt;variable&lt;/var&gt; from the environment. Otherwise, &lt;var&gt;value&lt;/var&gt; should be a string.</source>
          <target state="translated">Эта команда устанавливает значение переменной окружения с именем &lt;var&gt;variable&lt;/var&gt; в &lt;var&gt;value&lt;/var&gt; . &lt;var&gt;variable&lt;/var&gt; должна быть строкой. Внутренне Emacs Lisp может обрабатывать любую строку. Однако обычно &lt;var&gt;variable&lt;/var&gt; должна быть допустимым идентификатором оболочки, то есть последовательностью букв, цифр и символов подчеркивания, начинающейся с буквы или символа подчеркивания. В противном случае могут возникнуть ошибки, если подпроцессы Emacs попытаются получить доступ к значению &lt;var&gt;variable&lt;/var&gt; . Если &lt;var&gt;value&lt;/var&gt; опущено или равно &lt;code&gt;nil&lt;/code&gt; (или, интерактивно, с аргументом префикса), &lt;code&gt;setenv&lt;/code&gt; удаляет &lt;var&gt;variable&lt;/var&gt; из среды. В противном случае &lt;var&gt;value&lt;/var&gt; должно быть строкой.</target>
        </trans-unit>
        <trans-unit id="8fcaeef993ea25251e9368bd64870310e08df302" translate="yes" xml:space="preserve">
          <source>This command shows a list of &lt;em&gt;shadowed&lt;/em&gt; Emacs Lisp files. A shadowed file is one that will not normally be loaded, despite being in a directory on &lt;code&gt;load-path&lt;/code&gt;, due to the existence of another similarly-named file in a directory earlier on &lt;code&gt;load-path&lt;/code&gt;.</source>
          <target state="translated">Эта команда показывает список &lt;em&gt;затененных&lt;/em&gt; файлов Emacs Lisp. Затененный файл - это файл, который обычно не загружается, несмотря на то, что он находится в каталоге по &lt;code&gt;load-path&lt;/code&gt; , из-за наличия другого файла с аналогичным именем в каталоге ранее по &lt;code&gt;load-path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07f6c3981498b51aac23952451390d803e768897" translate="yes" xml:space="preserve">
          <source>This command sorts lines in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, comparing them alphabetically by the &lt;var&gt;field&lt;/var&gt;th field of each line. Fields are separated by whitespace and numbered starting from 1. If &lt;var&gt;field&lt;/var&gt; is negative, sorting is by the -&lt;var&gt;field&lt;/var&gt;th field from the end of the line. This command is useful for sorting tables.</source>
          <target state="translated">Эта команда сортирует строки в области между &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; , сравнивая их в алфавитном порядке по &lt;var&gt;field&lt;/var&gt; th каждой строки. Поля разделяются пробелом и нумеруются, начиная с 1. Если &lt;var&gt;field&lt;/var&gt; отрицательное, сортировка производится по &lt;var&gt;field&lt;/var&gt; - -го от конца строки. Эта команда полезна для сортировки таблиц.</target>
        </trans-unit>
        <trans-unit id="3019d8e29e6476b8ff59ceed7b700968370b929b" translate="yes" xml:space="preserve">
          <source>This command sorts lines in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, comparing them numerically by the &lt;var&gt;field&lt;/var&gt;th field of each line. Fields are separated by whitespace and numbered starting from 1. The specified field must contain a number in each line of the region. Numbers starting with 0 are treated as octal, and numbers starting with &amp;lsquo;</source>
          <target state="translated">Эта команда сортирует строки в области между &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; , сравнивая их численно по &lt;var&gt;field&lt;/var&gt; th каждой строки. Поля разделяются пробелом и нумеруются, начиная с 1. Указанное поле должно содержать номер в каждой строке региона. Числа, начинающиеся с 0, рассматриваются как восьмеричные, а числа, начинающиеся с '</target>
        </trans-unit>
        <trans-unit id="3f75fc7ca83d71510b5e60c2231077f6130bda3c" translate="yes" xml:space="preserve">
          <source>This command sorts the lines in the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, comparing them alphabetically by a certain range of columns. The column positions of &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; bound the range of columns to sort on.</source>
          <target state="translated">Эта команда сортирует строки в области между &lt;var&gt;beg&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; , сравнивая их в алфавитном порядке по определенному диапазону столбцов. Позиции столбцов &lt;var&gt;beg&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; связали диапазон столбцов для сортировки.</target>
        </trans-unit>
        <trans-unit id="57757a00ef15c31f9fc056499bcdca26426aeaa5" translate="yes" xml:space="preserve">
          <source>This command sorts the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; alphabetically as specified by &lt;var&gt;record-regexp&lt;/var&gt; and &lt;var&gt;key-regexp&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is a negative integer, then sorting is in reverse order.</source>
          <target state="translated">Эта команда сортирует область между &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; алфавитном порядке, как указано в параметрах &lt;var&gt;record-regexp&lt;/var&gt; и &lt;var&gt;key-regexp&lt;/var&gt; . Если &lt;var&gt;reverse&lt;/var&gt; - отрицательное целое число, то сортировка выполняется в обратном порядке.</target>
        </trans-unit>
        <trans-unit id="ba41cb2c6960acb24c793517b69fd12158f503c0" translate="yes" xml:space="preserve">
          <source>This command specifies &lt;var&gt;coding-system&lt;/var&gt; as the coding system to use for decoding keyboard input from &lt;var&gt;terminal&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means not to decode keyboard input. If &lt;var&gt;terminal&lt;/var&gt; is a frame, it means that frame&amp;rsquo;s terminal; if it is &lt;code&gt;nil&lt;/code&gt;, that means the currently selected frame&amp;rsquo;s terminal. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">Эта команда определяет &lt;var&gt;coding-system&lt;/var&gt; как систему кодирования, используемую для декодирования ввода с клавиатуры с &lt;var&gt;terminal&lt;/var&gt; . Если &lt;var&gt;coding-system&lt;/var&gt; равна &lt;code&gt;nil&lt;/code&gt; , это означает, что ввод с клавиатуры не декодируется. Если &lt;var&gt;terminal&lt;/var&gt; является фреймом, это означает, что терминал этого фрейма; если он равен &lt;code&gt;nil&lt;/code&gt; , это означает терминал текущего выбранного кадра. См. &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Несколько терминалов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0dc215892711b17131d8d46b78cbf66e212449eb" translate="yes" xml:space="preserve">
          <source>This command specifies &lt;var&gt;coding-system&lt;/var&gt; as the coding system to use for encoding terminal output from &lt;var&gt;terminal&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means not to encode terminal output. If &lt;var&gt;terminal&lt;/var&gt; is a frame, it means that frame&amp;rsquo;s terminal; if it is &lt;code&gt;nil&lt;/code&gt;, that means the currently selected frame&amp;rsquo;s terminal.</source>
          <target state="translated">Эта команда определяет &lt;var&gt;coding-system&lt;/var&gt; как систему кодирования, используемую для кодирования вывода &lt;var&gt;terminal&lt;/var&gt; из терминала . Если &lt;var&gt;coding-system&lt;/var&gt; равно &lt;code&gt;nil&lt;/code&gt; , это означает, что вывод терминала не кодируется. Если &lt;var&gt;terminal&lt;/var&gt; является фреймом, это означает, что терминал этого фрейма; если он равен &lt;code&gt;nil&lt;/code&gt; , это означает терминал текущего выбранного кадра.</target>
        </trans-unit>
        <trans-unit id="31ef5d19b3155f5becd62fb28fc0818272b9cc71" translate="yes" xml:space="preserve">
          <source>This command swaps the states of the two live windows &lt;var&gt;window-1&lt;/var&gt; and &lt;var&gt;window-2&lt;/var&gt;. &lt;var&gt;window-1&lt;/var&gt; must specify a live window and defaults to the selected one. &lt;var&gt;window-2&lt;/var&gt; must specify a live window and defaults to the window following &lt;var&gt;window-1&lt;/var&gt; in the cyclic ordering of windows, excluding minibuffer windows and including live windows on all visible frames.</source>
          <target state="translated">Эта команда меняет местами состояния двух окон Live &lt;var&gt;window-1&lt;/var&gt; и &lt;var&gt;window-2&lt;/var&gt; . &lt;var&gt;window-1&lt;/var&gt; должно указывать живое окно и по умолчанию выбрано. &lt;var&gt;window-2&lt;/var&gt; должно указывать живое окно и по умолчанию использовать окно, следующее за &lt;var&gt;window-1&lt;/var&gt; в циклическом порядке окон, исключая окна минибуфера и включая живые окна на всех видимых фреймах.</target>
        </trans-unit>
        <trans-unit id="38ad262b9ef6f144a88897489a62c92c0533d472" translate="yes" xml:space="preserve">
          <source>This command switches to the last buffer in the local buffer list of the selected frame. More precisely, it calls the function &lt;code&gt;switch-to-buffer&lt;/code&gt; (see &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;), to display the buffer returned by &lt;code&gt;last-buffer&lt;/code&gt; (see above), in the selected window.</source>
          <target state="translated">Эта команда переключает на последний буфер в списке локальных буферов выбранного кадра. Точнее, он вызывает функцию &lt;code&gt;switch-to-buffer&lt;/code&gt; (см. &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Переключение буферов&lt;/a&gt; ), чтобы отобразить буфер, возвращаемый &lt;code&gt;last-buffer&lt;/code&gt; (см. Выше), в выбранном окне.</target>
        </trans-unit>
        <trans-unit id="cfb86fe983df33f50f05c06e7ced705595b9ec16" translate="yes" xml:space="preserve">
          <source>This command switches to the next buffer in &lt;var&gt;window&lt;/var&gt;, thus undoing the effect of the last &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; command in &lt;var&gt;window&lt;/var&gt;. The argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">Эта команда переключает на следующий буфер в &lt;var&gt;window&lt;/var&gt; , тем самым отменяя действие последней команды &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; в &lt;var&gt;window&lt;/var&gt; . Довод &lt;var&gt;window&lt;/var&gt; должно быть живое окно и по умолчанию выбранного.</target>
        </trans-unit>
        <trans-unit id="d9ffcd53e229520bbe0937ce47720e3e3f705fc8" translate="yes" xml:space="preserve">
          <source>This command toggles side windows on the specified &lt;var&gt;frame&lt;/var&gt;. The optional argument &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one.</source>
          <target state="translated">Эта команда переключает боковые окна на указанной &lt;var&gt;frame&lt;/var&gt; . Необязательный аргумент &lt;var&gt;frame&lt;/var&gt; должен быть активным и по умолчанию выбран выбранным.</target>
        </trans-unit>
        <trans-unit id="bc39e2355c8315301a176946b4646d703991a6f2" translate="yes" xml:space="preserve">
          <source>This command tries to work out appropriate settings to produce your preferred style of indentation. Simply call the command while visiting a file that is indented with your style.</source>
          <target state="translated">Эта команда пытается выработать соответствующие настройки для создания предпочтительного для вас стиля отступа.Просто вызовите команду во время посещения файла,который имеет отступ в вашем стиле.</target>
        </trans-unit>
        <trans-unit id="aec6ebd98eae587585dc1ea9fa515c8692ebbf2e" translate="yes" xml:space="preserve">
          <source>This command unloads the library that provided feature &lt;var&gt;feature&lt;/var&gt;. It undefines all functions, macros, and variables defined in that library with &lt;code&gt;defun&lt;/code&gt;, &lt;code&gt;defalias&lt;/code&gt;, &lt;code&gt;defsubst&lt;/code&gt;, &lt;code&gt;defmacro&lt;/code&gt;, &lt;code&gt;defconst&lt;/code&gt;, &lt;code&gt;defvar&lt;/code&gt;, and &lt;code&gt;defcustom&lt;/code&gt;. It then restores any autoloads formerly associated with those symbols. (Loading saves these in the &lt;code&gt;autoload&lt;/code&gt; property of the symbol.)</source>
          <target state="translated">Эта команда выгружает библиотеку, которая предоставила функцию &lt;var&gt;feature&lt;/var&gt; . Он отменяет определения всех функций, макросов и переменных, определенных в этой библиотеке, с помощью &lt;code&gt;defun&lt;/code&gt; , &lt;code&gt;defalias&lt;/code&gt; , &lt;code&gt;defsubst&lt;/code&gt; , &lt;code&gt;defmacro&lt;/code&gt; , &lt;code&gt;defconst&lt;/code&gt; , &lt;code&gt;defvar&lt;/code&gt; и &lt;code&gt;defcustom&lt;/code&gt; . Затем он восстанавливает все автозагрузки, ранее связанные с этими символами. (Загрузка сохраняет их в свойстве &lt;code&gt;autoload&lt;/code&gt; символа.)</target>
        </trans-unit>
        <trans-unit id="356e5adce275e326509a202c8c9b173cedf5f1de" translate="yes" xml:space="preserve">
          <source>This command uses the functions &lt;code&gt;posn-window&lt;/code&gt; and &lt;code&gt;posn-point&lt;/code&gt; to determine where the click occurred, and &lt;code&gt;dired-get-file-for-visit&lt;/code&gt; to determine which file to visit.</source>
          <target state="translated">Эта команда использует функции &lt;code&gt;posn-window&lt;/code&gt; и &lt;code&gt;posn-point&lt;/code&gt; , чтобы определить, где произошел щелчок, и &lt;code&gt;dired-get-file-for-visit&lt;/code&gt; , чтобы определить, какой файл посетить.</target>
        </trans-unit>
        <trans-unit id="70fe8bc0bd2afe94a6c2200d117768d0b7bd40a2" translate="yes" xml:space="preserve">
          <source>This command visits &lt;var&gt;filename&lt;/var&gt;, like &lt;code&gt;find-file&lt;/code&gt; does, but it does not perform any format conversions (see &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Format Conversion&lt;/a&gt;), character code conversions (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;), or end-of-line conversions (see &lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;End of line conversion&lt;/a&gt;). The buffer visiting the file is made unibyte, and its major mode is Fundamental mode, regardless of the file name. File local variable specifications in the file (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;) are ignored, and automatic decompression and adding a newline at the end of the file due to &lt;code&gt;require-final-newline&lt;/code&gt; (see &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;require-final-newline&lt;/a&gt;) are also disabled.</source>
          <target state="translated">Эта команда &lt;var&gt;filename&lt;/var&gt; &lt;code&gt;find-file&lt;/code&gt; filename , как и find-file , но не выполняет никаких преобразований формата (см. &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Преобразование формата&lt;/a&gt; ), преобразований символьного кода (см. &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Системы кодирования&lt;/a&gt; ) или преобразований в конце строки (см. Преобразование в &lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;конце строки&lt;/a&gt; ). Буфер, обращающийся к файлу, делается однобайтовым, и его основным режимом является режим Fundamental, независимо от имени файла. Спецификации локальных переменных файла в файле (см. &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;Локальные переменные файла&lt;/a&gt; ) игнорируются, а автоматическая распаковка и добавление новой строки в конец файла из-за &lt;code&gt;require-final-newline&lt;/code&gt; (см. &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Require-final-newline&lt;/a&gt; ) также отключаются.</target>
        </trans-unit>
        <trans-unit id="cc4dc7bbf64c1061c70eb1b72dd4950577a5fd5f" translate="yes" xml:space="preserve">
          <source>This command writes the current buffer contents into the file &lt;var&gt;file&lt;/var&gt; in a format based on &lt;var&gt;format&lt;/var&gt;, which is a list of format names. It constructs the actual format starting from &lt;var&gt;format&lt;/var&gt;, then appending any elements from the value of &lt;code&gt;buffer-file-format&lt;/code&gt; with a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;preserve&lt;/var&gt; flag (see above), if they are not already present in &lt;var&gt;format&lt;/var&gt;. It then updates &lt;code&gt;buffer-file-format&lt;/code&gt; with this format, making it the default for future saves. Except for the &lt;var&gt;format&lt;/var&gt; argument, this command is similar to &lt;code&gt;write-file&lt;/code&gt;. In particular, &lt;var&gt;confirm&lt;/var&gt; has the same meaning and interactive treatment as the corresponding argument to &lt;code&gt;write-file&lt;/code&gt;. See &lt;a href=&quot;saving-buffers#Definition-of-write_002dfile&quot;&gt;Definition of write-file&lt;/a&gt;.</source>
          <target state="translated">Эта команда записывает текущее содержимое буфера в файл- &lt;var&gt;file&lt;/var&gt; в формате, основанном на &lt;var&gt;format&lt;/var&gt; , который представляет собой список имен форматов. Он конструирует фактический формат, начиная с &lt;var&gt;format&lt;/var&gt; , а затем добавляет любые элементы из значения &lt;code&gt;buffer-file-format&lt;/code&gt; с флагом &lt;var&gt;preserve&lt;/var&gt; отличным от &lt;code&gt;nil&lt;/code&gt; (см. Выше), если они еще не присутствуют в &lt;var&gt;format&lt;/var&gt; . Затем он обновляет &lt;code&gt;buffer-file-format&lt;/code&gt; с этим форматом, делая его по умолчанию для будущих сохранений. За исключением аргумента &lt;var&gt;format&lt;/var&gt; , эта команда похожа на команду &lt;code&gt;write-file&lt;/code&gt; . В частности, &lt;var&gt;confirm&lt;/var&gt; имеет то же значение и интерактивную обработку, что и соответствующий аргумент &lt;code&gt;write-file&lt;/code&gt; . См. &lt;a href=&quot;saving-buffers#Definition-of-write_002dfile&quot;&gt;Определение файла записи&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="231ec5f5ccc3d6dde477ef14115ec1745ff1897f" translate="yes" xml:space="preserve">
          <source>This command, bound to</source>
          <target state="translated">Эта команда,связанная с</target>
        </trans-unit>
        <trans-unit id="1c3338397e232f86b2750514859093fc8810288c" translate="yes" xml:space="preserve">
          <source>This command, which is the default binding for</source>
          <target state="translated">Эта команда,которая является обязательной по умолчанию для</target>
        </trans-unit>
        <trans-unit id="b5a33db16e2d6add492eed0394d609b8c28b88b4" translate="yes" xml:space="preserve">
          <source>This completely replaces the old function with the new one. The old function can of course be recovered if you later call &lt;code&gt;remove-function&lt;/code&gt;.</source>
          <target state="translated">Это полностью заменяет старую функцию новой. Конечно, старую функцию можно восстановить, если вы позже вызовете &lt;code&gt;remove-function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c78019f6748a3a6dfca00bef66b7291ea1529488" translate="yes" xml:space="preserve">
          <source>This constant is the name of the file where Emacs expects to find the directory-local variables. The name of the file is</source>
          <target state="translated">Эта константа является именем файла,в котором Emacs ожидает найти директорские локальные переменные.Имя файла -</target>
        </trans-unit>
        <trans-unit id="cb3b8895def2bfbb6c4dd8d0eb4984894e99c3df" translate="yes" xml:space="preserve">
          <source>This construct displays a message in the echo area temporarily, during the execution of &lt;var&gt;body&lt;/var&gt;. It displays &lt;var&gt;message&lt;/var&gt;, executes &lt;var&gt;body&lt;/var&gt;, then returns the value of the last body form while restoring the previous echo area contents.</source>
          <target state="translated">Эта конструкция временно отображает сообщение в эхо-области во время выполнения &lt;var&gt;body&lt;/var&gt; . Он отображает &lt;var&gt;message&lt;/var&gt; , выполняет &lt;var&gt;body&lt;/var&gt; , затем возвращает значение последней формы тела, восстанавливая предыдущее содержимое эхо-области.</target>
        </trans-unit>
        <trans-unit id="19e009e83502b67dc27aa2e568013fdd27a55bfb" translate="yes" xml:space="preserve">
          <source>This construct does not actually match an argument. The element following &lt;code&gt;:name&lt;/code&gt; should be a symbol; it is used as an additional name component for the definition. You can use this to add a unique, static component to the name of the definition. It may be used more than once.</source>
          <target state="translated">Эта конструкция фактически не соответствует аргументу. Следующий элемент &lt;code&gt;:name&lt;/code&gt; должно быть символом; он используется как дополнительный компонент имени для определения. Вы можете использовать это, чтобы добавить уникальный статический компонент к имени определения. Его можно использовать более одного раза.</target>
        </trans-unit>
        <trans-unit id="48f87892a7b85d73b302dd7a6522316e48ec0085" translate="yes" xml:space="preserve">
          <source>This construct executes &lt;var&gt;body&lt;/var&gt; once for each element of &lt;var&gt;list&lt;/var&gt;, binding the variable &lt;var&gt;var&lt;/var&gt; locally to hold the current element. Then it returns the value of evaluating &lt;var&gt;result&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;result&lt;/var&gt; is omitted. For example, here is how you could use &lt;code&gt;dolist&lt;/code&gt; to define the &lt;code&gt;reverse&lt;/code&gt; function:</source>
          <target state="translated">Эта конструкция выполняет &lt;var&gt;body&lt;/var&gt; один раз для каждого элемента &lt;var&gt;list&lt;/var&gt; , локально привязывая переменную &lt;var&gt;var&lt;/var&gt; для хранения текущего элемента. Затем он возвращает значение оценки &lt;var&gt;result&lt;/var&gt; или &lt;code&gt;nil&lt;/code&gt; если &lt;var&gt;result&lt;/var&gt; не указан. Например, вот как вы можете использовать &lt;code&gt;dolist&lt;/code&gt; для определения &lt;code&gt;reverse&lt;/code&gt; функции:</target>
        </trans-unit>
        <trans-unit id="5edeb3c65e633a355ce3aad85a8fef27095ea9cb" translate="yes" xml:space="preserve">
          <source>This construct executes &lt;var&gt;body&lt;/var&gt; once for each integer from 0 (inclusive) to &lt;var&gt;count&lt;/var&gt; (exclusive), binding the variable &lt;var&gt;var&lt;/var&gt; to the integer for the current iteration. Then it returns the value of evaluating &lt;var&gt;result&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;result&lt;/var&gt; is omitted. Use of &lt;var&gt;result&lt;/var&gt; is deprecated. Here is an example of using &lt;code&gt;dotimes&lt;/code&gt; to do something 100 times:</source>
          <target state="translated">Эта конструкция выполняет &lt;var&gt;body&lt;/var&gt; один раз для каждого целого числа от 0 (включительно) до &lt;var&gt;count&lt;/var&gt; (исключая), привязывая переменную &lt;var&gt;var&lt;/var&gt; к целому числу для текущей итерации. Затем он возвращает значение оценки &lt;var&gt;result&lt;/var&gt; или &lt;code&gt;nil&lt;/code&gt; если &lt;var&gt;result&lt;/var&gt; не указан. Использование &lt;var&gt;result&lt;/var&gt; не рекомендуется. Вот пример использования &lt;code&gt;dotimes&lt;/code&gt; для выполнения чего-либо 100 раз:</target>
        </trans-unit>
        <trans-unit id="729255fd2a9e62ab0803f3c02c4b17ced59d0e9e" translate="yes" xml:space="preserve">
          <source>This construct executes &lt;var&gt;body&lt;/var&gt;, ignoring any errors that occur during its execution. If the execution is without error, &lt;code&gt;ignore-errors&lt;/code&gt; returns the value of the last form in &lt;var&gt;body&lt;/var&gt;; otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта конструкция выполняет &lt;var&gt;body&lt;/var&gt; , игнорируя любые ошибки, возникающие во время ее выполнения. Если выполнение прошло без ошибок, &lt;code&gt;ignore-errors&lt;/code&gt; возвращает значение последней формы в &lt;var&gt;body&lt;/var&gt; ; в противном случае возвращается &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fe97e88530edbe7ffd947ec1877e85b28490bc0" translate="yes" xml:space="preserve">
          <source>This construct runs the &lt;var&gt;body&lt;/var&gt; forms and returns the value of the last one&amp;mdash;but only if no input arrives. If any input arrives during the execution of the &lt;var&gt;body&lt;/var&gt; forms, it aborts them (working much like a quit). The &lt;code&gt;while-no-input&lt;/code&gt; form returns &lt;code&gt;nil&lt;/code&gt; if aborted by a real quit, and returns &lt;code&gt;t&lt;/code&gt; if aborted by arrival of other input.</source>
          <target state="translated">Эта конструкция запускает &lt;var&gt;body&lt;/var&gt; формы и возвращает значение последней, но только если входные данные не поступают. Если какой-либо ввод поступает во время выполнения форм &lt;var&gt;body&lt;/var&gt; , он их прерывает (работает как выход). Форма &lt;code&gt;while-no-input&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; , если прервано реальным выходом, и возвращает &lt;code&gt;t&lt;/code&gt; , если прервано поступлением другого ввода.</target>
        </trans-unit>
        <trans-unit id="5db1b36ddb8cefe12158ea887c23f8581f528854" translate="yes" xml:space="preserve">
          <source>This constructs and returns a new ewoc, with no nodes (and thus no data elements). &lt;var&gt;pretty-printer&lt;/var&gt; should be a function that takes one argument, a data element of the sort you plan to use in this ewoc, and inserts its textual description at point using &lt;code&gt;insert&lt;/code&gt; (and never &lt;code&gt;insert-before-markers&lt;/code&gt;, because that would interfere with the Ewoc package&amp;rsquo;s internal mechanisms).</source>
          <target state="translated">Это создает и возвращает новый документ без узлов (и, следовательно, без элементов данных). &lt;var&gt;pretty-printer&lt;/var&gt; должна быть функцией, которая принимает один аргумент, элемент данных того типа, который вы планируете использовать в этом ewoc, и вставляет его текстовое описание в точку с помощью &lt;code&gt;insert&lt;/code&gt; (и никогда не &lt;code&gt;insert-before-markers&lt;/code&gt; , потому что это будет мешать Внутренние механизмы пакета Ewoc).</target>
        </trans-unit>
        <trans-unit id="441d920027c6093e76edc8e411782a53d6bb5e30" translate="yes" xml:space="preserve">
          <source>This controls the way Edebug treats macro arguments with no explicit Edebug specification. If it is &lt;code&gt;nil&lt;/code&gt; (the default), none of the arguments is instrumented for evaluation. Otherwise, all arguments are instrumented.</source>
          <target state="translated">Это контролирует способ обработки Edebug аргументов макроса без явной спецификации Edebug. Если он равен &lt;code&gt;nil&lt;/code&gt; (по умолчанию), ни один из аргументов не инструментирован для оценки. В противном случае все аргументы инструментированы.</target>
        </trans-unit>
        <trans-unit id="1a02ef040a510f44b26c35aeb75b50ba1b7bdde8" translate="yes" xml:space="preserve">
          <source>This convenience macro marks the function &lt;var&gt;obsolete-name&lt;/var&gt; obsolete and also defines it as an alias for the function &lt;var&gt;current-name&lt;/var&gt;. It is equivalent to the following:</source>
          <target state="translated">Этот вспомогательный макрос отмечает функцию &lt;var&gt;obsolete-name&lt;/var&gt; как устаревшую, а также определяет ее как псевдоним для функции &lt;var&gt;current-name&lt;/var&gt; . Это эквивалентно следующему:</target>
        </trans-unit>
        <trans-unit id="58832b1d25d27190f05819990c90bc4cfbcc3a90" translate="yes" xml:space="preserve">
          <source>This conversion applies only to characters, not to function keys or other input events; thus,</source>
          <target state="translated">Это преобразование относится только к символам,а не к функциональным клавишам или другим событиям ввода;таким образом,</target>
        </trans-unit>
        <trans-unit id="79546043fcba05c53c168bdc77fbb653585fc00b" translate="yes" xml:space="preserve">
          <source>This convert the unibyte character &lt;var&gt;char&lt;/var&gt; to a multibyte character, assuming &lt;var&gt;char&lt;/var&gt; is either</source>
          <target state="translated">Это преобразует однобайтный символ &lt;var&gt;char&lt;/var&gt; в многобайтовый символ, предполагая, что &lt;var&gt;char&lt;/var&gt; либо</target>
        </trans-unit>
        <trans-unit id="cac58ff91ecd012d9aad90d0f0a1004caffe50f4" translate="yes" xml:space="preserve">
          <source>This converts the multibyte character &lt;var&gt;char&lt;/var&gt; to a unibyte character, and returns that character. If &lt;var&gt;char&lt;/var&gt; is neither</source>
          <target state="translated">Это преобразует многобайтовый символ &lt;var&gt;char&lt;/var&gt; в однобайтовый символ и возвращает этот символ. Если &lt;var&gt;char&lt;/var&gt; ни то, ни другое</target>
        </trans-unit>
        <trans-unit id="6cd8dd35aa5e580db302a8a9ecc6bc6acb3d465f" translate="yes" xml:space="preserve">
          <source>This corresponds to &lt;code&gt;__attribute__&amp;nbsp;((__noinline__))&lt;/code&gt; attribute of GCC, which prevents the function from being considered for inlining. This might be needed, e.g., to countermand effects of link-time optimizations on stack-based variables.</source>
          <target state="translated">Это соответствует &lt;code&gt;__attribute__&amp;nbsp;((__noinline__))&lt;/code&gt; GCC, который предотвращает рассмотрение функции для встраивания. Это может потребоваться, например, для предотвращения эффектов оптимизации времени компоновки для переменных на основе стека.</target>
        </trans-unit>
        <trans-unit id="65593ddaa7a83e6841f2adf0699dc9186e0f9090" translate="yes" xml:space="preserve">
          <source>This could be buffer-local to do something special for specific files. If you change it, you may need to change &lt;code&gt;backup-file-name-p&lt;/code&gt; and &lt;code&gt;file-name-sans-versions&lt;/code&gt; too.</source>
          <target state="translated">Это может быть локальный буфер, чтобы делать что-то особенное для определенных файлов. Если вы измените его, вам может потребоваться также изменить &lt;code&gt;backup-file-name-p&lt;/code&gt; и &lt;code&gt;file-name-sans-versions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a566ed5cac8786dd67797d3a0d120ea76183719e" translate="yes" xml:space="preserve">
          <source>This could be implemented with multiple buffers (kept in sync when the user edits the text), or with narrowing (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;). But these alternatives might sometimes become tedious or prohibitively expensive, especially if each type of text requires expensive buffer-global operations in order to provide correct display and editing commands.</source>
          <target state="translated">Это может быть реализовано с использованием нескольких буферов (синхронизированных, когда пользователь редактирует текст) или сужением (см. &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Сужение&lt;/a&gt; ). Но эти альтернативы могут иногда становиться утомительными или чрезмерно дорогими, особенно если каждый тип текста требует дорогостоящих глобальных операций с буфером, чтобы обеспечить правильные команды отображения и редактирования.</target>
        </trans-unit>
        <trans-unit id="f394b60e38b5599682704674137ba41a07c7b541" translate="yes" xml:space="preserve">
          <source>This creates an uninterned symbol named &lt;code&gt;max&lt;/code&gt; and puts it in the expansion instead of the usual interned symbol &lt;code&gt;max&lt;/code&gt; that appears in expressions ordinarily.</source>
          <target state="translated">Это создает неинтернированный символ с именем &lt;code&gt;max&lt;/code&gt; и помещает его в расширение вместо обычного интернированного символа &lt;code&gt;max&lt;/code&gt; , который обычно появляется в выражениях.</target>
        </trans-unit>
        <trans-unit id="7aeb8bdf71d865646040e73e725aecf3fd6800e0" translate="yes" xml:space="preserve">
          <source>This creates and returns a display table. The table initially has &lt;code&gt;nil&lt;/code&gt; in all elements.</source>
          <target state="translated">Это создает и возвращает таблицу отображения. В таблице изначально есть &lt;code&gt;nil&lt;/code&gt; во всех элементах.</target>
        </trans-unit>
        <trans-unit id="776e4b68583132ebfa42a8a0e9f9b4feb850568e" translate="yes" xml:space="preserve">
          <source>This creates and returns an empty category table. In an empty category table, no categories have been allocated, and no characters belong to any categories.</source>
          <target state="translated">При этом создается и возвращается пустая таблица категорий.В пустой таблице категорий не было выделено ни одной категории,и ни один символ не принадлежит ни одной из категорий.</target>
        </trans-unit>
        <trans-unit id="e1c8b5645bc9119e30c1142a0bf9ab49e40da845" translate="yes" xml:space="preserve">
          <source>This creates and returns an indirect buffer named &lt;var&gt;name&lt;/var&gt; whose base buffer is &lt;var&gt;base-buffer&lt;/var&gt;. The argument &lt;var&gt;base-buffer&lt;/var&gt; may be a live buffer or the name (a string) of an existing buffer. If &lt;var&gt;name&lt;/var&gt; is the name of an existing buffer, an error is signaled.</source>
          <target state="translated">Это создает и возвращает косвенный буфер с именем &lt;var&gt;name&lt;/var&gt; , базовым буфером которого является &lt;var&gt;base-buffer&lt;/var&gt; . Аргумент &lt;var&gt;base-buffer&lt;/var&gt; может быть активным буфером или именем (строкой) существующего буфера. Если &lt;var&gt;name&lt;/var&gt; - это имя существующего буфера, сигнализируется ошибка.</target>
        </trans-unit>
        <trans-unit id="15b1ed7c7974555a78f9a8cdd2241db7107cd225" translate="yes" xml:space="preserve">
          <source>This creates and returns an xwidget object. If &lt;var&gt;buffer&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer. If &lt;var&gt;buffer&lt;/var&gt; names a buffer that doesn&amp;rsquo;t exist, it will be created. The &lt;var&gt;type&lt;/var&gt; identifies the type of the xwidget component, it can be one of the following:</source>
          <target state="translated">Это создает и возвращает объект xwidget. Если &lt;var&gt;buffer&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется текущий буфер. Если &lt;var&gt;buffer&lt;/var&gt; называет буфер, который не существует, он будет создан. В &lt;var&gt;type&lt;/var&gt; идентифицирует тип компонента xwidget, он может быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="96eaebac0f2f915eb1298d8f003d34d0fc4b82d3" translate="yes" xml:space="preserve">
          <source>This customizable option holds the default frame parameters used for displaying tooltips. Any font and color parameters are ignored, and the corresponding attributes of the &lt;code&gt;tooltip&lt;/code&gt; face are used instead. If &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;top&lt;/code&gt; parameters are included, they are used as absolute frame-relative coordinates where the tooltip should be shown. (Mouse-relative position of the tooltip can be customized using the variables described in &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;Tooltips&lt;/a&gt; in</source>
          <target state="translated">Этот настраиваемый параметр содержит параметры кадра по умолчанию, используемые для отображения всплывающих подсказок. Любые параметры шрифта и цвета игнорируются, и вместо них используются соответствующие атрибуты &lt;code&gt;tooltip&lt;/code&gt; . Если включены параметры &lt;code&gt;left&lt;/code&gt; или &lt;code&gt;top&lt;/code&gt; , они используются как абсолютные координаты относительно кадра, где должна отображаться всплывающая подсказка. (Положение всплывающей подсказки относительно мыши можно настроить с помощью переменных, описанных в всплывающих &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;подсказках&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="0f806534e554e77f4da2d1f4af553822b3f73595" translate="yes" xml:space="preserve">
          <source>This customizable option holds the default frame parameters used for displaying tooltips. Any font and color parameters are ignored, and the corresponding attributes of the &lt;code&gt;tooltip&lt;/code&gt; face are used instead. If &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;top&lt;/code&gt; parameters are included, they are used as absolute frame-relative coordinates where the tooltip should be shown. (Mouse-relative position of the tooltip can be customized using the variables described in &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;Tooltips&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32676621b26be88214ba41100c3be58060e2082" translate="yes" xml:space="preserve">
          <source>This customization type is similar to &lt;code&gt;alist&lt;/code&gt; (see above), except that (i) the information is stored as a property list, (see &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;), and (ii) &lt;var&gt;key-type&lt;/var&gt;, if omitted, defaults to &lt;code&gt;symbol&lt;/code&gt; rather than &lt;code&gt;sexp&lt;/code&gt;.</source>
          <target state="translated">Этот тип настройки похож на &lt;code&gt;alist&lt;/code&gt; (см. Выше), за исключением того, что (i) информация хранится в виде списка свойств (см. &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Списки свойств&lt;/a&gt; ) и (ii) &lt;var&gt;key-type&lt;/var&gt; , если он опущен, по умолчанию имеет значение &lt;code&gt;symbol&lt;/code&gt; , а не &lt;code&gt;sexp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61ef043faf532a08fb5accd37a8605a58e78e8e0" translate="yes" xml:space="preserve">
          <source>This defines a global toggle named &lt;var&gt;global-mode&lt;/var&gt; whose meaning is to enable or disable the buffer-local minor mode &lt;var&gt;mode&lt;/var&gt; in all buffers. It also executes the &lt;var&gt;body&lt;/var&gt; forms. To turn on the minor mode in a buffer, it uses the function &lt;var&gt;turn-on&lt;/var&gt;; to turn off the minor mode, it calls &lt;var&gt;mode&lt;/var&gt; with -1 as argument.</source>
          <target state="translated">Это определяет глобальный тумблер под названием &lt;var&gt;global-mode&lt;/var&gt; , значение которого является , чтобы включить или отключить режим второстепенного буфера локального &lt;var&gt;mode&lt;/var&gt; во всех буферах. Он также выполняет формы &lt;var&gt;body&lt;/var&gt; . Для включения второстепенного режима в буфере используется функция &lt;var&gt;turn-on&lt;/var&gt; ; чтобы выключить второстепенный режим, он вызывает &lt;var&gt;mode&lt;/var&gt; с -1 в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="f8af97490ad006efd7dedc92ffa9b688078ca86f" translate="yes" xml:space="preserve">
          <source>This defines a minor mode named &amp;ldquo;Hungry mode&amp;rdquo;, a command named &lt;code&gt;hungry-mode&lt;/code&gt; to toggle it, a variable named &lt;code&gt;hungry-mode&lt;/code&gt; which indicates whether the mode is enabled, and a variable named &lt;code&gt;hungry-mode-map&lt;/code&gt; which holds the keymap that is active when the mode is enabled. It initializes the keymap with a key binding for</source>
          <target state="translated">Это определяет второстепенный режим с именем &amp;laquo;Hungry mode&amp;raquo;, команду с именем &lt;code&gt;hungry-mode&lt;/code&gt; для его переключения, переменную с именем &lt;code&gt;hungry-mode&lt;/code&gt; , которая указывает, включен ли режим, и переменную с именем &lt;code&gt;hungry-mode-map&lt;/code&gt; , которая содержит раскладку клавиатуры, которая активен, когда режим включен. Он инициализирует раскладку клавиш с привязкой клавиш для</target>
        </trans-unit>
        <trans-unit id="25b921cab86c0a9d48be338a53d51fa2582ea497" translate="yes" xml:space="preserve">
          <source>This defines a single Lisp form which is evaluated after the mode hooks have run. It should not be quoted.</source>
          <target state="translated">Это определяет единственную форму Lisp,которая вычисляется после запуска крючков режима.Она не должна быть процитирована.</target>
        </trans-unit>
        <trans-unit id="a9ccae35dc95201daddf035a3127e41baa5ade46" translate="yes" xml:space="preserve">
          <source>This defines four comment-delimiting sequences:</source>
          <target state="translated">Это определяет четыре последовательности,ограничивающие комментарии:</target>
        </trans-unit>
        <trans-unit id="61c8f0ccafaa8d4d7b6ac3320bcf8e246b6593b9" translate="yes" xml:space="preserve">
          <source>This defines the customization option &lt;var&gt;global-mode&lt;/var&gt; (see &lt;a href=&quot;customization#Customization&quot;&gt;Customization&lt;/a&gt;), which can be toggled in the Customize interface to turn the minor mode on and off. As with &lt;code&gt;define-minor-mode&lt;/code&gt;, you should ensure that the &lt;code&gt;define-globalized-minor-mode&lt;/code&gt; form is evaluated each time Emacs starts, for example by providing a &lt;code&gt;:require&lt;/code&gt; keyword.</source>
          <target state="translated">Это определяет параметр настройки &lt;var&gt;global-mode&lt;/var&gt; (см. &lt;a href=&quot;customization#Customization&quot;&gt;Настройка&lt;/a&gt; ), который можно переключать в интерфейсе настройки, чтобы включать и выключать второстепенный режим. Как и в случае с &lt;code&gt;define-minor-mode&lt;/code&gt; , вы должны убедиться, что форма &lt;code&gt;define-globalized-minor-mode&lt;/code&gt; вычисляется каждый раз при запуске Emacs, например, путем предоставления ключевого слова &lt;code&gt;:require&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0654c2fe1757cc99313b9ee8d9bde98f4406d6ec" translate="yes" xml:space="preserve">
          <source>This deletes each node in &lt;var&gt;nodes&lt;/var&gt; from &lt;var&gt;ewoc&lt;/var&gt;.</source>
          <target state="translated">Это удаляет каждый узел в &lt;var&gt;nodes&lt;/var&gt; из &lt;var&gt;ewoc&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="42d97322be035858edbad1a9d48f7b8d2178c424" translate="yes" xml:space="preserve">
          <source>This deletes the file named &lt;var&gt;filename&lt;/var&gt;, catching any error and returning &lt;code&gt;nil&lt;/code&gt; if an error occurs. (You can use the macro &lt;code&gt;ignore-errors&lt;/code&gt; for a simple case like this; see below.)</source>
          <target state="translated">Это удаляет файл с именем &lt;var&gt;filename&lt;/var&gt; , обнаруживает любую ошибку и возвращает &lt;code&gt;nil&lt;/code&gt; , если ошибка возникает. (Вы можете использовать макрос &lt;code&gt;ignore-errors&lt;/code&gt; для такого простого случая; см. Ниже.)</target>
        </trans-unit>
        <trans-unit id="40c2d1f86da44e947b5c2bd5c7621c71f7d4692c" translate="yes" xml:space="preserve">
          <source>This determines the node in &lt;var&gt;ewoc&lt;/var&gt; which contains point (or &lt;var&gt;pos&lt;/var&gt; if specified), and returns that node. If &lt;var&gt;ewoc&lt;/var&gt; has no nodes, it returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;pos&lt;/var&gt; is before the first node, it returns the first node; if &lt;var&gt;pos&lt;/var&gt; is after the last node, it returns the last node. The optional third arg &lt;var&gt;guess&lt;/var&gt; should be a node that is likely to be near &lt;var&gt;pos&lt;/var&gt;; this doesn&amp;rsquo;t alter the result, but makes the function run faster.</source>
          <target state="translated">Это определяет узел в &lt;var&gt;ewoc&lt;/var&gt; , который содержит точку (или &lt;var&gt;pos&lt;/var&gt; , если указано), и возвращает этот узел. Если &lt;var&gt;ewoc&lt;/var&gt; не имеет узлов, он возвращает &lt;code&gt;nil&lt;/code&gt; . Если &lt;var&gt;pos&lt;/var&gt; находится перед первым узлом, он возвращает первый узел; если &lt;var&gt;pos&lt;/var&gt; находится после последнего узла, он возвращает последний узел. Необязательный третий аргумент &lt;var&gt;guess&lt;/var&gt; должен быть узлом, который, вероятно, будет рядом с &lt;var&gt;pos&lt;/var&gt; ; это не меняет результата, но заставляет функцию работать быстрее.</target>
        </trans-unit>
        <trans-unit id="19360270f62f12bc6a373a7cb78889f2c4a7b650" translate="yes" xml:space="preserve">
          <source>This differs from ordinary syntax such as this</source>
          <target state="translated">Это отличается от обычного синтаксиса,подобного этому.</target>
        </trans-unit>
        <trans-unit id="7269a995a026e6157e1f1ebb99d0283d69ea4f8f" translate="yes" xml:space="preserve">
          <source>This display action specifies the fallback behavior for &lt;code&gt;display-buffer&lt;/code&gt; if no other display actions are given.</source>
          <target state="translated">Это действие отображения определяет резервное поведение для &lt;code&gt;display-buffer&lt;/code&gt; если не заданы другие действия отображения.</target>
        </trans-unit>
        <trans-unit id="b8689d2faeec8c24b11323876ebe042c75f4be39" translate="yes" xml:space="preserve">
          <source>This display specification affects all the space characters within the text that has the specification. It displays all of these spaces &lt;var&gt;factor&lt;/var&gt; times as wide as normal. The element &lt;var&gt;factor&lt;/var&gt; should be an integer or float. Characters other than spaces are not affected at all; in particular, this has no effect on tab characters.</source>
          <target state="translated">Эта спецификация отображения влияет на все символы пробела в тексте, имеющем спецификацию. Он отображает все эти пространства &lt;var&gt;factor&lt;/var&gt; времени так велик , как нормальный. &lt;var&gt;factor&lt;/var&gt; элемента должен быть целым или плавающим. Символы, отличные от пробелов, не затрагиваются; в частности, это не влияет на символы табуляции.</target>
        </trans-unit>
        <trans-unit id="592cefd94a03b4739baef199b154e396c1ef073d" translate="yes" xml:space="preserve">
          <source>This display specification makes the text taller or shorter. Here are the possibilities for &lt;var&gt;height&lt;/var&gt;:</source>
          <target state="translated">Эта спецификация дисплея делает текст выше или короче. Вот возможности для &lt;var&gt;height&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="36a3ea4223936b8a16479fbc53763ae4b8a71d99" translate="yes" xml:space="preserve">
          <source>This display specification on any character of a line of text causes the specified &lt;var&gt;bitmap&lt;/var&gt; be displayed in the left or right fringes for that line, instead of the characters that have the display specification. The optional &lt;var&gt;face&lt;/var&gt; specifies the face whose colors are to be used for the bitmap display. See &lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;Fringe Bitmaps&lt;/a&gt;, for the details.</source>
          <target state="translated">Эта спецификация отображения на любом символе строки текста заставляет указанное &lt;var&gt;bitmap&lt;/var&gt; отображаться в левой или правой полосе для этой строки вместо символов, которые имеют спецификацию отображения. Необязательная &lt;var&gt;face&lt;/var&gt; определяет грань, цвета которой должны использоваться для отображения растрового изображения. Подробнее см. &lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;Растровые изображения с бахромой&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="93cf65c9a0445a80ca8a8165521ce7ee2fd04b18" translate="yes" xml:space="preserve">
          <source>This does for the size parameters &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; what the &lt;code&gt;user-position&lt;/code&gt; parameter (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;user-position&lt;/a&gt;) does for the position parameters &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;.</source>
          <target state="translated">Это делает для параметров размера &lt;code&gt;height&lt;/code&gt; и &lt;code&gt;width&lt;/code&gt; то же, что параметр &lt;code&gt;user-position&lt;/code&gt; (см. &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;User-position&lt;/a&gt; ) делает для параметров положения &lt;code&gt;top&lt;/code&gt; и &lt;code&gt;left&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38712cb66f1b52401b8eeac29a5ad9b91c46b923" translate="yes" xml:space="preserve">
          <source>This does not depend on one of the libraries linked to Emacs.</source>
          <target state="translated">Это не зависит от одной из библиотек,связанных с Emacs.</target>
        </trans-unit>
        <trans-unit id="13166b5b8bd0e09ebf367e7317f249e78ab03831" translate="yes" xml:space="preserve">
          <source>This either tries to split the window at the bottom of the frame or the frame&amp;rsquo;s root window, or to reuse an existing window at the bottom of the selected frame.</source>
          <target state="translated">Это либо пытается разделить окно внизу фрейма или корневого окна фрейма, либо повторно использовать существующее окно внизу выбранного фрейма.</target>
        </trans-unit>
        <trans-unit id="6508c390fad6127b900c1ed90f5801b40662d322" translate="yes" xml:space="preserve">
          <source>This element is a boundary. The elements between two boundaries are called a &lt;em&gt;change group&lt;/em&gt;; normally, each change group corresponds to one keyboard command, and undo commands normally undo an entire group as a unit.</source>
          <target state="translated">Этот элемент является границей. Элементы между двумя границами называются &lt;em&gt;группой изменений&lt;/em&gt; ; обычно каждая группа изменений соответствует одной клавиатурной команде, а команды отмены обычно отменяют всю группу как единое целое.</target>
        </trans-unit>
        <trans-unit id="e54b773d4f02d66db9663356d9f794f2138e5279" translate="yes" xml:space="preserve">
          <source>This element of &lt;var&gt;spec&lt;/var&gt; doesn&amp;rsquo;t match any terminal; instead, it specifies defaults that apply to all terminals. This element, if used, must be the first element of &lt;var&gt;spec&lt;/var&gt;. Each of the following elements can override any or all of these defaults.</source>
          <target state="translated">Этот элемент &lt;var&gt;spec&lt;/var&gt; не соответствует ни одному терминалу; вместо этого он определяет значения по умолчанию, которые применяются ко всем терминалам. Этот элемент, если он используется, должен быть первым элементом &lt;var&gt;spec&lt;/var&gt; . Каждый из следующих элементов может отменять любые или все эти значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="307e77b079ef7349c14d6f5197aa13acf3da80fc" translate="yes" xml:space="preserve">
          <source>This element of &lt;var&gt;spec&lt;/var&gt; matches all terminals. Therefore, any subsequent elements of &lt;var&gt;spec&lt;/var&gt; are never used. Normally &lt;code&gt;t&lt;/code&gt; is used in the last (or only) element of &lt;var&gt;spec&lt;/var&gt;.</source>
          <target state="translated">Этот элемент &lt;var&gt;spec&lt;/var&gt; подходит для всех клемм. Следовательно, любые последующие элементы &lt;var&gt;spec&lt;/var&gt; никогда не используются. Обычно &lt;code&gt;t&lt;/code&gt; используется в последнем (или единственном) элементе &lt;var&gt;spec&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="f44b269dc35504667b8fd5dfc82cea359e827180" translate="yes" xml:space="preserve">
          <source>This entry is similar to the &lt;code&gt;window-height&lt;/code&gt; entry described before, but used to adjust the chosen window&amp;rsquo;s width instead. The value can be one of the following:</source>
          <target state="translated">Эта запись похожа на запись &lt;code&gt;window-height&lt;/code&gt; описанную ранее, но вместо этого используется для регулировки ширины выбранного окна. Значение может быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="44b7f094fb9e2b284f706f57d35c08d71bf8c5c3" translate="yes" xml:space="preserve">
          <source>This error can be handled through any of its condition names. This example handles &lt;code&gt;new-error&lt;/code&gt; and any other errors in the class &lt;code&gt;my-own-errors&lt;/code&gt;:</source>
          <target state="translated">Эту ошибку можно обработать с помощью любого из ее имен условий. В этом примере обрабатывается &lt;code&gt;new-error&lt;/code&gt; и любые другие ошибки в классе &lt;code&gt;my-own-errors&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="720b7aaa94a82d01c4794fe20d63e61b139885dd" translate="yes" xml:space="preserve">
          <source>This error has several condition names: &lt;code&gt;new-error&lt;/code&gt;, the narrowest classification; &lt;code&gt;my-own-errors&lt;/code&gt;, which we imagine is a wider classification; and all the conditions of &lt;code&gt;my-own-errors&lt;/code&gt; which should include &lt;code&gt;error&lt;/code&gt;, which is the widest of all.</source>
          <target state="translated">У этой ошибки есть несколько названий условий: &lt;code&gt;new-error&lt;/code&gt; , самая узкая классификация; &lt;code&gt;my-own-errors&lt;/code&gt; , которые, как мы представляем, являются более широкой классификацией; и все условия &lt;code&gt;my-own-errors&lt;/code&gt; которые должны включать &lt;code&gt;error&lt;/code&gt; , которая является самой широкой из всех.</target>
        </trans-unit>
        <trans-unit id="46f76051817e74eb67edb4d63ff61ecd701e1276" translate="yes" xml:space="preserve">
          <source>This evaluates the arguments &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;(* 2 3)&lt;/code&gt;, and &lt;code&gt;(- 5
4)&lt;/code&gt; from left to right. Then it applies the lambda expression to the argument values 1, 6 and 1 to produce the value 8.</source>
          <target state="translated">Это оценивает аргументы &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;(* 2 3)&lt;/code&gt; и &lt;code&gt;(- 5 4)&lt;/code&gt; слева направо. Затем он применяет лямбда-выражение к значениям аргументов 1, 6 и 1 для получения значения 8.</target>
        </trans-unit>
        <trans-unit id="69c1c748bf3cd5a287abc63381636360fa27e7db" translate="yes" xml:space="preserve">
          <source>This example affects only C mode proper. To add the same patterns to C mode &lt;em&gt;and&lt;/em&gt; all modes derived from it, do this instead:</source>
          <target state="translated">Этот пример влияет только на режим C. Чтобы добавить те же шаблоны в режим C &lt;em&gt;и&lt;/em&gt; все производные от него режимы, сделайте следующее:</target>
        </trans-unit>
        <trans-unit id="5384ed028486d0b91b0394b48e1cb533ea34ce58" translate="yes" xml:space="preserve">
          <source>This example can be extended to be a color selection widget (in other words, the &amp;ldquo;controller&amp;rdquo; part of the &amp;ldquo;model&amp;ndash;view&amp;ndash;controller&amp;rdquo; design paradigm) by defining commands to modify &lt;code&gt;colorcomp-data&lt;/code&gt; and to finish the selection process, and a keymap to tie it all together conveniently.</source>
          <target state="translated">Этот пример можно расширить до виджета выбора цвета (другими словами, &amp;laquo;контроллер&amp;raquo; в парадигме дизайна &amp;laquo;модель &amp;ndash; представление &amp;ndash; контроллер&amp;raquo;) путем определения команд для изменения &lt;code&gt;colorcomp-data&lt;/code&gt; и завершения процесса выбора, а также раскладка клавиатуры, чтобы удобно связать все вместе.</target>
        </trans-unit>
        <trans-unit id="df08f64e57d04de8aaa9e8c787229bb4af344be9" translate="yes" xml:space="preserve">
          <source>This example creates a hash table whose keys are strings that are compared case-insensitively.</source>
          <target state="translated">В этом примере создается хэш-таблица,ключами которой являются строки,которые сравниваются без учета регистра.</target>
        </trans-unit>
        <trans-unit id="f1a5216565ce67155ee836de4737ae2e0b658c35" translate="yes" xml:space="preserve">
          <source>This example creates a sparse keymap and makes a number of bindings in it:</source>
          <target state="translated">В этом примере создается разреженная клавиатурная карта и производится несколько привязок в ней:</target>
        </trans-unit>
        <trans-unit id="c10cacdf2de04ef95f61acc180ccc22f0b05e92b" translate="yes" xml:space="preserve">
          <source>This example has a small bug: if the user types</source>
          <target state="translated">В этом примере есть небольшая ошибка:если пользователь набирает</target>
        </trans-unit>
        <trans-unit id="cbee9460ee0719dec38b54326085d108517447be" translate="yes" xml:space="preserve">
          <source>This example initializes the value of &lt;code&gt;bar&lt;/code&gt; to &lt;code&gt;23&lt;/code&gt;, and gives it a documentation string:</source>
          <target state="translated">Этот пример инициализирует значение &lt;code&gt;bar&lt;/code&gt; до &lt;code&gt;23&lt;/code&gt; , и дает ему строку документации:</target>
        </trans-unit>
        <trans-unit id="67e8773626193e784e2ea64066293bd3b65f7fb7" translate="yes" xml:space="preserve">
          <source>This example shows how &lt;code&gt;copy-alist&lt;/code&gt; makes it possible to change the associations of one copy without affecting the other:</source>
          <target state="translated">Этот пример показывает, как &lt;code&gt;copy-alist&lt;/code&gt; позволяет изменять ассоциации одной копии, не затрагивая другую:</target>
        </trans-unit>
        <trans-unit id="960576953dddb4f1d23f0b9aa313e71228f26d76" translate="yes" xml:space="preserve">
          <source>This example shows how to convert the window-relative coordinates in the text area of a window into frame-relative coordinates:</source>
          <target state="translated">В данном примере показано,как преобразовать координаты окна-отношения в текстовой области окна в координаты,привязанные к рамке:</target>
        </trans-unit>
        <trans-unit id="0bed23725454106589c0f1789605a60658a8b116" translate="yes" xml:space="preserve">
          <source>This executes &lt;var&gt;body&lt;/var&gt; normally, except any buffer changes it makes do not trigger the calls to &lt;code&gt;before-change-functions&lt;/code&gt; and &lt;code&gt;after-change-functions&lt;/code&gt;. Instead there is a single call of each of these hooks for the region enclosed by &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, the parameters supplied to &lt;code&gt;after-change-functions&lt;/code&gt; reflecting the changes made to the size of the region by &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">Он выполняет &lt;var&gt;body&lt;/var&gt; как обычно, за исключением того, что любые изменения буфера, которые он делает, не запускают вызовы &lt;code&gt;before-change-functions&lt;/code&gt; и &lt;code&gt;after-change-functions&lt;/code&gt; . Вместо этого есть один вызов каждого из этих крючков для области , охваченной &lt;var&gt;beg&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; , параметры , поставляемые &lt;code&gt;after-change-functions&lt;/code&gt; , отражающих изменения , внесенные в размер области от &lt;var&gt;body&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="97a99daef0e09aadad6a1edb95c2efaf5e43925d" translate="yes" xml:space="preserve">
          <source>This exists as a separate function so that you can redefine it to customize the naming convention for auto-save files. Be sure to change &lt;code&gt;auto-save-file-name-p&lt;/code&gt; in a corresponding way.</source>
          <target state="translated">Это существует как отдельная функция, так что вы можете переопределить ее, чтобы настроить соглашение об именах для файлов с автоматическим сохранением. Обязательно измените &lt;code&gt;auto-save-file-name-p&lt;/code&gt; соответствующим образом.</target>
        </trans-unit>
        <trans-unit id="83ac2665fcb7f52cf7b79acb847f017da9c9ded9" translate="yes" xml:space="preserve">
          <source>This extracts the data encapsulated by &lt;var&gt;node&lt;/var&gt; and returns it.</source>
          <target state="translated">Это извлекает данные, инкапсулированные &lt;var&gt;node&lt;/var&gt; и возвращает их.</target>
        </trans-unit>
        <trans-unit id="30d143d6a1708406abec26b984fa5693fbea22dd" translate="yes" xml:space="preserve">
          <source>This feature has a drawback: if you delete, move, or alter the compiled file (such as by compiling a new version), Emacs may no longer be able to access the documentation string of previously-loaded functions or variables. Such a problem normally only occurs if you build Emacs yourself, and happen to edit and/or recompile the Lisp source files. To solve it, just reload each file after recompilation.</source>
          <target state="translated">У этой функции есть недостаток:если вы удалите,переместите или измените скомпилированный файл (например,при компиляции новой версии),Emacs может больше не иметь доступа к строке документации ранее загруженных функций или переменных.Обычно такая проблема возникает только в том случае,если вы сами собираете Emacs и случайно редактируете и/или перекомпилируете исходные файлы Lisp.Для решения этой проблемы достаточно перезагрузить каждый файл после перекомпиляции.</target>
        </trans-unit>
        <trans-unit id="b1b235c150a1d977f48eb3bd46de4ada97a7551a" translate="yes" xml:space="preserve">
          <source>This feature is particularly useful for macro definitions, since the arguments written in a macro definition often do not correspond to the way users think of the parts of the macro call.</source>
          <target state="translated">Эта особенность особенно полезна для макроопределений,поскольку аргументы,написанные в макроопределении,часто не соответствуют тому,как пользователи думают о частях макрозапроса.</target>
        </trans-unit>
        <trans-unit id="05244ec22d7bb68a0e405d823ab136f1bab8c8f8" translate="yes" xml:space="preserve">
          <source>This feature is typically used to give word syntax to characters which normally have symbol syntax, and thus to simplify &lt;code&gt;imenu-generic-expression&lt;/code&gt; and speed up matching. For example, Fortran mode uses it this way:</source>
          <target state="translated">Эта функция обычно используется для придания синтаксиса слов символам, которые обычно имеют синтаксис символа, и, таким образом, упрощают &lt;code&gt;imenu-generic-expression&lt;/code&gt; и ускоряют сопоставление. Например, режим Fortran использует это так:</target>
        </trans-unit>
        <trans-unit id="1c756af06b78daa5071e0e816f76e8d18db82de0" translate="yes" xml:space="preserve">
          <source>This feature is used in the mode line and for other active text.</source>
          <target state="translated">Эта функция используется в строке режима и для другого активного текста.</target>
        </trans-unit>
        <trans-unit id="d0cc127f9ed89a0052cb078c44752f47ce7ae748" translate="yes" xml:space="preserve">
          <source>This field contains flags indicating that certain variables are local in this buffer. Such variables are declared in the C code using &lt;code&gt;DEFVAR_PER_BUFFER&lt;/code&gt;, and their buffer-local bindings are stored in fields in the buffer structure itself. (Some of these fields are described in this table.)</source>
          <target state="translated">Это поле содержит флаги, указывающие, что определенные переменные являются локальными в этом буфере. Такие переменные объявляются в коде C с помощью &lt;code&gt;DEFVAR_PER_BUFFER&lt;/code&gt; , и их привязки к локальному буферу сохраняются в полях самой структуры буфера. (Некоторые из этих полей описаны в этой таблице.)</target>
        </trans-unit>
        <trans-unit id="fdaffa88c0149b338fbb30614684d73e20ce7a4d" translate="yes" xml:space="preserve">
          <source>This field contains the value of &lt;code&gt;cursor_off_p&lt;/code&gt; as of the time of the last redisplay.</source>
          <target state="translated">Это поле содержит значение &lt;code&gt;cursor_off_p&lt;/code&gt; на момент последнего повторного отображения.</target>
        </trans-unit>
        <trans-unit id="25df1e8281ce04573d0c7a47654f62f6ead766ae" translate="yes" xml:space="preserve">
          <source>This field holds the current overlay center position. See &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Managing Overlays&lt;/a&gt;.</source>
          <target state="translated">Это поле содержит текущее положение центра наложения. См. &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Управление наложениями&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53fae5326fb6152954c070db1d8b82e97b1478f7" translate="yes" xml:space="preserve">
          <source>This field is non-zero if the cursor is physically on.</source>
          <target state="translated">Это поле ненулевое,если курсор физически включен.</target>
        </trans-unit>
        <trans-unit id="1d317714cd86b2e5c16957c75986c0b66b779bc1" translate="yes" xml:space="preserve">
          <source>This field is set to a non-zero value if &lt;code&gt;window_end_pos&lt;/code&gt; and &lt;code&gt;window_end_vpos&lt;/code&gt; are truly valid. This is zero if nontrivial redisplay is pre-empted, since in that case the display that &lt;code&gt;window_end_pos&lt;/code&gt; was computed for did not get onto the screen.</source>
          <target state="translated">В этом поле устанавливается ненулевое значение, если &lt;code&gt;window_end_pos&lt;/code&gt; и &lt;code&gt;window_end_vpos&lt;/code&gt; действительно действительны. Это значение равно нулю, если нетривиальное повторное отображение прервано, поскольку в этом случае отображение, для &lt;code&gt;window_end_pos&lt;/code&gt; было вычислено window_end_pos, не попало на экран.</target>
        </trans-unit>
        <trans-unit id="6b26cb64b7c663711e8795ccea986462e9c7367e" translate="yes" xml:space="preserve">
          <source>This flag causes any padding specified by the width to be inserted on the right rather than the left.</source>
          <target state="translated">Этот флаг приводит к тому,что любая подкладка,заданная шириной,вставляется справа,а не слева.</target>
        </trans-unit>
        <trans-unit id="5278a8a106127e8fc495b187df39a6337cc62e1b" translate="yes" xml:space="preserve">
          <source>This flag causes any padding specified by the width to consist of &amp;lsquo;</source>
          <target state="translated">Этот флаг заставляет любое заполнение, указанное шириной, состоять из '</target>
        </trans-unit>
        <trans-unit id="5dd359a766179c85de84888aadbae58262df5709" translate="yes" xml:space="preserve">
          <source>This flag causes the substitution to be truncated on the left to the given width, if specified.</source>
          <target state="translated">Этот флаг вызывает усечение замены слева до заданной ширины,если она указана.</target>
        </trans-unit>
        <trans-unit id="4e61e85dae038fb0c3a44fdb662be1a054d209df" translate="yes" xml:space="preserve">
          <source>This flag causes the substitution to be truncated on the right to the given width, if specified.</source>
          <target state="translated">Этот флаг вызывает усечение замены справа от заданной ширины,если она указана.</target>
        </trans-unit>
        <trans-unit id="802456f2a422be0cbf38e1946b06bb9ed99ba1c4" translate="yes" xml:space="preserve">
          <source>This flag converts the substituted text to lower case (see &lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Case Conversion&lt;/a&gt;).</source>
          <target state="translated">Этот флаг преобразует замещенный текст в нижний регистр (см. &lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Преобразование регистра&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c3743c5c43d5db77d585873a04220c975872ceeb" translate="yes" xml:space="preserve">
          <source>This flag converts the substituted text to upper case (see &lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Case Conversion&lt;/a&gt;).</source>
          <target state="translated">Этот флаг преобразует замещенный текст в верхний регистр (см. &lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Преобразование регистра&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="def6909cec139f656b6eb03bda4bd9fcdf92962d" translate="yes" xml:space="preserve">
          <source>This flag indicates that narrowing has changed in the buffer. See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.</source>
          <target state="translated">Этот флаг указывает, что сужение в буфере изменилось. См. &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Сужение&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea1149fc15f86d73e215992b24665aef4bf65888" translate="yes" xml:space="preserve">
          <source>This flag indicates that redisplay optimizations should not be used to display this buffer.</source>
          <target state="translated">Этот флаг указывает на то,что для отображения этого буфера не следует использовать оптимизацию повторного отображения.</target>
        </trans-unit>
        <trans-unit id="3e34e60de1451f315119342439e2c2ea69a78715" translate="yes" xml:space="preserve">
          <source>This flag is &lt;code&gt;t&lt;/code&gt; while loading all of the basic functions for building Emacs initially (allowing those functions to be shareable and non-collectible). Dumping Emacs as an executable always writes &lt;code&gt;nil&lt;/code&gt; in this variable, regardless of the value it actually has before and after dumping.</source>
          <target state="translated">Этот флаг &lt;code&gt;t&lt;/code&gt; при загрузке все основные функции для построения Emacs изначально ( с учетом тех функций , чтобы быть разделяемыми и не коллекционный). Выгрузка Emacs как исполняемого файла всегда записывает в эту переменную &lt;code&gt;nil&lt;/code&gt; , независимо от того, какое значение она имеет до и после выгрузки.</target>
        </trans-unit>
        <trans-unit id="ba39cdb2bb11024ced7b8ee0a40f5f800d6c1008" translate="yes" xml:space="preserve">
          <source>This form affects the sorting order for combining applicable methods. Normally, when two methods are compared during combination, method arguments are examined left to right, and the first method whose argument specializer is more specific will come before the other one. The order defined by this form overrides that, and the arguments are examined according to their order in this form, and not left to right.</source>
          <target state="translated">Эта форма влияет на порядок сортировки для комбинирования применимых методов.Обычно при сравнении двух методов во время комбинации аргументы методов рассматриваются слева направо,и первый метод,чья специализация на аргументах более специфична,оказывается впереди другого.Порядок,определенный этой формой,отменяет этот порядок,и аргументы рассматриваются в этой форме в соответствии с их порядком,а не слева направо.</target>
        </trans-unit>
        <trans-unit id="e4fb70066384e0cceb907663b752d4b769967338" translate="yes" xml:space="preserve">
          <source>This form defines a method like &lt;code&gt;cl-defmethod&lt;/code&gt; does.</source>
          <target state="translated">Эта форма определяет такой метод, как &lt;code&gt;cl-defmethod&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc35ed413d87b4336d4e89f97b486782c7451f45" translate="yes" xml:space="preserve">
          <source>This form is rarely used and is now deprecated. Instead, you should write it as:</source>
          <target state="translated">Эта форма используется редко и в настоящее время устарела.Вместо этого,вы должны написать ее как:</target>
        </trans-unit>
        <trans-unit id="3cc0709efb5d18fcc8207dee6c21b0fb2f81ad06" translate="yes" xml:space="preserve">
          <source>This form marks &lt;var&gt;body&lt;/var&gt; to be evaluated at compile time but not when the compiled program is loaded. The result of evaluation by the compiler becomes a constant which appears in the compiled program. If you load the source file, rather than compiling it, &lt;var&gt;body&lt;/var&gt; is evaluated normally.</source>
          <target state="translated">Эта форма отмечает, что &lt;var&gt;body&lt;/var&gt; будет оцениваться во время компиляции, но не при загрузке скомпилированной программы. Результат вычисления компилятором становится константой, которая появляется в скомпилированной программе. Если вы загружаете исходный файл, а не компилируете его, &lt;var&gt;body&lt;/var&gt; обрабатывается нормально.</target>
        </trans-unit>
        <trans-unit id="5f5b9f825f6d02cc105c9167357458e31c828971" translate="yes" xml:space="preserve">
          <source>This form marks &lt;var&gt;body&lt;/var&gt; to be evaluated both when you compile the containing code and when you run it (whether compiled or not).</source>
          <target state="translated">Эта форма отмечает, что &lt;var&gt;body&lt;/var&gt; должно оцениваться как при компиляции содержащего кода, так и при его запуске (независимо от того, скомпилирован он или нет).</target>
        </trans-unit>
        <trans-unit id="4ef27658ff0fd12e7246ce32efccf1049fa02588" translate="yes" xml:space="preserve">
          <source>This frame parameter controls the way the cursor looks.</source>
          <target state="translated">Этот параметр кадра управляет тем,как выглядит курсор.</target>
        </trans-unit>
        <trans-unit id="8a2c5f40810a1a8231285c1733ba11c594e6dc71" translate="yes" xml:space="preserve">
          <source>This function (un-)marks the height of window &lt;var&gt;window&lt;/var&gt; as preserved for future resize operations. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it (un-)marks the width of &lt;var&gt;window&lt;/var&gt; as preserved.</source>
          <target state="translated">Эта функция (снимает) отмечает высоту окна &lt;var&gt;window&lt;/var&gt; как сохраненную для будущих операций изменения размера. &lt;var&gt;window&lt;/var&gt; должно быть живым окном и по умолчанию выбрано. Если необязательный аргумент &lt;var&gt;horizontal&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , он (отменяет) отмечает ширину &lt;var&gt;window&lt;/var&gt; как сохраненную.</target>
        </trans-unit>
        <trans-unit id="bcece730ecf0a8d569339f3baf4dfd3ec0f72dff" translate="yes" xml:space="preserve">
          <source>This function &lt;em&gt;warps the mouse&lt;/em&gt; to position &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt; in frame &lt;var&gt;frame&lt;/var&gt;. The arguments &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are integers, giving the position in multiples of the default character size of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;) relative to the native position of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">Эта функция &lt;em&gt;перемещает мышь&lt;/em&gt; в положение &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; в кадре &lt;var&gt;frame&lt;/var&gt; . Аргументы &lt;var&gt;x&lt;/var&gt; и &lt;var&gt;y&lt;/var&gt; являются целыми числами, задающими позицию, кратную размеру символа по умолчанию для &lt;var&gt;frame&lt;/var&gt; (см. &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Шрифт рамки&lt;/a&gt; ) относительно исходного положения &lt;var&gt;frame&lt;/var&gt; (см. &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Геометрия рамки&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="40f8f13963b860d49b39d37d44a140b524c4b400" translate="yes" xml:space="preserve">
          <source>This function aborts the command that requested the innermost recursive edit (including minibuffer input), by signaling &lt;code&gt;quit&lt;/code&gt; after exiting the recursive edit. Its definition is effectively &lt;code&gt;(throw 'exit t)&lt;/code&gt;. See &lt;a href=&quot;quitting#Quitting&quot;&gt;Quitting&lt;/a&gt;.</source>
          <target state="translated">Эта функция прерывает команду, которая запросила самое внутреннее рекурсивное редактирование (включая ввод минибуфера), сигнализируя о &lt;code&gt;quit&lt;/code&gt; после выхода из рекурсивного редактирования. Его определение эффективно &lt;code&gt;(throw 'exit t)&lt;/code&gt; . См. &lt;a href=&quot;quitting#Quitting&quot;&gt;Выход&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9ea6f9e8e69fd1bab46baef53c35082a8cfc602" translate="yes" xml:space="preserve">
          <source>This function accepts all the changes in the change group specified by &lt;var&gt;handle&lt;/var&gt;, making them final.</source>
          <target state="translated">Эта функция принимает все изменения в группе изменений, указанной &lt;var&gt;handle&lt;/var&gt; , делая их окончательными.</target>
        </trans-unit>
        <trans-unit id="4bf8acf7f09114f2eeb6b01cc81a40eb393fbc16" translate="yes" xml:space="preserve">
          <source>This function accesses selections set up by Emacs or by other programs. It takes two optional arguments, &lt;var&gt;type&lt;/var&gt; and &lt;var&gt;data-type&lt;/var&gt;. The default for &lt;var&gt;type&lt;/var&gt;, the selection type, is &lt;code&gt;PRIMARY&lt;/code&gt;.</source>
          <target state="translated">Эта функция обращается к выборкам, установленным Emacs или другими программами. Он принимает два необязательных аргумента: &lt;var&gt;type&lt;/var&gt; и тип &lt;var&gt;data-type&lt;/var&gt; . По умолчанию для &lt;var&gt;type&lt;/var&gt; , типа выбора, является &lt;code&gt;PRIMARY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ed9d525857b861dc6984133623fd7ce8241ee1a" translate="yes" xml:space="preserve">
          <source>This function activates the change group that &lt;var&gt;handle&lt;/var&gt; designates.</source>
          <target state="translated">Эта функция активирует группу изменений, которую обозначает &lt;var&gt;handle&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="07db88ac865436a1611a4b9e83f3964d1e4e650b" translate="yes" xml:space="preserve">
          <source>This function acts like &lt;code&gt;eq&lt;/code&gt; except when both arguments are numbers. It compares numbers by type and numeric value, so that &lt;code&gt;(eql 1.0 1)&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, but &lt;code&gt;(eql 1.0 1.0)&lt;/code&gt; and &lt;code&gt;(eql 1 1)&lt;/code&gt; both return &lt;code&gt;t&lt;/code&gt;. This can be used to compare large integers as well as small ones.</source>
          <target state="translated">Эта функция действует как &lt;code&gt;eq&lt;/code&gt; , за исключением случаев, когда оба аргумента являются числами. Он сравнивает числа по типу и числовому значению, так что &lt;code&gt;(eql 1.0 1)&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; , но &lt;code&gt;(eql 1.0 1.0)&lt;/code&gt; и &lt;code&gt;(eql 1 1)&lt;/code&gt; оба возвращают &lt;code&gt;t&lt;/code&gt; . Это можно использовать для сравнения больших и малых целых чисел.</target>
        </trans-unit>
        <trans-unit id="a9b2e93490bd346a5c929fa510651bda9b3be379" translate="yes" xml:space="preserve">
          <source>This function acts like &lt;code&gt;format&lt;/code&gt;, except it also converts any grave accents (</source>
          <target state="translated">Эта функция действует как &lt;code&gt;format&lt;/code&gt; , за исключением того, что она также преобразует любые серьезные акценты (</target>
        </trans-unit>
        <trans-unit id="46299dd4ffb3a1d1b9978c5603d1f8a982a7b271" translate="yes" xml:space="preserve">
          <source>This function acts on the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, adding the face &lt;var&gt;face&lt;/var&gt; to the &lt;code&gt;face&lt;/code&gt; text property. &lt;var&gt;face&lt;/var&gt; should be a valid value for the &lt;code&gt;face&lt;/code&gt; property (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;), such as a face name or an anonymous face (see &lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;).</source>
          <target state="translated">Эта функция воздействует на текст между &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; , добавляя лицо &lt;var&gt;face&lt;/var&gt; к свойству текста &lt;code&gt;face&lt;/code&gt; . &lt;var&gt;face&lt;/var&gt; должно быть допустимым значением для свойства &lt;code&gt;face&lt;/code&gt; (см. &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Специальные свойства&lt;/a&gt; ), таким как имя лица или анонимное лицо (см. &lt;a href=&quot;faces#Faces&quot;&gt;Лица&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9add35bd8e77d7a770af37272de3cbd3c5d5a302" translate="yes" xml:space="preserve">
          <source>This function actually uses the minibuffer, but does not allow editing of the answer. The cursor moves to the minibuffer while the question is being asked.</source>
          <target state="translated">Эта функция фактически использует минибуфер,но не позволяет редактировать ответ.Курсор перемещается в минибуфер во время задания вопроса.</target>
        </trans-unit>
        <trans-unit id="3b7bb87451820fffacb0fab9bbfdf96cf4401834" translate="yes" xml:space="preserve">
          <source>This function adds &lt;var&gt;keymap&lt;/var&gt; as a &lt;em&gt;transient&lt;/em&gt; keymap, which takes precedence over other keymaps for one (or more) subsequent keys.</source>
          <target state="translated">Эта функция добавляет &lt;var&gt;keymap&lt;/var&gt; как &lt;em&gt;временную&lt;/em&gt; раскладку, которая имеет приоритет над другими раскладками для одного (или нескольких) последующих ключей.</target>
        </trans-unit>
        <trans-unit id="4b526c5936ea25c138e70ca51a6efbc8affbb24b" translate="yes" xml:space="preserve">
          <source>This function adds &lt;var&gt;rules&lt;/var&gt; as indentation rules for the current buffer. These add to any mode-specific rules defined by the &lt;code&gt;smie-config&lt;/code&gt; option. To specify custom indentation rules for a specific file, add an entry to the file&amp;rsquo;s local variables of the form: &lt;code&gt;eval: (smie-config-local '(&lt;var&gt;rules&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">Эта функция добавляет &lt;var&gt;rules&lt;/var&gt; как правила отступа для текущего буфера. Они добавляются к любым правилам, зависящим от режима, определенным параметром &lt;code&gt;smie-config&lt;/code&gt; . Чтобы указать собственные правила отступа для конкретного файла, добавьте запись в локальные переменные файла в форме: &lt;code&gt;eval: (smie-config-local '(&lt;var&gt;rules&lt;/var&gt;))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97647ddbf1d6ec9209e109ed55b3f010c55f6dde" translate="yes" xml:space="preserve">
          <source>This function adds a new element &lt;var&gt;newelt&lt;/var&gt;, if it isn&amp;rsquo;t the empty string, to the history list stored in the variable &lt;var&gt;history-var&lt;/var&gt;, and returns the updated history list. It limits the list length to the value of &lt;var&gt;maxelt&lt;/var&gt; (if non-&lt;code&gt;nil&lt;/code&gt;) or &lt;code&gt;history-length&lt;/code&gt; (described below). The possible values of &lt;var&gt;maxelt&lt;/var&gt; have the same meaning as the values of &lt;code&gt;history-length&lt;/code&gt;. &lt;var&gt;history-var&lt;/var&gt; cannot refer to a lexical variable.</source>
          <target state="translated">Эта функция добавляет новый элемент &lt;var&gt;newelt&lt;/var&gt; , если это не пустая строка, в список истории, хранящийся в переменной &lt;var&gt;history-var&lt;/var&gt; , и возвращает обновленный список истории. Он ограничивает длину списка значением &lt;var&gt;maxelt&lt;/var&gt; (если не &lt;code&gt;nil&lt;/code&gt; ) или &lt;code&gt;history-length&lt;/code&gt; (описано ниже). Возможные значения &lt;var&gt;maxelt&lt;/var&gt; имеют то же значение, что и значения &lt;code&gt;history-length&lt;/code&gt; . &lt;var&gt;history-var&lt;/var&gt; не может ссылаться на лексическую переменную.</target>
        </trans-unit>
        <trans-unit id="deb9f2a42b842ac50764e6f1bfd937d8064b5f72" translate="yes" xml:space="preserve">
          <source>This function adds an item to the tool bar by modifying &lt;code&gt;tool-bar-map&lt;/code&gt;. The image to use is defined by &lt;var&gt;icon&lt;/var&gt;, which is the base name of an XPM, XBM or PBM image file to be located by &lt;code&gt;find-image&lt;/code&gt;. Given a value &amp;lsquo;</source>
          <target state="translated">Эта функция добавляет элемент на панель инструментов, изменяя &lt;code&gt;tool-bar-map&lt;/code&gt; панели инструментов . Используемый образ определяется &lt;var&gt;icon&lt;/var&gt; , который является базовым именем файла образа XPM, XBM или PBM, который нужно &lt;code&gt;find-image&lt;/code&gt; помощью find-image . Учитывая значение '</target>
        </trans-unit>
        <trans-unit id="0ebca6721ed3fa98cfa9e5c46f15c3141bffd15b" translate="yes" xml:space="preserve">
          <source>This function adds highlighting &lt;var&gt;keywords&lt;/var&gt;, for the current buffer or for major mode &lt;var&gt;mode&lt;/var&gt;. The argument &lt;var&gt;keywords&lt;/var&gt; should be a list with the same format as the variable &lt;code&gt;font-lock-keywords&lt;/code&gt;.</source>
          <target state="translated">Эта функция добавляет &lt;var&gt;keywords&lt;/var&gt; выделения для текущего буфера или для режима основного &lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;keywords&lt;/var&gt; аргумента должны быть списком с тем же форматом, что и &lt;code&gt;font-lock-keywords&lt;/code&gt; переменной font-lock .</target>
        </trans-unit>
        <trans-unit id="b70adf191cfc5d67153bf0fd00ff553ea1352179" translate="yes" xml:space="preserve">
          <source>This function adds its arguments together. When given no arguments, &lt;code&gt;+&lt;/code&gt; returns 0.</source>
          <target state="translated">Эта функция складывает свои аргументы. Если аргументов не задано, &lt;code&gt;+&lt;/code&gt; возвращает 0.</target>
        </trans-unit>
        <trans-unit id="803c0bc4e0ed515905b77def70944666207e64b0" translate="yes" xml:space="preserve">
          <source>This function adds or overrides text properties for the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">Эта функция добавляет или переопределяет свойства текста для текста между &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; строки или &lt;var&gt;object&lt;/var&gt; буфера . Если &lt;var&gt;object&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется текущий буфер.</target>
        </trans-unit>
        <trans-unit id="9989271b225e7f750e77b8c7c89508a4a1e0be74" translate="yes" xml:space="preserve">
          <source>This function adds the element &lt;var&gt;element&lt;/var&gt; to &lt;code&gt;buffer-invisibility-spec&lt;/code&gt;. If &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; was &lt;code&gt;t&lt;/code&gt;, it changes to a list, &lt;code&gt;(t)&lt;/code&gt;, so that text whose &lt;code&gt;invisible&lt;/code&gt; property is &lt;code&gt;t&lt;/code&gt; remains invisible.</source>
          <target state="translated">Эта функция добавляет элемент &lt;var&gt;element&lt;/var&gt; в &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; . Если &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; был &lt;code&gt;t&lt;/code&gt; , он изменится на список &lt;code&gt;(t)&lt;/code&gt; , так что текст, &lt;code&gt;invisible&lt;/code&gt; свойство которого равно &lt;code&gt;t&lt;/code&gt; , останется невидимым.</target>
        </trans-unit>
        <trans-unit id="c07b8ebb5627985d894e21ffca92d00b07480866" translate="yes" xml:space="preserve">
          <source>This function adds the face spec in &lt;var&gt;specs&lt;/var&gt; as relative remappings for face &lt;var&gt;face&lt;/var&gt; in the current buffer. The remaining arguments, &lt;var&gt;specs&lt;/var&gt;, should form either a list of face names, or a property list of attribute/value pairs.</source>
          <target state="translated">Эта функция добавляет спецификацию лица в &lt;var&gt;specs&lt;/var&gt; как относительные переназначения &lt;var&gt;face&lt;/var&gt; в текущий буфер. Остальные аргументы, &lt;var&gt;specs&lt;/var&gt; , должны формировать либо список имен лиц, либо список свойств пар атрибут / значение.</target>
        </trans-unit>
        <trans-unit id="d04052051735ae3e0e977a90a4d965a6d964ef68" translate="yes" xml:space="preserve">
          <source>This function adjusts the current buffer&amp;rsquo;s auto-save file name if the visited file name has changed. It also renames an existing auto-save file, if it was made in the current Emacs session. If the visited file name has not changed, this function does nothing.</source>
          <target state="translated">Эта функция регулирует имя файла автосохранения текущего буфера, если имя посещенного файла изменилось. Он также переименовывает существующий файл автосохранения, если он был создан в текущем сеансе Emacs. Если имя посещенного файла не изменилось, эта функция ничего не делает.</target>
        </trans-unit>
        <trans-unit id="5f57687a61ee8dd8b6bb5dd575ae468a268a7e81" translate="yes" xml:space="preserve">
          <source>This function adjusts the indentation at the beginning of the current line to the value specified by the variable &lt;code&gt;left-margin&lt;/code&gt;. (That may involve either inserting or deleting whitespace.) This function is value of &lt;code&gt;indent-line-function&lt;/code&gt; in Paragraph-Indent Text mode.</source>
          <target state="translated">Эта функция регулирует отступ в начале текущей строки до значения, указанного переменной &lt;code&gt;left-margin&lt;/code&gt; . (Это может включать в себя вставку или удаление пробелов.) Эта функция является значением функции &lt;code&gt;indent-line-function&lt;/code&gt; в режиме текста- отступа абзаца.</target>
        </trans-unit>
        <trans-unit id="283b3120d2b1e5ecb8dfd7ac5ef6f6a005aee91f" translate="yes" xml:space="preserve">
          <source>This function allows Emacs to read pending output from processes. The output is given to their filter functions. If &lt;var&gt;process&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then this function does not return until some output has been received from &lt;var&gt;process&lt;/var&gt; or &lt;var&gt;process&lt;/var&gt; has closed the connection.</source>
          <target state="translated">Эта функция позволяет Emacs читать ожидающий вывод от процессов. Выходные данные передаются их функциям фильтрации. Если &lt;var&gt;process&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; то эта функция не возвращается, пока какой-либо вывод не будет получен от &lt;var&gt;process&lt;/var&gt; или &lt;var&gt;process&lt;/var&gt; не закроет соединение.</target>
        </trans-unit>
        <trans-unit id="cf26ba184068b28fd0896ca94a81e5de77617765" translate="yes" xml:space="preserve">
          <source>This function allows you to arrange that Emacs will ask the user for confirmation before exiting or before killing a buffer that has &lt;var&gt;xwidget&lt;/var&gt; associated with it. If &lt;var&gt;flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, Emacs will query the user, otherwise it will not.</source>
          <target state="translated">Эта функция позволяет вам настроить, чтобы Emacs запрашивал у пользователя подтверждение перед выходом или перед уничтожением буфера, с &lt;var&gt;xwidget&lt;/var&gt; связан xwidget . Если &lt;var&gt;flag&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , Emacs запросит пользователя, иначе - нет.</target>
        </trans-unit>
        <trans-unit id="bf335bd121a8eca0c5f6759fc3858e78f1f657e4" translate="yes" xml:space="preserve">
          <source>This function also defines &lt;var&gt;face&lt;/var&gt; as a valid face name if it is not already one, and (re)calculates its attributes on existing frames.</source>
          <target state="translated">Эта функция также определяет &lt;var&gt;face&lt;/var&gt; как допустимое имя лица, если оно еще не создано, и (повторно) вычисляет его атрибуты на существующих кадрах.</target>
        </trans-unit>
        <trans-unit id="37609ce54a5ff7f294bf84ea4de78cdf2ae18a2b" translate="yes" xml:space="preserve">
          <source>This function also forces an update of the menu bar and frame title.</source>
          <target state="translated">Эта функция также заставляет обновлять строку меню и заголовок кадра.</target>
        </trans-unit>
        <trans-unit id="45bab2ec30f25c2982006b7a098ab0411cb5a640" translate="yes" xml:space="preserve">
          <source>This function also resets certain other information pertaining to the buffer: it sets the local keymap to &lt;code&gt;nil&lt;/code&gt;, the syntax table to the value of &lt;code&gt;(standard-syntax-table)&lt;/code&gt;, the case table to &lt;code&gt;(standard-case-table)&lt;/code&gt;, and the abbrev table to the value of &lt;code&gt;fundamental-mode-abbrev-table&lt;/code&gt;.</source>
          <target state="translated">Эта функция также сбрасывает некоторую другую информацию, относящуюся к буферу: она устанавливает для локальной таблицы ключей значение &lt;code&gt;nil&lt;/code&gt; , для таблицы синтаксиса - значение &lt;code&gt;(standard-syntax-table)&lt;/code&gt; , для таблицы case - &lt;code&gt;(standard-case-table)&lt;/code&gt; и сокращения table к значению &lt;code&gt;fundamental-mode-abbrev-table&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f470a37c4713be355f21bcf33f0e9306fad6c932" translate="yes" xml:space="preserve">
          <source>This function also sets &lt;var&gt;symbol&lt;/var&gt; as a variable, with the keymap as its value. But if &lt;var&gt;mapvar&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it sets &lt;var&gt;mapvar&lt;/var&gt; as a variable instead.</source>
          <target state="translated">Эта функция также устанавливает &lt;var&gt;symbol&lt;/var&gt; как переменную с раскладкой клавиатуры в качестве его значения. Но если &lt;var&gt;mapvar&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , вместо этого он устанавливает &lt;var&gt;mapvar&lt;/var&gt; в качестве переменной.</target>
        </trans-unit>
        <trans-unit id="2f67f09d25df27f6839ecb450a57eb93e2f6d8ae" translate="yes" xml:space="preserve">
          <source>This function also signals an error if the buffer is an indirect buffer. An indirect buffer always inherits the representation of its base buffer.</source>
          <target state="translated">Эта функция также сигнализирует об ошибке,если буфер является косвенным.Косвенный буфер всегда наследует представление своего базового буфера.</target>
        </trans-unit>
        <trans-unit id="bfa25a7a5563eb87e60e338899232ea47f96f2b2" translate="yes" xml:space="preserve">
          <source>This function alters part of the contents of the string &lt;var&gt;string&lt;/var&gt;, by storing &lt;var&gt;obj&lt;/var&gt; starting at index &lt;var&gt;idx&lt;/var&gt;. The argument &lt;var&gt;obj&lt;/var&gt; may be either a character or a (smaller) string.</source>
          <target state="translated">Эта функция изменяет часть содержимого строковой &lt;var&gt;string&lt;/var&gt; , сохраняя &lt;var&gt;obj&lt;/var&gt; , начиная с индекса &lt;var&gt;idx&lt;/var&gt; . Аргумент &lt;var&gt;obj&lt;/var&gt; может быть либо символом, либо (меньшей) строкой.</target>
        </trans-unit>
        <trans-unit id="5f3b9f6d880286305d2f483406ba368f2e1181c2" translate="yes" xml:space="preserve">
          <source>This function alters the frame &lt;var&gt;frame&lt;/var&gt; based on the elements of &lt;var&gt;alist&lt;/var&gt;. Each element of &lt;var&gt;alist&lt;/var&gt; has the form &lt;code&gt;(&lt;var&gt;parm&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;parm&lt;/var&gt; is a symbol naming a parameter. If you don&amp;rsquo;t mention a parameter in &lt;var&gt;alist&lt;/var&gt;, its value doesn&amp;rsquo;t change. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">Эта функция изменяет фрейм &lt;var&gt;frame&lt;/var&gt; на основе элементов &lt;var&gt;alist&lt;/var&gt; . Каждый элемент &lt;var&gt;alist&lt;/var&gt; имеет форму &lt;code&gt;(&lt;var&gt;parm&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; , где &lt;var&gt;parm&lt;/var&gt; - это символ, обозначающий параметр. Если вы не укажете параметр в &lt;var&gt;alist&lt;/var&gt; , его значение не изменится. Если &lt;var&gt;frame&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется выбранный кадр.</target>
        </trans-unit>
        <trans-unit id="f1a3eb59953468bf3d67cbe0c4bab0730f9d16e5" translate="yes" xml:space="preserve">
          <source>This function alters the frame parameters of all existing frames according to &lt;var&gt;alist&lt;/var&gt;, then modifies &lt;code&gt;default-frame-alist&lt;/code&gt; (and, if necessary, &lt;code&gt;initial-frame-alist&lt;/code&gt;) to apply the same parameter values to frames that will be created henceforth.</source>
          <target state="translated">Эта функция изменяет параметры фрейма всех существующих фреймов в соответствии с &lt;var&gt;alist&lt;/var&gt; , затем изменяет &lt;code&gt;default-frame-alist&lt;/code&gt; (и, если необходимо, &lt;code&gt;initial-frame-alist&lt;/code&gt; ), чтобы применить те же значения параметров к фреймам, которые будут создаваться впредь.</target>
        </trans-unit>
        <trans-unit id="55474dce8bede7fa41aaf8f090d61568d07cd19b" translate="yes" xml:space="preserve">
          <source>This function always returns &lt;code&gt;nil&lt;/code&gt;. The old syntax information in the table for this character is discarded.</source>
          <target state="translated">Эта функция всегда возвращает &lt;code&gt;nil&lt;/code&gt; . Старая информация о синтаксисе в таблице для этого символа отбрасывается.</target>
        </trans-unit>
        <trans-unit id="826a68e61e26d3dc2018817360ef52a0d95760b2" translate="yes" xml:space="preserve">
          <source>This function animates &lt;var&gt;image&lt;/var&gt;. The optional integer &lt;var&gt;index&lt;/var&gt; specifies the frame from which to start (default 0). The optional argument &lt;var&gt;limit&lt;/var&gt; controls the length of the animation. If omitted or &lt;code&gt;nil&lt;/code&gt;, the image animates once only; if &lt;code&gt;t&lt;/code&gt; it loops forever; if a number animation stops after that many seconds.</source>
          <target state="translated">Эта функция анимирует &lt;var&gt;image&lt;/var&gt; . Необязательный целочисленный &lt;var&gt;index&lt;/var&gt; указывает кадр, с которого следует начать (по умолчанию 0). Необязательный параметр &lt;var&gt;limit&lt;/var&gt; управляет продолжительностью анимации. Если он не указан или &lt;code&gt;nil&lt;/code&gt; , изображение анимируется только один раз; если &lt;code&gt;t&lt;/code&gt; он зацикливается навсегда; если числовая анимация останавливается через много секунд.</target>
        </trans-unit>
        <trans-unit id="0967994b7dbfe229674d04294e461f7c265e6b60" translate="yes" xml:space="preserve">
          <source>This function announces that &lt;var&gt;feature&lt;/var&gt; is now loaded, or being loaded, into the current Emacs session. This means that the facilities associated with &lt;var&gt;feature&lt;/var&gt; are or will be available for other Lisp programs.</source>
          <target state="translated">Эта функция объявляет, что &lt;var&gt;feature&lt;/var&gt; теперь загружена или загружается в текущий сеанс Emacs. Это означает, что средства, связанные с &lt;var&gt;feature&lt;/var&gt; доступны или будут доступны для других программ Lisp.</target>
        </trans-unit>
        <trans-unit id="72f5b49aa6d8edb55e7989428323cef4e38a7981" translate="yes" xml:space="preserve">
          <source>This function appends the contents of the region delimited by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer to the end of file &lt;var&gt;filename&lt;/var&gt;. If that file does not exist, it is created. This function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта функция добавляет содержимое области, разделенной &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; текущего буфера, в конец имени &lt;var&gt;filename&lt;/var&gt; . Если этот файл не существует, он создается. Эта функция возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b4b6643bdc4c569692300a096eaa54226cc5318" translate="yes" xml:space="preserve">
          <source>This function appends the text &lt;var&gt;string&lt;/var&gt; to the first entry in the kill ring and makes the yanking pointer point to the combined entry. Normally &lt;var&gt;string&lt;/var&gt; goes at the end of the entry, but if &lt;var&gt;before-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it goes at the beginning. This function calls &lt;code&gt;kill-new&lt;/code&gt; as a subroutine, thus causing the values of &lt;code&gt;interprogram-cut-function&lt;/code&gt; and possibly &lt;code&gt;interprogram-paste-function&lt;/code&gt; (see below) to be invoked by extension.</source>
          <target state="translated">Эта функция добавляет текстовую &lt;var&gt;string&lt;/var&gt; к первой записи в списке уничтожений и заставляет указатель восстановления указывать на комбинированную запись. Обычно &lt;var&gt;string&lt;/var&gt; идет в конце записи, но если &lt;var&gt;before-p&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; , она идет в начале. Эта функция вызывает &lt;code&gt;kill-new&lt;/code&gt; как подпрограмму, тем самым вызывая вызов значений функции &lt;code&gt;interprogram-cut-function&lt;/code&gt; и, возможно, &lt;code&gt;interprogram-paste-function&lt;/code&gt; (см. Ниже) по расширению.</target>
        </trans-unit>
        <trans-unit id="4239bc8a7e12e62696801af1e048981138c6cec6" translate="yes" xml:space="preserve">
          <source>This function applies &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt; in turn (presumably for side effects), and returns &lt;var&gt;sequence&lt;/var&gt;.</source>
          <target state="translated">Эта функция по очереди применяет &lt;var&gt;function&lt;/var&gt; к каждому элементу &lt;var&gt;sequence&lt;/var&gt; (предположительно для побочных эффектов) и возвращает &lt;var&gt;sequence&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2d35ac6e9b6fd226737cb9705d3c9df454deb9e6" translate="yes" xml:space="preserve">
          <source>This function applies &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt;, like &lt;code&gt;mapcar&lt;/code&gt;, but instead of collecting the results into a list, it returns a single list with all the elements of the results (which must be lists), by altering the results (using &lt;code&gt;nconc&lt;/code&gt;; see &lt;a href=&quot;rearrangement#Rearrangement&quot;&gt;Rearrangement&lt;/a&gt;). Like with &lt;code&gt;mapcar&lt;/code&gt;, &lt;var&gt;sequence&lt;/var&gt; can be of any type except a char-table.</source>
          <target state="translated">Эта функция применяет &lt;var&gt;function&lt;/var&gt; к каждому элементу &lt;var&gt;sequence&lt;/var&gt; , например &lt;code&gt;mapcar&lt;/code&gt; , но вместо сбора результатов в список она возвращает единый список со всеми элементами результатов (которые должны быть списками), изменяя результаты (используя &lt;code&gt;nconc&lt;/code&gt; ; см. &lt;a href=&quot;rearrangement#Rearrangement&quot;&gt;Перестановка&lt;/a&gt; ). Как и в случае с &lt;code&gt;mapcar&lt;/code&gt; , &lt;var&gt;sequence&lt;/var&gt; может быть любого типа, кроме таблицы символов.</target>
        </trans-unit>
        <trans-unit id="b1c3772768e1cb0f5aa3ea648b08795849720d0c" translate="yes" xml:space="preserve">
          <source>This function applies &lt;var&gt;spec&lt;/var&gt; as a face spec for &lt;code&gt;face&lt;/code&gt;. &lt;var&gt;spec&lt;/var&gt; should be a face spec, as described in the above documentation for &lt;code&gt;defface&lt;/code&gt;.</source>
          <target state="translated">Эта функция применяет &lt;var&gt;spec&lt;/var&gt; как спецификацию &lt;code&gt;face&lt;/code&gt; для лица . &lt;var&gt;spec&lt;/var&gt; должен быть спецификацией лица, как описано в вышеупомянутой документации для &lt;code&gt;defface&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1eb67707006b5a85fc68b00651580e8633b2915b" translate="yes" xml:space="preserve">
          <source>This function applies a translation table to the characters in the buffer between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">Эта функция применяет таблицу перевода к символам в буфере между позициями &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="de65326c220ae4ef4349c37201370510fd36aea5" translate="yes" xml:space="preserve">
          <source>This function arranges for &lt;var&gt;watch-function&lt;/var&gt; to be called whenever &lt;var&gt;symbol&lt;/var&gt; is modified. Modifications through aliases (see &lt;a href=&quot;variable-aliases#Variable-Aliases&quot;&gt;Variable Aliases&lt;/a&gt;) will have the same effect.</source>
          <target state="translated">Эта функция обеспечивает вызов &lt;var&gt;watch-function&lt;/var&gt; при изменении &lt;var&gt;symbol&lt;/var&gt; . Изменения с помощью псевдонимов (см. &lt;a href=&quot;variable-aliases#Variable-Aliases&quot;&gt;Псевдонимы переменных&lt;/a&gt; ) будут иметь такой же эффект.</target>
        </trans-unit>
        <trans-unit id="8e72ff71cadb59169a335198abe5d69882854f36" translate="yes" xml:space="preserve">
          <source>This function arranges for the debugger to be called whenever &lt;var&gt;variable&lt;/var&gt; is modified.</source>
          <target state="translated">Эта функция обеспечивает вызов отладчика при &lt;var&gt;variable&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="acd470cf7d8172fe867cc56b5d3d629b62b83db0" translate="yes" xml:space="preserve">
          <source>This function asks the user a question, expecting input in the minibuffer. It returns &lt;code&gt;t&lt;/code&gt; if the user enters &amp;lsquo;</source>
          <target state="translated">Эта функция задает пользователю вопрос, ожидая ввода в минибуфер. Он возвращает &lt;code&gt;t&lt;/code&gt; , если пользователь вводит '</target>
        </trans-unit>
        <trans-unit id="c511618a8bcd18a156a4ebdec967bc65d5a89422" translate="yes" xml:space="preserve">
          <source>This function asks the user a question, expecting input in the minibuffer. It returns &lt;code&gt;t&lt;/code&gt; if the user types</source>
          <target state="translated">Эта функция задает пользователю вопрос, ожидая ввода в минибуфер. Он возвращает &lt;code&gt;t&lt;/code&gt; , если пользователь вводит</target>
        </trans-unit>
        <trans-unit id="a6a45e25fa7cc4f87747729f9c53ffa39831209f" translate="yes" xml:space="preserve">
          <source>This function asks the user a series of questions, reading a single-character answer in the echo area for each one.</source>
          <target state="translated">Эта функция задает пользователю серию вопросов,читая односимвольный ответ в области эха для каждого из них.</target>
        </trans-unit>
        <trans-unit id="1386738f8749573a53305a8dcc03715d2bc078f5" translate="yes" xml:space="preserve">
          <source>This function assigns &lt;var&gt;class&lt;/var&gt; to all the files in &lt;code&gt;directory&lt;/code&gt; and its subdirectories. Thereafter, all the variable settings specified for &lt;var&gt;class&lt;/var&gt; will be applied to any visited file in &lt;var&gt;directory&lt;/var&gt; and its children. &lt;var&gt;class&lt;/var&gt; must have been already defined by &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt;.</source>
          <target state="translated">Эта функция назначает &lt;var&gt;class&lt;/var&gt; всем файлам в &lt;code&gt;directory&lt;/code&gt; и его подкаталогах. После этого все настройки переменных, указанные для &lt;var&gt;class&lt;/var&gt; будут применены к любому посещенному файлу в &lt;var&gt;directory&lt;/var&gt; и его дочерним элементам. &lt;var&gt;class&lt;/var&gt; должен быть уже определен &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ded3336ee747552b9df4826ac4a5d24623ad4e04" translate="yes" xml:space="preserve">
          <source>This function assigns &lt;var&gt;profiles&lt;/var&gt;, which are symbols, to all remote connections identified by &lt;var&gt;criteria&lt;/var&gt;. &lt;var&gt;criteria&lt;/var&gt; is a plist identifying a connection and the application using this connection. Property names might be &lt;code&gt;:application&lt;/code&gt;, &lt;code&gt;:protocol&lt;/code&gt;, &lt;code&gt;:user&lt;/code&gt; and &lt;code&gt;:machine&lt;/code&gt;. The property value of &lt;code&gt;:application&lt;/code&gt; is a symbol, all other property values are strings. All properties are optional; if &lt;var&gt;criteria&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it always applies. Example:</source>
          <target state="translated">Эта функция назначает &lt;var&gt;profiles&lt;/var&gt; , которые являются символами, всем удаленным соединениям, определенным &lt;var&gt;criteria&lt;/var&gt; . &lt;var&gt;criteria&lt;/var&gt; - это список, идентифицирующий соединение и приложение, использующее это соединение. Имена свойств могут быть &lt;code&gt;:application&lt;/code&gt; , &lt;code&gt;:protocol&lt;/code&gt; , &lt;code&gt;:user&lt;/code&gt; и &lt;code&gt;:machine&lt;/code&gt; . Значение свойства &lt;code&gt;:application&lt;/code&gt; - это символ, все остальные значения свойств - строки. Все свойства необязательны; если &lt;var&gt;criteria&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , он применяется всегда. Пример:</target>
        </trans-unit>
        <trans-unit id="439a567966bbada3620c5a871bbdbef0d06493b7" translate="yes" xml:space="preserve">
          <source>This function associates &lt;var&gt;sentinel&lt;/var&gt; with &lt;var&gt;process&lt;/var&gt;. If &lt;var&gt;sentinel&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the process will have the default sentinel, which inserts a message in the process&amp;rsquo;s buffer when the process status changes.</source>
          <target state="translated">Эта функция связывает &lt;var&gt;sentinel&lt;/var&gt; с &lt;var&gt;process&lt;/var&gt; . Если &lt;var&gt;sentinel&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , то процесс будет иметь дозор по умолчанию, который вставляет сообщение в буфер процесса при изменении статуса процесса.</target>
        </trans-unit>
        <trans-unit id="1096a583f698faa4eb718e093160984efaf64843" translate="yes" xml:space="preserve">
          <source>This function associates the color name &lt;var&gt;name&lt;/var&gt; with color number &lt;var&gt;number&lt;/var&gt; on the terminal.</source>
          <target state="translated">Эта функция связывает цвет имя &lt;var&gt;name&lt;/var&gt; с номером цвета &lt;var&gt;number&lt;/var&gt; терминала.</target>
        </trans-unit>
        <trans-unit id="e3ae78a1f68bdfe0e4cbf3cc1cf7cc2b156acde5" translate="yes" xml:space="preserve">
          <source>This function attempts to give all windows on the selected frame approximately the same share of the screen area. Full-width or full-height windows are not given more space than other windows.</source>
          <target state="translated">Эта функция пытается дать всем окнам в выбранном кадре примерно одинаковую долю области экрана.Полная ширина или полная высота окон не занимают больше места,чем другие окна.</target>
        </trans-unit>
        <trans-unit id="f3bcc3ee850866c0fffcaf099cde8903944e0c4c" translate="yes" xml:space="preserve">
          <source>This function attempts to keep point, markers, text properties, and overlays in the current buffer intact. One potential case where this behavior is useful is external code formatting programs: they typically write the reformatted text into a temporary buffer or file, and using &lt;code&gt;delete-region&lt;/code&gt; and &lt;code&gt;insert-buffer-substring&lt;/code&gt; would destroy these properties. However, the latter combination is typically faster (See &lt;a href=&quot;deletion#Deletion&quot;&gt;Deletion&lt;/a&gt;, and &lt;a href=&quot;insertion#Insertion&quot;&gt;Insertion&lt;/a&gt;).</source>
          <target state="translated">Эта функция пытается сохранить точку, маркеры, свойства текста и наложения в текущем буфере без изменений. Один из возможных случаев, когда это поведение полезно, - это программы форматирования внешнего кода: они обычно записывают переформатированный текст во временный буфер или файл, а использование &lt;code&gt;delete-region&lt;/code&gt; и &lt;code&gt;insert-buffer-substring&lt;/code&gt; уничтожит эти свойства. Однако последняя комбинация обычно быстрее (см. &lt;a href=&quot;deletion#Deletion&quot;&gt;Удаление&lt;/a&gt; и &lt;a href=&quot;insertion#Insertion&quot;&gt;вставка&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1911e07f9047017317f10d8f050384cab29aaa1f" translate="yes" xml:space="preserve">
          <source>This function attempts to make &lt;var&gt;window&lt;/var&gt; as large as possible, in both dimensions, without resizing its frame or deleting other windows. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">Эта функция пытается сделать &lt;var&gt;window&lt;/var&gt; как можно большим в обоих измерениях, не изменяя размер его рамки или не удаляя другие окна. Если &lt;var&gt;window&lt;/var&gt; опущено или равно &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется выбранное окно.</target>
        </trans-unit>
        <trans-unit id="35f2b233f1d585e694aa5dfcd78a197e11d4d89a" translate="yes" xml:space="preserve">
          <source>This function attempts to make &lt;var&gt;window&lt;/var&gt; as small as possible, in both dimensions, without deleting it or resizing its frame. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">Эта функция пытается сделать &lt;var&gt;window&lt;/var&gt; как можно меньше в обоих измерениях, не удаляя его и не изменяя его размер. Если &lt;var&gt;window&lt;/var&gt; опущено или равно &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется выбранное окно.</target>
        </trans-unit>
        <trans-unit id="b23abdf7c6f489bc23826919a92070345aea0a72" translate="yes" xml:space="preserve">
          <source>This function auto-saves all buffers that need to be auto-saved. It saves all buffers for which auto-saving is enabled and that have been changed since the previous auto-save.</source>
          <target state="translated">Эта функция автоматически сохраняет все буферы,которые должны быть автоматически сохранены.Она сохраняет все буферы,для которых включено автосохранение и которые были изменены с момента предыдущего автосохранения.</target>
        </trans-unit>
        <trans-unit id="fc85e4a1c9b182563a3f4a35ba0acde86dc4c46a" translate="yes" xml:space="preserve">
          <source>This function balances windows in a way that gives more space to full-width and/or full-height windows. If &lt;var&gt;window-or-frame&lt;/var&gt; specifies a frame, it balances all windows on that frame. If &lt;var&gt;window-or-frame&lt;/var&gt; specifies a window, it balances only that window and its siblings (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;).</source>
          <target state="translated">Эта функция уравновешивает окна таким образом, чтобы оставлять больше места для окон во всю ширину и / или во всю высоту. Если &lt;var&gt;window-or-frame&lt;/var&gt; указывает фрейм, он уравновешивает все окна в этом фрейме. Если &lt;var&gt;window-or-frame&lt;/var&gt; указывает окно, оно уравновешивает только это окно и его братьев и сестер (см. &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Окна и фреймы&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8d8d3ca16001bd519fbd308317ed1a8be178f437" translate="yes" xml:space="preserve">
          <source>This function beeps, or flashes the screen (see &lt;code&gt;visible-bell&lt;/code&gt; below). It also terminates any keyboard macro currently executing unless &lt;var&gt;do-not-terminate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта функция подает звуковой сигнал или мигает на экране (см. &lt;code&gt;visible-bell&lt;/code&gt; ниже). Он также завершает выполнение любого макроса клавиатуры, если &lt;var&gt;do-not-terminate&lt;/var&gt; не равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ff292221ef899ef612111410550ec5e84c130c7" translate="yes" xml:space="preserve">
          <source>This function behaves exactly like &lt;code&gt;error&lt;/code&gt;, except that it uses the error symbol &lt;code&gt;user-error&lt;/code&gt; rather than &lt;code&gt;error&lt;/code&gt;. As the name suggests, this is intended to report errors on the part of the user, rather than errors in the code itself. For example, if you try to use the command &lt;code&gt;Info-history-back&lt;/code&gt; (</source>
          <target state="translated">Эта функция ведет себя точно так же, как &lt;code&gt;error&lt;/code&gt; , за исключением того, что в ней используется символ ошибки &lt;code&gt;user-error&lt;/code&gt; , а не &lt;code&gt;error&lt;/code&gt; . Как следует из названия, он предназначен для сообщения об ошибках со стороны пользователя, а не об ошибках в самом коде. Например, если вы попытаетесь использовать команду &lt;code&gt;Info-history-back&lt;/code&gt; (</target>
        </trans-unit>
        <trans-unit id="0a3a5682f2af5897ff191aa1d0e3be9bede33499" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;code&gt;custom-initialize-set&lt;/code&gt;, but it delays the actual initialization to the next Emacs start. This should be used in files that are preloaded (or for autoloaded variables), so that the initialization is done in the run-time context rather than the build-time context. This also has the side-effect that the (delayed) initialization is performed with the &lt;code&gt;:set&lt;/code&gt; function. See &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;.</source>
          <target state="translated">Эта функция ведет себя как &lt;code&gt;custom-initialize-set&lt;/code&gt; , но задерживает фактическую инициализацию до следующего запуска Emacs. Это следует использовать в предварительно загруженных файлах (или для автоматически загружаемых переменных), чтобы инициализация выполнялась в контексте времени выполнения, а не в контексте времени сборки. Это также имеет побочный эффект, заключающийся в том, что (отложенная) инициализация выполняется с помощью функции &lt;code&gt;:set&lt;/code&gt; . См. &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Сборка Emacs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af96d322e164b004457b48bee402bcd096416332" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;code&gt;equal&lt;/code&gt; in all cases but also requires that for two strings to be equal, they have the same text properties.</source>
          <target state="translated">Эта функция ведет себя как &lt;code&gt;equal&lt;/code&gt; во всех случаях, но также требует, чтобы две строки были равными, чтобы они имели одинаковые текстовые свойства.</target>
        </trans-unit>
        <trans-unit id="ca3b72e7b43c7fc58841701418556d75f3cb6fc2" translate="yes" xml:space="preserve">
          <source>This function browses the specified &lt;var&gt;uri&lt;/var&gt; in the given &lt;var&gt;xwidget&lt;/var&gt;. The &lt;var&gt;uri&lt;/var&gt; is a string that specifies the name of a file or a URL.</source>
          <target state="translated">Эта функция просматривает указанный &lt;var&gt;uri&lt;/var&gt; в данном &lt;var&gt;xwidget&lt;/var&gt; . &lt;var&gt;uri&lt;/var&gt; является строкой , которая определяет имя файла или URL.</target>
        </trans-unit>
        <trans-unit id="6565fe8d7642fc3de8b3c4b49600210dcbad04ac" translate="yes" xml:space="preserve">
          <source>This function builds a &lt;em&gt;prec2&lt;/em&gt; table from a table of precedences &lt;var&gt;precs&lt;/var&gt;. &lt;var&gt;precs&lt;/var&gt; should be a list, sorted by precedence (for example &lt;code&gt;&quot;+&quot;&lt;/code&gt; will come before &lt;code&gt;&quot;*&quot;&lt;/code&gt;), of elements of the form &lt;code&gt;(&lt;var&gt;assoc&lt;/var&gt; &lt;var&gt;op&lt;/var&gt; ...)&lt;/code&gt;, where each &lt;var&gt;op&lt;/var&gt; is a token that acts as an operator; &lt;var&gt;assoc&lt;/var&gt; is their associativity, which can be either &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;assoc&lt;/code&gt;, or &lt;code&gt;nonassoc&lt;/code&gt;. All operators in a given element share the same precedence level and associativity.</source>
          <target state="translated">Эта функция строит таблицу &lt;em&gt;prec2&lt;/em&gt; из таблицы приоритетов &lt;var&gt;precs&lt;/var&gt; . &lt;var&gt;precs&lt;/var&gt; должен быть списком, отсортированным по приоритету (например, &lt;code&gt;&quot;+&quot;&lt;/code&gt; будет перед &lt;code&gt;&quot;*&quot;&lt;/code&gt; ), элементов формы &lt;code&gt;(&lt;var&gt;assoc&lt;/var&gt; &lt;var&gt;op&lt;/var&gt; ...)&lt;/code&gt; , где каждый &lt;var&gt;op&lt;/var&gt; - токен, который действует как оператор; &lt;var&gt;assoc&lt;/var&gt; их ассоциативность, который может быть либо &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , &lt;code&gt;assoc&lt;/code&gt; или &lt;code&gt;nonassoc&lt;/code&gt; . Все операторы в данном элементе имеют одинаковый уровень приоритета и ассоциативность.</target>
        </trans-unit>
        <trans-unit id="1b51bc6e106b8e23530ca082a5db223c3af4e0c4" translate="yes" xml:space="preserve">
          <source>This function byte-compiles the function definition of &lt;var&gt;symbol&lt;/var&gt;, replacing the previous definition with the compiled one. The function definition of &lt;var&gt;symbol&lt;/var&gt; must be the actual code for the function; &lt;code&gt;byte-compile&lt;/code&gt; does not handle function indirection. The return value is the byte-code function object which is the compiled definition of &lt;var&gt;symbol&lt;/var&gt; (see &lt;a href=&quot;byte_002dcode-objects#Byte_002dCode-Objects&quot;&gt;Byte-Code Objects&lt;/a&gt;).</source>
          <target state="translated">Эта функция байтово компилирует определение функции &lt;var&gt;symbol&lt;/var&gt; , заменяя предыдущее определение скомпилированным. Определение функции &lt;var&gt;symbol&lt;/var&gt; должно быть фактическим кодом функции; &lt;code&gt;byte-compile&lt;/code&gt; не обрабатывает косвенное обращение к функциям. Возвращаемое значение - это объект функции байтового кода, который является скомпилированным определением &lt;var&gt;symbol&lt;/var&gt; (см. &lt;a href=&quot;byte_002dcode-objects#Byte_002dCode-Objects&quot;&gt;Объекты&lt;/a&gt; байтового кода ).</target>
        </trans-unit>
        <trans-unit id="58dbbedddc985589878e0d2af7300367367b6f41" translate="yes" xml:space="preserve">
          <source>This function calculates the dimensions of the largest empty rectangle that can be inscribed in the specified &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s text area. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">Эта функция вычисляет размеры самого большого пустого прямоугольника, который может быть вписан в текстовую область указанного &lt;var&gt;window&lt;/var&gt; . &lt;var&gt;window&lt;/var&gt; должно быть живым окном и по умолчанию выбрано.</target>
        </trans-unit>
        <trans-unit id="ba72cf6062793468aad230446fa4d17bf997509b" translate="yes" xml:space="preserve">
          <source>This function calculates the pixel dimensions of each line displayed in the specified &lt;var&gt;window&lt;/var&gt;. It does so by walking &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s current glyph matrix&amp;mdash;a matrix storing the glyph (see &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;) of each buffer character currently displayed in &lt;var&gt;window&lt;/var&gt;. If successful, it returns a list of cons pairs representing the x- and y-coordinates of the lower right corner of the last character of each line. Coordinates are measured in pixels from an origin (0, 0) at the top-left corner of &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">Эта функция вычисляет размеры в пикселях каждой строки, отображаемой в указанном &lt;var&gt;window&lt;/var&gt; . Это достигается путем обхода матрицы глифов текущего &lt;var&gt;window&lt;/var&gt; - матрицы, хранящей глиф (см. &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Глифы&lt;/a&gt; ) каждого символа буфера, отображаемого в данный момент в &lt;var&gt;window&lt;/var&gt; . В случае успеха он возвращает список пар cons, представляющих x- и y-координаты нижнего правого угла последнего символа каждой строки. Координаты измеряются в пикселях от начала координат (0, 0) в верхнем левом углу &lt;var&gt;window&lt;/var&gt; . &lt;var&gt;window&lt;/var&gt; должно быть живым окном и по умолчанию выбрано.</target>
        </trans-unit>
        <trans-unit id="0e51c66274036d618c90f8effd48d6a002399b1b" translate="yes" xml:space="preserve">
          <source>This function calls &lt;code&gt;describe-bindings&lt;/code&gt; to display a list of all the subcommands of the prefix key of the most recent key sequence. The prefix described consists of all but the last event of that key sequence. (The last event is, presumably, the help character.)</source>
          <target state="translated">Эта функция вызывает &lt;code&gt;describe-bindings&lt;/code&gt; чтобы отобразить список всех подкоманд префиксного ключа последней последовательности клавиш. Описанный префикс состоит из всего, кроме последнего события этой последовательности клавиш. (Последнее событие - предположительно вспомогательный персонаж.)</target>
        </trans-unit>
        <trans-unit id="0c7434b528b427b395f4fd38e52b1e8a896cfd89" translate="yes" xml:space="preserve">
          <source>This function calls &lt;code&gt;progress-reporter-update&lt;/code&gt;, so the first message is printed immediately.</source>
          <target state="translated">Эта функция вызывает &lt;code&gt;progress-reporter-update&lt;/code&gt; , поэтому первое сообщение печатается немедленно.</target>
        </trans-unit>
        <trans-unit id="38848b0928341ad6ede5fe0568bd029f5b30515e" translate="yes" xml:space="preserve">
          <source>This function calls &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; for cleaning up all windows currently displaying the buffer to be killed.</source>
          <target state="translated">Эта функция вызывает &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; для очистки всех окон, в настоящее время отображающих буфер, подлежащий уничтожению.</target>
        </trans-unit>
        <trans-unit id="11724efe2ff0c491736a280c8b24b31aae6f66b1" translate="yes" xml:space="preserve">
          <source>This function calls &lt;var&gt;function&lt;/var&gt; once for each of the associations in &lt;var&gt;table&lt;/var&gt;. The function &lt;var&gt;function&lt;/var&gt; should accept two arguments&amp;mdash;a &lt;var&gt;key&lt;/var&gt; listed in &lt;var&gt;table&lt;/var&gt;, and its associated &lt;var&gt;value&lt;/var&gt;. &lt;code&gt;maphash&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта функция вызывает &lt;var&gt;function&lt;/var&gt; один раз для каждой ассоциации в &lt;var&gt;table&lt;/var&gt; . Функция &lt;var&gt;function&lt;/var&gt; должна принимать два аргумента - &lt;var&gt;key&lt;/var&gt; указанный в &lt;var&gt;table&lt;/var&gt; , и связанное с ним &lt;var&gt;value&lt;/var&gt; . &lt;code&gt;maphash&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="333c365e2bcb3639c7a57e0c3d10f9d9eeb9ba2b" translate="yes" xml:space="preserve">
          <source>This function calls &lt;var&gt;function&lt;/var&gt; once with each symbol in the obarray &lt;var&gt;obarray&lt;/var&gt;. Then it returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;obarray&lt;/var&gt; is omitted, it defaults to the value of &lt;code&gt;obarray&lt;/code&gt;, the standard obarray for ordinary symbols.</source>
          <target state="translated">Эта функция вызывает &lt;var&gt;function&lt;/var&gt; один раз с каждым символом в obarray &lt;var&gt;obarray&lt;/var&gt; . Затем возвращается &lt;code&gt;nil&lt;/code&gt; . Если &lt;var&gt;obarray&lt;/var&gt; опущен, по умолчанию используется значение &lt;code&gt;obarray&lt;/code&gt; , стандартного obarray для обычных символов.</target>
        </trans-unit>
        <trans-unit id="a9fa740195e686e04b2f695015c29cc303bed6f3" translate="yes" xml:space="preserve">
          <source>This function calls &lt;var&gt;program&lt;/var&gt; and waits for it to finish.</source>
          <target state="translated">Эта функция вызывает &lt;var&gt;program&lt;/var&gt; и ждет ее завершения.</target>
        </trans-unit>
        <trans-unit id="9f7663bce42615c5a1363320cf1b6553cdaa46f2" translate="yes" xml:space="preserve">
          <source>This function calls its argument &lt;var&gt;function&lt;/var&gt; for each element of &lt;var&gt;char-table&lt;/var&gt; that has a non-&lt;code&gt;nil&lt;/code&gt; value. The call to &lt;var&gt;function&lt;/var&gt; is with two arguments, a key and a value. The key is a possible &lt;var&gt;range&lt;/var&gt; argument for &lt;code&gt;char-table-range&lt;/code&gt;&amp;mdash;either a valid character or a cons cell &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt;, specifying a range of characters that share the same value. The value is what &lt;code&gt;(char-table-range &lt;var&gt;char-table&lt;/var&gt; &lt;var&gt;key&lt;/var&gt;)&lt;/code&gt; returns.</source>
          <target state="translated">Эта функция вызывает ее аргумент &lt;var&gt;function&lt;/var&gt; для каждого элемента &lt;var&gt;char-table&lt;/var&gt; , которая имеет не- &lt;code&gt;nil&lt;/code&gt; ценность. Вызов &lt;var&gt;function&lt;/var&gt; осуществляется с двумя аргументами, ключом и значением. Ключ возможного &lt;var&gt;range&lt;/var&gt; аргументы для &lt;code&gt;char-table-range&lt;/code&gt; -either недопустимого символа или клетка минусы &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt; , указав диапазон символов , которые разделяют те же ценности. Значение - это то, что возвращает ( &lt;code&gt;(char-table-range &lt;var&gt;char-table&lt;/var&gt; &lt;var&gt;key&lt;/var&gt;)&lt;/code&gt; char-table-range &lt;var&gt;char-table&lt;/var&gt; ) .</target>
        </trans-unit>
        <trans-unit id="e2d39d4245ea953b6c03bb7a74be65f2111faf98" translate="yes" xml:space="preserve">
          <source>This function calls the function &lt;var&gt;fun&lt;/var&gt; once for each live window, with the window as the argument.</source>
          <target state="translated">Эта функция вызывает функцию &lt;var&gt;fun&lt;/var&gt; один раз для каждого живого окна с окном в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="d9657b6203a8f764b5c56ebbfc825cb844478422" translate="yes" xml:space="preserve">
          <source>This function calls the function &lt;var&gt;predicate&lt;/var&gt; for each of the windows in the cyclic order of windows in turn, passing it the window as an argument. If the predicate returns non-&lt;code&gt;nil&lt;/code&gt; for any window, this function stops and returns that window. If no such window is found, the return value is &lt;var&gt;default&lt;/var&gt; (which defaults to &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">Эта функция по очереди вызывает &lt;var&gt;predicate&lt;/var&gt; функции для каждого из окон в циклическом порядке окон, передавая ему окно в качестве аргумента. Если предикат для любого окна возвращает &lt;code&gt;nil&lt;/code&gt; , эта функция останавливается и возвращает это окно. Если такое окно не найдено, возвращается значение по &lt;var&gt;default&lt;/var&gt; (которое по умолчанию равно &lt;code&gt;nil&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="708c1309721b1c0f149f7d2312324af9348cb6d9" translate="yes" xml:space="preserve">
          <source>This function calls the interactively callable function &lt;var&gt;command&lt;/var&gt;, providing arguments according to its interactive calling specifications. It returns whatever &lt;var&gt;command&lt;/var&gt; returns.</source>
          <target state="translated">Эта функция вызывается в интерактивном вызываемую функцию &lt;var&gt;command&lt;/var&gt; , предоставляя аргументы в соответствии с его интерактивными техническими вызовами. Он возвращает любую возвращаемую &lt;var&gt;command&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="6026201df119b1eaf16d1f1c6ef16e3d7bf43084" translate="yes" xml:space="preserve">
          <source>This function calls the specified &lt;var&gt;func&lt;/var&gt; passing it &lt;var&gt;nargs&lt;/var&gt; arguments from the array pointed to by &lt;var&gt;args&lt;/var&gt;. The argument &lt;var&gt;func&lt;/var&gt; can be a function symbol (e.g., returned by &lt;code&gt;intern&lt;/code&gt; described above), a module function returned by &lt;code&gt;make_function&lt;/code&gt; (see &lt;a href=&quot;module-functions#Module-Functions&quot;&gt;Module Functions&lt;/a&gt;), a subroutine written in C, etc. If &lt;var&gt;nargs&lt;/var&gt; is zero, &lt;var&gt;args&lt;/var&gt; can be a &lt;code&gt;NULL&lt;/code&gt; pointer.</source>
          <target state="translated">Эта функция вызывает указанную &lt;var&gt;func&lt;/var&gt; передавая ей аргументы &lt;var&gt;nargs&lt;/var&gt; из массива, на который указывает &lt;var&gt;args&lt;/var&gt; . Аргумент &lt;var&gt;func&lt;/var&gt; может быть символом функции (например, возвращенным &lt;code&gt;intern&lt;/code&gt; , описанным выше), функцией модуля, возвращаемой &lt;code&gt;make_function&lt;/code&gt; (см. &lt;a href=&quot;module-functions#Module-Functions&quot;&gt;Функции модуля&lt;/a&gt; ), подпрограммой, написанной на C, и т. Д. Если &lt;var&gt;nargs&lt;/var&gt; равно нулю, &lt;var&gt;args&lt;/var&gt; может быть указателем &lt;code&gt;NULL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c049f14e0b6666963e4ec8ce86792a24885b4cb6" translate="yes" xml:space="preserve">
          <source>This function can also be called interactively. In that case, it prints a message reporting the number of lines, words, and characters in the buffer, or in the region if the region is active.</source>
          <target state="translated">Эту функцию также можно вызвать в интерактивном режиме.В этом случае она печатает сообщение о количестве строк,слов и символов в буфере или в регионе,если регион активен.</target>
        </trans-unit>
        <trans-unit id="51c54bee55f87d0a2be16a8a5a2c9be8f612bfee" translate="yes" xml:space="preserve">
          <source>This function can be called before an amalgamating command. It removes the previous &lt;code&gt;undo-boundary&lt;/code&gt; if a series of such calls have been made.</source>
          <target state="translated">Эта функция может быть вызвана перед командой объединения. Он удаляет предыдущую &lt;code&gt;undo-boundary&lt;/code&gt; если была сделана серия таких вызовов.</target>
        </trans-unit>
        <trans-unit id="df4f49d21440d1153bf1036a702981a94f5196e8" translate="yes" xml:space="preserve">
          <source>This function can be used to initialize the local keymap of a major mode for which insertion of text is not desirable. But usually such a mode should be derived from &lt;code&gt;special-mode&lt;/code&gt; (see &lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;Basic Major Modes&lt;/a&gt;); then its keymap will automatically inherit from &lt;code&gt;special-mode-map&lt;/code&gt;, which is already suppressed. Here is how &lt;code&gt;special-mode-map&lt;/code&gt; is defined:</source>
          <target state="translated">Эта функция может использоваться для инициализации локальной раскладки клавиатуры основного режима, для которого вставка текста нежелательна. Но обычно такой режим должен быть производным от &lt;code&gt;special-mode&lt;/code&gt; (см. &lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;Основные основные режимы&lt;/a&gt; ); тогда его раскладка будет автоматически унаследована от &lt;code&gt;special-mode-map&lt;/code&gt; , которая уже подавлена. Вот как определяется &lt;code&gt;special-mode-map&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="be74eec3452d11d0176e37ed21b512bdf1eb22c2" translate="yes" xml:space="preserve">
          <source>This function can be used to transpose stretches of text:</source>
          <target state="translated">Эта функция может быть использована для перемещения отрезков текста:</target>
        </trans-unit>
        <trans-unit id="197f6679cb3ca88b1a4655c88c49b28d088d5627" translate="yes" xml:space="preserve">
          <source>This function can be useful as an output stream when debugging. It writes &lt;var&gt;character&lt;/var&gt; to the standard error stream.</source>
          <target state="translated">Эта функция может быть полезна как выходной поток при отладке. Он записывает &lt;var&gt;character&lt;/var&gt; в стандартный поток ошибок.</target>
        </trans-unit>
        <trans-unit id="c86ffcbcc5f0b36e1cefc4186607fc1c394c0fe9" translate="yes" xml:space="preserve">
          <source>This function can indicate there are no more sort records by leaving point at the end of the buffer.</source>
          <target state="translated">Эта функция может указать на то,что больше нет сортирующих записей,оставив точку в конце буфера.</target>
        </trans-unit>
        <trans-unit id="d16e2d06844ba5f689f62688e4c3ba9cf1b79431" translate="yes" xml:space="preserve">
          <source>This function cancels and undoes all the changes in the change group specified by &lt;var&gt;handle&lt;/var&gt;.</source>
          <target state="translated">Эта функция отменяет и отменяет все изменения в группе изменений, указанной &lt;var&gt;handle&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="85e6d5637ca515e9970407cc96b9ed5acbc70b91" translate="yes" xml:space="preserve">
          <source>This function cancels any narrowing in the current buffer, so that the entire contents are accessible. This is called &lt;em&gt;widening&lt;/em&gt;. It is equivalent to the following expression:</source>
          <target state="translated">Эта функция отменяет любое сужение текущего буфера, так что доступно все содержимое. Это называется &lt;em&gt;расширением&lt;/em&gt; . Это эквивалентно следующему выражению:</target>
        </trans-unit>
        <trans-unit id="aca02809e6ca5d0f5704c010f281a569f37b9d26" translate="yes" xml:space="preserve">
          <source>This function cannot be used in an Emacs that was already dumped. This function is deprecated, and by default Emacs is built without &lt;code&gt;unexec&lt;/code&gt; support so this function is not available.</source>
          <target state="translated">Эту функцию нельзя использовать в Emacs, который уже был выгружен. Эта функция устарела, и по умолчанию Emacs &lt;code&gt;unexec&lt;/code&gt; без поддержки unexec, поэтому эта функция недоступна.</target>
        </trans-unit>
        <trans-unit id="d6862d9f011c28238585e423fb0003d9a3c85d4a" translate="yes" xml:space="preserve">
          <source>This function cannot tell whether the comments it traverses are embedded within a string. If they look like comments, it treats them as comments.</source>
          <target state="translated">Эта функция не может определить,встроены ли комментарии,которые она пересекает,в строку.Если они выглядят как комментарии,то она рассматривает их как комментарии.</target>
        </trans-unit>
        <trans-unit id="bc06d29126920d369fe3dd2dbf2dd7f17e1b48fe" translate="yes" xml:space="preserve">
          <source>This function capitalizes &lt;var&gt;count&lt;/var&gt; words after point, moving point over as it does. To capitalize means to convert each word&amp;rsquo;s first character to upper case and convert the rest of each word to lower case. If &lt;var&gt;count&lt;/var&gt; is negative, the function capitalizes the -&lt;var&gt;count&lt;/var&gt; previous words but does not move point. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта функция использует &lt;var&gt;count&lt;/var&gt; слов после точки с заглавной буквы , перемещая точку при этом. Использование заглавных букв означает преобразование первого символа каждого слова в верхний регистр и преобразование остальной части каждого слова в нижний регистр. Если &lt;var&gt;count&lt;/var&gt; отрицательный, функция использует заглавные буквы - &lt;var&gt;count&lt;/var&gt; предыдущих слов, но не перемещает точку. Значение равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d4a014eb3c50b3c0c03861600f49c23114f2af5" translate="yes" xml:space="preserve">
          <source>This function capitalizes all words in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. To capitalize means to convert each word&amp;rsquo;s first character to upper case and convert the rest of each word to lower case. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта функция использует все слова в области, определенной как &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; . Использование заглавных букв означает преобразование первого символа каждого слова в верхний регистр и преобразование остальной части каждого слова в нижний регистр. Функция возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c0ebaf53d2d45563bdffeb5dd181592b579c85a" translate="yes" xml:space="preserve">
          <source>This function capitalizes strings or characters. If &lt;var&gt;string-or-char&lt;/var&gt; is a string, the function returns a new string whose contents are a copy of &lt;var&gt;string-or-char&lt;/var&gt; in which each word has been capitalized. This means that the first character of each word is converted to upper case, and the rest are converted to lower case.</source>
          <target state="translated">Эта функция использует строки или символы с заглавной буквы. Если &lt;var&gt;string-or-char&lt;/var&gt; является строкой, функция возвращает новую строку, содержимое которой является копией &lt;var&gt;string-or-char&lt;/var&gt; , в которой каждое слово написано с большой буквы. Это означает, что первый символ каждого слова преобразуется в верхний регистр, а остальные - в нижний.</target>
        </trans-unit>
        <trans-unit id="f44d2a9276aece55b507fe01ce5beb8c630be2ed" translate="yes" xml:space="preserve">
          <source>This function causes the browser widget specified by &lt;var&gt;xwidget&lt;/var&gt; to execute the specified JavaScript &lt;code&gt;script&lt;/code&gt;.</source>
          <target state="translated">Эта функция заставляет виджет браузера, указанный &lt;var&gt;xwidget&lt;/var&gt; , выполнять указанный &lt;code&gt;script&lt;/code&gt; JavaScript .</target>
        </trans-unit>
        <trans-unit id="8bad284717417a9939835167bd83a93fb9ec2309" translate="yes" xml:space="preserve">
          <source>This function changes the contents of the full keymap &lt;var&gt;keymap&lt;/var&gt; by remapping &lt;code&gt;self-insert-command&lt;/code&gt; to the command &lt;code&gt;undefined&lt;/code&gt; (see &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt;). This has the effect of undefining all printing characters, thus making ordinary insertion of text impossible. &lt;code&gt;suppress-keymap&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта функция изменяет содержимое полной раскладки раскладки &lt;var&gt;keymap&lt;/var&gt; путем переназначения &lt;code&gt;self-insert-command&lt;/code&gt; на команду &lt;code&gt;undefined&lt;/code&gt; (см. &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Команды&lt;/a&gt; переназначения ). Это приводит к отмене определения всех печатных символов, что делает невозможным обычную вставку текста. &lt;code&gt;suppress-keymap&lt;/code&gt; возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36f2fbb5685a5ae009ff2b89267c15f544b6a5af" translate="yes" xml:space="preserve">
          <source>This function changes the finalizer of the &lt;code&gt;user-ptr&lt;/code&gt; object represented by &lt;var&gt;val&lt;/var&gt; to be &lt;var&gt;fin&lt;/var&gt;. If &lt;var&gt;fin&lt;/var&gt; is a &lt;code&gt;NULL&lt;/code&gt; pointer, the &lt;code&gt;user-ptr&lt;/code&gt; object will have no finalizer.</source>
          <target state="translated">Эта функция изменяет финализатор объекта &lt;code&gt;user-ptr&lt;/code&gt; , представленного &lt;var&gt;val&lt;/var&gt; , на &lt;var&gt;fin&lt;/var&gt; . Если &lt;var&gt;fin&lt;/var&gt; является указателем &lt;code&gt;NULL&lt;/code&gt; , объект &lt;code&gt;user-ptr&lt;/code&gt; не будет иметь финализатора.</target>
        </trans-unit>
        <trans-unit id="3823849d7c5498e0245942dc16f153ec79790970" translate="yes" xml:space="preserve">
          <source>This function changes the tabulated list entry at point, setting &lt;var&gt;col&lt;/var&gt; to &lt;var&gt;desc&lt;/var&gt;. &lt;var&gt;col&lt;/var&gt; is the column number to change, or the name of the column to change. &lt;var&gt;desc&lt;/var&gt; is the new column descriptor, which is inserted via &lt;code&gt;tabulated-list-print-col&lt;/code&gt;.</source>
          <target state="translated">Эта функция изменяет запись табличного списка в точке, устанавливая &lt;var&gt;col&lt;/var&gt; на &lt;var&gt;desc&lt;/var&gt; . &lt;var&gt;col&lt;/var&gt; - это номер столбца, который нужно изменить, или имя столбца, который нужно изменить. &lt;var&gt;desc&lt;/var&gt; - это новый дескриптор столбца, который вставляется через &lt;code&gt;tabulated-list-print-col&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3d0a9295df703f0dbef307fa6311054894421f6" translate="yes" xml:space="preserve">
          <source>This function checks the file contents against the defined file formats, and converts the file contents if appropriate and also calls the functions in the list &lt;code&gt;after-insert-file-functions&lt;/code&gt;. See &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Format Conversion&lt;/a&gt;. Normally, one of the functions in the &lt;code&gt;after-insert-file-functions&lt;/code&gt; list determines the coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;) used for decoding the file&amp;rsquo;s contents, including end-of-line conversion. However, if the file contains null bytes, it is by default visited without any code conversions. See &lt;a href=&quot;lisp-and-coding-systems#Lisp-and-Coding-Systems&quot;&gt;inhibit-nul-byte-detection&lt;/a&gt;.</source>
          <target state="translated">Эта функция проверяет содержимое файла на соответствие определенным форматам файлов и при необходимости преобразует содержимое файла, а также вызывает функции из списка &lt;code&gt;after-insert-file-functions&lt;/code&gt; . См. &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Преобразование формата&lt;/a&gt; . Обычно одна из функций в списке функций- &lt;code&gt;after-insert-file-functions&lt;/code&gt; определяет систему кодирования (см. &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Системы кодирования&lt;/a&gt; ), используемую для декодирования содержимого файла, включая преобразование в конце строки. Однако, если файл содержит нулевые байты, он по умолчанию посещается без каких-либо преобразований кода. См. &lt;a href=&quot;lisp-and-coding-systems#Lisp-and-Coding-Systems&quot;&gt;Блокировку обнаружения нулевого байта&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88a96aa2697363d8add3552b2953ddbfffec23cb" translate="yes" xml:space="preserve">
          <source>This function checks the validity of &lt;var&gt;coding-system&lt;/var&gt;. If that is valid, it returns &lt;var&gt;coding-system&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the function return &lt;code&gt;nil&lt;/code&gt;. For any other values, it signals an error whose &lt;code&gt;error-symbol&lt;/code&gt; is &lt;code&gt;coding-system-error&lt;/code&gt; (see &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;signal&lt;/a&gt;).</source>
          <target state="translated">Эта функция проверяет правильность системы &lt;var&gt;coding-system&lt;/var&gt; . Если это действительно так, возвращается &lt;var&gt;coding-system&lt;/var&gt; . Если &lt;var&gt;coding-system&lt;/var&gt; - &lt;code&gt;nil&lt;/code&gt; , функция возвращает &lt;code&gt;nil&lt;/code&gt; . Для любых других значений, это сигнализирует об ошибке , чья &lt;code&gt;error-symbol&lt;/code&gt; является &lt;code&gt;coding-system-error&lt;/code&gt; (см &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;сигнала&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ff9f73184b14d3789b4d1e6f4b8bbd07f7c61143" translate="yes" xml:space="preserve">
          <source>This function checks whether &lt;var&gt;feature&lt;/var&gt; is present in the current Emacs session (using &lt;code&gt;(featurep &lt;var&gt;feature&lt;/var&gt;)&lt;/code&gt;; see below). The argument &lt;var&gt;feature&lt;/var&gt; must be a symbol.</source>
          <target state="translated">Эта функция проверяет, присутствует ли &lt;var&gt;feature&lt;/var&gt; в текущем сеансе Emacs (с помощью &lt;code&gt;(featurep &lt;var&gt;feature&lt;/var&gt;)&lt;/code&gt; ; см. Ниже). Аргумент &lt;var&gt;feature&lt;/var&gt; должна быть символом.</target>
        </trans-unit>
        <trans-unit id="4be69b13bdf8b6481ccb7195ec5a30f577c71667" translate="yes" xml:space="preserve">
          <source>This function checks whether &lt;var&gt;sequence1&lt;/var&gt; and &lt;var&gt;sequence2&lt;/var&gt; contain the same elements, regardless of the order. If the optional argument &lt;var&gt;testfn&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">Эта функция проверяет, содержат ли &lt;var&gt;sequence1&lt;/var&gt; и &lt;var&gt;sequence2&lt;/var&gt; одинаковые элементы, независимо от порядка. Если необязательный аргумент &lt;var&gt;testfn&lt;/var&gt; не равен &lt;code&gt;nil&lt;/code&gt; , это функция двух аргументов, которые следует использовать вместо &lt;code&gt;equal&lt;/code&gt; по умолчанию .</target>
        </trans-unit>
        <trans-unit id="4b5e3ee47fca60568dceedb79a0f4165f46dfa07" translate="yes" xml:space="preserve">
          <source>This function checks whether a window &lt;var&gt;window&lt;/var&gt; occupies the frame relative coordinates &lt;var&gt;coordinates&lt;/var&gt;, and if so, which part of the window that is. &lt;var&gt;window&lt;/var&gt; should be a live window.</source>
          <target state="translated">Эта функция проверяет , является ли окно &lt;var&gt;window&lt;/var&gt; занимает кадры относительных координат &lt;var&gt;coordinates&lt;/var&gt; , и если да, то какая часть окна , которая есть. &lt;var&gt;window&lt;/var&gt; должно быть живым окном.</target>
        </trans-unit>
        <trans-unit id="0093114ce08d1c87de3c8bea211bd8e8e8bafd88" translate="yes" xml:space="preserve">
          <source>This function checks whether coding systems in the list &lt;code&gt;coding-system-list&lt;/code&gt; can encode all the characters in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If all of the coding systems in the list can encode the specified text, the function returns &lt;code&gt;nil&lt;/code&gt;. If some coding systems cannot encode some of the characters, the value is an alist, each element of which has the form &lt;code&gt;(&lt;var&gt;coding-system1&lt;/var&gt; &lt;var&gt;pos1&lt;/var&gt; &lt;var&gt;pos2&lt;/var&gt; &amp;hellip;)&lt;/code&gt;, meaning that &lt;var&gt;coding-system1&lt;/var&gt; cannot encode characters at buffer positions &lt;var&gt;pos1&lt;/var&gt;, &lt;var&gt;pos2&lt;/var&gt;, &lt;small&gt;...&lt;/small&gt;.</source>
          <target state="translated">Эта функция проверяет, могут ли системы кодирования в списке &lt;code&gt;coding-system-list&lt;/code&gt; кодировать все символы в области между &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; . Если все системы кодирования в списке могут кодировать указанный текст, функция возвращает &lt;code&gt;nil&lt;/code&gt; . Если некоторые системы кодирования не могут кодировать некоторые символы, значение представляет собой список, каждый элемент которого имеет форму &lt;code&gt;(&lt;var&gt;coding-system1&lt;/var&gt; &lt;var&gt;pos1&lt;/var&gt; &lt;var&gt;pos2&lt;/var&gt; &amp;hellip;)&lt;/code&gt; , что означает, что &lt;var&gt;coding-system1&lt;/var&gt; не может кодировать символы в позициях буфера &lt;var&gt;pos1&lt;/var&gt; , &lt;var&gt;pos2&lt;/var&gt; , &lt;small&gt;.. .&lt;/small&gt; .</target>
        </trans-unit>
        <trans-unit id="48bbd385883b860f0fe733726275084cca5e4045" translate="yes" xml:space="preserve">
          <source>This function chooses a plausible coding system for decoding the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;. This text should be a byte sequence, i.e., unibyte text or multibyte text with only</source>
          <target state="translated">Эта функция выбирает правдоподобную систему кодирования для декодирования текста от &lt;var&gt;start&lt;/var&gt; до &lt;var&gt;end&lt;/var&gt; . Этот текст должен быть байтовой последовательностью, т. Е. Однобайтовым или многобайтовым текстом только с</target>
        </trans-unit>
        <trans-unit id="e92dd05af078b7c6619479f99c6915105c13d04f" translate="yes" xml:space="preserve">
          <source>This function clears all tags from the padding area in the current buffer.</source>
          <target state="translated">Эта функция очищает все теги из области подкладки в текущем буфере.</target>
        </trans-unit>
        <trans-unit id="e08d77ace26a1da1b72f8e270ea9c88fc75a7c86" translate="yes" xml:space="preserve">
          <source>This function clears an image cache, removing all the images stored in it. If &lt;var&gt;filter&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it clears the cache for the selected frame. If &lt;var&gt;filter&lt;/var&gt; is a frame, it clears the cache for that frame. If &lt;var&gt;filter&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, all image caches are cleared. Otherwise, &lt;var&gt;filter&lt;/var&gt; is taken to be a file name, and all images associated with that file name are removed from all image caches.</source>
          <target state="translated">Эта функция очищает кеш изображений, удаляя все изображения, хранящиеся в нем. Если &lt;var&gt;filter&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , он очищает кеш для выбранного кадра. Если &lt;var&gt;filter&lt;/var&gt; - это кадр, он очищает кеш для этого кадра. Если &lt;var&gt;filter&lt;/var&gt; является &lt;code&gt;t&lt;/code&gt; , все кэша изображения будут удалены. В противном случае в качестве &lt;var&gt;filter&lt;/var&gt; принимается имя файла, и все изображения, связанные с этим именем файла, удаляются из всех кешей изображений.</target>
        </trans-unit>
        <trans-unit id="0bb1988a1dba8506377b988fafd01a77998e3685" translate="yes" xml:space="preserve">
          <source>This function clears and redisplays all visible frames.</source>
          <target state="translated">Эта функция очищает и заново отображает все видимые кадры.</target>
        </trans-unit>
        <trans-unit id="00c956077128ca0993717eb23d4d9f5416719f6b" translate="yes" xml:space="preserve">
          <source>This function clears and redisplays frame &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it redraws the selected frame.</source>
          <target state="translated">Эта функция очищает и повторно отображает рамку &lt;var&gt;frame&lt;/var&gt; . Если &lt;var&gt;frame&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , выбранный кадр перерисовывается.</target>
        </trans-unit>
        <trans-unit id="bee3cb583a7c59bb273547bda2f8cbc5a79c8229" translate="yes" xml:space="preserve">
          <source>This function clears out the record of the last modification time of the file being visited by the current buffer. As a result, the next attempt to save this buffer will not complain of a discrepancy in file modification times.</source>
          <target state="translated">Эта функция очищает запись о последнем времени модификации файла,посещаемого текущим буфером.В результате следующая попытка сохранить этот буфер не будет жаловаться на расхождение во времени модификации файла.</target>
        </trans-unit>
        <trans-unit id="3060a69479b02be0e975b9582949ab1ac97d85c1" translate="yes" xml:space="preserve">
          <source>This function clears the pending nonlocal exit conditions and data from &lt;var&gt;env&lt;/var&gt;. After calling it, the module</source>
          <target state="translated">Эта функция очищает отложенные нелокальные условия выхода и данные из &lt;var&gt;env&lt;/var&gt; . После его вызова модуль</target>
        </trans-unit>
        <trans-unit id="8f7e5427bf38884b44e2e51ab2819c587f2b4009" translate="yes" xml:space="preserve">
          <source>This function clears the table of defined colors for a text terminal.</source>
          <target state="translated">Эта функция очищает таблицу от определенных цветов для текстового терминала.</target>
        </trans-unit>
        <trans-unit id="5c32281f9d21be19333ed3ff71d217ace70d4a19" translate="yes" xml:space="preserve">
          <source>This function closes a notification with identifier &lt;var&gt;id&lt;/var&gt;. &lt;var&gt;bus&lt;/var&gt; can be a string denoting a D-Bus connection, the default is &lt;code&gt;:session&lt;/code&gt;.</source>
          <target state="translated">Эта функция закрывает уведомление с идентификатором &lt;var&gt;id&lt;/var&gt; . &lt;var&gt;bus&lt;/var&gt; может быть строкой, обозначающей соединение D-Bus, по умолчанию &lt;code&gt;:session&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a745e063d28aa86713ef30ab5d0016b27d3e4da" translate="yes" xml:space="preserve">
          <source>This function closes the connection to display &lt;var&gt;display&lt;/var&gt;. Before you can do this, you must first delete all the frames that were open on that display (see &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;).</source>
          <target state="translated">Эта функция закрывает соединение с &lt;var&gt;display&lt;/var&gt; . Прежде чем вы сможете это сделать, вы должны сначала удалить все кадры, которые были открыты на этом дисплее (см. &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Удаление кадров&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3e0b6d0d98bf0d18b76cb8c96931febc86eb0283" translate="yes" xml:space="preserve">
          <source>This function collects applicable connection-local variables associated with &lt;var&gt;criteria&lt;/var&gt; in &lt;code&gt;connection-local-variables-alist&lt;/code&gt;, without applying them. Example:</source>
          <target state="translated">Эта функция собирает применимые локальные переменные соединения, связанные с &lt;var&gt;criteria&lt;/var&gt; в &lt;code&gt;connection-local-variables-alist&lt;/code&gt; , без их применения. Пример:</target>
        </trans-unit>
        <trans-unit id="a5f2cbb8b2da3d3c58cb447a71d60b0917ba7a4b" translate="yes" xml:space="preserve">
          <source>This function compares a specified part of &lt;var&gt;string1&lt;/var&gt; with a specified part of &lt;var&gt;string2&lt;/var&gt;. The specified part of &lt;var&gt;string1&lt;/var&gt; runs from index &lt;var&gt;start1&lt;/var&gt; (inclusive) up to index &lt;var&gt;end1&lt;/var&gt; (exclusive); &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;start1&lt;/var&gt; means the start of the string, while &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;end1&lt;/var&gt; means the length of the string. Likewise, the specified part of &lt;var&gt;string2&lt;/var&gt; runs from index &lt;var&gt;start2&lt;/var&gt; up to index &lt;var&gt;end2&lt;/var&gt;.</source>
          <target state="translated">Эта функция сравнивает указанную часть &lt;var&gt;string1&lt;/var&gt; с указанной частью &lt;var&gt;string2&lt;/var&gt; . Указанная часть &lt;var&gt;string1&lt;/var&gt; прогонов из индекса &lt;var&gt;start1&lt;/var&gt; (включительно) до индекса &lt;var&gt;end1&lt;/var&gt; (эксклюзивного); &lt;code&gt;nil&lt;/code&gt; для &lt;var&gt;start1&lt;/var&gt; означает начало строки, а &lt;code&gt;nil&lt;/code&gt; для &lt;var&gt;end1&lt;/var&gt; означает длину строки. Точно так же указанная часть &lt;var&gt;string2&lt;/var&gt; выполняется от &lt;var&gt;start2&lt;/var&gt; индекса до &lt;var&gt;end2&lt;/var&gt; индекса .</target>
        </trans-unit>
        <trans-unit id="a9aef49fc24cfd15fd641dc26e422b78872aaf3e" translate="yes" xml:space="preserve">
          <source>This function compares strings lexicographically, except it treats sequences of numerical characters as if they comprised a base-ten number, and then compares the numbers. So &amp;lsquo;</source>
          <target state="translated">Эта функция сравнивает строки лексикографически, за исключением того, что она обрабатывает последовательности числовых символов, как если бы они составляли десятичное число, а затем сравнивает числа. Так '</target>
        </trans-unit>
        <trans-unit id="9034e147ae2fe7be500b89dffbb10f53c4559803" translate="yes" xml:space="preserve">
          <source>This function compares two strings a character at a time. It scans both the strings at the same time to find the first pair of corresponding characters that do not match. If the lesser character of these two is the character from &lt;var&gt;string1&lt;/var&gt;, then &lt;var&gt;string1&lt;/var&gt; is less, and this function returns &lt;code&gt;t&lt;/code&gt;. If the lesser character is the one from &lt;var&gt;string2&lt;/var&gt;, then &lt;var&gt;string1&lt;/var&gt; is greater, and this function returns &lt;code&gt;nil&lt;/code&gt;. If the two strings match entirely, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта функция сравнивает две строки по одному символу за раз. Он просматривает обе строки одновременно, чтобы найти первую пару соответствующих символов, которые не совпадают. Если меньший из этих двух символов является символом из &lt;var&gt;string1&lt;/var&gt; , тогда &lt;var&gt;string1&lt;/var&gt; меньше, и эта функция возвращает &lt;code&gt;t&lt;/code&gt; . Если меньший символ является символом из &lt;var&gt;string2&lt;/var&gt; , тогда &lt;var&gt;string1&lt;/var&gt; больше, и эта функция возвращает &lt;code&gt;nil&lt;/code&gt; . Если две строки полностью совпадают, значение равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c2f9fdbef44b9334df7df941797433fe0a9f929" translate="yes" xml:space="preserve">
          <source>This function compares two window configurations as regards the structure of windows, but ignores the values of point and the saved scrolling positions&amp;mdash;it can return &lt;code&gt;t&lt;/code&gt; even if those aspects differ.</source>
          <target state="translated">Эта функция сравнивает две конфигурации окон в отношении структуры окон, но игнорирует значения точки и сохраненные положения прокрутки - она ​​может вернуть &lt;code&gt;t&lt;/code&gt; , даже если эти аспекты различаются.</target>
        </trans-unit>
        <trans-unit id="5ec97384413e26b14db3042cb150998e759231c6" translate="yes" xml:space="preserve">
          <source>This function compares what &lt;var&gt;buffer&lt;/var&gt; (by default, the current-buffer) has recorded for the modification time of its visited file against the actual modification time of the file as recorded by the operating system. The two should be the same unless some other process has written the file since Emacs visited or saved it.</source>
          <target state="translated">Эта функция сравнивает, какой &lt;var&gt;buffer&lt;/var&gt; (по умолчанию текущий буфер) записал для времени модификации посещенного файла, с фактическим временем модификации файла, записанным операционной системой. Они должны быть одинаковыми, если какой-либо другой процесс не записал файл с тех пор, как Emacs посетил или сохранил его.</target>
        </trans-unit>
        <trans-unit id="c83d94c6b4aed094cff30137ca18eeb913c13ac9" translate="yes" xml:space="preserve">
          <source>This function compiles a file of Lisp code named &lt;var&gt;filename&lt;/var&gt; into a file of byte-code. The output file&amp;rsquo;s name is made by changing the &amp;lsquo;</source>
          <target state="translated">Эта функция компилирует файл с кодом Lisp с именем &lt;var&gt;filename&lt;/var&gt; в файл с байтовым кодом. Имя выходного файла задается изменением символа '</target>
        </trans-unit>
        <trans-unit id="9ff26f5c877255414616a98408a7c2311408a1aa" translate="yes" xml:space="preserve">
          <source>This function completely replaces the text property list for the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">Эта функция полностью заменяет список свойств текста для текста между &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; строки или &lt;var&gt;object&lt;/var&gt; буфера . Если &lt;var&gt;object&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется текущий буфер.</target>
        </trans-unit>
        <trans-unit id="96e5dd8c088a37e664134a9b6d1058179d2a41ee" translate="yes" xml:space="preserve">
          <source>This function completes the file name &lt;var&gt;filename&lt;/var&gt; in directory &lt;var&gt;directory&lt;/var&gt;. It returns the longest prefix common to all file names in directory &lt;var&gt;directory&lt;/var&gt; that start with &lt;var&gt;filename&lt;/var&gt;. If &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then it ignores possible completions that don&amp;rsquo;t satisfy &lt;var&gt;predicate&lt;/var&gt;, after calling that function with one argument, the expanded absolute file name.</source>
          <target state="translated">Эта функция завершает имя &lt;var&gt;filename&lt;/var&gt; в каталоге &lt;var&gt;directory&lt;/var&gt; . Он возвращает самый длинный префикс, общий для всех имен файлов в &lt;var&gt;directory&lt;/var&gt; которые начинаются с &lt;var&gt;filename&lt;/var&gt; . Если &lt;var&gt;predicate&lt;/var&gt; равен &lt;code&gt;nil&lt;/code&gt; он игнорирует возможные завершения, которые не удовлетворяют &lt;var&gt;predicate&lt;/var&gt; , после вызова этой функции с одним аргументом, расширенным абсолютным именем файла.</target>
        </trans-unit>
        <trans-unit id="89697381d81d2b533d98ac549ea2fac24cad4a9b" translate="yes" xml:space="preserve">
          <source>This function completes the minibuffer contents as far as possible.</source>
          <target state="translated">Эта функция завершает,насколько это возможно,содержимое минибуфера.</target>
        </trans-unit>
        <trans-unit id="f65e2c60aa526439854986136550b909686ed2ea" translate="yes" xml:space="preserve">
          <source>This function completes the minibuffer contents by at most a single word. Even if the minibuffer contents have only one completion, &lt;code&gt;minibuffer-complete-word&lt;/code&gt; does not add any characters beyond the first character that is not a word constituent. See &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;.</source>
          <target state="translated">Эта функция дополняет содержимое минибуфера максимум одним словом. Даже если содержимое минибуфера имеет только одно завершение, &lt;code&gt;minibuffer-complete-word&lt;/code&gt; не добавляет никаких символов, кроме первого символа, который не является составной частью слова. См. &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Таблицы синтаксиса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5f99a4ea128fe021c030d5d486d31c0bc6723d4" translate="yes" xml:space="preserve">
          <source>This function completes the minibuffer contents, and exits if confirmation is not required, i.e., if &lt;code&gt;minibuffer-completion-confirm&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;. If confirmation &lt;em&gt;is&lt;/em&gt; required, it is given by repeating this command immediately&amp;mdash;the command is programmed to work without confirmation when run twice in succession.</source>
          <target state="translated">Эта функция завершает содержимое минибуфера и завершает работу, если подтверждение не требуется, т. &lt;code&gt;minibuffer-completion-confirm&lt;/code&gt; Если minibuffer-completion-confirm равно &lt;code&gt;nil&lt;/code&gt; . Если подтверждение &lt;em&gt;будет&lt;/em&gt; необходимо, оно дается, повторяя эту команду сразу-команда запрограммирована на работу без подтверждения при запуске два раза подряд.</target>
        </trans-unit>
        <trans-unit id="b2a58d63f1c49b5bc24866684235f7841db04eba" translate="yes" xml:space="preserve">
          <source>This function completes the text in the current buffer between the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, using &lt;var&gt;collection&lt;/var&gt;. The argument &lt;var&gt;collection&lt;/var&gt; has the same meaning as in &lt;code&gt;try-completion&lt;/code&gt; (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;).</source>
          <target state="translated">Эта функция завершает текст в текущем буфере между позициями &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; , используя &lt;var&gt;collection&lt;/var&gt; . Аргумент &lt;var&gt;collection&lt;/var&gt; имеет тот же смысл, что и в &lt;code&gt;try-completion&lt;/code&gt; (см &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Базовый комплект&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0d1a5a3778131495c3c5ca116a07f78182f8f709" translate="yes" xml:space="preserve">
          <source>This function computes and sets &lt;code&gt;header-line-format&lt;/code&gt; for the Tabulated List buffer (see &lt;a href=&quot;header-lines#Header-Lines&quot;&gt;Header Lines&lt;/a&gt;), and assigns a keymap to the header line to allow sorting entries by clicking on column headers.</source>
          <target state="translated">Эта функция вычисляет и устанавливает &lt;code&gt;header-line-format&lt;/code&gt; для буфера табулированного списка (см. &lt;a href=&quot;header-lines#Header-Lines&quot;&gt;Строки заголовка&lt;/a&gt; ) и назначает раскладку строки заголовка, чтобы разрешить сортировку записей, щелкая заголовки столбцов.</target>
        </trans-unit>
        <trans-unit id="78c2d01ec980279b7b58d31009ca74eb586b1822" translate="yes" xml:space="preserve">
          <source>This function computes the file name for a new backup file for &lt;var&gt;filename&lt;/var&gt;. It may also propose certain existing backup files for deletion. &lt;code&gt;find-backup-file-name&lt;/code&gt; returns a list whose &lt;small&gt;CAR&lt;/small&gt; is the name for the new backup file and whose &lt;small&gt;CDR&lt;/small&gt; is a list of backup files whose deletion is proposed. The value can also be &lt;code&gt;nil&lt;/code&gt;, which means not to make a backup.</source>
          <target state="translated">Эта функция вычисляет имя файла для нового файла резервной копии с &lt;var&gt;filename&lt;/var&gt; . Он также может предлагать некоторые существующие файлы резервных копий для удаления. &lt;code&gt;find-backup-file-name&lt;/code&gt; возвращает список, в котором &lt;small&gt;CAR&lt;/small&gt; является именем нового файла резервной копии, а &lt;small&gt;CDR&lt;/small&gt; - списком файлов резервных копий, удаление которых предлагается. Значение также может быть &lt;code&gt;nil&lt;/code&gt; , что означает, что резервное копирование не требуется.</target>
        </trans-unit>
        <trans-unit id="15cfed84063ac5b06746e9180517a26ec66a11a3" translate="yes" xml:space="preserve">
          <source>This function concatenates &lt;var&gt;list-of-strings&lt;/var&gt; into a single string, quoting each string as necessary. It also sticks the &lt;var&gt;separator&lt;/var&gt; string between each pair of strings; if &lt;var&gt;separator&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to &lt;code&gt;&quot; &quot;&lt;/code&gt;. The return value is the resulting string.</source>
          <target state="translated">Эта функция объединяет &lt;var&gt;list-of-strings&lt;/var&gt; в одну строку, при необходимости заключая каждую строку в кавычки. Он также вставляет &lt;var&gt;separator&lt;/var&gt; строку между каждой парой строк; если &lt;var&gt;separator&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , по умолчанию используется &lt;code&gt;&quot; &quot;&lt;/code&gt; . Возвращаемое значение - результирующая строка.</target>
        </trans-unit>
        <trans-unit id="9fd9b3f2732fc488731684e8b7a04dcea87dd0c7" translate="yes" xml:space="preserve">
          <source>This function concatenates all its argument &lt;var&gt;bytes&lt;/var&gt; and makes the result a unibyte string.</source>
          <target state="translated">Эта функция объединяет все &lt;var&gt;bytes&lt;/var&gt; своих аргументов и делает результат однобайтовой строкой.</target>
        </trans-unit>
        <trans-unit id="0f609cc62af27e58ae79537191c5454848740175" translate="yes" xml:space="preserve">
          <source>This function configures a serial port connection. Arguments are specified as keyword/argument pairs. Attributes that are not given are re-initialized from the process&amp;rsquo;s current configuration (available via the function &lt;code&gt;process-contact&lt;/code&gt;), or set to reasonable default values. The following arguments are defined:</source>
          <target state="translated">Эта функция настраивает соединение через последовательный порт. Аргументы указываются как пары ключевое слово / аргумент. Атрибуты, которые не указаны, повторно инициализируются из текущей конфигурации процесса (доступной через функцию &lt;code&gt;process-contact&lt;/code&gt; ) или устанавливаются на разумные значения по умолчанию. Определены следующие аргументы:</target>
        </trans-unit>
        <trans-unit id="ae1aa50ca602dad0456661afa9b0b54a5f48f045" translate="yes" xml:space="preserve">
          <source>This function considers only vertical scrolling. If &lt;var&gt;position&lt;/var&gt; is out of view only because &lt;var&gt;window&lt;/var&gt; has been scrolled horizontally, &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; returns non-&lt;code&gt;nil&lt;/code&gt; anyway. See &lt;a href=&quot;horizontal-scrolling#Horizontal-Scrolling&quot;&gt;Horizontal Scrolling&lt;/a&gt;.</source>
          <target state="translated">Эта функция учитывает только вертикальную прокрутку. Если &lt;var&gt;position&lt;/var&gt; находится вне поля зрения только потому, что &lt;var&gt;window&lt;/var&gt; было прокручено по горизонтали, &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; все равно возвращает &lt;code&gt;nil&lt;/code&gt; . См. &lt;a href=&quot;horizontal-scrolling#Horizontal-Scrolling&quot;&gt;Горизонтальная прокрутка&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cde355012f0c4eafa46f2543db211450f70a05d3" translate="yes" xml:space="preserve">
          <source>This function constrains &lt;var&gt;new-pos&lt;/var&gt; to the field that &lt;var&gt;old-pos&lt;/var&gt; belongs to&amp;mdash;in other words, it returns the position closest to &lt;var&gt;new-pos&lt;/var&gt; that is in the same field as &lt;var&gt;old-pos&lt;/var&gt;.</source>
          <target state="translated">Эта функция ограничивает &lt;var&gt;new-pos&lt;/var&gt; полем, которому принадлежит &lt;var&gt;old-pos&lt;/var&gt; , другими словами, она возвращает позицию, ближайшую к &lt;var&gt;new-pos&lt;/var&gt; , которая находится в том же поле, что и &lt;var&gt;old-pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c035e2921cfe0f74be7de8b7fe58236fd3e77fcf" translate="yes" xml:space="preserve">
          <source>This function constructs a copy of &lt;var&gt;table&lt;/var&gt; and returns it. If &lt;var&gt;table&lt;/var&gt; is not supplied (or is &lt;code&gt;nil&lt;/code&gt;), it returns a copy of the standard category table. Otherwise, an error is signaled if &lt;var&gt;table&lt;/var&gt; is not a category table.</source>
          <target state="translated">Эта функция создает копию &lt;var&gt;table&lt;/var&gt; и возвращает ее. Если &lt;var&gt;table&lt;/var&gt; не указана (или равна &lt;code&gt;nil&lt;/code&gt; ), она возвращает копию стандартной таблицы категорий. В противном случае выдается сообщение об ошибке, если &lt;var&gt;table&lt;/var&gt; не является таблицей категорий.</target>
        </trans-unit>
        <trans-unit id="7f85e738f572dd42f45a76a6fb1310f9fd67cd0e" translate="yes" xml:space="preserve">
          <source>This function constructs a copy of &lt;var&gt;table&lt;/var&gt; and returns it. If &lt;var&gt;table&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it returns a copy of the standard syntax table. Otherwise, an error is signaled if &lt;var&gt;table&lt;/var&gt; is not a syntax table.</source>
          <target state="translated">Эта функция создает копию &lt;var&gt;table&lt;/var&gt; и возвращает ее. Если &lt;var&gt;table&lt;/var&gt; опущен или равен &lt;code&gt;nil&lt;/code&gt; , возвращается копия стандартной таблицы синтаксиса. В противном случае выдается сообщение об ошибке, если &lt;var&gt;table&lt;/var&gt; не является таблицей синтаксиса.</target>
        </trans-unit>
        <trans-unit id="b4c244f7aa08244e0deec64e00a96009dfa82c42" translate="yes" xml:space="preserve">
          <source>This function constructs and returns a byte-code function object with &lt;var&gt;elements&lt;/var&gt; as its elements.</source>
          <target state="translated">Эта функция создает и возвращает объект функции с байтовым кодом с &lt;var&gt;elements&lt;/var&gt; качестве его элементов.</target>
        </trans-unit>
        <trans-unit id="874c9d04892ed512e0cb9599abc452937e886429" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;filename&lt;/var&gt; to an absolute file name. If &lt;var&gt;directory&lt;/var&gt; is supplied, it is the default directory to start with if &lt;var&gt;filename&lt;/var&gt; is relative and does not start with &amp;lsquo;</source>
          <target state="translated">Эта функция преобразует &lt;var&gt;filename&lt;/var&gt; в абсолютное имя файла. Если указан &lt;var&gt;directory&lt;/var&gt; , это каталог по умолчанию для начала, если &lt;var&gt;filename&lt;/var&gt; является относительным и не начинается с '</target>
        </trans-unit>
        <trans-unit id="c6f04cb2dcd8552a3a5f7e94e0e1f5fad1b2ccf9" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;string-or-char&lt;/var&gt;, which should be either a character or a string, to lower case.</source>
          <target state="translated">Эта функция преобразует &lt;var&gt;string-or-char&lt;/var&gt; , которая должна быть либо символом, либо строкой, в нижний регистр.</target>
        </trans-unit>
        <trans-unit id="0f989624fd0c758de426f10a05d50246e948f9a2" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;string-or-char&lt;/var&gt;, which should be either a character or a string, to upper case.</source>
          <target state="translated">Эта функция преобразует &lt;var&gt;string-or-char&lt;/var&gt; , которая должна быть либо символом, либо строкой, в верхний регистр.</target>
        </trans-unit>
        <trans-unit id="08deea44cd6426f83ec6d17a664425ce999fa824" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;time&lt;/var&gt; (or the current time, if &lt;var&gt;time&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;) to a string according to &lt;var&gt;format-string&lt;/var&gt;. The conversion uses the time zone rule &lt;var&gt;zone&lt;/var&gt;, which defaults to the current time zone rule. See &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;Time Zone Rules&lt;/a&gt;. The argument &lt;var&gt;format-string&lt;/var&gt; may contain &amp;lsquo;</source>
          <target state="translated">Эта функция преобразует &lt;var&gt;time&lt;/var&gt; (или текущее время, если &lt;var&gt;time&lt;/var&gt; опущено или равно &lt;code&gt;nil&lt;/code&gt; ) в строку в соответствии со строкой &lt;var&gt;format-string&lt;/var&gt; . Преобразование использует пояс правила &lt;var&gt;zone&lt;/var&gt; , который по умолчанию соответствует правилу текущего часового пояса. См. &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;Правила часовых поясов&lt;/a&gt; . &lt;var&gt;format-string&lt;/var&gt; аргумента может содержать '</target>
        </trans-unit>
        <trans-unit id="af54ecd47221b1061345a45468c6a95ba1e4a90a" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;time&lt;/var&gt; to a Lisp timestamp. It can act as the inverse of &lt;code&gt;decode-time&lt;/code&gt;.</source>
          <target state="translated">Эта функция преобразует &lt;var&gt;time&lt;/var&gt; в метку времени Лиспа. Он может действовать как инверсия времени &lt;code&gt;decode-time&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9556989e13e1c87dd87a2475ba3e7fcedc6ef511" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;window&lt;/var&gt; into an atomic window. The specified &lt;var&gt;window&lt;/var&gt; must be an internal window. All this function does is to set the &lt;code&gt;window-atom&lt;/code&gt; parameter of each descendant of &lt;var&gt;window&lt;/var&gt; to &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Эта функция преобразует &lt;var&gt;window&lt;/var&gt; в атомарное окно. Указанное &lt;var&gt;window&lt;/var&gt; должно быть внутренним окном. Вся эта функция делает , чтобы установить &lt;code&gt;window-atom&lt;/code&gt; параметр каждого потомка &lt;var&gt;window&lt;/var&gt; в &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4394d3a4e8f2f4b04cb0e1e7a5b3b08994faeb8e" translate="yes" xml:space="preserve">
          <source>This function converts a byte of character data into a unibyte string. See &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Converting Representations&lt;/a&gt;.</source>
          <target state="translated">Эта функция преобразует байт символьных данных в однобайтную строку. См. &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Преобразование представлений&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e992f1f964d96bc49a9789e01d65667cbdb109b6" translate="yes" xml:space="preserve">
          <source>This function converts a list of modifier names and a basic event type to an event type which specifies all of them. The basic event type must be the last element of the list. For example,</source>
          <target state="translated">Эта функция преобразует список имен модификаторов и базовый тип события в тип события,который задает их все.Основной тип события должен быть последним элементом списка.Например,</target>
        </trans-unit>
        <trans-unit id="fa293dfea4e94d45e0f4b45c62d0d21f401f60f1" translate="yes" xml:space="preserve">
          <source>This function converts a string into a list. See &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;.</source>
          <target state="translated">Эта функция преобразует строку в список. См. &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Списки зданий&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ba7cf90ea9020c057e351af979b4627a28943977" translate="yes" xml:space="preserve">
          <source>This function converts a string into a vector. See &lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;Vector Functions&lt;/a&gt;.</source>
          <target state="translated">Эта функция преобразует строку в вектор. См. &lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;Векторные функции&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="de39ac156148bc00d8eba5104462a121e553a0c8" translate="yes" xml:space="preserve">
          <source>This function converts a symbolic file mode specification in &lt;var&gt;modes&lt;/var&gt; into the equivalent integer. If the symbolic specification is based on an existing file, that file&amp;rsquo;s mode bits are taken from the optional argument &lt;var&gt;base-modes&lt;/var&gt;; if that argument is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 0, i.e., no access rights at all.</source>
          <target state="translated">Эта функция преобразует спецификацию символьного режима файла в &lt;var&gt;modes&lt;/var&gt; в эквивалентное целое число. Если символьная спецификация основана на существующем файле, биты режима этого файла берутся из необязательного аргумента &lt;var&gt;base-modes&lt;/var&gt; mode ; если этот аргумент опущен или равен &lt;code&gt;nil&lt;/code&gt; , по умолчанию он равен 0, т. е. никаких прав доступа нет.</target>
        </trans-unit>
        <trans-unit id="d030cf650429694dcbd23523e917ca3d9b38b644" translate="yes" xml:space="preserve">
          <source>This function converts a time value into a Lisp timestamp.</source>
          <target state="translated">Эта функция преобразует значение времени в метку времени Lisp.</target>
        </trans-unit>
        <trans-unit id="b42ea5d4ccf2ef27bcafdca8857b96e0ec80b9ba" translate="yes" xml:space="preserve">
          <source>This function converts a time value into calendrical information. If you don&amp;rsquo;t specify &lt;var&gt;time&lt;/var&gt;, it decodes the current time, and similarly &lt;var&gt;zone&lt;/var&gt; defaults to the current time zone rule. See &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;Time Zone Rules&lt;/a&gt;. The operating system limits the range of time and zone values.</source>
          <target state="translated">Эта функция преобразует значение времени в календарную информацию. Если вы не укажете &lt;var&gt;time&lt;/var&gt; , оно декодирует текущее время, и аналогично &lt;var&gt;zone&lt;/var&gt; умолчанию соответствует правилу текущего часового пояса. См. &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;Правила часовых поясов&lt;/a&gt; . Операционная система ограничивает диапазон значений времени и пояса.</target>
        </trans-unit>
        <trans-unit id="2f969c70e3311439ebe20fadc0eaec66bb09a12b" translate="yes" xml:space="preserve">
          <source>This function converts a vector or a list into a string. See &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;.</source>
          <target state="translated">Эта функция преобразует вектор или список в строку. См. &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Создание строк&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3e6336c33752f31d6b7b5c1c515a347a8aa0a924" translate="yes" xml:space="preserve">
          <source>This function converts all of the letters in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; to lower case. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта функция преобразует все буквы в области, определенной как &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; в нижний регистр. Функция возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9a4398a0eb5df16a14bbdabef0a9c25aa4c8dca" translate="yes" xml:space="preserve">
          <source>This function converts all of the letters in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; to upper case. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта функция преобразует все буквы в области, определенной как &lt;var&gt;start&lt;/var&gt; и &lt;var&gt;end&lt;/var&gt; в верхний регистр. Функция возвращает &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8e8fdf0444ef662f70cfc701373fe0e12fe9b20" translate="yes" xml:space="preserve">
          <source>This function converts its argument &lt;var&gt;seconds&lt;/var&gt; into a string of years, days, hours, etc., according to &lt;var&gt;format-string&lt;/var&gt;. The argument &lt;var&gt;format-string&lt;/var&gt; may contain &amp;lsquo;</source>
          <target state="translated">Эта функция преобразует &lt;var&gt;seconds&lt;/var&gt; своего аргумента в строку лет, дней, часов и т. Д. В соответствии со &lt;var&gt;format-string&lt;/var&gt; . &lt;var&gt;format-string&lt;/var&gt; аргумента может содержать '</target>
        </trans-unit>
        <trans-unit id="86a9053d2989039c47d4dcf75a4f96fffa040ae3" translate="yes" xml:space="preserve">
          <source>This function converts the &lt;var&gt;count&lt;/var&gt; words after point to all lower case, moving point over as it does. If &lt;var&gt;count&lt;/var&gt; is negative, it converts the -&lt;var&gt;count&lt;/var&gt; previous words but does not move point. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта функция преобразует &lt;var&gt;count&lt;/var&gt; слов после точки во все строчные буквы, перемещая точку при этом. Если &lt;var&gt;count&lt;/var&gt; отрицательный, он преобразует предыдущие слова - &lt;var&gt;count&lt;/var&gt; , но не перемещает точку. Значение равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cac8af14fb95a5540d55eb853b73fc1a4069ee83" translate="yes" xml:space="preserve">
          <source>This function converts the &lt;var&gt;count&lt;/var&gt; words after point to all upper case, moving point over as it does. If &lt;var&gt;count&lt;/var&gt; is negative, it converts the -&lt;var&gt;count&lt;/var&gt; previous words but does not move point. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Эта функция преобразует &lt;var&gt;count&lt;/var&gt; слов после точки в верхний регистр, перемещая точку при этом. Если &lt;var&gt;count&lt;/var&gt; отрицательный, он преобразует предыдущие слова - &lt;var&gt;count&lt;/var&gt; , но не перемещает точку. Значение равно &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="062f3332d58edfbeada8443df59348c0b2e03c21" translate="yes" xml:space="preserve">
          <source>This function converts the Lisp representation of a network address to a string.</source>
          <target state="translated">Эта функция преобразует представление сетевого адреса на языке Lisp в строку.</target>
        </trans-unit>
        <trans-unit id="359414babccfce31742287145cb81207c3f0a60a" translate="yes" xml:space="preserve">
          <source>This function converts the category set &lt;var&gt;category-set&lt;/var&gt; into a string containing the characters that designate the categories that are members of the set.</source>
          <target state="translated">Эта функция преобразует набор &lt;var&gt;category-set&lt;/var&gt; в строку, содержащую символы, которые обозначают категории, которые являются членами набора.</target>
        </trans-unit>
        <trans-unit id="222c0635402e22f63d2e19252b80a4006a515fdf" translate="yes" xml:space="preserve">
          <source>This function converts the region from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; from base 64 code into the corresponding decoded text. It returns the length of the decoded text.</source>
          <target state="translated">Эта функция преобразует область от &lt;var&gt;beg&lt;/var&gt; до &lt;var&gt;end&lt;/var&gt; из базы 64 кода в соответствующем декодированном текст. Возвращает длину декодированного текста.</target>
        </trans-unit>
        <trans-unit id="c5d4159748c6f5ed11333f8afa2f8e02a7c10cee" translate="yes" xml:space="preserve">
          <source>This function converts the region from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; into base 64 code. It returns the length of the encoded text. An error is signaled if a character in the region is multibyte, i.e., in a multibyte buffer the region must contain only characters from the charsets &lt;code&gt;ascii&lt;/code&gt;, &lt;code&gt;eight-bit-control&lt;/code&gt; and &lt;code&gt;eight-bit-graphic&lt;/code&gt;.</source>
          <target state="translated">Эта функция преобразует область от &lt;var&gt;beg&lt;/var&gt; до &lt;var&gt;end&lt;/var&gt; в основании 64 кода. Возвращает длину закодированного текста. Об ошибке сигнализируется, если символ в области является многобайтовым, т.е. в многобайтовом буфере область должна содержать только символы из кодировок &lt;code&gt;ascii&lt;/code&gt; , &lt;code&gt;eight-bit-control&lt;/code&gt; и &lt;code&gt;eight-bit-graphic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27da589d75e12703d9b8345613fc7d8ec3e352e7" translate="yes" xml:space="preserve">
          <source>This function converts the sequence &lt;var&gt;sequence&lt;/var&gt; into a sequence of type &lt;var&gt;type&lt;/var&gt;. &lt;var&gt;type&lt;/var&gt; can be one of the following symbols: &lt;code&gt;vector&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">Эта функция преобразует последовательность &lt;var&gt;sequence&lt;/var&gt; в последовательность типа &lt;var&gt;type&lt;/var&gt; . &lt;var&gt;type&lt;/var&gt; может быть одним из следующих символов: &lt;code&gt;vector&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; или &lt;code&gt;list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a450d2efa54e77616fbd5d26e99b08469e6ca74d" translate="yes" xml:space="preserve">
          <source>This function converts the string &lt;var&gt;string&lt;/var&gt; from base 64 code into the corresponding decoded text. It returns a unibyte string containing the decoded text.</source>
          <target state="translated">Эта функция преобразует строковую &lt;var&gt;string&lt;/var&gt; из кода base 64 в соответствующий декодированный текст. Он возвращает однобайтную строку, содержащую декодированный текст.</target>
        </trans-unit>
        <trans-unit id="02598df53b09eaff6e4270202cb83707188dc533" translate="yes" xml:space="preserve">
          <source>This function converts the string &lt;var&gt;string&lt;/var&gt; into base 64 code. It returns a string containing the encoded text. As for &lt;code&gt;base64-encode-region&lt;/code&gt;, an error is signaled if a character in the string is multibyte.</source>
          <target state="translated">Эта функция преобразует строковую &lt;var&gt;string&lt;/var&gt; в код base 64. Он возвращает строку, содержащую закодированный текст. Что касается &lt;code&gt;base64-encode-region&lt;/code&gt; , ошибка выдается, если символ в строке многобайтовый.</target>
        </trans-unit>
        <trans-unit id="9b37cca380a96ff521cab51131ab757cfa6eae3e" translate="yes" xml:space="preserve">
          <source>This function converts the string or vector &lt;var&gt;key&lt;/var&gt; to a list of individual events, which you can put in &lt;code&gt;unread-command-events&lt;/code&gt;.</source>
          <target state="translated">Эта функция преобразует строку или векторный &lt;var&gt;key&lt;/var&gt; в список отдельных событий, которые вы можете поместить в &lt;code&gt;unread-command-events&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f001050e70298d6ec962a0626dbda0a35b830508" translate="yes" xml:space="preserve">
          <source>This function converts the text &lt;var&gt;keyseq-text&lt;/var&gt; (a string constant) into a key sequence (a string or vector constant). The contents of &lt;var&gt;keyseq-text&lt;/var&gt; should use the same syntax as in the buffer invoked by the</source>
          <target state="translated">Эта функция преобразует текстовый &lt;var&gt;keyseq-text&lt;/var&gt; ( строковую константу) в ключевую последовательность ( строковую или векторную константу). Содержимое &lt;var&gt;keyseq-text&lt;/var&gt; должно использовать тот же синтаксис, что и в буфере, вызываемом</target>
        </trans-unit>
        <trans-unit id="fe2af2ee8e43bb67213200069f07caef5315b672" translate="yes" xml:space="preserve">
          <source>This function copies &lt;var&gt;string&lt;/var&gt; and searches it for matches for &lt;var&gt;regexp&lt;/var&gt;, and replaces them with &lt;var&gt;rep&lt;/var&gt;. It returns the modified copy. If &lt;var&gt;start&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the search for matches starts at that index in &lt;var&gt;string&lt;/var&gt;, and the returned value does not include the first &lt;var&gt;start&lt;/var&gt; characters of &lt;var&gt;string&lt;/var&gt;. To get the whole transformed string, concatenate the first &lt;var&gt;start&lt;/var&gt; characters of &lt;var&gt;string&lt;/var&gt; with the return value.</source>
          <target state="translated">This function copies &lt;var&gt;string&lt;/var&gt; and searches it for matches for &lt;var&gt;regexp&lt;/var&gt; , and replaces them with &lt;var&gt;rep&lt;/var&gt; . It returns the modified copy. If &lt;var&gt;start&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , the search for matches starts at that index in &lt;var&gt;string&lt;/var&gt; , and the returned value does not include the first &lt;var&gt;start&lt;/var&gt; characters of &lt;var&gt;string&lt;/var&gt; . To get the whole transformed string, concatenate the first &lt;var&gt;start&lt;/var&gt; characters of &lt;var&gt;string&lt;/var&gt; with the return value.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
