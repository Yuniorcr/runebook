<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="9a52563c6b228851d7bd722e9df68900d397ecd2" translate="yes" xml:space="preserve">
          <source>Even if there are no groupings in a regexp, it is still possible to find out what exactly matched in a string. If you use them, Perl will set &lt;code&gt;$`&lt;/code&gt; to the part of the string before the match, will set &lt;code&gt;$&amp;amp;&lt;/code&gt; to the part of the string that matched, and will set &lt;code&gt;$'&lt;/code&gt; to the part of the string after the match. An example:</source>
          <target state="translated">Даже если в регулярном выражении нет группировок, все равно можно узнать, что именно соответствует в строке. Если вы их используете, Perl установит &lt;code&gt;$`&lt;/code&gt; как часть строки перед совпадением, установит &lt;code&gt;$&amp;amp;&lt;/code&gt; как часть совпавшей строки и установит &lt;code&gt;$'&lt;/code&gt; как часть строки после совпадения. Пример:</target>
        </trans-unit>
        <trans-unit id="d0239289e914ec51bf43e7158f9d72ad004bea40" translate="yes" xml:space="preserve">
          <source>Even if you aren't in doubt, consider the mental welfare of the person who has to maintain the code after you, and who will probably put parentheses in the wrong place.</source>
          <target state="translated">Даже если вы не сомневаетесь,подумайте о психическом благополучии человека,который должен поддерживать код после вас,и который,скорее всего,поставит скобки не в то место.</target>
        </trans-unit>
        <trans-unit id="2698b39349f79453a318cb744bc9cc6aed1c6f70" translate="yes" xml:space="preserve">
          <source>Even if you don't currently make use of the API interface, it is still worth reading it.</source>
          <target state="translated">Даже если вы в данный момент не пользуетесь API интерфейсом,все равно стоит его прочитать.</target>
        </trans-unit>
        <trans-unit id="11193f6fb31e4425ba4f294d83acb0ef83b5308c" translate="yes" xml:space="preserve">
          <source>Even if you don't want to modify an array, this mechanism is useful for passing multiple arrays in a single LIST, because normally the LIST mechanism will merge all the array values so that you can't extract out the individual arrays. For more on typeglobs, see &lt;a href=&quot;perldata#Typeglobs-and-Filehandles&quot;&gt;Typeglobs and Filehandles in perldata&lt;/a&gt;.</source>
          <target state="translated">Даже если вы не хотите изменять массив, этот механизм полезен для передачи нескольких массивов в один СПИСОК, поскольку обычно механизм СПИСОК объединяет все значения массива, так что вы не можете извлечь отдельные массивы. Дополнительные сведения о typeglobs см. В разделе &lt;a href=&quot;perldata#Typeglobs-and-Filehandles&quot;&gt;Typeglobs и Filehandles в perldata&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="704c6dd5d66c1d05562f24b58fe540e4c1622bbc" translate="yes" xml:space="preserve">
          <source>Even in a pattern that is interpolated and compiled at run-time, literal code blocks will be compiled once, at perl compile time; the following prints &quot;ABCD&quot;:</source>
          <target state="translated">Даже в паттерне,который интерполирован и скомпилирован во время выполнения,буквальные блоки кода будут скомпилированы один раз,во время компиляции perl;далее будет выведено &quot;ABCD&quot;:</target>
        </trans-unit>
        <trans-unit id="f9a57fec05cf4b4012f5962aa352266b10461d68" translate="yes" xml:space="preserve">
          <source>Even more drastic example of a process-scope change is &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot()&lt;/a&gt;&lt;/code&gt;: the root directory of all the threads changes, and no thread can undo it (as opposed to &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Еще более радикальным примером изменения области действия процесса является &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot()&lt;/a&gt;&lt;/code&gt; : изменяется корневой каталог всех потоков, и ни один поток не может отменить его (в отличие от &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fba46823e424c4e147c0d6ca9c73a6300bf0908c" translate="yes" xml:space="preserve">
          <source>Even numbered minor versions (5.14, 5.16, 5.18) are production versions, and odd numbered minor versions (5.15, 5.17, 5.19) are development versions. Unless you want to try out an experimental feature, you probably never want to install a development version of Perl.</source>
          <target state="translated">Даже пронумерованные второстепенные версии (5.14,5.16,5.18)являются производственными версиями,а нечетные второстепенные версии (5.15,5.17,5.19)-разработческими версиями.Если вы не хотите опробовать экспериментальную возможность,вы,вероятно,никогда не захотите устанавливать разрабатываемую версию Perl.</target>
        </trans-unit>
        <trans-unit id="985c32669ab9bb43127ab9478cdf373b1b43c14e" translate="yes" xml:space="preserve">
          <source>Even the fallback for &lt;code&gt;decode&lt;/code&gt; must return octets, which are then decoded with the character encoding that &lt;code&gt;decode&lt;/code&gt; accepts. So for example if you wish to decode octets as UTF-8, and use ISO-8859-15 as a fallback for bytes that are not valid UTF-8, you could write</source>
          <target state="translated">Даже резервный вариант для &lt;code&gt;decode&lt;/code&gt; должен возвращать октеты, которые затем декодируются с кодировкой символов, которую принимает &lt;code&gt;decode&lt;/code&gt; . Так, например, если вы хотите декодировать октеты как UTF-8 и использовать ISO-8859-15 в качестве запасного варианта для байтов, которые не являются допустимыми UTF-8, вы можете написать</target>
        </trans-unit>
        <trans-unit id="899cce7279e173a144c83044ba4c75852234efbb" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;dog&lt;/code&gt; is the first alternative in the second regex, &lt;code&gt;cat&lt;/code&gt; is able to match earlier in the string.</source>
          <target state="translated">Несмотря на то, что &lt;code&gt;dog&lt;/code&gt; является первой альтернативой во втором регулярном выражении, &lt;code&gt;cat&lt;/code&gt; может найти более раннее совпадение в строке.</target>
        </trans-unit>
        <trans-unit id="491ac4fd5a527c06bb95d6b29c3d2ceec9e2c0d4" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;dog&lt;/code&gt; is the first alternative in the second regexp, &lt;code&gt;cat&lt;/code&gt; is able to match earlier in the string.</source>
          <target state="translated">Несмотря на то, что &lt;code&gt;dog&lt;/code&gt; является первой альтернативой во втором регулярном выражении, &lt;code&gt;cat&lt;/code&gt; может найти более раннее совпадение в строке.</target>
        </trans-unit>
        <trans-unit id="9e410bea532f43017a3bc057208bf28febe91829" translate="yes" xml:space="preserve">
          <source>Even though HP-UX 10.20 and 11.00 are not actively maintained by HP anymore, updates for the HP ANSI C compiler are still available from time to time, and it might be advisable to see if updates are applicable. At the moment of writing, the latests available patches for 11.00 that should be applied are PHSS_35098, PHSS_35175, PHSS_35100, PHSS_33036, and PHSS_33902). If you have a SUM account, you can use it to search for updates/patches. Enter &quot;ANSI&quot; as keyword.</source>
          <target state="translated">Несмотря на то,что HP-UX 10.20 и 11.00 больше не активно поддерживаются HP,обновления для компилятора HP ANSI C все еще доступны время от времени,и,возможно,было бы желательно проверить,применимы ли эти обновления.На момент написания статьи доступными заплатками для 11.00,которые должны применяться,являются PHSS_35098,PHSS_35175,PHSS_35100,PHSS_33036 и PHSS_33902).Если у вас есть учетная запись SUM,вы можете использовать ее для поиска обновлений/патчей.Введите &quot;ANSI&quot; в качестве ключевого слова.</target>
        </trans-unit>
        <trans-unit id="66ef75af64ac05e5f42a2e25f67b5dd40dad7f74" translate="yes" xml:space="preserve">
          <source>Even though VOS allows the slash character to appear in object names, because the VOS port of Perl interprets it as a pathname delimiting character, VOS files, directories, or links whose names contain a slash character cannot be processed. Such files must be renamed before they can be processed by Perl.</source>
          <target state="translated">Несмотря на то,что VOS позволяет символу косой черты появляться в именах объектов,потому что VOS-порт Perl интерпретирует его как символ,разделяющий патнамы,VOS-файлы,каталоги или ссылки,имена которых содержат символ косой черты,не могут быть обработаны.Такие файлы должны быть переименованы до того,как они будут обработаны Perl.</target>
        </trans-unit>
        <trans-unit id="cdd82719baf99cfe9734df3eaad725f4efdb196d" translate="yes" xml:space="preserve">
          <source>Even though a reference may be declared as a constant, the reference may point to data which may be changed, as this code shows.</source>
          <target state="translated">Даже если ссылка может быть объявлена константой,она может указывать на данные,которые могут быть изменены,как показывает этот код.</target>
        </trans-unit>
        <trans-unit id="6c1ced7503a24a96a968e8abe517680e11868256" translate="yes" xml:space="preserve">
          <source>Even though it doesn't do much, it is still preferable to writing your own classes from scratch.</source>
          <target state="translated">Несмотря на то,что это не так уж и много,все равно предпочтительнее писать свои собственные классы с нуля.</target>
        </trans-unit>
        <trans-unit id="5d86d002ba38ad23c3e6f35071476718335949c5" translate="yes" xml:space="preserve">
          <source>Even though it looks as though they're the same method calls (uid), they aren't, because a &lt;code&gt;File::stat&lt;/code&gt; object is different from a &lt;code&gt;User::pwent&lt;/code&gt; object.</source>
          <target state="translated">Хотя кажется, что это одни и те же вызовы методов (uid), это не так, потому что объект &lt;code&gt;File::stat&lt;/code&gt; отличается от объекта &lt;code&gt;User::pwent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dc6e1961fe501af8f7b8e43fd427c0320c933fd" translate="yes" xml:space="preserve">
          <source>Even though some of this section may not be understandable to you on first reading, we think it's important enough to highlight some of the gotchas before delving further, so here goes:</source>
          <target state="translated">Несмотря на то,что некоторые из этих разделов могут быть непонятны вам в первом чтении,мы считаем,что достаточно важно выделить некоторые из гетч,прежде чем углубляться в них,так что вот,пожалуйста:</target>
        </trans-unit>
        <trans-unit id="a15d3a1eac0736a5f4619bbd0fabeec7d4b2fc07" translate="yes" xml:space="preserve">
          <source>Even though these two matches might be thought of as complements, until v5.20 they were so only on Unicode code points.</source>
          <target state="translated">Несмотря на то,что эти два совпадения можно было бы считать дополнениями,до версии 5.20 они были таковыми только в точках кода Юникода.</target>
        </trans-unit>
        <trans-unit id="763ed71064b10dfe0eadc8f471bf100bdbc4763d" translate="yes" xml:space="preserve">
          <source>Even though with normal text files a &quot;\n&quot; will do the trick, there is still no unified scheme for terminating a line that is portable between Unix, DOS/Win, and Macintosh, except to terminate</source>
          <target state="translated">Несмотря на то,что с обычными текстовыми файлами подойдет &quot;\n&quot;,до сих пор нет унифицированной схемы завершения строки,переносимой между Unix,DOS/Win и Macintosh,кроме как для завершения</target>
        </trans-unit>
        <trans-unit id="4630d8c85d1750185c25d65fe850b66a19d12625" translate="yes" xml:space="preserve">
          <source>Even though you started with a completely empty hash, after that call to &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; you've created the structure you needed to check for &lt;code&gt;key3&lt;/code&gt; :</source>
          <target state="translated">Несмотря на то, что вы начали с полностью пустым хешем, после этого вызова to &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; вы создали структуру, необходимую для проверки &lt;code&gt;key3&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="08c088010f5560d49366ca00a6983df9e83535cb" translate="yes" xml:space="preserve">
          <source>Even when on a single platform (if you can call Unix a single platform), remember not to count on the existence or the contents of particular system-specific files or directories, like</source>
          <target state="translated">Даже если вы работаете на одной платформе (если вы можете называть Unix одной платформой),не забывайте рассчитывать на существование или содержание конкретных системных файлов или каталогов,таких как</target>
        </trans-unit>
        <trans-unit id="1602f4d9817a3dceaa33d17e6c176137283825a5" translate="yes" xml:space="preserve">
          <source>Even with all this work, regexp matching happens remarkably fast. To speed things up, Perl compiles the regexp into a compact sequence of opcodes that can often fit inside a processor cache. When the code is executed, these opcodes can then run at full throttle and search very quickly.</source>
          <target state="translated">Даже при всей этой работе,повторное сопоставление происходит удивительно быстро.Чтобы ускорить процесс,Perl компилирует регеxp в компактную последовательность опкодов,которые часто могут поместиться в кэш процессора.Когда код выполняется,эти опкоды могут затем работать на полном ходу и очень быстро выполнять поиск.</target>
        </trans-unit>
        <trans-unit id="35946850beee8b541477d17361e646c61666892c" translate="yes" xml:space="preserve">
          <source>Even with the latest version of Perl, it is known that certain constructs with threads may result in warning messages concerning leaked scalars or unreferenced scalars. However, such warnings are harmless, and may safely be ignored.</source>
          <target state="translated">Даже в последней версии Perl известно,что некоторые конструкции с потоками могут приводить к предупреждающим сообщениям об утечках скаляров или о наличии не связанных со связью скаляров.Однако такие предупреждения безвредны и могут быть безопасно проигнорированы.</target>
        </trans-unit>
        <trans-unit id="878e531bfbade13b1bab65a888ae7d4bdc1140e8" translate="yes" xml:space="preserve">
          <source>Event Log</source>
          <target state="translated">Журнал событий</target>
        </trans-unit>
        <trans-unit id="d002601ef62e11979d8b7c94cd10d54da0d3a8e1" translate="yes" xml:space="preserve">
          <source>Ever wanted to know what a regex looked like? You'll need perl compiled with the DEBUGGING flag for this one:</source>
          <target state="translated">Когда-нибудь хотел узнать,как выглядит регекс? Для этого вам понадобится Perl,скомпилированный с флагом DEBUGGING:</target>
        </trans-unit>
        <trans-unit id="3fc9126b1847307a5366bc653e3a3467f58a3dfa" translate="yes" xml:space="preserve">
          <source>Every CPAN module has a bug tracker set up in RT, &lt;a href=&quot;http://rt.cpan.org&quot;&gt;http://rt.cpan.org&lt;/a&gt;. You can submit bugs to RT either through its web interface or by email. To email a bug report, send it to bug-&amp;lt;distribution-name&amp;gt;@rt.cpan.org . For example, if you wanted to report a bug in &lt;a href=&quot;http://search.cpan.org/perldoc/Business::ISBN&quot;&gt;Business::ISBN&lt;/a&gt;, you could send a message to bug-Business-ISBN@rt.cpan.org .</source>
          <target state="translated">В каждом модуле CPAN настроен трекер ошибок в RT, &lt;a href=&quot;http://rt.cpan.org&quot;&gt;http://rt.cpan.org&lt;/a&gt; . Вы можете отправлять сообщения об ошибках в RT либо через его веб-интерфейс, либо по электронной почте. Чтобы отправить отчет об ошибке по электронной почте, отправьте его на адрес bug- &amp;lt;distribution-name&amp;gt; @ rt.cpan.org. Например, если вы хотите сообщить об ошибке в &lt;a href=&quot;http://search.cpan.org/perldoc/Business::ISBN&quot;&gt;Business :: ISBN&lt;/a&gt; , вы можете отправить сообщение по адресу bug-Business-ISBN@rt.cpan.org.</target>
        </trans-unit>
        <trans-unit id="b8dc7000ca1bb13ca17faed27406eccbd7bcf88b" translate="yes" xml:space="preserve">
          <source>Every Makefile.PL is run by perl in a separate process. Likewise we run 'make' and 'make install' in separate processes. If you have any parameters (e.g. PREFIX, UNINST or the like) you want to pass to the calls, please specify them here.</source>
          <target state="translated">Каждый Makefile.PL запускается на perl в отдельном процессе.Аналогично мы запускаем 'make' и 'make install' в отдельных процессах.Если у вас есть какие-либо параметры (например,PREFIX,UNINST или подобные),которые вы хотите передать на вызовы,пожалуйста,укажите их здесь.</target>
        </trans-unit>
        <trans-unit id="5243f64d154762b9f500ff300bf1242e41c19e00" translate="yes" xml:space="preserve">
          <source>Every Unicode character is assigned a general category, which is the &quot;most usual categorization of a character&quot; (from &lt;a href=&quot;http://www.unicode.org/reports/tr44&quot;&gt;http://www.unicode.org/reports/tr44&lt;/a&gt;).</source>
          <target state="translated">Каждому символу Юникода назначается общая категория, которая является &amp;laquo;самой обычной категоризацией символа&amp;raquo; (из &lt;a href=&quot;http://www.unicode.org/reports/tr44&quot;&gt;http://www.unicode.org/reports/tr44&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2fe5013abe724619f4b95c9d05a2b40a50dbbb59" translate="yes" xml:space="preserve">
          <source>Every YAML document represents a single hash reference. The valid keys in this hash are as follows:</source>
          <target state="translated">Каждый документ YAML представляет собой единую ссылку на хэш.Действительные ключи в этом хэше следующие:</target>
        </trans-unit>
        <trans-unit id="302f7ff33fa3b90fdd2132b2697fb84f8705e874" translate="yes" xml:space="preserve">
          <source>Every YAML file may contain arbitrary documents according to the YAML specification, and every document is treated as an entity that can specify the treatment of a single distribution.</source>
          <target state="translated">Каждый YAML-файл может содержать произвольные документы в соответствии со спецификацией YAML,и каждый документ рассматривается как сущность,которая может указать обработку одного дистрибутива.</target>
        </trans-unit>
        <trans-unit id="08580b590313edf277a406f46fd0c846e6d3947e" translate="yes" xml:space="preserve">
          <source>Every case has a specific application and one or more exceptions, and there is no replacement for running a few tests and finding out which method works best for your particular environment, this is why writing optimal code is not an exact science, and why we love using Perl so much - TMTOWTDI.</source>
          <target state="translated">В каждом случае есть свое приложение и одно или несколько исключений,и нет замены запуску нескольких тестов и выяснению,какой метод лучше всего подходит для вашей конкретной среды,поэтому написание оптимального кода не является точной наукой,и почему мы так любим использовать Perl-TMTOWTDI.</target>
        </trans-unit>
        <trans-unit id="e844c7ea0f1cedd3ae0259a6817d00e2a02c10f0" translate="yes" xml:space="preserve">
          <source>Every developer publishing modules on CPAN needs a CPAN ID. Visit &lt;code&gt;&lt;a href=&quot;http://pause.perl.org/&quot;&gt;http://pause.perl.org/&lt;/a&gt;&lt;/code&gt;, select &quot;Request PAUSE Account&quot;, and wait for your request to be approved by the PAUSE administrators.</source>
          <target state="translated">Каждому разработчику, публикующему модули на CPAN, нужен CPAN ID. Посетите &lt;code&gt;&lt;a href=&quot;http://pause.perl.org/&quot;&gt;http://pause.perl.org/&lt;/a&gt;&lt;/code&gt; , выберите &amp;laquo;Запросить учетную запись PAUSE&amp;raquo; и дождитесь утверждения вашего запроса администраторами PAUSE.</target>
        </trans-unit>
        <trans-unit id="e4befbeaf4f0b8eb62e07538a8708d75b3c87445" translate="yes" xml:space="preserve">
          <source>Every element in an arrayref directly below a 'par' key is eligible to be run in parallel, while vavalues directly below a 'seq' key must be run in sequence.</source>
          <target state="translated">Каждый элемент массива,находящийся непосредственно под ключом 'par',может быть запущен параллельно,в то время как вавалы,находящиеся непосредственно под ключом 'seq',должны выполняться последовательно.</target>
        </trans-unit>
        <trans-unit id="e1c563b6d35c0f4b5118e9474a1d4ce3c52e7bcc" translate="yes" xml:space="preserve">
          <source>Every element node in the parse tree is represented by an arrayref of the form: &lt;code&gt;[ &lt;i&gt;elementname&lt;/i&gt;, \%attributes, &lt;i&gt;...subnodes...&lt;/i&gt; ]&lt;/code&gt;. See the example tree dump in the Synopsis, above.</source>
          <target state="translated">Каждый узел элемента в дереве синтаксического анализа представлен ссылкой на массив в форме: &lt;code&gt;[ &lt;i&gt;elementname&lt;/i&gt;, \%attributes, &lt;i&gt;...subnodes...&lt;/i&gt; ]&lt;/code&gt; . См. Пример дампа дерева в Синопсисе выше.</target>
        </trans-unit>
        <trans-unit id="6134bc0f6fbba39ed1a9d9da08c6587b9ff61665" translate="yes" xml:space="preserve">
          <source>Every line here (apart from the braces, of course) contains a macro. The first line sets up the function declaration as Perl expects for PP code; line 3 sets up variable declarations for the argument stack and the target, the return value of the operation. Finally, it tries to see if the addition operation is overloaded; if so, the appropriate subroutine is called.</source>
          <target state="translated">Каждая строка здесь (кроме фигурных скобок,конечно)содержит макрос.Первая строка устанавливает декларацию функции так,как Perl ожидает для кода PP;третья строка устанавливает объявления переменных для стека аргументов и целевой,возвращаемой величины операции.Наконец,она пытается увидеть,перегружена ли операция сложения;если да,то вызывается соответствующая подпрограмма.</target>
        </trans-unit>
        <trans-unit id="a07a9740c8c1d7a3f895cbb42b5e873e7ccb12fd" translate="yes" xml:space="preserve">
          <source>Every source stream is associated with only one file.</source>
          <target state="translated">Каждый исходный поток связан только с одним файлом.</target>
        </trans-unit>
        <trans-unit id="5b61ca48fb706399cd7458bb7c44f76e50b97e70" translate="yes" xml:space="preserve">
          <source>Every text node in the tree is represented by a simple (non-ref) string scalar. So you can test &lt;code&gt;&lt;a href=&quot;../../functions/ref&quot;&gt;ref($node)&lt;/a&gt;&lt;/code&gt; to see whether you have an element node or just a text node.</source>
          <target state="translated">Каждый текстовый узел в дереве представлен простым (не ссылочным) строковым скаляром. Таким образом, вы можете протестировать &lt;code&gt;&lt;a href=&quot;../../functions/ref&quot;&gt;ref($node)&lt;/a&gt;&lt;/code&gt; чтобы увидеть, есть ли у вас узел элемента или только текстовый узел.</target>
        </trans-unit>
        <trans-unit id="f280cfdb5544f17d8056c7b9960291300e70ff8a" translate="yes" xml:space="preserve">
          <source>Every variable type has its own namespace, as do several non-variable identifiers. This means that you can, without fear of conflict, use the same name for a scalar variable, an array, or a hash--or, for that matter, for a filehandle, a directory handle, a subroutine name, a format name, or a label. This means that $foo and @foo are two different variables. It also means that &lt;code&gt;$foo[1]&lt;/code&gt; is a part of @foo, not a part of $foo. This may seem a bit weird, but that's okay, because it is weird.</source>
          <target state="translated">Каждый тип переменной имеет свое собственное пространство имен, как и несколько идентификаторов без переменных. Это означает, что вы можете, не опасаясь конфликта, использовать одно и то же имя для скалярной переменной, массива или хэша - или, если на то пошло, для дескриптора файла, дескриптора каталога, имени подпрограммы, имени формата, или ярлык. Это означает, что $ foo и @foo - две разные переменные. Это также означает, что &lt;code&gt;$foo[1]&lt;/code&gt; является частью @foo, а не частью $ foo. Это может показаться немного странным, но это нормально, потому что это странно.</target>
        </trans-unit>
        <trans-unit id="88a304f3d76dc1d9d113e9e43b3de43a63253440" translate="yes" xml:space="preserve">
          <source>Everyone needs compound data structures, and in Perl the way you get them is with references. There are four important rules for managing references: Two for making references and two for using them. Once you know these rules you can do most of the important things you need to do with references.</source>
          <target state="translated">Всем нужны сложные структуры данных,а в Perl то,как вы их получаете-со ссылками.Есть четыре важных правила для управления ссылками:Два-для создания ссылок и два-для их использования.Как только вы знаете эти правила,вы можете делать большинство важных вещей,которые вам нужно делать со ссылками.</target>
        </trans-unit>
        <trans-unit id="d9f3a853f21ee670feb2d57d64386bb213e70924" translate="yes" xml:space="preserve">
          <source>Everything is exported by default</source>
          <target state="translated">Все экспортируется по умолчанию</target>
        </trans-unit>
        <trans-unit id="821563e027b1aef4013748dd378d74e1f89659aa" translate="yes" xml:space="preserve">
          <source>Everything that comes with the official</source>
          <target state="translated">Все,что приходит с официальным</target>
        </trans-unit>
        <trans-unit id="f760e16023bf894abde8086e9d7f6c930e923eae" translate="yes" xml:space="preserve">
          <source>Evolution</source>
          <target state="translated">Evolution</target>
        </trans-unit>
        <trans-unit id="d7b6ebbed9d8b46f1eee90eb921f0ea47e548b03" translate="yes" xml:space="preserve">
          <source>Exact version of acceptance unclear, but no later than Perl 5.18.</source>
          <target state="translated">Точный вариант принятия неясен,но не позднее,чем Perl 5.18.</target>
        </trans-unit>
        <trans-unit id="e38657e86225451957dba5ba0d3e55c8be9b8de9" translate="yes" xml:space="preserve">
          <source>Exactly equivalent to &lt;code&gt;Perl_croak(aTHX_ &quot;%s&quot;, PL_no_modify)&lt;/code&gt; , but generates terser object code than using &lt;code&gt;Perl_croak&lt;/code&gt; . Less code used on exception code paths reduces CPU cache pressure.</source>
          <target state="translated">Точно эквивалентно &lt;code&gt;Perl_croak(aTHX_ &quot;%s&quot;, PL_no_modify)&lt;/code&gt; , но генерирует более сжатый объектный код, чем использование &lt;code&gt;Perl_croak&lt;/code&gt; . Меньшее количество кода, используемого в путях кода исключения, снижает нагрузку на кэш ЦП.</target>
        </trans-unit>
        <trans-unit id="6c8b76dc891dae007ee34c3cafc01118a9a75f9f" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;gv_fetchmeth_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Точно так &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;же&lt;/a&gt; , как gv_fetchmeth_pvn , но принимает строку с завершающим нулем вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="108d410dddfe12b3ba82a3d3c5aded251e31ceaa" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;gv_fetchmeth_pvn&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="translated">Точно так &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;же&lt;/a&gt; , как gv_fetchmeth_pvn , но принимает строку имени в форме SV вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="752e1ac766f2cea599a309e02440f40a97bb8d75" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Точно так &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;же&lt;/a&gt; , как gv_fetchmeth_pvn_autoload , но принимает строку с завершающим нулем вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="a2b3eb60980e277cbebb6619993b224a080d7c7e" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="translated">Точно так &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;же&lt;/a&gt; , как gv_fetchmeth_pvn_autoload , но принимает строку имени в форме SV вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="2fed67a8755ba4f29f90415a63203b5925d94458" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;pad_add_name_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Точно так &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;же&lt;/a&gt; , как pad_add_name_pvn , но принимает буквальную строку вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="08b5afa04635fafa6b86d20073dca412668556d2" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;pad_add_name_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Точно так &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;же&lt;/a&gt; , как pad_add_name_pvn , но принимает строку с завершающим нулем вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="2ec05cc4ebe9d68aa94cb00389e8f5276b127226" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;pad_add_name_pvn&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="translated">Точно так &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;же&lt;/a&gt; , как pad_add_name_pvn , но принимает строку имени в форме SV вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="1fc43c20a7b147a5aa429b8bfb5b2198f1bee606" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;pad_findmy_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Точно так &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;же&lt;/a&gt; , как pad_findmy_pvn , но принимает буквальную строку вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="1f5dc14f0356699ed601763f5b30ea66b583f929" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;pad_findmy_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Точно так &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;же&lt;/a&gt; , как pad_findmy_pvn , но принимает строку с завершающим нулем вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="381384c344ba8cf1c452502a4a84edc8e962e04a" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;pad_findmy_pvn&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="translated">Точно так &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;же&lt;/a&gt; , как pad_findmy_pvn , но принимает строку имени в форме SV вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="f7e2d16336a0ca2ee4b68d73a469a9a7d8cd8bf4" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#sv_derived_from_pv&quot;&gt;sv_derived_from_pv&lt;/a&gt;, but doesn't take a &lt;code&gt;flags&lt;/code&gt; parameter.</source>
          <target state="translated">Точно так &lt;a href=&quot;#sv_derived_from_pv&quot;&gt;же&lt;/a&gt; , как sv_dehibited_from_pv , но не принимает параметр &lt;code&gt;flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ca422a64172952765c1b42b368f2ea1d836ab7e" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#sv_derived_from_pvn&quot;&gt;sv_derived_from_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Точно так &lt;a href=&quot;#sv_derived_from_pvn&quot;&gt;же&lt;/a&gt; , как sv_dehibited_from_pvn , но принимает строку с завершающим нулем вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="89c565bb719c5d7bd5d0a569932a9c743f646c23" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#sv_derived_from_pvn&quot;&gt;sv_derived_from_pvn&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="translated">Точно так &lt;a href=&quot;#sv_derived_from_pvn&quot;&gt;же&lt;/a&gt; , как sv_dehibited_from_pvn , но принимает строку имени в форме SV вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="f536be833f98474874e14c0022645d10cd4c4708" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;code&gt;XopENTRY(XopENTRY(Perl_custom_op_xop(aTHX_ o), which)&lt;/code&gt; but more efficient. The</source>
          <target state="translated">Точно как &lt;code&gt;XopENTRY(XopENTRY(Perl_custom_op_xop(aTHX_ o), which)&lt;/code&gt; но более эффективен.</target>
        </trans-unit>
        <trans-unit id="91cb14ad58a1b4462086f211195165ae13adba9c" translate="yes" xml:space="preserve">
          <source>Exactly like C:</source>
          <target state="translated">Точно как С:</target>
        </trans-unit>
        <trans-unit id="7525b0bc0e061494669779471f34623f62998790" translate="yes" xml:space="preserve">
          <source>Exactly what the</source>
          <target state="translated">Именно то,что</target>
        </trans-unit>
        <trans-unit id="738aaf2dccc78981e8b455dca2a194bd2ca3770c" translate="yes" xml:space="preserve">
          <source>Exactly what were the failed locale settings varies. In the above the settings were that the LC_ALL was &quot;En_US&quot; and the LANG had no value. This error means that Perl detected that you and/or your operating system supplier and/or system administrator have set up the so-called locale system but Perl could not use those settings. This was not dead serious, fortunately: there is a &quot;default locale&quot; called &quot;C&quot; that Perl can and will use, and the script will be run. Before you really fix the problem, however, you will get the same error message each time you run Perl. How to really fix the problem can be found in &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; section &lt;b&gt;LOCALE PROBLEMS&lt;/b&gt;.</source>
          <target state="translated">Конкретно, какие именно настройки локали были неудачными, различаются. В приведенных выше настройках LC_ALL был &amp;laquo;En_US&amp;raquo;, а LANG не имел значения. Эта ошибка означает, что Perl обнаружил, что вы и / или поставщик вашей операционной системы и / или системный администратор настроили так называемую систему языковых стандартов, но Perl не может использовать эти настройки. К счастью, это было несерьезно: существует &amp;laquo;локаль по умолчанию&amp;raquo; под названием &amp;laquo;C&amp;raquo;, которую Perl может и будет использовать, и сценарий будет запущен. Однако, прежде чем вы действительно исправите проблему, вы будете получать одно и то же сообщение об ошибке при каждом запуске Perl. Как на самом деле решить проблему, можно найти в разделе &lt;a href=&quot;perllocale&quot;&gt;perllocale &lt;/a&gt;&lt;b&gt;ПРОБЛЕМЫ &lt;/b&gt;ЛОКАЛЬНОЙ &lt;b&gt;ПРОБЛЕМЫ&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="d8b6b2bbc7b58a995a5244483a44038c0c9b80cc" translate="yes" xml:space="preserve">
          <source>Examine signals that are blocked and pending. This uses &lt;code&gt;POSIX::SigSet&lt;/code&gt; objects for the &lt;code&gt;sigset&lt;/code&gt; argument. Consult your system's &lt;code&gt;sigpending&lt;/code&gt; manpage for details.</source>
          <target state="translated">Изучите заблокированные и ожидающие сигналы. Здесь в &lt;code&gt;sigset&lt;/code&gt; аргумента sigset используются объекты &lt;code&gt;POSIX::SigSet&lt;/code&gt; . За подробностями &lt;code&gt;sigpending&lt;/code&gt; к справочной странице вашей системы .</target>
        </trans-unit>
        <trans-unit id="9cc359cbd82e941e0ce6d56fc00bde6962483e78" translate="yes" xml:space="preserve">
          <source>Examines an op, which is expected to identify a subroutine at runtime, and attempts to determine at compile time which subroutine it identifies. This is normally used during Perl compilation to determine whether a prototype can be applied to a function call.</source>
          <target state="translated">Изучает операцию,которая должна идентифицировать подпрограмму во время выполнения,и пытается определить во время компиляции,какую подпрограмму она идентифицирует.Обычно это используется во время компиляции Perl для определения того,может ли прототип быть применен к вызову функции.</target>
        </trans-unit>
        <trans-unit id="21009b11f09e3868b5cd364062bd16a01cd87baf" translate="yes" xml:space="preserve">
          <source>Examining internal data structures with the &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; functions</source>
          <target state="translated">Изучение внутренних структур данных с помощью функций &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e9d648412ff129c07a7aa241744818aaa63c13b" translate="yes" xml:space="preserve">
          <source>Examining internal data structures with the dump functions</source>
          <target state="translated">Исследование внутренних структур данных с функциями дампа</target>
        </trans-unit>
        <trans-unit id="f25587ebeed31098679dd0a945296052447509f8" translate="yes" xml:space="preserve">
          <source>Examining the tree</source>
          <target state="translated">Изучение дерева</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="3ee687a4836f2979219916954f4addd8522f2875" translate="yes" xml:space="preserve">
          <source>Example - a Hexadecimal Handle</source>
          <target state="translated">Пример-шестнадцатеричная ручка</target>
        </trans-unit>
        <trans-unit id="6dcd3f46d09547b62bf07ba9b2943c95d53ddae3" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">Пример 1</target>
        </trans-unit>
        <trans-unit id="d64751054e2d27b855282a556af039128d434ede" translate="yes" xml:space="preserve">
          <source>Example 1: A simple filter.</source>
          <target state="translated">Пример 1:Простой фильтр.</target>
        </trans-unit>
        <trans-unit id="1c56ea49918b9baed94cf4bc0ee9f324efc8841a" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">Пример 2</target>
        </trans-unit>
        <trans-unit id="c9ff53c2379b7cde740f23e7a5efd8af7e83e70f" translate="yes" xml:space="preserve">
          <source>Example 2: Using the context</source>
          <target state="translated">Пример 2:Использование контекста</target>
        </trans-unit>
        <trans-unit id="93fa8f292e6f2e8759c24edf270a2f53c96a1766" translate="yes" xml:space="preserve">
          <source>Example 3: Using the context within the filter</source>
          <target state="translated">Пример 3:Использование контекста в фильтре</target>
        </trans-unit>
        <trans-unit id="39e8f452734bc5ce3b169811da6ab1984a676dbf" translate="yes" xml:space="preserve">
          <source>Example 4: Using filter_del</source>
          <target state="translated">Пример 4:Использование filter_del</target>
        </trans-unit>
        <trans-unit id="82dd29f8b1cca5a0b9d8a8b5b47aff607b15559f" translate="yes" xml:space="preserve">
          <source>Example Distroprefs Files</source>
          <target state="translated">Пример Файлы дистропрефектов</target>
        </trans-unit>
        <trans-unit id="8c67a372e04bf6d9b9e0054bc94bbe354f79d761" translate="yes" xml:space="preserve">
          <source>Example implementation might be:</source>
          <target state="translated">Примером может быть реализация:</target>
        </trans-unit>
        <trans-unit id="65cdc590a56f144422e8ab9d8551b4654f6b8393" translate="yes" xml:space="preserve">
          <source>Example of use of &lt;code&gt;%m&lt;/code&gt; :</source>
          <target state="translated">Пример использования &lt;code&gt;%m&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ec471d84b36457f0d9d75c03377c9e3cd5f3de93" translate="yes" xml:space="preserve">
          <source>Example of use:</source>
          <target state="translated">Пример использования:</target>
        </trans-unit>
        <trans-unit id="ea87c9b65b6478fdd7882c8529d632b267f39539" translate="yes" xml:space="preserve">
          <source>Example similar to MAN1PODS.</source>
          <target state="translated">Пример аналогичен MAN1PODS.</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">Пример использования:</target>
        </trans-unit>
        <trans-unit id="6f46925524d1c01021e97594cd0f9813ff23d01d" translate="yes" xml:space="preserve">
          <source>Example wrapper function, using a custom stacktrace:</source>
          <target state="translated">Пример функции обертки,использующей пользовательскую стековую трассировку:</target>
        </trans-unit>
        <trans-unit id="21504e5520a63c06708e793261e7989f6e598670" translate="yes" xml:space="preserve">
          <source>Example.pm</source>
          <target state="translated">Example.pm</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="cad6ecdc1416c4a99a21cafbb2b565e4a7ce52ac" translate="yes" xml:space="preserve">
          <source>Example: Altering Concise Renderings</source>
          <target state="translated">Пример:Изменение кратких оборотов</target>
        </trans-unit>
        <trans-unit id="e9234fbd94650af302f3c53c866ca9eab6d98b89" translate="yes" xml:space="preserve">
          <source>Example: At the command prompt Type &quot;nmake nwinstall&quot;. This will install NetWare Perl on the NetWare Server. Similarly, if you type &quot;nmake install&quot;, this will cause the binaries to be installed on the local machine. (Typically under the c:\perl folder)</source>
          <target state="translated">Пример:В командной строке введите &quot;nmake nwinstall&quot;.Это позволит установить NetWare Perl на NetWare Server.Аналогично,если вы наберете &quot;nmake install&quot;,это приведет к установке исполняемых файлов на локальную машину.(Обычно в папке c:\perl).</target>
        </trans-unit>
        <trans-unit id="24e5d3a101404316459c21180a1f55d046da675c" translate="yes" xml:space="preserve">
          <source>Example: Encode::ROT13</source>
          <target state="translated">Пример:Кодировка::ROT13</target>
        </trans-unit>
        <trans-unit id="0721ccbd9aaee85c90df176a3976ea110912494f" translate="yes" xml:space="preserve">
          <source>Example: The following code</source>
          <target state="translated">Пример:Следующий код</target>
        </trans-unit>
        <trans-unit id="57772da1cf0c7d363a78ec1c7ba403554cdf5105" translate="yes" xml:space="preserve">
          <source>Example: You can execute the following on the command prompt.</source>
          <target state="translated">Пример:В командной строке можно выполнить следующее.</target>
        </trans-unit>
        <trans-unit id="f2749017763b820ec8a5aab014519f7d7e9831d5" translate="yes" xml:space="preserve">
          <source>Example: base64 transcoder</source>
          <target state="translated">Пример:транскодер base64</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="1d7dd2b19077ebadaa57d2f6ba2c64d87037ae05" translate="yes" xml:space="preserve">
          <source>Examples (assuming an ASCII platform)</source>
          <target state="translated">Примеры (в предположении платформы ASCII)</target>
        </trans-unit>
        <trans-unit id="47370b8eea1efa5172e76cf237bd26e7f736ebd6" translate="yes" xml:space="preserve">
          <source>Examples for converting:</source>
          <target state="translated">Примеры для конвертации:</target>
        </trans-unit>
        <trans-unit id="386c7abd2323831ffe2716ae79487fcd14a21d5e" translate="yes" xml:space="preserve">
          <source>Examples for rounding:</source>
          <target state="translated">Примеры округления:</target>
        </trans-unit>
        <trans-unit id="49d15bdd087c216bc7ae6d4ea03d99c8cec52e40" translate="yes" xml:space="preserve">
          <source>Examples in documentation should be illustrative of the concept they're explaining. Sometimes, the best way to show how a language feature works is with a small program the reader can run without modification. More often, examples will consist of a snippet of code containing only the &quot;important&quot; bits. The definition of &quot;important&quot; varies from snippet to snippet. Sometimes it's important to declare &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; , initialize all variables and fully catch every error condition. More often than not, though, those things obscure the lesson the example was intended to teach.</source>
          <target state="translated">Примеры в документации должны иллюстрировать концепцию, которую они объясняют. Иногда лучший способ показать, как работает функция языка, - это небольшая программа, которую читатель может запустить без изменений. Чаще всего примеры состоят из фрагментов кода, содержащих только &amp;laquo;важные&amp;raquo; биты. Определение &amp;laquo;важного&amp;raquo; варьируется от фрагмента к фрагменту. Иногда важно объявить &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; , инициализировать все переменные и полностью уловить каждое условие ошибки. Однако чаще всего эти вещи затемняют урок, который должен преподать пример.</target>
        </trans-unit>
        <trans-unit id="a591376177b86768f6394133fb691d5a829d17d6" translate="yes" xml:space="preserve">
          <source>Examples of invalid syntax:</source>
          <target state="translated">Примеры недействительного синтаксиса:</target>
        </trans-unit>
        <trans-unit id="0d4621bd6639238b0ab788dd2cc321e39c7fc192" translate="yes" xml:space="preserve">
          <source>Examples of legal names are '$foo' for a scalar, '@foo' for an array, '%foo' for a hash, '&amp;amp;foo' or 'foo' for a subroutine and '*foo' for a glob (i.e. all symbol table entries associated with &quot;foo&quot;, including scalar, array, hash, sub and filehandle).</source>
          <target state="translated">Примеры допустимых имен: '$ foo' для скаляра, '@foo' для массива, '% foo' для хэша, '&amp;amp; foo' или 'foo' для подпрограммы и '* foo' для глобуса (т.е. все записи таблицы символов, связанные с &quot;foo&quot;, включая скаляр, массив, хэш, подпрограмму и дескриптор файла).</target>
        </trans-unit>
        <trans-unit id="d7c5ae33ac348a4d6e7614da1b0d7da380e1b269" translate="yes" xml:space="preserve">
          <source>Examples of use</source>
          <target state="translated">Примеры применения</target>
        </trans-unit>
        <trans-unit id="1a5dea85313337dc5454525e91430329e3b9eb0f" translate="yes" xml:space="preserve">
          <source>Examples of valid syntax (even though the attributes are unknown):</source>
          <target state="translated">Примеры правильного синтаксиса (даже если атрибуты неизвестны):</target>
        </trans-unit>
        <trans-unit id="45b39bd436c5d9cd8f4ca9dd2c7eb59c66eb58b2" translate="yes" xml:space="preserve">
          <source>Examples section another documentation provided by John Heidemann &amp;lt;johnh@ISI.EDU&amp;gt;</source>
          <target state="translated">Раздел &quot;Примеры&quot; - другая документация, предоставленная Джоном Хайдеманном &amp;lt;johnh@ISI.EDU&amp;gt;</target>
        </trans-unit>
        <trans-unit id="628a5608e1a43ca4bfb86500d847d49e2edd6c80" translate="yes" xml:space="preserve">
          <source>Examples where callbacks are necessary include</source>
          <target state="translated">Примеры,в которых необходимы обратные вызовы,включают</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="f98a53c84b8d27c6aba2afa49d1eb4984f22de98" translate="yes" xml:space="preserve">
          <source>Examples: &quot;[_1]&quot; and &quot;[,_1]&quot;, which are synonymous; and &quot;&lt;code&gt;[,ID-(,_4,-,_2,)]&lt;/code&gt; &quot;, which compiles as &lt;code&gt;&lt;a href=&quot;../functions/join&quot;&gt;join&lt;/a&gt; &quot;&quot;, &quot;ID-(&quot;, $_[4], &quot;-&quot;, $_[2], &quot;)&quot;&lt;/code&gt; .</source>
          <target state="translated">Примеры: &amp;laquo;[_1]&amp;raquo; и &amp;laquo;[, _1]&amp;raquo;, которые являются синонимами; и &quot; &lt;code&gt;[,ID-(,_4,-,_2,)]&lt;/code&gt; &quot;, который компилируется как &lt;code&gt;&lt;a href=&quot;../functions/join&quot;&gt;join&lt;/a&gt; &quot;&quot;, &quot;ID-(&quot;, $_[4], &quot;-&quot;, $_[2], &quot;)&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc4e742ff692e5060c86af7b99c37b81006ce99b" translate="yes" xml:space="preserve">
          <source>Except &lt;code&gt;(normalization =&amp;gt; &lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;)&lt;/code&gt; , &lt;b&gt;Unicode::Normalize&lt;/b&gt; is required (see also &lt;b&gt;CAVEAT&lt;/b&gt;).</source>
          <target state="translated">За исключением &lt;code&gt;(normalization =&amp;gt; &lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;)&lt;/code&gt; , требуется &lt;b&gt;Unicode :: Normalize&lt;/b&gt; (см. Также &lt;b&gt;CAVEAT&lt;/b&gt; ).</target>
        </trans-unit>
        <trans-unit id="26b1235f5e6dc422681dc01e8714586f7ad38364" translate="yes" xml:space="preserve">
          <source>Except for &lt;code&gt;FILTER_ONLY code =&amp;gt; &lt;a href=&quot;../functions/sub&quot;&gt;sub&lt;/a&gt; {...}&lt;/code&gt; , each of the component filters is called repeatedly, once for each component found in the source code.</source>
          <target state="translated">За исключением &lt;code&gt;FILTER_ONLY code =&amp;gt; &lt;a href=&quot;../functions/sub&quot;&gt;sub&lt;/a&gt; {...}&lt;/code&gt; , каждый из фильтров компонентов вызывается повторно, один раз для каждого компонента, найденного в исходном коде.</target>
        </trans-unit>
        <trans-unit id="21a10e7180b4b8a76ea58d012850b5f1c4bcb634" translate="yes" xml:space="preserve">
          <source>Except importing the functions, 'autoload' is same as 'load'.</source>
          <target state="translated">Кроме импорта функций,'автозагрузка' аналогична 'загрузке'.</target>
        </trans-unit>
        <trans-unit id="18f4bd6df6292a6b95734ee2a00973430550afe7" translate="yes" xml:space="preserve">
          <source>Except specifing the package and quoting module name, 'autoload_remote' is same as 'load_remote'.</source>
          <target state="translated">За исключением указания имени пакета и кавычки модуля,'autoload_remote' аналогичен 'load_remote'.</target>
        </trans-unit>
        <trans-unit id="16e04cb1bb937a46789e35dba24fd14a5feb954d" translate="yes" xml:space="preserve">
          <source>Except specifing the package and quoting module name, 'load_remote' is same as 'load'.</source>
          <target state="translated">За исключением указания пакета и цитирования имени модуля,'load_remote' аналогичен 'load'.</target>
        </trans-unit>
        <trans-unit id="f55cf6c06e02d10efcfcfb37efbd0c881f531275" translate="yes" xml:space="preserve">
          <source>Excepting those listed above, we're currently unable to guarantee that B::Deparse will produce a pragma at the correct point in the program. (Specifically, pragmas at the beginning of a block often appear right before the start of the block instead.) Since the effects of pragmas are often lexically scoped, this can mean that the pragma holds sway over a different portion of the program than in the input file.</source>
          <target state="translated">За исключением перечисленных выше,в настоящее время мы не можем гарантировать,что B::Deparse произведет прагматизм в правильной точке программы.(В частности,прагмы в начале блока часто появляются прямо перед началом блока).Поскольку эффекты прагм часто лексически просматриваются,это может означать,что прагма имеет влияние на другую часть программы,нежели во входном файле.</target>
        </trans-unit>
        <trans-unit id="20788aa11834509830be30396b88f6404f087e8c" translate="yes" xml:space="preserve">
          <source>Exception Handling</source>
          <target state="translated">Обработка исключений</target>
        </trans-unit>
        <trans-unit id="826f288dbfc038dead10724f69465c1bfe17a68f" translate="yes" xml:space="preserve">
          <source>Exception Handling (simple) Macros</source>
          <target state="translated">Обработка исключений (простые)Макросы</target>
        </trans-unit>
        <trans-unit id="fa345b763368fc4f9065828d77e9729e19d258cc" translate="yes" xml:space="preserve">
          <source>Exception handing</source>
          <target state="translated">Исключительная вручение</target>
        </trans-unit>
        <trans-unit id="d504b2a99c5e1f8d7e7350318f686e5cbee7a60e" translate="yes" xml:space="preserve">
          <source>Exceptions from autodying functions.</source>
          <target state="translated">Исключения из функций автоматического копирования.</target>
        </trans-unit>
        <trans-unit id="1242bf8dd433a51fa4c19b0e3a208b834c9fc265" translate="yes" xml:space="preserve">
          <source>Exceptions from autodying system().</source>
          <target state="translated">Исключения из системы автоматического копирования (autodying system()).</target>
        </trans-unit>
        <trans-unit id="48741c44a476b90391e45eac22eeaa9b0d399fee" translate="yes" xml:space="preserve">
          <source>Exceptions produced by the &lt;code&gt;autodie&lt;/code&gt; pragma are members of the &lt;a href=&quot;autodie/exception&quot;&gt;autodie::exception&lt;/a&gt; class. The preferred way to work with these exceptions under Perl 5.10 is as follows:</source>
          <target state="translated">Исключения, создаваемые &lt;code&gt;autodie&lt;/code&gt; являются членами класса &lt;a href=&quot;autodie/exception&quot;&gt;autodie :: exception&lt;/a&gt; . Предпочтительный способ работы с этими исключениями в Perl 5.10 следующий:</target>
        </trans-unit>
        <trans-unit id="5986414d0fc4bb9c4ee5d8198af90a5eb243568c" translate="yes" xml:space="preserve">
          <source>Exceptions, error return codes, exit statuses, and errno settings. Typically used for function or module documentation; program documentation uses DIAGNOSTICS instead. The general rule of thumb is that errors printed to &lt;code&gt;STDOUT&lt;/code&gt; or &lt;code&gt;STDERR&lt;/code&gt; and intended for the end user are documented in DIAGNOSTICS while errors passed internal to the calling program and intended for other programmers are documented in ERRORS. When documenting a function that sets errno, a full list of the possible errno values should be given here.</source>
          <target state="translated">Исключения, коды возврата ошибок, статусы выхода и настройки errno. Обычно используется для документации функций или модулей; в программной документации используется ДИАГНОСТИКА. Общее практическое правило заключается в том, что ошибки, выводимые в &lt;code&gt;STDOUT&lt;/code&gt; или &lt;code&gt;STDERR&lt;/code&gt; и предназначенные для конечного пользователя, документируются в DIAGNOSTICS, в то время как ошибки, передаваемые внутри вызывающей программы и предназначенные для других программистов, документируются в ERRORS. При документировании функции, которая устанавливает errno, здесь должен быть приведен полный список возможных значений errno.</target>
        </trans-unit>
        <trans-unit id="3e8ef9fa750a38a235f6f5db2c10f6d27bcf66b2" translate="yes" xml:space="preserve">
          <source>Excessive pride, the sort of thing for which Zeus zaps you. Also the quality that makes you write (and maintain) programs that other people won&amp;rsquo;t want to say bad things about. Hence, the third great virtue of a programmer. See also &lt;b&gt;laziness&lt;/b&gt; and &lt;b&gt;impatience&lt;/b&gt;.</source>
          <target state="translated">Чрезмерная гордость, из-за чего Зевс убивает вас. Также качество, которое заставляет вас писать (и поддерживать) программы, о которых другие люди не захотят говорить плохие вещи. Отсюда третье важное достоинство программиста. См. Также &lt;b&gt;лень&lt;/b&gt; и &lt;b&gt;нетерпение&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="1ff53c1a7c6e7525075531f3d6b8357745fac262" translate="yes" xml:space="preserve">
          <source>Exchanging signed integers between different platforms works only when all platforms store them in the same format. Most platforms store signed integers in two's-complement notation, so usually this is not an issue.</source>
          <target state="translated">Обмен подписанными целыми числами между разными платформами работает только тогда,когда все платформы хранят их в одном формате.Большинство платформ хранят подписанные целые числа в нотации с двумя дополнениями,поэтому обычно это не является проблемой.</target>
        </trans-unit>
        <trans-unit id="6d598c708e755dc53aa35c070da1bc37864ef85e" translate="yes" xml:space="preserve">
          <source>Exclude the given routine and its descendants from the profile.</source>
          <target state="translated">Исключите из профиля данную рутину и ее потомков.</target>
        </trans-unit>
        <trans-unit id="6a8a72f8f7694a401a32218abd4406ae1d283fcc" translate="yes" xml:space="preserve">
          <source>Executables for gzip, zip, and VMStar:</source>
          <target state="translated">Исполняемые файлы для gzip,zip и VMStar:</target>
        </trans-unit>
        <trans-unit id="58de6b665842567beab85d292c3b5870de1c65ae" translate="yes" xml:space="preserve">
          <source>Execute a regexp. The arguments are</source>
          <target state="translated">Выполнить регэкспертизу.Аргументы таковы.</target>
        </trans-unit>
        <trans-unit id="bac595ee7bf88de92060cce1abba1b3d844e6519" translate="yes" xml:space="preserve">
          <source>Execute command as a Perl statement. A trailing semicolon will be supplied. If the Perl statement would otherwise be confused for a Perl debugger, use a leading semicolon, too.</source>
          <target state="translated">Выполните команду,как заявление на Perl.Будет поставлена точка с запятой.Если в противном случае для отладчика Perl оператор Perl будет перепутан,используйте и ведущую точку с запятой.</target>
        </trans-unit>
        <trans-unit id="1c456233f2824914a52bfceba7c1ea3f220aec8f" translate="yes" xml:space="preserve">
          <source>Execute the given C code and print its results. &lt;b&gt;WARNING&lt;/b&gt;: Perl makes heavy use of macros, and</source>
          <target state="translated">Выполните указанный код C и распечатайте его результаты. &lt;b&gt;ВНИМАНИЕ&lt;/b&gt; : Perl интенсивно использует макросы, и</target>
        </trans-unit>
        <trans-unit id="061e9bcfa95dc9f2f39332fda78eedc474b39569" translate="yes" xml:space="preserve">
          <source>Execute this statement for a hint about where to find CORE:</source>
          <target state="translated">Выполните это заявление для подсказки,где найти CORE:</target>
        </trans-unit>
        <trans-unit id="574f52d839fd11f8f8f4c4d0ddacf0528556159a" translate="yes" xml:space="preserve">
          <source>Executing a postponed regular expression 50 times without consuming any input string will result in a fatal error. The maximum depth is compiled into perl, so changing it requires a custom build.</source>
          <target state="translated">Выполнение отложенного регулярного выражения 50 раз без использования входной строки приведет к фатальной ошибке.Максимальная глубина скомпилирована в perl,поэтому для ее изменения требуется пользовательская сборка.</target>
        </trans-unit>
        <trans-unit id="6d525b71568c2d982f46feb96b332bedcdc6e4a0" translate="yes" xml:space="preserve">
          <source>Execution</source>
          <target state="translated">Execution</target>
        </trans-unit>
        <trans-unit id="13709dfa0128b531e84d0b60f2a2419c6bf04dbf" translate="yes" xml:space="preserve">
          <source>Execution of END blocks</source>
          <target state="translated">Выполнение END блоков</target>
        </trans-unit>
        <trans-unit id="675e718a6b33ba2b7929f770db612d9a80f9b87e" translate="yes" xml:space="preserve">
          <source>Execution of a regex generally involves two phases, the first being finding the start point in the string where we should match from, and the second being running the regop interpreter.</source>
          <target state="translated">Выполнение регекса обычно включает в себя две фазы:первая-поиск начальной точки в строке,с которой мы должны совпасть,и вторая-запуск интерпретатора regop.</target>
        </trans-unit>
        <trans-unit id="119f08e3cf8da3d7fe34ab1131df979eb14179b1" translate="yes" xml:space="preserve">
          <source>Execution of any &lt;code&gt;CHECK&lt;/code&gt; blocks.</source>
          <target state="translated">Выполнение любых блоков &lt;code&gt;CHECK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0603019ab35ef11320acde0ed06d6533404cfee9" translate="yes" xml:space="preserve">
          <source>Execution of any &lt;code&gt;END&lt;/code&gt; blocks.</source>
          <target state="translated">Выполнение любых блоков &lt;code&gt;END&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4f82800233d6c7223698c2e187aa3ccc7d2dc01" translate="yes" xml:space="preserve">
          <source>Execution of the interpreter itself used to be recursive, but thanks to the efforts of Dave Mitchell in the 5.9.x development track, that has changed: now an internal stack is maintained on the heap and the routine is fully iterative. This can make it tricky as the code is quite conservative about what state it stores, with the result that two consecutive lines in the code can actually be running in totally different contexts due to the simulated recursion.</source>
          <target state="translated">Исполнение самого переводчика раньше было рекурсивным,но благодаря усилиям Дэйва Митчелла в разработке 5.9.x,что изменилось:теперь на куче поддерживается внутренний стек и рутина полностью итеративна.Это может сделать его хитрым,так как код довольно консервативен в отношении того,какое состояние он сохраняет,в результате чего две последовательные строки в коде могут на самом деле выполняться в совершенно разных контекстах благодаря симулированной рекурсии.</target>
        </trans-unit>
        <trans-unit id="248b9fcc2702356b63c40509208ebb73f559ce07" translate="yes" xml:space="preserve">
          <source>Exhaustive information on the topic of references can be found in &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt;, &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt;, &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; and &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt;.</source>
          <target state="translated">Исчерпывающую информацию по теме ссылок можно найти в &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt; , &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt; , &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; и &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76b5089ada110a0136449f09bf11c2275168e2c5" translate="yes" xml:space="preserve">
          <source>Existing 32 bit apps are properly known as LP32, i.e. Longs and Pointers are 32 bit. 64-bit apps are more properly known as LP64. The discriminating feature of a LP64 bit app is its ability to utilise a 64-bit address space. It is perfectly possible to have a LP32 bit app that supports both 64-bit integers (long long) and largefiles (&amp;gt; 2GB), and this is the default for perl-5.6.0.</source>
          <target state="translated">Существующие 32-битные приложения правильно известны как LP32, т. Е. Длинные значения и указатели 32-битные. 64-битные приложения более правильно известны как LP64. Отличительной особенностью приложения LP64 bit является его способность использовать 64-битное адресное пространство. Вполне возможно иметь приложение LP32 бит, которое поддерживает как 64-битные целые числа (long long), так и большие файлы (&amp;gt; 2 ГБ), и это значение по умолчанию для perl-5.6.0.</target>
        </trans-unit>
        <trans-unit id="3ce132dcaab82a474dd839ab951c3eef1631d645" translate="yes" xml:space="preserve">
          <source>Existing syntax and semantics should only be marked for destruction in very limited circumstances. If they are believed to be very rarely used, stand in the way of actual improvement to the Perl language or perl interpreter, and if affected code can be easily updated to continue working, they may be considered for removal. When in doubt, caution dictates that we will favor backward compatibility. When a feature is deprecated, a statement of reasoning describing the decision process will be posted, and a link to it will be provided in the relevant perldelta documents.</source>
          <target state="translated">Существующий синтаксис и семантика должны быть обозначены для уничтожения только в очень ограниченных обстоятельствах.Если считается,что они используются очень редко,встаньте на пути фактического улучшения языка Perl или интерпретатора perl,и если пораженный код может быть легко обновлен для продолжения работы,он может быть рассмотрен на предмет удаления.В случае сомнений,осторожность диктует,что мы будем отдавать предпочтение обратной совместимости.Если какая-либо функция будет удалена,будет выложено обоснование,описывающее процесс принятия решения,а ссылка на нее будет дана в соответствующих документах perldelta.</target>
        </trans-unit>
        <trans-unit id="6d9d19533b0fbf724f69a3d7a99a413b54990645" translate="yes" xml:space="preserve">
          <source>Exit Code</source>
          <target state="translated">Код выхода</target>
        </trans-unit>
        <trans-unit id="d71626cd31b069ac3980d7ed6a6abb80f71225a3" translate="yes" xml:space="preserve">
          <source>Exits</source>
          <target state="translated">Exits</target>
        </trans-unit>
        <trans-unit id="bc031d65eaef8ccada69a0c994a430a53a41354d" translate="yes" xml:space="preserve">
          <source>Exotic Templates</source>
          <target state="translated">Экзотические шаблоны</target>
        </trans-unit>
        <trans-unit id="2c6c990ee216fb59d7ad72ee8d28ebcceeb5a21e" translate="yes" xml:space="preserve">
          <source>Expand and unexpand tabs like unix expand(1) and unexpand(1)</source>
          <target state="translated">Закладки Expand и unexpand(1)в виде unix expansion(1)и unexpand(1)</target>
        </trans-unit>
        <trans-unit id="2b116400884e9dbc3a5bf5fe94b7d6faa8b0dd38" translate="yes" xml:space="preserve">
          <source>Expand conventional syntax constructions into equivalent ones that expose their internal operation.</source>
          <target state="translated">Расширьте обычные синтаксические конструкции до эквивалентных,раскрывающих их внутреннюю работу.</target>
        </trans-unit>
        <trans-unit id="a24145087edc62ad61c2e0e0ed9777002b6b1d94" translate="yes" xml:space="preserve">
          <source>Expand double-quoted strings into the corresponding combinations of concatenation, uc, ucfirst, lc, lcfirst, quotemeta, and join. For instance, print</source>
          <target state="translated">Разверните строки в двойных кавычках на соответствующие комбинации конкатенация,uc,ucfirst,lc,lcfirst,quotemeta,и соедините.Например,распечатать</target>
        </trans-unit>
        <trans-unit id="a3cec9741cec0dca8594001a6d2ea842476ee2ac" translate="yes" xml:space="preserve">
          <source>Expand patterns that start with '~' to user name home directories.</source>
          <target state="translated">Разверните шаблоны,которые начинаются с '~',в домашние каталоги с именами пользователей.</target>
        </trans-unit>
        <trans-unit id="8fc5537d5aa41a3bee835484d8a71db89d04af82" translate="yes" xml:space="preserve">
          <source>Expands MM[KS]/Make macros in a text string, using the contents of identically named elements of &lt;code&gt;%$self&lt;/code&gt; , and returns the result as a file specification in Unix syntax.</source>
          <target state="translated">Расширяет MM [KS] / Make макрос в текстовой строке, используя содержимое идентично названных элементов &lt;code&gt;%$self&lt;/code&gt; , и возвращает результат в виде спецификации файла в синтаксисе Unix.</target>
        </trans-unit>
        <trans-unit id="4f5783f703e4997395da1ed4bfbdfa29354401cb" translate="yes" xml:space="preserve">
          <source>Expands a message, intended for the user, to include an indication of the current location in the code, if the message does not already appear to be complete.</source>
          <target state="translated">Расширяет сообщение,предназначенное для пользователя,чтобы включить в код указание текущего местоположения,если сообщение еще не является полным.</target>
        </trans-unit>
        <trans-unit id="adde8be1848474c5303345a29bcef52bb4a7e17d" translate="yes" xml:space="preserve">
          <source>Expands the character buffer in the SV so that it has room for the indicated number of bytes (remember to reserve space for an extra trailing &lt;code&gt;NUL&lt;/code&gt; character). Calls &lt;code&gt;sv_grow&lt;/code&gt; to perform the expansion if necessary. Returns a pointer to the character buffer. SV must be of type &amp;gt;= SVt_PV. One alternative is to call &lt;code&gt;sv_grow&lt;/code&gt; if you are not sure of the type of SV.</source>
          <target state="translated">Расширяет символьный буфер в SV так, чтобы в нем было место для указанного количества байтов (не забудьте зарезервировать место для дополнительного &lt;code&gt;NUL&lt;/code&gt; символа NUL ). При необходимости &lt;code&gt;sv_grow&lt;/code&gt; для выполнения раскрытия. Возвращает указатель на символьный буфер. SV должен иметь тип&amp;gt; = SVt_PV. Одна альтернатива - вызвать &lt;code&gt;sv_grow&lt;/code&gt; , если вы не уверены в типе SV.</target>
        </trans-unit>
        <trans-unit id="e07f45c58aaef41c3cc48eff8856e3deb378b3c7" translate="yes" xml:space="preserve">
          <source>Expands the character buffer in the SV. If necessary, uses &lt;code&gt;sv_unref&lt;/code&gt; and upgrades the SV to &lt;code&gt;SVt_PV&lt;/code&gt; . Returns a pointer to the character buffer. Use the &lt;code&gt;SvGROW&lt;/code&gt; wrapper instead.</source>
          <target state="translated">Расширяет символьный буфер в SV. При необходимости использует &lt;code&gt;sv_unref&lt;/code&gt; и обновляет SV до &lt;code&gt;SVt_PV&lt;/code&gt; . Возвращает указатель на символьный буфер. Используйте &lt;code&gt;SvGROW&lt;/code&gt; вместо обертки.</target>
        </trans-unit>
        <trans-unit id="777c7b4c3fe35b49213cdaeefc6c1268989f5da0" translate="yes" xml:space="preserve">
          <source>Expecting a single value is not quite the same as knowing that there will be one. If someone modified</source>
          <target state="translated">Ожидание одного значения не совсем то же самое,что знание того,что оно будет.Если кто-то изменил</target>
        </trans-unit>
        <trans-unit id="bf72e88f58634dcb4936f677084e0a00acfdd002" translate="yes" xml:space="preserve">
          <source>Expects an anonymous hash of name =&amp;gt; value pairs. Same rules apply for names as in &lt;code&gt;new&lt;/code&gt; . If no argument is supplied, will return the &quot;seen&quot; list of name =&amp;gt; value pairs, in a list context. Otherwise, returns the object itself.</source>
          <target state="translated">Ожидает анонимный хэш пар имя =&amp;gt; значение. К именам применяются те же правила, что и в &lt;code&gt;new&lt;/code&gt; . Если аргумент не предоставлен, вернет &amp;laquo;увиденный&amp;raquo; список пар имя =&amp;gt; значение в контексте списка. В противном случае возвращает сам объект.</target>
        </trans-unit>
        <trans-unit id="04b17e379ead5f797c5aa37eb9dc9a107df81896" translate="yes" xml:space="preserve">
          <source>Experimental Details on given and when</source>
          <target state="translated">Экспериментальные Детали по заданным и когда</target>
        </trans-unit>
        <trans-unit id="f6f74c01abe74837a83d80a82742b5139aa6cefe" translate="yes" xml:space="preserve">
          <source>Experimental Support for Sun Studio Compilers for Linux OS</source>
          <target state="translated">Экспериментальная поддержка компиляторов Sun Studio для Linux OS</target>
        </trans-unit>
        <trans-unit id="9e15651ca047ada36f7efb9c2f8e000cd639262b" translate="yes" xml:space="preserve">
          <source>Experimental features made easy</source>
          <target state="translated">Экспериментальные функции упростились</target>
        </trans-unit>
        <trans-unit id="ed2ea169fad6a1c0c998398ba26a1941a42d9f93" translate="yes" xml:space="preserve">
          <source>Experimental features must be experimental in two stable releases before being marked non-experimental. Experimental features will only have their experimental status revoked when they no longer have any design-changing bugs open against them and when they have remained unchanged in behavior for the entire length of a development cycle. In other words, a feature present in v5.20.0 may be marked no longer experimental in v5.22.0 if and only if its behavior is unchanged throughout all of v5.21.</source>
          <target state="translated">Экспериментальные признаки должны быть экспериментальными в двух стабильных выпусках,прежде чем они будут помечены как неэкспериментальные.Экспериментальные функции будут отозваны только тогда,когда у них больше не будет ошибок,изменяющих конструкцию,и когда они останутся неизменными в поведении на протяжении всего цикла разработки.Другими словами,признак,присутствующий в версии v5.20.0,может быть помечен как неэкспериментальный в версии v5.22.0 только в том случае,если его поведение оставалось неизменным на протяжении всего цикла разработки в версии v5.21.</target>
        </trans-unit>
        <trans-unit id="812cee3839ce593c6e7f8fb81f34a218fc92295b" translate="yes" xml:space="preserve">
          <source>Experimental implementation to deal with optional_features from META.yml. Still needs coordination with installer software and currently works only for META.yml declaring &lt;code&gt;dynamic_config=0&lt;/code&gt; . Use with caution.</source>
          <target state="translated">Экспериментальная реализация для работы с optional_features из META.yml. По-прежнему требует согласования с установщиком и в настоящее время работает только для META.yml с объявлением &lt;code&gt;dynamic_config=0&lt;/code&gt; . Используйте с осторожностью.</target>
        </trans-unit>
        <trans-unit id="b1a2e6bb257f27dcbf131f0e4c5090288b803bfa" translate="yes" xml:space="preserve">
          <source>Experimental support for using Intel C++ Compiler has been added. Edit win32/Makefile and pick the correct CCTYPE for the Visual C that Intel C was installed into. Also uncomment __ICC to enable Intel C on Visual C support. To set up the build enviroment, from the Start Menu run IA-32 Visual Studio 20__ mode or Intel 64 Visual Studio 20__ mode as appropriate. Then run nmake as usually in that prompt box.</source>
          <target state="translated">Добавлена экспериментальная поддержка использования Intel C++Compiler.Отредактирован win32/Makefile и выбран правильный CCTYPE для Visual C,в который Intel C был установлен.Также добавлен комментарий __ICC для включения поддержки Intel C на Visual C.Для настройки среды сборки из меню &quot;Пуск&quot; запустите режим IA-32 Visual Studio 20__или Intel 64 Visual Studio 20__соответственно.Затем запустите nmake,как обычно в этом окне запроса.</target>
        </trans-unit>
        <trans-unit id="512d10cc80bbcc4b910ab34f44eacc0c8a8cab5b" translate="yes" xml:space="preserve">
          <source>Explain how to make a valid fh without going through open()(i.e. apply a layer). For example if the file is not opened through perl, but we want to get back a fh, like it was opened by Perl.</source>
          <target state="translated">Объясните,как сделать действительный fh,не проходя через open()(т.е.применить слой).Например,если файл не открыт через perl,но мы хотим получить обратно fh,как будто он был открыт через Perl.</target>
        </trans-unit>
        <trans-unit id="0ae3abeefc2986f2eb842d3cd9632c0a0316ad1f" translate="yes" xml:space="preserve">
          <source>Explicit context</source>
          <target state="translated">Явный контекст</target>
        </trans-unit>
        <trans-unit id="d2d335bbeeb032574984b5eec4fdf9e2563d5abb" translate="yes" xml:space="preserve">
          <source>Explicitly using the &lt;code&gt;ENTER&lt;/code&gt; /&lt;code&gt;SAVETMPS&lt;/code&gt; --&lt;code&gt;FREETMPS&lt;/code&gt; /&lt;code&gt;LEAVE&lt;/code&gt; pairing</source>
          <target state="translated">Явное с помощью &lt;code&gt;ENTER&lt;/code&gt; / &lt;code&gt;SAVETMPS&lt;/code&gt; - &lt;code&gt;FREETMPS&lt;/code&gt; / &lt;code&gt;LEAVE&lt;/code&gt; спаривание</target>
        </trans-unit>
        <trans-unit id="d165ee97f26b031b938fc12621899c47ca3e7175" translate="yes" xml:space="preserve">
          <source>Exponentiation</source>
          <target state="translated">Exponentiation</target>
        </trans-unit>
        <trans-unit id="f3e4fadb9e370a1e2c0c622c01fc8c77daf93a2c" translate="yes" xml:space="preserve">
          <source>Export</source>
          <target state="translated">Export</target>
        </trans-unit>
        <trans-unit id="b04b1d43c804b579fc2179b2b3b449ae1560ae80" translate="yes" xml:space="preserve">
          <source>Export tags defined</source>
          <target state="translated">Определены теги экспорта</target>
        </trans-unit>
        <trans-unit id="a10fabb79509133b618928fd32456dad097bd96f" translate="yes" xml:space="preserve">
          <source>Exportable Functions</source>
          <target state="translated">Экспортируемые функции</target>
        </trans-unit>
        <trans-unit id="087b5b3729015829a7b8d0086f8e5125870ab2b2" translate="yes" xml:space="preserve">
          <source>Exportable Methods</source>
          <target state="translated">Экспортируемые методы</target>
        </trans-unit>
        <trans-unit id="60fa04392e9fbe49aa17d919da35cd7332fea185" translate="yes" xml:space="preserve">
          <source>Exported utility variables</source>
          <target state="translated">Экспортируемые служебные переменные</target>
        </trans-unit>
        <trans-unit id="0cd84bdcb23e59371516a9290d82778263ec9c7c" translate="yes" xml:space="preserve">
          <source>Exporter</source>
          <target state="translated">Exporter</target>
        </trans-unit>
        <trans-unit id="e3272220a019edf889f502d8e939100dd7ba6db5" translate="yes" xml:space="preserve">
          <source>Exporter - Implements default import method for modules</source>
          <target state="translated">Экспортер-Вводит метод импорта по умолчанию для модулей</target>
        </trans-unit>
        <trans-unit id="9677334ff1544480ffd2a9303280ab252a694823" translate="yes" xml:space="preserve">
          <source>Exporter guts</source>
          <target state="translated">кишки экспортера</target>
        </trans-unit>
        <trans-unit id="733f73993629cd5a5a17865554f4f49f3a533105" translate="yes" xml:space="preserve">
          <source>Exporter has a special method, 'export_to_level' which is used in situations where you can't directly call Exporter's import method. The export_to_level method looks like:</source>
          <target state="translated">Экспортер имеет специальный метод 'export_to_level',который используется в ситуациях,когда невозможно напрямую вызвать метод импорта экспортера.Метод export_to_level имеет вид:</target>
        </trans-unit>
        <trans-unit id="e3e659931fe986137a62058f2b4abcef03d65202" translate="yes" xml:space="preserve">
          <source>Exporter.pm</source>
          <target state="translated">Exporter.pm</target>
        </trans-unit>
        <trans-unit id="dc76f5ce6b0b38a5f000b46176cc35b9cb43b24a" translate="yes" xml:space="preserve">
          <source>Exporter::Heavy</source>
          <target state="translated">Exporter::Heavy</target>
        </trans-unit>
        <trans-unit id="1d1140249dd08a40f776c20b9ddd54b5796c4a08" translate="yes" xml:space="preserve">
          <source>Exporter::Heavy - Exporter guts</source>
          <target state="translated">Экспортер::Тяжелый-Экспортер кишки</target>
        </trans-unit>
        <trans-unit id="5212c627287d01ea51f61b228d900e6e7aa1a003" translate="yes" xml:space="preserve">
          <source>Exporting Without Inheriting from Exporter</source>
          <target state="translated">Экспорт без унаследования от экспортера</target>
        </trans-unit>
        <trans-unit id="b76a470ae357815e917068bbc5728a8478edaac1" translate="yes" xml:space="preserve">
          <source>Exporting Without Using Exporter's import Method</source>
          <target state="translated">Экспорт без использования метода импорта экспортера</target>
        </trans-unit>
        <trans-unit id="1b7c31e16f36f853e2c6c57c0f5c8d014a8558d8" translate="yes" xml:space="preserve">
          <source>Exporting variables is not a good idea. They can change under the hood, provoking horrible effects at-a-distance that are too hard to track and to fix. Trust me: they are not worth it.</source>
          <target state="translated">Экспорт переменных-это плохая идея.Они могут изменяться под капотом,вызывая ужасные эффекты на расстоянии,которые слишком трудно отследить и исправить.Поверьте мне:они того не стоят.</target>
        </trans-unit>
        <trans-unit id="071e64c7e24a9d0c7e9058c9548f279b0db62c55" translate="yes" xml:space="preserve">
          <source>Exporting your new function</source>
          <target state="translated">Экспорт вашей новой функции</target>
        </trans-unit>
        <trans-unit id="0e16537914a0163e01ecd7e0945bc56c50eb3849" translate="yes" xml:space="preserve">
          <source>Exports</source>
          <target state="translated">Exports</target>
        </trans-unit>
        <trans-unit id="1a78d15b2b917cc03293d31b108e05ce4d52026f" translate="yes" xml:space="preserve">
          <source>Exports pollute the namespace of the module user. If you must export try to use &lt;code&gt;@EXPORT_OK&lt;/code&gt; in preference to &lt;code&gt;@EXPORT&lt;/code&gt; and avoid short or common symbol names to reduce the risk of name clashes.</source>
          <target state="translated">Экспорт загрязняет пространство имен пользователя модуля. Если вам необходимо экспортировать, попробуйте использовать &lt;code&gt;@EXPORT_OK&lt;/code&gt; вместо &lt;code&gt;@EXPORT&lt;/code&gt; и избегайте коротких или общих имен символов, чтобы снизить риск конфликтов имен.</target>
        </trans-unit>
        <trans-unit id="19680f4d8bc35c089321258ed1726974e515bb01" translate="yes" xml:space="preserve">
          <source>Exports pollute the namespace of the module user. If you must export try to use @EXPORT_OK in preference to @EXPORT and avoid short or common names to reduce the risk of name clashes.</source>
          <target state="translated">Экспорт загрязняет пространство имён пользователя модуля.Если необходимо экспортировать,попробуйте использовать @EXPORT_OK вместо @EXPORT и избегайте коротких или общих имен,чтобы уменьшить риск столкновения имен.</target>
        </trans-unit>
        <trans-unit id="b67fdeebc6a730537832b31cf1e590434ac7ad11" translate="yes" xml:space="preserve">
          <source>Exposes the POSIX function getcwd(3) or re-implements it if it's not available.</source>
          <target state="translated">Выставляет POSIX-функцию getcwd(3)или выполняет ее повторно,если она недоступна.</target>
        </trans-unit>
        <trans-unit id="848bbebe9b69edd539cf121a71439bdfe81b397c" translate="yes" xml:space="preserve">
          <source>Expressions like this are useful in conditionals:</source>
          <target state="translated">Такие выражения полезны в кондиционерах:</target>
        </trans-unit>
        <trans-unit id="130f8cc58ed68e3a1fe427428482f60dc97e9301" translate="yes" xml:space="preserve">
          <source>Ext/Ension</source>
          <target state="translated">Ext/Ension</target>
        </trans-unit>
        <trans-unit id="8adb87135c238343780172ae48188681cf370acf" translate="yes" xml:space="preserve">
          <source>ExtUtils::CBuilder</source>
          <target state="translated">ExtUtils::CBuilder</target>
        </trans-unit>
        <trans-unit id="0dd29c2a17cfd9dc6e5beb4505e91940187682bf" translate="yes" xml:space="preserve">
          <source>ExtUtils::CBuilder - Compile and link C code for Perl modules</source>
          <target state="translated">ExtUtils::CBuilder-Компиляция и компоновка кода на C для Perl модулей</target>
        </trans-unit>
        <trans-unit id="de9e9dbbe64dfc1f06076f5b598c40c5b97a4f07" translate="yes" xml:space="preserve">
          <source>ExtUtils::CBuilder is maintained as part of the Perl 5 core. Please submit any bug reports via the</source>
          <target state="translated">Экстерьер::CBuilder поддерживается как часть ядра Perl 5.Пожалуйста,отправляйте любые сообщения об ошибках через</target>
        </trans-unit>
        <trans-unit id="6d9aae08362d79c65318eda6627f0ab746bbee95" translate="yes" xml:space="preserve">
          <source>ExtUtils::CBuilder::Platform::Windows</source>
          <target state="translated">ExtUtils::CBuilder::Platform::Windows</target>
        </trans-unit>
        <trans-unit id="ec8f2943e4d10ff3dad921becf4700a9c605fc5f" translate="yes" xml:space="preserve">
          <source>ExtUtils::CBuilder::Platform::Windows - Builder class for Windows platforms</source>
          <target state="translated">ExtUtils::CBuilder::Platform::Windows-класс Builder для Windows платформ</target>
        </trans-unit>
        <trans-unit id="0f5f8c4e317cb9e14dbc99f8c4725e7101d063e0" translate="yes" xml:space="preserve">
          <source>ExtUtils::Command</source>
          <target state="translated">ExtUtils::Command</target>
        </trans-unit>
        <trans-unit id="13685feaf020782447b9941746d4b335bddf0883" translate="yes" xml:space="preserve">
          <source>ExtUtils::Command - utilities to replace common UNIX commands in Makefiles etc.</source>
          <target state="translated">ExtUtils::Command-утилиты для замены обычных UNIX-команд в Makefiles и т.д.</target>
        </trans-unit>
        <trans-unit id="1e0e65de42d77495693723755508f19700283291" translate="yes" xml:space="preserve">
          <source>ExtUtils::Command::MM</source>
          <target state="translated">ExtUtils::Command::MM</target>
        </trans-unit>
        <trans-unit id="57baedd89a659e1e0ecff540830bcf69ebde4c0c" translate="yes" xml:space="preserve">
          <source>ExtUtils::Command::MM - Commands for the MM's to use in Makefiles</source>
          <target state="translated">ExtUtils::Команда::ММ-Команды для использования ММ в Makefiles</target>
        </trans-unit>
        <trans-unit id="e8520d9305bb1b6b30673860c2a9fc7e0bb43af7" translate="yes" xml:space="preserve">
          <source>ExtUtils::Command::MM encapsulates code which would otherwise have to be done with large &quot;one&quot; liners.</source>
          <target state="translated">ExtUtils::Command::MM инкапсулирует код,который в противном случае пришлось бы делать с большими &quot;одними&quot; лайнерами.</target>
        </trans-unit>
        <trans-unit id="01aca525aa3b0d3504eab62f629ea7ae316a1df9" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant</source>
          <target state="translated">ExtUtils::Constant</target>
        </trans-unit>
        <trans-unit id="eb53ab587c5df3bac6d41d873980d0a80f5c155a" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant - generate XS code to import C header constants</source>
          <target state="translated">ExtUtils::Constant-генерировать XS код для импорта констант заголовка C</target>
        </trans-unit>
        <trans-unit id="2bfb67938397e6eb325051359a5d323e79a220d8" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant facilitates generating C and XS wrapper code to allow perl modules to AUTOLOAD constants defined in C library header files. It is principally used by the &lt;code&gt;h2xs&lt;/code&gt; utility, on which this code is based. It doesn't contain the routines to scan header files to extract these constants.</source>
          <target state="translated">ExtUtils :: Constant упрощает создание кода оболочки C и XS, чтобы модули Perl могли использовать константы AUTOLOAD, определенные в файлах заголовков библиотеки C. В основном он используется утилитой &lt;code&gt;h2xs&lt;/code&gt; , на которой основан этот код. Он не содержит процедур сканирования файлов заголовков для извлечения этих констант.</target>
        </trans-unit>
        <trans-unit id="66069119c4474ce5db2c00c2fc5c7ebe74e509d3" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Base</source>
          <target state="translated">ExtUtils::Constant::Base</target>
        </trans-unit>
        <trans-unit id="a5a92bf27fd8a70fb8d0d04675721591091d31a8" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Base - base class for ExtUtils::Constant objects</source>
          <target state="translated">ExtUtils::Постоянные::Базовый-базовый класс для ExtUtils::Постоянные объекты</target>
        </trans-unit>
        <trans-unit id="37d28c0e096d851a074af795694f3e4ed605e4fe" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Base exports no subroutines. The following methods are available</source>
          <target state="translated">ExtUtils::Постоянно::База не экспортирует подпрограммы.Доступны следующие методы</target>
        </trans-unit>
        <trans-unit id="cc85f41228edcbb25fda849b24e857773037224e" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Base provides a base implementation of methods to generate C code to give fast constant value lookup by named string. Currently it's mostly used ExtUtils::Constant::XS, which generates the lookup code for the constant() subroutine found in many XS modules.</source>
          <target state="translated">ExtUtils::Constant::Base предоставляет базовую реализацию методов генерации кода на C для быстрого поиска постоянных значений по именованной строке.В настоящее время в основном используется ExtUtils::Constant::XS,который генерирует код поиска подпрограмм константы(),встречающихся во многих XS модулях.</target>
        </trans-unit>
        <trans-unit id="01123cf69ee0503631a353722ce7083ea5078bc4" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Utils</source>
          <target state="translated">ExtUtils::Constant::Utils</target>
        </trans-unit>
        <trans-unit id="eb7021c674be1dbbac0f5d2f00a2ee805361885c" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Utils - helper functions for ExtUtils::Constant</source>
          <target state="translated">ExtUtils::Постоянно::Utils-вспомогательные функции для ExtUtils::Постоянно</target>
        </trans-unit>
        <trans-unit id="88fa01ca987de7b887a3c79f4e501e05801215f9" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Utils packages up utility subroutines used by ExtUtils::Constant, ExtUtils::Constant::Base and derived classes. All its functions are explicitly exportable.</source>
          <target state="translated">ExtUtils::Constant::Utils упаковывает утилиты,используемые ExtUtils::Constant,ExtUtils::Constant::Base и производные классы.Все ее функции явно экспортируются.</target>
        </trans-unit>
        <trans-unit id="691e427f212f20f1a4e97a292f83b191a9330664" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::XS</source>
          <target state="translated">ExtUtils::Constant::XS</target>
        </trans-unit>
        <trans-unit id="7b304383401bf8b504f1c4575e883635046c55a8" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::XS - generate C code for XS modules' constants.</source>
          <target state="translated">ExtUtils::Constant::XS-генерировать C-код для констант XS-модулей.</target>
        </trans-unit>
        <trans-unit id="a134fe12059f0bb9cd89ef6f92c5ae2e9810c57e" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::XS overrides ExtUtils::Constant::Base to generate C code for XS modules' constants.</source>
          <target state="translated">ExtUtils::Константа::XS переопределяет ExtUtils::Константа::База для генерации C-кода для констант XS-модулей.</target>
        </trans-unit>
        <trans-unit id="5fb8ee5bc96080dc35b8c113dc4ab7e19f1f7f22" translate="yes" xml:space="preserve">
          <source>ExtUtils::Embed</source>
          <target state="translated">ExtUtils::Embed</target>
        </trans-unit>
        <trans-unit id="939f083947624f21f9b736c75a4f6438e18f6655" translate="yes" xml:space="preserve">
          <source>ExtUtils::Embed - Utilities for embedding Perl in C/C++ applications</source>
          <target state="translated">ExtUtils::Embed-Утилиты для встраивания Perl в приложения на Си/Си++.</target>
        </trans-unit>
        <trans-unit id="66d1280ba3865302835b81bea028e8fe495e808d" translate="yes" xml:space="preserve">
          <source>ExtUtils::Install</source>
          <target state="translated">ExtUtils::Install</target>
        </trans-unit>
        <trans-unit id="e1917ee01b8bd661c56eb9ac792b975c3df2f5a1" translate="yes" xml:space="preserve">
          <source>ExtUtils::Install - install files from here to there</source>
          <target state="translated">ExtUtils::Install-установка файлов отсюда до туда</target>
        </trans-unit>
        <trans-unit id="b703bea959a592e6e8e04477edfce4ad8bd309c6" translate="yes" xml:space="preserve">
          <source>ExtUtils::Installed</source>
          <target state="translated">ExtUtils::Installed</target>
        </trans-unit>
        <trans-unit id="3984de1657750a05991b5ea96245f59313691aaf" translate="yes" xml:space="preserve">
          <source>ExtUtils::Installed - Inventory management of installed modules</source>
          <target state="translated">ExtUtils::Установленные-Управление запасами установленных модулей</target>
        </trans-unit>
        <trans-unit id="b02212efafd95acf708fbde6c1ea9a18a4ebc3b3" translate="yes" xml:space="preserve">
          <source>ExtUtils::Installed provides a standard way to find out what core and module files have been installed. It uses the information stored in .packlist files created during installation to provide this information. In addition it provides facilities to classify the installed files and to extract directory information from the .packlist files.</source>
          <target state="translated">ExtUtils::Installed предоставляет стандартный способ узнать,какие файлы ядра и модули были установлены.Он использует информацию,хранящуюся в файлах .packlist,созданных во время установки,для предоставления этой информации.Кроме того,он предоставляет возможности для классификации установленных файлов и извлечения информации о каталогах из файлов .packlist.</target>
        </trans-unit>
        <trans-unit id="42c25bbd2df5e46fa299efe94a0a5ec1d56bc561" translate="yes" xml:space="preserve">
          <source>ExtUtils::Liblist</source>
          <target state="translated">ExtUtils::Liblist</target>
        </trans-unit>
        <trans-unit id="1c444f69f6d944829dae0bfb3cb19187e41f4b3d" translate="yes" xml:space="preserve">
          <source>ExtUtils::Liblist - determine libraries to use and how to use them</source>
          <target state="translated">ExtUtils::Liblist-определить библиотеки для использования и как их использовать.</target>
        </trans-unit>
        <trans-unit id="d6d8f29d2d6c812d8608b7eecff6b50d5b23bb32" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM</source>
          <target state="translated">ExtUtils::MM</target>
        </trans-unit>
        <trans-unit id="d9944867a30cc09571228059a446b44834907174" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM - OS adjusted ExtUtils::MakeMaker subclass</source>
          <target state="translated">Экстра-утилиты::ММ-Настройка ОС Экстра-утилиты::Подкласс MakeMaker</target>
        </trans-unit>
        <trans-unit id="db5ed850a839f5d75d47dcc96cd13b3666aca25d" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM is a subclass of ExtUtils::MakeMaker which automatically chooses the appropriate OS specific subclass for you (ie. ExtUils::MM_Unix, etc...).</source>
          <target state="translated">ExtUtils::MM-это подкласс ExtUtils::MakeMaker,который автоматически выбирает для вас соответствующий подкласс,специфичный для операционной системы (т.е.ExtUils::MM_Unix и т.д...).</target>
        </trans-unit>
        <trans-unit id="f20ad18d2cdfe05b996f3064f2baa9077e90198e" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_AIX</source>
          <target state="translated">ExtUtils::MM_AIX</target>
        </trans-unit>
        <trans-unit id="e2c65ab01c23a32d98e8b4e3a0d77782b9a1b0c7" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_AIX - AIX specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">Специфический подкласс ExtUtils::MM_AIX-AIX подкласс ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="82f6a9462d97b2eeba15d489f4c29f1201ca8139" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Any</source>
          <target state="translated">ExtUtils::MM_Any</target>
        </trans-unit>
        <trans-unit id="28e6e24f25939bb77bd8b0e8b5c1b5591ab0a63a" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Any - Platform-agnostic MM methods</source>
          <target state="translated">ExtUtils::MM_Any-Платформенно-диагностические ММ-методы</target>
        </trans-unit>
        <trans-unit id="a4017c7fd6c6b1a7382d3693845441ec57607400" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Any is a subclass of File::Spec. The methods noted here override File::Spec.</source>
          <target state="translated">ExtUtils::MM_Any-подкласс File::Spec.Методы,отмеченные здесь,переопределяют File::Spec.</target>
        </trans-unit>
        <trans-unit id="a07e79b177dfcc3d173d4e96906fb19054e96233" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Any is a superclass for the ExtUtils::MM_* set of modules. It contains methods which are either inherently cross-platform or are written in a cross-platform manner.</source>
          <target state="translated">ExtUtils::MM_Any-это суперкласс для набора модулей ExtUtils::MM_*.Он содержит методы,которые либо по своей сути являются кроссплатформенными,либо написаны кроссплатформенным образом.</target>
        </trans-unit>
        <trans-unit id="01e79daa480a30aec67c1c77b38113a2fa75acb1" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_BeOS</source>
          <target state="translated">ExtUtils::MM_BeOS</target>
        </trans-unit>
        <trans-unit id="ff7047e18f778da31bd8596ebbae3ca3c16815a1" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_BeOS - methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_BeOS-методы переопределения поведения UN*X в ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="32f54e4d1cdff9fa869169ffbe48a1f8a6442f8d" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Cygwin</source>
          <target state="translated">ExtUtils::MM_Cygwin</target>
        </trans-unit>
        <trans-unit id="26a23a31e9ae337b30e976cee9bfe04ee8714af5" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Cygwin - methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_Cygwin-методы переопределения поведения UN*X в ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="83b34173b4084fe7b0f1b8e7080f5e44721c1652" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_DOS</source>
          <target state="translated">ExtUtils::MM_DOS</target>
        </trans-unit>
        <trans-unit id="ce09d2a78829bfe3f6e4a91c1fda8bf736e91cd1" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_DOS - DOS specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils::MM_DOS-специфический для DOS подкласс ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="95c4b06cdebc87ea8f0b490c31911c2d3a160085" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Darwin</source>
          <target state="translated">ExtUtils::MM_Darwin</target>
        </trans-unit>
        <trans-unit id="ce3594f7f3d66367be8d04f9a60ed3e5b23e61ae" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Darwin - special behaviors for OS X</source>
          <target state="translated">ExtUtils::MM_Darwin-специальное поведение для OS X</target>
        </trans-unit>
        <trans-unit id="a35d39f1996d06db96e0eb3bc7581c9d1bb37583" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_MacOS</source>
          <target state="translated">ExtUtils::MM_MacOS</target>
        </trans-unit>
        <trans-unit id="a75ee91bd51d22344f5f01dea69463550d1b77f8" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_MacOS - once produced Makefiles for MacOS Classic</source>
          <target state="translated">ExtUtils::MM_MacOS-однажды создал Makefiles для MacOS Classic</target>
        </trans-unit>
        <trans-unit id="05b1c57f6a3a8d6a042ca608dff6a349761c8182" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_NW5</source>
          <target state="translated">ExtUtils::MM_NW5</target>
        </trans-unit>
        <trans-unit id="c8c1829d86b2c857e5650f081f857c1eaf86f3e8" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_NW5 - methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_NW5-методы переопределения поведения UN*X в ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="e0950761db3807deb0218887807e7b7bff1a358b" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_OS2</source>
          <target state="translated">ExtUtils::MM_OS2</target>
        </trans-unit>
        <trans-unit id="9c18e1ac0450cd34c6460b2c5c7a1220fbf998b2" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_OS2 - methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_OS2-методы переопределения поведения UN*X в ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="9754f9a33576ee28f994ec3ff4f6032e292d0ec1" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_QNX</source>
          <target state="translated">ExtUtils::MM_QNX</target>
        </trans-unit>
        <trans-unit id="5c959f779c55270f8bb8da4da99da8c51701f934" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_QNX - QNX specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">Специфический подкласс ExtUtils::MM_QNX-QNX подкласс ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="d9cffc939c33c81ae491e577ff7a0f67f32115db" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_UWIN</source>
          <target state="translated">ExtUtils::MM_UWIN</target>
        </trans-unit>
        <trans-unit id="392dbc1b30426cf86e8bbd0156b4353d7aae576c" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_UWIN - U/WIN specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils::MM_UWIN-U/WIN специфический подкласс ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="6b69e4024267a17dfff2456177fce03e32e171de" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="c828df98d7850f84de0cbb81d4e4596caa76f94a" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_Unix-методы,используемые ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="2f00201cd4f3a6fbb76802bb39ac7a005b8f24e3" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Unix. This is a temporary solution.</source>
          <target state="translated">ExtUtils::MM_Unix.Это временное решение.</target>
        </trans-unit>
        <trans-unit id="5bbe314072fa79cbbe64e27d3c034cb7ecbc2df1" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_VMS</source>
          <target state="translated">ExtUtils::MM_VMS</target>
        </trans-unit>
        <trans-unit id="c328e4aa3661448cfc600baf641ce3b368446553" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_VMS - methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_VMS-методы переопределения поведения UN*X в ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="cbf6a31d4b30a3697a77d880951a740af6fe002e" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_VOS</source>
          <target state="translated">ExtUtils::MM_VOS</target>
        </trans-unit>
        <trans-unit id="248c1927adaa54c68b53917bcd12ca60bc242150" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_VOS - VOS specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils::MM_VOS-специфический для VOS подкласс ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="01b2b6f5d2a1e4c4ed0f2cb32046a9a5d606a04c" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Win32</source>
          <target state="translated">ExtUtils::MM_Win32</target>
        </trans-unit>
        <trans-unit id="31634682156707a3a92d7105825df2529eb4f747" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Win32 - methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_Win32-методы переопределения поведения UN*X в ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="dd4f189a6328e4d51489c48940b1b07f49808b7b" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Win95</source>
          <target state="translated">ExtUtils::MM_Win95</target>
        </trans-unit>
        <trans-unit id="ef84388c3c22f4aa37ab1ec6dcdd24ddaa801da4" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Win95 - method to customize MakeMaker for Win9X</source>
          <target state="translated">ExtUtils::MM_Win95-метод настройки MakeMaker для Win9X.</target>
        </trans-unit>
        <trans-unit id="2eeeaab10b029e1825f471249451e612175f476c" translate="yes" xml:space="preserve">
          <source>ExtUtils::MY</source>
          <target state="translated">ExtUtils::MY</target>
        </trans-unit>
        <trans-unit id="a29677c3a7812ab9e27275d7d315711580baa3c5" translate="yes" xml:space="preserve">
          <source>ExtUtils::MY - ExtUtils::MakeMaker subclass for customization</source>
          <target state="translated">ExtUtils::MY-ExtUtils::MakeMaker подкласс для настройки</target>
        </trans-unit>
        <trans-unit id="077ce2e66cf34d26fc93548b5aa4b0a365551ad3" translate="yes" xml:space="preserve">
          <source>ExtUtils::MY is a subclass of ExtUtils::MM. Its provided in your Makefile.PL for you to add and override MakeMaker functionality.</source>
          <target state="translated">ExtUtils::MY-подкласс ExtUtils::MM.Он предоставляется в вашем Makefile.PL для добавления и переопределения функциональности MakeMaker.</target>
        </trans-unit>
        <trans-unit id="a8d99fc9d222321dd1dd6e7c9d39239d74c92fb3" translate="yes" xml:space="preserve">
          <source>ExtUtils::MY might turn out to be a temporary solution, but MY won't go away.</source>
          <target state="translated">ExtUtils::MY может оказаться временным решением,но MY не уйдет.</target>
        </trans-unit>
        <trans-unit id="6da8b7232afb53dfdcd9b1c4dde891781d5ce223" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="b8052cbade448d159716f320bb8b7066c1c35927" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker (EUMM) is object oriented. Each directory below the current directory that contains a Makefile.PL is treated as a separate object. This makes it possible to write an unlimited number of Makefiles with a single invocation of WriteMakefile().</source>
          <target state="translated">ExtUtils::MakeMaker (EUMM)является объектно-ориентированным.Каждый каталог под текущей директорией,который содержит Makefile.PL,рассматривается как отдельный объект.Это позволяет записывать неограниченное количество Makefiles с одним вызовом WriteMakefile().</target>
        </trans-unit>
        <trans-unit id="6ea38d2404e8bb2fe915619afea85f24fef8c2cc" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker - Create a module Makefile</source>
          <target state="translated">ExtUtils::MakeMaker-Создать модуль Makefile</target>
        </trans-unit>
        <trans-unit id="e6df2289ed559a450ea26d00c0d0e4cee5508740" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker subclass for customization</source>
          <target state="translated">ExtUtils::Подкласс MakeMaker для настройки</target>
        </trans-unit>
        <trans-unit id="c60c158c602a516f81a6ae9bca65b474a071fe74" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::Config</source>
          <target state="translated">ExtUtils::MakeMaker::Config</target>
        </trans-unit>
        <trans-unit id="d3014ef697f5ada430bc56427a7b9caae4e6e02c" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::Config - Wrapper around Config.pm</source>
          <target state="translated">ExtUtils::MakeMaker::Config-Обёртка вокруг Config.pm</target>
        </trans-unit>
        <trans-unit id="9ccd57b3ecc86c99f88666a4cbfa65fcc3d9511f" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::FAQ</source>
          <target state="translated">ExtUtils::MakeMaker::FAQ</target>
        </trans-unit>
        <trans-unit id="30461ff8ef34cae5ca5dc88e0a98e8273138112a" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::FAQ - Frequently Asked Questions About MakeMaker</source>
          <target state="translated">Экстра-утилиты::MakeMaker::FAQ-Часто задаваемые вопросы о MakeMaker</target>
        </trans-unit>
        <trans-unit id="c91ea2c313a203d7ca441511bcd463e56db95e2e" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::Tutorial</source>
          <target state="translated">ExtUtils::MakeMaker::Tutorial</target>
        </trans-unit>
        <trans-unit id="a40c04994e7a37e13af27331a991a5aa646c9b73" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::Tutorial - Writing a module with MakeMaker</source>
          <target state="translated">ExtUtils::MakeMaker::Tutorial-Написание модуля с помощью MakeMaker</target>
        </trans-unit>
        <trans-unit id="b357eaa10f6891f76e970ffb5f2bf93f495e4a17" translate="yes" xml:space="preserve">
          <source>ExtUtils::Manifest</source>
          <target state="translated">ExtUtils::Manifest</target>
        </trans-unit>
        <trans-unit id="3226afa87ddca4ba7171d22b9f2b78d098b58f76" translate="yes" xml:space="preserve">
          <source>ExtUtils::Manifest - utilities to write and check a MANIFEST file</source>
          <target state="translated">ExtUtils::Manifest-утилиты для записи и проверки файла MANIFEST</target>
        </trans-unit>
        <trans-unit id="5668766f97bcd05c6bdb7c965133d9727537b625" translate="yes" xml:space="preserve">
          <source>ExtUtils::Manifest exports no functions by default. The following are exported on request</source>
          <target state="translated">ExtUtils::Манифест по умолчанию не экспортирует никаких функций.По запросу экспортируются следующие функции</target>
        </trans-unit>
        <trans-unit id="3d683dc5b10b650f60d4d9d340eeb5154c9725c7" translate="yes" xml:space="preserve">
          <source>ExtUtils::Miniperl</source>
          <target state="translated">ExtUtils::Miniperl</target>
        </trans-unit>
        <trans-unit id="9fc3f091d177ebdf88e70a7d90d1a0e96a9ebda2" translate="yes" xml:space="preserve">
          <source>ExtUtils::Miniperl - write the C code for perlmain.c</source>
          <target state="translated">ExtUtils::Miniperl-пишите код на C для perlmain.c</target>
        </trans-unit>
        <trans-unit id="1c32c7f84e8dc881e25db6f6d50706131d6d8758" translate="yes" xml:space="preserve">
          <source>ExtUtils::Mkbootstrap</source>
          <target state="translated">ExtUtils::Mkbootstrap</target>
        </trans-unit>
        <trans-unit id="bbfa5e60d2823fa64c959ef9034364b18eddc3e9" translate="yes" xml:space="preserve">
          <source>ExtUtils::Mkbootstrap - make a bootstrap file for use by DynaLoader</source>
          <target state="translated">ExtUtils::Mkbootstrap-сделайте загрузочный файл для использования DynaLoader</target>
        </trans-unit>
        <trans-unit id="6719b923f8e283bd552384bd5af81cadfef85883" translate="yes" xml:space="preserve">
          <source>ExtUtils::Mksymlists</source>
          <target state="translated">ExtUtils::Mksymlists</target>
        </trans-unit>
        <trans-unit id="15ab523f4d3c60af2d551125aa18471a39d07e7c" translate="yes" xml:space="preserve">
          <source>ExtUtils::Mksymlists - write linker options files for dynamic extension</source>
          <target state="translated">ExtUtils::Mksymlists-запись линкерных опций файлов для динамического расширения</target>
        </trans-unit>
        <trans-unit id="dac17ac78f3539cbb386b1e56ee2b529662e80e5" translate="yes" xml:space="preserve">
          <source>ExtUtils::Packlist</source>
          <target state="translated">ExtUtils::Packlist</target>
        </trans-unit>
        <trans-unit id="2fd0b32af3911843b6577751529d4515df509939" translate="yes" xml:space="preserve">
          <source>ExtUtils::Packlist - manage .packlist files</source>
          <target state="translated">ExtUtils::Packlist-управление файлами .packlist</target>
        </trans-unit>
        <trans-unit id="b6cb6e0433e264b8d9ae4674f7b9ee20c7cc9a0e" translate="yes" xml:space="preserve">
          <source>ExtUtils::Packlist provides a standard way to manage .packlist files. Functions are provided to read and write .packlist files. The original .packlist format is a simple list of absolute pathnames, one per line. In addition, this package supports an extended format, where as well as a filename each line may contain a list of attributes in the form of a space separated list of key=value pairs. This is used by the installperl script to differentiate between files and links, for example.</source>
          <target state="translated">ExtUtils::Packlist предоставляет стандартный способ управления файлами .packlist.Функции предназначены для чтения и записи файлов .packlist.Оригинальный формат .packlist представляет собой простой список абсолютных имен,по одному на строку.Кроме того,этот пакет поддерживает расширенный формат,где,как и имя файла,каждая строка может содержать список атрибутов в виде разделенного пробелами списка пар ключ=значение.Это используется,например,скриптом installperl для различения файлов и ссылок.</target>
        </trans-unit>
        <trans-unit id="c27f6826e3e72b1481e238cd590b927b9a8c7674" translate="yes" xml:space="preserve">
          <source>ExtUtils::ParseXS</source>
          <target state="translated">ExtUtils::ParseXS</target>
        </trans-unit>
        <trans-unit id="a0bc42ea6560aea10d0d6a20cba29d9f0d9456c6" translate="yes" xml:space="preserve">
          <source>ExtUtils::ParseXS - converts Perl XS code into C code</source>
          <target state="translated">ExtUtils::ParseXS-преобразует код Perl XS в код C</target>
        </trans-unit>
        <trans-unit id="f01cb2601da9ca9e6f049c24d0b16efdb7998074" translate="yes" xml:space="preserve">
          <source>ExtUtils::testlib</source>
          <target state="translated">ExtUtils::testlib</target>
        </trans-unit>
        <trans-unit id="c819a99ea2471502c8a0521252e569cacdf6e150" translate="yes" xml:space="preserve">
          <source>ExtUtils::testlib - add blib/* directories to @INC</source>
          <target state="translated">ExtUtils::testlib-добавить каталоги blib/*в @INC</target>
        </trans-unit>
        <trans-unit id="1a8525beca2f4f9e103dd4931ef378f407141d6e" translate="yes" xml:space="preserve">
          <source>Extend File Glob to Allow Input and Output Files</source>
          <target state="translated">Расширить глобус файлов,чтобы разрешить входные и выходные файлы</target>
        </trans-unit>
        <trans-unit id="fab77626f5cddcb8bbb657382d4af81d5cdf9048" translate="yes" xml:space="preserve">
          <source>Extend your pattern's legibility by permitting whitespace and comments. Details in &lt;a href=&quot;#%2fx&quot;&gt;/x&lt;/a&gt;</source>
          <target state="translated">Увеличьте удобочитаемость вашего шаблона, разрешив пробелы и комментарии. Детали в &lt;a href=&quot;#%2fx&quot;&gt;/ х&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d44d230ea6fe0935f3b1482cff787c6266b3d3b" translate="yes" xml:space="preserve">
          <source>Extended &lt;code&gt;expect&lt;/code&gt; . This is a hash reference with four allowed keys, &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;timeout&lt;/code&gt; , &lt;code&gt;reuse&lt;/code&gt; , and &lt;code&gt;talk&lt;/code&gt; .</source>
          <target state="translated">Расширенное &lt;code&gt;expect&lt;/code&gt; . Это ссылка на хэш с четырьмя разрешенными ключами, &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;timeout&lt;/code&gt; , &lt;code&gt;reuse&lt;/code&gt; и &lt;code&gt;talk&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efc98640815d67fe8a62500e0c5368b07039dddc" translate="yes" xml:space="preserve">
          <source>Extended Bracketed Character Classes</source>
          <target state="translated">Классы с расширенными скобками</target>
        </trans-unit>
        <trans-unit id="08ad66702e505f4acfeb7ef02a28aef2a444692f" translate="yes" xml:space="preserve">
          <source>Extended Grapheme Clusters (Logical characters)</source>
          <target state="translated">Расширенные кластеры графем (логические символы)</target>
        </trans-unit>
        <trans-unit id="b408f65a0dc6251545ba8a1cae00a09cef180586" translate="yes" xml:space="preserve">
          <source>Extended Patterns</source>
          <target state="translated">Расширенные модели</target>
        </trans-unit>
        <trans-unit id="57638586a902beff6d532df64e0c7307238ec6d1" translate="yes" xml:space="preserve">
          <source>Extended description and discussion of the program or functions, or the body of the documentation for man pages that document something else. If particularly long, it's a good idea to break this up into subsections &lt;code&gt;=head2&lt;/code&gt; directives like:</source>
          <target state="translated">Расширенное описание и обсуждение программы или функций, или основная часть документации для страниц руководства, которые документируют что-то еще. Если это особенно длинно, рекомендуется разбить его на директивы &lt;code&gt;=head2&lt;/code&gt; например:</target>
        </trans-unit>
        <trans-unit id="e1eee637af0775263c15116e6a9a092f2dd1ed43" translate="yes" xml:space="preserve">
          <source>Extended integer, Perl style. This can be either an optional leading plus or minus sign, followed by a sequence of digits, or an octal string (a zero, optionally followed by '0', '1', .. '7'), or a hexadecimal string (&lt;code&gt;0x&lt;/code&gt; followed by '0' .. '9', 'a' .. 'f', case insensitive), or a binary string (&lt;code&gt;0b&lt;/code&gt; followed by a series of '0' and '1').</source>
          <target state="translated">Расширенное целое число в стиле Perl. Это может быть либо необязательный начальный знак плюс или минус, за которым следует последовательность цифр, либо восьмеричная строка (ноль, за которой необязательно следует '0', '1', .. '7') или шестнадцатеричная строка ( &lt;code&gt;0x&lt;/code&gt; , за которым следует '0' .. '9', 'a' .. 'f', без учета регистра) или двоичная строка ( &lt;code&gt;0b&lt;/code&gt; , за которой следует последовательность из '0' и '1').</target>
        </trans-unit>
        <trans-unit id="7f8a27621bd1b83106ef3b26b5852eb1064f0fc5" translate="yes" xml:space="preserve">
          <source>Extended processing of command line options</source>
          <target state="translated">Расширенная обработка опций командной строки</target>
        </trans-unit>
        <trans-unit id="5db438e4dc97c2c680eb06228229b5484c1bdab3" translate="yes" xml:space="preserve">
          <source>Extending and Embedding Test::More</source>
          <target state="translated">Тест на расширение и встраивание::Больше</target>
        </trans-unit>
        <trans-unit id="8093cc064296db81eb0f5514264d7ee6d955b145" translate="yes" xml:space="preserve">
          <source>Extending it to csh patterns is left as an exercise to the reader.</source>
          <target state="translated">Распространение его на csh шаблоны оставлено в качестве упражнения для читателя.</target>
        </trans-unit>
        <trans-unit id="4e50bd25f128e6a96c634dc99854b32ea96ab716" translate="yes" xml:space="preserve">
          <source>Extending your Extension</source>
          <target state="translated">Продление срока действия</target>
        </trans-unit>
        <trans-unit id="4f8331dd312ba43f266e8a83a2d73cbbbec52b3f" translate="yes" xml:space="preserve">
          <source>Extension Layers</source>
          <target state="translated">Расширительные слои</target>
        </trans-unit>
        <trans-unit id="7e80c98508d4f62822b0432554091a536a41d48e" translate="yes" xml:space="preserve">
          <source>Extension Modules</source>
          <target state="translated">Модули расширения</target>
        </trans-unit>
        <trans-unit id="bd951e4e9e05b88a206b50063022ae727663d6c9" translate="yes" xml:space="preserve">
          <source>Extension based on</source>
          <target state="translated">Расширение на основе</target>
        </trans-unit>
        <trans-unit id="67518e197246f71238efe738515b0409050e6007" translate="yes" xml:space="preserve">
          <source>Extension based on _.h_ and _.c_ files</source>
          <target state="translated">Расширение,основанное на файлах _.h_и _.c_.</target>
        </trans-unit>
        <trans-unit id="4711cbf045a57cbff83b6f9f271bd795fbb6b53d" translate="yes" xml:space="preserve">
          <source>Extension methods</source>
          <target state="translated">Методы расширения</target>
        </trans-unit>
        <trans-unit id="cce4d271f69e77a8f0acdb625f0076753f28069c" translate="yes" xml:space="preserve">
          <source>Extension modules are written in C (or a mix of Perl and C). They are usually dynamically loaded into Perl if and when you need them, but may also be linked in statically. Supported extension modules include Socket, Fcntl, and POSIX.</source>
          <target state="translated">Модули расширения написаны на C (или смесь Perl и C).Обычно они динамически загружаются в Perl,если и когда вам это необходимо,но также могут быть связаны статически.Поддерживаемые модули расширений включают Socket,Fcntl и POSIX.</target>
        </trans-unit>
        <trans-unit id="d5c486c72e2c41ab9d29ece60988b5356674e74f" translate="yes" xml:space="preserve">
          <source>Extension modules can also hook into the Perl parser to define new kinds of compound statements. These are introduced by a keyword which the extension recognizes, and the syntax following the keyword is defined entirely by the extension. If you are an implementor, see &lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;PL_keyword_plugin in perlapi&lt;/a&gt; for the mechanism. If you are using such a module, see the module's documentation for details of the syntax that it defines.</source>
          <target state="translated">Модули расширения также могут подключаться к анализатору Perl для определения новых видов составных операторов. Они вводятся ключевым словом, которое распознает расширение, а синтаксис, следующий за ключевым словом, полностью определяется расширением. Если вы разработчик, см. &lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;PL_keyword_plugin в perlapi&lt;/a&gt; для получения информации о механизме. Если вы используете такой модуль, см. Документацию к модулю для получения подробной информации о синтаксисе, который он определяет.</target>
        </trans-unit>
        <trans-unit id="17db2bf16378aa10db2e67a8c2600f3a25122fec" translate="yes" xml:space="preserve">
          <source>Extension modules can also hook into the Perl parser to define new kinds of keyword-headed expression. These may look like functions, but may also look completely different. The syntax following the keyword is defined entirely by the extension. If you are an implementor, see &lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;PL_keyword_plugin in perlapi&lt;/a&gt; for the mechanism. If you are using such a module, see the module's documentation for details of the syntax that it defines.</source>
          <target state="translated">Модули расширения также могут подключаться к синтаксическому анализатору Perl для определения новых видов выражений с заголовками ключевых слов. Они могут выглядеть как функции, но также могут выглядеть совершенно иначе. Синтаксис, следующий за ключевым словом, полностью определяется расширением. Если вы разработчик, см. &lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;PL_keyword_plugin в perlapi,&lt;/a&gt; чтобы узнать о механизме. Если вы используете такой модуль, см. Документацию к модулю для получения подробной информации о синтаксисе, который он определяет.</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="6e975483dac372a5ca9dfd4b8e5e57b37a1180dd" translate="yes" xml:space="preserve">
          <source>Extensions and XS are, in theory, buildable by anyone using free tools. In practice, many don't, as users of the Acorn platform are used to binary distributions. MakeMaker does run, but no available make currently copes with MakeMaker's makefiles; even if and when this should be fixed, the lack of a Unix-like shell will cause problems with makefile rules, especially lines of the form &lt;code&gt;cd
sdbm &amp;amp;&amp;amp; make all&lt;/code&gt; , and anything using quoting.</source>
          <target state="translated">Теоретически расширения и XS могут создавать все, кто использует бесплатные инструменты. На практике многие этого не делают, поскольку пользователи платформы Acorn привыкли к двоичным дистрибутивам. MakeMaker работает, но ни одна из доступных в настоящее время make файлов не справляется с make-файлами MakeMaker; даже если и когда это должно быть исправлено, отсутствие Unix-подобной оболочки вызовет проблемы с правилами make-файла, особенно со строками в форме &lt;code&gt;cd sdbm &amp;amp;&amp;amp; make all&lt;/code&gt; и всем , что использует кавычки.</target>
        </trans-unit>
        <trans-unit id="f8be19ac765682f953ef7dfbb23fec79e7869c76" translate="yes" xml:space="preserve">
          <source>Extensions may be built either using the contents of the perl source directory tree or from the installed perl library. The recommended way is to build extensions after you have run 'make install' on perl itself. You can do that in any directory on your hard disk that is not below the perl source tree. The support for extensions below the ext directory of the perl distribution is only good for the standard extensions that come with perl.</source>
          <target state="translated">Расширения могут быть собраны как из содержимого дерева исходных каталогов perl,так и из установленной библиотеки perl.Рекомендуется собирать расширения после того,как вы запустили 'make install' на perl.Вы можете сделать это в любом каталоге на жестком диске,который не находится ниже дерева исходных текстов perl.Поддержка расширений,расположенных ниже каталога ext дистрибутива perl,хороша только для стандартных расширений,поставляемых вместе с perl.</target>
        </trans-unit>
        <trans-unit id="fd1105050ae42d352634f9a22fd2cfbe7c3340ac" translate="yes" xml:space="preserve">
          <source>Extensions.U</source>
          <target state="translated">Extensions.U</target>
        </trans-unit>
        <trans-unit id="8e77bd8de5230e7d94a54f34b54e4ee866ebaf07" translate="yes" xml:space="preserve">
          <source>External Subroutines (XS)</source>
          <target state="translated">Внешние подпрограммы (XS)</target>
        </trans-unit>
        <trans-unit id="fe58f6fb5713c9d9970ba20c8c7e99ac12d8ebd1" translate="yes" xml:space="preserve">
          <source>External scripts may be called by their basename. Perl will try the same extensions as when processing &lt;b&gt;-S&lt;/b&gt; command-line switch.</source>
          <target state="translated">Внешние скрипты могут вызываться по их базовому имени. Perl будет пробовать те же расширения, что и при обработке ключа командной строки &lt;b&gt;-S&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="ac98225101654b1670f972aaf6165f07d86a4dc2" translate="yes" xml:space="preserve">
          <source>External scripts starting with &lt;code&gt;#!&lt;/code&gt; or &lt;code&gt;extproc &lt;/code&gt; will be executed directly, without calling the shell, by calling the program specified on the rest of the first line.</source>
          <target state="translated">Внешние скрипты, начинающиеся с &lt;code&gt;#!&lt;/code&gt; или &lt;code&gt;extproc &lt;/code&gt; будет выполняться напрямую, без вызова оболочки, путем вызова программы, указанной в оставшейся части первой строки.</target>
        </trans-unit>
        <trans-unit id="26bf182753057236397eb723fd4891db5f117a3e" translate="yes" xml:space="preserve">
          <source>External subroutines (XSUBs) that maintain their own global state may not work correctly. Such XSUBs will either need to maintain locks to protect simultaneous access to global data from different pseudo-processes, or maintain all their state on the Perl symbol table, which is copied naturally when fork() is called. A callback mechanism that provides extensions an opportunity to clone their state will be provided in the near future.</source>
          <target state="translated">Внешние подпрограммы (XSUB),которые поддерживают свое собственное глобальное состояние,могут работать некорректно.Такие XSUBs должны будут либо поддерживать блокировки для защиты одновременного доступа к глобальным данным от различных псевдо-процессов,либо поддерживать все свое состояние на таблице символов Perl,которая естественным образом копируется при вызове fork().Механизм обратного вызова,обеспечивающий расширение возможности клонирования их состояния,будет предоставлен в ближайшем будущем.</target>
        </trans-unit>
        <trans-unit id="fc2399f06f4a8800f1e9f8c63e75b404573137c6" translate="yes" xml:space="preserve">
          <source>Extname</source>
          <target state="translated">Extname</target>
        </trans-unit>
        <trans-unit id="38bd9c2b38d963363075f657df2649a5a865d34f" translate="yes" xml:space="preserve">
          <source>Extra RECNO Methods</source>
          <target state="translated">Дополнительные методы RECNO</target>
        </trans-unit>
        <trans-unit id="f428c72b95856a35d58cb6523d1d9bf0d7e2e713" translate="yes" xml:space="preserve">
          <source>Extra debugging of how tries execute.</source>
          <target state="translated">Дополнительная отладка того,как пытаются выполнить.</target>
        </trans-unit>
        <trans-unit id="8d0f7f868e14cfcf2986def25df2bc4196200327" translate="yes" xml:space="preserve">
          <source>Extra layers can be inserted to process the data as it flows through. This was the driving need for including the scheme in perl 5.7.0+ - we needed a mechanism to allow data to be translated between perl's internal encoding (conceptually at least Unicode as UTF-8), and the &quot;native&quot; format used by the system. This is provided by the &quot;:encoding(xxxx)&quot; layer which typically sits above the buffering layer.</source>
          <target state="translated">Для обработки данных по мере их прохождения можно вставлять дополнительные слои.Это было вызвано необходимостью включения схемы в perl 5.7.0+-нам нужен был механизм,позволяющий переводить данные между внутренней кодировкой perl (концептуально как минимум Unicode в виде UTF-8)и &quot;родным&quot; форматом,используемым системой.Это обеспечивается слоем &quot;:кодировки(xxxx)&quot;,который обычно располагается над буферным слоем.</target>
        </trans-unit>
        <trans-unit id="678bd1bdccc15e114b793e04d18d631885eca63c" translate="yes" xml:space="preserve">
          <source>Extract delimited text sequences from strings.</source>
          <target state="translated">Извлечение из строк разделенных текстовых последовательностей.</target>
        </trans-unit>
        <trans-unit id="7254948dbbd318f1e97d0a1eeb40a1eb2d41c79b" translate="yes" xml:space="preserve">
          <source>Extract it like this</source>
          <target state="translated">Извлечь его вот так</target>
        </trans-unit>
        <trans-unit id="05a2f0e61aa11822c7799b10cf19bd9f231551af" translate="yes" xml:space="preserve">
          <source>Extract it to a spaceless path but not into the perl build source. Don't extract it into the same directory as celib. Make a copy of the &quot;wince-arm-pocket-wce300&quot; folder and rename the copy to &quot;wince-arm-pocket-wce400&quot;. This is a hack so we can build a CE 4.0 binary by linking in CE 3.0 ARM asm; the linker doesn't care. Windows Mobile/WinCE are backwards compatible with machine code like Desktop Windows.</source>
          <target state="translated">Извлеките его по безпространственному пути,но не в источник сборки perl.Не извлекайте его в тот же каталог,что и celib.Сделайте копию папки &quot;wince-arm-pocket-wce300&quot; и переименуйте её в &quot;wince-arm-pocket-wce400&quot;.Это хак,так что мы можем собрать двоичный файл CE 4.0,соединив его с CE 3.0 ARM asm;компоновщику все равно.Windows Mobile/WinCE обратно совместимы с машинным кодом,таким как Desktop Windows.</target>
        </trans-unit>
        <trans-unit id="7749ca362c5039000e30519eec908556e69a793e" translate="yes" xml:space="preserve">
          <source>Extract it to a spaceless path but not into the perl build source. I call this directory &quot;celib-palm-3.0&quot; but in the GitHub snapshot it will be called &quot;celib-master&quot;. Make a copy of the &quot;wince-arm-pocket-wce300-release&quot; folder and rename the copy to &quot;wince-arm-pocket-wce400&quot;. This is a hack so we can build a CE 4.0 binary by linking in CE 3.0 ARM asm; the linker doesn't care. Windows Mobile/WinCE are backwards compatible with machine code like Desktop Windows.</source>
          <target state="translated">Извлеките его по безпространственному пути,но не в источник сборки perl.Я называю этот каталог &quot;celib-palm-3.0&quot;,но в снимке GitHub он будет называться &quot;celib-master&quot;.Сделайте копию папки &quot;wince-arm-pocket-wce300-release&quot; и переименуйте её в &quot;wince-arm-pocket-wce400&quot;.Это хак,так что мы можем собрать двоичный файл CE 4.0,соединив его с CE 3.0 ARM asm;компоновщику всё равно.Windows Mobile/WinCE обратно совместимы с машинным кодом,таким как Desktop Windows.</target>
        </trans-unit>
        <trans-unit id="6a5aa60c177bb5d75235a8c111f9e4b6cea8ac1c" translate="yes" xml:space="preserve">
          <source>Extract selected sections of POD from input</source>
          <target state="translated">Извлечь выбранные участки POD из входа</target>
        </trans-unit>
        <trans-unit id="48348ed6315b959bdb6c19c5f46693033fe9a289" translate="yes" xml:space="preserve">
          <source>Extract this object, optionally to an alternative name.</source>
          <target state="translated">Извлеките этот объект,опционально под альтернативным именем.</target>
        </trans-unit>
        <trans-unit id="700d36da6316894ea4553b7a4764bc2e9b2ffb63" translate="yes" xml:space="preserve">
          <source>Extracted from core distribution for publishing on the CPAN by S&amp;eacute;bastien Aperghis-Tramoni &amp;lt;sebastien (at) aperghis.net&amp;gt;.</source>
          <target state="translated">Извлечено из основного дистрибутива для публикации на CPAN Себастьяном Апергис-Трамони &amp;lt;sebastien (at) aperghis.net&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="33342b226b64c6cbc40d180e3ba186ad44a5f06f" translate="yes" xml:space="preserve">
          <source>Extracting matches</source>
          <target state="translated">Извлечение спичек</target>
        </trans-unit>
        <trans-unit id="16e9f64b08e09da9325dc889d58611a8376664da" translate="yes" xml:space="preserve">
          <source>Extracts a substring out of EXPR and returns it. First character is at offset zero. If OFFSET is negative, starts that far back from the end of the string. If LENGTH is omitted, returns everything through the end of the string. If LENGTH is negative, leaves that many characters off the end of the string.</source>
          <target state="translated">Извлекает подстроку из EXPR и возвращает ее.Первый символ находится в нулевом смещении.Если OFFSET отрицательный,начинается так далеко от конца строки.Если LENGTH опущен,возвращает все через конец строки.Если LENGTH отрицательный,оставляет так много символов вне конца строки.</target>
        </trans-unit>
        <trans-unit id="7e02013b2bc8b8b15efdd928d9932b054c7620a2" translate="yes" xml:space="preserve">
          <source>Extracts the contents of the tar file. The first argument can either be the name of the tar file to create or a reference to an open file handle (e.g. a GLOB reference). All relative paths in the tar file will be created underneath the current working directory.</source>
          <target state="translated">Извлекает содержимое файла tar.Первым аргументом может быть либо имя создаваемого tar-файла,либо ссылка на открытый дескриптор файла (например,GLOB-ссылка).Все относительные пути в tar-файле будут созданы под текущей рабочей директорией.</target>
        </trans-unit>
        <trans-unit id="885f6e090c877a36591aaa902dd00c6dd7b9efec" translate="yes" xml:space="preserve">
          <source>Extras.U</source>
          <target state="translated">Extras.U</target>
        </trans-unit>
        <trans-unit id="42f25b6a320c5687fd271f37b1ee97e7d69228f2" translate="yes" xml:space="preserve">
          <source>Extremely similar to open2(), open3() spawns the given $cmd and connects CHLD_OUT for reading from the child, CHLD_IN for writing to the child, and CHLD_ERR for errors. If CHLD_ERR is false, or the same file descriptor as CHLD_OUT, then STDOUT and STDERR of the child are on the same filehandle (this means that an autovivified lexical cannot be used for the STDERR filehandle, see SYNOPSIS). The CHLD_IN will have autoflush turned on.</source>
          <target state="translated">Чрезвычайно похожая на open2(),open3()порождает заданный $cmd и соединяет CHLD_OUT для чтения с дочерним,CHLD_IN для записи с дочерним,и CHLD_ERR для ошибок.Если CHLD_ERR-false,или тот же самый файловый дескриптор,что и CHLD_OUT,то STDOUT и STDERR дочернего элемента находятся в одной файловой оболочке (это означает,что для файловой оболочки STDERR нельзя использовать автоповидимый лексикон,см.SYNOPSIS).В CHLD_IN будет включена автопромывка.</target>
        </trans-unit>
        <trans-unit id="d2122187dffca50e0b79b010ea05ebfa6a4d1181" translate="yes" xml:space="preserve">
          <source>Extshortname</source>
          <target state="translated">Extshortname</target>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="ade1d38216915151ba7db0ce62f3199d7bf8e743" translate="yes" xml:space="preserve">
          <source>F:/bin</source>
          <target state="translated">F:/bin</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="65569c995a4785c8ee0ddac72f9a5d5496ad6056" translate="yes" xml:space="preserve">
          <source>FAQs, tricks and tips for &lt;code&gt;ExtUtils::MakeMaker&lt;/code&gt; .</source>
          <target state="translated">Часто задаваемые вопросы, приемы и подсказки по &lt;code&gt;ExtUtils::MakeMaker&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dec5a3344b6b1da0ebe322bd0a2dfc8eb4528955" translate="yes" xml:space="preserve">
          <source>FATAL errors will cause the program to halt (&lt;code&gt;croak&lt;/code&gt; ), since the problem is so severe that it would be dangerous to continue. (This can always be trapped with &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, but it's not a good idea. Under the circumstances, dying is the best thing to do).</source>
          <target state="translated">ФАТАЛЬНЫЕ ошибки приведут к остановке программы ( &lt;code&gt;croak&lt;/code&gt; ), поскольку проблема настолько серьезна, что было бы опасно продолжать. (Это всегда можно поймать с помощью &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; , но это плохая идея. В данных обстоятельствах лучше всего умереть).</target>
        </trans-unit>
        <trans-unit id="69754788a4c6beb4ec0ff140aa5c158dca3bfa2a" translate="yes" xml:space="preserve">
          <source>FB_CROAK</source>
          <target state="translated">FB_CROAK</target>
        </trans-unit>
        <trans-unit id="b626cf33b4a041c5ce4d521b41bf3a7b58bd485d" translate="yes" xml:space="preserve">
          <source>FB_DEFAULT</source>
          <target state="translated">FB_DEFAULT</target>
        </trans-unit>
        <trans-unit id="757934dd26eb29cb3152a5f387ec3d2edb168405" translate="yes" xml:space="preserve">
          <source>FB_PERLQQ FB_HTMLCREF FB_XMLCREF</source>
          <target state="translated">FB_PERLQQ FB_HTMLCREF FB_XMLCREF</target>
        </trans-unit>
        <trans-unit id="0a74cbd8c5cb0982de1a9bcfa6850e000455346d" translate="yes" xml:space="preserve">
          <source>FB_QUIET</source>
          <target state="translated">FB_QUIET</target>
        </trans-unit>
        <trans-unit id="0dd7f31fe0e5f67c669f4440fb273121e4c806e4" translate="yes" xml:space="preserve">
          <source>FB_WARN</source>
          <target state="translated">FB_WARN</target>
        </trans-unit>
        <trans-unit id="8e8b3f3bb48e9f1566f046dd9abec5d58654f4a5" translate="yes" xml:space="preserve">
          <source>FCNTL</source>
          <target state="translated">FCNTL</target>
        </trans-unit>
        <trans-unit id="47dadeeeb2bc9f5421eaa6bbbe50810a393d4c66" translate="yes" xml:space="preserve">
          <source>FEATURE BUNDLES</source>
          <target state="translated">ФУНКЦИОНАЛЬНЫЕ НАБОРЫ</target>
        </trans-unit>
        <trans-unit id="ec8e87c2f7d4da8aaca114d6270ea98cb522428f" translate="yes" xml:space="preserve">
          <source>FEATURES = less-&amp;gt;of()</source>
          <target state="translated">ОСОБЕННОСТИ = меньше-&amp;gt; из ()</target>
        </trans-unit>
        <trans-unit id="489edc9160737f1f5321c8439e0d90f85d95108c" translate="yes" xml:space="preserve">
          <source>FEEDBACK</source>
          <target state="translated">FEEDBACK</target>
        </trans-unit>
        <trans-unit id="c895bf1dc50f257bb516434bac2edbda6ee48875" translate="yes" xml:space="preserve">
          <source>FETCHSIZE and STORESIZE are used to provide &lt;code&gt;$#array&lt;/code&gt; and equivalent &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(@array)&lt;/a&gt;&lt;/code&gt; access.</source>
          <target state="translated">FETCHSIZE и STORESIZE используются для предоставления доступа к &lt;code&gt;$#array&lt;/code&gt; и эквивалентному &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(@array)&lt;/a&gt;&lt;/code&gt; доступу.</target>
        </trans-unit>
        <trans-unit id="3f799155fde6a8df0e53471e8ebc22e51aee5205" translate="yes" xml:space="preserve">
          <source>FIFO (named pipe).</source>
          <target state="translated">FIFO (названная труба).</target>
        </trans-unit>
        <trans-unit id="b4915d3a7ef82abdf96f2b5042452a69b2ea344c" translate="yes" xml:space="preserve">
          <source>FILE</source>
          <target state="translated">FILE</target>
        </trans-unit>
        <trans-unit id="65f4de99dee3e085c7a32fb60bb9eaf5617a70cd" translate="yes" xml:space="preserve">
          <source>FILEHANDLE may be an expression whose value can be used as an indirect filehandle, usually the real filehandle name or an autovivified handle.</source>
          <target state="translated">FILEHANDLE может быть выражением,значение которого может быть использовано в качестве косвенного файлового дескриптора,обычно это настоящее имя файлового дескриптора или автоповидимый дескриптор.</target>
        </trans-unit>
        <trans-unit id="eb6788548cba81bf001baaa9f81e8e517a13289b" translate="yes" xml:space="preserve">
          <source>FILEHANDLE may be an expression whose value gives the name of the actual filehandle. Thus:</source>
          <target state="translated">FILEHANDLE может быть выражением,значение которого дает имя реального файла-обработчика.Таким образом:</target>
        </trans-unit>
        <trans-unit id="9fb4f1d17ef878fbfbe96076658397ad86bd5264" translate="yes" xml:space="preserve">
          <source>FILES</source>
          <target state="translated">FILES</target>
        </trans-unit>
        <trans-unit id="9632a4abb88bdcc736407e7934b81d79fbb78781" translate="yes" xml:space="preserve">
          <source>FINDING YOUR WAY AROUND</source>
          <target state="translated">НАХОДИТЬ СПОСОБ ОБОЙТИ</target>
        </trans-unit>
        <trans-unit id="059c8321d5ceafe9f97e631f972d839dbaf5b1d5" translate="yes" xml:space="preserve">
          <source>FIONREAD requires a filehandle connected to a stream, meaning that sockets, pipes, and tty devices work, but</source>
          <target state="translated">FIONREAD требует,чтобы файловая ручка была подключена к потоку,что означает,что розетки,трубы и tty устройства работают,но</target>
        </trans-unit>
        <trans-unit id="f1c14024d456e253b8073d3a89752d6ea8200326" translate="yes" xml:space="preserve">
          <source>FIRSTKEY and NEXTKEY methods go through the keys which were already read, not all the possible keys of the hash.</source>
          <target state="translated">Методы FIRSTKEY и NEXTKEY проходят через уже прочитанные ключи,не все возможные ключи хэша.</target>
        </trans-unit>
        <trans-unit id="df2badbb417734bff12c2cd1ce6852a857e8b49b" translate="yes" xml:space="preserve">
          <source>FLAG VALUES</source>
          <target state="translated">ФЛАГСКИЕ ЦЕННОСТИ</target>
        </trans-unit>
        <trans-unit id="cd98ae36981ee80a267c314ec60000c7f9d30870" translate="yes" xml:space="preserve">
          <source>FLOAT</source>
          <target state="translated">FLOAT</target>
        </trans-unit>
        <trans-unit id="73449ef74937cb8a715e6e9b0bcd4bb4e19f070f" translate="yes" xml:space="preserve">
          <source>FLOATING-POINT ENVIRONMENT</source>
          <target state="translated">СРЕДА С ПЛАВАЮЩЕЙ ЗАПЯТОЙ</target>
        </trans-unit>
        <trans-unit id="a27448e44064a3e71d47db864ec6590331ae24db" translate="yes" xml:space="preserve">
          <source>FOR MODULE AUTHORS</source>
          <target state="translated">ДЛЯ АВТОРОВ МОДУЛЕЙ</target>
        </trans-unit>
        <trans-unit id="197bc57f95ecd67e69c42b441c686af9b56b66a3" translate="yes" xml:space="preserve">
          <source>FORMAT CONTROL ATTRIBUTES</source>
          <target state="translated">АТРИБУТЫ УПРАВЛЕНИЯ ФОРМАТОМ</target>
        </trans-unit>
        <trans-unit id="8c6077236f8ea6885b307ca6cfaf9346871ddc06" translate="yes" xml:space="preserve">
          <source>FORMAT is the</source>
          <target state="translated">Формат</target>
        </trans-unit>
        <trans-unit id="ec5814e0479ce0db049db2be1669d632fac6aa3f" translate="yes" xml:space="preserve">
          <source>FORMATTERS</source>
          <target state="translated">FORMATTERS</target>
        </trans-unit>
        <trans-unit id="d660f8cca36ec17fdb320607d854df06b0b01126" translate="yes" xml:space="preserve">
          <source>FORMATTING SPECIFICATIONS</source>
          <target state="translated">СПЕЦИФИКАЦИИ ФОРМАТИРОВАНИЯ</target>
        </trans-unit>
        <trans-unit id="d8b9930b588cfbff9ca8c2607a532bbe28f9a623" translate="yes" xml:space="preserve">
          <source>FORWARD COMPATIBILITY</source>
          <target state="translated">ПРЯМАЯ СОВМЕСТИМОСТЬ</target>
        </trans-unit>
        <trans-unit id="ac03725b51e3b18352fbcf923063a48e12b26314" translate="yes" xml:space="preserve">
          <source>FREQUENTLY ASKED QUESTIONS</source>
          <target state="translated">ЧАСТО ЗАДАВАЕМЫЕ ВОПРОСЫ</target>
        </trans-unit>
        <trans-unit id="6496f6c84e390b28e94f50597c1286993f14328b" translate="yes" xml:space="preserve">
          <source>FROM THE COMMAND LINE</source>
          <target state="translated">ИЗ КОМАНДНОЙ СТРОКИ</target>
        </trans-unit>
        <trans-unit id="8872dc813208d15328cb72820a6753a9ddec0776" translate="yes" xml:space="preserve">
          <source>FTP Archives for Perl Modules:</source>
          <target state="translated">Архивы FTP для модулей Perl:</target>
        </trans-unit>
        <trans-unit id="13add5d8be99c7156e522d0830855d1224598c3d" translate="yes" xml:space="preserve">
          <source>FTP Client class</source>
          <target state="translated">класс FTP-клиента</target>
        </trans-unit>
        <trans-unit id="99c6dd16cd765c469c507fe9b03fc9fa2810bf50" translate="yes" xml:space="preserve">
          <source>FTP Client data connection class</source>
          <target state="translated">Класс подключения данных FTP-клиента</target>
        </trans-unit>
        <trans-unit id="d6fc2619f665877d169e9fca0155476e2dbf2fb4" translate="yes" xml:space="preserve">
          <source>FTP servers can work in passive or active mode. Active mode is when you want to transfer data you have to tell the server the address and port to connect to. Passive mode is when the server provide the address and port and you establish the connection.</source>
          <target state="translated">FTP-серверы могут работать в пассивном или активном режиме.Активный режим-это когда вы хотите передать данные,вам нужно сообщить серверу адрес и порт для подключения.Пассивный режим-это когда сервер сообщает адрес и порт и вы устанавливаете соединение.</target>
        </trans-unit>
        <trans-unit id="d4fa87de490d6c1ca8c48ecbbdf1e0921be54835" translate="yes" xml:space="preserve">
          <source>FTP stands for File Transfer Protocol. It is a way of transferring files between networked machines. The protocol defines a client (whose commands are provided by this module) and a server (not implemented in this module). Communication is always initiated by the client, and the server responds with a message and a status code (and sometimes with data).</source>
          <target state="translated">FTP означает протокол передачи файлов.Это способ передачи файлов между сетевыми машинами.Протокол определяет клиента (команды которого предоставляются данным модулем)и сервер (не реализованный в данном модуле).Связь всегда инициируется клиентом,а сервер отвечает сообщением и кодом состояния (а иногда и данными).</target>
        </trans-unit>
        <trans-unit id="63425456f14a800f08b688a005e2e85f84241751" translate="yes" xml:space="preserve">
          <source>FUNCTION</source>
          <target state="translated">FUNCTION</target>
        </trans-unit>
        <trans-unit id="f8bdd6d62e62677a02e5dc952820aa27e8b6384e" translate="yes" xml:space="preserve">
          <source>FUNCTION DIFFERENCES</source>
          <target state="translated">ФУНКЦИОНАЛЬНЫЕ РАЗЛИЧИЯ</target>
        </trans-unit>
        <trans-unit id="9633f16041f6cad3a579e87f0baed24ec359c5c9" translate="yes" xml:space="preserve">
          <source>FUNCTION IMPLEMENTATIONS</source>
          <target state="translated">ФУНКЦИОНАЛЬНЫЕ ВНЕДРЕНИЯ</target>
        </trans-unit>
        <trans-unit id="a54261bf699a2c75d951095758dc3d3d9845baef" translate="yes" xml:space="preserve">
          <source>FUNCTION SPECIFIC NOTES</source>
          <target state="translated">ФУНКЦИОНАЛЬНЫЕ ОСОБЕННОСТИ</target>
        </trans-unit>
        <trans-unit id="e0639bb5342fee4e8d445f26b3a0278cc2fe4679" translate="yes" xml:space="preserve">
          <source>FUNCTIONS</source>
          <target state="translated">FUNCTIONS</target>
        </trans-unit>
        <trans-unit id="256018c65b4eb744f4377a13a19d91631c659dd4" translate="yes" xml:space="preserve">
          <source>FUNCTIONS API</source>
          <target state="translated">API ФУНКЦИИ</target>
        </trans-unit>
        <trans-unit id="a8b599c6c2d22b5945b690bad2739bb459f033f6" translate="yes" xml:space="preserve">
          <source>FUNCTIONS FOR REFERENCES</source>
          <target state="translated">ФУНКЦИИ ДЛЯ СПРАВОК</target>
        </trans-unit>
        <trans-unit id="546e2c9a8685e17aa5c5cf752632f067b0b1ac92" translate="yes" xml:space="preserve">
          <source>FURTHER READING</source>
          <target state="translated">ДОПОЛНИТЕЛЬНЫЕ МАТЕРИАЛЫ ДЛЯ ЧТЕНИЯ</target>
        </trans-unit>
        <trans-unit id="9d0a833e883c67f6559509334a96f848be9e54ed" translate="yes" xml:space="preserve">
          <source>Facilities</source>
          <target state="translated">Facilities</target>
        </trans-unit>
        <trans-unit id="0b8af03a8ba1e4c01fa3396b94568da207e2f7a3" translate="yes" xml:space="preserve">
          <source>Factory for creating TAP::Parser output objects</source>
          <target state="translated">Фабрика для создания TAP::Parser выходных объектов</target>
        </trans-unit>
        <trans-unit id="607919027b2a9b94755ff24dee0db004455fddf6" translate="yes" xml:space="preserve">
          <source>Failover to different communication modes by Nick Williams &amp;lt;</source>
          <target state="translated">Переход к различным режимам связи Ник Вильямс &amp;lt;</target>
        </trans-unit>
        <trans-unit id="c563018d20418391a3a741571c4b388d5e704fb2" translate="yes" xml:space="preserve">
          <source>Fails if the Perl DLL found via &lt;code&gt;BEGINLIBPATH&lt;/code&gt; is different from what was loaded on step 1; e.g., another process could have loaded it from &lt;code&gt;LIBPATH&lt;/code&gt; or from a different value of &lt;code&gt;BEGINLIBPATH&lt;/code&gt; . In these cases one needs to modify the setting of the system so that this other process either does not run, or loads the DLL from &lt;code&gt;BEGINLIBPATH&lt;/code&gt; with &lt;code&gt;LIBPATHSTRICT=T&lt;/code&gt; (available with kernels after September 2000).</source>
          <target state="translated">Ошибка, если Perl DLL, найденная через &lt;code&gt;BEGINLIBPATH&lt;/code&gt; , отличается от того, что было загружено на шаге 1; например, другой процесс мог загрузить его из &lt;code&gt;LIBPATH&lt;/code&gt; или из другого значения &lt;code&gt;BEGINLIBPATH&lt;/code&gt; . В этих случаях необходимо изменить настройки системы, чтобы этот другой процесс либо не запускался, либо &lt;code&gt;BEGINLIBPATH&lt;/code&gt; DLL из BEGINLIBPATH с &lt;code&gt;LIBPATHSTRICT=T&lt;/code&gt; (доступно с ядрами после сентября 2000 г.).</target>
        </trans-unit>
        <trans-unit id="6c5f423c103a5bffe6de7613de2373184d36088d" translate="yes" xml:space="preserve">
          <source>Fails if the original</source>
          <target state="translated">Не удается,если оригинал</target>
        </trans-unit>
        <trans-unit id="dd78511c1283702ad2bb60da575ac2d0ff18ab16" translate="yes" xml:space="preserve">
          <source>Failure of user callbacks dispatched using the &lt;code&gt;G_KEEPERR&lt;/code&gt; flag could also result in this warning. See &lt;a href=&quot;perlcall#G_KEEPERR&quot;&gt;G_KEEPERR in perlcall&lt;/a&gt;.</source>
          <target state="translated">Сбой обратных вызовов пользователя, отправленных с использованием флага &lt;code&gt;G_KEEPERR&lt;/code&gt; , также может привести к этому предупреждению. См. &lt;a href=&quot;perlcall#G_KEEPERR&quot;&gt;G_KEEPERR в perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e175cd49340e07a19035148ceef428c5e5467b03" translate="yes" xml:space="preserve">
          <source>Failure to find a next method will result in an exception being thrown (see below for alternatives).</source>
          <target state="translated">Неспособность найти следующий метод приведет к тому,что будет выброшено исключение (альтернативы см.ниже).</target>
        </trans-unit>
        <trans-unit id="331a7d40c82f32a89c55031f2f7712cfb5b3bd07" translate="yes" xml:space="preserve">
          <source>Fairly young with a focus on HTML5 and real-time web technologies such as WebSockets.</source>
          <target state="translated">Довольно молодой,ориентированный на HTML5 и веб-технологии реального времени,такие как WebSockets.</target>
        </trans-unit>
        <trans-unit id="b3505bf50d858a8755043974e251138d06ee1ab4" translate="yes" xml:space="preserve">
          <source>Fake on-demand retrieval of outstanding PM messages. If &lt;code&gt;force&lt;/code&gt; is false, will not dispatch messages if a real message loop is known to be present. Returns number of messages retrieved.</source>
          <target state="translated">Поддельное получение по запросу незавершенных сообщений PM. Если &lt;code&gt;force&lt;/code&gt; имеет значение false, сообщения не будут отправляться, если известно, что существует реальный цикл сообщений. Возвращает количество полученных сообщений.</target>
        </trans-unit>
        <trans-unit id="6b7d9017d82f8622025ae6965855a1db0b5bb68b" translate="yes" xml:space="preserve">
          <source>Fall-through</source>
          <target state="translated">Fall-through</target>
        </trans-unit>
        <trans-unit id="fab000fc839ca496f91ba067964c48702895aed4" translate="yes" xml:space="preserve">
          <source>Fallback Data::Dumper and Storable</source>
          <target state="translated">Данные обратного отсчета::Дампера и накопителя</target>
        </trans-unit>
        <trans-unit id="2a4cf3efe7afe1d41140981a0335c8d83aa5d220" translate="yes" xml:space="preserve">
          <source>Fallback F</source>
          <target state="translated">Отступление F</target>
        </trans-unit>
        <trans-unit id="a969fb863f8d9f84c7595f93fb9e0917427160e1" translate="yes" xml:space="preserve">
          <source>Fallback for encoding -&amp;gt; unicode. When seen, enc2xs adds this character for the decode map only.</source>
          <target state="translated">Откат для кодировки -&amp;gt; юникод. При отображении enc2xs добавляет этот символ только для карты декодирования.</target>
        </trans-unit>
        <trans-unit id="c7fc9099ef21900d77c14fd9245e820c2f3bcb05" translate="yes" xml:space="preserve">
          <source>Fallback for unicode -&amp;gt; encoding. When seen, enc2xs adds this character for the encode map only.</source>
          <target state="translated">Откат для юникода -&amp;gt; кодировка. При отображении enc2xs добавляет этот символ только для карты кодирования.</target>
        </trans-unit>
        <trans-unit id="cc390dbd71040b4339ecd1673e22c52149414722" translate="yes" xml:space="preserve">
          <source>Family-neutral IP socket supporting both IPv4 and IPv6</source>
          <target state="translated">Семейно-нейтральный IP-сокет с поддержкой как IPv4,так и IPv6</target>
        </trans-unit>
        <trans-unit id="b4fab41a1c219c7c774d4d5b99f19bfff38b0e96" translate="yes" xml:space="preserve">
          <source>Fancy term for &lt;b&gt;tokenizing&lt;/b&gt;.</source>
          <target state="translated">Замечательный термин для &lt;b&gt;токенизации&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="94700cb17db6026703f0124336c1c74248aa0c67" translate="yes" xml:space="preserve">
          <source>Fancy term for a &lt;b&gt;token&lt;/b&gt;.</source>
          <target state="translated">Замечательный термин для &lt;b&gt;жетона&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="ae38f29ac6b64f59f2ed532d4ca0474fdf64d92e" translate="yes" xml:space="preserve">
          <source>Fancy term for a &lt;b&gt;tokener&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;Замечательный&lt;/b&gt; термин для &lt;b&gt;токенера&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="f5c2b89d95eac3e9d7a030078747e18b17f8f9e8" translate="yes" xml:space="preserve">
          <source>Far More Than Everything You Ever Wanted To Know. An exhaustive treatise on one narrow topic, something of a super-&lt;b&gt;FAQ&lt;/b&gt;. See Tom for far more.</source>
          <target state="translated">Намного больше, чем все, что вы когда-либо хотели знать. Исчерпывающий трактат по одной узкой теме, что-то вроде супер- &lt;b&gt;FAQ&lt;/b&gt; . См. Тома, чтобы узнать больше.</target>
        </trans-unit>
        <trans-unit id="97102c70808de7b8e3d760ebf0b36147b801055a" translate="yes" xml:space="preserve">
          <source>FastCalc works exactly like Calc, in stores the numbers in decimal form, chopped into parts.</source>
          <target state="translated">FastCalc работает в точности так же,как Calc,хранит числа в десятичной форме,измельченные на части.</target>
        </trans-unit>
        <trans-unit id="915120b00045631c4e8983c0043b1f79dd8a3042" translate="yes" xml:space="preserve">
          <source>Fatal</source>
          <target state="translated">Fatal</target>
        </trans-unit>
        <trans-unit id="b4aa64ef3bff004eb3090e0a608393aba194c2eb" translate="yes" xml:space="preserve">
          <source>Fatal - Replace functions with equivalents which succeed or die</source>
          <target state="translated">Фатальный-Замена функций на эквиваленты,которые успешно или умереть</target>
        </trans-unit>
        <trans-unit id="c4d463e2edaea59c2a65ec5996b3a03a5976f772" translate="yes" xml:space="preserve">
          <source>Fatal Warnings</source>
          <target state="translated">Смертельные предупреждения</target>
        </trans-unit>
        <trans-unit id="a4a739fca7ca0c79dbb282ff772c97aebe6957a9" translate="yes" xml:space="preserve">
          <source>Fcntl</source>
          <target state="translated">Fcntl</target>
        </trans-unit>
        <trans-unit id="e79e4cb9771eccd5b0301896c4fb88d90381fa77" translate="yes" xml:space="preserve">
          <source>Fcntl - load the C Fcntl.h defines</source>
          <target state="translated">Fcntl-загрузить C Fcntl.h определяет</target>
        </trans-unit>
        <trans-unit id="229c2035f4aec78ea8439cfaab9ef160e590f22f" translate="yes" xml:space="preserve">
          <source>Features can also be turned off by using &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature &quot;foo&quot;&lt;/code&gt; . This too has lexical effect.</source>
          <target state="translated">Возможности программы также можно отключить, используя не &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature &quot;foo&quot;&lt;/code&gt; . Это тоже имеет лексический эффект.</target>
        </trans-unit>
        <trans-unit id="d03d65a3c6febccc90e9f30f5a749117a92b9dcc" translate="yes" xml:space="preserve">
          <source>February 28, 2013</source>
          <target state="translated">28 февраля 2013 года</target>
        </trans-unit>
        <trans-unit id="23cf501c0a2b5c8f4c1ddd40cb4a07d73b755042" translate="yes" xml:space="preserve">
          <source>February, 2004; by Chia-liang Kao: make cmpthese and timestr use time statistics for children instead of parent when the style is 'nop'.</source>
          <target state="translated">Февраль,2004;по Chia-liang Kao:сделайте cmpthese и timestr использовать статистику времени для детей вместо родителя,когда стиль 'nop'.</target>
        </trans-unit>
        <trans-unit id="1d3095f775b3bd756ca42dc28dbbcb522fa556f5" translate="yes" xml:space="preserve">
          <source>Feel free to add any member data fields you need to keep track of things like current font, indentation, horizontal or vertical position, or whatever else you like. Be sure to read &lt;a href=&quot;#PRIVATE-METHODS-AND-DATA&quot;&gt;PRIVATE METHODS AND DATA&lt;/a&gt; to avoid name collisions.</source>
          <target state="translated">Не стесняйтесь добавлять любые поля данных участников, которые вам нужны, чтобы отслеживать такие вещи, как текущий шрифт, отступ, горизонтальное или вертикальное положение или что-то еще, что вам нравится. Обязательно прочтите &lt;a href=&quot;#PRIVATE-METHODS-AND-DATA&quot;&gt;ЧАСТНЫЕ МЕТОДЫ И ДАННЫЕ,&lt;/a&gt; чтобы избежать конфликтов имен.</target>
        </trans-unit>
        <trans-unit id="70cbb102105e81fb1b4636c361737ff2e64d0599" translate="yes" xml:space="preserve">
          <source>Feel free to update the ticket about your bug on &lt;a href=&quot;http://rt.perl.org&quot;&gt;http://rt.perl.org&lt;/a&gt; if a new version of Perl is released and your bug is still present.</source>
          <target state="translated">Не стесняйтесь обновлять заявку о своей ошибке на &lt;a href=&quot;http://rt.perl.org&quot;&gt;http://rt.perl.org,&lt;/a&gt; если выпущена новая версия Perl, а ваша ошибка все еще присутствует.</target>
        </trans-unit>
        <trans-unit id="fd7064e4dbef9d61b58b480cbcce388f810d38f0" translate="yes" xml:space="preserve">
          <source>Fetch a specified numbered capture. &lt;code&gt;sv&lt;/code&gt; should be set to the scalar to return, the scalar is passed as an argument rather than being returned from the function because when it's called Perl already has a scalar to store the value, creating another one would be redundant. The scalar can be set with &lt;code&gt;sv_setsv&lt;/code&gt; , &lt;code&gt;sv_setpvn&lt;/code&gt; and friends, see &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;.</source>
          <target state="translated">Получите заданный пронумерованный захват. &lt;code&gt;sv&lt;/code&gt; должен быть установлен на скаляр для возврата, скаляр передается как аргумент, а не возвращается из функции, потому что, когда он вызывается, Perl уже имеет скаляр для хранения значения, создание другого будет излишним. &lt;code&gt;sv_setsv&lt;/code&gt; можно установить с помощью sv_setsv , &lt;code&gt;sv_setpvn&lt;/code&gt; и других, см. &lt;a href=&quot;perlapi&quot;&gt;Perlapi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="361d18ac190751239212937c28a02d801b3fdb96" translate="yes" xml:space="preserve">
          <source>Fetch and install dmake somewhere on your path.</source>
          <target state="translated">Найдите и установите dmake где-нибудь на вашем пути.</target>
        </trans-unit>
        <trans-unit id="804d920af683a75f739608bbcb40c81ec9c0980c" translate="yes" xml:space="preserve">
          <source>Fetches the file you requested and returns the full path to the file.</source>
          <target state="translated">Получает запрошенный файл и возвращает полный путь к файлу.</target>
        </trans-unit>
        <trans-unit id="827c97bde84978a3bb98e5034a1b606013a63c45" translate="yes" xml:space="preserve">
          <source>Fetches the pad name from the given index.</source>
          <target state="translated">Получает имя колодки из данного индекса.</target>
        </trans-unit>
        <trans-unit id="70b0630621dc693a0b82b1ac72066204ea3cb1ff" translate="yes" xml:space="preserve">
          <source>Fiddling with the Perl stack from your C program</source>
          <target state="translated">Сложность со стеком Perl из вашей программы на C</target>
        </trans-unit>
        <trans-unit id="5264e2b4a8e426bffe920139d4498e83c17f919e" translate="yes" xml:space="preserve">
          <source>FieldHash-based inside-out implementation. Object registry happens automatically. No destructor is needed and objects are thread safe.</source>
          <target state="translated">Внутреннее внедрение на базе FieldHash.Реестр объектов происходит автоматически.Деструктор не требуется,а объекты являются потокобезопасными.</target>
        </trans-unit>
        <trans-unit id="07d174584450454292329995c0541462f26066d7" translate="yes" xml:space="preserve">
          <source>Fields are as follows:</source>
          <target state="translated">Поля выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="6d320afb6b0630e1ccda485797b8576696531e08" translate="yes" xml:space="preserve">
          <source>Fields that aren't applicable to the particular code point argument exist in the returned hash, and are empty.</source>
          <target state="translated">Поля,которые не применимы к конкретному аргументу точки кода,существуют в возвращаемом хэше и пусты.</target>
        </trans-unit>
        <trans-unit id="659f180bfdb0412ca17466a6655bb668ede0196b" translate="yes" xml:space="preserve">
          <source>Figures out which SourceHandler objects to use for a given Source</source>
          <target state="translated">Выясняет,какие объекты SourceHandler использовать для данного Source</target>
        </trans-unit>
        <trans-unit id="4b9b547e63da9c5d210106fd0343b71348efc18f" translate="yes" xml:space="preserve">
          <source>Figuring out the hexadecimal sequence of a Unicode character you want or deciphering someone else's hexadecimal Unicode regexp is about as much fun as programming in machine code. So another way to specify Unicode characters is to use the</source>
          <target state="translated">Вычислить нужную вам шестнадцатеричную последовательность символов Юникода или расшифровать чужой шестнадцатеричный юникодный регеxp-это примерно так же увлекательно,как программирование в машинном коде.Так что еще один способ указать символы Юникода-это использовать</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="00acd6f7be2c3aca96cab1792dd9c533c4fb99b0" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;RPC.pm&lt;/code&gt; : Perl module for the RPC extension.</source>
          <target state="translated">Файл &lt;code&gt;RPC.pm&lt;/code&gt; : Perl-модуль для расширения RPC.</target>
        </trans-unit>
        <trans-unit id="2572733e62323918ecd19b3a5f28f1fad3d4a4e6" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;RPC.xs&lt;/code&gt; : Interface to some ONC+ RPC bind library functions.</source>
          <target state="translated">Файл &lt;code&gt;RPC.xs&lt;/code&gt; : интерфейс для некоторых функций библиотеки связывания ONC + RPC.</target>
        </trans-unit>
        <trans-unit id="0858ff16b7316b0da87cf27e491f57eeba0e7c11" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;rpctest.pl&lt;/code&gt; : Perl test program for the RPC extension.</source>
          <target state="translated">Файл &lt;code&gt;rpctest.pl&lt;/code&gt; : программа тестирования Perl для расширения RPC.</target>
        </trans-unit>
        <trans-unit id="89663ab01d6a733daa8d8f050b0e4c86205af531" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;typemap&lt;/code&gt; : Custom typemap for RPC.xs. (cf. &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;typemap&lt;/code&gt; файлов : Пользовательская карта типов для RPC.xs. (см. &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="0d73d8626a39dd86d3fe7032f41a3ecc0c3dd715" translate="yes" xml:space="preserve">
          <source>File Extraction Problems on Solaris.</source>
          <target state="translated">Проблемы с извлечением файлов на Соларисе.</target>
        </trans-unit>
        <trans-unit id="94f0aef527a940964fa9d548817f94f5c7e0d938" translate="yes" xml:space="preserve">
          <source>File Handle and Input/Output Stream Utilities</source>
          <target state="translated">Утилиты для работы с файлами и ввода/вывода данных</target>
        </trans-unit>
        <trans-unit id="2c21dac263de829a5861211698806d60572e8b18" translate="yes" xml:space="preserve">
          <source>File Input and Output</source>
          <target state="translated">Вход и выход файла</target>
        </trans-unit>
        <trans-unit id="ed7b317f92a6f66879f8f8669d4497dbe06ba062" translate="yes" xml:space="preserve">
          <source>File Names, File Systems and File Locking (see also File Handles)</source>
          <target state="translated">Имена файлов,файловые системы и блокировка файлов (см.также раздел &quot;Файловые ручки&quot;).</target>
        </trans-unit>
        <trans-unit id="a726cab0d7c518573e2f7003375fc21599153b1b" translate="yes" xml:space="preserve">
          <source>File Operations</source>
          <target state="translated">Файловые операции</target>
        </trans-unit>
        <trans-unit id="7572853d675e9450d66b583e3f295602cd6e9a54" translate="yes" xml:space="preserve">
          <source>File Permissions on Cygwin</source>
          <target state="translated">Файловые разрешения на Сигвина</target>
        </trans-unit>
        <trans-unit id="0f4d62f2c22e44d7f4ed81d343bbd5948187b552" translate="yes" xml:space="preserve">
          <source>File Positioning</source>
          <target state="translated">Позиционирование файла</target>
        </trans-unit>
        <trans-unit id="2a98d820804906c7cbc4a39c07f594d33f47d588" translate="yes" xml:space="preserve">
          <source>File containing the body of the report. Use this to quickly send a prepared message.</source>
          <target state="translated">Файл,содержащий тело доклада.Используйте его для быстрой отправки подготовленного сообщения.</target>
        </trans-unit>
        <trans-unit id="1653ca6d1bd7cd87184004c951688277cfc7e58a" translate="yes" xml:space="preserve">
          <source>File has been &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt;ed, or should be deleted on &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Файл был &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; отредактирован или должен быть удален при &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5f5f1c8650cee1864991294b341c02bd2c5622a" translate="yes" xml:space="preserve">
          <source>File locking using the &lt;code&gt;F_GETLK&lt;/code&gt; command to &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl()&lt;/a&gt;&lt;/code&gt; is a stub that returns &lt;code&gt;ENOSYS&lt;/code&gt; .</source>
          <target state="translated">Блокировка файла с использованием команды &lt;code&gt;F_GETLK&lt;/code&gt; для &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl()&lt;/a&gt;&lt;/code&gt; - это заглушка, которая возвращает &lt;code&gt;ENOSYS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfa00f1ae5815d6eaab80150e5fdb0f9d6b07ccd" translate="yes" xml:space="preserve">
          <source>File names are case insensitive, but case preserving. A pathname that contains a backslash or drive letter is a Win32 pathname, and not subject to the translations applied to POSIX style pathnames, but cygwin will warn you, so better convert them to POSIX.</source>
          <target state="translated">Имена файлов не чувствительны к регистру,но сохраняют регистр.Патерн,содержащий обратный слеш или букву диска,является Win32-патерн именем,и не зависит от переводов,применяемых к POSIX-патерн именам,но cygwin предупредит вас,так что лучше конвертировать их в POSIX.</target>
        </trans-unit>
        <trans-unit id="c5919b0472cf28437e422bab84192d0873dd39a7" translate="yes" xml:space="preserve">
          <source>File or pipe to print line number info to. If it is a pipe (say, &lt;code&gt;|visual_perl_db&lt;/code&gt;), then a short message is used. This is the mechanism used to interact with a slave editor or visual debugger, such as the special &lt;code&gt;vi&lt;/code&gt; or &lt;code&gt;emacs&lt;/code&gt; hooks, or the &lt;code&gt;ddd&lt;/code&gt; graphical debugger.</source>
          <target state="translated">Файл или канал для вывода информации о номере строки. Если это канал (скажем, &lt;code&gt;|visual_perl_db&lt;/code&gt; ), то используется короткое сообщение. Это механизм, используемый для взаимодействия с подчиненным редактором или визуальным отладчиком, таким как специальные перехватчики &lt;code&gt;vi&lt;/code&gt; или &lt;code&gt;emacs&lt;/code&gt; , или графический отладчик &lt;code&gt;ddd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f440d36d60fd2a51c020f6cb4de72889008d2bd8" translate="yes" xml:space="preserve">
          <source>File paths in a MANIFEST always use Unix conventions (ie. /) even if you're not on Unix.</source>
          <target state="translated">Пути файлов в MANIFEST всегда используют соглашения Unix (т.е./),даже если вы не на Unix.</target>
        </trans-unit>
        <trans-unit id="d684db983e8b5220e9565d325f0ae9bbe13b32e7" translate="yes" xml:space="preserve">
          <source>File size in bytes</source>
          <target state="translated">Размер файла в байтах</target>
        </trans-unit>
        <trans-unit id="c37e8261b4c2e82f199fe5efaafed18a68582d21" translate="yes" xml:space="preserve">
          <source>File specifications</source>
          <target state="translated">Спецификации файлов</target>
        </trans-unit>
        <trans-unit id="4007cbed1dac0ce1704758796b77f5a74a2f4ba7" translate="yes" xml:space="preserve">
          <source>File specifications containing wildcards are allowed both on the command line and within Perl globs (e.g. &lt;code&gt;&amp;lt;*.c&amp;gt;&lt;/code&gt; ). If the wildcard filespec uses VMS syntax, the resultant filespecs will follow VMS syntax; if a Unix-style filespec is passed in, Unix-style filespecs will be returned. Similar to the behavior of wildcard globbing for a Unix shell, one can escape command line wildcards with double quotation marks &lt;code&gt;&quot;&lt;/code&gt; around a perl program command line argument. However, owing to the stripping of &lt;code&gt;&quot;&lt;/code&gt; characters carried out by the C handling of argv you will need to escape a construct such as this one (in a directory containing the files</source>
          <target state="translated">Спецификации файлов, содержащие подстановочные знаки, разрешены как в командной строке, так и внутри Perl globs (например, &lt;code&gt;&amp;lt;*.c&amp;gt;&lt;/code&gt; ). Если спецификация файлов с подстановочными знаками использует синтаксис VMS, результирующие спецификации файлов будут следовать синтаксису VMS; если передается спецификация файлов в стиле Unix, будут возвращены спецификации файлов в стиле Unix. Подобно поведению подстановки подстановочных знаков для оболочки Unix, можно обойти подстановочные знаки командной строки двойными кавычками &lt;code&gt;&quot;&lt;/code&gt; вокруг аргумента командной строки программы Perl. Однако из-за удаления &lt;code&gt;&quot;&lt;/code&gt; символов, выполняемых обработкой argv C, вы получите нужно экранировать такую ​​конструкцию, как эта (в каталоге, содержащем файлы</target>
        </trans-unit>
        <trans-unit id="2e67adde1ffcac9182fdc414ea1c59b8537d99ba" translate="yes" xml:space="preserve">
          <source>File to output the results to instead of sending as an email. Useful particularly when running perlbug on a machine with no direct internet connection.</source>
          <target state="translated">Файл для вывода результатов вместо отправки по электронной почте.Полезно,в частности,при запуске perlbug на машине без прямого подключения к Интернету.</target>
        </trans-unit>
        <trans-unit id="8524b9f3585575ad7dfc6698bc36a14994079bf5" translate="yes" xml:space="preserve">
          <source>File to save your history?</source>
          <target state="translated">Файл,чтобы спасти свою историю?</target>
        </trans-unit>
        <trans-unit id="1e509862932466ee82e463191172e37b3cea6512" translate="yes" xml:space="preserve">
          <source>File type -- numeric, but comparable to exported constants -- see Archive::Tar's documentation</source>
          <target state="translated">Тип файла --цифровой,но сравнимый с экспортируемыми константами --смотрите документацию Archive::Tar's documentation</target>
        </trans-unit>
        <trans-unit id="0197048641dc3512ca3dbea2bb733e20d4882d0f" translate="yes" xml:space="preserve">
          <source>File::Basename</source>
          <target state="translated">File::Basename</target>
        </trans-unit>
        <trans-unit id="7643855ad41fd167cd1d19d2fc94a1d9a81f520d" translate="yes" xml:space="preserve">
          <source>File::Basename - Parse file paths into directory, filename and suffix.</source>
          <target state="translated">Файл::Basename-Разобрать пути к файлам в каталоге,имя файла и суффикс.</target>
        </trans-unit>
        <trans-unit id="a8d61a1262a25e3e4a3b5f743fafe0ce5ae8780f" translate="yes" xml:space="preserve">
          <source>File::Compare</source>
          <target state="translated">File::Compare</target>
        </trans-unit>
        <trans-unit id="d243fbac9648f0d6978bc733f70a7d07c623feba" translate="yes" xml:space="preserve">
          <source>File::Compare - Compare files or filehandles</source>
          <target state="translated">Файл::Сравнение-Сравнение файлов или файловых дескрипторов</target>
        </trans-unit>
        <trans-unit id="fb8db5002f44755b6149a0ab982916a8075daf8b" translate="yes" xml:space="preserve">
          <source>File::Compare was written by Nick Ing-Simmons. Its original documentation was written by Chip Salzenberg.</source>
          <target state="translated">Файл::Сравнение написал Ник Инг-Симмонс.Его оригинальная документация была написана Чипом Зальценбергом.</target>
        </trans-unit>
        <trans-unit id="e84e49c86f519c366047d4a68a91823d7167c285" translate="yes" xml:space="preserve">
          <source>File::Compare::cmp is a synonym for File::Compare::compare. It is exported from File::Compare only by request.</source>
          <target state="translated">Файл::Сравнить::cmp является синонимом для File::Compare::compare.Он экспортируется из File::Compare только по запросу.</target>
        </trans-unit>
        <trans-unit id="cced95c8b6209ce495a6cd5c577674c5e6e53b3a" translate="yes" xml:space="preserve">
          <source>File::Compare::compare and its sibling functions return 0 if the files are equal, 1 if the files are unequal, or -1 if an error was encountered.</source>
          <target state="translated">Файл::Сравнить::сравнивать и его родственные функции возвращают 0,если файлы равны,1,если файлы неравны,или -1,если произошла ошибка.</target>
        </trans-unit>
        <trans-unit id="def94ece5481d3beb5558118d685c1a96647aecc" translate="yes" xml:space="preserve">
          <source>File::Compare::compare_text does a line by line comparison of the two files. It stops as soon as a difference is detected. compare_text() accepts an optional third argument: This must be a CODE reference to a line comparison function, which returns 0 when both lines are considered equal. For example:</source>
          <target state="translated">Файл::Compare::comparison_text делает сравнение двух файлов построчно.Оно останавливается,как только обнаруживается разница.функция compare_text()принимает необязательный третий аргумент:Это должна быть CODE-ссылка на функцию сравнения строк,которая возвращает 0,когда обе строки считаются равными.Например:</target>
        </trans-unit>
        <trans-unit id="bc3cb79c7383464148f9e6e9b35dc66828ee89ef" translate="yes" xml:space="preserve">
          <source>File::Copy</source>
          <target state="translated">File::Copy</target>
        </trans-unit>
        <trans-unit id="054808322e1fad4b177e7be1b21dbd651d7b51df" translate="yes" xml:space="preserve">
          <source>File::Copy - Copy files or filehandles</source>
          <target state="translated">Файл::Копировать-Копировать файлы или файловые дескрипторы</target>
        </trans-unit>
        <trans-unit id="f2e6bb244559c9a61df5a32393bbd55e499cf28c" translate="yes" xml:space="preserve">
          <source>File::Copy also provides the &lt;code&gt;syscopy&lt;/code&gt; routine, which copies the file specified in the first parameter to the file specified in the second parameter, preserving OS-specific attributes and file structure. For Unix systems, this is equivalent to the simple &lt;code&gt;copy&lt;/code&gt; routine, which doesn't preserve OS-specific attributes. For VMS systems, this calls the &lt;code&gt;rmscopy&lt;/code&gt; routine (see below). For OS/2 systems, this calls the &lt;code&gt;syscopy&lt;/code&gt; XSUB directly. For Win32 systems, this calls &lt;code&gt;Win32::CopyFile&lt;/code&gt; .</source>
          <target state="translated">File :: Copy также предоставляет подпрограмму &lt;code&gt;syscopy&lt;/code&gt; , которая копирует файл, указанный в первом параметре, в файл, указанный во втором параметре, с сохранением специфичных для ОС атрибутов и файловой структуры. Для систем Unix это эквивалентно простой процедуре &lt;code&gt;copy&lt;/code&gt; , которая не сохраняет атрибуты, специфичные для ОС. Для систем VMS это вызывает процедуру &lt;code&gt;rmscopy&lt;/code&gt; (см. Ниже). Для систем OS / 2 это напрямую вызывает &lt;code&gt;syscopy&lt;/code&gt; syscopy. Для систем Win32 это вызывает &lt;code&gt;Win32::CopyFile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67f88864b88bba7acff99452234fd97bf0f47f99" translate="yes" xml:space="preserve">
          <source>File::Copy was written by Aaron Sherman</source>
          <target state="translated">Файл::Копия написана Аароном Шерманом.</target>
        </trans-unit>
        <trans-unit id="f01a5358f4ca69063ca392607e003dc733b2597f" translate="yes" xml:space="preserve">
          <source>File::DosGlob</source>
          <target state="translated">File::DosGlob</target>
        </trans-unit>
        <trans-unit id="5c17116d51c1f03e40c8b694ba6c585eabe2a321" translate="yes" xml:space="preserve">
          <source>File::DosGlob - DOS like globbing and then some</source>
          <target state="translated">Файл::DosGlob-DOS любит глотать,а потом некоторые</target>
        </trans-unit>
        <trans-unit id="bfa471141e1f7096bf78ca1f82e51c1164281798" translate="yes" xml:space="preserve">
          <source>File::Fetch</source>
          <target state="translated">File::Fetch</target>
        </trans-unit>
        <trans-unit id="dcff4894464604256beca2d13f60a2e0200dbabf" translate="yes" xml:space="preserve">
          <source>File::Fetch - A generic file fetching mechanism</source>
          <target state="translated">Файл::Fetch-Общий механизм извлечения файлов</target>
        </trans-unit>
        <trans-unit id="c8dc9651ac05b80071b1feb534cf5a5de8f9de03" translate="yes" xml:space="preserve">
          <source>File::Fetch is a generic file fetching mechanism.</source>
          <target state="translated">File::Fetch-это общий механизм извлечения файлов.</target>
        </trans-unit>
        <trans-unit id="2cb1276427ae5064c5b11d564d8f990a7923f8fb" translate="yes" xml:space="preserve">
          <source>File::Fetch is able to fetch a variety of uris, by using several external programs and modules.</source>
          <target state="translated">File::Fetch имеет возможность получать различные uris,используя несколько внешних программ и модулей.</target>
        </trans-unit>
        <trans-unit id="652b8a474fd7bf89a6c10654387f68b029ba4afc" translate="yes" xml:space="preserve">
          <source>File::Find</source>
          <target state="translated">File::Find</target>
        </trans-unit>
        <trans-unit id="dabbc689655c180a270054bdf94079c67c56996d" translate="yes" xml:space="preserve">
          <source>File::Find - Traverse a directory tree.</source>
          <target state="translated">Файл::Поиск-Обход дерева каталогов.</target>
        </trans-unit>
        <trans-unit id="602f452d2b6cab137b630932705ec11b4fbc5825" translate="yes" xml:space="preserve">
          <source>File::Find used to produce incorrect results if called recursively. During the development of perl 5.8 this bug was fixed. The first fixed version of File::Find was 1.01.</source>
          <target state="translated">Файл::Поиск,используемый для получения неверных результатов при рекурсивном вызове.Во время разработки perl 5.8 эта ошибка была исправлена.Первой исправленной версией File::Find была 1.01.</target>
        </trans-unit>
        <trans-unit id="cf7493e2714621d4472c83b7fb17367a3f07e0e0" translate="yes" xml:space="preserve">
          <source>File::Find::Rule</source>
          <target state="translated">File::Find::Rule</target>
        </trans-unit>
        <trans-unit id="fdabb48d19b73dd4070bb82d3a9c90ab1b81880a" translate="yes" xml:space="preserve">
          <source>File::Glob</source>
          <target state="translated">File::Glob</target>
        </trans-unit>
        <trans-unit id="8d9f792f087977bcc4f2c40334cf6983814a1f4b" translate="yes" xml:space="preserve">
          <source>File::Glob - Perl extension for BSD glob routine</source>
          <target state="translated">Файл::Glob-Расширение на Perl для глобуса BSD</target>
        </trans-unit>
        <trans-unit id="5c88309ce18d22b575a2e92f21ed146adc833a5f" translate="yes" xml:space="preserve">
          <source>File::Glob::bsd_glob() implements the FreeBSD glob(3) routine, which is a superset of the POSIX glob() (described in IEEE Std 1003.2 &quot;POSIX.2&quot;). bsd_glob() takes a mandatory &lt;code&gt;pattern&lt;/code&gt; argument, and an optional &lt;code&gt;flags&lt;/code&gt; argument, and returns a list of filenames matching the pattern, with interpretation of the pattern modified by the &lt;code&gt;flags&lt;/code&gt; variable.</source>
          <target state="translated">File :: Glob :: bsd_glob () реализует подпрограмму FreeBSD glob (3), которая является надмножеством POSIX glob () (описанной в IEEE Std 1003.2 &amp;laquo;POSIX.2&amp;raquo;). bsd_glob () принимает обязательный аргумент &lt;code&gt;pattern&lt;/code&gt; и необязательный аргумент &lt;code&gt;flags&lt;/code&gt; и возвращает список имен файлов, соответствующих шаблону, с интерпретацией шаблона, измененного переменной &lt;code&gt;flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca454d7c1a5b19f064af8b037120ba60d6c7a525" translate="yes" xml:space="preserve">
          <source>File::GlobMapper</source>
          <target state="translated">File::GlobMapper</target>
        </trans-unit>
        <trans-unit id="7f7d175bf488aed0eb444cb11c08455ad8599ba6" translate="yes" xml:space="preserve">
          <source>File::GlobMapper - Extend File Glob to Allow Input and Output Files</source>
          <target state="translated">Файл::GlobMapper-Расширить глобус файлов,чтобы разрешить входные и выходные файлы</target>
        </trans-unit>
        <trans-unit id="1ee8431a726a8a5ed8c4e143748ae9ecf3b924c2" translate="yes" xml:space="preserve">
          <source>File::Path</source>
          <target state="translated">File::Path</target>
        </trans-unit>
        <trans-unit id="1686306ed7a2e3c93f30ae5144bea665fa4f6ad8" translate="yes" xml:space="preserve">
          <source>File::Path - Create or remove directory trees</source>
          <target state="translated">Файл::Путь-создание или удаление деревьев каталогов</target>
        </trans-unit>
        <trans-unit id="a4ef679a008a6f84865a9e072a31d15ade694f3b" translate="yes" xml:space="preserve">
          <source>File::Remove</source>
          <target state="translated">File::Remove</target>
        </trans-unit>
        <trans-unit id="315013b7403b971bbccc00acbcaa29af9f35ca59" translate="yes" xml:space="preserve">
          <source>File::Spec</source>
          <target state="translated">File::Spec</target>
        </trans-unit>
        <trans-unit id="e03ff856a0868930dbc9cd6d64ff461d1bdaaabc" translate="yes" xml:space="preserve">
          <source>File::Spec &amp;lt;= 0.83 has a bug where the file part of catfile is not canonicalized. This override fixes that bug.</source>
          <target state="translated">File :: Spec &amp;lt;= 0.83 имеет ошибку, из-за которой файловая часть catfile не канонизируется. Это переопределение исправляет эту ошибку.</target>
        </trans-unit>
        <trans-unit id="5c2545f01462091353041ce999852a980063ef93" translate="yes" xml:space="preserve">
          <source>File::Spec - portably perform operations on file names</source>
          <target state="translated">Файл::Spec-portably выполнять операции с именами файлов</target>
        </trans-unit>
        <trans-unit id="377c35de2ed196f9c5385b1edfdc4eb6ca2a2256" translate="yes" xml:space="preserve">
          <source>File::Spec for Mac OS (Classic)</source>
          <target state="translated">Файл::Spec для Mac OS (Классический)</target>
        </trans-unit>
        <trans-unit id="e9dc37ac681ea880968c6d2c9418018b55ac8a4a" translate="yes" xml:space="preserve">
          <source>File::Spec for Unix, base for other File::Spec modules</source>
          <target state="translated">Файл::Spec для Unix,база для других Файл::Spec модулей</target>
        </trans-unit>
        <trans-unit id="5d3e2d6a2a684c855af3654d42b2d52642b0b206" translate="yes" xml:space="preserve">
          <source>File::Spec wrappers</source>
          <target state="translated">Файл::Spec обертки</target>
        </trans-unit>
        <trans-unit id="57d505f90f23c581eff3d8fd504c98b55b80e3f3" translate="yes" xml:space="preserve">
          <source>File::Spec, File::Spec::Unix, File::Spec::Mac, File::Spec::OS2, File::Spec::Win32, File::Spec::VMS, ExtUtils::MakeMaker</source>
          <target state="translated">Файл::Spec,Файл::Spec::Unix,Файл::Spec::Mac,Файл::Spec::OS2,Файл::Spec::Win32,Файл::Spec::VMS,ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="641add72b7fdbf25abb0c07f6fb8252f0c914b3a" translate="yes" xml:space="preserve">
          <source>File::Spec::Cygwin</source>
          <target state="translated">File::Spec::Cygwin</target>
        </trans-unit>
        <trans-unit id="cdfed1a8102059cb23af35a0f86b67871164f579" translate="yes" xml:space="preserve">
          <source>File::Spec::Cygwin - methods for Cygwin file specs</source>
          <target state="translated">Файл::Spec::Cygwin-методы для спецификаций файлов Cygwin</target>
        </trans-unit>
        <trans-unit id="e72fdb6ea5dc0105bf8962f6650693bd46fc1242" translate="yes" xml:space="preserve">
          <source>File::Spec::Epoc</source>
          <target state="translated">File::Spec::Epoc</target>
        </trans-unit>
        <trans-unit id="eb8693815ec649d283b89619fb500489b50c284c" translate="yes" xml:space="preserve">
          <source>File::Spec::Epoc - methods for Epoc file specs</source>
          <target state="translated">Файл::Spec::Epoc-методы для спецификаций файлов Epoc</target>
        </trans-unit>
        <trans-unit id="58ab258073f8844f58a13c0e540afd7c70528044" translate="yes" xml:space="preserve">
          <source>File::Spec::Functions</source>
          <target state="translated">File::Spec::Functions</target>
        </trans-unit>
        <trans-unit id="5200acce0e1b5700ec3f6c1ce8b085a9594ec913" translate="yes" xml:space="preserve">
          <source>File::Spec::Functions - portably perform operations on file names</source>
          <target state="translated">Файл::Spec::Функции-portably выполнять операции с именами файлов</target>
        </trans-unit>
        <trans-unit id="fc6db1e1b5de7797ac516f96a446cab61cfc0d6a" translate="yes" xml:space="preserve">
          <source>File::Spec::Mac</source>
          <target state="translated">File::Spec::Mac</target>
        </trans-unit>
        <trans-unit id="d79a8c64b96c6d94516d88b113e5eac3b9da4ad8" translate="yes" xml:space="preserve">
          <source>File::Spec::Mac - File::Spec for Mac OS (Classic)</source>
          <target state="translated">Файл::Spec::Mac-Файл::Spec для Mac OS (Classic)</target>
        </trans-unit>
        <trans-unit id="dd2e7ffeaaea8af26591abffe1ee1b6f540db20c" translate="yes" xml:space="preserve">
          <source>File::Spec::OS2</source>
          <target state="translated">File::Spec::OS2</target>
        </trans-unit>
        <trans-unit id="40e2993be3fcfb49e9dff0bf954a4b4fc18277d7" translate="yes" xml:space="preserve">
          <source>File::Spec::OS2 - methods for OS/2 file specs</source>
          <target state="translated">Файл::Spec::OS2-методы для спецификации файла OS/2</target>
        </trans-unit>
        <trans-unit id="f7a8d4f1ec9c1ccc3e150ac09fa9f67a10dfcb83" translate="yes" xml:space="preserve">
          <source>File::Spec::Unix</source>
          <target state="translated">File::Spec::Unix</target>
        </trans-unit>
        <trans-unit id="0d7acdcbd611107237cca4df6cbd4c594405934d" translate="yes" xml:space="preserve">
          <source>File::Spec::Unix - File::Spec for Unix, base for other File::Spec modules</source>
          <target state="translated">Файл::Spec::Unix-Файл::Spec для Unix,база для других Файл::Spec модулей</target>
        </trans-unit>
        <trans-unit id="bf21f77214d880322c14e8ee35bc09087fde112d" translate="yes" xml:space="preserve">
          <source>File::Spec::VMS</source>
          <target state="translated">File::Spec::VMS</target>
        </trans-unit>
        <trans-unit id="c14aa057f43f4a505144d4210ab15e571114fe16" translate="yes" xml:space="preserve">
          <source>File::Spec::VMS - methods for VMS file specs</source>
          <target state="translated">Файл::Spec::VMS-методы для спецификаций файлов VMS</target>
        </trans-unit>
        <trans-unit id="2822248f9e471c31171c089c3fdd48b3debb74f9" translate="yes" xml:space="preserve">
          <source>File::Spec::Win32</source>
          <target state="translated">File::Spec::Win32</target>
        </trans-unit>
        <trans-unit id="080364c33593182b7f7f657492fb3b2d46eb857c" translate="yes" xml:space="preserve">
          <source>File::Spec::Win32 - methods for Win32 file specs</source>
          <target state="translated">Файл::Spec::Win32-методы для спецификаций Win32 файлов</target>
        </trans-unit>
        <trans-unit id="e0fd4afcd716107e17e677aa59b46d6470fb899a" translate="yes" xml:space="preserve">
          <source>File::Temp</source>
          <target state="translated">File::Temp</target>
        </trans-unit>
        <trans-unit id="3fe450162cf54232d01afd15746195856bbdbb84" translate="yes" xml:space="preserve">
          <source>File::Temp - return name and handle of a temporary file safely</source>
          <target state="translated">Файл::Temp-безопасно вернуть имя и обработку временного файла.</target>
        </trans-unit>
        <trans-unit id="d91ecfa6abec25b99ed11c8b2d5f3accbd385c89" translate="yes" xml:space="preserve">
          <source>File::chdir</source>
          <target state="translated">File::chdir</target>
        </trans-unit>
        <trans-unit id="e83a936a3382a41b1f3f93e3d07a775dcb299d22" translate="yes" xml:space="preserve">
          <source>File::stat</source>
          <target state="translated">File::stat</target>
        </trans-unit>
        <trans-unit id="9639e61c73c9c60e6cfa27fbe83124dab13c12b1" translate="yes" xml:space="preserve">
          <source>File::stat - by-name interface to Perl's built-in stat() functions</source>
          <target state="translated">Файл::stat-интерфейс с именем для встроенных функций stat()Perl.</target>
        </trans-unit>
        <trans-unit id="ef5f659600c421b89a34289668dcda4b8fde8960" translate="yes" xml:space="preserve">
          <source>FileCache</source>
          <target state="translated">FileCache</target>
        </trans-unit>
        <trans-unit id="dd4dfad3675618140d4d83ded99b3dd8deb7df16" translate="yes" xml:space="preserve">
          <source>FileCache - keep more files open than the system permits</source>
          <target state="translated">FileCache-держать больше файлов открытыми,чем позволяет система.</target>
        </trans-unit>
        <trans-unit id="a5cc97ff5fda266750b3dee9900ddf98823854aa" translate="yes" xml:space="preserve">
          <source>FileCache does not store the current file offset if it finds it necessary to close a file. When the file is reopened, the offset will be as specified by the original &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; file mode. This could be construed to be a bug.</source>
          <target state="translated">FileCache не сохраняет текущее смещение файла, если считает необходимым закрыть файл. При повторном &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; файла смещение будет таким, как указано в исходном режиме открытия файла. Это может быть истолковано как ошибка.</target>
        </trans-unit>
        <trans-unit id="89f533c3cd15e297fdf4aabaf6ece0f9c1be27a5" translate="yes" xml:space="preserve">
          <source>FileHandle</source>
          <target state="translated">FileHandle</target>
        </trans-unit>
        <trans-unit id="794819fbb3c9526c54cbc3cce598cbc494f7c4eb" translate="yes" xml:space="preserve">
          <source>FileHandle - supply object methods for filehandles</source>
          <target state="translated">FileHandle-методы поставки объектов для файловых дескрипторов</target>
        </trans-unit>
        <trans-unit id="3e986485fa2d06cffe03b4cb5d722b8847e7c236" translate="yes" xml:space="preserve">
          <source>Filehandles</source>
          <target state="translated">Filehandles</target>
        </trans-unit>
        <trans-unit id="745059e953a17e849a5f1d5cc58b8c65a4690f8b" translate="yes" xml:space="preserve">
          <source>Filehandles returned by these functions support the seekable methods.</source>
          <target state="translated">Ручки файлов,возвращаемые этими функциями,поддерживают методы поиска.</target>
        </trans-unit>
        <trans-unit id="d917728ca0ac0c4b9a39ce3d45425ec35d9ebdc0" translate="yes" xml:space="preserve">
          <source>Filename Case</source>
          <target state="translated">Дело о фильме</target>
        </trans-unit>
        <trans-unit id="fb7a4b255171595818c7e230dab6fcf171fbaa94" translate="yes" xml:space="preserve">
          <source>Filenames</source>
          <target state="translated">Filenames</target>
        </trans-unit>
        <trans-unit id="9fd1eebd086da1a91988827a7bacbfddddd4cb35" translate="yes" xml:space="preserve">
          <source>Filenames can be picked arbitrarily; &lt;code&gt;CPAN.pm&lt;/code&gt; always reads all files (in alphabetical order) and takes the key &lt;code&gt;match&lt;/code&gt; (see below in</source>
          <target state="translated">Имена файлов можно выбирать произвольно; &lt;code&gt;CPAN.pm&lt;/code&gt; всегда читает все файлы (в алфавитном порядке) и занимает ключевой &lt;code&gt;match&lt;/code&gt; (см ниже</target>
        </trans-unit>
        <trans-unit id="c9784173a96e4b1510622cabd6602208c753b868" translate="yes" xml:space="preserve">
          <source>Filenames with * and ? will be glob expanded.</source>
          <target state="translated">Фильмы с*и ? будут расширены.</target>
        </trans-unit>
        <trans-unit id="048ca477f6d313575e8e768358930dd94a0805a0" translate="yes" xml:space="preserve">
          <source>Files I'm trying to fetch have reserved characters or non-ASCII characters in them. What do I do?</source>
          <target state="translated">В файлах,которые я пытаюсь получить,есть зарезервированные символы или не-ASCII символы.Что мне делать?</target>
        </trans-unit>
        <trans-unit id="119c6ebf5f034a0bdf47e2ccf4a4a00d52bae121" translate="yes" xml:space="preserve">
          <source>Files and Filesystems</source>
          <target state="translated">Файлы и файловые системы</target>
        </trans-unit>
        <trans-unit id="1b66cfb0249a670160094a9d9a1226caf17ef912" translate="yes" xml:space="preserve">
          <source>Files and I/O</source>
          <target state="translated">Файлы и входы/выходы</target>
        </trans-unit>
        <trans-unit id="5bcfdef82017aca1b62d322f75f45269c52cebb0" translate="yes" xml:space="preserve">
          <source>Files older than v2.0 will have the one of the version numbers &quot;-1&quot;, &quot;0&quot; or &quot;1&quot;. No minor number was used at that time.</source>
          <target state="translated">Файлы старше версии v2.0 будут иметь один из номеров версии &quot;-1&quot;,&quot;0&quot; или &quot;1&quot;.Незначительный номер в то время не использовался.</target>
        </trans-unit>
        <trans-unit id="ce0b65cbec28e6a52a00f89d26a974e92b387838" translate="yes" xml:space="preserve">
          <source>Files opened without an encoding argument will be in UTF-8:</source>
          <target state="translated">Файлы,открытые без аргумента кодировки,будут в UTF-8:</target>
        </trans-unit>
        <trans-unit id="646de437489432c391060b841f63b51dd2e343a9" translate="yes" xml:space="preserve">
          <source>Files which are not &lt;code&gt;mmap()&lt;/code&gt; -able revert to behaving like the &lt;code&gt;:perlio&lt;/code&gt; layer. Writes also behave like the &lt;code&gt;:perlio&lt;/code&gt; layer, as &lt;code&gt;mmap()&lt;/code&gt; for write needs extra house-keeping (to extend the file) which negates any advantage.</source>
          <target state="translated">Файлы, не поддерживающие &lt;code&gt;mmap()&lt;/code&gt; возвращаются к &lt;code&gt;:perlio&lt;/code&gt; . Запись также ведет себя как слой &lt;code&gt;:perlio&lt;/code&gt; , поскольку &lt;code&gt;mmap()&lt;/code&gt; для записи требует дополнительного обслуживания (для расширения файла), что сводит на нет любое преимущество.</target>
        </trans-unit>
        <trans-unit id="a624b168584689d4ad50d72852da812cefd7de42" translate="yes" xml:space="preserve">
          <source>Fill the sv with current working directory</source>
          <target state="translated">Заполните sv текущим рабочим каталогом</target>
        </trans-unit>
        <trans-unit id="7c991b879751864162456f044ae4b061287a9ddd" translate="yes" xml:space="preserve">
          <source>Fill up memory with a byte pattern (a byte repeated over and over again) that hopefully catches attempts to access uninitialized memory.</source>
          <target state="translated">Заполнение памяти байтовым паттерном (байт,повторяющийся снова и снова),который,надеюсь,поймает попытки доступа к неинициализированной памяти.</target>
        </trans-unit>
        <trans-unit id="1caa98b8fe4b092dfaf90807d48e36c7313a1fe3" translate="yes" xml:space="preserve">
          <source>Filter DBM keys/values</source>
          <target state="translated">Фильтр DBM ключи/значения</target>
        </trans-unit>
        <trans-unit id="49db338137c69e197263cbd2a2a02d160fa11306" translate="yes" xml:space="preserve">
          <source>Filter for DBM_Filter</source>
          <target state="translated">Фильтр для DBM_Filter</target>
        </trans-unit>
        <trans-unit id="155bc63929438bf5891026e88a669c019cfee1eb" translate="yes" xml:space="preserve">
          <source>Filter the file list so that all the test files run match /(LIST|OF|PATTERNS)/. Note that with this form the patterns are joined by '|' and you cannot supply a list of files, instead the test files are obtained from the MANIFEST.</source>
          <target state="translated">Отфильтровать список файлов так,чтобы все запущенные тестовые файлы соответствовали /(LIST|OF|PATTERNS)/.Обратите внимание,что при такой форме к шаблонам присоединяется &quot;|&quot;,и вы не можете предоставить список файлов,вместо этого тестовые файлы получаются из MANIFEST'а.</target>
        </trans-unit>
        <trans-unit id="d5a596c0ce5a2b7a7aba6646e13f8fdc098b26bf" translate="yes" xml:space="preserve">
          <source>Filter the file list so that all the test files run match PATTERN. Note that this form is distinct from the &lt;b&gt;-re LIST OF PATTERNS&lt;/b&gt; form below in that it allows the file list to be provided as well.</source>
          <target state="translated">Отфильтруйте список файлов, чтобы все запускаемые тестовые файлы соответствовали ШАБЛОНУ. Обратите внимание, что эта форма отличается от формы &lt;b&gt;-re СПИСОК ШАБЛОНОВ&lt;/b&gt; ниже тем, что она позволяет также предоставить список файлов.</target>
        </trans-unit>
        <trans-unit id="42d3a31d1c9ff4adea6e61106fd398bfebcdb7bc" translate="yes" xml:space="preserve">
          <source>Filter::Simple</source>
          <target state="translated">Filter::Simple</target>
        </trans-unit>
        <trans-unit id="8902388c9d4dcc551448da4cca3d317ed63a6414" translate="yes" xml:space="preserve">
          <source>Filter::Simple - Simplified source filtering</source>
          <target state="translated">Фильтр::Простая-Упрощенная фильтрация источников</target>
        </trans-unit>
        <trans-unit id="4d594a2e8094dc15ca9e42ca0d84c3e0a33987d2" translate="yes" xml:space="preserve">
          <source>Filter::Simple generates a special &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; subroutine for your module (see &lt;a href=&quot;#How-it-works&quot;&gt;How it works&lt;/a&gt;) which would normally replace any &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; subroutine you might have explicitly declared.</source>
          <target state="translated">Filter :: Simple генерирует специальную подпрограмму &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; для вашего модуля (см. &lt;a href=&quot;#How-it-works&quot;&gt;Как это работает&lt;/a&gt; ), которая обычно заменяет любую подпрограмму &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; вы могли явно объявить.</target>
        </trans-unit>
        <trans-unit id="5b045aab2dc3c12f8983dd3d86529beb5ee5d291" translate="yes" xml:space="preserve">
          <source>Filter::Simple is now maintained by the Perl5-Porters. Please submit bug via the &lt;code&gt;perlbug&lt;/code&gt; tool that comes with your perl. For usage instructions, read &lt;code&gt;perldoc perlbug&lt;/code&gt; or possibly &lt;code&gt;man perlbug&lt;/code&gt; . For mostly anything else, please contact &amp;lt;perl5-porters@perl.org&amp;gt;.</source>
          <target state="translated">Filter :: Simple теперь поддерживается Perl5-Porters. Пожалуйста, отправьте сообщение об ошибке с помощью инструмента &lt;code&gt;perlbug&lt;/code&gt; , который поставляется с вашим perl. Инструкции по использованию см. В &lt;code&gt;perldoc perlbug&lt;/code&gt; или, возможно, в &lt;code&gt;man perlbug&lt;/code&gt; . По всем остальным вопросам обращайтесь по адресу &amp;lt;perl5-porters@perl.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="19879ac495533ad1077ba2c41a6a1388fc0daf98" translate="yes" xml:space="preserve">
          <source>Filter::Simple supports this type of filtering by automatically exporting the &lt;code&gt;FILTER_ONLY&lt;/code&gt; subroutine.</source>
          <target state="translated">Filter :: Simple поддерживает этот тип фильтрации, автоматически экспортируя подпрограмму &lt;code&gt;FILTER_ONLY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7738927e99aa19b5661cca71074c5a3666ddd066" translate="yes" xml:space="preserve">
          <source>Filter::Util::Call</source>
          <target state="translated">Filter::Util::Call</target>
        </trans-unit>
        <trans-unit id="7dc52ff0d48741e56609be222232752914b7f609" translate="yes" xml:space="preserve">
          <source>Filter::Util::Call - Perl Source Filter Utility Module</source>
          <target state="translated">Фильтр::Util::Call-Утилитный модуль фильтра Perl Source</target>
        </trans-unit>
        <trans-unit id="0cabe77e4a0f9142f83082a357c9dd9516395a45" translate="yes" xml:space="preserve">
          <source>Filtering only specific components of source code</source>
          <target state="translated">Фильтрация только определенных компонентов исходного кода</target>
        </trans-unit>
        <trans-unit id="0d724af3cdfe968bbaf60122abf6756e0bff8902" translate="yes" xml:space="preserve">
          <source>Filtering only the code parts of source code</source>
          <target state="translated">Фильтрация только частей кода исходного кода</target>
        </trans-unit>
        <trans-unit id="064b3406638df42c905600b3e499487ada8eb46b" translate="yes" xml:space="preserve">
          <source>Filters Included</source>
          <target state="translated">Фильтры включены</target>
        </trans-unit>
        <trans-unit id="5a48634134a41cfb47919ca0620c4a4eb370a44f" translate="yes" xml:space="preserve">
          <source>Filters can be created in two main ways</source>
          <target state="translated">Фильтры могут быть созданы двумя основными способами</target>
        </trans-unit>
        <trans-unit id="f3f0a8fb43e79067faffa3f02bee42380f1453b8" translate="yes" xml:space="preserve">
          <source>Filters everything. Identical in effect to &lt;code&gt;FILTER&lt;/code&gt; .</source>
          <target state="translated">Все фильтрует. По действию &lt;code&gt;FILTER&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dff7559e7e19f13b99b80c4310a808291f2993fd" translate="yes" xml:space="preserve">
          <source>Filters only Perl quotelikes (as interpreted by &lt;code&gt;&amp;amp;Text::Balanced::extract_quotelike&lt;/code&gt; ).</source>
          <target state="translated">Фильтрует только кавычки Perl (как интерпретируется &lt;code&gt;&amp;amp;Text::Balanced::extract_quotelike&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d46715be5a6c7c637a101bd3fb514ca34a022fd4" translate="yes" xml:space="preserve">
          <source>Filters only the pattern literal parts of a Perl quotelike (i.e. the contents of a &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; or an &lt;code&gt;&lt;a href=&quot;../functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt;, the first half of an &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Отфильтровывает только части литералов шаблона в кавычках Perl (т. Е. Содержимое &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; , первая половина &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9d6c7da3a59381ce364937477b0de797b35ca66f" translate="yes" xml:space="preserve">
          <source>Filters only the string literal parts of a Perl quotelike (i.e. the contents of a string literal, either half of a &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;, the second half of an &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Фильтрует только части строкового литерала кавычки Perl (т. Е. Содержимое строкового литерала, либо половину &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; , либо вторую половину &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="21c3fceb1f21a8d2c7a7604d5f15909ba3c4e6bc" translate="yes" xml:space="preserve">
          <source>Filters only those sections of the source code that are not POD or &lt;code&gt;__DATA__&lt;/code&gt; .</source>
          <target state="translated">Фильтрует только те разделы исходного кода, которые не являются POD или &lt;code&gt;__DATA__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d0e4690844c0e997ddfae93ebb04be08becd5b9" translate="yes" xml:space="preserve">
          <source>Filters only those sections of the source code that are not POD, comments, or &lt;code&gt;__DATA__&lt;/code&gt; .</source>
          <target state="translated">Фильтрует только те разделы исходного кода, которые не являются POD, комментариями или &lt;code&gt;__DATA__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73c4703434d54b35a96afa23550eee383050c8e7" translate="yes" xml:space="preserve">
          <source>Filters only those sections of the source code that are not quotelikes, POD, comments, or &lt;code&gt;__DATA__&lt;/code&gt; .</source>
          <target state="translated">Фильтрует только те разделы исходного кода, которые не являются кавычками, POD, комментариями или &lt;code&gt;__DATA__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6768e7cdb67b7548d17f5b47c853204a354ef8a8" translate="yes" xml:space="preserve">
          <source>Filters only those sections of the source code that are not quotelikes, POD, or &lt;code&gt;__DATA__&lt;/code&gt; .</source>
          <target state="translated">Фильтрует только те разделы исходного кода, которые не являются кавычками, POD или &lt;code&gt;__DATA__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c5efd60aef7150698692bd9522cefaa126df2ec" translate="yes" xml:space="preserve">
          <source>Finally there is the 'default', and the related 'default_get' and 'default_set' options. These options control the &quot;default&quot; object which is provided by the class interface to the methods. Setting &lt;code&gt;default_get&lt;/code&gt; to true tells the constructor to return the default object if it is defined. Setting &lt;code&gt;default_set&lt;/code&gt; to true tells the constructor to make the default object the constructed object. Setting the &lt;code&gt;default&lt;/code&gt; option is like setting both to true. This is used primarily internally and probably isn't interesting to any real user.</source>
          <target state="translated">Наконец, есть &quot;default&quot; и связанные параметры &quot;default_get&quot; и &quot;default_set&quot;. Эти параметры управляют объектом &quot;по умолчанию&quot;, который предоставляется классовым интерфейсом для методов. Установка &lt;code&gt;default_get&lt;/code&gt; в значение true указывает конструктору вернуть объект по умолчанию, если он определен. Установка &lt;code&gt;default_set&lt;/code&gt; в true указывает конструктору сделать объект по умолчанию созданным объектом. Установка параметра по &lt;code&gt;default&lt;/code&gt; аналогична установке для обоих значений true. Это используется в основном для внутренних целей и, вероятно, не интересует ни одного реального пользователя.</target>
        </trans-unit>
        <trans-unit id="b793b4c7037146e44c6ebbd985a0e8b5eea1bc2d" translate="yes" xml:space="preserve">
          <source>Finally,</source>
          <target state="translated">Finally,</target>
        </trans-unit>
        <trans-unit id="c007289d889b2ac012d30249ede8e24355c7610c" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;Plack&lt;/a&gt; is a Perl module and toolkit that contains PSGI middleware, helpers and adapters to web servers, allowing you to easily deploy scripts which can continue running, and provides flexibility with regards to which web server you use. It can allow existing CGI scripts to enjoy this flexibility and performance with minimal changes, or can be used along with modern Perl web frameworks to make writing and deploying web services with Perl a breeze.</source>
          <target state="translated">Наконец, &lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;Plack&lt;/a&gt; - это модуль и инструментарий Perl, который содержит промежуточное ПО PSGI, помощники и адаптеры для веб-серверов, позволяя легко развертывать сценарии, которые могут продолжать работать, и обеспечивает гибкость в отношении того, какой веб-сервер вы используете. Он может позволить существующим сценариям CGI обладать такой гибкостью и производительностью с минимальными изменениями или может использоваться вместе с современными веб-фреймворками Perl, чтобы упростить написание и развертывание веб-сервисов с помощью Perl.</target>
        </trans-unit>
        <trans-unit id="1ec318bbb4a97f05c20b43c3d365fb178815d120" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;$?&lt;/code&gt; may be set to non-0 value if the external program</source>
          <target state="translated">Наконец, &lt;code&gt;$?&lt;/code&gt; может быть установлено значение, отличное от 0, если внешняя программа</target>
        </trans-unit>
        <trans-unit id="92dd49b4407ac7414e31cf79437fb39879d44f34" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; will traverse up references exactly</source>
          <target state="translated">Наконец, &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; будет точно перемещать ссылки вверх</target>
        </trans-unit>
        <trans-unit id="66c1abb8f12ea81297c1b86ceb245b7ba4213937" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; also has an additional affect on the bitwise operators. Normally, the operands and results are treated as &lt;b&gt;unsigned&lt;/b&gt; integers, but with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; the operands and results are &lt;b&gt;signed&lt;/b&gt;. This means, among other things, that ~0 is -1, and -2 &amp;amp; -5 is -6.</source>
          <target state="translated">Наконец, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; также оказывает дополнительное влияние на побитовые операторы. Обычно операнды и результаты обрабатываются как целые числа &lt;b&gt;без знака&lt;/b&gt; , но с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; операнды и результаты &lt;b&gt;подписываются&lt;/b&gt; . Это означает, среди прочего, что ~ 0 равно -1, а -2 &amp;amp; -5 равно -6.</target>
        </trans-unit>
        <trans-unit id="4298e2e9c529f41f2c9de7ef565329b328f06ed5" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;LC_CTYPE&lt;/code&gt; affects the (deprecated) POSIX character-class test functions--&lt;code&gt;POSIX::isalpha()&lt;/code&gt; , &lt;code&gt;POSIX::islower()&lt;/code&gt; , and so on. For example, if you move from the &quot;C&quot; locale to a 7-bit ISO 646 one, you may find--possibly to your surprise--that &lt;code&gt;&quot;|&quot;&lt;/code&gt; moves from the &lt;code&gt;POSIX::ispunct()&lt;/code&gt; class to &lt;code&gt;POSIX::isalpha()&lt;/code&gt; . Unfortunately, this creates big problems for regular expressions. &quot;|&quot; still means alternation even though it matches &lt;code&gt;\w&lt;/code&gt; . Starting in v5.22, a warning will be raised when such a locale is switched into. More details are given several paragraphs further down.</source>
          <target state="translated">Наконец, &lt;code&gt;LC_CTYPE&lt;/code&gt; влияет на (устаревшие) тестовые функции символьного класса &lt;code&gt;POSIX::isalpha()&lt;/code&gt; , &lt;code&gt;POSIX::islower()&lt;/code&gt; и т. Д. Например, если вы перейдете с локали &amp;laquo;C&amp;raquo; на 7-битную локаль ISO 646, вы можете обнаружить - возможно, к своему удивлению, - что &lt;code&gt;&quot;|&quot;&lt;/code&gt; переходит из класса &lt;code&gt;POSIX::ispunct()&lt;/code&gt; в &lt;code&gt;POSIX::isalpha()&lt;/code&gt; . К сожалению, это создает большие проблемы для регулярных выражений. &quot;|&quot; по-прежнему означает чередование, даже если оно соответствует &lt;code&gt;\w&lt;/code&gt; . Начиная с v5.22, при переключении на такой языковой стандарт будет появляться предупреждение. Более подробная информация приводится в нескольких абзацах ниже.</target>
        </trans-unit>
        <trans-unit id="863cc6df01692aa36bb18136100716eadd4c9578" translate="yes" xml:space="preserve">
          <source>Finally, any other list of arguments is taken as a new list value for the KEY variable discarding the previous value.</source>
          <target state="translated">Наконец,любой другой список аргументов принимается как новое значение списка для переменной KEY,отбрасывающей предыдущее значение.</target>
        </trans-unit>
        <trans-unit id="2782a08306f78a46a43ca3f4245df407dada422a" translate="yes" xml:space="preserve">
          <source>Finally, as a general note, try not to use an excessive amount of markup. As documented here and in &lt;a href=&quot;pod/man&quot;&gt;Pod::Man&lt;/a&gt;, you can safely leave Perl variables, function names, man page references, and the like unadorned by markup and the POD translators will figure it out for you. This makes it much easier to later edit the documentation. Note that many existing translators will do the wrong thing with e-mail addresses when wrapped in L&amp;lt;&amp;gt;, so don't do that.</source>
          <target state="translated">Наконец, в качестве общего примечания постарайтесь не использовать чрезмерное количество разметки. Как описано здесь и в &lt;a href=&quot;pod/man&quot;&gt;Pod :: Man&lt;/a&gt; , вы можете спокойно оставить Perl-переменные, имена функций, ссылки на справочные страницы и тому подобное, не приукрашенные разметкой, и переводчики POD разберются с этим за вас. Это значительно упрощает последующее редактирование документации. Обратите внимание, что многие существующие переводчики будут делать неправильные вещи с адресами электронной почты, заключенными в L &amp;lt;&amp;gt;, поэтому не делайте этого.</target>
        </trans-unit>
        <trans-unit id="09dd5948c51d9dbe80c668a49680794506b31bfd" translate="yes" xml:space="preserve">
          <source>Finally, because Perl is frequently (but not always, and certainly not by definition) an interpreted language, you can write your programs and test them without an intermediate compilation step, allowing you to experiment and test/debug quickly and easily. This ease of experimentation flattens the learning curve even more.</source>
          <target state="translated">Наконец,поскольку Perl часто (но не всегда,и уж точно не по определению)является интерпретируемым языком,вы можете писать свои программы и тестировать их без промежуточного этапа компиляции,позволяя вам экспериментировать и тестировать/отлаживать их быстро и легко.Такая простота экспериментов еще больше сглаживает кривую обучения.</target>
        </trans-unit>
        <trans-unit id="4a510065fc482271aa62171fe6b3a6de41010a11" translate="yes" xml:space="preserve">
          <source>Finally, documentation intended for core Perl developers lives in the</source>
          <target state="translated">Наконец,документация,предназначенная для разработчиков на ядре Perl,живет в</target>
        </trans-unit>
        <trans-unit id="ef0d2a6fbc127dfe3fabf24f53dec0be787cb458" translate="yes" xml:space="preserve">
          <source>Finally, for backward (and we do mean &quot;backward&quot;) compatibility, Perl permits these unnecessary but widely-supported conversions:</source>
          <target state="translated">Наконец,для обратной (а мы действительно имеем в виду &quot;обратную&quot;)совместимости Perl допускает эти ненужные,но широко поддерживаемые преобразования:</target>
        </trans-unit>
        <trans-unit id="b81575352f8aab412fd4cb07d0470076b14f1f18" translate="yes" xml:space="preserve">
          <source>Finally, here is yet another way to do comma-separated value parsing:</source>
          <target state="translated">Наконец,вот еще один способ разобрать разделенные запятыми значения:</target>
        </trans-unit>
        <trans-unit id="834a9815bc42b39ddd5279d8456b87a013959fa0" translate="yes" xml:space="preserve">
          <source>Finally, here's an example of the full typemap file for mapping C strings of the &lt;code&gt;char *&lt;/code&gt; type to Perl scalars/strings:</source>
          <target state="translated">Наконец, вот пример полного файла карты типов для отображения строк C типа &lt;code&gt;char *&lt;/code&gt; на скаляры / строки Perl:</target>
        </trans-unit>
        <trans-unit id="bba57917092f0217e7811ec4321a57605d773dd9" translate="yes" xml:space="preserve">
          <source>Finally, if the command line ends with '&amp;amp;', the entire command is run in the background as an asynchronous subprocess.</source>
          <target state="translated">Наконец, если командная строка заканчивается символом &amp;laquo;&amp;amp;&amp;raquo;, вся команда выполняется в фоновом режиме как асинхронный подпроцесс.</target>
        </trans-unit>
        <trans-unit id="1e49365bee26ebdbc8e5446418348a20a97dc14c" translate="yes" xml:space="preserve">
          <source>Finally, if you feel like a real challenge, have a go at writing a full-blown Perl macro preprocessor as a source filter. Borrow the useful features from the C preprocessor and any other macro processors you know. The tricky bit will be choosing how much knowledge of Perl's syntax you want your filter to have.</source>
          <target state="translated">Наконец,если вы чувствуете себя настоящим вызовом,попробуйте написать полноценный макропроцессор Perl в качестве исходного фильтра.Одолжите полезные функции препроцессора C и любых других макропроцессоров,которые вам известны.Коварный бит будет заключаться в выборе того,сколько знаний синтаксиса Perl вы хотите,чтобы ваш фильтр имел.</target>
        </trans-unit>
        <trans-unit id="88728c279fead59f6cd8637f346aa4a89bc4ca1d" translate="yes" xml:space="preserve">
          <source>Finally, it searches down the C3 MRO list until it reaches the contextually enclosing class, then searches further down the MRO list for the next method with the same name as the contextually enclosing method.</source>
          <target state="translated">Наконец,он ищет вниз по списку C3 MRO до тех пор,пока не достигнет класса контекстного добавления,затем ищет дальше по списку MRO следующий метод с тем же именем,что и метод контекстного добавления.</target>
        </trans-unit>
        <trans-unit id="d8f4b0ff247923b3eb8f0e0514234b9fa893f6fd" translate="yes" xml:space="preserve">
          <source>Finally, it's possible to override localtime and gmtime everywhere, by including the ':override' tag in the import list:</source>
          <target state="translated">Наконец,можно переопределить локальное время и gmtime везде,включив тег ':override' в список импорта:</target>
        </trans-unit>
        <trans-unit id="f5aad188b46d292eb5dea6e10dfb430bbcea6367" translate="yes" xml:space="preserve">
          <source>Finally, keep in mind that Perl might not be the right tool for every job. You're a much better advocate if your claims are reasonable and grounded in reality. Dogmatically advocating anything tends to make people discount your message. Be honest about possible disadvantages to your choice of Perl since any choice has trade-offs.</source>
          <target state="translated">Наконец,имейте в виду,что Perl может быть не самым подходящим инструментом для любой работы.Ты гораздо лучше защищаешь,если твои претензии разумны и обоснованы в реальности.Догматически отстаивая что-либо,люди склонны сбрасывать со счетов ваше послание.Будьте честны в отношении возможных недостатков вашего выбора Perl,так как любой выбор имеет компромиссы.</target>
        </trans-unit>
        <trans-unit id="12d654760faef187bf9fcd2c080146c42b559499" translate="yes" xml:space="preserve">
          <source>Finally, keep in mind that subpatterns created inside a DEFINE block count towards the absolute and relative number of captures, so this:</source>
          <target state="translated">Наконец,имейте в виду,что подмаски,созданные внутри блока DEFINE,отсчитывают абсолютное и относительное число захватов,так что это:</target>
        </trans-unit>
        <trans-unit id="e50add68bf383c512c89d12d1f1fbdacf62aaedc" translate="yes" xml:space="preserve">
          <source>Finally, let's get those four fields. By now, you shouldn't have any problems with the first three fields - but how can we use the byte count of the data in the first field as a length for the data field? Here the codes &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;X&lt;/code&gt; come to the rescue, as they permit jumping back and forth in the string to unpack.</source>
          <target state="translated">Наконец, давайте получим эти четыре поля. К настоящему времени у вас не должно возникнуть проблем с первыми тремя полями - но как мы можем использовать количество байтов данных в первом поле в качестве длины для поля данных? Здесь на помощь приходят коды &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;X&lt;/code&gt; , так как они позволяют прыгать вперед и назад по строке для распаковки.</target>
        </trans-unit>
        <trans-unit id="0bb929b935f9baf3ae2ecaa9eade20a81808b33d" translate="yes" xml:space="preserve">
          <source>Finally, most properties related to decomposition are accessible via &lt;a href=&quot;unicode/normalize&quot;&gt;Unicode::Normalize&lt;/a&gt;.</source>
          <target state="translated">Наконец, большинство свойств, связанных с декомпозицией, доступны через &lt;a href=&quot;unicode/normalize&quot;&gt;Unicode :: Normalize&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="de4b908f9ba516df7dd4589f61d68201fc354294" translate="yes" xml:space="preserve">
          <source>Finally, on NFS file systems the link count of the file handle does not always go to zero immediately after unlinking. Currently, this command is expected to fail on NFS disks.</source>
          <target state="translated">Наконец,на файловых системах NFS счетчик ссылок в файловом дескрипторе не всегда сходит на ноль сразу после развязки.В настоящее время ожидается,что эта команда не будет работать на дисках NFS.</target>
        </trans-unit>
        <trans-unit id="c0056d49190cd844d22da94e2f6a73f54ba22274" translate="yes" xml:space="preserve">
          <source>Finally, once the loop terminates (because we got a 0 or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; in the queue, which serves as a note to terminate), we pass on the notice to our child, and wait for it to exit if we've created a child (lines 27 and 30).</source>
          <target state="translated">Наконец, как только цикл завершается (поскольку у нас есть 0 или &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; в очереди, что служит примечанием для завершения), мы передаем уведомление нашему дочернему элементу и ждем его выхода, если мы создали дочерний элемент ( строки 27 и 30).</target>
        </trans-unit>
        <trans-unit id="d4b58a368a203e349112a813fb51574ad5df46e1" translate="yes" xml:space="preserve">
          <source>Finally, quoted strings cannot span multiple lines. The general rule is that the identifier must be a string literal. Stick with that, and you should be safe.</source>
          <target state="translated">Наконец,цитируемые строки не могут охватывать несколько строк.Общее правило заключается в том,что идентификатор должен быть строковым литералом.Придерживайтесь этого правила,и вы должны быть в безопасности.</target>
        </trans-unit>
        <trans-unit id="826093a59348aea220454d887a381ab8cec4085f" translate="yes" xml:space="preserve">
          <source>Finally, see the published Unicode Standard (page numbers are from version 6.0.0), including these specific annexes and technical reports:</source>
          <target state="translated">Наконец,см.опубликованный стандарт Юникод (номера страниц начиная с версии 6.0.0),включая эти конкретные приложения и технические отчеты:</target>
        </trans-unit>
        <trans-unit id="8e4fc718922fd33861fef8abc551f702371be5ab" translate="yes" xml:space="preserve">
          <source>Finally, some built-ins (e.g. &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt;) can't be overridden.</source>
          <target state="translated">Наконец, некоторые встроенные функции (например, &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; ) нельзя переопределить.</target>
        </trans-unit>
        <trans-unit id="fbb0bc03e6c567aa9d048447baa9b177ddc77752" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;b&gt;-i&lt;/b&gt; switch does not impede execution when no files are given on the command line. In this case, no backup is made (the original file cannot, of course, be determined) and processing proceeds from STDIN to STDOUT as might be expected.</source>
          <target state="translated">Наконец, ключ &lt;b&gt;-i&lt;/b&gt; не препятствует выполнению, если в командной строке не указаны файлы. В этом случае резервное копирование не производится (исходный файл, конечно, не может быть определен), и обработка переходит от STDIN к STDOUT, как и следовало ожидать.</target>
        </trans-unit>
        <trans-unit id="6e903744590309f2cbd34fe629a8e6cdbf621b80" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;//&lt;/code&gt; default delimiters for a match can be changed to arbitrary delimiters by putting an &lt;code&gt;'m'&lt;/code&gt; out front:</source>
          <target state="translated">Наконец, разделители &lt;code&gt;//&lt;/code&gt; по умолчанию для совпадения можно заменить на произвольные, поставив перед ним &lt;code&gt;'m'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="042bc8fcc5c7d7efd6780c2133d47ab6beba3218" translate="yes" xml:space="preserve">
          <source>Finally, the Mytest.xs file should look something like this:</source>
          <target state="translated">Наконец,файл Mytest.xs должен выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="c759b85c1874191b3c67e6077ecccb7f1cac3596" translate="yes" xml:space="preserve">
          <source>Finally, the Perl community as a whole recognizes that respect for ownership of code, respect for artistic control, proper credit, and active effort to prevent unintentional code skew or communication gaps is vital to the health of the community and Perl itself. Members of a community should not normally have to resort to rules and laws to deal with each other, and this document, although it contains rules so as to be clear, is about an attitude and general approach. The first step in any dispute should be open communication, respect for opposing views, and an attempt at a compromise. In nearly every circumstance nothing more will be necessary, and certainly no more drastic measure should be used until every avenue of communication and discussion has failed.</source>
          <target state="translated">Наконец,сообщество Perl в целом признает,что уважение права собственности на кодекс,уважение художественного контроля,надлежащий кредит и активные усилия по предотвращению непреднамеренного перекоса кода или пробелов в коммуникации имеют жизненно важное значение для здоровья сообщества и самого Perl.Члены сообщества,как правило,не должны прибегать к правилам и законам,чтобы иметь дело друг с другом,и настоящий документ,хотя он и содержит правила,чтобы быть ясным,касается отношения и общего подхода.Первым шагом в любом споре должно быть открытое общение,уважение противоположных взглядов и попытка компромисса.Практически при любых обстоятельствах больше ничего не потребуется,и,конечно же,не следует применять более решительные меры до тех пор,пока все способы коммуникации и обсуждения не будут исчерпаны.</target>
        </trans-unit>
        <trans-unit id="73b5ad0b05d4d0374aa60aaf0eda94d058db5ae7" translate="yes" xml:space="preserve">
          <source>Finally, the documentation. The job is never done until the paperwork is over, so let's describe the change we've just made. The relevant place is</source>
          <target state="translated">Наконец-то,документация.Работа никогда не выполняется до тех пор,пока не закончится бумажная работа,так что давайте опишем изменения,которые мы только что сделали.Соответствующее место</target>
        </trans-unit>
        <trans-unit id="80876825b2c59d50931c0454f32d3120b5201e0a" translate="yes" xml:space="preserve">
          <source>Finally, the following set of approaches was offered by Jeffrey Friedl, whose article in issue #5 of The Perl Journal talks about this very matter.</source>
          <target state="translated">Наконец,следующий набор подходов предложил Джеффри Фридл,чья статья в номере 5 журнала The Perl Journal рассказывает именно об этом вопросе.</target>
        </trans-unit>
        <trans-unit id="3dff018de1b9478268177e77483e9300bee06c55" translate="yes" xml:space="preserve">
          <source>Finally, the message also can happen under the &lt;code&gt;/x&lt;/code&gt; regex modifier when the &lt;code&gt;\N&lt;/code&gt; is separated by spaces from the &lt;code&gt;{&lt;/code&gt;, in which case, remove the spaces.</source>
          <target state="translated">Наконец, сообщение также может появиться под модификатором регулярного выражения &lt;code&gt;/x&lt;/code&gt; , когда &lt;code&gt;\N&lt;/code&gt; отделяется пробелами от &lt;code&gt;{&lt;/code&gt; , и в этом случае удалите пробелы.</target>
        </trans-unit>
        <trans-unit id="778ba92f0eda34f1617f29aaf6a42ae17012b6e9" translate="yes" xml:space="preserve">
          <source>Finally, the multiple-angle-bracket form does</source>
          <target state="translated">Наконец,форма с множественными угловыми скобками делает</target>
        </trans-unit>
        <trans-unit id="63f8e8ad12d75d623f33e44387f1b276ef571892" translate="yes" xml:space="preserve">
          <source>Finally, there is a &lt;code&gt;LOGOP&lt;/code&gt; , or logic op. Like a &lt;code&gt;LISTOP&lt;/code&gt; , this has one or more children, but it doesn't have an &lt;code&gt;op_last&lt;/code&gt; field: so you have to follow &lt;code&gt;op_first&lt;/code&gt; and then the &lt;code&gt;OpSIBLING&lt;/code&gt; chain itself to find the last child. Instead it has an &lt;code&gt;op_other&lt;/code&gt; field, which is comparable to the &lt;code&gt;op_next&lt;/code&gt; field described below, and represents an alternate execution path. Operators like &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; are &lt;code&gt;LOGOP&lt;/code&gt; s. Note that in general, &lt;code&gt;op_other&lt;/code&gt; may not point to any of the direct children of the &lt;code&gt;LOGOP&lt;/code&gt; .</source>
          <target state="translated">Наконец, есть &lt;code&gt;LOGOP&lt;/code&gt; , или логическая операция . Как и &lt;code&gt;LISTOP&lt;/code&gt; , у него есть один или несколько дочерних элементов , но у него нет поля &lt;code&gt;op_last&lt;/code&gt; : поэтому вы должны следовать &lt;code&gt;op_first&lt;/code&gt; , а затем самой цепочке &lt;code&gt;OpSIBLING&lt;/code&gt; , чтобы найти последнего дочернего элемента . Вместо этого у него есть поле &lt;code&gt;op_other&lt;/code&gt; , которое сравнимо с полем &lt;code&gt;op_next&lt;/code&gt; , описанным ниже, и представляет собой альтернативный путь выполнения. Операторы любят &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; и &lt;code&gt;?&lt;/code&gt; являются &lt;code&gt;LOGOP&lt;/code&gt; . Обратите внимание, что обычно &lt;code&gt;op_other&lt;/code&gt; не может указывать ни на одного из прямых дочерних элементов &lt;code&gt;LOGOP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a7cdec53bb27d155c030f9892a0eeb03fd88eb1" translate="yes" xml:space="preserve">
          <source>Finally, there is also an entirely different approach by unpacking big endian shorts and packing them in the reverse byte order:</source>
          <target state="translated">Наконец,существует и совершенно другой подход:распаковывать большие эндийские шорты и упаковывать их в обратном порядке байтов:</target>
        </trans-unit>
        <trans-unit id="453b0692eb90c0dfa9ea5982b6a592f258b890f5" translate="yes" xml:space="preserve">
          <source>Finally, there is the code that actually does the filtering. For this type of Perl source filter, all the filtering is done in a method called &lt;code&gt;filter()&lt;/code&gt; . (It is also possible to write a Perl source filter using a closure. See the &lt;code&gt;Filter::Util::Call&lt;/code&gt; manual page for more details.) It's called every time the Perl parser needs another line of source to process. The &lt;code&gt;filter()&lt;/code&gt; method, in turn, reads lines from the source stream using the &lt;code&gt;filter_read()&lt;/code&gt; function.</source>
          <target state="translated">Наконец, есть код, который фактически выполняет фильтрацию. Для этого типа исходного фильтра Perl вся фильтрация выполняется с помощью метода &lt;code&gt;filter()&lt;/code&gt; . (Также можно написать исходный фильтр Perl, используя замыкание. Для получения дополнительной информации см. Страницу руководства &lt;code&gt;Filter::Util::Call&lt;/code&gt; .) Он вызывается каждый раз, когда парсеру Perl требуется другая строка исходного кода для обработки. Метод &lt;code&gt;filter()&lt;/code&gt; , в свою очередь, считывает строки из исходного потока с помощью функции &lt;code&gt;filter_read()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dff384a2e72772724b586203a02673aa837c967d" translate="yes" xml:space="preserve">
          <source>Finally, using accessors makes inheritance much simpler. Subclasses can use the accessors rather than having to know how a parent class is implemented internally.</source>
          <target state="translated">Наконец,использование аксессуаров значительно упрощает процесс наследования.Подклассы могут использовать аксессуары вместо того,чтобы знать,как класс-родитель реализован внутри себя.</target>
        </trans-unit>
        <trans-unit id="a0ee269426b10540758eda6f3baa910232cd84eb" translate="yes" xml:space="preserve">
          <source>Finally, we have &lt;a href=&quot;http://search.cpan.org/perldoc/Class::Tiny&quot;&gt;Class::Tiny&lt;/a&gt;. This module truly lives up to its name. It has an incredibly minimal API and absolutely no dependencies on any recent Perl. Still, we think it's a lot easier to use than writing your own OO code from scratch.</source>
          <target state="translated">Наконец, у нас есть &lt;a href=&quot;http://search.cpan.org/perldoc/Class::Tiny&quot;&gt;Class :: Tiny&lt;/a&gt; . Этот модуль действительно оправдывает свое название. Он имеет невероятно минимальный API и абсолютно не зависит от какого-либо недавнего Perl. Тем не менее, мы думаем, что это намного проще в использовании, чем писать собственный объектно-ориентированный код с нуля.</target>
        </trans-unit>
        <trans-unit id="80f162582be94b96acbf3901ff2dad6e5237d61d" translate="yes" xml:space="preserve">
          <source>Finally, when &lt;code&gt;filter&lt;/code&gt; or the anonymous sub are finished processing, they are expected to return the filtered source using &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Наконец, когда &lt;code&gt;filter&lt;/code&gt; или анонимная подпрограмма завершают обработку, ожидается, что они вернут отфильтрованный источник с помощью &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="237e2517518e5a7e38bf850e59773fff293d743f" translate="yes" xml:space="preserve">
          <source>Finally, you can append an optional third argument, in &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;,&lt;i&gt;arg2&lt;/i&gt;, &lt;i&gt;note&lt;/i&gt;)&lt;/code&gt;, where</source>
          <target state="translated">Наконец, вы можете добавить необязательный третий аргумент в &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;,&lt;i&gt;arg2&lt;/i&gt;, &lt;i&gt;note&lt;/i&gt;)&lt;/code&gt; , где</target>
        </trans-unit>
        <trans-unit id="694939534870b0a1edb23c3bf281899ee38f8c47" translate="yes" xml:space="preserve">
          <source>Finally, you'll need to copy the extension's Perl library module to the</source>
          <target state="translated">Наконец,вам нужно будет скопировать модуль библиотеки Perl расширения в папку</target>
        </trans-unit>
        <trans-unit id="860f05ae24e478a14a3acf15fc650e6557c5de7d" translate="yes" xml:space="preserve">
          <source>Find POD documents in directory trees</source>
          <target state="translated">Поиск документов POD в деревьях каталогов</target>
        </trans-unit>
        <trans-unit id="e1857def4ee2d2eb29e93e010b1a0b29040a49b1" translate="yes" xml:space="preserve">
          <source>Find a named lexical anywhere in a chain of nested pads. Add fake entries in the inner pads if it's found in an outer one.</source>
          <target state="translated">Найдите названный лексикон в любом месте цепочки вложенных подушечек.Добавьте фальшивые записи во внутренние прокладки,если они найдены во внешней.</target>
        </trans-unit>
        <trans-unit id="4564f34f47e157e7d1dad65f67463f62f1be357a" translate="yes" xml:space="preserve">
          <source>Find an area of Perl that seems interesting to you, and see if you can work out how it works. Scan through the source, and step over it in the debugger. Play, poke, investigate, fiddle! You'll probably get to understand not just your chosen area but a much wider range of</source>
          <target state="translated">Найдите область Perl,которая кажется вам интересной,и посмотрите,сможете ли вы разобраться,как она работает.Просканируйте исходник и перешагните через него в отладчике.Играй,тыкай,исследуй,скрипка! Скорее всего,вы поймете не только выбранную область,но и гораздо более широкий диапазон</target>
        </trans-unit>
        <trans-unit id="b0f962c203daff2b574f4bbd4661b46cb058cc00" translate="yes" xml:space="preserve">
          <source>Find and return the variable that is named &lt;code&gt;$_&lt;/code&gt; in the lexical scope of the currently-executing function. This may be a lexical &lt;code&gt;$_&lt;/code&gt; , or will otherwise be the global one.</source>
          <target state="translated">Найдите и верните переменную с именем &lt;code&gt;$_&lt;/code&gt; в лексической области выполняемой в данный момент функции. Это может быть лексический знак &lt;code&gt;$_&lt;/code&gt; или глобальный.</target>
        </trans-unit>
        <trans-unit id="418498cca51e97a1b0d2b4c89d2b05e75464656f" translate="yes" xml:space="preserve">
          <source>Find out whether a plan has been defined. &lt;code&gt;$plan&lt;/code&gt; is either &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (no plan has been set), &lt;code&gt;no_plan&lt;/code&gt; (indeterminate # of tests) or an integer (the number of expected tests).</source>
          <target state="translated">Узнайте, определен ли план. &lt;code&gt;$plan&lt;/code&gt; имеет &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (не задан план), &lt;code&gt;no_plan&lt;/code&gt; (неопределенное количество тестов) или целое число (количество ожидаемых тестов).</target>
        </trans-unit>
        <trans-unit id="4ac57f2d73d65d94cbdbe0755aabac6325af065d" translate="yes" xml:space="preserve">
          <source>Find the general category of a numeric codepoint.</source>
          <target state="translated">Найдите общую категорию числовой кодовой точки.</target>
        </trans-unit>
        <trans-unit id="a49c3913d7af3c4d57a065a7a52f55890db2015f" translate="yes" xml:space="preserve">
          <source>Find the name of the undefined variable (if any) that caused the operator to issue a &quot;Use of uninitialized value&quot; warning. If match is true, only return a name if its value matches uninit_sv. So roughly speaking, if a unary operator (such as OP_COS) generates a warning, then following the direct child of the op may yield an OP_PADSV or OP_GV that gives the name of the undefined variable. On the other hand, with OP_ADD there are two branches to follow, so we only print the variable name if we get an exact match. desc_p points to a string pointer holding the description of the op. This may be updated if needed.</source>
          <target state="translated">Найти имя неопределённой переменной (если таковая имеется),из-за которой оператор выдал предупреждение &quot;Use of uninitialized value&quot; (Использование неинициализированного значения).Если значение совпадает с uninit_sv,возвращать имя можно только в том случае,если его значение совпадает с uninit_sv.Таким образом,грубо говоря,если унарный оператор (например,OP_COS)выдает предупреждение,то вслед за прямым дочерним оператором может выдаваться OP_PADSV или OP_GV,который выдает имя неопределённой переменной.С другой стороны,в случае OP_ADD есть две ветви,которым нужно следовать,поэтому мы выводим имя переменной только в том случае,если получим точное совпадение.desc_p указывает на строковый указатель,содержащий описание операции.При необходимости оно может быть обновлено.</target>
        </trans-unit>
        <trans-unit id="6ac43fb4e0d5bd1c0782abaa41490e339609fd8c" translate="yes" xml:space="preserve">
          <source>Find the position of the lexical &lt;code&gt;$_&lt;/code&gt; in the pad of the currently-executing function. Returns the offset in the current pad, or &lt;code&gt;NOT_IN_PAD&lt;/code&gt; if there is no lexical &lt;code&gt;$_&lt;/code&gt; in scope (in which case the global one should be used instead). &lt;a href=&quot;#find_rundefsv&quot;&gt;find_rundefsv&lt;/a&gt; is likely to be more convenient.</source>
          <target state="translated">Найдите положение лексического символа &lt;code&gt;$_&lt;/code&gt; на панели выполняемой в данный момент функции. Возвращает смещение в текущем &lt;code&gt;NOT_IN_PAD&lt;/code&gt; или NOT_IN_PAD, если в области нет лексического &lt;code&gt;$_&lt;/code&gt; (в этом случае вместо него следует использовать глобальный). &lt;a href=&quot;#find_rundefsv&quot;&gt;find_rundefsv&lt;/a&gt; скорее всего будет удобнее.</target>
        </trans-unit>
        <trans-unit id="449a6849d1b11914b85fc078a256f3db73a2b32b" translate="yes" xml:space="preserve">
          <source>Find the start position where a regex match should be attempted, or possibly if the regex engine should not be run because the pattern can't match. This is called, as appropriate, by the core, depending on the values of the &lt;code&gt;extflags&lt;/code&gt; member of the &lt;code&gt;regexp&lt;/code&gt; structure.</source>
          <target state="translated">Найдите начальную позицию, в которой следует попытаться сопоставить регулярное выражение, или, возможно, если механизм регулярных выражений не должен запускаться, потому что шаблон не может совпадать. При необходимости это вызывается ядром в зависимости от значений члена &lt;code&gt;extflags&lt;/code&gt; структуры &lt;code&gt;regexp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6483e76c333ac42379066b4aedb6e408fdbe129b" translate="yes" xml:space="preserve">
          <source>FindBin</source>
          <target state="translated">FindBin</target>
        </trans-unit>
        <trans-unit id="24c31d2b2286d66b429b3c123e559310944ed2de" translate="yes" xml:space="preserve">
          <source>FindBin - Locate directory of original perl script</source>
          <target state="translated">FindBin-Найти каталог оригинального perl скрипта</target>
        </trans-unit>
        <trans-unit id="4369a8a5c4e42e43d5e7bb66ccfd1c78f33f275a" translate="yes" xml:space="preserve">
          <source>FindBin - optional module which deals with paths relative to the source file.</source>
          <target state="translated">FindBin-дополнительный модуль,который работает с путями относительно исходного файла.</target>
        </trans-unit>
        <trans-unit id="f086fc99759a8e3bb0203cfe84782842d1a193aa" translate="yes" xml:space="preserve">
          <source>FindBin is supported as part of the core perl distribution. Please send bug reports to &amp;lt;</source>
          <target state="translated">FindBin поддерживается как часть основного дистрибутива Perl. Отправляйте отчеты об ошибках по адресу &amp;lt;</target>
        </trans-unit>
        <trans-unit id="9448bfafc842c027dacc4896519d4bae55c41c99" translate="yes" xml:space="preserve">
          <source>Finding IANA Character Set Registry names</source>
          <target state="translated">Поиск имен регистров наборов символов IANA</target>
        </trans-unit>
        <trans-unit id="eef2fdb8cb6b261375ae8d62a702d5b95f90b35a" translate="yes" xml:space="preserve">
          <source>Finding Magic</source>
          <target state="translated">Поиск магии</target>
        </trans-unit>
        <trans-unit id="e4f6c5e89298ef6e35e80792cf1b54756849aae5" translate="yes" xml:space="preserve">
          <source>Finding and running system commands made easy</source>
          <target state="translated">Поиск и запуск системных команд стал легким</target>
        </trans-unit>
        <trans-unit id="96480ceeb561d8e5864564872e9b2a46637a4002" translate="yes" xml:space="preserve">
          <source>Finding locales</source>
          <target state="translated">Поиск локалей</target>
        </trans-unit>
        <trans-unit id="87d12ac1eef851da5ad3ec16ab4427086784516f" translate="yes" xml:space="preserve">
          <source>Finding packages and VERSION</source>
          <target state="translated">Поиск пакетов и ВЕРСИИ</target>
        </trans-unit>
        <trans-unit id="6d70dab88d530f69df03bc2322d08f1cd465a479" translate="yes" xml:space="preserve">
          <source>Finds the executables PERL and FULLPERL</source>
          <target state="translated">Находит исполняемые файлы PERL и FULLPERL</target>
        </trans-unit>
        <trans-unit id="22bcd7072415a74f9601a9db40691f4be186016b" translate="yes" xml:space="preserve">
          <source>Finds the magic pointer for type matching the SV. See &lt;code&gt;sv_magic&lt;/code&gt; .</source>
          <target state="translated">Находит волшебный указатель для типа, соответствующего SV. См. &lt;code&gt;sv_magic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25d979215bfecc25b84803c1f222b66fe8c9e2ae" translate="yes" xml:space="preserve">
          <source>Finds the magic pointer of &lt;code&gt;type&lt;/code&gt; with the given &lt;code&gt;vtbl&lt;/code&gt; for the &lt;code&gt;SV&lt;/code&gt; . See &lt;code&gt;sv_magicext&lt;/code&gt; .</source>
          <target state="translated">Находит волшебный указатель &lt;code&gt;type&lt;/code&gt; с данным &lt;code&gt;vtbl&lt;/code&gt; для &lt;code&gt;SV&lt;/code&gt; . См. &lt;code&gt;sv_magicext&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="267b05432936f6d23e350d21b3fe892d9d8dbea3" translate="yes" xml:space="preserve">
          <source>Fire the debugger up again on your script and we'll look at the help menu. There's a couple of ways of calling help: a simple '&lt;b&gt;h&lt;/b&gt;' will get the summary help list, '&lt;b&gt;|h&lt;/b&gt;' (pipe-h) will pipe the help through your pager (which is (probably 'more' or 'less'), and finally, '&lt;b&gt;h h&lt;/b&gt;' (h-space-h) will give you the entire help screen. Here is the summary page:</source>
          <target state="translated">Снова запустите отладчик в своем скрипте, и мы посмотрим на меню справки. Есть несколько способов вызвать справку: простой ' &lt;b&gt;h&lt;/b&gt; ' получит сводный список справки, ' &lt;b&gt;| h&lt;/b&gt; ' (pipe-h) направит справку через ваш пейджер (что (вероятно, 'больше' или 'меньше') и, наконец, &quot; &lt;b&gt;чч&lt;/b&gt; &quot; (ч-пробел-ч) откроет вам весь экран справки. Вот итоговая страница:</target>
        </trans-unit>
        <trans-unit id="cef42e83f0eb4f1a99e0bddde90be004038a21df" translate="yes" xml:space="preserve">
          <source>Fires when Perl has successfully loaded an individual file, whether from &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;. This probe fires after the file is read from disk and its contents evaluated. The filename argument is converted to local filesystem paths instead of providing &lt;code&gt;Module::Name&lt;/code&gt; -style names.</source>
          <target state="translated">Срабатывает, когда Perl успешно загрузил отдельный файл, будь то из &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; . Этот зонд запускается после чтения файла с диска и оценки его содержимого. Аргумент filename преобразуется в пути локальной файловой системы вместо предоставления &lt;code&gt;Module::Name&lt;/code&gt; стиле Module :: Name .</target>
        </trans-unit>
        <trans-unit id="7704de478a9404e667918d6d09d2c1e3a1cb6a87" translate="yes" xml:space="preserve">
          <source>Fires when Perl is about to load an individual file, whether from &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;. This probe fires before the file is read from disk. The filename argument is converted to local filesystem paths instead of providing &lt;code&gt;Module::Name&lt;/code&gt; -style names.</source>
          <target state="translated">Срабатывает, когда Perl собирается загрузить отдельный файл, будь то &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; . Этот зонд срабатывает перед чтением файла с диска. Аргумент filename преобразуется в пути локальной файловой системы вместо предоставления &lt;code&gt;Module::Name&lt;/code&gt; стиле Module :: Name .</target>
        </trans-unit>
        <trans-unit id="49d7fed0e266f24545d9104466ab74b18bdd8f35" translate="yes" xml:space="preserve">
          <source>Firewalls can be categorized into three basic types.</source>
          <target state="translated">Брандмауэры можно разделить на три основных типа.</target>
        </trans-unit>
        <trans-unit id="a00bc27da396d3a81b2819430816be98253f7657" translate="yes" xml:space="preserve">
          <source>First In, First Out. See also &lt;b&gt;LIFO&lt;/b&gt;. Also a nickname for a &lt;b&gt;named pipe&lt;/b&gt;.</source>
          <target state="translated">Первым прибыл, первым обслужен. См. Также &lt;b&gt;LIFO&lt;/b&gt; . Также псевдоним для &lt;b&gt;именованного канала&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="8fe7145d9c6c14d380f19ecbb52aad0be3d15872" translate="yes" xml:space="preserve">
          <source>First available in Perl 5.10.1 (the 5.10.0 version behaved differently), binary &lt;code&gt;~~&lt;/code&gt; does a &quot;smartmatch&quot; between its arguments. This is mostly used implicitly in the &lt;code&gt;when&lt;/code&gt; construct described in &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt;, although not all &lt;code&gt;when&lt;/code&gt; clauses call the smartmatch operator. Unique among all of Perl's operators, the smartmatch operator can recurse. The smartmatch operator is &lt;a href=&quot;perlpolicy#experimental&quot;&gt;experimental&lt;/a&gt; and its behavior is subject to change.</source>
          <target state="translated">Впервые доступный в Perl 5.10.1 (версия 5.10.0 вела себя по-другому), двоичный &lt;code&gt;~~&lt;/code&gt; выполняет &amp;laquo;интеллектуальное соответствие&amp;raquo; между своими аргументами. Это в основном используется неявно в &lt;code&gt;when&lt;/code&gt; это конструкции , описанной в &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt; , хотя и не все , &lt;code&gt;when&lt;/code&gt; пункты вызвать smartmatch оператора. Уникальный среди всех операторов Perl оператор smartmatch может выполнять рекурсию. Оператор smartmatch является &lt;a href=&quot;perlpolicy#experimental&quot;&gt;экспериментальным,&lt;/a&gt; и его поведение может изменяться.</target>
        </trans-unit>
        <trans-unit id="63af0ded76d246a89c78d019ed5af7004abaf7ca" translate="yes" xml:space="preserve">
          <source>First does a distdir. Then a command $(PREOP) which defaults to a null command, followed by $(TO_UNIX), which defaults to a null command under UNIX, and will convert files in distribution directory to UNIX format otherwise. Next it runs &lt;code&gt;tar&lt;/code&gt; on that directory into a tarfile and deletes the directory. Finishes with a command $(POSTOP) which defaults to a null command.</source>
          <target state="translated">Сначала делает distdir. Затем команда $ (PREOP), которая по умолчанию является пустой командой, за которой следует $ (TO_UNIX), которая по умолчанию является пустой командой в UNIX, и в противном случае преобразует файлы в каталоге распространения в формат UNIX. Затем он запускает &lt;code&gt;tar&lt;/code&gt; для этого каталога в tar-файл и удаляет каталог. Завершается командой $ (POSTOP), значение которой по умолчанию равно null.</target>
        </trans-unit>
        <trans-unit id="2af22b932d239ecb2692524f84027e701417e610" translate="yes" xml:space="preserve">
          <source>First does a distdir. Then a command $(PREOP) which defaults to a null command. Next it runs &lt;code&gt;shar&lt;/code&gt; on that directory into a sharfile and deletes the intermediate directory again. Finishes with a command $(POSTOP) which defaults to a null command. Note: For shdist to work properly a &lt;code&gt;shar&lt;/code&gt; program that can handle directories is mandatory.</source>
          <target state="translated">Сначала делает distdir. Затем команда $ (PREOP), которая по умолчанию является пустой командой. Затем он запускает &lt;code&gt;shar&lt;/code&gt; для этого каталога в sharfile и снова удаляет промежуточный каталог. Завершается командой $ (POSTOP), значение которой по умолчанию равно null. Примечание. Для правильной работы shdist необходима программа &lt;code&gt;shar&lt;/code&gt; , которая может обрабатывать каталоги.</target>
        </trans-unit>
        <trans-unit id="32b6865bf0f3ae68c2cf337647431ed6a911b654" translate="yes" xml:space="preserve">
          <source>First does a distdir. Then a command $(PREOP) which defaults to a null command. Runs &lt;code&gt;$(ZIP) $(ZIPFLAGS)&lt;/code&gt; on that directory into a zipfile. Then deletes that directory. Finishes with a command $(POSTOP) which defaults to a null command.</source>
          <target state="translated">Сначала делает distdir. Затем команда $ (PREOP), которая по умолчанию является пустой командой. Запускает &lt;code&gt;$(ZIP) $(ZIPFLAGS)&lt;/code&gt; из этого каталога в zip-файл. Затем удаляет этот каталог. Завершается командой $ (POSTOP), значение которой по умолчанию равно null.</target>
        </trans-unit>
        <trans-unit id="87237cd69962d954afc8149676070ba7e99a30f3" translate="yes" xml:space="preserve">
          <source>First is the &quot;transitional compilation environment&quot;, described in lfcompile64(5). According to the man page,</source>
          <target state="translated">Во-первых,это &quot;переходное окружение компиляции&quot;,описанное в lfcompile64(5).Согласно man-странице,</target>
        </trans-unit>
        <trans-unit id="39f2e43e592aba75880c16ffdbd2296c6893e732" translate="yes" xml:space="preserve">
          <source>First of all &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; gets the type of the third parameter ('CODE' in this case). &lt;code&gt;attributes.pm&lt;/code&gt; checks if there is a subroutine called &lt;code&gt;MODIFY_&amp;lt;reftype&amp;gt;_ATTRIBUTES&lt;/code&gt; in the caller's namespace (here: 'main'). In this case a subroutine &lt;code&gt;MODIFY_CODE_ATTRIBUTES&lt;/code&gt; is required. Then this method is called to check if you have used a &quot;bad attribute&quot;. The subroutine call in this example would look like</source>
          <target state="translated">В первую очередь &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; получает тип третьего параметра (в данном случае CODE). &lt;code&gt;attributes.pm&lt;/code&gt; проверяет, есть ли подпрограмма &lt;code&gt;MODIFY_&amp;lt;reftype&amp;gt;_ATTRIBUTES&lt;/code&gt; в пространстве имен вызывающего (здесь: 'main'). В этом случае требуется подпрограмма &lt;code&gt;MODIFY_CODE_ATTRIBUTES&lt;/code&gt; . Затем этот метод вызывается, чтобы проверить, не использовали ли вы &amp;laquo;плохой атрибут&amp;raquo;. Вызов подпрограммы в этом примере будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="a5edeb3fa4c30eb9326cfd6ee3072f89d302a7fb" translate="yes" xml:space="preserve">
          <source>First of all note that if you're doing this for security reasons (to avoid people seeing passwords, for example) then you should rewrite your program so that critical information is never given as an argument. Hiding the arguments won't make your program completely secure.</source>
          <target state="translated">Прежде всего,обратите внимание,что если вы делаете это из соображений безопасности (чтобы люди не видели пароли,например),то вам следует переписать свою программу так,чтобы критическая информация никогда не приводилась в качестве аргумента.Скрытие аргументов не сделает вашу программу полностью безопасной.</target>
        </trans-unit>
        <trans-unit id="02342cfce74aa40ebbe7459fd67794792aa8eda6" translate="yes" xml:space="preserve">
          <source>First of all note that you have full access to the Symbian device when using Perl: you can do a lot of damage to your device (like removing system files) unless you are careful. Please do take backups before doing anything.</source>
          <target state="translated">Прежде всего,обратите внимание,что у вас есть полный доступ к Symbian-устройству при использовании Perl:вы можете сделать много повреждений устройству (например,удалить системные файлы),если не будете осторожны.Пожалуйста,сделайте резервное копирование,прежде чем что-либо делать.</target>
        </trans-unit>
        <trans-unit id="1463803ecb1c9b404836c68a0992ffedefb430c0" translate="yes" xml:space="preserve">
          <source>First of all, have you tried using the &lt;b&gt;-w&lt;/b&gt; switch?</source>
          <target state="translated">Прежде всего, пробовали ли вы использовать ключ &lt;b&gt;-w&lt;/b&gt; ?</target>
        </trans-unit>
        <trans-unit id="a4f52d54cf15399bdc6e2cfb2dc28b7c88455e40" translate="yes" xml:space="preserve">
          <source>First of all, however, you</source>
          <target state="translated">Прежде всего,ты</target>
        </trans-unit>
        <trans-unit id="83147c6de1b08740dd2da15332f4959df7841375" translate="yes" xml:space="preserve">
          <source>First of all, there's a few things you can do to make your life a lot more straightforward when it comes to debugging perl programs, without using the debugger at all. To demonstrate, here's a simple script, named &quot;hello&quot;, with a problem:</source>
          <target state="translated">Прежде всего,есть несколько вещей,которые можно сделать,чтобы сделать свою жизнь намного проще,когда дело доходит до отладки perl программ,без использования отладчика вообще.Чтобы продемонстрировать,вот простой сценарий,названный &quot;привет&quot;,с проблемой:</target>
        </trans-unit>
        <trans-unit id="04c84bafcaec13f658619ad91db4027ae060911a" translate="yes" xml:space="preserve">
          <source>First of all, when doing a match, one may get no run-time output even if debugging is enabled. This means that the regex engine was never entered and that all of the job was therefore done by the optimizer.</source>
          <target state="translated">Прежде всего,при совпадении можно не получить вывод времени выполнения,даже если включена отладка.Это означает,что регекс-движок так и не был введен,а значит,вся работа была выполнена оптимизатором.</target>
        </trans-unit>
        <trans-unit id="960494596b28f0ed04786d5db795d0496594f162" translate="yes" xml:space="preserve">
          <source>First off, you must have zlib 1.0.5 or better.</source>
          <target state="translated">Во-первых,у вас должен быть злиб 1.0.5 или лучше.</target>
        </trans-unit>
        <trans-unit id="5548dc2d3eeb7fa10ed6d62335952f1161d1be5c" translate="yes" xml:space="preserve">
          <source>First problem: deciding which functions will be public API functions and which will be private. All functions whose names begin &lt;code&gt;S_&lt;/code&gt; are private (think &quot;S&quot; for &quot;secret&quot; or &quot;static&quot;). All other functions begin with &quot;Perl_&quot;, but just because a function begins with &quot;Perl_&quot; does not mean it is part of the API. (See &lt;a href=&quot;#Internal-Functions&quot;&gt;Internal Functions&lt;/a&gt;.) The easiest way to be &lt;b&gt;sure&lt;/b&gt; a function is part of the API is to find its entry in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;. If it exists in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;, it's part of the API. If it doesn't, and you think it should be (i.e., you need it for your extension), send mail via &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; explaining why you think it should be.</source>
          <target state="translated">Первая проблема: решить, какие функции будут общедоступными функциями API, а какие - частными. Все функции, имена которых начинаются с &lt;code&gt;S_&lt;/code&gt; , являются частными (думайте, что &amp;laquo;S&amp;raquo; означает &amp;laquo;секретный&amp;raquo; или &amp;laquo;статический&amp;raquo;). Все остальные функции начинаются с &amp;laquo;Perl_&amp;raquo;, но то, что функция начинается с &amp;laquo;Perl_&amp;raquo;, не означает, что она является частью API. (См. &lt;a href=&quot;#Internal-Functions&quot;&gt;Внутренние функции&lt;/a&gt; .) Самый простой способ &lt;b&gt;убедиться,&lt;/b&gt; что функция является частью API, - это найти ее запись в &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; . Если он существует в &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; , это часть API. Если это не так, и вы думаете, что так и должно быть (т.е. вам это нужно для вашего расширения), отправьте письмо через &lt;a href=&quot;perlbug&quot;&gt;perlbug,&lt;/a&gt; объясняя, почему вы думаете, что это должно быть.</target>
        </trans-unit>
        <trans-unit id="6c6d177453ba632a0301eb097966ff6e4ecd7e13" translate="yes" xml:space="preserve">
          <source>First runs the &lt;code&gt;get&lt;/code&gt; method to make sure the distribution is downloaded and unpacked. Changes to the directory where the distribution has been unpacked and runs the external commands &lt;code&gt;perl
Makefile.PL&lt;/code&gt; or &lt;code&gt;perl Build.PL&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt; there.</source>
          <target state="translated">Сначала запускается метод &lt;code&gt;get&lt;/code&gt; , чтобы убедиться, что дистрибутив загружен и распакован. Переходит в каталог, в который был распакован дистрибутив, и запускает внешние команды &lt;code&gt;perl Makefile.PL&lt;/code&gt; или &lt;code&gt;perl Build.PL&lt;/code&gt; и &lt;code&gt;make&lt;/code&gt; там.</target>
        </trans-unit>
        <trans-unit id="8990c7669972aeb5dbf3f8f7c6f26f615b1eba3b" translate="yes" xml:space="preserve">
          <source>First try</source>
          <target state="translated">Первая попытка</target>
        </trans-unit>
        <trans-unit id="8c24340fb0abf478cd12d4c9a81be46a9b570102" translate="yes" xml:space="preserve">
          <source>First version July 22, 1998; last revised November 21, 2001.</source>
          <target state="translated">Первый вариант-22 июля 1998 года;последняя редакция-21 ноября 2001 года.</target>
        </trans-unit>
        <trans-unit id="f0bcb6253b995340d8661abf6d3eb20fd1447df3" translate="yes" xml:space="preserve">
          <source>First you extract the keys from the hashes into lists, then solve the &quot;removing duplicates&quot; problem described above. For example:</source>
          <target state="translated">Сначала вы извлекаете ключи из хэшей в списки,затем решаете описанную выше проблему &quot;удаления дубликатов&quot;.Например:</target>
        </trans-unit>
        <trans-unit id="2044f5e8e1c516409eb219e4d2d2da652d96754d" translate="yes" xml:space="preserve">
          <source>First you get the BS2000 commandline prompt ('*'). Here you may enter your parameters, e.g. &lt;code&gt;-e 'print &quot;Hello World!\\n&quot;;'&lt;/code&gt; (note the double backslash!) or &lt;code&gt;-w&lt;/code&gt; and the name of your Perl script. Filenames starting with &lt;code&gt;/&lt;/code&gt; are searched in the Posix filesystem, others are searched in the BS2000 filesystem. You may even use wildcards if you put a &lt;code&gt;%&lt;/code&gt; in front of your filename (e.g. &lt;code&gt;-w
checkfiles.pl %*.c&lt;/code&gt; ). Read your C/C++ manual for additional possibilities of the commandline prompt (look for PARAMETER-PROMPTING).</source>
          <target state="translated">Сначала вы получите приглашение командной строки BS2000 ('*'). Здесь вы можете ввести свои параметры, например &lt;code&gt;-e 'print &quot;Hello World!\\n&quot;;'&lt;/code&gt; (обратите внимание на двойную обратную косую черту!) или &lt;code&gt;-w&lt;/code&gt; и имя вашего Perl-скрипта. Имена файлов, начинающиеся с &lt;code&gt;/&lt;/code&gt; , ищутся в файловой системе Posix, остальные ищутся в файловой системе BS2000. Вы даже можете использовать подстановочные знаки, если поставите &lt;code&gt;%&lt;/code&gt; перед именем файла (например, &lt;code&gt;-w checkfiles.pl %*.c&lt;/code&gt; ). Прочтите руководство по C / C ++, чтобы узнать о дополнительных возможностях командной строки (ищите PARAMETER-PROMPTING).</target>
        </trans-unit>
        <trans-unit id="69813602a455899e097cd99c025cf3e1ca0fd741" translate="yes" xml:space="preserve">
          <source>First you'll need to know how to convert between C types and Perl types, with newSViv() and sv_setnv() and newAV() and all their friends. They're described in &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; and &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;.</source>
          <target state="translated">Сначала вам нужно знать, как конвертировать между типами C и типами Perl с помощью newSViv (), sv_setnv () и newAV () и всех их друзей. Они описаны в &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; и &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d47635cc5b345a29da6fbd6f1b60ef579fbee7af" translate="yes" xml:space="preserve">
          <source>First,</source>
          <target state="translated">First,</target>
        </trans-unit>
        <trans-unit id="d7c19c1fc6c3dbafd3921057c37d39372855cf85" translate="yes" xml:space="preserve">
          <source>First, adding the new possessive &lt;code&gt;+&lt;/code&gt; to any quantifier finds the longest match and does not backtrack. That's important since you want to handle any angle brackets through the recursion, not backtracking. The group &lt;code&gt;[^&amp;lt;&amp;gt;]++&lt;/code&gt; finds one or more non-angle brackets without backtracking.</source>
          <target state="translated">Во-первых, добавление нового притяжательного падежа &lt;code&gt;+&lt;/code&gt; к любому квантификатору позволяет найти самое длинное совпадение без возврата. Это важно, поскольку вы хотите обрабатывать любые угловые скобки с помощью рекурсии, а не с возвратом. Группа &lt;code&gt;[^&amp;lt;&amp;gt;]++&lt;/code&gt; находит одну или несколько неугловых скобок без возврата.</target>
        </trans-unit>
        <trans-unit id="50b1a9b57fc0e96ef3cb9ee0ed192e6dd3187f0f" translate="yes" xml:space="preserve">
          <source>First, an easy one. Rather than having debugging code that is all-or-nothing, it would be much more useful to be able to control which specific blocks of debugging code get included. Try extending the syntax for debug blocks to allow each to be identified. The contents of the &lt;code&gt;DEBUG&lt;/code&gt; environment variable can then be used to control which blocks get included.</source>
          <target state="translated">Во-первых, легкий. Вместо того, чтобы иметь отладочный код по принципу &amp;laquo;все или ничего&amp;raquo;, было бы гораздо полезнее иметь возможность контролировать, какие конкретные блоки отладочного кода будут включены. Попробуйте расширить синтаксис для блоков отладки, чтобы можно было идентифицировать каждый из них. Затем содержимое переменной среды &lt;code&gt;DEBUG&lt;/code&gt; можно использовать для управления включенными блоками.</target>
        </trans-unit>
        <trans-unit id="3f1e59ee032bf3e9e20cd69af8996ee89b862626" translate="yes" xml:space="preserve">
          <source>First, are you sure that the module isn't already on your system? Try &lt;code&gt;perl -MFoo -e 1&lt;/code&gt; . (Replace &quot;Foo&quot; with the name of the module; for instance, &lt;code&gt;perl -MCGI::Carp -e 1&lt;/code&gt; .)</source>
          <target state="translated">Во-первых, уверены ли вы, что модуля еще нет в вашей системе? Попробуйте &lt;code&gt;perl -MFoo -e 1&lt;/code&gt; . (Замените &amp;laquo;Foo&amp;raquo; именем модуля; например, &lt;code&gt;perl -MCGI::Carp -e 1&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5ebaf97085b1af9a8aca032d5654d4392116d444" translate="yes" xml:space="preserve">
          <source>First, download the module package from CPAN (e.g., the &quot;Comma Separated Value&quot; text package, Text-CSV-0.01.tar.gz). Then expand the contents of the package into some location on your disk. Most CPAN modules are built with an internal directory structure, so it is usually safe to expand it in the root of your DJGPP installation. Some people prefer to locate source trees under /usr/src (i.e., &lt;code&gt;($DJDIR)/usr/src&lt;/code&gt; ), but you may put it wherever seems most logical to you, *EXCEPT* under the same directory as your perl source code. There are special rules that apply to modules which live in the perl source tree that do not apply to most of the modules in CPAN.</source>
          <target state="translated">Сначала загрузите пакет модуля из CPAN (например, текстовый пакет &amp;laquo;Значения, разделенные запятыми&amp;raquo;, Text-CSV-0.01.tar.gz). Затем разверните содержимое пакета в какое-нибудь место на вашем диске. Большинство модулей CPAN построены с внутренней структурой каталогов, поэтому обычно безопасно развернуть ее в корне вашей установки DJGPP. Некоторые люди предпочитают размещать деревья исходного кода в &lt;code&gt;($DJDIR)/usr/src&lt;/code&gt; / usr / src (т.е. ($ DJDIR) / usr / src ), но вы можете разместить его там, где вам кажется наиболее логичным, * ИСКЛЮЧАЯ * *, в том же каталоге, что и исходный код perl. Существуют особые правила, которые применяются к модулям, находящимся в дереве исходных текстов perl, но не применяются к большинству модулей в CPAN.</target>
        </trans-unit>
        <trans-unit id="6bd8c84d305c51b13e814aea0158d4e7f9348781" translate="yes" xml:space="preserve">
          <source>First, ensure that you've found an actual bug. Second, ensure you've found an actual bug.</source>
          <target state="translated">Сначала убедитесь,что нашли настоящий жучок.Во-вторых,убедитесь,что нашли настоящую ошибку.</target>
        </trans-unit>
        <trans-unit id="ae1f5078345edb7a706a89221e3d6b7ce9cef2cd" translate="yes" xml:space="preserve">
          <source>First, export the path to the SDK into the build environment:</source>
          <target state="translated">Сначала экспортируйте путь к SDK в среду сборки:</target>
        </trans-unit>
        <trans-unit id="f736b2c3892c2f343a0b6266829dd11c79e488a9" translate="yes" xml:space="preserve">
          <source>First, get rid of the libperl.dylib:</source>
          <target state="translated">Во-первых,избавься от libperl.dylib:</target>
        </trans-unit>
        <trans-unit id="152625e23957ee1b161f4b03465822ac30d6d72d" translate="yes" xml:space="preserve">
          <source>First, it can be confusing to read. In the above example, it's not clear if &lt;code&gt;save&lt;/code&gt; is a method provided by the &lt;code&gt;File&lt;/code&gt; class or simply a subroutine that expects a file object as its first argument.</source>
          <target state="translated">Во-первых, это может сбивать с толку. В приведенном выше примере неясно, является ли &lt;code&gt;save&lt;/code&gt; методом, предоставляемым классом &lt;code&gt;File&lt;/code&gt; , или просто подпрограммой, которая ожидает файловый объект в качестве своего первого аргумента.</target>
        </trans-unit>
        <trans-unit id="9d7b42a2c11d81d6afadf3ea1e473b60b0c267e3" translate="yes" xml:space="preserve">
          <source>First, it determines the linearized C3 MRO of the object or class it is being called on.</source>
          <target state="translated">Во-первых,он определяет линеаризованный C3 MRO объекта или класса,к которому он обращается.</target>
        </trans-unit>
        <trans-unit id="fb4ac5a946a8d4958fc6dfdd3a7c2b8f9b12b58f" translate="yes" xml:space="preserve">
          <source>First, let's look at reading it in from a file. This is something like adding a row at a time. We'll assume that there's a flat file in which each line is a row and each word an element. If you're trying to develop an @AoA array containing all these, here's the right way to do that:</source>
          <target state="translated">Сначала давайте посмотрим,как это можно прочитать из файла.Это что-то вроде добавления строки за раз.Предположим,что есть плоский файл,в котором каждая строка-это строка,а каждое слово-элемент.Если вы пытаетесь создать массив @AoA,содержащий все это,то вот правильный способ сделать это:</target>
        </trans-unit>
        <trans-unit id="7e9e25e60917815bcdbb3181b9454d4fd283b6a1" translate="yes" xml:space="preserve">
          <source>First, make sure you have the latest &lt;b&gt;cpan-mac&lt;/b&gt; distribution ( &lt;a href=&quot;http://www.cpan.org/authors/id/CNANDOR/&quot;&gt;http://www.cpan.org/authors/id/CNANDOR/&lt;/a&gt; ), which has utilities for doing all of the steps. Read the cpan-mac directions carefully and install it. If you choose not to use cpan-mac for some reason, there are alternatives listed here.</source>
          <target state="translated">Во-первых, убедитесь, что у вас установлена ​​последняя &lt;b&gt;версия cpan-mac&lt;/b&gt; ( &lt;a href=&quot;http://www.cpan.org/authors/id/CNANDOR/&quot;&gt;http://www.cpan.org/authors/id/CNANDOR/&lt;/a&gt; ), в которой есть утилиты для выполнения всех шагов. Внимательно прочтите инструкции cpan-mac и установите его. Если вы по какой-то причине решите не использовать cpan-mac, здесь перечислены альтернативы.</target>
        </trans-unit>
        <trans-unit id="5e4209086a0693a3c62d398c3fd3a79469cf0aa1" translate="yes" xml:space="preserve">
          <source>First, read &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr36&quot;&gt;Unicode Security Considerations&lt;/a&gt;.</source>
          <target state="translated">Сначала прочтите &amp;laquo; &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr36&quot;&gt;Вопросы безопасности Unicode&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1be4fd7c33f5ba283ee1991244bc33bbae5e14ad" translate="yes" xml:space="preserve">
          <source>First, remember that &lt;code&gt;[1, 2, 3]&lt;/code&gt; makes an anonymous array containing &lt;code&gt;(1, 2, 3)&lt;/code&gt; , and gives you a reference to that array.</source>
          <target state="translated">Во-первых, помните, что &lt;code&gt;[1, 2, 3]&lt;/code&gt; создает анонимный массив, содержащий &lt;code&gt;(1, 2, 3)&lt;/code&gt; , и дает вам ссылку на этот массив.</target>
        </trans-unit>
        <trans-unit id="ab31ac192075d493669c9807b4d74587336e2089" translate="yes" xml:space="preserve">
          <source>First, see earlier in this document about &lt;a href=&quot;#Finding-locales&quot;&gt;Finding locales&lt;/a&gt;. That tells how to find which locales are really supported--and more importantly, installed--on your system. In our example error message, environment variables affecting the locale are listed in the order of decreasing importance (and unset variables do not matter). Therefore, having LC_ALL set to &quot;En_US&quot; must have been the bad choice, as shown by the error message. First try fixing locale settings listed first.</source>
          <target state="translated">Во-первых, см. Ранее в этом документе о &lt;a href=&quot;#Finding-locales&quot;&gt;поиске локалей&lt;/a&gt; . Это говорит о том, как определить, какие локали действительно поддерживаются - и, что более важно, установлены - в вашей системе. В нашем примере сообщения об ошибке переменные среды, влияющие на локаль, перечислены в порядке убывания важности (и неустановленные переменные не имеют значения). Следовательно, установка LC_ALL в &quot;En_US&quot;, должно быть, была плохим выбором, как показано в сообщении об ошибке. Сначала попробуйте исправить настройки локали, указанные первыми.</target>
        </trans-unit>
        <trans-unit id="c27578c07f284f149f1e59f8dc0cd46db350e08e" translate="yes" xml:space="preserve">
          <source>First, see the answer to &quot;Why am I getting long decimals (eg, 19.9499999999999) instead of the numbers I should be getting (eg, 19.95)?&quot;.</source>
          <target state="translated">Сначала смотрите ответ на вопрос &quot;Почему я получаю длинные десятичные цифры (например,19.9499999999999)вместо цифр,которые я должен получать (например,19.95)?&quot;.</target>
        </trans-unit>
        <trans-unit id="c7929df02929344c4da8c51ff70c78d4168b4050" translate="yes" xml:space="preserve">
          <source>First, type &lt;code&gt;ppm&lt;/code&gt; from a shell and see whether ActiveState's PPM repository has your module. If so, you can install it with &lt;code&gt;ppm&lt;/code&gt; and you won't have to bother with any of the other steps here. You might be able to use the CPAN instructions from the &quot;Unix or Linux&quot; section above as well; give it a try. Otherwise, you'll have to follow the steps below.</source>
          <target state="translated">Во- первых, тип &lt;code&gt;ppm&lt;/code&gt; из оболочки и имеет ли репозиторий PPM ActiveState в свой модуль. Если это так, вы можете установить его с помощью &lt;code&gt;ppm&lt;/code&gt; , и вам не придется беспокоиться о каких-либо других шагах здесь. Вы также можете использовать инструкции CPAN из раздела &amp;laquo;Unix или Linux&amp;raquo; выше; попробуйте. В противном случае вам придется выполнить следующие действия.</target>
        </trans-unit>
        <trans-unit id="faab21d0b75e81479aa73f86a04f0c512fa41039" translate="yes" xml:space="preserve">
          <source>First, we include the &lt;code&gt;Filter::Util::Call&lt;/code&gt; module, which exports a number of functions into your filter's namespace. The filter shown above uses two of these functions, &lt;code&gt;filter_add()&lt;/code&gt; and &lt;code&gt;filter_read()&lt;/code&gt; .</source>
          <target state="translated">Во-первых, мы включаем модуль &lt;code&gt;Filter::Util::Call&lt;/code&gt; , который экспортирует ряд функций в пространство имен вашего фильтра. Показанный выше фильтр использует две из этих функций, &lt;code&gt;filter_add()&lt;/code&gt; и &lt;code&gt;filter_read()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7bf86c04e9a07ad8ffe5ebc09738e5cc682edbbb" translate="yes" xml:space="preserve">
          <source>First, we note that this time-honored 16-bit CPU uses little-endian order, and that's why the low order byte is stored at the lower address. To unpack such a (unsigned) short we'll have to use code &lt;code&gt;v&lt;/code&gt; . A repeat count unpacks all 12 shorts:</source>
          <target state="translated">Во-первых, отметим, что этот проверенный временем 16-разрядный процессор использует порядок с прямым порядком байтов, и именно поэтому младший байт хранится по младшему адресу. Чтобы распаковать такой (беззнаковый) шорт, нам придется использовать код &lt;code&gt;v&lt;/code&gt; . Повторный счет распаковывает все 12 короткометражек:</target>
        </trans-unit>
        <trans-unit id="e1ae10fa25857645a38bd9df4324915b8e49d413" translate="yes" xml:space="preserve">
          <source>First, what is the op tree, anyway? The op tree is the parsed representation of your program, as we saw in our section on parsing, and it's the sequence of operations that Perl goes through to execute your program, as we saw in &lt;a href=&quot;#Running&quot;&gt;Running&lt;/a&gt;.</source>
          <target state="translated">Во-первых, что такое дерево операций? Дерево операций - это проанализированное представление вашей программы, как мы видели в разделе, посвященном синтаксическому анализу, и последовательность операций, которые Perl выполняет для выполнения вашей программы, как мы видели в разделе &amp;laquo; &lt;a href=&quot;#Running&quot;&gt;Выполнение&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd289dddd1b3873e3f239eb60db04e88470eea20" translate="yes" xml:space="preserve">
          <source>Firstly when &lt;code&gt;inflate&lt;/code&gt; has returned a status other than &lt;code&gt;Z_OK&lt;/code&gt; or &lt;code&gt;Z_BUF_ERROR&lt;/code&gt; . This means that either the end of the compressed data stream has been reached (&lt;code&gt;Z_STREAM_END&lt;/code&gt; ) or there is an error in the compressed data. In either of these cases there is no point in continuing with reading the compressed data, so both loops are terminated.</source>
          <target state="translated">Во-первых, когда &lt;code&gt;inflate&lt;/code&gt; вернул статус, отличный от &lt;code&gt;Z_OK&lt;/code&gt; или &lt;code&gt;Z_BUF_ERROR&lt;/code&gt; . Это означает, что либо достигнут &lt;code&gt;Z_STREAM_END&lt;/code&gt; потока сжатых данных ( Z_STREAM_END ), либо есть ошибка в сжатых данных. В любом из этих случаев нет смысла продолжать чтение сжатых данных, поэтому оба цикла завершаются.</target>
        </trans-unit>
        <trans-unit id="e91097a50eee7fb0157c9c563333af1f9aad192e" translate="yes" xml:space="preserve">
          <source>Firstly with &lt;code&gt;uncompress&lt;/code&gt;</source>
          <target state="translated">Во-первых с &lt;code&gt;uncompress&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c691ee82803b4a1c09fe4ae85950833e593adf1e" translate="yes" xml:space="preserve">
          <source>Firstly, copy the source and build a native copy of perl for your host system. Then, in the source to be cross compiled:</source>
          <target state="translated">Во-первых,скопируйте исходный текст и создайте нативную копию perl для вашей хост-системы.Затем,в исходном тексте,который будет перекрестно скомпилирован:</target>
        </trans-unit>
        <trans-unit id="429b0e6343c2120d22b3e87cee9b0d4bae245bf0" translate="yes" xml:space="preserve">
          <source>Firstly, the code is considerably more complex than with the previous example.</source>
          <target state="translated">Во-первых,код значительно сложнее,чем в предыдущем примере.</target>
        </trans-unit>
        <trans-unit id="276509a617a885ae6ba6cc6313c1176be3ee48f5" translate="yes" xml:space="preserve">
          <source>Firstly, when either &lt;code&gt;filter&lt;/code&gt; or the anonymous sub are called, a local copy of &lt;code&gt;$_&lt;/code&gt; will automatically be created. It will always contain the empty string at this point.</source>
          <target state="translated">Во-первых, когда вызывается &lt;code&gt;filter&lt;/code&gt; или анонимный подпрограмм, автоматически создается локальная копия &lt;code&gt;$_&lt;/code&gt; . На этом этапе он всегда будет содержать пустую строку.</target>
        </trans-unit>
        <trans-unit id="2cac4ae7495bba4659c20ff2b612b63d1529752e" translate="yes" xml:space="preserve">
          <source>Firstly, you need to establish a baseline time for the existing code, which timing needs to be reliable and repeatable. You'll probably want to use the &lt;code&gt;Benchmark&lt;/code&gt; or &lt;code&gt;Devel::NYTProf&lt;/code&gt; modules, or something similar, for this step, or perhaps the Unix system &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; utility, whichever is appropriate. See the base of this document for a longer list of benchmarking and profiling modules, and recommended further reading.</source>
          <target state="translated">Во-первых, вам необходимо установить базовое время для существующего кода, которое должно быть надежным и повторяемым. Вероятно, вы захотите использовать модули &lt;code&gt;Benchmark&lt;/code&gt; или &lt;code&gt;Devel::NYTProf&lt;/code&gt; или что-то подобное для этого шага или, возможно, утилиту системного &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; Unix , в зависимости от того, что подходит. См. Базу этого документа, где вы найдете более длинный список модулей для тестирования и профилирования, а также рекомендации для дальнейшего чтения.</target>
        </trans-unit>
        <trans-unit id="fda4e517cc99c618a0166c7c1427ce12e089520b" translate="yes" xml:space="preserve">
          <source>Five specially named code blocks are executed at the beginning and at the end of a running Perl program. These are the &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; , and &lt;code&gt;END&lt;/code&gt; blocks.</source>
          <target state="translated">Пять специально названных блоков кода выполняются в начале и в конце работающей программы Perl. Это &lt;code&gt;UNITCHECK&lt;/code&gt; &lt;code&gt;BEGIN&lt;/code&gt; , UNITCHECK , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; и &lt;code&gt;END&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c722bf4ef529e4eded31ce8c62d796cc90fbd29c" translate="yes" xml:space="preserve">
          <source>Fix as many discovered bugs as possible. Document all the bugs which are not fixed, and all the failures with unknown reasons. Inspect the produced logs</source>
          <target state="translated">Исправьте как можно больше обнаруженных ошибок.Документируйте все ошибки,которые не исправлены,и все сбои по неизвестным причинам.Проверяйте созданные журналы</target>
        </trans-unit>
        <trans-unit id="b83649da6d49364618a24bf1f42332f131fef232" translate="yes" xml:space="preserve">
          <source>Fixed characters</source>
          <target state="translated">Исправленные символы</target>
        </trans-unit>
        <trans-unit id="ecfb2a96b4b5f73e1fa6089350af79bfe24ae8f4" translate="yes" xml:space="preserve">
          <source>Fixed, sped-up and enhanced by Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; 2001-2003. Further streamlining (api_version 1 etc.) by Tels 2004-2007.</source>
          <target state="translated">Исправлено, ускорено и улучшено Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; 2001-2003. Дальнейшая оптимизация (api_version 1 и т. Д.) Tels 2004-2007.</target>
        </trans-unit>
        <trans-unit id="405b043abf0e87a42c31429945169f0dd7c5d88d" translate="yes" xml:space="preserve">
          <source>Fixed, speed-up, streamlined and enhanced by Tels 2001 - 2007.</source>
          <target state="translated">Исправлена,ускорена,рационализирована и усовершенствована Телс 2001-2007.</target>
        </trans-unit>
        <trans-unit id="3ca59c972a528af8e7a14352bd6c37f9e70222bb" translate="yes" xml:space="preserve">
          <source>Fixed-length mode. Leave-blanks mode.</source>
          <target state="translated">Режим фиксированной длины.Режим &quot;оставить заготовки&quot;.</target>
        </trans-unit>
        <trans-unit id="959687f22ec208a2b336a28e627dad8c7a247264" translate="yes" xml:space="preserve">
          <source>Fixed-table-size, fixed-key-length hashing</source>
          <target state="translated">Хеширование с фиксированным размером стола,фиксированной длиной ключа</target>
        </trans-unit>
        <trans-unit id="d34a8295ae4d44653579918a6b463ec2c7d9fc59" translate="yes" xml:space="preserve">
          <source>Fixes up numerous file and directory macros to insure VMS syntax regardless of input syntax. Also makes lists of files comma-separated.</source>
          <target state="translated">Исправлены многочисленные макросы для файлов и каталогов,чтобы застраховать синтаксис VMS вне зависимости от синтаксиса входных данных.Также сделаны списки файлов,разделенные запятыми.</target>
        </trans-unit>
        <trans-unit id="d40ac06cf36190f3752a227ce1d3e621fc0665b2" translate="yes" xml:space="preserve">
          <source>Fixing security issues and user-visible bugs in the core</source>
          <target state="translated">Исправление проблем безопасности и видимых пользователю ошибок в ядре</target>
        </trans-unit>
        <trans-unit id="29642e3ca9418aa5ace5fd4900eeec9b27f8007e" translate="yes" xml:space="preserve">
          <source>Fixing system locale configuration</source>
          <target state="translated">Настройка системной локали</target>
        </trans-unit>
        <trans-unit id="6014390aa4fd7e389a7243e9000e4c32cd912a43" translate="yes" xml:space="preserve">
          <source>Flags described further in &lt;a href=&quot;perlretut#Using-regular-expressions-in-Perl&quot;&gt;Using regular expressions in Perl in perlretut&lt;/a&gt; are:</source>
          <target state="translated">Флаги, описанные далее &lt;a href=&quot;perlretut#Using-regular-expressions-in-Perl&quot;&gt;в разделе Использование регулярных выражений в Perl в perlretut,&lt;/a&gt; следующие:</target>
        </trans-unit>
        <trans-unit id="95cffe720f5843720b2f2791ed48ac4c103a313f" translate="yes" xml:space="preserve">
          <source>Flags may be one of:</source>
          <target state="translated">Флаги могут быть одним из них:</target>
        </trans-unit>
        <trans-unit id="adc8e7329bf4555216d7a3bfa9cef9955718902b" translate="yes" xml:space="preserve">
          <source>Flags. Use one of:</source>
          <target state="translated">Флаги.Используй один из них:</target>
        </trans-unit>
        <trans-unit id="6103463409204cb527cdac9c41a9a07b15e276a0" translate="yes" xml:space="preserve">
          <source>Flavors of Perl numeric operations</source>
          <target state="translated">Вкусы числовых операций Perl</target>
        </trans-unit>
        <trans-unit id="8b3926c9cc6bcbb663057b65eb8ebe30826dbb42" translate="yes" xml:space="preserve">
          <source>Floating Point Anomalies with Perl on OS/390</source>
          <target state="translated">Аномалии плавающей точки с Perl на OS/390</target>
        </trans-unit>
        <trans-unit id="5a5e19070c0cf7a423dbae9f66841c3fabf1ca2c" translate="yes" xml:space="preserve">
          <source>Floating point Numbers</source>
          <target state="translated">Числа с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="cdc8e382e56841728abcd2d046d6a53518ddf43c" translate="yes" xml:space="preserve">
          <source>Floating point anomalies on BS2000</source>
          <target state="translated">Аномалии с плавающей точкой на BS2000</target>
        </trans-unit>
        <trans-unit id="6458d7358a6010e05479d7d3065fd1dc70e53021" translate="yes" xml:space="preserve">
          <source>Floating point comparisons which handle the &lt;code&gt;NaN&lt;/code&gt; [C99].</source>
          <target state="translated">Сравнение с плавающей точкой, обрабатывающее &lt;code&gt;NaN&lt;/code&gt; [C99].</target>
        </trans-unit>
        <trans-unit id="12643a69610ec7d65c380165a5bf7f423a31ce49" translate="yes" xml:space="preserve">
          <source>Floating point constants are truncated to integer. All parts and results of expressions are also truncated.</source>
          <target state="translated">Константы с плавающей точкой усекаются до целого числа.Все части и результаты выражений также усекаются.</target>
        </trans-unit>
        <trans-unit id="cede3872ee4aa83d2bda6798fe8042b21fbcd8fe" translate="yes" xml:space="preserve">
          <source>Floating point values include the special values &lt;code&gt;Inf&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt; , for infinity and not-a-number. The infinity can be also negative.</source>
          <target state="translated">Значения с плавающей запятой включают специальные значения &lt;code&gt;Inf&lt;/code&gt; и &lt;code&gt;NaN&lt;/code&gt; для бесконечности и не числа. Бесконечность также может быть отрицательной.</target>
        </trans-unit>
        <trans-unit id="709713db0a0caca978c5c319c22711e133d5178a" translate="yes" xml:space="preserve">
          <source>Floating-point Arithmetic</source>
          <target state="translated">Арифметика с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="c49d97794f62dac628d25ae12fcfb3dd4f71313b" translate="yes" xml:space="preserve">
          <source>Floating-point numbers are only approximations to what a mathematician would call real numbers. There are infinitely more reals than floats, so some corners must be cut. For example:</source>
          <target state="translated">Числа с плавающей точкой-это только приближения к тому,что математик назвал бы вещественными числами.Реалов бесконечно больше,чем поплавков,поэтому некоторые углы должны быть срезаны.Например:</target>
        </trans-unit>
        <trans-unit id="6477529bc9646ecedaf8e4ae8b6c8d51a8bc8383" translate="yes" xml:space="preserve">
          <source>Floppy, Zip, Offline Mode</source>
          <target state="translated">Флоппи,Зип,Автономный режим.</target>
        </trans-unit>
        <trans-unit id="8a27fc117a1fc8843011dfb82df5f33f7d437936" translate="yes" xml:space="preserve">
          <source>Flush any buffered write data. May possibly be called on readable handles too. Should return 0 on success, -1 on error.</source>
          <target state="translated">Промойте любые буферизованные данные при записи.Может быть вызван и на читаемых ручках.Должен возвращать 0 на успех,-1 на ошибку.</target>
        </trans-unit>
        <trans-unit id="209099cf56b373e5745037d20085b43c5b416a14" translate="yes" xml:space="preserve">
          <source>Flush the cache.</source>
          <target state="translated">Промой кэш.</target>
        </trans-unit>
        <trans-unit id="7ea0600877c74e6c0fe89bbd3afcee971963f892" translate="yes" xml:space="preserve">
          <source>Flushes all pending output into the compressed file.</source>
          <target state="translated">Промывает все ожидающие вывода в сжатый файл.</target>
        </trans-unit>
        <trans-unit id="082adecce9ec5788047efdf4da353f56b28da59d" translate="yes" xml:space="preserve">
          <source>Flushes any cached buffers to disk.</source>
          <target state="translated">Промывает любые кэшированные буферы на диск.</target>
        </trans-unit>
        <trans-unit id="0946db717a74209041c8e2e8789decc09b0c8c1a" translate="yes" xml:space="preserve">
          <source>Flushes any pending compressed data and then closes the output file/buffer.</source>
          <target state="translated">Промывает любые отложенные сжатые данные,а затем закрывает выходной файл/буфер.</target>
        </trans-unit>
        <trans-unit id="cd9697be2c5b575554432a6587a955d4836a8e65" translate="yes" xml:space="preserve">
          <source>Flushes any pending compressed data to &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">Сбрасывает все ожидающие обработки сжатые данные в &lt;code&gt;$output&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3085611069b17b4d4af56b56fce73f275cd2d511" translate="yes" xml:space="preserve">
          <source>Flushes any pending compressed data to the output file/buffer.</source>
          <target state="translated">Сбрасывает все отложенные сжатые данные в выходной файл/буфер.</target>
        </trans-unit>
        <trans-unit id="4773551f475406069f00051e9d104d3a35f79ad2" translate="yes" xml:space="preserve">
          <source>Flushes the directory cache.</source>
          <target state="translated">Промывает кэш каталогов.</target>
        </trans-unit>
        <trans-unit id="928fef4d7417d4484f1f3fc7a84c5c97a0c10f03" translate="yes" xml:space="preserve">
          <source>Foldcase</source>
          <target state="translated">Foldcase</target>
        </trans-unit>
        <trans-unit id="8b66e3d01ed62d27bcca95567dd515e099e2e9d3" translate="yes" xml:space="preserve">
          <source>Follow the guidelines in &lt;a href=&quot;perlstyle&quot;&gt;perlstyle&lt;/a&gt;.</source>
          <target state="translated">Следуйте инструкциям в &lt;a href=&quot;perlstyle&quot;&gt;perlstyle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="630bce1629a6b0e8bb4da21f695760c25a3efb55" translate="yes" xml:space="preserve">
          <source>Follow the instructions and links on:</source>
          <target state="translated">Следуйте инструкциям и ссылкам:</target>
        </trans-unit>
        <trans-unit id="444ce8dc04bb6c539c04e93cd526f6da5b1561ad" translate="yes" xml:space="preserve">
          <source>Follow the instructions in</source>
          <target state="translated">Следуйте инструкциям в</target>
        </trans-unit>
        <trans-unit id="e85aee671a6a0df6df7d5aaa8c5a698b13785622" translate="yes" xml:space="preserve">
          <source>Follow the messages ... and you're done.</source>
          <target state="translated">Следуй за сообщениями...и все.</target>
        </trans-unit>
        <trans-unit id="e08690a98d641e3cbc8171b5ab25389a2271c13b" translate="yes" xml:space="preserve">
          <source>Follow the normal instructions for building perl; e.g, enter bash, run the Configure script, then use &quot;gmake&quot; to build perl.</source>
          <target state="translated">Следуйте обычным инструкциям по сборке perl;например,введите bash,запустите скрипт Configure,затем используйте &quot;gmake&quot; для сборки perl.</target>
        </trans-unit>
        <trans-unit id="864440f25ee94f2eebf5d9e755372bbba17b62ef" translate="yes" xml:space="preserve">
          <source>Followed by a view command to see where we are:</source>
          <target state="translated">Следующая команда просмотра,чтобы увидеть,где мы находимся:</target>
        </trans-unit>
        <trans-unit id="d2431a18b10300a9cb947cadd732f97519440b32" translate="yes" xml:space="preserve">
          <source>Following codes are same.</source>
          <target state="translated">Следующие коды те же самые.</target>
        </trans-unit>
        <trans-unit id="1a1472c72b3b35650919410041b1e204b2d5f373" translate="yes" xml:space="preserve">
          <source>Following the normal convention of sixteen-color emulators, this module provides a pair of attributes for each color. For every normal color (0 through 7), the corresponding bright color (8 through 15) is obtained by prepending the string &lt;code&gt;bright_&lt;/code&gt; to the normal color name. For example, &lt;code&gt;red&lt;/code&gt; is color 1 and &lt;code&gt;bright_red&lt;/code&gt; is color 9. The same applies for background colors: &lt;code&gt;on_red&lt;/code&gt; is the normal color and &lt;code&gt;on_bright_red&lt;/code&gt; is the bright color. Capitalize these strings for the constant interface.</source>
          <target state="translated">Следуя обычному соглашению эмуляторов шестнадцати цветов, этот модуль предоставляет пару атрибутов для каждого цвета. Для каждого нормального цвета (от 0 до 7) соответствующий яркий цвет (от 8 до 15) получается добавлением строки &lt;code&gt;bright_&lt;/code&gt; к имени обычного цвета. Например, &lt;code&gt;red&lt;/code&gt; - это цвет 1, а &lt;code&gt;bright_red&lt;/code&gt; - это цвет 9. То же самое относится и к цветам фона: &lt;code&gt;on_red&lt;/code&gt; - это нормальный цвет, а &lt;code&gt;on_bright_red&lt;/code&gt; - это яркий цвет. Используйте эти строки для постоянного интерфейса.</target>
        </trans-unit>
        <trans-unit id="339a6f2fa2aeea3b1c39c8b8cdd86cfc5ca212f8" translate="yes" xml:space="preserve">
          <source>Following the optimizer information is a dump of the offset/length table, here split across several lines:</source>
          <target state="translated">Следующая за оптимизатором информация представляет собой дамп таблицы смещения/длины,здесь она разделена на несколько строк:</target>
        </trans-unit>
        <trans-unit id="122efc697c2e89462f088f0feebaa5c870210258" translate="yes" xml:space="preserve">
          <source>Follows VMS naming conventions for executable files. If the name passed in doesn't exactly match an executable file, appends</source>
          <target state="translated">Следуйте соглашениям по именованию VMS для исполняемых файлов.Если передаваемое имя не точно совпадает с исполняемым файлом,то добавляется</target>
        </trans-unit>
        <trans-unit id="fcc0b02fa7c86000beeb89a30eaf5629188e75a8" translate="yes" xml:space="preserve">
          <source>Foo.pm</source>
          <target state="translated">Foo.pm</target>
        </trans-unit>
        <trans-unit id="da5d4e2f7dabe2f03b8a59da35c55f83a0e24606" translate="yes" xml:space="preserve">
          <source>Foo.txt</source>
          <target state="translated">Foo.txt</target>
        </trans-unit>
        <trans-unit id="d715482d55fabe025e318c022fd82a1c933e4100" translate="yes" xml:space="preserve">
          <source>Foo.xs</source>
          <target state="translated">Foo.xs</target>
        </trans-unit>
        <trans-unit id="df808fb24c9efb33a59855928a13b51fb91724c1" translate="yes" xml:space="preserve">
          <source>Foo/Bar.pm</source>
          <target state="translated">Foo/Bar.pm</target>
        </trans-unit>
        <trans-unit id="ac143ab3d1c17f2a31332e229167b913e207dde2" translate="yes" xml:space="preserve">
          <source>Foo::Bar</source>
          <target state="translated">Foo::Bar</target>
        </trans-unit>
        <trans-unit id="cdf8cb90a5029548db08a3400753c839b0a8694f" translate="yes" xml:space="preserve">
          <source>Footers</source>
          <target state="translated">Footers</target>
        </trans-unit>
        <trans-unit id="f7880600348a091a43e2a84906d6002820643108" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">For</target>
        </trans-unit>
        <trans-unit id="d69332b2911636a58346ec04cf4c168ff3905a2a" translate="yes" xml:space="preserve">
          <source>For &quot;Insecure &lt;code&gt;$ENV{PATH}&lt;/code&gt; &quot; messages, you need to set &lt;code&gt;$ENV{'PATH'}&lt;/code&gt; to a known value, and each directory in the path must be absolute and non-writable by others than its owner and group. You may be surprised to get this message even if the pathname to your executable is fully qualified. This is</source>
          <target state="translated">Для сообщений &amp;laquo;Небезопасный &lt;code&gt;$ENV{PATH}&lt;/code&gt; &amp;raquo; вам необходимо установить &lt;code&gt;$ENV{'PATH'}&lt;/code&gt; на известное значение, и каждый каталог в пути должен быть абсолютным и недоступным для записи другим лицам, кроме его владельца и группы. Вы можете быть удивлены, получив это сообщение, даже если путь к вашему исполняемому файлу полностью определен. Это</target>
        </trans-unit>
        <trans-unit id="714f0a7ac0b9ec15987d10f44460eec1efc59934" translate="yes" xml:space="preserve">
          <source>For &quot;big&quot; data stores (i.e. ones that exceed available memory) consider using one of the DB modules to store it on disk instead of in RAM. This will incur a penalty in access time, but that's probably better than causing your hard disk to thrash due to massive swapping.</source>
          <target state="translated">Для &quot;больших&quot; хранилищ данных (т.е.тех,которые превышают доступную память)подумайте об использовании одного из модулей БД для их хранения на диске,а не в оперативной памяти.Это повлечет за собой штрафные санкции за время доступа,но это,вероятно,лучше,чем вызвать обрыв жесткого диска из-за массивной замены.</target>
        </trans-unit>
        <trans-unit id="216bed6df8bedc927acdb0d380e3ce0b17cdad4f" translate="yes" xml:space="preserve">
          <source>For &quot;g&quot; and &quot;G&quot;, this specifies the maximum number of digits to show, including those prior to the decimal point and those after it; for example:</source>
          <target state="translated">Для &quot;g&quot; и &quot;G&quot; указывается максимальное количество отображаемых цифр,включая цифры,предшествующие десятичной точке,и цифры,следующие за ней;например:</target>
        </trans-unit>
        <trans-unit id="0f35f055609ac0e205f7abbab4e89f59e70313b8" translate="yes" xml:space="preserve">
          <source>For 256-color emulators, this module additionally provides &lt;code&gt;ansi0&lt;/code&gt; through &lt;code&gt;ansi15&lt;/code&gt; , which are the same as colors 0 through 15 in sixteen-color emulators but use the 256-color escape syntax, &lt;code&gt;grey0&lt;/code&gt; through &lt;code&gt;grey23&lt;/code&gt; ranging from nearly black to nearly white, and a set of RGB colors. The RGB colors are of the form &lt;code&gt;rgb&lt;i&gt;RGB&lt;/i&gt;&lt;/code&gt; where</source>
          <target state="translated">Для 256-цветных эмуляторов этот модуль дополнительно предоставляет от &lt;code&gt;ansi0&lt;/code&gt; до &lt;code&gt;ansi15&lt;/code&gt; , которые совпадают с цветами от 0 до 15 в шестнадцатикрасочных эмуляторах, но используют 256-цветный escape-синтаксис, от &lt;code&gt;grey0&lt;/code&gt; до &lt;code&gt;grey23&lt;/code&gt; в диапазоне от почти черного до почти белого, и набор цветов RGB. Цвета RGB имеют вид &lt;code&gt;rgb&lt;i&gt;RGB&lt;/i&gt;&lt;/code&gt; где</target>
        </trans-unit>
        <trans-unit id="9dba65b3ab3aa02b8076d20aa76888328be8a5c9" translate="yes" xml:space="preserve">
          <source>For 256-color terminals, the recognized foreground colors are:</source>
          <target state="translated">Для 256-цветных терминалов распознаются цвета переднего плана:</target>
        </trans-unit>
        <trans-unit id="c5d9dc655e83477215f485473f4a8c147ee45bb5" translate="yes" xml:space="preserve">
          <source>For 5.11.0 and later, B::RV is abolished, and IVs can be used to store references, and a new type B::REGEXP is introduced, giving this structure:</source>
          <target state="translated">Для 5.11.0 и более поздних версий,B::RV отменяется,а для хранения ссылок можно использовать IVs,и вводится новый тип B::REGEXP,дающий такую структуру:</target>
        </trans-unit>
        <trans-unit id="a3b9459bd4ecaaeabf24e953c1001374ffa8f984" translate="yes" xml:space="preserve">
          <source>For 5.9.0 and earlier, PVLV is a direct subclass of PVMG, and BM is still present as a distinct type, so the base of this diagram is</source>
          <target state="translated">Для 5.9.0 и более ранних версий PVLV является прямым подклассом PVMG,а BM все еще присутствует как отдельный тип,поэтому основой этой диаграммы является</target>
        </trans-unit>
        <trans-unit id="12aacf89124604a604d76e2c1ffa17f7f2f13984" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, you have to be more elaborate:</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; , вы должны быть более сложными:</target>
        </trans-unit>
        <trans-unit id="33083321ae1d2e32225ec575a8dfdad8fc51bef0" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="8b70fae6950aa7895e620a82de485cc8ac6c8f65" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, you write</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; вы пишете</target>
        </trans-unit>
        <trans-unit id="68b84a9c646a03b6d82fe08053257a1d8dc4ee20" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;, an internal stack of integer arguments unpacked so far is used. You write &lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; используется внутренний стек целочисленных аргументов, распакованных до сих пор. Вы пишете &lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c6bfa42e2fbb77bda7d82e8856005087ade0aff" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="f6f91e66939fc35306c48af011860c291352dd16" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, you write</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; вы пишете</target>
        </trans-unit>
        <trans-unit id="9437652f34a1038c4388b97e25d520817a521814" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;, an internal stack of integer arguments unpacked so far is used. You write &lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; используется внутренний стек целочисленных аргументов, распакованных до сих пор. Вы пишете &lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9c5e92c976c0b87d55fa26353e0a93acdc6c1ce" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Build.PL&lt;/code&gt; -based distributions, use the --install_base option:</source>
          <target state="translated">Для &lt;code&gt;Build.PL&lt;/code&gt; основе Build.PL используйте параметр --install_base:</target>
        </trans-unit>
        <trans-unit id="c829467e9c4b40b28176534e89832125f74b7e18" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DESTROY&lt;/code&gt; XSUBs only, a T_PTROBJ is optimized to a T_PTRREF. This means the class check is skipped.</source>
          <target state="translated">Для &lt;code&gt;DESTROY&lt;/code&gt; только XSUBs, T_PTROBJ оптимизирован для T_PTRREF. Это означает, что проверка класса пропускается.</target>
        </trans-unit>
        <trans-unit id="3f0884055516afc34f2b13593cc64878ec3fa103" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DESTROY&lt;/code&gt; XSUBs only, a T_REFOBJ is optimized to a T_REFREF. This means the class check is skipped.</source>
          <target state="translated">Для &lt;code&gt;DESTROY&lt;/code&gt; только XSUBs, T_REFOBJ оптимизирован для T_REFREF. Это означает, что проверка класса пропускается.</target>
        </trans-unit>
        <trans-unit id="1484118e1397c1b2c2710771f398a13c8a642ded" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DESTROY&lt;/code&gt; XSUBs only, a T_REF_IV_PTR is optimized to a T_PTRREF. This means the class check is skipped.</source>
          <target state="translated">Для &lt;code&gt;DESTROY&lt;/code&gt; только XSUBs, T_REF_IV_PTR оптимизирован для T_PTRREF. Это означает, что проверка класса пропускается.</target>
        </trans-unit>
        <trans-unit id="66b2f35d5f8f8421c2121030f67ed492cb7aab30" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; codes without a &quot;name|&quot; part, only &lt;code&gt;E&amp;lt;...&amp;gt;&lt;/code&gt; and &lt;code&gt;Z&amp;lt;&amp;gt;&lt;/code&gt; codes may occur. That is, authors should not use &quot;&lt;code&gt;L&amp;lt;B&amp;lt;Foo::Bar&amp;gt;&amp;gt;&lt;/code&gt; &quot;.</source>
          <target state="translated">Для кодов &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; без &quot;имени |&quot; части могут встречаться только коды &lt;code&gt;E&amp;lt;...&amp;gt;&lt;/code&gt; и &lt;code&gt;Z&amp;lt;&amp;gt;&lt;/code&gt; . То есть авторы не должны использовать &amp;laquo; &lt;code&gt;L&amp;lt;B&amp;lt;Foo::Bar&amp;gt;&amp;gt;&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="45be8d936a33aec210b53bde0ce7f71408df21fa" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Makefile.PL&lt;/code&gt; -based distributions, use the INSTALL_BASE option when generating Makefiles:</source>
          <target state="translated">Для дистрибутивов на основе &lt;code&gt;Makefile.PL&lt;/code&gt; используйте параметр INSTALL_BASE при создании Makefile:</target>
        </trans-unit>
        <trans-unit id="6affbdccf85e4a86ac6e1ea88088cb893b7138f5" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;\N{NAME}&lt;/code&gt; , it is a fatal error if &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; is in effect and the input name is that of a character that won't fit into a byte (i.e., whose ordinal is above 255).</source>
          <target state="translated">Для &lt;code&gt;\N{NAME}&lt;/code&gt; это фатальная ошибка, если &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; , а имя входа - это имя символа, который не помещается в байт (т. Е. Чей порядковый номер больше 255).</target>
        </trans-unit>
        <trans-unit id="e79cd427b6a6f27bc463bdbb4440a5f8655fa529" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;mode=anyorder&lt;/code&gt; CPAN.pm answers a question as soon as the timeout is reached for the next byte in the input stream. In this mode you can use the &lt;code&gt;reuse&lt;/code&gt; parameter to decide what will happen with a question-answer pair after it has been used. In the default case (reuse=0) it is removed from the array, avoiding being used again accidentally. If you want to answer the question &lt;code&gt;Do you really want to &lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; that&lt;/code&gt; several times, then it must be included in the array at least as often as you want this answer to be given. Setting the parameter &lt;code&gt;reuse&lt;/code&gt; to 1 makes this repetition unnecessary.</source>
          <target state="translated">Для &lt;code&gt;mode=anyorder&lt;/code&gt; CPAN.pm отвечает на вопрос, как только истечет время ожидания для следующего байта во входном потоке. В этом режиме вы можете использовать параметр &lt;code&gt;reuse&lt;/code&gt; чтобы решить, что произойдет с парой вопрос-ответ после ее использования. В случае по умолчанию (повторное использование = 0) он удаляется из массива, чтобы избежать случайного повторного использования. Если вы хотите ответить на вопрос &amp;laquo; &lt;code&gt;Do you really want to &lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; that&lt;/code&gt; несколько раз&amp;raquo;, то его необходимо включать в массив как минимум так часто, как вы хотите, чтобы этот ответ давался. Установка &lt;code&gt;reuse&lt;/code&gt; параметра на 1 делает это повторение ненужным.</target>
        </trans-unit>
        <trans-unit id="9c8630b83e11b62d7083ae08d4bcbe9c6233a2fe" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;mode=deterministic&lt;/code&gt; , the CPAN.pm injects the corresponding answer as soon as the stream matches the regular expression.</source>
          <target state="translated">Для &lt;code&gt;mode=deterministic&lt;/code&gt; CPAN.pm вводит соответствующий ответ, как только поток соответствует регулярному выражению.</target>
        </trans-unit>
        <trans-unit id="ef14d5377f916291fb2a9d24329993be66568e7c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;signal&lt;/code&gt; /&lt;code&gt;sigaction&lt;/code&gt; , use &lt;code&gt;rsignal(signo, handler)&lt;/code&gt; .</source>
          <target state="translated">Для &lt;code&gt;signal&lt;/code&gt; / &lt;code&gt;sigaction&lt;/code&gt; используйте &lt;code&gt;rsignal(signo, handler)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a61181a75805f7799b6c0c697c05f83d8dd25596" translate="yes" xml:space="preserve">
          <source>For BigInts, no padding occurs.</source>
          <target state="translated">Для BigInts не происходит набивка.</target>
        </trans-unit>
        <trans-unit id="159007f5b1b467e0716f482dcfafb34641ca6593" translate="yes" xml:space="preserve">
          <source>For CPAN distributions, you can assume that the XS types defined by the perl core are already available. Additionally, the core typemap has default XS types for a large number of C types. For example, if you simply return a &lt;code&gt;char *&lt;/code&gt; from your XSUB, the core typemap will have this C type associated with the T_PV XS type. That means your C string will be copied into the PV (pointer value) slot of a new scalar that will be returned from your XSUB to Perl.</source>
          <target state="translated">Для дистрибутивов CPAN вы можете предположить, что типы XS, определенные ядром perl, уже доступны. Кроме того, основная карта типов имеет типы XS по умолчанию для большого количества типов C. Например, если вы просто вернете &lt;code&gt;char *&lt;/code&gt; из своего XSUB, в основной карте типов этот тип C будет связан с типом T_PV XS. Это означает, что ваша строка C будет скопирована в слот PV (значение указателя) нового скаляра, который будет возвращен из вашего XSUB в Perl.</target>
        </trans-unit>
        <trans-unit id="067800c18ab159aedbe7176e2a1ed014fc0ab19b" translate="yes" xml:space="preserve">
          <source>For CPerlMode, see &lt;a href=&quot;http://www.emacswiki.org/cgi-bin/wiki/CPerlMode&quot;&gt;http://www.emacswiki.org/cgi-bin/wiki/CPerlMode&lt;/a&gt;</source>
          <target state="translated">Для CPerlMode см. &lt;a href=&quot;http://www.emacswiki.org/cgi-bin/wiki/CPerlMode&quot;&gt;Http://www.emacswiki.org/cgi-bin/wiki/CPerlMode.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e12f48bd95a450fad76910cdbdd13b43b481003" translate="yes" xml:space="preserve">
          <source>For Haiku specific problems contact the HaikuPorts developers: &lt;a href=&quot;http://ports.haiku-files.org/&quot;&gt;http://ports.haiku-files.org/&lt;/a&gt;</source>
          <target state="translated">По вопросам, связанным с конкретными проблемами Haiku, обращайтесь к разработчикам HaikuPorts: &lt;a href=&quot;http://ports.haiku-files.org/&quot;&gt;http://ports.haiku-files.org/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1aa725456deafc0e9398eb1c8777ad30635d6763" translate="yes" xml:space="preserve">
          <source>For Irix 6.2 with perl threads, you have to have the following patches installed:</source>
          <target state="translated">Для Irix 6.2 с perl-резьбой необходимо установить следующие заплаты:</target>
        </trans-unit>
        <trans-unit id="a36b859180dd2062331e5d0956bbf601eda4340d" translate="yes" xml:space="preserve">
          <source>For Loops</source>
          <target state="translated">Для петлей</target>
        </trans-unit>
        <trans-unit id="f525ec14cf3a7406a3fd20ef6618215772bcd0e1" translate="yes" xml:space="preserve">
          <source>For Mac OS X see README.macosx</source>
          <target state="translated">Для Mac OS X см.README.macosx.</target>
        </trans-unit>
        <trans-unit id="d38d4d7cfb9b600d5802da277c23639b1baaadfc" translate="yes" xml:space="preserve">
          <source>For OS/2 just use</source>
          <target state="translated">Для OS/2 просто используйте</target>
        </trans-unit>
        <trans-unit id="123b8c1601c884b5764bece329526a87e1364285" translate="yes" xml:space="preserve">
          <source>For Perls earlier than those described above, or when a string is passed to a function outside the scope of &lt;code&gt;unicode_strings&lt;/code&gt; , see the next section.</source>
          <target state="translated">Для Perls более ранних, чем описанные выше, или когда строка передается в функцию, &lt;code&gt;unicode_strings&lt;/code&gt; за пределы unicode_strings , см. Следующий раздел.</target>
        </trans-unit>
        <trans-unit id="51e9cd46d8dc985ae6ee50db0816aefe5399b510" translate="yes" xml:space="preserve">
          <source>For RFC 1950, 1951 and 1952 see</source>
          <target state="translated">Для RFC 1950,1951 и 1952 см.</target>
        </trans-unit>
        <trans-unit id="79d250a5e514d12306957ae3038fcbffa25a0e46" translate="yes" xml:space="preserve">
          <source>For SV-heads, the first slot in each arena is reserved, and holds a link to the next arena, some flags, and a note of the number of slots. Snaked through each arena chain is a linked list of free items; when this becomes empty, an extra arena is allocated and divided up into N items which are threaded into the free list.</source>
          <target state="translated">Для SV-хедов первый слот в каждой арене зарезервирован и содержит ссылку на следующую арену,некоторые флаги,а также отметку о количестве слотов.Пропущенный через каждую цепочку арен-это связанный список свободных элементов;когда он становится пустым,выделяется дополнительная арена и делится на N элементов,которые попадают в свободный список.</target>
        </trans-unit>
        <trans-unit id="d83cc596cefab565f5916e26bce4790ad8fbd819" translate="yes" xml:space="preserve">
          <source>For Solaris 2.6 and onwards, there are two different ways for 32-bit applications to manipulate large files (files whose size is &amp;gt; 2GByte). (A 64-bit application automatically has largefile support built in by default.)</source>
          <target state="translated">Для Solaris 2.6 и более поздних версий 32-разрядные приложения могут использовать два разных способа управления большими файлами (файлами, размер которых превышает 2 Гбайта). (64-разрядное приложение автоматически имеет встроенную поддержку больших файлов по умолчанию.)</target>
        </trans-unit>
        <trans-unit id="8dd5fe06604a74e02ef8359829b5b43f385d6346" translate="yes" xml:space="preserve">
          <source>For Storable files the rule is that they must be constructed such that &lt;code&gt;Storable::retrieve(file)&lt;/code&gt; returns an array reference and the array elements represent one distropref object each. The conversion from YAML would look like so:</source>
          <target state="translated">Для файлов Storable правило состоит в том, что они должны быть сконструированы таким образом, чтобы &lt;code&gt;Storable::retrieve(file)&lt;/code&gt; возвращала ссылку на массив, а каждый элемент массива представлял один объект distropref. Конвертация из YAML будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="8f58ed6574a36d30b785f4f498f48637179894cd" translate="yes" xml:space="preserve">
          <source>For Titlecase, see &lt;a href=&quot;#Titlecase&quot;&gt;Titlecase&lt;/a&gt;.</source>
          <target state="translated">Для Titlecase см. &lt;a href=&quot;#Titlecase&quot;&gt;Titlecase&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="805f6202ade256f373021f2e5892254d89bc09aa" translate="yes" xml:space="preserve">
          <source>For Unicode versions between 3.1 and 3.1.1 inclusive,</source>
          <target state="translated">Для версий Юникода между 3.1 и 3.1.1 включительно,</target>
        </trans-unit>
        <trans-unit id="04defd080a27e1372a9c1dbe8cf6a89380139dd2" translate="yes" xml:space="preserve">
          <source>For Unicode versions between 3.1 and 3.1.1 inclusive, this field is empty unless there is a special folding for Turkic languages, in which case</source>
          <target state="translated">Для версий Юникода между 3.1 и 3.1.1 включительно,это поле пустое,если только не предусмотрено специальное складывание для тюркских языков,и в этом случае</target>
        </trans-unit>
        <trans-unit id="cbc319b6a7e7bbc5b0a21fcef4a3c90f8aa75d2f" translate="yes" xml:space="preserve">
          <source>For Unix platforms that will be the equivalent of &quot;unix perlio&quot; or &quot;stdio&quot;. Configure is set up to prefer the &quot;stdio&quot; implementation if the system's library provides for fast access to the buffer; otherwise, it uses the &quot;unix perlio&quot; implementation.</source>
          <target state="translated">Для Unix-платформ,которые будут эквивалентны &quot;unix perlio&quot; или &quot;stdio&quot;.Настройка настроена на предпочтение реализации &quot;stdio&quot;,если системная библиотека обеспечивает быстрый доступ к буферу;в противном случае она использует реализацию &quot;unix perlio&quot;.</target>
        </trans-unit>
        <trans-unit id="ddf8e7684d2c33a7c1793ba874a5f04310e9d4fc" translate="yes" xml:space="preserve">
          <source>For WHENCE, you may also use the constants &lt;code&gt;SEEK_SET&lt;/code&gt; , &lt;code&gt;SEEK_CUR&lt;/code&gt; , and &lt;code&gt;SEEK_END&lt;/code&gt; (start of the file, current position, end of the file) from the Fcntl module. Use of the constants is also more portable than relying on 0, 1, and 2. For example to define a &quot;systell&quot; function:</source>
          <target state="translated">Для WHENCE вы также можете использовать константы &lt;code&gt;SEEK_SET&lt;/code&gt; , &lt;code&gt;SEEK_CUR&lt;/code&gt; и &lt;code&gt;SEEK_END&lt;/code&gt; (начало файла, текущая позиция, конец файла) из модуля Fcntl. Использование констант также более переносимо, чем использование 0, 1 и 2. Например, для определения функции &quot;systell&quot;:</target>
        </trans-unit>
        <trans-unit id="9c6f354666b012fb0b17a8266f1f19a75a5cd7ea" translate="yes" xml:space="preserve">
          <source>For Windows, use a binary version of Perl, &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fstrawberryperl.com%2f&quot;&gt;Strawberry Perl&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.activestate.com%2factiveperl&quot;&gt;ActivePerl&lt;/a&gt; come with a bundled C compiler.</source>
          <target state="translated">Для Windows используйте двоичную версию Perl, &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fstrawberryperl.com%2f&quot;&gt;Strawberry Perl&lt;/a&gt; и &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.activestate.com%2factiveperl&quot;&gt;ActivePerl&lt;/a&gt; поставляются со встроенным компилятором C.</target>
        </trans-unit>
        <trans-unit id="4096062d54d81319c0a84a69e9fb5a2773f4aae4" translate="yes" xml:space="preserve">
          <source>For a complete description of all MakeMaker methods see &lt;a href=&quot;mm_unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt;.</source>
          <target state="translated">Полное описание всех методов &lt;a href=&quot;mm_unix&quot;&gt;MakeMaker&lt;/a&gt; см. В ExtUtils :: MM_Unix .</target>
        </trans-unit>
        <trans-unit id="8f3ff924d2e8af712b8d94ac227d4cdb31a1d1a1" translate="yes" xml:space="preserve">
          <source>For a complete description of the PerlIO abstraction, consult &lt;a href=&quot;perlapio&quot;&gt;perlapio&lt;/a&gt;.</source>
          <target state="translated">Полное описание абстракции &lt;a href=&quot;perlapio&quot;&gt;PerlIO&lt;/a&gt; см. В perlapio .</target>
        </trans-unit>
        <trans-unit id="cc9dbf2a0896fe69103f2db77a57c60a5869908f" translate="yes" xml:space="preserve">
          <source>For a complete list of features check &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="translated">Для получения полного списка функций проверьте &lt;a href=&quot;feature&quot;&gt;функцию&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99ae84c904dc87594aba13edffb373bf48c2a651" translate="yes" xml:space="preserve">
          <source>For a complete version of Tom Christiansen's vi configuration file, see &lt;a href=&quot;http://www.cpan.org/authors/Tom_Christiansen/scripts/toms.exrc.gz&quot;&gt;http://www.cpan.org/authors/Tom_Christiansen/scripts/toms.exrc.gz&lt;/a&gt; , the standard benchmark file for vi emulators. The file runs best with nvi, the current version of vi out of Berkeley, which incidentally can be built with an embedded Perl interpreter--see &lt;a href=&quot;http://www.cpan.org/src/misc/&quot;&gt;http://www.cpan.org/src/misc/&lt;/a&gt; .</source>
          <target state="translated">Полную версию файла конфигурации vi Тома Кристиансена можно найти в &lt;a href=&quot;http://www.cpan.org/authors/Tom_Christiansen/scripts/toms.exrc.gz&quot;&gt;http://www.cpan.org/authors/Tom_Christiansen/scripts/toms.exrc.gz&lt;/a&gt; , стандартном файле тестов для эмуляторов vi. Этот файл лучше всего работает с nvi, текущей версией vi от Berkeley, которая, кстати, может быть создана с помощью встроенного интерпретатора Perl - см. &lt;a href=&quot;http://www.cpan.org/src/misc/&quot;&gt;Http://www.cpan.org/src/misc/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="666016f5dbbd95bef8b212430bb2473fc2b4dcb2" translate="yes" xml:space="preserve">
          <source>For a comprehensive date and time representation look at the &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; module on CPAN.</source>
          <target state="translated">Для полного представления даты и времени посмотрите модуль &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; на CPAN.</target>
        </trans-unit>
        <trans-unit id="16eedbead27a5bc94e1ec2e16fa1f6580882483a" translate="yes" xml:space="preserve">
          <source>For a definition of the meaning and valid values for &lt;code&gt;MemLevel&lt;/code&gt; refer to the</source>
          <target state="translated">Для определения значения и допустимых значений для &lt;code&gt;MemLevel&lt;/code&gt; обратитесь к</target>
        </trans-unit>
        <trans-unit id="a1e24d70e0b1f2c78e32cfdc770b1dd79ea05b81" translate="yes" xml:space="preserve">
          <source>For a definition of the meaning and valid values for &lt;code&gt;WindowBits&lt;/code&gt; refer to the</source>
          <target state="translated">Для определения значения и допустимых значений &lt;code&gt;WindowBits&lt;/code&gt; см.</target>
        </trans-unit>
        <trans-unit id="e1dffbb7b106a3b121865266cc8508e33d6967ff" translate="yes" xml:space="preserve">
          <source>For a description of the variables, please have a look at the Glossary file, as written in the Porting folder, or use the url: &lt;a href=&quot;http://perl5.git.perl.org/perl.git/blob/HEAD:/Porting/Glossary&quot;&gt;http://perl5.git.perl.org/perl.git/blob/HEAD:/Porting/Glossary&lt;/a&gt;</source>
          <target state="translated">Описание переменных см. В файле глоссария в папке &amp;laquo;Перенос&amp;raquo; или используйте URL-адрес: &lt;a href=&quot;http://perl5.git.perl.org/perl.git/blob/HEAD:/Porting/Glossary&quot;&gt;http://perl5.git.perl.org/perl.git/blob/HEAD:/Porting / Глоссарий&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="522716bff942007c71b30eff73794b6a193c83f7" translate="yes" xml:space="preserve">
          <source>For a detailed description of calling conventions from C to Perl, consult &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">Подробное описание соглашений о вызовах от C до Perl можно &lt;a href=&quot;perlcall&quot;&gt;найти в perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb11e0b0c0d1be60a6f42c39836c50cc82216796" translate="yes" xml:space="preserve">
          <source>For a discussion of issues surrounding file permissions and &lt;b&gt;-i&lt;/b&gt;, see &lt;a href=&quot;perlfaq5#Why-does-Perl-let-me-delete-read-only-files%3f-Why-does--i-clobber-protected-files%3f-Isn't-this-a-bug-in-Perl%3f&quot;&gt;Why does Perl let me delete read-only files? Why does -i clobber protected files? Isn't this a bug in Perl? in perlfaq5&lt;/a&gt;.</source>
          <target state="translated">Для обсуждения проблем, связанных с разрешениями файлов и &lt;b&gt;-i&lt;/b&gt; , см. &lt;a href=&quot;perlfaq5#Why-does-Perl-let-me-delete-read-only-files%3f-Why-does--i-clobber-protected-files%3f-Isn't-this-a-bug-in-Perl%3f&quot;&gt;Почему Perl позволяет мне удалять файлы, доступные только для чтения? Почему -i сбивает защищенные файлы? Разве это не ошибка Perl? в perlfaq5&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c17a0e02c18fc6ec53a4e2d1835d5c3756570710" translate="yes" xml:space="preserve">
          <source>For a full definition of the meaning and valid values for &lt;code&gt;WindowBits&lt;/code&gt; refer to the</source>
          <target state="translated">Полное определение значения и допустимых значений &lt;code&gt;WindowBits&lt;/code&gt; см. В</target>
        </trans-unit>
        <trans-unit id="ab6b2ccf022ed8c112662e8962e31264cb2b6d19" translate="yes" xml:space="preserve">
          <source>For a list of known issues, visit:</source>
          <target state="translated">Для списка известных вопросов,посетите:</target>
        </trans-unit>
        <trans-unit id="e95ee6825d4d62b379fa548316d0c1e1647b716e" translate="yes" xml:space="preserve">
          <source>For a lot of situations, like interfacing to an error handler, this may be a perfectly adequate solution.</source>
          <target state="translated">Для многих ситуаций,например,для взаимодействия с обработчиком ошибок,это может быть вполне адекватным решением.</target>
        </trans-unit>
        <trans-unit id="78fb5d513c6711626eae157d1505b4fda1465fce" translate="yes" xml:space="preserve">
          <source>For a module, this is generally where the documentation of the interfaces provided by the module goes, usually in the form of a list with an &lt;code&gt;=item&lt;/code&gt; for each interface. Depending on how many interfaces there are, you may want to put that documentation in separate METHODS, FUNCTIONS, CLASS METHODS, or INSTANCE METHODS sections instead and save the DESCRIPTION section for an overview.</source>
          <target state="translated">Для модуля это обычно то место, куда идет документация интерфейсов, предоставляемых модулем, обычно в форме списка с &lt;code&gt;=item&lt;/code&gt; для каждого интерфейса. В зависимости от количества интерфейсов вы можете захотеть поместить эту документацию в отдельные разделы МЕТОДЫ, ФУНКЦИИ, МЕТОДЫ КЛАССА или МЕТОДЫ ЭКЗАМЕНА и сохранить раздел ОПИСАНИЕ для обзора.</target>
        </trans-unit>
        <trans-unit id="a1d4f8c4cd53b34a329bab7f01392ac51898bdf5" translate="yes" xml:space="preserve">
          <source>For a more complete explanation of 64-bit issues, see the &quot;Solaris 64-bit Developer's Guide&quot; at &lt;a href=&quot;http://docs.sun.com/&quot;&gt;http://docs.sun.com/&lt;/a&gt;</source>
          <target state="translated">Для более полного объяснения проблем с 64-разрядной версией см. &amp;laquo;Руководство разработчика 64-разрядной версии Solaris&amp;raquo; по адресу &lt;a href=&quot;http://docs.sun.com/&quot;&gt;http://docs.sun.com/.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e2c5e657d81bf42c0416b6bb7cf83065d719466" translate="yes" xml:space="preserve">
          <source>For a more complicated interface, see &lt;a href=&quot;dynaloader&quot;&gt;DynaLoader&lt;/a&gt;. Many (most) features of &lt;code&gt;DynaLoader&lt;/code&gt; are not implemented in &lt;code&gt;XSLoader&lt;/code&gt; , like for example the &lt;code&gt;dl_load_flags&lt;/code&gt; , not honored by &lt;code&gt;XSLoader&lt;/code&gt; .</source>
          <target state="translated">Для более сложного интерфейса см. &lt;a href=&quot;dynaloader&quot;&gt;DynaLoader&lt;/a&gt; . Многие (большинство) функций &lt;code&gt;DynaLoader&lt;/code&gt; не реализованы в &lt;code&gt;XSLoader&lt;/code&gt; , как, например, &lt;code&gt;dl_load_flags&lt;/code&gt; , не поддерживаемые &lt;code&gt;XSLoader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cd2b461432789a1d128d890e829743972bfea8c" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion, see &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Semantics&quot;&gt;Unicode::Semantics&lt;/a&gt; on CPAN.</source>
          <target state="translated">Для более подробного обсуждения см. &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Semantics&quot;&gt;Unicode :: Semantics&lt;/a&gt; на CPAN.</target>
        </trans-unit>
        <trans-unit id="734d1e26906ca381487d708f04f33fc705057ebb" translate="yes" xml:space="preserve">
          <source>For a more featureful version of this program, you should look to the</source>
          <target state="translated">Для более функциональной версии этой программы,вы должны обратиться к</target>
        </trans-unit>
        <trans-unit id="6cc9a4597b12d4f9cbe49ad17ba062101c23d9dc" translate="yes" xml:space="preserve">
          <source>For a multi-line string, you can apply the regular expression to each logical line in the string by adding the &lt;code&gt;/m&lt;/code&gt; flag (for &quot;multi-line&quot;). With the &lt;code&gt;/m&lt;/code&gt; flag, the &lt;code&gt;$&lt;/code&gt; matches</source>
          <target state="translated">Для многострочной строки вы можете применить регулярное выражение к каждой логической строке в строке, добавив флаг &lt;code&gt;/m&lt;/code&gt; (для &amp;laquo;многострочного&amp;raquo;). С флагом &lt;code&gt;/m&lt;/code&gt; &lt;code&gt;$&lt;/code&gt; соответствует</target>
        </trans-unit>
        <trans-unit id="a6bf5a779844f3ff794b0be678bf9271933d780d" translate="yes" xml:space="preserve">
          <source>For a platform independent &lt;code&gt;move&lt;/code&gt; function look at the &lt;a href=&quot;../file/copy&quot;&gt;File::Copy&lt;/a&gt; module.</source>
          <target state="translated">Для независимой от платформы функции &lt;code&gt;move&lt;/code&gt; посмотрите модуль &lt;a href=&quot;../file/copy&quot;&gt;File :: Copy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fab0333533e228e4f9c3f37bd78da5462c6d46ad" translate="yes" xml:space="preserve">
          <source>For a platform independent &lt;code&gt;move&lt;/code&gt; function look at the &lt;a href=&quot;file/copy&quot;&gt;File::Copy&lt;/a&gt; module.</source>
          <target state="translated">Для независимой от платформы функции &lt;code&gt;move&lt;/code&gt; посмотрите модуль &lt;a href=&quot;file/copy&quot;&gt;File :: Copy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f487551c011cbdc8bfa8463318b0aee937e41d35" translate="yes" xml:space="preserve">
          <source>For a reference of available functions, please consult &lt;a href=&quot;unix&quot;&gt;File::Spec::Unix&lt;/a&gt;, which contains the entire set, and which is inherited by the modules for other platforms. For further information, please see &lt;a href=&quot;mac&quot;&gt;File::Spec::Mac&lt;/a&gt;, &lt;a href=&quot;os2&quot;&gt;File::Spec::OS2&lt;/a&gt;, &lt;a href=&quot;win32&quot;&gt;File::Spec::Win32&lt;/a&gt;, or &lt;a href=&quot;vms&quot;&gt;File::Spec::VMS&lt;/a&gt;.</source>
          <target state="translated">Для справки о доступных функциях обратитесь к &lt;a href=&quot;unix&quot;&gt;File :: Spec :: Unix&lt;/a&gt; , который содержит весь набор и который наследуется модулями для других платформ. Для получения дополнительной информации см. &lt;a href=&quot;mac&quot;&gt;File :: Spec :: Mac&lt;/a&gt; , &lt;a href=&quot;os2&quot;&gt;File :: Spec :: OS2&lt;/a&gt; , &lt;a href=&quot;win32&quot;&gt;File :: Spec :: Win32&lt;/a&gt; или &lt;a href=&quot;vms&quot;&gt;File :: Spec :: VMS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f9c9e2ecd1a16426e5e2b2966118c8ee32aab8e" translate="yes" xml:space="preserve">
          <source>For a regular expression to match, the</source>
          <target state="translated">Чтобы регулярное выражение совпадало</target>
        </trans-unit>
        <trans-unit id="12a058b2c4bc4051745b895283da9f14f036e153" translate="yes" xml:space="preserve">
          <source>For a shorter message you can use &lt;code&gt;carp()&lt;/code&gt; or &lt;code&gt;croak()&lt;/code&gt; which report the error as being from where your module was called. &lt;code&gt;shortmess()&lt;/code&gt; returns the contents of this error message. There is no guarantee that that is where the error was, but it is a good educated guess.</source>
          <target state="translated">Для более короткого сообщения вы можете использовать &lt;code&gt;carp()&lt;/code&gt; или &lt;code&gt;croak()&lt;/code&gt; которые сообщают об ошибке как о том, откуда был вызван ваш модуль. &lt;code&gt;shortmess()&lt;/code&gt; возвращает содержимое этого сообщения об ошибке. Нет никакой гарантии, что именно здесь была ошибка, но это хорошо обоснованное предположение.</target>
        </trans-unit>
        <trans-unit id="fb0c681298006459cb4148344c2595f821ef7745" translate="yes" xml:space="preserve">
          <source>For a simple memory dump we unpack some bytes into just as many pairs of hex digits, and use &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; to handle the traditional spacing - 16 bytes to a line:</source>
          <target state="translated">Для простого дампа памяти мы распаковываем некоторые байты в такое же количество пар шестнадцатеричных цифр и используем &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; для обработки традиционного интервала - 16 байтов на строку:</target>
        </trans-unit>
        <trans-unit id="e678ac9367be7209ea98d2129135c603f780f7f5" translate="yes" xml:space="preserve">
          <source>For a temporary directory object the directory will be removed unless the CLEANUP argument was used in the constructor (and set to false) or C</source>
          <target state="translated">Для объекта временной директории директория будет удалена,если только аргумент CLEANUP не был использован в конструкторе (и установлен в false)или C</target>
        </trans-unit>
        <trans-unit id="0e148eb23ba15eaf53b9aed2b26acd83d3960120" translate="yes" xml:space="preserve">
          <source>For a yet-more-powerful import facility, see &lt;a href=&quot;#use&quot;&gt;use&lt;/a&gt; and &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;.</source>
          <target state="translated">Для еще более мощного средства импорта см. &lt;a href=&quot;#use&quot;&gt;Использование&lt;/a&gt; и &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99100d6030ac9440264e837ee275b962c9e0a325" translate="yes" xml:space="preserve">
          <source>For a yet-more-powerful import facility, see &lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; and &lt;a href=&quot;../perlmod&quot;&gt;perlmod&lt;/a&gt;.</source>
          <target state="translated">Для еще более мощного средства импорта см. &lt;a href=&quot;use&quot;&gt;Использование&lt;/a&gt; и &lt;a href=&quot;../perlmod&quot;&gt;perlmod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23a93e384211636cb7b918f38dba4af06dd07c92" translate="yes" xml:space="preserve">
          <source>For absolute paths, some cleanup is done, to ensure that the volume name isn't immediately followed by updirs. This is invalid, because this would go beyond &quot;root&quot;. Generally, these cases are handled like their Unix counterparts:</source>
          <target state="translated">Для абсолютных путей выполняется некоторая очистка,чтобы гарантировать,что имя тома не будет сразу же сопровождаться обновлениями.Это недействительно,потому что это выходит за рамки &quot;root&quot;.Обычно эти случаи обрабатываются так же,как и их коллеги из Unix:</target>
        </trans-unit>
        <trans-unit id="de74cc30b9d5ee8d61e142d3f7218703345c5703" translate="yes" xml:space="preserve">
          <source>For accessing ftp servers behind such firewalls you usually need to set the environment variable &lt;code&gt;FTP_PASSIVE&lt;/code&gt; or the config variable ftp_passive to a true value.</source>
          <target state="translated">Для доступа к ftp-серверам за такими брандмауэрами обычно необходимо установить для переменной среды &lt;code&gt;FTP_PASSIVE&lt;/code&gt; или переменной конфигурации ftp_passive истинное значение.</target>
        </trans-unit>
        <trans-unit id="0b4892803f30a1551edad3f36449d4dfea0cc9e9" translate="yes" xml:space="preserve">
          <source>For additional information that may be more accurate for your specific system, see either</source>
          <target state="translated">Для получения дополнительной информации,которая может быть более точной для вашей конкретной системы,смотрите либо</target>
        </trans-unit>
        <trans-unit id="2a5a320ada3dc4a8bf88fe25047c87af995b7a83" translate="yes" xml:space="preserve">
          <source>For affected functions, the simple strategy to avoid data corruption is to always make the encoding of the exchanged data explicit. Choose an encoding that you know the extension can handle. Convert arguments passed to the extensions to that encoding and convert results back from that encoding. Write wrapper functions that do the conversions for you, so you can later change the functions when the extension catches up.</source>
          <target state="translated">Для затрагиваемых функций простая стратегия,позволяющая избежать повреждения данных,заключается в том,чтобы всегда делать кодирование данных,которыми обмениваются,явным.Выберите кодировку,с которой,как вы знаете,может справиться расширение.Конвертируйте аргументы,переданные в расширения,в эту кодировку и конвертируйте результаты обратно из этой кодировки.Напишите функции обёртки,которые производят преобразование за вас,чтобы позже вы могли изменить эти функции,когда расширение догонит вас.</target>
        </trans-unit>
        <trans-unit id="615225b2c41ede3ced593276d5e4d897d1d4111d" translate="yes" xml:space="preserve">
          <source>For alignment commands, a &lt;code&gt;count&lt;/code&gt; of 0 is equivalent to a &lt;code&gt;count&lt;/code&gt; of 1; both are no-ops.</source>
          <target state="translated">Для команд выравнивания &lt;code&gt;count&lt;/code&gt; 0 эквивалентен &lt;code&gt;count&lt;/code&gt; 1; оба не работают.</target>
        </trans-unit>
        <trans-unit id="317a7397e46e0f3311065cf89b919865f2fa40b0" translate="yes" xml:space="preserve">
          <source>For all Perl keywords, a &lt;code&gt;CORE::&lt;/code&gt; prefix will force the built-in function to be used, even if it has been overridden or would normally require the &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; pragma. Despite appearances, this has nothing to do with the CORE package, but is part of Perl's syntax.</source>
          <target state="translated">Для всех ключевых слов Perl префикс &lt;code&gt;CORE::&lt;/code&gt; заставит использовать встроенную функцию, даже если она была переопределена или обычно требует прагмы &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; . Несмотря на внешность, это не имеет ничего общего с пакетом CORE, но является частью синтаксиса Perl.</target>
        </trans-unit>
        <trans-unit id="5654c5499f83106c9fbc91a4a0b159f7465964f0" translate="yes" xml:space="preserve">
          <source>For all of these quantifiers, Perl will try to match as much of the string as possible, while still allowing the regexp to succeed. Thus with &lt;code&gt;/a?.../&lt;/code&gt; , Perl will first try to match the regexp with the &lt;code&gt;a&lt;/code&gt; present; if that fails, Perl will try to match the regexp without the &lt;code&gt;a&lt;/code&gt; present. For the quantifier &lt;code&gt;*&lt;/code&gt; , we get the following:</source>
          <target state="translated">Для всех этих квантификаторов Perl будет пытаться сопоставить как можно большую часть строки, все еще позволяя регулярному выражению успешно выполняться. Таким образом , с &lt;code&gt;/a?.../&lt;/code&gt; , Perl сначала пытается соответствовать регулярное выражение с &lt;code&gt;a&lt;/code&gt; настоящее время ; если это не удается, Perl будет пытаться соответствовать регулярному выражению без &lt;code&gt;a&lt;/code&gt; настоящее время . Для квантификатора &lt;code&gt;*&lt;/code&gt; получаем следующее:</target>
        </trans-unit>
        <trans-unit id="230fb8eb56a362692b30784cae41866149fb8d70" translate="yes" xml:space="preserve">
          <source>For all other systems it defaults to 0.</source>
          <target state="translated">Для всех остальных систем по умолчанию установлено значение 0.</target>
        </trans-unit>
        <trans-unit id="2e88409e21116c6609cbafa0cf03db229fac1d32" translate="yes" xml:space="preserve">
          <source>For an autoloaded subroutine without a GV, will create a GV even if &lt;code&gt;level &amp;lt; 0&lt;/code&gt; . For an autoloaded subroutine without a stub, GvCV() of the result may be zero.</source>
          <target state="translated">Для автоматически загружаемой подпрограммы без GV будет создавать GV, даже если &lt;code&gt;level &amp;lt; 0&lt;/code&gt; . Для автоматически загружаемой подпрограммы без заглушки GvCV () результата может быть нулевым.</target>
        </trans-unit>
        <trans-unit id="fce8b2cbb90270479552270e5bb2cd555b023f38" translate="yes" xml:space="preserve">
          <source>For an example of its output, see &lt;a href=&quot;devel/peek&quot;&gt;Devel::Peek&lt;/a&gt;.</source>
          <target state="translated">Пример его вывода см. В разделе &lt;a href=&quot;devel/peek&quot;&gt;Devel :: Peek&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a82a650eab82474d19ec3ef8108ffe5370503228" translate="yes" xml:space="preserve">
          <source>For an example of the use of Net::FTP see</source>
          <target state="translated">Пример использования Net::FTP см.в разделе</target>
        </trans-unit>
        <trans-unit id="bda70344f536c3a618951e75f8672661f9576c18" translate="yes" xml:space="preserve">
          <source>For an excellent all-around resource on the care and feeding of regular expressions, see the book</source>
          <target state="translated">За отличным всесторонним ресурсом по уходу и кормлению регулярных выражений,смотрите книгу</target>
        </trans-unit>
        <trans-unit id="ca7f7d7124f6e693d58d8f8e7a5726f3c3d7d898" translate="yes" xml:space="preserve">
          <source>For an individual module:</source>
          <target state="translated">Для отдельного модуля:</target>
        </trans-unit>
        <trans-unit id="e7eb2c9e0a9fd3fe5a6939bf4841e243661494a7" translate="yes" xml:space="preserve">
          <source>For an up-to-date list of plugins available, please check CPAN:</source>
          <target state="translated">Для получения актуального списка доступных плагинов,пожалуйста,проверьте CPAN:</target>
        </trans-unit>
        <trans-unit id="cbc0f0a5a1b385be37d862973bb36b0e683cb185" translate="yes" xml:space="preserve">
          <source>For an up-to-date listing of CPAN sites, see &lt;a href=&quot;http://www.cpan.org/SITES&quot;&gt;http://www.cpan.org/SITES&lt;/a&gt; or &lt;a href=&quot;ftp://www.cpan.org/SITES&quot;&gt;ftp://www.cpan.org/SITES&lt;/a&gt; .</source>
          <target state="translated">Актуальный список сайтов CPAN можно найти на &lt;a href=&quot;http://www.cpan.org/SITES&quot;&gt;http://www.cpan.org/SITES&lt;/a&gt; или &lt;a href=&quot;ftp://www.cpan.org/SITES&quot;&gt;ftp://www.cpan.org/SITES&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d33a39ca090b8a159c7f5059badc4bd7ae75ac58" translate="yes" xml:space="preserve">
          <source>For any anon CVs in the pad, change CvOUTSIDE of that CV from old_cv to new_cv if necessary. Needed when a newly-compiled CV has to be moved to a pre-existing CV struct.</source>
          <target state="translated">Для любого анонового CV в блокноте,измените CvOUTSIDE этого CV со старого_cv на новый_cv,если это необходимо.Требуется,когда вновь скомпилированное CV должно быть перемещено в уже существующую структуру CV.</target>
        </trans-unit>
        <trans-unit id="a477cbd70fca9ccf72bc4fea464de24ee1323a5a" translate="yes" xml:space="preserve">
          <source>For any of the above listed attributes, case is not significant.</source>
          <target state="translated">Для любого из вышеперечисленных атрибутов случай не является существенным.</target>
        </trans-unit>
        <trans-unit id="03cdf2cd57fb98494228a618ca150d5e64571b39" translate="yes" xml:space="preserve">
          <source>For any text entered at the debugger prompt, leading and trailing whitespace is first stripped before further processing. If a debugger command coincides with some function in your own program, merely precede the function with something that doesn't look like a debugger command, such as a leading &lt;code&gt;;&lt;/code&gt; or perhaps a &lt;code&gt;+&lt;/code&gt; , or by wrapping it with parentheses or braces.</source>
          <target state="translated">Для любого текста, вводимого в приглашении отладчика, перед дальнейшей обработкой сначала удаляются начальные и конечные пробелы. Если команда отладчика совпадает с некоторой функцией в вашей собственной программе, просто поставьте перед функцией что-то, что не похоже на команду отладчика, например, начало &lt;code&gt;;&lt;/code&gt; или, возможно, &lt;code&gt;+&lt;/code&gt; , или заключив его в круглые или фигурные скобки.</target>
        </trans-unit>
        <trans-unit id="5f345c4981dc60d036c3d28eb6a32e02870746a6" translate="yes" xml:space="preserve">
          <source>For any type of reference, &lt;code&gt;$Carp::RefArgFormatter&lt;/code&gt; is checked (see below). This variable is expected to be a code reference, and the current parameter is passed in. If this function doesn't exist (the variable is undef), or it recurses into &lt;code&gt;Carp&lt;/code&gt; , or it otherwise throws an exception, this is skipped, and Carp moves on to the next option, otherwise checking stops and the string returned is used.</source>
          <target state="translated">Для любого типа ссылки проверяется &lt;code&gt;$Carp::RefArgFormatter&lt;/code&gt; (см. Ниже). Ожидается, что эта переменная будет ссылкой на код, и будет передан текущий параметр. Если эта функция не существует (переменная undef), или она рекурсивно переходит в &lt;code&gt;Carp&lt;/code&gt; , или в противном случае генерирует исключение, это пропускается, и Карп переходит к следующему варианту, в противном случае проверка прекращается и используется возвращенная строка.</target>
        </trans-unit>
        <trans-unit id="7fa27de554c50c9df409ef4245d850e6b4403907" translate="yes" xml:space="preserve">
          <source>For applications using database backends, the standard &lt;code&gt;DBIx&lt;/code&gt; namespace has tries to help with keeping things nippy, not least because it tries to</source>
          <target state="translated">Для приложений, использующих &lt;code&gt;DBIx&lt;/code&gt; баз данных, стандартное пространство имен DBIx пытается помочь в поддержании спокойствия, не в последнюю очередь потому, что оно пытается</target>
        </trans-unit>
        <trans-unit id="1bce7a5486f7524150794956c47fe07d202d9af7" translate="yes" xml:space="preserve">
          <source>For authors of extensions MakeMaker provides several Makefile targets. Most of the support comes from the ExtUtils::Manifest module, where additional documentation can be found.</source>
          <target state="translated">Для авторов расширений MakeMaker предоставляет несколько целей Makefile.Большая часть поддержки поступает из модуля ExtUtils::Manifest,где можно найти дополнительную документацию.</target>
        </trans-unit>
        <trans-unit id="22bf05bb17e4a865ba888114b8b9f35fd176e0a9" translate="yes" xml:space="preserve">
          <source>For backward compatibility (with Perl 5.6), all properties writable without using the compound form mentioned so far may have &lt;code&gt;Is&lt;/code&gt; or &lt;code&gt;Is_&lt;/code&gt; prepended to their name, so &lt;code&gt;\P{Is_Lu}&lt;/code&gt; , for example, is equal to &lt;code&gt;\P{Lu}&lt;/code&gt; , and &lt;code&gt;\p{IsScript:Arabic}&lt;/code&gt; is equal to &lt;code&gt;\p{Arabic}&lt;/code&gt; .</source>
          <target state="translated">Для обратной совместимости (с Perl 5.6) все свойства, доступные для записи без использования упомянутой составной формы, могут иметь перед именем &lt;code&gt;Is&lt;/code&gt; или &lt;code&gt;Is_&lt;/code&gt; , поэтому &lt;code&gt;\P{Is_Lu}&lt;/code&gt; , например, равно &lt;code&gt;\P{Lu}&lt;/code&gt; , а &lt;code&gt;\p{IsScript:Arabic}&lt;/code&gt; равно &lt;code&gt;\p{Arabic}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="801eea6f48c31944eef870e82f2becb1739f362a" translate="yes" xml:space="preserve">
          <source>For backward compatibility reasons defining just PERL_GLOBAL_STRUCT doesn't actually hide all symbols inside a big global struct: some PerlIO_xxx vtables are left visible. The PERL_GLOBAL_STRUCT_PRIVATE then hides everything (see how the PERLIO_FUNCS_DECL is used).</source>
          <target state="translated">По причинам обратной совместимости определение только PERL_GLOBAL_STRUCT на самом деле не прячет все символы внутри большой глобальной структуры:некоторые таблицы PerlIO_xxx остаются видимыми.PERL_GLOBAL_STRUCT_PRIVATE затем скрывает все (смотрите,как используется PERLIO_FUNCS_DECL).</target>
        </trans-unit>
        <trans-unit id="e59de1fc73fecfb78c070b75065d56f22077db4d" translate="yes" xml:space="preserve">
          <source>For backward compatibility with older implementations that didn't support anonymous globs, &lt;code&gt;Symbol::ungensym&lt;/code&gt; is also provided. But it doesn't do anything.</source>
          <target state="translated">Для обратной совместимости со старыми реализациями, которые не поддерживали анонимные глобусы, также предоставляется &lt;code&gt;Symbol::ungensym&lt;/code&gt; . Но это ничего не дает.</target>
        </trans-unit>
        <trans-unit id="1875b2cf9d0a9f2703d0d978c0e4f011fb418414" translate="yes" xml:space="preserve">
          <source>For backward compatibility, &lt;code&gt;alternate&lt;/code&gt; (old name) can be used as an alias for &lt;code&gt;variable&lt;/code&gt; .</source>
          <target state="translated">Для обратной совместимости можно использовать &lt;code&gt;alternate&lt;/code&gt; (старое имя) в качестве псевдонима &lt;code&gt;variable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a69034e83ea0d1a42d93d489742ef68d2660151" translate="yes" xml:space="preserve">
          <source>For backward compatibility, it is also possible to pass the parameters as a reference to a hash containing the &lt;code&gt;name=&amp;gt;value&lt;/code&gt; pairs.</source>
          <target state="translated">Для обратной совместимости также можно передавать параметры как ссылку на хэш, содержащий пары &lt;code&gt;name=&amp;gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3148562bf6a9aa8595388062dcaa9f8f17ba0473" translate="yes" xml:space="preserve">
          <source>For backward compatibility, it is also possible to pass the parameters as a reference to a hash containing the name=&amp;gt;value pairs.</source>
          <target state="translated">Для обратной совместимости также можно передавать параметры как ссылку на хэш, содержащий пары имя =&amp;gt; значение.</target>
        </trans-unit>
        <trans-unit id="2ec61a0442a19b1bc3402a65ad2b4e4eaf169d23" translate="yes" xml:space="preserve">
          <source>For backward-compatibility, if the PADNAMEt_OUTER flag is set, the FLAGS method adds the SVf_FAKE flag, too.</source>
          <target state="translated">Для обратной совместимости,если установлен флаг PADNAMEt_OUTER,метод FLAGS добавляет также флаг SVf_FAKE.</target>
        </trans-unit>
        <trans-unit id="345abbc3eef47b853413a18eb3df89f5eb02f40e" translate="yes" xml:space="preserve">
          <source>For backwards compatibility in callbacks.</source>
          <target state="translated">Для обратной совместимости при обратных вызовах.</target>
        </trans-unit>
        <trans-unit id="fc612a7ead920771085f353b3e4c345acbc9a4da" translate="yes" xml:space="preserve">
          <source>For backwards compatibility reasons it is still possible to request a different storage class for use with Math::BigFloat:</source>
          <target state="translated">По причинам обратной совместимости все же можно запросить другой класс хранения для использования с Math::BigFloat:</target>
        </trans-unit>
        <trans-unit id="5515551787402a0e5935331cd95604ada3a19af4" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, the &lt;code&gt;In&lt;/code&gt; prefix may be omitted if there is no naming conflict with a script or any other property, and you can even use an &lt;code&gt;Is&lt;/code&gt; prefix instead in those cases. But don't do this for new code because your code could break in new releases, and this has already happened: There was a time in very early Unicode releases when &lt;code&gt;\p{Hebrew}&lt;/code&gt; would have matched the</source>
          <target state="translated">Для обратной совместимости префикс &lt;code&gt;In&lt;/code&gt; может быть опущен, если нет конфликта имен со сценарием или любым другим свойством, и в этих случаях вы даже можете использовать префикс &lt;code&gt;Is&lt;/code&gt; . Но не делайте этого для нового кода, потому что ваш код может сломаться в новых выпусках, и это уже произошло: в очень ранних выпусках Unicode было время, когда &lt;code&gt;\p{Hebrew}&lt;/code&gt; соответствовал бы</target>
        </trans-unit>
        <trans-unit id="8221b631540f7fb41054f5d592fba788a0c89204" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, this error is also available as &lt;code&gt;$Archive::Tar::error&lt;/code&gt; although it is much recommended you use the method call instead.</source>
          <target state="translated">Для обратной совместимости эта ошибка также доступна как &lt;code&gt;$Archive::Tar::error&lt;/code&gt; хотя настоятельно рекомендуется использовать вместо нее вызов метода.</target>
        </trans-unit>
        <trans-unit id="04c26648635d004dc1846a0436ba6682f4177e2f" translate="yes" xml:space="preserve">
          <source>For backwards compatibility. Use &lt;code&gt;grok_bin&lt;/code&gt; instead.</source>
          <target state="translated">Для обратной совместимости. &lt;code&gt;grok_bin&lt;/code&gt; этого используйте grok_bin .</target>
        </trans-unit>
        <trans-unit id="7b83ee316e5b3391a5d7939b8d9c91163c18f189" translate="yes" xml:space="preserve">
          <source>For backwards compatibility. Use &lt;code&gt;grok_hex&lt;/code&gt; instead.</source>
          <target state="translated">Для обратной совместимости. &lt;code&gt;grok_hex&lt;/code&gt; этого используйте grok_hex .</target>
        </trans-unit>
        <trans-unit id="36110c740cb1d17f9559cf294dd0deb0c3ace7b6" translate="yes" xml:space="preserve">
          <source>For backwards compatibility. Use &lt;code&gt;grok_oct&lt;/code&gt; instead.</source>
          <target state="translated">Для обратной совместимости. &lt;code&gt;grok_oct&lt;/code&gt; этого используйте grok_oct .</target>
        </trans-unit>
        <trans-unit id="31ce154734530fbfe5db4b0523f628ba63c57438" translate="yes" xml:space="preserve">
          <source>For best results compile the C file below with the same options as the Perl DLL. However, a lot of functionality will work even if the executable is not an EMX applications, e.g., if compiled with</source>
          <target state="translated">Для достижения наилучших результатов скомпилируйте нижеприведенный C-файл с теми же опциями,что и Perl DLL.Тем не менее,многие функциональные возможности будут работать,даже если исполняемый файл не является EMX-приложением,например,если он скомпилирован с помощью</target>
        </trans-unit>
        <trans-unit id="9e295c225a2c063ef46517c1ea68fc0b9b4d3dfb" translate="yes" xml:space="preserve">
          <source>For best results use EMX pdksh. The standard binary (5.2.14 or later) runs under DOS (with &lt;a href=&quot;#RSX&quot;&gt;RSX&lt;/a&gt;) as well, see</source>
          <target state="translated">Для достижения наилучших результатов используйте EMX pdksh. Стандартный двоичный файл (5.2.14 или новее) также работает под DOS (с &lt;a href=&quot;#RSX&quot;&gt;RSX&lt;/a&gt; ), см.</target>
        </trans-unit>
        <trans-unit id="2f0811095fb18bd277912b660d1d859a6e53803d" translate="yes" xml:space="preserve">
          <source>For bigger projects, &lt;a href=&quot;http://search.cpan.org/perldoc/Moose&quot;&gt;Moose&lt;/a&gt; provides a rich set of features that will let you focus on implementing your business logic.</source>
          <target state="translated">Для более крупных проектов &lt;a href=&quot;http://search.cpan.org/perldoc/Moose&quot;&gt;Moose&lt;/a&gt; предоставляет богатый набор функций, которые позволят вам сосредоточиться на реализации своей бизнес-логики.</target>
        </trans-unit>
        <trans-unit id="d59e13b49a3ea8a677214c0ffa9c8aba3e39fb3c" translate="yes" xml:space="preserve">
          <source>For blocks see &lt;a href=&quot;http://www.unicode.org/Public/UNIDATA/Blocks.txt&quot;&gt;http://www.unicode.org/Public/UNIDATA/Blocks.txt&lt;/a&gt;</source>
          <target state="translated">Для блоков см. &lt;a href=&quot;http://www.unicode.org/Public/UNIDATA/Blocks.txt&quot;&gt;Http://www.unicode.org/Public/UNIDATA/Blocks.txt.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6af4234a6a3a035875ec423a946acfcba1e657d0" translate="yes" xml:space="preserve">
          <source>For building and installing non-XS modules, all you need is a working perl under DJGPP. Non-XS modules do not require re-linking the perl binary, and so are simpler to build and install.</source>
          <target state="translated">Для сборки и установки не XS модулей,все,что вам нужно,это рабочий perl под DJGPP.Модули без XS не требуют перекомпоновки бинарного файла perl,поэтому их проще собрать и установить.</target>
        </trans-unit>
        <trans-unit id="bae42e060753892a262ac6235f3d580be0d729e0" translate="yes" xml:space="preserve">
          <source>For building perl to support Oracle, it needs to be linked with libcl and libpthread. So even if your perl is an unthreaded build, these libraries might be required. See &quot;Oracle on HP-UX&quot; below.</source>
          <target state="translated">Для того,чтобы построить perl для поддержки Oracle,он должен быть связан с libcl и libpthread.Так что,даже если ваш perl является непрочитанной сборкой,эти библиотеки могут потребоваться.Смотрите &quot;Oracle on HP-UX&quot; ниже.</target>
        </trans-unit>
        <trans-unit id="ae71424b7af33e662d7ce3e8063ed7f56ae7be34" translate="yes" xml:space="preserve">
          <source>For case-insensitive comparisions, look at the &lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt; case-folding function, available in Perl v5.16 or later:</source>
          <target state="translated">Для сравнения без учета регистра посмотрите на функцию сворачивания регистра &lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt; , доступную в Perl v5.16 или новее:</target>
        </trans-unit>
        <trans-unit id="1cb5c1d99fc673348b120d9a851d1117c6607188" translate="yes" xml:space="preserve">
          <source>For case-insensitiveness, the &quot;casefolding&quot; of Unicode is used instead of upper/lowercasing both the characters, see &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr21/&quot;&gt;http://www.unicode.org/unicode/reports/tr21/&lt;/a&gt; (Case Mappings).</source>
          <target state="translated">Для нечувствительности к регистру используется &quot;регистр&quot; Unicode вместо верхнего / нижнего регистра обоих символов, см. &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr21/&quot;&gt;Http://www.unicode.org/unicode/reports/tr21/&lt;/a&gt; (Отображение регистра).</target>
        </trans-unit>
        <trans-unit id="724ee81f8304298ce7234758616a260234c90146" translate="yes" xml:space="preserve">
          <source>For changes significant enough to warrant a</source>
          <target state="translated">Для изменений,достаточно существенных,чтобы гарантировать</target>
        </trans-unit>
        <trans-unit id="3357a4c3d096539100edeae44fe0fc63f41c1eb0" translate="yes" xml:space="preserve">
          <source>For cloning empty array or hash refs, the following may also be used:</source>
          <target state="translated">Для клонирования пустого массива или хэш-ссылки также можно использовать следующее:</target>
        </trans-unit>
        <trans-unit id="52fc59bd49cfa06cf9318166c80386309a2f14db" translate="yes" xml:space="preserve">
          <source>For compactness, '&lt;b&gt;*&lt;/b&gt;' is used as a wildcard instead of showing all possible combinations. For example, entries like:</source>
          <target state="translated">Для компактности &quot; &lt;b&gt;*&lt;/b&gt; &quot; используется как подстановочный знак вместо отображения всех возможных комбинаций. Например, такие записи, как:</target>
        </trans-unit>
        <trans-unit id="7c09a91ddfd48857b97077c2773ecb81af6bc79f" translate="yes" xml:space="preserve">
          <source>For comparisons to a specific language it is often best to create a small project in both languages and compare the results, make sure to use all the &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpan.org%2f&quot;&gt;resources&lt;/a&gt; of each language, as a language is far more than just it's syntax.</source>
          <target state="translated">Для сравнения с конкретным языком часто лучше создать небольшой проект на обоих языках и сравнить результаты, обязательно используйте все &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpan.org%2f&quot;&gt;ресурсы&lt;/a&gt; каждого языка, поскольку язык - это гораздо больше, чем просто его синтаксис.</target>
        </trans-unit>
        <trans-unit id="5928beb9ec422a398dc240b1a98fb88a78eacc43" translate="yes" xml:space="preserve">
          <source>For compatibility with</source>
          <target state="translated">Для совместимости с</target>
        </trans-unit>
        <trans-unit id="a7092eb766c083ed1177ee219bb4e03d914e1567" translate="yes" xml:space="preserve">
          <source>For compatibility with other parts of Perl, all the single forms given in the table in the &lt;a href=&quot;#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;section above&lt;/a&gt; are recognized. BUT, there are some ambiguities between some Perl extensions and the Unicode properties, all of which are silently resolved in favor of the official Unicode property. To avoid surprises, you should only use &lt;code&gt;prop_invmap()&lt;/code&gt; for forms listed in the table below, which omits the non-recommended ones. The affected forms are the Perl single form equivalents of Unicode properties, such as &lt;code&gt;\p{sc}&lt;/code&gt; being a single-form equivalent of &lt;code&gt;\p{gc=sc}&lt;/code&gt; , which is treated by &lt;code&gt;prop_invmap()&lt;/code&gt; as the &lt;code&gt;Script&lt;/code&gt; property, whose short name is &lt;code&gt;sc&lt;/code&gt; . The table indicates the current ambiguities in the INFO column, beginning with the word &lt;code&gt;&quot;NOT&quot;&lt;/code&gt; .</source>
          <target state="translated">Для совместимости с другими частями Perl распознаются все отдельные формы, приведенные в таблице в &lt;a href=&quot;#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;разделе выше&lt;/a&gt; . НО, есть некоторая двусмысленность между некоторыми расширениями Perl и свойствами Unicode, все из которых молча разрешаются в пользу официального свойства Unicode. Чтобы избежать сюрпризов, вы должны использовать &lt;code&gt;prop_invmap()&lt;/code&gt; для форм, перечисленных в таблице ниже, в которой не указаны нерекомендуемые. Затронутые формы являются эквивалентами единой формы Perl свойств Unicode, например, &lt;code&gt;\p{sc}&lt;/code&gt; является эквивалентом единственной формы &lt;code&gt;\p{gc=sc}&lt;/code&gt; , который обрабатывается &lt;code&gt;prop_invmap()&lt;/code&gt; как свойство &lt;code&gt;Script&lt;/code&gt; , короткое имя которого это &lt;code&gt;sc&lt;/code&gt; . В таблице указаны текущие неоднозначности в столбце ИНФОРМАЦИЯ, начиная со слова &lt;code&gt;&quot;NOT&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8f8cf45418f21110ef02ba18a8fe7b0e0a35cfe" translate="yes" xml:space="preserve">
          <source>For compatibility with perl scripts written for the Unix environment, Plan 9 Perl uses the POSIX signal emulation provided in Plan 9's ANSI POSIX Environment (APE). Signal stacking isn't supported. The signals provided are:</source>
          <target state="translated">Для совместимости с perl-скриптами,написанными для Unix-окружения,Plan 9 Perl использует эмуляцию POSIX-сигнала,предоставляемую в ANSI POSIX-окружении (APE)Plan 9.Стек сигналов не поддерживается.Предоставляемые сигналы:</target>
        </trans-unit>
        <trans-unit id="f7ddc7130612083ca6f3d06a09409b25b9346875" translate="yes" xml:space="preserve">
          <source>For compatibility with popular C library functions, Perl implementations of the mkstemp() family of functions are provided. These are, mkstemp(), mkstemps(), mkdtemp() and mktemp().</source>
          <target state="translated">Для совместимости с популярными библиотечными функциями Си предусмотрены реализации на Perl из семейства функций mkstemp().Это mkstemp(),mkstemps(),mkdtemp()и mktemp().</target>
        </trans-unit>
        <trans-unit id="d25b76835899d4044aad201d72be6ea01f31876a" translate="yes" xml:space="preserve">
          <source>For compatibility with the old B::Terse, this module also adds a method named &lt;code&gt;terse&lt;/code&gt; to B::OP and B::SV objects. The B::SV method is largely compatible with the old one, though authors of new software might be advised to choose a more user-friendly output format. The B::OP &lt;code&gt;terse&lt;/code&gt; method, however, doesn't work well. Since B::Terse was first written, much more information in OPs has migrated to the scratchpad datastructure, but the &lt;code&gt;terse&lt;/code&gt; interface doesn't have any way of getting to the correct pad. As a kludge, the new version will always use the pad for the main program, but for OPs in subroutines this will give the wrong answer or crash.</source>
          <target state="translated">Для совместимости со старым B :: Terse этот модуль также добавляет метод с именем &lt;code&gt;terse&lt;/code&gt; к объектам B :: OP и B :: SV. Метод B :: SV в значительной степени совместим со старым, хотя авторам нового программного обеспечения можно посоветовать выбрать более удобный формат вывода. Однако &lt;code&gt;terse&lt;/code&gt; метод B :: OP не работает. С тех пор, как B :: Terse был впервые написан, гораздо больше информации из OP было перенесено в структуру данных блокнота, но &lt;code&gt;terse&lt;/code&gt; интерфейс не имеет никакого способа добраться до нужной панели. В качестве кладжа новая версия всегда будет использовать панель для основной программы, но для OP в подпрограммах это приведет к неправильному ответу или сбою.</target>
        </trans-unit>
        <trans-unit id="67ec1b88f948f8864ab885d448e428104a1f5cbb" translate="yes" xml:space="preserve">
          <source>For compiling, you need following:</source>
          <target state="translated">Для компиляции,вам нужно следовать:</target>
        </trans-unit>
        <trans-unit id="2c3582fce0d2ea8e40bba69ca7dfa38ec981ba20" translate="yes" xml:space="preserve">
          <source>For completeness, here is &lt;code&gt;asynch_close&lt;/code&gt; . This shows how to remove the entry from the hash &lt;code&gt;Mapping&lt;/code&gt; .</source>
          <target state="translated">Для полноты здесь &lt;code&gt;asynch_close&lt;/code&gt; . Это показывает, как удалить запись из хеш- &lt;code&gt;Mapping&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c043d0855883cdf3536e0246bdff4dcd9fcd74e" translate="yes" xml:space="preserve">
          <source>For consistency with common usage, perl's Configure script performs some minor manipulations on the operating system name and version number as reported by uname. Here's a partial translation table:</source>
          <target state="translated">Для соответствия общему использованию,скрипт perl's Configure выполняет некоторые незначительные манипуляции с именем операционной системы и номером версии,о которых сообщает uname.Вот таблица частичного перевода:</target>
        </trans-unit>
        <trans-unit id="c929174990d09b02dcdbbabbaa2a02596a638c93" translate="yes" xml:space="preserve">
          <source>For constant subroutines, returns the constant SV returned by the subroutine.</source>
          <target state="translated">Для постоянных подпрограмм возвращает постоянную SV,возвращаемую подпрограммой.</target>
        </trans-unit>
        <trans-unit id="9e387ea14df2d8d86cc5babf9af2677b505e2619" translate="yes" xml:space="preserve">
          <source>For constructs that do interpolate, variables beginning with &quot;&lt;code&gt;$&lt;/code&gt; &quot; or &quot;&lt;code&gt;@&lt;/code&gt; &quot; are interpolated. Subscripted variables such as &lt;code&gt;$a[3]&lt;/code&gt; or &lt;code&gt;$href-&amp;gt;{key}[0]&lt;/code&gt; are also interpolated, as are array and hash slices. But method calls such as &lt;code&gt;$obj-&amp;gt;meth&lt;/code&gt; are not.</source>
          <target state="translated">Для конструкций, которые действительно интерполируются, интерполируются переменные, начинающиеся с &amp;laquo; &lt;code&gt;$&lt;/code&gt; &amp;raquo; или &amp;laquo; &lt;code&gt;@&lt;/code&gt; &amp;raquo;. Переменные с индексами, такие как &lt;code&gt;$a[3]&lt;/code&gt; или &lt;code&gt;$href-&amp;gt;{key}[0]&lt;/code&gt; , также интерполируются, как и массивы и срезы хэша. Но вызовы методов, такие как &lt;code&gt;$obj-&amp;gt;meth&lt;/code&gt; , нет.</target>
        </trans-unit>
        <trans-unit id="ec376fd19b0ff28e80aef02d1aa6f9c7cab7d82a" translate="yes" xml:space="preserve">
          <source>For constructs with three-part delimiters (&lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;), the search is repeated once more. If the first delimiter is not an opening punctuation, the three delimiters must be the same, such as &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s!!!&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr)))&lt;/a&gt;&lt;/code&gt;, in which case the second delimiter terminates the left part and starts the right part at once. If the left part is delimited by bracketing punctuation (that is &lt;code&gt;()&lt;/code&gt; , &lt;code&gt;[]&lt;/code&gt; , &lt;code&gt;{}&lt;/code&gt; , or &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; ), the right part needs another pair of delimiters such as &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s(){}&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr[]//&lt;/a&gt;&lt;/code&gt;. In these cases, whitespace and comments are allowed between the two parts, although the comment must follow at least one whitespace character; otherwise a character expected as the start of the comment may be regarded as the starting delimiter of the right part.</source>
          <target state="translated">Для конструкций с разделителями из трех частей ( &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; ) поиск повторяется еще раз. Если первый разделитель не является открывающим знаком препинания, три разделителя должны быть одинаковыми, например &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s!!!&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr)))&lt;/a&gt;&lt;/code&gt; , и в этом случае второй разделитель завершает левую часть и сразу же начинает правую часть. Если левая часть разделена знаками препинания в скобках (то есть &lt;code&gt;()&lt;/code&gt; , &lt;code&gt;[]&lt;/code&gt; , &lt;code&gt;{}&lt;/code&gt; или &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; ), для правой части потребуется еще одна пара разделителей, например &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s(){}&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr[]//&lt;/a&gt;&lt;/code&gt; . В этих случаях между двумя частями разрешены пробелы и комментарии, хотя комментарий должен следовать по крайней мере за одним символом пробела; в противном случае символ, ожидаемый в качестве начала комментария, может рассматриваться как начальный ограничитель правой части.</target>
        </trans-unit>
        <trans-unit id="343bf25e2927a4e247fde284894e20f4a2092df4" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;GLOB_CSH&lt;/code&gt; is a synonym for &lt;code&gt;GLOB_BRACE | GLOB_NOMAGIC | GLOB_QUOTE | GLOB_TILDE | GLOB_ALPHASORT&lt;/code&gt; .</source>
          <target state="translated">Для удобства &lt;code&gt;GLOB_CSH&lt;/code&gt; является синонимом &lt;code&gt;GLOB_BRACE | GLOB_NOMAGIC | GLOB_QUOTE | GLOB_TILDE | GLOB_ALPHASORT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40732251f5c21be8c597889848a82040a77a373e" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;IO::File&lt;/code&gt; exports the O_XXX constants from the Fcntl module, if this module is available.</source>
          <target state="translated">Для удобства &lt;code&gt;IO::File&lt;/code&gt; экспортирует константы O_XXX из модуля Fcntl, если этот модуль доступен.</target>
        </trans-unit>
        <trans-unit id="38a10ffe4a20ca5792a7fd00b9c73d9ce59a1dd3" translate="yes" xml:space="preserve">
          <source>For convenience, Perl sets &lt;code&gt;$+&lt;/code&gt; to the string held by the highest numbered &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; ,... that got assigned (and, somewhat related, &lt;code&gt;$^N&lt;/code&gt; to the value of the &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; ,... most-recently assigned; i.e. the &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; ,... associated with the rightmost closing parenthesis used in the match).</source>
          <target state="translated">Для удобства Perl устанавливает &lt;code&gt;$+&lt;/code&gt; в строку, содержащуюся в строке с наибольшим номером &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , ..., которая была назначена (и, в некоторой степени, &lt;code&gt;$^N&lt;/code&gt; в значение &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , ... ; то есть &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , ..., связанные с крайней правой закрывающей круглой скобкой, используемой в совпадении).</target>
        </trans-unit>
        <trans-unit id="fb5611347ffd15c1223ef802d0edf52fb7e73b41" translate="yes" xml:space="preserve">
          <source>For convenience, during a &lt;code&gt;'code...'&lt;/code&gt; filtering operation, Filter::Simple provides a package variable (&lt;code&gt;$Filter::Simple::placeholder&lt;/code&gt; ) that contains a pre-compiled regex that matches any placeholder...and captures the identifier within the placeholder. Placeholders can be moved and re-ordered within the source code as needed.</source>
          <target state="translated">Для удобства во время операции фильтрации &lt;code&gt;'code...'&lt;/code&gt; Filter :: Simple предоставляет пакетную переменную ( &lt;code&gt;$Filter::Simple::placeholder&lt;/code&gt; ), которая содержит предварительно скомпилированное регулярное выражение, которое соответствует любому заполнителю ... и фиксирует идентификатор внутри заполнителя. При необходимости заполнители можно перемещать и переупорядочивать в исходном коде.</target>
        </trans-unit>
        <trans-unit id="dc4adefa4b79abf45088dcb0ac2e06a348c35319" translate="yes" xml:space="preserve">
          <source>For conversion we have &lt;code&gt;Cygwin::win_to_posix_path()&lt;/code&gt; and &lt;code&gt;Cygwin::posix_to_win_path()&lt;/code&gt; .</source>
          <target state="translated">Для преобразования у нас есть &lt;code&gt;Cygwin::win_to_posix_path()&lt;/code&gt; и &lt;code&gt;Cygwin::posix_to_win_path()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d928fe0051212f2f8da39a8b5bc221435184fd0" translate="yes" xml:space="preserve">
          <source>For copyright</source>
          <target state="translated">За авторские права</target>
        </trans-unit>
        <trans-unit id="1eecebe67970e7a41398f09174a7fb5bf129f3a9" translate="yes" xml:space="preserve">
          <source>For correct handling of East Asian half- and full-width characters, see &lt;a href=&quot;http://search.cpan.org/perldoc/Text::WrapI18N&quot;&gt;Text::WrapI18N&lt;/a&gt;. For more detailed controls: &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Format&quot;&gt;Text::Format&lt;/a&gt;.</source>
          <target state="translated">Для правильной обработки восточноазиатских символов &lt;a href=&quot;http://search.cpan.org/perldoc/Text::WrapI18N&quot;&gt;половинной&lt;/a&gt; и полной ширины см. Text :: WrapI18N . Для более подробных элементов управления: &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Format&quot;&gt;Text :: Format&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b6f77b308a2ac839fd33563f9a552da3eeb4daa9" translate="yes" xml:space="preserve">
          <source>For date and time processing look at the many related modules on CPAN. For a comprehensive date and time representation look at the &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; module.</source>
          <target state="translated">Для обработки даты и времени просмотрите множество связанных модулей на CPAN. Для полного представления даты и времени посмотрите модуль &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07b6da6b04aa2922da90bdf4ba16ff504d7726a7" translate="yes" xml:space="preserve">
          <source>For debugging of CPAN data there is the &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; command which takes the same arguments as make/test/install and outputs each object's Data::Dumper dump. If an argument looks like a perl variable and contains one of &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; or &lt;code&gt;%&lt;/code&gt; , it is eval()ed and fed to Data::Dumper directly.</source>
          <target state="translated">Для отладки данных CPAN существует команда &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; , которая принимает те же аргументы, что и make / test / install, и выводит дамп каждого объекта Data :: Dumper. Если аргумент выглядит как переменная perl и содержит одно из значений &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; или &lt;code&gt;%&lt;/code&gt; , он вызывается eval () и напрямую передается в Data :: Dumper.</target>
        </trans-unit>
        <trans-unit id="8a807f2c9fb85faf8c9ac5d861d440bcf8bfce3c" translate="yes" xml:space="preserve">
          <source>For debugging the code of CPAN.pm itself in interactive mode, some debugging aid can be turned on for most packages within CPAN.pm with one of</source>
          <target state="translated">Для отладки самого кода CPAN.pm в интерактивном режиме,для большинства пакетов в рамках CPAN.pm можно включить некоторую помощь по отладке с помощью одной из опций</target>
        </trans-unit>
        <trans-unit id="fb5d5a55a6b1cad338bb173db36952043185ac23" translate="yes" xml:space="preserve">
          <source>For delays of finer granularity than one second, the Time::HiRes module (from CPAN, and starting from Perl 5.8 part of the standard distribution) provides ualarm(). You may also use Perl's four-argument version of select() leaving the first three arguments undefined, or you might be able to use the &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; interface to access setitimer(2) if your system supports it. See &lt;a href=&quot;perlfaq8&quot;&gt;perlfaq8&lt;/a&gt; for details.</source>
          <target state="translated">Для задержек с более мелкой детализацией, чем одна секунда, модуль Time :: HiRes (из CPAN и начиная с Perl 5.8, часть стандартного дистрибутива) предоставляет ualarm (). Вы также можете использовать Perl-версию select () с четырьмя аргументами, оставив первые три аргумента неопределенными, или вы можете использовать интерфейс &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; для доступа к setitimer (2), если ваша система его поддерживает. Подробнее см. &lt;a href=&quot;perlfaq8&quot;&gt;Perlfaq8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd003af05b2132ba4b881a232af5e4cee8933eae" translate="yes" xml:space="preserve">
          <source>For delays of finer granularity than one second, the Time::HiRes module (from CPAN, and starting from Perl 5.8 part of the standard distribution) provides ualarm(). You may also use Perl's four-argument version of select() leaving the first three arguments undefined, or you might be able to use the &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; interface to access setitimer(2) if your system supports it. See &lt;a href=&quot;../perlfaq8&quot;&gt;perlfaq8&lt;/a&gt; for details.</source>
          <target state="translated">Для задержек с более мелкой детализацией, чем одна секунда, модуль Time :: HiRes (из CPAN и начиная с Perl 5.8, часть стандартного дистрибутива) предоставляет ualarm (). Вы также можете использовать Perl-версию select () с четырьмя аргументами, оставив первые три аргумента неопределенными, или вы можете использовать интерфейс &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; для доступа к setitimer (2), если ваша система его поддерживает. Подробнее см. &lt;a href=&quot;../perlfaq8&quot;&gt;Perlfaq8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="048bc05974c11cb3f14983d6e8a4de95a334014e" translate="yes" xml:space="preserve">
          <source>For delays of finer granularity than one second, the Time::HiRes module (from CPAN, and starting from Perl 5.8 part of the standard distribution) provides usleep(). You may also use Perl's four-argument version of select() leaving the first three arguments undefined, or you might be able to use the &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; interface to access setitimer(2) if your system supports it. See &lt;a href=&quot;perlfaq8&quot;&gt;perlfaq8&lt;/a&gt; for details.</source>
          <target state="translated">Для задержек с более мелкой детализацией, чем одна секунда, модуль Time :: HiRes (из CPAN и начиная с Perl 5.8, часть стандартного дистрибутива) предоставляет usleep (). Вы также можете использовать Perl-версию select () с четырьмя аргументами, оставив первые три аргумента неопределенными, или вы можете использовать интерфейс &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; для доступа к setitimer (2), если ваша система его поддерживает. Подробнее см. &lt;a href=&quot;perlfaq8&quot;&gt;Perlfaq8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d999a8a7adf00f409cdbfb2fc0969a34ea071e33" translate="yes" xml:space="preserve">
          <source>For delays of finer granularity than one second, the Time::HiRes module (from CPAN, and starting from Perl 5.8 part of the standard distribution) provides usleep(). You may also use Perl's four-argument version of select() leaving the first three arguments undefined, or you might be able to use the &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; interface to access setitimer(2) if your system supports it. See &lt;a href=&quot;../perlfaq8&quot;&gt;perlfaq8&lt;/a&gt; for details.</source>
          <target state="translated">Для задержек с более мелкой детализацией, чем одна секунда, модуль Time :: HiRes (из CPAN и начиная с Perl 5.8, часть стандартного дистрибутива) предоставляет usleep (). Вы также можете использовать Perl-версию select () с четырьмя аргументами, оставив первые три аргумента неопределенными, или вы можете использовать интерфейс &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; для доступа к setitimer (2), если ваша система его поддерживает. Подробнее см. &lt;a href=&quot;../perlfaq8&quot;&gt;Perlfaq8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="880c0e9f515e34271c2c3b119d8f343dab33b21c" translate="yes" xml:space="preserve">
          <source>For dependencies that are required in order to run &lt;code&gt;Makefile.PL&lt;/code&gt; , see &lt;code&gt;CONFIGURE_REQUIRES&lt;/code&gt; .</source>
          <target state="translated">Информацию о зависимостях, необходимых для запуска &lt;code&gt;Makefile.PL&lt;/code&gt; , см . В разделе &lt;code&gt;CONFIGURE_REQUIRES&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33634f235f0082e4181888900b85711db47d8f18" translate="yes" xml:space="preserve">
          <source>For descriptions of the class hierarchy of these objects and the methods that can be called on them, see below, &lt;a href=&quot;#OVERVIEW-OF-CLASSES&quot;&gt;OVERVIEW OF CLASSES&lt;/a&gt; and &lt;a href=&quot;#OP-RELATED-CLASSES&quot;&gt;OP-RELATED CLASSES&lt;/a&gt;.</source>
          <target state="translated">Описание иерархии классов этих объектов и методов, которые могут быть вызваны для них, см. Ниже, &lt;a href=&quot;#OVERVIEW-OF-CLASSES&quot;&gt;ОБЗОР КЛАССОВ&lt;/a&gt; и &lt;a href=&quot;#OP-RELATED-CLASSES&quot;&gt;КЛАССОВ, СВЯЗАННЫХ с OP&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f3b2ae9d73ddeeda58bc4e13e54cb8a6fed8f14d" translate="yes" xml:space="preserve">
          <source>For descriptions of the class hierarchy of these objects and the methods that can be called on them, see below, &lt;a href=&quot;#OVERVIEW-OF-CLASSES&quot;&gt;OVERVIEW OF CLASSES&lt;/a&gt; and &lt;a href=&quot;#SV-RELATED-CLASSES&quot;&gt;SV-RELATED CLASSES&lt;/a&gt;.</source>
          <target state="translated">Описание иерархии классов этих объектов и методов, которые могут быть вызваны для них, см. Ниже &lt;a href=&quot;#OVERVIEW-OF-CLASSES&quot;&gt;ОБЗОР КЛАССОВ&lt;/a&gt; и &lt;a href=&quot;#SV-RELATED-CLASSES&quot;&gt;КЛАССОВ, СВЯЗАННЫХ с SV&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6890c04c351eed8402cc96040025e018355d7713" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;perldoc ppport.h&lt;/code&gt; .</source>
          <target state="translated">Подробнее см. &lt;code&gt;perldoc ppport.h&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4be1d326997ed9e19e7a04e776dc614ee400c4f2" translate="yes" xml:space="preserve">
          <source>For details, see the description for &lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;uvchr_to_utf8_flags&lt;/a&gt;.</source>
          <target state="translated">Подробнее см. Описание &lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;uvchr_to_utf8_flags&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe4cabeb3c36ea2c5a3fbd884ca6fe8ba5049b92" translate="yes" xml:space="preserve">
          <source>For developers wishing to write their own tied arrays, the required methods are briefly defined below. See the &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; section for more detailed descriptive, as well as example code:</source>
          <target state="translated">Для разработчиков, желающих написать свои собственные связанные массивы, необходимые методы кратко определены ниже. См. Раздел &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; для более подробного описания и примера кода:</target>
        </trans-unit>
        <trans-unit id="d33242068f9073573772617185fa7b62c43ab672" translate="yes" xml:space="preserve">
          <source>For developers wishing to write their own tied hashes, the required methods are briefly defined below. See the &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; section for more detailed descriptive, as well as example code:</source>
          <target state="translated">Для разработчиков, желающих написать свои собственные связанные хэши, необходимые методы кратко описаны ниже. См. Раздел &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; для более подробного описания и примера кода:</target>
        </trans-unit>
        <trans-unit id="c6d44567c847615da73e4dc3fbe1131bc5a3e2c2" translate="yes" xml:space="preserve">
          <source>For developers wishing to write their own tied-handle classes, the methods are summarized below. The &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; section not only documents these, but has sample code as well:</source>
          <target state="translated">Для разработчиков, желающих написать свои собственные классы связанных дескрипторов, эти методы кратко описаны ниже. Раздел &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; не только документирует их, но также содержит примеры кода:</target>
        </trans-unit>
        <trans-unit id="928786a6337e41cc2160d3e1f5e15f742b97fa65" translate="yes" xml:space="preserve">
          <source>For developers wishing to write their own tied-scalar classes, the methods are summarized below. The &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; section not only documents these, but has sample code as well:</source>
          <target state="translated">Для разработчиков, желающих написать свои собственные скалярные классы, эти методы кратко изложены ниже. Раздел &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; не только документирует их, но также содержит примеры кода:</target>
        </trans-unit>
        <trans-unit id="83e90c795a8afb6a6c9de6553439d8f6cbbf665f" translate="yes" xml:space="preserve">
          <source>For direct examination of the buffer, the variable &lt;a href=&quot;#PL_parser-%3ebufend&quot;&gt;PL_parser-&amp;gt;bufend&lt;/a&gt; points to the end of the buffer. The current lexing position is pointed to by &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt;. Direct use of these pointers is usually preferable to examination of the scalar through normal scalar means.</source>
          <target state="translated">Для непосредственного исследования буфера переменная &lt;a href=&quot;#PL_parser-%3ebufend&quot;&gt;PL_parser-&amp;gt; bufend&lt;/a&gt; указывает на конец буфера. Текущая позиция лексирования указывается &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr&lt;/a&gt; . Прямое использование этих указателей обычно предпочтительнее, чем исследование скаляра с помощью обычных скалярных средств.</target>
        </trans-unit>
        <trans-unit id="13c49c22472e027f068753f3e29a491152b0010b" translate="yes" xml:space="preserve">
          <source>For distributions that use</source>
          <target state="translated">Для дистрибутивов,использующих</target>
        </trans-unit>
        <trans-unit id="985017370413b179ae3946fe35f99a058dfef566" translate="yes" xml:space="preserve">
          <source>For doing I/O it is suggested that you use the autotranslating features of PerlIO, see &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt;.</source>
          <target state="translated">Для выполнения операций ввода-вывода рекомендуется использовать функции автоматического перевода PerlIO, см. &lt;a href=&quot;perluniintro&quot;&gt;Perluniintro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ce51f0686aa7fd04915057c8a38b4ba2a606bb7b" translate="yes" xml:space="preserve">
          <source>For double-quoted strings, the quoting from &lt;code&gt;\Q&lt;/code&gt; is applied after interpolation and escapes are processed.</source>
          <target state="translated">Для строк, заключенных в двойные кавычки, кавычки из &lt;code&gt;\Q&lt;/code&gt; применяются после интерполяции и обработки escape-символов.</target>
        </trans-unit>
        <trans-unit id="7153807fff58e3cc6dcc7b6391711735f5c48fc7" translate="yes" xml:space="preserve">
          <source>For each component, we mention environment variables related to each installation directory. Either choose directories to match your values of the variables, or create/append-to variables to take into account the directories.</source>
          <target state="translated">Для каждого компонента мы указываем переменные окружения,связанные с каждым каталогом установки.Либо выберите каталоги,соответствующие вашим значениям переменных,либо создайте/примените к переменным,чтобы учесть эти каталоги.</target>
        </trans-unit>
        <trans-unit id="ba4c925cffa4324c85082d132c7153102054ac63" translate="yes" xml:space="preserve">
          <source>For each directory in LIST (called $dir here) the lib module also checks to see if a directory called $dir/$archname/auto exists. If so the $dir/$archname directory is assumed to be a corresponding architecture specific directory and is added to @INC in front of $dir. lib.pm also checks if directories called $dir/$version and $dir/$version/$archname exist and adds these directories to @INC.</source>
          <target state="translated">Для каждого каталога в LIST (здесь он называется $dir)модуль lib также проверяет,существует ли каталог с именем $dir/$archname/auto.Если это так,то предполагается,что каталог $dir/$archname является соответствующим каталогом,специфичным для архитектуры,и добавляется к @INC перед $dir.lib.pm также проверяет,существуют ли каталоги с именами $dir/$version и $dir/$version/$archname,и добавляет эти каталоги к @INC.</target>
        </trans-unit>
        <trans-unit id="d6c50d0e6a86403f83c942ee394e8555abc0ddcd" translate="yes" xml:space="preserve">
          <source>For each directory in LIST (called $dir here) the lib module also checks to see if a directory called $dir/$archname/auto exists. If so the $dir/$archname directory is assumed to be a corresponding architecture specific directory and is also deleted from @INC.</source>
          <target state="translated">Для каждого каталога в LIST (здесь он называется $dir)модуль lib также проверяет,существует ли каталог с именем $dir/$archname/auto.Если это так,то предполагается,что каталог $dir/$archname является соответствующим каталогом,относящимся к конкретной архитектуре,и также удаляется из @INC.</target>
        </trans-unit>
        <trans-unit id="64daaac0c21c762b1798b346c0a1931a0dd72bc6" translate="yes" xml:space="preserve">
          <source>For each library that is found, an appropriate directive for a linker options file is generated. The return values are space-separated strings of these directives, rather than elements used on the linker command line.</source>
          <target state="translated">Для каждой найденной библиотеки генерируется соответствующая директива для файла опций компоновщика.Возвращаемые значения представляют собой строки этих директив,разделенные пробелами,а не элементы,используемые в командной строке компоновщика.</target>
        </trans-unit>
        <trans-unit id="3313c88e144064867d27f9004bd8e9beaf19e663" translate="yes" xml:space="preserve">
          <source>For each line, the &lt;code&gt;PARSER&lt;/code&gt; loop first tries to match a series of digits followed by a word boundary. This match has to start at the place the last match left off (or the beginning of the string on the first match). Since &lt;code&gt;m/ \G( \d+\b
)/gcx&lt;/code&gt; uses the &lt;code&gt;c&lt;/code&gt; flag, if the string does not match that regular expression, perl does not reset pos() and the next match starts at the same position to try a different pattern.</source>
          <target state="translated">Для каждой строки цикл &lt;code&gt;PARSER&lt;/code&gt; сначала пытается сопоставить серию цифр, за которыми следует граница слова. Это совпадение должно начинаться с того места, где закончилось последнее совпадение (или с начала строки в первом совпадении). Поскольку &lt;code&gt;m/ \G( \d+\b )/gcx&lt;/code&gt; использует флаг &lt;code&gt;c&lt;/code&gt; , если строка не соответствует этому регулярному выражению, perl не сбрасывает pos (), и следующее совпадение начинается с той же позиции, чтобы попробовать другой шаблон.</target>
        </trans-unit>
        <trans-unit id="fd6cfb118370f50c9c42bb5e390e24e86523c86f" translate="yes" xml:space="preserve">
          <source>For each line-style ('concise', 'terse', 'linenoise', etc.) there are 3 format-specs which control how OPs are rendered.</source>
          <target state="translated">Для каждого стиля линии (&quot;лаконичный&quot;,&quot;лаконичный&quot;,&quot;линенуазный&quot; и т.д.)есть 3 формата-специальности,которые управляют тем,как отображаются операционные системы.</target>
        </trans-unit>
        <trans-unit id="2ef94716a1f5652ad5d33bb69a0e70bcd8744c37" translate="yes" xml:space="preserve">
          <source>For each of the fields marked &quot;(if any)&quot; the default value on success is an empty string. On failure, all of these values (except the remaining text) are &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Для каждого из полей, отмеченных &amp;laquo;(если есть)&amp;raquo;, значение по умолчанию в случае успеха - пустая строка. В случае ошибки все эти значения (кроме оставшегося текста) становятся &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fdf0186b6bb5a61b6cf887ce8022d9f1ed87feb" translate="yes" xml:space="preserve">
          <source>For each of these three lists, the collection of signals set to be trapped is checked before trapping; if your architecture does not implement a particular signal, it will not be trapped but rather silently ignored.</source>
          <target state="translated">Для каждого из этих трех списков перед ловушкой проверяется набор сигналов,установленных в ловушку;если ваша архитектура не реализует определенный сигнал,он не будет пойман в ловушку,а будет молча игнорироваться.</target>
        </trans-unit>
        <trans-unit id="c00c059a52bac42904c37c4c2fb8927b36fa4f53" translate="yes" xml:space="preserve">
          <source>For each such format, pack() generates 4 bits of result. With non-alphabetical characters, the result is based on the 4 least-significant bits of the input character, i.e., on &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord($char)%16&lt;/a&gt;&lt;/code&gt;. In particular, characters &lt;code&gt;&quot;0&quot;&lt;/code&gt; and &lt;code&gt;&quot;1&quot;&lt;/code&gt; generate nybbles 0 and 1, as do bytes &lt;code&gt;&quot;\000&quot;&lt;/code&gt; and &lt;code&gt;&quot;\001&quot;&lt;/code&gt; . For characters &lt;code&gt;&quot;a&quot;..&quot;f&quot;&lt;/code&gt; and &lt;code&gt;&quot;A&quot;..&quot;F&quot;&lt;/code&gt; , the result is compatible with the usual hexadecimal digits, so that &lt;code&gt;&quot;a&quot;&lt;/code&gt; and &lt;code&gt;&quot;A&quot;&lt;/code&gt; both generate the nybble &lt;code&gt;0xA==10&lt;/code&gt; . Use only these specific hex characters with this format.</source>
          <target state="translated">Для каждого такого формата pack () генерирует 4 бита результата. Для небуквенных символов результат основан на 4 младших битах входного символа, то есть на &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord($char)%16&lt;/a&gt;&lt;/code&gt; . В частности, символы &lt;code&gt;&quot;0&quot;&lt;/code&gt; и &lt;code&gt;&quot;1&quot;&lt;/code&gt; генерируют нибблы 0 и 1, как и байты &lt;code&gt;&quot;\000&quot;&lt;/code&gt; и &lt;code&gt;&quot;\001&quot;&lt;/code&gt; . Для символов &lt;code&gt;&quot;a&quot;..&quot;f&quot;&lt;/code&gt; и &lt;code&gt;&quot;A&quot;..&quot;F&quot;&lt;/code&gt; результат совместим с обычными шестнадцатеричными цифрами, так что &lt;code&gt;&quot;a&quot;&lt;/code&gt; и &lt;code&gt;&quot;A&quot;&lt;/code&gt; оба генерируют &lt;code&gt;0xA==10&lt;/code&gt; . Используйте только эти конкретные шестнадцатеричные символы с этим форматом.</target>
        </trans-unit>
        <trans-unit id="8b61b8ba63bd2e7b3403785e0beac1c665bb76ab" translate="yes" xml:space="preserve">
          <source>For each such format, pack() generates 4 bits of result. With non-alphabetical characters, the result is based on the 4 least-significant bits of the input character, i.e., on &lt;code&gt;&lt;a href=&quot;ord&quot;&gt;ord($char)%16&lt;/a&gt;&lt;/code&gt;. In particular, characters &lt;code&gt;&quot;0&quot;&lt;/code&gt; and &lt;code&gt;&quot;1&quot;&lt;/code&gt; generate nybbles 0 and 1, as do bytes &lt;code&gt;&quot;\000&quot;&lt;/code&gt; and &lt;code&gt;&quot;\001&quot;&lt;/code&gt; . For characters &lt;code&gt;&quot;a&quot;..&quot;f&quot;&lt;/code&gt; and &lt;code&gt;&quot;A&quot;..&quot;F&quot;&lt;/code&gt; , the result is compatible with the usual hexadecimal digits, so that &lt;code&gt;&quot;a&quot;&lt;/code&gt; and &lt;code&gt;&quot;A&quot;&lt;/code&gt; both generate the nybble &lt;code&gt;0xA==10&lt;/code&gt; . Use only these specific hex characters with this format.</source>
          <target state="translated">Для каждого такого формата pack () генерирует 4 бита результата. Для небуквенных символов результат основан на 4 младших битах входного символа, то есть на &lt;code&gt;&lt;a href=&quot;ord&quot;&gt;ord($char)%16&lt;/a&gt;&lt;/code&gt; . В частности, символы &lt;code&gt;&quot;0&quot;&lt;/code&gt; и &lt;code&gt;&quot;1&quot;&lt;/code&gt; генерируют нибблы 0 и 1, как и байты &lt;code&gt;&quot;\000&quot;&lt;/code&gt; и &lt;code&gt;&quot;\001&quot;&lt;/code&gt; . Для символов &lt;code&gt;&quot;a&quot;..&quot;f&quot;&lt;/code&gt; и &lt;code&gt;&quot;A&quot;..&quot;F&quot;&lt;/code&gt; результат совместим с обычными шестнадцатеричными цифрами, так что &lt;code&gt;&quot;a&quot;&lt;/code&gt; и &lt;code&gt;&quot;A&quot;&lt;/code&gt; оба генерируют &lt;code&gt;0xA==10&lt;/code&gt; . Используйте только эти конкретные шестнадцатеричные символы с этим форматом.</target>
        </trans-unit>
        <trans-unit id="56bab3e1fc980d5c9adf77a55a7a575a655bbcbb" translate="yes" xml:space="preserve">
          <source>For earlier Perls, a QP encoder that works on both ASCII and EBCDIC platforms would look somewhat like the following:</source>
          <target state="translated">Для более ранних Perls,QP кодировщик,который работает на платформах ASCII и EBCDIC,будет выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="d4008829801fc42279d6aea1087db0de93d9c0e6" translate="yes" xml:space="preserve">
          <source>For ease of access, the Perl manual has been split up into several sections.</source>
          <target state="translated">Для удобства доступа руководство Perl было разделено на несколько разделов.</target>
        </trans-unit>
        <trans-unit id="2508ccfe05f4a37451a9fb33f66c8f8a0dd451f8" translate="yes" xml:space="preserve">
          <source>For ease of use also the SEEK_* constants (for seek() and sysseek(), e.g. SEEK_END) and the S_I* constants (for chmod() and stat()) are available for import. They can be imported either separately or using the tags &lt;code&gt;:&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;:mode&lt;/code&gt; .</source>
          <target state="translated">Для простоты использования также доступны для импорта константы SEEK_ * (для seek () и sysseek (), например, SEEK_END) и константы S_I * (для chmod () и stat ()). Их можно импортировать отдельно или с помощью тегов &lt;code&gt;:&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;:mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c36f5b62afea33d1be2e3590e8d7005448aa361a" translate="yes" xml:space="preserve">
          <source>For easier debugging, you may prefer to always use the commas when not setting $Term::ANSIColor::AUTORESET or PUSHCOLOR/POPCOLOR so that you'll get a fatal compile error rather than a warning.</source>
          <target state="translated">Для облегчения отладки,вы можете предпочесть всегда использовать запятые,когда не устанавливаете $Term::ANSIColor::AUTORESET или PUSHCOLOR/POPCOLOR,так что вы получите фатальную ошибку компиляции,а не предупреждение.</target>
        </trans-unit>
        <trans-unit id="98fbe6111f30281308f810d30686560db37e9754" translate="yes" xml:space="preserve">
          <source>For editors: if you're on Unix you probably have vi or a vi clone already, and possibly an emacs too, so you may not need to download anything. In any emacs the cperl-mode (M-x cperl-mode) gives you perhaps the best available Perl editing mode in any editor.</source>
          <target state="translated">Для редакторов:если вы работаете на Unix,у вас,вероятно,уже есть vi или клон vi,а возможно,и Emacs,так что вам,возможно,не придется ничего скачивать.В любом emacs cperl-режиме (M-x cperl-mode),возможно,лучший доступный Perl-режим редактирования в любом редакторе.</target>
        </trans-unit>
        <trans-unit id="5aa663054769a993f1d5b54fdeaaf504f9f0a5ea" translate="yes" xml:space="preserve">
          <source>For efficiency reasons, Perl takes a conservative view of whether data is tainted. If an expression contains tainted data, any subexpression may be considered tainted, even if the value of the subexpression is not itself affected by the tainted data.</source>
          <target state="translated">По соображениям эффективности Perl придерживается консервативного взгляда на то,не загрязняют ли данные.Если выражение содержит запятнанные данные,то любое подвыражение может считаться запятнанным,даже если значение подвыражения само по себе не подвержено влиянию запятнанных данных.</target>
        </trans-unit>
        <trans-unit id="88d03294b4e14b45668b8c5e5b3dfd1364498c9a" translate="yes" xml:space="preserve">
          <source>For efficiency, consider using &lt;code&gt;newSVpvn&lt;/code&gt; instead.</source>
          <target state="translated">Для повышения эффективности рассмотрите возможность использования вместо этого &lt;code&gt;newSVpvn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6f3b14d486219cf0d85fabf0e9eb85e0b88039e" translate="yes" xml:space="preserve">
          <source>For encodings that are implemented by the &lt;code&gt;Encode::XS&lt;/code&gt; module, &lt;code&gt;CHECK&lt;/code&gt;&lt;code&gt;==&lt;/code&gt;&lt;code&gt;Encode::FB_PERLQQ&lt;/code&gt; puts &lt;code&gt;encode&lt;/code&gt; and &lt;code&gt;decode&lt;/code&gt; into &lt;code&gt;perlqq&lt;/code&gt; fallback mode.</source>
          <target state="translated">Для кодировок, которые реализованы модулем &lt;code&gt;Encode::XS&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; &lt;code&gt;==&lt;/code&gt; &lt;code&gt;Encode::FB_PERLQQ&lt;/code&gt; переводит &lt;code&gt;encode&lt;/code&gt; и &lt;code&gt;decode&lt;/code&gt; в резервный режим &lt;code&gt;perlqq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f0461c72db1796ac384c3743d40421d6d728a24" translate="yes" xml:space="preserve">
          <source>For even better control look at &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Most&quot;&gt;Test::Most&lt;/a&gt;.</source>
          <target state="translated">Для еще лучшего контроля посмотрите &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Most&quot;&gt;Test :: Most&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6de84b40d8c9c92b7839fff9ac4fcc2776aacc0f" translate="yes" xml:space="preserve">
          <source>For even faster execution, you could do:</source>
          <target state="translated">Для еще более быстрого исполнения,вы могли бы сделать:</target>
        </trans-unit>
        <trans-unit id="6b398db36194244f1d9cc63256c82345fa029b47" translate="yes" xml:space="preserve">
          <source>For example &quot;not ok 23 - hole count # TODO insufficient donuts&quot; would result in this structure:</source>
          <target state="translated">Например,&quot;not ok 23-hole count#TODO sufficient donuts&quot; приведет к такой структуре:</target>
        </trans-unit>
        <trans-unit id="a5d3ee5d1b4b93034c4647239c3af6ae67c5bde3" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;Carp&lt;/code&gt; itself is listed in &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; . Therefore the full stack backtrace from &lt;code&gt;confess&lt;/code&gt; will not start inside of &lt;code&gt;Carp&lt;/code&gt; , and the short message from calling &lt;code&gt;croak&lt;/code&gt; is not placed on the line where &lt;code&gt;croak&lt;/code&gt; was called.</source>
          <target state="translated">Например, сам &lt;code&gt;Carp&lt;/code&gt; указан в &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; . Следовательно, обратная трассировка полного стека из &lt;code&gt;confess&lt;/code&gt; не будет запускаться внутри &lt;code&gt;Carp&lt;/code&gt; , и короткое сообщение от вызова &lt;code&gt;croak&lt;/code&gt; не помещается в строку, где была вызвана &lt;code&gt;croak&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ace2b7f25e1af57e029dcfd910f2807f801a5827" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;TIBETAN VOWEL SIGN VOCALIC RR&lt;/code&gt; with &lt;code&gt;COMBINING TILDE OVERLAY&lt;/code&gt; (&lt;code&gt;U+0344&lt;/code&gt; ) is &lt;code&gt;0FB2 0344 0F71 0F80&lt;/code&gt; in NFD. In this case &lt;code&gt;0FB2 0F80&lt;/code&gt; (&lt;code&gt;TIBETAN VOWEL SIGN VOCALIC R&lt;/code&gt; ) is detected, instead of &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; . Inserted &lt;code&gt;0344&lt;/code&gt; makes &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; discontiguous and lack of contraction &lt;code&gt;0FB2 0F71&lt;/code&gt; prohibits &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; from being detected.</source>
          <target state="translated">Например, &lt;code&gt;TIBETAN VOWEL SIGN VOCALIC RR&lt;/code&gt; с &lt;code&gt;COMBINING TILDE OVERLAY&lt;/code&gt; ( &lt;code&gt;U+0344&lt;/code&gt; ) - это &lt;code&gt;0FB2 0344 0F71 0F80&lt;/code&gt; в NFD. В этом случае &lt;code&gt;0FB2 0F80&lt;/code&gt; ( &lt;code&gt;TIBETAN VOWEL SIGN VOCALIC R&lt;/code&gt; ) вместо &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; . Поставлены &lt;code&gt;0344&lt;/code&gt; марок &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; несоприкасающиеся и отсутствие сокращения &lt;code&gt;0FB2 0F71&lt;/code&gt; запрещают &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; от обнаружения.</target>
        </trans-unit>
        <trans-unit id="30e72f699aeed60ccae59fad4d360b3c19491b02" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;U+1F88&lt;/code&gt; is equivalent to &lt;code&gt;U+1F00 U+03B9&lt;/code&gt; , instead of just &lt;code&gt;U+1F80&lt;/code&gt; . This difference matters mainly for certain Greek capital letters with certain modifiers: the Full case-folding decomposes the letter, while the Simple case-folding would map it to a single character.</source>
          <target state="translated">Например, &lt;code&gt;U+1F88&lt;/code&gt; эквивалентно &lt;code&gt;U+1F00 U+03B9&lt;/code&gt; , а не просто &lt;code&gt;U+1F80&lt;/code&gt; . Это различие имеет значение в основном для некоторых греческих заглавных букв с определенными модификаторами: полное свертывание регистра разбивает букву, а простое свертывание регистра отображает ее в один символ.</target>
        </trans-unit>
        <trans-unit id="b565d7aeb5a29ca8ef10bd80a27e15b4565fe687" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;ilogb(20)&lt;/code&gt; is 4, as an integer.</source>
          <target state="translated">Например, &lt;code&gt;ilogb(20)&lt;/code&gt; - это целое число 4.</target>
        </trans-unit>
        <trans-unit id="214bce966a0b82f5da24e7d2944d4f30b962d2dd" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;logb(20)&lt;/code&gt; is 4, as a floating point number.</source>
          <target state="translated">Например, &lt;code&gt;logb(20)&lt;/code&gt; равно 4 как число с плавающей запятой.</target>
        </trans-unit>
        <trans-unit id="b1b87712e77039600d0bb5eadd729b52754dd4ad" translate="yes" xml:space="preserve">
          <source>For example a &lt;a href=&quot;http://search.cpan.org/perldoc/GDBM_File&quot;&gt;GDBM_File&lt;/a&gt; GDBM_READER tied hash will die with something like:</source>
          <target state="translated">Например, связанный хеш &lt;a href=&quot;http://search.cpan.org/perldoc/GDBM_File&quot;&gt;GDBM_File&lt;/a&gt; GDBM_READER умрет с чем-то вроде:</target>
        </trans-unit>
        <trans-unit id="74bb45479d65e581a981105236dd80b5a848028d" translate="yes" xml:space="preserve">
          <source>For example a template of C</source>
          <target state="translated">Например,шаблон C</target>
        </trans-unit>
        <trans-unit id="22c45cfbac1c695f1bfa7c0643b1ffc692ad7e5a" translate="yes" xml:space="preserve">
          <source>For example if there is a &lt;code&gt;=head2&lt;/code&gt; in the POD file prior to a &lt;code&gt;=head1&lt;/code&gt; .</source>
          <target state="translated">Например , если есть &lt;code&gt;=head2&lt;/code&gt; в файле POD до &lt;code&gt;=head1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c9f1ca436392d899e51a2acc5e1317d1e2a72ba" translate="yes" xml:space="preserve">
          <source>For example the &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fethanschoonover.com%2fsolarized&quot;&gt;Solarized&lt;/a&gt; colors can be mapped with:</source>
          <target state="translated">Например, цвета &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fethanschoonover.com%2fsolarized&quot;&gt;Solarized&lt;/a&gt; можно сопоставить с:</target>
        </trans-unit>
        <trans-unit id="313b954d842d0bc62b1462fc60b81d6d65b41bbd" translate="yes" xml:space="preserve">
          <source>For example the Latin &lt;b&gt;script&lt;/b&gt; is spread over several &lt;b&gt;blocks&lt;/b&gt;, such as &lt;code&gt;Basic Latin&lt;/code&gt; , &lt;code&gt;Latin 1 Supplement&lt;/code&gt;, &lt;code&gt;Latin Extended-A&lt;/code&gt; , and &lt;code&gt;Latin Extended-B&lt;/code&gt; . On the other hand, the Latin script does not contain all the characters of the &lt;code&gt;Basic Latin&lt;/code&gt; block (also known as ASCII): it includes only the letters, and not, for example, the digits nor the punctuation.</source>
          <target state="translated">Например, латинский &lt;b&gt;шрифт&lt;/b&gt; разбит на несколько &lt;b&gt;блоков&lt;/b&gt; , таких как &lt;code&gt;Basic Latin&lt;/code&gt; , &lt;code&gt;Latin 1 Supplement&lt;/code&gt; , &lt;code&gt;Latin Extended-A&lt;/code&gt; и &lt;code&gt;Latin Extended-B&lt;/code&gt; . С другой стороны, латинский шрифт не содержит всех символов блока &lt;code&gt;Basic Latin&lt;/code&gt; (также известного как ASCII): он включает только буквы, а не, например, цифры или знаки препинания.</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">Например,</target>
        </trans-unit>
        <trans-unit id="6812d6ccb69fe61a2edf14ef55d513765cc75692" translate="yes" xml:space="preserve">
          <source>For example, &lt;b&gt;-COE&lt;/b&gt; and &lt;b&gt;-C6&lt;/b&gt; will both turn on UTF-8-ness on both STDOUT and STDERR. Repeating letters is just redundant, not cumulative nor toggling.</source>
          <target state="translated">Например, &lt;b&gt;-COE&lt;/b&gt; и &lt;b&gt;С6&lt;/b&gt; оба будут включите UTF-8-ности на обоих STDOUT и STDERR. Повторяющиеся буквы просто избыточны, а не накапливаются и не переключаются.</target>
        </trans-unit>
        <trans-unit id="29e6ab6115ba236468a1784dbaded696c523a4aa" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;$+{foo}&lt;/code&gt; is equivalent to &lt;code&gt;$1&lt;/code&gt; after the following match:</source>
          <target state="translated">Например, &lt;code&gt;$+{foo}&lt;/code&gt; эквивалентно &lt;code&gt;$1&lt;/code&gt; после следующего совпадения:</target>
        </trans-unit>
        <trans-unit id="222cd952b129bcca43a9663919abeeb392a2e171" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;&amp;lt;..\\l*b\\file/*glob.p?&amp;gt;&lt;/code&gt; will work as expected (in that it will find something like '..\lib\File/DosGlob.pm' alright). Note that all path components are case-insensitive, and that backslashes and forward slashes are both accepted, and preserved. You may have to double the backslashes if you are putting them in literally, due to double-quotish parsing of the pattern by perl.</source>
          <target state="translated">Например, &lt;code&gt;&amp;lt;..\\l*b\\file/*glob.p?&amp;gt;&lt;/code&gt; Будет работать должным образом (в том смысле, что он найдет что-то вроде '.. \ lib \ File / DosGlob.pm' хорошо). Обратите внимание, что все компоненты пути нечувствительны к регистру, и что обратная и прямая косые черты принимаются и сохраняются. Возможно, вам придется удвоить обратную косую черту, если вы вводите их буквально, из-за парсинга шаблона в двойных кавычках с помощью perl.</target>
        </trans-unit>
        <trans-unit id="062393ae2c2d73fa3bc2e3a2d91a68adfcd83483" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;-oLaTeX&lt;/code&gt; currently tries all of the following classes: Pod::Perldoc::ToLaTeX Pod::Perldoc::Tolatex Pod::Perldoc::ToLatex Pod::Perldoc::ToLATEX Pod::Simple::LaTeX Pod::Simple::latex Pod::Simple::Latex Pod::Simple::LATEX Pod::LaTeX Pod::latex Pod::Latex Pod::LATEX.</source>
          <target state="translated">Например, &lt;code&gt;-oLaTeX&lt;/code&gt; в настоящее время пробует все следующие классы: Pod :: Perldoc :: ToLaTeX Pod :: Perldoc :: Tolatex Pod :: Perldoc :: ToLatex Pod :: Perldoc :: ToLATEX Pod :: Simple :: LaTeX Pod: : Simple :: latex Pod :: Simple :: Latex Pod :: Simple :: LATEX Pod :: LaTeX Pod :: latex Pod :: Latex Pod :: LATEX.</target>
        </trans-unit>
        <trans-unit id="77a1e585a487cc3bfbbd51ad5e562a48a610c1cd" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;HARNESS_PERL_SWITCHES=-T&lt;/code&gt; will turn on taint mode. &lt;code&gt;HARNESS_PERL_SWITCHES=-MDevel::Cover&lt;/code&gt; will run &lt;code&gt;Devel::Cover&lt;/code&gt; for each test.</source>
          <target state="translated">Например, &lt;code&gt;HARNESS_PERL_SWITCHES=-T&lt;/code&gt; включит режим заражения. &lt;code&gt;HARNESS_PERL_SWITCHES=-MDevel::Cover&lt;/code&gt; будет запускать &lt;code&gt;Devel::Cover&lt;/code&gt; для каждого теста.</target>
        </trans-unit>
        <trans-unit id="86e52df63e27db421ca6b9e4dc513368b0a83476" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;U+0041&lt;/code&gt;&lt;code&gt;&quot;LATIN CAPITAL LETTER A&quot;&lt;/code&gt; was present in the very first Unicode release available, which is &lt;code&gt;1.1&lt;/code&gt; , so this property is true for all valid &quot;*&quot; versions. On the other hand, &lt;code&gt;U+1EFF&lt;/code&gt; was not assigned until version 5.1 when it became &lt;code&gt;&quot;LATIN SMALL LETTER Y WITH LOOP&quot;&lt;/code&gt; , so the only &quot;*&quot; that would match it are 5.1, 5.2, and later.</source>
          <target state="translated">Например, &lt;code&gt;U+0041&lt;/code&gt; &lt;code&gt;&quot;LATIN CAPITAL LETTER A&quot;&lt;/code&gt; присутствовала в самой первой доступной версии Unicode, а именно &lt;code&gt;1.1&lt;/code&gt; , поэтому это свойство истинно для всех допустимых версий &amp;laquo;*&amp;raquo;. С другой стороны, &lt;code&gt;U+1EFF&lt;/code&gt; не был назначен до версии 5.1, когда он стал &lt;code&gt;&quot;LATIN SMALL LETTER Y WITH LOOP&quot;&lt;/code&gt; , поэтому единственные символы &amp;laquo;*&amp;raquo;, которые будут соответствовать ему, - это 5.1, 5.2 и более поздние версии .</target>
        </trans-unit>
        <trans-unit id="346cf35fe7206ef61916e68c2ca5d063324557a7" translate="yes" xml:space="preserve">
          <source>For example, Foo::Bar becomes Foo-Bar.</source>
          <target state="translated">Например,Фу::Бар становится Фу-Баром.</target>
        </trans-unit>
        <trans-unit id="ea8cd802fd235063bdbe8cd10be2c1b9866e7e9d" translate="yes" xml:space="preserve">
          <source>For example, MyExpirePolicy::TIEHASH might create an object that contains a regular Perl hash (which it will to store the cached values) and some extra information about the arguments and how old the data is and things like that. Let us call this object `C'.</source>
          <target state="translated">Например,MyExpirePolicy::TIEHASH может создать объект,который будет содержать обычный Perl хэш (который будет хранить кэшированные значения)и некоторую дополнительную информацию об аргументах,а также о том,сколько лет данным и тому подобное.Давайте назовем этот объект `C'.</target>
        </trans-unit>
        <trans-unit id="7e2c26a54a82719f79b06117790e2637ab0e300f" translate="yes" xml:space="preserve">
          <source>For example, a &lt;code&gt;Moose&lt;/code&gt; class can subclass a &lt;code&gt;Moo&lt;/code&gt; class using &lt;code&gt;extends&lt;/code&gt; or consume a &lt;code&gt;Moo&lt;/code&gt; role using &lt;code&gt;with&lt;/code&gt; .</source>
          <target state="translated">Например, класс &lt;code&gt;Moose&lt;/code&gt; может создавать подклассы класса &lt;code&gt;Moo&lt;/code&gt; с помощью &lt;code&gt;extends&lt;/code&gt; или использовать роль &lt;code&gt;Moo&lt;/code&gt; &lt;code&gt;with&lt;/code&gt; помощью with .</target>
        </trans-unit>
        <trans-unit id="bf2744eaf270dcbbff1985c2b73c221de5631d9d" translate="yes" xml:space="preserve">
          <source>For example, a version of &lt;code&gt;like()&lt;/code&gt; , sans the useful diagnostic messages, could be written as:</source>
          <target state="translated">Например, версия &lt;code&gt;like()&lt;/code&gt; без полезных диагностических сообщений может быть записана как:</target>
        </trans-unit>
        <trans-unit id="f4218fb9c51483864cd6b3fb02448d68465452ff" translate="yes" xml:space="preserve">
          <source>For example, an XSUB</source>
          <target state="translated">Например,XSUB</target>
        </trans-unit>
        <trans-unit id="d908226f910991ef51ebc57880107e99b08586dc" translate="yes" xml:space="preserve">
          <source>For example, consider the code below:</source>
          <target state="translated">Например,рассмотрим код,приведенный ниже:</target>
        </trans-unit>
        <trans-unit id="ec1791bd29717623df33288ef02efc342f0cf537" translate="yes" xml:space="preserve">
          <source>For example, consider the following scenario. You have a DBM database that you need to share with a third-party C application. The C application assumes that</source>
          <target state="translated">Например,рассмотрим следующий сценарий.У вас есть база данных DBM,которой вы должны поделиться со сторонним приложением C.C-приложение предполагает,что</target>
        </trans-unit>
        <trans-unit id="8190f04d38d06a461e096583cfda36d375198e8e" translate="yes" xml:space="preserve">
          <source>For example, consider:</source>
          <target state="translated">Например,рассмотрим:</target>
        </trans-unit>
        <trans-unit id="c1377b5d79a1a1b8f2eb1b799a03d844580027b4" translate="yes" xml:space="preserve">
          <source>For example, given the string:</source>
          <target state="translated">Например,учитывая строку:</target>
        </trans-unit>
        <trans-unit id="61f7eb35077596ec97c395fa31a4c9dc65c12237" translate="yes" xml:space="preserve">
          <source>For example, here all the areas that are taken literally are underlined with a &quot;^&quot;, and all the in-bracket special regions are underlined with an X:</source>
          <target state="translated">Например,здесь все области,которые взяты буквально,подчеркнуты &quot;^&quot;,а все входящие в скобки специальные области подчеркнуты &quot;X&quot;:</target>
        </trans-unit>
        <trans-unit id="282f0060364377e323c90656e8982dd19487e634" translate="yes" xml:space="preserve">
          <source>For example, here is a loop that inserts index producing entries before any line containing a certain pattern:</source>
          <target state="translated">Например,здесь есть цикл,который вставляет записи,производящие индекс,перед любой линией,содержащей определенную деталь:</target>
        </trans-unit>
        <trans-unit id="c309481bf35b9a661995259865d469413fa7c131" translate="yes" xml:space="preserve">
          <source>For example, here is a minimal source code filter in a module named BANG.pm. It simply converts every occurrence of the sequence &lt;code&gt;BANG\s+BANG&lt;/code&gt; to the sequence &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt; 'BANG' if $BANG&lt;/code&gt; in any piece of code following a &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; BANG;&lt;/code&gt; statement (until the next &lt;code&gt;&lt;a href=&quot;../functions/no&quot;&gt;no&lt;/a&gt; BANG;&lt;/code&gt; statement, if any):</source>
          <target state="translated">Например, вот минимальный фильтр исходного кода в модуле с именем BANG.pm. Он просто преобразует каждое вхождение последовательности &lt;code&gt;BANG\s+BANG&lt;/code&gt; в последовательность &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt; 'BANG' if $BANG&lt;/code&gt; в любом фрагменте кода после &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; BANG;&lt;/code&gt; оператор (до следующего оператора &lt;code&gt;&lt;a href=&quot;../functions/no&quot;&gt;no&lt;/a&gt; BANG;&lt;/code&gt; , если есть):</target>
        </trans-unit>
        <trans-unit id="deab4a0dbceae95053981957ee52dc40c226b6c1" translate="yes" xml:space="preserve">
          <source>For example, here is a sample filter that adds a trailing NULL character to all strings before they are written to the DBM file, and removes the trailing NULL when they are read from the DBM file</source>
          <target state="translated">Например,вот пример фильтра,который добавляет символ NULL трейлинга ко всем строкам перед их записью в DBM-файл и удаляет NULL трейлинга при их чтении из DBM-файла.</target>
        </trans-unit>
        <trans-unit id="2ff6a04c682bedfc2159947b94ad35c5e1653401" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;$a&lt;/code&gt; is an object blessed into a package declaring</source>
          <target state="translated">Например, если &lt;code&gt;$a&lt;/code&gt; - объект, добавленный в пакет, объявляющий</target>
        </trans-unit>
        <trans-unit id="e47691ce5bbf77ccdd2c65322eb9ae19daa34236" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;A&lt;/code&gt; inherits from &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; (in that order), &lt;code&gt;B&lt;/code&gt; overloads &lt;code&gt;+&lt;/code&gt; with &lt;code&gt;\&amp;amp;D::plus_sub&lt;/code&gt; , and &lt;code&gt;C&lt;/code&gt; overloads &lt;code&gt;+&lt;/code&gt; by &lt;code&gt;&quot;plus_meth&quot;&lt;/code&gt; , then the subroutine &lt;code&gt;D::plus_sub&lt;/code&gt; will be called to implement operation &lt;code&gt;+&lt;/code&gt; for an object in package &lt;code&gt;A&lt;/code&gt; .</source>
          <target state="translated">Например, если &lt;code&gt;A&lt;/code&gt; наследуется от &lt;code&gt;B&lt;/code&gt; и &lt;code&gt;C&lt;/code&gt; (в этом порядке), &lt;code&gt;B&lt;/code&gt; перегружает &lt;code&gt;+&lt;/code&gt; с помощью &lt;code&gt;\&amp;amp;D::plus_sub&lt;/code&gt; , а &lt;code&gt;C&lt;/code&gt; перегружает &lt;code&gt;+&lt;/code&gt; с помощью &lt;code&gt;&quot;plus_meth&quot;&lt;/code&gt; , тогда будет вызвана подпрограмма &lt;code&gt;D::plus_sub&lt;/code&gt; для реализации операции &lt;code&gt;+&lt;/code&gt; для объект в пакете &lt;code&gt;A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdb8e022d3a14d860cf1eee66a67b7f130110122" translate="yes" xml:space="preserve">
          <source>For example, if a user accepts only 'ca' (Catalan) and 'es' (Spanish), and the documents/interfaces you have available are just in German, Italian, and Chinese, then the user will most likely want the Italian one (and not the Chinese or German one!), instead of getting nothing. So &lt;code&gt;panic_languages('ca', 'es')&lt;/code&gt; returns a list containing 'it' (Italian).</source>
          <target state="translated">Например, если пользователь принимает только &amp;laquo;ca&amp;raquo; (каталанский) и &amp;laquo;es&amp;raquo; (испанский), а имеющиеся у вас документы / интерфейсы только на немецком, итальянском и китайском языках, то пользователь, скорее всего, захочет итальянский. (а не китайскую или немецкую!), а не получить ничего. Таким образом, &lt;code&gt;panic_languages('ca', 'es')&lt;/code&gt; возвращает список, содержащий 'it' (итальянский).</target>
        </trans-unit>
        <trans-unit id="886940312d9491ca5ffc8d712e7908d39622ad09" translate="yes" xml:space="preserve">
          <source>For example, if no tests have run &lt;code&gt;is_passing()&lt;/code&gt; will be true because even though a suite with no tests is a failure you can add a passing test to it and start passing.</source>
          <target state="translated">Например, если ни один из тестов не выполнялся, &lt;code&gt;is_passing()&lt;/code&gt; будет истинным, потому что даже если набор без тестов является ошибочным, вы можете добавить к нему проходной тест и начать прохождение.</target>
        </trans-unit>
        <trans-unit id="8759c901db12e35962f36dbb59c087c3f752959f" translate="yes" xml:space="preserve">
          <source>For example, if you add a Unicode string like</source>
          <target state="translated">Например,если вы добавите строку Unicode типа</target>
        </trans-unit>
        <trans-unit id="32c9f1310448f772c98938afaa753d6c8ad8468a" translate="yes" xml:space="preserve">
          <source>For example, if you have 4 C functions multiply(), divide(), add(), subtract() all having the signature:</source>
          <target state="translated">Например,если у вас есть 4 функции на Си:multiply(),divide(),add(),subtract(),все они имеют сигнатуру:</target>
        </trans-unit>
        <trans-unit id="4a173ebec9470f66747de7c5eefed0eb1d0d01a0" translate="yes" xml:space="preserve">
          <source>For example, if you have a uuencoded and compressed source file, it is possible to stack a uudecode filter and an uncompression filter like this:</source>
          <target state="translated">Например,если у вас есть uuencoded и сжатый исходный файл,то можно сложить в стек фильтр uudecode и фильтр без сжатия,как этот:</target>
        </trans-unit>
        <trans-unit id="d9372470a314912841e718aa7d95049e68d683c3" translate="yes" xml:space="preserve">
          <source>For example, if you want all your regular expressions to have /msx on by default, simply put</source>
          <target state="translated">Например,если вы хотите,чтобы все ваши регулярные выражения имели /msx по умолчанию,просто напишите</target>
        </trans-unit>
        <trans-unit id="4909c84cf33294d068c280ab4acd84ce25b4c18c" translate="yes" xml:space="preserve">
          <source>For example, if you wanted a function to make a new hash and return a reference to it, you have these options:</source>
          <target state="translated">Например,если вы хотите,чтобы функция сделала новый хэш и вернула ссылку на него,у вас есть эти опции:</target>
        </trans-unit>
        <trans-unit id="a570ae33985ad610c93d2b21ee03162407502a4d" translate="yes" xml:space="preserve">
          <source>For example, if your scalar is a reference and you want to modify the SvIVX slot, you can't just do SvROK_off, as that will leak the referent.</source>
          <target state="translated">Например,если ваш скаляр является ссылкой и вы хотите изменить слот SvIVX,вы не можете просто сделать SvROK_off,так как это приведет к утечке референта.</target>
        </trans-unit>
        <trans-unit id="85a3de5be37b1e7d1156f1cef62afbe6c76e2823" translate="yes" xml:space="preserve">
          <source>For example, imagine you want to return a reference from an XSUB function. Inside the XSUB routine, you create an SV which initially has a reference count of one. Then you call &lt;code&gt;newRV_inc&lt;/code&gt; , passing it the just-created SV. This returns the reference as a new SV, but the reference count of the SV you passed to &lt;code&gt;newRV_inc&lt;/code&gt; has been incremented to two. Now you return the reference from the XSUB routine and forget about the SV. But Perl hasn't! Whenever the returned reference is destroyed, the reference count of the original SV is decreased to one and nothing happens. The SV will hang around without any way to access it until Perl itself terminates. This is a memory leak.</source>
          <target state="translated">Например, представьте, что вы хотите вернуть ссылку из функции XSUB. Внутри процедуры XSUB вы создаете SV, который изначально имеет счетчик ссылок, равный единице. Затем вы вызываете &lt;code&gt;newRV_inc&lt;/code&gt; , передавая ему только что созданный SV. Это возвращает ссылку как новый SV, но счетчик ссылок SV, который вы передали в &lt;code&gt;newRV_inc&lt;/code&gt; , был увеличен до двух. Теперь вы возвращаете ссылку из процедуры XSUB и забываете о SV. Но в Perl нет! Каждый раз, когда возвращенная ссылка уничтожается, счетчик ссылок исходного SV уменьшается до единицы и ничего не происходит. SV будет зависать без какого-либо доступа к нему, пока сам Perl не завершится. Это утечка памяти.</target>
        </trans-unit>
        <trans-unit id="9cb2e2ef894e1ed98060074d6b4776bf06e4d3ee" translate="yes" xml:space="preserve">
          <source>For example, intuition tells you that this XS code:</source>
          <target state="translated">Например,интуиция подсказывает вам,что этот XS код:</target>
        </trans-unit>
        <trans-unit id="74d92c0f78a3f35d2b66123bb54771dbbcbaaae8" translate="yes" xml:space="preserve">
          <source>For example, it might return these data (among others) for the difference between 5.008000 and 5.008001:</source>
          <target state="translated">Например,он может вернуть эти данные (среди прочего)для разницы между 5.008000 и 5.008001:</target>
        </trans-unit>
        <trans-unit id="8932a840658bb617ebb44a7bc96b426c503bdff7" translate="yes" xml:space="preserve">
          <source>For example, let's say that you have a long-running database server daemon that you want folks to be able to access from the Web, but only if they go through a CGI interface. You'd have a small, simple CGI program that does whatever checks and logging you feel like, and then acts as a Unix-domain client and connects to your private server.</source>
          <target state="translated">Например,допустим,у вас есть давний демон сервера баз данных,к которому вы хотите,чтобы люди имели доступ из Интернета,но только если они проходят через CGI интерфейс.У вас будет маленькая,простая CGI-программа,которая делает все,что вы хотите проверить и записать в журнал,а затем действует как Unix-клиент домена и соединяется с вашим частным сервером.</target>
        </trans-unit>
        <trans-unit id="86ba35baedd2bab7b0f63f6847d21e1fa348e167" translate="yes" xml:space="preserve">
          <source>For example, let's say you'd like to have your</source>
          <target state="translated">Например,скажем,вы бы хотели,чтобы ваш</target>
        </trans-unit>
        <trans-unit id="194fc6778319983cc9c4ca8c95042faf96fb7b65" translate="yes" xml:space="preserve">
          <source>For example, let's take a GUI driven program. It has a semaphore that it uses to synchronize access to the display, so only one thread is ever drawing at once. Handy, but of course you don't want any thread to start drawing until things are properly set up. In this case, you can create a semaphore with a counter set to zero, and up it when things are ready for drawing.</source>
          <target state="translated">Например,возьмем программу с графическим интерфейсом.У нее есть семафор,который она использует для синхронизации доступа к дисплею,так что только один поток рисует одновременно.Удобно,но,конечно,вы не хотите,чтобы какой-нибудь поток начал рисовать,пока все не будет настроено должным образом.В этом случае Вы можете создать семафор со счетчиком,установленным на ноль,и поднимать его,когда все будет готово к рисованию.</target>
        </trans-unit>
        <trans-unit id="b5cc0c799c8ac490a734bb661c428c57117107e1" translate="yes" xml:space="preserve">
          <source>For example, many newer useful APIs are not present in OS/2 v2; many PM-related APIs require DLLs not available on floppy-boot setup.</source>
          <target state="translated">Например,многие более новые полезные API отсутствуют в OS/2 v2;многие API,связанные с PM,требуют DLL,недоступных на дискетах.</target>
        </trans-unit>
        <trans-unit id="dc5f27a11595298226b5ecd1db6f9aeef4a5b4ec" translate="yes" xml:space="preserve">
          <source>For example, on Unix this would escape any single-quotes in $text and put single-quotes around the whole thing.</source>
          <target state="translated">Например,в Unix это позволит избежать любых одиночных кавычек в $тексте и поместить одиночные кавычки вокруг всего этого.</target>
        </trans-unit>
        <trans-unit id="e6ea05a8d9aa3d31bd0e3e1d1aa6044dba6a83b8" translate="yes" xml:space="preserve">
          <source>For example, parsing a L&amp;lt;Foo/&quot;Bar&quot;&amp;gt; link will produce a start-token with a &quot;to&quot; attribute with the value &quot;Foo&quot;, a &quot;type&quot; attribute with the value &quot;pod&quot;, and a &quot;section&quot; attribute with the value &quot;Bar&quot;.</source>
          <target state="translated">Например, при синтаксическом анализе ссылки L &amp;lt;Foo / &quot;Bar&quot;&amp;gt; будет создан стартовый токен с атрибутом &quot;to&quot; со значением &quot;Foo&quot;, атрибутом &quot;type&quot; со значением &quot;pod&quot; и &quot;section&quot; атрибут со значением &amp;laquo;Бар&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="4d8ed73a29aeabbe37200513a23647bf9812ba11" translate="yes" xml:space="preserve">
          <source>For example, say you need to create a class implementing overloaded mathematical operators, and would like to provide your own pragma that functions much like &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; You'd like this code</source>
          <target state="translated">Например, предположим, что вам нужно создать класс, реализующий перегруженные математические операторы, и вы хотите предоставить свою собственную прагму, которая работает так же, как &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; Вам нужен этот код</target>
        </trans-unit>
        <trans-unit id="7fbbe0aa9845cec520a90786e8524e8299625199" translate="yes" xml:space="preserve">
          <source>For example, setting prefix_pattern to &lt;code&gt;--|-|\+|\/&lt;/code&gt; and long_prefix_pattern to &lt;code&gt;--|\/&lt;/code&gt; would add Win32 style argument handling.</source>
          <target state="translated">Например, установка prefix_pattern на &lt;code&gt;--|-|\+|\/&lt;/code&gt; и long_prefix_pattern на &lt;code&gt;--|\/&lt;/code&gt; добавит обработку аргументов в стиле Win32.</target>
        </trans-unit>
        <trans-unit id="83cdc2b87550c2073421ee9d7b2b562b30e21210" translate="yes" xml:space="preserve">
          <source>For example, suppose that a C function is declared as</source>
          <target state="translated">Например,предположим,что функция C объявлена как</target>
        </trans-unit>
        <trans-unit id="3032721d2a0b9447ee105fd0f58af3c782c7c78e" translate="yes" xml:space="preserve">
          <source>For example, suppose that you have a module, A, which already has an import function:</source>
          <target state="translated">Например,предположим,что у вас есть модуль A,который уже имеет функцию импорта:</target>
        </trans-unit>
        <trans-unit id="5d59fda06c904abab606e40ac19199fab2edd4c9" translate="yes" xml:space="preserve">
          <source>For example, suppose the start tag &quot;/para&quot; introduces a paragraph, which then continues until the next &quot;/endpara&quot; tag or until another &quot;/para&quot; tag is encountered:</source>
          <target state="translated">Например,предположим,что стартовый тег &quot;/para&quot; вводит абзац,который затем продолжается до следующего тега &quot;/endpara&quot; или до тех пор,пока не встретится другой тег &quot;/para&quot;:</target>
        </trans-unit>
        <trans-unit id="722e9b7fb9ae1447f9773a346a88fa54f1637a70" translate="yes" xml:space="preserve">
          <source>For example, suppose under the previous example, the memory footprints were</source>
          <target state="translated">Например,предположим в предыдущем примере,что следы памяти были</target>
        </trans-unit>
        <trans-unit id="05d893596622d4a80e535a21a12a1aee563b93bd" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a document that starts out:</source>
          <target state="translated">Например,предположим,что у вас есть документ,который начинается:</target>
        </trans-unit>
        <trans-unit id="52828c35e04550c449cacfba26c2cecd5cb47850" translate="yes" xml:space="preserve">
          <source>For example, the following code maintains a private counter, incremented each time the gimme_another() function is called:</source>
          <target state="translated">Например,следующий код поддерживает частный счетчик,который увеличивается каждый раз при вызове функции gimme_another():</target>
        </trans-unit>
        <trans-unit id="1ed0efd5077b028dc94a3c2fa546515dce13ec61" translate="yes" xml:space="preserve">
          <source>For example, the following computes the same number as the System V sum program:</source>
          <target state="translated">Например,ниже вычисляется то же число,что и программа System V sum:</target>
        </trans-unit>
        <trans-unit id="19d3a9f832bfede9ec03750347c230d365e34605" translate="yes" xml:space="preserve">
          <source>For example, the following extracts substrings that are valid Perl variables:</source>
          <target state="translated">Например,следующие извлекают подстроки,которые являются действительными переменными Perl:</target>
        </trans-unit>
        <trans-unit id="f07ff2eac86996a294f8c340a4f99d7c05265d15" translate="yes" xml:space="preserve">
          <source>For example, the following filter detects concatenated pairs of strings/quotelikes and reverses the order in which they are concatenated:</source>
          <target state="translated">Например,следующий фильтр обнаруживает конкатенированные пары строк/квотелей и меняет порядок их конкатенирования:</target>
        </trans-unit>
        <trans-unit id="1e0c2a812e2e3e862d2489a82a90a6fe426ea8bc" translate="yes" xml:space="preserve">
          <source>For example, the following will do the trick:</source>
          <target state="translated">Например,следующая хитрость поможет:</target>
        </trans-unit>
        <trans-unit id="e39332b0891fe5b116748687d101665a0ac3bf59" translate="yes" xml:space="preserve">
          <source>For example, the following would cause &lt;a href=&quot;queue&quot;&gt;Thread::Queue&lt;/a&gt; to create a empty, shared array reference via &lt;code&gt;&amp;amp;shared([])&lt;/code&gt; , copy the elements 'foo', 'bar' and 'baz' from &lt;code&gt;@ary&lt;/code&gt; into it, and then place that shared reference onto the queue:</source>
          <target state="translated">Например, следующее приведет к тому, что &lt;a href=&quot;queue&quot;&gt;Thread :: Queue&lt;/a&gt; создаст пустую ссылку на общий массив через &lt;code&gt;&amp;amp;shared([])&lt;/code&gt; , скопирует в него элементы 'foo', 'bar' и 'baz' из &lt;code&gt;@ary&lt;/code&gt; , а затем поместит это общая ссылка на очередь:</target>
        </trans-unit>
        <trans-unit id="74318882ba84561a544011d5b07567896cc6c6f2" translate="yes" xml:space="preserve">
          <source>For example, the template &lt;code&gt;x[L]&lt;/code&gt; skips as many bytes as in a packed long, and the template &lt;code&gt;&quot;$t X[$t] $t&quot;&lt;/code&gt; unpacks twice whatever $t (when variable-expanded) unpacks. If the template in brackets contains alignment commands (such as &lt;code&gt;x![d]&lt;/code&gt; ), its packed length is calculated as if the start of the template had the maximal possible alignment.</source>
          <target state="translated">Например, шаблон &lt;code&gt;x[L]&lt;/code&gt; пропускает столько байтов, сколько в упакованном long, а шаблон &lt;code&gt;&quot;$t X[$t] $t&quot;&lt;/code&gt; дважды распаковывает все, что распаковывает $ t (при расширении переменной). Если шаблон в скобках содержит команды выравнивания (например, &lt;code&gt;x![d]&lt;/code&gt; ), его упакованная длина рассчитывается так, как если бы начало шаблона имело максимально возможное выравнивание.</target>
        </trans-unit>
        <trans-unit id="5e7b531e77c163b8c2ffdb3ee7640976837b2cd8" translate="yes" xml:space="preserve">
          <source>For example, the two are equivalent:</source>
          <target state="translated">Например,они эквивалентны:</target>
        </trans-unit>
        <trans-unit id="37ab708b8a37671c040bc6173605339df847f5d8" translate="yes" xml:space="preserve">
          <source>For example, this</source>
          <target state="translated">Например,это</target>
        </trans-unit>
        <trans-unit id="6751e73c6b01b59d5dba968e1ce44f9db2bd48e6" translate="yes" xml:space="preserve">
          <source>For example, this Pod text:</source>
          <target state="translated">Например,этот под-текст:</target>
        </trans-unit>
        <trans-unit id="f3defe2b1e9069ae388a99caeefdfba166f4eafb" translate="yes" xml:space="preserve">
          <source>For example, this program</source>
          <target state="translated">Например,эта программа</target>
        </trans-unit>
        <trans-unit id="6361c0f3a8383561486e71f9f602b08950af7cfb" translate="yes" xml:space="preserve">
          <source>For example, this program detects duplicate words, even when they span line breaks (but not paragraph ones). For this example, we don't need &lt;code&gt;/s&lt;/code&gt; because we aren't using dot in a regular expression that we want to cross line boundaries. Neither do we need &lt;code&gt;/m&lt;/code&gt; because we don't want caret or dollar to match at any point inside the record next to newlines. But it's imperative that $/ be set to something other than the default, or else we won't actually ever have a multiline record read in.</source>
          <target state="translated">Например, эта программа обнаруживает повторяющиеся слова, даже если они охватывают разрывы строк (но не абзацев). В этом примере нам не нужен &lt;code&gt;/s&lt;/code&gt; , потому что мы не используем точку в регулярном выражении, которое хотим пересечь границы строки. Нам также не нужен &lt;code&gt;/m&lt;/code&gt; , потому что мы не хотим, чтобы курсор или доллар совпадали в любой точке внутри записи рядом с символами новой строки. Но обязательно, чтобы $ / было установлено на что-то другое, кроме значения по умолчанию, иначе у нас фактически никогда не будет считываться многострочная запись.</target>
        </trans-unit>
        <trans-unit id="1bd82174af8f3a036da73ea77435fa503303e9e8" translate="yes" xml:space="preserve">
          <source>For example, this reports that the handle smells IOish (but please don't really do this!):</source>
          <target state="translated">Например,это говорит о том,что ручка пахнет IOish (но,пожалуйста,не делайте этого!):</target>
        </trans-unit>
        <trans-unit id="ef3a161073bd310ed2cbade0af56c0a0b5004f38" translate="yes" xml:space="preserve">
          <source>For example, this will print out $foo every time line 53 is passed:</source>
          <target state="translated">Например,это будет выводить $foo каждый раз,когда проходит 53-я строка:</target>
        </trans-unit>
        <trans-unit id="9605a513ac289376aa334b379fb4d5b13b111824" translate="yes" xml:space="preserve">
          <source>For example, to cause the previous filter to filter only up to a line of the form:</source>
          <target state="translated">Например,чтобы предыдущий фильтр отфильтровывал только до строки формы:</target>
        </trans-unit>
        <trans-unit id="300d70e414e6ea43611e3ca2af00e9302dad6ae4" translate="yes" xml:space="preserve">
          <source>For example, to convert ASCII/Latin1 to code page 037 take the output of the second numbers column from the output of recipe 2 (modified to add &lt;code&gt;&quot;\&quot;&lt;/code&gt; characters), and use it in &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; like so:</source>
          <target state="translated">Например, чтобы преобразовать ASCII / Latin1 в кодовую страницу 037, возьмите вывод второго столбца чисел из вывода рецепта 2 (измененный для добавления символов &lt;code&gt;&quot;\&quot;&lt;/code&gt; ) и используйте его в &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="dd7243dc5fc5fca757ae08f0881832e542544924" translate="yes" xml:space="preserve">
          <source>For example, to convert ISO-8859-1 data into a string in Perl's internal format:</source>
          <target state="translated">Например,для преобразования данных ISO-8859-1 во строку во внутреннем формате Perl:</target>
        </trans-unit>
        <trans-unit id="a6cd7eef61c208f99d59f8caa4d148fd7c2f1727" translate="yes" xml:space="preserve">
          <source>For example, to convert a string from Perl's internal format into ISO-8859-1, also known as Latin1:</source>
          <target state="translated">Например,для преобразования строки из внутреннего формата Perl в ISO-8859-1,также известный как Latin1:</target>
        </trans-unit>
        <trans-unit id="c5e7afc76698552bd4261769a00bd251fb42909a" translate="yes" xml:space="preserve">
          <source>For example, to create a new Perl variable called &quot;dberror&quot; that contains both the numeric and descriptive string error values, you could use the following code:</source>
          <target state="translated">Например,для создания новой переменной Perl,называемой &quot;dberror&quot;,которая содержит как числовые,так и описательные значения ошибки строки,можно использовать следующий код:</target>
        </trans-unit>
        <trans-unit id="b4d9b81a8771c07736a765b8d4696ec4b2677d0a" translate="yes" xml:space="preserve">
          <source>For example, to define a property that covers both the Japanese syllabaries (hiragana and katakana), you can define</source>
          <target state="translated">Например,чтобы определить свойство,охватывающее обе японские программы (хирагана и катакана),вы можете определить</target>
        </trans-unit>
        <trans-unit id="e2cb81580d4ab01621fb850e0ae4ed1624280f45" translate="yes" xml:space="preserve">
          <source>For example, to extract an HTML link (which should not contain nested links) use:</source>
          <target state="translated">Например,для извлечения HTML-ссылки (которая не должна содержать вложенных ссылок)используйте ее:</target>
        </trans-unit>
        <trans-unit id="c87052aad8c5be2f19681e4d2c2a7fd4fe520629" translate="yes" xml:space="preserve">
          <source>For example, to extract an arbitrary XML tag, but ignore &quot;empty&quot; elements:</source>
          <target state="translated">Например,для извлечения произвольного XML-тега,но игнорирования &quot;пустых&quot; элементов:</target>
        </trans-unit>
        <trans-unit id="9cc0a6697b30109ed6291482e3cc85911a7299a8" translate="yes" xml:space="preserve">
          <source>For example, to find out how many tests unexpectedly succeeded (TODO tests which passed when they shouldn't):</source>
          <target state="translated">Например,чтобы узнать,сколько тестов неожиданно получилось (TODO-тесты,которые прошли,когда они не должны были):</target>
        </trans-unit>
        <trans-unit id="1cae119c444d0ffb7547a1a1d5509bf58d292d18" translate="yes" xml:space="preserve">
          <source>For example, to grab non-empty comments into $1, one should use either one of these:</source>
          <target state="translated">Например,чтобы получить непустые комментарии в $1,нужно использовать любой из них:</target>
        </trans-unit>
        <trans-unit id="8a90f73c9c3213efb315136981dc33afcfd35395" translate="yes" xml:space="preserve">
          <source>For example, to set the top-of-form format for more than one output channel, you might do the following:</source>
          <target state="translated">Например,чтобы установить формат &quot;top-of-form&quot; для более чем одного выходного канала,вы можете сделать следующее:</target>
        </trans-unit>
        <trans-unit id="66259dd1f85a2d02b33a9e596d8f1d7b0ac5e796" translate="yes" xml:space="preserve">
          <source>For example, to start a traditional, non-OO module called Some::Module, create a file called</source>
          <target state="translated">Например,чтобы запустить традиционный,не-OOO модуль под названием Some::Module,создайте файл под названием</target>
        </trans-unit>
        <trans-unit id="f942067356d5cfcd3d6efe175d21ba418d7f8528" translate="yes" xml:space="preserve">
          <source>For example, to trap an interrupt signal, set up a handler like this:</source>
          <target state="translated">Например,чтобы поймать сигнал прерывания,установите такой обработчик:</target>
        </trans-unit>
        <trans-unit id="92fd80c8ef445eeb8d54adb5b6fe2e04ca178559" translate="yes" xml:space="preserve">
          <source>For example, use either</source>
          <target state="translated">Например,использовать либо</target>
        </trans-unit>
        <trans-unit id="e046e6073a1c24e29ced7bc19e8dd56e44b12d30" translate="yes" xml:space="preserve">
          <source>For example, utf8 can be used for code points that don't exist in Unicode, like 9999999, but if you encode that to UTF-8, you get a substitution character (by default; see &lt;a href=&quot;encode#Handling-Malformed-Data&quot;&gt;Handling Malformed Data in Encode&lt;/a&gt; for more ways of dealing with this.)</source>
          <target state="translated">Например, utf8 можно использовать для кодовых точек, которые не существуют в Unicode, например 9999999, но если вы закодируете это в UTF-8, вы получите символ подстановки (по умолчанию; см. &lt;a href=&quot;encode#Handling-Malformed-Data&quot;&gt;Обработка искаженных данных в кодировании&lt;/a&gt; для получения дополнительных способов имея дело с этим.)</target>
        </trans-unit>
        <trans-unit id="d4bde612bc298204724714a89e628fae1a0918cc" translate="yes" xml:space="preserve">
          <source>For example, version 1.04 of Foo::Bar becomes Foo-Bar-1.04.</source>
          <target state="translated">Например,версия 1.04 Foo::Bar становится Foo-Bar-1.04.</target>
        </trans-unit>
        <trans-unit id="266d34ca9cde516548f250156e2acb53b624a8d2" translate="yes" xml:space="preserve">
          <source>For example, we could create an &lt;code&gt;File::MP3&lt;/code&gt; class which &lt;b&gt;inherits&lt;/b&gt; from &lt;code&gt;File&lt;/code&gt; . An &lt;code&gt;File::MP3&lt;/code&gt;&lt;b&gt;is-a&lt;/b&gt;</source>
          <target state="translated">Например, мы могли бы создать класс &lt;code&gt;File::MP3&lt;/code&gt; &lt;b&gt;унаследованный&lt;/b&gt; от &lt;code&gt;File&lt;/code&gt; . &lt;code&gt;File::MP3&lt;/code&gt; &lt;b&gt;является разновидностью&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="65f8c076e86f7baf2e3727bbe95178fdd7a2c0fd" translate="yes" xml:space="preserve">
          <source>For example, when examining the file</source>
          <target state="translated">Например,при просмотре файла</target>
        </trans-unit>
        <trans-unit id="cb3609c45bff9184744275676cb2ee1d5fe3a104" translate="yes" xml:space="preserve">
          <source>For example, when looking for</source>
          <target state="translated">Например,при поиске</target>
        </trans-unit>
        <trans-unit id="adf9a9b9f8a7a1cec63a21f932af18f70eee8f7f" translate="yes" xml:space="preserve">
          <source>For example, when processing a file like</source>
          <target state="translated">Например,при обработке файла как</target>
        </trans-unit>
        <trans-unit id="cba8aca8bb23f147ba6dc9dc1178ec821ae0173e" translate="yes" xml:space="preserve">
          <source>For example, when you have a NFD/NFKD string, you can get its NFC/NFKC string, by saying</source>
          <target state="translated">Например,когда у вас есть NFD/NFKD строка,вы можете получить ее NFC/NFKC строку,сказав</target>
        </trans-unit>
        <trans-unit id="91c7f19bed899b4adde0ad47a00ae7fce66a506f" translate="yes" xml:space="preserve">
          <source>For example, when you have a list of NFD/NFKD strings, you can get the concatenated NFD/NFKD string from them, by saying</source>
          <target state="translated">Например,когда у вас есть список NFD/NFKD строк,вы можете получить из них конкатенированную NFD/NFKD строку,сказав</target>
        </trans-unit>
        <trans-unit id="3034cdf7d48aa118a30ad1afd4515c72ccfcc722" translate="yes" xml:space="preserve">
          <source>For example, whenever you call Perl's built-in &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; function from the package &lt;code&gt;DB&lt;/code&gt; , the arguments that the corresponding stack frame was called with are copied to the &lt;code&gt;@DB::args&lt;/code&gt; array. These mechanisms are enabled by calling Perl with the &lt;b&gt;-d&lt;/b&gt; switch. Specifically, the following additional features are enabled (cf. &lt;a href=&quot;perlvar#%24%5eP&quot;&gt;$^P in perlvar&lt;/a&gt;):</source>
          <target state="translated">Например, всякий раз , когда вы вызываете Perl встроенные в &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; функции из пакета &lt;code&gt;DB&lt;/code&gt; , аргументы , что соответствующий кадр стека был вызван с копируются в &lt;code&gt;@DB::args&lt;/code&gt; массива. Эти механизмы включаются вызовом Perl с ключом &lt;b&gt;-d&lt;/b&gt; . В частности, включены следующие дополнительные функции (см. &lt;a href=&quot;perlvar#%24%5eP&quot;&gt;$ ^ P в perlvar&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="496a45f3d9650508d730c766abbe2dc2efdff27d" translate="yes" xml:space="preserve">
          <source>For example, with AnyEvent:</source>
          <target state="translated">Например,с AnyEvent:</target>
        </trans-unit>
        <trans-unit id="50ca852a66a066546e548044450d4b46b8bedbcc" translate="yes" xml:space="preserve">
          <source>For example, you can use this to make sure your filter program managed to finish its output without filling up the disk:</source>
          <target state="translated">Например,вы можете использовать это для того,чтобы убедиться,что ваша программа-фильтр сумела закончить вывод,не заполняя диск:</target>
        </trans-unit>
        <trans-unit id="2f78ed184c7f600686b51e6745d5640d97f8a709" translate="yes" xml:space="preserve">
          <source>For example, you can write code in EUC-JP as follows:</source>
          <target state="translated">Например,вы можете написать код в EUC-JP следующим образом:</target>
        </trans-unit>
        <trans-unit id="564fb0ce50134466df15da997cc5a96ad7e5b1e1" translate="yes" xml:space="preserve">
          <source>For example, you don't have to store individual bits in an array (which would mean that you're wasting a lot of space). To convert an array of bits to a string, use &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec()&lt;/a&gt;&lt;/code&gt; to set the right bits. This sets &lt;code&gt;$vec&lt;/code&gt; to have bit N set only if &lt;code&gt;$ints[N]&lt;/code&gt; was set:</source>
          <target state="translated">Например, вам не нужно хранить отдельные биты в массиве (что будет означать, что вы тратите много места). Чтобы преобразовать массив бит в строку, используйте &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec()&lt;/a&gt;&lt;/code&gt; для установки правильных битов. Это устанавливает для &lt;code&gt;$vec&lt;/code&gt; бит N, только если был установлен &lt;code&gt;$ints[N]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e4a9a1afba08c0e0323d4da1c781504ee13c4f37" translate="yes" xml:space="preserve">
          <source>For example...</source>
          <target state="translated">Например...</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="6547b0cdb06529c1189b765285dbdd443f754cdc" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;^(?&amp;gt;a*)ab&lt;/code&gt; will never match, since &lt;code&gt;(?&amp;gt;a*)&lt;/code&gt; (anchored at the beginning of string, as above) will match</source>
          <target state="translated">Например: &lt;code&gt;^(?&amp;gt;a*)ab&lt;/code&gt; никогда не будет соответствовать, так как &lt;code&gt;(?&amp;gt;a*)&lt;/code&gt; (привязанный в начале строки, как указано выше) будет соответствовать</target>
        </trans-unit>
        <trans-unit id="163b6b4e5b46ae5e8f49caca2490012167a4aad8" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;perldoc -f &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; .</source>
          <target state="translated">Например: &lt;code&gt;perldoc -f &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccb8c8d525664be9a2c42a89c1ccb7db9f4d46fb" translate="yes" xml:space="preserve">
          <source>For example: consider the following paragraphs:</source>
          <target state="translated">Например:рассмотрим следующие пункты:</target>
        </trans-unit>
        <trans-unit id="1312a2f41c8de401877c05e89632223e0e5cb8c4" translate="yes" xml:space="preserve">
          <source>For examples of MRO implementations, see &lt;code&gt;S_mro_get_linear_isa_c3()&lt;/code&gt; and the &lt;code&gt;BOOT:&lt;/code&gt; section of</source>
          <target state="translated">Примеры реализаций MRO см &lt;code&gt;S_mro_get_linear_isa_c3()&lt;/code&gt; и &lt;code&gt;BOOT:&lt;/code&gt; раздел</target>
        </trans-unit>
        <trans-unit id="0d9e192f1a62478459e4e0a2eb7cdee0674f974c" translate="yes" xml:space="preserve">
          <source>For examples on how to use &lt;code&gt;ExtUtils::Embed&lt;/code&gt; for building C/C++ applications with embedded perl, see &lt;a href=&quot;../perlembed&quot;&gt;perlembed&lt;/a&gt;.</source>
          <target state="translated">Примеры использования &lt;code&gt;ExtUtils::Embed&lt;/code&gt; для создания приложений C / C ++ со встроенным perl см. В &lt;a href=&quot;../perlembed&quot;&gt;perlembed&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8df1fb453c312718721149b4f60d025d43cdae6c" translate="yes" xml:space="preserve">
          <source>For floating-point conversions (&lt;code&gt;e f g E F G&lt;/code&gt; ), numbers are usually assumed to be the default floating-point size on your platform (double or long double), but you can force &quot;long double&quot; with &lt;code&gt;&lt;a href=&quot;functions/q&quot;&gt;q&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt; , or &lt;code&gt;ll&lt;/code&gt; if your platform supports them. You can find out whether your Perl supports long doubles via &lt;a href=&quot;config&quot;&gt;Config&lt;/a&gt;:</source>
          <target state="translated">Для преобразований с плавающей запятой ( &lt;code&gt;e f g E F G&lt;/code&gt; ) обычно предполагается, что числа являются размером с плавающей запятой по умолчанию на вашей платформе (double или long double), но вы можете принудительно использовать &quot;long double&quot; с помощью &lt;code&gt;&lt;a href=&quot;functions/q&quot;&gt;q&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;L&lt;/code&gt; или &lt;code&gt;ll&lt;/code&gt; , если ваша платформа поддерживает их. Вы можете узнать, поддерживает ли ваш Perl длинные двойники, через &lt;a href=&quot;config&quot;&gt;Config&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="fe9c280207fb4b3b605495f5af12f4167164cdba" translate="yes" xml:space="preserve">
          <source>For floating-point conversions (&lt;code&gt;e f g E F G&lt;/code&gt; ), numbers are usually assumed to be the default floating-point size on your platform (double or long double), but you can force &quot;long double&quot; with &lt;code&gt;&lt;a href=&quot;q&quot;&gt;q&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt; , or &lt;code&gt;ll&lt;/code&gt; if your platform supports them. You can find out whether your Perl supports long doubles via &lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt;:</source>
          <target state="translated">Для преобразований с плавающей запятой ( &lt;code&gt;e f g E F G&lt;/code&gt; ) обычно предполагается, что числа являются размером с плавающей запятой по умолчанию на вашей платформе (double или long double), но вы можете принудительно использовать &quot;long double&quot; с помощью &lt;code&gt;&lt;a href=&quot;q&quot;&gt;q&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;L&lt;/code&gt; или &lt;code&gt;ll&lt;/code&gt; , если ваша платформа поддерживает их. Вы можете узнать, поддерживает ли ваш Perl длинные двойники, через &lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a2a4ecd0b9d06146725ffb188a087bc4525a300e" translate="yes" xml:space="preserve">
          <source>For full generality, use the &lt;a href=&quot;perlapi#DO_UTF8&quot;&gt;DO_UTF8 in perlapi&lt;/a&gt; macro to see if the string in an SV is to be</source>
          <target state="translated">Для полной общности используйте &lt;a href=&quot;perlapi#DO_UTF8&quot;&gt;DO_UTF8 в макросе perlapi,&lt;/a&gt; чтобы увидеть, должна ли строка в SV</target>
        </trans-unit>
        <trans-unit id="a42ce7d9b2566dc0c41503ddc1469a4bc77d0e4c" translate="yes" xml:space="preserve">
          <source>For function arguments declared as &lt;code&gt;const&lt;/code&gt; , omit the const attribute in the generated XS code.</source>
          <target state="translated">Для аргументов функции, объявленных как &lt;code&gt;const&lt;/code&gt; , опустите атрибут const в сгенерированном коде XS.</target>
        </trans-unit>
        <trans-unit id="919681d57047d475516f4557861f4178d615833e" translate="yes" xml:space="preserve">
          <source>For functions that can be used in either a scalar or list context, nonabortive failure is generally indicated in scalar context by returning the undefined value, and in list context by returning the empty list.</source>
          <target state="translated">Для функций,которые могут использоваться как в скалярном контексте,так и в контексте списка,нерабочий сбой обычно указывается в скалярном контексте путем возврата неопределенного значения,а в контексте списка-путем возврата пустого списка.</target>
        </trans-unit>
        <trans-unit id="d05f6d928eacb78e02e398b53b981e094d0e39ce" translate="yes" xml:space="preserve">
          <source>For further details on attribute lists and their manipulation, see &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt; and &lt;a href=&quot;attribute/handlers&quot;&gt;Attribute::Handlers&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительных сведений о списках атрибутов и манипулировании ими см. &lt;a href=&quot;attributes&quot;&gt;Атрибуты&lt;/a&gt; и &lt;a href=&quot;attribute/handlers&quot;&gt;Attribute :: Handlers&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="50dbbde71e3c0e2cc7647eee17d89f78c487f1da" translate="yes" xml:space="preserve">
          <source>For further details see &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt;, &lt;a href=&quot;#tied-VARIABLE&quot;&gt;tied VARIABLE&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации см. &lt;a href=&quot;../perltie&quot;&gt;Perltie&lt;/a&gt; , &lt;a href=&quot;#tied-VARIABLE&quot;&gt;связанный VARIABLE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc5472ebf03889c66f3f1d848108e2b6c25b85d0" translate="yes" xml:space="preserve">
          <source>For further details see &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt;, &lt;a href=&quot;#tied-VARIABLE&quot;&gt;tied VARIABLE&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации см. &lt;a href=&quot;perltie&quot;&gt;Perltie&lt;/a&gt; , &lt;a href=&quot;#tied-VARIABLE&quot;&gt;связанный VARIABLE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="48c784a1d33771e0a06fd5b4b963ce0c5344b49a" translate="yes" xml:space="preserve">
          <source>For further information about the categories, consult</source>
          <target state="translated">Для получения дополнительной информации о категориях,ознакомьтесь с</target>
        </trans-unit>
        <trans-unit id="d3848a5517719cc9d86dc98e4a87784d1b62f6be" translate="yes" xml:space="preserve">
          <source>For further information on how to conduct a proper installation consult the INSTALL file that comes with the perl source and the README file for your platform.</source>
          <target state="translated">Для получения дополнительной информации о том,как провести правильную установку,обратитесь к файлу INSTALL,который поставляется с исходным кодом perl,и файлу README для вашей платформы.</target>
        </trans-unit>
        <trans-unit id="28c80b9972cc66010ab54cedb561b534cc47e943" translate="yes" xml:space="preserve">
          <source>For further information, please see &lt;a href=&quot;spec/unix&quot;&gt;File::Spec::Unix&lt;/a&gt;, &lt;a href=&quot;spec/mac&quot;&gt;File::Spec::Mac&lt;/a&gt;, &lt;a href=&quot;spec/os2&quot;&gt;File::Spec::OS2&lt;/a&gt;, &lt;a href=&quot;spec/win32&quot;&gt;File::Spec::Win32&lt;/a&gt;, or &lt;a href=&quot;spec/vms&quot;&gt;File::Spec::VMS&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации см. &lt;a href=&quot;spec/unix&quot;&gt;File :: Spec :: Unix&lt;/a&gt; , &lt;a href=&quot;spec/mac&quot;&gt;File :: Spec :: Mac&lt;/a&gt; , &lt;a href=&quot;spec/os2&quot;&gt;File :: Spec :: OS2&lt;/a&gt; , &lt;a href=&quot;spec/win32&quot;&gt;File :: Spec :: Win32&lt;/a&gt; или &lt;a href=&quot;spec/vms&quot;&gt;File :: Spec :: VMS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5edf28281d94a2b5960cec422d6d02a62443a7d6" translate="yes" xml:space="preserve">
          <source>For general suggestions, try requesting &lt;code&gt;CPU&lt;/code&gt; or &lt;code&gt;memory&lt;/code&gt; .</source>
          <target state="translated">Для общих предложений попробуйте запросить &lt;code&gt;CPU&lt;/code&gt; или &lt;code&gt;memory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d357e5de00d555e2358554ff76cd929d52fe2111" translate="yes" xml:space="preserve">
          <source>For globbing (see &lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;, &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;) (obsolete? Perl uses builtin globbing nowadays...).</source>
          <target state="translated">Для подстановки (см. &lt;a href=&quot;functions/glob&quot;&gt;Glob&lt;/a&gt; , &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;Операторы ввода-вывода в perlop&lt;/a&gt; ) (устарело? В настоящее время Perl использует встроенную подстановку ...).</target>
        </trans-unit>
        <trans-unit id="58503f8e65271fa8fe04c22bfeefeb43b3d52ae2" translate="yes" xml:space="preserve">
          <source>For greater flexibility use &lt;code&gt;constant_types()&lt;/code&gt; , &lt;code&gt;C_constant&lt;/code&gt; and &lt;code&gt;XS_constant&lt;/code&gt; , with which &lt;code&gt;WriteConstants&lt;/code&gt; is implemented.</source>
          <target state="translated">Для большей гибкости используйте &lt;code&gt;constant_types()&lt;/code&gt; , &lt;code&gt;C_constant&lt;/code&gt; и &lt;code&gt;XS_constant&lt;/code&gt; , с которыми реализовано &lt;code&gt;WriteConstants&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0de33270f54dfe208dcaa472e2a23a92f8da154b" translate="yes" xml:space="preserve">
          <source>For hashes there is a specialized hook that gives control over hash keys (but not values). This hook calls &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; 'get' magic if the &quot;set&quot; function in the &lt;code&gt;ufuncs&lt;/code&gt; structure is NULL. The hook is activated whenever the hash is accessed with a key specified as an &lt;code&gt;SV&lt;/code&gt; through the functions &lt;code&gt;hv_store_ent&lt;/code&gt; , &lt;code&gt;hv_fetch_ent&lt;/code&gt; , &lt;code&gt;hv_delete_ent&lt;/code&gt; , and &lt;code&gt;hv_exists_ent&lt;/code&gt; . Accessing the key as a string through the functions without the &lt;code&gt;..._ent&lt;/code&gt; suffix circumvents the hook. See &lt;a href=&quot;hash/util/fieldhash#GUTS&quot;&gt;GUTS in Hash::Util::FieldHash&lt;/a&gt; for a detailed description.</source>
          <target state="translated">Для хешей есть специальный перехватчик, который дает контроль над хеш-ключами (но не значениями). Этот хук вызывает &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; 'get', если функция &quot;set&quot; в структуре &lt;code&gt;ufuncs&lt;/code&gt; имеет значение NULL. Ловушка активируется всякий раз, когда к хешу осуществляется доступ с ключом, указанным как &lt;code&gt;SV&lt;/code&gt; , через функции &lt;code&gt;hv_store_ent&lt;/code&gt; , &lt;code&gt;hv_fetch_ent&lt;/code&gt; , &lt;code&gt;hv_delete_ent&lt;/code&gt; и &lt;code&gt;hv_exists_ent&lt;/code&gt; . Доступ к ключу в виде строки через функции без суффикса &lt;code&gt;..._ent&lt;/code&gt; позволяет обойти ловушку. См. Подробное &lt;a href=&quot;hash/util/fieldhash#GUTS&quot;&gt;описание в GUTS в Hash :: Util :: FieldHash&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8be86894a1183cb1339fe47f94cdbb010d7d4c9e" translate="yes" xml:space="preserve">
          <source>For historical reasons, Exporter supplies a &lt;code&gt;require_version&lt;/code&gt; method that simply delegates to &lt;code&gt;VERSION&lt;/code&gt; . Originally, before &lt;code&gt;UNIVERSAL::VERSION&lt;/code&gt; existed, Exporter would call &lt;code&gt;require_version&lt;/code&gt; .</source>
          <target state="translated">По историческим причинам Exporter предоставляет метод &lt;code&gt;require_version&lt;/code&gt; , который просто делегирует &lt;code&gt;VERSION&lt;/code&gt; . Первоначально, до того, как существовала &lt;code&gt;UNIVERSAL::VERSION&lt;/code&gt; , Exporter должен вызывать &lt;code&gt;require_version&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="600f113a4040010b3033d7854bba8509d5ed27cc" translate="yes" xml:space="preserve">
          <source>For historical reasons, if &lt;code&gt;pat&lt;/code&gt; is null then the contents of &lt;code&gt;ERRSV&lt;/code&gt; (&lt;code&gt;$@&lt;/code&gt; ) will be used as an error message or object instead of building an error message from arguments. If you want to throw a non-string object, or build an error message in an SV yourself, it is preferable to use the &lt;a href=&quot;#croak_sv&quot;&gt;croak_sv&lt;/a&gt; function, which does not involve clobbering &lt;code&gt;ERRSV&lt;/code&gt; .</source>
          <target state="translated">По историческим причинам, если &lt;code&gt;pat&lt;/code&gt; имеет значение null, тогда содержимое &lt;code&gt;ERRSV&lt;/code&gt; ( &lt;code&gt;$@&lt;/code&gt; ) будет использоваться как сообщение об ошибке или объект вместо построения сообщения об ошибке из аргументов. Если вы хотите выбросить &lt;a href=&quot;#croak_sv&quot;&gt;нестроковый&lt;/a&gt; объект или самостоятельно создать сообщение об ошибке в SV, предпочтительно использовать функцию croak_sv , которая не включает &lt;code&gt;ERRSV&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b56608d17c68748711bf4ce7481c7c0f04ebd25a" translate="yes" xml:space="preserve">
          <source>For historical reasons, if you omit the list, &lt;code&gt;$_&lt;/code&gt; is used as the format; to use FILEHANDLE without a list, you must use a real filehandle like &lt;code&gt;FH&lt;/code&gt; , not an indirect one like &lt;code&gt;$fh&lt;/code&gt; . However, this will rarely do what you want; if $_ contains formatting codes, they will be replaced with the empty string and a warning will be emitted if warnings are enabled. Just use &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; if you want to print the contents of $_.</source>
          <target state="translated">По историческим причинам, если вы опускаете список, в качестве формата используется &lt;code&gt;$_&lt;/code&gt; ; чтобы использовать FILEHANDLE без списка, вы должны использовать настоящий дескриптор файла, такой как &lt;code&gt;FH&lt;/code&gt; , а не косвенный, например &lt;code&gt;$fh&lt;/code&gt; . Однако это редко дает то, что вам нужно; если $ _ содержит коды форматирования, они будут заменены пустой строкой, и будет выдано предупреждение, если предупреждения включены. Просто используйте &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , если хотите распечатать содержимое $ _.</target>
        </trans-unit>
        <trans-unit id="e79e19888efce3854a52e5d2a8daf4acff793786" translate="yes" xml:space="preserve">
          <source>For historical reasons, if you omit the list, &lt;code&gt;$_&lt;/code&gt; is used as the format; to use FILEHANDLE without a list, you must use a real filehandle like &lt;code&gt;FH&lt;/code&gt; , not an indirect one like &lt;code&gt;$fh&lt;/code&gt; . However, this will rarely do what you want; if $_ contains formatting codes, they will be replaced with the empty string and a warning will be emitted if warnings are enabled. Just use &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; if you want to print the contents of $_.</source>
          <target state="translated">По историческим причинам, если вы опускаете список, в качестве формата используется &lt;code&gt;$_&lt;/code&gt; ; чтобы использовать FILEHANDLE без списка, вы должны использовать настоящий дескриптор файла, такой как &lt;code&gt;FH&lt;/code&gt; , а не косвенный, например &lt;code&gt;$fh&lt;/code&gt; . Однако это редко дает то, что вам нужно; если $ _ содержит коды форматирования, они будут заменены пустой строкой, и будет выдано предупреждение, если предупреждения включены. Просто используйте &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , если хотите распечатать содержимое $ _.</target>
        </trans-unit>
        <trans-unit id="8685cc82ad46d01d9c5b4bb2267ef13097a60367" translate="yes" xml:space="preserve">
          <source>For historical reasons, some values work on almost every system supported by Perl: 0 means read-only, 1 means write-only, and 2 means read/write. We know that these values do</source>
          <target state="translated">По историческим причинам,некоторые значения работают почти на каждой системе,поддерживаемой Perl:0 означает только чтение,1-только запись и 2-чтение/запись.Мы знаем,что эти значения</target>
        </trans-unit>
        <trans-unit id="13de78042df7d486da0987893d3eef529f8f05a4" translate="yes" xml:space="preserve">
          <source>For historical reasons, the &lt;code&gt;=value&lt;/code&gt; is optional, but defaults to 1 only where it is safe to do so--that is, mostly for Boolean options. It is always better to assign a specific value using &lt;code&gt;=&lt;/code&gt; . The &lt;code&gt;option&lt;/code&gt; can be abbreviated, but for clarity probably should not be. Several options can be set together. See &lt;a href=&quot;#Configurable-Options&quot;&gt;Configurable Options&lt;/a&gt; for a list of these.</source>
          <target state="translated">По историческим причинам &lt;code&gt;=value&lt;/code&gt; является необязательным, но по умолчанию оно равно 1 только там, где это безопасно, то есть в основном для логических параметров. Всегда лучше назначать конкретное значение с помощью &lt;code&gt;=&lt;/code&gt; . &lt;code&gt;option&lt;/code&gt; может быть сокращен, но для ясности , вероятно , не должно быть. Можно установить несколько параметров одновременно. См. &lt;a href=&quot;#Configurable-Options&quot;&gt;Список настраиваемых параметров&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55b92ebb92494cfbe30e7229baf3e5d9062d8da3" translate="yes" xml:space="preserve">
          <source>For icmp, $ttl can be specified to set the TTL of the outgoing packet.</source>
          <target state="translated">Для icmp можно указать $ttl для установки TTL исходящего пакета.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
