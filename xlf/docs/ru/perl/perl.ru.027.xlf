<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="d95c8bef773580433166be7c2c32b85e8e849e6f" translate="yes" xml:space="preserve">
          <source>If a 2-digit code is entered, it is converted to 3 digits by prepending a 0.</source>
          <target state="translated">Если вводится 2-значный код,то он преобразуется в 3 цифры,предваряя 0.</target>
        </trans-unit>
        <trans-unit id="e64a7d7369be70b0218a1b95be79c2c2deb28c1d" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&amp;lt;&lt;i&gt;FILEHANDLE&lt;/i&gt;&amp;gt;&lt;/code&gt; is used in a context that is looking for a list, a list comprising all input lines is returned, one line per list element. It's easy to grow to a rather large data space this way, so use with care.</source>
          <target state="translated">Если &lt;code&gt;&amp;lt;&lt;i&gt;FILEHANDLE&lt;/i&gt;&amp;gt;&lt;/code&gt; используется в контексте, который ищет список, возвращается список, содержащий все входные строки, по одной строке на элемент списка. Таким образом легко вырасти до довольно большого пространства данных, поэтому используйте его с осторожностью.</target>
        </trans-unit>
        <trans-unit id="259cdf2dd383c0f84fbe2ca3b6aceeeeaeccb785" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; can find a &lt;code&gt;CxEVAL&lt;/code&gt; block on the context stack, then the stack is popped to that level and the return op in that block is assigned to &lt;code&gt;PL_restartop&lt;/code&gt; ; then a &lt;code&gt;JMPENV_JUMP(3)&lt;/code&gt; is performed. This normally passes control back to the guard. In the case of &lt;code&gt;perl_run&lt;/code&gt; and &lt;code&gt;call_sv&lt;/code&gt; , a non-null &lt;code&gt;PL_restartop&lt;/code&gt; triggers re-entry to the runops loop. The is the normal way that &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;croak&lt;/code&gt; is handled within an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; может найти блок &lt;code&gt;CxEVAL&lt;/code&gt; в стеке контекста, тогда стек выталкивается на этот уровень, и &lt;code&gt;PL_restartop&lt;/code&gt; возврата в этом блоке назначается PL_restartop ; затем выполняется &lt;code&gt;JMPENV_JUMP(3)&lt;/code&gt; . Обычно это возвращает управление охраннику. В случае &lt;code&gt;perl_run&lt;/code&gt; и &lt;code&gt;call_sv&lt;/code&gt; ненулевой &lt;code&gt;PL_restartop&lt;/code&gt; запускает повторный вход в цикл runops. Это нормальный способ обработки &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;croak&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e842b426c14ec5c17e64ac341313bcce514b5ce" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; form that includes &lt;code&gt;LC_CTYPE&lt;/code&gt; is in effect (see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;), the case map used by &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , and &lt;code&gt;\U&lt;/code&gt; is taken from the current locale. If Unicode (for example, &lt;code&gt;\N{}&lt;/code&gt; or code points of 0x100 or beyond) is being used, the case map used by &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , and &lt;code&gt;\U&lt;/code&gt; is as defined by Unicode. That means that case-mapping a single character can sometimes produce a sequence of several characters. Under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , &lt;code&gt;\F&lt;/code&gt; produces the same results as &lt;code&gt;\L&lt;/code&gt; for all locales but a UTF-8 one, where it instead uses the Unicode definition.</source>
          <target state="translated">Если действует форма &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , включающая &lt;code&gt;LC_CTYPE&lt;/code&gt; (см. &lt;a href=&quot;perllocale&quot;&gt;Perllocale&lt;/a&gt; ), то карта регистра, используемая &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; и &lt;code&gt;\U&lt;/code&gt; , берется из текущей локали. Если используется Юникод (например, &lt;code&gt;\N{}&lt;/code&gt; или кодовые точки 0x100 или выше), то карта регистра, используемая &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; и &lt;code&gt;\U&lt;/code&gt; определяется Unicode. Это означает, что преобразование регистра одного символа может иногда создавать последовательность из нескольких символов. При &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , &lt;code&gt;\F&lt;/code&gt; производит те же результаты, &lt;code&gt;\L&lt;/code&gt; для всех языков, кроме UTF-8, где вместо этого используется определение Unicode.</target>
        </trans-unit>
        <trans-unit id="549e5fcf45cf7944f8141812970bb7a27ad11345" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Net::POP3&lt;/code&gt; object goes out of scope before &lt;code&gt;quit&lt;/code&gt; method is called then the &lt;code&gt;&lt;a href=&quot;../functions/reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt; method will called before the connection is closed. This means that any messages marked to be deleted will not be.</source>
          <target state="translated">Если объект &lt;code&gt;Net::POP3&lt;/code&gt; выходит за пределы области действия до &lt;code&gt;quit&lt;/code&gt; метода quit, метод &lt;code&gt;&lt;a href=&quot;../functions/reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt; будет вызван до закрытия соединения. Это означает, что никаких сообщений, отмеченных для удаления, не будет.</target>
        </trans-unit>
        <trans-unit id="043d74f31a25532198b1527d3ae5c4b1da9715ef" translate="yes" xml:space="preserve">
          <source>If a CODE reference is not used, a</source>
          <target state="translated">Если ссылка на КОД не используется,a</target>
        </trans-unit>
        <trans-unit id="e12066458359083bdcf249636aa07df8a14816c7" translate="yes" xml:space="preserve">
          <source>If a CODE reference is used then a</source>
          <target state="translated">Если используется ссылка на CODE,то</target>
        </trans-unit>
        <trans-unit id="f9ad0abaf0eff45a492a44f419b412cf87f4dd03" translate="yes" xml:space="preserve">
          <source>If a FILEHANDLE is supplied, it must be writable and opened in append mode (i.e., use &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, '&amp;gt;&amp;gt;filename')&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen(FH,...,O_APPEND|O_RDWR)&lt;/a&gt;&lt;/code&gt;. If a filename is supplied, it should not be held open elsewhere. (Win32)</source>
          <target state="translated">Если предоставляется FILEHANDLE, он должен быть доступен для записи и открыт в режиме добавления (т. &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen(FH,...,O_APPEND|O_RDWR)&lt;/a&gt;&lt;/code&gt; Используйте &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, '&amp;gt;&amp;gt;filename')&lt;/code&gt; или sysopen (FH, ..., O_APPEND | O_RDWR) . Если указано имя файла, оно не должны храниться где-либо еще. (Win32)</target>
        </trans-unit>
        <trans-unit id="3af3f41934dd0fe8f979cc12d4f4c701b5fb0dcf" translate="yes" xml:space="preserve">
          <source>If a Pod processor sees any command other than the ones listed above (like &quot;=head&quot;, or &quot;=haed1&quot;, or &quot;=stuff&quot;, or &quot;=cuttlefish&quot;, or &quot;=w123&quot;), that processor must by default treat this as an error. It must not process the paragraph beginning with that command, must by default warn of this as an error, and may abort the parse. A Pod parser may allow a way for particular applications to add to the above list of known commands, and to stipulate, for each additional command, whether formatting codes should be processed.</source>
          <target state="translated">Если процессор Pod видит любую команду,кроме перечисленных выше (например,&quot;=head&quot;,или &quot;=haed1&quot;,или &quot;=stuff&quot;,или &quot;=cuttlefish&quot;,или &quot;=w123&quot;),то этот процессор должен по умолчанию рассматривать это как ошибку.Он не должен обрабатывать абзац,начинающийся с этой команды,должен по умолчанию предупреждать об этом как об ошибке и может прервать анализ.Парсер Pod может позволять конкретным приложениям добавлять к вышеуказанному списку известные команды,а также указывать для каждой дополнительной команды,следует ли обрабатывать коды форматирования.</target>
        </trans-unit>
        <trans-unit id="84d7b60c1fec814496b3c4bc1816a8d5d03c5699" translate="yes" xml:space="preserve">
          <source>If a Pod processor sees any formatting code other than the ones listed above (as in &quot;N&amp;lt;...&amp;gt;&quot;, or &quot;Q&amp;lt;...&amp;gt;&quot;, etc.), that processor must by default treat this as an error. A Pod parser may allow a way for particular applications to add to the above list of known formatting codes; a Pod parser might even allow a way to stipulate, for each additional command, whether it requires some form of special processing, as L&amp;lt;...&amp;gt; does.</source>
          <target state="translated">Если процессор Pod видит любой код форматирования, отличный от перечисленных выше (например, &amp;laquo;N &amp;lt;...&amp;gt;&amp;raquo; или &amp;laquo;Q &amp;lt;...&amp;gt;&amp;raquo; и т. Д.), Этот процессор должен по умолчанию рассматривать это как ошибку. . Парсер Pod может позволить конкретным приложениям добавлять к приведенному выше списку известных кодов форматирования; парсер Pod может даже позволить способ оговорить для каждой дополнительной команды, требует ли она какой-либо специальной обработки, как это делает L &amp;lt;...&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="a69d2c6e5370a359253a714b367c144cea0b32a3" translate="yes" xml:space="preserve">
          <source>If a SKIP directive is included with the plan, this method will return it.</source>
          <target state="translated">Если в план включена директива SKIP,то этот метод вернет ее.</target>
        </trans-unit>
        <trans-unit id="fc36fbb42452cd08e5fbc977b40571fcb5ba6163" translate="yes" xml:space="preserve">
          <source>If a SKIP directive was included with the plan, this method will return the explanation, if any.</source>
          <target state="translated">Если в план была включена директива SKIP,то этот метод вернет объяснение,если оно есть.</target>
        </trans-unit>
        <trans-unit id="21c8d4e7e9fdf0b61712f2ee7b9d5069189ec21c" translate="yes" xml:space="preserve">
          <source>If a TODO test does succeed, then the feature in question shouldn't be on the TODO list, now should it?</source>
          <target state="translated">Если тест TODO пройдет успешно,то данная функция не должна быть в списке TODO,не так ли?</target>
        </trans-unit>
        <trans-unit id="5bc13fa8b4104f174148a214dadae282567de13a" translate="yes" xml:space="preserve">
          <source>If a character that isn't an octal digit is encountered, a warning is raised, and the value is based on the octal digits before it, discarding it and all following characters up to the closing brace. It is a fatal error if there are no octal digits at all.</source>
          <target state="translated">Если встречается символ,не являющийся восьмеричной цифрой,то повышается предупреждение,и значение основано на восьмеричной цифре перед ним,отбрасывая ее и все последующие символы до замыкающей скобки.Это фатальная ошибка,если вообще не встречается восьмеричная цифра.</target>
        </trans-unit>
        <trans-unit id="22ce7778730981e7a416c117aaec163fa0497dba" translate="yes" xml:space="preserve">
          <source>If a check for non-empty is what you wanted then just put it in boolean context (see &lt;a href=&quot;perldata#Scalar-values&quot;&gt;Scalar values in perldata&lt;/a&gt;):</source>
          <target state="translated">Если вам нужна проверка на &lt;a href=&quot;perldata#Scalar-values&quot;&gt;непустость,&lt;/a&gt; просто поместите ее в логический контекст (см. Скалярные значения в perldata ):</target>
        </trans-unit>
        <trans-unit id="7bbe66a04a030c6e054fb0dfd4a30c2a7ed6df30" translate="yes" xml:space="preserve">
          <source>If a child calls &quot;skip_all&quot; in the plan, a &lt;code&gt;Test::Builder::Exception&lt;/code&gt; is thrown. Trap this error, call &lt;code&gt;finalize()&lt;/code&gt; and don't run any more tests on the child.</source>
          <target state="translated">Если дочерний элемент в плане вызывает &amp;laquo;skip_all&amp;raquo;, генерируется &lt;code&gt;Test::Builder::Exception&lt;/code&gt; . Перехватите эту ошибку, вызовите &lt;code&gt;finalize()&lt;/code&gt; и больше не запускайте тесты для ребенка.</target>
        </trans-unit>
        <trans-unit id="9e2b6a0e0e45f39177eb31d01e15e452bd57cce8" translate="yes" xml:space="preserve">
          <source>If a comparison subroutine (comp) is defined, it must return less than zero, zero, or greater than zero, if the first comparand is less than, equal, or greater than the second comparand.</source>
          <target state="translated">Если определена подпрограмма сравнения (comp),то она должна возвращать меньше нуля,нуля или больше нуля,если первый компаранд меньше,равен или больше второго компарда.</target>
        </trans-unit>
        <trans-unit id="6bcefbb01c642f7f0fc9b06ad8c1d9b86690b30e" translate="yes" xml:space="preserve">
          <source>If a config variable name ends with &lt;code&gt;list&lt;/code&gt; , it is a list. &lt;code&gt;o conf
KEY &lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; removes the first element of the list, &lt;code&gt;o conf KEY &lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; removes the last element of the list. &lt;code&gt;o conf KEYS &lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt; LIST&lt;/code&gt; prepends a list of values to the list, &lt;code&gt;o conf KEYS &lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt; LIST&lt;/code&gt; appends a list of valued to the list.</source>
          <target state="translated">Если имя переменной конфигурации заканчивается на &lt;code&gt;list&lt;/code&gt; , это список. &lt;code&gt;o conf KEY &lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; удаляет первый элемент списка, &lt;code&gt;o conf KEY &lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; удаляет последний элемент списка. &lt;code&gt;o conf KEYS &lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt; LIST&lt;/code&gt; добавляет список значений к списку, &lt;code&gt;o conf KEYS &lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt; LIST&lt;/code&gt; добавляет список значений к списку.</target>
        </trans-unit>
        <trans-unit id="5109117db036bd8645f50a5e04d368af63084ec5" translate="yes" xml:space="preserve">
          <source>If a container object, such as a hash or array, is locked, all the elements of that container are not locked. For example, if a thread does a &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt; @a&lt;/code&gt; , any other thread doing a &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock($a[12])&lt;/a&gt;&lt;/code&gt; won't block.</source>
          <target state="translated">Если объект-контейнер, такой как хэш или массив, заблокирован, все элементы этого контейнера не блокируются. Например, если поток выполняет &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt; @a&lt;/code&gt; , любой другой поток, выполняющий &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock($a[12])&lt;/a&gt;&lt;/code&gt; , не будет блокироваться.</target>
        </trans-unit>
        <trans-unit id="dca4e72f15d2d8185a5bffef1f8b63be490eec41" translate="yes" xml:space="preserve">
          <source>If a default timeout ($def_timeout) in seconds is provided, it is used when a timeout is not given to the ping() method (below). The timeout must be greater than 0 and the default, if not specified, is 5 seconds.</source>
          <target state="translated">Если предусмотрен таймаут по умолчанию ($def_timeout)в секундах,то он используется,когда таймаут не предоставляется методу ping()(см.ниже).Таймаут должен быть больше 0 и по умолчанию,если не указан,равен 5 секундам.</target>
        </trans-unit>
        <trans-unit id="9cb3d5a547282377cc66b4c5457632db46bb8ed9" translate="yes" xml:space="preserve">
          <source>If a dereference operator is overloaded then it must return a</source>
          <target state="translated">Если оператор перенаправления перегружен,то он должен вернуть a</target>
        </trans-unit>
        <trans-unit id="fe98464b03f834d1a964476866ec0454738cfc5e" translate="yes" xml:space="preserve">
          <source>If a directory name is specified, Perl will switch to that directory before running the program. The &lt;b&gt;-x&lt;/b&gt; switch controls only the disposal of leading garbage. The program must be terminated with &lt;code&gt;__END__&lt;/code&gt; if there is trailing garbage to be ignored; the program can process any or all of the trailing garbage via the &lt;code&gt;DATA&lt;/code&gt; filehandle if desired.</source>
          <target state="translated">Если указано имя каталога, Perl переключится в этот каталог перед запуском программы. &lt;b&gt;-X&lt;/b&gt; переключатель контролирует только удаление ведущих мусора. Программа должна быть завершена с помощью &lt;code&gt;__END__&lt;/code&gt; , если есть завершающий мусор, который следует игнорировать; при желании программа может обработать любой или весь завершающий мусор через дескриптор файла &lt;code&gt;DATA&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5aaf565f5088172c3b4f50e88e5260fa4d43f871" translate="yes" xml:space="preserve">
          <source>If a distribution defines a minimal required perl version, this is added to the output as an additional line of the form:</source>
          <target state="translated">Если дистрибутив определяет минимально необходимую версию perl,то это добавляется в выходной файл как дополнительная строка формы:</target>
        </trans-unit>
        <trans-unit id="42b6266ffbedee9d19b5a6a2dc00e2ab21c075e3" translate="yes" xml:space="preserve">
          <source>If a false value (but not &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;) is passed, &lt;code&gt;overrideHangul&lt;/code&gt; has no effect. &lt;code&gt;$Collator-&amp;gt;change(overrideHangul =&amp;gt; 0)&lt;/code&gt; resets the old one.</source>
          <target state="translated">Если передается ложное значение (но не &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ), &lt;code&gt;overrideHangul&lt;/code&gt; не имеет никакого эффекта. &lt;code&gt;$Collator-&amp;gt;change(overrideHangul =&amp;gt; 0)&lt;/code&gt; сбрасывает старый.</target>
        </trans-unit>
        <trans-unit id="41f3060c136c5cb39245327e845028b89a018338" translate="yes" xml:space="preserve">
          <source>If a false value (including &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;) is passed, &lt;code&gt;overrideCJK&lt;/code&gt; has no effect. &lt;code&gt;$Collator-&amp;gt;change(overrideCJK =&amp;gt; 0)&lt;/code&gt; resets the old one.</source>
          <target state="translated">Если передано ложное значение (включая &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ), &lt;code&gt;overrideCJK&lt;/code&gt; не действует. &lt;code&gt;$Collator-&amp;gt;change(overrideCJK =&amp;gt; 0)&lt;/code&gt; сбрасывает старый.</target>
        </trans-unit>
        <trans-unit id="4ce3e5ab6913747cb34ccc5fe411d22f75b39a20" translate="yes" xml:space="preserve">
          <source>If a false value (including &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;) is passed, &lt;code&gt;overrideOut&lt;/code&gt; has no effect. &lt;code&gt;$Collator-&amp;gt;change(overrideOut =&amp;gt; 0)&lt;/code&gt; resets the old one.</source>
          <target state="translated">Если передано ложное значение (включая &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ), &lt;code&gt;overrideOut&lt;/code&gt; не действует. &lt;code&gt;$Collator-&amp;gt;change(overrideOut =&amp;gt; 0)&lt;/code&gt; сбрасывает старый.</target>
        </trans-unit>
        <trans-unit id="14cf492ed81687842dddeeef058d5e33b14e6b8c" translate="yes" xml:space="preserve">
          <source>If a field width obtained through &lt;code&gt;*&lt;/code&gt; is negative, it has the same effect as the &lt;code&gt;-&lt;/code&gt; flag: left-justification.</source>
          <target state="translated">Если ширина поля, полученная с помощью &lt;code&gt;*&lt;/code&gt; , отрицательна, она имеет тот же эффект, что и флаг &lt;code&gt;-&lt;/code&gt; : выравнивание по левому краю.</target>
        </trans-unit>
        <trans-unit id="9605e9893d52ad305cb79e90d906d025024d5412" translate="yes" xml:space="preserve">
          <source>If a file named by an argument cannot be opened for some reason, Perl warns you about it, and moves on to the next file. Note that the lines are printed automatically. An error occurring during printing is treated as fatal. To suppress printing use the &lt;b&gt;-n&lt;/b&gt; switch. A &lt;b&gt;-p&lt;/b&gt; overrides a &lt;b&gt;-n&lt;/b&gt; switch.</source>
          <target state="translated">Если файл, названный аргументом, не может быть открыт по какой-либо причине, Perl предупреждает вас об этом и переходит к следующему файлу. Обратите внимание, что линии печатаются автоматически. Ошибка, возникающая во время печати, считается фатальной. Чтобы подавить печать, используйте переключатель &lt;b&gt;-n&lt;/b&gt; . &lt;b&gt;-P&lt;/b&gt; переопределяет &lt;b&gt;-n&lt;/b&gt; переключатель.</target>
        </trans-unit>
        <trans-unit id="7607c4673d0f39465175ed86077289b9bf56cef9" translate="yes" xml:space="preserve">
          <source>If a filter has been installed with this method, it will be invoked every time you read a key from a DBM database.</source>
          <target state="translated">Если фильтр был установлен этим методом,то он будет вызываться каждый раз,когда вы читаете ключ из базы данных DBM.</target>
        </trans-unit>
        <trans-unit id="ffcdc45cfdda9fabc4fc72ffad32b6bd83924c58" translate="yes" xml:space="preserve">
          <source>If a filter has been installed with this method, it will be invoked every time you read a value from a DBM database.</source>
          <target state="translated">Если фильтр был установлен этим методом,то он будет вызываться каждый раз,когда вы читаете значение из базы данных DBM.</target>
        </trans-unit>
        <trans-unit id="cd250eca2a3b32b9a72984e5551322c2a78954ba" translate="yes" xml:space="preserve">
          <source>If a filter has been installed with this method, it will be invoked every time you write a key to a DBM database.</source>
          <target state="translated">Если фильтр был установлен этим методом,то он будет вызываться каждый раз при записи ключа в базу данных DBM.</target>
        </trans-unit>
        <trans-unit id="6d4a7b6c0f00f48df8682a8b26e45e64646603ea" translate="yes" xml:space="preserve">
          <source>If a filter has been installed with this method, it will be invoked every time you write a value to a DBM database.</source>
          <target state="translated">Если фильтр был установлен этим методом,то он будет вызываться каждый раз,когда вы записываете значение в базу данных DBM.</target>
        </trans-unit>
        <trans-unit id="e3c644e7c4d09f78ea460ddc805cbed0f24eef71" translate="yes" xml:space="preserve">
          <source>If a fully qualified $class is given, its abbreviated version is checked first.</source>
          <target state="translated">Если дается полностью квалифицированный $класс,то сначала проверяется его сокращенная версия.</target>
        </trans-unit>
        <trans-unit id="61efacc190b96b684717f3100b2802427ca3f5f2" translate="yes" xml:space="preserve">
          <source>If a hyphen in a character class cannot syntactically be part of a range, for instance because it is the first or the last character of the character class, or if it immediately follows a range, the hyphen isn't special, and so is considered a character to be matched literally. If you want a hyphen in your set of characters to be matched and its position in the class is such that it could be considered part of a range, you must escape that hyphen with a backslash.</source>
          <target state="translated">Если дефис в классе символов не может синтаксически быть частью диапазона,например,потому что он является первым или последним символом класса символов,или если он непосредственно следует за диапазоном,то дефис не является специальным,и поэтому считается,что символ соответствует буквально.Если вы хотите,чтобы дефис в вашем наборе символов совпал и его положение в классе таково,что его можно было бы считать частью диапазона,вы должны избежать этого дефиса с обратным слешем.</target>
        </trans-unit>
        <trans-unit id="8e9b736d2bd9dc9660e81744f77377a13eb0a302" translate="yes" xml:space="preserve">
          <source>If a key appears more than once in the initializer list of a hash, the last occurrence wins:</source>
          <target state="translated">Если ключ появляется в списке инициализатора хэша несколько раз,то выигрывает последнее событие:</target>
        </trans-unit>
        <trans-unit id="e38101b895429346e058b0e8e435924731bb16b2" translate="yes" xml:space="preserve">
          <source>If a layer provides &lt;code&gt;Open()&lt;/code&gt; it should normally call the &lt;code&gt;Open()&lt;/code&gt; method of next layer down (if any) and then push itself on top if that succeeds. &lt;code&gt;PerlIOBase_open&lt;/code&gt; is provided to do exactly that, so in most cases you don't have to write your own &lt;code&gt;Open()&lt;/code&gt; method. If this method is not defined, other layers may have difficulty pushing themselves on top of it during open.</source>
          <target state="translated">Если уровень предоставляет &lt;code&gt;Open()&lt;/code&gt; он обычно должен вызвать метод &lt;code&gt;Open()&lt;/code&gt; следующего нижнего уровня (если есть), а затем подтолкнуть себя к вершине, если это удалось. &lt;code&gt;PerlIOBase_open&lt;/code&gt; предназначен именно для этого, поэтому в большинстве случаев вам не нужно писать собственный метод &lt;code&gt;Open()&lt;/code&gt; . Если этот метод не определен, другим слоям может быть трудно надавить на него во время открытия.</target>
        </trans-unit>
        <trans-unit id="73dbe9c1af884c682c784ff2164f939b559495d3" translate="yes" xml:space="preserve">
          <source>If a lexical variable is given an attribute, there is no symbol table to which it belongs, so the symbol table argument (&lt;code&gt;$_[1]&lt;/code&gt; ) is set to the string &lt;code&gt;'LEXICAL'&lt;/code&gt; in that case. Likewise, ascribing an attribute to an anonymous subroutine results in a symbol table argument of &lt;code&gt;'ANON'&lt;/code&gt; .</source>
          <target state="translated">Если лексической переменной присваивается атрибут, таблица символов, которой она принадлежит, отсутствует, поэтому в этом случае аргумент таблицы символов ( &lt;code&gt;$_[1]&lt;/code&gt; ) устанавливается &lt;code&gt;'LEXICAL'&lt;/code&gt; строке 'LEXICAL' . Аналогично, приписывание атрибута анонимной подпрограмме приводит к аргументу таблицы символов &lt;code&gt;'ANON'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="373e9d26b4e220dbf14e875851af78e4ef70cdec" translate="yes" xml:space="preserve">
          <source>If a line was available from the source stream, &lt;code&gt;filter_read()&lt;/code&gt; returns a status value greater than zero and appends the line to &lt;code&gt;$_&lt;/code&gt; . A status value of zero indicates end-of-file, less than zero means an error. The filter function itself is expected to return its status in the same way, and put the filtered line it wants written to the source stream in &lt;code&gt;$_&lt;/code&gt; . The use of &lt;code&gt;$_&lt;/code&gt; accounts for the brevity of most Perl source filters.</source>
          <target state="translated">Если строка была доступна из исходного потока, &lt;code&gt;filter_read()&lt;/code&gt; возвращает значение статуса больше нуля и добавляет строку к &lt;code&gt;$_&lt;/code&gt; . Нулевое значение состояния указывает на конец файла, значение меньше нуля означает ошибку. Ожидается, что сама функция фильтра вернет свой статус таким же образом и поместит отфильтрованную строку, которую она хочет записать, в исходный поток в &lt;code&gt;$_&lt;/code&gt; . Использование &lt;code&gt;$_&lt;/code&gt; объясняет краткость большинства исходных фильтров Perl.</target>
        </trans-unit>
        <trans-unit id="eb73e02f11dc05b75008088bd5b205cf808a5add" translate="yes" xml:space="preserve">
          <source>If a matching entry cannot be found, and a default entry exists, then a reference to the default entry is returned.</source>
          <target state="translated">Если подходящая запись не может быть найдена,а запись по умолчанию существует,возвращается ссылка на запись по умолчанию.</target>
        </trans-unit>
        <trans-unit id="c613dbc045a6d1ccd39d5e4d8985654cb6efdedb" translate="yes" xml:space="preserve">
          <source>If a message can be controlled by the &lt;code&gt;warnings&lt;/code&gt; pragma, its warning category is included with the classification letter in the description below. E.g. &lt;code&gt;(W closed)&lt;/code&gt; means a warning in the &lt;code&gt;closed&lt;/code&gt; category.</source>
          <target state="translated">Если сообщением можно управлять с помощью &lt;code&gt;warnings&lt;/code&gt; warnings, его категория предупреждения включается в классификационную букву в описании ниже. Например &lt;code&gt;(W closed)&lt;/code&gt; означает предупреждение в &lt;code&gt;closed&lt;/code&gt; категории.</target>
        </trans-unit>
        <trans-unit id="f00576e48e7083129f4536c4d9542b2af3efddb9" translate="yes" xml:space="preserve">
          <source>If a method for an operation is not found then Perl tries to autogenerate a substitute implementation from the operations that have been defined.</source>
          <target state="translated">Если метод для операции не найден,то Perl пытается автоматически сгенерировать замещающую реализацию из операций,которые были определены.</target>
        </trans-unit>
        <trans-unit id="0bdd74a3b17bde34780674e393224f07968f9f1d" translate="yes" xml:space="preserve">
          <source>If a module attempts to import any of these symbols the Exporter will give the module an opportunity to handle the situation before generating an error. The Exporter will call an export_fail method with a list of the failed symbols:</source>
          <target state="translated">Если модуль попытается импортировать любой из этих символов,то Экспортер предоставит модулю возможность разобраться с ситуацией перед тем,как сгенерировать ошибку.Экспортер вызовет метод export_fail со списком неудачных символов:</target>
        </trans-unit>
        <trans-unit id="46e9244ade28e8f11cc0bc5968d58da31945ce21" translate="yes" xml:space="preserve">
          <source>If a module does not build for some reason, look carefully for why it failed, and report problems to the module author. If it looks like the extension building support is at fault, report that with full details of how the build failed using the perlbug utility.</source>
          <target state="translated">Если модуль по каким-либо причинам не собирается,внимательно проверьте,почему он вышел из строя,и сообщите о проблемах автору модуля.Если выглядит так,будто поддержка сборки расширений находится в сборе,сообщите об этом с подробной информацией о том,как сборка завершилась неудачно,используя утилиту perlbug.</target>
        </trans-unit>
        <trans-unit id="094a8b4d892c0d307d87dac5429320ae267e0ba1" translate="yes" xml:space="preserve">
          <source>If a module implements XSUBs, you will need one of the supported C compilers. You must make sure you have set up the environment for the compiler for command-line compilation before running &lt;code&gt;perl Makefile.PL&lt;/code&gt; or any invocation of make.</source>
          <target state="translated">Если модуль реализует XSUB, вам понадобится один из поддерживаемых компиляторов C. Перед запуском &lt;code&gt;perl Makefile.PL&lt;/code&gt; или любым вызовом make необходимо убедиться, что вы настроили среду для компилятора для компиляции из командной строки .</target>
        </trans-unit>
        <trans-unit id="9711733a9e84337767e9b5acb7ff59757c774ea1" translate="yes" xml:space="preserve">
          <source>If a name does not already have a suitable prefix and/or suffix then the corresponding file will be searched for by trying combinations of prefix and suffix appropriate to the platform: &quot;$name.o&quot;, &quot;lib$name.*&quot; and &quot;$name&quot;.</source>
          <target state="translated">Если имя еще не имеет подходящего префикса и/или суффикса,то будет произведен поиск соответствующего файла с использованием комбинаций префикса и суффикса,соответствующих платформе:&quot;$name.o&quot;,&quot;lib$name.*&quot; и &quot;$name&quot;.</target>
        </trans-unit>
        <trans-unit id="71674c3e4540508bc53564e31d00df9a0af1f1d2" translate="yes" xml:space="preserve">
          <source>If a name resolve operation fails to provide a name, then this flag will cause getnameinfo() to indicate an error, rather than returning the numeric representation as a human-readable string.</source>
          <target state="translated">Если операция по разрешению имен не сможет предоставить имя,то этот флаг приведет к тому,что getnameinfo()укажет на ошибку,вместо того,чтобы возвращать числовое представление в виде человекочитаемой строки.</target>
        </trans-unit>
        <trans-unit id="31b368c0d757e116a5dfb072a97b4193c426b9b0" translate="yes" xml:space="preserve">
          <source>If a negative array index is used to read from an array, the index will be translated to a positive one internally by calling FETCHSIZE before being passed to FETCH. You may disable this feature by assigning a true value to the variable &lt;code&gt;$NEGATIVE_INDICES&lt;/code&gt; in the tied array class.</source>
          <target state="translated">Если для чтения из массива используется отрицательный индекс массива, индекс будет преобразован в положительный внутренне путем вызова FETCHSIZE перед передачей в FETCH. Вы можете отключить эту функцию, присвоив истинное значение переменной &lt;code&gt;$NEGATIVE_INDICES&lt;/code&gt; в классе связанного массива.</target>
        </trans-unit>
        <trans-unit id="77fd7f19527eab5261c210a54c173bb0abc87920" translate="yes" xml:space="preserve">
          <source>If a package uses overload, it carries a special flag. This flag is also set when new functions are defined or @ISA is modified. There will be a slight speed penalty on the very first operation thereafter that supports overloading, while the overload tables are updated. If there is no overloading present, the flag is turned off. Thus the only speed penalty thereafter is the checking of this flag.</source>
          <target state="translated">Если пакет использует перегрузку,он несет специальный флаг.Этот флаг также устанавливается,когда определяются новые функции или изменяется @ISA.После этого при первой же операции,поддерживающей перегрузку,при обновлении таблиц перегрузки будет небольшой штраф за превышение скорости.Если перегрузка отсутствует,флаг отключается.Таким образом,единственный штраф за превышение скорости после этого-проверка этого флага.</target>
        </trans-unit>
        <trans-unit id="eef6b1875e2dcae080c75ee35ffb78afc980a5f8" translate="yes" xml:space="preserve">
          <source>If a pattern does not contain a special backtracking verb that allows an argument, then &lt;code&gt;$REGERROR&lt;/code&gt; and &lt;code&gt;$REGMARK&lt;/code&gt; are not touched at all.</source>
          <target state="translated">Если в шаблоне нет специального глагола &lt;code&gt;$REGERROR&lt;/code&gt; возвратом, допускающего аргумент, то $ REGERROR и &lt;code&gt;$REGMARK&lt;/code&gt; вообще не затрагиваются.</target>
        </trans-unit>
        <trans-unit id="9f0b6253b5fcfd411b56a12da1005e8889d7cecd" translate="yes" xml:space="preserve">
          <source>If a piece of code is under the control of the &lt;code&gt;warnings&lt;/code&gt; pragma, both the &lt;code&gt;$^W&lt;/code&gt; variable and the &lt;b&gt;-w&lt;/b&gt; flag will be ignored for the scope of the lexical warning.</source>
          <target state="translated">Если фрагмент кода находится под управлением &lt;code&gt;warnings&lt;/code&gt; warnings, и переменная &lt;code&gt;$^W&lt;/code&gt; и флаг &lt;b&gt;-w&lt;/b&gt; будут проигнорированы для области лексического предупреждения.</target>
        </trans-unit>
        <trans-unit id="dc66a04b7fd6c8f1331b2adb91a4455713a61616" translate="yes" xml:space="preserve">
          <source>If a plan has not yet been output, it will do so.</source>
          <target state="translated">Если план еще не был выпущен,он сделает это.</target>
        </trans-unit>
        <trans-unit id="f9d2f49ea2b290886ecf360d9425d5113040021a" translate="yes" xml:space="preserve">
          <source>If a precision obtained through &lt;code&gt;*&lt;/code&gt; is negative, it counts as having no precision at all.</source>
          <target state="translated">Если точность, полученная с помощью &lt;code&gt;*&lt;/code&gt; , отрицательна, она считается не имеющей точности вообще.</target>
        </trans-unit>
        <trans-unit id="2493d17a98c3b1f685aa6fcd91f6a228a3382409" translate="yes" xml:space="preserve">
          <source>If a precompiled pattern is embedded in a larger pattern then the effect of &lt;code&gt;&quot;msixpluadn&quot;&lt;/code&gt; will be propagated appropriately. The effect that the &lt;code&gt;/o&lt;/code&gt; modifier has is not propagated, being restricted to those patterns explicitly using it.</source>
          <target state="translated">Если предварительно скомпилированный шаблон встроен в более крупный шаблон, то эффект &lt;code&gt;&quot;msixpluadn&quot;&lt;/code&gt; будет распространяться соответствующим образом. Эффект, который имеет модификатор &lt;code&gt;/o&lt;/code&gt; , не распространяется, ограничиваясь теми шаблонами, которые его явно используют.</target>
        </trans-unit>
        <trans-unit id="cfe77c7e04c6532a52f2ea4bb204b4b081b46114" translate="yes" xml:space="preserve">
          <source>If a program's environment specifies an LC_NUMERIC locale and &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
locale&lt;/code&gt; is in effect when the format is declared, the locale is used to specify the decimal point character in formatted output. Formatted output cannot be controlled by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; at the time when write() is called. See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; for further discussion of locale handling.</source>
          <target state="translated">Если в среде программы задан языковой стандарт LC_NUMERIC и &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; при объявлении формата, языковой стандарт используется для указания символа десятичной точки в форматированном выводе. Форматированный вывод нельзя контролировать с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; во время вызова write (). См. &lt;a href=&quot;perllocale&quot;&gt;Perllocale&lt;/a&gt; для дальнейшего обсуждения обработки локали.</target>
        </trans-unit>
        <trans-unit id="dbdd7653484d14bb99878153118f9a9fc7a64201" translate="yes" xml:space="preserve">
          <source>If a queue is empty, &lt;code&gt;dequeue()&lt;/code&gt; blocks until another thread enqueues something. This makes queues ideal for event loops and other communications between threads.</source>
          <target state="translated">Если очередь пуста, &lt;code&gt;dequeue()&lt;/code&gt; блокируется, пока другой поток не поставит что-либо в очередь. Это делает очереди идеальными для циклов событий и других коммуникаций между потоками.</target>
        </trans-unit>
        <trans-unit id="d8a808372475f8c939dd3899bae64db28b71a73e" translate="yes" xml:space="preserve">
          <source>If a reference happens to be a reference to an object, then there are probably methods to access the things referred to, and you should probably stick to those methods unless you're in the class package that defines the object's methods. In other words, be nice, and don't violate the object's encapsulation without a very good reason. Perl does not enforce encapsulation. We are not totalitarians here. We do expect some basic civility though.</source>
          <target state="translated">Если ссылка является ссылкой на объект,то,вероятно,существуют методы для доступа к предметам,на которые делается ссылка,и вы,вероятно,должны придерживаться этих методов,если только вы не находитесь в пакете классов,который определяет методы объекта.Другими словами,будьте любезны и не нарушайте инкапсуляцию объекта без веской на то причины.Perl не применяет инкапсуляцию.Мы здесь не тоталитаристы.Хотя мы ожидаем некоторой элементарной цивилизованности.</target>
        </trans-unit>
        <trans-unit id="c8efe9417a8ca522054e8e0f20aa5ebe3ad20734" translate="yes" xml:space="preserve">
          <source>If a regexp has a variable that interpolates a code expression, Perl treats the regexp as an error. If the code expression is precompiled into a variable, however, interpolating is ok. The question is, why is this an error?</source>
          <target state="translated">Если регеxp имеет переменную,которая интерполирует выражение кода,Perl рассматривает регеxp как ошибку.Однако,если выражение кода прекомпилировано в переменную,то интерполяция нормальная.Вопрос в том,почему это ошибка?</target>
        </trans-unit>
        <trans-unit id="d5bd95a2da72abd4235bfb3025f329041ecd2afc" translate="yes" xml:space="preserve">
          <source>If a regexp matches in more than one place in the string, Perl will always match at the earliest possible point in the string:</source>
          <target state="translated">Если регеxp совпадает более чем в одном месте строки,то Perl всегда будет совпадать в самой ранней точке строки:</target>
        </trans-unit>
        <trans-unit id="eaf4b93182f52023e0f84b564980685b7296c6d9" translate="yes" xml:space="preserve">
          <source>If a regular bracketed character class contains a &lt;code&gt;\p{}&lt;/code&gt; or &lt;code&gt;\P{}&lt;/code&gt; and is matched against a non-Unicode code point, a warning may be raised, as the result is not Unicode-defined. No such warning will come when using this extended form.</source>
          <target state="translated">Если обычный класс символов в квадратных скобках содержит &lt;code&gt;\p{}&lt;/code&gt; или &lt;code&gt;\P{}&lt;/code&gt; и сопоставляется с кодовой точкой, отличной от Unicode, может появиться предупреждение, поскольку результат не определен в Unicode. При использовании этой расширенной формы такого предупреждения не будет.</target>
        </trans-unit>
        <trans-unit id="f85e430ff8e0f946fbbcd7fbdf03ad676d0029b5" translate="yes" xml:space="preserve">
          <source>If a result does not have a callback defined for it, this callback will be invoked. Thus, if all of the previous result types are specified as callbacks, this callback will</source>
          <target state="translated">Если результат не имеет определенного для него обратного вызова,то этот вызов будет вызван.Таким образом,если все предыдущие типы результатов определены как обратные,то этот вызов будет</target>
        </trans-unit>
        <trans-unit id="7c88e9a20d1a229d11dbc65d34fee24d0f8252b1" translate="yes" xml:space="preserve">
          <source>If a script does not contain such a cooky, then to avoid calling</source>
          <target state="translated">Если сценарий не содержит такого печенья,то,чтобы избежать вызова</target>
        </trans-unit>
        <trans-unit id="7e6d780b3e70414e72c5be7308b60f82c00d250e" translate="yes" xml:space="preserve">
          <source>If a second argument is given and it corresponds to a valid locale, the locale for the category is set to that value, and the function returns the now-current locale value. You can then use this in yet another call to &lt;code&gt;setlocale()&lt;/code&gt; . (In some implementations, the return value may sometimes differ from the value you gave as the second argument--think of it as an alias for the value you gave.)</source>
          <target state="translated">Если указан второй аргумент и он соответствует допустимому языку, языковой стандарт для категории устанавливается на это значение, и функция возвращает текущее значение языкового стандарта. Затем вы можете использовать это в еще одном вызове &lt;code&gt;setlocale()&lt;/code&gt; . (В некоторых реализациях возвращаемое значение может иногда отличаться от значения, которое вы указали в качестве второго аргумента - воспринимайте его как псевдоним для значения, которое вы указали.)</target>
        </trans-unit>
        <trans-unit id="91a945f54fa17399a38d6421bac299acb5873c21" translate="yes" xml:space="preserve">
          <source>If a second argument is given then it should be the name of the desired output file. If the special output filename &quot;-&quot; or &quot;&amp;gt;&amp;amp;STDOUT&quot; is given then the STDOUT filehandle is used for output (and no open or close is performed). If the special output filename &quot;&amp;gt;&amp;amp;STDERR&quot; is given then the STDERR filehandle is used for output (and no open or close is performed). If no output filehandle is currently in use and no output filename is specified, then &quot;-&quot; is implied. Alternatively, filehandle references or objects that support the regular IO operations (like &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, e.g. &lt;a href=&quot;http://search.cpan.org/perldoc/IO::String&quot;&gt;IO::String&lt;/a&gt;) are also accepted; the object must already be opened.</source>
          <target state="translated">Если указан второй аргумент, то это должно быть имя желаемого выходного файла. Если указано специальное выходное имя файла &amp;laquo;-&amp;raquo; или &amp;laquo;&amp;gt; &amp;amp; STDOUT&amp;raquo;, то для вывода используется дескриптор файла STDOUT (и ни открытие, ни закрытие не выполняется). Если задано специальное имя файла вывода &quot;&amp;gt; &amp;amp; STDERR&quot;, то для вывода используется дескриптор файла STDERR (при этом открытие или закрытие не выполняется). Если в настоящее время дескриптор выходного файла не используется и имя выходного файла не указано, то подразумевается &amp;laquo;-&amp;raquo;. В качестве альтернативы также принимаются ссылки на дескрипторы файлов или объекты, которые поддерживают обычные операции ввода-вывода (например, &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , например, &lt;a href=&quot;http://search.cpan.org/perldoc/IO::String&quot;&gt;IO :: String&lt;/a&gt; ); объект уже должен быть открыт.</target>
        </trans-unit>
        <trans-unit id="477169172ccc2cfa646e6b1ff7ebcaf7ea663dbd" translate="yes" xml:space="preserve">
          <source>If a second argument is given then it should correspond to a filehandle where output should be sent (otherwise the default output filehandle is &lt;code&gt;STDOUT&lt;/code&gt; if no output filehandle is currently in use).</source>
          <target state="translated">Если указан второй аргумент, то он должен соответствовать дескриптору файла, куда должен быть отправлен вывод (в противном случае дескриптор выходного файла по умолчанию - &lt;code&gt;STDOUT&lt;/code&gt; , если в настоящее время дескриптор выходного файла не используется).</target>
        </trans-unit>
        <trans-unit id="93e01c4263faa2fd7e903bd96fbfc6f719b4224a" translate="yes" xml:space="preserve">
          <source>If a signal of any given type fires multiple times during an opcode (such as from a fine-grained timer), the handler for that signal will be called only once, after the opcode completes; all other instances will be discarded. Furthermore, if your system's signal queue gets flooded to the point that there are signals that have been raised but not yet caught (and thus not deferred) at the time an opcode completes, those signals may well be caught and deferred during subsequent opcodes, with sometimes surprising results. For example, you may see alarms delivered even after calling &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm(0)&lt;/a&gt;&lt;/code&gt; as the latter stops the raising of alarms but does not cancel the delivery of alarms raised but not yet caught. Do not depend on the behaviors described in this paragraph as they are side effects of the current implementation and may change in future versions of Perl.</source>
          <target state="translated">Если сигнал любого заданного типа срабатывает несколько раз во время выполнения кода операции (например, из детального таймера), обработчик этого сигнала будет вызываться только один раз после завершения кода операции; все остальные экземпляры будут отброшены. Кроме того, если очередь сигналов вашей системы затоплена до такой степени, что есть сигналы, которые были подняты, но еще не перехвачены (и, следовательно, не отложены) во время завершения кода операции, эти сигналы вполне могут быть перехвачены и отложены во время последующих кодов операции, с иногда удивительные результаты. Например, вы можете видеть, что сигналы тревоги поступают даже после вызова &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm(0)&lt;/a&gt;&lt;/code&gt; поскольку последний останавливает подачу сигналов тревоги, но не отменяет доставку поднятых, но еще не зафиксированных сигналов тревоги. Не полагайтесь на поведение, описанное в этом абзаце, поскольку оно является побочным эффектом текущей реализации и может измениться в будущих версиях Perl.</target>
        </trans-unit>
        <trans-unit id="8ca9f14adad1a4346557fbd963ffe8837b4e2de6" translate="yes" xml:space="preserve">
          <source>If a specified constant &lt;code&gt;EFOO&lt;/code&gt; does not exist on the system, &lt;code&gt;$!{EFOO}&lt;/code&gt; returns &lt;code&gt;&quot;&quot;&lt;/code&gt; . You may use &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt; $!{EFOO}&lt;/code&gt; to check whether the constant is available on the system.</source>
          <target state="translated">Если указанная константа &lt;code&gt;EFOO&lt;/code&gt; не существует в системе, &lt;code&gt;$!{EFOO}&lt;/code&gt; возвращает &lt;code&gt;&quot;&quot;&lt;/code&gt; . Вы можете использовать &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt; $!{EFOO}&lt;/code&gt; чтобы проверить, доступна ли константа в системе.</target>
        </trans-unit>
        <trans-unit id="f800d47729ac41db50a73befe5a0c18db31026bf" translate="yes" xml:space="preserve">
          <source>If a string is UTF-8, &lt;b&gt;always&lt;/b&gt; use &lt;code&gt;utf8_to_uvchr_buf&lt;/code&gt; to get at the value, unless &lt;code&gt;UTF8_IS_INVARIANT(*s)&lt;/code&gt; in which case you can use &lt;code&gt;*s&lt;/code&gt; .</source>
          <target state="translated">Если строка является UTF-8, &lt;b&gt;всегда&lt;/b&gt; используйте &lt;code&gt;utf8_to_uvchr_buf&lt;/code&gt; для получения значения, если только &lt;code&gt;UTF8_IS_INVARIANT(*s)&lt;/code&gt; не может использовать &lt;code&gt;*s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1be10a035bc9dd04a9faa3e7d6666d736bd26b25" translate="yes" xml:space="preserve">
          <source>If a sub has both a PROTO and a BLOCK, the prototype is not applied until after the BLOCK is completely defined. This means that a recursive function with a prototype has to be predeclared for the prototype to take effect, like so:</source>
          <target state="translated">Если подлодка имеет и ПРОТО,и БЛОКИРОВКУ,прототип не применяется до тех пор,пока БЛОКИРОВКА не будет полностью определена.Это означает,что рекурсивная функция с прототипом должна быть предзаявлена,чтобы прототип вступил в силу:</target>
        </trans-unit>
        <trans-unit id="0608dc713e7e2ffc835fe7b94ed6aa1dd9da10a4" translate="yes" xml:space="preserve">
          <source>If a subroutine reference was given, it is invoked as:</source>
          <target state="translated">Если была дана ссылка на подпрограмму,то она вызывается как:</target>
        </trans-unit>
        <trans-unit id="b5b26c7bacf7c0c773c98a08b7cfd7b95eaadc8d" translate="yes" xml:space="preserve">
          <source>If a substring is known to match at end-of-line only, it may be followed by &lt;code&gt;$&lt;/code&gt; , as in &lt;code&gt;floating 'k'$&lt;/code&gt; .</source>
          <target state="translated">Если известно, что подстрока соответствует только в конце строки, за ней может следовать &lt;code&gt;$&lt;/code&gt; , как в &lt;code&gt;floating 'k'$&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8bac00f48a56f95c981f68b27c67c1613b3abed" translate="yes" xml:space="preserve">
          <source>If a test had either a &lt;code&gt;TODO&lt;/code&gt; or &lt;code&gt;SKIP&lt;/code&gt; directive, this method will return the accompanying explanation, if present.</source>
          <target state="translated">Если в тесте была &lt;code&gt;TODO&lt;/code&gt; директива TODO или &lt;code&gt;SKIP&lt;/code&gt; , этот метод вернет сопровождающее объяснение, если оно есть.</target>
        </trans-unit>
        <trans-unit id="65b9290b4f037c914cf42f893f1aba1433a9e97a" translate="yes" xml:space="preserve">
          <source>If a test number is greater than the number of planned tests, this method will return true. Unplanned tests will</source>
          <target state="translated">Если номер теста превышает количество запланированных тестов,этот метод вернет true.Незапланированные тесты</target>
        </trans-unit>
        <trans-unit id="99f0a88031cba297a38b9bb2a8d9794138cdfcc6" translate="yes" xml:space="preserve">
          <source>If a transformation subroutine (xfrm) is defined, its value is used to transform the lines read from the filehandle before their comparison.</source>
          <target state="translated">Если задана подпрограмма преобразования (xfrm),то ее значение используется для преобразования строк,считанных из файла перед их сравнением.</target>
        </trans-unit>
        <trans-unit id="571f9ad4d812cfdda52b01e4ae41c48c7aa1a889" translate="yes" xml:space="preserve">
          <source>If a true value is given (non-zero but should be positive), it will be added as a terminator primary weight to the end of every standard Hangul syllable. Secondary and any higher weights for terminator are set to zero. If the value is false or &lt;code&gt;hangul_terminator&lt;/code&gt; key does not exist, insertion of terminator weights will not be performed.</source>
          <target state="translated">Если дано истинное значение (отличное от нуля, но должно быть положительным), оно будет добавлено в качестве основного веса терминатора в конец каждого стандартного слога хангыль. Вторичный и любые более высокие веса терминатора устанавливаются на ноль. Если значение равно false или ключ &lt;code&gt;hangul_terminator&lt;/code&gt; не существует, вставка весовых коэффициентов терминатора выполняться не будет.</target>
        </trans-unit>
        <trans-unit id="06c503e180fbd73d4ade263d4ec3fc736e96785b" translate="yes" xml:space="preserve">
          <source>If a typed lexical variable (&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; Class
$var&lt;/code&gt; ) holding a reference is used to access a hash element and a package with the same name as the type has declared class fields using this pragma, then the hash key is verified at compile time. If the variables are not typed, access is only checked at run time.</source>
          <target state="translated">Если типизированная лексическая переменная ( &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; Class $var&lt;/code&gt; ), содержащая ссылку, используется для доступа к хэш-элементу и пакету с тем же именем, что и тип, объявивший поля класса с помощью этой прагмы, то хеш-ключ проверяется во время компиляции. Если переменные не введены, доступ проверяется только во время выполнения.</target>
        </trans-unit>
        <trans-unit id="a56a688e323d9747dee356792880eafa156d2877" translate="yes" xml:space="preserve">
          <source>If a utility or module isn't available, it will be marked in a cache (see the &lt;code&gt;$METHOD_FAIL&lt;/code&gt; variable further down), so it will not be tried again. The &lt;code&gt;fetch&lt;/code&gt; method will only fail when all options are exhausted, and it was not able to retrieve the file.</source>
          <target state="translated">Если утилита или модуль недоступны, они будут отмечены в кэше (см. &lt;code&gt;$METHOD_FAIL&lt;/code&gt; ниже), поэтому повторная попытка их выполнения не выполняется . Метод &lt;code&gt;fetch&lt;/code&gt; завершится ошибкой только в том случае, если все параметры исчерпаны и не удалось получить файл.</target>
        </trans-unit>
        <trans-unit id="17e415afdb54d5332d73e9d658477c2317a9747c" translate="yes" xml:space="preserve">
          <source>If a variable is declared inside a CODE: section it will follow any typemap code that is emitted for the input parameters. This may result in the declaration ending up after C code, which is C syntax error. Similar errors may happen with an explicit &lt;code&gt;;&lt;/code&gt; -type or &lt;code&gt;+&lt;/code&gt; -type initialization of parameters is used (see &lt;a href=&quot;#Initializing-Function-Parameters&quot;&gt;Initializing Function Parameters&lt;/a&gt;). Declaring these variables in an INIT: section will not help.</source>
          <target state="translated">Если переменная объявлена ​​в разделе CODE :, она будет следовать за любым кодом карты типов, который создается для входных параметров. Это может привести к тому, что объявление окажется после кода C, что является синтаксической ошибкой C. Подобные ошибки могут произойти с явным &lt;code&gt;;&lt;/code&gt; Используется инициализация параметров -типа или &lt;code&gt;+&lt;/code&gt; -типа (см. &lt;a href=&quot;#Initializing-Function-Parameters&quot;&gt;Инициализация параметров функции&lt;/a&gt; ). Объявление этих переменных в разделе INIT: не поможет.</target>
        </trans-unit>
        <trans-unit id="b1e1471095c4d68dab8592febf94b7e3ac2a2016" translate="yes" xml:space="preserve">
          <source>If accept() is interrupted by a signal, $! will be set to EINTR. If this happens, we can safely continue to the next iteration of the loop and another call to accept(). It is important that your signal handling code not modify the value of $!, or else this test will likely fail. In the REAPER subroutine we create a local version of $! before calling waitpid(). When waitpid() sets $! to ECHILD as it inevitably does when it has no more children waiting, it updates the local copy and leaves the original unchanged.</source>
          <target state="translated">Если accept()будет прервана сигналом,то $! будет установлен в EINTR.Если это произойдет,мы сможем безопасно продолжить следующую итерацию цикла и еще один вызов функции accept().Важно,чтобы код обработки сигнала не изменял значение $!,иначе этот тест,скорее всего,провалится.В подпрограмме REAPER мы создаем локальную версию $! перед вызовом waitpid().Когда функция waitpid()устанавливает $! в ECHILD,как она неизбежно делает,когда у нее больше нет дочерних элементов,она обновляет локальную копию и оставляет оригинал без изменений.</target>
        </trans-unit>
        <trans-unit id="752e6cffd40215caddfd723588dccf4863a5ed16" translate="yes" xml:space="preserve">
          <source>If adding a new module to a set, follow the original author's standards for naming modules and the interface to methods in those modules.</source>
          <target state="translated">При добавлении нового модуля в набор,следуйте оригинальным авторским стандартам для именования модулей и интерфейсу к методам в этих модулях.</target>
        </trans-unit>
        <trans-unit id="c30aaa76b20fc01d8891caaf8c421bdbbefa39ad" translate="yes" xml:space="preserve">
          <source>If after that process the layer is still not defined then the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; will fail.</source>
          <target state="translated">Если после этого процесса слой все еще не определен, &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; не удастся.</target>
        </trans-unit>
        <trans-unit id="3f5b65dba45a85e174c3b613f61ee902daa93694" translate="yes" xml:space="preserve">
          <source>If all actions were successful install will return a hashref of the results as described above for the $result parameter. If any action is a failure then install will die, therefore it is recommended to pass in the $result parameter instead of using the return value. If the result parameter is provided then the returned hashref will be the passed in hashref.</source>
          <target state="translated">Если все действия были выполнены успешно,то для параметра $result будет возвращен хэшреф результатов,как описано выше.Если какое-либо действие окажется неудачным,то установка умрет,поэтому рекомендуется передавать в параметре $result вместо использования возвращаемого значения.Если задан параметр результата,то возвращаемый хешреф будет передан в хешрефе.</target>
        </trans-unit>
        <trans-unit id="127255eea385053cfe8f53f8f2c648f76a8be49c" translate="yes" xml:space="preserve">
          <source>If all data that comes from a certain handle is encoded in exactly the same way, you can tell the PerlIO system to automatically decode everything, with the &lt;code&gt;encoding&lt;/code&gt; layer. If you do this, you can't accidentally forget to decode or encode anymore, on things that use the layered handle.</source>
          <target state="translated">Если все данные, поступающие от определенного дескриптора, кодируются точно так же, вы можете указать системе PerlIO автоматически декодировать все с помощью уровня &lt;code&gt;encoding&lt;/code&gt; . Если вы сделаете это, вы больше не сможете случайно забыть декодировать или кодировать вещи, которые используют многоуровневый дескриптор.</target>
        </trans-unit>
        <trans-unit id="3e7d1b1bb140827b5655410f34d1155c7f80618e" translate="yes" xml:space="preserve">
          <source>If all goes okay and no errors during a build, you'll get two independent distributions: &lt;code&gt;wince-mips-pocket-wce300&lt;/code&gt; and &lt;code&gt;mips-wce300-thr&lt;/code&gt; .</source>
          <target state="translated">Если во время сборки все пойдет нормально и ошибок нет, вы получите два независимых дистрибутива: &lt;code&gt;wince-mips-pocket-wce300&lt;/code&gt; и &lt;code&gt;mips-wce300-thr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ab3e0df4f550d075ed2874e19cdd1793f373e2a" translate="yes" xml:space="preserve">
          <source>If all this is intimidating, have no (well, maybe only a little) fear. There are modules that can help. The &lt;code&gt;File::Spec&lt;/code&gt; modules provide methods to do the Right Thing on whatever platform happens to be running the program.</source>
          <target state="translated">Если все это пугает, не бойтесь (ну, может быть, совсем немного). Есть модули, которые могут помочь. В &lt;code&gt;File::Spec&lt;/code&gt; модули обеспечивают методы , чтобы сделать правильные вещи на любой платформе , случается, запустив программу.</target>
        </trans-unit>
        <trans-unit id="ae7ad2a8e725968ebffe98c6ec06a2f880b60f52" translate="yes" xml:space="preserve">
          <source>If all you want to do is pretend to be telnet but don't need the initial telnet handshaking, then the standard dual-process approach will suffice:</source>
          <target state="translated">Если все,что вы хотите сделать,это притвориться telnet,но не нуждаетесь в начальном telnet рукопожатии,то стандартного двухпроцессного подхода будет достаточно:</target>
        </trans-unit>
        <trans-unit id="114fc5763881eaed2b695ddb5eda1e514b33dd63" translate="yes" xml:space="preserve">
          <source>If all your tests passed, &lt;a href=&quot;builder&quot;&gt;Test::Builder&lt;/a&gt; will exit with zero (which is normal). If anything failed it will exit with how many failed. If you run less (or more) tests than you planned, the missing (or extras) will be considered failures. If no tests were ever run &lt;a href=&quot;builder&quot;&gt;Test::Builder&lt;/a&gt; will throw a warning and exit with 255. If the test died, even after having successfully completed all its tests, it will still be considered a failure and will exit with 255.</source>
          <target state="translated">Если все ваши тесты пройдены, &lt;a href=&quot;builder&quot;&gt;Test :: Builder&lt;/a&gt; завершится с нулем (что нормально). Если что-то не удалось, он выйдет с указанием количества сбоев. Если вы запустите меньше (или больше) тестов, чем планировали, недостающие (или дополнительные) будут считаться ошибками. Если тесты никогда не запускались, &lt;a href=&quot;builder&quot;&gt;Test :: Builder&lt;/a&gt; выдаст предупреждение и завершит работу с 255. Если тест завершится, даже после успешного завершения всех тестов, он все равно будет считаться неудачным и завершится с 255.</target>
        </trans-unit>
        <trans-unit id="a98f6624ef41fa5865752ff72d1c88c5adce8ff1" translate="yes" xml:space="preserve">
          <source>If all your tests passed, Test::Builder will exit with zero (which is normal). If anything failed it will exit with how many failed. If you run less (or more) tests than you planned, the missing (or extras) will be considered failures. If no tests were ever run Test::Builder will throw a warning and exit with 255. If the test died, even after having successfully completed all its tests, it will still be considered a failure and will exit with 255.</source>
          <target state="translated">Если все ваши тесты прошли,Test::Builder выйдет с нулем (что нормально).Если что-то провалилось,он выйдет с тем,сколько провалилось.Если вы запустили меньше (или больше)тестов,чем планировали,то пропущенные (или дополнительные)тесты будут считаться неудачными.Если ни один тест не был запущен Test::Builder бросит предупреждение и выйдет с 255.Если тест умер,даже после успешного завершения всех тестов,он все равно будет считаться неудачным и выйдет с 255.</target>
        </trans-unit>
        <trans-unit id="ec52cc18e24a40a3b425f46525ccb32d3bbfcd0d" translate="yes" xml:space="preserve">
          <source>If all your tests passed, Test::Simple will exit with zero (which is normal). If anything failed it will exit with how many failed. If you run less (or more) tests than you planned, the missing (or extras) will be considered failures. If no tests were ever run Test::Simple will throw a warning and exit with 255. If the test died, even after having successfully completed all its tests, it will still be considered a failure and will exit with 255.</source>
          <target state="translated">Если все ваши тесты прошли,Test::Simple выйдет с нулем (что нормально).Если что-то провалилось,то со сколькими провалились тесты,они завершатся.Если вы прогоните меньше (или больше)тестов,чем планировали,то пропущенные (или дополнительные)тесты будут считаться неудачными.Если ни один тест не был запущен Test::Simple бросит предупреждение и выйдет с 255.Если тест умер,даже после успешного завершения всех тестов,он все равно будет считаться неудачным и выйдет с 255.</target>
        </trans-unit>
        <trans-unit id="bf21a78dfdb342ccff4796ddae824fa3095f386e" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;ExtraField&lt;/code&gt; option is specified and it is a simple scalar, it must conform to the sub-field structure as defined in RFC 1952.</source>
          <target state="translated">Если &lt;code&gt;ExtraField&lt;/code&gt; параметр ExtraField, и это простой скаляр, он должен соответствовать структуре подполя, как определено в RFC 1952.</target>
        </trans-unit>
        <trans-unit id="703bb32d1796efb54146381859e7e166335fd702" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;ExtraField&lt;/code&gt; option is specified and it is a simple scalar, the structure will not be checked. The only error is if the length is too big.</source>
          <target state="translated">Если &lt;code&gt;ExtraField&lt;/code&gt; параметр ExtraField, и это простой скаляр, структура не будет проверяться. Единственная ошибка - слишком большая длина.</target>
        </trans-unit>
        <trans-unit id="d5888ada14b086770c285ef36da99e64d4b36a12" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;ExtraField&lt;/code&gt; option is specified the second byte of the ID will be checked in each subfield to ensure that it does not contain the reserved value 0x00.</source>
          <target state="translated">Если &lt;code&gt;ExtraField&lt;/code&gt; параметр ExtraField, второй байт идентификатора будет проверяться в каждом подполе, чтобы убедиться, что он не содержит зарезервированного значения 0x00.</target>
        </trans-unit>
        <trans-unit id="bba67c55f0a73d622c034c758b4c54c06d0297ce" translate="yes" xml:space="preserve">
          <source>If an AUTOLOAD routine is an XSUB, as with Perl subroutines, Perl puts the fully-qualified name of the autoloaded subroutine in the $AUTOLOAD variable of the XSUB's package.</source>
          <target state="translated">Если рутина AUTOLOAD является XSUB,как и в случае с подпрограммами Perl,то Perl помещает полное имя автозагружаемой подпрограммы в переменную $AUTOLOAD пакета XSUB.</target>
        </trans-unit>
        <trans-unit id="42bdc376fb833e498b49e6edb80ebe7de88f4149" translate="yes" xml:space="preserve">
          <source>If an Input glob matches the same file more than once, only the first will be used.</source>
          <target state="translated">Если входной глобус совпадает с одним и тем же файлом более одного раза,будет использоваться только первый.</target>
        </trans-unit>
        <trans-unit id="4c7ac1d42b2433b8600fc2dd6eb1a16139df0641" translate="yes" xml:space="preserve">
          <source>If an XSUB is created to offer a direct translation between this function and Perl, then this XSUB will be used from Perl with the following code. The $status and $timep variables will contain the output of the function.</source>
          <target state="translated">Если XSUB создается,чтобы предложить прямую трансляцию между этой функцией и Perl,то этот XSUB будет использоваться с Perl со следующим кодом.Переменные $status и $timep будут содержать вывод функции.</target>
        </trans-unit>
        <trans-unit id="b382afe3d07f60c5f6eced5294d3838170432890" translate="yes" xml:space="preserve">
          <source>If an XSUB name contains &lt;code&gt;::&lt;/code&gt; , it is considered to be a C++ method. The generated Perl function will assume that its first argument is an object pointer. The object pointer will be stored in a variable called THIS. The object should have been created by C++ with the new() function and should be blessed by Perl with the sv_setref_pv() macro. The blessing of the object by Perl can be handled by a typemap. An example typemap is shown at the end of this section.</source>
          <target state="translated">Если имя XSUB содержит &lt;code&gt;::&lt;/code&gt; , это считается методом C ++. Сгенерированная функция Perl предполагает, что ее первый аргумент является указателем на объект. Указатель объекта будет сохранен в переменной с именем THIS. Объект должен был быть создан C ++ с помощью функции new () и должен быть благословлен Perl макросом sv_setref_pv (). Благословение объекта в Perl может быть обработано картой типов. Пример карты типа показан в конце этого раздела.</target>
        </trans-unit>
        <trans-unit id="a5be5707a4fed01d7fc6a9c5c683f16ea2406809" translate="yes" xml:space="preserve">
          <source>If an argument callback routine is specified, &lt;code&gt;@ARGV&lt;/code&gt; will always be empty upon successful return of GetOptions() since all options have been processed. The only exception is when &lt;code&gt;--&lt;/code&gt; is used:</source>
          <target state="translated">Если указана процедура обратного вызова аргумента, &lt;code&gt;@ARGV&lt;/code&gt; всегда будет пустым после успешного возврата GetOptions (), поскольку все параметры были обработаны. Единственное исключение, когда &lt;code&gt;--&lt;/code&gt; используется:</target>
        </trans-unit>
        <trans-unit id="b39b97b3c5875ed6ddbb4cadef1665f0d49ebbe7" translate="yes" xml:space="preserve">
          <source>If an argument is given, it must correspond to the desired section heading number, in which case only the specified section heading is returned. If there is no current section heading at the specified level, then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Если указан аргумент, он должен соответствовать желаемому номеру заголовка раздела, и в этом случае возвращается только указанный заголовок раздела. Если на указанном уровне нет заголовка текущего раздела, возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7271fc38171101f8ded47e78d280e28ab4aefe24" translate="yes" xml:space="preserve">
          <source>If an attribute handler is declared and the &lt;code&gt;:ATTR&lt;/code&gt; specifier is given the name of a built-in type (&lt;code&gt;SCALAR&lt;/code&gt; , &lt;code&gt;ARRAY&lt;/code&gt; , &lt;code&gt;HASH&lt;/code&gt; , or &lt;code&gt;CODE&lt;/code&gt; ), the handler is only applied to declarations of that type. For example, the following definition:</source>
          <target state="translated">Если объявлен обработчик атрибута и &lt;code&gt;:ATTR&lt;/code&gt; присвоено имя встроенного типа ( &lt;code&gt;SCALAR&lt;/code&gt; , &lt;code&gt;ARRAY&lt;/code&gt; , &lt;code&gt;HASH&lt;/code&gt; или &lt;code&gt;CODE&lt;/code&gt; ), обработчик применяется только к объявлениям этого типа. Например, следующее определение:</target>
        </trans-unit>
        <trans-unit id="62eb757e944d2fdd579513e058242369fd9ee059" translate="yes" xml:space="preserve">
          <source>If an element of</source>
          <target state="translated">Если элемент</target>
        </trans-unit>
        <trans-unit id="34964fb1164dd648c7d2582c841b9ac59c8a6438" translate="yes" xml:space="preserve">
          <source>If an empty list, &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, or nothing that matches the first 3 values above is returned, then &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; looks at the remaining elements of @INC. Note that this filehandle must be a real filehandle (strictly a typeglob or reference to a typeglob, whether blessed or unblessed); tied filehandles will be ignored and processing will stop there.</source>
          <target state="translated">Если возвращается пустой список, &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; или ничего, что соответствует первым трем значениям, указанным выше, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; просматривает оставшиеся элементы @INC. Обратите внимание, что этот дескриптор файла должен быть настоящим дескриптором файла (строго typeglob или ссылкой на typeglob, будь то благословенный или не благословенный); связанные дескрипторы файлов будут проигнорированы, и на этом обработка остановится.</target>
        </trans-unit>
        <trans-unit id="e6b9ed06c157d2ccb39c11bcda5c6ea1f6b42a42" translate="yes" xml:space="preserve">
          <source>If an empty list, &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, or nothing that matches the first 3 values above is returned, then &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; looks at the remaining elements of @INC. Note that this filehandle must be a real filehandle (strictly a typeglob or reference to a typeglob, whether blessed or unblessed); tied filehandles will be ignored and processing will stop there.</source>
          <target state="translated">Если возвращается пустой список, &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; или ничего, что соответствует первым трем значениям, указанным выше, &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; просматривает оставшиеся элементы @INC. Обратите внимание, что этот дескриптор файла должен быть настоящим дескриптором файла (строго typeglob или ссылкой на typeglob, будь то благословенный или не благословенный); связанные дескрипторы файлов будут проигнорированы, и на этом обработка остановится.</target>
        </trans-unit>
        <trans-unit id="f919dfddbef4a1a12f08337d7a834831006d9b11" translate="yes" xml:space="preserve">
          <source>If an error is encountered during conversion, output file will be removed and a warning emitted instead of terminating the conversion immediately.</source>
          <target state="translated">При возникновении ошибки при конвертировании выходной файл будет удален,и вместо немедленного завершения конвертирования будет выдано предупреждение.</target>
        </trans-unit>
        <trans-unit id="9714806e81ca60318ef1d507fb9add3187535d9b" translate="yes" xml:space="preserve">
          <source>If an error occurs &lt;code&gt;blocking&lt;/code&gt; will return undef and &lt;code&gt;$!&lt;/code&gt; will be set.</source>
          <target state="translated">В случае ошибки &lt;code&gt;blocking&lt;/code&gt; вернет undef и &lt;code&gt;$!&lt;/code&gt; будет установлен.</target>
        </trans-unit>
        <trans-unit id="223081f636c4dc0e612cdeecd4fd8749800bcc2c" translate="yes" xml:space="preserve">
          <source>If an error occurs in parsing or compilation, in most cases a valid op tree (most likely null) is returned anyway. The error is reflected in the parser state, normally resulting in a single exception at the top level of parsing which covers all the compilation errors that occurred. Some compilation errors, however, will throw an exception immediately.</source>
          <target state="translated">Если при разборе или компиляции возникает ошибка,в большинстве случаев все равно возвращается корректное дерево оп (скорее всего,нулевое).Ошибка отражается в состоянии синтаксического анализатора,как правило,приводя к единичному исключению на верхнем уровне синтаксического анализа,которое охватывает все возникшие ошибки компиляции.Однако некоторые ошибки компиляции сразу же бросают исключение.</target>
        </trans-unit>
        <trans-unit id="409c88cc16ea56deb3ee2fd13496f8443cdeb8ed" translate="yes" xml:space="preserve">
          <source>If an error occurs in parsing or compilation, in most cases a valid op tree is returned anyway. The error is reflected in the parser state, normally resulting in a single exception at the top level of parsing which covers all the compilation errors that occurred. Some compilation errors, however, will throw an exception immediately.</source>
          <target state="translated">Если возникает ошибка при разборе или компиляции,в большинстве случаев все равно возвращается корректное дерево опций.Ошибка отражается в состоянии синтаксического анализатора,как правило,приводя к единичному исключению на верхнем уровне синтаксического анализа,которое охватывает все возникшие ошибки компиляции.Однако некоторые ошибки компиляции сразу же бросают исключение.</target>
        </trans-unit>
        <trans-unit id="fb3a0347b1d41b96c13bdbefc10e2d1afbf9de50" translate="yes" xml:space="preserve">
          <source>If an error occurs in parsing, which can only occur if the label is mandatory, a valid label is returned anyway. The error is reflected in the parser state, normally resulting in a single exception at the top level of parsing which covers all the compilation errors that occurred.</source>
          <target state="translated">Если при разборе возникает ошибка,которая может возникнуть только в том случае,если этикетка является обязательной,то в любом случае возвращается действительная этикетка.Ошибка отражается в состоянии синтаксического анализатора,что обычно приводит к единичному исключению на верхнем уровне синтаксического анализа,которое охватывает все возникшие ошибки компиляции.</target>
        </trans-unit>
        <trans-unit id="d9bdcdf03abe1ba577aa0e79f3435579268caad1" translate="yes" xml:space="preserve">
          <source>If an error occurs, it SHOULD return the fragment of string that has been converted and modify $octets in-place to remove the converted part leaving it starting with the problem fragment. If perlio_ok() is true, SHOULD becomes MUST.</source>
          <target state="translated">При возникновении ошибки он ДОЛЖЕН вернуть преобразованный фрагмент строки и изменить $octets на месте,чтобы удалить преобразованный фрагмент,оставив его начиная с проблемного фрагмента.Если переменная perlio_ok()имеет значение true,то функция SHOULD становится ОБЯЗАТЕЛЬНОЙ.</target>
        </trans-unit>
        <trans-unit id="5cf7457198e3f9cd671a04a577836ab4a9017358" translate="yes" xml:space="preserve">
          <source>If an error occurs, it SHOULD return the octet sequence for the fragment of string that has been converted and modify $string in-place to remove the converted part leaving it starting with the problem fragment. If perlio_ok() is true, SHOULD becomes MUST.</source>
          <target state="translated">При возникновении ошибки она ДОЛЖНА вернуть октетную последовательность для преобразованного фрагмента строки и модифицировать $string на месте,чтобы удалить преобразованную часть,оставив ее начиная с проблемного фрагмента.Если переменная perlio_ok()имеет значение true,то SHOULD становится ОБЯЗАТЕЛЬНЫМ.</target>
        </trans-unit>
        <trans-unit id="0c2d11e497e2ae0afa960e508853e27c914d2845" translate="yes" xml:space="preserve">
          <source>If an existing module &lt;b&gt;almost&lt;/b&gt; does what you want, consider writing a patch, writing a subclass, or otherwise extending the existing module rather than rewriting it.</source>
          <target state="translated">Если существующий модуль &lt;b&gt;почти&lt;/b&gt; выполняет то, что вы хотите, подумайте о написании патча, написании подкласса или ином расширении существующего модуля, а не его переписывании.</target>
        </trans-unit>
        <trans-unit id="82c1aacb1c3709d4e7d697aae2bed5c77802f47c" translate="yes" xml:space="preserve">
          <source>If an exit status</source>
          <target state="translated">Если статус выхода</target>
        </trans-unit>
        <trans-unit id="cea12036a9c231320c44066b7b5457646bd39537" translate="yes" xml:space="preserve">
          <source>If an exit status is</source>
          <target state="translated">Если статус выхода</target>
        </trans-unit>
        <trans-unit id="e2873de2f1e9af5ea740b20953d89320900ebe0e" translate="yes" xml:space="preserve">
          <source>If an extant $SIG{__WARN__} handler is discovered, it will continue to be honored, but only after the diagnostics::splainthis() function (the module's $SIG{__WARN__} interceptor) has had its way with your warnings.</source>
          <target state="translated">Если будет обнаружен существующий обработчик $SIG{__WARN__},то он будет продолжать выполняться,но только после того,как функция диагностики::splainthis()(перехватчик модуля $SIG{__WARN__})справится с вашими предупреждениями.</target>
        </trans-unit>
        <trans-unit id="d72e4c503af6f4a09cfa2171e2474d37da483a9b" translate="yes" xml:space="preserve">
          <source>If an extension is being built away from the perl source then MakeMaker will leave PERL_SRC undefined and default to using the installed copy of the perl library. The other variables default to the following:</source>
          <target state="translated">Если расширение собирается отдельно от источника perl,то MakeMaker оставит PERL_SRC неопределенным и по умолчанию будет использовать установленную копию библиотеки perl.Остальные переменные по умолчанию следующие:</target>
        </trans-unit>
        <trans-unit id="a1c876b366d6c58e85d7243f2dbcbb0c36548470" translate="yes" xml:space="preserve">
          <source>If an extension is being built below the &lt;code&gt;ext/&lt;/code&gt; directory of the perl source then MakeMaker will set PERL_SRC automatically (e.g., &lt;code&gt;../..&lt;/code&gt;). If PERL_SRC is defined and the extension is recognized as a standard extension, then other variables default to the following:</source>
          <target state="translated">Если расширение создается под каталогом &lt;code&gt;ext/&lt;/code&gt; исходного кода perl, MakeMaker автоматически устанавливает PERL_SRC (например, &lt;code&gt;../..&lt;/code&gt; ). Если PERL_SRC определен и расширение распознается как стандартное расширение, тогда другие переменные по умолчанию имеют следующие значения:</target>
        </trans-unit>
        <trans-unit id="a0316d054e0262fb322cda466200340b0b6b9a08" translate="yes" xml:space="preserve">
          <source>If an extractor returns a defined value, that value is immediately treated as the next extracted field and pushed onto the list of fields. If the extractor was specified in a hash reference, the field is also blessed into the appropriate class,</source>
          <target state="translated">Если извлекающее устройство возвращает определенное значение,то это значение сразу же рассматривается как следующее извлеченное поле и вытесняется в список полей.Если извлекатель был указан в ссылке на хэш,то поле также благословляется в соответствующий класс,</target>
        </trans-unit>
        <trans-unit id="f7e24bf211ae35444c0a5b02834d4c163f847646" translate="yes" xml:space="preserve">
          <source>If an infinity or a not-a-number is recognized, the *sp will point to one byte past the end of the recognized string. If the recognition fails, zero is returned, and the *sp will not move.</source>
          <target state="translated">Если распознана бесконечность или не-число,то *sp будет указывать на один байт,прошедший мимо конца распознанной строки.При неудачном распознавании возвращается ноль,а *sp не будет перемещаться.</target>
        </trans-unit>
        <trans-unit id="ce09f2ed6b39791e05ffc528e1a968457528299e" translate="yes" xml:space="preserve">
          <source>If an object does not support the method specified (determined using UNIVERSAL::can()) then the call will be skipped. If the method dies a warning will be generated.</source>
          <target state="translated">Если объект не поддерживает указанный метод (определяется с помощью UNIVERSAL::can()),то вызов будет пропущен.Если метод умрет,то будет выдано предупреждение.</target>
        </trans-unit>
        <trans-unit id="24adf3fb9ad8a72560fd633d7f97a817649bd630" translate="yes" xml:space="preserve">
          <source>If an operation is trapped in this way, then the code in STRING will not be executed. If such a trapped operation occurs or any other compile-time or return error, then $@ is set to the error message, just as with an eval().</source>
          <target state="translated">Если операция поймана таким образом,то код в STRING выполняться не будет.Если такая операция попала в ловушку или произошла любая другая ошибка компиляции или возврата,то $@ устанавливается в сообщение об ошибке,так же,как и eval().</target>
        </trans-unit>
        <trans-unit id="215592828190613f91a4fc9378ebe41cd5d2be61" translate="yes" xml:space="preserve">
          <source>If an uncaught exception results in interpreter exit, the exit code is determined from the values of &lt;code&gt;$!&lt;/code&gt; and &lt;code&gt;$?&lt;/code&gt; with this pseudocode:</source>
          <target state="translated">Если неперехваченное исключение приводит к завершению работы интерпретатора, код выхода определяется по значениям &lt;code&gt;$!&lt;/code&gt; и &lt;code&gt;$?&lt;/code&gt; с этим псевдокодом:</target>
        </trans-unit>
        <trans-unit id="7b864a885bc89443cbce8d662bf2be7249be99d8" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;test_args&lt;/code&gt; are given they will be appended to the end of the command argument list.</source>
          <target state="translated">Если заданы какие-либо &lt;code&gt;test_args&lt;/code&gt; , они будут добавлены в конец списка аргументов команды.</target>
        </trans-unit>
        <trans-unit id="37251314e00b333d40467d467ca5c0c35c0e366e" translate="yes" xml:space="preserve">
          <source>If any argument to &lt;b&gt;podselect&lt;/b&gt; is a reference to a hash (associative array) then the values with the following keys are processed as follows:</source>
          <target state="translated">Если какой-либо аргумент &lt;b&gt;podselect&lt;/b&gt; является ссылкой на хэш (ассоциативный массив), то значения со следующими ключами обрабатываются следующим образом:</target>
        </trans-unit>
        <trans-unit id="0fa7b6de1acc5eb4980a2653a96afb04a72dd14b" translate="yes" xml:space="preserve">
          <source>If any arguments remain, and &lt;code&gt;GetOptionsFromString&lt;/code&gt; was not called in list context, a message will be given and &lt;code&gt;GetOptionsFromString&lt;/code&gt; will return failure.</source>
          <target state="translated">Если остались какие-либо аргументы и &lt;code&gt;GetOptionsFromString&lt;/code&gt; не был вызван в контексте списка, будет выдано сообщение, и &lt;code&gt;GetOptionsFromString&lt;/code&gt; вернет ошибку.</target>
        </trans-unit>
        <trans-unit id="59b5cfa2ac91aed4f93a07d4f29fc54a851c06d0" translate="yes" xml:space="preserve">
          <source>If any destructors are triggered as a result, the hv itself may be freed.</source>
          <target state="translated">Если в результате сработают деструкторы,то сам hv может быть освобожден.</target>
        </trans-unit>
        <trans-unit id="dd7074163e07f37b8a41bd25ef8050c203f85577" translate="yes" xml:space="preserve">
          <source>If any directories are included in @names they are searched before @dl_library_path. Directories may be specified as &lt;b&gt;-Ldir&lt;/b&gt;. Any other names are treated as filenames to be searched for.</source>
          <target state="translated">Если какие-либо каталоги включены в @names, их поиск выполняется до @dl_library_path. Каталоги могут быть указаны как &lt;b&gt;-Ldir&lt;/b&gt; . Любые другие имена рассматриваются как имена файлов, подлежащих поиску.</target>
        </trans-unit>
        <trans-unit id="864b32c42a324d7506e9ca2ec49f2bbc8bbdcf83" translate="yes" xml:space="preserve">
          <source>If any element of LIST is an lvalue, you can modify it by modifying VAR inside the loop. Conversely, if any element of LIST is NOT an lvalue, any attempt to modify that element will fail. In other words, the &lt;code&gt;foreach&lt;/code&gt; loop index variable is an implicit alias for each item in the list that you're looping over.</source>
          <target state="translated">Если какой-либо элемент LIST является lvalue, вы можете изменить его, изменив VAR внутри цикла. И наоборот, если какой-либо элемент LIST НЕ является lvalue, любая попытка изменить этот элемент потерпит неудачу. Другими словами, индексная переменная цикла &lt;code&gt;foreach&lt;/code&gt; является неявным псевдонимом для каждого элемента в списке, который вы перебираете.</target>
        </trans-unit>
        <trans-unit id="705cbac0d6d9464ed1b8a92ba681b4a46a07d153" translate="yes" xml:space="preserve">
          <source>If any list operator (&lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt;, etc.) or any unary operator (&lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt;, etc.) is followed by a left parenthesis as the next token, the operator and arguments within parentheses are taken to be of highest precedence, just like a normal function call.</source>
          <target state="translated">Если за любым оператором списка ( &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; и т. Д.) Или любым унарным оператором ( &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; и т. Д.) Следует левая скобка в качестве следующего токена, оператор и аргументы в скобках считаются имеющими наивысший приоритет, просто как обычный вызов функции.</target>
        </trans-unit>
        <trans-unit id="cec7c53718240c968018769a330928a1255918e0" translate="yes" xml:space="preserve">
          <source>If any list operator (&lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt;, etc.) or any unary operator (&lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt;, etc.) is followed by a left parenthesis as the next token, the operator and arguments within parentheses are taken to be of highest precedence, just like a normal function call. For example, because named unary operators are higher precedence than &lt;code&gt;||&lt;/code&gt;:</source>
          <target state="translated">Если за любым оператором списка ( &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; и т. Д.) Или любым унарным оператором ( &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; и т. Д.) Следует левая скобка в качестве следующего токена, оператор и аргументы в скобках считаются имеющими наивысший приоритет, просто как обычный вызов функции. Например, потому что именованные унарные операторы имеют более высокий приоритет, чем &lt;code&gt;||&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b227e6f9b5d8d36337845d9688db6eb8efa3551d" translate="yes" xml:space="preserve">
          <source>If any module's own AUTOLOAD subroutine has no need to fallback to the AutoLoader's AUTOLOAD subroutine (because it doesn't have any AutoSplit subroutines), then that module should not use &lt;b&gt;AutoLoader&lt;/b&gt; at all.</source>
          <target state="translated">Если для собственной подпрограммы AUTOLOAD какого-либо модуля нет необходимости откатываться к подпрограмме AUTOLOAD AutoLoader (потому что она не имеет подпрограмм AutoSplit), то этот модуль вообще не должен использовать &lt;b&gt;AutoLoader&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="54f05d2b51008f086be29ce06ad2dc1e36ce0970" translate="yes" xml:space="preserve">
          <source>If any of the alternatives matches, the hash &lt;code&gt;%+&lt;/code&gt; is bound to contain the three key-value pairs.</source>
          <target state="translated">Если какая-либо из альтернатив совпадает, хэш &lt;code&gt;%+&lt;/code&gt; обязательно должен содержать три пары ключ-значение.</target>
        </trans-unit>
        <trans-unit id="dde2e9ba6df88b543ea738e9014946a615cc8feb" translate="yes" xml:space="preserve">
          <source>If any of the entries in an import list begins with !, : or / then the list is treated as a series of specifications which either add to or delete from the list of names to import. They are processed left to right. Specifications are in the form:</source>
          <target state="translated">Если любой из пунктов списка для импорта начинается с !,:или /,то список рассматривается как серия спецификаций,которые либо добавляются в список для импорта,либо удаляются из него.Они обрабатываются слева направо.Спецификации оформляются в виде:</target>
        </trans-unit>
        <trans-unit id="3fd2433b191431a7e89003ab4a4e523c3a5de0d9" translate="yes" xml:space="preserve">
          <source>If any of the file tests (or either the &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; operator) is given the special filehandle consisting of a solitary underline, then the stat structure of the previous file test (or stat operator) is used, saving a system call. (This doesn't work with &lt;code&gt;-t&lt;/code&gt; , and you need to remember that lstat() and &lt;code&gt;-l&lt;/code&gt; leave values in the stat structure for the symbolic link, not the real file.) (Also, if the stat buffer was filled by an &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; call, &lt;code&gt;-T&lt;/code&gt; and &lt;code&gt;-B&lt;/code&gt; will reset it with the results of &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt; _&lt;/code&gt; ). Example:</source>
          <target state="translated">Если любому из файловых тестов (или оператору &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; ) присваивается специальный дескриптор файла, состоящий из одиночного подчеркивания, то используется структура stat предыдущего теста файла (или оператора stat), сохраняя системный вызов. (Это не работает с &lt;code&gt;-t&lt;/code&gt; , и вам нужно помнить, что lstat () и &lt;code&gt;-l&lt;/code&gt; оставляют значения в структуре stat для символьной ссылки, а не для реального файла.) (Кроме того, если буфер stat был заполнен &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;-T&lt;/code&gt; и &lt;code&gt;-B&lt;/code&gt; сбросят его с результатами &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt; _&lt;/code&gt; ). Пример:</target>
        </trans-unit>
        <trans-unit id="c70d4afb0f7f0b8a4b2bcb0de7d2fe106cb41892" translate="yes" xml:space="preserve">
          <source>If any of the file tests (or either the &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; operator) is given the special filehandle consisting of a solitary underline, then the stat structure of the previous file test (or stat operator) is used, saving a system call. (This doesn't work with &lt;code&gt;-t&lt;/code&gt; , and you need to remember that lstat() and &lt;code&gt;-l&lt;/code&gt; leave values in the stat structure for the symbolic link, not the real file.) (Also, if the stat buffer was filled by an &lt;code&gt;&lt;a href=&quot;lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; call, &lt;code&gt;-T&lt;/code&gt; and &lt;code&gt;-B&lt;/code&gt; will reset it with the results of &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt; _&lt;/code&gt; ). Example:</source>
          <target state="translated">Если любому из файловых тестов (или оператору &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; ) присваивается специальный дескриптор файла, состоящий из одиночного подчеркивания, то используется структура stat предыдущего теста файла (или оператора stat), сохраняя системный вызов. (Это не работает с &lt;code&gt;-t&lt;/code&gt; , и вам нужно помнить, что lstat () и &lt;code&gt;-l&lt;/code&gt; оставляют значения в структуре stat для символьной ссылки, а не для реального файла.) (Кроме того, если буфер stat был заполнен &lt;code&gt;&lt;a href=&quot;lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;-T&lt;/code&gt; и &lt;code&gt;-B&lt;/code&gt; сбросят его с результатами &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt; _&lt;/code&gt; ). Пример:</target>
        </trans-unit>
        <trans-unit id="4eae7869337353cadd5cbfe4d84a955fd03cd8ba" translate="yes" xml:space="preserve">
          <source>If any of the given search directories contains a</source>
          <target state="translated">Если любой из заданных поисковых каталогов содержит</target>
        </trans-unit>
        <trans-unit id="0865eba790bb7da4cb38d4fafb11a71c0ca93d75" translate="yes" xml:space="preserve">
          <source>If any of the three values is &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; that time value will not be used. So, for example, to set only the &lt;code&gt;$mtime&lt;/code&gt; you would use this</source>
          <target state="translated">Если любое из трех значений - &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , это значение времени использоваться не будет. Так, например, чтобы установить только &lt;code&gt;$mtime&lt;/code&gt; вы должны использовать это</target>
        </trans-unit>
        <trans-unit id="341a4d7e4dbc9eeb69d34b947d58bc6f15ecb9f2" translate="yes" xml:space="preserve">
          <source>If any part of LIST is an array, &lt;code&gt;foreach&lt;/code&gt; will get very confused if you add or remove elements within the loop body, for example with &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt;. So don't do that.</source>
          <target state="translated">Если какая-либо часть LIST является массивом, &lt;code&gt;foreach&lt;/code&gt; очень запутается, если вы добавите или удалите элементы в теле цикла, например, с помощью &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; . Так что не делай этого.</target>
        </trans-unit>
        <trans-unit id="31cf9c709860eea50a338d60ff5edf1e2478723c" translate="yes" xml:space="preserve">
          <source>If applicable, please include details on what the user should do to correct the error; documenting an error as indicating &quot;the input buffer is too small&quot; without telling the user how to increase the size of the input buffer (or at least telling them that it isn't possible) aren't very useful.</source>
          <target state="translated">Если применимо,пожалуйста,включите подробности о том,что пользователь должен сделать,чтобы исправить ошибку;документирование ошибки как указание &quot;входной буфер слишком мал&quot;,не говоря пользователю,как увеличить размер входного буфера (или,по крайней мере,сказав,что это невозможно),не очень полезно.</target>
        </trans-unit>
        <trans-unit id="17ebb7f065dcd7d1005a6e70cd7fc9ddab662a16" translate="yes" xml:space="preserve">
          <source>If argument is specified, it is an advice on minimal size of line to be included into history. &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; means do not include anything into history. Returns the old value.</source>
          <target state="translated">Если указан аргумент, это совет по минимальному размеру строки для включения в историю. &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; означает, что ничего не заносить в историю. Возвращает старое значение.</target>
        </trans-unit>
        <trans-unit id="fd699eb48fd240fe4a2bcf57e3a3520a6ee8d6f2" translate="yes" xml:space="preserve">
          <source>If backward compatibility for Perls under 5.6 is important, one must write instead a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; statement.</source>
          <target state="translated">Если важна обратная совместимость для Perls до &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; 5.6, следует написать вместо нее оператор &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars .</target>
        </trans-unit>
        <trans-unit id="b7d0b9799b974e77c25f857fd60005fd09516395" translate="yes" xml:space="preserve">
          <source>If bits is 4 or less, the string is broken into bytes, then the bits of each byte are broken into 8/BITS groups. Bits of a byte are numbered in a little-endian-ish way, as in &lt;code&gt;0x01&lt;/code&gt; , &lt;code&gt;0x02&lt;/code&gt; , &lt;code&gt;0x04&lt;/code&gt; , &lt;code&gt;0x08&lt;/code&gt; , &lt;code&gt;0x10&lt;/code&gt; , &lt;code&gt;0x20&lt;/code&gt; , &lt;code&gt;0x40&lt;/code&gt; , &lt;code&gt;0x80&lt;/code&gt; . For example, breaking the single input byte &lt;code&gt;&lt;a href=&quot;chr&quot;&gt;chr(0x36)&lt;/a&gt;&lt;/code&gt; into two groups gives a list &lt;code&gt;(0x6, 0x3)&lt;/code&gt; ; breaking it into 4 groups gives &lt;code&gt;(0x2, 0x1, 0x3, 0x0)&lt;/code&gt; .</source>
          <target state="translated">Если битов 4 или меньше, строка разбивается на байты, затем биты каждого байта разбиваются на группы 8 / BITS. Биты байта пронумерованы по принципу little-endian, как в &lt;code&gt;0x01&lt;/code&gt; , &lt;code&gt;0x02&lt;/code&gt; , &lt;code&gt;0x04&lt;/code&gt; , &lt;code&gt;0x08&lt;/code&gt; , &lt;code&gt;0x10&lt;/code&gt; , &lt;code&gt;0x20&lt;/code&gt; , &lt;code&gt;0x40&lt;/code&gt; , &lt;code&gt;0x80&lt;/code&gt; . Например, &lt;code&gt;&lt;a href=&quot;chr&quot;&gt;chr(0x36)&lt;/a&gt;&lt;/code&gt; одного входного байта chr (0x36) на две группы дает список &lt;code&gt;(0x6, 0x3)&lt;/code&gt; ; разбив его на 4 группы, вы &lt;code&gt;(0x2, 0x1, 0x3, 0x0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77d4537f5763ddf89d58388ac5f77f55fec21e75" translate="yes" xml:space="preserve">
          <source>If bits is 4 or less, the string is broken into bytes, then the bits of each byte are broken into 8/BITS groups. Bits of a byte are numbered in a little-endian-ish way, as in &lt;code&gt;0x01&lt;/code&gt; , &lt;code&gt;0x02&lt;/code&gt; , &lt;code&gt;0x04&lt;/code&gt; , &lt;code&gt;0x08&lt;/code&gt; , &lt;code&gt;0x10&lt;/code&gt; , &lt;code&gt;0x20&lt;/code&gt; , &lt;code&gt;0x40&lt;/code&gt; , &lt;code&gt;0x80&lt;/code&gt; . For example, breaking the single input byte &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(0x36)&lt;/a&gt;&lt;/code&gt; into two groups gives a list &lt;code&gt;(0x6, 0x3)&lt;/code&gt; ; breaking it into 4 groups gives &lt;code&gt;(0x2, 0x1, 0x3, 0x0)&lt;/code&gt; .</source>
          <target state="translated">Если битов 4 или меньше, строка разбивается на байты, затем биты каждого байта разбиваются на группы 8 / BITS. Биты байта пронумерованы по принципу little-endian, как в &lt;code&gt;0x01&lt;/code&gt; , &lt;code&gt;0x02&lt;/code&gt; , &lt;code&gt;0x04&lt;/code&gt; , &lt;code&gt;0x08&lt;/code&gt; , &lt;code&gt;0x10&lt;/code&gt; , &lt;code&gt;0x20&lt;/code&gt; , &lt;code&gt;0x40&lt;/code&gt; , &lt;code&gt;0x80&lt;/code&gt; . Например, &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(0x36)&lt;/a&gt;&lt;/code&gt; одного входного байта chr (0x36) на две группы дает список &lt;code&gt;(0x6, 0x3)&lt;/code&gt; ; разбив его на 4 группы, вы &lt;code&gt;(0x2, 0x1, 0x3, 0x0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf0f5d848a9043e820336aaa7c2b5b535010685b" translate="yes" xml:space="preserve">
          <source>If both arguments to &lt;code&gt;copy&lt;/code&gt; are not file handles, then &lt;code&gt;copy&lt;/code&gt; will perform a &quot;system copy&quot; of the input file to a new output file, in order to preserve file attributes, indexed file structure,</source>
          <target state="translated">Если оба аргумента для &lt;code&gt;copy&lt;/code&gt; не являются дескрипторами файла, то при &lt;code&gt;copy&lt;/code&gt; будет выполнено &amp;laquo;системное копирование&amp;raquo; входного файла в новый выходной файл, чтобы сохранить атрибуты файла, структуру индексированного файла,</target>
        </trans-unit>
        <trans-unit id="e9104a77e501731bf3173e5f8cc7012527cca560" translate="yes" xml:space="preserve">
          <source>If both the SIGNAL and the PROCESS are negative, the results are undefined. A warning may be produced in a future version.</source>
          <target state="translated">Если и СИГНАЛ,и ПРОЦЕСС отрицательны,результаты не определены.Предупреждение может быть выдано в будущей версии.</target>
        </trans-unit>
        <trans-unit id="43c2b718c80fc2756eb63ba9991217396d36da72" translate="yes" xml:space="preserve">
          <source>If braces are not needed to specify a property (e.g., &lt;code&gt;\pL&lt;/code&gt; ), the left column contains both forms, with and without braces.</source>
          <target state="translated">Если фигурные скобки не нужны для указания свойства (например, &lt;code&gt;\pL&lt;/code&gt; ), левый столбец содержит обе формы с фигурными скобками и без них.</target>
        </trans-unit>
        <trans-unit id="0a4169e83148646605b11ff599e0ccd6579a7d78" translate="yes" xml:space="preserve">
          <source>If branches are involved (ie. $Revision: 1.5.3.4$) it's a little more complicated.</source>
          <target state="translated">Если вовлечены ветки (т.е.$Revision:1.5.3.4$),то это немного сложнее.</target>
        </trans-unit>
        <trans-unit id="2c319407a62fb715df8d4d26f7931f9374106237" translate="yes" xml:space="preserve">
          <source>If building natively on PASE, please do the build under the /QOpenSys directory, since Perl is happier when built on a case sensitive filesystem.</source>
          <target state="translated">При сборке на PASE,пожалуйста,выполняйте сборку в каталоге /QOpenSys,так как Perl счастливее,если он построен на файловой системе,чувствительной к регистру.</target>
        </trans-unit>
        <trans-unit id="2edb493675bf68411bac8372236ccf07c63ce62d" translate="yes" xml:space="preserve">
          <source>If building with the cross-compiler provided by mingw-w64.sourceforge.net you'll need to uncomment the line that sets GCCCROSS in the makefile.mk. Do this only if it's the cross-compiler - ie only if the bin folder doesn't contain a gcc.exe. (The cross-compiler does not provide a gcc.exe, g++.exe, ar.exe, etc. Instead, all of these executables are prefixed with 'x86_64-w64-mingw32-'.)</source>
          <target state="translated">При сборке с помощью кросс-компилятора,предоставляемого mingw-w64.sourceforge.net,необходимо снять комментарий со строки,устанавливающей GCCCROSS в makefile.mk.Делайте это только если это кросс-компилятор-т.е.только если папка bin не содержит gcc.exe.(Кросс-компилятор не предоставляет gcc.exe,g++.exe,ar.exe и т.д.).Вместо этого все эти исполняемые файлы имеют префикс 'x86_64-w64-mingw32-').</target>
        </trans-unit>
        <trans-unit id="9e17d613e1404f153f1b0ce16d928004818ba4b8" translate="yes" xml:space="preserve">
          <source>If by daemon process you mean one that's detached (disassociated from its tty), then the following process is reported to work on most Unixish systems. Non-Unix users should check their Your_OS::Process module for other solutions.</source>
          <target state="translated">Если под демоническим процессом вы подразумеваете процесс,который отделен от tty,то,как сообщается,следующий процесс работает на большинстве Unixish-систем.Пользователи,не являющиеся UNUnix,должны проверить свой модуль Your_OS::Process на наличие других решений.</target>
        </trans-unit>
        <trans-unit id="f14156857ddead4c835ba55e44d3f79ccfb246a2" translate="yes" xml:space="preserve">
          <source>If by some reasons</source>
          <target state="translated">Если по каким-либо причинам</target>
        </trans-unit>
        <trans-unit id="85a1911ef5d789d9bb6809a0f2c6b323a8f5cec0" translate="yes" xml:space="preserve">
          <source>If callbacks are used, they will be issued before this call returns.</source>
          <target state="translated">При использовании обратных вызовов они будут выданы до того,как этот вызов будет возвращен.</target>
        </trans-unit>
        <trans-unit id="706aad3a29650f166c943e5c886b39dcd0a4394e" translate="yes" xml:space="preserve">
          <source>If called as &lt;code&gt;sv_vcatpvfn&lt;/code&gt; or flags include &lt;code&gt;SV_GMAGIC&lt;/code&gt; , calls get magic.</source>
          <target state="translated">Если &lt;code&gt;sv_vcatpvfn&lt;/code&gt; как sv_vcatpvfn или флаги включают &lt;code&gt;SV_GMAGIC&lt;/code&gt; , вызовы становятся волшебными.</target>
        </trans-unit>
        <trans-unit id="614a0f52f1c33eb959730f1d5d32f8786b9d57d8" translate="yes" xml:space="preserve">
          <source>If called as an instance method (i.e. $md5-&amp;gt;new) it will just reset the state the object to the state of a newly created object. No new object is created in this case.</source>
          <target state="translated">Если вызывается как метод экземпляра (например, $ md5-&amp;gt; new), он просто сбрасывает состояние объекта до состояния вновь созданного объекта. В этом случае новый объект не создается.</target>
        </trans-unit>
        <trans-unit id="8679ce9e8862eb205bcd677039372fd6e97a03da" translate="yes" xml:space="preserve">
          <source>If called in a list context and the global variable &lt;code&gt;$INSTANCES&lt;/code&gt; is a true value, it will return a list of the full paths to instances of the binary where found in &lt;code&gt;PATH&lt;/code&gt; , or an empty list if it was not found.</source>
          <target state="translated">Если &lt;code&gt;$INSTANCES&lt;/code&gt; в контексте списка и глобальная переменная $ INSTANCES является истинным значением, она вернет список полных путей к экземплярам двоичного файла, найденным в &lt;code&gt;PATH&lt;/code&gt; , или пустой список, если он не был найден.</target>
        </trans-unit>
        <trans-unit id="b8293e343dafdb403ea7c5d5ddbde243205b61a6" translate="yes" xml:space="preserve">
          <source>If called in a list context, it will return a list of the full paths to instances of the binary where found in &lt;code&gt;PATH&lt;/code&gt; , or an empty list if it was not found.</source>
          <target state="translated">Если вызывается в контексте списка, он вернет список полных путей к экземплярам двоичного &lt;code&gt;PATH&lt;/code&gt; , найденным в PATH , или пустой список, если он не был найден.</target>
        </trans-unit>
        <trans-unit id="522ffa67a9fbac5fe032f13cc8e4e97e4f0b245b" translate="yes" xml:space="preserve">
          <source>If called in a scalar context it will return the full path to the binary you asked for if it was found, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if it was not.</source>
          <target state="translated">При вызове в скалярном контексте он вернет полный путь к запрашиваемому вами двоичному файлу, если он был найден, или &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , если его нет.</target>
        </trans-unit>
        <trans-unit id="5e86b593d758e5e3c8998823e4b17f5dfdc961bc" translate="yes" xml:space="preserve">
          <source>If called in scalar context, only the filehandle is returned and the file will automatically be deleted when closed on operating systems that support this (see the description of tmpfile() elsewhere in this document). This is the preferred mode of operation, as if you only have a filehandle, you can never create a race condition by fumbling with the filename. On systems that can not unlink an open file or can not mark a file as temporary when it is opened (for example, Windows NT uses the C</source>
          <target state="translated">При вызове в контексте скаляра возвращается только файловый менеджер,и файл будет автоматически удален при закрытии на операционных системах,поддерживающих это (см.описание функции tmpfile()в другом месте этого документа).Это предпочтительный режим работы,так как если у вас только файловый менеджер,вы никогда не сможете создать условия гонки,перепутав имя файла.На системах,которые не могут развязать открытый файл или не могут пометить файл как временный при его открытии (например,Windows NT использует C</target>
        </trans-unit>
        <trans-unit id="c83187abf3e8e59deed13ec45be5007e63c321fb" translate="yes" xml:space="preserve">
          <source>If called with a property that doesn't have synonyms for its values, it returns the input value, possibly normalized with capitalization and underscores, but not necessarily checking that the input value is valid.</source>
          <target state="translated">Если вызывается свойство,не имеющее синонимов для своих значений,оно возвращает входное значение,возможно,нормированное с заглавными буквами и подчеркиванием,но не обязательно проверяет,является ли входное значение действительным.</target>
        </trans-unit>
        <trans-unit id="abcbf5b218ac08698c7495d3bca85cf2f5fc593a" translate="yes" xml:space="preserve">
          <source>If called with an argument &lt;code&gt;blocking&lt;/code&gt; will turn on non-blocking IO if &lt;code&gt;BOOL&lt;/code&gt; is false, and turn it off if &lt;code&gt;BOOL&lt;/code&gt; is true.</source>
          <target state="translated">При вызове с аргументом &lt;code&gt;blocking&lt;/code&gt; включит неблокирующий ввод-вывод, если &lt;code&gt;BOOL&lt;/code&gt; имеет значение false, и выключит, если &lt;code&gt;BOOL&lt;/code&gt; имеет значение true.</target>
        </trans-unit>
        <trans-unit id="cd8fbca057a7b0f8546bef2e8eba78cd01155b5c" translate="yes" xml:space="preserve">
          <source>If called with an argument the &lt;code&gt;list&lt;/code&gt; returns the size of the message in octets.</source>
          <target state="translated">Если вызывается с аргументом, &lt;code&gt;list&lt;/code&gt; возвращает размер сообщения в октетах.</target>
        </trans-unit>
        <trans-unit id="d3101b42b801bc480044d4583af8814cf3a6fda1" translate="yes" xml:space="preserve">
          <source>If called without arguments a reference to a hash is returned. The keys will be the &lt;code&gt;MSGNUM&lt;/code&gt; 's of all undeleted messages and the values will be their size in octets.</source>
          <target state="translated">При вызове без аргументов возвращается ссылка на хэш. Ключами будут &lt;code&gt;MSGNUM&lt;/code&gt; всех восстановленных сообщений, а значениями - их размер в октетах.</target>
        </trans-unit>
        <trans-unit id="e77963c1065ed922557c941a37ed57186c92ec48" translate="yes" xml:space="preserve">
          <source>If capturing parenthesis are used in a regular expression, we can refer to the part of the source string that was matched, and match exactly the same thing. There are three ways of referring to such</source>
          <target state="translated">Если в регулярном выражении используются каппинговые скобки,то мы можем ссылаться на ту часть исходной строки,которая была сопоставлена,и совпадать точно с той же самой.Есть три способа ссылаться на такой</target>
        </trans-unit>
        <trans-unit id="8ef19162a844967deef3f5d85d04764641f71041" translate="yes" xml:space="preserve">
          <source>If compiled with &lt;code&gt;-DPERL_MEM_LOG&lt;/code&gt; , both memory and SV allocations go through logging functions, which is handy for breakpoint setting.</source>
          <target state="translated">Если скомпилирован с &lt;code&gt;-DPERL_MEM_LOG&lt;/code&gt; , как память, так и выделение SV проходят через функции регистрации, что удобно для установки точки останова.</target>
        </trans-unit>
        <trans-unit id="505c257963541e6d1081b0bfdec05dc2d7991e03" translate="yes" xml:space="preserve">
          <source>If constant folding was not performed, the execution-order thread is created.</source>
          <target state="translated">Если постоянное сгибание не было выполнено,создается поток выполнения заказа.</target>
        </trans-unit>
        <trans-unit id="9c0592ae26e8bb261300ebbed2b588cacc05e4ff" translate="yes" xml:space="preserve">
          <source>If cross-compiling, this variable can be used to modify the environment on the target system. However, how and where it's used, and even if it's used at all, is entirely dependent on both the transport mechanism (targetrun) and what the target system is. Unless the relevant documentation says otherwise, it is genereally not useful.</source>
          <target state="translated">При кросс-компиляции эта переменная может быть использована для изменения окружения на целевой системе.Однако,как и где она используется,и даже если используется вообще,полностью зависит как от транспортного механизма (targetrun),так и от того,что такое целевая система.Если в соответствующей документации не указано иное,это не является полезным с точки зрения жанра.</target>
        </trans-unit>
        <trans-unit id="c66c617b16e576e77dc9dc8e186d44f33fe447f3" translate="yes" xml:space="preserve">
          <source>If cross-compiling, this variable contains the location of sh on the target system. If not, this will be the same as $sh.</source>
          <target state="translated">При кросс-компиляции эта переменная содержит местоположение sh на целевой системе.Если нет,то это будет то же самое,что и $sh.</target>
        </trans-unit>
        <trans-unit id="60357fb3a62a70cdf0b8804a617b55fe7b82dc59" translate="yes" xml:space="preserve">
          <source>If cross-compiling, this variable contains the target architecture. If not, this will be empty.</source>
          <target state="translated">При кросс-компиляции эта переменная содержит целевую архитектуру.Если нет,то она будет пустой.</target>
        </trans-unit>
        <trans-unit id="e5ce981aa84829db1548a6d11516c6b5fa9cbc60" translate="yes" xml:space="preserve">
          <source>If d_procselfexe is defined, $procselfexe is the filename of the symbolic link pointing to the absolute pathname of the executing program.</source>
          <target state="translated">Если определено значение d_procselfexe,то $procselfexe-это имя файла символической ссылки,указывающего на абсолютный путь выполняющейся программы.</target>
        </trans-unit>
        <trans-unit id="dc4c096ee5da0f37bd52c68590795a5281826f8c" translate="yes" xml:space="preserve">
          <source>If declared at the outermost scope (the file scope), then lexicals work somewhat like C's file statics. They are available to all functions in that same file declared below them, but are inaccessible from outside that file. This strategy is sometimes used in modules to create private variables that the whole module can see.</source>
          <target state="translated">Если они объявлены в самой внешней области видимости (файловой области видимости),то лексики работают в некоторой степени как файловая статика С.Они доступны для всех функций в том же самом объявленном под ними файле,но недоступны извне этого файла.Эта стратегия иногда используется в модулях для создания приватных переменных,которые видит весь модуль.</target>
        </trans-unit>
        <trans-unit id="6ae3059e06d397630c09d4c165cce518cf89f33b" translate="yes" xml:space="preserve">
          <source>If defined specifies whether color output is desired. If &lt;code&gt;color&lt;/code&gt; is not defined it will default to color output if color support is available on the current platform and output is not being redirected.</source>
          <target state="translated">Если определено, указывает, требуется ли цветной вывод. Если &lt;code&gt;color&lt;/code&gt; не определен, по умолчанию будет использоваться цветной вывод, если поддержка цвета доступна на текущей платформе и вывод не перенаправляется.</target>
        </trans-unit>
        <trans-unit id="dc3bd5a9c7fbd30c1f819a008f41219b5c451f73" translate="yes" xml:space="preserve">
          <source>If desired, an optional hash-ref may be specified as the first argument to customize certain aspects of the parse-tree that is created and returned. The set of recognized option keywords are:</source>
          <target state="translated">При желании в качестве первого аргумента для настройки некоторых аспектов создаваемого и возвращаемого дерева разбора можно указать необязательный хэш-файл.Набор распознаваемых ключевых слов опции:</target>
        </trans-unit>
        <trans-unit id="c417457bb41c44d12dd8e05efc098db997c407b3" translate="yes" xml:space="preserve">
          <source>If developing modules for private internal or project specific use, that will never be released to the public, then you should ensure that their names will not clash with any future public module. You can do this either by using the reserved Local::* category or by using a category name that includes an underscore like Foo_Corp::*.</source>
          <target state="translated">Если вы разрабатываете модули для частного внутреннего или проектного использования,которые никогда не будут выпущены для всеобщего доступа,то вы должны убедиться,что их имена не будут конфликтовать с любыми будущими публичными модулями.Вы можете сделать это либо с помощью зарезервированной категории Local::*,либо с помощью имени категории,содержащего символ подчеркивания типа Foo_Corp::*.</target>
        </trans-unit>
        <trans-unit id="1bf0d1f77248c2c58d4104ac428f32e38cbba679" translate="yes" xml:space="preserve">
          <source>If either (or both!) is a subroutine reference, it is run and used as the value for comparing. For example:</source>
          <target state="translated">Если любая из подпрограмм (или обе!)является ссылкой на подпрограмму,она запускается и используется в качестве значения для сравнения.Например:</target>
        </trans-unit>
        <trans-unit id="0201c4d3bcdfd14f6a2e27e712be0d303b850c91" translate="yes" xml:space="preserve">
          <source>If either name is unknown, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned. Note that Perl typically recognizes property names in regular expressions with an optional &lt;code&gt;&quot;Is_&lt;/code&gt; &quot; (with or without the underscore) prefixed to them, such as &lt;code&gt;\p{isgc=punct}&lt;/code&gt; . This function does not recognize those in the property parameter, returning &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если какое-либо имя неизвестно, возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Обратите внимание, что Perl обычно распознает имена свойств в регулярных выражениях с дополнительным &lt;code&gt;&quot;Is_&lt;/code&gt; &amp;raquo; (с подчеркиванием или без него), например &lt;code&gt;\p{isgc=punct}&lt;/code&gt; . Эта функция не распознает те, что указаны в параметре свойства, возвращая &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3926f5454427802efbe3e6cffcb07732270c9a24" translate="yes" xml:space="preserve">
          <source>If either operand of scalar &lt;code&gt;&quot;..&quot;&lt;/code&gt; is a constant expression, that operand is considered true if it is equal (&lt;code&gt;==&lt;/code&gt; ) to the current input line number (the &lt;code&gt;$.&lt;/code&gt; variable).</source>
          <target state="translated">Если любой из операндов скаляра &lt;code&gt;&quot;..&quot;&lt;/code&gt; является постоянным выражением, этот операнд считается истинным, если он равен ( &lt;code&gt;==&lt;/code&gt; ) текущему номеру строки ввода ( переменная &lt;code&gt;$.&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f99b132bd00ba92228931c93b4096f125672ade0" translate="yes" xml:space="preserve">
          <source>If either reader or writer is the null string, this will be replaced by an autogenerated filehandle. If so, you must pass a valid lvalue in the parameter slot so it can be overwritten in the caller, or an exception will be raised.</source>
          <target state="translated">Если нулевой строкой является либо читатель,либо писатель,то она будет заменена на автогенерированную файловую обработку.Если это так,то вы должны передать действительное значение l в слоте параметров,чтобы оно могло быть перезаписано в вызывающем устройстве,или будет поднято исключение.</target>
        </trans-unit>
        <trans-unit id="c51794930a0cb952da1b5da2c73c8a1455bd1093" translate="yes" xml:space="preserve">
          <source>If embedded documentation (in pod format, see &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt;) is detected in the script, &lt;code&gt;--help&lt;/code&gt; will also show how to access the documentation.</source>
          <target state="translated">Если встроенная документация (в формате pod, см. &lt;a href=&quot;../perlpod&quot;&gt;Perlpod&lt;/a&gt; ) обнаружена в скрипте, &lt;code&gt;--help&lt;/code&gt; также покажет, как получить доступ к документации.</target>
        </trans-unit>
        <trans-unit id="29d066b26000935ae7bb2e10a40ebaebacd4b8b0" translate="yes" xml:space="preserve">
          <source>If enabled, case is ignored when matching option names. If, however, bundling is enabled as well, single character options will be treated case-sensitive.</source>
          <target state="translated">Если включена,регистр игнорируется при совпадении имен опций.Если,однако,включена и опция &quot;Пакетирование&quot;,односимвольные опции будут обработаны с учетом регистра.</target>
        </trans-unit>
        <trans-unit id="db7040756e9968d1786c608e978b27880a9b3f0b" translate="yes" xml:space="preserve">
          <source>If everything else fails, you need to build a stand-alone DLL for perl. Contact me, I did it once. Sockets would not work, as a lot of other stuff.</source>
          <target state="translated">Если все остальное провалится,вам нужно построить отдельную DLL для perl.Свяжись со мной,я сделал это однажды.Розетки не сработают,как и многие другие вещи.</target>
        </trans-unit>
        <trans-unit id="3a7b09ae5de32a801bf3504292c1ba7f8a26bf8f" translate="yes" xml:space="preserve">
          <source>If exception handling is all you're interested in, use one of the many CPAN modules that handle exceptions, such as &lt;a href=&quot;http://search.cpan.org/perldoc/Try::Tiny&quot;&gt;Try::Tiny&lt;/a&gt;.</source>
          <target state="translated">Если все, что вас интересует, - это обработка исключений, используйте один из многих модулей CPAN, обрабатывающих исключения, например &lt;a href=&quot;http://search.cpan.org/perldoc/Try::Tiny&quot;&gt;Try :: Tiny&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="24299a423807f4b77a396032f4cc65f70fe49537" translate="yes" xml:space="preserve">
          <source>If explicitly enabled by</source>
          <target state="translated">Если явно разрешено</target>
        </trans-unit>
        <trans-unit id="8ede30fd7e2f6fae82106f61a77ef1de04cb5cb3" translate="yes" xml:space="preserve">
          <source>If false, STDERR is not captured (though it is 'relayed' to keep it somewhat synchronized with STDOUT.)</source>
          <target state="translated">Если false,то STDERR не захватывается (хотя он &quot;ретранслируется&quot;,чтобы сохранить некоторую синхронизацию с STDOUT).</target>
        </trans-unit>
        <trans-unit id="9b5838f52003c96db3e6bffb7f5e0838c7d79e5c" translate="yes" xml:space="preserve">
          <source>If false, readline support in the debugger is disabled in order to debug applications that themselves use ReadLine.</source>
          <target state="translated">В случае ложного срабатывания поддержка readline в отладчике отключается для отладки приложений,которые сами используют ReadLine.</target>
        </trans-unit>
        <trans-unit id="b1fe899108d979b4e6baf329c011d799eeebe85b" translate="yes" xml:space="preserve">
          <source>If filenames might use strange characters, it is safest to open it with &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; is magic and can translate characters like &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt; , and &lt;code&gt;|&lt;/code&gt;, which may be the wrong thing to do. (Sometimes, though, it's the right thing.) Three-arg open can also help protect against this translation in cases where it is undesirable.</source>
          <target state="translated">Если в именах файлов могут использоваться странные символы, безопаснее открыть его с помощью &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; , а не &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; - это волшебство и может переводить такие символы, как &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; и &lt;code&gt;|&lt;/code&gt; , что может быть неправильным. (Иногда, однако, это правильно.) Открытие с тремя аргументами также может помочь защитить от этого перевода в тех случаях, когда это нежелательно.</target>
        </trans-unit>
        <trans-unit id="5ca04d4d675b32f985d24c749a113dd2e8503548" translate="yes" xml:space="preserve">
          <source>If find is used in taint-mode (-T command line switch or if EUID != UID or if EGID != GID) then internally directory names have to be untainted before they can be chdir'ed to. Therefore they are checked against a regular expression</source>
          <target state="translated">Если find используется в taint-mode (переключатель командной строки -T или если EUID !=UID или если EGID !=GID),то имена внутренних каталогов должны быть недоступны для chdir'ed.Поэтому они проверяются на соответствие регулярному выражению</target>
        </trans-unit>
        <trans-unit id="ae542d10e971a673bbde2971d115357debc351d4" translate="yes" xml:space="preserve">
          <source>If flags contains PERL_PV_ESCAPE_QUOTE then any double quotes in the string will also be escaped.</source>
          <target state="translated">Если флаги содержат PERL_PV_ESCAPE_QUOTE,то любые двойные кавычки в строке также будут экранированы.</target>
        </trans-unit>
        <trans-unit id="5f11c4bbd633be0ac4ec3da7d6d4106626b272c7" translate="yes" xml:space="preserve">
          <source>If for some reason you want to have complete control over the data connection, this includes generating it and calling the &lt;code&gt;response&lt;/code&gt; method when required, then the user can use these methods to do so.</source>
          <target state="translated">Если по какой-то причине вы хотите иметь полный контроль над подключением к данным, это включает его создание и вызов метода &lt;code&gt;response&lt;/code&gt; когда это необходимо, тогда пользователь может использовать эти методы для этого.</target>
        </trans-unit>
        <trans-unit id="33f20d3ebb86a1fb4909973670b43aa80acbb4c8" translate="yes" xml:space="preserve">
          <source>If hash values couldn't be lists, you lose. You'd probably have to combine all the cities into a single string somehow, and then when time came to write the output, you'd have to break the string into a list, sort the list, and turn it back into a string. This is messy and error-prone. And it's frustrating, because Perl already has perfectly good lists that would solve the problem if only you could use them.</source>
          <target state="translated">Если хэш-значения не могут быть списками,ты проигрываешь.Вам,наверное,пришлось бы как-то объединить все города в одну строку,а потом,когда пришло время писать вывод,вам пришлось бы разбить строку на список,отсортировать список и превратить его обратно в строку.Это грязно и предрасположено к ошибкам.И это расстраивает,потому что у Perl уже есть отличные списки,которые бы решили проблему,если бы вы только могли их использовать.</target>
        </trans-unit>
        <trans-unit id="7e8d248524799b9e3f004b01925fdada9567cc4f" translate="yes" xml:space="preserve">
          <source>If i&amp;lt;checked_at&amp;gt; is a reference to a scalar, then instead it gives the characters pre-checked at the beginning, (and the number of chars by which the C variable name has been advanced. These need to be chopped from the front of</source>
          <target state="translated">Если i &amp;lt;checked_at&amp;gt; является ссылкой на скаляр, то вместо этого он дает символы, предварительно проверенные в начале, (и количество символов, на которое было продвинуто имя переменной C. Они должны быть вырезаны с начала</target>
        </trans-unit>
        <trans-unit id="0cd56861a4473054d59049046296e1c9cc1b21dc" translate="yes" xml:space="preserve">
          <source>If illegalproto warnings are enabled, the prototype declared inside this attribute will be sanity checked at compile time.</source>
          <target state="translated">При включённом предупреждении нелегального прототипа,объявленный внутри этого атрибута,будет проверяться на вменяемость во время компиляции.</target>
        </trans-unit>
        <trans-unit id="4d3aefb53a3e40d895443465bbfd3168415b47af" translate="yes" xml:space="preserve">
          <source>If in doubt, break the expression into simpler terms, or cast all operands to the desired resulting type.</source>
          <target state="translated">В случае сомнений,разбить выражение на более простые термины или привести все операнды к желаемому результирующему типу.</target>
        </trans-unit>
        <trans-unit id="ce224243c2c27e9c319eeded5da4d7520f7a48e0" translate="yes" xml:space="preserve">
          <source>If instead of the recommended GNU make you would like to use the system supplied make program then be sure to install the default rules file properly via the shell command:</source>
          <target state="translated">Если вместо рекомендуемой GNU сделать так,чтобы вы хотели пользоваться поставляемой системой make,то убедитесь,что файл с правилами по умолчанию установлен правильно с помощью команды командной строки оболочки:</target>
        </trans-unit>
        <trans-unit id="8c224a826076db854fafc0daefe6f5025badc4ce" translate="yes" xml:space="preserve">
          <source>If instead you intended to match the word 'foo' at the end of the line followed by whitespace and the word 'bar' on the next line then you can use &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/$(?)\/&lt;/a&gt;&lt;/code&gt; (for example: &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/foo$(?)\s+bar/&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Если вместо этого вы намеревались сопоставить слово 'foo' в конце строки, за которым следует пробел, и слово 'bar' в следующей строке, вы можете использовать &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/$(?)\/&lt;/a&gt;&lt;/code&gt; (Например: &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/foo$(?)\s+bar/&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d03def7cbe4cc9c7f39111662b050f07a1bc1197" translate="yes" xml:space="preserve">
          <source>If instead you want to sort the array @key with the comparison routine &lt;code&gt;find_records()&lt;/code&gt; then you can use:</source>
          <target state="translated">Если вместо этого вы хотите отсортировать массив @key с помощью процедуры сравнения &lt;code&gt;find_records()&lt;/code&gt; вы можете использовать:</target>
        </trans-unit>
        <trans-unit id="d1fc62400435ca2b18e437e1de72ea45d0c40705" translate="yes" xml:space="preserve">
          <source>If invalid, a &lt;code&gt;Malformed UTF-8 character&lt;/code&gt; warning is produced. The &quot;C0&quot; means &quot;process the string character per character&quot;. Without that, the &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;(&quot;U*&quot;, ...)&lt;/code&gt; would work in &lt;code&gt;U0&lt;/code&gt; mode (the default if the format string starts with &lt;code&gt;U&lt;/code&gt; ) and it would return the bytes making up the UTF-8 encoding of the target string, something that will always work.</source>
          <target state="translated">Если он недействителен, &lt;code&gt;Malformed UTF-8 character&lt;/code&gt; предупреждение о неверном формате UTF-8 . &amp;laquo;C0&amp;raquo; означает &amp;laquo;обрабатывать строковый символ за символ&amp;raquo;. Без этого &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;(&quot;U*&quot;, ...)&lt;/code&gt; будет работать в режиме &lt;code&gt;U0&lt;/code&gt; (по умолчанию, если строка формата начинается с &lt;code&gt;U&lt;/code&gt; ), и он вернет байты, составляющие кодировку UTF-8 целевой строки, что-то это всегда будет работать.</target>
        </trans-unit>
        <trans-unit id="51c33e52f177d40ae2c3679305c70e4a9572745e" translate="yes" xml:space="preserve">
          <source>If it ain't broke, don't fix it! Perl 4 library scripts should continue to work with no problems. You may need to make some minor changes (like escaping non-array @'s in double quoted strings) but there is no need to convert a .pl file into a Module for just that.</source>
          <target state="translated">Если он не сломался,не чини его! Скрипты библиотеки Perl 4 должны продолжать работать без проблем.Вам может понадобиться внести некоторые незначительные изменения (например,экранирование не массива @ в двойных кавычках),но для этого нет необходимости преобразовывать .pl-файл в Модуль.</target>
        </trans-unit>
        <trans-unit id="5ae3aaa5715ffc32724b48d8610f7a354399dcc4" translate="yes" xml:space="preserve">
          <source>If it does not yet provide support for any encoding, one could write a derived class with such a &lt;code&gt;param&lt;/code&gt; method:</source>
          <target state="translated">Если он еще не обеспечивает поддержку для любого кодирования, можно был бы написать производный класс с такими &lt;code&gt;param&lt;/code&gt; способом:</target>
        </trans-unit>
        <trans-unit id="6ed0026aa4685c99082bcd85012c95fb26671228" translate="yes" xml:space="preserve">
          <source>If it is defined and perl is compiled with the C macro &lt;code&gt;DL_UNLOAD_ALL_AT_EXIT&lt;/code&gt; defined, then it is called automatically when the interpreter exits for every shared object or library loaded by DynaLoader::bootstrap. All such library references are stored in @dl_librefs by DynaLoader::Bootstrap as it loads the libraries. The files are unloaded in last-in, first-out order.</source>
          <target state="translated">Если он определен и perl скомпилирован с определенным макросом C &lt;code&gt;DL_UNLOAD_ALL_AT_EXIT&lt;/code&gt; , то он вызывается автоматически, когда интерпретатор завершает работу для каждого общего объекта или библиотеки, загруженной DynaLoader :: bootstrap. Все такие ссылки на библиотеки хранятся в @dl_librefs программой DynaLoader :: Bootstrap по мере загрузки библиотек. Файлы выгружаются в порядке очереди.</target>
        </trans-unit>
        <trans-unit id="860a9992a29a5bed07a92916afafcc39c4466897" translate="yes" xml:space="preserve">
          <source>If it is important to you that your bug be fixed, do monitor the perl5-porters@perl.org mailing list (mailing lists are moderated, your message may take a while to show up) and the commit logs to development versions of Perl, and encourage the maintainers with kind words or offers of frosty beverages. (Please do be kind to the maintainers. Harassing or flaming them is likely to have the opposite effect of the one you want.)</source>
          <target state="translated">Если вам важно,чтобы ошибка была исправлена,проследите за списком рассылки perl5-porters@perl.org (списки рассылки модерируются,ваше сообщение может занять некоторое время)и журналами коммитов к разрабатываемым версиям Perl,а также поощряйте мейнтейнеров добрыми словами или предложениями замороженных напитков.(Пожалуйста,будьте добры к сопровождающим.Преследование или поджог их,скорее всего,будет иметь противоположный эффект по сравнению с тем,что вы хотите).</target>
        </trans-unit>
        <trans-unit id="835fcc1c62a963fd6a71d84d2861d08fa2d6dba4" translate="yes" xml:space="preserve">
          <source>If it is impossible to tell from the parameters passed back from the C callback what the context is, then you may need to create a sequence of C callback interface functions, and store pointers to each in an array.</source>
          <target state="translated">Если по параметрам,переданным обратно из C callback,невозможно определить,что такое контекст,то может потребоваться создать последовательность интерфейсных функций C callback,и сохранить указатели на каждый из них в массиве.</target>
        </trans-unit>
        <trans-unit id="5680f195fb6f8f7119b1a5d53970a5a24089ffc3" translate="yes" xml:space="preserve">
          <source>If it is intended that a new perl binary be produced, this variable may hold a name for that binary. Defaults to perl</source>
          <target state="translated">Если предполагается,что будет произведен новый двоичный файл perl,эта переменная может содержать имя этого двоичного файла.По умолчанию используется значение perl</target>
        </trans-unit>
        <trans-unit id="cb1ca7ba722f679f82900212b2623b7a140c3fd8" translate="yes" xml:space="preserve">
          <source>If it persists, you may disable this warnings, see &lt;a href=&quot;#PERL_BADFREE&quot;&gt;PERL_BADFREE&lt;/a&gt;.</source>
          <target state="translated">Если он не исчезнет, ​​вы можете отключить это предупреждение, см. &lt;a href=&quot;#PERL_BADFREE&quot;&gt;PERL_BADFREE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3596d2c66fdea5d09f2cf7238ff867c93df8d69a" translate="yes" xml:space="preserve">
          <source>If it runs thru the entire given list of language-tags, and finds no classes for those exact terms, it then tries &quot;superordinate&quot; language classes. So if no &quot;en-US&quot; class (i.e., YourProjClass::en_us) was found, nor classes for anything else in that list, we then try its superordinate, &quot;en&quot; (i.e., YourProjClass::en), and so on thru the other language-tags in the given list: &quot;es&quot;. (The other language-tags in our example list: happen to have no superordinates.)</source>
          <target state="translated">Если он пробегает через весь приведенный список языковых тегов и не находит классов для этих конкретных терминов,то он пытается использовать &quot;вышестоящие&quot; классы языка.Таким образом,если не найдено ни класса &quot;en-US&quot; (т.е.YourProjClass::en_us),ни классов для чего-либо еще в этом списке,то мы попробуем его вышестоящий класс &quot;en&quot; (т.е.YourProjClass::en),и т.д.через другие теги языка в данном списке:&quot;es&quot;.(У других языковых тегов в нашем списке примеров:так случилось,что у них нет вышестоящих координат).</target>
        </trans-unit>
        <trans-unit id="9e9c27ad93f7400ed6fd8cabde972a2941b1fcc1" translate="yes" xml:space="preserve">
          <source>If it's a regular enough string that it always has the same format, you can split it up and pass the parts to &lt;code&gt;timelocal&lt;/code&gt; in the standard &lt;a href=&quot;time/local&quot;&gt;Time::Local&lt;/a&gt; module. Otherwise, you should look into the &lt;a href=&quot;http://search.cpan.org/perldoc/Date::Calc&quot;&gt;Date::Calc&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Date::Parse&quot;&gt;Date::Parse&lt;/a&gt;, and &lt;a href=&quot;http://search.cpan.org/perldoc/Date::Manip&quot;&gt;Date::Manip&lt;/a&gt; modules from CPAN.</source>
          <target state="translated">Если это достаточно обычная строка, которая всегда имеет один и тот же формат, вы можете разделить ее и передать части &lt;code&gt;timelocal&lt;/code&gt; в стандартном модуле &lt;a href=&quot;time/local&quot;&gt;Time :: Local&lt;/a&gt; . В противном случае вам следует изучить модули &lt;a href=&quot;http://search.cpan.org/perldoc/Date::Calc&quot;&gt;Date :: Calc&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Date::Parse&quot;&gt;Date :: Parse&lt;/a&gt; и &lt;a href=&quot;http://search.cpan.org/perldoc/Date::Manip&quot;&gt;Date :: Manip&lt;/a&gt; из CPAN.</target>
        </trans-unit>
        <trans-unit id="95cd7c9791eb757b708be268b21d99a1603edf51" translate="yes" xml:space="preserve">
          <source>If it's run from a terminal,</source>
          <target state="translated">Если он работает от терминала,</target>
        </trans-unit>
        <trans-unit id="8ec1e5cfa3f1d5f23853bddc58974b89d51e4343" translate="yes" xml:space="preserve">
          <source>If linking miniperl</source>
          <target state="translated">При перекрутке миниперла</target>
        </trans-unit>
        <trans-unit id="4bdbff6d4225cd79b23186ed9cad6253292a76ca" translate="yes" xml:space="preserve">
          <source>If locale matching rules are in effect, the case map is taken from the current locale for code points less than 255, and from Unicode rules for larger code points. However, matches that would cross the Unicode rules/non-Unicode rules boundary (ords 255/256) will not succeed. See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">Если действуют правила сопоставления языковых стандартов, то карта регистра берется из текущего языкового стандарта для кодовых точек меньше 255 и из правил Юникода для более крупных кодовых точек. Однако совпадения, которые пересекают границу правил Unicode / правил не-Unicode (порядки 255/256), не будут успешными. Смотрите &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="763f933c48615038adc7019dfce8f6c0c593c306" translate="yes" xml:space="preserve">
          <source>If locale rules are not in effect, the use of a Unicode property will force the regular expression into using Unicode rules, if it isn't already.</source>
          <target state="translated">Если правила локали не действуют,то использование свойства Юникод заставит регулярное выражение использовать правила Юникода,если это еще не так.</target>
        </trans-unit>
        <trans-unit id="d834fc3f63056ccac9737e1620e9488be6eb7541" translate="yes" xml:space="preserve">
          <source>If maketext goes to look in an individual %Lexicon for an entry for</source>
          <target state="translated">Если Макетекст пойдет искать в индивидуальном %Lexicon для записи для</target>
        </trans-unit>
        <trans-unit id="3e3dcee3a8b9bd973fa29d705bfdb80867c80c81" translate="yes" xml:space="preserve">
          <source>If many functions use the same failure indication based on the return value, you may want to create a special typedef to handle this situation. Put</source>
          <target state="translated">Если многие функции используют одну и ту же индикацию сбоя,основанную на возвращаемом значении,то для обработки этой ситуации может понадобиться создать специальный шрифт typedef.Пишите на .</target>
        </trans-unit>
        <trans-unit id="b606db88e20200612d730cc961241a27da21957f" translate="yes" xml:space="preserve">
          <source>If module is installed, peeks into the module's manpage, reads the headline, and returns it. Moreover, if the module has been downloaded within this session, does the equivalent on the downloaded module even if it hasn't been installed yet.</source>
          <target state="translated">Если модуль установлен,загляните в меню модуля,прочитайте заголовок и верните его.Более того,если модуль был загружен в этом сеансе,делает эквивалент на загруженном модуле,даже если он ещё не был установлен.</target>
        </trans-unit>
        <trans-unit id="dd58d8ff347dcd8c05f67e1fd3ee4d2440157ff1" translate="yes" xml:space="preserve">
          <source>If more arguments are provided then they are all appended to the message, thus all these lines will have the same effect on the state of the $ctx object:</source>
          <target state="translated">Если аргументов больше,то все они добавляются к сообщению,таким образом,все эти строки будут одинаково влиять на состояние объекта $ctx:</target>
        </trans-unit>
        <trans-unit id="d7d32d6074826a3d2d75814ea308b5ddeaca2f3c" translate="yes" xml:space="preserve">
          <source>If more delimiters than escape chars are specified, the last escape char is used for the remaining delimiters. If no escape char is specified for a given specified delimiter, '\' is used.</source>
          <target state="translated">Если указано больше разделителей,чем экранирующих символов,то для остальных используется последняя экранирующая диаграмма.Если для заданного разделителя не указано ни одной управляющей переменной,то используется '\'.</target>
        </trans-unit>
        <trans-unit id="285c13c421c908ec1b5157ff1d11ce664fe6f585" translate="yes" xml:space="preserve">
          <source>If more than one argument is given then the entire argument list is assumed to be a hash. If a hash is supplied (either as a reference or as a list) it should contain one or more elements with the following keys:</source>
          <target state="translated">Если дается более одного аргумента,то весь список аргументов считается хэшем.Если поставляется хэш (как ссылка или как список),он должен содержать один или несколько элементов со следующими ключами:</target>
        </trans-unit>
        <trans-unit id="39e41b545db315dc5126671cc2bd5d88f5c30e3d" translate="yes" xml:space="preserve">
          <source>If more than one restriction of &lt;code&gt;module&lt;/code&gt; , &lt;code&gt;distribution&lt;/code&gt; , etc. is specified, the results of the separately computed match values must all match. If so, the hashref represented by the YAML document is returned as the preference structure for the current distribution.</source>
          <target state="translated">Если указано более одного ограничения &lt;code&gt;module&lt;/code&gt; , &lt;code&gt;distribution&lt;/code&gt; и т. Д., Результаты отдельно вычисленных значений соответствия должны совпадать. Если это так, хэш-ссылка, представленная документом YAML, возвращается в качестве структуры предпочтений для текущего распределения.</target>
        </trans-unit>
        <trans-unit id="da05e2a6f3037e503e2698db0f33736532af13ae" translate="yes" xml:space="preserve">
          <source>If more than one variable is listed, the list must be placed in parentheses.</source>
          <target state="translated">Если список содержит более одной переменной,он должен быть заключен в круглые скобки.</target>
        </trans-unit>
        <trans-unit id="5915108dabbdb47d0e6487842fce0264a4b8c92e" translate="yes" xml:space="preserve">
          <source>If more than one variable is listed, the list must be placed in parentheses. With a parenthesised list, &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; can be used as a dummy placeholder. However, since initialization of state variables in list context is currently not possible this would serve no purpose.</source>
          <target state="translated">Если указано более одной переменной, список должен быть заключен в круглые скобки. Со списком в скобках &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; можно использовать как фиктивный заполнитель. Однако, поскольку инициализация переменных состояния в контексте списка в настоящее время невозможна, это бесполезно.</target>
        </trans-unit>
        <trans-unit id="13f0dd65ec56750a188884a636ba7b4f0428367d" translate="yes" xml:space="preserve">
          <source>If more than one variable is listed, the list must be placed in parentheses. With a parenthesised list, &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; can be used as a dummy placeholder. However, since initialization of state variables in list context is currently not possible this would serve no purpose.</source>
          <target state="translated">Если указано более одной переменной, список должен быть заключен в круглые скобки. Со списком в скобках &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; можно использовать как фиктивный заполнитель. Однако, поскольку инициализация переменных состояния в контексте списка в настоящее время невозможна, это бесполезно.</target>
        </trans-unit>
        <trans-unit id="cc246b70384e8a417eb59e4e6e4575312d9d1e0a" translate="yes" xml:space="preserve">
          <source>If more than one variable or expression is given to &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;, they must be placed in parentheses. This operator works by saving the current values of those variables in its argument list on a hidden stack and restoring them upon exiting the block, subroutine, or eval. This means that called subroutines can also reference the local variable, but not the global one. The argument list may be assigned to if desired, which allows you to initialize your local variables. (If no initializer is given for a particular variable, it is created with an undefined value.)</source>
          <target state="translated">Если в &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; дано несколько переменных или выражений , их необходимо заключить в круглые скобки. Этот оператор работает, сохраняя текущие значения этих переменных в своем списке аргументов в скрытом стеке и восстанавливая их при выходе из блока, подпрограммы или eval. Это означает, что вызываемые подпрограммы также могут ссылаться на локальную переменную, но не на глобальную. При желании можно назначить список аргументов, что позволяет инициализировать локальные переменные. (Если для конкретной переменной не указан инициализатор, она создается с неопределенным значением.)</target>
        </trans-unit>
        <trans-unit id="e6e3db41fbfcf6140e9c02e059dd4c934fd6f5ad" translate="yes" xml:space="preserve">
          <source>If multiple distinct capture groups have the same name then the $+{NAME} will refer to the leftmost defined group in the match.</source>
          <target state="translated">Если несколько различных групп захвата имеют одно и то же имя,то $+{NAME}будет относиться к самой левой определенной группе в матче.</target>
        </trans-unit>
        <trans-unit id="0bfee97a70420feb4c2945973c34123d251dd9c2" translate="yes" xml:space="preserve">
          <source>If multiple files from one program are desired an array ref can be used.</source>
          <target state="translated">При необходимости использования нескольких файлов из одной программы можно использовать ссылку на массив.</target>
        </trans-unit>
        <trans-unit id="081ad6caef0052cfab1aad2ae1061ca747e43248" translate="yes" xml:space="preserve">
          <source>If multiple transliterations are given for a character, only the first one is used:</source>
          <target state="translated">Если для символа задано несколько транслитераций,то используется только первая:</target>
        </trans-unit>
        <trans-unit id="766c6735ff098a4b925a773897fe49012fa4895d" translate="yes" xml:space="preserve">
          <source>If name passed in doesn't specify a readable file, appends</source>
          <target state="translated">Если передаваемое имя не указывает читаемый файл,то добавляется</target>
        </trans-unit>
        <trans-unit id="1afec739c7f1e924deac0edbd4a6af96f74019ce" translate="yes" xml:space="preserve">
          <source>If necessary switch the input stream to handle unicode. This only has any effect for I/O handle based streams.</source>
          <target state="translated">При необходимости переключите входной поток для работы с юникодом.Это имеет эффект только для потоков,основанных на обработке входов/выходов.</target>
        </trans-unit>
        <trans-unit id="1f88753647459114bf0fff92153d71fa3be1ef0c" translate="yes" xml:space="preserve">
          <source>If needed, &lt;code&gt;$new_size&lt;/code&gt; will be rounded up to the next multiple of the memory page size (usually 4096 or 8192).</source>
          <target state="translated">При необходимости &lt;code&gt;$new_size&lt;/code&gt; будет округлено до следующего кратного размера страницы памяти (обычно 4096 или 8192).</target>
        </trans-unit>
        <trans-unit id="13ffb9e8f4aa9a45a3175ee9916b5d80efc23ef5" translate="yes" xml:space="preserve">
          <source>If needed, a thread can be exited at any time by calling &lt;code&gt;threads-&amp;gt;exit()&lt;/code&gt; . This will cause the thread to return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; in a scalar context, or the empty list in a list context.</source>
          <target state="translated">При необходимости из потока можно выйти в любое время, вызвав &lt;code&gt;threads-&amp;gt;exit()&lt;/code&gt; . Это приведет к тому, что поток вернет &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; в скалярном контексте или пустой список в контексте списка.</target>
        </trans-unit>
        <trans-unit id="ba4f2509d5dd63a76d44f087cc7f42f7f77c757a" translate="yes" xml:space="preserve">
          <source>If needed, scripts can be written so as to run on both threaded and non-threaded Perls:</source>
          <target state="translated">При необходимости,скрипты могут быть написаны так,чтобы работать как на потоковых,так и на непоточных Perls:</target>
        </trans-unit>
        <trans-unit id="91fbdba912e7cde9b89fa3cefbc9b3e7d8d65343" translate="yes" xml:space="preserve">
          <source>If needed, these methods should be defined by the package inheriting from &lt;b&gt;Tie::Hash&lt;/b&gt;, &lt;b&gt;Tie::StdHash&lt;/b&gt;, or &lt;b&gt;Tie::ExtraHash&lt;/b&gt;. See &lt;a href=&quot;../perltie#SCALAR&quot;&gt;SCALAR in perltie&lt;/a&gt; to find out what happens when &lt;code&gt;SCALAR&lt;/code&gt; does not exist.</source>
          <target state="translated">При необходимости эти методы должны быть определены пакетом, унаследованным от &lt;b&gt;Tie :: Hash&lt;/b&gt; , &lt;b&gt;Tie :: StdHash&lt;/b&gt; или &lt;b&gt;Tie :: ExtraHash&lt;/b&gt; . См. &lt;a href=&quot;../perltie#SCALAR&quot;&gt;SCALAR в perltie,&lt;/a&gt; чтобы узнать, что происходит, когда &lt;code&gt;SCALAR&lt;/code&gt; не существует.</target>
        </trans-unit>
        <trans-unit id="f7a52a7ddea6d450e656d921a0db2fecb1485c60" translate="yes" xml:space="preserve">
          <source>If needed, thread warnings can be suppressed by using:</source>
          <target state="translated">При необходимости,предупреждения по резьбе могут быть подавлены с помощью использования:</target>
        </trans-unit>
        <trans-unit id="7b8270c68932b39381b724db912d7e0064edb351" translate="yes" xml:space="preserve">
          <source>If neither the &lt;code&gt;-L&lt;/code&gt; or &lt;code&gt;-l&lt;/code&gt; prefix is present in an entry, the entry is considered a directory to search if it is in fact a directory, and a library to search for otherwise. The &lt;code&gt;$Config{lib_ext}&lt;/code&gt; suffix will be appended to any entries that are not directories and don't already have the suffix.</source>
          <target state="translated">Если в записи нет ни префикса &lt;code&gt;-L&lt;/code&gt; , ни &lt;code&gt;-l&lt;/code&gt; , запись считается каталогом для поиска, если это на самом деле каталог, и библиотекой для поиска в противном случае. &lt;code&gt;$Config{lib_ext}&lt;/code&gt; суффикс будет добавлен к любым записям, которые не являются каталогами и еще не имеет суффикса.</target>
        </trans-unit>
        <trans-unit id="33d1d1804f2f0f5f5a1b0fb679650c8cfecd87fb" translate="yes" xml:space="preserve">
          <source>If neither the exit status nor the verbose level is specified, then the default is to use an exit status of 2 with a verbose level of 0.</source>
          <target state="translated">Если ни статус выхода,ни многословный уровень не указаны,то по умолчанию используется статус выхода 2 с многословным уровнем 0.</target>
        </trans-unit>
        <trans-unit id="ca010fd55b822b0537501828b1432d2b69dedb67" translate="yes" xml:space="preserve">
          <source>If neither your configured &lt;code&gt;yaml_module&lt;/code&gt; nor YAML.pm is installed, CPAN.pm falls back to using Data::Dumper and Storable and looks for files with the extensions &lt;code&gt;.dd&lt;/code&gt; or &lt;code&gt;.st&lt;/code&gt; in the &lt;code&gt;prefs_dir&lt;/code&gt; directory. These files are expected to contain one or more hashrefs. For Data::Dumper generated files, this is expected to be done with by defining &lt;code&gt;$VAR1&lt;/code&gt; , &lt;code&gt;$VAR2&lt;/code&gt; , etc. The YAML shell would produce these with the command</source>
          <target state="translated">Если ни один настроенный &lt;code&gt;yaml_module&lt;/code&gt; ни YAML.pm установлен, CPAN.pm возвращается к использованию Data :: Dumper хранящимся и ищет файлы с расширениями &lt;code&gt;.dd&lt;/code&gt; или &lt;code&gt;.st&lt;/code&gt; в &lt;code&gt;prefs_dir&lt;/code&gt; каталоге. Ожидается, что эти файлы будут содержать один или несколько хэш-адресов. Ожидается, что для файлов, сгенерированных Data :: Dumper, это будет сделано путем определения &lt;code&gt;$VAR1&lt;/code&gt; , &lt;code&gt;$VAR2&lt;/code&gt; и т. Д. Оболочка YAML создаст их с помощью команды</target>
        </trans-unit>
        <trans-unit id="1ff3f3f68e857a065a27224d0e20ede58778f1ae" translate="yes" xml:space="preserve">
          <source>If new() is called as an instance method (i.e. $ctx-&amp;gt;new) it will just reset the state the object to the state of a newly created object. No new object is created in this case, and the return value is the reference to the object (i.e. $ctx).</source>
          <target state="translated">Если new () вызывается как метод экземпляра (например, $ ctx-&amp;gt; new), он просто сбрасывает состояние объекта до состояния вновь созданного объекта. В этом случае новый объект не создается, а возвращаемое значение - это ссылка на объект (т.е. $ ctx).</target>
        </trans-unit>
        <trans-unit id="2e13ee0a65adecfa0d8e7d8968c5c8fbe048cddb" translate="yes" xml:space="preserve">
          <source>If no $default is provided an empty string will be used instead.</source>
          <target state="translated">Если $default не указан,вместо него будет использована пустая строка.</target>
        </trans-unit>
        <trans-unit id="0472c17854436e8327aa450d7bb9d0ca29c0fa4c" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;$VERSION&lt;/code&gt; was specified on the &lt;code&gt;bootstrap&lt;/code&gt; line, the last line becomes</source>
          <target state="translated">Если в строке &lt;code&gt;bootstrap&lt;/code&gt; не было указано &lt;code&gt;$VERSION&lt;/code&gt; , последняя строка становится</target>
        </trans-unit>
        <trans-unit id="1b4091cfd69b61e159053e0bbc2425f479136432" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;$section_spec&lt;/code&gt; arguments are given, then the existing set of selected sections is cleared out (which means &lt;code&gt;all&lt;/code&gt; sections will be processed).</source>
          <target state="translated">Если аргументы &lt;code&gt;$section_spec&lt;/code&gt; не указаны, то существующий набор выбранных разделов очищается (что означает, что &lt;code&gt;all&lt;/code&gt; разделы будут обработаны).</target>
        </trans-unit>
        <trans-unit id="c0be16a9153a991182a683ab2886f1fa902dd9f4" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; is found and if the last statement is an expression, its value is returned. If the last statement is a loop control structure like a &lt;code&gt;foreach&lt;/code&gt; or a &lt;code&gt;while&lt;/code&gt; , the returned value is unspecified. The empty sub returns the empty list.</source>
          <target state="translated">Если &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; не найдено и если последний оператор является выражением, возвращается его значение. Если последний оператор представляет собой структуру управления циклом, такую ​​как &lt;code&gt;foreach&lt;/code&gt; или &lt;code&gt;while&lt;/code&gt; , возвращаемое значение не указано. Пустая подпрограмма возвращает пустой список.</target>
        </trans-unit>
        <trans-unit id="bf9cd2f55bd05fa55b1648853a5a5e34325f19ca" translate="yes" xml:space="preserve">
          <source>If no @args are given, no @cmds will be returned.</source>
          <target state="translated">Если @args не даны,@cmds не будут возвращены.</target>
        </trans-unit>
        <trans-unit id="d11be4d28581ad6cd28ff2cca82d45474710696d" translate="yes" xml:space="preserve">
          <source>If no MANIFEST.SKIP file is found, a default set of skips will be used, similar to the example above. If you want nothing skipped, simply make an empty MANIFEST.SKIP file.</source>
          <target state="translated">Если файл MANIFEST.SKIP не найден,будет использован набор пропусков по умолчанию,как в примере выше.Если вы ничего не хотите пропустить,просто сделайте пустой MANIFEST.SKIP файл.</target>
        </trans-unit>
        <trans-unit id="cae10c8870eae9f10da944c7a01e813768cc713b" translate="yes" xml:space="preserve">
          <source>If no arguments are given to pod2man it will read from @ARGV.</source>
          <target state="translated">Если pod2man не аргументирован,он будет читаться из @ARGV.</target>
        </trans-unit>
        <trans-unit id="87c6b87283ba7c4ecec068cb48f3ae13420b59ed" translate="yes" xml:space="preserve">
          <source>If no arguments are given, &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; returns the entire formatted archive as a string, which could be useful if you'd like to stuff the archive into a socket or a pipe to gzip or something.</source>
          <target state="translated">Если аргументы не указаны, &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; возвращает весь форматированный архив в виде строки, что может быть полезно, если вы хотите поместить архив в сокет или канал для gzip или что-то в этом роде.</target>
        </trans-unit>
        <trans-unit id="886a141165f04df6d6f369bc4c3d2d482bb6efce" translate="yes" xml:space="preserve">
          <source>If no arguments are passed then the current article in the currently selected newsgroup is fetched.</source>
          <target state="translated">Если аргументы не передаются,то запрашивается текущая статья в текущей выбранной группе новостей.</target>
        </trans-unit>
        <trans-unit id="ddc296f09027fdaaecb023b3cebc4e9cba37abbb" translate="yes" xml:space="preserve">
          <source>If no extension is supplied, and your system supports it, the original</source>
          <target state="translated">Если расширение не поставляется,а ваша система его поддерживает,то оригинальный</target>
        </trans-unit>
        <trans-unit id="85c571c913f7bfa21e872b065c24a094b4bb7659" translate="yes" xml:space="preserve">
          <source>If no files or directories are supplied, &lt;code&gt;prove&lt;/code&gt; looks for all files matching the pattern &lt;code&gt;t/*.t&lt;/code&gt;.</source>
          <target state="translated">Если файлы или каталоги не поставляются, &lt;code&gt;prove&lt;/code&gt; внешний вид для всех файлов , соответствующих шаблону &lt;code&gt;t/*.t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cea57f19921408109bb2fb4d00e16350d27b4844" translate="yes" xml:space="preserve">
          <source>If no import list is supplied, all possible VMS-specific features are assumed. Currently, there are four VMS-specific features available: 'status' (a.k.a '$?'), 'exit', 'time' and 'hushed'.</source>
          <target state="translated">Если список импортируемых данных не поставляется,то предполагается наличие всех возможных специфических для VMS функций.В настоящее время доступны четыре специфических для VMS функции:&quot;статус&quot; (также известный как &quot;$?&quot;),&quot;выход&quot;,&quot;время&quot; и &quot;замалчивание&quot;.</target>
        </trans-unit>
        <trans-unit id="d4ceff2a6aadec6052244b97bba7012539a0b105" translate="yes" xml:space="preserve">
          <source>If no import list is supplied, all possible restrictions are assumed. (This is the safest mode to operate in, but is sometimes too strict for casual programming.) Currently, there are three possible things to be strict about: &quot;subs&quot;, &quot;vars&quot;, and &quot;refs&quot;.</source>
          <target state="translated">Если список импортируемых товаров не поставляется,принимаются все возможные ограничения.(Это самый безопасный режим для работы,но иногда слишком строгий для случайного программирования).В настоящее время есть три возможных ограничения:&quot;subs&quot;,&quot;vars&quot; и &quot;refs&quot;.</target>
        </trans-unit>
        <trans-unit id="c1d6512b9a9d5a5a9bf4112bcb1e3a393263f0b9" translate="yes" xml:space="preserve">
          <source>If no items exists at the specified index (i.e., the queue is empty, or the index is beyond the number of items on the queue), then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Если в указанном индексе нет элементов (т. Е. Очередь пуста или индекс превышает количество элементов в очереди), то возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc9e3e2a819c8fb3d75385fda77f033e08dfb423" translate="yes" xml:space="preserve">
          <source>If no options are given, Pod::Man uses the name of the input file with any trailing &lt;code&gt;.pod&lt;/code&gt;, &lt;code&gt;.pm&lt;/code&gt;, or &lt;code&gt;.pl&lt;/code&gt; stripped as the man page title, to section 1 unless the file ended in &lt;code&gt;.pm&lt;/code&gt; in which case it defaults to section 3, to a centered title of &quot;User Contributed Perl Documentation&quot;, to a centered footer of the Perl version it is run with, and to a left-hand footer of the modification date of its input (or the current date if given &lt;code&gt;STDIN&lt;/code&gt; for input).</source>
          <target state="translated">Если параметры не указаны, Pod :: Man использует имя входного файла с любым завершающим &lt;code&gt;.pod&lt;/code&gt; , &lt;code&gt;.pm&lt;/code&gt; или &lt;code&gt;.pl&lt;/code&gt; ,вырезанным в качестве заголовка страницы руководства, до раздела 1, если только файл не заканчивается на &lt;code&gt;.pm&lt;/code&gt; ,и в этом случае он по умолчанию используется раздел 3, центрированный заголовок &amp;laquo;Пользовательской документации Perl&amp;raquo;, центрированный нижний колонтитул версии Perl, с которой он запускается, и левый нижний колонтитул даты модификации его ввода (или текущая дата, если задан &lt;code&gt;STDIN&lt;/code&gt; для ввода).</target>
        </trans-unit>
        <trans-unit id="1f1608fb3d0f72aad27d7541f9de6e52f802b4ee" translate="yes" xml:space="preserve">
          <source>If no second argument is provided and the category is &lt;code&gt;LC_ALL&lt;/code&gt; , the result is implementation-dependent. It may be a string of concatenated locale names (separator also implementation-dependent) or a single locale name. Please consult your</source>
          <target state="translated">Если второй аргумент не &lt;code&gt;LC_ALL&lt;/code&gt; , а категория - LC_ALL , результат зависит от реализации. Это может быть строка объединенных имен локали (разделитель также зависит от реализации) или одно имя локали. Проконсультируйтесь со своим</target>
        </trans-unit>
        <trans-unit id="ed489574b7ebc8c696d017fb9515c4a591232a34" translate="yes" xml:space="preserve">
          <source>If no second argument is provided and the category is something other than &lt;code&gt;LC_ALL&lt;/code&gt; , the function returns a string naming the current locale for the category. You can use this value as the second argument in a subsequent call to &lt;code&gt;setlocale()&lt;/code&gt; , &lt;b&gt;but&lt;/b&gt; on some platforms the string is opaque, not something that most people would be able to decipher as to what locale it means.</source>
          <target state="translated">Если второй аргумент не &lt;code&gt;LC_ALL&lt;/code&gt; и категория отличается от LC_ALL , функция возвращает строку с указанием текущего языкового стандарта для категории. Вы можете использовать это значение в качестве второго аргумента в последующем вызове &lt;code&gt;setlocale()&lt;/code&gt; , &lt;b&gt;но&lt;/b&gt; на некоторых платформах строка непрозрачна, и большинство людей не сможет понять, какой языковой стандарт она означает.</target>
        </trans-unit>
        <trans-unit id="53385049e198591f3af9c0f621b19586d0e6e03c" translate="yes" xml:space="preserve">
          <source>If no string is specified via the &lt;code&gt;=~&lt;/code&gt; or &lt;code&gt;!~&lt;/code&gt; operator, the &lt;code&gt;$_&lt;/code&gt; variable is searched and modified. Unless the &lt;code&gt;/r&lt;/code&gt; option is used, the string specified must be a scalar variable, an array element, a hash element, or an assignment to one of those; that is, some sort of scalar lvalue.</source>
          <target state="translated">Если с помощью оператора &lt;code&gt;=~&lt;/code&gt; или &lt;code&gt;!~&lt;/code&gt; Строка не указана, выполняется поиск и изменение переменной &lt;code&gt;$_&lt;/code&gt; . Если не используется параметр &lt;code&gt;/r&lt;/code&gt; , указанная строка должна быть скалярной переменной, элементом массива, хеш-элементом или присвоением одному из них; то есть какое-то скалярное lvalue.</target>
        </trans-unit>
        <trans-unit id="9ee4d303ec9de35b4bd6b8caf1f726ddd4ca7c6e" translate="yes" xml:space="preserve">
          <source>If no such Pod file is found, this method returns undef.</source>
          <target state="translated">Если такой Pod-файл не найден,этот метод возвращает undef.</target>
        </trans-unit>
        <trans-unit id="34cd3d77c3969309ab95d1d80fe464b5d299344d" translate="yes" xml:space="preserve">
          <source>If no urllist has been chosen yet, would you prefer CPAN.pm to connect to the built-in default sites without asking? (yes/no)?</source>
          <target state="translated">Если еще не выбран urllist,предпочтете ли вы CPAN.pm для подключения к встроенным сайтам по умолчанию без запроса? (да/нет)?</target>
        </trans-unit>
        <trans-unit id="b1457b54499e074ed5ffc48ffd57a11b298ba627" translate="yes" xml:space="preserve">
          <source>If no value is associated with the attribute, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is passed.</source>
          <target state="translated">Если с атрибутом не связано никакого значения, передается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3641612d3261f449a8b25c55086ede32d34dbbcb" translate="yes" xml:space="preserve">
          <source>If non-empty braces are the only wildcard characters used in the &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt;, no filenames are matched, but potentially many strings are returned. For example, this produces nine strings, one for each pairing of fruits and colors:</source>
          <target state="translated">Если непустые фигурные скобки являются единственными подстановочными знаками, используемыми в &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; , имена файлов не сопоставляются, но потенциально возвращается много строк. Например, получается девять струн, по одной для каждой пары фруктов и цветов:</target>
        </trans-unit>
        <trans-unit id="1328c99f7fc26be401ecc4c3daf8d11e272b065b" translate="yes" xml:space="preserve">
          <source>If non-empty braces are the only wildcard characters used in the &lt;code&gt;&lt;a href=&quot;glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt;, no filenames are matched, but potentially many strings are returned. For example, this produces nine strings, one for each pairing of fruits and colors:</source>
          <target state="translated">Если непустые фигурные скобки являются единственными подстановочными знаками, используемыми в &lt;code&gt;&lt;a href=&quot;glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; , имена файлов не сопоставляются, но потенциально возвращается много строк. Например, получается девять струн, по одной для каждой пары фруктов и цветов:</target>
        </trans-unit>
        <trans-unit id="cf3289643abb0e0247bc66bf82c16e180f16eb54" translate="yes" xml:space="preserve">
          <source>If none of the above apply, for backwards compatibility reasons, the &lt;code&gt;/d&lt;/code&gt; modifier is the one in effect by default. As this can lead to unexpected results, it is best to specify which other rule set should be used.</source>
          <target state="translated">Если ничего из вышеперечисленного не применимо, по причинам обратной совместимости по умолчанию действует модификатор &lt;code&gt;/d&lt;/code&gt; . Поскольку это может привести к неожиданным результатам, лучше всего указать, какой другой набор правил следует использовать.</target>
        </trans-unit>
        <trans-unit id="ca7c7d8696c46f8858c11c99d7d1a93c5e34454b" translate="yes" xml:space="preserve">
          <source>If none of the three command line flags (&lt;b&gt;-w&lt;/b&gt;, &lt;b&gt;-W&lt;/b&gt; or &lt;b&gt;-X&lt;/b&gt;) that control warnings is used and neither &lt;code&gt;$^W&lt;/code&gt; nor the &lt;code&gt;warnings&lt;/code&gt; pragma are used, then default warnings will be enabled and optional warnings disabled. This means that legacy code that doesn't attempt to control the warnings will work unchanged.</source>
          <target state="translated">Если не используется ни один из трех флагов командной строки ( &lt;b&gt;-w&lt;/b&gt; , &lt;b&gt;-W&lt;/b&gt; или &lt;b&gt;-X&lt;/b&gt; ), управляющих предупреждениями, и не используются ни &lt;code&gt;$^W&lt;/code&gt; ни прагма &lt;code&gt;warnings&lt;/code&gt; , то предупреждения по умолчанию будут включены, а дополнительные предупреждения отключены. Это означает, что устаревший код, который не пытается контролировать предупреждения, будет работать без изменений.</target>
        </trans-unit>
        <trans-unit id="3318e55dc39962c8bcf2ab6429b4489bcf36fce0" translate="yes" xml:space="preserve">
          <source>If none of those language-tags leads to loadable classes, we then try classes derived from YourProjClass-&amp;gt;fallback_languages() and then if nothing comes of that, we use classes named by YourProjClass-&amp;gt;fallback_language_classes(). Then in the (probably quite unlikely) event that that fails, we just return undef.</source>
          <target state="translated">Если ни один из этих языковых тегов не ведет к загружаемым классам, мы затем пробуем классы, производные от YourProjClass-&amp;gt; fallback_languages ​​(), а затем, если из этого ничего не выходит, мы используем классы, названные YourProjClass-&amp;gt; fallback_language_classes (). Затем в (что, вероятно, маловероятно) случае неудачи мы просто возвращаем undef.</target>
        </trans-unit>
        <trans-unit id="92205bb5b979576b7a4566bdd880e8993ef8accb" translate="yes" xml:space="preserve">
          <source>If not 0, then it will be a count of the number of items returned by the subroutine. These items will be stored on the Perl stack. The section</source>
          <target state="translated">Если не 0,то это будет подсчет количества элементов,возвращенных подпрограммой.Эти пункты будут сохранены в стеке Perl.Раздел</target>
        </trans-unit>
        <trans-unit id="15089e00b79e7ab36a4d99102807c33fe5f2fa61" translate="yes" xml:space="preserve">
          <source>If not already thread-shared, the other complex data types will be cloned (recursively, if needed, and including any &lt;code&gt;&lt;a href=&quot;../functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt;ings and read-only settings) into thread-shared structures before being placed onto a queue.</source>
          <target state="translated">Если потоки еще не разделены, другие сложные типы данных будут клонированы (рекурсивно, если необходимо, включая любые &lt;code&gt;&lt;a href=&quot;../functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; и настройки только для чтения) в структуры, совместно используемые потоками, перед помещением в очередь.</target>
        </trans-unit>
        <trans-unit id="3e6242ea32a785a3ff0172e42255ea915052f271" translate="yes" xml:space="preserve">
          <source>If not explicitly stated, the thread's context is implied from the context of the &lt;code&gt;-&amp;gt;create()&lt;/code&gt; call:</source>
          <target state="translated">Если не указано явно, контекст потока подразумевается из контекста вызова &lt;code&gt;-&amp;gt;create()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="546f552a865a929b4eb67739806b6d1165a21c9a" translate="yes" xml:space="preserve">
          <source>If not present or if it returns false, then the stream is left with the UTF-8 flag clear. The</source>
          <target state="translated">Если его нет или если он возвращает false,то поток оставляется с флагом UTF-8.</target>
        </trans-unit>
        <trans-unit id="2aa39c0e8f5ce84edfe0042135e7b88219cc53b5" translate="yes" xml:space="preserve">
          <source>If not specified, this parameter defaults to the OS code of the Operating System this module was built on. The value 3 is used as a catch-all for all Unix variants and unknown Operating Systems.</source>
          <target state="translated">Если параметр не указан,то по умолчанию он соответствует коду операционной системы,на которой построен данный модуль.Значение 3 используется как catch-all для всех Unix-вариантов и неизвестных операционных систем.</target>
        </trans-unit>
        <trans-unit id="5be9107047108eada41300dc934c5b436deb60f0" translate="yes" xml:space="preserve">
          <source>If not successful &lt;code&gt;$status&lt;/code&gt; will hold the</source>
          <target state="translated">В случае неудачи &lt;code&gt;$status&lt;/code&gt; будет удерживать</target>
        </trans-unit>
        <trans-unit id="aff9c9f30e8137171bc8ec7e751402e0d4e840fb" translate="yes" xml:space="preserve">
          <source>If not successful, &lt;code&gt;$i&lt;/code&gt; will be</source>
          <target state="translated">Если не удастся, &lt;code&gt;$i&lt;/code&gt; будет</target>
        </trans-unit>
        <trans-unit id="b50aafa5c3c8fb148f77f7f985f1a7044430dc1d" translate="yes" xml:space="preserve">
          <source>If not successful, the returned compression object, &lt;code&gt;$z&lt;/code&gt; , will be</source>
          <target state="translated">В случае неудачи возвращаемый объект сжатия &lt;code&gt;$z&lt;/code&gt; будет</target>
        </trans-unit>
        <trans-unit id="e8abade20743149de14f55b6a98559ef8ef9d29a" translate="yes" xml:space="preserve">
          <source>If not successful, the returned deflation object, &lt;code&gt;$d&lt;/code&gt; , will be</source>
          <target state="translated">В случае неудачи возвращаемый объект дефляции &lt;code&gt;$d&lt;/code&gt; будет</target>
        </trans-unit>
        <trans-unit id="98576d6e30e44a960914f7dcf4587ee17092e2df" translate="yes" xml:space="preserve">
          <source>If not successful, the returned deflation stream (&lt;code&gt;$d&lt;/code&gt; ) will be</source>
          <target state="translated">В случае неудачи возвращаемый поток дефляции ( &lt;code&gt;$d&lt;/code&gt; ) будет</target>
        </trans-unit>
        <trans-unit id="b7bd4ba1b78daba8a26ec4a9a7d4b9cf1b5da29e" translate="yes" xml:space="preserve">
          <source>If not successful, the returned uncompression object, &lt;code&gt;$z&lt;/code&gt; , will be</source>
          <target state="translated">В случае неудачи возвращенный объект распаковки &lt;code&gt;$z&lt;/code&gt; будет</target>
        </trans-unit>
        <trans-unit id="5c88e7dc3b6ede485e4fd5bdcc2d18ce257150ea" translate="yes" xml:space="preserve">
          <source>If not under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; , the source is treated as ASCII + 128 extra controls, and identifiers should match</source>
          <target state="translated">Если не &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; , источник обрабатывается как дополнительные элементы управления ASCII + 128, и идентификаторы должны соответствовать</target>
        </trans-unit>
        <trans-unit id="adf92a54eaec2aef254d98d2b3572cf157430f6f" translate="yes" xml:space="preserve">
          <source>If not, you can use a Fisher-Yates shuffle.</source>
          <target state="translated">Если нет,можешь использовать тасовку &quot;Фишер-Йейтс&quot;.</target>
        </trans-unit>
        <trans-unit id="63aa47bb8d880da4c29744c1e2b5b0be9d2d8c10" translate="yes" xml:space="preserve">
          <source>If not, you may need to dig in the indices to find it in the directory of the current maintainer.</source>
          <target state="translated">Если нет,возможно,вам понадобится покопаться в индексах,чтобы найти его в каталоге текущего мейнтейнера.</target>
        </trans-unit>
        <trans-unit id="e3dd66c8bbe90e184bf0c3b78ff920f066856ccf" translate="yes" xml:space="preserve">
          <source>If omitted, PATTERN defaults to a single space, &lt;code&gt;&quot; &quot;&lt;/code&gt; , triggering the previously described</source>
          <target state="translated">Если он опущен, ШАБЛОН по умолчанию использует один пробел &lt;code&gt;&quot; &quot;&lt;/code&gt; , вызывая ранее описанный</target>
        </trans-unit>
        <trans-unit id="9db6f61ce06c88ac7402efe003ec5c4f69fd8d53" translate="yes" xml:space="preserve">
          <source>If omitted, the maximum is the 4th.</source>
          <target state="translated">Если пропустить,максимум-4-е.</target>
        </trans-unit>
        <trans-unit id="8cf02da092076b8bc64e89cb4d51247518c5d4fc" translate="yes" xml:space="preserve">
          <source>If one attempts to print this value, then the overloaded operator &lt;code&gt;&quot;&quot;&lt;/code&gt; will be called, which will call &lt;code&gt;nomethod&lt;/code&gt; operator. The result of this operator will be stringified again, but this result is again of type &lt;code&gt;symbolic&lt;/code&gt; , which will lead to an infinite loop.</source>
          <target state="translated">Если &lt;code&gt;nomethod&lt;/code&gt; распечатать это значение, будет вызван перегруженный оператор &lt;code&gt;&quot;&quot;&lt;/code&gt; , который вызовет оператор nomethod . Результат этого оператора снова будет преобразован в строку, но этот результат снова будет &lt;code&gt;symbolic&lt;/code&gt; типа , что приведет к бесконечному циклу.</target>
        </trans-unit>
        <trans-unit id="e1adcb84ff8cdfac7bb94b3520eb9afd47061bae" translate="yes" xml:space="preserve">
          <source>If one can be sure that a particular program is a Perl script expecting filenames in @ARGV, the clever programmer can write something like this:</source>
          <target state="translated">Если можно быть уверенным,что конкретная программа-это Perl скрипт,ожидающий имен файлов в @ARGV,то умный программист может написать что-то подобное:</target>
        </trans-unit>
        <trans-unit id="b9a4785b4cb95e8fee7a09364380427defe0f204" translate="yes" xml:space="preserve">
          <source>If one is compiling Perl with the &lt;code&gt;-DPERL_GLOBAL_STRUCT&lt;/code&gt; the &lt;code&gt;dVAR&lt;/code&gt; definition is needed if the Perl global variables (see</source>
          <target state="translated">Если один компилирует Perl с &lt;code&gt;-DPERL_GLOBAL_STRUCT&lt;/code&gt; &lt;code&gt;dVAR&lt;/code&gt; определение требуется , если глобальные переменные Perl (см</target>
        </trans-unit>
        <trans-unit id="e3e822ed5577ab52cc19452e08717fd8eeaeaafa" translate="yes" xml:space="preserve">
          <source>If one of the input arguments to the C function is the length of a string argument &lt;code&gt;NAME&lt;/code&gt; , one can substitute the name of the length-argument by &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length(NAME)&lt;/a&gt;&lt;/code&gt; in the XSUB declaration. This argument must be omitted when the generated Perl function is called. E.g.,</source>
          <target state="translated">Если одним из входных аргументов функции C является длина строкового аргумента &lt;code&gt;NAME&lt;/code&gt; , можно заменить имя аргумента &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length(NAME)&lt;/a&gt;&lt;/code&gt; на длину (NAME) в объявлении XSUB. Этот аргумент необходимо опустить при вызове сгенерированной функции Perl. Например,</target>
        </trans-unit>
        <trans-unit id="80356b3107601264757c736090081f30d00dbd0c" translate="yes" xml:space="preserve">
          <source>If one of the values is the string &quot;FATAL&quot;, then all the warnings in that list will be considered fatal, just as with the &lt;b&gt;warnings&lt;/b&gt; pragma itself. Should you need to specify that some warnings are fatal, and others are merely enabled, you can pass the &lt;b&gt;warnings&lt;/b&gt; parameter twice:</source>
          <target state="translated">Если одно из значений являются строка &amp;laquo;FATAL&amp;raquo;, то все предупреждения в этом списке будут считаться фатальными, так же , как и на &lt;b&gt;предупреждении&lt;/b&gt; Pragma себя. Если вам нужно указать, что некоторые предупреждения являются фатальными, а другие просто включены, вы можете передать параметр &lt;b&gt;warnings&lt;/b&gt; дважды:</target>
        </trans-unit>
        <trans-unit id="58b3d6b8eb5c53fb4bf738ec026bd17996fb8d7b" translate="yes" xml:space="preserve">
          <source>If one wants to use pure Perl and to be compatible with Perl versions prior to 5.10, the general answer is to use &lt;code&gt;if-elsif-else&lt;/code&gt;:</source>
          <target state="translated">Если кто-то хочет использовать чистый Perl и быть совместимым с версиями Perl до 5.10, общий ответ - использовать &lt;code&gt;if-elsif-else&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="12b8235b34f1e041150a031d0b9fbd780bdea304" translate="yes" xml:space="preserve">
          <source>If only PATTERN is given, EXPR defaults to &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Если указан только ШАБЛОН, по умолчанию EXPR равен &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16392afc89510c0fc9dd7ff46ccb0d1b3e97fcef" translate="yes" xml:space="preserve">
          <source>If other charset support is needed, please file a bug report against CPAN.pm at rt.cpan.org and describe your needs. Maybe we can extend the support or maybe UTF-8 terminals become widely available.</source>
          <target state="translated">Если необходима поддержка других кодировок,пожалуйста,отправьте сообщение об ошибке на CPAN.pm на rt.cpan.org и опишите ваши потребности.Может быть,мы сможем расширить поддержку или,возможно,UTF-8 терминалы станут широко доступны.</target>
        </trans-unit>
        <trans-unit id="a07176206cda4e320bb3d161ccf541de7489aeb9" translate="yes" xml:space="preserve">
          <source>If our include file had contained #include directives, these would not have been processed by h2xs. There is no good solution to this right now.</source>
          <target state="translated">Если бы наш включаемый файл содержал директивы #include,они не были бы обработаны h2xs.Сейчас нет хорошего решения.</target>
        </trans-unit>
        <trans-unit id="1342cd54e96ee75c7832a17e50d7545968334b8a" translate="yes" xml:space="preserve">
          <source>If parse errors are found in the TAP output, a note of this will be made in the summary report. To see all of the parse errors, set this argument to true:</source>
          <target state="translated">Если в выводе TAP будут найдены ошибки при разборе,то об этом будет сделано замечание в сводном отчете.Чтобы увидеть все ошибки при разборе,установите этот аргумент в true:</target>
        </trans-unit>
        <trans-unit id="390961095f8040e196a232b583180a54cb19ea61" translate="yes" xml:space="preserve">
          <source>If passed a filehandle will write a copy of all parsed TAP to that handle.</source>
          <target state="translated">В случае передачи файлового дескриптора в этот дескриптор будет записана копия всех разобранных TAP.</target>
        </trans-unit>
        <trans-unit id="5a4f883097b033ba66596455cc092c01c5e9be39" translate="yes" xml:space="preserve">
          <source>If performance is an issue, and you don't care if the output is in the same case as the input, Use &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; to transform to the case most employed within the data. If the data are primarily UPPERCASE non-Latin1, then apply &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/[a-z]/[A-Z]/&lt;/a&gt;&lt;/code&gt;, and then &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt;. If the data are primarily lowercase non Latin1 then apply &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/[A-Z]/[a-z]/&lt;/a&gt;&lt;/code&gt; before sorting. If the data are primarily UPPERCASE and include Latin-1 characters then apply:</source>
          <target state="translated">Если производительность является проблемой, и вас не волнует, находится ли вывод в том же регистре, что и ввод, используйте &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; для преобразования в регистр, наиболее часто используемый в данных. Если данные в основном прописные, а не Latin1, то примените &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/[a-z]/[A-Z]/&lt;/a&gt;&lt;/code&gt; , а затем &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; . Если данные в основном в нижнем регистре, а не в Latin1, тогда перед сортировкой примените &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/[A-Z]/[a-z]/&lt;/a&gt;&lt;/code&gt; . Если данные в основном прописные и содержат символы Latin-1, примените:</target>
        </trans-unit>
        <trans-unit id="ab79de5389c6af407dc202c7877566f66fb7264b" translate="yes" xml:space="preserve">
          <source>If perl has not yet been installed then PERL_SRC can be defined on the command line as shown in the previous section.</source>
          <target state="translated">Если perl еще не установлен,то PERL_SRC может быть определен в командной строке,как показано в предыдущем разделе.</target>
        </trans-unit>
        <trans-unit id="527ed5a2bdcdb5849d3d992698d64bca35b1da28" translate="yes" xml:space="preserve">
          <source>If perl is invoked using the &lt;b&gt;-e&lt;/b&gt; option or the perl script is read from &lt;code&gt;STDIN&lt;/code&gt; then FindBin sets both &lt;code&gt;$Bin&lt;/code&gt; and &lt;code&gt;$RealBin&lt;/code&gt; to the current directory.</source>
          <target state="translated">Если perl вызывается с использованием параметра &lt;b&gt;-e&lt;/b&gt; или сценарий perl читается из &lt;code&gt;STDIN&lt;/code&gt; , тогда FindBin устанавливает и &lt;code&gt;$Bin&lt;/code&gt; и &lt;code&gt;$RealBin&lt;/code&gt; в текущий каталог.</target>
        </trans-unit>
        <trans-unit id="c28bb9f5b57ae9540614c1c058beb6e3302cae11" translate="yes" xml:space="preserve">
          <source>If perl was installed correctly and your shadow library was written properly, the &lt;code&gt;getpw*()&lt;/code&gt; functions described in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; should in theory provide (read-only) access to entries in the shadow password file. To change the file, make a new shadow password file (the format varies from system to system--see</source>
          <target state="translated">Если perl был установлен правильно и ваша теневая библиотека была написана правильно, функции &lt;code&gt;getpw*()&lt;/code&gt; , описанные в &lt;a href=&quot;perlfunc&quot;&gt;perlfunc, теоретически&lt;/a&gt; должны предоставлять (только для чтения) доступ к записям в файле теневых паролей. Чтобы изменить файл, создайте новый файл теневого пароля (формат различается от системы к системе - см.</target>
        </trans-unit>
        <trans-unit id="4aa77499616bd2f38224ed594fc316a580948f20" translate="yes" xml:space="preserve">
          <source>If possible, move() will simply rename the file. Otherwise, it copies the file to the new location and deletes the original. If an error occurs during this copy-and-delete process, you may be left with a (possibly partial) copy of the file under the destination name.</source>
          <target state="translated">Если возможно,функция move()просто переименует файл.В противном случае она копирует файл в новое место и удаляет оригинал.Если во время этого процесса копирования и удаления произойдет ошибка,вы можете остаться с (возможно,частичной)копией файла под именем получателя.</target>
        </trans-unit>
        <trans-unit id="821e3f8f257e241afb18f9d12ceda656792b21cb" translate="yes" xml:space="preserve">
          <source>If possible, register the module with CPAN. You should include details of its location in your announcement.</source>
          <target state="translated">По возможности зарегистрируйте модуль в CPAN.Вы должны указать его местоположение в своем объявлении.</target>
        </trans-unit>
        <trans-unit id="00df1bad6fa3810b7a0fb796a7103c7f28a05f8c" translate="yes" xml:space="preserve">
          <source>If possible, this form should be used to prevent possible race conditions.</source>
          <target state="translated">По возможности,эту форму следует использовать для предотвращения возможных гоночных условий.</target>
        </trans-unit>
        <trans-unit id="34d4da8aa87987ec9ceda1c43801e78b64cdc28a" translate="yes" xml:space="preserve">
          <source>If present on a regex, &lt;code&gt;&quot;#&quot;&lt;/code&gt; comments will be handled differently by the tokenizer in some cases.</source>
          <target state="translated">Комментарии &lt;code&gt;&quot;#&quot;&lt;/code&gt; если они присутствуют в регулярном выражении, в некоторых случаях обрабатываются токенизатором по-разному.</target>
        </trans-unit>
        <trans-unit id="fcb106d01e2834098b09ad25220c5df2510aa768" translate="yes" xml:space="preserve">
          <source>If present, $hints should be a reference to a hash, where the following keys are recognised:</source>
          <target state="translated">Если они присутствуют,то $hints должны быть ссылкой на хэш,где распознаются следующие клавиши:</target>
        </trans-unit>
        <trans-unit id="768b78e920d55b41dde42ac4d330e515e86f1cd7" translate="yes" xml:space="preserve">
          <source>If present, each callback corresponding to a given result type will be called with the result as the argument if the &lt;code&gt;run&lt;/code&gt; method is used:</source>
          <target state="translated">Если присутствует, каждый обратный вызов, соответствующий данному типу результата, будет вызываться с результатом в качестве аргумента, если &lt;code&gt;run&lt;/code&gt; метод run :</target>
        </trans-unit>
        <trans-unit id="80e76146570d6b35c93035dd97f6090cb9b7cbba" translate="yes" xml:space="preserve">
          <source>If present, it should be a reference to a scalar. This scalar will be made to reference an array, which will be used to store all files and directories unlinked during the call. If nothing is unlinked, the array will be empty.</source>
          <target state="translated">Если присутствует,то это должна быть ссылка на скаляр.Этот скаляр будет ссылаться на массив,который будет использоваться для хранения всех файлов и каталогов,несвязанных во время вызова.Если ничего не будет снято,то массив будет пустым.</target>
        </trans-unit>
        <trans-unit id="eaf6326ff6faceb306eebc039298d3cef21ae0f2" translate="yes" xml:space="preserve">
          <source>If present, it should be a reference to a scalar. This scalar will be made to reference an array, which will be used to store any errors that are encountered. See the &lt;a href=&quot;#ERROR-HANDLING&quot;&gt;ERROR HANDLING&lt;/a&gt; section for more information.</source>
          <target state="translated">Если присутствует, это должна быть ссылка на скаляр. Этот скаляр будет использоваться для ссылки на массив, который будет использоваться для хранения любых обнаруженных ошибок. См. Раздел &lt;a href=&quot;#ERROR-HANDLING&quot;&gt;ОБРАБОТКА ОШИБОК&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="28236ec2fcbd77071db6f4df51ebe2ad1353410f" translate="yes" xml:space="preserve">
          <source>If present, will cause &lt;code&gt;make_path&lt;/code&gt; to print the name of each directory as it is created. By default nothing is printed.</source>
          <target state="translated">Если присутствует, &lt;code&gt;make_path&lt;/code&gt; будет печатать имя каждого каталога по мере его создания. По умолчанию ничего не печатается.</target>
        </trans-unit>
        <trans-unit id="ba616b58ac8bd248e0e92e90224a9f0e82a7126d" translate="yes" xml:space="preserve">
          <source>If present, will cause &lt;code&gt;remove_tree&lt;/code&gt; to print the name of each file as it is unlinked. By default nothing is printed.</source>
          <target state="translated">Если присутствует, то &lt;code&gt;remove_tree&lt;/code&gt; будет печатать имя каждого файла, поскольку он не связан. По умолчанию ничего не печатается.</target>
        </trans-unit>
        <trans-unit id="da38e80a5de666bdd4124bbd72eac17c8b7acaf5" translate="yes" xml:space="preserve">
          <source>If present, will cause any created directory to be owned by &lt;code&gt;$owner&lt;/code&gt; . If the value is numeric, it will be interpreted as a uid, otherwise as username is assumed. An error will be issued if the username cannot be mapped to a uid, or the uid does not exist, or the process lacks the privileges to change ownership.</source>
          <target state="translated">Если присутствует, то любой созданный каталог будет принадлежать &lt;code&gt;$owner&lt;/code&gt; . Если значение числовое, оно будет интерпретировано как uid, иначе предполагается имя пользователя. Ошибка будет выдана, если имя пользователя не может быть сопоставлено с uid, или uid не существует, или процессу не хватает привилегий для смены владельца.</target>
        </trans-unit>
        <trans-unit id="c6bc6a6c714ec1098b00e8f4665bf29765d41191" translate="yes" xml:space="preserve">
          <source>If present, will cause any created directory to be owned by the group &lt;code&gt;$group&lt;/code&gt; . If the value is numeric, it will be interpreted as a gid, otherwise as group name is assumed. An error will be issued if the group name cannot be mapped to a gid, or the gid does not exist, or the process lacks the privileges to change group ownership.</source>
          <target state="translated">Если присутствует, то любой созданный каталог будет принадлежать группе &lt;code&gt;$group&lt;/code&gt; . Если значение числовое, оно будет интерпретировано как gid, в противном случае предполагается имя группы. Будет выдана ошибка, если имя группы не может быть сопоставлено с gid, или gid не существует, или процессу не хватает привилегий для изменения владельца группы.</target>
        </trans-unit>
        <trans-unit id="a365bb62991d043cada86ad3beb15687e9b5977b" translate="yes" xml:space="preserve">
          <source>If program usage has been explicitly requested by the user, it is often desirable to exit with a status of 1 (as opposed to 0) after issuing the user-requested usage message. It is also desirable to give a more verbose description of program usage in this case.</source>
          <target state="translated">Если использование программы было явно запрошено пользователем,то после выдачи сообщения об использовании,запрошенного пользователем,часто желательно выйти со статусом 1 (в отличие от 0).В этом случае желательно также дать более подробное описание использования программы.</target>
        </trans-unit>
        <trans-unit id="ff3608d191706961b1f05c1c4d43ca10631cdf8b" translate="yes" xml:space="preserve">
          <source>If run on any operating system other than Windows, this will import the functions &lt;code&gt;setlocale&lt;/code&gt; and &lt;code&gt;LC_ALL&lt;/code&gt; from &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt;. On Windows it does nothing.</source>
          <target state="translated">При запуске в любой операционной системе, кроме Windows, будут импортированы функции &lt;code&gt;setlocale&lt;/code&gt; и &lt;code&gt;LC_ALL&lt;/code&gt; из &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; . В Windows ничего не делает.</target>
        </trans-unit>
        <trans-unit id="9d9d2ff0e902fe5020fe3d38bdc23ea71c9ea208" translate="yes" xml:space="preserve">
          <source>If run with no arguments, filters standard input to standard output.</source>
          <target state="translated">При отсутствии аргументов,фильтрует стандартный вход на стандартный выход.</target>
        </trans-unit>
        <trans-unit id="53f4c878607755d2bdfa2564e4393c026538b21e" translate="yes" xml:space="preserve">
          <source>If running under taint mode, and if $ENV{TMPDIR} is tainted, it is not used.</source>
          <target state="translated">Если запущен в режиме taint,и если $ENV{TMPDIR}запятнан,то он не используется.</target>
        </trans-unit>
        <trans-unit id="c028c3067c9e1833a7b2f721beaf502c1d3b87c3" translate="yes" xml:space="preserve">
          <source>If running under taint mode, and if the environment variables are tainted, they are not used.</source>
          <target state="translated">При работе в режиме taint,и если переменные окружения запятнаны,они не используются.</target>
        </trans-unit>
        <trans-unit id="bc42709752d603d6e86a31cea878bd9ef78c5a40" translate="yes" xml:space="preserve">
          <source>If safety matters to you (and why else would you be using the Opcode module?) then you should not rely on the definition of this, or indeed any other, optag!</source>
          <target state="translated">Если для вас важна безопасность (и зачем еще использовать модуль Opcode?),то вы не должны полагаться на определение этого или любого другого оптага!</target>
        </trans-unit>
        <trans-unit id="c49a3b26a25358ee584c0e87edb350360c053486" translate="yes" xml:space="preserve">
          <source>If set &lt;code&gt;formatter&lt;/code&gt; must be an object that is capable of formatting the TAP output. See &lt;a href=&quot;formatter/console&quot;&gt;TAP::Formatter::Console&lt;/a&gt; for an example.</source>
          <target state="translated">Если установлено , средство &lt;code&gt;formatter&lt;/code&gt; должно быть объектом, способным форматировать вывод TAP. См. Пример &lt;a href=&quot;formatter/console&quot;&gt;TAP :: Formatter :: Console&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc6406e3d3c8ec686d43e0bd0630b45054571335" translate="yes" xml:space="preserve">
          <source>If set forward, the details of the missing tests are filled in as 'unknown'. if set backward, the details of the intervening tests are deleted. You can erase history if you really want to.</source>
          <target state="translated">Если установить перемотку вперед,то детали пропущенных тестов будут заполнены как &quot;неизвестные&quot;.если установить назад,то детали промежуточных тестов будут удалены.Вы можете стереть историю,если действительно хотите.</target>
        </trans-unit>
        <trans-unit id="94a6b6735d1cf67d97faf5afa93385c976f8d9ca" translate="yes" xml:space="preserve">
          <source>If set to 'none', no man pages will be installed.</source>
          <target state="translated">Если установлено значение &quot;нет&quot;,никаких man-страниц не будет установлено.</target>
        </trans-unit>
        <trans-unit id="35193d3a52f1a67d3457cb0804a53caff3b762a2" translate="yes" xml:space="preserve">
          <source>If set to 0, the contents of the output parameter of the &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; method will be overwritten by the uncompressed data.</source>
          <target state="translated">Если установлено значение 0, содержимое выходного параметра метода &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; будет перезаписано несжатыми данными.</target>
        </trans-unit>
        <trans-unit id="63134c061d53f609b58fe4db77f806b2b217214c" translate="yes" xml:space="preserve">
          <source>If set to 1, all uncompressed data will be appended to the output parameter of the &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">Если установлено значение 1, все несжатые данные будут добавлены к выходному параметру метода &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a99badbf73893e25506e2b45aeb306043f0421e4" translate="yes" xml:space="preserve">
          <source>If set to a true value instruct &lt;code&gt;TAP::Parser&lt;/code&gt; to ignore exit and wait status from test scripts.</source>
          <target state="translated">Если установлено истинное значение, &lt;code&gt;TAP::Parser&lt;/code&gt; игнорирует статус выхода и ожидания из тестовых сценариев.</target>
        </trans-unit>
        <trans-unit id="7addd0cdb6e060b7f425d641cdc5802f63dc6646" translate="yes" xml:space="preserve">
          <source>If set to a true value then MakeMaker's prompt function will always return the default without waiting for user input.</source>
          <target state="translated">Если установлено значение true,то функция запросов MakeMaker всегда вернет значение по умолчанию,не дожидаясь ввода данных пользователем.</target>
        </trans-unit>
        <trans-unit id="37acce4270c3ae4d059b2f5d5497684bcefbd070" translate="yes" xml:space="preserve">
          <source>If set to a true value, Pod::PlainText will assume that each sentence ends in two spaces, and will try to preserve that spacing. If set to false, all consecutive whitespace in non-verbatim paragraphs is compressed into a single space. Defaults to true.</source>
          <target state="translated">Если установить значение true,Pod::PlainText будет считать,что каждое предложение заканчивается на два пробела,и попытается сохранить это расстояние.Если установлено значение false,все последовательные пробельные символы в невербатичных параграфах будут сжаты в один пробел.По умолчанию равно true.</target>
        </trans-unit>
        <trans-unit id="a1e0bdf314190ede062d43bfa363f6d6ba57f992" translate="yes" xml:space="preserve">
          <source>If set to a true value, Pod::Text will assume that each sentence ends in two spaces, and will try to preserve that spacing. If set to false, all consecutive whitespace in non-verbatim paragraphs is compressed into a single space. Defaults to true.</source>
          <target state="translated">Если установить значение true,Pod::Text будет считать,что каждое предложение заканчивается на два пробела,и попытается сохранить это расстояние.Если установлено значение false,все последовательные пробельные символы в невербатичных параграфах будут сжаты в один пробел.По умолчанию равно true.</target>
        </trans-unit>
        <trans-unit id="c7ea67874e15073f2f8a8748dd116175b232517b" translate="yes" xml:space="preserve">
          <source>If set to a true value, a blank line is printed after a &lt;code&gt;=head1&lt;/code&gt; heading. If set to false (the default), no blank line is printed after &lt;code&gt;=head1&lt;/code&gt; , although one is still printed after &lt;code&gt;=head2&lt;/code&gt; . This is the default because it's the expected formatting for manual pages; if you're formatting arbitrary text documents, setting this to true may result in more pleasing output.</source>
          <target state="translated">Если установлено истинное значение, после заголовка &lt;code&gt;=head1&lt;/code&gt; печатается пустая строка . Если установлено значение false (по умолчанию), пустая строка не печатается после &lt;code&gt;=head1&lt;/code&gt; , хотя одна все равно печатается после &lt;code&gt;=head2&lt;/code&gt; . Это значение по умолчанию, потому что это ожидаемое форматирование для справочных страниц; если вы форматируете произвольные текстовые документы, установка этого значения в true может привести к более приятному результату.</target>
        </trans-unit>
        <trans-unit id="79c7d693600594b39fe949ae434a7a5fc8a792dc" translate="yes" xml:space="preserve">
          <source>If set to a true value, a blank line is printed after a &lt;code&gt;=headN&lt;/code&gt; headings. If set to false (the default), no blank line is printed after &lt;code&gt;=headN&lt;/code&gt; . This is the default because it's the expected formatting for manual pages; if you're formatting arbitrary text documents, setting this to true may result in more pleasing output.</source>
          <target state="translated">Если установлено истинное значение, после заголовков a &lt;code&gt;=headN&lt;/code&gt; печатается пустая строка . Если установлено значение false (по умолчанию), после &lt;code&gt;=headN&lt;/code&gt; не печатается пустая строка . Это значение по умолчанию, потому что это ожидаемое форматирование для справочных страниц; если вы форматируете произвольные текстовые документы, установка этого значения в true может привести к более приятному результату.</target>
        </trans-unit>
        <trans-unit id="3fb0153c7c54ce2bccc40f5b7e2d5aff19532ce7" translate="yes" xml:space="preserve">
          <source>If set to a true value, indicates to the debugger that the code being debugged uses threads.</source>
          <target state="translated">Если установлено значение true,указывает отладчику,что отлаживаемый код использует потоки.</target>
        </trans-unit>
        <trans-unit id="e75bb2ef91a1a8c8b0ee4cbc07e5ef237213911f" translate="yes" xml:space="preserve">
          <source>If set to a true value, only test results with directives will be displayed. This overrides other settings such as &lt;code&gt;verbose&lt;/code&gt; , &lt;code&gt;failures&lt;/code&gt; , or &lt;code&gt;comments&lt;/code&gt; .</source>
          <target state="translated">Если установлено истинное значение, будут отображаться только результаты тестов с директивами. Это отменяет другие настройки, такие как &lt;code&gt;verbose&lt;/code&gt; , &lt;code&gt;failures&lt;/code&gt; или &lt;code&gt;comments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6403db7bde854649adecbe2fe72bc17d3ded2ac7" translate="yes" xml:space="preserve">
          <source>If set to a true value, only test results with directives will be displayed. This overrides other settings such as &lt;code&gt;verbose&lt;/code&gt; or &lt;code&gt;failures&lt;/code&gt; .</source>
          <target state="translated">Если установлено истинное значение, будут отображаться только результаты тестов с директивами. Это отменяет другие настройки, такие как &lt;code&gt;verbose&lt;/code&gt; или &lt;code&gt;failures&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ace0eebb3ad1da3562cf6ba2f4eb062020ce0829" translate="yes" xml:space="preserve">
          <source>If set to a true value, selects an alternate output format that, among other things, uses a different heading style and marks &lt;code&gt;=item&lt;/code&gt; entries with a colon in the left margin. Defaults to false.</source>
          <target state="translated">Если установлено истинное значение, выбирается альтернативный формат вывода, который, помимо прочего, использует другой стиль заголовка и отмечает &lt;code&gt;=item&lt;/code&gt; записи с двоеточием в левом поле. По умолчанию - false.</target>
        </trans-unit>
        <trans-unit id="341f05ae650241bc98a8aa05ba502f05572aa8ee" translate="yes" xml:space="preserve">
          <source>If set to a true value, source entries will be converted into utf8-strings (available in Perl 5.6.1 or later). This feature needs the &lt;b&gt;Encode&lt;/b&gt; or &lt;b&gt;Encode::compat&lt;/b&gt; module.</source>
          <target state="translated">Если установлено истинное значение, исходные записи будут преобразованы в строки utf8 (доступно в Perl 5.6.1 или новее). Для этой функции требуется модуль &lt;b&gt;Encode&lt;/b&gt; или &lt;b&gt;Encode :: compat&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="e52de704a5928c9a6d768f4b0d7d8f6e786b6b18" translate="yes" xml:space="preserve">
          <source>If set to a true value, the non-POD parts of the input file will be included in the output. Useful for viewing code documented with POD blocks with the POD rendered and the code left intact.</source>
          <target state="translated">Если установлено значение true,части входного файла,не являющиеся POD,будут включены в выходной файл.Полезно для просмотра кода,документированного блоками POD с отрисовкой POD и кодом,оставшимся нетронутым.</target>
        </trans-unit>
        <trans-unit id="77ffaa19bbb496da1b7f2a485ed0c35990cc9fa8" translate="yes" xml:space="preserve">
          <source>If set to nonzero, forces a flush right away and after every write or print on the currently selected output channel. Default is 0 (regardless of whether the channel is really buffered by the system or not; &lt;code&gt;$|&lt;/code&gt; tells you only whether you've asked Perl explicitly to flush after each write). STDOUT will typically be line buffered if output is to the terminal and block buffered otherwise. Setting this variable is useful primarily when you are outputting to a pipe or socket, such as when you are running a Perl program under &lt;b&gt;rsh&lt;/b&gt; and want to see the output as it's happening. This has no effect on input buffering. See &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt; for that. See &lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt; on how to select the output channel. See also &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="translated">Если установлено значение, отличное от нуля, принудительно выполняет сброс сразу после каждой записи или печати на текущем выбранном канале вывода. По умолчанию - 0 (независимо от того, действительно ли канал буферизирован системой или нет; &lt;code&gt;$|&lt;/code&gt; сообщает вам только, запрашивали ли вы явную очистку Perl после каждой записи). STDOUT обычно буферизуется по строке, если вывод поступает на терминал, и в противном случае буферизуется блоком. Установка этой переменной полезна в первую очередь при выводе в канал или сокет, например, когда вы запускаете программу Perl под &lt;b&gt;rsh&lt;/b&gt; и хотите видеть вывод в том виде, в каком он происходит. Это не влияет на буферизацию ввода. Для этого см. &lt;a href=&quot;functions/getc&quot;&gt;Getc&lt;/a&gt; . См. Раздел &lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt; о том, как выбрать выходной канал. См. Также &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="910076b95e48e767183ba95d8bfd82a29fd1f4b7" translate="yes" xml:space="preserve">
          <source>If set to the name of a file or device, certain operations of PerlIO subsystem will be logged to that file, which is opened in append mode. Typical uses are in Unix:</source>
          <target state="translated">Если задать имя файла или устройства,то определенные операции подсистемы PerlIO будут протоколироваться в этот файл,который открывается в режиме приложения.Типичное использование-в Unix:</target>
        </trans-unit>
        <trans-unit id="907b3689c8943c9530c2bccd5f2399b3ea311ce8" translate="yes" xml:space="preserve">
          <source>If set to true, &lt;a href=&quot;check&quot;&gt;Params::Check&lt;/a&gt; will &lt;code&gt;croak&lt;/code&gt; when an error during template validation occurs, rather than return &lt;code&gt;false&lt;/code&gt; .</source>
          <target state="translated">Если установлено значение true, &lt;a href=&quot;check&quot;&gt;Params :: Check&lt;/a&gt; будет &lt;code&gt;croak&lt;/code&gt; при возникновении ошибки во время проверки шаблона, а не возвращать &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="262e77d8ecddf65d8252c722de18aca6dafa7dd4" translate="yes" xml:space="preserve">
          <source>If set to true, &lt;a href=&quot;check&quot;&gt;Params::Check&lt;/a&gt; will no longer convert all keys from the user input to lowercase, but instead expect them to be in the case the template provided. This is useful when you want to use similar keys with different casing in your templates.</source>
          <target state="translated">Если установлено значение true, &lt;a href=&quot;check&quot;&gt;Params :: Check&lt;/a&gt; больше не будет преобразовывать все ключи из пользовательского ввода в нижний регистр, а вместо этого ожидает, что они будут в случае предоставленного шаблона. Это полезно, если вы хотите использовать в шаблонах похожие ключи с разным регистром.</target>
        </trans-unit>
        <trans-unit id="fcd2802dc60a0f5aa656aa8d36630b4a5a1195a7" translate="yes" xml:space="preserve">
          <source>If set to true, &lt;a href=&quot;check&quot;&gt;Params::Check&lt;/a&gt; will require all values passed to be &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt;. If you wish to enable this on a 'per key' basis, use the template option &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Если установлено значение true, &lt;a href=&quot;check&quot;&gt;Params :: Check&lt;/a&gt; потребует, чтобы были &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; все передаваемые значения . Если вы хотите включить это для каждого ключа, используйте вместо этого &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; параметр шаблона .</target>
        </trans-unit>
        <trans-unit id="b62a3740f4d2f3949ae331d68aff300bd8b9c5aa" translate="yes" xml:space="preserve">
          <source>If set to true, &lt;a href=&quot;check&quot;&gt;Params::Check&lt;/a&gt; will sanity check templates, validating for errors and unknown keys. Although very useful for debugging, this can be somewhat slow in hot-code and large loops.</source>
          <target state="translated">Если установлено значение true, &lt;a href=&quot;check&quot;&gt;Params :: Check&lt;/a&gt; будет проверять работоспособность шаблонов на наличие ошибок и неизвестных ключей. Хотя это очень полезно для отладки, это может быть несколько медленным в горячем коде и больших циклах.</target>
        </trans-unit>
        <trans-unit id="df88f116b1eff18f21bd345796868ca93d04ee66" translate="yes" xml:space="preserve">
          <source>If set to true, a crc32 checksum of the uncompressed data will be calculated. Use the &lt;code&gt;$d-&amp;gt;crc32&lt;/code&gt; method to retrieve this value.</source>
          <target state="translated">Если установлено значение true, будет вычислена контрольная сумма crc32 несжатых данных. Используйте метод &lt;code&gt;$d-&amp;gt;crc32&lt;/code&gt; чтобы получить это значение.</target>
        </trans-unit>
        <trans-unit id="bbd8aed6bbb2cb495083f75e98d7497f01edca37" translate="yes" xml:space="preserve">
          <source>If set to true, a crc32 checksum of the uncompressed data will be calculated. Use the &lt;code&gt;$i-&amp;gt;crc32&lt;/code&gt; method to retrieve this value.</source>
          <target state="translated">Если установлено значение true, будет вычислена контрольная сумма crc32 несжатых данных. Используйте метод &lt;code&gt;$i-&amp;gt;crc32&lt;/code&gt; чтобы получить это значение.</target>
        </trans-unit>
        <trans-unit id="d4a8f4d307b72654b7c09182b593e029ffb7af20" translate="yes" xml:space="preserve">
          <source>If set to true, all keys in the template that are marked as to be stored in a scalar, will also be removed from the result set.</source>
          <target state="translated">Если установлено значение true,все ключи в шаблоне,которые помечены как хранящиеся в скаляре,также будут удалены из результирующего набора.</target>
        </trans-unit>
        <trans-unit id="8a9a61d55c40cdf983928fb90e5f246e820a5b49" translate="yes" xml:space="preserve">
          <source>If set to true, an adler32 checksum of the uncompressed data will be calculated. Use the &lt;code&gt;$d-&amp;gt;adler32&lt;/code&gt; method to retrieve this value.</source>
          <target state="translated">Если установлено значение true, будет вычислена контрольная сумма adler32 несжатых данных. Используйте метод &lt;code&gt;$d-&amp;gt;adler32&lt;/code&gt; чтобы получить это значение.</target>
        </trans-unit>
        <trans-unit id="a5a30a93daed908c592b28db82a1a0b5d4a5ffc0" translate="yes" xml:space="preserve">
          <source>If set to true, an adler32 checksum of the uncompressed data will be calculated. Use the &lt;code&gt;$i-&amp;gt;adler32&lt;/code&gt; method to retrieve this value.</source>
          <target state="translated">Если установлено значение true, будет вычислена контрольная сумма adler32 несжатых данных. Используйте метод &lt;code&gt;$i-&amp;gt;adler32&lt;/code&gt; чтобы получить это значение.</target>
        </trans-unit>
        <trans-unit id="dbc945146e02b49c89057b1636cf31aa2669f101" translate="yes" xml:space="preserve">
          <source>If set to true, immediately extract entries when reading them. This gives you the same memory break as the &lt;code&gt;extract_archive&lt;/code&gt; function. Note however that entries will not be read into memory, but written straight to disk. This means no &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects are created for you to inspect.</source>
          <target state="translated">Если установлено значение true, сразу извлекать записи при их чтении. Это дает тот же разрыв памяти, что и функция &lt;code&gt;extract_archive&lt;/code&gt; . Однако учтите, что записи не будут считываться в память, а будут записаны прямо на диск. Это означает, что объекты &lt;code&gt;Archive::Tar::File&lt;/code&gt; не создаются для проверки.</target>
        </trans-unit>
        <trans-unit id="8be646f7a5def96ccc7c7343df2cffa456a1c220" translate="yes" xml:space="preserve">
          <source>If set to true, no &quot;1..N&quot; header will be printed.</source>
          <target state="translated">Если установлено значение true,заголовок &quot;1..N&quot; не будет распечатан.</target>
        </trans-unit>
        <trans-unit id="7adb95e8ec0ed6e84fcb01131c2b90c160ee5335" translate="yes" xml:space="preserve">
          <source>If set to true, this option will remove compressed data from the input buffer of the &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; method as the inflate progresses.</source>
          <target state="translated">Если установлено значение true, эта опция будет удалять сжатые данные из входного буфера метода &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; мере выполнения inflate.</target>
        </trans-unit>
        <trans-unit id="d55732bd7089a68f6b5548af27b4b056d17dc65d" translate="yes" xml:space="preserve">
          <source>If set true no diagnostics will be printed. This includes calls to &lt;code&gt;diag()&lt;/code&gt; .</source>
          <target state="translated">Если установлено true, диагностика не печатается. Сюда входят вызовы &lt;code&gt;diag()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="767e45d99bc3772f600dade44827bcaf3503a3c0" translate="yes" xml:space="preserve">
          <source>If set, &lt;code&gt;sources&lt;/code&gt; must be a hashref containing the names of the &lt;a href=&quot;parser/sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s to load and/or configure. The values are a hash of configuration that will be accessible to the source handlers via &lt;a href=&quot;parser/source#config_for&quot;&gt;config_for in TAP::Parser::Source&lt;/a&gt;.</source>
          <target state="translated">Если установлено, &lt;code&gt;sources&lt;/code&gt; должен быть хэш-ссылкой, содержащей имена &lt;a href=&quot;parser/sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt; для загрузки и / или настройки. Значения представляют собой хэш конфигурации, который будет доступен обработчикам исходного кода через &lt;a href=&quot;parser/source#config_for&quot;&gt;config_for в TAP :: Parser :: Source&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a162adb7a0dc8b66567284e3d48459cecdcd046" translate="yes" xml:space="preserve">
          <source>If set, a directory which fails the</source>
          <target state="translated">Если установлено,то каталог,в котором не удается</target>
        </trans-unit>
        <trans-unit id="41e6aaabd1216511f49764603b89114f7c2c7520" translate="yes" xml:space="preserve">
          <source>If set, should be the name of a file (in the output directory) to write the HTML index to. The default value is &quot;index.html&quot;. If you set this to a false value, no contents file will be written.</source>
          <target state="translated">Если установлено,то должно быть имя файла (в выходной директории),в который будет записываться HTML-индекс.Значением по умолчанию является &quot;index.html&quot;.Если это значение установлено в false,то никакой файл содержимого записываться не будет.</target>
        </trans-unit>
        <trans-unit id="fed7ed0698b463358f79ea435791a3f79370827d" translate="yes" xml:space="preserve">
          <source>If set, the debugger goes into &lt;code&gt;NonStop&lt;/code&gt; mode and will not connect to a TTY. If interrupted (or if control goes to the debugger via explicit setting of $DB::signal or $DB::single from the Perl script), it connects to a TTY specified in the &lt;code&gt;TTY&lt;/code&gt; option at startup, or to a tty found at runtime using the &lt;code&gt;Term::Rendezvous&lt;/code&gt; module of your choice.</source>
          <target state="translated">Если установлено, отладчик переходит в режим &lt;code&gt;NonStop&lt;/code&gt; и не будет подключаться к TTY. В случае прерывания (или если управление передается отладчику посредством явной установки $ DB :: signal или $ DB :: single из Perl-скрипта), он подключается к TTY, указанному в параметре &lt;code&gt;TTY&lt;/code&gt; при запуске, или к tty, найденному в время выполнения, используя выбранный вами модуль &lt;code&gt;Term::Rendezvous&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f19bf560504f7c9497b672610231bba49eba7830" translate="yes" xml:space="preserve">
          <source>If set, the debugger goes into non-interactive mode until interrupted, or programmatically by setting $DB::signal or $DB::single.</source>
          <target state="translated">Если установлено,отладчик переходит в неинтерактивный режим до тех пор,пока не будет прерван,или программно,установив $DB::signal или $DB::single.</target>
        </trans-unit>
        <trans-unit id="825ea211f8cc0b564969fbeabe2d0a330315f1a6" translate="yes" xml:space="preserve">
          <source>If set, this dumps out memory statistics after execution. If set to an integer greater than one, also dumps out memory statistics after compilation.</source>
          <target state="translated">Если установлено,то после выполнения выпадает статистика памяти.Если установлено целое число больше единицы,то и статистика памяти после компиляции будет выкапываться.</target>
        </trans-unit>
        <trans-unit id="8b969433f335481102ca199a1faf8cf07ca2debd" translate="yes" xml:space="preserve">
          <source>If set, this symbol indicates that only the version-specific components of a perl installation should be installed. This may be useful for making a test installation of a new version without disturbing the existing installation. Setting versiononly is equivalent to setting installperl's -v option. In particular, the non-versioned scripts and programs such as a2p, c2ph, h2xs, pod2*, and perldoc are not installed (see &lt;code&gt;INSTALL&lt;/code&gt; for a more complete list). Nor are the man pages installed. Usually, this is undef.</source>
          <target state="translated">Если установлено, этот символ указывает на то, что должны быть установлены только компоненты установки Perl, зависящие от версии. Это может быть полезно для выполнения тестовой установки новой версии без нарушения существующей установки. Установка только версии эквивалентна установке параметра installperl -v. В частности, не устанавливаются скрипты и программы без поддержки версий, такие как a2p, c2ph, h2xs, pod2 * и perldoc (см. &lt;code&gt;INSTALL&lt;/code&gt; для более полного списка). Также не установлены страницы руководства. Обычно это undef.</target>
        </trans-unit>
        <trans-unit id="5be95242fd4f1700426db0866219ce183a7c4d43" translate="yes" xml:space="preserve">
          <source>If setmagic is false then no set magic will be called on the new (empty) SV. This typically means that assignment will soon follow (e.g. 'local $x = $y'), and that will handle the magic.</source>
          <target state="translated">Если setmagic ложный,то в новом (пустом)SV не будет вызвана магическая установка.Обычно это означает,что скоро произойдет присвоение (например,'local $x=$y'),и оно будет обрабатывать магию.</target>
        </trans-unit>
        <trans-unit id="b7db0eb29b687c30aa2094a54d8f1f63ca4df7c5" translate="yes" xml:space="preserve">
          <source>If several symbol categories exist in &lt;code&gt;%EXPORT_TAGS&lt;/code&gt; , it's usually useful to create the utility &quot;:all&quot; to simplify &quot;use&quot; statements.</source>
          <target state="translated">Если в &lt;code&gt;%EXPORT_TAGS&lt;/code&gt; существует несколько категорий символов , обычно полезно создать служебную программу &quot;: all&quot; для упрощения операторов использования.</target>
        </trans-unit>
        <trans-unit id="1d650df7f1b284cce9178200761c079c663691a8" translate="yes" xml:space="preserve">
          <source>If so, please try to reuse the existing modules either in whole or by inheriting useful features into a new class. If this is not practical try to get together with the module authors to work on extending or enhancing the functionality of the existing modules. A perfect example is the plethora of packages in perl4 for dealing with command line options.</source>
          <target state="translated">Если это так,то попробуйте повторно использовать существующие модули либо целиком,либо унаследовав полезные функции в новом классе.Если это непрактично,попробуйте вместе с авторами модулей поработать над расширением или улучшением функциональности существующих модулей.Прекрасным примером является множество пакетов на perl4 для работы с опциями командной строки.</target>
        </trans-unit>
        <trans-unit id="dcc2c875ef26b86def7f4287ef7a97e0b0212c08" translate="yes" xml:space="preserve">
          <source>If so, that's great news; bug reports with patches are likely to receive significantly more attention and interest than those without patches. Please attach your patch to the report using the &lt;code&gt;-p&lt;/code&gt; option. When sending a patch, create it using &lt;code&gt;git format-patch&lt;/code&gt; if possible, though a unified diff created with &lt;code&gt;diff -pu&lt;/code&gt; will do nearly as well.</source>
          <target state="translated">Если так, это отличная новость; отчеты об ошибках с исправлениями, вероятно, получат значительно больше внимания и интереса, чем отчеты без исправлений. Прикрепите свой патч к отчету с помощью опции &lt;code&gt;-p&lt;/code&gt; . При отправке патча, если возможно , создайте его с помощью &lt;code&gt;git format-patch&lt;/code&gt; , хотя унифицированный diff, созданный с помощью &lt;code&gt;diff -pu&lt;/code&gt; , подойдет почти так же.</target>
        </trans-unit>
        <trans-unit id="e41db44860ffe2b84a712b997e64175db6318266" translate="yes" xml:space="preserve">
          <source>If some events detected in</source>
          <target state="translated">Если некоторые события были обнаружены в</target>
        </trans-unit>
        <trans-unit id="4a24b9aa82fff6a4581557ce8337d0476898456b" translate="yes" xml:space="preserve">
          <source>If some threads have not finished running when the main Perl thread ends, Perl will warn you about it and die, since it is impossible for Perl to clean up itself while other threads are running.</source>
          <target state="translated">Если некоторые потоки не закончили работу,когда заканчивается основной поток Perl,Perl предупредит вас об этом и умрет,так как Perl не может почистить себя,пока другие потоки работают.</target>
        </trans-unit>
        <trans-unit id="5c202d6491a5606cc9c88606232cf0104e601803" translate="yes" xml:space="preserve">
          <source>If something in a program isn&amp;rsquo;t the value you&amp;rsquo;re looking for but indicates where the value is, that&amp;rsquo;s indirection. This can be done with either &lt;b&gt;symbolic references&lt;/b&gt; or &lt;b&gt;hard&lt;/b&gt;.</source>
          <target state="translated">Если что-то в программе не является тем значением, которое вы ищете, а указывает, где находится значение, это косвенное указание. Это можно сделать как с &lt;b&gt;символическими ссылками, так&lt;/b&gt; и с &lt;b&gt;жесткими&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="6d353132ec4a6837954d3ce352dc8e97cba1ae50" translate="yes" xml:space="preserve">
          <source>If something in the Perl core is marked as &lt;b&gt;deprecated&lt;/b&gt;, we may remove it from the core in the future, though we might not. Generally, backward incompatible changes will have deprecation warnings for two release cycles before being removed, but may be removed after just one cycle if the risk seems quite low or the benefits quite high.</source>
          <target state="translated">Если что-то в ядре Perl помечено как &lt;b&gt;устаревшее&lt;/b&gt; , мы можем удалить это из ядра в будущем, но не можем. Как правило, обратно несовместимые изменения будут иметь предупреждения об устаревании в течение двух циклов выпуска перед удалением, но могут быть удалены только после одного цикла, если риск кажется довольно низким или преимущества довольно высокими.</target>
        </trans-unit>
        <trans-unit id="5fdc0cac0824435fe5437bd44fc271afb23e92f6" translate="yes" xml:space="preserve">
          <source>If something in the Perl core is marked as &lt;b&gt;experimental&lt;/b&gt;, we may change its behaviour, deprecate or remove it without notice. While we'll always do our best to smooth the transition path for users of experimental features, you should contact the perl5-porters mailinglist if you find an experimental feature useful and want to help shape its future.</source>
          <target state="translated">Если что-то в ядре Perl помечено как &lt;b&gt;экспериментальное&lt;/b&gt; , мы можем изменить его поведение, исключить его или удалить без предварительного уведомления. Хотя мы всегда делаем все возможное, чтобы облегчить переход пользователей экспериментальных функций, вам следует связаться со списком рассылки perl5-porters, если вы сочтете экспериментальную функцию полезной и хотите помочь сформировать ее будущее.</target>
        </trans-unit>
        <trans-unit id="12083dc2cfbc1c39486c5540691a063ce5c5018f" translate="yes" xml:space="preserve">
          <source>If spaces extend into the next chunk of input text, the next chunk will be read in. Normally the current chunk will be discarded at the same time, but if</source>
          <target state="translated">Если в следующий фрагмент вводимого текста будут вставлены пробелы,то будет прочитан следующий фрагмент.Обычно текущий фрагмент отбрасывается в одно и то же время,но если</target>
        </trans-unit>
        <trans-unit id="b6dd58d3559146e497eb5b446f27a9cb126713f8" translate="yes" xml:space="preserve">
          <source>If specified, strings are normalized before preparation of sort keys (the normalization is executed after preprocess).</source>
          <target state="translated">Если указано,то перед подготовкой ключей сортировки происходит нормализация строк (нормализация выполняется после препроцесса).</target>
        </trans-unit>
        <trans-unit id="c54d25c0a371a4a7533e5b6eb7a37c54566669f4" translate="yes" xml:space="preserve">
          <source>If specified, the coderef is used to preprocess each string before the formation of sort keys.</source>
          <target state="translated">Если указано,то кодреф используется для препроцессирования каждой строки перед формированием ключей сортировки.</target>
        </trans-unit>
        <trans-unit id="df742ffc92755882ac205c4e8f1710a25c417cf9" translate="yes" xml:space="preserve">
          <source>If specified, the coderef is used to rewrite lines in &lt;code&gt;table&lt;/code&gt; or &lt;code&gt;entry&lt;/code&gt; . The coderef will get each line, and then should return a rewritten line according to the UCA file format. If the coderef returns an empty line, the line will be skipped.</source>
          <target state="translated">Если указано, ссылка на код используется для перезаписи строк в &lt;code&gt;table&lt;/code&gt; или &lt;code&gt;entry&lt;/code&gt; . Coderef получит каждую строку, а затем должен вернуть переписанную строку в соответствии с форматом файла UCA. Если ссылка на код возвращает пустую строку, она будет пропущена.</target>
        </trans-unit>
        <trans-unit id="fd186f184cd201e115617cc1e9809ac56ff41627" translate="yes" xml:space="preserve">
          <source>If specified, the given string will be stripped off from the beginning of the C function name in the generated XS functions (if it starts with that prefix). This only applies to XSUBs without &lt;code&gt;CODE&lt;/code&gt; or &lt;code&gt;PPCODE&lt;/code&gt; blocks. For example, the XS:</source>
          <target state="translated">Если указано, данная строка будет удалена из начала имени функции C в сгенерированных функциях XS (если она начинается с этого префикса). Это применимо только к XSUB без блоков &lt;code&gt;CODE&lt;/code&gt; или &lt;code&gt;PPCODE&lt;/code&gt; . Например, XS:</target>
        </trans-unit>
        <trans-unit id="db33e17f1262611ad9b1ad5050ad6146c6b090c4" translate="yes" xml:space="preserve">
          <source>If specified, this option will disable the creation of all extra fields in the zip local and central headers. So the &lt;code&gt;exTime&lt;/code&gt; , &lt;code&gt;exUnix2&lt;/code&gt; , &lt;code&gt;exUnixN&lt;/code&gt; , &lt;code&gt;ExtraFieldLocal&lt;/code&gt; and &lt;code&gt;ExtraFieldCentral&lt;/code&gt; options will be ignored.</source>
          <target state="translated">Если указано, этот параметр отключит создание всех дополнительных полей в локальном и центральном заголовках ZIP. Таким образом, параметры &lt;code&gt;exTime&lt;/code&gt; , &lt;code&gt;exUnix2&lt;/code&gt; , &lt;code&gt;exUnixN&lt;/code&gt; , &lt;code&gt;ExtraFieldLocal&lt;/code&gt; и &lt;code&gt;ExtraFieldCentral&lt;/code&gt; будут проигнорированы.</target>
        </trans-unit>
        <trans-unit id="4d0066c7ecc8871ce3a62f9b83ef61508d6113e7" translate="yes" xml:space="preserve">
          <source>If specified, this option will force the creation of the smallest possible compliant gzip header (which is exactly 10 bytes long) as defined in RFC 1952.</source>
          <target state="translated">Если эта опция будет задана,то она заставит создать минимально возможный соответствующий заголовок gzip (который имеет длину ровно 10 байт),как определено в RFC 1952.</target>
        </trans-unit>
        <trans-unit id="74b346bb75048f3d43315e1f91c059eb29d865aa" translate="yes" xml:space="preserve">
          <source>If speed is of little concern, the common idiom uses grep in scalar context (which returns the number of items that passed its condition) to traverse the entire list. This does have the benefit of telling you how many matches it found, though.</source>
          <target state="translated">Если скорость не вызывает особого беспокойства,то общая идиома использует grep в скалярном контексте (который возвращает количество элементов,прошедших через его условие)для прохождения по всему списку.Однако,это имеет преимущество,так как позволяет узнать,сколько совпадений она нашла.</target>
        </trans-unit>
        <trans-unit id="8029f3ea6d316f66b8a86b9af29af453cce204da" translate="yes" xml:space="preserve">
          <source>If start_color is non-null then it will be inserted after the opening quote (if there is one) but before the escaped text. If end_color is non-null then it will be inserted after the escaped text but before any quotes or ellipses.</source>
          <target state="translated">Если переменная start_color не является нулевой,то она будет вставлена после стартовой кавычки (если она есть),но до экранированного текста.Если переменная end_color не является полной,то она будет вставлена после экранированного текста,но перед любыми кавычками или эллипсами.</target>
        </trans-unit>
        <trans-unit id="741bc8e54000bbf6547a93a37e27f9bd7b7bf22e" translate="yes" xml:space="preserve">
          <source>If straightforward stream-based parsing wont meet your needs (as is likely the case for tasks such as translating PODs into structured markup languages like HTML and XML) then you may need to take the tree-based approach. Rather than doing everything in one pass and calling the &lt;b&gt;interpolate()&lt;/b&gt; method to expand sequences into text, it may be desirable to instead create a parse-tree using the &lt;b&gt;parse_text()&lt;/b&gt; method to return a tree-like structure which may contain an ordered list of children (each of which may be a text-string, or a similar tree-like structure).</source>
          <target state="translated">Если простой парсинг на основе потоков не отвечает вашим потребностям (как это, вероятно, имеет место для таких задач, как перевод POD на структурированные языки разметки, такие как HTML и XML), вам может потребоваться подход на основе дерева. Вместо того, чтобы делать все за один проход и вызывать метод &lt;b&gt;interpolate ()&lt;/b&gt; для преобразования последовательностей в текст, может быть желательно вместо этого создать дерево синтаксического анализа, используя метод &lt;b&gt;parse_text (),&lt;/b&gt; чтобы вернуть древовидную структуру, которая может содержать упорядоченный список дочерних элементов (каждый из которых может быть текстовой строкой или подобной древовидной структурой).</target>
        </trans-unit>
        <trans-unit id="5d14b7e2a788098ee234bfc1585ff4767dfdaee2" translate="yes" xml:space="preserve">
          <source>If subroutine signatures are enabled (see &lt;a href=&quot;#Signatures&quot;&gt;Signatures&lt;/a&gt;), then the shorter PROTO syntax is unavailable, because it would clash with signatures. In that case, a prototype can only be declared in the form of an attribute.</source>
          <target state="translated">Если подпрограммы подпрограмм включены (см. &amp;laquo; &lt;a href=&quot;#Signatures&quot;&gt;Подписи&amp;raquo;&lt;/a&gt; ), то более короткий синтаксис PROTO недоступен, так как он будет конфликтовать с подписями. В этом случае прототип может быть объявлен только в форме атрибута.</target>
        </trans-unit>
        <trans-unit id="42c7d01f7359f4959eaf7c155ab3009451137cea" translate="yes" xml:space="preserve">
          <source>If successful, &lt;code&gt;$i&lt;/code&gt; will hold the inflation object and &lt;code&gt;$status&lt;/code&gt; will be &lt;code&gt;Z_OK&lt;/code&gt; .</source>
          <target state="translated">В случае успеха &lt;code&gt;$i&lt;/code&gt; будет содержать объект инфляции, а &lt;code&gt;$status&lt;/code&gt; будет &lt;code&gt;Z_OK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec38a973765ca012bc6fc104f4b8ef70937c9614" translate="yes" xml:space="preserve">
          <source>If successful, &lt;code&gt;$i&lt;/code&gt; will hold the inflation stream and &lt;code&gt;$status&lt;/code&gt; will be &lt;code&gt;Z_OK&lt;/code&gt; .</source>
          <target state="translated">В случае успеха &lt;code&gt;$i&lt;/code&gt; будет удерживать поток инфляции, а &lt;code&gt;$status&lt;/code&gt; будет &lt;code&gt;Z_OK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f34b524a05a94eda9eec45a5e52e923221e9853a" translate="yes" xml:space="preserve">
          <source>If successful, it returns the in-memory gzip file. Otherwise it returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;$gzerrno&lt;/code&gt; variable will store the zlib error code.</source>
          <target state="translated">В случае успеха он возвращает файл gzip в памяти. В противном случае возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , а переменная &lt;code&gt;$gzerrno&lt;/code&gt; сохранит код ошибки zlib.</target>
        </trans-unit>
        <trans-unit id="a4a46b7cfb2406db4688f3a0ac9d424f4865a652" translate="yes" xml:space="preserve">
          <source>If successful, it returns the uncompressed gzip file. Otherwise it returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;$gzerrno&lt;/code&gt; variable will store the zlib error code.</source>
          <target state="translated">В случае успеха он возвращает несжатый файл gzip. В противном случае возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , а переменная &lt;code&gt;$gzerrno&lt;/code&gt; сохранит код ошибки zlib.</target>
        </trans-unit>
        <trans-unit id="0f77490ec0c061ac3ae6e48aedaf1d41d413b95c" translate="yes" xml:space="preserve">
          <source>If successful, it will return the initialised compression object, &lt;code&gt;$z&lt;/code&gt; and a &lt;code&gt;$status&lt;/code&gt; of &lt;code&gt;BZ_OK&lt;/code&gt; in a list context. In scalar context it returns the deflation object, &lt;code&gt;$z&lt;/code&gt; , only.</source>
          <target state="translated">В случае успеха, он возвращает объект инициализируется сжатия, &lt;code&gt;$z&lt;/code&gt; и &lt;code&gt;$status&lt;/code&gt; в &lt;code&gt;BZ_OK&lt;/code&gt; в контексте списка. В скалярном контексте он возвращает только объект дефляции &lt;code&gt;$z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="003d593630b18abe30c9939f8d44076e1ce90807" translate="yes" xml:space="preserve">
          <source>If successful, it will return the initialised deflation object, &lt;code&gt;$d&lt;/code&gt; and a &lt;code&gt;$status&lt;/code&gt; of &lt;code&gt;Z_OK&lt;/code&gt; in a list context. In scalar context it returns the deflation object, &lt;code&gt;$d&lt;/code&gt; , only.</source>
          <target state="translated">В случае успеха, он возвращает объект инициализируется дефляции, &lt;code&gt;$d&lt;/code&gt; и &lt;code&gt;$status&lt;/code&gt; в &lt;code&gt;Z_OK&lt;/code&gt; в контексте списка. В скалярном контексте он возвращает только объект дефляции, &lt;code&gt;$d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f86208486cf7be6093bb8b7191e306d09fb04dc" translate="yes" xml:space="preserve">
          <source>If successful, it will return the initialised deflation stream, &lt;code&gt;$d&lt;/code&gt; and &lt;code&gt;$status&lt;/code&gt; of &lt;code&gt;Z_OK&lt;/code&gt; in a list context. In scalar context it returns the deflation stream, &lt;code&gt;$d&lt;/code&gt; , only.</source>
          <target state="translated">В случае успеха, он будет возвращать инициализируется поток дефляции, &lt;code&gt;$d&lt;/code&gt; и &lt;code&gt;$status&lt;/code&gt; в &lt;code&gt;Z_OK&lt;/code&gt; в контексте списка. В скалярном контексте он возвращает только поток дефляции &lt;code&gt;$d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05d2c70da3dce90528345981e79d77f52c5f5ddb" translate="yes" xml:space="preserve">
          <source>If successful, it will return the initialised uncompression object, &lt;code&gt;$z&lt;/code&gt; and a &lt;code&gt;$status&lt;/code&gt; of &lt;code&gt;BZ_OK&lt;/code&gt; in a list context. In scalar context it returns the deflation object, &lt;code&gt;$z&lt;/code&gt; , only.</source>
          <target state="translated">В случае успеха, он возвращает инициализируется объект, распаковки &lt;code&gt;$z&lt;/code&gt; и &lt;code&gt;$status&lt;/code&gt; в &lt;code&gt;BZ_OK&lt;/code&gt; в контексте списка. В скалярном контексте он возвращает только объект дефляции &lt;code&gt;$z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9905dac4184f6f7193dddf39eab6d02ad4540f03" translate="yes" xml:space="preserve">
          <source>If supplied with an argument that can't be a code point, &lt;code&gt;charblock()&lt;/code&gt; tries to do the opposite and interpret the argument as an old-style block name. On an ASCII platform, the return value is a</source>
          <target state="translated">Если предоставлен аргумент, который не может быть кодовой точкой, &lt;code&gt;charblock()&lt;/code&gt; пытается сделать обратное и интерпретировать аргумент как имя блока старого стиля. На платформе ASCII возвращаемое значение -</target>
        </trans-unit>
        <trans-unit id="343b1f1d2e0b0c3a0e2a3dffed0083feca7d527c" translate="yes" xml:space="preserve">
          <source>If supplied with an argument that can't be a code point, charscript() tries to do the opposite and interpret the argument as a script name. The return value is a</source>
          <target state="translated">Если поставляется аргумент,который не может быть точкой кода,то charscript()пытается сделать обратное и интерпретировать аргумент как имя сценария.Возвращаемое значение равно</target>
        </trans-unit>
        <trans-unit id="608c69ec5dc593b8e31469808e911c9b8c28fab1" translate="yes" xml:space="preserve">
          <source>If tcsh is your login shell then use the setenv command.</source>
          <target state="translated">Если tcsh-оболочка для входа в систему,используйте команду setenv.</target>
        </trans-unit>
        <trans-unit id="6722301f4d6d5b294f3eee46d693b203a67e97d7" translate="yes" xml:space="preserve">
          <source>If that doesn't make much sense, consider the analogy of a command pipeline. Say you have a shell script stored in the compressed file</source>
          <target state="translated">Если это не имеет смысла,рассмотрим аналогию командного трубопровода.Скажем,у вас есть скрипт оболочки,хранящийся в сжатом файле.</target>
        </trans-unit>
        <trans-unit id="0ce337d0a942d7a20e0ccbeff20a1fe0816cdba5" translate="yes" xml:space="preserve">
          <source>If that doesn't work (it relies on features of your stdio implementation), then you need something more like this:</source>
          <target state="translated">Если это не работает (это зависит от возможностей вашей stdio реализации),то вам нужно что-то более похожее на это:</target>
        </trans-unit>
        <trans-unit id="ace9cde0327f63e0372278440efb1605dee92be3" translate="yes" xml:space="preserve">
          <source>If that doesn't work (some I/O implementations are particularly cantankerous), you might need something like this:</source>
          <target state="translated">Если это не сработает (некоторые реализации ввода/вывода особенно кантанкерны),вам может понадобиться что-нибудь подобное:</target>
        </trans-unit>
        <trans-unit id="76b21d1151e484221dbc92ea1c2c56d3ec4082a9" translate="yes" xml:space="preserve">
          <source>If that doesn't work, give up on your stdio package and use sysread.</source>
          <target state="translated">Если это не сработает,бросьте свой студийный пакет и используйте sysread.</target>
        </trans-unit>
        <trans-unit id="0580b926aa13464eaf5222ef23bd075e2a2e806d" translate="yes" xml:space="preserve">
          <source>If that doesn't work, try seeking to a different part of the file and then back.</source>
          <target state="translated">Если это не сработает,попробуйте поискать другую часть файла,а затем обратно.</target>
        </trans-unit>
        <trans-unit id="b4eb30982662b9e20db4ab3ae1666e6a76a6e58a" translate="yes" xml:space="preserve">
          <source>If that doesn't work, try seeking to a different part of the file, reading something, and then seeking back.</source>
          <target state="translated">Если это не сработает,попробуйте поискать другую часть файла,прочитать что-нибудь,а затем поискать обратно.</target>
        </trans-unit>
        <trans-unit id="4c63d398b08eb5cb7f3f37514cbe92856008dc42" translate="yes" xml:space="preserve">
          <source>If that gives too much output every day, you may want to watch only for three modules. You can write</source>
          <target state="translated">Если это дает слишком много вывода каждый день,вы можете захотеть смотреть только для трех модулей.Вы можете написать</target>
        </trans-unit>
        <trans-unit id="0c73f5392dc820a97b0a4426cb998de73cb28f26" translate="yes" xml:space="preserve">
          <source>If that warnings category has been set to &quot;FATAL&quot; in the calling module then die. Otherwise return.</source>
          <target state="translated">Если в вызывающем модуле эта категория предупреждений была установлена на &quot;FATAL&quot;,то она умирает.В противном случае возвращайтесь.</target>
        </trans-unit>
        <trans-unit id="313f3cd86007469b883802f17e39affb3f8c8794" translate="yes" xml:space="preserve">
          <source>If that warnings category has been set to &quot;FATAL&quot; in the scope where &lt;code&gt;$object&lt;/code&gt; is first used then die. Otherwise return.</source>
          <target state="translated">Если эта категория предупреждений была установлена ​​на &quot;FATAL&quot; в области, где &lt;code&gt;$object&lt;/code&gt; используется впервые, а затем умереть. В противном случае вернитесь.</target>
        </trans-unit>
        <trans-unit id="3d9b7696c9777c3fdef5f5f1690ef14ee23382d9" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="translated">Если</target>
        </trans-unit>
        <trans-unit id="4493cf703f913ddbd099cc80db075e294c3617b1" translate="yes" xml:space="preserve">
          <source>If the &quot;external&quot; protocol is specified, the ping() method attempts to use the &lt;code&gt;Net::Ping::External&lt;/code&gt; module to ping the remote host. &lt;code&gt;Net::Ping::External&lt;/code&gt; interfaces with your system's default &lt;code&gt;ping&lt;/code&gt; utility to perform the ping, and generally produces relatively accurate results. If &lt;code&gt;Net::Ping::External&lt;/code&gt; if not installed on your system, specifying the &quot;external&quot; protocol will result in an error.</source>
          <target state="translated">Если указан &amp;laquo;внешний&amp;raquo; протокол, метод ping () пытается использовать модуль &lt;code&gt;Net::Ping::External&lt;/code&gt; для проверки связи удаленного хоста. &lt;code&gt;Net::Ping::External&lt;/code&gt; взаимодействует с утилитой &lt;code&gt;ping&lt;/code&gt; вашей системы по умолчанию для выполнения ping и обычно дает относительно точные результаты. Если &lt;code&gt;Net::Ping::External&lt;/code&gt; не установлен в вашей системе, указание &amp;laquo;внешнего&amp;raquo; протокола приведет к ошибке.</target>
        </trans-unit>
        <trans-unit id="b022b01a378125712b4875c54365686882089f63" translate="yes" xml:space="preserve">
          <source>If the &quot;icmp&quot; protocol is specified, the ping() method sends an icmp echo message to the remote host, which is what the UNIX ping program does. If the echoed message is received from the remote host and the echoed information is correct, the remote host is considered reachable. Specifying the &quot;icmp&quot; protocol requires that the program be run as root or that the program be setuid to root.</source>
          <target state="translated">Если указан протокол &quot;icmp&quot;,метод ping()посылает эхо-сообщение icmp на удаленный хост,что и делает ping-программа UNIX.Если эхо-сообщение получено от удаленного хоста и эхо-информация верна,то удаленный хост считается доступным.Указание протокола &quot;icmp&quot; требует,чтобы программа была запущена от имени root или чтобы программа была настроена на root.</target>
        </trans-unit>
        <trans-unit id="c3280089081e0a65bf27928777cbd13d99f6f66b" translate="yes" xml:space="preserve">
          <source>If the &quot;syn&quot; protocol is specified, the ping() method will only send a TCP SYN packet to the remote host then immediately return. If the syn packet was sent successfully, it will return a true value, otherwise it will return false. NOTE: Unlike the other protocols, the return value does NOT determine if the remote host is alive or not since the full TCP three-way handshake may not have completed yet. The remote host is only considered reachable if it receives a TCP ACK within the timeout specified. To begin waiting for the ACK packets, use the ack() method as explained below. Use the &quot;syn&quot; protocol instead the &quot;tcp&quot; protocol to determine reachability of multiple destinations simultaneously by sending parallel TCP SYN packets. It will not block while testing each remote host. demo/fping is provided in this distribution to demonstrate the &quot;syn&quot; protocol as an example. This protocol does not require any special privileges.</source>
          <target state="translated">Если указан протокол &quot;syn&quot;,то метод ping()будет посылать только TCP SYN пакет на удаленный хост,а затем немедленно возвращать его.Если пакет syn был успешно отправлен,он вернет значение true,в противном случае-false.ПРИМЕЧАНИЕ:В отличие от других протоколов,возвращаемое значение НЕ определяет,жив удаленный хост или нет,так как полное трехстороннее TCP-квитирование,возможно,еще не завершено.Удаленный хост считается доступным только в том случае,если он получает TCP ACK в течение указанного таймаута.Чтобы начать ожидание ACK-пакетов,используйте метод ack(),как объяснено ниже.Используйте вместо протокола &quot;tcp&quot; протокол &quot;syn&quot; для определения достижимости нескольких пунктов назначения одновременно,посылая параллельные пакеты TCP SYN.Он не будет блокироваться при тестировании каждого удаленного хоста.Для демонстрации протокола &quot;syn&quot; в качестве примера в данном дистрибутиве приводится demo/fping.Данный протокол не требует никаких специальных привилегий.</target>
        </trans-unit>
        <trans-unit id="318d6b49d6250a4816190433cf297845eb70cba7" translate="yes" xml:space="preserve">
          <source>If the $crc parameters is &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, the crc value will be reset.</source>
          <target state="translated">Если параметры $ crc - &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , значение crc будет сброшено.</target>
        </trans-unit>
        <trans-unit id="abcc06c7fad286b05b36114515df89ab3f899db0" translate="yes" xml:space="preserve">
          <source>If the $crc parameters is &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, the crc value will be reset.</source>
          <target state="translated">Если параметры $ crc - &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , значение crc будет сброшено.</target>
        </trans-unit>
        <trans-unit id="302e31c3384df8bb8c31ef52a9d8291c6e65b38e" translate="yes" xml:space="preserve">
          <source>If the $must_be_file argument is provided and is TRUE, then return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; unless the image looks like it belongs to a file dump.</source>
          <target state="translated">Если аргумент $ must_be_file предоставлен и имеет значение ИСТИНА, вернуть &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , если изображение не выглядит как принадлежащее дампу файла.</target>
        </trans-unit>
        <trans-unit id="865165ad77b0593f721d466f6d0ebabfe1d34482" translate="yes" xml:space="preserve">
          <source>If the $string is &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Если $ string - &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , возвращается &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="076c07280263c9d15e3255695b14d837c538bc87" translate="yes" xml:space="preserve">
          <source>If the &amp;lt;$input_filename_or_reference&amp;gt; parameter is a simple scalar, it is assumed to be a filename. This file will be opened for reading and the input data will be read from it.</source>
          <target state="translated">Если параметр &amp;lt;$ input_filename_or_reference&amp;gt; является простым скаляром, предполагается, что это имя файла. Этот файл будет открыт для чтения, и из него будут считываться входные данные.</target>
        </trans-unit>
        <trans-unit id="e6e87357913d48be4073006d8b0866ceef5457d5" translate="yes" xml:space="preserve">
          <source>If the 'name' is '&amp;amp;' the corresponding entry in the PAD is a CV representing a possible closure.</source>
          <target state="translated">Если &amp;laquo;имя&amp;raquo; - &amp;laquo;&amp;amp;&amp;raquo;, соответствующая запись в PAD представляет собой резюме, представляющее возможное закрытие.</target>
        </trans-unit>
        <trans-unit id="45cb5ded2282f7dcd41dd84a212cb40770ba3961" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;-W&lt;/b&gt; flag is used on the command line, it will enable all warnings throughout the program regardless of whether warnings were disabled locally using &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings&lt;/code&gt; or &lt;code&gt;$^W =0&lt;/code&gt; . This includes all files that get included via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;. Think of it as the Perl equivalent of the &quot;lint&quot; command.</source>
          <target state="translated">Если в командной строке используется флаг &lt;b&gt;-W&lt;/b&gt; , он включит все предупреждения во всей программе независимо от того, были ли предупреждения отключены локально &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings&lt;/code&gt; или &lt;code&gt;$^W =0&lt;/code&gt; . Сюда входят все файлы, которые включаются через &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; . Думайте об этом как о Perl-эквиваленте команды &amp;laquo;lint&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="544ad5b88e657a2b04055790eb69377a583771e6" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;ExtUtils::Embed&lt;/b&gt; module isn't part of your Perl distribution, you can retrieve it from &lt;a href=&quot;http://www.perl.com/perl/CPAN/modules/by-module/ExtUtils/&quot;&gt;http://www.perl.com/perl/CPAN/modules/by-module/ExtUtils/&lt;/a&gt; (If this documentation came from your Perl distribution, then you're running 5.004 or better and you already have it.)</source>
          <target state="translated">Если модуль &lt;b&gt;ExtUtils :: Embed&lt;/b&gt; не является частью вашего дистрибутива Perl, вы можете получить его по &lt;a href=&quot;http://www.perl.com/perl/CPAN/modules/by-module/ExtUtils/&quot;&gt;адресу http://www.perl.com/perl/CPAN/modules/by-module/ExtUtils/&lt;/a&gt; (если эта документация пришла из вашего Дистрибутив Perl, значит, вы используете версию 5.004 или выше и она у вас уже есть.)</target>
        </trans-unit>
        <trans-unit id="40e97ddfc26315857071022b6a58a8c5330f9bda" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&quot;-S&quot;&lt;/code&gt; or &lt;code&gt;-&quot;S&quot;&lt;/code&gt; switch is present</source>
          <target state="translated">Если присутствует переключатель &lt;code&gt;&quot;-S&quot;&lt;/code&gt; или &lt;code&gt;-&quot;S&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bcfb6b5f36fe9b097b6d4cfdd0d5b8347d4498d3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;#!&lt;/code&gt; line does not contain the word &quot;perl&quot; nor the word &quot;indir&quot; the program named after the &lt;code&gt;#!&lt;/code&gt; is executed instead of the Perl interpreter. This is slightly bizarre, but it helps people on machines that don't do &lt;code&gt;#!&lt;/code&gt; , because they can tell a program that their SHELL is</source>
          <target state="translated">Если &lt;code&gt;#!&lt;/code&gt; Строка не содержит ни слова &quot;perl&quot;, ни слова &quot;indir&quot; программы, названной после &lt;code&gt;#!&lt;/code&gt; выполняется вместо интерпретатора Perl. Это немного странно, но помогает людям на машинах, которые не делают &lt;code&gt;#!&lt;/code&gt; , потому что они могут сообщить программе, что их ОБОЛОЧКА</target>
        </trans-unit>
        <trans-unit id="263d47f71006c52e232d04a65727d383732b439a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$Encode::Guess::NoUTFAutoGuess&lt;/code&gt; variable is set to a true value, no heuristics will be applied to UTF8/16/32, and the result will be limited to the suspects and &lt;code&gt;ascii&lt;/code&gt; .</source>
          <target state="translated">Если для переменной &lt;code&gt;$Encode::Guess::NoUTFAutoGuess&lt;/code&gt; установлено истинное значение, эвристика не будет применяться к UTF8 / 16/32 , и результат будет ограничен подозреваемыми и &lt;code&gt;ascii&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ad3f883582e4c647a3748b90c080c6161d8d898" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle, the compressed data will be read from it. The string '-' can be used as an alias for standard input.</source>
          <target state="translated">Если параметр &lt;code&gt;$input&lt;/code&gt; является дескриптором файла, сжатые данные будут считываться из него. Строку &amp;laquo;-&amp;raquo; можно использовать как псевдоним для стандартного ввода.</target>
        </trans-unit>
        <trans-unit id="7b21ca0ba17da1de5557b8c2561a39c672e345ba" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$input&lt;/code&gt; parameter is a scalar, it is assumed to be a filename. This file will be opened for reading and the compressed data will be read from it.</source>
          <target state="translated">Если параметр &lt;code&gt;$input&lt;/code&gt; является скаляром, предполагается, что это имя файла. Этот файл будет открыт для чтения, и из него будут считываться сжатые данные.</target>
        </trans-unit>
        <trans-unit id="8c806bbadc7d9dce5be50aca2c285d39455523f0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$input_filename_or_reference&lt;/code&gt; parameter is a filehandle, the input data will be read from it. The string '-' can be used as an alias for standard input.</source>
          <target state="translated">Если параметр &lt;code&gt;$input_filename_or_reference&lt;/code&gt; является дескриптором файла, входные данные будут считываться из него. Строку &amp;laquo;-&amp;raquo; можно использовать как псевдоним для стандартного ввода.</target>
        </trans-unit>
        <trans-unit id="573972f31f94bcc5ce697159aca1ad87294adc22" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$input_filename_or_reference&lt;/code&gt; parameter is any other type, &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will be returned.</source>
          <target state="translated">Если параметр &lt;code&gt;$input_filename_or_reference&lt;/code&gt; относится к любому другому типу, будет возвращен &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f4cccbcdf0c65cc8f40030797afae3d268325f9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$need&lt;/code&gt; argument is given then it will check that the current version (as defined by the $VERSION variable in the package) is greater than or equal to &lt;code&gt;$need&lt;/code&gt; ; it will die if this is not the case. This method is called automatically by the &lt;code&gt;VERSION&lt;/code&gt; form of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если указан аргумент &lt;code&gt;$need&lt;/code&gt; он проверит, что текущая версия (как определено переменной $ VERSION в пакете) больше или равна &lt;code&gt;$need&lt;/code&gt; ; он умрет, если это не так. Этот метод вызывается автоматически формой &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; &lt;code&gt;VERSION&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e612a8de15e6e3ebce7b57945845f8b7dc29222" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle, the compressed data will be written to it. The string '-' can be used as an alias for standard output.</source>
          <target state="translated">Если параметр &lt;code&gt;$output&lt;/code&gt; является дескриптором файла, в него будут записаны сжатые данные. Строку &amp;laquo;-&amp;raquo; можно использовать как псевдоним для стандартного вывода.</target>
        </trans-unit>
        <trans-unit id="ca1b12c1cf4a15c9b6156dfb74283d87ea201fd5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$output&lt;/code&gt; parameter is a simple scalar, it is assumed to be a filename. This file will be opened for writing and the compressed data will be written to it.</source>
          <target state="translated">Если параметр &lt;code&gt;$output&lt;/code&gt; является простым скаляром, предполагается, что это имя файла. Этот файл будет открыт для записи, и в него будут записаны сжатые данные.</target>
        </trans-unit>
        <trans-unit id="59757227a4fe8fdd27a95b595bd3ff8c8a163939" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$output&lt;/code&gt; parameter is any other type, &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; ::new will return undef.</source>
          <target state="translated">Если параметр &lt;code&gt;$output&lt;/code&gt; относится к любому другому типу, &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; :: new вернет undef.</target>
        </trans-unit>
        <trans-unit id="cadc0cd9a0990edba8eef6811ffbf43a8f495bbc" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$output&lt;/code&gt; parameter is any other type, &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; ::new will return undef.</source>
          <target state="translated">Если параметр &lt;code&gt;$output&lt;/code&gt; относится к любому другому типу, &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; :: new вернет undef.</target>
        </trans-unit>
        <trans-unit id="3e714bc9d0ca60a68f45566881bf3e6145bc1ce5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$output&lt;/code&gt; parameter is any other type, &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; ::new will return undef.</source>
          <target state="translated">Если параметр &lt;code&gt;$output&lt;/code&gt; относится к любому другому типу, &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; :: new вернет undef.</target>
        </trans-unit>
        <trans-unit id="876928fea8ebdaa591df8075f9c404fb23d04a28" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$output&lt;/code&gt; parameter is any other type, &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; ::new will return undef.</source>
          <target state="translated">Если параметр &lt;code&gt;$output&lt;/code&gt; относится к любому другому типу, &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; :: new вернет undef.</target>
        </trans-unit>
        <trans-unit id="38552f9e6ec9c67c09d8bddc8275dd8bdd5d8803" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$output&lt;/code&gt; parameter is any other type, &lt;code&gt;IO::Compress::Zip&lt;/code&gt; ::new will return undef.</source>
          <target state="translated">Если параметр &lt;code&gt;$output&lt;/code&gt; имеет любой другой тип, &lt;code&gt;IO::Compress::Zip&lt;/code&gt; :: new вернет undef.</target>
        </trans-unit>
        <trans-unit id="cc18113fea92f93f29a91b56f7f76e4dd3fc2c3e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$output_filename_or_reference&lt;/code&gt; parameter is a filehandle, the compressed data will be written to it. The string '-' can be used as an alias for standard output.</source>
          <target state="translated">Если параметр &lt;code&gt;$output_filename_or_reference&lt;/code&gt; является дескриптором файла, сжатые данные будут записаны в него. Строку &amp;laquo;-&amp;raquo; можно использовать как псевдоним для стандартного вывода.</target>
        </trans-unit>
        <trans-unit id="b000e8d3bf3971a53c3d271eb802381bc6b99814" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$output_filename_or_reference&lt;/code&gt; parameter is a filehandle, the uncompressed data will be written to it. The string '-' can be used as an alias for standard output.</source>
          <target state="translated">Если параметр &lt;code&gt;$output_filename_or_reference&lt;/code&gt; является дескриптором файла, в него будут записаны несжатые данные. Строку &amp;laquo;-&amp;raquo; можно использовать как псевдоним для стандартного вывода.</target>
        </trans-unit>
        <trans-unit id="4843925dd2f30aabd060449fee92e5566394585d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$output_filename_or_reference&lt;/code&gt; parameter is a simple scalar, it is assumed to be a filename. This file will be opened for writing and the compressed data will be written to it.</source>
          <target state="translated">Если параметр &lt;code&gt;$output_filename_or_reference&lt;/code&gt; является простым скаляром, предполагается, что это имя файла. Этот файл будет открыт для записи, и в него будут записаны сжатые данные.</target>
        </trans-unit>
        <trans-unit id="82c61471bec0e7ab85ea6d51b841a7cd924bb91c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$output_filename_or_reference&lt;/code&gt; parameter is a simple scalar, it is assumed to be a filename. This file will be opened for writing and the uncompressed data will be written to it.</source>
          <target state="translated">Если параметр &lt;code&gt;$output_filename_or_reference&lt;/code&gt; является простым скаляром, предполагается, что это имя файла. Этот файл будет открыт для записи, и в него будут записаны несжатые данные.</target>
        </trans-unit>
        <trans-unit id="171f6debdc3c19e16dbddc9b4ccb5eb09a1f9e1d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$output_filename_or_reference&lt;/code&gt; parameter is any other type, &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will be returned.</source>
          <target state="translated">Если параметр &lt;code&gt;$output_filename_or_reference&lt;/code&gt; имеет любой другой тип, будет возвращен &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2259a2e974894cbf8831f8e74de6dee67d652d9c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$regexp&lt;/code&gt; variable contains a code expression, the user could then execute arbitrary Perl code. For instance, some joker could search for &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;('rm -rf *');&lt;/code&gt; to erase your files. In this sense, the combination of interpolation and code expressions</source>
          <target state="translated">Если переменная &lt;code&gt;$regexp&lt;/code&gt; содержит кодовое выражение, пользователь может выполнить произвольный код Perl. Например, какой-нибудь шутник мог искать &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;('rm -rf *');&lt;/code&gt; чтобы стереть ваши файлы. В этом смысле сочетание интерполяции и кодовых выражений</target>
        </trans-unit>
        <trans-unit id="cead10e67b406c29ab565d567b9609063d5776ca" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$z&lt;/code&gt; object is associated with a buffer, this method will return &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если объект &lt;code&gt;$z&lt;/code&gt; связан с буфером, этот метод вернет &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58dcaddb355cecd931c021172a4bedf908dd76a9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$z&lt;/code&gt; object is associated with a file or a filehandle, &lt;code&gt;&lt;a href=&quot;../../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; will return the underlying file descriptor. Once the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called &lt;code&gt;&lt;a href=&quot;../../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; will return &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если объект &lt;code&gt;$z&lt;/code&gt; связан с файлом или дескриптором файла, &lt;code&gt;&lt;a href=&quot;../../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; вернет базовый дескриптор файла. После &lt;code&gt;&lt;a href=&quot;../../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; метода &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; fileno вернет &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8acbfda88a1601bef7d039c62529de82f9b15c5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$z&lt;/code&gt; object is associated with a file or a filehandle, this method returns the current autoflush setting for the underlying filehandle. If &lt;code&gt;EXPR&lt;/code&gt; is present, and is non-zero, it will enable flushing after every write/print operation.</source>
          <target state="translated">Если объект &lt;code&gt;$z&lt;/code&gt; связан с файлом или дескриптором файла, этот метод возвращает текущую настройку автозапуска для базового дескриптора файла. Если &lt;code&gt;EXPR&lt;/code&gt; присутствует и не равен нулю, он будет включать сброс после каждой операции записи / печати.</target>
        </trans-unit>
        <trans-unit id="4f22b38f141c1394908e5c44c3cf641e6013a601" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;(*ACCEPT)&lt;/code&gt; is inside of capturing groups then the groups are marked as ended at the point at which the &lt;code&gt;(*ACCEPT)&lt;/code&gt; was encountered. For instance:</source>
          <target state="translated">Если &lt;code&gt;(*ACCEPT)&lt;/code&gt; находится внутри групп захвата, то группы помечаются как завершенные в точке, в которой обнаружено &lt;code&gt;(*ACCEPT)&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="d96d9f9f8c91a22bdf7e1a3536eeb47596adfe1c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-Strict&lt;/code&gt; option is disabled, the comment field can contain any character except NULL. If any null characters are present, the field will be truncated at the first NULL.</source>
          <target state="translated">Если опция &lt;code&gt;-Strict&lt;/code&gt; отключена, поле комментария может содержать любой символ, кроме NULL. Если присутствуют какие-либо нулевые символы, поле будет обрезано до первого значения NULL.</target>
        </trans-unit>
        <trans-unit id="8a0625a9517209d9c735d420fbb7b372c06cae56" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-Strict&lt;/code&gt; option is enabled, &lt;code&gt;$string&lt;/code&gt; can only consist of ISO 8859-1 characters.</source>
          <target state="translated">Если &lt;code&gt;-Strict&lt;/code&gt; опция -Strict , &lt;code&gt;$string&lt;/code&gt; может состоять только из символов ISO 8859-1.</target>
        </trans-unit>
        <trans-unit id="7e727e67c9a9b626ab111993b625d6fae0b44b5e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-Strict&lt;/code&gt; option is enabled, the comment can only consist of ISO 8859-1 characters plus line feed.</source>
          <target state="translated">Если &lt;code&gt;-Strict&lt;/code&gt; опция -Strict , комментарий может состоять только из символов ISO 8859-1 плюс перевод строки.</target>
        </trans-unit>
        <trans-unit id="687858bb0364e03075315214e49915f4063efd20" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-i&lt;/code&gt; switch is present but no extension for a backup copy is given, then inplace editing creates a new version of a file; the existing copy is not deleted. (Note that if an extension is given, an existing file is renamed to the backup file, as is the case under other operating systems, so it does not remain as a previous version under the original filename.)</source>
          <target state="translated">Если параметр &lt;code&gt;-i&lt;/code&gt; присутствует, но не задано расширение для резервной копии, то при редактировании на месте создается новая версия файла; существующая копия не удаляется. (Обратите внимание, что если задано расширение, существующий файл переименовывается в файл резервной копии, как в случае с другими операционными системами, поэтому он не остается в качестве предыдущей версии под исходным именем файла.)</target>
        </trans-unit>
        <trans-unit id="45a06195ed61d1ad05b053f7cec670bab3d1b47d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;/c&lt;/code&gt; modifier is specified, the</source>
          <target state="translated">Если указан модификатор &lt;code&gt;/c&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="61f363164df63c08b01c2f8d842eb83178238fca" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;/d&lt;/code&gt; modifier is used, the</source>
          <target state="translated">Если используется модификатор &lt;code&gt;/d&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="228d53bdcd18fe101fa332b95e05c49d501e9bd9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;/g&lt;/code&gt; option is not used, &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; in list context returns a list consisting of the subexpressions matched by the parentheses in the pattern, that is, (&lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , &lt;code&gt;$3&lt;/code&gt; ...) (Note that here &lt;code&gt;$1&lt;/code&gt; etc. are also set). When there are no parentheses in the pattern, the return value is the list &lt;code&gt;(1)&lt;/code&gt; for success. With or without parentheses, an empty list is returned upon failure.</source>
          <target state="translated">Если параметр &lt;code&gt;/g&lt;/code&gt; не используется, &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; в контексте списка возвращает список, состоящий из подвыражений, совпадающих с круглыми скобками в шаблоне, то есть ( &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , &lt;code&gt;$3&lt;/code&gt; ...) (Обратите внимание, что здесь &lt;code&gt;$1&lt;/code&gt; и т. Д. также установлены). Если в шаблоне нет скобок, возвращаемое значение - это список &lt;code&gt;(1)&lt;/code&gt; для успеха. В случае ошибки со скобками или без них возвращается пустой список.</target>
        </trans-unit>
        <trans-unit id="f3f80ef36f0d767bd1b67ec24494f102a4ec7c1e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;/r&lt;/code&gt; (non-destructive) option is present, a new copy of the string is made and its characters transliterated, and this copy is returned no matter whether it was modified or not: the original string is always left unchanged. The new copy is always a plain string, even if the input string is an object or a tied variable.</source>
          <target state="translated">Если присутствует параметр &lt;code&gt;/r&lt;/code&gt; (неразрушающий), создается новая копия строки и ее символы транслитерируются, и эта копия возвращается независимо от того, была ли она изменена или нет: исходная строка всегда остается неизменной. Новая копия всегда является простой строкой, даже если входная строка является объектом или связанной переменной.</target>
        </trans-unit>
        <trans-unit id="a9229f75d9765b6c9e80a754666b4ec3786ce235" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;/r&lt;/code&gt; (non-destructive) option is used then it runs the substitution on a copy of the string and instead of returning the number of substitutions, it returns the copy whether or not a substitution occurred. The original string is never changed when &lt;code&gt;/r&lt;/code&gt; is used. The copy will always be a plain string, even if the input is an object or a tied variable.</source>
          <target state="translated">Если используется параметр &lt;code&gt;/r&lt;/code&gt; (неразрушающий), то он запускает замену на копии строки и вместо того, чтобы возвращать количество замен, он возвращает копию, независимо от того, произошла ли подстановка. Исходная строка никогда не изменяется при использовании &lt;code&gt;/r&lt;/code&gt; . Копия всегда будет простой строкой, даже если входные данные являются объектом или связанной переменной.</target>
        </trans-unit>
        <trans-unit id="98015ad9cab949396e11223bb4b809b828f32a12" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ADLER32&lt;/code&gt; option is not enabled in the constructor for this object, this method will always return 0;</source>
          <target state="translated">Если параметр &lt;code&gt;ADLER32&lt;/code&gt; не включен в конструкторе этого объекта, этот метод всегда будет возвращать 0;</target>
        </trans-unit>
        <trans-unit id="e7e3cc3b120420d3fe3e5903cbe74d0d544abd6d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AppendOutput&lt;/code&gt; option is set to false, the output buffers in the &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; and &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; methods will be truncated before uncompressed data is written to them.</source>
          <target state="translated">Если для параметра &lt;code&gt;AppendOutput&lt;/code&gt; установлено значение false, буферы вывода в методах &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; и &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; будут усечены перед записью в них несжатых данных.</target>
        </trans-unit>
        <trans-unit id="dc67d2e9493b30b20a1a27f63c6bc36f875e42fb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AppendOutput&lt;/code&gt; option is set to true in the constructor for the &lt;code&gt;$d&lt;/code&gt; object, the compressed data will be appended to &lt;code&gt;$output&lt;/code&gt; . If it is false, &lt;code&gt;$output&lt;/code&gt; will be truncated before any compressed data is written to it.</source>
          <target state="translated">Если для параметра &lt;code&gt;AppendOutput&lt;/code&gt; установлено значение true в конструкторе объекта &lt;code&gt;$d&lt;/code&gt; , сжатые данные будут добавлены к &lt;code&gt;$output&lt;/code&gt; . Если это false, &lt;code&gt;$output&lt;/code&gt; будет обрезан перед записью в него сжатых данных.</target>
        </trans-unit>
        <trans-unit id="241ec910d4c3fc198870214959a19e4587117b91" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AppendOutput&lt;/code&gt; option is set to true in the constructor for this object, the uncompressed data will be appended to &lt;code&gt;$output&lt;/code&gt; . If it is false, &lt;code&gt;$output&lt;/code&gt; will be truncated before any uncompressed data is written to it.</source>
          <target state="translated">Если для параметра &lt;code&gt;AppendOutput&lt;/code&gt; задано значение true в конструкторе этого объекта, несжатые данные будут добавлены в &lt;code&gt;$output&lt;/code&gt; . Если это ложь, &lt;code&gt;$output&lt;/code&gt; будет обрезан перед записью в него несжатых данных.</target>
        </trans-unit>
        <trans-unit id="23a4bdafd5b4aee2bfba5a403d17509d788319bb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Archive::Tar&lt;/code&gt; module is installed and either the &lt;code&gt;uncompress&lt;/code&gt; or &lt;code&gt;gunzip&lt;/code&gt; programs are available, you can use one of these workarounds to read &lt;code&gt;.tar.Z&lt;/code&gt; files.</source>
          <target state="translated">Если &lt;code&gt;Archive::Tar&lt;/code&gt; установлен модуль и либо &lt;code&gt;uncompress&lt;/code&gt; или &lt;code&gt;gunzip&lt;/code&gt; программы доступны, вы можете использовать один из этих способов , чтобы читать &lt;code&gt;.tar.Z&lt;/code&gt; файлы.</target>
        </trans-unit>
        <trans-unit id="da717ba776ac7b943780ea377cd85c35cc7f2655" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AutoClose&lt;/code&gt; option has been enabled when the IO::Compress::Bzip2 object was created, and the object is associated with a file, the underlying file will also be closed.</source>
          <target state="translated">Если при &lt;code&gt;AutoClose&lt;/code&gt; объекта IO :: Compress :: Bzip2 была включена опция AutoClose , и этот объект связан с файлом, базовый файл также будет закрыт.</target>
        </trans-unit>
        <trans-unit id="2451f14f493fd0c1b2a744f1ca680885802c97fb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AutoClose&lt;/code&gt; option has been enabled when the IO::Compress::Deflate object was created, and the object is associated with a file, the underlying file will also be closed.</source>
          <target state="translated">Если при &lt;code&gt;AutoClose&lt;/code&gt; объекта IO :: Compress :: Deflate была включена опция AutoClose , и этот объект связан с файлом, базовый файл также будет закрыт.</target>
        </trans-unit>
        <trans-unit id="a262cca6ca624ccbcc230f0a9a299f301469ea87" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AutoClose&lt;/code&gt; option has been enabled when the IO::Compress::Gzip object was created, and the object is associated with a file, the underlying file will also be closed.</source>
          <target state="translated">Если при &lt;code&gt;AutoClose&lt;/code&gt; объекта IO :: Compress :: Gzip была включена опция AutoClose , и этот объект связан с файлом, основной файл также будет закрыт.</target>
        </trans-unit>
        <trans-unit id="e1abc2a1019c01d985ed7b90e95e969f6f299bf2" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AutoClose&lt;/code&gt; option has been enabled when the IO::Compress::RawDeflate object was created, and the object is associated with a file, the underlying file will also be closed.</source>
          <target state="translated">Если опция &lt;code&gt;AutoClose&lt;/code&gt; была включена при создании объекта IO :: Compress :: RawDeflate, и объект был связан с файлом, базовый файл также будет закрыт.</target>
        </trans-unit>
        <trans-unit id="f5ea66329ad2b4187630d779016bfcf01873661d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AutoClose&lt;/code&gt; option has been enabled when the IO::Compress::Zip object was created, and the object is associated with a file, the underlying file will also be closed.</source>
          <target state="translated">Если при &lt;code&gt;AutoClose&lt;/code&gt; объекта IO :: Compress :: Zip была включена опция AutoClose , и этот объект связан с файлом, основной файл также будет закрыт.</target>
        </trans-unit>
        <trans-unit id="efa0131be286b8ee087293f106c69cc7176b941b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AutoClose&lt;/code&gt; option has been enabled when the IO::Uncompress::AnyInflate object was created, and the object is associated with a file, the underlying file will also be closed.</source>
          <target state="translated">Если опция &lt;code&gt;AutoClose&lt;/code&gt; была включена при создании объекта IO :: Uncompress :: AnyInflate, и этот объект связан с файлом, базовый файл также будет закрыт.</target>
        </trans-unit>
        <trans-unit id="d7295924866c46c6268e8a714d1d64a580c31683" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AutoClose&lt;/code&gt; option has been enabled when the IO::Uncompress::AnyUncompress object was created, and the object is associated with a file, the underlying file will also be closed.</source>
          <target state="translated">Если опция &lt;code&gt;AutoClose&lt;/code&gt; была включена при создании объекта IO :: Uncompress :: AnyUncompress, и этот объект связан с файлом, основной файл также будет закрыт.</target>
        </trans-unit>
        <trans-unit id="d590344cfdd3022553efe336602191d1dbf477b6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AutoClose&lt;/code&gt; option has been enabled when the IO::Uncompress::Bunzip2 object was created, and the object is associated with a file, the underlying file will also be closed.</source>
          <target state="translated">Если при &lt;code&gt;AutoClose&lt;/code&gt; объекта IO :: Uncompress :: Bunzip2 была включена опция AutoClose, и этот объект связан с файлом, основной файл также будет закрыт.</target>
        </trans-unit>
        <trans-unit id="d48a250e20975c54010e5628db4f5baad9a34122" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AutoClose&lt;/code&gt; option has been enabled when the IO::Uncompress::Gunzip object was created, and the object is associated with a file, the underlying file will also be closed.</source>
          <target state="translated">Если опция &lt;code&gt;AutoClose&lt;/code&gt; была включена при создании объекта IO :: Uncompress :: Gunzip, и этот объект связан с файлом, основной файл также будет закрыт.</target>
        </trans-unit>
        <trans-unit id="52452c9550cd8363c6c8237af362cc345e53f457" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AutoClose&lt;/code&gt; option has been enabled when the IO::Uncompress::Inflate object was created, and the object is associated with a file, the underlying file will also be closed.</source>
          <target state="translated">Если опция &lt;code&gt;AutoClose&lt;/code&gt; была включена при создании объекта IO :: Uncompress :: Inflate, и объект был связан с файлом, базовый файл также будет закрыт.</target>
        </trans-unit>
        <trans-unit id="34f0502573716752984911463b9f0d1cdbf46468" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AutoClose&lt;/code&gt; option has been enabled when the IO::Uncompress::RawInflate object was created, and the object is associated with a file, the underlying file will also be closed.</source>
          <target state="translated">Если опция &lt;code&gt;AutoClose&lt;/code&gt; была включена при создании объекта IO :: Uncompress :: RawInflate, и объект связан с файлом, базовый файл также будет закрыт.</target>
        </trans-unit>
        <trans-unit id="a4a69474f66acefa05c78e7afea37ef49d0b67b4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;AutoClose&lt;/code&gt; option has been enabled when the IO::Uncompress::Unzip object was created, and the object is associated with a file, the underlying file will also be closed.</source>
          <target state="translated">Если опция &lt;code&gt;AutoClose&lt;/code&gt; была включена при создании объекта IO :: Uncompress :: Unzip, и объект связан с файлом, базовый файл также будет закрыт.</target>
        </trans-unit>
        <trans-unit id="c5ac2a9fbc05192cf46afe1261683a81419aaa4d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;CRC32&lt;/code&gt; option is not enabled in the constructor for this object, this method will always return 0;</source>
          <target state="translated">Если опция &lt;code&gt;CRC32&lt;/code&gt; не включена в конструкторе для этого объекта, этот метод всегда будет возвращать 0;</target>
        </trans-unit>
        <trans-unit id="1078abcc96e5bc5e00a4c013f64ebcf42ad64647" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ConsumeInput&lt;/code&gt; option has been set to true when the &lt;code&gt;Compress::Raw::Zlib::Inflate&lt;/code&gt; object is created, the &lt;code&gt;$input&lt;/code&gt; parameter is modified by &lt;code&gt;inflate&lt;/code&gt; . On completion it will contain what remains of the input buffer after inflation. In practice, this means that when the return status is &lt;code&gt;Z_OK&lt;/code&gt; the &lt;code&gt;$input&lt;/code&gt; parameter will contain an empty string, and when the return status is &lt;code&gt;Z_STREAM_END&lt;/code&gt; the &lt;code&gt;$input&lt;/code&gt; parameter will contains what (if anything) was stored in the input buffer after the deflated data stream.</source>
          <target state="translated">Если для параметра &lt;code&gt;ConsumeInput&lt;/code&gt; было установлено значение true при создании объекта &lt;code&gt;Compress::Raw::Zlib::Inflate&lt;/code&gt; , параметр &lt;code&gt;$input&lt;/code&gt; изменяется с помощью &lt;code&gt;inflate&lt;/code&gt; . По завершении он будет содержать то, что осталось от входного буфера после инфляции. На практике это означает, что когда статус возврата - &lt;code&gt;Z_OK&lt;/code&gt; , параметр &lt;code&gt;$input&lt;/code&gt; будет содержать пустую строку, а когда статус возврата - &lt;code&gt;Z_STREAM_END&lt;/code&gt; , параметр &lt;code&gt;$input&lt;/code&gt; будет содержать то, что (если что-то) было сохранено во входном буфере после дефлированных данных. поток.</target>
        </trans-unit>
        <trans-unit id="6a12981a50e52bd8360e58342fda216fd19888ef" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Encode::LEAVE_SRC&lt;/code&gt; bit is</source>
          <target state="translated">Если бит &lt;code&gt;Encode::LEAVE_SRC&lt;/code&gt; установлен</target>
        </trans-unit>
        <trans-unit id="1bd3991b928d2bed7eef1e209952394cc1a3b16f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Listen&lt;/code&gt; argument is given, but false, the queue size will be set to 5.</source>
          <target state="translated">Если аргумент &lt;code&gt;Listen&lt;/code&gt; задан, но false, размер очереди будет равен 5.</target>
        </trans-unit>
        <trans-unit id="1143100ee61e97ea2197747ccc58abb62c39ba7a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Minimal&lt;/code&gt; option is set to true, this option will be ignored.</source>
          <target state="translated">Если для параметра &lt;code&gt;Minimal&lt;/code&gt; установлено значение true, этот параметр будет проигнорирован.</target>
        </trans-unit>
        <trans-unit id="9b0cd9b590461a3324fa8fa68396f36ebee97301" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Strict&lt;/code&gt; is on it will automatically enable this option.</source>
          <target state="translated">Если &lt;code&gt;Strict&lt;/code&gt; он автоматически включит эту опцию.</target>
        </trans-unit>
        <trans-unit id="1a5a03dfea212cb5b29a1fbf2d5e717d48359451" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;YAML&lt;/code&gt; or the &lt;code&gt;YAML::Syck&lt;/code&gt; module is installed a record of the internal state of all modules is written to disk after each step. The files contain a signature of the currently running perl version for later perusal.</source>
          <target state="translated">Если установлен модуль &lt;code&gt;YAML&lt;/code&gt; или &lt;code&gt;YAML::Syck&lt;/code&gt; запись внутреннего состояния всех модулей записывается на диск после каждого шага. Файлы содержат подпись текущей версии Perl для последующего изучения.</target>
        </trans-unit>
        <trans-unit id="c82a6fc0a2f95bf7629d02360284d3c7a1ca8a6f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;can&lt;/code&gt; returns false, then that is passed to &lt;code&gt;ok&lt;/code&gt; . If it returns true, then the larger expression &lt;code&gt;$thingy-&amp;gt;can('some_method') &amp;amp;&amp;amp; 1&lt;/code&gt; returns 1, which &lt;code&gt;ok&lt;/code&gt; sees as a simple signal of success, as you would expect.</source>
          <target state="translated">Если &lt;code&gt;can&lt;/code&gt; возвращает false, то это передается в &lt;code&gt;ok&lt;/code&gt; . Если она возвращает значение ИСТИНА, то большее выражение &lt;code&gt;$thingy-&amp;gt;can('some_method') &amp;amp;&amp;amp; 1&lt;/code&gt; возвращает 1, который &lt;code&gt;ok&lt;/code&gt; видит , как простой сигнал успеха, как и следовало ожидать.</target>
        </trans-unit>
        <trans-unit id="8bb03363c1cc83c40db7187bc0c1808c11643507" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;charscript()&lt;/code&gt; argument is not a known script, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Если аргумент &lt;code&gt;charscript()&lt;/code&gt; неизвестен сценарию, возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15aaa040db904ad0d7e939ff87d0289e4ed113e7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;decimal string --&amp;gt; native integer&lt;/code&gt; conversion cannot be done without loss of information, the result is compatible with the conversion sequence &lt;code&gt;decimal_string --&amp;gt; native_floating_point --&amp;gt; native_integer&lt;/code&gt; . In particular, rounding is strongly biased to 0, though a number like &lt;code&gt;&quot;0.99999999999999999999&quot;&lt;/code&gt; has a chance of being rounded to 1.</source>
          <target state="translated">Если &lt;code&gt;decimal string --&amp;gt; native integer&lt;/code&gt; преобразование не может быть выполнено без потери информации, результат совместим с последовательностью преобразования &lt;code&gt;decimal_string --&amp;gt; native_floating_point --&amp;gt; native_integer&lt;/code&gt; . В частности, округление сильно смещено до 0, хотя такое число, как &lt;code&gt;&quot;0.99999999999999999999&quot;&lt;/code&gt; может быть округлено до 1.</target>
        </trans-unit>
        <trans-unit id="6e4484ac7779a53de50aea47a7a5981f680fda36" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;encoding&lt;/code&gt; pragma is in scope then the lengths returned are calculated from the length of &lt;code&gt;$/&lt;/code&gt; in Unicode characters, which is not always the same as the length of &lt;code&gt;$/&lt;/code&gt; in the native encoding.</source>
          <target state="translated">Если прагма &lt;code&gt;encoding&lt;/code&gt; находится в области видимости, то возвращаемые длины вычисляются из длины &lt;code&gt;$/&lt;/code&gt; в символах Юникода, которая не всегда совпадает с длиной &lt;code&gt;$/&lt;/code&gt; в собственной кодировке.</target>
        </trans-unit>
        <trans-unit id="bb917cbee0d97141aac38b7ae445c57c18b27f43" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;export_fail&lt;/code&gt; method returns an empty list then no error is recorded and all the requested symbols are exported. If the returned list is not empty then an error is generated for each symbol and the export fails. The Exporter provides a default &lt;code&gt;export_fail&lt;/code&gt; method which simply returns the list unchanged.</source>
          <target state="translated">Если метод &lt;code&gt;export_fail&lt;/code&gt; возвращает пустой список, то ошибка не записывается и все запрошенные символы экспортируются. Если возвращенный список не пуст, для каждого символа генерируется ошибка и экспорт не выполняется. Экспортер предоставляет метод по умолчанию &lt;code&gt;export_fail&lt;/code&gt; , который просто возвращает список без изменений.</target>
        </trans-unit>
        <trans-unit id="276362d098a443c72a3870f2a2d48ae260499ef9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;gv&lt;/code&gt; is present and is not in the symbol table, then this function simply returns. This checked will be skipped if &lt;code&gt;flags &amp;amp; 1&lt;/code&gt; .</source>
          <target state="translated">Если &lt;code&gt;gv&lt;/code&gt; присутствует и его нет в таблице символов, эта функция просто возвращается. Этот флажок будет пропущен, если &lt;code&gt;flags &amp;amp; 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="798f35bb0e17493f55f47f1e0e601507174d7021" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;maxdepth&lt;/code&gt; is included, it must be a numeral</source>
          <target state="translated">Если &lt;code&gt;maxdepth&lt;/code&gt; , она должна быть числовой.</target>
        </trans-unit>
        <trans-unit id="4672f4a6483db1b05eeb609d8e652aab384c295c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;timelocal()&lt;/code&gt; function is given a non-existent local time, it will simply return an epoch value for the time one hour later.</source>
          <target state="translated">Если функции &lt;code&gt;timelocal()&lt;/code&gt; задано несуществующее местное время, она просто вернет значение эпохи для времени на час позже.</target>
        </trans-unit>
        <trans-unit id="d8b1721e1ae657f367e4018c29dc66b147cf1c09" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;uncompress&lt;/code&gt; or &lt;code&gt;gunzip&lt;/code&gt; programs are available, you can use one of these workarounds to read &lt;code&gt;.tar.Z&lt;/code&gt; files from &lt;code&gt;Archive::Tar&lt;/code&gt;</source>
          <target state="translated">Если &lt;code&gt;uncompress&lt;/code&gt; или &lt;code&gt;gunzip&lt;/code&gt; программы доступны, вы можете использовать один из этих способов , чтобы читать &lt;code&gt;.tar.Z&lt;/code&gt; файлы из &lt;code&gt;Archive::Tar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cddc99dbc25aed0c730c0fe2bb39cef906b6e6a7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;unicode_eval&lt;/code&gt; feature is enabled (which is the default under a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.16&lt;/code&gt; or higher declaration), EXPR or &lt;code&gt;$_&lt;/code&gt; is treated as a string of characters, so &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; declarations have no effect, and source filters are forbidden. In the absence of the &lt;code&gt;unicode_eval&lt;/code&gt; feature, the string will sometimes be treated as characters and sometimes as bytes, depending on the internal encoding, and source filters activated within the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; exhibit the erratic, but historical, behaviour of affecting some outer file scope that is still compiling. See also the &lt;a href=&quot;#evalbytes&quot;&gt;evalbytes&lt;/a&gt; keyword, which always treats its input as a byte stream and works properly with source filters, and the &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; pragma.</source>
          <target state="translated">Если функция &lt;code&gt;unicode_eval&lt;/code&gt; включена (что является значением по умолчанию при объявлении &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.16&lt;/code&gt; или более поздней версии ), EXPR или &lt;code&gt;$_&lt;/code&gt; обрабатываются как строка символов, поэтому объявления &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; не имеют эффекта, а исходные фильтры запрещены. В отсутствие функции &lt;code&gt;unicode_eval&lt;/code&gt; строка иногда будет обрабатываться как символы, а иногда как байты, в зависимости от внутренней кодировки, а исходные фильтры, активированные в &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; , демонстрируют неустойчивое, но историческое поведение, влияющее на некоторую внешнюю область действия файла, которая является все еще компилируется. См. Также &lt;a href=&quot;#evalbytes&quot;&gt;evalbytes&lt;/a&gt;ключевое слово, которое всегда обрабатывает свой ввод как поток байтов и правильно работает с исходными фильтрами, а также директиву &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="87e45908e093ce58a5e789307a68cc9a88437767" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;unicode_eval&lt;/code&gt; feature is enabled (which is the default under a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; 5.16&lt;/code&gt; or higher declaration), EXPR or &lt;code&gt;$_&lt;/code&gt; is treated as a string of characters, so &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; declarations have no effect, and source filters are forbidden. In the absence of the &lt;code&gt;unicode_eval&lt;/code&gt; feature, the string will sometimes be treated as characters and sometimes as bytes, depending on the internal encoding, and source filters activated within the &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; exhibit the erratic, but historical, behaviour of affecting some outer file scope that is still compiling. See also the &lt;a href=&quot;evalbytes&quot;&gt;evalbytes&lt;/a&gt; keyword, which always treats its input as a byte stream and works properly with source filters, and the &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt; pragma.</source>
          <target state="translated">Если функция &lt;code&gt;unicode_eval&lt;/code&gt; включена (что является значением по умолчанию при объявлении &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; 5.16&lt;/code&gt; или более поздней версии ), EXPR или &lt;code&gt;$_&lt;/code&gt; обрабатываются как строка символов, поэтому объявления &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; не имеют эффекта, а исходные фильтры запрещены. В отсутствие функции &lt;code&gt;unicode_eval&lt;/code&gt; строка иногда будет обрабатываться как символы, а иногда как байты, в зависимости от внутренней кодировки, а исходные фильтры, активированные в &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; , демонстрируют неустойчивое, но историческое поведение, влияющее на некоторую внешнюю область действия файла, которая является все еще компилируется. См. Также &lt;a href=&quot;evalbytes&quot;&gt;evalbytes&lt;/a&gt;ключевое слово, которое всегда обрабатывает свой ввод как поток байтов и правильно работает с исходными фильтрами, а также директиву &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="094a307e3b02182e7190ab8c7d41908a31be7b6f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;utf8&lt;/code&gt; option is not given, the encoding of its output file handle will be forced to the detected encoding of the input POD, which preserves whatever the input text is. This ensures backward compatibility with earlier, pre-Unicode versions of this module, without large numbers of Perl warnings.</source>
          <target state="translated">Если опция &lt;code&gt;utf8&lt;/code&gt; не указана, кодировка его дескриптора выходного файла будет принудительно соответствовать обнаруженной кодировке входного POD, которая сохраняет любой входной текст. Это обеспечивает обратную совместимость с более ранними версиями этого модуля, предшествующими Unicode, без большого количества предупреждений Perl.</target>
        </trans-unit>
        <trans-unit id="b5abb9df31ef6516fcae104f653339d0026bd9e0" translate="yes" xml:space="preserve">
          <source>If the AIX Toolbox version of lib gdbm &amp;lt; 1.8.3-5 is installed on your system then Perl will not work. This library contains the header files /opt/freeware/include/gdbm/dbm.h|ndbm.h which conflict with the AIX system versions. The lib gdbm will be automatically removed from the wanted libraries if the presence of one of these two header files is detected. If you want to build Perl with GDBM support then please install at least gdbm-devel-1.8.3-5 (or higher).</source>
          <target state="translated">Если в вашей системе установлена ​​версия lib gdbm &amp;lt;1.8.3-5 для AIX Toolbox, Perl работать не будет. Эта библиотека содержит файлы заголовков /opt/freeware/include/gdbm/dbm.h|ndbm.h, которые конфликтуют с версиями системы AIX. Lib gdbm будет автоматически удален из требуемых библиотек, если будет обнаружен один из этих двух файлов заголовков. Если вы хотите собрать Perl с поддержкой GDBM, установите по крайней мере gdbm-devel-1.8.3-5 (или выше).</target>
        </trans-unit>
        <trans-unit id="e4f37200eb3cc7a4dd0c87959fbb6c2e093e138e" translate="yes" xml:space="preserve">
          <source>If the C function setvbuf() is available, then &lt;code&gt;FileHandle::setvbuf&lt;/code&gt; sets the buffering policy for the FileHandle. The calling sequence for the Perl function is the same as its C counterpart, including the macros &lt;code&gt;_IOFBF&lt;/code&gt; , &lt;code&gt;_IOLBF&lt;/code&gt; , and &lt;code&gt;_IONBF&lt;/code&gt; , except that the buffer parameter specifies a scalar variable to use as a buffer. WARNING: A variable used as a buffer by &lt;code&gt;FileHandle::setvbuf&lt;/code&gt; must not be modified in any way until the FileHandle is closed or until &lt;code&gt;FileHandle::setvbuf&lt;/code&gt; is called again, or memory corruption may result!</source>
          <target state="translated">Если C-функция setvbuf () доступна, тогда &lt;code&gt;FileHandle::setvbuf&lt;/code&gt; устанавливает политику буферизации для FileHandle. Последовательность вызова функции Perl такая же, как и у ее аналога в C, включая макросы &lt;code&gt;_IOFBF&lt;/code&gt; , &lt;code&gt;_IOLBF&lt;/code&gt; и &lt;code&gt;_IONBF&lt;/code&gt; , за исключением того, что параметр buffer указывает скалярную переменную для использования в качестве буфера. ВНИМАНИЕ: переменную, используемую &lt;code&gt;FileHandle::setvbuf&lt;/code&gt; в качестве буфера, нельзя изменять каким-либо образом, пока FileHandle не будет закрыт или пока &lt;code&gt;FileHandle::setvbuf&lt;/code&gt; будет вызван снова, иначе это может привести к повреждению памяти!</target>
        </trans-unit>
        <trans-unit id="1a7ae4abb775cdaecaa965021a5be89b2c2a0678" translate="yes" xml:space="preserve">
          <source>If the C functions fgetpos() and fsetpos() are available, then &lt;code&gt;FileHandle::getpos&lt;/code&gt; returns an opaque value that represents the current position of the FileHandle, and &lt;code&gt;FileHandle::setpos&lt;/code&gt; uses that value to return to a previously visited position.</source>
          <target state="translated">Если доступны функции C fgetpos () и fsetpos (), тогда &lt;code&gt;FileHandle::getpos&lt;/code&gt; возвращает непрозрачное значение, которое представляет текущую позицию FileHandle, а &lt;code&gt;FileHandle::setpos&lt;/code&gt; использует это значение для возврата к ранее посещенной позиции.</target>
        </trans-unit>
        <trans-unit id="50ebbabfe865d409f0b42636c02f4e83fa99aca9" translate="yes" xml:space="preserve">
          <source>If the C functions setbuf() and/or setvbuf() are available, then &lt;code&gt;IO::Handle::setbuf&lt;/code&gt; and &lt;code&gt;IO::Handle::setvbuf&lt;/code&gt; set the buffering policy for an IO::Handle. The calling sequences for the Perl functions are the same as their C counterparts--including the constants &lt;code&gt;_IOFBF&lt;/code&gt; , &lt;code&gt;_IOLBF&lt;/code&gt; , and &lt;code&gt;_IONBF&lt;/code&gt; for setvbuf()--except that the buffer parameter specifies a scalar variable to use as a buffer. You should only change the buffer before any I/O, or immediately after calling flush.</source>
          <target state="translated">Если функции C setbuf () и / или setvbuf () доступны, то &lt;code&gt;IO::Handle::setbuf&lt;/code&gt; и &lt;code&gt;IO::Handle::setvbuf&lt;/code&gt; задают политику буферизации для IO :: Handle. Последовательности вызовов функций Perl такие же, как и их аналоги в C, включая константы &lt;code&gt;_IOFBF&lt;/code&gt; , &lt;code&gt;_IOLBF&lt;/code&gt; и &lt;code&gt;_IONBF&lt;/code&gt; для setvbuf (), за исключением того, что параметр buffer указывает скалярную переменную для использования в качестве буфера. Вы должны изменять буфер только перед любым вводом-выводом или сразу после вызова flush.</target>
        </trans-unit>
        <trans-unit id="cb7a6c24ac237588ebe82997b3227d4077970889" translate="yes" xml:space="preserve">
          <source>If the FHCRC bit is set in the gzip FLG header byte, the CRC16 bytes in the header must match the crc16 value of the gzip header actually read.</source>
          <target state="translated">Если бит FHCRC установлен в байте заголовка gzip FLG,то CRC16 байт в заголовке должен совпадать со значением crc16 фактически прочитанного заголовка gzip.</target>
        </trans-unit>
        <trans-unit id="716df9a8cd6dfb775c171f4188701d3aabf993bd" translate="yes" xml:space="preserve">
          <source>If the PATTERN contains &lt;a href=&quot;../perlretut#Grouping-things-and-hierarchical-matching&quot;&gt;capturing groups&lt;/a&gt;, then for each separator, an additional field is produced for each substring captured by a group (in the order in which the groups are specified, as per &lt;a href=&quot;../perlretut#Backreferences&quot;&gt;backreferences&lt;/a&gt;); if any group does not match, then it captures the &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; value instead of a substring. Also, note that any such additional field is produced whenever there is a separator (that is, whenever a split occurs), and such an additional field does &lt;b&gt;not&lt;/b&gt; count towards the LIMIT. Consider the following expressions evaluated in list context (each returned list is provided in the associated comment):</source>
          <target state="translated">Если ШАБЛОН содержит &lt;a href=&quot;../perlretut#Grouping-things-and-hierarchical-matching&quot;&gt;группы захвата&lt;/a&gt; , то для каждого разделителя создается дополнительное поле для каждой подстроки, захваченной группой (в том порядке, в котором группы указаны, согласно &lt;a href=&quot;../perlretut#Backreferences&quot;&gt;обратным ссылкам&lt;/a&gt; ); если какая-либо группа не соответствует, то вместо подстроки перехватывается значение &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Также обратите внимание, что любое такое дополнительное поле создается всякий раз, когда есть разделитель (то есть всякий раз, когда происходит разделение), и такое дополнительное поле &lt;b&gt;не&lt;/b&gt; учитывается в LIMIT. Рассмотрим следующие выражения, оцениваемые в контексте списка (каждый возвращенный список предоставляется в соответствующем комментарии):</target>
        </trans-unit>
        <trans-unit id="82d842f2ab3731c9a4a0e7946b2b84aa92b80adc" translate="yes" xml:space="preserve">
          <source>If the PATTERN contains &lt;a href=&quot;perlretut#Grouping-things-and-hierarchical-matching&quot;&gt;capturing groups&lt;/a&gt;, then for each separator, an additional field is produced for each substring captured by a group (in the order in which the groups are specified, as per &lt;a href=&quot;perlretut#Backreferences&quot;&gt;backreferences&lt;/a&gt;); if any group does not match, then it captures the &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; value instead of a substring. Also, note that any such additional field is produced whenever there is a separator (that is, whenever a split occurs), and such an additional field does &lt;b&gt;not&lt;/b&gt; count towards the LIMIT. Consider the following expressions evaluated in list context (each returned list is provided in the associated comment):</source>
          <target state="translated">Если ШАБЛОН содержит &lt;a href=&quot;perlretut#Grouping-things-and-hierarchical-matching&quot;&gt;группы захвата&lt;/a&gt; , то для каждого разделителя создается дополнительное поле для каждой подстроки, захваченной группой (в том порядке, в котором группы указаны, согласно &lt;a href=&quot;perlretut#Backreferences&quot;&gt;обратным ссылкам&lt;/a&gt; ); если какая-либо группа не соответствует, то вместо подстроки перехватывается значение &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Также обратите внимание, что любое такое дополнительное поле создается всякий раз, когда есть разделитель (то есть всякий раз, когда происходит разделение), и такое дополнительное поле &lt;b&gt;не&lt;/b&gt; учитывается в LIMIT. Рассмотрим следующие выражения, оцениваемые в контексте списка (каждый возвращенный список предоставляется в соответствующем комментарии):</target>
        </trans-unit>
        <trans-unit id="4e7443d40abaa23829b9ab709311a1922fe461b6" translate="yes" xml:space="preserve">
          <source>If the PERL_PV_PRETTY_ELLIPSES flag is set and not all characters in string were output then an ellipsis &lt;code&gt;...&lt;/code&gt; will be appended to the string. Note that this happens AFTER it has been quoted.</source>
          <target state="translated">Если установлен флаг PERL_PV_PRETTY_ELLIPSES и не все символы в строке были выведены, то к строке будет добавлено многоточие &lt;code&gt;...&lt;/code&gt; Обратите внимание, что это происходит ПОСЛЕ того, как оно было процитировано.</target>
        </trans-unit>
        <trans-unit id="09680d261a6a88f2e5836c919a2510509957b1e5" translate="yes" xml:space="preserve">
          <source>If the PERL_PV_PRETTY_QUOTE flag is set then the result will be double quoted with any double quotes in the string escaped. Otherwise if the PERL_PV_PRETTY_LTGT flag is set then the result be wrapped in angle brackets.</source>
          <target state="translated">Если установлен флаг PERL_PV_PRETTY_QUOTE,то результат будет двойной кавычкой с любыми двойными кавычками в экранированной строке.В противном случае,если установлен флаг PERL_PV_PRETTY_LTGT,то результат будет заключен в угловые скобки.</target>
        </trans-unit>
        <trans-unit id="b990fe2846203877eedfbcf554045c1e773431f8" translate="yes" xml:space="preserve">
          <source>If the POD is inconsistent about the indentation of verbatim blocks, but you have figured out a heuristic to determine how much a particular verbatim block is indented, you can pass a code reference instead. The code reference will be executed with one argument, an array reference of all the lines in the verbatim block, and should return the value to be stripped from each line. For example, if you decide that you're fine to use the first line of the verbatim block to set the standard for indentation of the rest of the block, you can look at the first line and return the appropriate value, like so:</source>
          <target state="translated">Если POD непоследователен в отношении отступов дословных блоков,но вы разобрались в эвристике,чтобы определить,насколько сильно отпечатан конкретный дословный блок,вы можете передать вместо него ссылку на код.Ссылка на код будет выполнена с одним аргументом-ссылкой на массив всех строк в дословном блоке,и должна вернуть значение,которое нужно удалить из каждой строки.Например,если вы решили,что можно использовать первую строку дословного блока для задания стандарта отступов от остальной части блока,вы можете посмотреть на первую строку и вернуть соответствующее значение,подобно этому:</target>
        </trans-unit>
        <trans-unit id="e9fd97e2c853d040e2b1f08382eba5acd7317a9d" translate="yes" xml:space="preserve">
          <source>If the POD source does not include an &lt;code&gt;=encoding&lt;/code&gt; declaration, the parser will attempt to guess the encoding (selecting one of UTF-8 or Latin-1) by examining the first non-ASCII bytes and applying the heuristic described in &lt;a href=&quot;../perlpodspec&quot;&gt;perlpodspec&lt;/a&gt;.</source>
          <target state="translated">Если источник POD не включает объявление &lt;code&gt;=encoding&lt;/code&gt; , синтаксический анализатор попытается угадать кодировку (выбрав один из UTF-8 или Latin-1), проверив первые байты, отличные от ASCII, и применив эвристику, описанную в &lt;a href=&quot;../perlpodspec&quot;&gt;perlpodspec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="539121ee50a224917b8fad7fe828de50a4356761" translate="yes" xml:space="preserve">
          <source>If the POD you're parsing adheres to a consistent indentation policy, you can have such indentation stripped from the beginning of every line of your verbatim blocks. This method tells Pod::Simple what to strip. For two-space indents, you'd use:</source>
          <target state="translated">Если POD,который вы разбираете,придерживается последовательной политики отпечатков,вы можете удалить такой отпечаток с начала каждой строки ваших дословных блоков.Этот метод говорит Pod::Простое,что нужно удалить.Для двухпространственных отступов вы бы использовали:</target>
        </trans-unit>
        <trans-unit id="767d61bbd817028665e597ffd44d52d2f3072a5a" translate="yes" xml:space="preserve">
          <source>If the PV of the SV is an octet sequence in UTF-8 and contains a multiple-byte character, the &lt;code&gt;SvUTF8&lt;/code&gt; flag is turned on so that it looks like a character. If the PV contains only single-byte characters, the &lt;code&gt;SvUTF8&lt;/code&gt; flag stays off. Scans PV for validity and returns false if the PV is invalid UTF-8.</source>
          <target state="translated">Если PV SV является последовательностью октетов в UTF-8 и содержит многобайтовый символ, то &lt;code&gt;SvUTF8&lt;/code&gt; флаг SvUTF8, поэтому он выглядит как символ. Если PV содержит только однобайтовые символы, флаг &lt;code&gt;SvUTF8&lt;/code&gt; остается выключенным. Проверяет PV на достоверность и возвращает false, если PV является недопустимым UTF-8.</target>
        </trans-unit>
        <trans-unit id="5ce916c1cc7717c4e805155c2d7548fbc24c77ee" translate="yes" xml:space="preserve">
          <source>If the Perl script is being executed as &lt;code&gt;perl scriptname&lt;/code&gt; , then the &lt;b&gt;-%c&lt;/b&gt; option must appear on the command line: &lt;code&gt;perl -%c scriptname&lt;/code&gt;.</source>
          <target state="translated">Если сценарий Perl выполняется с именем &lt;code&gt;perl scriptname&lt;/code&gt; , тогда в командной строке должна появиться опция &lt;b&gt;-% c&lt;/b&gt; : &lt;code&gt;perl -%c scriptname&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fde4187a6aa163d9c96f574141763bdd38ae34f7" translate="yes" xml:space="preserve">
          <source>If the Perl script is being executed as a command using the #! mechanism (or its local equivalent), this error can usually be fixed by editing the #! line so that the &lt;b&gt;-%c&lt;/b&gt; option is a part of Perl's first argument: e.g. change &lt;code&gt;perl -n -%c&lt;/code&gt; to &lt;code&gt;perl -%c -n&lt;/code&gt; .</source>
          <target state="translated">Если сценарий Perl выполняется как команда с использованием символа #! механизма (или его локального эквивалента), эту ошибку обычно можно исправить, отредактировав #! так, чтобы параметр &lt;b&gt;-% c&lt;/b&gt; был частью первого аргумента Perl: например, замените &lt;code&gt;perl -n -%c&lt;/code&gt; на &lt;code&gt;perl -%c -n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c878ced38c4f673dcc4c3921e7ce406e54b4b71" translate="yes" xml:space="preserve">
          <source>If the README file seems to be getting too large you may wish to split out some of the sections into separate files: INSTALL, Copying, ToDo etc.</source>
          <target state="translated">Если файл README кажется слишком большим,вы можете разделить некоторые секции на отдельные файлы:УСТАНОВКА,копирование,ToDo и т.д.</target>
        </trans-unit>
        <trans-unit id="bcda0ef071779fc235b5cd85b1d75a393d7ae1e4" translate="yes" xml:space="preserve">
          <source>If the Time::HiRes module has been installed, you can specify the special tag &lt;code&gt;:hireswallclock&lt;/code&gt; for Benchmark (if Time::HiRes is not available, the tag will be silently ignored). This tag will cause the wallclock time to be measured in microseconds, instead of integer seconds. Note though that the speed computations are still conducted in CPU time, not wallclock time.</source>
          <target state="translated">Если модуль Time :: HiRes был установлен, вы можете указать специальный тег &lt;code&gt;:hireswallclock&lt;/code&gt; для Benchmark (если Time :: HiRes недоступен, тег будет автоматически проигнорирован). Этот тег приведет к тому, что время настенных часов будет измеряться в микросекундах, а не в целых секундах. Однако обратите внимание, что вычисления скорости по-прежнему производятся во времени процессора, а не во времени настенных часов.</target>
        </trans-unit>
        <trans-unit id="1e0de044d27a1f06d198fa6cd4b199e7a501a7e3" translate="yes" xml:space="preserve">
          <source>If the UNTIE method exists then the warning above does not occur. Instead the UNTIE method is passed the count of &quot;extra&quot; references and can issue its own warning if appropriate. e.g. to replicate the no UNTIE case this method can be used:</source>
          <target state="translated">Если метод UNTIE существует,то вышеуказанное предупреждение не возникает.Вместо этого методу UNTIE передается количество &quot;лишних&quot; ссылок и при необходимости может выдать собственное предупреждение,например,для повторения случая,когда UNTIE не существует,этот метод не может быть использован:</target>
        </trans-unit>
        <trans-unit id="afcfedf6cd11f719819da193333a7cf6de0732a7" translate="yes" xml:space="preserve">
          <source>If the VERSION argument is present between Module and LIST, then the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; will call the VERSION method in class Module with the given version as an argument. The default VERSION method, inherited from the UNIVERSAL class, croaks if the given version is larger than the value of the variable &lt;code&gt;$Module::VERSION&lt;/code&gt; .</source>
          <target state="translated">Если аргумент VERSION присутствует между Module и LIST, то &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; вызовет метод VERSION в классе Module с заданной версией в качестве аргумента. Метод VERSION по умолчанию, унаследованный от класса UNIVERSAL, хрипит, если данная версия больше, чем значение переменной &lt;code&gt;$Module::VERSION&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28fd8c6bb88e030936b47d8b396e97702a34b855" translate="yes" xml:space="preserve">
          <source>If the VERSION argument is present between Module and LIST, then the &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; will call the VERSION method in class Module with the given version as an argument. The default VERSION method, inherited from the UNIVERSAL class, croaks if the given version is larger than the value of the variable &lt;code&gt;$Module::VERSION&lt;/code&gt; .</source>
          <target state="translated">Если аргумент VERSION присутствует между Module и LIST, то &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; вызовет метод VERSION в классе Module с заданной версией в качестве аргумента. Метод VERSION по умолчанию, унаследованный от класса UNIVERSAL, хрипит, если данная версия больше, чем значение переменной &lt;code&gt;$Module::VERSION&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="333bd150f2ebb931ff98dd0682381076be3b30d6" translate="yes" xml:space="preserve">
          <source>If the XSUB has a return type of &lt;code&gt;void&lt;/code&gt; then the compiler will not declare a RETVAL variable for that function. When using a PPCODE: section no manipulation of the RETVAL variable is required, the section may use direct stack manipulation to place output values on the stack.</source>
          <target state="translated">Если XSUB имеет тип возвращаемого значения &lt;code&gt;void&lt;/code&gt; , то компилятор не будет объявлять переменную RETVAL для этой функции. При использовании секции PPCODE: никаких манипуляций с переменной RETVAL не требуется, секция может использовать прямые манипуляции со стеком для помещения выходных значений в стек.</target>
        </trans-unit>
        <trans-unit id="bebee72fc9aa0a9b169227a410e90f7f3df000ed" translate="yes" xml:space="preserve">
          <source>If the above does not work, or is not adequate for your application, then file a bug report on &lt;a href=&quot;http://rt.cpan.org/Public/&quot;&gt;http://rt.cpan.org/Public/&lt;/a&gt; against the problematic module.</source>
          <target state="translated">Если описанное выше не работает или не подходит для вашего приложения, отправьте отчет об ошибке на &lt;a href=&quot;http://rt.cpan.org/Public/&quot;&gt;http://rt.cpan.org/Public/&lt;/a&gt; для проблемного модуля.</target>
        </trans-unit>
        <trans-unit id="77f8b1f2470978bb7eb295cba54688c501c99623" translate="yes" xml:space="preserve">
          <source>If the above evaluates as true, the following methods will be available on the &lt;code&gt;$result&lt;/code&gt; object.</source>
          <target state="translated">Если приведенное выше значение истинно, для объекта &lt;code&gt;$result&lt;/code&gt; будут доступны следующие методы .</target>
        </trans-unit>
        <trans-unit id="3626e8a47b75cd9814f9aabb6f3226e20a12cd72" translate="yes" xml:space="preserve">
          <source>If the act of unimporting your module (via a &lt;code&gt;&lt;a href=&quot;../functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt;) should cause source code filtering to cease, create an &lt;code&gt;unimport&lt;/code&gt; subroutine, and have it call &lt;code&gt;filter_del&lt;/code&gt; . Make sure that the call to &lt;code&gt;filter_read&lt;/code&gt; or &lt;code&gt;filter_read_exact&lt;/code&gt; in step 5 will not accidentally read past the &lt;code&gt;&lt;a href=&quot;../functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt;. Effectively this limits source code filters to line-by-line operation, unless the &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; subroutine does some fancy pre-pre-parsing of the source code it's filtering.</source>
          <target state="translated">Если акт unimporting вашего модуля (через &lt;code&gt;&lt;a href=&quot;../functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; ) должен вызывать исходный код фильтрации прекратить, создать &lt;code&gt;unimport&lt;/code&gt; подпрограмму, и есть его называют &lt;code&gt;filter_del&lt;/code&gt; . Убедитесь, что вызов &lt;code&gt;filter_read&lt;/code&gt; или &lt;code&gt;filter_read_exact&lt;/code&gt; на шаге 5 случайно не прочитает после &lt;code&gt;&lt;a href=&quot;../functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; . По сути, это ограничивает фильтры исходного кода построчными операциями, если только подпрограмма &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; не выполняет какой-то необычный предварительный анализ исходного кода, который она фильтрует.</target>
        </trans-unit>
        <trans-unit id="f14d384ae54d7fd6956617c902dc52b4f7c913e2" translate="yes" xml:space="preserve">
          <source>If the archive creation fails for any reason, &lt;code&gt;create_archive&lt;/code&gt; will return false. Please use the &lt;code&gt;error&lt;/code&gt; method to find the cause of the failure.</source>
          <target state="translated">Если создание архива по какой-либо причине не удается, &lt;code&gt;create_archive&lt;/code&gt; вернет false. Воспользуйтесь методом &lt;code&gt;error&lt;/code&gt; чтобы найти причину сбоя.</target>
        </trans-unit>
        <trans-unit id="bdb2a47c2b4d923874ce10a47d541cda074eec3d" translate="yes" xml:space="preserve">
          <source>If the argument has any characters in it other than those matching &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;:&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt;, it must be a file</source>
          <target state="translated">Если аргумент имеет какие - либо символы , в нем , кроме тех , которые удовлетворяют &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;:&lt;/code&gt; или &lt;code&gt;'&lt;/code&gt; , то он должен быть файл</target>
        </trans-unit>
        <trans-unit id="6ad412a6b0ecba8c1d6ad813bdece11aeaddeb49" translate="yes" xml:space="preserve">
          <source>If the argument is &quot;/cygdrive&quot;, then just the volume mount settings, and the cygdrive mount prefix are returned.</source>
          <target state="translated">Если аргумент &quot;/cygdrive&quot;,то возвращаются только настройки монтирования тома и префикс монтирования cygdrive.</target>
        </trans-unit>
        <trans-unit id="b2f2982f0afdcf62760763525865c85306c36f4e" translate="yes" xml:space="preserve">
          <source>If the argument is a compiled regular expression as returned by &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt;, then this function returns the pattern.</source>
          <target state="translated">Если аргумент является скомпилированным регулярным выражением, возвращенным &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; , тогда эта функция возвращает шаблон.</target>
        </trans-unit>
        <trans-unit id="7b654339779464179184dbeba32e40251c7e2e80" translate="yes" xml:space="preserve">
          <source>If the argument is a compiled regular expression as returned by &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt;, then this function returns what the optimiser considers to be the longest anchored fixed string and longest floating fixed string in the pattern.</source>
          <target state="translated">Если аргумент является скомпилированным регулярным выражением, возвращенным &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; , то эта функция возвращает то, что оптимизатор считает самой длинной закрепленной фиксированной строкой и самой длинной плавающей фиксированной строкой в ​​шаблоне.</target>
        </trans-unit>
        <trans-unit id="5788205c6ad8a4a8ebfb81bffe26f845a9b7bbcb" translate="yes" xml:space="preserve">
          <source>If the argument is a distribution file name (recognized by embedded slashes), it is processed. If it is a module, CPAN determines the distribution file in which this module is included and processes that, following any dependencies named in the module's META.yml or Makefile.PL (this behavior is controlled by the configuration parameter &lt;code&gt;prerequisites_policy&lt;/code&gt; ). If an argument is enclosed in slashes it is treated as a regular expression: it is expanded and if the result is a single object (distribution, bundle or module), this object is processed.</source>
          <target state="translated">Если аргументом является имя файла распространения (распознается встроенными косыми чертами), он обрабатывается. Если это модуль, CPAN определяет файл распределения , в котором этот модуль включен и процессы , что после каких - либо зависимостей , названные в META.yml модуля или Makefile.PL (это поведение контролируется параметром конфигурации &lt;code&gt;prerequisites_policy&lt;/code&gt; ). Если аргумент заключен в косую черту, он рассматривается как регулярное выражение: он раскрывается, и если результатом является отдельный объект (распределение, пакет или модуль), этот объект обрабатывается.</target>
        </trans-unit>
        <trans-unit id="b117f48b026da0b0825304f95daf71b17bbf61f6" translate="yes" xml:space="preserve">
          <source>If the argument matches only &lt;code&gt;[\w:']&lt;/code&gt;, it must be a module</source>
          <target state="translated">Если аргумент соответствует только &lt;code&gt;[\w:']&lt;/code&gt; , это должен быть модуль</target>
        </trans-unit>
        <trans-unit id="0af3cf093a2df4958131449dc2e48cabc581ef28" translate="yes" xml:space="preserve">
          <source>If the argument matches only &lt;code&gt;\w&lt;/code&gt; , it could either be a module or a file. We will try to find &lt;code&gt;file.pm&lt;/code&gt; first in &lt;code&gt;@INC&lt;/code&gt; and if that fails, we will try to find &lt;code&gt;file&lt;/code&gt; in @INC. If both fail, we die with the respective error messages.</source>
          <target state="translated">Если аргумент соответствует только &lt;code&gt;\w&lt;/code&gt; , это может быть либо модуль, либо файл. Мы будем стараться найти &lt;code&gt;file.pm&lt;/code&gt; первый в &lt;code&gt;@INC&lt;/code&gt; , и если это не удастся, мы будем пытаться найти &lt;code&gt;file&lt;/code&gt; в @INC. Если оба терпят неудачу, мы умираем с соответствующими сообщениями об ошибках.</target>
        </trans-unit>
        <trans-unit id="950fc5f071c3850318ce53caaa9abf5b8d7e4b09" translate="yes" xml:space="preserve">
          <source>If the argument ops disagree with the prototype, for example by having an unacceptable number of arguments, a valid op tree is returned anyway. The error is reflected in the parser state, normally resulting in a single exception at the top level of parsing which covers all the compilation errors that occurred. In the error message, the callee is referred to by the name defined by the</source>
          <target state="translated">Если аргумент ops не согласен с прототипом,например,имея недопустимое количество аргументов,то дерево опций возвращается в любом случае.Ошибка отражается в состоянии синтаксического анализатора,как правило,приводя к единичному исключению на верхнем уровне синтаксического анализа,которое охватывает все возникшие ошибки компиляции.В сообщении об ошибке на callee ссылаются по имени,определяемому параметром</target>
        </trans-unit>
        <trans-unit id="0d4e5120bb33dd7cd87d33b762323635453284d3" translate="yes" xml:space="preserve">
          <source>If the argument to &lt;code&gt;charblock()&lt;/code&gt; is not a known block, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Если аргумент функции &lt;code&gt;charblock()&lt;/code&gt; неизвестен, возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7830cf54412f961c402c681fff76496d227d2f2" translate="yes" xml:space="preserve">
          <source>If the attribute name is unqualified, the attribute is installed in the current package. Otherwise it is installed in the qualifier's package:</source>
          <target state="translated">Если имя атрибута не определено,то атрибут устанавливается в текущем пакете.В противном случае он устанавливается в пакет квалификатора:</target>
        </trans-unit>
        <trans-unit id="c1735572aa151643b864cff0b5bfb1e1bb6554fd" translate="yes" xml:space="preserve">
          <source>If the author's vision of the future of their module is sufficiently different from the vision of the pumpkin holder and perl5-porters as a whole so as to cause serious problems for Perl, the pumpkin holder may choose to formally fork the version of the module in the Perl core from the one maintained by the author. This should not be done lightly and should &lt;b&gt;always&lt;/b&gt; if at all possible be done only after direct input from Larry. If this is done, it must then be made explicit in the module as distributed with the Perl core that it is a forked version and that while it is based on the original author's work, it is no longer maintained by them. This must be noted in both the documentation and in the comments in the source of the module.</source>
          <target state="translated">Если авторское видение будущего своего модуля существенно отличается от видения держателя для тыквы и perl5-porters в целом, чтобы вызвать серьезные проблемы для Perl, держатель для тыквы может решить формально форкнуть версию модуля в ядро Perl из того, что поддерживается автором. Это не следует делать легкомысленно и &lt;b&gt;всегда,&lt;/b&gt; если это вообще возможно, следует делать только после прямого ввода Ларри. Если это будет сделано, тогда в модуле, распространяемом с ядром Perl, должно быть явно указано, что это разветвленная версия, и что, хотя она основана на оригинальной работе автора, она больше не поддерживается ими. Это необходимо отметить как в документации, так и в комментариях в исходном коде модуля.</target>
        </trans-unit>
        <trans-unit id="1ff96c964c43432c71bf023f75aff4edc100165c" translate="yes" xml:space="preserve">
          <source>If the backslash is followed by a single digit, it's a backreference.</source>
          <target state="translated">Если за обратным слешем следует одна цифра,это обратная ссылка.</target>
        </trans-unit>
        <trans-unit id="a1567cb832ddb83a0b923a12411e03c46deba90f" translate="yes" xml:space="preserve">
          <source>If the beginning of some prebuilt path matches</source>
          <target state="translated">Если начало какого-то предварительно построенного пути совпадает</target>
        </trans-unit>
        <trans-unit id="10167b28b5bd2cad97967630ae689888c6716c8a" translate="yes" xml:space="preserve">
          <source>If the block of code given to &lt;a href=&quot;#pairmap&quot;&gt;pairmap&lt;/a&gt; contains lexical variables that are captured by a returned closure, and the closure is executed after the block has been re-used for the next iteration, these lexicals will not see the correct values. For example:</source>
          <target state="translated">Если блок кода, переданный в &lt;a href=&quot;#pairmap&quot;&gt;pairmap,&lt;/a&gt; содержит лексические переменные, которые захватываются возвращенным замыканием, и замыкание выполняется после того, как блок был повторно использован для следующей итерации, эти лексические элементы не будут видеть правильные значения. Например:</target>
        </trans-unit>
        <trans-unit id="440a5d8f345e7d80a2856dd0eeb83f250fbc92a1" translate="yes" xml:space="preserve">
          <source>If the byte length &lt;code&gt;l1&lt;/code&gt; is non-zero, it says how far into &lt;code&gt;s1&lt;/code&gt; to check for fold equality. In other words, &lt;code&gt;s1&lt;/code&gt; +&lt;code&gt;l1&lt;/code&gt; will be used as a goal to reach. The scan will not be considered to be a match unless the goal is reached, and scanning won't continue past that goal. Correspondingly for &lt;code&gt;l2&lt;/code&gt; with respect to &lt;code&gt;s2&lt;/code&gt; .</source>
          <target state="translated">Если длина байта &lt;code&gt;l1&lt;/code&gt; не равна нулю, это говорит, как далеко в &lt;code&gt;s1&lt;/code&gt; проверять равенство сгиба. Другими словами, &lt;code&gt;s1&lt;/code&gt; + &lt;code&gt;l1&lt;/code&gt; будет использоваться как цель для достижения. Сканирование не будет считаться совпадением, если цель не будет достигнута, и сканирование не будет продолжено после этой цели. Соответственно для &lt;code&gt;l2&lt;/code&gt; по &lt;code&gt;s2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b7b55adcf46426f8905247d52b7cd465b36f52b" translate="yes" xml:space="preserve">
          <source>If the c89 compiler complains of syntax errors during the build of the Socket extension then be sure to fix the syntax error in the system header /usr/include/sys/socket.h.</source>
          <target state="translated">Если компилятор c89 жалуется на синтаксические ошибки во время сборки расширения Socket,то обязательно исправьте синтаксическую ошибку в системном заголовке /usr/include/sys/socket.h.</target>
        </trans-unit>
        <trans-unit id="440bf862cd2a86e099efb047265c5fac0693c286" translate="yes" xml:space="preserve">
          <source>If the call is to an lvalue subroutine, and &lt;code&gt;&amp;amp;DB::lsub&lt;/code&gt; is defined &lt;code&gt;&amp;amp;DB::lsub&lt;/code&gt; (</source>
          <target state="translated">Если вызов к подпрограмме - значение, и &lt;code&gt;&amp;amp;DB::lsub&lt;/code&gt; определена &lt;code&gt;&amp;amp;DB::lsub&lt;/code&gt; (</target>
        </trans-unit>
        <trans-unit id="3e23c7323ae1871ee025af31121766b37b8d3a26" translate="yes" xml:space="preserve">
          <source>If the call to &lt;code&gt;load&lt;/code&gt; is from &lt;code&gt;YourPackage&lt;/code&gt; , then that can be further simplified to</source>
          <target state="translated">Если вызов &lt;code&gt;load&lt;/code&gt; &lt;code&gt;YourPackage&lt;/code&gt; из YourPackage , то его можно упростить до</target>
        </trans-unit>
        <trans-unit id="5682bd082d01ef4bbac6126150d3b6f81612d0af" translate="yes" xml:space="preserve">
          <source>If the character following the backslash is an ASCII letter or an ASCII digit, then the sequence may be special; if so, it's listed below. A few letters have not been used yet, so escaping them with a backslash doesn't change them to be special. A future version of Perl may assign a special meaning to them, so if you have warnings turned on, Perl issues a warning if you use such a sequence. [1].</source>
          <target state="translated">Если символ,следующий за обратным слешем,является буквой ASCII или цифрой ASCII,то последовательность может быть специальной;если это так,то она перечислена ниже.Несколько букв еще не были использованы,поэтому их удаление обратным слешем не меняет их на специальные.Будущая версия Perl может присвоить им специальное значение,поэтому,если у вас включены предупреждения,Perl выдаст предупреждение,если вы используете такую последовательность.[1].</target>
        </trans-unit>
        <trans-unit id="da17f25e114b45ba4ef865a9786c813cdbdd1421" translate="yes" xml:space="preserve">
          <source>If the character is canonically decomposable (including Hangul Syllables), it returns the (full) canonical decomposition as a string. Otherwise it returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если символ канонически разложим (включая слоги хангыль), он возвращает (полное) каноническое разложение в виде строки. В противном случае возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68a39c4975b03ffeafb0215bb69dbcb4fdb18e47" translate="yes" xml:space="preserve">
          <source>If the character is compatibility decomposable (including Hangul Syllables), it returns the (full) compatibility decomposition as a string. Otherwise it returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если символ является разложимым по совместимости (включая слоги хангыля), он возвращает (полное) разложение совместимости в виде строки. В противном случае возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65221cae28ebb56c2b7e384de16ed70d718d62d1" translate="yes" xml:space="preserve">
          <source>If the child falls out of scope before &lt;code&gt;finalize&lt;/code&gt; is called, a failure diagnostic will be issued and the child is considered to have failed.</source>
          <target state="translated">Если дочерний элемент выходит за пределы области действия до &lt;code&gt;finalize&lt;/code&gt; , будет выдана диагностика сбоя, и дочерний элемент считается потерпевшим неудачу.</target>
        </trans-unit>
        <trans-unit id="ddc80dbef3fa7a98447bcda86b6b6a922737dbbf" translate="yes" xml:space="preserve">
          <source>If the child process dies for any reason, the next write to CHLD_IN is likely to generate a SIGPIPE in the parent, which is fatal by default. So you may wish to handle this signal.</source>
          <target state="translated">Если дочерний процесс умирает по какой-либо причине,то при следующей записи в CHLD_IN в родительском процессе,скорее всего,будет сгенерирован SIGPIPE,который по умолчанию является фатальным.Поэтому вы,возможно,захотите обработать этот сигнал.</target>
        </trans-unit>
        <trans-unit id="dbd5594c7134763067cde3b54f3bfaeaa68b552a" translate="yes" xml:space="preserve">
          <source>If the child process follows the convention of C programs compiled with the _POSIX_EXIT macro set, the status value will contain the actual value of 0 to 255 returned by that program on a normal exit.</source>
          <target state="translated">Если дочерний процесс следует условию программ на языке С,скомпилированных с набором макросов _POSIX_EXIT,то значение статуса будет содержать фактическое значение от 0 до 255,возвращаемое этой программой при нормальном выходе.</target>
        </trans-unit>
        <trans-unit id="3a2359effbd1215640880aada1292b5fa0877c9a" translate="yes" xml:space="preserve">
          <source>If the class shown in &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt; were placed in the MyClass.pm module, then the following code:</source>
          <target state="translated">Если класс, показанный в &lt;a href=&quot;#SYNOPSIS&quot;&gt;СИНОПСИСЕ,&lt;/a&gt; был помещен в модуль MyClass.pm, то следующий код:</target>
        </trans-unit>
        <trans-unit id="2f9ec72ad3a19d5c4b84af5eba887a50b7eef9b5" translate="yes" xml:space="preserve">
          <source>If the client asks for &quot;fr&quot;, that will look up successfully in %greetings, to the value &quot;Bonjour&quot;. And if the client asks for &quot;i-mingo&quot;, that will look up successfully in %greetings, to the value &quot;Hau'&quot;.</source>
          <target state="translated">Если клиент попросит &quot;fr&quot;,что будет успешно искать в %greetings,к значению &quot;Bonjour&quot;.А если клиент попросит &quot;i-mingo&quot;,что будет успешно искать в %greetings,к значению &quot;Hau'&quot;.</target>
        </trans-unit>
        <trans-unit id="1e012fb4a0052bc107066983e24cd424b0582af0" translate="yes" xml:space="preserve">
          <source>If the code point is unassigned, this returns the block it would belong to if it were assigned. (If the Unicode version being used is so early as to not have blocks, all code points are considered to be in &lt;code&gt;No_Block&lt;/code&gt; .)</source>
          <target state="translated">Если кодовая точка не назначена, возвращается блок, которому она принадлежала бы, если бы была назначена. (Если используемая версия Unicode настолько ранняя, что не имеет блоков, все кодовые точки считаются находящимися в &lt;code&gt;No_Block&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="ced2db748e9e7079888c75fca8f7175caebcea61" translate="yes" xml:space="preserve">
          <source>If the code to be executed doesn't vary, you may use the eval-BLOCK form to trap run-time errors without incurring the penalty of recompiling each time. The error, if any, is still returned in &lt;code&gt;$@&lt;/code&gt; . Examples:</source>
          <target state="translated">Если код, который нужно выполнить, не меняется, вы можете использовать форму eval-BLOCK для перехвата ошибок времени выполнения, не подвергаясь каждый раз повторной компиляции. Ошибка, если таковая имеется, по-прежнему возвращается в &lt;code&gt;$@&lt;/code&gt; . Примеры:</target>
        </trans-unit>
        <trans-unit id="2bd498c74c7384947431c9fbfc4c96437164ae53" translate="yes" xml:space="preserve">
          <source>If the code to execute had been passed in as a string, &lt;code&gt;'$line = &amp;lt;STDIN&amp;gt;'&lt;/code&gt; , there would have been no way for the hypothetical timeout() function to access the lexical variable $line back in its caller's scope.</source>
          <target state="translated">Если бы код для выполнения был передан в виде строки &lt;code&gt;'$line = &amp;lt;STDIN&amp;gt;'&lt;/code&gt; , у гипотетической функции timeout () не было бы возможности получить доступ к лексической переменной $ line обратно в область действия вызывающего объекта.</target>
        </trans-unit>
        <trans-unit id="c5dcda0eb63d695c2273d9f58a5b27fc7e844c60" translate="yes" xml:space="preserve">
          <source>If the configurations variable &lt;code&gt;build_dir_reuse&lt;/code&gt; is set to a true value, then CPAN.pm reads the collected YAML files. If the stored signature matches the currently running perl, the stored state is loaded into memory such that persistence between sessions is effectively established.</source>
          <target state="translated">Если для переменной конфигурации &lt;code&gt;build_dir_reuse&lt;/code&gt; задано истинное значение, то CPAN.pm читает собранные файлы YAML. Если сохраненная подпись совпадает с текущим запущенным perl, сохраненное состояние загружается в память, так что сохраняется постоянство между сеансами.</target>
        </trans-unit>
        <trans-unit id="a91d44bc473043f072a494275450d9c876250d17" translate="yes" xml:space="preserve">
          <source>If the connection is via a firewall then the &lt;code&gt;authorize&lt;/code&gt; method will be called with no arguments.</source>
          <target state="translated">Если соединение осуществляется через брандмауэр, то метод &lt;code&gt;authorize&lt;/code&gt; будет вызываться без аргументов.</target>
        </trans-unit>
        <trans-unit id="880ff18ec98ddcf514d383275dae13c355bbcadf" translate="yes" xml:space="preserve">
          <source>If the construct is a here-doc, the ending delimiter is a line that has a terminating string as the content. Therefore &lt;code&gt;&amp;lt;&amp;lt;EOF&lt;/code&gt; is terminated by &lt;code&gt;EOF&lt;/code&gt; immediately followed by &lt;code&gt;&quot;\n&quot;&lt;/code&gt; and starting from the first column of the terminating line. When searching for the terminating line of a here-doc, nothing is skipped. In other words, lines after the here-doc syntax are compared with the terminating string line by line.</source>
          <target state="translated">Если конструкция представляет собой документ-документ, конечный разделитель - это строка, содержащая завершающую строку в качестве содержимого. Поэтому &lt;code&gt;&amp;lt;&amp;lt;EOF&lt;/code&gt; завершается символом &lt;code&gt;EOF&lt;/code&gt; , за которым сразу следует &lt;code&gt;&quot;\n&quot;&lt;/code&gt; начиная с первого столбца завершающей строки. При поиске завершающей строки документа здесь ничего не пропускается. Другими словами, строки после синтаксиса here-doc сравниваются с завершающей строкой построчно.</target>
        </trans-unit>
        <trans-unit id="e1f5405c8fb7cef756ea27523f26d6d391697258" translate="yes" xml:space="preserve">
          <source>If the constructor fails undef will be returned and an error message will be in $@</source>
          <target state="translated">Если конструктор откажет undef,то будет возвращено сообщение об ошибке в $@@</target>
        </trans-unit>
        <trans-unit id="a03d6a855f28c1f0fcb373d36da3e2b752b1b618" translate="yes" xml:space="preserve">
          <source>If the constructor is only passed a single argument, it is assumed to be a &lt;code&gt;Peer&lt;/code&gt; specification.</source>
          <target state="translated">Если конструктору передается только один аргумент, предполагается, что это спецификация &lt;code&gt;Peer&lt;/code&gt; узла.</target>
        </trans-unit>
        <trans-unit id="59d6c514d80580b526f459658680b5bcb3039600" translate="yes" xml:space="preserve">
          <source>If the constructor is only passed a single argument, it is assumed to be a &lt;code&gt;PeerAddr&lt;/code&gt; specification.</source>
          <target state="translated">Если конструктору передается только один аргумент, предполагается, что это спецификация &lt;code&gt;PeerAddr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c1d4da7e238174b01de906293d93c6822b7ffed" translate="yes" xml:space="preserve">
          <source>If the count doesn't impress your friends, then the code might. :-)</source>
          <target state="translated">Если граф не впечатлит твоих друзей,то код может.:-)</target>
        </trans-unit>
        <trans-unit id="e2812a31f32729d7d8acbab2252b618f1597089e" translate="yes" xml:space="preserve">
          <source>If the current directory is not writable, file is created using modified &lt;code&gt;tmpnam&lt;/code&gt; , so there may be a race condition.</source>
          <target state="translated">Если текущий каталог недоступен для записи, файл создается с использованием модифицированного &lt;code&gt;tmpnam&lt;/code&gt; , поэтому может быть состояние гонки.</target>
        </trans-unit>
        <trans-unit id="494e23aba89eecf5e12f5237686e230eddf4cf1f" translate="yes" xml:space="preserve">
          <source>If the current tests are considered &quot;TODO&quot; it will return the reason, if any. This reason can come from a &lt;code&gt;$TODO&lt;/code&gt; variable or the last call to &lt;code&gt;todo_start()&lt;/code&gt; .</source>
          <target state="translated">Если текущие тесты считаются &amp;laquo;TODO&amp;raquo;, он вернет причину, если таковая имеется. Причина может исходить из переменной &lt;code&gt;$TODO&lt;/code&gt; или последнего вызова &lt;code&gt;todo_start()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dc2b173d8d4940a748b9c83e49e0862799d41a0" translate="yes" xml:space="preserve">
          <source>If the debugging output of &lt;code&gt;-D&lt;/code&gt; doesn't help you, it's time to step through perl's execution with a source-level debugger.</source>
          <target state="translated">Если отладочные данные &lt;code&gt;-D&lt;/code&gt; вам не помогают, пора пошагово выполнить выполнение perl с помощью отладчика исходного уровня.</target>
        </trans-unit>
        <trans-unit id="5d9b61b179e59a5faa76c718b44a80bf30b29231" translate="yes" xml:space="preserve">
          <source>If the deferred-write buffer isn't yet full, but the total size of the buffer and the read cache would exceed the &lt;code&gt;memory&lt;/code&gt; limit, the oldest records will be expired from the read cache until the total size is under the limit.</source>
          <target state="translated">Если буфер отложенной записи еще не заполнен, но общий размер буфера и кеша чтения превысит предел &lt;code&gt;memory&lt;/code&gt; , самые старые записи будут удалены из кэша чтения до тех пор, пока общий размер не станет ниже ограничения.</target>
        </trans-unit>
        <trans-unit id="2d787ba93d433e8611c0010f5b5125e21c2fae5b" translate="yes" xml:space="preserve">
          <source>If the delimiter chosen is a single quote, no interpolation is done on either the</source>
          <target state="translated">Если выбранный разделитель является единственной кавычкой,то интерполяция не выполняется ни на одной из кавычек</target>
        </trans-unit>
        <trans-unit id="fd691ad27529116a3a5593dc1f80d4b01d408999" translate="yes" xml:space="preserve">
          <source>If the destination (second argument) already exists and is a directory, and the source (first argument) is not a filehandle, then the source file will be copied into the directory specified by the destination, using the same base name as the source file. It's a failure to have a filehandle as the source when the destination is a directory.</source>
          <target state="translated">Если назначение (второй аргумент)уже существует и является каталогом,а исходный файл (первый аргумент)не является файловой рукояткой,то исходный файл будет скопирован в каталог,указанный назначением,с тем же базовым именем,что и исходный файл.Это неспособность иметь файловую папку в качестве источника,когда целевой каталог является каталогом.</target>
        </trans-unit>
        <trans-unit id="bf967ef029273cc2d212ca164cc9a8a6a20b4430" translate="yes" xml:space="preserve">
          <source>If the element type does not start with a &lt;code&gt;'*'&lt;/code&gt; , the accessor returns the element value (after assignment). If the element type starts with a &lt;code&gt;'*'&lt;/code&gt; , a reference to the element itself is returned.</source>
          <target state="translated">Если тип элемента не начинается с &lt;code&gt;'*'&lt;/code&gt; , метод доступа возвращает значение элемента (после присвоения). Если тип элемента начинается с &lt;code&gt;'*'&lt;/code&gt; , возвращается ссылка на сам элемент.</target>
        </trans-unit>
        <trans-unit id="4e23930732591461e14ec21d8b1f90dcd530ad74" translate="yes" xml:space="preserve">
          <source>If the element type is &lt;code&gt;'$'&lt;/code&gt; , the value of the element (after assignment) is returned. If the element type is &lt;code&gt;'*$'&lt;/code&gt; , a reference to the element is returned.</source>
          <target state="translated">Если тип элемента - &lt;code&gt;'$'&lt;/code&gt; , возвращается значение элемента (после присвоения). Если тип элемента - &lt;code&gt;'*$'&lt;/code&gt; , возвращается ссылка на элемент.</target>
        </trans-unit>
        <trans-unit id="1bac597df37b35f3a7dd05dd8ec187e68ab2f23b" translate="yes" xml:space="preserve">
          <source>If the empty regex &lt;code&gt;//&lt;/code&gt; is used, the string is split into individual characters. If the regex has groupings, then the list produced contains the matched substrings from the groupings as well:</source>
          <target state="translated">Если используется пустое регулярное выражение &lt;code&gt;//&lt;/code&gt; , строка разбивается на отдельные символы. Если в регулярном выражении есть группировки, то созданный список также содержит совпадающие подстроки из групп:</target>
        </trans-unit>
        <trans-unit id="8e04e07bd20c824f00e23be10a97b35d7d8bdaf8" translate="yes" xml:space="preserve">
          <source>If the empty regexp &lt;code&gt;//&lt;/code&gt; is used, the regexp always matches and the string is split into individual characters. If the regexp has groupings, then the resulting list contains the matched substrings from the groupings as well. For instance,</source>
          <target state="translated">Если используется пустое регулярное выражение &lt;code&gt;//&lt;/code&gt; , регулярное выражение всегда совпадает, и строка разбивается на отдельные символы. Если в регулярном выражении есть группировки, то результирующий список также будет содержать совпавшие подстроки из группировок. Например,</target>
        </trans-unit>
        <trans-unit id="9160efcd7b61ecdb5eab89bb5f1048b8690bd897" translate="yes" xml:space="preserve">
          <source>If the entereval op is permitted then the code can use eval &quot;...&quot; to 'hide' code which might use denied ops. This is not a major problem since when the code tries to execute the eval it will fail because the opmask is still in effect. However this technique would allow clever, and possibly harmful, code to 'probe' the boundaries of what is possible.</source>
          <target state="translated">Если опция entereval разрешена,то код может использовать eval &quot;...&quot; для &quot;скрытия&quot; кода,который может использовать запрещенные опции.Это не является серьезной проблемой,так как когда код попытается выполнить eval,он не справится,так как оптическая маска все еще в действии.Однако эта методика позволит умному и,возможно,вредному коду 'прощупать' границы возможного.</target>
        </trans-unit>
        <trans-unit id="a6dd91d8fc44e261add22f788040f3b0d9653b9a" translate="yes" xml:space="preserve">
          <source>If the environment variable &lt;code&gt;PERL_TEST_HARNESS_DUMP_TAP&lt;/code&gt; is defined it should name a directory into which a copy of the raw TAP for each test will be written. TAP is written to files named for each test. Subdirectories will be created as needed.</source>
          <target state="translated">Если переменная среды &lt;code&gt;PERL_TEST_HARNESS_DUMP_TAP&lt;/code&gt; определена, она должна указать имя каталога, в который будет записана копия необработанного TAP для каждого теста. TAP записывается в файлы, названные для каждого теста. Подкаталоги будут созданы по мере необходимости.</target>
        </trans-unit>
        <trans-unit id="9e66c1c6198ecf06cc2142e9e5e1dd957bf8c18d" translate="yes" xml:space="preserve">
          <source>If the executable called by system()/exec()/pipe-open()/&lt;code&gt;``&lt;/code&gt; is a script with the &quot;magic&quot; &lt;code&gt;#!&lt;/code&gt; line or &lt;code&gt;extproc&lt;/code&gt; line which specifies shell;</source>
          <target state="translated">Если исполняемый файл, вызываемый system () / exec () / pipe-open () / &lt;code&gt;``&lt;/code&gt; , является сценарием с &quot;волшебным&quot; &lt;code&gt;#!&lt;/code&gt; line или &lt;code&gt;extproc&lt;/code&gt; строка, определяющая оболочку;</target>
        </trans-unit>
        <trans-unit id="2a754fbd5a5705920e61152dd8c6911b9ca9d965" translate="yes" xml:space="preserve">
          <source>If the executable called by system()/exec()/pipe-open()/&lt;code&gt;``&lt;/code&gt; is a script without &quot;magic&quot; line, and &lt;code&gt;$ENV{EXECSHELL}&lt;/code&gt; is set to shell;</source>
          <target state="translated">Если исполняемый файл, вызываемый system () / exec () / pipe-open () / &lt;code&gt;``&lt;/code&gt; является сценарием без &quot;волшебной&quot; строки, а для &lt;code&gt;$ENV{EXECSHELL}&lt;/code&gt; установлено значение оболочки;</target>
        </trans-unit>
        <trans-unit id="6143c4a0521be912f40be9869aedf7b75cf3c5aa" translate="yes" xml:space="preserve">
          <source>If the executable called by system()/exec()/pipe-open()/&lt;code&gt;``&lt;/code&gt; is not found (is not this remark obsolete?);</source>
          <target state="translated">Если исполняемый файл, вызываемый system () / exec () / pipe-open () / &lt;code&gt;``&lt;/code&gt; , не найден (разве это замечание не устарело?);</target>
        </trans-unit>
        <trans-unit id="50b9d8b532d25e89b151dc2833716077761d9468" translate="yes" xml:space="preserve">
          <source>If the exit status used is less than 2, then output is printed on &lt;code&gt;STDOUT&lt;/code&gt; . Otherwise output is printed on &lt;code&gt;STDERR&lt;/code&gt; .</source>
          <target state="translated">Если используемый статус выхода меньше 2, то вывод выводится на &lt;code&gt;STDOUT&lt;/code&gt; . В противном случае вывод печатается на &lt;code&gt;STDERR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48f5e0e5ea6330c7048648eb2edf1ad4ccc05a55" translate="yes" xml:space="preserve">
          <source>If the experimental &quot;bitwise&quot; feature is enabled (see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;), a fifth TRUE argument is passed to subroutines handling &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;~&lt;/code&gt; . This indicates that the caller is expecting numeric behaviour. The fourth argument will be &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, as that position (&lt;code&gt;$_[3]&lt;/code&gt; ) is reserved for use by &lt;a href=&quot;#nomethod&quot;&gt;nomethod&lt;/a&gt;.</source>
          <target state="translated">Если экспериментальная &amp;laquo;побитовая&amp;raquo; функция включена (см. &lt;a href=&quot;feature&quot;&gt;Функцию&lt;/a&gt; ), пятый аргумент ИСТИНА передается подпрограммам, обрабатывающим &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;^&lt;/code&gt; и &lt;code&gt;~&lt;/code&gt; . Это указывает на то, что вызывающий ожидает числовое поведение. Четвертым аргументом будет &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , поскольку эта позиция ( &lt;code&gt;$_[3]&lt;/code&gt; ) зарезервирована для использования &lt;a href=&quot;#nomethod&quot;&gt;nomethod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d70ab84f3a316c00496bd0dced7b93acc9fa6af" translate="yes" xml:space="preserve">
          <source>If the experimental &quot;bitwise&quot; feature is enabled via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'bitwise'&lt;/code&gt; , then this operator always treats its operand as numbers. This feature produces a warning unless you also use &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings
'experimental::bitwise'&lt;/code&gt; .</source>
          <target state="translated">Если экспериментальная &amp;laquo;побитовая&amp;raquo; функция включена через &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'bitwise'&lt;/code&gt; , то этот оператор всегда обрабатывает свой операнд как числа. Эта функция выдаст предупреждение , если вы также не использовать без &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'experimental::bitwise'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="429f3423b67c7b1e2fda19e3e61bde6079c26d75" translate="yes" xml:space="preserve">
          <source>If the experimental &quot;bitwise&quot; feature is enabled via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'bitwise'&lt;/code&gt; , then unary &lt;code&gt;&quot;~&quot;&lt;/code&gt; always treats its argument as a number, and an alternate form of the operator, &lt;code&gt;&quot;~.&quot;&lt;/code&gt; , always treats its argument as a string. So &lt;code&gt;~0&lt;/code&gt; and &lt;code&gt;~&quot;0&quot;&lt;/code&gt; will both give 2**32-1 on 32-bit platforms, whereas &lt;code&gt;~.0&lt;/code&gt; and &lt;code&gt;~.&quot;0&quot;&lt;/code&gt; will both yield &lt;code&gt;&quot;\xff&quot;&lt;/code&gt; . This feature produces a warning unless you use &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'experimental::bitwise'&lt;/code&gt; .</source>
          <target state="translated">Если функция экспериментальной &amp;laquo;побитовая&amp;raquo; включена с помощью &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'bitwise'&lt;/code&gt; , то одноместный &lt;code&gt;&quot;~&quot;&lt;/code&gt; всегда рассматривает свой аргумент как номер, и альтернативный вид оператора, &lt;code&gt;&quot;~.&quot;&lt;/code&gt; . , всегда рассматривает свой аргумент как строку. Таким образом, &lt;code&gt;~0&lt;/code&gt; и &lt;code&gt;~&quot;0&quot;&lt;/code&gt; будут давать 2 ** 32-1 на 32-битных платформах, тогда как &lt;code&gt;~.0&lt;/code&gt; и &lt;code&gt;~.&quot;0&quot;&lt;/code&gt; будут давать &lt;code&gt;&quot;\xff&quot;&lt;/code&gt; . Эта функция выдаст предупреждение , если не использовать без &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'experimental::bitwise'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44c964489535901a948a3b23073f9b9bb3c0a3e6" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a label name, its scope will be resolved dynamically. This allows for computed &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt;s per FORTRAN, but isn't necessarily recommended if you're optimizing for maintainability:</source>
          <target state="translated">Если выражение оценивается как имя метки, его область видимости будет разрешена динамически. Это позволяет вычислять &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; для FORTRAN, но не обязательно рекомендуется, если вы оптимизируете для удобства сопровождения:</target>
        </trans-unit>
        <trans-unit id="c0c3c70b730f0e2950f8179af548175b3c6ef32a" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a label name, its scope will be resolved dynamically. This allows for computed &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt;s per FORTRAN, but isn't necessarily recommended if you're optimizing for maintainability:</source>
          <target state="translated">Если выражение оценивается как имя метки, его область видимости будет разрешена динамически. Это позволяет вычислять &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; для FORTRAN, но не обязательно рекомендуется, если вы оптимизируете для удобства сопровождения:</target>
        </trans-unit>
        <trans-unit id="3a5f344d7e209018f81b3bb395e41710ea76000e" translate="yes" xml:space="preserve">
          <source>If the extension doesn't contain a &lt;code&gt;*&lt;/code&gt; , then it is appended to the end of the current filename as a suffix. If the extension does contain one or more &lt;code&gt;*&lt;/code&gt; characters, then each &lt;code&gt;*&lt;/code&gt; is replaced with the current filename. In Perl terms, you could think of this as:</source>
          <target state="translated">Если расширение не содержит &lt;code&gt;*&lt;/code&gt; , оно добавляется в конец текущего имени файла как суффикс. Если расширение действительно содержит один или несколько символов &lt;code&gt;*&lt;/code&gt; , то каждый &lt;code&gt;*&lt;/code&gt; заменяется текущим именем файла. В терминах Perl это можно представить как:</target>
        </trans-unit>
        <trans-unit id="912122ed04813ef6afa69c21de9ff5d7b9578a1b" translate="yes" xml:space="preserve">
          <source>If the extension links to a library that it builds, set this to the name of the library (see SDBM_File)</source>
          <target state="translated">Если расширение ссылается на библиотеку,которую оно собирает,установите это в имя библиотеки (см.SDBM_File)</target>
        </trans-unit>
        <trans-unit id="d3a643174ddd0d9876c30f4ff9ae6dc788ca282c" translate="yes" xml:space="preserve">
          <source>If the extension might need extra libraries, they should be included here. The extension Makefile.PL will take care of checking whether the libraries actually exist and how they should be loaded. The extra libraries should be specified in the form -lm -lposix, etc, just as on the cc command line. By default, the Makefile.PL will search through the library path determined by Configure. That path can be augmented by including arguments of the form &lt;b&gt;-L/another/library/path&lt;/b&gt; in the extra-libraries argument.</source>
          <target state="translated">Если для расширения могут потребоваться дополнительные библиотеки, их следует включить сюда. Расширение Makefile.PL позаботится о том, чтобы проверить, существуют ли библиотеки на самом деле и как они должны быть загружены. Дополнительные библиотеки должны быть указаны в форме -lm -lposix и т. Д., Как и в командной строке cc. По умолчанию Makefile.PL будет искать путь к библиотеке, определенный с помощью Configure. Этот путь можно расширить, включив аргументы формы &lt;b&gt;-L / another / library / path&lt;/b&gt; в аргумент дополнительных библиотек.</target>
        </trans-unit>
        <trans-unit id="effa256cfcef0cdd6582a1503da6bdf1fb1d1f9e" translate="yes" xml:space="preserve">
          <source>If the external</source>
          <target state="translated">Если внешний</target>
        </trans-unit>
        <trans-unit id="2e204c469081d0ce7742a3d71bcaeedaf9240cda" translate="yes" xml:space="preserve">
          <source>If the extractor fails to match (in the case of a regex extractor), or returns an empty list or an undefined value (in the case of a subroutine extractor), it is assumed to have failed to extract. If none of the extractor subroutines succeeds, then one character is extracted from the start of the text and the extraction subroutines reapplied. Characters which are thus removed are accumulated and eventually become the next field (unless the fourth argument is true, in which case they are discarded).</source>
          <target state="translated">Если извлекающее устройство не соответствует (в случае регрессивного извлекающего устройства),или возвращает пустой список или неопределенное значение (в случае подпрограммного извлекающего устройства),предполагается,что извлечение не удалось.Если ни одна из подпрограмм извлечения не удается,то один символ извлекается из начала текста,а подпрограммы извлечения применяются повторно.Символы,которые таким образом удаляются,накапливаются и в конце концов становятся следующим полем (если только четвертый аргумент не верен,в этом случае они отбрасываются).</target>
        </trans-unit>
        <trans-unit id="17d2c98a680d0b983c00126ba7fbf7037583b89d" translate="yes" xml:space="preserve">
          <source>If the extractor is a hash reference, it must contain exactly one element. The value of that element is one of the above extractor types (subroutine reference, regular expression, or string). The key of that element is the name of a class into which the successful return value of the extractor will be blessed.</source>
          <target state="translated">Если экстрактор является ссылкой на хэш,то он должен содержать ровно один элемент.Значение этого элемента является одним из вышеперечисленных типов экстрактора (подпрограммная ссылка,регулярное выражение или строка).Ключом к этому элементу является имя класса,в который будет благословлено успешное возвращение значения экстрактора.</target>
        </trans-unit>
        <trans-unit id="a2187e610c6c9ce986c9ab2bc434fe210c96d6c7" translate="yes" xml:space="preserve">
          <source>If the extractor is a precompiled regular expression or a string, it is matched against the text in a scalar context with a leading '\G' and the gc modifiers enabled. The extracted value is either $1 if that variable is defined after the match, or else the complete match (i.e. $&amp;amp;).</source>
          <target state="translated">Если экстрактор является предварительно скомпилированным регулярным выражением или строкой, он сопоставляется с текстом в скалярном контексте с ведущим '\ G' и включенными модификаторами gc. Извлеченное значение - либо $ 1, если эта переменная определена после совпадения, либо полное совпадение (например, $ &amp;amp;).</target>
        </trans-unit>
        <trans-unit id="8efec72894ea829331e728164da92723ccc10f46" translate="yes" xml:space="preserve">
          <source>If the extractor is a subroutine it is called in a list context and is expected to return a list of a single element, namely the extracted text. It may optionally also return two further arguments: a string representing the text left after extraction (like $' for a pattern match), and a string representing any prefix skipped before the extraction (like $` in a pattern match). Note that this is designed to facilitate the use of other Text::Balanced subroutines with &lt;code&gt;extract_multiple&lt;/code&gt; . Note too that the value returned by an extractor subroutine need not bear any relationship to the corresponding substring of the original text (see examples below).</source>
          <target state="translated">Если экстрактор является подпрограммой, он вызывается в контексте списка и, как ожидается, вернет список из одного элемента, а именно извлеченного текста. При желании он также может возвращать два дополнительных аргумента: строку, представляющую текст, оставшийся после извлечения (например, $ 'для сопоставления с шаблоном), и строку, представляющую любой префикс, пропущенный перед извлечением (например, $ `в сопоставлении с образцом). Обратите внимание, что это предназначено для облегчения использования других подпрограмм Text :: Balanced с &lt;code&gt;extract_multiple&lt;/code&gt; . Также обратите внимание, что значение, возвращаемое подпрограммой экстрактора, не обязательно должно иметь какое-либо отношение к соответствующей подстроке исходного текста (см. Примеры ниже).</target>
        </trans-unit>
        <trans-unit id="e4293d2972da49b7deee5cbac8e57e93be999a13" translate="yes" xml:space="preserve">
          <source>If the file is a symlink, the file it's pointing to</source>
          <target state="translated">Если файл является сим-ссылкой,то файл,на который он указывает.</target>
        </trans-unit>
        <trans-unit id="1260f14708b5c4f0e969b3d9b19ac87d75cb1573" translate="yes" xml:space="preserve">
          <source>If the file is pulled in by &lt;code&gt;perl_parse()&lt;/code&gt; , compiled into a newly constructed interpreter, and subsequently cleaned out with &lt;code&gt;perl_destruct()&lt;/code&gt; afterwards, you're shielded from most namespace troubles.</source>
          <target state="translated">Если файл извлекается с помощью &lt;code&gt;perl_parse()&lt;/code&gt; , компилируется во вновь созданный интерпретатор и впоследствии очищается с помощью &lt;code&gt;perl_destruct()&lt;/code&gt; , вы защищены от большинства проблем с пространством имен.</target>
        </trans-unit>
        <trans-unit id="972b095c8cf0635710238db90318d20a5a12c4b1" translate="yes" xml:space="preserve">
          <source>If the file named by FILENAME does not exist and the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; call creates it (typically because MODE includes the &lt;code&gt;O_CREAT&lt;/code&gt; flag), then the value of PERMS specifies the permissions of the newly created file. If you omit the PERMS argument to &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, Perl uses the octal value &lt;code&gt;0666&lt;/code&gt; . These permission values need to be in octal, and are modified by your process's current &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если файл, названный FILENAME, не существует и вызов &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; создает его (обычно потому, что MODE включает флаг &lt;code&gt;O_CREAT&lt;/code&gt; ), тогда значение PERMS определяет разрешения для вновь созданного файла. Если вы опустите аргумент PERMS для &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; , Perl будет использовать восьмеричное значение &lt;code&gt;0666&lt;/code&gt; . Эти значения разрешений должны быть восьмеричными и изменяются текущей &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; вашего процесса .</target>
        </trans-unit>
        <trans-unit id="8aa66e9311c9629d0b8c20e950c88829b4d37f7e" translate="yes" xml:space="preserve">
          <source>If the file named by FILENAME does not exist and the &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; call creates it (typically because MODE includes the &lt;code&gt;O_CREAT&lt;/code&gt; flag), then the value of PERMS specifies the permissions of the newly created file. If you omit the PERMS argument to &lt;code&gt;&lt;a href=&quot;sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, Perl uses the octal value &lt;code&gt;0666&lt;/code&gt; . These permission values need to be in octal, and are modified by your process's current &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если файл, названный FILENAME, не существует и вызов &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; создает его (обычно потому, что MODE включает флаг &lt;code&gt;O_CREAT&lt;/code&gt; ), тогда значение PERMS определяет разрешения для вновь созданного файла. Если вы опустите аргумент PERMS для &lt;code&gt;&lt;a href=&quot;sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; , Perl будет использовать восьмеричное значение &lt;code&gt;0666&lt;/code&gt; . Эти значения разрешений должны быть восьмеричными и изменяются текущей &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; вашего процесса .</target>
        </trans-unit>
        <trans-unit id="9b9e946eeefcb8ca3ed866d0a22b192157304573" translate="yes" xml:space="preserve">
          <source>If the file to be opened contains binary data instead of text characters, then the &lt;code&gt;MODE&lt;/code&gt; argument to &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; is a little different. Instead of specifying the encoding, you tell Perl that your data are in raw bytes.</source>
          <target state="translated">Если открываемый файл содержит двоичные данные вместо текстовых символов, то аргумент &lt;code&gt;MODE&lt;/code&gt; для &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; немного отличается. Вместо указания кодировки вы сообщаете Perl, что ваши данные находятся в необработанных байтах.</target>
        </trans-unit>
        <trans-unit id="ed7727f14d3896e4199132a911f1277a6913be80" translate="yes" xml:space="preserve">
          <source>If the file was loaded via a hook (e.g. a subroutine reference, see &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; for a description of these hooks), this hook is by default inserted into &lt;code&gt;%INC&lt;/code&gt; in place of a filename. Note, however, that the hook may have set the &lt;code&gt;%INC&lt;/code&gt; entry by itself to provide some more specific info.</source>
          <target state="translated">Если файл был загружен через ловушку (например, ссылку на подпрограмму, описание этих ловушек см. В &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; ), эта ловушка по умолчанию вставляется в &lt;code&gt;%INC&lt;/code&gt; вместо имени файла. Обратите внимание, однако, что ловушка могла сама установить запись &lt;code&gt;%INC&lt;/code&gt; , чтобы предоставить некоторую более конкретную информацию.</target>
        </trans-unit>
        <trans-unit id="6e74503c754d78c3ba0f9051478f8b0d722c72c1" translate="yes" xml:space="preserve">
          <source>If the filehandle came from a piped open, &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; returns false if one of the other syscalls involved fails or if its program exits with non-zero status. If the only problem was that the program exited non-zero, &lt;code&gt;$!&lt;/code&gt; will be set to &lt;code&gt;0&lt;/code&gt; . Closing a pipe also waits for the process executing on the pipe to exit--in case you wish to look at the output of the pipe afterwards--and implicitly puts the exit status value of that command into &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; .</source>
          <target state="translated">Если дескриптор файла произошел от открытого по конвейеру, &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; возвращает false, если один из других задействованных системных вызовов завершился неудачно или его программа завершилась с ненулевым статусом. Если бы единственная проблема заключалась в том, что программа вышла ненулевым образом, &lt;code&gt;$!&lt;/code&gt; будет установлено на &lt;code&gt;0&lt;/code&gt; . Закрытие канала также ожидает завершения процесса, выполняющегося в канале - на случай, если вы хотите впоследствии посмотреть на вывод канала - и неявно помещает значение статуса выхода этой команды в &lt;code&gt;$?&lt;/code&gt; и &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a275dda5ca271e5742fe50c27b80a1dea7fadc2a" translate="yes" xml:space="preserve">
          <source>If the filehandle came from a piped open, &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; returns false if one of the other syscalls involved fails or if its program exits with non-zero status. If the only problem was that the program exited non-zero, &lt;code&gt;$!&lt;/code&gt; will be set to &lt;code&gt;0&lt;/code&gt; . Closing a pipe also waits for the process executing on the pipe to exit--in case you wish to look at the output of the pipe afterwards--and implicitly puts the exit status value of that command into &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; .</source>
          <target state="translated">Если дескриптор файла произошел от открытого по конвейеру, &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; возвращает false, если один из других задействованных системных вызовов завершился неудачно или его программа завершилась с ненулевым статусом. Если бы единственная проблема заключалась в том, что программа вышла ненулевым образом, &lt;code&gt;$!&lt;/code&gt; будет установлено на &lt;code&gt;0&lt;/code&gt; . Закрытие канала также ожидает завершения процесса, выполняющегося в канале - на случай, если вы хотите впоследствии посмотреть на вывод канала - и неявно помещает значение статуса выхода этой команды в &lt;code&gt;$?&lt;/code&gt; и &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fc5e1415bd14e8d1ec6ad1e512653e073ea2d16" translate="yes" xml:space="preserve">
          <source>If the filename supplied contains directory separators (and so is an absolute or relative pathname), and if that file is not found, platforms that append file extensions will do so and try to look for the file with those extensions added, one by one.</source>
          <target state="translated">Если поставляемый файл содержит разделители каталогов (а также абсолютный или относительный каталог),и если этот файл не найден,платформы,которые добавляют расширения файлов,будут делать это и пытаться найти файл с добавленными расширениями,один за другим.</target>
        </trans-unit>
        <trans-unit id="8b638dc989817125971a607e8fa00529b2b307c1" translate="yes" xml:space="preserve">
          <source>If the final value specified is not in the sequence that the magical increment would produce, the sequence goes until the next value would be longer than the final value specified.</source>
          <target state="translated">Если указанное конечное значение не находится в последовательности,которую создал бы магический прирост,то последовательность идет до тех пор,пока следующее значение не будет длиннее указанного конечного значения.</target>
        </trans-unit>
        <trans-unit id="d5f8e1e30b780f6553cc08550f9370ae0ed9b97a" translate="yes" xml:space="preserve">
          <source>If the first argument is a reference to an array, the pseudo-hash will be created with keys from that array. If a second argument is supplied, it must also be a reference to an array whose elements will be used as the values. If the second array contains less elements than the first, the trailing elements of the pseudo-hash will not be initialized. This makes it particularly useful for creating a pseudo-hash from subroutine arguments:</source>
          <target state="translated">Если первым аргументом является ссылка на массив,то будет создан псевдо-хэш с ключами из этого массива.Если поставляется второй аргумент,то это также должна быть ссылка на массив,элементы которого будут использоваться в качестве значений.Если второй массив содержит меньше элементов,чем первый,то трейлинговые элементы псевдо-хэша инициализироваться не будут.Это делает его особенно полезным для создания псевдо-хэша из подпрограммных аргументов:</target>
        </trans-unit>
        <trans-unit id="9f235f80bacbd6f2376896bcd2071e6b6ed89634" translate="yes" xml:space="preserve">
          <source>If the first argument is an empty string &quot;&quot; or is a volume name, i.e. matches the pattern /^[^:]+:/, the resulting path is &lt;b&gt;absolute&lt;/b&gt;.</source>
          <target state="translated">Если первым аргументом является пустая строка &amp;laquo;&amp;raquo; или имя тома, т.е. соответствует шаблону / ^ [^:] +: /, результирующий путь является &lt;b&gt;абсолютным&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="89aa8ef2f6a6df7b419aa16ffe18ced8031ac672" translate="yes" xml:space="preserve">
          <source>If the first character after the &lt;b&gt;-M&lt;/b&gt; or &lt;b&gt;-m&lt;/b&gt; is a dash (&lt;b&gt;-&lt;/b&gt;) then the 'use' is replaced with 'no'.</source>
          <target state="translated">Если первым символом после &lt;b&gt;-M&lt;/b&gt; или &lt;b&gt;-m&lt;/b&gt; является дефис ( &lt;b&gt;-&lt;/b&gt; ), то &amp;laquo;использование&amp;raquo; заменяется на &amp;laquo;нет&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="781d0d29a2affd4018c32ec572f1b116a7081027" translate="yes" xml:space="preserve">
          <source>If the first chars of a Perl script are &lt;code&gt;&quot;extproc &quot;&lt;/code&gt; , this line is treated as &lt;code&gt;#!&lt;/code&gt; -line, thus all the switches on this line are processed (twice if script was started via cmd.exe). See &lt;a href=&quot;perlrun#DESCRIPTION&quot;&gt;DESCRIPTION in perlrun&lt;/a&gt;.</source>
          <target state="translated">Если первые символы сценария Perl - &lt;code&gt;&quot;extproc &quot;&lt;/code&gt; , эта строка обрабатывается как &lt;code&gt;#!&lt;/code&gt; -line, таким образом, все переключатели в этой строке обрабатываются (дважды, если скрипт был запущен через cmd.exe). Смотрите &lt;a href=&quot;perlrun#DESCRIPTION&quot;&gt;ОПИСАНИЕ в perlrun&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f46518f452342a5c022fec8e53026c8608f2e02a" translate="yes" xml:space="preserve">
          <source>If the first digit following the backslash is a 0, it's an octal escape.</source>
          <target state="translated">Если первая цифра после обратного слеша равна 0,то это восьмеричный побег.</target>
        </trans-unit>
        <trans-unit id="5675bafb3dc48482ba4a4f320234c0b4d704c9a0" translate="yes" xml:space="preserve">
          <source>If the first element of the return value (&lt;code&gt;success&lt;/code&gt; ) was 0, then some error occurred. This second element is the error message the command you requested exited with, if available. This is generally a pretty printed value of &lt;code&gt;$?&lt;/code&gt; or &lt;code&gt;$@&lt;/code&gt; . See &lt;code&gt;perldoc perlvar&lt;/code&gt; for details on what they can contain. If the error was a timeout, the &lt;code&gt;error message&lt;/code&gt; will be prefixed with the string &lt;code&gt;IPC::Cmd::TimeOut&lt;/code&gt; , the timeout class.</source>
          <target state="translated">Если первый элемент возвращаемого значения ( &lt;code&gt;success&lt;/code&gt; ) был 0, то произошла ошибка. Этот второй элемент представляет собой сообщение об ошибке, которое запрошенная команда завершила, если доступно. Обычно это красивое печатное значение &lt;code&gt;$?&lt;/code&gt; или &lt;code&gt;$@&lt;/code&gt; . См. &lt;code&gt;perldoc perlvar&lt;/code&gt; для подробностей о том, что они могут содержать. Если ошибка была тайм-аутом, к &lt;code&gt;error message&lt;/code&gt; будет добавлен префикс &lt;code&gt;IPC::Cmd::TimeOut&lt;/code&gt; , класс тайм-аута.</target>
        </trans-unit>
        <trans-unit id="6a57fb9b1830952d24356efef9c0744590e7e139" translate="yes" xml:space="preserve">
          <source>If the first item in a bracket group is &quot;*&quot;, it's taken as shorthand for the so commonly called &quot;quant&quot; method. Similarly, if the first item in a bracket group is &quot;#&quot;, it's taken to be shorthand for &quot;numf&quot;.</source>
          <target state="translated">Если первый пункт в группе скобок-&quot;*&quot;,то он принимается как сокращение для так называемого &quot;квантового&quot; метода.Аналогично,если первый пункт в группе скобок-&quot;#&quot;,он принимается как сокращение от &quot;numf&quot;.</target>
        </trans-unit>
        <trans-unit id="1953104edb77654c33631a60ba8219310b08e426" translate="yes" xml:space="preserve">
          <source>If the first item in a bracket group is the empty-string, or &quot;_*&quot; or &quot;_</source>
          <target state="translated">Если первым пунктом в группе скобок является пустая строка,или &quot;_*&quot;,или &quot;___&quot;,или &quot;___&quot;.</target>
        </trans-unit>
        <trans-unit id="bf6e94a3fad4e68b50306c3295f243e0a73b5811" translate="yes" xml:space="preserve">
          <source>If the first item in a bracket group looks like a method name, then that group is interpreted like this:</source>
          <target state="translated">Если первый элемент в группе скобок выглядит как имя метода,то эта группа интерпретируется следующим образом:</target>
        </trans-unit>
        <trans-unit id="ccf14e3215a8aeb1aa87eb4f44052cead882fc98" translate="yes" xml:space="preserve">
          <source>If the first operand has a &quot;nomethod&quot; method then use that.</source>
          <target state="translated">Если первый операнд имеет метод &quot;нометода&quot;,то используйте его.</target>
        </trans-unit>
        <trans-unit id="a0dadbb13895f7c7975effc9602b93ea5e861379" translate="yes" xml:space="preserve">
          <source>If the first operand has declared a subroutine to overload the operator then use that implementation.</source>
          <target state="translated">Если первый операнд объявил подпрограмму,перегружающую оператор,то используйте эту реализацию.</target>
        </trans-unit>
        <trans-unit id="63722d831a3c09d59c00e59b75ba5f74f6230f38" translate="yes" xml:space="preserve">
          <source>If the flag is present in &lt;code&gt;rx-&amp;gt;extflags&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; will delete whitespace from the start of the subject string before it's operated on. What is considered whitespace depends on if the subject is a UTF-8 string and if the &lt;code&gt;RXf_PMf_LOCALE&lt;/code&gt; flag is set.</source>
          <target state="translated">Если флаг присутствует в &lt;code&gt;rx-&amp;gt;extflags&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; удалит пробелы в начале строки темы перед тем, как с ней работать. То, что считается пробелом, зависит от того, является ли тема строкой UTF-8 и установлен ли флаг &lt;code&gt;RXf_PMf_LOCALE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbc08ae29def75bcb01866771948171d3f78fd50" translate="yes" xml:space="preserve">
          <source>If the function is used across several files, but intended only for Perl's internal use (and this should be the common case), do not export it to the public API. See the discussion about</source>
          <target state="translated">Если функция используется в нескольких файлах,но предназначена только для внутреннего использования Perl (а это должно быть обычным делом),не экспортируйте ее в публичный API.См.обсуждение</target>
        </trans-unit>
        <trans-unit id="0cd096b932efa03a9f98d53e47997c47f5475a48" translate="yes" xml:space="preserve">
          <source>If the function is used only inside one source code file, make it static. See the discussion about</source>
          <target state="translated">Если функция используется только внутри одного файла с исходным кодом,сделайте ее статической.См.обсуждение о</target>
        </trans-unit>
        <trans-unit id="d809f75a0fec341370456ffe5542097322b23570" translate="yes" xml:space="preserve">
          <source>If the function wants to handle the keyword, it first must parse anything following the keyword that is part of the syntax introduced by the keyword. See &lt;a href=&quot;#Lexer-interface&quot;&gt;Lexer interface&lt;/a&gt; for details.</source>
          <target state="translated">Если функция хочет обработать ключевое слово, она сначала должна проанализировать все, что следует за ключевым словом, что является частью синтаксиса, введенного этим ключевым словом. См. Подробности в &lt;a href=&quot;#Lexer-interface&quot;&gt;интерфейсе Lexer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4257aa9162577acd082afc2803cd5eba4d35b6a8" translate="yes" xml:space="preserve">
          <source>If the function's name is &lt;b&gt;DESTROY&lt;/b&gt; then the C++ &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; function will be called and &lt;code&gt;THIS&lt;/code&gt; will be given as its parameter. The generated C++ code for</source>
          <target state="translated">Если имя функции &lt;b&gt;DESTROY,&lt;/b&gt; то будет вызвана функция &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; C ++ , и &lt;code&gt;THIS&lt;/code&gt; будет передан в качестве ее параметра. Сгенерированный код C ++ для</target>
        </trans-unit>
        <trans-unit id="7a9d5afefb1f72725e3effbcde85fc42f858949b" translate="yes" xml:space="preserve">
          <source>If the function's name is &lt;b&gt;new&lt;/b&gt; then the C++ &lt;code&gt;new&lt;/code&gt; function will be called to create a dynamic C++ object. The XSUB will expect the class name, which will be kept in a variable called &lt;code&gt;CLASS&lt;/code&gt; , to be given as the first argument.</source>
          <target state="translated">Если имя функции &lt;b&gt;новое,&lt;/b&gt; то будет вызвана &lt;code&gt;new&lt;/code&gt; функция C ++ для создания динамического объекта C ++. XSUB ожидает, что имя класса, которое будет храниться в переменной &lt;code&gt;CLASS&lt;/code&gt; , будет указано в качестве первого аргумента.</target>
        </trans-unit>
        <trans-unit id="cf92d6194fe17b6faa691c083e3aa66b73fd41bc" translate="yes" xml:space="preserve">
          <source>If the given file is a Storable image return a hash describing it. If the file is readable, but not a Storable image return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. If the file does not exist or is unreadable then croak.</source>
          <target state="translated">Если данный файл является сохраняемым изображением, верните хэш, описывающий его. Если файл доступен для чтения, но не является сохраняемым изображением, верните &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Если файл не существует или не читается, то квакните.</target>
        </trans-unit>
        <trans-unit id="6f5f5dfa299a465aa9a0110ad7326e956c843743" translate="yes" xml:space="preserve">
          <source>If the given string is in FCD (&quot;Fast C or D&quot; form; cf. UTN #5), it returns the string without modification; otherwise it returns an FCD string.</source>
          <target state="translated">Если данная строка находится в форме FCD (&quot;Fast C или D&quot;;ср.UTN #5),то она возвращает строку без модификаций,в противном случае-строку FCD.</target>
        </trans-unit>
        <trans-unit id="12d092a8012a2b0bc17122d5b49e40f14ceca06d" translate="yes" xml:space="preserve">
          <source>If the global variable $KEEP_ALL is true, the file or directory will not be removed.</source>
          <target state="translated">Если глобальная переменная $KEEP_ALL равна true,то файл или каталог не будет удален.</target>
        </trans-unit>
        <trans-unit id="cc1c6dee6d24dc894200423540415887a91afb83" translate="yes" xml:space="preserve">
          <source>If the groupings in a regex are nested, &lt;code&gt;$1&lt;/code&gt; gets the group with the leftmost opening parenthesis, &lt;code&gt;$2&lt;/code&gt; the next opening parenthesis, etc. For example, here is a complex regex and the matching variables indicated below it:</source>
          <target state="translated">Если группировки в регулярном выражении являются вложенными, &lt;code&gt;$1&lt;/code&gt; получает группу с крайней левой открывающей круглой скобкой, &lt;code&gt;$2&lt;/code&gt; - следующей открывающей круглой скобкой и т. Д. Например, вот сложное регулярное выражение и соответствующие переменные, указанные под ним:</target>
        </trans-unit>
        <trans-unit id="83b41f5fdfcf62fc4686ef889212a3544a4d2078" translate="yes" xml:space="preserve">
          <source>If the groupings in a regexp are nested, &lt;code&gt;$1&lt;/code&gt; gets the group with the leftmost opening parenthesis, &lt;code&gt;$2&lt;/code&gt; the next opening parenthesis, etc. Here is a regexp with nested groups:</source>
          <target state="translated">Если группировки в регулярном выражении вложены, &lt;code&gt;$1&lt;/code&gt; получает группу с самой левой открывающей скобкой, &lt;code&gt;$2&lt;/code&gt; - следующей открывающей скобкой и т. Д. Вот регулярное выражение с вложенными группами:</target>
        </trans-unit>
        <trans-unit id="7672fac594e6a7dd98d2bae0c51d24e5065e39e4" translate="yes" xml:space="preserve">
          <source>If the gzip FEXTRA header field is present it must conform to the sub-field structure as defined in RFC 1952.</source>
          <target state="translated">Если присутствует поле заголовка gzip FEXTRA,оно должно соответствовать структуре подполей,определенной в RFC 1952.</target>
        </trans-unit>
        <trans-unit id="948511a86fa3a757ed333c1057a05dc236b1ed7b" translate="yes" xml:space="preserve">
          <source>If the gzip header contains a comment field (FCOMMENT) it consists solely of ISO 8859-1 characters plus line-feed.</source>
          <target state="translated">Если заголовок gzip содержит поле комментария (FCOMMENT),то оно состоит исключительно из символов ISO 8859-1 плюс строчный поток.</target>
        </trans-unit>
        <trans-unit id="309f2d92f5e86ee4880748347a713d797525d1c3" translate="yes" xml:space="preserve">
          <source>If the gzip header contains a name field (FNAME) it consists solely of ISO 8859-1 characters.</source>
          <target state="translated">Если заголовок gzip содержит поле имени (FNAME),то оно состоит исключительно из символов ISO 8859-1.</target>
        </trans-unit>
        <trans-unit id="76da98a8a76e4650e3f026f7c68c78b99cc6936b" translate="yes" xml:space="preserve">
          <source>If the hash is very large, you might not want to create a long list of keys. To save some memory, you can grab one key-value pair at a time using &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt;, which returns a pair you haven't seen yet:</source>
          <target state="translated">Если хэш очень большой, возможно, вы не захотите создавать длинный список ключей. Чтобы сэкономить память, вы можете захватить по одной паре ключ-значение за раз, используя &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt; , который возвращает пару, которую вы еще не видели:</target>
        </trans-unit>
        <trans-unit id="7d353d642decb66a3abbcefcf79e58c99b0ba1e9" translate="yes" xml:space="preserve">
          <source>If the hook is an array reference, its first element must be a subroutine reference. This subroutine is called as above, but the first parameter is the array reference. This lets you indirectly pass arguments to the subroutine.</source>
          <target state="translated">Если крюк является ссылкой на массив,то его первым элементом должна быть ссылка на подпрограмму.Эта подпрограмма вызывается,как описано выше,но первым параметром является ссылка на массив.Это позволяет косвенно передавать аргументы в подпрограмму.</target>
        </trans-unit>
        <trans-unit id="089781c4ed94b59afd45ade73f63dd3ae0adcf17" translate="yes" xml:space="preserve">
          <source>If the hook is an object, it must provide an INC method that will be called as above, the first parameter being the object itself. (Note that you must fully qualify the sub's name, as unqualified &lt;code&gt;INC&lt;/code&gt; is always forced into package &lt;code&gt;main&lt;/code&gt; .) Here is a typical code layout:</source>
          <target state="translated">Если ловушка является объектом, она должна предоставлять метод INC, который будет вызываться, как указано выше, причем первым параметром является сам объект. (Обратите внимание, что вы должны полностью указать имя подпрограммы, поскольку неквалифицированный &lt;code&gt;INC&lt;/code&gt; всегда принудительно помещается в &lt;code&gt;main&lt;/code&gt; пакета .) Вот типичный макет кода:</target>
        </trans-unit>
        <trans-unit id="dc5ac6730609a596bd949c3bb5ec01a23d4ffce0" translate="yes" xml:space="preserve">
          <source>If the initial value specified isn't part of a magical increment sequence (that is, a non-empty string matching &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; ), only the initial value will be returned. So the following will only return an alpha:</source>
          <target state="translated">Если указанное начальное значение не является частью магической последовательности приращения (то есть непустой строки, соответствующей &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; ), только начальное значение будет быть возвращенным. Таким образом, следующее будет возвращать только альфа:</target>
        </trans-unit>
        <trans-unit id="ce1ecd771a78ded6bdca0c84c4a8624d300c4df7" translate="yes" xml:space="preserve">
          <source>If the initialization begins with &lt;code&gt;=&lt;/code&gt; , then it is output in the declaration for the input variable, replacing the initialization supplied by the typemap. If the initialization begins with &lt;code&gt;;&lt;/code&gt; or &lt;code&gt;+&lt;/code&gt; , then it is performed after all of the input variables have been declared. In the &lt;code&gt;;&lt;/code&gt; case the initialization normally supplied by the typemap is not performed. For the &lt;code&gt;+&lt;/code&gt; case, the declaration for the variable will include the initialization from the typemap. A global variable, &lt;code&gt;%v&lt;/code&gt; , is available for the truly rare case where information from one initialization is needed in another initialization.</source>
          <target state="translated">Если инициализация начинается с &lt;code&gt;=&lt;/code&gt; , то она выводится в объявлении для входной переменной, заменяя инициализацию, предоставленную картой типов. Если инициализация начинается с &lt;code&gt;;&lt;/code&gt; или &lt;code&gt;+&lt;/code&gt; , то выполняется после объявления всех входных переменных. В &lt;code&gt;;&lt;/code&gt; в случае, если инициализация, обычно предоставляемая картой типов, не выполняется. Для случая &lt;code&gt;+&lt;/code&gt; объявление переменной будет включать инициализацию из карты типов. Глобальная переменная &lt;code&gt;%v&lt;/code&gt; доступна для действительно редких случаев, когда информация из одной инициализации требуется при другой инициализации.</target>
        </trans-unit>
        <trans-unit id="a641a3d375c74024ce1445924cf66af681f41ebd" translate="yes" xml:space="preserve">
          <source>If the input code point's name has more than one synonym, they are returned joined into a single comma-separated string.</source>
          <target state="translated">Если имя точки входного кода имеет более одного синонима,то они возвращаются объединенными в единую строку,разделенную запятыми.</target>
        </trans-unit>
        <trans-unit id="9e071ed158601437a7fd928632778e71dc9740aa" translate="yes" xml:space="preserve">
          <source>If the input file/buffer contains multiple compressed data streams, this option will uncompress the whole lot as a single data stream.</source>
          <target state="translated">Если входной файл/буфер содержит несколько сжатых потоков данных,то эта опция распаковывает весь лот как один поток данных.</target>
        </trans-unit>
        <trans-unit id="3c582e01c3ed1134227361002db4abc5ef87f0a6" translate="yes" xml:space="preserve">
          <source>If the input is a buffer, &lt;code&gt;trailingData&lt;/code&gt; will return everything from the end of the compressed data stream to the end of the buffer.</source>
          <target state="translated">Если входом является буфер, &lt;code&gt;trailingData&lt;/code&gt; вернет все от конца потока сжатых данных до конца буфера.</target>
        </trans-unit>
        <trans-unit id="646ddea5cc7fe42fca7b5f673b48b7968e951a94" translate="yes" xml:space="preserve">
          <source>If the input is a filehandle, &lt;code&gt;trailingData&lt;/code&gt; will return the data that is left in the filehandle input buffer once the end of the compressed data stream has been reached. You can then use the filehandle to read the rest of the input file.</source>
          <target state="translated">Если входом является дескриптор файла, &lt;code&gt;trailingData&lt;/code&gt; вернет данные, которые остались во входном буфере дескриптора файла, как только будет достигнут конец потока сжатых данных. Затем вы можете использовать дескриптор файла для чтения остальной части входного файла.</target>
        </trans-unit>
        <trans-unit id="68ffb2242fbe49d90e0f353510f536b7c97b26ff" translate="yes" xml:space="preserve">
          <source>If the input is a gzip (RFC 1952) data stream, the following will be checked:</source>
          <target state="translated">Если вход является gzip (RFC 1952)потоком данных,будет проверено следующее:</target>
        </trans-unit>
        <trans-unit id="fbb62e9bad07668939b33bd6b3f35cbd2a29221c" translate="yes" xml:space="preserve">
          <source>If the input is an RFC 1950 data stream, the following will be checked:</source>
          <target state="translated">Если входной сигнал является потоком данных RFC 1950,будет проверено следующее:</target>
        </trans-unit>
        <trans-unit id="681895bf526e306295ee60c6f4d01df1e2e0e233" translate="yes" xml:space="preserve">
          <source>If the input is being interpreted as UTF-8 and a UTF-8 encoding error is encountered, an exception is generated.</source>
          <target state="translated">Если вход интерпретируется как UTF-8 и возникает ошибка кодирования UTF-8,генерируется исключение.</target>
        </trans-unit>
        <trans-unit id="3c3ba700c41877fa613cc375e9afc8a49773890d" translate="yes" xml:space="preserve">
          <source>If the input is unknown &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned in scalar context; an empty-list in list context. If the input is known, the number of elements in the list is returned if called in scalar context.</source>
          <target state="translated">Если вход неизвестен, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; возвращается в скалярном контексте; пустой список в контексте списка. Если входные данные известны, количество элементов в списке возвращается при вызове в скалярном контексте.</target>
        </trans-unit>
        <trans-unit id="a45a90c97d69c88324a18a4a975329202a110a46" translate="yes" xml:space="preserve">
          <source>If the input string is longer than needed, extra characters are ignored.</source>
          <target state="translated">Если входная строка длиннее,чем необходимо,лишние символы игнорируются.</target>
        </trans-unit>
        <trans-unit id="daec947152f5e00d64f719376318858935b663a6" translate="yes" xml:space="preserve">
          <source>If the input string is longer than needed, remaining characters are ignored.</source>
          <target state="translated">Если входная строка длиннее,чем необходимо,оставшиеся символы игнорируются.</target>
        </trans-unit>
        <trans-unit id="1a191161ccbd661c7961516bab02ad1f7aadb16a" translate="yes" xml:space="preserve">
          <source>If the interdependence of your &lt;code&gt;BOOT:&lt;/code&gt; section and Perl code is more complicated than this (e.g., the &lt;code&gt;BOOT:&lt;/code&gt; section makes calls to Perl functions which make calls to XSUBs with prototypes), get rid of the &lt;code&gt;BOOT:&lt;/code&gt; section altogether. Replace it with a function &lt;code&gt;onBOOT()&lt;/code&gt; , and call it like this:</source>
          <target state="translated">Если взаимозависимость раздела &lt;code&gt;BOOT:&lt;/code&gt; и кода Perl более сложна, чем эта (например, раздел &lt;code&gt;BOOT:&lt;/code&gt; вызывает функции Perl, которые вызывают XSUB с прототипами), полностью избавьтесь от раздела &lt;code&gt;BOOT:&lt;/code&gt; . Замените его функцией &lt;code&gt;onBOOT()&lt;/code&gt; и назовите так:</target>
        </trans-unit>
        <trans-unit id="3e4a966e522ce068cba366c74c39330ba735c481" translate="yes" xml:space="preserve">
          <source>If the key does not exist the method returns 1.</source>
          <target state="translated">Если ключ не существует,метод возвращает 1.</target>
        </trans-unit>
        <trans-unit id="f74ad7c032adb69e8741c3ce089dbedf2af387c8" translate="yes" xml:space="preserve">
          <source>If the language handle has a &quot;fail&quot; attribute whose value is a coderef, then $lh-&amp;gt;maketext(</source>
          <target state="translated">Если дескриптор языка имеет атрибут &amp;laquo;fail&amp;raquo;, значение которого является coderef, тогда $ lh-&amp;gt; maketext (</target>
        </trans-unit>
        <trans-unit id="74b0a2c233bae54a5a0a22d4c6904ecf217ffcc9" translate="yes" xml:space="preserve">
          <source>If the language handle has no &quot;fail&quot; attribute, maketext will simply throw an exception (i.e., it calls &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, mentioning the</source>
          <target state="translated">Если язык ручка не имеет &amp;laquo;глючить&amp;raquo; атрибут, maketext будет просто выбросить исключение (то есть, он вызывает &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , упоминая</target>
        </trans-unit>
        <trans-unit id="11f576169bf47c87f2f0af12c0e2e1a4146c280c" translate="yes" xml:space="preserve">
          <source>If the last element of LIST does not end in a newline, the current script line number and input line number (if any) are also printed, and a newline is supplied. Note that the &quot;input line number&quot; (also known as &quot;chunk&quot;) is subject to whatever notion of &quot;line&quot; happens to be currently in effect, and is also available as the special variable &lt;code&gt;$.&lt;/code&gt; . See &lt;a href=&quot;../perlvar#%24%2f&quot;&gt;$/ in perlvar&lt;/a&gt; and &lt;a href=&quot;../perlvar#%24.&quot;&gt;$. in perlvar&lt;/a&gt;.</source>
          <target state="translated">Если последний элемент LIST не заканчивается новой строкой, текущий номер строки сценария и номер строки ввода (если есть) также печатаются, и предоставляется новая строка. Обратите внимание, что &amp;laquo;номер строки ввода&amp;raquo; (также известный как &amp;laquo;кусок&amp;raquo;) зависит от того, какое понятие &amp;laquo;строка&amp;raquo; действует в настоящее время, и также доступен как специальная переменная &lt;code&gt;$.&lt;/code&gt; . Смотрите &lt;a href=&quot;../perlvar#%24%2f&quot;&gt;$ / в perlvar&lt;/a&gt; и &lt;a href=&quot;../perlvar#%24.&quot;&gt;$. в перлварь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ddf8780e7e7d9b3df1dc954871c1e6b0c532c31" translate="yes" xml:space="preserve">
          <source>If the last element of LIST does not end in a newline, the current script line number and input line number (if any) are also printed, and a newline is supplied. Note that the &quot;input line number&quot; (also known as &quot;chunk&quot;) is subject to whatever notion of &quot;line&quot; happens to be currently in effect, and is also available as the special variable &lt;code&gt;$.&lt;/code&gt; . See &lt;a href=&quot;perlvar#%24%2f&quot;&gt;$/ in perlvar&lt;/a&gt; and &lt;a href=&quot;perlvar#%24.&quot;&gt;$. in perlvar&lt;/a&gt;.</source>
          <target state="translated">Если последний элемент LIST не заканчивается новой строкой, текущий номер строки сценария и номер строки ввода (если есть) также печатаются, и предоставляется новая строка. Обратите внимание, что &amp;laquo;номер строки ввода&amp;raquo; (также известный как &amp;laquo;кусок&amp;raquo;) зависит от того, какое понятие &amp;laquo;строка&amp;raquo; действует в настоящее время, и также доступен как специальная переменная &lt;code&gt;$.&lt;/code&gt; . Смотрите &lt;a href=&quot;perlvar#%24%2f&quot;&gt;$ / в perlvar&lt;/a&gt; и &lt;a href=&quot;perlvar#%24.&quot;&gt;$. в перлварь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e90835049bf9dceb2b3128f6e0da3805c87bc497" translate="yes" xml:space="preserve">
          <source>If the left hand side is neither a package name nor an object, then the method call will cause an error, but see the section on &lt;a href=&quot;#Method-Call-Variations&quot;&gt;Method Call Variations&lt;/a&gt; for more nuances.</source>
          <target state="translated">Если левая часть не является ни именем пакета, ни объектом, то вызов метода вызовет ошибку, но дополнительные нюансы см. В разделе &amp;laquo; &lt;a href=&quot;#Method-Call-Variations&quot;&gt;Варианты вызова метода&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37bacecd2332508665ec81733fbdffa749ac5bfa" translate="yes" xml:space="preserve">
          <source>If the length of the input string is not even, it behaves as if padded by a null character at the end. Similarly, &quot;extra&quot; nybbles are ignored during unpacking.</source>
          <target state="translated">Если длина входной строки не равномерна,то она ведет себя так,как будто в ее конце присутствует нулевой символ.Аналогично,&quot;лишние&quot; узлы игнорируются при распаковке.</target>
        </trans-unit>
        <trans-unit id="88b7864a27a0577ffff54b7d555aea0617e9d505" translate="yes" xml:space="preserve">
          <source>If the length of the input string is not evenly divisible by 8, the remainder is packed as if the input string were padded by null characters at the end. Similarly during unpacking, &quot;extra&quot; bits are ignored.</source>
          <target state="translated">Если длина входной строки не делится равномерно на 8,то оставшаяся часть упаковывается так,как если бы входная строка была заполнена нулевыми символами в конце.Аналогично при распаковке игнорируются &quot;лишние&quot; биты.</target>
        </trans-unit>
        <trans-unit id="a2e67d3ea522ed96fe7a9c8431714f7f3d0ba5c5" translate="yes" xml:space="preserve">
          <source>If the library happens to be in a location not in &lt;code&gt;$Config{libpth}&lt;/code&gt; , you need:</source>
          <target state="translated">Если библиотека находится в месте, &lt;code&gt;$Config{libpth}&lt;/code&gt; , вам необходимо:</target>
        </trans-unit>
        <trans-unit id="96118a855a2f1b2515701521249ef16334052e1f" translate="yes" xml:space="preserve">
          <source>If the line number is &lt;code&gt;.&lt;/code&gt;, sets a breakpoint on the current line:</source>
          <target state="translated">Если номер строки &lt;code&gt;.&lt;/code&gt; , устанавливает точку останова на текущей строке:</target>
        </trans-unit>
        <trans-unit id="f93c03970a56584f9fb61994432bc17cb7db5f12" translate="yes" xml:space="preserve">
          <source>If the list moderators tell you that you are not being civil, carefully consider how your words have appeared before responding in any way. You may protest, but repeated protest in the face of a repeatedly reaffirmed decision is not acceptable.</source>
          <target state="translated">Если модераторы списка скажут вам,что вы не вежливы,тщательно обдумайте,как ваши слова появились,прежде чем ответить каким-либо образом.Вы можете протестовать,но повторный протест перед лицом неоднократно подтвержденного решения не приемлем.</target>
        </trans-unit>
        <trans-unit id="e0a9f58b026642b9c9e8e7bb8deab3007d5236f6" translate="yes" xml:space="preserve">
          <source>If the locale from the user's environment is desired, there should be no need for XS code to set the locale except for &lt;code&gt;LC_NUMERIC&lt;/code&gt; , as perl has already set it up. XS code should avoid changing the locale, as it can adversely affect other, unrelated, code and may not be thread safe. However, some alien libraries that may be called do set it, such as &lt;code&gt;Gtk&lt;/code&gt; . This can cause problems for the perl core and other modules. Starting in v5.20.1, calling the function &lt;a href=&quot;perlapi#sync_locale&quot;&gt;sync_locale()&lt;/a&gt; from XS should be sufficient to avoid most of these problems. Prior to this, you need a pure Perl statement that does this:</source>
          <target state="translated">Если требуется языковой стандарт из пользовательской среды, в коде XS не должно быть необходимости устанавливать языковой стандарт, за исключением &lt;code&gt;LC_NUMERIC&lt;/code&gt; , поскольку perl уже установил его. Код XS должен избегать изменения локали, поскольку это может отрицательно повлиять на другой, не связанный с ним код и может быть небезопасным для потоков. Однако некоторые инопланетные библиотеки, которые могут быть вызваны, устанавливают его, например &lt;code&gt;Gtk&lt;/code&gt; . Это может вызвать проблемы для ядра Perl и других модулей. Начиная с v5.20.1, вызова функции &lt;a href=&quot;perlapi#sync_locale&quot;&gt;sync_locale ()&lt;/a&gt; из XS должно быть достаточно, чтобы избежать большинства этих проблем. До этого вам понадобится чистый оператор Perl, который сделает это:</target>
        </trans-unit>
        <trans-unit id="823e97e3e713d61f96695c0b7d66500ba0535b81" translate="yes" xml:space="preserve">
          <source>If the make process encounters trouble with either compilation or linking then try setting the _C89_CCMODE to 1. Assuming sh is your login shell then run:</source>
          <target state="translated">Если в процессе make возникли проблемы с компиляцией или линковкой,попробуйте установить значение _C89_CCMODE равным 1.Предположим,что sh-это оболочка для входа в систему,после чего запустите ее:</target>
        </trans-unit>
        <trans-unit id="2ae0fed8c834da6c72af01b4cce727e6b5ec751e" translate="yes" xml:space="preserve">
          <source>If the module &lt;code&gt;Module&lt;/code&gt; is already loaded, then the declaration</source>
          <target state="translated">Если модуль &lt;code&gt;Module&lt;/code&gt; уже загружен, то объявление</target>
        </trans-unit>
        <trans-unit id="1b3cd9a44d834ecaba373518cdced67ef6882e1c" translate="yes" xml:space="preserve">
          <source>If the module &lt;code&gt;Module&lt;/code&gt; is not loaded yet, then the above declaration declares functions func1() and func2() in the current package. When these functions are called, they load the package &lt;code&gt;Module&lt;/code&gt; if needed, and substitute themselves with the correct definitions.</source>
          <target state="translated">Если модуль &lt;code&gt;Module&lt;/code&gt; еще не загружен, то в приведенном выше объявлении объявляются функции func1 () и func2 () в текущем пакете. Когда эти функции вызываются, они загружают пакет &lt;code&gt;Module&lt;/code&gt; , если это необходимо, и заменяют себя правильными определениями.</target>
        </trans-unit>
        <trans-unit id="aa83e5ba98e2e00acddd7117050d321e4e9d54d9" translate="yes" xml:space="preserve">
          <source>If the module is already loaded, &lt;code&gt;mark_as_loaded&lt;/code&gt; will carp about this and tell you from where the &lt;code&gt;PACKAGE&lt;/code&gt; has been loaded already.</source>
          <target state="translated">Если модуль уже загружен, &lt;code&gt;mark_as_loaded&lt;/code&gt; придирается к этому и сообщит вам, откуда &lt;code&gt;PACKAGE&lt;/code&gt; уже был загружен.</target>
        </trans-unit>
        <trans-unit id="e1cec740a866f3242f2245723f611d8e6a35a17e" translate="yes" xml:space="preserve">
          <source>If the module is already unloaded, &lt;code&gt;mark_as_unloaded&lt;/code&gt; will carp about this and tell you the &lt;code&gt;PACKAGE&lt;/code&gt; has been unloaded already.</source>
          <target state="translated">Если модуль уже выгружен, &lt;code&gt;mark_as_unloaded&lt;/code&gt; придирается к этому и сообщит вам, что &lt;code&gt;PACKAGE&lt;/code&gt; уже выгружен.</target>
        </trans-unit>
        <trans-unit id="55dd2ee6ad71be855cc8cea6dc45014e0de598b9" translate="yes" xml:space="preserve">
          <source>If the module is needed inside the</source>
          <target state="translated">Если модуль необходим внутри</target>
        </trans-unit>
        <trans-unit id="fab3a0f11307492451a39d88e9be980974dcb4d2" translate="yes" xml:space="preserve">
          <source>If the module will only be used inside a thread, you can try loading the module from inside the thread entry point function using &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; (and &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; if needed):</source>
          <target state="translated">Если модуль будет использоваться только внутри потока, вы можете попробовать загрузить модуль изнутри функции точки входа потока, используя &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; (и &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; , если необходимо):</target>
        </trans-unit>
        <trans-unit id="cc3b3934908dc77b79dcbb0b789e5b838d36463c" translate="yes" xml:space="preserve">
          <source>If the name is given in UTF-8, set this to &lt;code&gt;HVhek_UTF8&lt;/code&gt; . The value is passed direct as the parameter</source>
          <target state="translated">Если имя дано в UTF-8, установите для него значение &lt;code&gt;HVhek_UTF8&lt;/code&gt; . Значение передается напрямую как параметр</target>
        </trans-unit>
        <trans-unit id="31ddfa3306f944720376a989f9d5fd87c400eb47" translate="yes" xml:space="preserve">
          <source>If the name is omitted, format &quot;STDOUT&quot; is defined. A single &quot;.&quot; in column 1 is used to terminate a format. FORMLIST consists of a sequence of lines, each of which may be one of three types:</source>
          <target state="translated">Если имя опущено,определяется формат &quot;STDOUT&quot;.Одиночный &quot;...&quot; в колонке 1 используется для завершения формата.FORMLIST состоит из последовательности строк,каждая из которых может быть одного из трех типов:</target>
        </trans-unit>
        <trans-unit id="0def4cf3757d0553a2341afef733c2c0849f1052" translate="yes" xml:space="preserve">
          <source>If the name is unknown, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned (or an empty list in list context). Note that Perl typically recognizes property names in regular expressions with an optional &lt;code&gt;&quot;Is_&lt;/code&gt; &quot; (with or without the underscore) prefixed to them, such as &lt;code&gt;\p{isgc=punct}&lt;/code&gt; . This function does not recognize those in the input, returning &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. Nor are they included in the output as possible synonyms.</source>
          <target state="translated">Если имя неизвестно, возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (или пустой список в контексте списка). Обратите внимание, что Perl обычно распознает имена свойств в регулярных выражениях с необязательным &lt;code&gt;&quot;Is_&lt;/code&gt; &amp;raquo; (с подчеркиванием или без него), например &lt;code&gt;\p{isgc=punct}&lt;/code&gt; . Эта функция не распознает входящие значения, возвращая &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Они также не включены в вывод как возможные синонимы.</target>
        </trans-unit>
        <trans-unit id="a79bb3cadb8f975e939ef18071a526a4b5d3363e" translate="yes" xml:space="preserve">
          <source>If the named parameter &lt;code&gt;config_override&lt;/code&gt; is specified, it should be a reference to a hash which contains all information usually found in &lt;code&gt;%Config::Config&lt;/code&gt; . For example, you can obtain the configuration information for a separate perl installation and pass that in.</source>
          <target state="translated">Если указан именованный параметр &lt;code&gt;config_override&lt;/code&gt; , он должен быть ссылкой на хэш, который содержит всю информацию, обычно находящуюся в &lt;code&gt;%Config::Config&lt;/code&gt; . Например, вы можете получить информацию о конфигурации для отдельной установки Perl и передать ее.</target>
        </trans-unit>
        <trans-unit id="db3ef5746e8cd5bab310439aa50dba89f545a584" translate="yes" xml:space="preserve">
          <source>If the named parameter &lt;code&gt;skip_cwd&lt;/code&gt; is true, the current directory &lt;code&gt;.&lt;/code&gt; will be stripped from &lt;code&gt;@INC&lt;/code&gt; before searching for .packlists. This keeps ExtUtils::Installed from finding modules installed in other perls that happen to be located below the current directory.</source>
          <target state="translated">Если именованный параметр &lt;code&gt;skip_cwd&lt;/code&gt; равен true, текущий каталог &lt;code&gt;.&lt;/code&gt; будут удалены из &lt;code&gt;@INC&lt;/code&gt; перед поиском .packlists. Это не позволяет ExtUtils :: Installed найти модули, установленные в других perl, которые оказались ниже текущего каталога.</target>
        </trans-unit>
        <trans-unit id="7f6facbdb87684a56df7a20a0d54e6b8073b8eb9" translate="yes" xml:space="preserve">
          <source>If the new version of the C library is ABI-compatible (that's Application Binary Interface compatible) with the version you're upgrading from, and if the shared library version didn't change, no re-compilation should be necessary.</source>
          <target state="translated">Если новая версия библиотеки Си является ABI-совместимой (это бинарный интерфейс приложения)с той версией,с которой вы обновляете,и если версия разделяемой библиотеки не изменилась,повторная компиляция не требуется.</target>
        </trans-unit>
        <trans-unit id="3f6451aaf2bf86188eece8b63b5bab6c7257462f" translate="yes" xml:space="preserve">
          <source>If the next character is in (or extends into) the next chunk of input text, the next chunk will be read in. Normally the current chunk will be discarded at the same time, but if</source>
          <target state="translated">Если следующий символ находится в следующем фрагменте вводимого текста (или расширяется в него),то будет прочитан следующий фрагмент.Обычно текущий фрагмент отбрасывается одновременно,но если</target>
        </trans-unit>
        <trans-unit id="bf7862ebb65f1805f38240d9ec3614885b02e6ad" translate="yes" xml:space="preserve">
          <source>If the number following the backslash is N (in decimal), and Perl already has seen N capture groups, Perl considers this a backreference. Otherwise, it considers it an octal escape. If N has more than three digits, Perl takes only the first three for the octal escape; the rest are matched as is.</source>
          <target state="translated">Если число,следующее за обратной косой чертой,равно N (в десятичном значении),и Perl уже видел N групп захвата,Perl считает это обратной ссылкой.В противном случае,он считает это восьмеричным бегством.Если N имеет более трех цифр,Perl берет только первые три для восьмеричного бегства;остальные совпадают как есть.</target>
        </trans-unit>
        <trans-unit id="fad0df49da49393094ec039045da70fce50b5429" translate="yes" xml:space="preserve">
          <source>If the number of data bytes ($bytes) is given, that many data bytes are included in the ping packet sent to the remote host. The number of data bytes is ignored if the protocol is &quot;tcp&quot;. The minimum (and default) number of data bytes is 1 if the protocol is &quot;udp&quot; and 0 otherwise. The maximum number of data bytes that can be specified is 1024.</source>
          <target state="translated">Если задано количество байт данных ($байт),то это количество байт данных включается в пакет ping,посылаемый удаленному хосту.Количество байт данных игнорируется,если протокол &quot;tcp&quot;.Минимальное (и по умолчанию)количество байт данных равно 1,если протокол &quot;udp&quot;,и 0 в противном случае.Максимальное задаваемое количество байтов данных-1024.</target>
        </trans-unit>
        <trans-unit id="cf726231b3d599cdbe46b108046dbf7815381c4c" translate="yes" xml:space="preserve">
          <source>If the object has been passed to a child process during a fork, the file will be deleted when the object goes out of scope in the parent.</source>
          <target state="translated">Если объект был передан дочернему процессу во время работы развилки,файл будет удален,когда объект выйдет из-под контроля родительского процесса.</target>
        </trans-unit>
        <trans-unit id="39e52d92c6b313ed3349d0401be82f80d273536a" translate="yes" xml:space="preserve">
          <source>If the only casing for a code point is locale-dependent, then the returned hash will not have any of the base keys, like &lt;code&gt;code&lt;/code&gt; , &lt;code&gt;upper&lt;/code&gt; , etc., but will contain only locale keys.</source>
          <target state="translated">Если единственный регистр для кодовой точки зависит от языкового стандарта, то возвращаемый хэш не будет иметь никаких базовых ключей, таких как &lt;code&gt;code&lt;/code&gt; , &lt;code&gt;upper&lt;/code&gt; и т. Д., Но будет содержать только ключи языкового стандарта.</target>
        </trans-unit>
        <trans-unit id="addcad10a864d1cffc4846608d394fea1feac09a" translate="yes" xml:space="preserve">
          <source>If the operands to a binary bitwise op are strings of different sizes, &lt;b&gt;|&lt;/b&gt; and &lt;b&gt;^&lt;/b&gt; ops act as though the shorter operand had additional zero bits on the right, while the &lt;b&gt;&amp;amp;&lt;/b&gt; op acts as though the longer operand were truncated to the length of the shorter. The granularity for such extension or truncation is one or more bytes.</source>
          <target state="translated">Если операнды двоичной поразрядной операции являются строками разного размера, &lt;b&gt;| &lt;/b&gt;и &lt;b&gt;^&lt;/b&gt; ops действуют так, как если бы более короткий операнд имел дополнительные нулевые биты справа, в то время как &lt;b&gt;&amp;amp;&lt;/b&gt; op действует так, как если бы более длинный операнд был усечен до длины более короткого. Гранулярность такого расширения или усечения составляет один или несколько байтов.</target>
        </trans-unit>
        <trans-unit id="c7870bd3c024159f240305b7047279e21ad1fe56" translate="yes" xml:space="preserve">
          <source>If the operating system supports it (for example BSD derived systems), the filehandle will be opened with O_EXLOCK (open with exclusive file lock). This can sometimes cause problems if the intention is to pass the filename to another system that expects to take an exclusive lock itself (such as DBD::SQLite) whilst ensuring that the tempfile is not reused. In this situation the &quot;EXLOCK&quot; option can be passed to tempfile. By default EXLOCK will be true (this retains compatibility with earlier releases).</source>
          <target state="translated">Если операционная система его поддерживает (например,производные системы BSD),то файловый менеджер будет открыт с помощью O_EXLOCK (открывается с эксклюзивной блокировкой файлов).Иногда это может вызвать проблемы,если намерение состоит в том,чтобы передать имя файла другой системе,которая рассчитывает взять эксклюзивную блокировку сама (например,DBD::SQLite),при этом гарантируя,что временный файл не будет использован повторно.В этой ситуации в temp-файл может быть передан параметр &quot;EXLOCK&quot;.По умолчанию EXLOCK будет верна (это сохраняет совместимость с более ранними версиями).</target>
        </trans-unit>
        <trans-unit id="e19b7bb4d69a3c985ce8931960025916d3561c3a" translate="yes" xml:space="preserve">
          <source>If the operation being timed out is system() or qx(), this technique is liable to generate zombies. If this matters to you, you'll need to do your own fork() and exec(), and kill the errant child process.</source>
          <target state="translated">Если выполняемая операция имеет тайм-аут-system()или qx(),то эта техника может генерировать зомби.Если это имеет значение для вас,вам нужно будет сделать свою собственную fork()и exec(),и убить заблудший дочерний процесс.</target>
        </trans-unit>
        <trans-unit id="05f4a71ea34fe9d7ddbd210db5290a2dfa223838" translate="yes" xml:space="preserve">
          <source>If the operation shown is &quot;ToFold&quot;, it means that case-insensitive matching in a regular expression was done on the code point.</source>
          <target state="translated">Если показанная операция &quot;ToFold&quot;,то это означает,что над точкой кода было произведено нечувствительное к регистру совпадение в регулярном выражении.</target>
        </trans-unit>
        <trans-unit id="a982ec5add551174c87d54c0c75cad924249147a" translate="yes" xml:space="preserve">
          <source>If the option destination is a reference to a hash, the option will take, as value, strings of the form</source>
          <target state="translated">Если назначение опции является ссылкой на хэш,опция будет принимать в качестве значения строки формы</target>
        </trans-unit>
        <trans-unit id="ab8a370e734c2b7f25ad3475fabaef52fd095ddb" translate="yes" xml:space="preserve">
          <source>If the option is provided, and &lt;code&gt;PERL_PERTURB_KEYS&lt;/code&gt; is NOT set, then a value of '0' implies &lt;code&gt;PERL_PERTURB_KEYS=0&lt;/code&gt; and any other value implies &lt;code&gt;PERL_PERTURB_KEYS=2&lt;/code&gt; .</source>
          <target state="translated">Если опция предоставляется, а &lt;code&gt;PERL_PERTURB_KEYS&lt;/code&gt; НЕ установлен, то значение &amp;laquo;0&amp;raquo; подразумевает &lt;code&gt;PERL_PERTURB_KEYS=0&lt;/code&gt; , а любое другое значение подразумевает &lt;code&gt;PERL_PERTURB_KEYS=2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb774833de734f7b65efa56e3c7c5f53234542f8" translate="yes" xml:space="preserve">
          <source>If the option is set to false, the output buffer in the &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; method will be truncated before uncompressed data is written to it.</source>
          <target state="translated">Если для параметра установлено значение false, выходной буфер в методе &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; будет усечен перед записью в него несжатых данных.</target>
        </trans-unit>
        <trans-unit id="a7e5a140437039036cbeabf084c8f96c887a93f7" translate="yes" xml:space="preserve">
          <source>If the option is set to true, uncompressed data will be appended to the output buffer by the &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; method.</source>
          <target state="translated">Если для параметра установлено значение true, несжатые данные будут добавлены в выходной буфер методом &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c22c2720bbc793b56d2bdb2031cd852762e79aba" translate="yes" xml:space="preserve">
          <source>If the option is set to true, uncompressed data will be appended to the output buffer in the &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; and &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; methods.</source>
          <target state="translated">Если для параметра установлено значение true, несжатые данные будут добавлены в выходной буфер методами &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; и &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="943c28148863687139f9e45e03407da89d7e13fa" translate="yes" xml:space="preserve">
          <source>If the option value is required, Getopt::Long will take the command line argument that follows the option and assign this to the option variable. If, however, the option value is specified as optional, this will only be done if that value does not look like a valid command line option itself.</source>
          <target state="translated">Если требуется значение опции,то Getopt::Long примет аргумент командной строки,следующий за опцией,и присвоит его переменной опции.Однако,если значение опции указано как необязательное,это будет сделано только в том случае,если это значение не выглядит как действительная опция командной строки.</target>
        </trans-unit>
        <trans-unit id="8b25fc0c82dd37f9c4b9d7996e6e001cd8c1c22e" translate="yes" xml:space="preserve">
          <source>If the order of &lt;code&gt;sv_setiv&lt;/code&gt; and &lt;code&gt;sv_setpv&lt;/code&gt; had been reversed, then the macro &lt;code&gt;SvPOK_on&lt;/code&gt; would need to be called instead of &lt;code&gt;SvIOK_on&lt;/code&gt; .</source>
          <target state="translated">Если бы порядок &lt;code&gt;sv_setiv&lt;/code&gt; и &lt;code&gt;sv_setpv&lt;/code&gt; был изменен на противоположный, то &lt;code&gt;SvPOK_on&lt;/code&gt; нужно было бы &lt;code&gt;SvIOK_on&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b0f391156a0e1896106ec41b93d3c42cc8fd48b" translate="yes" xml:space="preserve">
          <source>If the output is empty and &lt;code&gt;$@&lt;/code&gt; already contains a value (typically from a previous eval) that value is reused after appending &lt;code&gt;&quot;\t...propagated&quot;&lt;/code&gt; . This is useful for propagating exceptions:</source>
          <target state="translated">Если вывод пуст и &lt;code&gt;$@&lt;/code&gt; уже содержит значение (обычно из предыдущего eval), это значение используется повторно после добавления &lt;code&gt;&quot;\t...propagated&quot;&lt;/code&gt; . Это полезно для распространения исключений:</target>
        </trans-unit>
        <trans-unit id="25d81dad12165191ac2a4d2f3e667fda9ababd8e" translate="yes" xml:space="preserve">
          <source>If the output is empty and &lt;code&gt;$@&lt;/code&gt; already contains a value (typically from a previous eval) that value is used after appending &lt;code&gt;&quot;\t...caught&quot;&lt;/code&gt; to &lt;code&gt;$@&lt;/code&gt; . This is useful for staying almost, but not entirely similar to &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если вывод пуст и &lt;code&gt;$@&lt;/code&gt; уже содержит значение (обычно из предыдущего eval), это значение используется после добавления &lt;code&gt;&quot;\t...caught&quot;&lt;/code&gt; к &lt;code&gt;$@&lt;/code&gt; . Это полезно, чтобы оставаться почти, но не совсем похожим на &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65e420bc5858eb45a1dddd4a10cb455bd1ce4cc1" translate="yes" xml:space="preserve">
          <source>If the output is empty and &lt;code&gt;$@&lt;/code&gt; already contains a value (typically from a previous eval) that value is used after appending &lt;code&gt;&quot;\t...caught&quot;&lt;/code&gt; to &lt;code&gt;$@&lt;/code&gt; . This is useful for staying almost, but not entirely similar to &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если вывод пуст и &lt;code&gt;$@&lt;/code&gt; уже содержит значение (обычно из предыдущего eval), это значение используется после добавления &lt;code&gt;&quot;\t...caught&quot;&lt;/code&gt; к &lt;code&gt;$@&lt;/code&gt; . Это полезно, чтобы оставаться почти, но не совсем похожим на &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2cfa46357b1516decacabae244126181d8b80b21" translate="yes" xml:space="preserve">
          <source>If the output is empty and &lt;code&gt;$@&lt;/code&gt; contains an object reference that has a &lt;code&gt;PROPAGATE&lt;/code&gt; method, that method will be called with additional file and line number parameters. The return value replaces the value in &lt;code&gt;$@&lt;/code&gt; ; i.e., as if &lt;code&gt;$@ = &lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; { $@-&amp;gt;PROPAGATE(__FILE__, __LINE__) };&lt;/code&gt; were called.</source>
          <target state="translated">Если вывод пуст и &lt;code&gt;$@&lt;/code&gt; содержит ссылку на объект, имеющую метод &lt;code&gt;PROPAGATE&lt;/code&gt; , этот метод будет вызываться с дополнительными параметрами номера файла и строки. Возвращаемое значение заменяет значение в &lt;code&gt;$@&lt;/code&gt; ; т.е. как если бы &lt;code&gt;$@ = &lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; { $@-&amp;gt;PROPAGATE(__FILE__, __LINE__) };&lt;/code&gt; были названы.</target>
        </trans-unit>
        <trans-unit id="a97492155e7589378bb301645dfa7c34b680ef04" translate="yes" xml:space="preserve">
          <source>If the output is empty and &lt;code&gt;$@&lt;/code&gt; contains an object reference that has a &lt;code&gt;PROPAGATE&lt;/code&gt; method, that method will be called with additional file and line number parameters. The return value replaces the value in &lt;code&gt;$@&lt;/code&gt; ; i.e., as if &lt;code&gt;$@ = &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; { $@-&amp;gt;PROPAGATE(__FILE__, __LINE__) };&lt;/code&gt; were called.</source>
          <target state="translated">Если вывод пуст и &lt;code&gt;$@&lt;/code&gt; содержит ссылку на объект, имеющую метод &lt;code&gt;PROPAGATE&lt;/code&gt; , этот метод будет вызываться с дополнительными параметрами номера файла и строки. Возвращаемое значение заменяет значение в &lt;code&gt;$@&lt;/code&gt; ; т.е. как если бы &lt;code&gt;$@ = &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; { $@-&amp;gt;PROPAGATE(__FILE__, __LINE__) };&lt;/code&gt; были названы.</target>
        </trans-unit>
        <trans-unit id="4e71a254b15b38644afabad82376b2bb1e4f7fab" translate="yes" xml:space="preserve">
          <source>If the output of the &lt;code&gt;h h&lt;/code&gt; command (or any command, for that matter) scrolls past your screen, precede the command with a leading pipe symbol so that it's run through your pager, as in</source>
          <target state="translated">Если вывод команды &lt;code&gt;h h&lt;/code&gt; (или любой другой команды, если на то пошло) прокручивается за пределы вашего экрана, поставьте перед командой начальный символ вертикальной черты, чтобы она проходила через ваш пейджер, как в</target>
        </trans-unit>
        <trans-unit id="f7911c6fed712fb085afb893540153d04c3ba2b2" translate="yes" xml:space="preserve">
          <source>If the package has a mailing list, include a URL or subscription instructions here.</source>
          <target state="translated">Если пакет имеет список рассылки,включите сюда URL-адрес или инструкции по подписке.</target>
        </trans-unit>
        <trans-unit id="2bd5efd382acc87571dd747451ad45f157dd85d7" translate="yes" xml:space="preserve">
          <source>If the package has a web site, include a URL here.</source>
          <target state="translated">Если в пакете есть веб-сайт,укажите здесь URL.</target>
        </trans-unit>
        <trans-unit id="128d72462f8fdf7586cd07b73dc9169d6e753911" translate="yes" xml:space="preserve">
          <source>If the parameter is made true, &lt;code&gt;U+FFFE&lt;/code&gt; has a minimal primary weight. The comparison between &lt;code&gt;&quot;$a1\x{FFFE}$a2&quot;&lt;/code&gt; and &lt;code&gt;&quot;$b1\x{FFFE}$b2&quot;&lt;/code&gt; first compares &lt;code&gt;$a1&lt;/code&gt; and &lt;code&gt;$b1&lt;/code&gt; at level 1, and then &lt;code&gt;$a2&lt;/code&gt; and &lt;code&gt;$b2&lt;/code&gt; at level 1, as followed.</source>
          <target state="translated">Если значение параметра истинно, &lt;code&gt;U+FFFE&lt;/code&gt; имеет минимальный первичный вес. При сравнении &lt;code&gt;&quot;$a1\x{FFFE}$a2&quot;&lt;/code&gt; и &lt;code&gt;&quot;$b1\x{FFFE}$b2&quot;&lt;/code&gt; сначала сравниваются &lt;code&gt;$a1&lt;/code&gt; и &lt;code&gt;$b1&lt;/code&gt; на уровне 1, а затем &lt;code&gt;$a2&lt;/code&gt; и &lt;code&gt;$b2&lt;/code&gt; на уровне 1, как показано ниже. .</target>
        </trans-unit>
        <trans-unit id="c1bc1d540aa212d81d3c27835031fe5adbb0eee1" translate="yes" xml:space="preserve">
          <source>If the parameter is made true, &lt;code&gt;U+FFFF&lt;/code&gt; has a highest primary weight. When a boolean of &lt;code&gt;$coll-&amp;gt;ge($str, &quot;abc&quot;)&lt;/code&gt; and &lt;code&gt;$coll-&amp;gt;le($str, &quot;abc\x{FFFF}&quot;)&lt;/code&gt; is true, it is expected that &lt;code&gt;$str&lt;/code&gt; begins with &lt;code&gt;&quot;abc&quot;&lt;/code&gt; , or another primary equivalent. &lt;code&gt;$str&lt;/code&gt; may be &lt;code&gt;&quot;abcd&quot;&lt;/code&gt; , &lt;code&gt;&quot;abc012&quot;&lt;/code&gt; , but should not include &lt;code&gt;U+FFFF&lt;/code&gt; such as &lt;code&gt;&quot;abc\x{FFFF}xyz&quot;&lt;/code&gt; .</source>
          <target state="translated">Если значение параметра истинно, &lt;code&gt;U+FFFF&lt;/code&gt; имеет наивысший первичный вес. Когда логическое значение &lt;code&gt;$coll-&amp;gt;ge($str, &quot;abc&quot;)&lt;/code&gt; и &lt;code&gt;$coll-&amp;gt;le($str, &quot;abc\x{FFFF}&quot;)&lt;/code&gt; истинно, ожидается, что &lt;code&gt;$str&lt;/code&gt; начинается с &lt;code&gt;&quot;abc&quot;&lt;/code&gt; , или другой основной эквивалент. &lt;code&gt;$str&lt;/code&gt; может быть &lt;code&gt;&quot;abcd&quot;&lt;/code&gt; , &lt;code&gt;&quot;abc012&quot;&lt;/code&gt; , но не должно включать &lt;code&gt;U+FFFF&lt;/code&gt; , например &lt;code&gt;&quot;abc\x{FFFF}xyz&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2379a678967ce11b206cce9256eec402c626744e" translate="yes" xml:space="preserve">
          <source>If the parameter is made true, a final, tie-breaking level is used. If no difference of weights is found after the comparison through all the level specified by &lt;code&gt;level&lt;/code&gt; , the comparison with code points will be performed. For the tie-breaking comparison, the sort key has code points of the original string appended. Completely ignorable characters are not ignored.</source>
          <target state="translated">Если для параметра установлено значение &amp;laquo;Истина&amp;raquo;, используется последний уровень разрешения конфликтов. Если после сравнения по всему уровню, заданному &lt;code&gt;level&lt;/code&gt; , разница весов не обнаружена , будет выполнено сравнение с кодовыми точками. Для сравнения с разрывом связей к ключу сортировки добавлены кодовые точки исходной строки. Совершенно игнорируемые персонажи не игнорируются.</target>
        </trans-unit>
        <trans-unit id="e6d70ed0cf4279c5cf91d7d6890341737c51d4df" translate="yes" xml:space="preserve">
          <source>If the parameter is made true, accents (and other primary ignorable characters) are ignored, even though cases are taken into account.</source>
          <target state="translated">Если параметр становится верным,то акценты (и другие первичные незнакомые символы)игнорируются,даже если учитываются случаи.</target>
        </trans-unit>
        <trans-unit id="3ffce08d047eaee75c853cd8ab3be63e13efe5a7" translate="yes" xml:space="preserve">
          <source>If the parameter is made true, for a contraction with three or more characters (here nicknamed &quot;long contraction&quot;), initial substrings will be handled. For example, a contraction ABC, where A is a starter, and B and C are non-starters (character with non-zero combining character class), will be detected even if there is not AB as a contraction.</source>
          <target state="translated">Если параметр становится истинным,то для сокращения с тремя или более символами (здесь прозвище &quot;длинное сокращение&quot;)будут обрабатываться исходные подстроки.Например,сокращение ABC,где A является стартером,а B и C не являются стартерами (символ с ненулевым комбинационным классом символов),будет обнаружено даже в том случае,если в качестве сокращения отсутствует AB.</target>
        </trans-unit>
        <trans-unit id="6196ed90d85a5642d1f2bff307d9850731d3ee76" translate="yes" xml:space="preserve">
          <source>If the parameters to the INCLUDE: keyword are followed by a pipe (&lt;code&gt;|&lt;/code&gt;) then the compiler will interpret the parameters as a command. This feature is mildly deprecated in favour of the &lt;code&gt;INCLUDE_COMMAND:&lt;/code&gt; directive, as documented below.</source>
          <target state="translated">Если после параметров ключевого слова INCLUDE: стоит вертикальная черта ( &lt;code&gt;|&lt;/code&gt; ), то компилятор интерпретирует параметры как команду. Эта функция слегка устарела в пользу директивы &lt;code&gt;INCLUDE_COMMAND:&lt;/code&gt; , как описано ниже.</target>
        </trans-unit>
        <trans-unit id="60984150a4a273c37051fdd1024089806a686df1" translate="yes" xml:space="preserve">
          <source>If the parent process is killed (either using Perl's kill() builtin, or using some external means) all the pseudo-processes are killed as well, and the whole process exits.</source>
          <target state="translated">Если убить родительский процесс (либо с помощью Perl's kill()builtin,либо с помощью некоторых внешних средств),то будут убиты и все псевдо-процессы,и весь процесс выйдет из игры.</target>
        </trans-unit>
        <trans-unit id="aa64f5b5dc3063c1ec88bf3714d6a78f8885563e" translate="yes" xml:space="preserve">
          <source>If the pattern contains embedded code, such as</source>
          <target state="translated">Если шаблон содержит встроенный код,например</target>
        </trans-unit>
        <trans-unit id="400ab285c2500104132be9cd3fcc1a752df8a4f5" translate="yes" xml:space="preserve">
          <source>If the pattern does not match any pathname, then bsd_glob() returns a list consisting of only the pattern. If &lt;code&gt;GLOB_QUOTE&lt;/code&gt; is set, its effect is present in the pattern returned.</source>
          <target state="translated">Если шаблон не соответствует ни одному пути, то bsd_glob () возвращает список, состоящий только из шаблона. Если &lt;code&gt;GLOB_QUOTE&lt;/code&gt; установлен, его эффект присутствует в возвращаемом шаблоне.</target>
        </trans-unit>
        <trans-unit id="6adde583f90fd2399e3928b4e6217841c09c97fb" translate="yes" xml:space="preserve">
          <source>If the pattern may match only at a handful of places, with &lt;code&gt;TYPE&lt;/code&gt; being &lt;code&gt;SBOL&lt;/code&gt; , &lt;code&gt;MBOL&lt;/code&gt; , or &lt;code&gt;GPOS&lt;/code&gt; . See the table below.</source>
          <target state="translated">Если шаблон может совпадать только в нескольких местах, где &lt;code&gt;TYPE&lt;/code&gt; является &lt;code&gt;SBOL&lt;/code&gt; , &lt;code&gt;MBOL&lt;/code&gt; или &lt;code&gt;GPOS&lt;/code&gt; . См. Таблицу ниже.</target>
        </trans-unit>
        <trans-unit id="d0ce5cbb841f39a51912df72d9768f6a6a5fae33" translate="yes" xml:space="preserve">
          <source>If the pattern was used as follows</source>
          <target state="translated">Если бы шаблон использовался следующим образом</target>
        </trans-unit>
        <trans-unit id="2dd05fadef47c4bd45462fdfaa94e04afc77ad22" translate="yes" xml:space="preserve">
          <source>If the performance in such cases is unacceptable, you may defer the actual writing, and then have it done all at once. The following loop will perform much better for large files:</source>
          <target state="translated">Если исполнение в таких случаях неприемлемо,вы можете отложить фактическое написание,а затем сделать все это сразу.Следующий цикл будет работать гораздо лучше для больших файлов:</target>
        </trans-unit>
        <trans-unit id="956656b1b2d0c77e2fbe4d0d92677dc48070a8ed" translate="yes" xml:space="preserve">
          <source>If the platform is MS-DOS like and normally does CRLF to &quot;\n&quot; translation for text files then the default layers are :</source>
          <target state="translated">Если платформа MS-DOS нравится и обычно выполняет перевод CRLF на &quot;\n&quot; для текстовых файлов,то слоями по умолчанию являются :</target>
        </trans-unit>
        <trans-unit id="fee788dad0c5b1cd15e2fa5ddb122d4f9bd910af" translate="yes" xml:space="preserve">
          <source>If the platform supports the &lt;code&gt;langinfo(CODESET)&lt;/code&gt; interface, the codeset returned is used as the default encoding for the open pragma.</source>
          <target state="translated">Если платформа поддерживает интерфейс &lt;code&gt;langinfo(CODESET)&lt;/code&gt; , возвращаемый набор кодов используется в качестве кодировки по умолчанию для открытой директивы.</target>
        </trans-unit>
        <trans-unit id="e029b7bfe44b40ce79cdafd38dd9f57646af8f39" translate="yes" xml:space="preserve">
          <source>If the program exits without all threads having either been joined or detached, then a warning will be issued.</source>
          <target state="translated">Если при выходе из программы все потоки не были ни присоединены,ни отсоединены,то будет выдано предупреждение.</target>
        </trans-unit>
        <trans-unit id="68122aab68b9511758161a833aab14bd7cf8f3f4" translate="yes" xml:space="preserve">
          <source>If the program exits without all threads having either been joined or detached, then this warning will be issued.</source>
          <target state="translated">Если при выходе из программы все потоки не были ни присоединены,ни отсоединены,то выдается данное предупреждение.</target>
        </trans-unit>
        <trans-unit id="3f05e0c9adcc7343a41a8d24201ee4c19ce64a54" translate="yes" xml:space="preserve">
          <source>If the program has been given to perl via the switches &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;-E&lt;/code&gt; , &lt;code&gt;$0&lt;/code&gt; will contain the string &lt;code&gt;&quot;-e&quot;&lt;/code&gt; .</source>
          <target state="translated">Если программа была передана Perl с помощью ключей &lt;code&gt;-e&lt;/code&gt; или &lt;code&gt;-E&lt;/code&gt; , &lt;code&gt;$0&lt;/code&gt; будет содержать строку &lt;code&gt;&quot;-e&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="187d3c3b9917db708f6b4997f1f577493d56ad38" translate="yes" xml:space="preserve">
          <source>If the program is syntactically correct, it is executed. If the program runs off the end without hitting an exit() or die() operator, an implicit &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit(0)&lt;/a&gt;&lt;/code&gt; is provided to indicate successful completion.</source>
          <target state="translated">Если программа синтаксически верна, она выполняется. Если программа запускается с конца без нажатия на оператор exit () или die (), предоставляется неявный &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit(0)&lt;/a&gt;&lt;/code&gt; , указывающий на успешное завершение.</target>
        </trans-unit>
        <trans-unit id="8cf82d5604429bbfe1cb41298b645fa1f014e9ae" translate="yes" xml:space="preserve">
          <source>If the property doesn't have such a restricted set, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Если для свойства нет такого ограниченного набора, возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f736ee647a4d5e1589838b72f5b05af7545714ad" translate="yes" xml:space="preserve">
          <source>If the property name is unknown, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned. Note that Perl typically recognizes property names in regular expressions with an optional &lt;code&gt;&quot;Is_&lt;/code&gt; &quot; (with or without the underscore) prefixed to them, such as &lt;code&gt;\p{isgc=punct}&lt;/code&gt; . This function does not recognize those in the property parameter, returning &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если имя свойства неизвестно, возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Обратите внимание, что Perl обычно распознает имена свойств в регулярных выражениях с дополнительным &lt;code&gt;&quot;Is_&lt;/code&gt; &amp;raquo; (с подчеркиванием или без него), например &lt;code&gt;\p{isgc=punct}&lt;/code&gt; . Эта функция не распознает те, что указаны в параметре свойства, возвращая &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afaf0816b79f3c9b4d1b468e6b1d9a01691cd781" translate="yes" xml:space="preserve">
          <source>If the protocol is set to &quot;tcp&quot;, this method may be called any number of times, and each call to the ping() method (below) will use the most recent $local_addr. If the protocol is &quot;icmp&quot; or &quot;udp&quot;, then bind() must be called at most once per object, and (if it is called at all) must be called before the first call to ping() for that object.</source>
          <target state="translated">Если протокол установлен в &quot;tcp&quot;,то этот метод может быть вызван любое количество раз,и при каждом вызове метода ping()(см.ниже)будет использоваться самый последний $local_addr.Если протокол &quot;icmp&quot; или &quot;udp&quot;,то bind()должна вызываться максимум один раз для каждого объекта и (если вызывается вообще)должна вызываться перед первым вызовом ping()для этого объекта.</target>
        </trans-unit>
        <trans-unit id="bd278d79ed04376a1ab23bc38f3813d0d8a95858" translate="yes" xml:space="preserve">
          <source>If the prototypes are enabled, you can disable it locally for a given XSUB as in the following example:</source>
          <target state="translated">Если прототипы включены,вы можете отключить его локально для данного XSUB,как показано в следующем примере:</target>
        </trans-unit>
        <trans-unit id="22222d2992db775cc93f4e6df7a745c81e01a6be" translate="yes" xml:space="preserve">
          <source>If the referenced object has been blessed into a package, then that package name is returned instead. But don't use that, as it's now considered &quot;bad practice&quot;. For one reason, an object could be using a class called &lt;code&gt;Regexp&lt;/code&gt; or &lt;code&gt;IO&lt;/code&gt; , or even &lt;code&gt;HASH&lt;/code&gt; . Also, &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; doesn't take into account subclasses, like &lt;code&gt;isa&lt;/code&gt; does.</source>
          <target state="translated">Если указанный объект был добавлен в пакет, вместо этого возвращается это имя пакета. Но не используйте это, так как теперь это считается &amp;laquo;плохой практикой&amp;raquo;. По одной причине, объект мог использовать класс под названием &lt;code&gt;Regexp&lt;/code&gt; или &lt;code&gt;IO&lt;/code&gt; , даже &lt;code&gt;HASH&lt;/code&gt; . Кроме того, &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; не учитывает подклассы, как это делает &lt;code&gt;isa&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf268542a8929b7e398cc1536659093d140d5216" translate="yes" xml:space="preserve">
          <source>If the referenced object has been blessed into a package, then that package name is returned instead. But don't use that, as it's now considered &quot;bad practice&quot;. For one reason, an object could be using a class called &lt;code&gt;Regexp&lt;/code&gt; or &lt;code&gt;IO&lt;/code&gt; , or even &lt;code&gt;HASH&lt;/code&gt; . Also, &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; doesn't take into account subclasses, like &lt;code&gt;isa&lt;/code&gt; does.</source>
          <target state="translated">Если указанный объект был добавлен в пакет, вместо этого возвращается это имя пакета. Но не используйте это, так как теперь это считается &amp;laquo;плохой практикой&amp;raquo;. По одной причине, объект мог использовать класс под названием &lt;code&gt;Regexp&lt;/code&gt; или &lt;code&gt;IO&lt;/code&gt; , даже &lt;code&gt;HASH&lt;/code&gt; . Кроме того, &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; не учитывает подклассы, как это делает &lt;code&gt;isa&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09e68bc71ae659a158de263698e821903752a759" translate="yes" xml:space="preserve">
          <source>If the referred library is an archive library, then it is treated as a simple collection of .o modules (all of which must contain PIC). These modules are then linked into the shared library.</source>
          <target state="translated">Если упомянутая библиотека является архивной,то она рассматривается как простая коллекция .o модулей (все они должны содержать PIC).Эти модули затем связываются в общую библиотеку.</target>
        </trans-unit>
        <trans-unit id="487c69f3c32cf6208263be856047bd1120b5cb11" translate="yes" xml:space="preserve">
          <source>If the regex engine was entered, the output may look like this:</source>
          <target state="translated">Если был введен регрессивный двигатель,то выходной сигнал может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="4071da6362bfae97335d6ccd04527e0675ca1ecf" translate="yes" xml:space="preserve">
          <source>If the remote server sends data a byte at time, and you need that data immediately without waiting for a newline (which might not happen), you may wish to replace the &lt;code&gt;while&lt;/code&gt; loop in the parent with the following:</source>
          <target state="translated">Если удаленный сервер отправляет данные байт во время, и вам необходимо , чтобы данные сразу , не дожидаясь новой строки (которая не может произойти), вы можете заменить &lt;code&gt;while&lt;/code&gt; цикл в родительском со следующими:</target>
        </trans-unit>
        <trans-unit id="78e886a06c0d6c64ae06980c39f4979b0d06c657" translate="yes" xml:space="preserve">
          <source>If the repeat count is &lt;code&gt;*&lt;/code&gt; , the offset is relative to the start of the packed string.</source>
          <target state="translated">Если счетчик повторов &lt;code&gt;*&lt;/code&gt; , смещение отсчитывается относительно начала упакованной строки.</target>
        </trans-unit>
        <trans-unit id="71535d2706781140ebf79d95c5c1eb0328f89697" translate="yes" xml:space="preserve">
          <source>If the repeat count is &lt;code&gt;0&lt;/code&gt; , it's relative to the current position.</source>
          <target state="translated">Если счетчик повторов равен &lt;code&gt;0&lt;/code&gt; , он относительно текущей позиции.</target>
        </trans-unit>
        <trans-unit id="adddd684b7b4b320c5c6cd3d4e144f8d42b00be2" translate="yes" xml:space="preserve">
          <source>If the requested class doesn't yet exist, this function will still succeed, and return &lt;code&gt;[ $classname ]&lt;/code&gt;</source>
          <target state="translated">Если запрошенный класс еще не существует, эта функция все равно завершится успешно и вернет &lt;code&gt;[ $classname ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3c8df40676c5ef413c4d428cc8bce1edd4a74be" translate="yes" xml:space="preserve">
          <source>If the required version is older than Perl 5.10, the &quot;:default&quot; feature bundle is automatically loaded instead.</source>
          <target state="translated">Если требуемая версия старше,чем Perl 5.10,вместо нее автоматически загружается набор функций &quot;:default&quot;.</target>
        </trans-unit>
        <trans-unit id="d407bfa98e92001cef51aaea080c36419318c881" translate="yes" xml:space="preserve">
          <source>If the result is a fraction, it is converted into a floating point number to the accuracy of your platform.</source>
          <target state="translated">Если результат является дробью,то он преобразуется в число с плавающей точкой в точности вашей платформы.</target>
        </trans-unit>
        <trans-unit id="a0f32bf4dd5015a300ddb6707d47fae5eba9e46c" translate="yes" xml:space="preserve">
          <source>If the result is multiple script names, they are returned joined into a single comma-separated string.</source>
          <target state="translated">Если в результате получается несколько имен скриптов,то они возвращаются объединенными в одну строку,разделенную запятыми.</target>
        </trans-unit>
        <trans-unit id="45ec7fbff805996e6714524f94283d541160e6c3" translate="yes" xml:space="preserve">
          <source>If the return type of the XSUB includes &lt;code&gt;static&lt;/code&gt; , the method is considered to be a static method. It will call the C++ function using the class::method() syntax. If the method is not static the function will be called using the THIS-&amp;gt;method() syntax.</source>
          <target state="translated">Если тип возвращаемого значения XSUB включает &lt;code&gt;static&lt;/code&gt; , метод считается статическим. Он вызовет функцию C ++ с использованием синтаксиса class :: method (). Если метод не статический, функция будет вызываться с использованием синтаксиса THIS-&amp;gt; method ().</target>
        </trans-unit>
        <trans-unit id="95ff7ce638cb043eea1113e455241d4090a0ba15" translate="yes" xml:space="preserve">
          <source>If the return value of reval() is (or contains) any code reference, those code references are wrapped to be themselves executed always in the compartment. See &lt;a href=&quot;#wrap_code_refs_within&quot;&gt;wrap_code_refs_within&lt;/a&gt;.</source>
          <target state="translated">Если возвращаемое значение reval () представляет собой (или содержит) какую-либо ссылку на код, эти ссылки кода помещаются в оболочку, чтобы сами всегда выполняться в отсеке. См. &lt;a href=&quot;#wrap_code_refs_within&quot;&gt;Wrap_code_refs_within&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b5b2e1517f57a24f52793e2d523bf3e3916b624" translate="yes" xml:space="preserve">
          <source>If the revision (previously &quot;tracking version&quot;) number of UCA is given, behavior of that revision is emulated on collating. If omitted, the return value of &lt;code&gt;UCA_Version()&lt;/code&gt; is used.</source>
          <target state="translated">Если указан номер ревизии (ранее &amp;laquo;отслеживаемая версия&amp;raquo;) UCA, поведение этой ревизии эмулируется при сопоставлении. Если не указано, используется возвращаемое значение &lt;code&gt;UCA_Version()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a7a3bfd506eaa3a5969fb39449cbd90048c5cd5" translate="yes" xml:space="preserve">
          <source>If the right argument is an expression rather than a search pattern, substitution, or transliteration, it is interpreted as a search pattern at run time. Note that this means that its contents will be interpolated twice, so</source>
          <target state="translated">Если правильным аргументом является выражение,а не шаблон поиска,подстановка или транслитерация,то он интерпретируется как шаблон поиска во время выполнения.Обратите внимание,что это означает,что его содержимое будет дважды интерполировано,поэтому</target>
        </trans-unit>
        <trans-unit id="397d47eee4fc1ac1405170a336868a5dec199f77" translate="yes" xml:space="preserve">
          <source>If the same C type is used in several different contexts which require different translations, &lt;code&gt;typedef&lt;/code&gt; several new types mapped to this C type, and create separate</source>
          <target state="translated">Если один и тот же тип C используется в нескольких разных контекстах, требующих разных переводов, &lt;code&gt;typedef&lt;/code&gt; несколько новых типов, сопоставленных с этим типом C, и создайте отдельные</target>
        </trans-unit>
        <trans-unit id="456756c29fcce7da570891f767727aa9e1c8ea70" translate="yes" xml:space="preserve">
          <source>If the same character (or a sequence of characters) exists in the collation element table through &lt;code&gt;table&lt;/code&gt; , mapping to collation elements is overridden. If it does not exist, the mapping is defined additionally.</source>
          <target state="translated">Если такой же символ (или последовательность символов) существует в таблице элементов сопоставления через &lt;code&gt;table&lt;/code&gt; , сопоставление с элементами сопоставления переопределяется. Если его нет, отображение определяется дополнительно.</target>
        </trans-unit>
        <trans-unit id="250b229660b09d1a93cecb0077c43fdb021bc44f" translate="yes" xml:space="preserve">
          <source>If the scalar contains a number the raw SV will be leaner.</source>
          <target state="translated">Если скаляр содержит число,то сырое SV будет беднее.</target>
        </trans-unit>
        <trans-unit id="129cba7aa8d1059953f619ec45963493064daafb" translate="yes" xml:space="preserve">
          <source>If the scalar from the previous example had an extra reference:</source>
          <target state="translated">Если скаляр из предыдущего примера имел дополнительную ссылку:</target>
        </trans-unit>
        <trans-unit id="942a6cfe1787a0e79c2fbf6e9025269b48593e53" translate="yes" xml:space="preserve">
          <source>If the script says that your package is incomplete, and asks whether to continue, just answer with Y (this can only happen if you don't use long filenames or forget to issue &quot;set FNCASE=y&quot; first).</source>
          <target state="translated">Если скрипт говорит,что ваш пакет неполный,и спрашивает,продолжать ли его,просто ответьте Y (это может произойти только в том случае,если вы не используете длинные имена файлов или забыли сначала выдать &quot;set FNCASE=y&quot;).</target>
        </trans-unit>
        <trans-unit id="1ebc636a0a5f78fe0991b4d30678c7a47413c67b" translate="yes" xml:space="preserve">
          <source>If the second argument to a piped &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; contains shell metacharacters, perl &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt;s, then &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt;s a shell to decode the metacharacters and eventually run the desired program. If the program couldn't be run, it's the shell that gets the message, not Perl. All your Perl program can find out is whether the shell itself could be successfully started. You can still capture the shell's STDERR and check it for error messages. See &lt;a href=&quot;#How-can-I-capture-STDERR-from-an-external-command%3f&quot;&gt;How can I capture STDERR from an external command?&lt;/a&gt; elsewhere in this document, or use the &lt;a href=&quot;ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt; module.</source>
          <target state="translated">Если второй аргумент конвейерной функции &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; содержит метасимволы оболочки, perl &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; s, затем &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; sa shell для декодирования метасимволов и, в конечном итоге, запуска желаемой программы. Если программа не может быть запущена, сообщение получает оболочка, а не Perl. Все, что ваша программа на Perl может узнать, это то, можно ли успешно запустить оболочку. Вы все еще можете захватить STDERR оболочки и проверить его на наличие сообщений об ошибках. См. &lt;a href=&quot;#How-can-I-capture-STDERR-from-an-external-command%3f&quot;&gt;Как захватить STDERR с помощью внешней команды?&lt;/a&gt; в другом месте в этом документе или используйте модуль &lt;a href=&quot;ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a485d6980d01df96f56ec659ef159a6f3e30c7c" translate="yes" xml:space="preserve">
          <source>If the second operand has a &quot;nomethod&quot; method then use that.</source>
          <target state="translated">Если второй операнд имеет метод &quot;нометода&quot;,то используйте его.</target>
        </trans-unit>
        <trans-unit id="d89fc930c903cfb2489602dfe78fa395aab16a02" translate="yes" xml:space="preserve">
          <source>If the second parameter (a boolean) is omitted or false, the decomposition is canonical decomposition; if the second parameter (a boolean) is true, the decomposition is compatibility decomposition.</source>
          <target state="translated">Если второй параметр (булевый)опущен или ложный,то декомпозиция является канонической;если второй параметр (булевый)верен,то декомпозиция является декомпозицией совместимости.</target>
        </trans-unit>
        <trans-unit id="cdc3a4f8b493e77f4b46b059968dc0b38f7409ec" translate="yes" xml:space="preserve">
          <source>If the selected element is outside the string, the value 0 is returned. If an element off the end of the string is written to, Perl will first extend the string with sufficiently many zero bytes. It is an error to try to write off the beginning of the string (i.e., negative OFFSET).</source>
          <target state="translated">Если выбранный элемент находится вне строки,возвращается значение 0.Если элемент,находящийся вне конца строки,записан,то Perl сначала расширит строку на достаточное количество нулевых байт.Ошибкой является попытка списания начала строки (т.е.отрицательный OFFSET).</target>
        </trans-unit>
        <trans-unit id="08309d3b072967d3ab275a7c77649be9b9f2f474" translate="yes" xml:space="preserve">
          <source>If the semaphore's count would drop below zero, this method will block until such time as the semaphore's count is greater than or equal to the amount you're &lt;code&gt;down&lt;/code&gt; ing the semaphore's count by.</source>
          <target state="translated">Если счетчик семафора упадет ниже нуля, этот метод будет блокироваться до тех пор, пока счетчик семафора не станет больше или равен величине, на которую вы &lt;code&gt;down&lt;/code&gt; счетчик семафора.</target>
        </trans-unit>
        <trans-unit id="49cf6efaba2d8b062462556a6172122cd62a7391" translate="yes" xml:space="preserve">
          <source>If the semaphore's count would drop below zero, this method will return</source>
          <target state="translated">Если количество семафоров упадет ниже нуля,этот метод вернет</target>
        </trans-unit>
        <trans-unit id="feaf413a0792a40fde39688dd7794f1b79d23f9d" translate="yes" xml:space="preserve">
          <source>If the shareable image isn't in any of these places, you'll need to define a logical name</source>
          <target state="translated">Если разделяемое изображение не находится ни в одном из этих мест,вам нужно будет определить логическое имя</target>
        </trans-unit>
        <trans-unit id="5d77daa474d5b520bbe270f2db415132f8e51945" translate="yes" xml:space="preserve">
          <source>If the socket is in a connected state, the peer address is returned. If the socket is not in a connected state, undef is returned.</source>
          <target state="translated">Если сокет находится в подключенном состоянии,то возвращается одноранговый адрес.Если сокет не находится в состоянии подключения,возвращается адрес undef.</target>
        </trans-unit>
        <trans-unit id="bc839afaf75ab77ac378c573dd37cfe67fada222" translate="yes" xml:space="preserve">
          <source>If the source number can be represented in the target form, that representation is used.</source>
          <target state="translated">Если исходный номер может быть представлен в целевой форме,то используется это представление.</target>
        </trans-unit>
        <trans-unit id="ad2456e62439e41ca828e4d7a559faef86d9a12f" translate="yes" xml:space="preserve">
          <source>If the source number is between two numbers representable in the target form, a representation of one of these numbers is used. (</source>
          <target state="translated">Если исходный номер находится между двумя числами,представленными в целевой форме,то используется представление одного из этих номеров.(</target>
        </trans-unit>
        <trans-unit id="5807a3edb0534ce60ac2857df2fbffa4467c6e15" translate="yes" xml:space="preserve">
          <source>If the source number is outside of the limits representable in the target form, a representation of the closest limit is used. (</source>
          <target state="translated">Если номер источника находится вне пределов,представляемых в целевой форме,то используется представление о ближайшем пределе.(</target>
        </trans-unit>
        <trans-unit id="a2b6fc7f507aeb4c29a8733766d6c6136c45fda9" translate="yes" xml:space="preserve">
          <source>If the special input filename &quot;&quot;, &quot;-&quot; or &quot;&amp;lt;&amp;amp;STDIN&quot; is given then the STDIN filehandle is used for input (and no open or close is performed). If no input filename is specified then &quot;-&quot; is implied. Filehandle references, or objects that support the regular IO operations (like &lt;code&gt;&amp;lt;$fh&amp;gt;&lt;/code&gt; or &lt;code&gt;$fh-&amp;lt;Egt&lt;/code&gt;getline&amp;gt;) are also accepted; the handles must already be opened.</source>
          <target state="translated">Если задано специальное имя файла ввода &amp;laquo;&amp;raquo;, &amp;laquo;-&amp;raquo; или &amp;laquo;&amp;lt;&amp;amp; STDIN&amp;raquo;, то для ввода используется дескриптор файла STDIN (и ни открытие, ни закрытие не выполняется). Если имя входного файла не указано, подразумевается &amp;laquo;-&amp;raquo;. Ссылки на дескрипторы файлов или объекты, поддерживающие обычные операции ввода-вывода (например, &lt;code&gt;&amp;lt;$fh&amp;gt;&lt;/code&gt; или &lt;code&gt;$fh-&amp;lt;Egt&lt;/code&gt; getline&amp;gt;), также принимаются; ручки уже должны быть открыты.</target>
        </trans-unit>
        <trans-unit id="0ec8f0307ac0cd29be9e31e20412d0003c85f12a" translate="yes" xml:space="preserve">
          <source>If the standard options aren't enough, you may want to subclass Pod::Simple::XHMTL. These are the most likely candidates for methods you'll want to override when subclassing.</source>
          <target state="translated">Если стандартных опций недостаточно,вы можете использовать подкласс Pod::Simple::XHMTL.Это наиболее вероятные кандидатуры для методов,которые вы захотите переопределить при подклассификации.</target>
        </trans-unit>
        <trans-unit id="95c4f5fed91805150d0fb1f5cc265445f3719afe" translate="yes" xml:space="preserve">
          <source>If the string happens to be encoded as UTF-8 internally (and thus has the UTF8 flag set), this is ignored by &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt;, and it operates on the internal byte string, not the conceptual character string, even if you only have characters with values less than 256.</source>
          <target state="translated">Если строка внутренне закодирована как UTF-8 (и, таким образом, имеет установленный флаг UTF8), &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; игнорирует это и работает с внутренней байтовой строкой, а не с концептуальной символьной строкой, даже если у вас есть только символы с значения меньше 256.</target>
        </trans-unit>
        <trans-unit id="e46f7dff46b6e909ca2a4c0f1cd989e3474f6367" translate="yes" xml:space="preserve">
          <source>If the string happens to be encoded as UTF-8 internally (and thus has the UTF8 flag set), this is ignored by &lt;code&gt;&lt;a href=&quot;vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt;, and it operates on the internal byte string, not the conceptual character string, even if you only have characters with values less than 256.</source>
          <target state="translated">Если строка внутренне закодирована как UTF-8 (и, таким образом, имеет установленный флаг UTF8), &lt;code&gt;&lt;a href=&quot;vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; игнорирует это и работает с внутренней байтовой строкой, а не с концептуальной символьной строкой, даже если у вас есть только символы с значения меньше 256.</target>
        </trans-unit>
        <trans-unit id="556906a3727707516e15ba62fe70b3006b4bd52d" translate="yes" xml:space="preserve">
          <source>If the string is just one character in length, the Unicode numeric value is returned if it has one, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; otherwise. Note that this need not be a whole number. &lt;code&gt;num(&quot;\N{TIBETAN DIGIT HALF ZERO}&quot;)&lt;/code&gt; , for example returns -0.5.</source>
          <target state="translated">Если длина строки составляет всего один символ, возвращается числовое значение Unicode, если оно есть, или &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; в противном случае. Обратите внимание, что это не обязательно целое число. &lt;code&gt;num(&quot;\N{TIBETAN DIGIT HALF ZERO}&quot;)&lt;/code&gt; , например, возвращает -0,5.</target>
        </trans-unit>
        <trans-unit id="3c98175c6574b582a8455429e44a48ac7e74d895" translate="yes" xml:space="preserve">
          <source>If the string is more than one character, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned unless all its characters are decimal digits (that is, they would match &lt;code&gt;\d+&lt;/code&gt; ), from the same script. For example if you have an ASCII '0' and a Bengali '3', mixed together, they aren't considered a valid number, and &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned. A further restriction is that the digits all have to be of the same form. A half-width digit mixed with a full-width one will return &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. The Arabic script has two sets of digits; &lt;code&gt;num&lt;/code&gt; will return &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; unless all the digits in the string come from the same set.</source>
          <target state="translated">Если строка состоит из более чем одного символа, возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , если все ее символы не являются десятичными цифрами (то есть они соответствуют &lt;code&gt;\d+&lt;/code&gt; ) из того же сценария. Например, если у вас есть ASCII &amp;laquo;0&amp;raquo; и бенгальский &amp;laquo;3&amp;raquo;, смешанные вместе, они не считаются допустимым числом, и возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Еще одно ограничение - все цифры должны иметь одинаковую форму. Цифра половинной ширины, смешанная с цифрой полной ширины, вернет &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Арабский шрифт состоит из двух наборов цифр; &lt;code&gt;num&lt;/code&gt; вернет &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , если все цифры в строке не принадлежат одному и тому же набору.</target>
        </trans-unit>
        <trans-unit id="b8c4922eb5c062cef768c57176fb78d4965487a5" translate="yes" xml:space="preserve">
          <source>If the subroutine is an XSUB, the elements to be compared are pushed on to the stack, the way arguments are usually passed to XSUBs. $a and $b are not set.</source>
          <target state="translated">Если подпрограмма является XSUB,то сравниваемые элементы выталкиваются в стек,а аргументы обычно передаются в XSUB.$a и $b не устанавливаются.</target>
        </trans-unit>
        <trans-unit id="976151f66fa723fd3131374feb62ee8e2fa9f3b7" translate="yes" xml:space="preserve">
          <source>If the subroutine needs to signal an error, it should call die() with the desired error message as its argument. GetOptions() will catch the die(), issue the error message, and record that an error result must be returned upon completion.</source>
          <target state="translated">Если подпрограмма должна сигнализировать об ошибке,она должна вызвать функцию die()с желаемым сообщением об ошибке в качестве аргумента.GetOptions()перехватит функцию die(),выдаст сообщение об ошибке и запишет,что результат ошибки должен быть возвращен по завершению.</target>
        </trans-unit>
        <trans-unit id="40540ec0b48601a220c70ec78c454bb0e1f51c33" translate="yes" xml:space="preserve">
          <source>If the subroutine returns a scalar with a newline or a filehandle, it will be interpreted as raw TAP or as a TAP stream, respectively.</source>
          <target state="translated">Если подпрограмма возвращает скаляр с новой строкой или файловым хэндлом,то он будет интерпретирован как сырой TAP или как TAP-поток,соответственно.</target>
        </trans-unit>
        <trans-unit id="ca613cca9ddf94b18fd3a6da5979f02e2a0a3fcf" translate="yes" xml:space="preserve">
          <source>If the subroutine's prototype is &lt;code&gt;($$)&lt;/code&gt; , the elements to be compared are passed by reference in &lt;code&gt;@_&lt;/code&gt; , as for a normal subroutine. This is slower than unprototyped subroutines, where the elements to be compared are passed into the subroutine as the package global variables $a and $b (see example below). Note that in the latter case, it is usually highly counter-productive to declare $a and $b as lexicals.</source>
          <target state="translated">Если прототип подпрограммы &lt;code&gt;($$)&lt;/code&gt; , сравниваемые элементы передаются по ссылке в &lt;code&gt;@_&lt;/code&gt; , как для обычной подпрограммы. Это медленнее, чем подпрограммы без прототипов, где сравниваемые элементы передаются в подпрограмму как глобальные переменные пакета $ a и $ b (см. Пример ниже). Обратите внимание, что в последнем случае объявление $ a и $ b лексическими числами обычно крайне непродуктивно.</target>
        </trans-unit>
        <trans-unit id="1b8a697c5090fd8ce94c13b5cefb41955f99b010" translate="yes" xml:space="preserve">
          <source>If the sv already is UTF-8 (or if it is not POK), or if the encoding is not a reference, nothing is done to the sv. If the encoding is not an &lt;code&gt;Encode::XS&lt;/code&gt; Encoding object, bad things will happen. (See</source>
          <target state="translated">Если sv уже является UTF-8 (или если это не POK), или если кодировка не является ссылкой, с sv ничего не делается. Если кодировка не является объектом &lt;code&gt;Encode::XS&lt;/code&gt; Encoding, могут произойти неприятности. (Видеть</target>
        </trans-unit>
        <trans-unit id="25e6d11786b2dfdb0f52678b6850a3dff8731c46" translate="yes" xml:space="preserve">
          <source>If the sv is the target of a weak reference then it returns the back references structure associated with the sv; otherwise return NULL.</source>
          <target state="translated">Если sv является целью слабой ссылки,то возвращается структура обратных ссылок,связанная с sv;в противном случае возвращается NULL.</target>
        </trans-unit>
        <trans-unit id="82b0821b14cc4cbb805ab8ac00aa5900da22e409" translate="yes" xml:space="preserve">
          <source>If the symbol &lt;code&gt;:void&lt;/code&gt; appears in the import list, then functions named later in that import list raise an exception only when these are called in void context--that is, when their return values are ignored. For example</source>
          <target state="translated">Если в списке импорта появляется символ &lt;code&gt;:void&lt;/code&gt; , то функции, названные позже в этом списке импорта, вызывают исключение только тогда, когда они вызываются в контексте void, то есть когда их возвращаемые значения игнорируются. Например</target>
        </trans-unit>
        <trans-unit id="50cf7df5061941de64a11ddf12781ae7a8f3290f" translate="yes" xml:space="preserve">
          <source>If the system Perl is compiled in has thread-safe variants of such calls, they will be used. Beyond that, Perl is at the mercy of the thread-safety or -unsafety of the calls. Please consult your C library call documentation.</source>
          <target state="translated">Если система,в которой Perl скомпилирован,имеет потокобезопасные варианты таких вызовов,то они будут использоваться.Кроме того,Perl находится во власти потокобезопасных или -небезопасных вызовов.Обратитесь к документации по вызовам библиотеки C.</target>
        </trans-unit>
        <trans-unit id="d5b1234bec481f7f0fb540471e8867994b10762a" translate="yes" xml:space="preserve">
          <source>If the target machine is little-endian, we could write:</source>
          <target state="translated">Если целевая машина маленькая,мы могли бы написать:</target>
        </trans-unit>
        <trans-unit id="ff635540edd5aea28a885e06a80c5c6844ba7c11" translate="yes" xml:space="preserve">
          <source>If the template is not specified, a template is always automatically generated. This temporary file is placed in tmpdir() (L&amp;lt;:spec&amp;gt;) unless a directory is specified explicitly with the DIR option.</source>
          <target state="translated">Если шаблон не указан, всегда автоматически создается шаблон. Этот временный файл помещается в tmpdir () (L &amp;lt;: spec&amp;gt;), если каталог не указан явно с параметром DIR.</target>
        </trans-unit>
        <trans-unit id="593ec0746d963b28de5ba2cf0799b3f4777c63c7" translate="yes" xml:space="preserve">
          <source>If the temporary file can not be created undef is returned. Currently this command will probably not work when the temporary directory is on an NFS file system.</source>
          <target state="translated">Если временный файл не может быть создан,возвращается undef.В настоящее время эта команда,вероятно,не будет работать,когда временный каталог находится на файловой системе NFS.</target>
        </trans-unit>
        <trans-unit id="326e7cf804954bda3811121b38cb7c631e7575fe" translate="yes" xml:space="preserve">
          <source>If the terminating string is quoted, the type of quotes used determine the treatment of the text.</source>
          <target state="translated">В случае кавычки завершающей строки,тип используемых кавычек определяет обработку текста.</target>
        </trans-unit>
        <trans-unit id="957eb5ae659823f7ba1c0183ec0ac873de8b4109" translate="yes" xml:space="preserve">
          <source>If the test is unplanned, this method will always return false. See &lt;code&gt;is_unplanned&lt;/code&gt; .</source>
          <target state="translated">Если тест незапланированный, этот метод всегда будет возвращать false. См. &lt;code&gt;is_unplanned&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bfabe273698ccd033cf292d0d277e005ca02c57" translate="yes" xml:space="preserve">
          <source>If the tests fail &lt;code&gt;prove&lt;/code&gt; will exit with non-zero status.</source>
          <target state="translated">Если тесты не пройдут, функция &amp;laquo; &lt;code&gt;prove&lt;/code&gt; завершится с ненулевым статусом.</target>
        </trans-unit>
        <trans-unit id="269c79628ff3b9a7faad565d0d36f6d320d9b282" translate="yes" xml:space="preserve">
          <source>If the text of the L&amp;lt;&amp;gt; escape is entirely enclosed in double quotes, it's interpreted as a link to a section for backward compatibility.</source>
          <target state="translated">Если текст escape-символа L &amp;lt;&amp;gt; полностью заключен в двойные кавычки, он интерпретируется как ссылка на раздел для обратной совместимости.</target>
        </trans-unit>
        <trans-unit id="f92e03b607dab58b8f2f2e3c224ccb0a3fc3ca6c" translate="yes" xml:space="preserve">
          <source>If the text of the error message starts with an exclamation mark &lt;code&gt;!&lt;/code&gt; it is interpreted specially by GetOptions(). There is currently one special command implemented: &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die(&quot;!FINISH&quot;)&lt;/a&gt;&lt;/code&gt; will cause GetOptions() to stop processing options, as if it encountered a double dash &lt;code&gt;--&lt;/code&gt; .</source>
          <target state="translated">Если текст сообщения об ошибке начинается с восклицательного знака &lt;code&gt;!&lt;/code&gt; он специально интерпретируется GetOptions (). В настоящее время реализована одна специальная команда: &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die(&quot;!FINISH&quot;)&lt;/a&gt;&lt;/code&gt; заставит GetOptions () прекратить обработку параметров, как если бы он встретил двойной дефис &lt;code&gt;--&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54a21a0dcb36b1ce3d43912ccebce5a460b97864" translate="yes" xml:space="preserve">
          <source>If the third argument is</source>
          <target state="translated">Если третий аргумент</target>
        </trans-unit>
        <trans-unit id="b232866b6ad063c73d4ad37ea476edb565d6de63" translate="yes" xml:space="preserve">
          <source>If the third argument,</source>
          <target state="translated">Если третий аргумент,</target>
        </trans-unit>
        <trans-unit id="66bf0740d3ced4e3ce4166e93bb8bdf81549240a" translate="yes" xml:space="preserve">
          <source>If the thread being &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt;ed &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;d, the error it died with will be returned at this time. If you don't want the thread performing the &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; to die as well, you should either wrap the &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; in an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; or use the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; thread method instead of &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если нить существо &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; эд &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; д, ошибка он умер с будет возвращено в это время. Если вы не хотите, чтобы поток, выполняющий &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; , тоже умирал, вы должны либо заключить &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; , либо использовать метод потока &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; вместо &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cd970acc5e28ee89d2e82334dde273c65bae5b7" translate="yes" xml:space="preserve">
          <source>If the title can't be found, then get_short_title returns empty-string (&quot;&quot;).</source>
          <target state="translated">Если заголовок не может быть найден,то get_short_title возвращает пустую строку (&quot;&quot;).</target>
        </trans-unit>
        <trans-unit id="697a489e14d5b870ec5510bd4b458c67ab45bad8" translate="yes" xml:space="preserve">
          <source>If the typeglob &lt;code&gt;gv&lt;/code&gt; can be expressed more succinctly, by having something other than a real GV in its place in the stash, replace it with the optimised form. Basic requirements for this are that &lt;code&gt;gv&lt;/code&gt; is a real typeglob, is sufficiently ordinary, and is only referenced from its package. This function is meant to be used when a GV has been looked up in part to see what was there, causing upgrading, but based on what was found it turns out that the real GV isn't required after all.</source>
          <target state="translated">Если typeglob &lt;code&gt;gv&lt;/code&gt; можно выразить более кратко, имея на своем месте в тайнике нечто иное, чем реальный GV, замените его оптимизированной формой. Основные требования для этого заключаются в том, что &lt;code&gt;gv&lt;/code&gt; является реальным typeglob, достаточно обычным и на него ссылаются только из своего пакета. Эта функция предназначена для использования, когда GV частично просматривается, чтобы увидеть, что там было, что вызывает обновление, но на основании того, что было обнаружено, оказывается, что реальный GV в конце концов не требуется.</target>
        </trans-unit>
        <trans-unit id="7e317e256420ab2a48b2f7e7b312c3d9f416e521" translate="yes" xml:space="preserve">
          <source>If the underlying &lt;code&gt;IO::Handle&lt;/code&gt; is closed, or if there are any read or write failures, the file handle will be forced closed, and &lt;code&gt;code()&lt;/code&gt; will return &quot;421&quot; (temporary connection failure) and &lt;code&gt;message()&lt;/code&gt; will return &quot;[$pkg] Connection closed&quot; (where $pkg is the name of the class that subclassed &lt;code&gt;Net::Cmd&lt;/code&gt; ). The _set_status_closed() method can be overridden to set a different message (by calling set_status()) or otherwise trap this error.</source>
          <target state="translated">Если базовый &lt;code&gt;IO::Handle&lt;/code&gt; закрыт, или если есть какие-либо ошибки чтения или записи, дескриптор файла будет принудительно закрыт, и &lt;code&gt;code()&lt;/code&gt; вернет &quot;421&quot; (временный сбой соединения), а &lt;code&gt;message()&lt;/code&gt; вернет &quot;[ $ pkg] Соединение закрыто &quot;(где $ pkg - это имя класса, унаследовавшего от &lt;code&gt;Net::Cmd&lt;/code&gt; ). Метод _set_status_closed () можно переопределить, чтобы установить другое сообщение (путем вызова set_status ()) или иным образом перехватить эту ошибку.</target>
        </trans-unit>
        <trans-unit id="cdc3b2cf894256f273b0349af8d5d688d0cdcb39" translate="yes" xml:space="preserve">
          <source>If the user builds a shared</source>
          <target state="translated">Если пользователь создает общий</target>
        </trans-unit>
        <trans-unit id="32324af5745fb70c85007da7a27faa556a189cfd" translate="yes" xml:space="preserve">
          <source>If the user didn't specify anything, it's interpreted as having used the &lt;code&gt;please&lt;/code&gt; tag. It's up to you to make this useful.</source>
          <target state="translated">Если пользователь ничего не указал, это интерпретируется как использование тега &lt;code&gt;please&lt;/code&gt; . Как сделать это полезным - решать вам.</target>
        </trans-unit>
        <trans-unit id="cd074d1ec9315994a5770ffd227be188d8ea3674" translate="yes" xml:space="preserve">
          <source>If the user does not have HTML::Lint installed, the whole block of code</source>
          <target state="translated">Если у пользователя не установлен HTML::Lint,то весь блок кода</target>
        </trans-unit>
        <trans-unit id="b39c8811f479889c6eabed43038bf7a333557852" translate="yes" xml:space="preserve">
          <source>If the user has superuser privileges, and is not working on AFS or relatives, then the defaults for INSTALLPRIVLIB, INSTALLARCHLIB, INSTALLSCRIPT, etc. will be appropriate, and this incantation will be the best:</source>
          <target state="translated">Если пользователь имеет привилегии суперпользователя и не работает с AFS или родственниками,то по умолчанию будут подходящими значения для УСТАНОВКИ,УСТАНОВКИ,УСТАНОВКИ и т.д.,и это заклинание будет лучшим:</target>
        </trans-unit>
        <trans-unit id="3d9745c4616cab220c27715466f7a222d8b72268" translate="yes" xml:space="preserve">
          <source>If the value</source>
          <target state="translated">Если значение</target>
        </trans-unit>
        <trans-unit id="1676523b419ae746e43ad6553d2687aea42c504e" translate="yes" xml:space="preserve">
          <source>If the value doesn't match the 'make' program you want to use, edit Config.pm to fix it.</source>
          <target state="translated">Если значение не соответствует программе 'make',которую Вы хотите использовать,отредактируйте Config.pm,чтобы исправить это.</target>
        </trans-unit>
        <trans-unit id="9aa86f4743abc7079a416abc9073771271ff4394" translate="yes" xml:space="preserve">
          <source>If the value is &amp;lt;= &lt;code&gt;UV_MAX&lt;/code&gt; it is returned as a UV, the output flags are clear, and nothing is written to</source>
          <target state="translated">Если значение &amp;lt;= &lt;code&gt;UV_MAX&lt;/code&gt; , оно возвращается как UV, флаги вывода очищены, и в него ничего не записывается.</target>
        </trans-unit>
        <trans-unit id="bd15952acdcd265d4f18a816b3be548c37a82d83" translate="yes" xml:space="preserve">
          <source>If the value is &amp;lt;= UV_MAX it is returned as a UV, the output flags are clear, and nothing is written to</source>
          <target state="translated">Если значение &amp;lt;= UV_MAX, оно возвращается как UV, флаги вывода очищены, и в него ничего не записывается.</target>
        </trans-unit>
        <trans-unit id="c10d8690679793d91d603d7249997075229bffed" translate="yes" xml:space="preserve">
          <source>If the value is a coderef, we return &amp;amp;$value($lh, ...parameters...).</source>
          <target state="translated">Если значение является ссылкой на код, мы возвращаем &amp;amp; $ value ($ lh, ... параметры ...).</target>
        </trans-unit>
        <trans-unit id="ef50a320b2209faad43a3f8213d92ea4b618e424" translate="yes" xml:space="preserve">
          <source>If the value is a scalarref, the scalar is dereferenced and returned (and any parameters are ignored).</source>
          <target state="translated">Если значение является скаляром,то скаляр разыменовывается и возвращается (при этом любые параметры игнорируются).</target>
        </trans-unit>
        <trans-unit id="6f950a468109b8d39520112d3f58effdc56407fc" translate="yes" xml:space="preserve">
          <source>If the value is a string that</source>
          <target state="translated">Если значение является строкой,которая</target>
        </trans-unit>
        <trans-unit id="034aa5dfb1d3fc388ace8815e3c3af316b7fe0f0" translate="yes" xml:space="preserve">
          <source>If the value is true, then the appropriate pragma is assumed to be in the ambient scope, otherwise not.</source>
          <target state="translated">Если значение верно,то считается,что соответствующая прагма относится к окружающей среде,в противном случае-нет.</target>
        </trans-unit>
        <trans-unit id="c4b0ded1a1deef22b5fab46f3c6efeda2921b5b8" translate="yes" xml:space="preserve">
          <source>If the value of</source>
          <target state="translated">Если значение</target>
        </trans-unit>
        <trans-unit id="3799e4ea2da2d340ca2beed8a5872250c216eb41" translate="yes" xml:space="preserve">
          <source>If the value of the number can fit in a UV, it is returned in the *valuep IS_NUMBER_IN_UV will be set to indicate that *valuep is valid, IS_NUMBER_IN_UV will never be set unless *valuep is valid, but *valuep may have been assigned to during processing even though IS_NUMBER_IN_UV is not set on return. If valuep is NULL, IS_NUMBER_IN_UV will be set for the same cases as when valuep is non-NULL, but no actual assignment (or SEGV) will occur.</source>
          <target state="translated">Если значение числа может поместиться в UV,оно возвращается в *valuep IS_NUMBER_IN_UV будет установлено,чтобы показать,что *valuep является действительным,IS_NUMBER_IN_UV никогда не будет установлено,если *valuep не является действительным,но *valuep,возможно,было назначено во время обработки,даже если IS_NUMBER_IN_UV не установлено при возврате.Если значение NULL,IS_NUMBER_IN_UV будет установлено для тех же случаев,что и если значение не NULL,но фактическое присвоение (или SEGV)не произойдет.</target>
        </trans-unit>
        <trans-unit id="d417792987cefdc8fbbad820c7047930346b40c5" translate="yes" xml:space="preserve">
          <source>If the value to pack is too long, the result is truncated. If it's too long and an explicit count is provided, &lt;code&gt;Z&lt;/code&gt; packs only &lt;code&gt;$count-1&lt;/code&gt; bytes, followed by a null byte. Thus &lt;code&gt;Z&lt;/code&gt; always packs a trailing null, except when the count is 0.</source>
          <target state="translated">Если значение для упаковки слишком велико, результат обрезается. Если он слишком длинный и указан явный счетчик, &lt;code&gt;Z&lt;/code&gt; упаковывает только байтов &lt;code&gt;$count-1&lt;/code&gt; , за которыми следует нулевой байт. Таким образом, &lt;code&gt;Z&lt;/code&gt; всегда упаковывает завершающий ноль, кроме случаев, когда счетчик равен 0.</target>
        </trans-unit>
        <trans-unit id="2b18faee7915986e7efaa1de04f931c2b8c71f1c" translate="yes" xml:space="preserve">
          <source>If the values are all small integers, you could use a simple indexed array. This kind of an array will take up less space:</source>
          <target state="translated">Если все значения являются маленькими целыми числами,то можно использовать простой индексированный массив.Такой массив займет меньше места:</target>
        </trans-unit>
        <trans-unit id="5cc9e16e91b4a8896cd9faaa5f9549cbc7085c8f" translate="yes" xml:space="preserve">
          <source>If the values in question are integers instead of strings, you can save quite a lot of space by using bit strings instead:</source>
          <target state="translated">Если рассматриваемые значения являются целыми числами,а не строками,то можно сэкономить довольно много места,используя вместо них битовые строки:</target>
        </trans-unit>
        <trans-unit id="73e7da39372f108fea1077e432f6f8a5490ef1c9" translate="yes" xml:space="preserve">
          <source>If the variable is locked by another thread, the &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; call will block until it's available. &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; is recursive, so multiple calls to &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; are safe--the variable will remain locked until the outermost lock on the variable goes out of scope.</source>
          <target state="translated">Если переменная заблокирована другим потоком, вызов &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; будет заблокирован, пока он не станет доступным. &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; является рекурсивным, поэтому множественные вызовы &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; безопасны - переменная будет оставаться заблокированной до тех пор, пока внешняя блокировка переменной не выйдет за пределы области видимости.</target>
        </trans-unit>
        <trans-unit id="82a274850c71686d34e3baa803737f0dedda24d3" translate="yes" xml:space="preserve">
          <source>If the variable is not set, or if the head of space-separated list is empty, the best available package is loaded.</source>
          <target state="translated">Если переменная не установлена,или если заголовок разделенного пробелами списка пуст,загружается лучший доступный пакет.</target>
        </trans-unit>
        <trans-unit id="80b83d018cb7a8db8be65fb54c56d8b5b7e8cb24" translate="yes" xml:space="preserve">
          <source>If the warnings category, &lt;code&gt;$category&lt;/code&gt; , has been set to &quot;FATAL&quot; in the calling module then die. Otherwise return.</source>
          <target state="translated">Если категория предупреждений, &lt;code&gt;$category&lt;/code&gt; , была установлена ​​в &quot;FATAL&quot; в вызывающем модуле, тогда умри. В противном случае вернитесь.</target>
        </trans-unit>
        <trans-unit id="9de09cf9a89a26f0cb448619847689ec2527d3db" translate="yes" xml:space="preserve">
          <source>If the whole program is Unicode (signified by using 8-bit &lt;b&gt;U&lt;/b&gt;nicode &lt;b&gt;T&lt;/b&gt;ransformation &lt;b&gt;F&lt;/b&gt;ormat), then all strings within it must be Unicode.</source>
          <target state="translated">Если вся программа Unicode (обозначается с помощью 8-битного &lt;b&gt;U&lt;/b&gt; nicode &lt;b&gt;T&lt;/b&gt; ransformation &lt;b&gt;F&lt;/b&gt; Ormat), то все строки внутри него должны быть Unicode.</target>
        </trans-unit>
        <trans-unit id="9cdf7f58b72ea89ccbb496e2eb6b9b4bc7fadaa5" translate="yes" xml:space="preserve">
          <source>If the word &lt;code&gt;while&lt;/code&gt; is replaced by the word &lt;code&gt;until&lt;/code&gt; , the sense of the test is reversed, but the conditional is still tested before the first iteration.</source>
          <target state="translated">Если слово &lt;code&gt;while&lt;/code&gt; заменяется словом &lt;code&gt;until&lt;/code&gt; , смысл теста меняется на противоположный, но условие все равно проверяется перед первой итерацией.</target>
        </trans-unit>
        <trans-unit id="10166029e96e7fe67231308fbe3c16515584c847" translate="yes" xml:space="preserve">
          <source>If there are additional casing rules that apply only in certain locales, an additional key for each will be defined in the returned hash. Each such key will be its locale name, defined as a 2-letter ISO 3166 country code, possibly followed by a &quot;_&quot; and a 2-letter ISO language code (possibly followed by a &quot;_&quot; and a variant code). You can find the lists of all possible locales, see &lt;a href=&quot;../locale/country&quot;&gt;Locale::Country&lt;/a&gt; and &lt;a href=&quot;../locale/language&quot;&gt;Locale::Language&lt;/a&gt;. (In Unicode 6.0, the only locales returned by this function are &lt;code&gt;lt&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;az&lt;/code&gt; .)</source>
          <target state="translated">Если есть дополнительные правила регистра, которые применяются только в определенных языковых стандартах, дополнительный ключ для каждого будет определен в возвращаемом хэше. Каждый такой ключ будет его названием локали, определенным как двухбуквенный код страны ISO 3166, за которым, возможно, следует &amp;laquo;_&amp;raquo; и двухбуквенный код языка ISO (возможно, за которым следует &amp;laquo;_&amp;raquo; и код варианта). Вы можете найти списки всех возможных локалей, см. &lt;a href=&quot;../locale/country&quot;&gt;Locale :: Country&lt;/a&gt; и &lt;a href=&quot;../locale/language&quot;&gt;Locale :: Language&lt;/a&gt; . (В Unicode 6.0 единственными языковыми стандартами, возвращаемыми этой функцией, являются &lt;code&gt;lt&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;az&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="c264a98231858c182cc8e558543c798b7c30e957" translate="yes" xml:space="preserve">
          <source>If there are more pack codes or if the repeat count of a field or a group is larger than what the remainder of the input string allows, the result is not well defined: the repeat count may be decreased, or &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack()&lt;/a&gt;&lt;/code&gt; may produce empty strings or zeros, or it may raise an exception. If the input string is longer than one described by the TEMPLATE, the remainder of that input string is ignored.</source>
          <target state="translated">Если имеется больше кодов пакетов или если количество повторов поля или группы больше, чем позволяет оставшаяся часть входной строки, результат не определен должным образом: количество повторов может быть уменьшено, или &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack()&lt;/a&gt;&lt;/code&gt; может привести к пустому строки или нули, или это может вызвать исключение. Если входная строка длиннее, чем описанная в ШАБЛОНЕ, оставшаяся часть этой входной строки игнорируется.</target>
        </trans-unit>
        <trans-unit id="b76f7ceb246d4c2d7fabcbfce30f4b0cda04fc65" translate="yes" xml:space="preserve">
          <source>If there are more pack codes or if the repeat count of a field or a group is larger than what the remainder of the input string allows, the result is not well defined: the repeat count may be decreased, or &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack()&lt;/a&gt;&lt;/code&gt; may produce empty strings or zeros, or it may raise an exception. If the input string is longer than one described by the TEMPLATE, the remainder of that input string is ignored.</source>
          <target state="translated">Если имеется больше кодов пакетов или если количество повторов поля или группы больше, чем позволяет оставшаяся часть входной строки, результат не определен должным образом: количество повторов может быть уменьшено, или &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack()&lt;/a&gt;&lt;/code&gt; может привести к пустому строки или нули, или это может вызвать исключение. Если входная строка длиннее, чем описанная в ШАБЛОНЕ, оставшаяся часть этой входной строки игнорируется.</target>
        </trans-unit>
        <trans-unit id="cf8ae3d8fd9e42e9aba417d2727a1cef25f1654d" translate="yes" xml:space="preserve">
          <source>If there are multiple threads running, &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; on a filehandle from a piped open returns true without waiting for the child process to terminate, if the filehandle is still open in another thread.</source>
          <target state="translated">Если выполняется несколько потоков, &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; для дескриптора файла из конвейерного open возвращает true, не дожидаясь завершения дочернего процесса, если дескриптор файла все еще открыт в другом потоке.</target>
        </trans-unit>
        <trans-unit id="2d703ea78c6bd312ccc4d4536374984caf742a2c" translate="yes" xml:space="preserve">
          <source>If there are multiple threads running, &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; on a filehandle from a piped open returns true without waiting for the child process to terminate, if the filehandle is still open in another thread.</source>
          <target state="translated">Если выполняется несколько потоков, &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; для дескриптора файла из конвейерного open возвращает true, не дожидаясь завершения дочернего процесса, если дескриптор файла все еще открыт в другом потоке.</target>
        </trans-unit>
        <trans-unit id="c3ca3b8e4b7d3fd6327a3431ba332cb4654544b7" translate="yes" xml:space="preserve">
          <source>If there are no case mappings for the &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt;, or if all three possible mappings (</source>
          <target state="translated">Если нет сопоставлений регистра для &lt;a href=&quot;#code-point-argument&quot;&gt;аргумента кодовой точки&lt;/a&gt; или если все три возможных сопоставления (</target>
        </trans-unit>
        <trans-unit id="4d288bab40c0346d55a3c0eb77940eab7a6641ad" translate="yes" xml:space="preserve">
          <source>If there are no shell metacharacters in the argument of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt;, Perl runs the command directly, without using the shell, and can correctly report whether the command started.</source>
          <target state="translated">Если в аргументе &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; нет метасимволов оболочки , Perl запускает команду напрямую, без использования оболочки, и может правильно сообщить, запущена ли команда.</target>
        </trans-unit>
        <trans-unit id="83b3c9dc933e2482f8eba281e591135e3899389e" translate="yes" xml:space="preserve">
          <source>If there are no threads blocked in a &lt;code&gt;cond_wait&lt;/code&gt; on the variable, the signal is discarded.</source>
          <target state="translated">Если в &lt;code&gt;cond_wait&lt;/code&gt; для переменной нет потоков, заблокированных , сигнал отбрасывается.</target>
        </trans-unit>
        <trans-unit id="dcf5c5ee7e0424ea7ada5c7826f4b90fdb2a116c" translate="yes" xml:space="preserve">
          <source>If there are no threads blocked in a &lt;code&gt;cond_wait&lt;/code&gt; on the variable, the signal is discarded. By always locking before signaling, you can (with care), avoid signaling before another thread has entered cond_wait().</source>
          <target state="translated">Если в &lt;code&gt;cond_wait&lt;/code&gt; переменной нет потоков, заблокированных , сигнал игнорируется . Всегда блокируя перед сигнализацией, вы можете (осторожно) избежать сигнализации до того, как другой поток войдет в cond_wait ().</target>
        </trans-unit>
        <trans-unit id="a5de19948908467a5a983001d47b7d9a0689b746" translate="yes" xml:space="preserve">
          <source>If there are no valid digits between the braces, the generated character is the NULL character (&lt;code&gt;\x{00}&lt;/code&gt; ). However, an explicit empty brace (&lt;code&gt;\x{}&lt;/code&gt; ) will not cause a warning (currently).</source>
          <target state="translated">Если между фигурными скобками нет действительных цифр, сгенерированный символ является символом NULL ( &lt;code&gt;\x{00}&lt;/code&gt; ). Однако явная пустая скобка ( &lt;code&gt;\x{}&lt;/code&gt; ) не вызовет предупреждения (в настоящее время).</target>
        </trans-unit>
        <trans-unit id="b342c6d59112da790e47e12118a22cde8dbcaf22" translate="yes" xml:space="preserve">
          <source>If there are only a few field hashes to declare, it is simplest to</source>
          <target state="translated">Если нужно объявить только несколько хэшей полей,то проще всего</target>
        </trans-unit>
        <trans-unit id="ae8e9a2c571cd018342d9c2118caec048fd77da4" translate="yes" xml:space="preserve">
          <source>If there are only three arguments and the third argument is a hash reference, the keys of that hash can have values &lt;code&gt;dict&lt;/code&gt; , &lt;code&gt;fold&lt;/code&gt; , and &lt;code&gt;comp&lt;/code&gt; or &lt;code&gt;xfrm&lt;/code&gt; (see below), and their corresponding values will be used as the parameters.</source>
          <target state="translated">Если есть только три аргумента, а третий аргумент является ссылкой на хэш, ключи этого хеша могут иметь значения &lt;code&gt;dict&lt;/code&gt; , &lt;code&gt;fold&lt;/code&gt; и &lt;code&gt;comp&lt;/code&gt; или &lt;code&gt;xfrm&lt;/code&gt; (см. Ниже), и их соответствующие значения будут использоваться в качестве параметров.</target>
        </trans-unit>
        <trans-unit id="1e86b013905dd12651149e8ec83c3ae6cf6c6b73" translate="yes" xml:space="preserve">
          <source>If there are two modules using &lt;code&gt;FindBin&lt;/code&gt; from different directories under the same interpreter, this won't work. Since &lt;code&gt;FindBin&lt;/code&gt; uses a &lt;code&gt;BEGIN&lt;/code&gt; block, it'll be executed only once, and only the first caller will get it right. This is a problem under mod_perl and other persistent Perl environments, where you shouldn't use this module. Which also means that you should avoid using &lt;code&gt;FindBin&lt;/code&gt; in modules that you plan to put on CPAN. To make sure that &lt;code&gt;FindBin&lt;/code&gt; will work is to call the &lt;code&gt;again&lt;/code&gt; function:</source>
          <target state="translated">Если есть два модуля, использующих &lt;code&gt;FindBin&lt;/code&gt; из разных каталогов в одном интерпретаторе, это не сработает. Поскольку &lt;code&gt;FindBin&lt;/code&gt; использует блок &lt;code&gt;BEGIN&lt;/code&gt; , он будет выполнен только один раз, и только первый вызывающий получит его правильно. Это проблема в mod_perl и других постоянных средах Perl, где вам не следует использовать этот модуль. Это также означает, что вам следует избегать использования &lt;code&gt;FindBin&lt;/code&gt; в модулях, которые вы планируете разместить на CPAN. Чтобы убедиться, что &lt;code&gt;FindBin&lt;/code&gt; работает, нужно вызвать функцию &lt;code&gt;again&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fcc3c3e2760c5e396f33222005be848fc9fe18e0" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; BLOCK, it is always executed just before the conditional is about to be evaluated again. Thus it can be used to increment a loop variable, even when the loop has been continued via the &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; statement.</source>
          <target state="translated">Если есть &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; BLOCK, он всегда выполняется непосредственно перед тем, как условие будет снова вычислено. Таким образом, его можно использовать для увеличения переменной цикла, даже если цикл был продолжен с помощью &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; оператора.</target>
        </trans-unit>
        <trans-unit id="8b36be5061281671022cf399b379651681b1d4d0" translate="yes" xml:space="preserve">
          <source>If there is a case folding for that code point, a reference to a hash with the following fields is returned:</source>
          <target state="translated">Если для этой кодовой точки имеется сгибание регистра,то возвращается ссылка на хэш со следующими полями:</target>
        </trans-unit>
        <trans-unit id="6424bf8b1f44f30e366f5038ca9bafadec447990" translate="yes" xml:space="preserve">
          <source>If there is a read or write timeout &lt;code&gt;code()&lt;/code&gt; will return &quot;421&quot; (temporary connection failure) and &lt;code&gt;message()&lt;/code&gt; will return &quot;[$pkg] Timeout&quot; (where $pkg is the name of the class that subclassed &lt;code&gt;Net::Cmd&lt;/code&gt; ). The _set_status_timeout() method can be overridden to set a different message (by calling set_status()) or otherwise trap this error.</source>
          <target state="translated">Если есть тайм-аут чтения или записи, &lt;code&gt;code()&lt;/code&gt; вернет &amp;laquo;421&amp;raquo; (временный сбой соединения), а &lt;code&gt;message()&lt;/code&gt; вернет &amp;laquo;[$ pkg] Timeout&amp;raquo; (где $ pkg - это имя класса, унаследовавшего от &lt;code&gt;Net::Cmd&lt;/code&gt; ). Метод _set_status_timeout () можно переопределить, чтобы установить другое сообщение (путем вызова set_status ()) или иным образом перехватить эту ошибку.</target>
        </trans-unit>
        <trans-unit id="11aba41a92baa1006f7ccfb764892fd564d365da" translate="yes" xml:space="preserve">
          <source>If there is a syntax error or runtime error, or a &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; statement is executed, &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; in scalar context or an empty list in list context, and &lt;code&gt;$@&lt;/code&gt; is set to the error message. (Prior to 5.16, a bug caused &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to be returned in list context for syntax errors, but not for runtime errors.) If there was no error, &lt;code&gt;$@&lt;/code&gt; is set to the empty string. A control flow operator like &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; can bypass the setting of &lt;code&gt;$@&lt;/code&gt; . Beware that using &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; neither silences Perl from printing warnings to STDERR, nor does it stuff the text of warning messages into &lt;code&gt;$@&lt;/code&gt; . To do either of those, you have to use the &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; facility, or turn off warnings inside the BLOCK or EXPR using &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt; warnings 'all'&lt;/code&gt; . See &lt;a href=&quot;warn&quot;&gt;warn&lt;/a&gt;, &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt;, and &lt;a href=&quot;../warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">Если есть синтаксическая ошибка или ошибка времени выполнения, или выполняется инструкция &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; в скалярном контексте или пустой список в контексте списка, а &lt;code&gt;$@&lt;/code&gt; устанавливается в сообщение об ошибке. (До 5.16 ошибка приводила к тому, что &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; возвращался в контексте списка для синтаксических ошибок, но не для ошибок времени выполнения.) Если ошибки не было, &lt;code&gt;$@&lt;/code&gt; устанавливается в пустую строку. Оператор потока управления, такой как &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; , может обойти настройку &lt;code&gt;$@&lt;/code&gt; . Помните, что использование &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; не запрещает Perl выводить предупреждения в STDERR и не помещает текст предупреждений в &lt;code&gt;$@&lt;/code&gt; . Чтобы выполнить одно из этих действий, вы должны использовать средство &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; или отключить предупреждения внутри BLOCK или EXPR, используя &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt; warnings 'all'&lt;/code&gt; &lt;a href=&quot;no&quot;&gt;без&lt;/a&gt; предупреждений . См. &lt;a href=&quot;warn&quot;&gt;Предупреждение&lt;/a&gt; , &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt; и &lt;a href=&quot;../warnings&quot;&gt;предупреждения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ebacccba519ce29c0edb6165a1d7c06041545422" translate="yes" xml:space="preserve">
          <source>If there is a syntax error or runtime error, or a &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; statement is executed, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; in scalar context or an empty list in list context, and &lt;code&gt;$@&lt;/code&gt; is set to the error message. (Prior to 5.16, a bug caused &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to be returned in list context for syntax errors, but not for runtime errors.) If there was no error, &lt;code&gt;$@&lt;/code&gt; is set to the empty string. A control flow operator like &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; can bypass the setting of &lt;code&gt;$@&lt;/code&gt; . Beware that using &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; neither silences Perl from printing warnings to STDERR, nor does it stuff the text of warning messages into &lt;code&gt;$@&lt;/code&gt; . To do either of those, you have to use the &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; facility, or turn off warnings inside the BLOCK or EXPR using &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'all'&lt;/code&gt; . See &lt;a href=&quot;#warn&quot;&gt;warn&lt;/a&gt;, &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;, and &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">Если есть синтаксическая ошибка или ошибка времени выполнения, или выполняется инструкция &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; в скалярном контексте или пустой список в контексте списка, а &lt;code&gt;$@&lt;/code&gt; устанавливается в сообщение об ошибке. (До 5.16 ошибка приводила к тому, что &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; возвращался в контексте списка для синтаксических ошибок, но не для ошибок времени выполнения.) Если ошибки не было, &lt;code&gt;$@&lt;/code&gt; устанавливается в пустую строку. Оператор потока управления, такой как &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; , может обойти настройку &lt;code&gt;$@&lt;/code&gt; . Помните, что использование &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; не запрещает Perl выводить предупреждения в STDERR и не помещает текст предупреждений в &lt;code&gt;$@&lt;/code&gt; . Чтобы выполнить одно из этих действий, вы должны использовать средство &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; или отключить предупреждения внутри BLOCK или EXPR, используя &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'all'&lt;/code&gt; &lt;a href=&quot;functions/no&quot;&gt;без&lt;/a&gt; предупреждений . См. &lt;a href=&quot;#warn&quot;&gt;Предупреждение&lt;/a&gt; , &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; и &lt;a href=&quot;warnings&quot;&gt;предупреждения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5466934b0ce09952bbdf7a873d8e98baf5e63870" translate="yes" xml:space="preserve">
          <source>If there is an error then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will be returned.</source>
          <target state="translated">В случае ошибки возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="467d2ed550f37bc1b9fda912fd43e11ff12b4118" translate="yes" xml:space="preserve">
          <source>If there is any question about whether a given patch might merit inclusion in a maint release, then it almost certainly should not be included.</source>
          <target state="translated">Если возникает вопрос о том,заслуживает ли данный патч включения в релиз maint,то почти наверняка его не следует включать.</target>
        </trans-unit>
        <trans-unit id="0f8376c45472eeb9e97a43b3d977d663509a5686" translate="yes" xml:space="preserve">
          <source>If there is more than one argument in LIST, this calls execvp(3) with the arguments in LIST. If there is only one element in LIST, the argument is checked for shell metacharacters, and if there are any, the entire argument is passed to the system's command shell for parsing (this is &lt;code&gt;/bin/sh -c&lt;/code&gt; on Unix platforms, but varies on other platforms). If there are no shell metacharacters in the argument, it is split into words and passed directly to &lt;code&gt;execvp&lt;/code&gt; , which is more efficient. Examples:</source>
          <target state="translated">Если в LIST более одного аргумента, это вызывает execvp (3) с аргументами из LIST. Если в LIST есть только один элемент, аргумент проверяется на наличие метасимволов оболочки, и если они есть, весь аргумент передается в командную оболочку системы для анализа (это &lt;code&gt;/bin/sh -c&lt;/code&gt; на платформах Unix, но варьируется на других платформах). Если в аргументе нет метасимволов оболочки, он разбивается на слова и передается непосредственно в &lt;code&gt;execvp&lt;/code&gt; , что более эффективно. Примеры:</target>
        </trans-unit>
        <trans-unit id="2594b97a91aa3fa79863d35058be1a8172ac679a" translate="yes" xml:space="preserve">
          <source>If there is no</source>
          <target state="translated">Если нет</target>
        </trans-unit>
        <trans-unit id="836d7eec1f71c6b6f4181b3811b03cbac0e80430" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;\E&lt;/code&gt; , case is converted until the end of the string. The regexps &lt;code&gt;\L\u$word&lt;/code&gt; or &lt;code&gt;\u\L$word&lt;/code&gt; convert the first character of &lt;code&gt;$word&lt;/code&gt; to uppercase and the rest of the characters to lowercase.</source>
          <target state="translated">Если &lt;code&gt;\E&lt;/code&gt; , регистр преобразуется до конца строки. Регулярные выражения &lt;code&gt;\L\u$word&lt;/code&gt; или &lt;code&gt;\u\L$word&lt;/code&gt; преобразуют первый символ &lt;code&gt;$word&lt;/code&gt; в верхний регистр, а остальные символы в нижний регистр.</target>
        </trans-unit>
        <trans-unit id="c73d7b3af9d178254858949bc270c269c6e2e60d" translate="yes" xml:space="preserve">
          <source>If there is no INSTALL.SKIP file in the make directory then this value can be used to provide a default.</source>
          <target state="translated">Если в директории make нет файла INSTALL.SKIP,то это значение может быть использовано для предоставления значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="349639462c1781c6c7203933948097f1b032dbf1" translate="yes" xml:space="preserve">
          <source>If there is no case folding for the input code point, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Если для входной кодовой точки нет сворачивания регистра, возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20a8d9cc6cec6caebf969b32884584509dabbda2" translate="yes" xml:space="preserve">
          <source>If there is no corresponding capture group defined, then it is a fatal error. Recursing deeper than 50 times without consuming any input string will also result in a fatal error. The maximum depth is compiled into perl, so changing it requires a custom build.</source>
          <target state="translated">Если соответствующая группа захвата не определена,то это является фатальной ошибкой.Повторение более 50 раз глубже,не потребляя ни одной входной строки,также приведет к фатальной ошибке.Максимальная глубина скомпилирована в perl,поэтому ее изменение требует пользовательской сборки.</target>
        </trans-unit>
        <trans-unit id="c5c7947682ddf8ce5897cbba5d096660017802ec" translate="yes" xml:space="preserve">
          <source>If there is no description, its the same as the parameter to WriteMakefile() documented in ExtUtils::MakeMaker.</source>
          <target state="translated">Если нет описания,то оно совпадает с параметром WriteMakefile(),документированным в ExtUtils::MakeMaker.</target>
        </trans-unit>
        <trans-unit id="9a08244ff3de5da70abd74d4f48bc9a98bd5fd63" translate="yes" xml:space="preserve">
          <source>If there is no error, then the method returns the value of the last expression evaluated, or a return statement may be used, just as with subroutines and &lt;b&gt;eval()&lt;/b&gt;. The context (list or scalar) is determined by the caller as usual.</source>
          <target state="translated">Если ошибки нет, то метод возвращает значение последнего вычисленного выражения, или можно использовать оператор return, как и в случае с подпрограммами и &lt;b&gt;eval ()&lt;/b&gt; . Контекст (список или скаляр) определяется вызывающей стороной, как обычно.</target>
        </trans-unit>
        <trans-unit id="9fcf9881e5055fcb38df136c867429f9722c1a7e" translate="yes" xml:space="preserve">
          <source>If there is no global precision or accuracy set, &lt;b&gt;and&lt;/b&gt; the operation in question was not called with a requested precision or accuracy, &lt;b&gt;and&lt;/b&gt; the input $x has no accuracy or precision set, then a fallback parameter will be used. For historical reasons, it is called &lt;code&gt;div_scale&lt;/code&gt; and can be accessed via:</source>
          <target state="translated">Если не задана глобальная точность или точность, &lt;b&gt;и&lt;/b&gt; рассматриваемая операция не была вызвана с запрошенной точностью или точностью, &lt;b&gt;и&lt;/b&gt; вход $ x не имеет точности или точности, то будет использоваться резервный параметр. По историческим причинам он называется &lt;code&gt;div_scale&lt;/code&gt; и доступен через:</target>
        </trans-unit>
        <trans-unit id="bbd1fd130f18a572d29a93b5834a0fdb0347ebb7" translate="yes" xml:space="preserve">
          <source>If there is no interactivity then you may still want to look at using something like &lt;a href=&quot;http://search.cpan.org/perldoc/https:#%2fmetacpan.org%2fmodule%2fTemplate&quot;&gt;Template Toolkit&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/Plack::Middleware::TemplateToolkit&quot;&gt;Plack::Middleware::TemplateToolkit&lt;/a&gt; so maintenance of your HTML files (and other assets) is easier.</source>
          <target state="translated">Если интерактивности нет, вы все равно можете использовать что-то вроде &lt;a href=&quot;http://search.cpan.org/perldoc/https:#%2fmetacpan.org%2fmodule%2fTemplate&quot;&gt;Template Toolkit&lt;/a&gt; или &lt;a href=&quot;http://search.cpan.org/perldoc/Plack::Middleware::TemplateToolkit&quot;&gt;Plack :: Middleware :: TemplateToolkit,&lt;/a&gt; чтобы упростить обслуживание ваших HTML-файлов (и других ресурсов).</target>
        </trans-unit>
        <trans-unit id="8dd8956e9b63cae584008cf6c1bbe7cd26c8c5c5" translate="yes" xml:space="preserve">
          <source>If there is no matching entry found and there is no default defined, or no .netrc file is found, then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Если соответствующая запись не найдена и не определено значение по умолчанию, или файл .netrc не найден, возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40165726268e187e7ad5a226c93cb70fb5e7ae2c" translate="yes" xml:space="preserve">
          <source>If there is only one argument and it is a reference to an array then the array is assumed to contain a list of key-value pairs specifying the options. In this case the option &quot;from_to&quot; is mandatory. This style means that you do not have to supply a cryptic list of arguments and can use a self documenting argument list that is easier to understand.</source>
          <target state="translated">Если есть только один аргумент и это ссылка на массив,то предполагается,что массив содержит список пар ключ-значение с указанием опций.В этом случае опция &quot;from_to&quot; является обязательной.Этот стиль означает,что вам не нужно предоставлять зашифрованный список аргументов,и вы можете использовать более понятный для понимания самостоятельно документируемый список аргументов.</target>
        </trans-unit>
        <trans-unit id="663e6f7ad7626839945e055f61dd00fa139292d7" translate="yes" xml:space="preserve">
          <source>If there was an error authenticating the user then</source>
          <target state="translated">Если произошла ошибка аутентификации пользователя,то</target>
        </trans-unit>
        <trans-unit id="c4805e4afe7a0ccfe45caa54514a077972082082" translate="yes" xml:space="preserve">
          <source>If there's already an entry in &lt;code&gt;%table&lt;/code&gt; for the current &lt;code&gt;$country&lt;/code&gt; , then nothing is different. Line 6 will locate the value in &lt;code&gt;$table{$country}&lt;/code&gt; , which is a reference to an array, and push &lt;code&gt;$city&lt;/code&gt; into the array. But what does it do when &lt;code&gt;$country&lt;/code&gt; holds a key, say &lt;code&gt;Greece&lt;/code&gt; , that is not yet in &lt;code&gt;%table&lt;/code&gt; ?</source>
          <target state="translated">Если в &lt;code&gt;%table&lt;/code&gt; уже есть запись для текущей &lt;code&gt;$country&lt;/code&gt; , то ничего не изменилось. Строка 6 найдет значение в &lt;code&gt;$table{$country}&lt;/code&gt; , которое является ссылкой на массив, и поместит &lt;code&gt;$city&lt;/code&gt; в массив. Но что он делает, когда &lt;code&gt;$country&lt;/code&gt; имеет ключ, скажем, &lt;code&gt;Greece&lt;/code&gt; , которого еще нет в &lt;code&gt;%table&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="b79b95fc8b6f0bdad9a42663607fbb6bbfce24c2" translate="yes" xml:space="preserve">
          <source>If there's no &lt;code&gt;\w&lt;/code&gt; in &lt;code&gt;s1&lt;/code&gt; nor in &lt;code&gt;s2&lt;/code&gt; , why does their concatenation have one?</source>
          <target state="translated">Если нет &lt;code&gt;\w&lt;/code&gt; ни в &lt;code&gt;s1&lt;/code&gt; , ни в &lt;code&gt;s2&lt;/code&gt; , почему у их конкатенации он есть?</target>
        </trans-unit>
        <trans-unit id="4d867e0a4fd4a8ea827c16a08b87197c9c461d55" translate="yes" xml:space="preserve">
          <source>If these dependent libraries are not listed at shared library creation time, you will get fatal &quot;Unresolved symbol&quot; errors at run time when the library is loaded.</source>
          <target state="translated">Если эти зависимые библиотеки не перечислены во время создания общей библиотеки,вы получите фатальные ошибки &quot;Unresolved symbol&quot; во время выполнения,когда библиотека будет загружена.</target>
        </trans-unit>
        <trans-unit id="66c4d2d6f3874b5b92940f178682f9bbdd8c1db5" translate="yes" xml:space="preserve">
          <source>If these operators are not explicitly overloaded then they work in the normal way, yielding the underlying scalar, array, or whatever stores the object data (or the appropriate error message if the dereference operator doesn't match it). Defining a catch-all &lt;code&gt;'nomethod'&lt;/code&gt; (see &lt;a href=&quot;#nomethod&quot;&gt;below&lt;/a&gt;) makes no difference to this as the catch-all function will not be called to implement a missing dereference operator.</source>
          <target state="translated">Если эти операторы явно не перегружены, они работают обычным образом, давая базовый скаляр, массив или что-то еще, что хранит данные объекта (или соответствующее сообщение об ошибке, если оператор разыменования не соответствует ему). Определение &lt;code&gt;'nomethod'&lt;/code&gt; (см. &lt;a href=&quot;#nomethod&quot;&gt;Ниже&lt;/a&gt; ) не имеет никакого значения, поскольку универсальная функция не будет вызываться для реализации отсутствующего оператора разыменования.</target>
        </trans-unit>
        <trans-unit id="e7e81ed1aafee87e39f3bf4df7400134171b1b47" translate="yes" xml:space="preserve">
          <source>If these were ordinary paragraphs, the Pod parser would try to expand the &quot;E&amp;lt;/em&amp;gt;&quot; (in the first paragraph) as a formatting code, just like &quot;E&amp;lt;lt&amp;gt;&quot; or &quot;E&amp;lt;eacute&amp;gt;&quot;. But since this is in a &quot;=begin</source>
          <target state="translated">Если бы это были обычные абзацы, синтаксический анализатор Pod попытался бы развернуть &amp;laquo;E &amp;lt;/em&amp;gt;&amp;raquo; (в первом абзаце) как код форматирования, как &amp;laquo;E &amp;lt;lt&amp;gt;&amp;raquo; или &amp;laquo;E &amp;lt;eacute&amp;gt;&amp;raquo;. Но поскольку это находится в &quot;= begin</target>
        </trans-unit>
        <trans-unit id="4135dfc8a9407c20cefc1359ee43028a8d9e9a77" translate="yes" xml:space="preserve">
          <source>If they are not composable, it returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если они несовместимы, возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7928853cb29cf0ed7b6549f627a68e66710a9993" translate="yes" xml:space="preserve">
          <source>If they wanted to clobber something, they might say:</source>
          <target state="translated">Если бы они хотели что-нибудь засорить,они могли бы сказать:</target>
        </trans-unit>
        <trans-unit id="005637a170229ceb4ce45f18dce99b88396f9f92" translate="yes" xml:space="preserve">
          <source>If things aren't broken, upgrading perl may break them (or at least issue new warnings).</source>
          <target state="translated">Если вещи не сломаны,обновление perl может их сломать (или,по крайней мере,выдать новые предупреждения).</target>
        </trans-unit>
        <trans-unit id="af3184843a959ec8cbcadf6df48b4b495b6b3f78" translate="yes" xml:space="preserve">
          <source>If this behaviour is not desirable, the &lt;code&gt;error&lt;/code&gt; attribute may be used to hold a reference to a variable, which will be used to store the diagnostics. The variable is made a reference to an array of hash references. Each hash contain a single key/value pair where the key is the name of the file, and the value is the error message (including the contents of &lt;code&gt;$!&lt;/code&gt; when appropriate). If a general error is encountered the diagnostic key will be empty.</source>
          <target state="translated">Если такое поведение нежелательно, атрибут &lt;code&gt;error&lt;/code&gt; может использоваться для хранения ссылки на переменную, которая будет использоваться для хранения диагностики. Переменная делает ссылку на массив хеш-ссылок. Каждый хэш содержит одну пару ключ / значение, где ключ - это имя файла, а значение - это сообщение об ошибке (включая содержимое &lt;code&gt;$!&lt;/code&gt; При необходимости). При обнаружении общей ошибки диагностический ключ будет пустым.</target>
        </trans-unit>
        <trans-unit id="cfffc413c869bcf00848584ef88629d0cba8d4b7" translate="yes" xml:space="preserve">
          <source>If this command lists any paths that don't exist on your system, then you may need to move the appropriate libraries to these locations, or create symbolic links, aliases, or shortcuts appropriately. &lt;code&gt;@INC&lt;/code&gt; is also printed as part of the output of</source>
          <target state="translated">Если эта команда перечисляет любые пути, которые не существуют в вашей системе, вам может потребоваться переместить соответствующие библиотеки в эти места или создать символические ссылки, псевдонимы или ярлыки соответствующим образом. &lt;code&gt;@INC&lt;/code&gt; также печатается как часть вывода</target>
        </trans-unit>
        <trans-unit id="4975023e8ced451b521e66f7c64344d22c9935aa" translate="yes" xml:space="preserve">
          <source>If this directory is exactly the same as the prefix which was compiled into</source>
          <target state="translated">Если этот каталог точно совпадает с префиксом,который был скомпилирован в</target>
        </trans-unit>
        <trans-unit id="285c8028480f1bd9da414482302791b2b2e5917d" translate="yes" xml:space="preserve">
          <source>If this displays any &lt;code&gt;D&lt;/code&gt; or &lt;code&gt;d&lt;/code&gt; symbols (or possibly &lt;code&gt;C&lt;/code&gt; or &lt;code&gt;c&lt;/code&gt; ), you have non-const data. The symbols the &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; removed are as follows: &lt;code&gt;Tt&lt;/code&gt; are</source>
          <target state="translated">Если здесь отображаются какие- либо символы &lt;code&gt;D&lt;/code&gt; или &lt;code&gt;d&lt;/code&gt; (или, возможно, &lt;code&gt;C&lt;/code&gt; или &lt;code&gt;c&lt;/code&gt; ), у вас неконстантные данные. Символы, удаленные с помощью &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; , следующие: &lt;code&gt;Tt&lt;/code&gt; are</target>
        </trans-unit>
        <trans-unit id="4abdac7aa391382bc2754c2374cb867d27e05580" translate="yes" xml:space="preserve">
          <source>If this environment variable is set to a true value, all of the functions defined by this module (color(), colored(), and all of the constants not previously used in the program) will not output any escape sequences and instead will just return the empty string or pass through the original text as appropriate. This is intended to support easy use of scripts using this module on platforms that don't support ANSI escape sequences.</source>
          <target state="translated">Если эта переменная окружения установлена в значение true,то все функции,определенные этим модулем (color(),color(),и все константы,ранее не использовавшиеся в программе),не будут выводить никаких экранирующих последовательностей,а вместо этого будут просто возвращать пустую строку или передавать по исходному тексту по мере необходимости.Это предназначено для поддержки простого использования скриптов,использующих данный модуль,на платформах,которые не поддерживают ANSI экранирующие последовательности.</target>
        </trans-unit>
        <trans-unit id="876cbaf8d98a55944949f12e34d25c434a20bad7" translate="yes" xml:space="preserve">
          <source>If this environment variable is true then normal install processes will always overwrite older identical files during the install process.</source>
          <target state="translated">Если эта переменная окружения верна,то обычные процессы установки всегда будут перезаписывать старые идентичные файлы в процессе установки.</target>
        </trans-unit>
        <trans-unit id="07fe5d03fc19f605909f122565e563658cd995e6" translate="yes" xml:space="preserve">
          <source>If this field is zero then &lt;code&gt;PerlIO_pushed&lt;/code&gt; does not malloc anything and assumes layer's Pushed function will do any required layer stack manipulation - used to avoid malloc/free overhead for dummy layers. If the field is non-zero it must be at least the size of &lt;code&gt;PerlIOl&lt;/code&gt; , &lt;code&gt;PerlIO_pushed&lt;/code&gt; will allocate memory for the layer's data structures and link new layer onto the stream's stack. (If the layer's Pushed method returns an error indication the layer is popped again.)</source>
          <target state="translated">Если это поле равно нулю, то &lt;code&gt;PerlIO_pushed&lt;/code&gt; ничего не выполняет malloc и предполагает, что функция Pushing будет выполнять любые необходимые манипуляции со стеком слоев - используемые для предотвращения накладных расходов malloc / free для фиктивных слоев. Если поле не равно нулю, оно должно быть не меньше &lt;code&gt;PerlIOl&lt;/code&gt; , &lt;code&gt;PerlIO_pushed&lt;/code&gt; выделит память для структур данных уровня и свяжет новый уровень со стеком потока. (Если метод слоя Pushing возвращает сообщение об ошибке, слой снова открывается.)</target>
        </trans-unit>
        <trans-unit id="6eff879286b0f884c3e6b0dc473e05a91d80d4a8" translate="yes" xml:space="preserve">
          <source>If this function is being sourced in from a separate file via &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, then this is probably just fine. If it's all in the main program, you'll need to arrange for the &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; to be executed early, either by putting the whole block above your main program, or more likely, placing merely a &lt;code&gt;BEGIN&lt;/code&gt; code block around it to make sure it gets executed before your program starts to run:</source>
          <target state="translated">Если эта функция получена из отдельного файла с помощью &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , то, вероятно, это нормально. Если это все в основной программе, вам необходимо организовать выполнение &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; на раннем этапе, либо поместив весь блок над основной программой, либо, что более вероятно, просто поместив вокруг него просто &lt;code&gt;BEGIN&lt;/code&gt; кода BEGIN, чтобы убедиться, что он выполняется перед запуском вашей программы:</target>
        </trans-unit>
        <trans-unit id="e5121e7b7256f6d0ab378dc9bff9a8c6dad43577" translate="yes" xml:space="preserve">
          <source>If this happens to you, there's not much you can do except switch to use a different locale or use &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; to translate from the locale into UTF-8; if that's impracticable, you have been warned that some things may break.</source>
          <target state="translated">Если это произойдет с вами, вы ничего не можете сделать, кроме как переключиться на использование другого языкового стандарта или использовать &lt;a href=&quot;encode&quot;&gt;кодирование&lt;/a&gt; для перевода из языкового стандарта в UTF-8; если это невозможно, вас предупредили, что некоторые вещи могут сломаться.</target>
        </trans-unit>
        <trans-unit id="faa64c33180aaefa8582782daf214d7a2f4780a7" translate="yes" xml:space="preserve">
          <source>If this interior sequence is nested inside of another interior sequence, then the outer/parent sequence that contains it is returned. Otherwise &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Если эта внутренняя последовательность вложена в другую внутреннюю последовательность, то возвращается содержащая ее внешняя / родительская последовательность. В противном случае возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf7d995797b0338af1d03b9d03a8511323aeb269" translate="yes" xml:space="preserve">
          <source>If this is a TODO test and an 'ok' line, this method returns true. Otherwise, it will always return false (regardless of passing status on non-todo tests).</source>
          <target state="translated">Если это тест TODO и строка 'ok',то этот метод возвращает true.В противном случае,он всегда будет возвращать false (независимо от прохождения статуса на non-todo тестах).</target>
        </trans-unit>
        <trans-unit id="f7666722db0ac2cfa26e5cabc574e02e68556877" translate="yes" xml:space="preserve">
          <source>If this is being called as &lt;code&gt;re::regname&lt;/code&gt; , &lt;code&gt;re::regnames&lt;/code&gt; or &lt;code&gt;re::regnames_count&lt;/code&gt; , if any. The first two will be combined with &lt;code&gt;RXapif_ONE&lt;/code&gt; or &lt;code&gt;RXapif_ALL&lt;/code&gt; .</source>
          <target state="translated">Если это вызывается как &lt;code&gt;re::regname&lt;/code&gt; , &lt;code&gt;re::regnames&lt;/code&gt; или &lt;code&gt;re::regnames_count&lt;/code&gt; , если есть. Первые два будут объединены с &lt;code&gt;RXapif_ONE&lt;/code&gt; или &lt;code&gt;RXapif_ALL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9edbce2664bb4f91955d900ea95b27deaa6b5a4b" translate="yes" xml:space="preserve">
          <source>If this is in &lt;code&gt;rx-&amp;gt;extflags&lt;/code&gt; it will be passed to &lt;code&gt;Perl_fbm_instr&lt;/code&gt; by &lt;code&gt;pp_split&lt;/code&gt; which will treat the subject string as a multi-line string.</source>
          <target state="translated">Если он находится в &lt;code&gt;rx-&amp;gt;extflags&lt;/code&gt; , он будет передан &lt;code&gt;Perl_fbm_instr&lt;/code&gt; с помощью &lt;code&gt;pp_split&lt;/code&gt; , который будет рассматривать строку темы как многострочную строку.</target>
        </trans-unit>
        <trans-unit id="3e0c042153cf9f6ff54247584b15672ab611a4af" translate="yes" xml:space="preserve">
          <source>If this is negative, and amounts to &lt;code&gt;HEf_SVKEY&lt;/code&gt; , it indicates the entry holds an &lt;code&gt;SV*&lt;/code&gt; key. Otherwise, holds the actual length of the key. Can be assigned to. The &lt;code&gt;HePV()&lt;/code&gt; macro is usually preferable for finding key lengths.</source>
          <target state="translated">Если это отрицательное значение и составляет &lt;code&gt;HEf_SVKEY&lt;/code&gt; , это означает, что запись содержит ключ &lt;code&gt;SV*&lt;/code&gt; . В противном случае содержит фактическую длину ключа. Может быть назначен. &lt;code&gt;HePV()&lt;/code&gt; макро, как правило , предпочтительнее для нахождения длины ключа.</target>
        </trans-unit>
        <trans-unit id="ddda819aeefa94d361f2fc0677ccc065e6c33f4f" translate="yes" xml:space="preserve">
          <source>If this is starting to sound scarier than it's worth, relax. Perl has some features to help you avoid its most common pitfalls. The best way to avoid getting confused is to start every program like this:</source>
          <target state="translated">Если это начинает звучать страшнее,чем стоит,расслабься.Perl имеет некоторые особенности,чтобы помочь вам избежать его наиболее распространенных подводных камней.Лучший способ избежать путаницы-запустить каждую программу таким образом:</target>
        </trans-unit>
        <trans-unit id="c2cd7396387cdb373b2dd32a6d21ffa39a9fbdd0" translate="yes" xml:space="preserve">
          <source>If this is true, none of that will be done.</source>
          <target state="translated">Если это правда,ничего из этого не будет сделано.</target>
        </trans-unit>
        <trans-unit id="998c59b2484753d1482d0ff9ba7497a84e80fcd4" translate="yes" xml:space="preserve">
          <source>If this is what you intended then you can silence the warning by using &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/${\}/&lt;/a&gt;&lt;/code&gt; (for example: &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/foo${\}s+bar/&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Если это именно то, что вы намеревались сделать, вы можете отключить предупреждение, используя &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/${\}/&lt;/a&gt;&lt;/code&gt; (например: &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/foo${\}s+bar/&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b2f4b7328771b0d9e19ff0a7ce5f9c13e4b36300" translate="yes" xml:space="preserve">
          <source>If this is your first use of Sys::Syslog, you must read the doc.</source>
          <target state="translated">Если это ваше первое использование Sys::Syslog,вы должны прочитать документ.</target>
        </trans-unit>
        <trans-unit id="51861420a23f19227e776c6bc3a38fdcea309df1" translate="yes" xml:space="preserve">
          <source>If this option is not present, the value stored in XFL field will be determined by the setting of the &lt;code&gt;Level&lt;/code&gt; option.</source>
          <target state="translated">Если этот параметр отсутствует, значение, хранящееся в поле XFL, будет определяться настройкой параметра &amp;laquo; &lt;code&gt;Level&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="415323d14a6e182890345d78f7ae3f3149cdff1f" translate="yes" xml:space="preserve">
          <source>If this option is set and the input file/buffer is not compressed data, the module will allow reading of it anyway.</source>
          <target state="translated">Если эта опция установлена и входной файл/буфер не сжат,то модуль все равно разрешит его чтение.</target>
        </trans-unit>
        <trans-unit id="805aae725ba9def01f764562edc887adcbc46d85" translate="yes" xml:space="preserve">
          <source>If this option is set, Pod::Man will instead output UTF-8. If your *roff implementation can handle it, this is the best output format to use and avoids corruption of documents containing non-ASCII characters. However, be warned that *roff source with literal UTF-8 characters is not supported by many implementations and may even result in segfaults and other bad behavior.</source>
          <target state="translated">Если эта опция установлена,то Pod::Man вместо этого выведет UTF-8.Если ваша *roff реализация может справиться с этим,то это лучший формат вывода для использования и позволяет избежать повреждения документов,содержащих не-ASCII символы.Однако,следует предупредить,что *roff-источник с буквальными символами UTF-8 не поддерживается многими реализациями и может даже привести к сегментации и другому плохому поведению.</target>
        </trans-unit>
        <trans-unit id="9276827e0a43ce0cd98e803156d215d94a1cfced" translate="yes" xml:space="preserve">
          <source>If this paragraph is a command paragraph, then this method will return the name of the command (</source>
          <target state="translated">Если этот параграф является параграфом команды,то этот метод вернет имя команды (</target>
        </trans-unit>
        <trans-unit id="bcc44b3b4b66c03b7a2464f3e737f50efd9dbf21" translate="yes" xml:space="preserve">
          <source>If this paragraph is a command paragraph, then this method will return the prefix used to denote the command (which should be the string &quot;=&quot; or &quot;==&quot;).</source>
          <target state="translated">Если этот параграф является параграфом команды,то этот метод вернет префикс,используемый для обозначения команды (которым должна быть строка &quot;=&quot; или &quot;==&quot;).</target>
        </trans-unit>
        <trans-unit id="97d5af9792754821d43f791eb7a3e99d0e1078a4" translate="yes" xml:space="preserve">
          <source>If this paragraph is a command paragraph, then this method will return the text used to separate the command name from the rest of the paragraph (if any).</source>
          <target state="translated">Если этот параграф является параграфом команды,то этот метод вернет текст,используемый для отделения имени команды от остальной части параграфа (если таковой имеется).</target>
        </trans-unit>
        <trans-unit id="f1f4b76081f3628eb70be0fbee8dbf0d6e9f3ca4" translate="yes" xml:space="preserve">
          <source>If this parameter is not used, certain error conditions may raise a fatal error that will cause the program will halt, unless trapped in an &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; block.</source>
          <target state="translated">Если этот параметр не используется, определенные условия ошибки могут вызвать фатальную ошибку, которая приведет к остановке программы, если только она не попала в блок &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d2fb08e29fba6225fdf1f445f37f2366e459721" translate="yes" xml:space="preserve">
          <source>If this regexp matches, &lt;code&gt;$1&lt;/code&gt; contains a string starting with &lt;code&gt;'ab'&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; is either set to &lt;code&gt;'cd'&lt;/code&gt; or &lt;code&gt;'ef'&lt;/code&gt; , &lt;code&gt;$3&lt;/code&gt; equals either &lt;code&gt;'gi'&lt;/code&gt; or &lt;code&gt;'j'&lt;/code&gt; , and &lt;code&gt;$4&lt;/code&gt; is either set to &lt;code&gt;'gi'&lt;/code&gt; , just like &lt;code&gt;$3&lt;/code&gt; , or it remains undefined.</source>
          <target state="translated">Если это регулярное выражение совпадает, &lt;code&gt;$1&lt;/code&gt; содержит строку, начинающуюся с &lt;code&gt;'ab'&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; либо имеет значение &lt;code&gt;'cd'&lt;/code&gt; , либо &lt;code&gt;'ef'&lt;/code&gt; , &lt;code&gt;$3&lt;/code&gt; равно либо &lt;code&gt;'gi'&lt;/code&gt; , либо &lt;code&gt;'j'&lt;/code&gt; , а &lt;code&gt;$4&lt;/code&gt; либо равно &lt;code&gt;'gi'&lt;/code&gt; , просто как &lt;code&gt;$3&lt;/code&gt; , или он остается неопределенным.</target>
        </trans-unit>
        <trans-unit id="f4f92dc123bfc535dc7925652fedf35a2b5f0876" translate="yes" xml:space="preserve">
          <source>If this seems like a lot, then feel free to inherit from merely the standard Tie::StdHash module for most of your methods, redefining only the interesting ones. See &lt;a href=&quot;tie/hash&quot;&gt;Tie::Hash&lt;/a&gt; for details.</source>
          <target state="translated">Если это кажется большим, то не стесняйтесь наследовать от стандартного модуля Tie :: StdHash для большинства ваших методов, переопределяя только самые интересные. Подробнее см. &lt;a href=&quot;tie/hash&quot;&gt;Tie :: Hash&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3f60efe640d39524c6e11c22deb74b1e7bd6e48" translate="yes" xml:space="preserve">
          <source>If this still doesn't work, look into the &lt;code&gt;clearerr&lt;/code&gt; method from &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt;, which resets the error and end-of-file states on the handle.</source>
          <target state="translated">Если это по-прежнему не работает, &lt;code&gt;clearerr&lt;/code&gt; метод clearrr из &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; , который сбрасывает состояние ошибки и конца файла для дескриптора.</target>
        </trans-unit>
        <trans-unit id="5f660c829995c0ccf8574939955dcb34cbb1fbc2" translate="yes" xml:space="preserve">
          <source>If this template key is true, enforces that if this key is provided by user input, its value is &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt;. This just means that the user is not allowed to pass &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; as a value for this key and is equivalent to: allow =&amp;gt; sub { defined $_[0] &amp;amp;&amp;amp; OTHER TESTS }</source>
          <target state="translated">Если этот ключ шаблона истинен, принудительно определяет, что, если этот ключ предоставляется пользовательским вводом, его значение &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; . Это просто означает, что пользователю не разрешено передавать &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; в качестве значения для этого ключа, что эквивалентно: allow =&amp;gt; sub {defined $ _ [0] &amp;amp;&amp;amp; OTHER TESTS}</target>
        </trans-unit>
        <trans-unit id="76bbabb48932b2f041b390c777de07be84c85182" translate="yes" xml:space="preserve">
          <source>If this value is defined but false then such an operation has ocurred, but should not impact later operations.</source>
          <target state="translated">Если это значение определено,но ложно,то такая операция зашла в тупик,но не должна влиять на последующие операции.</target>
        </trans-unit>
        <trans-unit id="cc6a20a1fa0fe02624d3822b74f6ca89396c5ee4" translate="yes" xml:space="preserve">
          <source>If this variable is set to a true value, then &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; on Windows will not try to open the file. This means that the link count cannot be determined and file attributes may be out of date if additional hardlinks to the file exist. On the other hand, not opening the file is considerably faster, especially for files on network drives.</source>
          <target state="translated">Если для этой переменной установлено истинное значение, то &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; в Windows не будет пытаться открыть файл. Это означает, что количество ссылок не может быть определено, а атрибуты файла могут быть устаревшими, если существуют дополнительные жесткие ссылки на файл. С другой стороны, не открыть файл значительно быстрее, особенно для файлов на сетевых дисках.</target>
        </trans-unit>
        <trans-unit id="65e9d7214894094637d48b5893992a1d4deebf1e" translate="yes" xml:space="preserve">
          <source>If this variable is true then such an operation has occurred and anything depending on this module cannot proceed until a reboot has occurred.</source>
          <target state="translated">Если эта переменная верна,то такая операция произошла,и все,что зависит от этого модуля,не может продолжаться до тех пор,пока не произойдет перезагрузка.</target>
        </trans-unit>
        <trans-unit id="41c3e520fc9953b8c23b0cb154effeffba4245f7" translate="yes" xml:space="preserve">
          <source>If three (or more) arguments are specified, the open mode (including optional encoding) in the second argument are distinct from the filename in the third. If MODE is &lt;code&gt;&amp;lt;&lt;/code&gt; or nothing, the file is opened for input. If MODE is &lt;code&gt;&amp;gt;&lt;/code&gt;, the file is opened for output, with existing files first being truncated (&quot;clobbered&quot;) and nonexisting files newly created. If MODE is &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , the file is opened for appending, again being created if necessary.</source>
          <target state="translated">Если указано три (или более) аргумента, открытый режим (включая необязательную кодировку) во втором аргументе отличается от имени файла в третьем. Если MODE равен &lt;code&gt;&amp;lt;&lt;/code&gt; или ничего, файл открывается для ввода. Если MODE &lt;code&gt;&amp;gt;&lt;/code&gt; , файл открывается для вывода, при этом существующие файлы сначала усекаются (&quot;затираются&quot;), а несуществующие файлы создаются заново. Если MODE &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , файл открывается для добавления, при необходимости он создается снова.</target>
        </trans-unit>
        <trans-unit id="2e10a47d1100af2f4e741fa10c714b1d6eb83c05" translate="yes" xml:space="preserve">
          <source>If true (the default value), we autogenerate a JavaScript in the output directory, and set our HTML files to use it. Currently, the JavaScript is used only to get the browser to remember what stylesheet it prefers. TODO: continue</source>
          <target state="translated">Если значение установлено в true (значение по умолчанию),мы автоматически генерируем JavaScript в выходной директории и устанавливаем наши HTML-файлы для его использования.В настоящее время JavaScript используется только для того,чтобы браузер запомнил,какую таблицу стилей он предпочитает.TODO:продолжить</target>
        </trans-unit>
        <trans-unit id="634c500cd04e5d0b913158c1c6e9ccddc0f9bc06" translate="yes" xml:space="preserve">
          <source>If true (the default value), we autogenerate some CSS files in the output directory, and set our HTML files to use those. TODO: continue</source>
          <target state="translated">Если переменная имеет значение true (значение по умолчанию),мы автоматически генерируем некоторые CSS-файлы в выходном каталоге и устанавливаем для них HTML-файлы.TODO:продолжить</target>
        </trans-unit>
        <trans-unit id="ed672b2b381b7d94345040cc4eb4667fc3d97c8b" translate="yes" xml:space="preserve">
          <source>If true and a code reference, will be called with the symbolic link name and the directory it lives in as arguments. Otherwise, if true and warnings are on, warning &quot;symbolic_link_name is a dangling symbolic link\n&quot; will be issued. If false, the dangling symbolic link will be silently ignored.</source>
          <target state="translated">Если значение true и ссылка на код,то будет вызвана с символическим именем ссылки и каталогом,в котором она живет в качестве аргументов.В противном случае,если true и предупреждения включены,будет выдано предупреждение &quot;symbolic_link_name is a dangling symbolic link\n&quot;.Если false,то висящая символическая ссылка будет молча игнорироваться.</target>
        </trans-unit>
        <trans-unit id="3f3fdfd0a40c103a2211bdac354013485a8b6be3" translate="yes" xml:space="preserve">
          <source>If true is returned, those arguments &lt;b&gt;should&lt;/b&gt; in theory be processed with quadmath_snprintf(), but in case there is more than one such format specifier (see &lt;a href=&quot;#quadmath_format_single&quot;&gt;quadmath_format_single&lt;/a&gt;), and if there is anything else beyond that one (even just a single byte), they &lt;b&gt;cannot&lt;/b&gt; be processed because quadmath_snprintf() is very strict, accepting only one format spec, and nothing else. In this case, the code should probably fail.</source>
          <target state="translated">Если верно возвращается, эти аргументы &lt;b&gt;должны&lt;/b&gt; быть теоретически обработаны с quadmath_snprintf (), но в случае , если есть более чем один такой формат спецификатора (см &lt;a href=&quot;#quadmath_format_single&quot;&gt;quadmath_format_single&lt;/a&gt; ), и если есть что - нибудь еще за что один (даже только один байт), они &lt;b&gt;не могут&lt;/b&gt; быть обработаны, потому что quadmath_snprintf () очень строгий, принимает только одну спецификацию формата и ничего больше. В этом случае код, вероятно, выйдет из строя.</target>
        </trans-unit>
        <trans-unit id="0653af7b3995880e12e86c1b6df46b2abdc8adcd" translate="yes" xml:space="preserve">
          <source>If true then &lt;code&gt;Configure&lt;/code&gt; will check each hostname given that it exists</source>
          <target state="translated">Если true, то &lt;code&gt;Configure&lt;/code&gt; проверит каждое имя хоста, учитывая, что оно существует.</target>
        </trans-unit>
        <trans-unit id="5e192827bd7624c2eefa078600e9250f2fd8d099" translate="yes" xml:space="preserve">
          <source>If true then &lt;code&gt;make test&lt;/code&gt; may attempt to connect to hosts given in the configuration.</source>
          <target state="translated">Если true, &lt;code&gt;make test&lt;/code&gt; может попытаться подключиться к хостам, указанным в конфигурации.</target>
        </trans-unit>
        <trans-unit id="1bd986bfa48b8d9de9607995da53c20f474abed0" translate="yes" xml:space="preserve">
          <source>If true, &lt;code&gt;Test::Harness&lt;/code&gt; will output the verbose results of running its tests. Setting &lt;code&gt;$Test::Harness::verbose&lt;/code&gt; will override this, or you can use the &lt;code&gt;-v&lt;/code&gt; switch in the</source>
          <target state="translated">Если true, &lt;code&gt;Test::Harness&lt;/code&gt; выведет подробные результаты выполнения своих тестов. Установка &lt;code&gt;$Test::Harness::verbose&lt;/code&gt; переопределит это, или вы можете использовать переключатель &lt;code&gt;-v&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="44529fee5d3eb44416500710e8dc9bea67c57ded" translate="yes" xml:space="preserve">
          <source>If true, STDERR and STDOUT are the same filehandle. This may cause breakage if STDERR contains anything resembling TAP format, but does allow exact synchronization.</source>
          <target state="translated">Если переменная имеет значение true,то STDERR и STDOUT-это одна и та же файловая ручка.Это может привести к поломке,если STDERR содержит что-либо,похожее на формат TAP,но допускает точную синхронизацию.</target>
        </trans-unit>
        <trans-unit id="fe1c5580c4e77a7f54f6b42fc274494bf3ad60b5" translate="yes" xml:space="preserve">
          <source>If true, make install will be verbose</source>
          <target state="translated">Если верно,то make install будет многословным.</target>
        </trans-unit>
        <trans-unit id="fb2c5a318ef60df6e780dd24e4ef173dd23b6b3c" translate="yes" xml:space="preserve">
          <source>If true, uses proxy subs. See &lt;a href=&quot;http://search.cpan.org/perldoc/ExtUtils::Constant::ProxySubs&quot;&gt;ExtUtils::Constant::ProxySubs&lt;/a&gt;.</source>
          <target state="translated">Если true, используются прокси-серверы. См. &lt;a href=&quot;http://search.cpan.org/perldoc/ExtUtils::Constant::ProxySubs&quot;&gt;ExtUtils :: Constant :: ProxySubs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33b670decc24a56dd9e5e0101143f31051cabe4b" translate="yes" xml:space="preserve">
          <source>If two arrays smartmatch each other, then they are deep copies of each others' values, as this example reports:</source>
          <target state="translated">Если два массива смарт-массива подходят друг другу,то они являются глубокими копиями значений друг друга,как показано в данном примере:</target>
        </trans-unit>
        <trans-unit id="acee3e1d7871c445b42f87ba144a405a067cf53f" translate="yes" xml:space="preserve">
          <source>If two characters here and next (as code points) are composable (including Hangul Jamo/Syllables and Composition Exclusions), it returns the code point of the composite.</source>
          <target state="translated">Если два символа здесь и далее (в качестве точек кода)являются композитными (в том числе хамо-хамо/силлиблы и исключения из композита),то возвращается точка кода композита.</target>
        </trans-unit>
        <trans-unit id="42360b0ce037c1aa50c01166917adec5fecc2590" translate="yes" xml:space="preserve">
          <source>If type is non-Unix (see &lt;a href=&quot;#fileparse_set_fstype&quot;&gt;fileparse_set_fstype&lt;/a&gt;) then the pattern matching for suffix removal is performed case-insensitively, since those systems are not case-sensitive when opening existing files.</source>
          <target state="translated">Если тип не-Unix (см. &lt;a href=&quot;#fileparse_set_fstype&quot;&gt;Fileparse_set_fstype&lt;/a&gt; ), то сопоставление с образцом для удаления суффикса выполняется без учета регистра, так как эти системы не чувствительны к регистру при открытии существующих файлов.</target>
        </trans-unit>
        <trans-unit id="2fd48f2e17e1f717f9f154bd3292076827285d01" translate="yes" xml:space="preserve">
          <source>If umask(2) is not implemented on your system and you are trying to restrict access for</source>
          <target state="translated">Если umask(2)не реализована в вашей системе,и вы пытаетесь ограничить доступ для</target>
        </trans-unit>
        <trans-unit id="67a1f447b6ee3db12f569b14d8d5a13cc81a620d" translate="yes" xml:space="preserve">
          <source>If unsafe signals is in effect, then signal handling is not thread-safe, and the &lt;code&gt;-&amp;gt;kill()&lt;/code&gt; signalling method cannot be used.</source>
          <target state="translated">Если действуют небезопасные сигналы, то обработка сигналов не является потокобезопасной, и метод сигнализации &lt;code&gt;-&amp;gt;kill()&lt;/code&gt; использовать нельзя.</target>
        </trans-unit>
        <trans-unit id="70663a96a9c0a32a9a2fde13b31bf56729b3885e" translate="yes" xml:space="preserve">
          <source>If upgrading is in effect, returns PI, rounded to N digits with the current rounding mode:</source>
          <target state="translated">Если обновление вступило в силу,возвращает ПИ,округленный до N цифр с текущим режимом округления:</target>
        </trans-unit>
        <trans-unit id="d763c9ab9f9ca920e89e5e82fe0a4c19ddec98c7" translate="yes" xml:space="preserve">
          <source>If used with a single argument in a scalar context, returns the string consisting of the code points of the named sequence, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no named sequence by that name exists. If used with a single argument in a list context, it returns the list of the ordinals of the code points.</source>
          <target state="translated">Если используется с одним аргументом в скалярном контексте, возвращает строку, состоящую из кодовых точек именованной последовательности, или &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , если именованной последовательности с таким именем не существует. Если используется с одним аргументом в контексте списка, он возвращает список порядковых номеров кодовых точек.</target>
        </trans-unit>
        <trans-unit id="beaceddc3b74ab2a5e89e9e5517463a3fd4ed9e1" translate="yes" xml:space="preserve">
          <source>If used with no arguments in a list context, it returns a hash with the names of all the named sequences as the keys and their sequences as strings as the values. Otherwise, it returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; or an empty list depending on the context.</source>
          <target state="translated">Если используется без аргументов в контексте списка, он возвращает хеш с именами всех именованных последовательностей в качестве ключей и их последовательностей в виде строк в качестве значений. В противном случае он возвращает &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; или пустой список в зависимости от контекста.</target>
        </trans-unit>
        <trans-unit id="6b1f504c6467cdb5b94820cfba3df9e446f6d20a" translate="yes" xml:space="preserve">
          <source>If using &lt;b&gt;BerkeleyDB&lt;/b&gt; isn't an option, there are a number of modules available on CPAN that can be used to implement locking. Each one implements locking differently and has different goals in mind. It is therefore worth knowing the difference, so that you can pick the right one for your application. Here are the three locking wrappers:</source>
          <target state="translated">Если использование &lt;b&gt;BerkeleyDB&lt;/b&gt; невозможно, на CPAN есть несколько модулей, которые можно использовать для реализации блокировки. Каждый из них реализует блокировку по-своему и преследует разные цели. Поэтому стоит знать разницу, чтобы выбрать подходящий для своего приложения. Вот три блокирующих оболочки:</target>
        </trans-unit>
        <trans-unit id="b0d8dee3f60efc11f28b77ac32acb4a0d6da837c" translate="yes" xml:space="preserve">
          <source>If using a Perl file as a source, optional switches may be passed which will be used when invoking the perl executable.</source>
          <target state="translated">При использовании Perl-файла в качестве источника могут передаваться необязательные переключатели,которые будут использоваться при вызове исполняемого файла perl.</target>
        </trans-unit>
        <trans-unit id="d2c2e41b4856cbf4192df9fdfdae8eb4debbc3b0" translate="yes" xml:space="preserve">
          <source>If using crypt() on a Unicode string (which</source>
          <target state="translated">При использовании функции crypt()на строке Юникода (которая</target>
        </trans-unit>
        <trans-unit id="45cfcf2e0c855940dc64008801ae135f972cfd74" translate="yes" xml:space="preserve">
          <source>If using ftp remember to transfer the distribution in binary format.</source>
          <target state="translated">При использовании ftp не забудьте перенести дистрибутив в двоичном формате.</target>
        </trans-unit>
        <trans-unit id="b6fa09de90b513e62acb77e553ed8a67bf3a34b1" translate="yes" xml:space="preserve">
          <source>If using gcc, you can add the &lt;code&gt;-std=c89&lt;/code&gt; option which will hopefully catch most of these unportabilities. (However it might also catch incompatibilities in your system's header files.)</source>
          <target state="translated">Если вы используете gcc, вы можете добавить параметр &lt;code&gt;-std=c89&lt;/code&gt; , который, будем надеяться, уловит большую часть этих непереносимости. (Однако он также может обнаружить несовместимость в файлах заголовков вашей системы.)</target>
        </trans-unit>
        <trans-unit id="664754e120bf0080d8c4c2636edd9c4d43e0b86a" translate="yes" xml:space="preserve">
          <source>If using the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; encoding&lt;/code&gt; pragma without an explicit encoding name, the PERL_ENCODING environment variable is consulted for an encoding name.</source>
          <target state="translated">Если вы используете директиву &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; encoding&lt;/code&gt; без явного имени кодировки, переменная среды PERL_ENCODING запрашивается для имени кодировки.</target>
        </trans-unit>
        <trans-unit id="cfca052b74a8f394827d7f4faa9fd4f5bf5109bf" translate="yes" xml:space="preserve">
          <source>If using the &lt;code&gt;gcc -Wall&lt;/code&gt; note that not all the possible warnings (like &lt;code&gt;-Wunitialized&lt;/code&gt; ) are given unless you also compile with &lt;code&gt;-O&lt;/code&gt; .</source>
          <target state="translated">Если вы используете &lt;code&gt;gcc -Wall&lt;/code&gt; , обратите внимание, что не все возможные предупреждения (например, &lt;code&gt;-Wunitialized&lt;/code&gt; ) выдаются, если вы также не скомпилируете с &lt;code&gt;-O&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95f6a03b7ab2b25638142acde2118920ba4f7593" translate="yes" xml:space="preserve">
          <source>If we add a &lt;code&gt;(*PRUNE)&lt;/code&gt; before the count like the following</source>
          <target state="translated">Если мы добавим &lt;code&gt;(*PRUNE)&lt;/code&gt; перед счетчиком, как показано ниже</target>
        </trans-unit>
        <trans-unit id="f49196da102bf295b3091d7157018af8c9071a57" translate="yes" xml:space="preserve">
          <source>If we call a method on a &lt;code&gt;Child&lt;/code&gt; object and that method is not defined in the &lt;code&gt;Child&lt;/code&gt; class, Perl will look for that method in the &lt;code&gt;Parent&lt;/code&gt; class and then, if necessary, in the &lt;code&gt;Grandparent&lt;/code&gt; class.</source>
          <target state="translated">Если мы вызываем метод для объекта &lt;code&gt;Child&lt;/code&gt; , а этот метод не определен в классе &lt;code&gt;Child&lt;/code&gt; , Perl будет искать этот метод в классе &lt;code&gt;Parent&lt;/code&gt; , а затем, если необходимо, в классе &lt;code&gt;Grandparent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef968fd799fd1b1033f77f3853f27266c25aff48" translate="yes" xml:space="preserve">
          <source>If we can tell that there is no valid start point then we don't bother running the interpreter at all. Likewise, if we know from the analysis phase that we cannot detect a short-cut to the start position, we go straight to the interpreter.</source>
          <target state="translated">Если мы можем сказать,что нет действительной стартовой точки,то мы вообще не беспокоимся о запуске интерпретатора.Точно так же,если на этапе анализа мы знаем,что не можем обнаружить короткое замыкание на стартовую позицию,то мы идём прямо к интерпретатору.</target>
        </trans-unit>
        <trans-unit id="2cd027f23ebc9bafdd0ef83ac988a2e8f6205abb" translate="yes" xml:space="preserve">
          <source>If we encrypt this with &lt;code&gt;mkrot13&lt;/code&gt; :</source>
          <target state="translated">Если мы &lt;code&gt;mkrot13&lt;/code&gt; это с помощью mkrot13 :</target>
        </trans-unit>
        <trans-unit id="b742d69e435d1dc4ae57558eae468b9e3038bfd1" translate="yes" xml:space="preserve">
          <source>If we have a string which needs to be modified, while a regex will almost always be much more flexible, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt;, an oft underused tool, can still be a useful. One scenario might be replace all vowels with another character. The regex solution might look like this:</source>
          <target state="translated">Если у нас есть строка, которую нужно изменить, а регулярное выражение почти всегда будет гораздо более гибким, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt; , часто недоиспользуемый инструмент, все равно может быть полезным. В одном сценарии все гласные могут быть заменены другим символом. Решение с регулярным выражением может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="e9e855f5e5eecc49e2e1826c2e605b2358ee8b64" translate="yes" xml:space="preserve">
          <source>If we look at any of the C code generated by any of the examples except example 1, you will notice a number of references to ST(n), where n is usually 0. &quot;ST&quot; is actually a macro that points to the n'th argument on the argument stack. ST(0) is thus the first argument on the stack and therefore the first argument passed to the XSUB, ST(1) is the second argument, and so on.</source>
          <target state="translated">Если мы посмотрим на любой код на Си,сгенерированный любым из примеров,кроме примера 1,то мы заметим ряд ссылок на ST(n),где n обычно равно 0.&quot;ST&quot;-это на самом деле макрос,указывающий на n-ой аргумент в стеке аргументов.ST(0),таким образом,является первым аргументом на стеке,и поэтому первый аргумент,переданный в XSUB,ST(1)-это второй аргумент,и так далее.</target>
        </trans-unit>
        <trans-unit id="b4b727c2115d816f7a5edf98b373babd311821be" translate="yes" xml:space="preserve">
          <source>If we replace the &lt;code&gt; (?{local $c = $c + 1;})&lt;/code&gt; with &lt;code&gt; (?{$c = $c + 1;})&lt;/code&gt;, the variable changes are</source>
          <target state="translated">Если мы заменим &lt;code&gt; (?{local $c = $c + 1;})&lt;/code&gt; на &lt;code&gt; (?{$c = $c + 1;})&lt;/code&gt; , переменные изменятся</target>
        </trans-unit>
        <trans-unit id="6b22701c7de1c1b18f83a3da253320877e6db57e" translate="yes" xml:space="preserve">
          <source>If we want to call the function in scalar context, we have to do a bit more work. We can really have any code we like inside the braces, so we simply have to end with the scalar reference, although how you do that is up to you, and you can use code inside the braces. Note that the use of parens creates a list context, so we need &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; to force the scalar context on the function:</source>
          <target state="translated">Если мы хотим вызвать функцию в скалярном контексте, нам нужно проделать немного больше работы. У нас действительно может быть любой код, который нам нравится, внутри фигурных скобок, поэтому нам просто нужно закончить скалярной ссылкой, хотя как вы это делаете, зависит от вас, и вы можете использовать код внутри фигурных скобок. Обратите внимание, что использование скобок создает контекст списка, поэтому нам нужен &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; для принудительного использования скалярного контекста в функции:</target>
        </trans-unit>
        <trans-unit id="2aa4af82f261a5bfccad859728bbc5e698f2ad5a" translate="yes" xml:space="preserve">
          <source>If we want to sort by the hash value instead, we use the hash key to look it up. We still get out a list of keys, but this time they are ordered by their value.</source>
          <target state="translated">Если вместо этого мы хотим отсортировать по значению хэша,мы используем ключ хэша для его поиска.Мы все еще получаем список ключей,но на этот раз они упорядочены по их значению.</target>
        </trans-unit>
        <trans-unit id="1a0a23be20e0afdc53dc3805694c934e04c1d63f" translate="yes" xml:space="preserve">
          <source>If we wanted to include the mp3's title in the greeting, we could override the method:</source>
          <target state="translated">Если бы мы хотели включить заголовок mp3 в приветствие,мы могли бы отменить этот метод:</target>
        </trans-unit>
        <trans-unit id="215abf71d62aea6c4bacd7ab63842ca42cbc8d09" translate="yes" xml:space="preserve">
          <source>If we were interested in performance, not in code compactness, in the success branch we would not use &lt;code&gt;XPUSHs&lt;/code&gt; macros, but &lt;code&gt;PUSHs&lt;/code&gt; macros, and would pre-extend the stack before pushing the return values:</source>
          <target state="translated">Если бы нас интересовала производительность, а не компактность кода, в ветви успеха мы бы не использовали макросы &lt;code&gt;XPUSHs&lt;/code&gt; , а макросы &lt;code&gt;PUSHs&lt;/code&gt; , и предварительно расширили бы стек перед отправкой возвращаемых значений:</target>
        </trans-unit>
        <trans-unit id="ed55ede23a733b9689b8f241805b425f9dc0c341" translate="yes" xml:space="preserve">
          <source>If we've done things right, you'll probably want to write a new source, rather than sub-classing this (see &lt;a href=&quot;sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; for that).</source>
          <target state="translated">Если мы все сделали правильно, вы, вероятно, захотите написать новый источник, а не подклассифицировать его (для этого см. &lt;a href=&quot;sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="433a6e7876c97a91d0108a2079322b6917a252c6" translate="yes" xml:space="preserve">
          <source>If what the angle brackets contain is a simple scalar variable (for example, &lt;code&gt;$foo&lt;/code&gt; ), then that variable contains the name of the filehandle to input from, or its typeglob, or a reference to the same. For example:</source>
          <target state="translated">Если в угловых скобках содержится простая скалярная переменная (например, &lt;code&gt;$foo&lt;/code&gt; ), то эта переменная содержит имя дескриптора файла, из которого нужно вводить данные, или его typeglob, или ссылку на него. Например:</target>
        </trans-unit>
        <trans-unit id="0b51d046d4f4e47130f90dab13b7fc186caff6e3" translate="yes" xml:space="preserve">
          <source>If what's within the angle brackets is neither a filehandle nor a simple scalar variable containing a filehandle name, typeglob, or typeglob reference, it is interpreted as a filename pattern to be globbed, and either a list of filenames or the next filename in the list is returned, depending on context. This distinction is determined on syntactic grounds alone. That means &lt;code&gt;&amp;lt;$x&amp;gt;&lt;/code&gt; is always a &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; from an indirect handle, but &lt;code&gt;&amp;lt;$hash{key}&amp;gt;&lt;/code&gt; is always a &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob()&lt;/a&gt;&lt;/code&gt;. That's because &lt;code&gt;$x&lt;/code&gt; is a simple scalar variable, but &lt;code&gt;$hash{key}&lt;/code&gt; is not--it's a hash element. Even &lt;code&gt;&amp;lt;$x &amp;gt;&lt;/code&gt; (note the extra space) is treated as &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;(&quot;$x &quot;)&lt;/code&gt; , not &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline($x)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если то, что находится в угловых скобках, не является ни дескриптором файла, ни простой скалярной переменной, содержащей имя дескриптора файла, typeglob или ссылку typeglob, это интерпретируется как шаблон имени файла, который должен быть глобализирован, и либо список имен файлов, либо следующее имя файла в списке возвращается в зависимости от контекста. Это различие определяется только на синтаксических основаниях. Это означает, что &lt;code&gt;&amp;lt;$x&amp;gt;&lt;/code&gt; всегда является &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; из косвенного дескриптора, но &lt;code&gt;&amp;lt;$hash{key}&amp;gt;&lt;/code&gt; всегда является &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob()&lt;/a&gt;&lt;/code&gt; . Это потому, что &lt;code&gt;$x&lt;/code&gt; - простая скалярная переменная, а &lt;code&gt;$hash{key}&lt;/code&gt; - нет - это хеш-элемент. Даже &lt;code&gt;&amp;lt;$x &amp;gt;&lt;/code&gt; (обратите внимание на лишний пробел) рассматривается как &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;(&quot;$x &quot;)&lt;/code&gt; ,не &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline($x)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b842d8a427447b55d56f0f86ffb1407d7bbf70b" translate="yes" xml:space="preserve">
          <source>If whitespace is mostly irrelevant, how does one include space characters in an extended regexp? The answer is to backslash it &lt;code&gt;'\ '&lt;/code&gt; or put it in a character class &lt;code&gt;[ ]&lt;/code&gt; . The same thing goes for pound signs: use &lt;code&gt;\#&lt;/code&gt; or &lt;code&gt;[#]&lt;/code&gt;. For instance, Perl allows a space between the sign and the mantissa or integer, and we could add this to our regexp as follows:</source>
          <target state="translated">Если пробелы в основном не имеют значения, как включить пробелы в расширенное регулярное выражение? Ответ - поставить обратную косую черту &lt;code&gt;'\ '&lt;/code&gt; или поместить в класс символов &lt;code&gt;[ ]&lt;/code&gt; . То же самое и со знаками фунта: используйте &lt;code&gt;\#&lt;/code&gt; или &lt;code&gt;[#]&lt;/code&gt; . Например, Perl допускает пробел между знаком и мантиссой или целым числом, и мы могли бы добавить это в наше регулярное выражение следующим образом:</target>
        </trans-unit>
        <trans-unit id="0ac523288e8907db49cd44aeec42c46983d54f41" translate="yes" xml:space="preserve">
          <source>If you</source>
          <target state="translated">Если вы</target>
        </trans-unit>
        <trans-unit id="a97a499d1638eac60812016983597e71f2e68467" translate="yes" xml:space="preserve">
          <source>If you &quot;mmap&quot; the file with the File::Map module from CPAN, you can virtually load the entire file into a string without actually storing it in memory:</source>
          <target state="translated">Если вы &quot;mmap&quot; файл с модулем File::Map из CPAN,вы можете практически загрузить весь файл в строку,не сохраняя его в памяти:</target>
        </trans-unit>
        <trans-unit id="e9fdf3b9fc81571db27bb02cd29a8e0b53b10cc5" translate="yes" xml:space="preserve">
          <source>If you &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; without ever waiting on your children, you will accumulate zombies. On some systems, you can avoid this by setting &lt;code&gt;$SIG{CHLD}&lt;/code&gt; to &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; . See also &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; for more examples of forking and reaping moribund children.</source>
          <target state="translated">Если вы будете &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; даже не дожидаясь своих детей, у вас накопятся зомби. В некоторых системах этого можно избежать, установив для &lt;code&gt;$SIG{CHLD}&lt;/code&gt; значение &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; . Также смотрите &lt;a href=&quot;../perlipc&quot;&gt;perlipc,&lt;/a&gt; где вы найдете больше примеров раздвоения и пожинания умирающих детей.</target>
        </trans-unit>
        <trans-unit id="3342529f369584d116691354aca02d8a637cdc3f" translate="yes" xml:space="preserve">
          <source>If you &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; without ever waiting on your children, you will accumulate zombies. On some systems, you can avoid this by setting &lt;code&gt;$SIG{CHLD}&lt;/code&gt; to &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; . See also &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for more examples of forking and reaping moribund children.</source>
          <target state="translated">Если вы будете &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; даже не дожидаясь своих детей, у вас накопятся зомби. В некоторых системах этого можно избежать, установив для &lt;code&gt;$SIG{CHLD}&lt;/code&gt; значение &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; . Также смотрите &lt;a href=&quot;perlipc&quot;&gt;perlipc,&lt;/a&gt; где вы найдете больше примеров раздвоения и пожинания умирающих детей.</target>
        </trans-unit>
        <trans-unit id="bb90d14b290d4320ac5634dcbc5bece03b18182e" translate="yes" xml:space="preserve">
          <source>If you actually need to be able to get a real reference back from each hash entry, you can use the Tie::RefHash module, which does the required work for you.</source>
          <target state="translated">Если вам действительно нужно иметь возможность получить реальную ссылку обратно с каждой записи хэша,вы можете использовать модуль Tie::RefHash,который делает необходимую работу за вас.</target>
        </trans-unit>
        <trans-unit id="0863c378529bcaaf05a08fbe7b9d62fcdd40f533" translate="yes" xml:space="preserve">
          <source>If you actually want to bless into the stringified version of the reference supplied, you need to stringify it yourself, for example by:</source>
          <target state="translated">Если вы действительно хотите получить благословение в строковой версии поставляемой ссылки,вам нужно самому строчить ее,например,с помощью:</target>
        </trans-unit>
        <trans-unit id="7632fd79ddaeaed4fd83611844af65a8558ccb38" translate="yes" xml:space="preserve">
          <source>If you actually want to pack Unicode codepoints, use the &lt;code&gt;&quot;U&quot;&lt;/code&gt; format instead.</source>
          <target state="translated">Если вы действительно хотите упаковать кодовые точки Unicode, используйте вместо этого формат &lt;code&gt;&quot;U&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30a06cdba55cf94e2b0d8887615268f65da700c2" translate="yes" xml:space="preserve">
          <source>If you add the &lt;code&gt;stringify&lt;/code&gt; import option to your &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; declaration, then using a threads object in a string or a string context (e.g., as a hash key) will cause its ID to be used as the value:</source>
          <target state="translated">Если вы добавите параметр импорта &lt;code&gt;stringify&lt;/code&gt; в свое объявление &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; , то использование объекта потоков в строке или строковом контексте (например, в качестве хеш-ключа) приведет к тому, что его идентификатор будет использоваться в качестве значения:</target>
        </trans-unit>
        <trans-unit id="77f0b688e7f7db776b8a41a0294b1be395b96046" translate="yes" xml:space="preserve">
          <source>If you already have the data in memory or if you want to keep your code simple, you can use one of the sv_cat*() variants, such as sv_catpvn(). If you want to insert anywhere in the string you can use sv_insert() or sv_insert_flags().</source>
          <target state="translated">Если у вас уже есть данные в памяти или если вы хотите,чтобы ваш код был простым,вы можете использовать один из вариантов sv_cat*(),например,sv_catpvn().Если вы хотите вставить что-либо в строку,вы можете использовать sv_insert()или sv_insert_flags().</target>
        </trans-unit>
        <trans-unit id="d0e6e027d69f3e21d5d8d4eaafdf5a18b7a271a0" translate="yes" xml:space="preserve">
          <source>If you also specify the &lt;code&gt;save&lt;/code&gt; option newly passing tests will be excluded from subsequent runs.</source>
          <target state="translated">Если вы также укажете параметр &lt;code&gt;save&lt;/code&gt; новые пройденные тесты будут исключены из последующих запусков.</target>
        </trans-unit>
        <trans-unit id="f2315b4f443374dc91536026901e2322007448a6" translate="yes" xml:space="preserve">
          <source>If you alter your @_ arguments in a subroutine (such as with &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;), the stack backtrace will not show the original values.</source>
          <target state="translated">Если вы измените аргументы @_ в подпрограмме (например, с помощью &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; ), трассировка стека не покажет исходные значения.</target>
        </trans-unit>
        <trans-unit id="bcce70763746b8ab89abce0fda8214efc82356bb" translate="yes" xml:space="preserve">
          <source>If you are accustomed to using perl from various command-line shells found in UNIX environments, you will be less than pleased with what Windows offers by way of a command shell.</source>
          <target state="translated">Если вы привыкли использовать perl из различных оболочек командной строки,встречающихся в UNIX средах,вы будете менее чем довольны тем,что Windows предлагает в виде командной оболочки.</target>
        </trans-unit>
        <trans-unit id="75851b1a6055f8c9601d27bb8e4f2638f62e5f5e" translate="yes" xml:space="preserve">
          <source>If you are advanced enough with building C code, here is a suggestion to speed up building perl, and the later &lt;code&gt;make test&lt;/code&gt; . Try to keep your PATH enviromental variable with the least number of folders possible (remember to keep your C compiler's folders there). &lt;code&gt;C:\WINDOWS\system32&lt;/code&gt; or &lt;code&gt;C:\WINNT\system32&lt;/code&gt; depending on your OS version should be first folder in PATH, since &quot;cmd.exe&quot; is the most commonly launched program during the build and later testing.</source>
          <target state="translated">Если вы достаточно продвинуты в создании кода C, вот предложение по ускорению сборки Perl и более поздний &lt;code&gt;make test&lt;/code&gt; . Постарайтесь сохранить переменную окружения PATH с наименьшим возможным количеством папок (не забудьте сохранить там папки компилятора C). &lt;code&gt;C:\WINDOWS\system32&lt;/code&gt; или &lt;code&gt;C:\WINNT\system32&lt;/code&gt; зависимости от версии вашей ОС, должен быть первой папкой в ​​PATH, поскольку &amp;laquo;cmd.exe&amp;raquo; - это наиболее часто запускаемая программа во время сборки и последующего тестирования.</target>
        </trans-unit>
        <trans-unit id="9e6e47c6af55350e3bd275924a9467fa5be92cb6" translate="yes" xml:space="preserve">
          <source>If you are author of a package and wonder if your $VERSION can be parsed, please try the above method.</source>
          <target state="translated">Если вы являетесь автором пакета и задаетесь вопросом,можно ли разобрать ваш $VERSION,пожалуйста,попробуйте вышеприведенный метод.</target>
        </trans-unit>
        <trans-unit id="e9341f5fe0aca50dc1a438efa6a2a0829ec331a7" translate="yes" xml:space="preserve">
          <source>If you are building Perl from source, the Perl test suite file</source>
          <target state="translated">Если вы собираете Perl из исходников,то файл набора тестов Perl</target>
        </trans-unit>
        <trans-unit id="fd709122178ec9749d3b052901d53a7e7c059f96" translate="yes" xml:space="preserve">
          <source>If you are calling &lt;b&gt;pod2usage()&lt;/b&gt; from a module and want to display that module's POD, you can use this:</source>
          <target state="translated">Если вы вызываете &lt;b&gt;pod2usage ()&lt;/b&gt; из модуля и хотите отобразить POD этого модуля, вы можете использовать это:</target>
        </trans-unit>
        <trans-unit id="f5b3eed9ee23b3eafd899b21c185d1c6a6521682" translate="yes" xml:space="preserve">
          <source>If you are careful, it is possible to mix API calls with the tied hash/array interface in the same piece of code. Although only a few of the methods used to implement the tied interface currently make use of the cursor, you should always assume that the cursor has been changed any time the tied hash/array interface is used. As an example, this code will probably not do what you expect:</source>
          <target state="translated">Если быть внимательным,то можно смешивать вызовы API с привязанным хэш-массивом интерфейса в одном куске кода.Хотя в настоящее время только несколько методов,используемых для реализации связанного интерфейса,используют курсор,вы всегда должны предполагать,что курсор был изменен при использовании связанного интерфейса хэша/массива.В качестве примера,этот код,скорее всего,не будет делать то,что вы ожидаете:</target>
        </trans-unit>
        <trans-unit id="46443ee64846124969f99d9a251a1b5c33defa28" translate="yes" xml:space="preserve">
          <source>If you are coming here because code of yours is being adversely affected by someone's use of this variable, you can usually work around it by doing this:</source>
          <target state="translated">Если вы пришли сюда из-за того,что на ваш код отрицательно влияет чье-то использование этой переменной,обычно вы можете работать с ней,делая это:</target>
        </trans-unit>
        <trans-unit id="580a992ac4c85198002e3da1ab0af0114ef2843d" translate="yes" xml:space="preserve">
          <source>If you are compiling Perl on a remotely-mounted NFS filesystem, the test io/fs.t may fail on test #18. This appears to be a bug in HP-UX and no fix is currently available.</source>
          <target state="translated">Если вы компилируете Perl на удаленной файловой системе NFS,то тест io/fs.t может не сработать на тесте #18.Похоже,что это ошибка в HP-UX,и на данный момент исправление недоступно.</target>
        </trans-unit>
        <trans-unit id="3b33c19354a1a90e2387b434d12153c90f20f627" translate="yes" xml:space="preserve">
          <source>If you are compiling in PASE, then &quot;make install&quot; is the only thing you will need to do.</source>
          <target state="translated">Если вы компилируете в PASE,то &quot;make install&quot;-это единственное,что вам нужно будет сделать.</target>
        </trans-unit>
        <trans-unit id="81413ae9ed04e602e1a5e2aa34f9a9228c164afc" translate="yes" xml:space="preserve">
          <source>If you are compiling on AIX, simply do a &quot;make install&quot; on the AIX box. Once the install finishes, tar up the /QOpenSys/perl directory. Transfer the tarball to the OS/400 using FTP with the following commands:</source>
          <target state="translated">Если вы компилируете на AIX,просто сделайте &quot;make install&quot; на AIX box.Как только установка завершится,установите метку в каталоге /QOpenSys/perl.Перенесите tarball в OS/400,используя FTP со следующими командами:</target>
        </trans-unit>
        <trans-unit id="24c32dcfc58ac17c09099d20bc9bc3a8e41bba8b" translate="yes" xml:space="preserve">
          <source>If you are content with the test result, just &quot;make install&quot;</source>
          <target state="translated">Если вы довольны результатами теста,просто &quot;сделайте установку&quot;.</target>
        </trans-unit>
        <trans-unit id="aa6a61423fd16b04dc17486be56b73db7a8c3506" translate="yes" xml:space="preserve">
          <source>If you are creating a PerlIO layer, you may want to be lazy, in other words, implement only the methods that interest you. The other methods you can either replace with the &quot;blank&quot; methods</source>
          <target state="translated">Если вы создаете слой PerlIO,вы можете захотеть лениться,другими словами,реализовать только те методы,которые вас интересуют.Другие методы вы можете заменить на &quot;пустые&quot;.</target>
        </trans-unit>
        <trans-unit id="4b2de75d9b2a463fc1f9325a0ae503a9f6861718" translate="yes" xml:space="preserve">
          <source>If you are developing a suite of related modules/classes it's good practice to use nested classes with a common prefix as this will avoid namespace clashes. For example: Xyz::Control, Xyz::View, Xyz::Model etc. Use the modules in this list as a naming guide.</source>
          <target state="translated">Если вы разрабатываете набор связанных модулей/классов,то хорошая практика-использовать вложенные классы с общим префиксом,так как это позволит избежать столкновений пространств имен.Например:Xyz::Control,Xyz::View,Xyz::Model и т.д.Используйте модули из этого списка в качестве руководства по именованию.</target>
        </trans-unit>
        <trans-unit id="cf3f54058ec5c3861eafa70f589fb5c16feca4d3" translate="yes" xml:space="preserve">
          <source>If you are doing a blocking &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread()&lt;/a&gt;&lt;/code&gt;, you'll have to arrange for an alarm handler to provide a timeout (see &lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;). If you have a non-blocking open, you'll likely have a non-blocking read, which means you may have to use a 4-arg &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select()&lt;/a&gt;&lt;/code&gt; to determine whether I/O is ready on that device (see &lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;.</source>
          <target state="translated">Если вы выполняете блокирующее &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread()&lt;/a&gt;&lt;/code&gt; , вам необходимо настроить обработчик аварийных сигналов, чтобы обеспечить тайм-аут (см . Аварийный&lt;a href=&quot;functions/alarm&quot;&gt; сигнал&lt;/a&gt; ). Если у вас есть неблокирующее открытие, у вас, вероятно, будет неблокирующее чтение, что означает, что вам, возможно, придется использовать 4-аргументный &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select()&lt;/a&gt;&lt;/code&gt; чтобы определить, готов ли ввод-вывод на этом устройстве (см. &lt;a href=&quot;functions/select&quot;&gt;Select&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="27eb5f2751e7b3c976fa3693eb1b047c9ea468b5" translate="yes" xml:space="preserve">
          <source>If you are doing something complex, such as moving through many pages and forms or a web site, you can use &lt;a href=&quot;http://search.cpan.org/perldoc/WWW::Mechanize&quot;&gt;WWW::Mechanize&lt;/a&gt;. See its documentation for all the details.</source>
          <target state="translated">Если вы делаете что-то сложное, например перемещаетесь по множеству страниц и форм или веб-сайту, вы можете использовать &lt;a href=&quot;http://search.cpan.org/perldoc/WWW::Mechanize&quot;&gt;WWW :: Mechanize&lt;/a&gt; . См. Его документацию для получения всех подробностей.</target>
        </trans-unit>
        <trans-unit id="1a9b4d7923308acf7ee68c13a2cd11f90f3c70ce" translate="yes" xml:space="preserve">
          <source>If you are experiencing variable suicide, that &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $f&lt;/code&gt; in the subroutine doesn't pick up a fresh copy of the &lt;code&gt;$f&lt;/code&gt; whose value is &lt;code&gt;'foo'&lt;/code&gt; . The output shows that inside the subroutine the value of &lt;code&gt;$f&lt;/code&gt; leaks through when it shouldn't, as in this output:</source>
          <target state="translated">Если вы переживаете самоубийство переменной, &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $f&lt;/code&gt; в подпрограмме не берет новую копию &lt;code&gt;$f&lt;/code&gt; , значение которой равно &lt;code&gt;'foo'&lt;/code&gt; . Выходные данные показывают, что внутри подпрограммы значение &lt;code&gt;$f&lt;/code&gt; просачивается, хотя этого не должно быть, как в этом выходе:</target>
        </trans-unit>
        <trans-unit id="bbeae6d94c0568a9909c55582ce46133df1b3000" translate="yes" xml:space="preserve">
          <source>If you are familiar with the</source>
          <target state="translated">Если вы знакомы с</target>
        </trans-unit>
        <trans-unit id="09b5540260d1429f031cae6d4fea34d1c0219ed0" translate="yes" xml:space="preserve">
          <source>If you are forking many processes in parallel that are all creating temporary files, you may need to reset the random number seed using srand(EXPR) in each child else all the children will attempt to walk through the same set of random file names and may well cause themselves to give up if they exceed the number of retry attempts.</source>
          <target state="translated">Если параллельно с этим процессом вы выковыриваете много процессов,которые создают временные файлы,вам может потребоваться сброс посылки случайных чисел с помощью srand(EXPR)в каждом дочернем процессе,все дочерние процессы будут пытаться пройти через один и тот же набор случайных имён файлов и вполне могут заставить себя сдаться,если они превысят количество повторных попыток.</target>
        </trans-unit>
        <trans-unit id="79eaecd3ef824520bc14f0a6f551bc580fb007f0" translate="yes" xml:space="preserve">
          <source>If you are going to convert the script to a module you can use the opportunity to redesign the interface. The guidelines for module creation above include many of the issues you should consider.</source>
          <target state="translated">Если вы собираетесь преобразовать скрипт в модуль,вы можете воспользоваться возможностью перепроектировать интерфейс.Руководство по созданию модуля,приведенное выше,включает в себя многие из вопросов,которые вам следует рассмотреть.</target>
        </trans-unit>
        <trans-unit id="37c8864889db08a398c2a1fd61fb5557dd86b1b1" translate="yes" xml:space="preserve">
          <source>If you are going to put something onto the Perl stack, you need to know where to put it. This is the purpose of the macro &lt;code&gt;dSP&lt;/code&gt; --it declares and initializes a</source>
          <target state="translated">Если вы собираетесь поместить что-то в стек Perl, вам нужно знать, куда это поместить. Это цель макроса &lt;code&gt;dSP&lt;/code&gt; - он объявляет и инициализирует</target>
        </trans-unit>
        <trans-unit id="0cf3f133791811ca9201975358ebf1e226d3c50a" translate="yes" xml:space="preserve">
          <source>If you are going to use the HP DCE package, the library used for threading is /usr/lib/libcma.sl, but there have been multiple updates of that library over time. Perl will build with the first version, but it will not pass the test suite. Older Oracle versions might be a compelling reason not to update that library, otherwise please find a newer version in one of the following patches: PHSS_19739, PHSS_20608, or PHSS_23672</source>
          <target state="translated">Если вы собираетесь использовать пакет HP DCE,то библиотека,используемая для выполнения потоков-это /usr/lib/libcma.sl,но со временем эта библиотека неоднократно обновлялась.Perl будет собираться с первой версией,но не пройдет тестового набора.Более старые версии Oracle могут быть веской причиной не обновлять эту библиотеку,в противном случае,пожалуйста,найдите более новую версию в одном из следующих патчей:PHSS_19739,PHSS_20608 или PHSS_23672</target>
        </trans-unit>
        <trans-unit id="330882464199f1a0851acc4b79e3a966cdc91c15" translate="yes" xml:space="preserve">
          <source>If you are going to use this method you have to be aware of a possible memory leak which can arise under very specific circumstances. To explain these circumstances you need to know a bit about the flow of control between Perl and the callback routine.</source>
          <target state="translated">Если вы собираетесь использовать этот метод,вы должны знать о возможной утечке памяти,которая может произойти при очень специфических обстоятельствах.Чтобы объяснить эти обстоятельства,вы должны знать немного о потоке контроля между Perl и обратным вызовом.</target>
        </trans-unit>
        <trans-unit id="91073f8278c247bf05c5742a59e2d0906bf12cbd" translate="yes" xml:space="preserve">
          <source>If you are going to write a platform specific MM package, please try to limit the necessary overrides to primitive methods, and if it is not possible to do so, let's work out how to achieve that gain.</source>
          <target state="translated">Если вы собираетесь писать пакет ММ для конкретной платформы,постарайтесь ограничить необходимые переопределения примитивными методами,а если это невозможно,то давайте придумаем,как достичь этого выигрыша.</target>
        </trans-unit>
        <trans-unit id="3470649433d76902fec9be392ea404a581213006" translate="yes" xml:space="preserve">
          <source>If you are having trouble with square brackets then consider switching your rlogin or telnet client. Try to avoid older 3270 emulators and ISHELL for working with Perl on USS.</source>
          <target state="translated">Если у вас возникли проблемы с квадратными скобками,то подумайте о переключении вашего rlogin или telnet клиента.Постарайтесь избегать старых 3270 эмуляторов и ISHELL для работы с Perl на USS.</target>
        </trans-unit>
        <trans-unit id="be777d0c50e7b77da7283f3ff8a7e540b7f7344c" translate="yes" xml:space="preserve">
          <source>If you are in any doubt about the license situation, contact either the Berkeley DB authors or the author of DB_File. See &lt;a href=&quot;#AUTHOR&quot;&gt;AUTHOR&lt;/a&gt; for details.</source>
          <target state="translated">Если у вас есть какие-либо сомнения относительно ситуации с лицензией, свяжитесь либо с авторами Berkeley DB, либо с автором DB_File. Подробнее см. &lt;a href=&quot;#AUTHOR&quot;&gt;АВТОР&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99320978b9537887ebc85e1dfd4bdf0910cbc812" translate="yes" xml:space="preserve">
          <source>If you are in doubt which package contains a file you are missing, try to find an installation that has that file. Then do a</source>
          <target state="translated">Если вы сомневаетесь,в каком пакете содержится файл,который вам не хватает,попробуйте найти установку,в которой есть этот файл.Затем сделайте</target>
        </trans-unit>
        <trans-unit id="92276bc0e44e1b658a5288e18f73cfbd284b63bb" translate="yes" xml:space="preserve">
          <source>If you are intending to manipulate bitstrings, be certain that you're supplying bitstrings: If an operand is a number, that will imply a &lt;b&gt;numeric&lt;/b&gt; bitwise operation. You may explicitly show which type of operation you intend by using &lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;0+&lt;/code&gt; , as in the examples below.</source>
          <target state="translated">Если вы намереваетесь манипулировать строками битов, убедитесь, что вы предоставляете строки битов: если операнд является числом, это будет означать &lt;b&gt;числовую&lt;/b&gt; побитовую операцию. Вы можете явно указать, какой тип операции вы намереваетесь, используя &lt;code&gt;&quot;&quot;&lt;/code&gt; или &lt;code&gt;0+&lt;/code&gt; , как в примерах ниже.</target>
        </trans-unit>
        <trans-unit id="a0e74d8ccd8d67f221dc38d69397982438ef8887" translate="yes" xml:space="preserve">
          <source>If you are interested in the guts underlying these systems, check out &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;.</source>
          <target state="translated">Если вас интересует внутренняя часть этих систем, попробуйте &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f81bce975381ffe867c89af365021d38913e30eb" translate="yes" xml:space="preserve">
          <source>If you are interested in the z/OS (formerly known as OS/390) and POSIX-BC (BS2000) ports of Perl then see the perl-mvs mailing list. To subscribe, send an empty message to perl-mvs-subscribe@perl.org.</source>
          <target state="translated">Если вас интересуют порты z/OS (ранее известные как OS/390)и POSIX-BC (BS2000)на Perl,посмотрите список рассылки perl-mvs.Чтобы подписаться,отправьте пустое сообщение на perl-mvs-subscribe@perl.org.</target>
        </trans-unit>
        <trans-unit id="38d9bbb97bd39f15f79a0ad6f3bd53d77bb54ef1" translate="yes" xml:space="preserve">
          <source>If you are looking for a &quot;bar&quot; that isn't preceded by a &quot;foo&quot;, &lt;code&gt;/(?!foo)bar/&lt;/code&gt; will not do what you want. That's because the &lt;code&gt;(?!foo)&lt;/code&gt; is just saying that the next thing cannot be &quot;foo&quot;--and it's not, it's a &quot;bar&quot;, so &quot;foobar&quot; will match. Use look-behind instead (see below).</source>
          <target state="translated">Если вы ищете &amp;laquo;bar&amp;raquo;, которому не предшествует &amp;laquo;foo&amp;raquo;, &lt;code&gt;/(?!foo)bar/&lt;/code&gt; не будет делать то, что вы хотите. Это потому, что &lt;code&gt;(?!foo)&lt;/code&gt; просто говорит, что следующее не может быть &amp;laquo;foo&amp;raquo; - и это не так, это &amp;laquo;bar&amp;raquo;, поэтому &amp;laquo;foobar&amp;raquo; будет соответствовать. Вместо этого используйте ретроспективный просмотр (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="f20427718038bfba8c53137f8646eb9abfc2ff46" translate="yes" xml:space="preserve">
          <source>If you are looking for a class that does everything for you you don't define yourself, use the &lt;code&gt;Tie::StdScalar&lt;/code&gt; class, not the &lt;code&gt;Tie::Scalar&lt;/code&gt; one.</source>
          <target state="translated">Если вы ищете класс, который делает все, что вы не определяете сами, используйте класс &lt;code&gt;Tie::StdScalar&lt;/code&gt; , а не &lt;code&gt;Tie::Scalar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7787fb3feb00a627232c8ef4ce3954c9d7deed73" translate="yes" xml:space="preserve">
          <source>If you are looking for a table of contents to the Perl library modules documentation, see the &lt;a href=&quot;http://search.cpan.org/perldoc/perltoc&quot;&gt;perltoc&lt;/a&gt; page.</source>
          <target state="translated">Если вы ищете оглавление документации по модулям библиотеки Perl, см. &lt;a href=&quot;http://search.cpan.org/perldoc/perltoc&quot;&gt;Страницу perltoc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3fac826063cfc00ef4ae02f7626b0848d723ad5d" translate="yes" xml:space="preserve">
          <source>If you are looking for an example, I recommend that you look at the simple example in the Memoize::Expire documentation, or at the code for Memoize::Expire itself.</source>
          <target state="translated">Если вы ищете пример,я рекомендую вам посмотреть на простой пример в документации Memoize::Expire,или на код для Memoize::Expire.</target>
        </trans-unit>
        <trans-unit id="b33652a525614ae7d89321a43fb11331d7e5b6fa" translate="yes" xml:space="preserve">
          <source>If you are making use of the Perl stack pointer in your code you must always refresh the local copy using SPAGAIN whenever you make use of the</source>
          <target state="translated">Если вы используете указатель стека Perl в вашем коде,вы всегда должны обновлять локальную копию,используя SPAGAIN,всякий раз,когда вы используете</target>
        </trans-unit>
        <trans-unit id="0468c5bae6319f4655b5720508b9d190b598ea2a" translate="yes" xml:space="preserve">
          <source>If you are on a Unix-like system, you might be able to get away with a system call where you put an &lt;code&gt;&amp;amp;&lt;/code&gt; on the end of the command:</source>
          <target state="translated">Если вы работаете в Unix-подобной системе, вам, возможно, удастся обойтись без системного вызова, в котором вы поставите &lt;code&gt;&amp;amp;&lt;/code&gt; в конце команды:</target>
        </trans-unit>
        <trans-unit id="74fb92ccab7935bd1e0cc2c8300a7bef29eb75de" translate="yes" xml:space="preserve">
          <source>If you are on a non-UNIX platform &lt;b&gt;perldoc&lt;/b&gt;&lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;, as some features may be unimplemented or work differently.</source>
          <target state="translated">Если вы используете &lt;b&gt;perldoc &lt;/b&gt;&lt;a href=&quot;perlport&quot;&gt;perlport на&lt;/a&gt; платформе, &lt;b&gt;отличной от &lt;/b&gt;UNIX , некоторые функции могут быть нереализованы или работать по-другому.</target>
        </trans-unit>
        <trans-unit id="5f59ff52a71652ecb89231c85ecae2ce17688eb9" translate="yes" xml:space="preserve">
          <source>If you are on a system that correctly implements &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; and you use the example appending code from &quot;perldoc -f flock&quot; everything will be OK even if the OS you are on doesn't implement append mode correctly (if such a system exists). So if you are happy to restrict yourself to OSs that implement &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; (and that's not really much of a restriction) then that is what you should do.</source>
          <target state="translated">Если вы работаете в системе, которая правильно реализует &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; , и вы используете пример кода добавления из &amp;laquo;perldoc -f flock&amp;raquo;, все будет в порядке, даже если ОС, в которой вы работаете, не реализует режим добавления правильно (если такая система существует). Так что, если вы счастливы ограничить себя ОС, которые реализуют &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; (и это не является серьезным ограничением), то вам следует поступить именно так.</target>
        </trans-unit>
        <trans-unit id="54d7fa3e38420fc843370b116c9be081ea5603e0" translate="yes" xml:space="preserve">
          <source>If you are only exporting function names it is recommended to omit the ampersand, as the implementation is faster this way.</source>
          <target state="translated">Если вы экспортируете только имена функций,то рекомендуется опустить амперсанд,так как таким образом реализация будет быстрее.</target>
        </trans-unit>
        <trans-unit id="2de91fd61e5dabce87e62b432c1af2d2e0384486" translate="yes" xml:space="preserve">
          <source>If you are overriding any of these methods in your Makefile.PL (in the MY class), please report that to the makemaker mailing list. We are trying to minimize the necessary method overrides and switch to data driven Makefile.PLs wherever possible. In the long run less methods will be overridable via the MY class.</source>
          <target state="translated">Если вы переопределили любой из этих методов в Makefile.PL (в классе MY),пожалуйста,сообщите об этом в список рассылки Makefile.PL.Мы пытаемся минимизировать необходимые переопределения методов и по возможности переключаться на Makefile.PLs,ориентированный на данные.В долгосрочной перспективе меньшее количество методов будет переопределяться через класс MY.</target>
        </trans-unit>
        <trans-unit id="25095e5b9b6ab11015f95ba50809b8be1a58758d" translate="yes" xml:space="preserve">
          <source>If you are particularly interested in customizing this module's output even more, see the source and/or write to me.</source>
          <target state="translated">Если вас особенно интересует настройка вывода этого модуля,посмотрите источник и/или напишите мне.</target>
        </trans-unit>
        <trans-unit id="d40865e3f4f814dc75edbc20fbc8762037c6c824" translate="yes" xml:space="preserve">
          <source>If you are printing IVs, UVs, or NVS instead of the stdio(3) style formatting codes like &lt;code&gt;%d&lt;/code&gt; , &lt;code&gt;%ld&lt;/code&gt; , &lt;code&gt;%f&lt;/code&gt; , you should use the following macros for portability</source>
          <target state="translated">Если вы печатаете IV, UV или NVS вместо кодов форматирования стиля stdio (3), таких как &lt;code&gt;%d&lt;/code&gt; , &lt;code&gt;%ld&lt;/code&gt; , &lt;code&gt;%f&lt;/code&gt; , вы должны использовать следующие макросы для переносимости</target>
        </trans-unit>
        <trans-unit id="b082a380f246d61dd682cd511f2ea77809e32735" translate="yes" xml:space="preserve">
          <source>If you are printing addresses of pointers, use UVxf combined with PTR2UV(), do not use %lx or %p.</source>
          <target state="translated">Если вы печатаете адреса указателей,используйте UVxf в сочетании с PTR2UV(),не используйте %lx или %p.</target>
        </trans-unit>
        <trans-unit id="b6f4ed221243b9dde4f0f2cc29b067e485bbf822" translate="yes" xml:space="preserve">
          <source>If you are reading this documentation, looking for a replacement for the &lt;code&gt;FileHandle&lt;/code&gt; package, then I suggest you read the documentation for &lt;code&gt;IO::File&lt;/code&gt; too.</source>
          <target state="translated">Если вы читаете эту документацию и ищете замену для пакета &lt;code&gt;FileHandle&lt;/code&gt; , то я предлагаю вам также прочитать документацию для &lt;code&gt;IO::File&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c40246fed4e0a31f96c46a72d0a85e56bbe29c3" translate="yes" xml:space="preserve">
          <source>If you are reading this in the future then it's possible that the state of the art has changed. We recommend you start by reading the perlootut document in the latest stable release of Perl, rather than this version.</source>
          <target state="translated">Если вы читаете это в будущем,то возможно,что состояние искусства изменилось.Мы рекомендуем Вам начать с чтения документа perlootut в последнем стабильном выпуске Perl,а не в этой версии.</target>
        </trans-unit>
        <trans-unit id="d0add6c557074aa94dbce442362b0e5da76c5396" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Compress::Bzip2 can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Если вы используете Perl 5.005 или выше, объект &lt;code&gt;$z&lt;/code&gt; , возвращаемый из IO :: Compress :: Bzip2, можно использовать точно так же, как дескриптор &lt;a href=&quot;../file&quot;&gt;файла IO :: File&lt;/a&gt; . Это означает, что все обычные операции с выходным файлом могут выполняться с помощью &lt;code&gt;$z&lt;/code&gt; . Например, для записи в сжатый файл / буфер вы можете использовать любую из этих форм</target>
        </trans-unit>
        <trans-unit id="b7e4df4e4f27db0bf9a46e2a1941e85758d61068" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Compress::Deflate can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Если вы используете Perl 5.005 или выше, объект &lt;code&gt;$z&lt;/code&gt; , возвращенный из IO :: Compress :: Deflate, можно использовать точно так же, как дескриптор &lt;a href=&quot;../file&quot;&gt;файла IO :: File&lt;/a&gt; . Это означает, что все обычные операции с выходным файлом могут выполняться с помощью &lt;code&gt;$z&lt;/code&gt; . Например, для записи в сжатый файл / буфер вы можете использовать любую из этих форм</target>
        </trans-unit>
        <trans-unit id="41e65ffc69fed189ecd525fba0988f92db4e7035" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Compress::Gzip can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Если вы используете Perl 5.005 или выше, объект &lt;code&gt;$z&lt;/code&gt; , возвращаемый из IO :: Compress :: Gzip, можно использовать точно так же, как дескриптор &lt;a href=&quot;../file&quot;&gt;файла IO :: File&lt;/a&gt; . Это означает, что все обычные операции с выходным файлом могут выполняться с помощью &lt;code&gt;$z&lt;/code&gt; . Например, для записи в сжатый файл / буфер вы можете использовать любую из этих форм</target>
        </trans-unit>
        <trans-unit id="c6b6ef257ae9881b6bd3fd8eaa22b1a4c05c99ca" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Compress::RawDeflate can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Если вы используете Perl 5.005 или выше, объект &lt;code&gt;$z&lt;/code&gt; , возвращенный из IO :: Compress :: RawDeflate, можно использовать точно так же, как дескриптор &lt;a href=&quot;../file&quot;&gt;файла IO :: File&lt;/a&gt; . Это означает, что все обычные операции с выходным файлом могут выполняться с помощью &lt;code&gt;$z&lt;/code&gt; . Например, для записи в сжатый файл / буфер вы можете использовать любую из этих форм</target>
        </trans-unit>
        <trans-unit id="3c423a94c7fc5cb61812044d70c6c094354f683a" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Compress::Zip can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Если вы используете Perl 5.005 или выше, объект &lt;code&gt;$z&lt;/code&gt; , возвращенный из IO :: Compress :: Zip, можно использовать точно так же, как дескриптор &lt;a href=&quot;../file&quot;&gt;файла IO :: File&lt;/a&gt; . Это означает, что все обычные операции с выходным файлом могут выполняться с помощью &lt;code&gt;$z&lt;/code&gt; . Например, для записи в сжатый файл / буфер вы можете использовать любую из этих форм</target>
        </trans-unit>
        <trans-unit id="5fea5722273a1695c99b2d6f3f73bb1257cd24c3" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::AnyInflate can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Если вы используете Perl 5.005 или выше, объект &lt;code&gt;$z&lt;/code&gt; , возвращенный из IO :: Uncompress :: AnyInflate, можно использовать точно так же, как &lt;a href=&quot;../file&quot;&gt;файловый&lt;/a&gt; дескриптор IO :: File . Это означает, что все обычные операции с входным файлом могут выполняться с помощью &lt;code&gt;$z&lt;/code&gt; . Например, чтобы прочитать строку из сжатого файла / буфера, вы можете использовать любую из этих форм</target>
        </trans-unit>
        <trans-unit id="b2972d5cdbb1eb98b989631b3ded397e40e59e75" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::AnyUncompress can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Если вы используете Perl 5.005 или выше, объект &lt;code&gt;$z&lt;/code&gt; , возвращенный из IO :: Uncompress :: AnyUncompress, можно использовать точно так же, как &lt;a href=&quot;../file&quot;&gt;файловый&lt;/a&gt; дескриптор IO :: File . Это означает, что все обычные операции с входным файлом могут выполняться с помощью &lt;code&gt;$z&lt;/code&gt; . Например, чтобы прочитать строку из сжатого файла / буфера, вы можете использовать любую из этих форм</target>
        </trans-unit>
        <trans-unit id="18aa1921698d337e93a7e4edaa2b66e95de457bf" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::Bunzip2 can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Если вы используете Perl 5.005 или выше, объект &lt;code&gt;$z&lt;/code&gt; , возвращенный из IO :: Uncompress :: Bunzip2, можно использовать точно так же, как дескриптор &lt;a href=&quot;../file&quot;&gt;файла IO :: File&lt;/a&gt; . Это означает, что все обычные операции с входным файлом могут выполняться с помощью &lt;code&gt;$z&lt;/code&gt; . Например, чтобы прочитать строку из сжатого файла / буфера, вы можете использовать любую из этих форм</target>
        </trans-unit>
        <trans-unit id="f86eb994b5def7f39f87b382b570ded31372309e" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::Gunzip can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Если вы используете Perl 5.005 или выше, объект &lt;code&gt;$z&lt;/code&gt; , возвращенный из IO :: Uncompress :: Gunzip, можно использовать точно так же, как дескриптор &lt;a href=&quot;../file&quot;&gt;файла IO :: File&lt;/a&gt; . Это означает, что все обычные операции с входным файлом могут выполняться с помощью &lt;code&gt;$z&lt;/code&gt; . Например, чтобы прочитать строку из сжатого файла / буфера, вы можете использовать любую из этих форм</target>
        </trans-unit>
        <trans-unit id="05ab40d4db9fa577fb79380b48870abe52f5c6be" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::Inflate can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Если вы используете Perl 5.005 или выше, объект &lt;code&gt;$z&lt;/code&gt; , возвращенный из IO :: Uncompress :: Inflate, можно использовать точно так же, как дескриптор &lt;a href=&quot;../file&quot;&gt;файла IO :: File&lt;/a&gt; . Это означает, что все обычные операции с входным файлом могут выполняться с помощью &lt;code&gt;$z&lt;/code&gt; . Например, чтобы прочитать строку из сжатого файла / буфера, вы можете использовать любую из этих форм</target>
        </trans-unit>
        <trans-unit id="d70a4ecbd7bb1c964123dba102fe8a49b561cb00" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::RawInflate can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Если вы используете Perl 5.005 или выше, объект &lt;code&gt;$z&lt;/code&gt; , возвращенный из IO :: Uncompress :: RawInflate, можно использовать точно так же, как &lt;a href=&quot;../file&quot;&gt;файловый&lt;/a&gt; дескриптор IO :: File . Это означает, что все обычные операции с входным файлом могут выполняться с помощью &lt;code&gt;$z&lt;/code&gt; . Например, чтобы прочитать строку из сжатого файла / буфера, вы можете использовать любую из этих форм</target>
        </trans-unit>
        <trans-unit id="3608890b582bffd465c544ac9e831ad2b06501a0" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::Unzip can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Если вы используете Perl 5.005 или выше, объект &lt;code&gt;$z&lt;/code&gt; , возвращенный из IO :: Uncompress :: Unzip, можно использовать точно так же, как дескриптор &lt;a href=&quot;../file&quot;&gt;файла IO :: File&lt;/a&gt; . Это означает, что все обычные операции с входным файлом могут выполняться с помощью &lt;code&gt;$z&lt;/code&gt; . Например, чтобы прочитать строку из сжатого файла / буфера, вы можете использовать любую из этих форм</target>
        </trans-unit>
        <trans-unit id="89f53b731da5c3618fcf6d87c9434da7f9ed2f65" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.6.0 or better, the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; pragma allows fine control of what warnings are produced. See &lt;a href=&quot;perllexwarn&quot;&gt;perllexwarn&lt;/a&gt; for more details.</source>
          <target state="translated">Если вы работаете в Perl 5.6.0 или лучше, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; Прагма позволяет точно контролировать то , что производится предупреждение. Смотрите &lt;a href=&quot;perllexwarn&quot;&gt;perllexwarn&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="af8514c8e63d77882efdff2789324ce75a2c20f4" translate="yes" xml:space="preserve">
          <source>If you are running VOS Release 14.4.1 or later, you can obtain a pre-compiled, supported copy of perl by purchasing the GNU Tools product from Stratus Technologies.</source>
          <target state="translated">Если вы используете версию VOS 14.4.1 или более позднюю,вы можете получить предварительно скомпилированную и поддерживаемую копию perl,купив продукт GNU Tools у компании Stratus Technologies.</target>
        </trans-unit>
        <trans-unit id="90113b08f2e5803b4f4fa9119cc6038c86b7bb42" translate="yes" xml:space="preserve">
          <source>If you are running a Unix derivative this value defaults to</source>
          <target state="translated">Если вы используете производную Unix,то это значение по умолчанию равно</target>
        </trans-unit>
        <trans-unit id="ae421a254aed7ffd059cb6be52110578a85cd308" translate="yes" xml:space="preserve">
          <source>If you are running experiments with embedding perl as a library into other applications, you might find MakeMaker is not sufficient. You'd better have a look at ExtUtils::Embed which is a collection of utilities for embedding.</source>
          <target state="translated">Если вы проводите эксперименты с встраиванием perl в качестве библиотеки в другие приложения,вы можете обнаружить,что MakeMaker не достаточен.Вам лучше взглянуть на ExtUtils::Embed-коллекцию утилит для встраивания.</target>
        </trans-unit>
        <trans-unit id="743cbf656ee357233b7747fd85635a26f54ae749" translate="yes" xml:space="preserve">
          <source>If you are running the tests from a emacs shell window, you may see failures in op/stat.t. Run &quot;dmake test-notty&quot; in that case.</source>
          <target state="translated">Если вы запускаете тесты из окна оболочки emacs,вы можете увидеть сбои в op/stat.t.Запустите &quot;dmake test-notty&quot; в этом случае.</target>
        </trans-unit>
        <trans-unit id="eb661707e45d0fa6207ff65030fca0e35ac953eb" translate="yes" xml:space="preserve">
          <source>If you are running under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; (and if you aren't, why in the world aren't you?), you'll have to add some declarations to make it happy:</source>
          <target state="translated">Если вы работаете с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; (а если нет, то почему, черт возьми, не так?), Вам придется добавить несколько объявлений, чтобы сделать это счастливым:</target>
        </trans-unit>
        <trans-unit id="767de91007776d2ff4bd67fc3c5e04ab7cebdfa3" translate="yes" xml:space="preserve">
          <source>If you are seeing spaces between the elements of your array when you print the array, you are probably interpolating the array in double quotes:</source>
          <target state="translated">Если вы видите пробелы между элементами массива,когда вы печатаете массив,вы,вероятно,интерполируете массив в двойных кавычках:</target>
        </trans-unit>
        <trans-unit id="16bb00dc57c212c5f89aeced92e2138d70407e36" translate="yes" xml:space="preserve">
          <source>If you are stuck with older Perls, you can do Unicode with the &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::String&quot;&gt;Unicode::String&lt;/a&gt; module, and character conversions using the &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Map8&quot;&gt;Unicode::Map8&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Map&quot;&gt;Unicode::Map&lt;/a&gt; modules. If you are using Japanese encodings, you might try using the jperl 5.005_03.</source>
          <target state="translated">Если вы застряли в старых версиях Perls, вы можете использовать Unicode с модулем &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::String&quot;&gt;Unicode :: String&lt;/a&gt; и преобразовывать символы с помощью модулей &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Map8&quot;&gt;Unicode :: Map8&lt;/a&gt; и &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Map&quot;&gt;Unicode :: Map&lt;/a&gt; . Если вы используете японскую кодировку, вы можете попробовать использовать jperl 5.005_03.</target>
        </trans-unit>
        <trans-unit id="a4539f5703f218245f234df49c0b9e75bd10857f" translate="yes" xml:space="preserve">
          <source>If you are submitting a code patch there are several things that you can do to help the Perl 5 Porters accept your patch.</source>
          <target state="translated">Если вы отправляете кодовый патч,есть несколько вещей,которые вы можете сделать,чтобы помочь Perl 5 Porters принять ваш патч.</target>
        </trans-unit>
        <trans-unit id="9d2ae6978c448ceee8a44a91cddc4545fb9e5c5e" translate="yes" xml:space="preserve">
          <source>If you are targetting an ARM device -- which currently includes the vast majority of phones and tablets -- you'll want to pass -Dcc=arm-unknown-nto-qnx8.0.0eabi-gcc to Configure. Alternatively, if you are targetting an x86 device, or using the simulator provided with the NDK, you should specify -Dcc=ntox86-gcc instead.</source>
          <target state="translated">Если вы нацеливаетесь на ARM-устройство --которое в настоящее время включает в себя подавляющее большинство телефонов и планшетов --вам нужно будет передать -Dcc=arm-unknown-nto-qnx8.0.0eabi-gcc для конфигурирования.В качестве альтернативы,если вы нацеливаетесь на устройство x86 или используете симулятор,поставляемый вместе с NDK,вам следует указать -Dcc=ntox86-gcc.</target>
        </trans-unit>
        <trans-unit id="c81847f52511bd6e6f2d950ba6b028d46d7fda4c" translate="yes" xml:space="preserve">
          <source>If you are testing locales (see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;), there are helper functions in</source>
          <target state="translated">Если вы тестируете локали (см. &lt;a href=&quot;perllocale&quot;&gt;Perllocale&lt;/a&gt; ), в</target>
        </trans-unit>
        <trans-unit id="1005d40b52c8fba9456ef2a3b1ec6cff90f7233f" translate="yes" xml:space="preserve">
          <source>If you are testing only once, the standard module &lt;a href=&quot;list/util&quot;&gt;List::Util&lt;/a&gt; exports the function &lt;code&gt;first&lt;/code&gt; for this purpose. It works by stopping once it finds the element. It's written in C for speed, and its Perl equivalent looks like this subroutine:</source>
          <target state="translated">Если вы тестируете только один раз, стандартный модуль &lt;a href=&quot;list/util&quot;&gt;List :: Util &lt;/a&gt; &lt;code&gt;first&lt;/code&gt; экспортирует функцию для этой цели. Он работает, останавливаясь, как только находит элемент. Он написан на C для скорости, а его эквивалент в Perl выглядит так:</target>
        </trans-unit>
        <trans-unit id="faf3c25ab12fb420d9fdf6ea0144e15dc43f0fe2" translate="yes" xml:space="preserve">
          <source>If you are trying to use this instead of &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; to capture the output, you may find it easier to open a filehandle to a scalar (&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; $fh, &quot;&amp;gt;&quot;, \$output&lt;/code&gt; ) and write to that instead.</source>
          <target state="translated">Если вы пытаетесь использовать это вместо &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; для захвата вывода, вам может быть проще открыть дескриптор файла для скаляра ( &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; $fh, &quot;&amp;gt;&quot;, \$output&lt;/code&gt; ) и вместо этого записать в него.</target>
        </trans-unit>
        <trans-unit id="87f126d580b9d17eb9520e5adc6ebcd7b64cbce8" translate="yes" xml:space="preserve">
          <source>If you are trying to use this instead of &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; to capture the output, you may find it easier to open a filehandle to a scalar (&lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; $fh, &quot;&amp;gt;&quot;, \$output&lt;/code&gt; ) and write to that instead.</source>
          <target state="translated">Если вы пытаетесь использовать это вместо &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; для захвата вывода, вам может быть проще открыть дескриптор файла для скаляра ( &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; $fh, &quot;&amp;gt;&quot;, \$output&lt;/code&gt; ) и вместо этого записать в него.</target>
        </trans-unit>
        <trans-unit id="f0601abe3b8fe05fc06de5499fb9941a40db6bc0" translate="yes" xml:space="preserve">
          <source>If you are unable to send your report using &lt;b&gt;perlbug&lt;/b&gt; (most likely because your system doesn't have a way to send mail that perlbug recognizes), you may be able to use this tool to compose your report and save it to a file which you can then send to &lt;b&gt;perlbug@perl.org&lt;/b&gt; using your regular mail client.</source>
          <target state="translated">Если вы не можете отправить отчет с помощью &lt;b&gt;perlbug&lt;/b&gt; (скорее всего, из-за того, что ваша система не имеет возможности отправлять почту, которую распознает perlbug), вы можете использовать этот инструмент для составления отчета и сохранения его в файл, который вы затем можно отправить на &lt;b&gt;perlbug@perl.org&lt;/b&gt; с помощью обычного почтового клиента.</target>
        </trans-unit>
        <trans-unit id="dd788f693f0912cff62f6c5004a3304201e94790" translate="yes" xml:space="preserve">
          <source>If you are used to working with a version of Perl prior to the introduction of lexically scoped warnings, or have code that uses both lexical warnings and &lt;code&gt;$^W&lt;/code&gt; , this section will describe how they interact.</source>
          <target state="translated">Если вы привыкли работать с версией Perl до введения предупреждений с лексической областью видимости или имеете код, который использует как лексические предупреждения, так и &lt;code&gt;$^W&lt;/code&gt; , в этом разделе будет описано, как они взаимодействуют.</target>
        </trans-unit>
        <trans-unit id="19c883172a7bd8c24338f9dd7a287c030969e4c2" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt; or one of its subclasses, you can call the &lt;code&gt;autoflush&lt;/code&gt; method to change the settings of the filehandle:</source>
          <target state="translated">Если вы используете &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; или один из его подклассов, вы можете вызвать метод &lt;code&gt;autoflush&lt;/code&gt; , чтобы изменить настройки дескриптора файла:</target>
        </trans-unit>
        <trans-unit id="66ca3a901cfd38d2b33b77415f58b3c173825a91" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;HePV&lt;/code&gt; to get values to pass to &lt;code&gt;newSVpvn()&lt;/code&gt; to create a new SV, you should consider using &lt;code&gt;newSVhek(HeKEY_hek(he))&lt;/code&gt; as it is more efficient.</source>
          <target state="translated">Если вы используете &lt;code&gt;HePV&lt;/code&gt; для передачи значений в &lt;code&gt;newSVpvn()&lt;/code&gt; для создания нового SV, вам следует рассмотреть возможность использования &lt;code&gt;newSVhek(HeKEY_hek(he))&lt;/code&gt; поскольку это более эффективно.</target>
        </trans-unit>
        <trans-unit id="987d668924ef21e965c8815374cd5ece61317689" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;nanosleep&lt;/code&gt; for something else than mixing sleeping with signals, give some thought to whether Perl is the tool you should be using for work requiring nanosecond accuracies.</source>
          <target state="translated">Если вы используете &lt;code&gt;nanosleep&lt;/code&gt; для чего-то другого, кроме смешивания сна с сигналами, подумайте , является ли Perl тем инструментом, который вы должны использовать для работы, требующей наносекундной точности.</target>
        </trans-unit>
        <trans-unit id="f9a45f762f42b66675541c22b88f50402f53057c" translate="yes" xml:space="preserve">
          <source>If you are using ACLs, there is a pragma called &lt;code&gt;filetest&lt;/code&gt; that may produce more accurate results than the bare stat() mode bits. When under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; the above-mentioned filetests test whether the permission can(not) be granted using the access(2) family of system calls. Also note that the &lt;code&gt;-x&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; may under this pragma return true even if there are no execute permission bits set (nor any extra execute permission ACLs). This strangeness is due to the underlying system calls' definitions. Note also that, due to the implementation of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; , the &lt;code&gt;_&lt;/code&gt; special filehandle won't cache the results of the file tests when this pragma is in effect. Read the documentation for the &lt;code&gt;filetest&lt;/code&gt; pragma for more information.</source>
          <target state="translated">Если вы используете списки управления &lt;code&gt;filetest&lt;/code&gt; , существует прагма filetest, которая может дать более точные результаты, чем биты в режиме stat (). При &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; вышеупомянутые filetests проверяют, можно ли предоставить разрешение с использованием семейства системных вызовов access (2). Также обратите внимание, что &lt;code&gt;-x&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; могут в соответствии с этой прагмой возвращать истину, даже если не установлены биты разрешения на выполнение (или какие-либо дополнительные ACL разрешения на выполнение). Эта странность связана с определениями основных системных вызовов. Следует также отметить , что в связи с осуществлением &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; , то &lt;code&gt;_&lt;/code&gt; специальный дескриптор файла не будет кэшировать результаты файловых тестов, когда действует эта прагма. Прочтите документацию к &lt;code&gt;filetest&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="536f259afd4833a386595561631d799b0872387d" translate="yes" xml:space="preserve">
          <source>If you are using ACLs, there is a pragma called &lt;code&gt;filetest&lt;/code&gt; that may produce more accurate results than the bare stat() mode bits. When under &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; the above-mentioned filetests test whether the permission can(not) be granted using the access(2) family of system calls. Also note that the &lt;code&gt;-x&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; may under this pragma return true even if there are no execute permission bits set (nor any extra execute permission ACLs). This strangeness is due to the underlying system calls' definitions. Note also that, due to the implementation of &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; , the &lt;code&gt;_&lt;/code&gt; special filehandle won't cache the results of the file tests when this pragma is in effect. Read the documentation for the &lt;code&gt;filetest&lt;/code&gt; pragma for more information.</source>
          <target state="translated">Если вы используете списки управления &lt;code&gt;filetest&lt;/code&gt; , существует прагма filetest, которая может дать более точные результаты, чем биты в режиме stat (). При &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; вышеупомянутые filetests проверяют, можно ли предоставить разрешение с использованием семейства системных вызовов access (2). Также обратите внимание, что &lt;code&gt;-x&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; могут в соответствии с этой прагмой возвращать истину, даже если не установлены биты разрешения на выполнение (или какие-либо дополнительные ACL разрешения на выполнение). Эта странность связана с определениями основных системных вызовов. Следует также отметить , что в связи с осуществлением &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; , то &lt;code&gt;_&lt;/code&gt; специальный дескриптор файла не будет кэшировать результаты файловых тестов, когда действует эта прагма. Прочтите документацию к &lt;code&gt;filetest&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="4cb0cc5912b1065f25576985628bc261176328a3" translate="yes" xml:space="preserve">
          <source>If you are using MacOS, the same concerns apply. MacPerl (for Classic environments) comes with a simple editor. Popular external editors are BBEdit ( &lt;a href=&quot;http://www.barebones.com/products/bbedit/&quot;&gt;http://www.barebones.com/products/bbedit/&lt;/a&gt; ) or Alpha ( &lt;a href=&quot;http://www.his.com/~jguyer/Alpha/Alpha8.html&quot;&gt;http://www.his.com/~jguyer/Alpha/Alpha8.html&lt;/a&gt; ). MacOS X users can use Unix editors as well.</source>
          <target state="translated">Если вы используете MacOS, возникают те же проблемы. MacPerl (для классических сред) поставляется с простым редактором. Популярными внешними редакторами являются BBEdit ( &lt;a href=&quot;http://www.barebones.com/products/bbedit/&quot;&gt;http://www.barebones.com/products/bbedit/&lt;/a&gt; ) или Alpha ( &lt;a href=&quot;http://www.his.com/~jguyer/Alpha/Alpha8.html&quot;&gt;http://www.his.com/~jguyer/Alpha/Alpha8.html&lt;/a&gt; ). Пользователи MacOS X также могут использовать редакторы Unix.</target>
        </trans-unit>
        <trans-unit id="6e4548a312b12b5507979ee1df1e5c700b717005" translate="yes" xml:space="preserve">
          <source>If you are using Plack (which most frameworks do), then &lt;a href=&quot;http://search.cpan.org/perldoc/Plack::Middleware::Rewrite&quot;&gt;Plack::Middleware::Rewrite&lt;/a&gt; is worth looking at if you are migrating from Apache or have URL's you want to always redirect.</source>
          <target state="translated">Если вы используете Plack (что используется в большинстве фреймворков), то &lt;a href=&quot;http://search.cpan.org/perldoc/Plack::Middleware::Rewrite&quot;&gt;стоит обратить внимание на Plack :: Middleware :: Rewrite,&lt;/a&gt; если вы переходите с Apache или имеете URL-адреса, которые вы хотите всегда перенаправлять.</target>
        </trans-unit>
        <trans-unit id="b1b08c775dc3592188f9dd4afa0190ccbb806664" translate="yes" xml:space="preserve">
          <source>If you are using Windows, you can use any editor that lets you work with plain text, such as NotePad or WordPad. Word processors, such as Microsoft Word or WordPerfect, typically do not work since they insert all sorts of behind-the-scenes information, although some allow you to save files as &quot;Text Only&quot;. You can also download text editors designed specifically for programming, such as Textpad ( &lt;a href=&quot;http://www.textpad.com/&quot;&gt;http://www.textpad.com/&lt;/a&gt; ) and UltraEdit ( &lt;a href=&quot;http://www.ultraedit.com/&quot;&gt;http://www.ultraedit.com/&lt;/a&gt; ), among others.</source>
          <target state="translated">Если вы используете Windows, вы можете использовать любой редактор, позволяющий работать с обычным текстом, например Блокнот или WordPad. Текстовые процессоры, такие как Microsoft Word или WordPerfect, обычно не работают, поскольку они вставляют всевозможную скрытую информацию, хотя некоторые позволяют сохранять файлы как &amp;laquo;Только текст&amp;raquo;. Вы также можете загрузить текстовые редакторы, разработанные специально для программирования, такие как Textpad ( &lt;a href=&quot;http://www.textpad.com/&quot;&gt;http://www.textpad.com/&lt;/a&gt; ) и UltraEdit ( &lt;a href=&quot;http://www.ultraedit.com/&quot;&gt;http://www.ultraedit.com/&lt;/a&gt; ) и другие.</target>
        </trans-unit>
        <trans-unit id="42b14c31c340803d7d1a8907e87c3b623cebca0d" translate="yes" xml:space="preserve">
          <source>If you are using a SOCKS firewall, you will need to compile perl and link it with the SOCKS library. This is what is normally called a 'socksified' perl. With this executable you will be able to connect to servers outside the firewall as if it were not there.</source>
          <target state="translated">Если Вы используете брандмауэр SOCKS,Вам необходимо скомпилировать perl и связать его с библиотекой SOCKS.Это то,что обычно называется 'socksified' perl.С помощью этого исполняемого файла вы сможете подключаться к серверам за пределами брандмауэра так,как будто его там нет.</target>
        </trans-unit>
        <trans-unit id="29c561106308348f3755c72923d0a263a80ca5d3" translate="yes" xml:space="preserve">
          <source>If you are using a regex here, you have to use the quotes as shown or it won't work. Also note that regex handling is tricky even for the experienced. Use this feature with caution.</source>
          <target state="translated">Если вы используете здесь регекс,вы должны использовать котировки,как показано на рисунке,иначе это не сработает.Также обратите внимание,что работа с регексами сложна даже для опытных.Используйте эту функцию с осторожностью.</target>
        </trans-unit>
        <trans-unit id="5a12a925a69a2c6041232d382cd6683ae36d2da6" translate="yes" xml:space="preserve">
          <source>If you are using a version of Perl earlier than 5.004_57, the tied array interface is quite limited. In the example script above &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; or determining the array length will not work with a tied array.</source>
          <target state="translated">Если вы используете версию Perl более раннюю, чем 5.004_57, интерфейс связанных массивов весьма ограничен. В приведенном выше примере сценария &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; или определение длины массива не будут работать с привязанным массивом.</target>
        </trans-unit>
        <trans-unit id="360a39abe6795afd63327f3e470a092ad595cbfe" translate="yes" xml:space="preserve">
          <source>If you are using cpan-mac, just drop the folder on the &lt;b&gt;installme&lt;/b&gt; droplet, and use the module.</source>
          <target state="translated">Если вы используете CPAN-макинтош, просто перенесите папку на &lt;b&gt;installme&lt;/b&gt; капельке, и использовать модуль.</target>
        </trans-unit>
        <trans-unit id="1fc1c37b5a3d2067860bd9ba4aa2038972693c34" translate="yes" xml:space="preserve">
          <source>If you are using gcc, just</source>
          <target state="translated">Если ты используешь gcc,просто</target>
        </trans-unit>
        <trans-unit id="8fd5d7695f8aa3649f7196f528604d5d3ae20e06" translate="yes" xml:space="preserve">
          <source>If you are using gcc, you would need to use -mcpu=v9 -m64 instead. This option is not yet supported as of gcc 2.95.2; from install/SPECIFIC in that release:</source>
          <target state="translated">Если вы используете gcc,то вместо него нужно использовать -mcpu=v9 -m64.Эта опция пока не поддерживается начиная с версии gcc 2.95.2;из install/SPECIFIC в этом выпуске:</target>
        </trans-unit>
        <trans-unit id="43b374ff761647040bfef238a2f344855f86b957" translate="yes" xml:space="preserve">
          <source>If you are using locale purely for its characteristics related to things like its numeric and time formatting (and not &lt;code&gt;LC_CTYPE&lt;/code&gt; ), consider using a restricted form of the locale pragma (see &lt;a href=&quot;perllocale#The-%22use-locale%22-pragma&quot;&gt;The use locale pragma in perllocale&lt;/a&gt;) like &quot;&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; &quot;.</source>
          <target state="translated">Если вы используете языковой стандарт исключительно из-за его характеристик, связанных с такими вещами, как числовое форматирование и формат времени (а не &lt;code&gt;LC_CTYPE&lt;/code&gt; ), рассмотрите возможность использования ограниченной формы &lt;a href=&quot;perllocale#The-%22use-locale%22-pragma&quot;&gt;прагмы&lt;/a&gt; locale (см . Использование прагмы locale в perllocale ), например &amp;laquo; &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="63c7cadf9ebf06d221687f1101781684817f90c8" translate="yes" xml:space="preserve">
          <source>If you are using the DB_RECNO interface and you intend making use of &lt;code&gt;bval&lt;/code&gt; , you should check out &lt;a href=&quot;#The-'bval'-Option&quot;&gt;The 'bval' Option&lt;/a&gt;.</source>
          <target state="translated">Если вы используете интерфейс DB_RECNO и намереваетесь использовать &lt;code&gt;bval&lt;/code&gt; , вам следует проверить опцию &lt;a href=&quot;#The-'bval'-Option&quot;&gt;&amp;laquo;bval&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e34b95c988ef9ff5f011e4473a6842bbc8f305e" translate="yes" xml:space="preserve">
          <source>If you are using the Visual C compiler, you can get the C runtime's command line wildcard expansion built into perl binary. The resulting binary will always expand unquoted command lines, which may not be what you want if you use a shell that does that for you. The expansion done is also somewhat less powerful than the approach suggested above.</source>
          <target state="translated">Если вы используете компилятор Visual C,вы можете получить подстановочный символ командной строки C,встроенный в бинарный файл perl.Полученный двоичный файл всегда будет расширять командные строки без кавычек,что может быть не совсем то,что вам нужно,если вы используете оболочку,которая делает это за вас.Расширение,сделанное,также несколько менее мощное,чем подход,предложенный выше.</target>
        </trans-unit>
        <trans-unit id="a368c00c8ef926e64658830003081d5eb361bb8d" translate="yes" xml:space="preserve">
          <source>If you are using zlib 1.2.0 or older, &lt;code&gt;zlibCompileFlags&lt;/code&gt; will return 0.</source>
          <target state="translated">Если вы используете zlib 1.2.0 или старше, &lt;code&gt;zlibCompileFlags&lt;/code&gt; вернет 0.</target>
        </trans-unit>
        <trans-unit id="9d19a794a39cad7420e5c34d0bb89a7b77ddba40" translate="yes" xml:space="preserve">
          <source>If you are willing to accept all the defaults run Configure with &lt;b&gt;-de&lt;/b&gt;. However, several useful customizations are available.</source>
          <target state="translated">Если вы готовы принять все значения по умолчанию, запустите Configure с &lt;b&gt;-de&lt;/b&gt; . Однако доступно несколько полезных настроек.</target>
        </trans-unit>
        <trans-unit id="fd5b1c2924a349d7291d8ad147e3c28043609419" translate="yes" xml:space="preserve">
          <source>If you are working with a git clone of the Perl repository, you will want to create a branch for your changes. This will make creating a proper patch much simpler. See the &lt;a href=&quot;perlgit&quot;&gt;perlgit&lt;/a&gt; for details on how to do this.</source>
          <target state="translated">Если вы работаете с git-клоном репозитория Perl, вам нужно создать ветку для ваших изменений. Это значительно упростит создание правильного патча. Подробнее о том, как это сделать, см. В &lt;a href=&quot;perlgit&quot;&gt;perlgit&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3a5c5d66921962ee5d2f131da55a853da5b0930" translate="yes" xml:space="preserve">
          <source>If you are working with data you know to be valid, you can speed your code up by using the &quot;nocheck&quot; variants, &lt;code&gt;timelocal_nocheck()&lt;/code&gt; and &lt;code&gt;timegm_nocheck()&lt;/code&gt; . These variants must be explicitly imported.</source>
          <target state="translated">Если вы работаете с данными, которые, как вам известно, достоверны, вы можете ускорить свой код, используя варианты &amp;laquo;без проверки&amp;raquo;, &lt;code&gt;timelocal_nocheck()&lt;/code&gt; и &lt;code&gt;timegm_nocheck()&lt;/code&gt; . Эти варианты должны быть явно импортированы.</target>
        </trans-unit>
        <trans-unit id="a9fdba02c2ad23e42f49d14ef3350c451024e80f" translate="yes" xml:space="preserve">
          <source>If you are writing a module to expand an already existing set of modules, please coordinate with the author of the package. It helps if you follow the same naming scheme and module interaction scheme as the original author.</source>
          <target state="translated">Если вы пишете модуль для расширения уже существующего набора модулей,пожалуйста,согласуйте это с автором пакета.Это поможет,если вы будете следовать той же схеме именования и взаимодействия модулей,что и оригинальный автор.</target>
        </trans-unit>
        <trans-unit id="1cd2c8d5447831e253b224430edc3070841bc27c" translate="yes" xml:space="preserve">
          <source>If you are writing a package that &lt;code&gt;AUTOLOAD&lt;/code&gt; s, consider forcing an &lt;code&gt;AUTOLOAD&lt;/code&gt; for any constants explicitly imported by other packages or which are usually used when your package is &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;d.</source>
          <target state="translated">Если вы пишете пакет, в котором используется &lt;code&gt;AUTOLOAD&lt;/code&gt; , рассмотрите возможность принудительного выполнения &lt;code&gt;AUTOLOAD&lt;/code&gt; для любых констант, явно импортированных другими пакетами или которые обычно используются, когда ваш пакет &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; d.</target>
        </trans-unit>
        <trans-unit id="f5966f6f48bbef92de0797373659162ca479de0d" translate="yes" xml:space="preserve">
          <source>If you are writing new code, your first port of call should be one of the new &lt;code&gt;IO::Compress&lt;/code&gt; or &lt;code&gt;IO::Uncompress&lt;/code&gt; modules.</source>
          <target state="translated">Если вы пишете новый код, вашим первым портом вызова должен быть один из новых модулей &lt;code&gt;IO::Compress&lt;/code&gt; или &lt;code&gt;IO::Uncompress&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d5955743a0fa060d529640f937e917d974a0fd9" translate="yes" xml:space="preserve">
          <source>If you ask for nothing in particular, you'll be asking for &lt;code&gt;less
'please'&lt;/code&gt; .</source>
          <target state="translated">Если вы не просите ничего особенного, вы будете просить &lt;code&gt;less 'please'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d232183f686226b9e4d9f0a9749bb4ab75350724" translate="yes" xml:space="preserve">
          <source>If you ask it to unmemoize a function that was never memoized, it croaks.</source>
          <target state="translated">Если вы попросите его снять пленку с функции,которая никогда не была запомнена,он скрипит.</target>
        </trans-unit>
        <trans-unit id="5ac398bf0535c0d2bb95ebfd6fd6655ce0bd6b20" translate="yes" xml:space="preserve">
          <source>If you ask to override your chdir() built-in function,</source>
          <target state="translated">Если вы попросите переопределить вашу встроенную функцию chdir(),</target>
        </trans-unit>
        <trans-unit id="aae82346550e5f30641b00cfb651b5e652048f2e" translate="yes" xml:space="preserve">
          <source>If you attempt to compile Perl with (POSIX) threads on an 11.X system and also link in the GDBM library, then Perl will immediately core dump when it starts up. The only workaround at this point is to relink the GDBM library under 11.X, then relink it into Perl.</source>
          <target state="translated">Если вы попытаетесь скомпилировать Perl с (POSIX)потоками на системе 11.X,а также скомпилировать его в библиотеке GDBM,то при запуске Perl сразу же выдаст дамп ядра.Единственное обходное решение на данном этапе-перекомпилировать библиотеку GDBM под 11.X,а затем перекомпилировать ее в Perl.</target>
        </trans-unit>
        <trans-unit id="372756b443de4017a28427029bf0d506d7081a2a" translate="yes" xml:space="preserve">
          <source>If you believe the scalar comes back as UTF-8, you will most likely want the UTF8 flag restored:</source>
          <target state="translated">Если вы считаете,что скаляр возвращается в виде UTF-8,то,скорее всего,вы захотите восстановить флаг UTF8:</target>
        </trans-unit>
        <trans-unit id="1489e0cb25a613554ca1fb1509eb4766e09aaf06" translate="yes" xml:space="preserve">
          <source>If you believe you have found a security vulnerability in Perl, please email perl5-security-report@perl.org with details. This points to a closed subscription, unarchived mailing list. Please only use this address for security issues in the Perl core, not for modules independently distributed on CPAN.</source>
          <target state="translated">Если вы считаете,что нашли уязвимость в Perl,пожалуйста,напишите по адресу perl5-security-report@perl.org с подробной информацией.Это указывает на закрытую подписку,неархивированный список рассылки.Пожалуйста,используйте этот адрес только для вопросов безопасности в ядре Perl,а не для модулей,независимо распространяемых на CPAN.</target>
        </trans-unit>
        <trans-unit id="2508e4352c00aad2e5cda3b21b798f7f8735a139" translate="yes" xml:space="preserve">
          <source>If you build with Visual C++ 2013 then three tests currently may fail with Daylight Saving Time related problems:</source>
          <target state="translated">Если вы строите с Visual C++2013,то три теста в настоящее время могут не работать с проблемами,связанными с летним временем:</target>
        </trans-unit>
        <trans-unit id="fc747a2308602b12226c600429d56710358ba8a4" translate="yes" xml:space="preserve">
          <source>If you build with certain versions (e.g. 4.8.1) of gcc from www.mingw.org then</source>
          <target state="translated">Если вы собираете с определенными версиями (например,4.8.1)gcc с сайта www.mingw.org,тогда</target>
        </trans-unit>
        <trans-unit id="fccb9cfffea038156e1e9bf29f1e74a06b7c692d" translate="yes" xml:space="preserve">
          <source>If you built perl with dynamic loading capability then that would also be the way to build xs based extensions. However, if you built perl with the default static linking you can still build xs based extensions for OS/390 but you will need to follow the instructions in ExtUtils::MakeMaker for building statically linked perl binaries. In the simplest configurations building a static perl + xs extension boils down to:</source>
          <target state="translated">Если вы построили perl с возможностью динамической загрузки,то это также будет способ сборки расширений на основе xs.Однако,если вы собрали perl со статической связью по умолчанию,вы все еще можете собирать расширения на основе xs для OS/390,но вам нужно будет следовать инструкциям в ExtUtils::MakeMaker для сборки статически связанных двоичных файлов perl.В простейших конфигурациях сборка статических расширений perl+xs сводится к следующему:</target>
        </trans-unit>
        <trans-unit id="b4bbe3ec8c3dbb9079b54edeba88cab20e6c6b9a" translate="yes" xml:space="preserve">
          <source>If you call $lh-&amp;gt;maketext(</source>
          <target state="translated">Если вы вызовете $ lh-&amp;gt; maketext (</target>
        </trans-unit>
        <trans-unit id="b2b245ecec2ba731bc1217986ab8fe3ce3832fb6" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;plan()&lt;/code&gt; , don't call any of the other methods below.</source>
          <target state="translated">Если вы вызываете &lt;code&gt;plan()&lt;/code&gt; , не вызывайте никакие другие методы ниже.</target>
        </trans-unit>
        <trans-unit id="f29b01f558f5cc8e37b47ab816256a32df3eb207" translate="yes" xml:space="preserve">
          <source>If you call a method that doesn't exist in a class, Perl will throw an error. However, if that class or any of its parent classes defines an &lt;code&gt;AUTOLOAD&lt;/code&gt; method, that &lt;code&gt;AUTOLOAD&lt;/code&gt; method is called instead.</source>
          <target state="translated">Если вы вызовете метод, которого нет в классе, Perl выдаст ошибку. Однако, если этот класс или любой из его родительских классов определяет &lt;code&gt;AUTOLOAD&lt;/code&gt; метод, который &lt;code&gt;AUTOLOAD&lt;/code&gt; метод вызывается вместо.</target>
        </trans-unit>
        <trans-unit id="945646515b442a128e465225a1d325a7ca2f3625" translate="yes" xml:space="preserve">
          <source>If you call a subroutine that is undefined, you would ordinarily get an immediate, fatal error complaining that the subroutine doesn't exist. (Likewise for subroutines being used as methods, when the method doesn't exist in any base class of the class's package.) However, if an &lt;code&gt;AUTOLOAD&lt;/code&gt; subroutine is defined in the package or packages used to locate the original subroutine, then that &lt;code&gt;AUTOLOAD&lt;/code&gt; subroutine is called with the arguments that would have been passed to the original subroutine. The fully qualified name of the original subroutine magically appears in the global $AUTOLOAD variable of the same package as the &lt;code&gt;AUTOLOAD&lt;/code&gt; routine. The name is not passed as an ordinary argument because, er, well, just because, that's why. (As an exception, a method call to a nonexistent &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;unimport&lt;/code&gt; method is just skipped instead. Also, if the AUTOLOAD subroutine is an XSUB, there are other ways to retrieve the subroutine name. See &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;Autoloading with XSUBs in perlguts&lt;/a&gt; for details.)</source>
          <target state="translated">Если вы вызываете подпрограмму, которая не определена, вы обычно получаете немедленную фатальную ошибку с жалобой на то, что подпрограмма не существует. (Аналогично для подпрограмм, используемых в качестве методов, когда метод не существует ни в одном базовом классе пакета класса.) Однако, если подпрограмма &lt;code&gt;AUTOLOAD&lt;/code&gt; определена в пакете или пакетах, используемых для поиска исходной подпрограммы, то эта подпрограмма &lt;code&gt;AUTOLOAD&lt;/code&gt; вызывается с аргументами, которые были бы переданы исходной подпрограмме. Полное имя исходной подпрограммы волшебным образом появляется в глобальной переменной $ AUTOLOAD того же пакета, что и &lt;code&gt;AUTOLOAD&lt;/code&gt; .рутина. Имя не передается как обычный аргумент, потому что, ну, просто потому, вот почему. ( В качестве исключения, метода вызова несуществующего &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;unimport&lt;/code&gt; методы просто пропускаются вместо этого. Кроме того , если подпрограмма AUTOLOAD является XSUB, есть и другие способы , чтобы получить имя подпрограммы. См &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;Автозагрузка с XSUBs в perlguts&lt;/a&gt; для подробной информации).</target>
        </trans-unit>
        <trans-unit id="a71cdebace5c6abb01b81af0b4383d9f3787c035" translate="yes" xml:space="preserve">
          <source>If you can arrange for everyone to deal with this through references, it's cleaner code, although not so nice to look at. Here's a function that takes two array references as arguments, returning the two array elements in order of how many elements they have in them:</source>
          <target state="translated">Если вы можете устроить так,чтобы каждый справился с этим через ссылки,то это более чистый код,хотя и не очень приятно на него смотреть.Вот функция,которая принимает в качестве аргументов две ссылки на массив,возвращая два элемента массива в порядке их количества:</target>
        </trans-unit>
        <trans-unit id="23b6ce07b51bd0ae187fbd5346ee2bf854f2bb10" translate="yes" xml:space="preserve">
          <source>If you can avoid it, don't, or if you can use a templating system, such as &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Template&quot;&gt;Text::Template&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/Template&quot;&gt;Template&lt;/a&gt; Toolkit, do that instead. You might even be able to get the job done with &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Если вы можете этого избежать, не делайте этого или если вы можете использовать систему шаблонов, такую ​​как &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Template&quot;&gt;Text :: Template&lt;/a&gt; или &lt;a href=&quot;http://search.cpan.org/perldoc/Template&quot;&gt;Template&lt;/a&gt; Toolkit, сделайте это вместо этого. Возможно, вы даже сможете выполнить работу с помощью &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f9556f6832194ce02eb38bf13ea3951955c6d164" translate="yes" xml:space="preserve">
          <source>If you can do these things, you've started on the long road to Perl porting. Thanks for wanting to help make Perl better - and happy hacking!</source>
          <target state="translated">Если ты можешь делать такие вещи,ты начал долгий путь к портированию Перла.Спасибо за желание помочь сделать Perl лучше-и счастливого взлома!</target>
        </trans-unit>
        <trans-unit id="4e5e8e457d8aab789523193251b0cae471debcb4" translate="yes" xml:space="preserve">
          <source>If you can go through your firewall with e.g. lynx, presumably with a command such as</source>
          <target state="translated">Если Вы можете пройти через брандмауэр,например,с помощью рыси,предположительно,с помощью такой команды как</target>
        </trans-unit>
        <trans-unit id="22d913b1c7a6af16ecff397b87485204b5a8ebbc" translate="yes" xml:space="preserve">
          <source>If you can not reach the author for some reason contact the PAUSE admins at modules@perl.org who may be able to help, but each case is treated separately.</source>
          <target state="translated">Если по каким-либо причинам вы не можете связаться с автором,свяжитесь с администраторами PAUSE по адресу modules@perl.org,которые могут помочь,но каждый случай рассматривается отдельно.</target>
        </trans-unit>
        <trans-unit id="e0ff87acae1d2fe61dfcf4190a982955e52a9134" translate="yes" xml:space="preserve">
          <source>If you can't configure &lt;code&gt;TAP::Harness&lt;/code&gt; to do exactly what you want, and writing a plugin isn't an option, consider extending it. It is designed to be (mostly) easy to subclass, though the cases when sub-classing is necessary should be few and far between.</source>
          <target state="translated">Если вы не можете настроить &lt;code&gt;TAP::Harness&lt;/code&gt; чтобы он делал именно то, что вы хотите, и написание плагина не вариант, подумайте о его расширении. Он разработан, чтобы (в основном) легко подклассифицировать, хотя случаев, когда подклассы необходимы, должно быть немного и они встречаются редко.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
